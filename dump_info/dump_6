
build/main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 b4 2a e9 72 9c 99 	add    BYTE PTR [rdx+rbp*1-0x66638d17],dh
 36e:	cc                   	int3
 36f:	34 ef                	xor    al,0xef
 371:	dc a7 51 d1 81 92    	fsub   QWORD PTR [rdi-0x6d7e2eaf]
 377:	da 51 e2             	ficom  DWORD PTR [rcx-0x1e]
 37a:	54                   	push   rsp
 37b:	b1                   	.byte 0xb1

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	1f                   	(bad)
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 06                	add    BYTE PTR [rsi],al
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 1f                	add    BYTE PTR [rdi],bl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	87 00                	xchg   DWORD PTR [rax],eax
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	21 01                	and    DWORD PTR [rcx],eax
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	35 01 00 00 12       	xor    eax,0x12000001
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 bf 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],bh
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	12 00                	adc    al,BYTE PTR [rax]
	...
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	b5 00                	mov    ch,0x0
 472:	00 00                	add    BYTE PTR [rax],al
 474:	12 00                	adc    al,BYTE PTR [rax]
	...
 486:	00 00                	add    BYTE PTR [rax],al
 488:	12 01                	adc    al,BYTE PTR [rcx]
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	12 00                	adc    al,BYTE PTR [rax]
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f3 00 00             	repz add BYTE PTR [rax],al
 4a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 20                	add    BYTE PTR [rax],ah
 4d1:	01 00                	add    DWORD PTR [rax],eax
 4d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 43 01             	add    BYTE PTR [rbx+0x1],al
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	76 00                	jbe    502 <__abi_tag+0x186>
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	b4 00                	mov    ah,0x0
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	12 00                	adc    al,BYTE PTR [rax]
	...
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	94                   	xchg   esp,eax
 531:	00 00                	add    BYTE PTR [rax],al
 533:	00 12                	add    BYTE PTR [rdx],dl
	...
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 54a:	00 00                	add    BYTE PTR [rax],al
 54c:	12 00                	adc    al,BYTE PTR [rax]
	...
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	05 01 00 00 12       	add    eax,0x12000001
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 ac 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],ch
	...
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	51                   	push   rcx
 591:	01 00                	add    DWORD PTR [rax],eax
 593:	00 12                	add    BYTE PTR [rdx],dl
	...
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 ba 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],bh
	...
 5bd:	00 00                	add    BYTE PTR [rax],al
 5bf:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	dd 00                	fld    QWORD PTR [rax]
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	e5 00                	in     eax,0x0
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	10 00                	adc    BYTE PTR [rax],al
 60a:	00 00                	add    BYTE PTR [rax],al
 60c:	20 00                	and    BYTE PTR [rax],al
	...
 61e:	00 00                	add    BYTE PTR [rax],al
 620:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
 623:	00 12                	add    BYTE PTR [rdx],dl
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 01                	add    BYTE PTR [rcx],al
 639:	00 00                	add    BYTE PTR [rax],al
 63b:	00 20                	add    BYTE PTR [rax],ah
	...
 64d:	00 00                	add    BYTE PTR [rax],al
 64f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 652:	00 00                	add    BYTE PTR [rax],al
 654:	20 00                	and    BYTE PTR [rax],al
	...
 666:	00 00                	add    BYTE PTR [rax],al
 668:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
 66b:	00 12                	add    BYTE PTR [rdx],dl
	...
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 cd                	add    ch,cl
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	00 12                	add    BYTE PTR [rdx],dl
	...
 6ad:	00 00                	add    BYTE PTR [rax],al
 6af:	00 26                	add    BYTE PTR [rsi],ah
 6b1:	01 00                	add    DWORD PTR [rax],eax
 6b3:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

00000000000006c8 <.dynstr>:
 6c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 6cb:	67 6d                	ins    DWORD PTR es:[edi],dx
 6cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6cf:	5f                   	pop    rdi
 6d0:	73 74                	jae    746 <__abi_tag+0x3ca>
 6d2:	61                   	(bad)
 6d3:	72 74                	jb     749 <__abi_tag+0x3cd>
 6d5:	5f                   	pop    rdi
 6d6:	5f                   	pop    rdi
 6d7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6da:	54                   	push   rsp
 6db:	4d 5f                	rex.WRB pop r15
 6dd:	64 65 72 65          	fs gs jb 746 <__abi_tag+0x3ca>
 6e1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6e8:	4d 
 6e9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6ed:	65 54                	gs push rsp
 6ef:	61                   	(bad)
 6f0:	62 6c 65             	(bad)
 6f3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6f6:	54                   	push   rsp
 6f7:	4d 5f                	rex.WRB pop r15
 6f9:	72 65                	jb     760 <__abi_tag+0x3e4>
 6fb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 702:	4d 
 703:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 705:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 707:	65 54                	gs push rsp
 709:	61                   	(bad)
 70a:	62 6c 65             	(bad)
 70d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 710:	4e 53                	rex.WRX push rbx
 712:	74 36                	je     74a <__abi_tag+0x3ce>
 714:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 718:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 719:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 71a:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
 71d:	32 31                	xor    dh,BYTE PTR [rcx]
 71f:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
 722:	65 61                	gs (bad)
 724:	64 79 5f             	fs jns 786 <__abi_tag+0x40a>
 727:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
 72b:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
 72e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 72f:	77 45                	ja     776 <__abi_tag+0x3fa>
 731:	76 00                	jbe    733 <__abi_tag+0x3b7>
 733:	73 71                	jae    7a6 <__abi_tag+0x42a>
 735:	72 74                	jb     7ab <__abi_tag+0x42f>
 737:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 73b:	74 73                	je     7b0 <__abi_tag+0x434>
 73d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 740:	73 74                	jae    7b6 <__abi_tag+0x43a>
 742:	61                   	(bad)
 743:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 746:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 749:	5f                   	pop    rdi
 74a:	66 61                	data16 (bad)
 74c:	69 6c 00 5f 5f 70 72 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6972705f
 753:	69 
 754:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 755:	74 66                	je     7bd <__abi_tag+0x441>
 757:	5f                   	pop    rdi
 758:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 75b:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
 75e:	65 65 00 5f 5f       	gs add BYTE PTR gs:[rdi+0x5f],bl
 763:	61                   	(bad)
 764:	73 73                	jae    7d9 <__abi_tag+0x45d>
 766:	65 72 74             	gs jb  7dd <__abi_tag+0x461>
 769:	5f                   	pop    rdi
 76a:	66 61                	data16 (bad)
 76c:	69 6c 00 73 74 61 74 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x746174
 773:	00 
 774:	70 75                	jo     7eb <__abi_tag+0x46f>
 776:	74 63                	je     7db <__abi_tag+0x45f>
 778:	68 61 72 00 66       	push   0x66007261
 77d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 77e:	70 65                	jo     7e5 <__abi_tag+0x469>
 780:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 781:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 784:	61                   	(bad)
 785:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 789:	73 74                	jae    7ff <__abi_tag+0x483>
 78b:	72 6e                	jb     7fb <__abi_tag+0x47f>
 78d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 790:	5f                   	pop    rdi
 791:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 794:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 797:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
 79e:	73 74                	jae    814 <__abi_tag+0x498>
 7a0:	72 74                	jb     816 <__abi_tag+0x49a>
 7a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7a3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a4:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 7a7:	61                   	(bad)
 7a8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 7aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7ab:	63 00                	movsxd eax,DWORD PTR [rax]
 7ad:	5f                   	pop    rdi
 7ae:	5f                   	pop    rdi
 7af:	66 70 72             	data16 jo 824 <__abi_tag+0x4a8>
 7b2:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
 7b9:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
 7bc:	5f                   	pop    rdi
 7bd:	6c                   	ins    BYTE PTR es:[rdi],dx
 7be:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 7c5:	72 74                	jb     83b <__abi_tag+0x4bf>
 7c7:	5f                   	pop    rdi
 7c8:	6d                   	ins    DWORD PTR es:[rdi],dx
 7c9:	61                   	(bad)
 7ca:	69 6e 00 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x0],0x656d5f5f
 7d1:	6d                   	ins    DWORD PTR es:[rdi],dx
 7d2:	73 65                	jae    839 <__abi_tag+0x4bd>
 7d4:	74 5f                	je     835 <__abi_tag+0x4b9>
 7d6:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7d9:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
 7dc:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
 7e3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e4:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7e6:	63 00                	movsxd eax,DWORD PTR [rax]
 7e8:	73 72                	jae    85c <__abi_tag+0x4e0>
 7ea:	61                   	(bad)
 7eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7ec:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 7f0:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 7f3:	5f                   	pop    rdi
 7f4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 7fa:	7a 65                	jp     861 <__abi_tag+0x4e5>
 7fc:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7ff:	72 63                	jb     864 <__abi_tag+0x4e8>
 801:	68 72 00 63 61       	push   0x61630072
 806:	6c                   	ins    BYTE PTR es:[rdi],dx
 807:	6c                   	ins    BYTE PTR es:[rdi],dx
 808:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 809:	63 00                	movsxd eax,DWORD PTR [rax]
 80b:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 810:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
 814:	72 69                	jb     87f <__abi_tag+0x503>
 816:	74 65                	je     87d <__abi_tag+0x501>
 818:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 81b:	72 63                	jb     880 <__abi_tag+0x504>
 81d:	6d                   	ins    DWORD PTR es:[rdi],dx
 81e:	70 00                	jo     820 <__abi_tag+0x4a4>
 820:	6c                   	ins    BYTE PTR es:[rdi],dx
 821:	69 62 73 74 64 63 2b 	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
 828:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 82a:	73 6f                	jae    89b <__abi_tag+0x51f>
 82c:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 832:	6d                   	ins    DWORD PTR es:[rdi],dx
 833:	2e 73 6f             	cs jae 8a5 <__abi_tag+0x529>
 836:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 83c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 83e:	73 6f                	jae    8af <__abi_tag+0x533>
 840:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 845:	49                   	rex.WB
 846:	42                   	rex.X
 847:	43 5f                	rex.XB pop r15
 849:	32 2e                	xor    ch,BYTE PTR [rsi]
 84b:	32 2e                	xor    ch,BYTE PTR [rsi]
 84d:	35 00 47 4c 49       	xor    eax,0x494c4700
 852:	42                   	rex.X
 853:	43 58                	rex.XB pop r8
 855:	58                   	pop    rax
 856:	5f                   	pop    rdi
 857:	33 2e                	xor    ebp,DWORD PTR [rsi]
 859:	34 2e                	xor    al,0x2e
 85b:	31 39                	xor    DWORD PTR [rcx],edi
 85d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 860:	49                   	rex.WB
 861:	42                   	rex.X
 862:	43 5f                	rex.XB pop r15
 864:	32 2e                	xor    ch,BYTE PTR [rsi]
 866:	33 38                	xor    edi,DWORD PTR [rax]
 868:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 86b:	49                   	rex.WB
 86c:	42                   	rex.X
 86d:	43 5f                	rex.XB pop r15
 86f:	32 2e                	xor    ch,BYTE PTR [rsi]
 871:	34 00                	xor    al,0x0
 873:	47                   	rex.RXB
 874:	4c                   	rex.WR
 875:	49                   	rex.WB
 876:	42                   	rex.X
 877:	43 5f                	rex.XB pop r15
 879:	32 2e                	xor    ch,BYTE PTR [rsi]
 87b:	33 33                	xor    esi,DWORD PTR [rbx]
 87d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 880:	49                   	rex.WB
 881:	42                   	rex.X
 882:	43 5f                	rex.XB pop r15
 884:	32 2e                	xor    ch,BYTE PTR [rsi]
 886:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 889:	47                   	rex.RXB
 88a:	4c                   	rex.WR
 88b:	49                   	rex.WB
 88c:	42                   	rex.X
 88d:	43 5f                	rex.XB pop r15
 88f:	32 2e                	xor    ch,BYTE PTR [rsi]
 891:	31 36                	xor    DWORD PTR [rsi],esi
 893:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 896:	49                   	rex.WB
 897:	42                   	rex.X
 898:	43 5f                	rex.XB pop r15
 89a:	32 2e                	xor    ch,BYTE PTR [rsi]
 89c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 89e:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

00000000000008a0 <.gnu.version>:
 8a0:	00 00                	add    BYTE PTR [rax],al
 8a2:	02 00                	add    al,BYTE PTR [rax]
 8a4:	03 00                	add    eax,DWORD PTR [rax]
 8a6:	03 00                	add    eax,DWORD PTR [rax]
 8a8:	02 00                	add    al,BYTE PTR [rax]
 8aa:	03 00                	add    eax,DWORD PTR [rax]
 8ac:	03 00                	add    eax,DWORD PTR [rax]
 8ae:	03 00                	add    eax,DWORD PTR [rax]
 8b0:	04 00                	add    al,0x0
 8b2:	05 00 06 00 03       	add    eax,0x3000600
 8b7:	00 03                	add    BYTE PTR [rbx],al
 8b9:	00 07                	add    BYTE PTR [rdi],al
 8bb:	00 03                	add    BYTE PTR [rbx],al
 8bd:	00 03                	add    BYTE PTR [rbx],al
 8bf:	00 08                	add    BYTE PTR [rax],cl
 8c1:	00 02                	add    BYTE PTR [rdx],al
 8c3:	00 03                	add    BYTE PTR [rbx],al
 8c5:	00 03                	add    BYTE PTR [rbx],al
 8c7:	00 03                	add    BYTE PTR [rbx],al
 8c9:	00 03                	add    BYTE PTR [rbx],al
 8cb:	00 03                	add    BYTE PTR [rbx],al
 8cd:	00 02                	add    BYTE PTR [rdx],al
 8cf:	00 01                	add    BYTE PTR [rcx],al
 8d1:	00 09                	add    BYTE PTR [rcx],cl
 8d3:	00 01                	add    BYTE PTR [rcx],al
 8d5:	00 01                	add    BYTE PTR [rcx],al
 8d7:	00 03                	add    BYTE PTR [rbx],al
 8d9:	00 03                	add    BYTE PTR [rbx],al
 8db:	00 0a                	add    BYTE PTR [rdx],cl
 8dd:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

00000000000008e0 <.gnu.version_r>:
 8e0:	01 00                	add    DWORD PTR [rax],eax
 8e2:	01 00                	add    DWORD PTR [rax],eax
 8e4:	67 01 00             	add    DWORD PTR [eax],eax
 8e7:	00 10                	add    BYTE PTR [rax],dl
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 20                	add    BYTE PTR [rax],ah
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 8f2:	69 09 00 00 09 00    	imul   ecx,DWORD PTR [rcx],0x90000
 8f8:	7b 01                	jnp    8fb <__abi_tag+0x57f>
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	01 00                	add    DWORD PTR [rax],eax
 902:	01 00                	add    DWORD PTR [rax],eax
 904:	58                   	pop    rax
 905:	01 00                	add    DWORD PTR [rax],eax
 907:	00 10                	add    BYTE PTR [rax],dl
 909:	00 00                	add    BYTE PTR [rax],al
 90b:	00 20                	add    BYTE PTR [rax],ah
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 69 f8             	add    BYTE PTR [rcx-0x8],ch
 912:	97                   	xchg   edi,eax
 913:	02 00                	add    al,BYTE PTR [rax]
 915:	00 08                	add    BYTE PTR [rax],cl
 917:	00 87 01 00 00 00    	add    BYTE PTR [rdi+0x1],al
 91d:	00 00                	add    BYTE PTR [rax],al
 91f:	00 01                	add    BYTE PTR [rcx],al
 921:	00 07                	add    BYTE PTR [rdi],al
 923:	00 71 01             	add    BYTE PTR [rcx+0x1],dh
 926:	00 00                	add    BYTE PTR [rax],al
 928:	10 00                	adc    BYTE PTR [rax],al
 92a:	00 00                	add    BYTE PTR [rax],al
 92c:	00 00                	add    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	b8 91 96 06 00       	mov    eax,0x69691
 935:	00 0a                	add    BYTE PTR [rdx],cl
 937:	00 96 01 00 00 10    	add    BYTE PTR [rsi+0x10000001],dl
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 942:	69 0d 00 00 07 00 a1 	imul   ecx,DWORD PTR [rip+0x70000],0x1a1        # 7094c <_end+0x6a934>
 949:	01 00 00 
 94c:	10 00                	adc    BYTE PTR [rax],al
 94e:	00 00                	add    BYTE PTR [rax],al
 950:	b3 91                	mov    bl,0x91
 952:	96                   	xchg   esi,eax
 953:	06                   	(bad)
 954:	00 00                	add    BYTE PTR [rax],al
 956:	06                   	(bad)
 957:	00 ab 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],ch
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 966:	05 00 b6 01 00       	add    eax,0x1b600
 96b:	00 10                	add    BYTE PTR [rax],dl
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 96 91 96 06 00    	add    BYTE PTR [rsi+0x69691],dl
 975:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 978:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 97b:	00 10                	add    BYTE PTR [rax],dl
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 982:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 988:	7b 01                	jnp    98b <__abi_tag+0x60f>
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	10 00                	adc    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	74 19                	je     9ab <__abi_tag+0x62f>
 992:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 998:	cc                   	int3
 999:	01 00                	add    DWORD PTR [rax],eax
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000009a0 <.rela.dyn>:
 9a0:	d0 5c 00 00          	rcr    BYTE PTR [rax+rax*1+0x0],1
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	08 00                	or     BYTE PTR [rax],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	f0 12 00             	lock adc al,BYTE PTR [rax]
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 d8                	add    al,bl
 9b9:	5c                   	pop    rsp
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	00 00                	add    BYTE PTR [rax],al
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	08 00                	or     BYTE PTR [rax],al
 9c2:	00 00                	add    BYTE PTR [rax],al
 9c4:	00 00                	add    BYTE PTR [rax],al
 9c6:	00 00                	add    BYTE PTR [rax],al
 9c8:	b0 12                	mov    al,0x12
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	00 00                	add    BYTE PTR [rax],al
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	08 60 00             	or     BYTE PTR [rax+0x0],ah
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 08                	add    BYTE PTR [rax],cl
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 00                	add    BYTE PTR [rax],al
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 08                	add    BYTE PTR [rax],cl
 9e1:	60                   	(bad)
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	d8 5f 00             	fcomp  DWORD PTR [rdi+0x0]
 9eb:	00 00                	add    BYTE PTR [rax],al
 9ed:	00 00                	add    BYTE PTR [rax],al
 9ef:	00 06                	add    BYTE PTR [rsi],al
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 1f                	add    BYTE PTR [rdi],bl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 e0                	add    al,ah
 a01:	5f                   	pop    rdi
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	06                   	(bad)
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 09                	add    BYTE PTR [rcx],cl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 e8                	add    al,ch
 a19:	5f                   	pop    rdi
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	06                   	(bad)
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 18                	add    BYTE PTR [rax],bl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 f0                	add    al,dh
 a31:	5f                   	pop    rdi
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	06                   	(bad)
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 1a                	add    BYTE PTR [rdx],bl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 f8                	add    al,bh
 a49:	5f                   	pop    rdi
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	06                   	(bad)
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 1b                	add    BYTE PTR [rbx],bl
	...

Disassembly of section .rela.plt:

0000000000000a60 <.rela.plt>:
 a60:	08 5f 00             	or     BYTE PTR [rdi+0x0],bl
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 07                	add    BYTE PTR [rdi],al
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 01                	add    BYTE PTR [rcx],al
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 10                	add    BYTE PTR [rax],dl
 a79:	5f                   	pop    rdi
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	00 00                	add    BYTE PTR [rax],al
 a80:	07                   	(bad)
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 02                	add    BYTE PTR [rdx],al
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 18                	add    BYTE PTR [rax],bl
 a91:	5f                   	pop    rdi
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	07                   	(bad)
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 03                	add    BYTE PTR [rbx],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 20                	add    BYTE PTR [rax],ah
 aa9:	5f                   	pop    rdi
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	00 00                	add    BYTE PTR [rax],al
 aae:	00 00                	add    BYTE PTR [rax],al
 ab0:	07                   	(bad)
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	28 5f 00             	sub    BYTE PTR [rdi+0x0],bl
 ac3:	00 00                	add    BYTE PTR [rax],al
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 07                	add    BYTE PTR [rdi],al
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ad1 <__abi_tag+0x755>
 ad1:	00 00                	add    BYTE PTR [rax],al
 ad3:	00 00                	add    BYTE PTR [rax],al
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 30                	add    BYTE PTR [rax],dh
 ad9:	5f                   	pop    rdi
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	07                   	(bad)
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 06                	add    BYTE PTR [rsi],al
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 38                	add    BYTE PTR [rax],bh
 af1:	5f                   	pop    rdi
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 07                	add    BYTE PTR [rdi],al
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	07                   	(bad)
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 08                	add    BYTE PTR [rax],cl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 48 5f             	add    BYTE PTR [rax+0x5f],cl
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	07                   	(bad)
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	60                   	(bad)
 b69:	5f                   	pop    rdi
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	00 00                	add    BYTE PTR [rax],al
 b6e:	00 00                	add    BYTE PTR [rax],al
 b70:	07                   	(bad)
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # b79 <__abi_tag+0x7fd>
 b79:	00 00                	add    BYTE PTR [rax],al
 b7b:	00 00                	add    BYTE PTR [rax],al
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 68 5f             	add    BYTE PTR [rax+0x5f],ch
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	07                   	(bad)
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 b9a:	00 00                	add    BYTE PTR [rax],al
 b9c:	00 00                	add    BYTE PTR [rax],al
 b9e:	00 00                	add    BYTE PTR [rax],al
 ba0:	07                   	(bad)
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 0f                	add    BYTE PTR [rdi],cl
	...
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 78 5f             	add    BYTE PTR [rax+0x5f],bh
 bb2:	00 00                	add    BYTE PTR [rax],al
 bb4:	00 00                	add    BYTE PTR [rax],al
 bb6:	00 00                	add    BYTE PTR [rax],al
 bb8:	07                   	(bad)
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 10                	add    BYTE PTR [rax],dl
	...
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 80 5f 00 00 00    	add    BYTE PTR [rax+0x5f],al
 bcd:	00 00                	add    BYTE PTR [rax],al
 bcf:	00 07                	add    BYTE PTR [rdi],al
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 11                	add    BYTE PTR [rcx],dl
	...
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 88 5f 00 00 00    	add    BYTE PTR [rax+0x5f],cl
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 07                	add    BYTE PTR [rdi],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 12                	add    BYTE PTR [rdx],dl
	...
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 90 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dl
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 07                	add    BYTE PTR [rdi],al
 c01:	00 00                	add    BYTE PTR [rax],al
 c03:	00 13                	add    BYTE PTR [rbx],dl
	...
 c0d:	00 00                	add    BYTE PTR [rax],al
 c0f:	00 98 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bl
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 07                	add    BYTE PTR [rdi],al
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 c26:	00 00                	add    BYTE PTR [rax],al
 c28:	a0 5f 00 00 00 00 00 	movabs al,ds:0x70000000000005f
 c2f:	00 07 
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # c39 <__abi_tag+0x8bd>
 c39:	00 00                	add    BYTE PTR [rax],al
 c3b:	00 00                	add    BYTE PTR [rax],al
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 a8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ch
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 07                	add    BYTE PTR [rdi],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 16                	add    BYTE PTR [rsi],dl
	...
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 b0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dh
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 07                	add    BYTE PTR [rdi],al
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 17                	add    BYTE PTR [rdi],dl
	...
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
 c75:	00 00                	add    BYTE PTR [rax],al
 c77:	00 07                	add    BYTE PTR [rdi],al
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 19                	add    BYTE PTR [rcx],bl
	...
 c85:	00 00                	add    BYTE PTR [rax],al
 c87:	00 c0                	add    al,al
 c89:	5f                   	pop    rdi
 c8a:	00 00                	add    BYTE PTR [rax],al
 c8c:	00 00                	add    BYTE PTR [rax],al
 c8e:	00 00                	add    BYTE PTR [rax],al
 c90:	07                   	(bad)
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c9e:	00 00                	add    BYTE PTR [rax],al
 ca0:	c8 5f 00 00          	enter  0x5f,0x0
 ca4:	00 00                	add    BYTE PTR [rax],al
 ca6:	00 00                	add    BYTE PTR [rax],al
 ca8:	07                   	(bad)
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # cb1 <__abi_tag+0x935>
 cb1:	00 00                	add    BYTE PTR [rax],al
 cb3:	00 00                	add    BYTE PTR [rax],al
 cb5:	00 00                	add    BYTE PTR [rax],al
 cb7:	00 d0                	add    al,dl
 cb9:	5f                   	pop    rdi
 cba:	00 00                	add    BYTE PTR [rax],al
 cbc:	00 00                	add    BYTE PTR [rax],al
 cbe:	00 00                	add    BYTE PTR [rax],al
 cc0:	07                   	(bad)
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	00 1e                	add    BYTE PTR [rsi],bl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 e1 4f 00 00 	mov    rax,QWORD PTR [rip+0x4fe1]        # 5ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__printf_chk@plt-0x10>:
    1020:	ff 35 d2 4e 00 00    	push   QWORD PTR [rip+0x4ed2]        # 5ef8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 d4 4e 00 00    	jmp    QWORD PTR [rip+0x4ed4]        # 5f00 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <__printf_chk@plt>:
    1030:	ff 25 d2 4e 00 00    	jmp    QWORD PTR [rip+0x4ed2]        # 5f08 <__printf_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <rand@plt>:
    1040:	ff 25 ca 4e 00 00    	jmp    QWORD PTR [rip+0x4eca]        # 5f10 <rand@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strchr@plt>:
    1050:	ff 25 c2 4e 00 00    	jmp    QWORD PTR [rip+0x4ec2]        # 5f18 <strchr@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__strncpy_chk@plt>:
    1060:	ff 25 ba 4e 00 00    	jmp    QWORD PTR [rip+0x4eba]        # 5f20 <__strncpy_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 b2 4e 00 00    	jmp    QWORD PTR [rip+0x4eb2]        # 5f28 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <calloc@plt>:
    1080:	ff 25 aa 4e 00 00    	jmp    QWORD PTR [rip+0x4eaa]        # 5f30 <calloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <open@plt>:
    1090:	ff 25 a2 4e 00 00    	jmp    QWORD PTR [rip+0x4ea2]        # 5f38 <open@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 9a 4e 00 00    	jmp    QWORD PTR [rip+0x4e9a]        # 5f40 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <stat@plt>:
    10b0:	ff 25 92 4e 00 00    	jmp    QWORD PTR [rip+0x4e92]        # 5f48 <stat@GLIBC_2.33>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <srand@plt>:
    10c0:	ff 25 8a 4e 00 00    	jmp    QWORD PTR [rip+0x4e8a]        # 5f50 <srand@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fclose@plt>:
    10d0:	ff 25 82 4e 00 00    	jmp    QWORD PTR [rip+0x4e82]        # 5f58 <fclose@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 7a 4e 00 00    	jmp    QWORD PTR [rip+0x4e7a]        # 5f60 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 72 4e 00 00    	jmp    QWORD PTR [rip+0x4e72]        # 5f68 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <free@plt>:
    1100:	ff 25 6a 4e 00 00    	jmp    QWORD PTR [rip+0x4e6a]        # 5f70 <free@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    1110:	ff 25 62 4e 00 00    	jmp    QWORD PTR [rip+0x4e62]        # 5f78 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    1116:	68 0e 00 00 00       	push   0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <__memset_chk@plt>:
    1120:	ff 25 5a 4e 00 00    	jmp    QWORD PTR [rip+0x4e5a]        # 5f80 <__memset_chk@GLIBC_2.3.4>
    1126:	68 0f 00 00 00       	push   0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <putchar@plt>:
    1130:	ff 25 52 4e 00 00    	jmp    QWORD PTR [rip+0x4e52]        # 5f88 <putchar@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <strcmp@plt>:
    1140:	ff 25 4a 4e 00 00    	jmp    QWORD PTR [rip+0x4e4a]        # 5f90 <strcmp@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <read@plt>:
    1150:	ff 25 42 4e 00 00    	jmp    QWORD PTR [rip+0x4e42]        # 5f98 <read@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <puts@plt>:
    1160:	ff 25 3a 4e 00 00    	jmp    QWORD PTR [rip+0x4e3a]        # 5fa0 <puts@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <realloc@plt>:
    1170:	ff 25 32 4e 00 00    	jmp    QWORD PTR [rip+0x4e32]        # 5fa8 <realloc@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <__fprintf_chk@plt>:
    1180:	ff 25 2a 4e 00 00    	jmp    QWORD PTR [rip+0x4e2a]        # 5fb0 <__fprintf_chk@GLIBC_2.3.4>
    1186:	68 15 00 00 00       	push   0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <sqrtf@plt>:
    1190:	ff 25 22 4e 00 00    	jmp    QWORD PTR [rip+0x4e22]        # 5fb8 <sqrtf@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <fwrite@plt>:
    11a0:	ff 25 1a 4e 00 00    	jmp    QWORD PTR [rip+0x4e1a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <close@plt>:
    11b0:	ff 25 12 4e 00 00    	jmp    QWORD PTR [rip+0x4e12]        # 5fc8 <close@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	push   0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011c0 <__isoc23_strtol@plt>:
    11c0:	ff 25 0a 4e 00 00    	jmp    QWORD PTR [rip+0x4e0a]        # 5fd0 <__isoc23_strtol@GLIBC_2.38>
    11c6:	68 19 00 00 00       	push   0x19
    11cb:	e9 50 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011d0 <__cxa_finalize@plt>:
    11d0:	ff 25 02 4e 00 00    	jmp    QWORD PTR [rip+0x4e02]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    11d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011e0 <main>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	53                   	push   rbx
    11e5:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    11e9:	ba 0a 00 00 00       	mov    edx,0xa
    11ee:	48 8b 5e 10          	mov    rbx,QWORD PTR [rsi+0x10]
    11f2:	31 f6                	xor    esi,esi
    11f4:	e8 c7 ff ff ff       	call   11c0 <__isoc23_strtol@plt>
    11f9:	48 89 da             	mov    rdx,rbx
    11fc:	48 8d 3d 11 2e 00 00 	lea    rdi,[rip+0x2e11]        # 4014 <_IO_stdin_used+0x14>
    1203:	89 c6                	mov    esi,eax
    1205:	e8 b6 1c 00 00       	call   2ec0 <_Z7testAllPKcjS0_>
    120a:	31 c0                	xor    eax,eax
    120c:	5b                   	pop    rbx
    120d:	c3                   	ret
    120e:	66 90                	xchg   ax,ax

0000000000001210 <_start>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	31 ed                	xor    ebp,ebp
    1216:	49 89 d1             	mov    r9,rdx
    1219:	5e                   	pop    rsi
    121a:	48 89 e2             	mov    rdx,rsp
    121d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1221:	50                   	push   rax
    1222:	54                   	push   rsp
    1223:	45 31 c0             	xor    r8d,r8d
    1226:	31 c9                	xor    ecx,ecx
    1228:	48 8d 3d b1 ff ff ff 	lea    rdi,[rip+0xffffffffffffffb1]        # 11e0 <main>
    122f:	ff 15 ab 4d 00 00    	call   QWORD PTR [rip+0x4dab]        # 5fe0 <__libc_start_main@GLIBC_2.34>
    1235:	f4                   	hlt
    1236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    123d:	00 00 00 

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 4d 00 00 	lea    rdi,[rip+0x4dc9]        # 6010 <__TMC_END__>
    1247:	48 8d 05 c2 4d 00 00 	lea    rax,[rip+0x4dc2]        # 6010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 8e 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d8e]        # 5fe8 <_ITM_deregisterTMCloneTable@Base>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 4d 00 00 	lea    rdi,[rip+0x4d99]        # 6010 <__TMC_END__>
    1277:	48 8d 35 92 4d 00 00 	lea    rsi,[rip+0x4d92]        # 6010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 89 f0             	mov    rax,rsi
    1284:	48 c1 ee 3f          	shr    rsi,0x3f
    1288:	48 c1 f8 03          	sar    rax,0x3
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 5d 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d5d]        # 5ff8 <_ITM_registerTMCloneTable@Base>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	80 3d 55 4d 00 00 00 	cmp    BYTE PTR [rip+0x4d55],0x0        # 6010 <__TMC_END__>
    12bb:	75 2b                	jne    12e8 <__do_global_dtors_aux+0x38>
    12bd:	55                   	push   rbp
    12be:	48 83 3d 12 4d 00 00 	cmp    QWORD PTR [rip+0x4d12],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    12c5:	00 
    12c6:	48 89 e5             	mov    rbp,rsp
    12c9:	74 0c                	je     12d7 <__do_global_dtors_aux+0x27>
    12cb:	48 8b 3d 36 4d 00 00 	mov    rdi,QWORD PTR [rip+0x4d36]        # 6008 <__dso_handle>
    12d2:	e8 f9 fe ff ff       	call   11d0 <__cxa_finalize@plt>
    12d7:	e8 64 ff ff ff       	call   1240 <deregister_tm_clones>
    12dc:	c6 05 2d 4d 00 00 01 	mov    BYTE PTR [rip+0x4d2d],0x1        # 6010 <__TMC_END__>
    12e3:	5d                   	pop    rbp
    12e4:	c3                   	ret
    12e5:	0f 1f 00             	nop    DWORD PTR [rax]
    12e8:	c3                   	ret
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	e9 77 ff ff ff       	jmp    1270 <register_tm_clones>
    12f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001300 <_Z16buildStringArrayPcj>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	41 57                	push   r15
    1306:	41 56                	push   r14
    1308:	41 55                	push   r13
    130a:	41 54                	push   r12
    130c:	55                   	push   rbp
    130d:	53                   	push   rbx
    130e:	48 83 ec 28          	sub    rsp,0x28
    1312:	48 85 ff             	test   rdi,rdi
    1315:	0f 84 e9 00 00 00    	je     1404 <_Z16buildStringArrayPcj+0x104>
    131b:	41 89 f4             	mov    r12d,esi
    131e:	41 89 f7             	mov    r15d,esi
    1321:	48 89 fd             	mov    rbp,rdi
    1324:	be 10 00 00 00       	mov    esi,0x10
    1329:	44 89 e3             	mov    ebx,r12d
    132c:	4c 89 ff             	mov    rdi,r15
    132f:	e8 4c fd ff ff       	call   1080 <calloc@plt>
    1334:	c1 e3 05             	shl    ebx,0x5
    1337:	bf 20 00 00 00       	mov    edi,0x20
    133c:	48 89 de             	mov    rsi,rbx
    133f:	49 89 c5             	mov    r13,rax
    1342:	e8 59 fd ff ff       	call   10a0 <aligned_alloc@plt>
    1347:	49 89 c6             	mov    r14,rax
    134a:	45 85 e4             	test   r12d,r12d
    134d:	0f 84 9f 00 00 00    	je     13f2 <_Z16buildStringArrayPcj+0xf2>
    1353:	49 c1 e7 04          	shl    r15,0x4
    1357:	4c 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],r15
    135c:	45 31 ff             	xor    r15d,r15d
    135f:	90                   	nop
    1360:	48 89 ef             	mov    rdi,rbp
    1363:	be 0a 00 00 00       	mov    esi,0xa
    1368:	e8 e3 fc ff ff       	call   1050 <strchr@plt>
    136d:	48 89 ee             	mov    rsi,rbp
    1370:	47 8d 14 3f          	lea    r10d,[r15+r15*1]
    1374:	48 8d 68 01          	lea    rbp,[rax+0x1]
    1378:	4c 89 d1             	mov    rcx,r10
    137b:	4f 8d 0c 16          	lea    r9,[r14+r10*1]
    137f:	4c 89 54 24 10       	mov    QWORD PTR [rsp+0x10],r10
    1384:	49 89 ec             	mov    r12,rbp
    1387:	4c 89 cf             	mov    rdi,r9
    138a:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    138e:	49 29 f4             	sub    r12,rsi
    1391:	4c 39 d3             	cmp    rbx,r10
    1394:	48 0f 43 cb          	cmovae rcx,rbx
    1398:	44 89 e2             	mov    edx,r12d
    139b:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    13a0:	4c 29 d1             	sub    rcx,r10
    13a3:	e8 b8 fc ff ff       	call   1060 <__strncpy_chk@plt>
    13a8:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    13ad:	4c 8b 54 24 10       	mov    r10,QWORD PTR [rsp+0x10]
    13b2:	4a 8d 3c 12          	lea    rdi,[rdx+r10*1]
    13b6:	ba 20 00 00 00       	mov    edx,0x20
    13bb:	48 39 fb             	cmp    rbx,rdi
    13be:	48 89 f9             	mov    rcx,rdi
    13c1:	48 0f 43 cb          	cmovae rcx,rbx
    13c5:	44 29 e2             	sub    edx,r12d
    13c8:	31 f6                	xor    esi,esi
    13ca:	48 29 f9             	sub    rcx,rdi
    13cd:	4c 01 f7             	add    rdi,r14
    13d0:	e8 4b fd ff ff       	call   1120 <__memset_chk@plt>
    13d5:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    13d9:	47 89 64 3d 0c       	mov    DWORD PTR [r13+r15*1+0xc],r12d
    13de:	4f 89 4c 3d 00       	mov    QWORD PTR [r13+r15*1+0x0],r9
    13e3:	49 83 c7 10          	add    r15,0x10
    13e7:	4c 39 7c 24 18       	cmp    QWORD PTR [rsp+0x18],r15
    13ec:	0f 85 6e ff ff ff    	jne    1360 <_Z16buildStringArrayPcj+0x60>
    13f2:	48 83 c4 28          	add    rsp,0x28
    13f6:	4c 89 e8             	mov    rax,r13
    13f9:	5b                   	pop    rbx
    13fa:	5d                   	pop    rbp
    13fb:	41 5c                	pop    r12
    13fd:	41 5d                	pop    r13
    13ff:	41 5e                	pop    r14
    1401:	41 5f                	pop    r15
    1403:	c3                   	ret
    1404:	48 8d 0d dd 2e 00 00 	lea    rcx,[rip+0x2edd]        # 42e8 <_IO_stdin_used+0x2e8>
    140b:	ba 15 00 00 00       	mov    edx,0x15
    1410:	48 8d 35 01 2f 00 00 	lea    rsi,[rip+0x2f01]        # 4318 <_IO_stdin_used+0x318>
    1417:	48 8d 3d ff 2b 00 00 	lea    rdi,[rip+0x2bff]        # 401d <_IO_stdin_used+0x1d>
    141e:	e8 4d fc ff ff       	call   1070 <__assert_fail@plt>
    1423:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    142a:	00 00 00 00 
    142e:	66 90                	xchg   ax,ax

0000000000001430 <_Z11hashMapCtorPFj8string_tEj>:
    1430:	f3 0f 1e fa          	endbr64
    1434:	55                   	push   rbp
    1435:	48 89 e5             	mov    rbp,rsp
    1438:	41 56                	push   r14
    143a:	41 89 d6             	mov    r14d,edx
    143d:	41 55                	push   r13
    143f:	41 54                	push   r12
    1441:	49 89 fc             	mov    r12,rdi
    1444:	53                   	push   rbx
    1445:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    1449:	48 83 ec 40          	sub    rsp,0x40
    144d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1454:	00 00 
    1456:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    145b:	31 c0                	xor    eax,eax
    145d:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    1461:	be 18 00 00 00       	mov    esi,0x18
    1466:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
    146d:	44 89 77 08          	mov    DWORD PTR [rdi+0x8],r14d
    1471:	4c 89 f7             	mov    rdi,r14
    1474:	e8 07 fc ff ff       	call   1080 <calloc@plt>
    1479:	49 89 04 24          	mov    QWORD PTR [r12],rax
    147d:	45 85 f6             	test   r14d,r14d
    1480:	74 32                	je     14b4 <_Z11hashMapCtorPFj8string_tEj+0x84>
    1482:	48 89 c3             	mov    rbx,rax
    1485:	4b 8d 04 76          	lea    rax,[r14+r14*2]
    1489:	49 89 e5             	mov    r13,rsp
    148c:	4c 8d 34 c3          	lea    r14,[rbx+rax*8]
    1490:	4c 89 ef             	mov    rdi,r13
    1493:	48 83 c3 18          	add    rbx,0x18
    1497:	e8 54 0a 00 00       	call   1ef0 <_Z8listCtorv>
    149c:	c5 fa 6f 04 24       	vmovdqu xmm0,XMMWORD PTR [rsp]
    14a1:	c5 fa 7f 43 e8       	vmovdqu XMMWORD PTR [rbx-0x18],xmm0
    14a6:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    14ab:	48 89 43 f8          	mov    QWORD PTR [rbx-0x8],rax
    14af:	4c 39 f3             	cmp    rbx,r14
    14b2:	75 dc                	jne    1490 <_Z11hashMapCtorPFj8string_tEj+0x60>
    14b4:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    14b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    14c0:	00 00 
    14c2:	75 10                	jne    14d4 <_Z11hashMapCtorPFj8string_tEj+0xa4>
    14c4:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    14c8:	4c 89 e0             	mov    rax,r12
    14cb:	5b                   	pop    rbx
    14cc:	41 5c                	pop    r12
    14ce:	41 5d                	pop    r13
    14d0:	41 5e                	pop    r14
    14d2:	5d                   	pop    rbp
    14d3:	c3                   	ret
    14d4:	e8 07 fc ff ff       	call   10e0 <__stack_chk_fail@plt>
    14d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000014e0 <_Z17hashMapAddElementP7HashMap8string_t>:
    14e0:	f3 0f 1e fa          	endbr64
    14e4:	55                   	push   rbp
    14e5:	48 89 e5             	mov    rbp,rsp
    14e8:	41 57                	push   r15
    14ea:	41 56                	push   r14
    14ec:	41 55                	push   r13
    14ee:	41 54                	push   r12
    14f0:	53                   	push   rbx
    14f1:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    14f5:	48 83 ec 60          	sub    rsp,0x60
    14f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1500:	00 00 
    1502:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    1507:	31 c0                	xor    eax,eax
    1509:	48 85 ff             	test   rdi,rdi
    150c:	0f 84 51 02 00 00    	je     1763 <_Z17hashMapAddElementP7HashMap8string_t+0x283>
    1512:	49 89 fc             	mov    r12,rdi
    1515:	48 89 d3             	mov    rbx,rdx
    1518:	48 89 f7             	mov    rdi,rsi
    151b:	49 89 f5             	mov    r13,rsi
    151e:	48 89 d6             	mov    rsi,rdx
    1521:	41 ff 54 24 10       	call   QWORD PTR [r12+0x10]
    1526:	31 d2                	xor    edx,edx
    1528:	4c 89 ee             	mov    rsi,r13
    152b:	89 c1                	mov    ecx,eax
    152d:	89 c8                	mov    eax,ecx
    152f:	41 f7 74 24 08       	div    DWORD PTR [r12+0x8]
    1534:	89 d0                	mov    eax,edx
    1536:	89 54 24 14          	mov    DWORD PTR [rsp+0x14],edx
    153a:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    153e:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    1542:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1546:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    154d:	ff ff ff 
    1550:	48 21 c3             	and    rbx,rax
    1553:	48 89 da             	mov    rdx,rbx
    1556:	48 09 ca             	or     rdx,rcx
    1559:	e8 f2 09 00 00       	call   1f50 <_Z12pushListElemP4List8string_t>
    155e:	83 f8 01             	cmp    eax,0x1
    1561:	74 3d                	je     15a0 <_Z17hashMapAddElementP7HashMap8string_t+0xc0>
    1563:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    156a:	c5 f8 2f 05 96 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a96]        # 4008 <_IO_stdin_used+0x8>
    1571:	00 
    1572:	73 5e                	jae    15d2 <_Z17hashMapAddElementP7HashMap8string_t+0xf2>
    1574:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    1579:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1580:	00 00 
    1582:	0f 85 fa 01 00 00    	jne    1782 <_Z17hashMapAddElementP7HashMap8string_t+0x2a2>
    1588:	8b 44 24 14          	mov    eax,DWORD PTR [rsp+0x14]
    158c:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    1590:	5b                   	pop    rbx
    1591:	41 5c                	pop    r12
    1593:	41 5d                	pop    r13
    1595:	41 5e                	pop    r14
    1597:	41 5f                	pop    r15
    1599:	5d                   	pop    rbp
    159a:	c3                   	ret
    159b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    15a0:	41 8b 44 24 08       	mov    eax,DWORD PTR [r12+0x8]
    15a5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    15a9:	c4 e1 f2 2a c8       	vcvtsi2ss xmm1,xmm1,rax
    15ae:	c4 c1 72 59 44 24 0c 	vmulss xmm0,xmm1,DWORD PTR [r12+0xc]
    15b5:	c5 fa 58 05 47 2a 00 	vaddss xmm0,xmm0,DWORD PTR [rip+0x2a47]        # 4004 <_IO_stdin_used+0x4>
    15bc:	00 
    15bd:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    15c1:	c5 f8 2f 05 3f 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a3f]        # 4008 <_IO_stdin_used+0x8>
    15c8:	00 
    15c9:	c4 c1 7a 11 44 24 0c 	vmovss DWORD PTR [r12+0xc],xmm0
    15d0:	72 a2                	jb     1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    15d2:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    15d7:	49 8b 44 24 10       	mov    rax,QWORD PTR [r12+0x10]
    15dc:	be 18 00 00 00       	mov    esi,0x18
    15e1:	c5 fa 11 44 24 10    	vmovss DWORD PTR [rsp+0x10],xmm0
    15e7:	47 8d 2c 00          	lea    r13d,[r8+r8*1]
    15eb:	44 89 44 24 18       	mov    DWORD PTR [rsp+0x18],r8d
    15f0:	4c 89 ef             	mov    rdi,r13
    15f3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    15f8:	4c 89 eb             	mov    rbx,r13
    15fb:	e8 80 fa ff ff       	call   1080 <calloc@plt>
    1600:	45 85 ed             	test   r13d,r13d
    1603:	44 8b 44 24 18       	mov    r8d,DWORD PTR [rsp+0x18]
    1608:	c5 fa 10 44 24 10    	vmovss xmm0,DWORD PTR [rsp+0x10]
    160e:	49 89 c6             	mov    r14,rax
    1611:	74 51                	je     1664 <_Z17hashMapAddElementP7HashMap8string_t+0x184>
    1613:	4b 8d 54 6d 00       	lea    rdx,[r13+r13*2+0x0]
    1618:	49 89 c7             	mov    r15,rax
    161b:	4c 8d 2c d0          	lea    r13,[rax+rdx*8]
    161f:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
    1624:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    1629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1630:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    1635:	49 83 c7 18          	add    r15,0x18
    1639:	e8 b2 08 00 00       	call   1ef0 <_Z8listCtorv>
    163e:	c5 fa 6f 54 24 20    	vmovdqu xmm2,XMMWORD PTR [rsp+0x20]
    1644:	c4 c1 7a 7f 57 e8    	vmovdqu XMMWORD PTR [r15-0x18],xmm2
    164a:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    164f:	49 89 57 f8          	mov    QWORD PTR [r15-0x8],rdx
    1653:	4d 39 fd             	cmp    r13,r15
    1656:	75 d8                	jne    1630 <_Z17hashMapAddElementP7HashMap8string_t+0x150>
    1658:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    165d:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    1664:	c5 fa 59 1d a0 29 00 	vmulss xmm3,xmm0,DWORD PTR [rip+0x29a0]        # 400c <_IO_stdin_used+0xc>
    166b:	00 
    166c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1670:	48 89 fa             	mov    rdx,rdi
    1673:	c5 fa 11 5c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm3
    1679:	45 85 c0             	test   r8d,r8d
    167c:	0f 84 b7 00 00 00    	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1682:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    1689:	00 00 
    168b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1690:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1695:	48 8d 04 40          	lea    rax,[rax+rax*2]
    1699:	4c 8d 2c c5 00 00 00 	lea    r13,[rax*8+0x0]
    16a0:	00 
    16a1:	48 8b 04 c7          	mov    rax,QWORD PTR [rdi+rax*8]
    16a5:	8b 08                	mov    ecx,DWORD PTR [rax]
    16a7:	85 c9                	test   ecx,ecx
    16a9:	74 50                	je     16fb <_Z17hashMapAddElementP7HashMap8string_t+0x21b>
    16ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    16b0:	48 c1 e1 05          	shl    rcx,0x5
    16b4:	31 d2                	xor    edx,edx
    16b6:	48 01 c8             	add    rax,rcx
    16b9:	49 89 cf             	mov    r15,rcx
    16bc:	c5 fa 7e 40 18       	vmovq  xmm0,QWORD PTR [rax+0x18]
    16c1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    16c5:	c5 f9 7e c0          	vmovd  eax,xmm0
    16c9:	c4 e1 f9 7e c7       	vmovq  rdi,xmm0
    16ce:	f7 f3                	div    ebx
    16d0:	48 8d 04 52          	lea    rax,[rdx+rdx*2]
    16d4:	48 89 fa             	mov    rdx,rdi
    16d7:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    16db:	48 89 c7             	mov    rdi,rax
    16de:	e8 6d 08 00 00       	call   1f50 <_Z12pushListElemP4List8string_t>
    16e3:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    16e7:	4a 8b 04 2f          	mov    rax,QWORD PTR [rdi+r13*1]
    16eb:	48 89 fa             	mov    rdx,rdi
    16ee:	42 8b 0c 38          	mov    ecx,DWORD PTR [rax+r15*1]
    16f2:	85 c9                	test   ecx,ecx
    16f4:	75 ba                	jne    16b0 <_Z17hashMapAddElementP7HashMap8string_t+0x1d0>
    16f6:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    16fb:	48 83 44 24 18 01    	add    QWORD PTR [rsp+0x18],0x1
    1701:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1706:	44 39 c0             	cmp    eax,r8d
    1709:	72 85                	jb     1690 <_Z17hashMapAddElementP7HashMap8string_t+0x1b0>
    170b:	45 85 c0             	test   r8d,r8d
    170e:	74 29                	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1710:	45 31 ed             	xor    r13d,r13d
    1713:	eb 07                	jmp    171c <_Z17hashMapAddElementP7HashMap8string_t+0x23c>
    1715:	0f 1f 00             	nop    DWORD PTR [rax]
    1718:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
    171c:	4b 8d 44 6d 00       	lea    rax,[r13+r13*2+0x0]
    1721:	49 83 c5 01          	add    r13,0x1
    1725:	48 8d 3c c2          	lea    rdi,[rdx+rax*8]
    1729:	e8 92 0a 00 00       	call   21c0 <_Z8listDtorP4List>
    172e:	45 3b 6c 24 08       	cmp    r13d,DWORD PTR [r12+0x8]
    1733:	72 e3                	jb     1718 <_Z17hashMapAddElementP7HashMap8string_t+0x238>
    1735:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1739:	e8 c2 f9 ff ff       	call   1100 <free@plt>
    173e:	c5 fa 10 64 24 10    	vmovss xmm4,DWORD PTR [rsp+0x10]
    1744:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1749:	4d 89 34 24          	mov    QWORD PTR [r12],r14
    174d:	41 89 5c 24 08       	mov    DWORD PTR [r12+0x8],ebx
    1752:	49 89 44 24 10       	mov    QWORD PTR [r12+0x10],rax
    1757:	c4 c1 7a 11 64 24 0c 	vmovss DWORD PTR [r12+0xc],xmm4
    175e:	e9 11 fe ff ff       	jmp    1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    1763:	48 8d 0d ce 2b 00 00 	lea    rcx,[rip+0x2bce]        # 4338 <_IO_stdin_used+0x338>
    176a:	ba 3e 00 00 00       	mov    edx,0x3e
    176f:	48 8d 35 a2 2b 00 00 	lea    rsi,[rip+0x2ba2]        # 4318 <_IO_stdin_used+0x318>
    1776:	48 8d 3d a5 28 00 00 	lea    rdi,[rip+0x28a5]        # 4022 <_IO_stdin_used+0x22>
    177d:	e8 ee f8 ff ff       	call   1070 <__assert_fail@plt>
    1782:	e8 59 f9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1787:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    178e:	00 00 

0000000000001790 <_Z17hashMapPopElementP7HashMap8string_t>:
    1790:	f3 0f 1e fa          	endbr64
    1794:	41 55                	push   r13
    1796:	41 54                	push   r12
    1798:	55                   	push   rbp
    1799:	53                   	push   rbx
    179a:	48 83 ec 08          	sub    rsp,0x8
    179e:	48 85 ff             	test   rdi,rdi
    17a1:	0f 84 93 00 00 00    	je     183a <_Z17hashMapPopElementP7HashMap8string_t+0xaa>
    17a7:	48 89 fb             	mov    rbx,rdi
    17aa:	48 89 d5             	mov    rbp,rdx
    17ad:	48 89 f7             	mov    rdi,rsi
    17b0:	49 89 f5             	mov    r13,rsi
    17b3:	48 89 d6             	mov    rsi,rdx
    17b6:	ff 53 10             	call   QWORD PTR [rbx+0x10]
    17b9:	31 d2                	xor    edx,edx
    17bb:	4c 89 ee             	mov    rsi,r13
    17be:	89 c1                	mov    ecx,eax
    17c0:	89 c8                	mov    eax,ecx
    17c2:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    17c5:	89 d0                	mov    eax,edx
    17c7:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    17cb:	49 89 c4             	mov    r12,rax
    17ce:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    17d1:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    17d5:	48 89 ea             	mov    rdx,rbp
    17d8:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    17df:	ff ff ff 
    17e2:	48 21 c2             	and    rdx,rax
    17e5:	48 09 ca             	or     rdx,rcx
    17e8:	e8 c3 08 00 00       	call   20b0 <_Z11popListElemP4List8string_t>
    17ed:	85 c0                	test   eax,eax
    17ef:	74 37                	je     1828 <_Z17hashMapPopElementP7HashMap8string_t+0x98>
    17f1:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    17f4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    17f8:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    17fd:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    1802:	44 89 e0             	mov    eax,r12d
    1805:	c5 f2 5c 0d f7 27 00 	vsubss xmm1,xmm1,DWORD PTR [rip+0x27f7]        # 4004 <_IO_stdin_used+0x4>
    180c:	00 
    180d:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    1811:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    1816:	48 83 c4 08          	add    rsp,0x8
    181a:	5b                   	pop    rbx
    181b:	5d                   	pop    rbp
    181c:	41 5c                	pop    r12
    181e:	41 5d                	pop    r13
    1820:	c3                   	ret
    1821:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1828:	44 8b 63 08          	mov    r12d,DWORD PTR [rbx+0x8]
    182c:	48 83 c4 08          	add    rsp,0x8
    1830:	5b                   	pop    rbx
    1831:	5d                   	pop    rbp
    1832:	44 89 e0             	mov    eax,r12d
    1835:	41 5c                	pop    r12
    1837:	41 5d                	pop    r13
    1839:	c3                   	ret
    183a:	48 8d 0d 27 2b 00 00 	lea    rcx,[rip+0x2b27]        # 4368 <_IO_stdin_used+0x368>
    1841:	ba 4f 00 00 00       	mov    edx,0x4f
    1846:	48 8d 35 cb 2a 00 00 	lea    rsi,[rip+0x2acb]        # 4318 <_IO_stdin_used+0x318>
    184d:	48 8d 3d ce 27 00 00 	lea    rdi,[rip+0x27ce]        # 4022 <_IO_stdin_used+0x22>
    1854:	e8 17 f8 ff ff       	call   1070 <__assert_fail@plt>
    1859:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001860 <_Z20hashMapSearchElementP7HashMap8string_t>:
    1860:	f3 0f 1e fa          	endbr64
    1864:	48 83 ec 08          	sub    rsp,0x8
    1868:	48 85 ff             	test   rdi,rdi
    186b:	74 58                	je     18c5 <_Z20hashMapSearchElementP7HashMap8string_t+0x65>
    186d:	48 89 d1             	mov    rcx,rdx
    1870:	ba 11 11 11 21       	mov    edx,0x21111111
    1875:	89 d0                	mov    eax,edx
    1877:	41 89 d1             	mov    r9d,edx
    187a:	41 89 d0             	mov    r8d,edx
    187d:	f2 48 0f 38 f1 06    	crc32  rax,QWORD PTR [rsi]
    1883:	f2 4c 0f 38 f1 4e 08 	crc32  r9,QWORD PTR [rsi+0x8]
    188a:	f2 4c 0f 38 f1 46 10 	crc32  r8,QWORD PTR [rsi+0x10]
    1891:	44 01 c8             	add    eax,r9d
    1894:	f2 48 0f 38 f1 56 18 	crc32  rdx,QWORD PTR [rsi+0x18]
    189b:	44 01 c0             	add    eax,r8d
    189e:	01 d0                	add    eax,edx
    18a0:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
    18a3:	83 ea 01             	sub    edx,0x1
    18a6:	21 d0                	and    eax,edx
    18a8:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    18ac:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    18af:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    18b3:	48 89 ca             	mov    rdx,rcx
    18b6:	e8 a5 08 00 00       	call   2160 <_Z13searchElementP4List8string_t>
    18bb:	85 c0                	test   eax,eax
    18bd:	0f 95 c0             	setne  al
    18c0:	48 83 c4 08          	add    rsp,0x8
    18c4:	c3                   	ret
    18c5:	48 8d 0d cc 2a 00 00 	lea    rcx,[rip+0x2acc]        # 4398 <_IO_stdin_used+0x398>
    18cc:	ba 5c 00 00 00       	mov    edx,0x5c
    18d1:	48 8d 35 40 2a 00 00 	lea    rsi,[rip+0x2a40]        # 4318 <_IO_stdin_used+0x318>
    18d8:	48 8d 3d 43 27 00 00 	lea    rdi,[rip+0x2743]        # 4022 <_IO_stdin_used+0x22>
    18df:	e8 8c f7 ff ff       	call   1070 <__assert_fail@plt>
    18e4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    18eb:	00 00 00 00 
    18ef:	90                   	nop

00000000000018f0 <_Z11hashMapDtorP7HashMap>:
    18f0:	f3 0f 1e fa          	endbr64
    18f4:	55                   	push   rbp
    18f5:	53                   	push   rbx
    18f6:	48 83 ec 08          	sub    rsp,0x8
    18fa:	48 85 ff             	test   rdi,rdi
    18fd:	74 3a                	je     1939 <_Z11hashMapDtorP7HashMap+0x49>
    18ff:	8b 47 08             	mov    eax,DWORD PTR [rdi+0x8]
    1902:	48 89 fd             	mov    rbp,rdi
    1905:	31 db                	xor    ebx,ebx
    1907:	85 c0                	test   eax,eax
    1909:	74 1f                	je     192a <_Z11hashMapDtorP7HashMap+0x3a>
    190b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1910:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    1914:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    1918:	48 83 c3 01          	add    rbx,0x1
    191c:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1920:	e8 9b 08 00 00       	call   21c0 <_Z8listDtorP4List>
    1925:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    1928:	72 e6                	jb     1910 <_Z11hashMapDtorP7HashMap+0x20>
    192a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    192e:	48 83 c4 08          	add    rsp,0x8
    1932:	5b                   	pop    rbx
    1933:	5d                   	pop    rbp
    1934:	e9 c7 f7 ff ff       	jmp    1100 <free@plt>
    1939:	48 8d 0d ea 26 00 00 	lea    rcx,[rip+0x26ea]        # 402a <_IO_stdin_used+0x2a>
    1940:	ba 91 00 00 00       	mov    edx,0x91
    1945:	48 8d 35 cc 29 00 00 	lea    rsi,[rip+0x29cc]        # 4318 <_IO_stdin_used+0x318>
    194c:	48 8d 3d cf 26 00 00 	lea    rdi,[rip+0x26cf]        # 4022 <_IO_stdin_used+0x22>
    1953:	e8 18 f7 ff ff       	call   1070 <__assert_fail@plt>
    1958:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    195f:	00 

0000000000001960 <_Z17hashMapDebugPrintP7HashMap>:
    1960:	f3 0f 1e fa          	endbr64
    1964:	41 55                	push   r13
    1966:	4c 8d 2d d8 26 00 00 	lea    r13,[rip+0x26d8]        # 4045 <_IO_stdin_used+0x45>
    196d:	41 54                	push   r12
    196f:	55                   	push   rbp
    1970:	48 89 fd             	mov    rbp,rdi
    1973:	4c 89 ef             	mov    rdi,r13
    1976:	53                   	push   rbx
    1977:	48 83 ec 08          	sub    rsp,0x8
    197b:	e8 e0 f7 ff ff       	call   1160 <puts@plt>
    1980:	48 85 ed             	test   rbp,rbp
    1983:	0f 84 87 00 00 00    	je     1a10 <_Z17hashMapDebugPrintP7HashMap+0xb0>
    1989:	8b 55 08             	mov    edx,DWORD PTR [rbp+0x8]
    198c:	48 8d 35 d2 26 00 00 	lea    rsi,[rip+0x26d2]        # 4065 <_IO_stdin_used+0x65>
    1993:	bf 02 00 00 00       	mov    edi,0x2
    1998:	31 c0                	xor    eax,eax
    199a:	e8 91 f6 ff ff       	call   1030 <__printf_chk@plt>
    199f:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    19a3:	bf 02 00 00 00       	mov    edi,0x2
    19a8:	48 8d 35 c7 26 00 00 	lea    rsi,[rip+0x26c7]        # 4076 <_IO_stdin_used+0x76>
    19af:	b8 01 00 00 00       	mov    eax,0x1
    19b4:	c5 fa 5a 45 0c       	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0xc]
    19b9:	e8 72 f6 ff ff       	call   1030 <__printf_chk@plt>
    19be:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    19c1:	85 c0                	test   eax,eax
    19c3:	74 36                	je     19fb <_Z17hashMapDebugPrintP7HashMap+0x9b>
    19c5:	31 db                	xor    ebx,ebx
    19c7:	4c 8d 25 b9 26 00 00 	lea    r12,[rip+0x26b9]        # 4087 <_IO_stdin_used+0x87>
    19ce:	66 90                	xchg   ax,ax
    19d0:	89 da                	mov    edx,ebx
    19d2:	4c 89 e6             	mov    rsi,r12
    19d5:	bf 02 00 00 00       	mov    edi,0x2
    19da:	31 c0                	xor    eax,eax
    19dc:	e8 4f f6 ff ff       	call   1030 <__printf_chk@plt>
    19e1:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    19e5:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    19e9:	48 83 c3 01          	add    rbx,0x1
    19ed:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    19f1:	e8 0a 08 00 00       	call   2200 <_Z10debugPrintP4List>
    19f6:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    19f9:	72 d5                	jb     19d0 <_Z17hashMapDebugPrintP7HashMap+0x70>
    19fb:	48 83 c4 08          	add    rsp,0x8
    19ff:	4c 89 ef             	mov    rdi,r13
    1a02:	5b                   	pop    rbx
    1a03:	5d                   	pop    rbp
    1a04:	41 5c                	pop    r12
    1a06:	41 5d                	pop    r13
    1a08:	e9 53 f7 ff ff       	jmp    1160 <puts@plt>
    1a0d:	0f 1f 00             	nop    DWORD PTR [rax]
    1a10:	48 8d 3d 49 26 00 00 	lea    rdi,[rip+0x2649]        # 4060 <_IO_stdin_used+0x60>
    1a17:	e8 44 f7 ff ff       	call   1160 <puts@plt>
    1a1c:	eb dd                	jmp    19fb <_Z17hashMapDebugPrintP7HashMap+0x9b>
    1a1e:	66 90                	xchg   ax,ax

0000000000001a20 <_Z15crc32HashString8string_t>:
    1a20:	f3 0f 1e fa          	endbr64
    1a24:	48 c1 ee 20          	shr    rsi,0x20
    1a28:	83 fe 01             	cmp    esi,0x1
    1a2b:	0f 8e 05 01 00 00    	jle    1b36 <_Z15crc32HashString8string_t+0x116>
    1a31:	83 ee 02             	sub    esi,0x2
    1a34:	53                   	push   rbx
    1a35:	49 89 f9             	mov    r9,rdi
    1a38:	45 31 d2             	xor    r10d,r10d
    1a3b:	c1 ee 02             	shr    esi,0x2
    1a3e:	41 b8 1f 00 00 00    	mov    r8d,0x1f
    1a44:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1a4b:	48 be 00 00 00 00 00 	movabs rsi,0x8000000000000000
    1a52:	00 00 80 
    1a55:	4c 8d 5c 07 04       	lea    r11,[rdi+rax*1+0x4]
    1a5a:	48 bf 41 6f dc 1e 01 	movabs rdi,0x11edc6f41
    1a61:	00 00 00 
    1a64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1a68:	41 8b 11             	mov    edx,DWORD PTR [r9]
    1a6b:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1a6e:	d1 ea                	shr    edx,1
    1a70:	81 e2 55 55 55 55    	and    edx,0x55555555
    1a76:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1a7b:	09 d0                	or     eax,edx
    1a7d:	89 c2                	mov    edx,eax
    1a7f:	c1 e0 02             	shl    eax,0x2
    1a82:	c1 ea 02             	shr    edx,0x2
    1a85:	25 cc cc cc cc       	and    eax,0xcccccccc
    1a8a:	81 e2 33 33 33 33    	and    edx,0x33333333
    1a90:	09 d0                	or     eax,edx
    1a92:	89 c1                	mov    ecx,eax
    1a94:	c1 e0 04             	shl    eax,0x4
    1a97:	89 c2                	mov    edx,eax
    1a99:	c1 e9 04             	shr    ecx,0x4
    1a9c:	31 c0                	xor    eax,eax
    1a9e:	81 e1 0f 0f 0f 0f    	and    ecx,0xf0f0f0f
    1aa4:	81 e2 f0 f0 f0 f0    	and    edx,0xf0f0f0f0
    1aaa:	09 ca                	or     edx,ecx
    1aac:	0f ca                	bswap  edx
    1aae:	81 f2 88 88 88 88    	xor    edx,0x88888888
    1ab4:	48 c1 e2 20          	shl    rdx,0x20
    1ab8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1abf:	00 
    1ac0:	48 89 f3             	mov    rbx,rsi
    1ac3:	89 c1                	mov    ecx,eax
    1ac5:	48 d3 eb             	shr    rbx,cl
    1ac8:	48 85 d3             	test   rbx,rdx
    1acb:	74 0e                	je     1adb <_Z15crc32HashString8string_t+0xbb>
    1acd:	44 89 c1             	mov    ecx,r8d
    1ad0:	48 89 fb             	mov    rbx,rdi
    1ad3:	29 c1                	sub    ecx,eax
    1ad5:	48 d3 e3             	shl    rbx,cl
    1ad8:	48 31 da             	xor    rdx,rbx
    1adb:	83 c0 01             	add    eax,0x1
    1ade:	83 f8 20             	cmp    eax,0x20
    1ae1:	75 dd                	jne    1ac0 <_Z15crc32HashString8string_t+0xa0>
    1ae3:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1ae6:	d1 ea                	shr    edx,1
    1ae8:	49 83 c1 04          	add    r9,0x4
    1aec:	81 e2 55 55 55 55    	and    edx,0x55555555
    1af2:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1af7:	09 d0                	or     eax,edx
    1af9:	89 c2                	mov    edx,eax
    1afb:	c1 e0 02             	shl    eax,0x2
    1afe:	c1 ea 02             	shr    edx,0x2
    1b01:	25 cc cc cc cc       	and    eax,0xcccccccc
    1b06:	81 e2 33 33 33 33    	and    edx,0x33333333
    1b0c:	09 d0                	or     eax,edx
    1b0e:	89 c2                	mov    edx,eax
    1b10:	c1 e0 04             	shl    eax,0x4
    1b13:	c1 ea 04             	shr    edx,0x4
    1b16:	25 f0 f0 f0 f0       	and    eax,0xf0f0f0f0
    1b1b:	81 e2 0f 0f 0f 0f    	and    edx,0xf0f0f0f
    1b21:	09 d0                	or     eax,edx
    1b23:	0f c8                	bswap  eax
    1b25:	41 01 c2             	add    r10d,eax
    1b28:	4d 39 cb             	cmp    r11,r9
    1b2b:	0f 85 37 ff ff ff    	jne    1a68 <_Z15crc32HashString8string_t+0x48>
    1b31:	44 89 d0             	mov    eax,r10d
    1b34:	5b                   	pop    rbx
    1b35:	c3                   	ret
    1b36:	31 c0                	xor    eax,eax
    1b38:	c3                   	ret
    1b39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001b40 <_Z19_mm_crc32HashString8string_t>:
    1b40:	f3 0f 1e fa          	endbr64
    1b44:	48 c1 ee 20          	shr    rsi,0x20
    1b48:	83 fe 01             	cmp    esi,0x1
    1b4b:	7e 3b                	jle    1b88 <_Z19_mm_crc32HashString8string_t+0x48>
    1b4d:	83 ee 02             	sub    esi,0x2
    1b50:	b9 11 11 11 11       	mov    ecx,0x11111111
    1b55:	c1 ee 02             	shr    esi,0x2
    1b58:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1b5f:	48 8d 74 07 04       	lea    rsi,[rdi+rax*1+0x4]
    1b64:	31 c0                	xor    eax,eax
    1b66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1b6d:	00 00 00 
    1b70:	89 ca                	mov    edx,ecx
    1b72:	48 83 c7 04          	add    rdi,0x4
    1b76:	f2 0f 38 f1 57 fc    	crc32  edx,DWORD PTR [rdi-0x4]
    1b7c:	01 d0                	add    eax,edx
    1b7e:	48 39 f7             	cmp    rdi,rsi
    1b81:	75 ed                	jne    1b70 <_Z19_mm_crc32HashString8string_t+0x30>
    1b83:	c3                   	ret
    1b84:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1b88:	31 c0                	xor    eax,eax
    1b8a:	c3                   	ret
    1b8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001b90 <_Z25_mm_crc32UnrollHashString8string_t>:
    1b90:	f3 0f 1e fa          	endbr64
    1b94:	ba 11 11 11 21       	mov    edx,0x21111111
    1b99:	89 d0                	mov    eax,edx
    1b9b:	89 d6                	mov    esi,edx
    1b9d:	89 d1                	mov    ecx,edx
    1b9f:	f2 48 0f 38 f1 07    	crc32  rax,QWORD PTR [rdi]
    1ba5:	f2 48 0f 38 f1 77 08 	crc32  rsi,QWORD PTR [rdi+0x8]
    1bac:	f2 48 0f 38 f1 4f 10 	crc32  rcx,QWORD PTR [rdi+0x10]
    1bb3:	01 f0                	add    eax,esi
    1bb5:	f2 48 0f 38 f1 57 18 	crc32  rdx,QWORD PTR [rdi+0x18]
    1bbc:	01 c8                	add    eax,ecx
    1bbe:	01 d0                	add    eax,edx
    1bc0:	c3                   	ret
    1bc1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1bc8:	00 00 00 00 
    1bcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001bd0 <_Z17murmur2HashString8string_t>:
    1bd0:	f3 0f 1e fa          	endbr64
    1bd4:	48 c1 ee 20          	shr    rsi,0x20
    1bd8:	48 89 f9             	mov    rcx,rdi
    1bdb:	89 f0                	mov    eax,esi
    1bdd:	83 fe 03             	cmp    esi,0x3
    1be0:	0f 86 8a 00 00 00    	jbe    1c70 <_Z17murmur2HashString8string_t+0xa0>
    1be6:	8d 46 fc             	lea    eax,[rsi-0x4]
    1be9:	89 f2                	mov    edx,esi
    1beb:	c1 e8 02             	shr    eax,0x2
    1bee:	83 c0 01             	add    eax,0x1
    1bf1:	48 8d 3c 87          	lea    rdi,[rdi+rax*4]
    1bf5:	0f 1f 00             	nop    DWORD PTR [rax]
    1bf8:	44 69 01 95 e9 d1 5b 	imul   r8d,DWORD PTR [rcx],0x5bd1e995
    1bff:	48 83 c1 04          	add    rcx,0x4
    1c03:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c09:	44 89 c0             	mov    eax,r8d
    1c0c:	c1 e8 18             	shr    eax,0x18
    1c0f:	44 31 c0             	xor    eax,r8d
    1c12:	69 c0 95 e9 d1 5b    	imul   eax,eax,0x5bd1e995
    1c18:	31 c2                	xor    edx,eax
    1c1a:	48 39 cf             	cmp    rdi,rcx
    1c1d:	75 d9                	jne    1bf8 <_Z17murmur2HashString8string_t+0x28>
    1c1f:	89 f0                	mov    eax,esi
    1c21:	83 e0 03             	and    eax,0x3
    1c24:	83 f8 02             	cmp    eax,0x2
    1c27:	74 30                	je     1c59 <_Z17murmur2HashString8string_t+0x89>
    1c29:	83 f8 03             	cmp    eax,0x3
    1c2c:	74 22                	je     1c50 <_Z17murmur2HashString8string_t+0x80>
    1c2e:	83 f8 01             	cmp    eax,0x1
    1c31:	74 2f                	je     1c62 <_Z17murmur2HashString8string_t+0x92>
    1c33:	89 d0                	mov    eax,edx
    1c35:	c1 e8 0d             	shr    eax,0xd
    1c38:	31 c2                	xor    edx,eax
    1c3a:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c40:	89 d0                	mov    eax,edx
    1c42:	c1 e8 0f             	shr    eax,0xf
    1c45:	31 d0                	xor    eax,edx
    1c47:	c3                   	ret
    1c48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1c4f:	00 
    1c50:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
    1c54:	c1 e0 10             	shl    eax,0x10
    1c57:	31 c2                	xor    edx,eax
    1c59:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    1c5d:	c1 e0 08             	shl    eax,0x8
    1c60:	31 c2                	xor    edx,eax
    1c62:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    1c65:	31 c2                	xor    edx,eax
    1c67:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c6d:	eb c4                	jmp    1c33 <_Z17murmur2HashString8string_t+0x63>
    1c6f:	90                   	nop
    1c70:	89 f2                	mov    edx,esi
    1c72:	eb b0                	jmp    1c24 <_Z17murmur2HashString8string_t+0x54>
    1c74:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1c7b:	00 00 00 00 
    1c7f:	90                   	nop

0000000000001c80 <_Z13sumHashString8string_t>:
    1c80:	f3 0f 1e fa          	endbr64
    1c84:	48 c1 ee 20          	shr    rsi,0x20
    1c88:	41 89 f0             	mov    r8d,esi
    1c8b:	44 8d 4e fd          	lea    r9d,[rsi-0x3]
    1c8f:	83 fe 03             	cmp    esi,0x3
    1c92:	0f 8e 40 01 00 00    	jle    1dd8 <_Z13sumHashString8string_t+0x158>
    1c98:	8d 46 fc             	lea    eax,[rsi-0x4]
    1c9b:	89 c2                	mov    edx,eax
    1c9d:	c1 ea 02             	shr    edx,0x2
    1ca0:	83 c2 01             	add    edx,0x1
    1ca3:	83 f8 1b             	cmp    eax,0x1b
    1ca6:	0f 86 39 01 00 00    	jbe    1de5 <_Z13sumHashString8string_t+0x165>
    1cac:	89 d1                	mov    ecx,edx
    1cae:	48 89 f8             	mov    rax,rdi
    1cb1:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    1cb5:	c1 e9 03             	shr    ecx,0x3
    1cb8:	48 c1 e1 05          	shl    rcx,0x5
    1cbc:	48 01 f9             	add    rcx,rdi
    1cbf:	90                   	nop
    1cc0:	c5 fd fe 00          	vpaddd ymm0,ymm0,YMMWORD PTR [rax]
    1cc4:	48 83 c0 20          	add    rax,0x20
    1cc8:	48 39 c8             	cmp    rax,rcx
    1ccb:	75 f3                	jne    1cc0 <_Z13sumHashString8string_t+0x40>
    1ccd:	c4 e3 7d 39 c1 01    	vextracti128 xmm1,ymm0,0x1
    1cd3:	89 d1                	mov    ecx,edx
    1cd5:	c5 f1 fe c0          	vpaddd xmm0,xmm1,xmm0
    1cd9:	83 e1 f8             	and    ecx,0xfffffff8
    1cdc:	c5 f1 73 d8 08       	vpsrldq xmm1,xmm0,0x8
    1ce1:	c1 e1 02             	shl    ecx,0x2
    1ce4:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1ce8:	c5 f1 73 d8 04       	vpsrldq xmm1,xmm0,0x4
    1ced:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1cf1:	c5 f9 7e c0          	vmovd  eax,xmm0
    1cf5:	f6 c2 07             	test   dl,0x7
    1cf8:	0f 84 e2 00 00 00    	je     1de0 <_Z13sumHashString8string_t+0x160>
    1cfe:	c5 f8 77             	vzeroupper
    1d01:	4c 63 d1             	movsxd r10,ecx
    1d04:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d08:	44 8d 51 04          	lea    r10d,[rcx+0x4]
    1d0c:	45 39 d1             	cmp    r9d,r10d
    1d0f:	7e 55                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d11:	4d 63 d2             	movsxd r10,r10d
    1d14:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d18:	44 8d 51 08          	lea    r10d,[rcx+0x8]
    1d1c:	45 39 d1             	cmp    r9d,r10d
    1d1f:	7e 45                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d21:	4d 63 d2             	movsxd r10,r10d
    1d24:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d28:	44 8d 51 0c          	lea    r10d,[rcx+0xc]
    1d2c:	45 39 d1             	cmp    r9d,r10d
    1d2f:	7e 35                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d31:	4d 63 d2             	movsxd r10,r10d
    1d34:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d38:	44 8d 51 10          	lea    r10d,[rcx+0x10]
    1d3c:	45 39 d1             	cmp    r9d,r10d
    1d3f:	7e 25                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d41:	4d 63 d2             	movsxd r10,r10d
    1d44:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d48:	44 8d 51 14          	lea    r10d,[rcx+0x14]
    1d4c:	45 39 d1             	cmp    r9d,r10d
    1d4f:	7e 15                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d51:	4d 63 d2             	movsxd r10,r10d
    1d54:	83 c1 18             	add    ecx,0x18
    1d57:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d5b:	41 39 c9             	cmp    r9d,ecx
    1d5e:	7e 06                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d60:	48 63 c9             	movsxd rcx,ecx
    1d63:	03 04 0f             	add    eax,DWORD PTR [rdi+rcx*1]
    1d66:	c1 e2 02             	shl    edx,0x2
    1d69:	89 d1                	mov    ecx,edx
    1d6b:	41 89 f1             	mov    r9d,esi
    1d6e:	41 83 e1 03          	and    r9d,0x3
    1d72:	39 f1                	cmp    ecx,esi
    1d74:	73 5a                	jae    1dd0 <_Z13sumHashString8string_t+0x150>
    1d76:	48 63 d2             	movsxd rdx,edx
    1d79:	31 c9                	xor    ecx,ecx
    1d7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1d80:	0f be 34 17          	movsx  esi,BYTE PTR [rdi+rdx*1]
    1d84:	c1 e1 08             	shl    ecx,0x8
    1d87:	48 83 c2 01          	add    rdx,0x1
    1d8b:	01 f1                	add    ecx,esi
    1d8d:	44 39 c2             	cmp    edx,r8d
    1d90:	72 ee                	jb     1d80 <_Z13sumHashString8string_t+0x100>
    1d92:	41 83 f9 03          	cmp    r9d,0x3
    1d96:	74 18                	je     1db0 <_Z13sumHashString8string_t+0x130>
    1d98:	41 83 f9 02          	cmp    r9d,0x2
    1d9c:	74 22                	je     1dc0 <_Z13sumHashString8string_t+0x140>
    1d9e:	31 d2                	xor    edx,edx
    1da0:	c1 e1 18             	shl    ecx,0x18
    1da3:	41 83 f9 01          	cmp    r9d,0x1
    1da7:	0f 45 ca             	cmovne ecx,edx
    1daa:	01 c8                	add    eax,ecx
    1dac:	c3                   	ret
    1dad:	0f 1f 00             	nop    DWORD PTR [rax]
    1db0:	c1 e1 08             	shl    ecx,0x8
    1db3:	01 c8                	add    eax,ecx
    1db5:	c3                   	ret
    1db6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1dbd:	00 00 00 
    1dc0:	c1 e1 10             	shl    ecx,0x10
    1dc3:	01 c8                	add    eax,ecx
    1dc5:	c3                   	ret
    1dc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1dcd:	00 00 00 
    1dd0:	31 c9                	xor    ecx,ecx
    1dd2:	eb be                	jmp    1d92 <_Z13sumHashString8string_t+0x112>
    1dd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1dd8:	31 c9                	xor    ecx,ecx
    1dda:	31 d2                	xor    edx,edx
    1ddc:	31 c0                	xor    eax,eax
    1dde:	eb 8b                	jmp    1d6b <_Z13sumHashString8string_t+0xeb>
    1de0:	c5 f8 77             	vzeroupper
    1de3:	eb 81                	jmp    1d66 <_Z13sumHashString8string_t+0xe6>
    1de5:	31 c9                	xor    ecx,ecx
    1de7:	31 c0                	xor    eax,eax
    1de9:	e9 13 ff ff ff       	jmp    1d01 <_Z13sumHashString8string_t+0x81>
    1dee:	66 90                	xchg   ax,ax

0000000000001df0 <_Z17adler32HashString8string_t>:
    1df0:	f3 0f 1e fa          	endbr64
    1df4:	48 c1 ee 20          	shr    rsi,0x20
    1df8:	74 66                	je     1e60 <_Z17adler32HashString8string_t+0x70>
    1dfa:	48 01 fe             	add    rsi,rdi
    1dfd:	31 c0                	xor    eax,eax
    1dff:	ba 01 00 00 00       	mov    edx,0x1
    1e04:	41 b8 71 80 07 80    	mov    r8d,0x80078071
    1e0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1e10:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    1e13:	48 83 c7 01          	add    rdi,0x1
    1e17:	01 ca                	add    edx,ecx
    1e19:	48 89 d1             	mov    rcx,rdx
    1e1c:	49 0f af d0          	imul   rdx,r8
    1e20:	48 c1 ea 2f          	shr    rdx,0x2f
    1e24:	44 69 ca f1 ff 00 00 	imul   r9d,edx,0xfff1
    1e2b:	44 29 c9             	sub    ecx,r9d
    1e2e:	01 c8                	add    eax,ecx
    1e30:	89 ca                	mov    edx,ecx
    1e32:	89 c0                	mov    eax,eax
    1e34:	48 89 c1             	mov    rcx,rax
    1e37:	49 0f af c0          	imul   rax,r8
    1e3b:	48 c1 e8 2f          	shr    rax,0x2f
    1e3f:	44 69 c8 f1 ff 00 00 	imul   r9d,eax,0xfff1
    1e46:	89 c8                	mov    eax,ecx
    1e48:	44 29 c8             	sub    eax,r9d
    1e4b:	48 39 f7             	cmp    rdi,rsi
    1e4e:	75 c0                	jne    1e10 <_Z17adler32HashString8string_t+0x20>
    1e50:	c1 e0 10             	shl    eax,0x10
    1e53:	09 d0                	or     eax,edx
    1e55:	c3                   	ret
    1e56:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e5d:	00 00 00 
    1e60:	b8 01 00 00 00       	mov    eax,0x1
    1e65:	c3                   	ret
    1e66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e6d:	00 00 00 

0000000000001e70 <_Z13elfHashString8string_t>:
    1e70:	f3 0f 1e fa          	endbr64
    1e74:	48 c1 ee 20          	shr    rsi,0x20
    1e78:	89 f0                	mov    eax,esi
    1e7a:	85 f6                	test   esi,esi
    1e7c:	74 3b                	je     1eb9 <_Z13elfHashString8string_t+0x49>
    1e7e:	48 01 fe             	add    rsi,rdi
    1e81:	31 c0                	xor    eax,eax
    1e83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1e88:	0f be 17             	movsx  edx,BYTE PTR [rdi]
    1e8b:	c1 e0 04             	shl    eax,0x4
    1e8e:	01 d0                	add    eax,edx
    1e90:	89 c2                	mov    edx,eax
    1e92:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e98:	74 16                	je     1eb0 <_Z13elfHashString8string_t+0x40>
    1e9a:	89 d1                	mov    ecx,edx
    1e9c:	48 83 c7 01          	add    rdi,0x1
    1ea0:	f7 d2                	not    edx
    1ea2:	c1 e9 18             	shr    ecx,0x18
    1ea5:	31 c8                	xor    eax,ecx
    1ea7:	21 d0                	and    eax,edx
    1ea9:	48 39 fe             	cmp    rsi,rdi
    1eac:	75 da                	jne    1e88 <_Z13elfHashString8string_t+0x18>
    1eae:	c3                   	ret
    1eaf:	90                   	nop
    1eb0:	48 83 c7 01          	add    rdi,0x1
    1eb4:	48 39 fe             	cmp    rsi,rdi
    1eb7:	75 cf                	jne    1e88 <_Z13elfHashString8string_t+0x18>
    1eb9:	c3                   	ret
    1eba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001ec0 <_Z13searchElementP4List8string_t.part.0>:
    1ec0:	50                   	push   rax
    1ec1:	58                   	pop    rax
    1ec2:	48 8d 0d ff 24 00 00 	lea    rcx,[rip+0x24ff]        # 43c8 <_IO_stdin_used+0x3c8>
    1ec9:	ba 54 00 00 00       	mov    edx,0x54
    1ece:	48 8d 35 c3 21 00 00 	lea    rsi,[rip+0x21c3]        # 4098 <_IO_stdin_used+0x98>
    1ed5:	48 8d 3d d7 21 00 00 	lea    rdi,[rip+0x21d7]        # 40b3 <_IO_stdin_used+0xb3>
    1edc:	48 83 ec 08          	sub    rsp,0x8
    1ee0:	e8 8b f1 ff ff       	call   1070 <__assert_fail@plt>
    1ee5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1eec:	00 00 00 00 

0000000000001ef0 <_Z8listCtorv>:
    1ef0:	f3 0f 1e fa          	endbr64
    1ef4:	53                   	push   rbx
    1ef5:	be 20 00 00 00       	mov    esi,0x20
    1efa:	48 89 fb             	mov    rbx,rdi
    1efd:	bf 04 00 00 00       	mov    edi,0x4
    1f02:	e8 79 f1 ff ff       	call   1080 <calloc@plt>
    1f07:	48 8b 15 c2 27 00 00 	mov    rdx,QWORD PTR [rip+0x27c2]        # 46d0 <_IO_stdin_used+0x6d0>
    1f0e:	48 b9 01 00 00 00 04 	movabs rcx,0x400000001
    1f15:	00 00 00 
    1f18:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    1f1f:	00 
    1f20:	48 89 03             	mov    QWORD PTR [rbx],rax
    1f23:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    1f27:	48 8b 15 aa 27 00 00 	mov    rdx,QWORD PTR [rip+0x27aa]        # 46d8 <_IO_stdin_used+0x6d8>
    1f2e:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    1f35:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
    1f39:	48 8b 15 a0 27 00 00 	mov    rdx,QWORD PTR [rip+0x27a0]        # 46e0 <_IO_stdin_used+0x6e0>
    1f40:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    1f44:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    1f48:	48 89 d8             	mov    rax,rbx
    1f4b:	5b                   	pop    rbx
    1f4c:	c3                   	ret
    1f4d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001f50 <_Z12pushListElemP4List8string_t>:
    1f50:	f3 0f 1e fa          	endbr64
    1f54:	41 54                	push   r12
    1f56:	55                   	push   rbp
    1f57:	53                   	push   rbx
    1f58:	48 85 ff             	test   rdi,rdi
    1f5b:	0f 84 2f 01 00 00    	je     2090 <_Z12pushListElemP4List8string_t+0x140>
    1f61:	48 89 fd             	mov    rbp,rdi
    1f64:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    1f67:	8b 07                	mov    eax,DWORD PTR [rdi]
    1f69:	85 c0                	test   eax,eax
    1f6b:	75 15                	jne    1f82 <_Z12pushListElemP4List8string_t+0x32>
    1f6d:	e9 be 00 00 00       	jmp    2030 <_Z12pushListElemP4List8string_t+0xe0>
    1f72:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1f78:	8b 01                	mov    eax,DWORD PTR [rcx]
    1f7a:	85 c0                	test   eax,eax
    1f7c:	0f 84 ae 00 00 00    	je     2030 <_Z12pushListElemP4List8string_t+0xe0>
    1f82:	89 c3                	mov    ebx,eax
    1f84:	48 c1 e3 05          	shl    rbx,0x5
    1f88:	48 8d 0c 1f          	lea    rcx,[rdi+rbx*1]
    1f8c:	48 8b 41 10          	mov    rax,QWORD PTR [rcx+0x10]
    1f90:	c5 fd 6f 06          	vmovdqa ymm0,YMMWORD PTR [rsi]
    1f94:	c5 fd 6f 08          	vmovdqa ymm1,YMMWORD PTR [rax]
    1f98:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    1f9c:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    1fa0:	f7 d0                	not    eax
    1fa2:	85 c0                	test   eax,eax
    1fa4:	75 d2                	jne    1f78 <_Z12pushListElemP4List8string_t+0x28>
    1fa6:	8b 41 08             	mov    eax,DWORD PTR [rcx+0x8]
    1fa9:	8d 50 01             	lea    edx,[rax+0x1]
    1fac:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    1faf:	89 51 08             	mov    DWORD PTR [rcx+0x8],edx
    1fb2:	39 45 0c             	cmp    DWORD PTR [rbp+0xc],eax
    1fb5:	0f 85 c4 00 00 00    	jne    207f <_Z12pushListElemP4List8string_t+0x12f>
    1fbb:	44 8d 24 00          	lea    r12d,[rax+rax*1]
    1fbf:	44 89 65 0c          	mov    DWORD PTR [rbp+0xc],r12d
    1fc3:	49 c1 e4 05          	shl    r12,0x5
    1fc7:	4c 89 e6             	mov    rsi,r12
    1fca:	e8 a1 f1 ff ff       	call   1170 <realloc@plt>
    1fcf:	8b 55 0c             	mov    edx,DWORD PTR [rbp+0xc]
    1fd2:	4c 89 e1             	mov    rcx,r12
    1fd5:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    1fd9:	d1 ea                	shr    edx,1
    1fdb:	48 c1 e2 05          	shl    rdx,0x5
    1fdf:	49 39 d4             	cmp    r12,rdx
    1fe2:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
    1fe6:	48 0f 42 ca          	cmovb  rcx,rdx
    1fea:	31 f6                	xor    esi,esi
    1fec:	48 29 d1             	sub    rcx,rdx
    1fef:	e8 2c f1 ff ff       	call   1120 <__memset_chk@plt>
    1ff4:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    1ff7:	8b 75 0c             	mov    esi,DWORD PTR [rbp+0xc]
    1ffa:	39 f0                	cmp    eax,esi
    1ffc:	0f 83 84 00 00 00    	jae    2086 <_Z12pushListElemP4List8string_t+0x136>
    2002:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    2006:	89 c2                	mov    edx,eax
    2008:	48 c1 e2 05          	shl    rdx,0x5
    200c:	48 01 fa             	add    rdx,rdi
    200f:	90                   	nop
    2010:	89 c1                	mov    ecx,eax
    2012:	83 c0 01             	add    eax,0x1
    2015:	48 83 c2 20          	add    rdx,0x20
    2019:	89 42 e0             	mov    DWORD PTR [rdx-0x20],eax
    201c:	89 4a e4             	mov    DWORD PTR [rdx-0x1c],ecx
    201f:	39 c6                	cmp    esi,eax
    2021:	75 ed                	jne    2010 <_Z12pushListElemP4List8string_t+0xc0>
    2023:	8b 54 1f 08          	mov    edx,DWORD PTR [rdi+rbx*1+0x8]
    2027:	5b                   	pop    rbx
    2028:	5d                   	pop    rbp
    2029:	41 5c                	pop    r12
    202b:	89 d0                	mov    eax,edx
    202d:	c3                   	ret
    202e:	66 90                	xchg   ax,ax
    2030:	8b 5d 08             	mov    ebx,DWORD PTR [rbp+0x8]
    2033:	49 89 d8             	mov    r8,rbx
    2036:	48 c1 e3 05          	shl    rbx,0x5
    203a:	48 8d 0c 1f          	lea    rcx,[rdi+rbx*1]
    203e:	8b 01                	mov    eax,DWORD PTR [rcx]
    2040:	89 45 08             	mov    DWORD PTR [rbp+0x8],eax
    2043:	48 89 51 18          	mov    QWORD PTR [rcx+0x18],rdx
    2047:	8b 57 04             	mov    edx,DWORD PTR [rdi+0x4]
    204a:	c7 41 08 00 00 00 00 	mov    DWORD PTR [rcx+0x8],0x0
    2051:	89 51 04             	mov    DWORD PTR [rcx+0x4],edx
    2054:	48 c1 e2 05          	shl    rdx,0x5
    2058:	48 89 71 10          	mov    QWORD PTR [rcx+0x10],rsi
    205c:	c7 01 00 00 00 00    	mov    DWORD PTR [rcx],0x0
    2062:	44 89 47 04          	mov    DWORD PTR [rdi+0x4],r8d
    2066:	44 89 04 17          	mov    DWORD PTR [rdi+rdx*1],r8d
    206a:	ba 01 00 00 00       	mov    edx,0x1
    206f:	83 45 10 01          	add    DWORD PTR [rbp+0x10],0x1
    2073:	89 51 08             	mov    DWORD PTR [rcx+0x8],edx
    2076:	39 45 0c             	cmp    DWORD PTR [rbp+0xc],eax
    2079:	0f 84 3c ff ff ff    	je     1fbb <_Z12pushListElemP4List8string_t+0x6b>
    207f:	5b                   	pop    rbx
    2080:	89 d0                	mov    eax,edx
    2082:	5d                   	pop    rbp
    2083:	41 5c                	pop    r12
    2085:	c3                   	ret
    2086:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    208a:	8b 54 18 08          	mov    edx,DWORD PTR [rax+rbx*1+0x8]
    208e:	eb ef                	jmp    207f <_Z12pushListElemP4List8string_t+0x12f>
    2090:	48 8d 0d 59 23 00 00 	lea    rcx,[rip+0x2359]        # 43f0 <_IO_stdin_used+0x3f0>
    2097:	ba 1e 00 00 00       	mov    edx,0x1e
    209c:	48 8d 35 f5 1f 00 00 	lea    rsi,[rip+0x1ff5]        # 4098 <_IO_stdin_used+0x98>
    20a3:	48 8d 3d 09 20 00 00 	lea    rdi,[rip+0x2009]        # 40b3 <_IO_stdin_used+0xb3>
    20aa:	e8 c1 ef ff ff       	call   1070 <__assert_fail@plt>
    20af:	90                   	nop

00000000000020b0 <_Z11popListElemP4List8string_t>:
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	48 85 ff             	test   rdi,rdi
    20b7:	0f 84 83 00 00 00    	je     2140 <_Z11popListElemP4List8string_t+0x90>
    20bd:	4c 8b 07             	mov    r8,QWORD PTR [rdi]
    20c0:	49 89 f9             	mov    r9,rdi
    20c3:	41 8b 08             	mov    ecx,DWORD PTR [r8]
    20c6:	eb 2f                	jmp    20f7 <_Z11popListElemP4List8string_t+0x47>
    20c8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    20cf:	00 
    20d0:	89 ca                	mov    edx,ecx
    20d2:	48 c1 e2 05          	shl    rdx,0x5
    20d6:	4c 01 c2             	add    rdx,r8
    20d9:	48 8b 7a 10          	mov    rdi,QWORD PTR [rdx+0x10]
    20dd:	c5 fd 6f 06          	vmovdqa ymm0,YMMWORD PTR [rsi]
    20e1:	c5 fd 6f 0f          	vmovdqa ymm1,YMMWORD PTR [rdi]
    20e5:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    20e9:	c5 fd d7 fa          	vpmovmskb edi,ymm2
    20ed:	f7 d7                	not    edi
    20ef:	89 c8                	mov    eax,ecx
    20f1:	8b 0a                	mov    ecx,DWORD PTR [rdx]
    20f3:	85 ff                	test   edi,edi
    20f5:	74 09                	je     2100 <_Z11popListElemP4List8string_t+0x50>
    20f7:	85 c9                	test   ecx,ecx
    20f9:	75 d5                	jne    20d0 <_Z11popListElemP4List8string_t+0x20>
    20fb:	31 c0                	xor    eax,eax
    20fd:	c3                   	ret
    20fe:	66 90                	xchg   ax,ax
    2100:	8b 72 04             	mov    esi,DWORD PTR [rdx+0x4]
    2103:	c4 c1 79 6e 49 08    	vmovd  xmm1,DWORD PTR [r9+0x8]
    2109:	c7 42 18 00 00 00 00 	mov    DWORD PTR [rdx+0x18],0x0
    2110:	48 c7 42 10 00 00 00 	mov    QWORD PTR [rdx+0x10],0x0
    2117:	00 
    2118:	48 89 f7             	mov    rdi,rsi
    211b:	48 c1 e6 05          	shl    rsi,0x5
    211f:	c4 e3 71 22 c0 01    	vpinsrd xmm0,xmm1,eax,0x1
    2125:	41 89 0c 30          	mov    DWORD PTR [r8+rsi*1],ecx
    2129:	48 c1 e1 05          	shl    rcx,0x5
    212d:	41 89 7c 08 04       	mov    DWORD PTR [r8+rcx*1+0x4],edi
    2132:	c5 f9 d6 02          	vmovq  QWORD PTR [rdx],xmm0
    2136:	41 89 41 08          	mov    DWORD PTR [r9+0x8],eax
    213a:	41 83 69 10 01       	sub    DWORD PTR [r9+0x10],0x1
    213f:	c3                   	ret
    2140:	50                   	push   rax
    2141:	48 8d 0d c8 22 00 00 	lea    rcx,[rip+0x22c8]        # 4410 <_IO_stdin_used+0x410>
    2148:	ba 3b 00 00 00       	mov    edx,0x3b
    214d:	48 8d 35 44 1f 00 00 	lea    rsi,[rip+0x1f44]        # 4098 <_IO_stdin_used+0x98>
    2154:	48 8d 3d 58 1f 00 00 	lea    rdi,[rip+0x1f58]        # 40b3 <_IO_stdin_used+0xb3>
    215b:	e8 10 ef ff ff       	call   1070 <__assert_fail@plt>

0000000000002160 <_Z13searchElementP4List8string_t>:
    2160:	f3 0f 1e fa          	endbr64
    2164:	48 85 ff             	test   rdi,rdi
    2167:	74 43                	je     21ac <_Z13searchElementP4List8string_t+0x4c>
    2169:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    216c:	8b 07                	mov    eax,DWORD PTR [rdi]
    216e:	85 c0                	test   eax,eax
    2170:	75 0c                	jne    217e <_Z13searchElementP4List8string_t+0x1e>
    2172:	eb 35                	jmp    21a9 <_Z13searchElementP4List8string_t+0x49>
    2174:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2178:	8b 02                	mov    eax,DWORD PTR [rdx]
    217a:	85 c0                	test   eax,eax
    217c:	74 2a                	je     21a8 <_Z13searchElementP4List8string_t+0x48>
    217e:	89 c2                	mov    edx,eax
    2180:	48 c1 e2 05          	shl    rdx,0x5
    2184:	48 01 fa             	add    rdx,rdi
    2187:	48 8b 4a 10          	mov    rcx,QWORD PTR [rdx+0x10]
    218b:	c5 fd 6f 06          	vmovdqa ymm0,YMMWORD PTR [rsi]
    218f:	c5 fd 6f 09          	vmovdqa ymm1,YMMWORD PTR [rcx]
    2193:	c5 fd 74 d1          	vpcmpeqb ymm2,ymm0,ymm1
    2197:	c5 fd d7 ca          	vpmovmskb ecx,ymm2
    219b:	f7 d1                	not    ecx
    219d:	85 c9                	test   ecx,ecx
    219f:	75 d7                	jne    2178 <_Z13searchElementP4List8string_t+0x18>
    21a1:	c3                   	ret
    21a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    21a8:	c3                   	ret
    21a9:	31 c0                	xor    eax,eax
    21ab:	c3                   	ret
    21ac:	50                   	push   rax
    21ad:	e8 0e fd ff ff       	call   1ec0 <_Z13searchElementP4List8string_t.part.0>
    21b2:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    21b9:	00 00 00 00 
    21bd:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000021c0 <_Z8listDtorP4List>:
    21c0:	f3 0f 1e fa          	endbr64
    21c4:	53                   	push   rbx
    21c5:	48 85 ff             	test   rdi,rdi
    21c8:	74 15                	je     21df <_Z8listDtorP4List+0x1f>
    21ca:	48 89 fb             	mov    rbx,rdi
    21cd:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    21d0:	e8 2b ef ff ff       	call   1100 <free@plt>
    21d5:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    21dc:	00 
    21dd:	5b                   	pop    rbx
    21de:	c3                   	ret
    21df:	48 8d 0d d2 1e 00 00 	lea    rcx,[rip+0x1ed2]        # 40b8 <_IO_stdin_used+0xb8>
    21e6:	ba 8e 00 00 00       	mov    edx,0x8e
    21eb:	48 8d 35 a6 1e 00 00 	lea    rsi,[rip+0x1ea6]        # 4098 <_IO_stdin_used+0x98>
    21f2:	48 8d 3d ba 1e 00 00 	lea    rdi,[rip+0x1eba]        # 40b3 <_IO_stdin_used+0xb3>
    21f9:	e8 72 ee ff ff       	call   1070 <__assert_fail@plt>
    21fe:	66 90                	xchg   ax,ax

0000000000002200 <_Z10debugPrintP4List>:
    2200:	f3 0f 1e fa          	endbr64
    2204:	41 54                	push   r12
    2206:	55                   	push   rbp
    2207:	53                   	push   rbx
    2208:	48 85 ff             	test   rdi,rdi
    220b:	0f 84 f3 01 00 00    	je     2404 <_Z10debugPrintP4List+0x204>
    2211:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
    2214:	48 89 fb             	mov    rbx,rdi
    2217:	48 8d 35 c6 1e 00 00 	lea    rsi,[rip+0x1ec6]        # 40e4 <_IO_stdin_used+0xe4>
    221e:	31 c0                	xor    eax,eax
    2220:	bf 02 00 00 00       	mov    edi,0x2
    2225:	e8 06 ee ff ff       	call   1030 <__printf_chk@plt>
    222a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    222d:	bf 02 00 00 00       	mov    edi,0x2
    2232:	31 c0                	xor    eax,eax
    2234:	48 8d 35 b7 1e 00 00 	lea    rsi,[rip+0x1eb7]        # 40f2 <_IO_stdin_used+0xf2>
    223b:	e8 f0 ed ff ff       	call   1030 <__printf_chk@plt>
    2240:	8b 53 10             	mov    edx,DWORD PTR [rbx+0x10]
    2243:	bf 02 00 00 00       	mov    edi,0x2
    2248:	31 c0                	xor    eax,eax
    224a:	48 8d 35 af 1e 00 00 	lea    rsi,[rip+0x1eaf]        # 4100 <_IO_stdin_used+0x100>
    2251:	e8 da ed ff ff       	call   1030 <__printf_chk@plt>
    2256:	bf 02 00 00 00       	mov    edi,0x2
    225b:	48 8d 35 ac 1e 00 00 	lea    rsi,[rip+0x1eac]        # 410e <_IO_stdin_used+0x10e>
    2262:	31 c0                	xor    eax,eax
    2264:	e8 c7 ed ff ff       	call   1030 <__printf_chk@plt>
    2269:	8b 7b 0c             	mov    edi,DWORD PTR [rbx+0xc]
    226c:	85 ff                	test   edi,edi
    226e:	74 2c                	je     229c <_Z10debugPrintP4List+0x9c>
    2270:	45 31 e4             	xor    r12d,r12d
    2273:	48 8d 2d 9f 1e 00 00 	lea    rbp,[rip+0x1e9f]        # 4119 <_IO_stdin_used+0x119>
    227a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2280:	44 89 e2             	mov    edx,r12d
    2283:	48 89 ee             	mov    rsi,rbp
    2286:	bf 02 00 00 00       	mov    edi,0x2
    228b:	31 c0                	xor    eax,eax
    228d:	e8 9e ed ff ff       	call   1030 <__printf_chk@plt>
    2292:	41 83 c4 01          	add    r12d,0x1
    2296:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    229a:	72 e4                	jb     2280 <_Z10debugPrintP4List+0x80>
    229c:	bf 0a 00 00 00       	mov    edi,0xa
    22a1:	e8 8a ee ff ff       	call   1130 <putchar@plt>
    22a6:	48 8d 35 70 1e 00 00 	lea    rsi,[rip+0x1e70]        # 411d <_IO_stdin_used+0x11d>
    22ad:	bf 02 00 00 00       	mov    edi,0x2
    22b2:	31 c0                	xor    eax,eax
    22b4:	e8 77 ed ff ff       	call   1030 <__printf_chk@plt>
    22b9:	8b 73 0c             	mov    esi,DWORD PTR [rbx+0xc]
    22bc:	85 f6                	test   esi,esi
    22be:	74 35                	je     22f5 <_Z10debugPrintP4List+0xf5>
    22c0:	45 31 e4             	xor    r12d,r12d
    22c3:	48 8d 2d 4f 1e 00 00 	lea    rbp,[rip+0x1e4f]        # 4119 <_IO_stdin_used+0x119>
    22ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    22d0:	4c 89 e0             	mov    rax,r12
    22d3:	48 89 ee             	mov    rsi,rbp
    22d6:	bf 02 00 00 00       	mov    edi,0x2
    22db:	49 83 c4 01          	add    r12,0x1
    22df:	48 c1 e0 05          	shl    rax,0x5
    22e3:	48 03 03             	add    rax,QWORD PTR [rbx]
    22e6:	8b 10                	mov    edx,DWORD PTR [rax]
    22e8:	31 c0                	xor    eax,eax
    22ea:	e8 41 ed ff ff       	call   1030 <__printf_chk@plt>
    22ef:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    22f3:	72 db                	jb     22d0 <_Z10debugPrintP4List+0xd0>
    22f5:	bf 0a 00 00 00       	mov    edi,0xa
    22fa:	e8 31 ee ff ff       	call   1130 <putchar@plt>
    22ff:	48 8d 35 22 1e 00 00 	lea    rsi,[rip+0x1e22]        # 4128 <_IO_stdin_used+0x128>
    2306:	bf 02 00 00 00       	mov    edi,0x2
    230b:	31 c0                	xor    eax,eax
    230d:	e8 1e ed ff ff       	call   1030 <__printf_chk@plt>
    2312:	8b 4b 0c             	mov    ecx,DWORD PTR [rbx+0xc]
    2315:	85 c9                	test   ecx,ecx
    2317:	74 35                	je     234e <_Z10debugPrintP4List+0x14e>
    2319:	45 31 e4             	xor    r12d,r12d
    231c:	48 8d 2d f6 1d 00 00 	lea    rbp,[rip+0x1df6]        # 4119 <_IO_stdin_used+0x119>
    2323:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2328:	4c 89 e0             	mov    rax,r12
    232b:	48 89 ee             	mov    rsi,rbp
    232e:	bf 02 00 00 00       	mov    edi,0x2
    2333:	49 83 c4 01          	add    r12,0x1
    2337:	48 c1 e0 05          	shl    rax,0x5
    233b:	48 03 03             	add    rax,QWORD PTR [rbx]
    233e:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    2341:	31 c0                	xor    eax,eax
    2343:	e8 e8 ec ff ff       	call   1030 <__printf_chk@plt>
    2348:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    234c:	72 da                	jb     2328 <_Z10debugPrintP4List+0x128>
    234e:	bf 0a 00 00 00       	mov    edi,0xa
    2353:	e8 d8 ed ff ff       	call   1130 <putchar@plt>
    2358:	48 8d 35 d4 1d 00 00 	lea    rsi,[rip+0x1dd4]        # 4133 <_IO_stdin_used+0x133>
    235f:	bf 02 00 00 00       	mov    edi,0x2
    2364:	31 c0                	xor    eax,eax
    2366:	e8 c5 ec ff ff       	call   1030 <__printf_chk@plt>
    236b:	8b 53 0c             	mov    edx,DWORD PTR [rbx+0xc]
    236e:	85 d2                	test   edx,edx
    2370:	74 34                	je     23a6 <_Z10debugPrintP4List+0x1a6>
    2372:	45 31 e4             	xor    r12d,r12d
    2375:	48 8d 2d 9d 1d 00 00 	lea    rbp,[rip+0x1d9d]        # 4119 <_IO_stdin_used+0x119>
    237c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2380:	4c 89 e0             	mov    rax,r12
    2383:	48 89 ee             	mov    rsi,rbp
    2386:	bf 02 00 00 00       	mov    edi,0x2
    238b:	49 83 c4 01          	add    r12,0x1
    238f:	48 c1 e0 05          	shl    rax,0x5
    2393:	48 03 03             	add    rax,QWORD PTR [rbx]
    2396:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    2399:	31 c0                	xor    eax,eax
    239b:	e8 90 ec ff ff       	call   1030 <__printf_chk@plt>
    23a0:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    23a4:	72 da                	jb     2380 <_Z10debugPrintP4List+0x180>
    23a6:	bf 0a 00 00 00       	mov    edi,0xa
    23ab:	e8 80 ed ff ff       	call   1130 <putchar@plt>
    23b0:	48 8d 3d 87 1d 00 00 	lea    rdi,[rip+0x1d87]        # 413e <_IO_stdin_used+0x13e>
    23b7:	e8 a4 ed ff ff       	call   1160 <puts@plt>
    23bc:	8b 43 0c             	mov    eax,DWORD PTR [rbx+0xc]
    23bf:	85 c0                	test   eax,eax
    23c1:	74 33                	je     23f6 <_Z10debugPrintP4List+0x1f6>
    23c3:	31 ed                	xor    ebp,ebp
    23c5:	4c 8d 25 77 1d 00 00 	lea    r12,[rip+0x1d77]        # 4143 <_IO_stdin_used+0x143>
    23cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    23d0:	48 89 e8             	mov    rax,rbp
    23d3:	4c 89 e6             	mov    rsi,r12
    23d6:	bf 02 00 00 00       	mov    edi,0x2
    23db:	48 83 c5 01          	add    rbp,0x1
    23df:	48 c1 e0 05          	shl    rax,0x5
    23e3:	48 03 03             	add    rax,QWORD PTR [rbx]
    23e6:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    23ea:	31 c0                	xor    eax,eax
    23ec:	e8 3f ec ff ff       	call   1030 <__printf_chk@plt>
    23f1:	3b 6b 0c             	cmp    ebp,DWORD PTR [rbx+0xc]
    23f4:	72 da                	jb     23d0 <_Z10debugPrintP4List+0x1d0>
    23f6:	5b                   	pop    rbx
    23f7:	bf 0a 00 00 00       	mov    edi,0xa
    23fc:	5d                   	pop    rbp
    23fd:	41 5c                	pop    r12
    23ff:	e9 2c ed ff ff       	jmp    1130 <putchar@plt>
    2404:	48 8d 0d c2 1c 00 00 	lea    rcx,[rip+0x1cc2]        # 40cd <_IO_stdin_used+0xcd>
    240b:	ba 97 00 00 00       	mov    edx,0x97
    2410:	48 8d 35 81 1c 00 00 	lea    rsi,[rip+0x1c81]        # 4098 <_IO_stdin_used+0x98>
    2417:	48 8d 3d 95 1c 00 00 	lea    rdi,[rip+0x1c95]        # 40b3 <_IO_stdin_used+0xb3>
    241e:	e8 4d ec ff ff       	call   1070 <__assert_fail@plt>
    2423:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    242a:	00 00 00 
    242d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002430 <_Z8readFilePKcPm>:
    2430:	f3 0f 1e fa          	endbr64
    2434:	55                   	push   rbp
    2435:	48 89 e5             	mov    rbp,rsp
    2438:	41 55                	push   r13
    243a:	41 54                	push   r12
    243c:	53                   	push   rbx
    243d:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    2444:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    244b:	00 00 
    244d:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    2454:	00 
    2455:	31 c0                	xor    eax,eax
    2457:	48 85 ff             	test   rdi,rdi
    245a:	0f 84 b4 00 00 00    	je     2514 <_Z8readFilePKcPm+0xe4>
    2460:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    2464:	49 89 f4             	mov    r12,rsi
    2467:	48 89 e6             	mov    rsi,rsp
    246a:	48 89 fb             	mov    rbx,rdi
    246d:	c5 fe 7f 04 24       	vmovdqu YMMWORD PTR [rsp],ymm0
    2472:	c5 fe 7f 44 24 20    	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
    2478:	c5 fe 7f 44 24 40    	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
    247e:	c5 fe 7f 44 24 60    	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
    2484:	c5 f9 7f 84 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
    248b:	00 00 
    248d:	c5 f8 77             	vzeroupper
    2490:	e8 1b ec ff ff       	call   10b0 <stat@plt>
    2495:	83 f8 ff             	cmp    eax,0xffffffff
    2498:	74 76                	je     2510 <_Z8readFilePKcPm+0xe0>
    249a:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
    249f:	31 f6                	xor    esi,esi
    24a1:	48 89 df             	mov    rdi,rbx
    24a4:	31 c0                	xor    eax,eax
    24a6:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    24aa:	e8 e1 eb ff ff       	call   1090 <open@plt>
    24af:	41 89 c4             	mov    r12d,eax
    24b2:	83 f8 ff             	cmp    eax,0xffffffff
    24b5:	74 59                	je     2510 <_Z8readFilePKcPm+0xe0>
    24b7:	be 01 00 00 00       	mov    esi,0x1
    24bc:	4c 89 ef             	mov    rdi,r13
    24bf:	e8 bc eb ff ff       	call   1080 <calloc@plt>
    24c4:	48 89 c3             	mov    rbx,rax
    24c7:	48 85 c0             	test   rax,rax
    24ca:	74 16                	je     24e2 <_Z8readFilePKcPm+0xb2>
    24cc:	44 89 e7             	mov    edi,r12d
    24cf:	4c 89 ea             	mov    rdx,r13
    24d2:	48 89 c6             	mov    rsi,rax
    24d5:	e8 76 ec ff ff       	call   1150 <read@plt>
    24da:	44 89 e7             	mov    edi,r12d
    24dd:	e8 ce ec ff ff       	call   11b0 <close@plt>
    24e2:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    24e9:	00 
    24ea:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    24f1:	00 00 
    24f3:	75 3e                	jne    2533 <_Z8readFilePKcPm+0x103>
    24f5:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    24fc:	48 89 d8             	mov    rax,rbx
    24ff:	5b                   	pop    rbx
    2500:	41 5c                	pop    r12
    2502:	41 5d                	pop    r13
    2504:	5d                   	pop    rbp
    2505:	c3                   	ret
    2506:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    250d:	00 00 00 
    2510:	31 db                	xor    ebx,ebx
    2512:	eb ce                	jmp    24e2 <_Z8readFilePKcPm+0xb2>
    2514:	48 8d 0d 15 1f 00 00 	lea    rcx,[rip+0x1f15]        # 4430 <_IO_stdin_used+0x430>
    251b:	ba 0c 00 00 00       	mov    edx,0xc
    2520:	48 8d 35 23 1c 00 00 	lea    rsi,[rip+0x1c23]        # 414a <_IO_stdin_used+0x14a>
    2527:	48 8d 3d 38 1c 00 00 	lea    rdi,[rip+0x1c38]        # 4166 <_IO_stdin_used+0x166>
    252e:	e8 3d eb ff ff       	call   1070 <__assert_fail@plt>
    2533:	e8 a8 eb ff ff       	call   10e0 <__stack_chk_fail@plt>
    2538:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    253f:	00 

0000000000002540 <_Z10countLinesPcm>:
    2540:	f3 0f 1e fa          	endbr64
    2544:	41 54                	push   r12
    2546:	55                   	push   rbp
    2547:	53                   	push   rbx
    2548:	48 85 ff             	test   rdi,rdi
    254b:	74 36                	je     2583 <_Z10countLinesPcm+0x43>
    254d:	48 89 fd             	mov    rbp,rdi
    2550:	49 89 f4             	mov    r12,rsi
    2553:	31 db                	xor    ebx,ebx
    2555:	48 85 f6             	test   rsi,rsi
    2558:	74 22                	je     257c <_Z10countLinesPcm+0x3c>
    255a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2560:	be 0a 00 00 00       	mov    esi,0xa
    2565:	83 c3 01             	add    ebx,0x1
    2568:	e8 e3 ea ff ff       	call   1050 <strchr@plt>
    256d:	48 8d 78 01          	lea    rdi,[rax+0x1]
    2571:	48 89 f8             	mov    rax,rdi
    2574:	48 29 e8             	sub    rax,rbp
    2577:	4c 39 e0             	cmp    rax,r12
    257a:	75 e4                	jne    2560 <_Z10countLinesPcm+0x20>
    257c:	89 d8                	mov    eax,ebx
    257e:	5b                   	pop    rbx
    257f:	5d                   	pop    rbp
    2580:	41 5c                	pop    r12
    2582:	c3                   	ret
    2583:	48 8d 0d ce 1e 00 00 	lea    rcx,[rip+0x1ece]        # 4458 <_IO_stdin_used+0x458>
    258a:	ba 22 00 00 00       	mov    edx,0x22
    258f:	48 8d 35 b4 1b 00 00 	lea    rsi,[rip+0x1bb4]        # 414a <_IO_stdin_used+0x14a>
    2596:	48 8d 3d 80 1a 00 00 	lea    rdi,[rip+0x1a80]        # 401d <_IO_stdin_used+0x1d>
    259d:	e8 ce ea ff ff       	call   1070 <__assert_fail@plt>
    25a2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    25a9:	00 00 00 
    25ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000025b0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData>:
    25b0:	f3 0f 1e fa          	endbr64
    25b4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    25b9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    25bd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    25c1:	55                   	push   rbp
    25c2:	48 89 e5             	mov    rbp,rsp
    25c5:	41 57                	push   r15
    25c7:	41 56                	push   r14
    25c9:	41 55                	push   r13
    25cb:	41 54                	push   r12
    25cd:	41 52                	push   r10
    25cf:	53                   	push   rbx
    25d0:	48 83 ec 40          	sub    rsp,0x40
    25d4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    25db:	00 00 
    25dd:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    25e1:	31 c0                	xor    eax,eax
    25e3:	48 85 ff             	test   rdi,rdi
    25e6:	0f 84 f3 03 00 00    	je     29df <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x42f>
    25ec:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    25f0:	49 89 fd             	mov    r13,rdi
    25f3:	48 89 d3             	mov    rbx,rdx
    25f6:	49 89 ce             	mov    r14,rcx
    25f9:	ba 02 00 00 00       	mov    edx,0x2
    25fe:	4c 89 e7             	mov    rdi,r12
    2601:	e8 2a ee ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2606:	45 85 f6             	test   r14d,r14d
    2609:	74 25                	je     2630 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x80>
    260b:	45 89 f6             	mov    r14d,r14d
    260e:	49 c1 e6 04          	shl    r14,0x4
    2612:	49 01 de             	add    r14,rbx
    2615:	0f 1f 00             	nop    DWORD PTR [rax]
    2618:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    261b:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    261f:	4c 89 e7             	mov    rdi,r12
    2622:	48 83 c3 10          	add    rbx,0x10
    2626:	e8 b5 ee ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    262b:	49 39 de             	cmp    r14,rbx
    262e:	75 e8                	jne    2618 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x68>
    2630:	4c 89 e9             	mov    rcx,r13
    2633:	ba 19 00 00 00       	mov    edx,0x19
    2638:	be 01 00 00 00       	mov    esi,0x1
    263d:	48 8d 3d 4c 1b 00 00 	lea    rdi,[rip+0x1b4c]        # 4190 <_IO_stdin_used+0x190>
    2644:	e8 57 eb ff ff       	call   11a0 <fwrite@plt>
    2649:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    264c:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2650:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    2654:	85 c0                	test   eax,eax
    2656:	74 69                	je     26c1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x111>
    2658:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    265c:	31 db                	xor    ebx,ebx
    265e:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    2662:	4c 8d 3d 41 1b 00 00 	lea    r15,[rip+0x1b41]        # 41aa <_IO_stdin_used+0x1aa>
    2669:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2670:	4c 8d 34 5b          	lea    r14,[rbx+rbx*2]
    2674:	89 d9                	mov    ecx,ebx
    2676:	4c 89 fa             	mov    rdx,r15
    2679:	be 02 00 00 00       	mov    esi,0x2
    267e:	49 c1 e6 03          	shl    r14,0x3
    2682:	4c 89 ef             	mov    rdi,r13
    2685:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    268a:	48 83 c3 01          	add    rbx,0x1
    268e:	46 8b 44 30 10       	mov    r8d,DWORD PTR [rax+r14*1+0x10]
    2693:	31 c0                	xor    eax,eax
    2695:	e8 e6 ea ff ff       	call   1180 <__fprintf_chk@plt>
    269a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    269e:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    26a2:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    26a7:	42 8b 54 30 10       	mov    edx,DWORD PTR [rax+r14*1+0x10]
    26ac:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    26b1:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    26b4:	c5 ea 58 d0          	vaddss xmm2,xmm2,xmm0
    26b8:	39 d3                	cmp    ebx,edx
    26ba:	72 b4                	jb     2670 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc0>
    26bc:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    26c1:	c5 ea 5e d0          	vdivss xmm2,xmm2,xmm0
    26c5:	bf 02 00 00 00       	mov    edi,0x2
    26ca:	b8 01 00 00 00       	mov    eax,0x1
    26cf:	48 8d 35 db 1a 00 00 	lea    rsi,[rip+0x1adb]        # 41b1 <_IO_stdin_used+0x1b1>
    26d6:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    26db:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    26df:	e8 4c e9 ff ff       	call   1030 <__printf_chk@plt>
    26e4:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    26e7:	85 f6                	test   esi,esi
    26e9:	0f 84 c1 02 00 00    	je     29b0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x400>
    26ef:	8d 46 ff             	lea    eax,[rsi-0x1]
    26f2:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    26f6:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    26fb:	83 f8 06             	cmp    eax,0x6
    26fe:	0f 86 c1 02 00 00    	jbe    29c5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x415>
    2704:	48 8d 47 10          	lea    rax,[rdi+0x10]
    2708:	c4 e2 7d 18 ea       	vbroadcastss ymm5,xmm2
    270d:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2711:	89 f2                	mov    edx,esi
    2713:	c4 e2 7d 18 25 f4 18 	vbroadcastss ymm4,DWORD PTR [rip+0x18f4]        # 4010 <_IO_stdin_used+0x10>
    271a:	00 00 
    271c:	c1 ea 03             	shr    edx,0x3
    271f:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    2726:	ff ff ff 
    2729:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    272d:	ba ff ff 00 00       	mov    edx,0xffff
    2732:	49 c1 e0 06          	shl    r8,0x6
    2736:	c5 f9 6e da          	vmovd  xmm3,edx
    273a:	49 01 c0             	add    r8,rax
    273d:	c4 e2 7d 58 db       	vpbroadcastd ymm3,xmm3
    2742:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2748:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    274b:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    274e:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    2752:	48 05 c0 00 00 00    	add    rax,0xc0
    2758:	c5 fd 7f 75 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm6
    275d:	48 c1 e2 20          	shl    rdx,0x20
    2761:	49 09 d1             	or     r9,rdx
    2764:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    2768:	4c 89 4d 90          	mov    QWORD PTR [rbp-0x70],r9
    276c:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    2773:	48 21 ca             	and    rdx,rcx
    2776:	4c 09 ca             	or     rdx,r9
    2779:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    277d:	89 d2                	mov    edx,edx
    277f:	49 c1 e1 20          	shl    r9,0x20
    2783:	4c 09 ca             	or     rdx,r9
    2786:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    278a:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    278e:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    2792:	48 21 ca             	and    rdx,rcx
    2795:	4c 09 ca             	or     rdx,r9
    2798:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    279c:	89 d2                	mov    edx,edx
    279e:	49 c1 e1 20          	shl    r9,0x20
    27a2:	4c 09 ca             	or     rdx,r9
    27a5:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    27a9:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
    27ad:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    27b1:	48 21 ca             	and    rdx,rcx
    27b4:	4c 09 ca             	or     rdx,r9
    27b7:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    27bb:	89 d2                	mov    edx,edx
    27bd:	49 c1 e1 20          	shl    r9,0x20
    27c1:	4c 09 ca             	or     rdx,r9
    27c4:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    27c8:	c5 fd 6f 75 90       	vmovdqa ymm6,YMMWORD PTR [rbp-0x70]
    27cd:	c5 e5 db 45 90       	vpand  ymm0,ymm3,YMMWORD PTR [rbp-0x70]
    27d2:	c5 f5 72 d6 10       	vpsrld ymm1,ymm6,0x10
    27d7:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    27db:	c5 f4 59 cc          	vmulps ymm1,ymm1,ymm4
    27df:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    27e3:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    27e7:	c5 fc 5c c5          	vsubps ymm0,ymm0,ymm5
    27eb:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    27ef:	c5 c2 58 c8          	vaddss xmm1,xmm7,xmm0
    27f3:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    27f8:	c5 f8 c6 f0 ff       	vshufps xmm6,xmm0,xmm0,0xff
    27fd:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2801:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    2805:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    280b:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    280f:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2813:	c5 f8 c6 f0 55       	vshufps xmm6,xmm0,xmm0,0x55
    2818:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    281c:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2820:	c5 f8 15 f0          	vunpckhps xmm6,xmm0,xmm0
    2824:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    2829:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    282d:	c5 f2 58 f8          	vaddss xmm7,xmm1,xmm0
    2831:	49 39 c0             	cmp    r8,rax
    2834:	0f 85 0e ff ff ff    	jne    2748 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x198>
    283a:	89 f0                	mov    eax,esi
    283c:	83 e0 f8             	and    eax,0xfffffff8
    283f:	40 f6 c6 07          	test   sil,0x7
    2843:	0f 84 77 01 00 00    	je     29c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x410>
    2849:	c5 f8 77             	vzeroupper
    284c:	89 f1                	mov    ecx,esi
    284e:	29 c1                	sub    ecx,eax
    2850:	8d 51 ff             	lea    edx,[rcx-0x1]
    2853:	83 fa 02             	cmp    edx,0x2
    2856:	0f 86 8b 00 00 00    	jbe    28e7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x337>
    285c:	c4 e2 79 18 1d ab 17 	vbroadcastss xmm3,DWORD PTR [rip+0x17ab]        # 4010 <_IO_stdin_used+0x10>
    2863:	00 00 
    2865:	89 c2                	mov    edx,eax
    2867:	bb ff ff 00 00       	mov    ebx,0xffff
    286c:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2870:	c5 f9 6e cb          	vmovd  xmm1,ebx
    2874:	c5 f9 6e 44 d7 10    	vmovd  xmm0,DWORD PTR [rdi+rdx*8+0x10]
    287a:	c4 e3 79 22 44 d7 28 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x28],0x1
    2881:	01 
    2882:	c5 f9 70 c9 00       	vpshufd xmm1,xmm1,0x0
    2887:	c4 e3 79 22 44 d7 40 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x40],0x2
    288e:	02 
    288f:	c4 e3 79 22 44 d7 58 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x58],0x3
    2896:	03 
    2897:	89 ca                	mov    edx,ecx
    2899:	83 e2 fc             	and    edx,0xfffffffc
    289c:	c5 f9 db c9          	vpand  xmm1,xmm0,xmm1
    28a0:	c5 f9 72 d0 10       	vpsrld xmm0,xmm0,0x10
    28a5:	01 d0                	add    eax,edx
    28a7:	83 e1 03             	and    ecx,0x3
    28aa:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    28ae:	c5 f8 59 c3          	vmulps xmm0,xmm0,xmm3
    28b2:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    28b6:	c5 f0 58 c8          	vaddps xmm1,xmm1,xmm0
    28ba:	c5 e8 c6 c2 00       	vshufps xmm0,xmm2,xmm2,0x0
    28bf:	c5 f0 5c c8          	vsubps xmm1,xmm1,xmm0
    28c3:	c5 f0 59 c9          	vmulps xmm1,xmm1,xmm1
    28c7:	c5 c2 58 c1          	vaddss xmm0,xmm7,xmm1
    28cb:	c5 f0 c6 d9 55       	vshufps xmm3,xmm1,xmm1,0x55
    28d0:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    28d4:	c5 f0 15 d9          	vunpckhps xmm3,xmm1,xmm1
    28d8:	c5 f0 c6 c9 ff       	vshufps xmm1,xmm1,xmm1,0xff
    28dd:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    28e1:	c5 fa 58 f9          	vaddss xmm7,xmm0,xmm1
    28e5:	74 5f                	je     2946 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    28e7:	89 c2                	mov    edx,eax
    28e9:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    28ed:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    28f1:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    28f5:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    28fa:	8d 50 01             	lea    edx,[rax+0x1]
    28fd:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2901:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2905:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2909:	39 f2                	cmp    edx,esi
    290b:	73 39                	jae    2946 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    290d:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2911:	83 c0 02             	add    eax,0x2
    2914:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2918:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    291d:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2921:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2925:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2929:	39 f0                	cmp    eax,esi
    292b:	73 19                	jae    2946 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    292d:	48 8d 04 40          	lea    rax,[rax+rax*2]
    2931:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    2935:	c4 e1 d2 2a c0       	vcvtsi2ss xmm0,xmm5,rax
    293a:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    293e:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2942:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2946:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    294a:	c4 e1 d2 2a c6       	vcvtsi2ss xmm0,xmm5,rsi
    294f:	c5 c2 5e f8          	vdivss xmm7,xmm7,xmm0
    2953:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2957:	c5 f8 2e c7          	vucomiss xmm0,xmm7
    295b:	77 73                	ja     29d0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x420>
    295d:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    2961:	bf 02 00 00 00       	mov    edi,0x2
    2966:	48 8d 35 5e 18 00 00 	lea    rsi,[rip+0x185e]        # 41cb <_IO_stdin_used+0x1cb>
    296d:	b8 01 00 00 00       	mov    eax,0x1
    2972:	c5 c2 5a c7          	vcvtss2sd xmm0,xmm7,xmm7
    2976:	e8 b5 e6 ff ff       	call   1030 <__printf_chk@plt>
    297b:	4c 89 e7             	mov    rdi,r12
    297e:	e8 6d ef ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    2983:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2987:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    298e:	00 00 
    2990:	75 6c                	jne    29fe <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x44e>
    2992:	48 83 c4 40          	add    rsp,0x40
    2996:	5b                   	pop    rbx
    2997:	41 5a                	pop    r10
    2999:	41 5c                	pop    r12
    299b:	41 5d                	pop    r13
    299d:	41 5e                	pop    r14
    299f:	41 5f                	pop    r15
    29a1:	5d                   	pop    rbp
    29a2:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    29a6:	c3                   	ret
    29a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    29ae:	00 00 
    29b0:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    29b4:	c5 c2 5e ff          	vdivss xmm7,xmm7,xmm7
    29b8:	eb a3                	jmp    295d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ad>
    29ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    29c0:	c5 f8 77             	vzeroupper
    29c3:	eb 81                	jmp    2946 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    29c5:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    29c9:	31 c0                	xor    eax,eax
    29cb:	e9 7c fe ff ff       	jmp    284c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29c>
    29d0:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    29d4:	e8 b7 e7 ff ff       	call   1190 <sqrtf@plt>
    29d9:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    29dd:	eb 82                	jmp    2961 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b1>
    29df:	48 8d 0d 9a 1a 00 00 	lea    rcx,[rip+0x1a9a]        # 4480 <_IO_stdin_used+0x480>
    29e6:	ba 44 00 00 00       	mov    edx,0x44
    29eb:	48 8d 35 7d 17 00 00 	lea    rsi,[rip+0x177d]        # 416f <_IO_stdin_used+0x16f>
    29f2:	48 8d 3d 92 17 00 00 	lea    rdi,[rip+0x1792]        # 418b <_IO_stdin_used+0x18b>
    29f9:	e8 72 e6 ff ff       	call   1070 <__assert_fail@plt>
    29fe:	e8 dd e6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2a03:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2a0a:	00 00 00 00 
    2a0e:	66 90                	xchg   ax,ax

0000000000002a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>:
    2a10:	f3 0f 1e fa          	endbr64
    2a14:	41 55                	push   r13
    2a16:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    2a1b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    2a1f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    2a23:	55                   	push   rbp
    2a24:	48 89 e5             	mov    rbp,rsp
    2a27:	41 57                	push   r15
    2a29:	41 56                	push   r14
    2a2b:	41 55                	push   r13
    2a2d:	41 54                	push   r12
    2a2f:	53                   	push   rbx
    2a30:	48 83 ec 68          	sub    rsp,0x68
    2a34:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    2a3b:	44 89 45 8c          	mov    DWORD PTR [rbp-0x74],r8d
    2a3f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2a46:	00 00 
    2a48:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2a4c:	31 c0                	xor    eax,eax
    2a4e:	48 85 ff             	test   rdi,rdi
    2a51:	0f 84 d7 03 00 00    	je     2e2e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41e>
    2a57:	49 89 f7             	mov    r15,rsi
    2a5a:	bf 0a 00 00 00       	mov    edi,0xa
    2a5f:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2a63:	49 89 d5             	mov    r13,rdx
    2a66:	48 89 cb             	mov    rbx,rcx
    2a69:	41 89 ce             	mov    r14d,ecx
    2a6c:	e8 4f e6 ff ff       	call   10c0 <srand@plt>
    2a71:	ba 02 00 00 00       	mov    edx,0x2
    2a76:	4c 89 fe             	mov    rsi,r15
    2a79:	4c 89 e7             	mov    rdi,r12
    2a7c:	e8 af e9 ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2a81:	85 db                	test   ebx,ebx
    2a83:	74 24                	je     2aa9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x99>
    2a85:	89 db                	mov    ebx,ebx
    2a87:	4d 89 ef             	mov    r15,r13
    2a8a:	48 c1 e3 04          	shl    rbx,0x4
    2a8e:	4c 01 eb             	add    rbx,r13
    2a91:	49 8b 37             	mov    rsi,QWORD PTR [r15]
    2a94:	49 8b 57 08          	mov    rdx,QWORD PTR [r15+0x8]
    2a98:	4c 89 e7             	mov    rdi,r12
    2a9b:	49 83 c7 10          	add    r15,0x10
    2a9f:	e8 3c ea ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    2aa4:	49 39 df             	cmp    r15,rbx
    2aa7:	75 e8                	jne    2a91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x81>
    2aa9:	be 04 00 00 00       	mov    esi,0x4
    2aae:	bf 40 42 0f 00       	mov    edi,0xf4240
    2ab3:	e8 c8 e5 ff ff       	call   1080 <calloc@plt>
    2ab8:	be 08 00 00 00       	mov    esi,0x8
    2abd:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    2ac1:	49 89 c7             	mov    r15,rax
    2ac4:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2ac7:	4c 89 fb             	mov    rbx,r15
    2aca:	48 89 c7             	mov    rdi,rax
    2acd:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    2ad1:	48 81 c3 00 09 3d 00 	add    rbx,0x3d0900
    2ad8:	e8 a3 e5 ff ff       	call   1080 <calloc@plt>
    2add:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    2ae1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2ae8:	e8 53 e5 ff ff       	call   1040 <rand@plt>
    2aed:	31 d2                	xor    edx,edx
    2aef:	49 83 c7 04          	add    r15,0x4
    2af3:	41 f7 f6             	div    r14d
    2af6:	41 89 57 fc          	mov    DWORD PTR [r15-0x4],edx
    2afa:	49 39 df             	cmp    r15,rbx
    2afd:	75 e9                	jne    2ae8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd8>
    2aff:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2b02:	85 c0                	test   eax,eax
    2b04:	0f 84 b9 02 00 00    	je     2dc3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b3>
    2b0a:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2b0e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    2b12:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    2b16:	4c 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r14
    2b1d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    2b21:	e8 ea e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2b26:	4c 8b 7d 98          	mov    r15,QWORD PTR [rbp-0x68]
    2b2a:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    2b2e:	66 90                	xchg   ax,ax
    2b30:	41 8b 07             	mov    eax,DWORD PTR [r15]
    2b33:	4c 89 e7             	mov    rdi,r12
    2b36:	49 83 c7 04          	add    r15,0x4
    2b3a:	48 c1 e0 04          	shl    rax,0x4
    2b3e:	4c 01 e8             	add    rax,r13
    2b41:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    2b44:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    2b48:	e8 13 ed ff ff       	call   1860 <_Z20hashMapSearchElementP7HashMap8string_t>
    2b4d:	4c 39 fb             	cmp    rbx,r15
    2b50:	75 de                	jne    2b30 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x120>
    2b52:	e8 b9 e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2b57:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    2b5b:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    2b5f:	49 83 c6 08          	add    r14,0x8
    2b63:	48 29 c8             	sub    rax,rcx
    2b66:	48 89 c1             	mov    rcx,rax
    2b69:	48 b8 cf f7 53 e3 a5 	movabs rax,0x20c49ba5e353f7cf
    2b70:	9b c4 20 
    2b73:	48 f7 e9             	imul   rcx
    2b76:	48 c1 f9 3f          	sar    rcx,0x3f
    2b7a:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    2b7e:	48 c1 fa 07          	sar    rdx,0x7
    2b82:	48 29 ca             	sub    rdx,rcx
    2b85:	c4 e1 d3 2a c2       	vcvtsi2sd xmm0,xmm5,rdx
    2b8a:	c4 c1 7b 11 46 f8    	vmovsd QWORD PTR [r14-0x8],xmm0
    2b90:	49 39 c6             	cmp    r14,rax
    2b93:	75 8c                	jne    2b21 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x111>
    2b95:	4c 8b 85 70 ff ff ff 	mov    r8,QWORD PTR [rbp-0x90]
    2b9c:	4c 89 e7             	mov    rdi,r12
    2b9f:	48 8d 1d 5e 16 00 00 	lea    rbx,[rip+0x165e]        # 4204 <_IO_stdin_used+0x204>
    2ba6:	45 31 e4             	xor    r12d,r12d
    2ba9:	4c 89 45 a8          	mov    QWORD PTR [rbp-0x58],r8
    2bad:	e8 3e ed ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    2bb2:	ba 13 00 00 00       	mov    edx,0x13
    2bb7:	4c 8b bd 78 ff ff ff 	mov    r15,QWORD PTR [rbp-0x88]
    2bbe:	be 01 00 00 00       	mov    esi,0x1
    2bc3:	48 8d 3d 1b 16 00 00 	lea    rdi,[rip+0x161b]        # 41e5 <_IO_stdin_used+0x1e5>
    2bca:	4c 89 f9             	mov    rcx,r15
    2bcd:	e8 ce e5 ff ff       	call   11a0 <fwrite@plt>
    2bd2:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
    2bd6:	4c 8b 6d 80          	mov    r13,QWORD PTR [rbp-0x80]
    2bda:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2bde:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2be2:	4c 89 45 80          	mov    QWORD PTR [rbp-0x80],r8
    2be6:	c4 81 7b 10 04 e6    	vmovsd xmm0,QWORD PTR [r14+r12*8]
    2bec:	44 89 e1             	mov    ecx,r12d
    2bef:	48 89 da             	mov    rdx,rbx
    2bf2:	4c 89 ff             	mov    rdi,r15
    2bf5:	be 02 00 00 00       	mov    esi,0x2
    2bfa:	b8 01 00 00 00       	mov    eax,0x1
    2bff:	c5 fb 11 55 a0       	vmovsd QWORD PTR [rbp-0x60],xmm2
    2c04:	49 83 c4 01          	add    r12,0x1
    2c08:	c5 fb 11 45 a8       	vmovsd QWORD PTR [rbp-0x58],xmm0
    2c0d:	e8 6e e5 ff ff       	call   1180 <__fprintf_chk@plt>
    2c12:	c5 fb 10 45 a8       	vmovsd xmm0,QWORD PTR [rbp-0x58]
    2c17:	c5 fb 10 55 a0       	vmovsd xmm2,QWORD PTR [rbp-0x60]
    2c1c:	c5 eb 58 d0          	vaddsd xmm2,xmm2,xmm0
    2c20:	4d 39 e5             	cmp    r13,r12
    2c23:	75 c1                	jne    2be6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d6>
    2c25:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    2c28:	c5 c1 57 ff          	vxorpd xmm7,xmm7,xmm7
    2c2c:	4c 8b 45 80          	mov    r8,QWORD PTR [rbp-0x80]
    2c30:	c5 c3 2a c1          	vcvtsi2sd xmm0,xmm7,ecx
    2c34:	89 c8                	mov    eax,ecx
    2c36:	83 e8 01             	sub    eax,0x1
    2c39:	c5 eb 5e e8          	vdivsd xmm5,xmm2,xmm0
    2c3d:	83 f8 02             	cmp    eax,0x2
    2c40:	0f 86 be 01 00 00    	jbe    2e04 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f4>
    2c46:	89 c8                	mov    eax,ecx
    2c48:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2c4c:	c4 e2 7d 19 e5       	vbroadcastsd ymm4,xmm5
    2c51:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2c55:	c1 e8 02             	shr    eax,0x2
    2c58:	48 c1 e0 05          	shl    rax,0x5
    2c5c:	48 01 c8             	add    rax,rcx
    2c5f:	c4 c1 7d 10 30       	vmovupd ymm6,YMMWORD PTR [r8]
    2c64:	49 83 c0 20          	add    r8,0x20
    2c68:	c5 cd 5c cc          	vsubpd ymm1,ymm6,ymm4
    2c6c:	c5 f5 59 d1          	vmulpd ymm2,ymm1,ymm1
    2c70:	c5 eb 58 c0          	vaddsd xmm0,xmm2,xmm0
    2c74:	c5 e9 15 da          	vunpckhpd xmm3,xmm2,xmm2
    2c78:	c4 e3 7d 19 d1 01    	vextractf128 xmm1,ymm2,0x1
    2c7e:	c5 e3 58 d8          	vaddsd xmm3,xmm3,xmm0
    2c82:	c5 f3 58 c3          	vaddsd xmm0,xmm1,xmm3
    2c86:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2c8a:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2c8e:	4c 39 c0             	cmp    rax,r8
    2c91:	75 cc                	jne    2c5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x24f>
    2c93:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2c96:	a8 03                	test   al,0x3
    2c98:	0f 84 1d 01 00 00    	je     2dbb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ab>
    2c9e:	83 e0 fc             	and    eax,0xfffffffc
    2ca1:	c5 f8 77             	vzeroupper
    2ca4:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    2ca7:	29 c2                	sub    edx,eax
    2ca9:	83 fa 01             	cmp    edx,0x1
    2cac:	74 2d                	je     2cdb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2cb>
    2cae:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2cb2:	89 c1                	mov    ecx,eax
    2cb4:	c5 fb 12 dd          	vmovddup xmm3,xmm5
    2cb8:	c5 f9 10 0c cf       	vmovupd xmm1,XMMWORD PTR [rdi+rcx*8]
    2cbd:	c5 f1 5c cb          	vsubpd xmm1,xmm1,xmm3
    2cc1:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    2cc5:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2cc9:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2ccd:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2cd1:	f6 c2 01             	test   dl,0x1
    2cd4:	74 1a                	je     2cf0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2cd6:	83 e2 fe             	and    edx,0xfffffffe
    2cd9:	01 d0                	add    eax,edx
    2cdb:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2cdf:	c5 fb 10 0c c1       	vmovsd xmm1,QWORD PTR [rcx+rax*8]
    2ce4:	c5 f3 5c cd          	vsubsd xmm1,xmm1,xmm5
    2ce8:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    2cec:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2cf0:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2cf4:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    2cf8:	c5 c2 2a 4d 8c       	vcvtsi2ss xmm1,xmm7,DWORD PTR [rbp-0x74]
    2cfd:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    2d01:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2d05:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    2d09:	0f 87 43 01 00 00    	ja     2e52 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x442>
    2d0f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    2d13:	c5 fa 5a f8          	vcvtss2sd xmm7,xmm0,xmm0
    2d17:	48 8d 35 ef 14 00 00 	lea    rsi,[rip+0x14ef]        # 420d <_IO_stdin_used+0x20d>
    2d1e:	c4 e1 f9 7e fb       	vmovq  rbx,xmm7
    2d23:	c5 d3 10 c5          	vmovsd xmm0,xmm5,xmm5
    2d27:	bf 02 00 00 00       	mov    edi,0x2
    2d2c:	b8 01 00 00 00       	mov    eax,0x1
    2d31:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2d36:	e8 f5 e2 ff ff       	call   1030 <__printf_chk@plt>
    2d3b:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    2d40:	bf 02 00 00 00       	mov    edi,0x2
    2d45:	48 8d 35 df 14 00 00 	lea    rsi,[rip+0x14df]        # 422b <_IO_stdin_used+0x22b>
    2d4c:	b8 01 00 00 00       	mov    eax,0x1
    2d51:	e8 da e2 ff ff       	call   1030 <__printf_chk@plt>
    2d56:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2d5b:	c4 e1 f9 6e e3       	vmovq  xmm4,rbx
    2d60:	bf 02 00 00 00       	mov    edi,0x2
    2d65:	48 8d 35 dd 14 00 00 	lea    rsi,[rip+0x14dd]        # 4249 <_IO_stdin_used+0x249>
    2d6c:	b8 01 00 00 00       	mov    eax,0x1
    2d71:	c5 db 5e c5          	vdivsd xmm0,xmm4,xmm5
    2d75:	c5 fb 59 05 6b 19 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0x196b]        # 46e8 <_IO_stdin_used+0x6e8>
    2d7c:	00 
    2d7d:	e8 ae e2 ff ff       	call   1030 <__printf_chk@plt>
    2d82:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2d86:	e8 75 e3 ff ff       	call   1100 <free@plt>
    2d8b:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2d8f:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2d96:	00 00 
    2d98:	0f 85 af 00 00 00    	jne    2e4d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43d>
    2d9e:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    2da2:	48 83 c4 68          	add    rsp,0x68
    2da6:	5b                   	pop    rbx
    2da7:	41 5c                	pop    r12
    2da9:	41 5d                	pop    r13
    2dab:	41 5e                	pop    r14
    2dad:	41 5f                	pop    r15
    2daf:	5d                   	pop    rbp
    2db0:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    2db4:	41 5d                	pop    r13
    2db6:	e9 45 e3 ff ff       	jmp    1100 <free@plt>
    2dbb:	c5 f8 77             	vzeroupper
    2dbe:	e9 2d ff ff ff       	jmp    2cf0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2dc3:	4c 89 e7             	mov    rdi,r12
    2dc6:	e8 25 eb ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    2dcb:	ba 13 00 00 00       	mov    edx,0x13
    2dd0:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    2dd7:	be 01 00 00 00       	mov    esi,0x1
    2ddc:	48 8d 3d 02 14 00 00 	lea    rdi,[rip+0x1402]        # 41e5 <_IO_stdin_used+0x1e5>
    2de3:	e8 b8 e3 ff ff       	call   11a0 <fwrite@plt>
    2de8:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2dec:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    2df1:	c5 eb 5e ea          	vdivsd xmm5,xmm2,xmm2
    2df5:	74 18                	je     2e0f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ff>
    2df7:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2dfb:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    2dff:	e9 0b ff ff ff       	jmp    2d0f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ff>
    2e04:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2e08:	31 c0                	xor    eax,eax
    2e0a:	e9 95 fe ff ff       	jmp    2ca4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x294>
    2e0f:	48 8d 0d d2 16 00 00 	lea    rcx,[rip+0x16d2]        # 44e8 <_IO_stdin_used+0x4e8>
    2e16:	ba a9 00 00 00       	mov    edx,0xa9
    2e1b:	48 8d 35 4d 13 00 00 	lea    rsi,[rip+0x134d]        # 416f <_IO_stdin_used+0x16f>
    2e22:	48 8d 3d d0 13 00 00 	lea    rdi,[rip+0x13d0]        # 41f9 <_IO_stdin_used+0x1f9>
    2e29:	e8 42 e2 ff ff       	call   1070 <__assert_fail@plt>
    2e2e:	48 8d 0d 7b 16 00 00 	lea    rcx,[rip+0x167b]        # 44b0 <_IO_stdin_used+0x4b0>
    2e35:	ba 5e 00 00 00       	mov    edx,0x5e
    2e3a:	48 8d 35 2e 13 00 00 	lea    rsi,[rip+0x132e]        # 416f <_IO_stdin_used+0x16f>
    2e41:	48 8d 3d 43 13 00 00 	lea    rdi,[rip+0x1343]        # 418b <_IO_stdin_used+0x18b>
    2e48:	e8 23 e2 ff ff       	call   1070 <__assert_fail@plt>
    2e4d:	e8 8e e2 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2e52:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2e57:	e8 34 e3 ff ff       	call   1190 <sqrtf@plt>
    2e5c:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2e61:	e9 ad fe ff ff       	jmp    2d13 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x303>
    2e66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2e6d:	00 00 00 

0000000000002e70 <_Z4testPFj8string_tE9Filenames8TestDataj>:
    2e70:	f3 0f 1e fa          	endbr64
    2e74:	41 56                	push   r14
    2e76:	48 8d 35 e7 13 00 00 	lea    rsi,[rip+0x13e7]        # 4264 <_IO_stdin_used+0x264>
    2e7d:	45 89 ce             	mov    r14d,r9d
    2e80:	41 55                	push   r13
    2e82:	49 89 cd             	mov    r13,rcx
    2e85:	41 54                	push   r12
    2e87:	4d 89 c4             	mov    r12,r8
    2e8a:	55                   	push   rbp
    2e8b:	48 89 fd             	mov    rbp,rdi
    2e8e:	48 89 d7             	mov    rdi,rdx
    2e91:	53                   	push   rbx
    2e92:	e8 59 e2 ff ff       	call   10f0 <fopen@plt>
    2e97:	45 89 f0             	mov    r8d,r14d
    2e9a:	4c 89 ea             	mov    rdx,r13
    2e9d:	4c 89 e1             	mov    rcx,r12
    2ea0:	48 89 c3             	mov    rbx,rax
    2ea3:	48 89 ee             	mov    rsi,rbp
    2ea6:	48 89 c7             	mov    rdi,rax
    2ea9:	e8 62 fb ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    2eae:	48 89 df             	mov    rdi,rbx
    2eb1:	5b                   	pop    rbx
    2eb2:	5d                   	pop    rbp
    2eb3:	41 5c                	pop    r12
    2eb5:	41 5d                	pop    r13
    2eb7:	41 5e                	pop    r14
    2eb9:	e9 12 e2 ff ff       	jmp    10d0 <fclose@plt>
    2ebe:	66 90                	xchg   ax,ax

0000000000002ec0 <_Z7testAllPKcjS0_>:
    2ec0:	f3 0f 1e fa          	endbr64
    2ec4:	41 57                	push   r15
    2ec6:	41 56                	push   r14
    2ec8:	41 55                	push   r13
    2eca:	41 54                	push   r12
    2ecc:	55                   	push   rbp
    2ecd:	53                   	push   rbx
    2ece:	48 83 ec 28          	sub    rsp,0x28
    2ed2:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ed9:	00 00 
    2edb:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2ee0:	31 c0                	xor    eax,eax
    2ee2:	48 85 ff             	test   rdi,rdi
    2ee5:	0f 84 5f 07 00 00    	je     364a <_Z7testAllPKcjS0_+0x78a>
    2eeb:	48 89 d3             	mov    rbx,rdx
    2eee:	48 85 d2             	test   rdx,rdx
    2ef1:	0f 84 34 07 00 00    	je     362b <_Z7testAllPKcjS0_+0x76b>
    2ef7:	48 8d 3d 16 11 00 00 	lea    rdi,[rip+0x1116]        # 4014 <_IO_stdin_used+0x14>
    2efe:	41 89 f6             	mov    r14d,esi
    2f01:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    2f06:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    2f0d:	00 00 
    2f0f:	e8 1c f5 ff ff       	call   2430 <_Z8readFilePKcPm>
    2f14:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    2f19:	48 89 c7             	mov    rdi,rax
    2f1c:	49 89 c7             	mov    r15,rax
    2f1f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    2f23:	e8 18 f6 ff ff       	call   2540 <_Z10countLinesPcm>
    2f28:	4c 89 ff             	mov    rdi,r15
    2f2b:	41 89 c4             	mov    r12d,eax
    2f2e:	44 89 e6             	mov    esi,r12d
    2f31:	e8 ca e3 ff ff       	call   1300 <_Z16buildStringArrayPcj>
    2f36:	48 8d 35 37 13 00 00 	lea    rsi,[rip+0x1337]        # 4274 <_IO_stdin_used+0x274>
    2f3d:	48 89 df             	mov    rdi,rbx
    2f40:	48 89 c5             	mov    rbp,rax
    2f43:	e8 f8 e1 ff ff       	call   1140 <strcmp@plt>
    2f48:	85 c0                	test   eax,eax
    2f4a:	0f 84 e8 00 00 00    	je     3038 <_Z7testAllPKcjS0_+0x178>
    2f50:	4c 8d 2d 19 13 00 00 	lea    r13,[rip+0x1319]        # 4270 <_IO_stdin_used+0x270>
    2f57:	48 89 df             	mov    rdi,rbx
    2f5a:	4c 89 ee             	mov    rsi,r13
    2f5d:	e8 de e1 ff ff       	call   1140 <strcmp@plt>
    2f62:	85 c0                	test   eax,eax
    2f64:	0f 84 4e 06 00 00    	je     35b8 <_Z7testAllPKcjS0_+0x6f8>
    2f6a:	48 8d 35 09 13 00 00 	lea    rsi,[rip+0x1309]        # 427a <_IO_stdin_used+0x27a>
    2f71:	48 89 df             	mov    rdi,rbx
    2f74:	e8 c7 e1 ff ff       	call   1140 <strcmp@plt>
    2f79:	85 c0                	test   eax,eax
    2f7b:	0f 84 bf 05 00 00    	je     3540 <_Z7testAllPKcjS0_+0x680>
    2f81:	48 8d 35 02 13 00 00 	lea    rsi,[rip+0x1302]        # 428a <_IO_stdin_used+0x28a>
    2f88:	48 89 df             	mov    rdi,rbx
    2f8b:	e8 b0 e1 ff ff       	call   1140 <strcmp@plt>
    2f90:	85 c0                	test   eax,eax
    2f92:	0f 84 30 05 00 00    	je     34c8 <_Z7testAllPKcjS0_+0x608>
    2f98:	48 8d 35 0c 13 00 00 	lea    rsi,[rip+0x130c]        # 42ab <_IO_stdin_used+0x2ab>
    2f9f:	48 89 df             	mov    rdi,rbx
    2fa2:	e8 99 e1 ff ff       	call   1140 <strcmp@plt>
    2fa7:	85 c0                	test   eax,eax
    2fa9:	0f 84 a1 04 00 00    	je     3450 <_Z7testAllPKcjS0_+0x590>
    2faf:	48 8d 35 fd 12 00 00 	lea    rsi,[rip+0x12fd]        # 42b3 <_IO_stdin_used+0x2b3>
    2fb6:	48 89 df             	mov    rdi,rbx
    2fb9:	e8 82 e1 ff ff       	call   1140 <strcmp@plt>
    2fbe:	85 c0                	test   eax,eax
    2fc0:	0f 84 12 04 00 00    	je     33d8 <_Z7testAllPKcjS0_+0x518>
    2fc6:	48 8d 35 07 13 00 00 	lea    rsi,[rip+0x1307]        # 42d4 <_IO_stdin_used+0x2d4>
    2fcd:	48 89 df             	mov    rdi,rbx
    2fd0:	e8 6b e1 ff ff       	call   1140 <strcmp@plt>
    2fd5:	85 c0                	test   eax,eax
    2fd7:	0f 84 83 03 00 00    	je     3360 <_Z7testAllPKcjS0_+0x4a0>
    2fdd:	48 8d 35 00 13 00 00 	lea    rsi,[rip+0x1300]        # 42e4 <_IO_stdin_used+0x2e4>
    2fe4:	48 89 df             	mov    rdi,rbx
    2fe7:	e8 54 e1 ff ff       	call   1140 <strcmp@plt>
    2fec:	85 c0                	test   eax,eax
    2fee:	0f 84 bc 00 00 00    	je     30b0 <_Z7testAllPKcjS0_+0x1f0>
    2ff4:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    2ff8:	e8 03 e1 ff ff       	call   1100 <free@plt>
    2ffd:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3001:	e8 fa e0 ff ff       	call   1100 <free@plt>
    3006:	48 89 ef             	mov    rdi,rbp
    3009:	e8 f2 e0 ff ff       	call   1100 <free@plt>
    300e:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    3013:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    301a:	00 00 
    301c:	0f 85 04 06 00 00    	jne    3626 <_Z7testAllPKcjS0_+0x766>
    3022:	48 83 c4 28          	add    rsp,0x28
    3026:	5b                   	pop    rbx
    3027:	5d                   	pop    rbp
    3028:	41 5c                	pop    r12
    302a:	41 5d                	pop    r13
    302c:	41 5e                	pop    r14
    302e:	41 5f                	pop    r15
    3030:	c3                   	ret
    3031:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3038:	48 8d 3d 19 15 00 00 	lea    rdi,[rip+0x1519]        # 4558 <_IO_stdin_used+0x558>
    303f:	45 89 e5             	mov    r13d,r12d
    3042:	e8 19 e1 ff ff       	call   1160 <puts@plt>
    3047:	48 8d 3d 26 12 00 00 	lea    rdi,[rip+0x1226]        # 4274 <_IO_stdin_used+0x274>
    304e:	e8 0d e1 ff ff       	call   1160 <puts@plt>
    3053:	48 8d 3d 1e 15 00 00 	lea    rdi,[rip+0x151e]        # 4578 <_IO_stdin_used+0x578>
    305a:	e8 01 e1 ff ff       	call   1160 <puts@plt>
    305f:	48 8d 35 fe 11 00 00 	lea    rsi,[rip+0x11fe]        # 4264 <_IO_stdin_used+0x264>
    3066:	48 8d 3d 2b 15 00 00 	lea    rdi,[rip+0x152b]        # 4598 <_IO_stdin_used+0x598>
    306d:	e8 7e e0 ff ff       	call   10f0 <fopen@plt>
    3072:	45 89 f0             	mov    r8d,r14d
    3075:	48 89 ea             	mov    rdx,rbp
    3078:	4c 89 e9             	mov    rcx,r13
    307b:	48 8d 35 9e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe99e]        # 1a20 <_Z15crc32HashString8string_t>
    3082:	49 89 c7             	mov    r15,rax
    3085:	48 89 c7             	mov    rdi,rax
    3088:	e8 83 f9 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    308d:	4c 89 ff             	mov    rdi,r15
    3090:	e8 3b e0 ff ff       	call   10d0 <fclose@plt>
    3095:	48 8d 3d 24 15 00 00 	lea    rdi,[rip+0x1524]        # 45c0 <_IO_stdin_used+0x5c0>
    309c:	e8 bf e0 ff ff       	call   1160 <puts@plt>
    30a1:	e9 aa fe ff ff       	jmp    2f50 <_Z7testAllPKcjS0_+0x90>
    30a6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    30ad:	00 00 00 
    30b0:	4c 8d 3d a1 14 00 00 	lea    r15,[rip+0x14a1]        # 4558 <_IO_stdin_used+0x558>
    30b7:	4c 89 ff             	mov    rdi,r15
    30ba:	e8 a1 e0 ff ff       	call   1160 <puts@plt>
    30bf:	48 8d 3d ae 11 00 00 	lea    rdi,[rip+0x11ae]        # 4274 <_IO_stdin_used+0x274>
    30c6:	e8 95 e0 ff ff       	call   1160 <puts@plt>
    30cb:	48 8d 3d a6 14 00 00 	lea    rdi,[rip+0x14a6]        # 4578 <_IO_stdin_used+0x578>
    30d2:	e8 89 e0 ff ff       	call   1160 <puts@plt>
    30d7:	44 89 e0             	mov    eax,r12d
    30da:	48 8d 35 83 11 00 00 	lea    rsi,[rip+0x1183]        # 4264 <_IO_stdin_used+0x264>
    30e1:	48 8d 3d b0 14 00 00 	lea    rdi,[rip+0x14b0]        # 4598 <_IO_stdin_used+0x598>
    30e8:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    30ed:	e8 fe df ff ff       	call   10f0 <fopen@plt>
    30f2:	45 89 f0             	mov    r8d,r14d
    30f5:	48 89 ea             	mov    rdx,rbp
    30f8:	4c 89 e1             	mov    rcx,r12
    30fb:	48 8d 35 1e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe91e]        # 1a20 <_Z15crc32HashString8string_t>
    3102:	48 89 c3             	mov    rbx,rax
    3105:	48 89 c7             	mov    rdi,rax
    3108:	e8 03 f9 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    310d:	48 89 df             	mov    rdi,rbx
    3110:	48 8d 1d a9 14 00 00 	lea    rbx,[rip+0x14a9]        # 45c0 <_IO_stdin_used+0x5c0>
    3117:	e8 b4 df ff ff       	call   10d0 <fclose@plt>
    311c:	48 89 df             	mov    rdi,rbx
    311f:	e8 3c e0 ff ff       	call   1160 <puts@plt>
    3124:	4c 89 ff             	mov    rdi,r15
    3127:	e8 34 e0 ff ff       	call   1160 <puts@plt>
    312c:	4c 89 ef             	mov    rdi,r13
    312f:	e8 2c e0 ff ff       	call   1160 <puts@plt>
    3134:	48 8d 3d 3d 14 00 00 	lea    rdi,[rip+0x143d]        # 4578 <_IO_stdin_used+0x578>
    313b:	e8 20 e0 ff ff       	call   1160 <puts@plt>
    3140:	4c 8b 64 24 08       	mov    r12,QWORD PTR [rsp+0x8]
    3145:	48 8d 35 18 11 00 00 	lea    rsi,[rip+0x1118]        # 4264 <_IO_stdin_used+0x264>
    314c:	48 8d 3d 8d 14 00 00 	lea    rdi,[rip+0x148d]        # 45e0 <_IO_stdin_used+0x5e0>
    3153:	e8 98 df ff ff       	call   10f0 <fopen@plt>
    3158:	48 8d 35 e1 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9e1]        # 1b40 <_Z19_mm_crc32HashString8string_t>
    315f:	45 89 f0             	mov    r8d,r14d
    3162:	48 89 ea             	mov    rdx,rbp
    3165:	4c 89 e1             	mov    rcx,r12
    3168:	49 89 c5             	mov    r13,rax
    316b:	48 89 c7             	mov    rdi,rax
    316e:	e8 9d f8 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3173:	4c 89 ef             	mov    rdi,r13
    3176:	e8 55 df ff ff       	call   10d0 <fclose@plt>
    317b:	48 89 df             	mov    rdi,rbx
    317e:	e8 dd df ff ff       	call   1160 <puts@plt>
    3183:	4c 89 ff             	mov    rdi,r15
    3186:	e8 d5 df ff ff       	call   1160 <puts@plt>
    318b:	48 8d 3d 42 11 00 00 	lea    rdi,[rip+0x1142]        # 42d4 <_IO_stdin_used+0x2d4>
    3192:	e8 c9 df ff ff       	call   1160 <puts@plt>
    3197:	48 8d 3d da 13 00 00 	lea    rdi,[rip+0x13da]        # 4578 <_IO_stdin_used+0x578>
    319e:	e8 bd df ff ff       	call   1160 <puts@plt>
    31a3:	48 8d 35 ba 10 00 00 	lea    rsi,[rip+0x10ba]        # 4264 <_IO_stdin_used+0x264>
    31aa:	48 8d 3d af 14 00 00 	lea    rdi,[rip+0x14af]        # 4660 <_IO_stdin_used+0x660>
    31b1:	e8 3a df ff ff       	call   10f0 <fopen@plt>
    31b6:	45 89 f0             	mov    r8d,r14d
    31b9:	48 89 ea             	mov    rdx,rbp
    31bc:	4c 89 e1             	mov    rcx,r12
    31bf:	48 8d 35 ca e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9ca]        # 1b90 <_Z25_mm_crc32UnrollHashString8string_t>
    31c6:	49 89 c5             	mov    r13,rax
    31c9:	48 89 c7             	mov    rdi,rax
    31cc:	e8 3f f8 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    31d1:	4c 89 ef             	mov    rdi,r13
    31d4:	e8 f7 de ff ff       	call   10d0 <fclose@plt>
    31d9:	48 89 df             	mov    rdi,rbx
    31dc:	e8 7f df ff ff       	call   1160 <puts@plt>
    31e1:	4c 89 ff             	mov    rdi,r15
    31e4:	e8 77 df ff ff       	call   1160 <puts@plt>
    31e9:	48 8d 3d 92 10 00 00 	lea    rdi,[rip+0x1092]        # 4282 <_IO_stdin_used+0x282>
    31f0:	e8 6b df ff ff       	call   1160 <puts@plt>
    31f5:	48 8d 3d 7c 13 00 00 	lea    rdi,[rip+0x137c]        # 4578 <_IO_stdin_used+0x578>
    31fc:	e8 5f df ff ff       	call   1160 <puts@plt>
    3201:	48 8d 35 5c 10 00 00 	lea    rsi,[rip+0x105c]        # 4264 <_IO_stdin_used+0x264>
    3208:	48 8d 3d 01 14 00 00 	lea    rdi,[rip+0x1401]        # 4610 <_IO_stdin_used+0x610>
    320f:	e8 dc de ff ff       	call   10f0 <fopen@plt>
    3214:	45 89 f0             	mov    r8d,r14d
    3217:	48 89 ea             	mov    rdx,rbp
    321a:	4c 89 e1             	mov    rcx,r12
    321d:	48 8d 35 ac e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9ac]        # 1bd0 <_Z17murmur2HashString8string_t>
    3224:	49 89 c5             	mov    r13,rax
    3227:	48 89 c7             	mov    rdi,rax
    322a:	e8 e1 f7 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    322f:	4c 89 ef             	mov    rdi,r13
    3232:	e8 99 de ff ff       	call   10d0 <fclose@plt>
    3237:	48 89 df             	mov    rdi,rbx
    323a:	e8 21 df ff ff       	call   1160 <puts@plt>
    323f:	4c 89 ff             	mov    rdi,r15
    3242:	e8 19 df ff ff       	call   1160 <puts@plt>
    3247:	48 8d 3d 3c 10 00 00 	lea    rdi,[rip+0x103c]        # 428a <_IO_stdin_used+0x28a>
    324e:	e8 0d df ff ff       	call   1160 <puts@plt>
    3253:	48 8d 3d 1e 13 00 00 	lea    rdi,[rip+0x131e]        # 4578 <_IO_stdin_used+0x578>
    325a:	e8 01 df ff ff       	call   1160 <puts@plt>
    325f:	48 8d 35 fe 0f 00 00 	lea    rsi,[rip+0xffe]        # 4264 <_IO_stdin_used+0x264>
    3266:	48 8d 3d 21 10 00 00 	lea    rdi,[rip+0x1021]        # 428e <_IO_stdin_used+0x28e>
    326d:	e8 7e de ff ff       	call   10f0 <fopen@plt>
    3272:	45 89 f0             	mov    r8d,r14d
    3275:	48 89 ea             	mov    rdx,rbp
    3278:	4c 89 e1             	mov    rcx,r12
    327b:	48 8d 35 fe e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9fe]        # 1c80 <_Z13sumHashString8string_t>
    3282:	49 89 c5             	mov    r13,rax
    3285:	48 89 c7             	mov    rdi,rax
    3288:	e8 83 f7 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    328d:	4c 89 ef             	mov    rdi,r13
    3290:	e8 3b de ff ff       	call   10d0 <fclose@plt>
    3295:	48 89 df             	mov    rdi,rbx
    3298:	e8 c3 de ff ff       	call   1160 <puts@plt>
    329d:	4c 89 ff             	mov    rdi,r15
    32a0:	e8 bb de ff ff       	call   1160 <puts@plt>
    32a5:	48 8d 3d ff 0f 00 00 	lea    rdi,[rip+0xfff]        # 42ab <_IO_stdin_used+0x2ab>
    32ac:	e8 af de ff ff       	call   1160 <puts@plt>
    32b1:	48 8d 3d c0 12 00 00 	lea    rdi,[rip+0x12c0]        # 4578 <_IO_stdin_used+0x578>
    32b8:	e8 a3 de ff ff       	call   1160 <puts@plt>
    32bd:	48 8d 35 a0 0f 00 00 	lea    rsi,[rip+0xfa0]        # 4264 <_IO_stdin_used+0x264>
    32c4:	48 8d 3d 6d 13 00 00 	lea    rdi,[rip+0x136d]        # 4638 <_IO_stdin_used+0x638>
    32cb:	e8 20 de ff ff       	call   10f0 <fopen@plt>
    32d0:	45 89 f0             	mov    r8d,r14d
    32d3:	48 89 ea             	mov    rdx,rbp
    32d6:	4c 89 e1             	mov    rcx,r12
    32d9:	48 8d 35 10 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb10]        # 1df0 <_Z17adler32HashString8string_t>
    32e0:	49 89 c5             	mov    r13,rax
    32e3:	48 89 c7             	mov    rdi,rax
    32e6:	e8 25 f7 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    32eb:	4c 89 ef             	mov    rdi,r13
    32ee:	e8 dd dd ff ff       	call   10d0 <fclose@plt>
    32f3:	48 89 df             	mov    rdi,rbx
    32f6:	e8 65 de ff ff       	call   1160 <puts@plt>
    32fb:	4c 89 ff             	mov    rdi,r15
    32fe:	e8 5d de ff ff       	call   1160 <puts@plt>
    3303:	48 8d 3d a9 0f 00 00 	lea    rdi,[rip+0xfa9]        # 42b3 <_IO_stdin_used+0x2b3>
    330a:	e8 51 de ff ff       	call   1160 <puts@plt>
    330f:	48 8d 3d 62 12 00 00 	lea    rdi,[rip+0x1262]        # 4578 <_IO_stdin_used+0x578>
    3316:	e8 45 de ff ff       	call   1160 <puts@plt>
    331b:	48 8d 35 42 0f 00 00 	lea    rsi,[rip+0xf42]        # 4264 <_IO_stdin_used+0x264>
    3322:	48 8d 3d 8e 0f 00 00 	lea    rdi,[rip+0xf8e]        # 42b7 <_IO_stdin_used+0x2b7>
    3329:	e8 c2 dd ff ff       	call   10f0 <fopen@plt>
    332e:	45 89 f0             	mov    r8d,r14d
    3331:	48 89 ea             	mov    rdx,rbp
    3334:	4c 89 e1             	mov    rcx,r12
    3337:	48 8d 35 32 eb ff ff 	lea    rsi,[rip+0xffffffffffffeb32]        # 1e70 <_Z13elfHashString8string_t>
    333e:	49 89 c5             	mov    r13,rax
    3341:	48 89 c7             	mov    rdi,rax
    3344:	e8 c7 f6 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3349:	4c 89 ef             	mov    rdi,r13
    334c:	e8 7f dd ff ff       	call   10d0 <fclose@plt>
    3351:	48 89 df             	mov    rdi,rbx
    3354:	e8 07 de ff ff       	call   1160 <puts@plt>
    3359:	e9 96 fc ff ff       	jmp    2ff4 <_Z7testAllPKcjS0_+0x134>
    335e:	66 90                	xchg   ax,ax
    3360:	48 8d 3d f1 11 00 00 	lea    rdi,[rip+0x11f1]        # 4558 <_IO_stdin_used+0x558>
    3367:	45 89 e7             	mov    r15d,r12d
    336a:	e8 f1 dd ff ff       	call   1160 <puts@plt>
    336f:	48 8d 3d 5e 0f 00 00 	lea    rdi,[rip+0xf5e]        # 42d4 <_IO_stdin_used+0x2d4>
    3376:	e8 e5 dd ff ff       	call   1160 <puts@plt>
    337b:	48 8d 3d f6 11 00 00 	lea    rdi,[rip+0x11f6]        # 4578 <_IO_stdin_used+0x578>
    3382:	e8 d9 dd ff ff       	call   1160 <puts@plt>
    3387:	48 8d 35 d6 0e 00 00 	lea    rsi,[rip+0xed6]        # 4264 <_IO_stdin_used+0x264>
    338e:	48 8d 3d cb 12 00 00 	lea    rdi,[rip+0x12cb]        # 4660 <_IO_stdin_used+0x660>
    3395:	e8 56 dd ff ff       	call   10f0 <fopen@plt>
    339a:	45 89 f0             	mov    r8d,r14d
    339d:	48 89 ea             	mov    rdx,rbp
    33a0:	4c 89 f9             	mov    rcx,r15
    33a3:	48 8d 35 e6 e7 ff ff 	lea    rsi,[rip+0xffffffffffffe7e6]        # 1b90 <_Z25_mm_crc32UnrollHashString8string_t>
    33aa:	48 89 c7             	mov    rdi,rax
    33ad:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    33b2:	e8 59 f6 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    33b7:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    33bc:	e8 0f dd ff ff       	call   10d0 <fclose@plt>
    33c1:	48 8d 3d f8 11 00 00 	lea    rdi,[rip+0x11f8]        # 45c0 <_IO_stdin_used+0x5c0>
    33c8:	e8 93 dd ff ff       	call   1160 <puts@plt>
    33cd:	e9 0b fc ff ff       	jmp    2fdd <_Z7testAllPKcjS0_+0x11d>
    33d2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    33d8:	48 8d 3d 79 11 00 00 	lea    rdi,[rip+0x1179]        # 4558 <_IO_stdin_used+0x558>
    33df:	45 89 e7             	mov    r15d,r12d
    33e2:	e8 79 dd ff ff       	call   1160 <puts@plt>
    33e7:	48 8d 3d c5 0e 00 00 	lea    rdi,[rip+0xec5]        # 42b3 <_IO_stdin_used+0x2b3>
    33ee:	e8 6d dd ff ff       	call   1160 <puts@plt>
    33f3:	48 8d 3d 7e 11 00 00 	lea    rdi,[rip+0x117e]        # 4578 <_IO_stdin_used+0x578>
    33fa:	e8 61 dd ff ff       	call   1160 <puts@plt>
    33ff:	48 8d 35 5e 0e 00 00 	lea    rsi,[rip+0xe5e]        # 4264 <_IO_stdin_used+0x264>
    3406:	48 8d 3d aa 0e 00 00 	lea    rdi,[rip+0xeaa]        # 42b7 <_IO_stdin_used+0x2b7>
    340d:	e8 de dc ff ff       	call   10f0 <fopen@plt>
    3412:	45 89 f0             	mov    r8d,r14d
    3415:	48 89 ea             	mov    rdx,rbp
    3418:	4c 89 f9             	mov    rcx,r15
    341b:	48 8d 35 4e ea ff ff 	lea    rsi,[rip+0xffffffffffffea4e]        # 1e70 <_Z13elfHashString8string_t>
    3422:	48 89 c7             	mov    rdi,rax
    3425:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    342a:	e8 e1 f5 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    342f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3434:	e8 97 dc ff ff       	call   10d0 <fclose@plt>
    3439:	48 8d 3d 80 11 00 00 	lea    rdi,[rip+0x1180]        # 45c0 <_IO_stdin_used+0x5c0>
    3440:	e8 1b dd ff ff       	call   1160 <puts@plt>
    3445:	e9 7c fb ff ff       	jmp    2fc6 <_Z7testAllPKcjS0_+0x106>
    344a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3450:	48 8d 3d 01 11 00 00 	lea    rdi,[rip+0x1101]        # 4558 <_IO_stdin_used+0x558>
    3457:	45 89 e7             	mov    r15d,r12d
    345a:	e8 01 dd ff ff       	call   1160 <puts@plt>
    345f:	48 8d 3d 45 0e 00 00 	lea    rdi,[rip+0xe45]        # 42ab <_IO_stdin_used+0x2ab>
    3466:	e8 f5 dc ff ff       	call   1160 <puts@plt>
    346b:	48 8d 3d 06 11 00 00 	lea    rdi,[rip+0x1106]        # 4578 <_IO_stdin_used+0x578>
    3472:	e8 e9 dc ff ff       	call   1160 <puts@plt>
    3477:	48 8d 35 e6 0d 00 00 	lea    rsi,[rip+0xde6]        # 4264 <_IO_stdin_used+0x264>
    347e:	48 8d 3d b3 11 00 00 	lea    rdi,[rip+0x11b3]        # 4638 <_IO_stdin_used+0x638>
    3485:	e8 66 dc ff ff       	call   10f0 <fopen@plt>
    348a:	45 89 f0             	mov    r8d,r14d
    348d:	48 89 ea             	mov    rdx,rbp
    3490:	4c 89 f9             	mov    rcx,r15
    3493:	48 8d 35 56 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe956]        # 1df0 <_Z17adler32HashString8string_t>
    349a:	48 89 c7             	mov    rdi,rax
    349d:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    34a2:	e8 69 f5 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    34a7:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    34ac:	e8 1f dc ff ff       	call   10d0 <fclose@plt>
    34b1:	48 8d 3d 08 11 00 00 	lea    rdi,[rip+0x1108]        # 45c0 <_IO_stdin_used+0x5c0>
    34b8:	e8 a3 dc ff ff       	call   1160 <puts@plt>
    34bd:	e9 ed fa ff ff       	jmp    2faf <_Z7testAllPKcjS0_+0xef>
    34c2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    34c8:	48 8d 3d 89 10 00 00 	lea    rdi,[rip+0x1089]        # 4558 <_IO_stdin_used+0x558>
    34cf:	45 89 e7             	mov    r15d,r12d
    34d2:	e8 89 dc ff ff       	call   1160 <puts@plt>
    34d7:	48 8d 3d ac 0d 00 00 	lea    rdi,[rip+0xdac]        # 428a <_IO_stdin_used+0x28a>
    34de:	e8 7d dc ff ff       	call   1160 <puts@plt>
    34e3:	48 8d 3d 8e 10 00 00 	lea    rdi,[rip+0x108e]        # 4578 <_IO_stdin_used+0x578>
    34ea:	e8 71 dc ff ff       	call   1160 <puts@plt>
    34ef:	48 8d 35 6e 0d 00 00 	lea    rsi,[rip+0xd6e]        # 4264 <_IO_stdin_used+0x264>
    34f6:	48 8d 3d 91 0d 00 00 	lea    rdi,[rip+0xd91]        # 428e <_IO_stdin_used+0x28e>
    34fd:	e8 ee db ff ff       	call   10f0 <fopen@plt>
    3502:	45 89 f0             	mov    r8d,r14d
    3505:	48 89 ea             	mov    rdx,rbp
    3508:	4c 89 f9             	mov    rcx,r15
    350b:	48 8d 35 6e e7 ff ff 	lea    rsi,[rip+0xffffffffffffe76e]        # 1c80 <_Z13sumHashString8string_t>
    3512:	48 89 c7             	mov    rdi,rax
    3515:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    351a:	e8 f1 f4 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    351f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3524:	e8 a7 db ff ff       	call   10d0 <fclose@plt>
    3529:	48 8d 3d 90 10 00 00 	lea    rdi,[rip+0x1090]        # 45c0 <_IO_stdin_used+0x5c0>
    3530:	e8 2b dc ff ff       	call   1160 <puts@plt>
    3535:	e9 5e fa ff ff       	jmp    2f98 <_Z7testAllPKcjS0_+0xd8>
    353a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3540:	48 8d 3d 11 10 00 00 	lea    rdi,[rip+0x1011]        # 4558 <_IO_stdin_used+0x558>
    3547:	45 89 e7             	mov    r15d,r12d
    354a:	e8 11 dc ff ff       	call   1160 <puts@plt>
    354f:	48 8d 3d 2c 0d 00 00 	lea    rdi,[rip+0xd2c]        # 4282 <_IO_stdin_used+0x282>
    3556:	e8 05 dc ff ff       	call   1160 <puts@plt>
    355b:	48 8d 3d 16 10 00 00 	lea    rdi,[rip+0x1016]        # 4578 <_IO_stdin_used+0x578>
    3562:	e8 f9 db ff ff       	call   1160 <puts@plt>
    3567:	48 8d 35 f6 0c 00 00 	lea    rsi,[rip+0xcf6]        # 4264 <_IO_stdin_used+0x264>
    356e:	48 8d 3d 9b 10 00 00 	lea    rdi,[rip+0x109b]        # 4610 <_IO_stdin_used+0x610>
    3575:	e8 76 db ff ff       	call   10f0 <fopen@plt>
    357a:	45 89 f0             	mov    r8d,r14d
    357d:	48 89 ea             	mov    rdx,rbp
    3580:	4c 89 f9             	mov    rcx,r15
    3583:	48 8d 35 46 e6 ff ff 	lea    rsi,[rip+0xffffffffffffe646]        # 1bd0 <_Z17murmur2HashString8string_t>
    358a:	48 89 c7             	mov    rdi,rax
    358d:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3592:	e8 79 f4 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3597:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    359c:	e8 2f db ff ff       	call   10d0 <fclose@plt>
    35a1:	48 8d 3d 18 10 00 00 	lea    rdi,[rip+0x1018]        # 45c0 <_IO_stdin_used+0x5c0>
    35a8:	e8 b3 db ff ff       	call   1160 <puts@plt>
    35ad:	e9 cf f9 ff ff       	jmp    2f81 <_Z7testAllPKcjS0_+0xc1>
    35b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    35b8:	48 8d 3d 99 0f 00 00 	lea    rdi,[rip+0xf99]        # 4558 <_IO_stdin_used+0x558>
    35bf:	45 89 e7             	mov    r15d,r12d
    35c2:	e8 99 db ff ff       	call   1160 <puts@plt>
    35c7:	4c 89 ef             	mov    rdi,r13
    35ca:	e8 91 db ff ff       	call   1160 <puts@plt>
    35cf:	48 8d 3d a2 0f 00 00 	lea    rdi,[rip+0xfa2]        # 4578 <_IO_stdin_used+0x578>
    35d6:	e8 85 db ff ff       	call   1160 <puts@plt>
    35db:	48 8d 35 82 0c 00 00 	lea    rsi,[rip+0xc82]        # 4264 <_IO_stdin_used+0x264>
    35e2:	48 8d 3d f7 0f 00 00 	lea    rdi,[rip+0xff7]        # 45e0 <_IO_stdin_used+0x5e0>
    35e9:	e8 02 db ff ff       	call   10f0 <fopen@plt>
    35ee:	45 89 f0             	mov    r8d,r14d
    35f1:	48 89 ea             	mov    rdx,rbp
    35f4:	4c 89 f9             	mov    rcx,r15
    35f7:	48 8d 35 42 e5 ff ff 	lea    rsi,[rip+0xffffffffffffe542]        # 1b40 <_Z19_mm_crc32HashString8string_t>
    35fe:	48 89 c7             	mov    rdi,rax
    3601:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3606:	e8 05 f4 ff ff       	call   2a10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    360b:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3610:	e8 bb da ff ff       	call   10d0 <fclose@plt>
    3615:	48 8d 3d a4 0f 00 00 	lea    rdi,[rip+0xfa4]        # 45c0 <_IO_stdin_used+0x5c0>
    361c:	e8 3f db ff ff       	call   1160 <puts@plt>
    3621:	e9 44 f9 ff ff       	jmp    2f6a <_Z7testAllPKcjS0_+0xaa>
    3626:	e8 b5 da ff ff       	call   10e0 <__stack_chk_fail@plt>
    362b:	48 8d 0d ee 0e 00 00 	lea    rcx,[rip+0xeee]        # 4520 <_IO_stdin_used+0x520>
    3632:	ba 13 00 00 00       	mov    edx,0x13
    3637:	48 8d 35 31 0b 00 00 	lea    rsi,[rip+0xb31]        # 416f <_IO_stdin_used+0x16f>
    363e:	48 8d 3d 21 0c 00 00 	lea    rdi,[rip+0xc21]        # 4266 <_IO_stdin_used+0x266>
    3645:	e8 26 da ff ff       	call   1070 <__assert_fail@plt>
    364a:	48 8d 0d cf 0e 00 00 	lea    rcx,[rip+0xecf]        # 4520 <_IO_stdin_used+0x520>
    3651:	ba 12 00 00 00       	mov    edx,0x12
    3656:	48 8d 35 12 0b 00 00 	lea    rsi,[rip+0xb12]        # 416f <_IO_stdin_used+0x16f>
    365d:	48 8d 3d 02 0b 00 00 	lea    rdi,[rip+0xb02]        # 4166 <_IO_stdin_used+0x166>
    3664:	e8 07 da ff ff       	call   1070 <__assert_fail@plt>
    3669:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000003670 <_Z21standartDeviationTimePdjd>:
    3670:	f3 0f 1e fa          	endbr64
    3674:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    3679:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    367d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    3681:	55                   	push   rbp
    3682:	48 89 e5             	mov    rbp,rsp
    3685:	41 52                	push   r10
    3687:	48 83 ec 08          	sub    rsp,0x8
    368b:	48 85 ff             	test   rdi,rdi
    368e:	0f 84 18 01 00 00    	je     37ac <_Z21standartDeviationTimePdjd+0x13c>
    3694:	89 f1                	mov    ecx,esi
    3696:	85 c9                	test   ecx,ecx
    3698:	0f 84 f2 00 00 00    	je     3790 <_Z21standartDeviationTimePdjd+0x120>
    369e:	8d 41 ff             	lea    eax,[rcx-0x1]
    36a1:	48 89 fa             	mov    rdx,rdi
    36a4:	c5 fb 10 d8          	vmovsd xmm3,xmm0,xmm0
    36a8:	83 f8 02             	cmp    eax,0x2
    36ab:	0f 86 e9 00 00 00    	jbe    379a <_Z21standartDeviationTimePdjd+0x12a>
    36b1:	89 ce                	mov    esi,ecx
    36b3:	c4 e2 7d 19 e8       	vbroadcastsd ymm5,xmm0
    36b8:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    36bc:	48 89 f8             	mov    rax,rdi
    36bf:	c1 ee 02             	shr    esi,0x2
    36c2:	48 c1 e6 05          	shl    rsi,0x5
    36c6:	48 01 fe             	add    rsi,rdi
    36c9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    36d0:	c5 fd 10 30          	vmovupd ymm6,YMMWORD PTR [rax]
    36d4:	48 83 c0 20          	add    rax,0x20
    36d8:	c5 cd 5c cd          	vsubpd ymm1,ymm6,ymm5
    36dc:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    36e0:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    36e4:	c5 f1 15 d1          	vunpckhpd xmm2,xmm1,xmm1
    36e8:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    36ee:	c5 fb 58 c2          	vaddsd xmm0,xmm0,xmm2
    36f2:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    36f6:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    36fa:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    36fe:	48 39 f0             	cmp    rax,rsi
    3701:	75 cd                	jne    36d0 <_Z21standartDeviationTimePdjd+0x60>
    3703:	89 c8                	mov    eax,ecx
    3705:	83 e0 fc             	and    eax,0xfffffffc
    3708:	f6 c1 03             	test   cl,0x3
    370b:	74 7b                	je     3788 <_Z21standartDeviationTimePdjd+0x118>
    370d:	c5 f8 77             	vzeroupper
    3710:	89 ce                	mov    esi,ecx
    3712:	29 c6                	sub    esi,eax
    3714:	83 fe 01             	cmp    esi,0x1
    3717:	74 2a                	je     3743 <_Z21standartDeviationTimePdjd+0xd3>
    3719:	89 c7                	mov    edi,eax
    371b:	c5 fb 12 d3          	vmovddup xmm2,xmm3
    371f:	c5 f9 10 0c fa       	vmovupd xmm1,XMMWORD PTR [rdx+rdi*8]
    3724:	c5 f1 5c ca          	vsubpd xmm1,xmm1,xmm2
    3728:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    372c:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3730:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    3734:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    3738:	40 f6 c6 01          	test   sil,0x1
    373c:	74 16                	je     3754 <_Z21standartDeviationTimePdjd+0xe4>
    373e:	83 e6 fe             	and    esi,0xfffffffe
    3741:	01 f0                	add    eax,esi
    3743:	c5 fb 10 0c c2       	vmovsd xmm1,QWORD PTR [rdx+rax*8]
    3748:	c5 f3 5c cb          	vsubsd xmm1,xmm1,xmm3
    374c:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    3750:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3754:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3758:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    375c:	c4 e1 f2 2a c9       	vcvtsi2ss xmm1,xmm1,rcx
    3761:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    3765:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    3769:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    376d:	77 36                	ja     37a5 <_Z21standartDeviationTimePdjd+0x135>
    376f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    3773:	4c 8b 55 f8          	mov    r10,QWORD PTR [rbp-0x8]
    3777:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    377b:	c9                   	leave
    377c:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    3780:	c3                   	ret
    3781:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3788:	c5 f8 77             	vzeroupper
    378b:	eb c7                	jmp    3754 <_Z21standartDeviationTimePdjd+0xe4>
    378d:	0f 1f 00             	nop    DWORD PTR [rax]
    3790:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3794:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    3798:	eb d5                	jmp    376f <_Z21standartDeviationTimePdjd+0xff>
    379a:	31 c0                	xor    eax,eax
    379c:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    37a0:	e9 6b ff ff ff       	jmp    3710 <_Z21standartDeviationTimePdjd+0xa0>
    37a5:	e8 e6 d9 ff ff       	call   1190 <sqrtf@plt>
    37aa:	eb c7                	jmp    3773 <_Z21standartDeviationTimePdjd+0x103>
    37ac:	48 8d 0d 35 0d 00 00 	lea    rcx,[rip+0xd35]        # 44e8 <_IO_stdin_used+0x4e8>
    37b3:	ba a9 00 00 00       	mov    edx,0xa9
    37b8:	48 8d 35 b0 09 00 00 	lea    rsi,[rip+0x9b0]        # 416f <_IO_stdin_used+0x16f>
    37bf:	48 8d 3d 33 0a 00 00 	lea    rdi,[rip+0xa33]        # 41f9 <_IO_stdin_used+0x1f9>
    37c6:	e8 a5 d8 ff ff       	call   1070 <__assert_fail@plt>
    37cb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

00000000000037d0 <_Z27standartDeviationCollisionsP7HashMapf>:
    37d0:	f3 0f 1e fa          	endbr64
    37d4:	41 55                	push   r13
    37d6:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    37db:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    37df:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    37e3:	55                   	push   rbp
    37e4:	48 89 e5             	mov    rbp,rsp
    37e7:	41 55                	push   r13
    37e9:	48 83 ec 28          	sub    rsp,0x28
    37ed:	48 85 ff             	test   rdi,rdi
    37f0:	0f 84 d7 02 00 00    	je     3acd <_Z27standartDeviationCollisionsP7HashMapf+0x2fd>
    37f6:	8b 77 08             	mov    esi,DWORD PTR [rdi+0x8]
    37f9:	85 f6                	test   esi,esi
    37fb:	0f 84 87 02 00 00    	je     3a88 <_Z27standartDeviationCollisionsP7HashMapf+0x2b8>
    3801:	8d 46 ff             	lea    eax,[rsi-0x1]
    3804:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3807:	c5 f8 28 e0          	vmovaps xmm4,xmm0
    380b:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    380f:	83 f8 06             	cmp    eax,0x6
    3812:	0f 86 95 02 00 00    	jbe    3aad <_Z27standartDeviationCollisionsP7HashMapf+0x2dd>
    3818:	48 8d 47 10          	lea    rax,[rdi+0x10]
    381c:	c4 e2 7d 18 f0       	vbroadcastss ymm6,xmm0
    3821:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3826:	89 f2                	mov    edx,esi
    3828:	c4 e2 7d 18 2d df 07 	vbroadcastss ymm5,DWORD PTR [rip+0x7df]        # 4010 <_IO_stdin_used+0x10>
    382f:	00 00 
    3831:	c1 ea 03             	shr    edx,0x3
    3834:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    383b:	ff ff ff 
    383e:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    3842:	ba ff ff 00 00       	mov    edx,0xffff
    3847:	49 c1 e0 06          	shl    r8,0x6
    384b:	c5 f9 6e d2          	vmovd  xmm2,edx
    384f:	49 01 c0             	add    r8,rax
    3852:	c4 e2 7d 58 d2       	vpbroadcastd ymm2,xmm2
    3857:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    385e:	00 00 
    3860:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    3863:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    3866:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    386a:	48 05 c0 00 00 00    	add    rax,0xc0
    3870:	c5 fd 7f 7d d0       	vmovdqa YMMWORD PTR [rbp-0x30],ymm7
    3875:	48 c1 e2 20          	shl    rdx,0x20
    3879:	49 09 d1             	or     r9,rdx
    387c:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    3880:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    3884:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    388b:	48 21 ca             	and    rdx,rcx
    388e:	4c 09 ca             	or     rdx,r9
    3891:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    3895:	89 d2                	mov    edx,edx
    3897:	49 c1 e1 20          	shl    r9,0x20
    389b:	4c 09 ca             	or     rdx,r9
    389e:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    38a2:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    38a6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    38aa:	48 21 ca             	and    rdx,rcx
    38ad:	4c 09 ca             	or     rdx,r9
    38b0:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    38b4:	89 d2                	mov    edx,edx
    38b6:	49 c1 e1 20          	shl    r9,0x20
    38ba:	4c 09 ca             	or     rdx,r9
    38bd:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    38c1:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    38c5:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    38c9:	48 21 ca             	and    rdx,rcx
    38cc:	4c 09 ca             	or     rdx,r9
    38cf:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    38d3:	89 d2                	mov    edx,edx
    38d5:	49 c1 e1 20          	shl    r9,0x20
    38d9:	4c 09 ca             	or     rdx,r9
    38dc:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    38e0:	c5 fd 6f 7d d0       	vmovdqa ymm7,YMMWORD PTR [rbp-0x30]
    38e5:	c5 ed db 45 d0       	vpand  ymm0,ymm2,YMMWORD PTR [rbp-0x30]
    38ea:	c5 f5 72 d7 10       	vpsrld ymm1,ymm7,0x10
    38ef:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    38f3:	c5 f4 59 cd          	vmulps ymm1,ymm1,ymm5
    38f7:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    38fb:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    38ff:	c5 fc 5c c6          	vsubps ymm0,ymm0,ymm6
    3903:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    3907:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    390b:	c5 78 c6 c0 55       	vshufps xmm8,xmm0,xmm0,0x55
    3910:	c5 f8 c6 f8 ff       	vshufps xmm7,xmm0,xmm0,0xff
    3915:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    391a:	c5 78 15 c0          	vunpckhps xmm8,xmm0,xmm0
    391e:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    3924:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    3929:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    392d:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    3932:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    3936:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    393a:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    393e:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3943:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    3947:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    394b:	49 39 c0             	cmp    r8,rax
    394e:	0f 85 0c ff ff ff    	jne    3860 <_Z27standartDeviationCollisionsP7HashMapf+0x90>
    3954:	89 f0                	mov    eax,esi
    3956:	83 e0 f8             	and    eax,0xfffffff8
    3959:	40 f6 c6 07          	test   sil,0x7
    395d:	0f 84 45 01 00 00    	je     3aa8 <_Z27standartDeviationCollisionsP7HashMapf+0x2d8>
    3963:	c5 f8 77             	vzeroupper
    3966:	89 f1                	mov    ecx,esi
    3968:	29 c1                	sub    ecx,eax
    396a:	8d 51 ff             	lea    edx,[rcx-0x1]
    396d:	83 fa 02             	cmp    edx,0x2
    3970:	0f 86 8b 00 00 00    	jbe    3a01 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    3976:	c4 e2 79 18 15 91 06 	vbroadcastss xmm2,DWORD PTR [rip+0x691]        # 4010 <_IO_stdin_used+0x10>
    397d:	00 00 
    397f:	89 c2                	mov    edx,eax
    3981:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3985:	c5 f9 6e 4c d7 10    	vmovd  xmm1,DWORD PTR [rdi+rdx*8+0x10]
    398b:	c4 e3 71 22 4c d7 28 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x28],0x1
    3992:	01 
    3993:	c4 e3 71 22 4c d7 40 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x40],0x2
    399a:	02 
    399b:	c4 e3 71 22 4c d7 58 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x58],0x3
    39a2:	03 
    39a3:	ba ff ff 00 00       	mov    edx,0xffff
    39a8:	c5 f9 6e c2          	vmovd  xmm0,edx
    39ac:	89 ca                	mov    edx,ecx
    39ae:	c5 f9 70 c0 00       	vpshufd xmm0,xmm0,0x0
    39b3:	83 e2 fc             	and    edx,0xfffffffc
    39b6:	c5 f1 db c0          	vpand  xmm0,xmm1,xmm0
    39ba:	c5 f1 72 d1 10       	vpsrld xmm1,xmm1,0x10
    39bf:	01 d0                	add    eax,edx
    39c1:	83 e1 03             	and    ecx,0x3
    39c4:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    39c8:	c5 f0 59 ca          	vmulps xmm1,xmm1,xmm2
    39cc:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    39d0:	c5 f8 58 c1          	vaddps xmm0,xmm0,xmm1
    39d4:	c5 d8 c6 cc 00       	vshufps xmm1,xmm4,xmm4,0x0
    39d9:	c5 f8 5c c1          	vsubps xmm0,xmm0,xmm1
    39dd:	c5 f8 59 c0          	vmulps xmm0,xmm0,xmm0
    39e1:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    39e5:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    39ea:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    39ee:	c5 f8 15 d0          	vunpckhps xmm2,xmm0,xmm0
    39f2:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    39f7:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    39fb:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    39ff:	74 5b                	je     3a5c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a01:	89 c2                	mov    edx,eax
    3a03:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a07:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a0b:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3a10:	8d 50 01             	lea    edx,[rax+0x1]
    3a13:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a17:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a1b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a1f:	39 f2                	cmp    edx,esi
    3a21:	73 39                	jae    3a5c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a23:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a27:	83 c0 02             	add    eax,0x2
    3a2a:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a2e:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3a33:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a37:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a3b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a3f:	39 f0                	cmp    eax,esi
    3a41:	73 19                	jae    3a5c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a43:	48 8d 04 40          	lea    rax,[rax+rax*2]
    3a47:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    3a4b:	c4 e1 e2 2a c0       	vcvtsi2ss xmm0,xmm3,rax
    3a50:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a54:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a58:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a5c:	c4 e1 e2 2a de       	vcvtsi2ss xmm3,xmm3,rsi
    3a61:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3a65:	c5 3a 5e c3          	vdivss xmm8,xmm8,xmm3
    3a69:	c4 c1 78 2e c0       	vucomiss xmm0,xmm8
    3a6e:	77 49                	ja     3ab9 <_Z27standartDeviationCollisionsP7HashMapf+0x2e9>
    3a70:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3a74:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3a79:	c9                   	leave
    3a7a:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3a7e:	41 5d                	pop    r13
    3a80:	c3                   	ret
    3a81:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3a88:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3a8d:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3a91:	c4 41 3a 5e c0       	vdivss xmm8,xmm8,xmm8
    3a96:	c9                   	leave
    3a97:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3a9b:	41 5d                	pop    r13
    3a9d:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3aa2:	c3                   	ret
    3aa3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3aa8:	c5 f8 77             	vzeroupper
    3aab:	eb af                	jmp    3a5c <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3aad:	31 c0                	xor    eax,eax
    3aaf:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3ab4:	e9 ad fe ff ff       	jmp    3966 <_Z27standartDeviationCollisionsP7HashMapf+0x196>
    3ab9:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3abd:	c5 78 29 c0          	vmovaps xmm0,xmm8
    3ac1:	c9                   	leave
    3ac2:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3ac6:	41 5d                	pop    r13
    3ac8:	e9 c3 d6 ff ff       	jmp    1190 <sqrtf@plt>
    3acd:	48 8d 0d c4 0b 00 00 	lea    rcx,[rip+0xbc4]        # 4698 <_IO_stdin_used+0x698>
    3ad4:	ba b5 00 00 00       	mov    edx,0xb5
    3ad9:	48 8d 35 8f 06 00 00 	lea    rsi,[rip+0x68f]        # 416f <_IO_stdin_used+0x16f>
    3ae0:	48 8d 3d 3b 05 00 00 	lea    rdi,[rip+0x53b]        # 4022 <_IO_stdin_used+0x22>
    3ae7:	e8 84 d5 ff ff       	call   1070 <__assert_fail@plt>
    3aec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003af0 <my_strcmp>:
    3af0:	c5 fd 6f 07          	vmovdqa ymm0,YMMWORD PTR [rdi]
    3af4:	c5 fd 6f 0e          	vmovdqa ymm1,YMMWORD PTR [rsi]
    3af8:	c4 e2 7d 29 d1       	vpcmpeqq ymm2,ymm0,ymm1
    3afd:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    3b01:	f7 d0                	not    eax
    3b03:	c3                   	ret

Disassembly of section .fini:

0000000000003b04 <_fini>:
    3b04:	f3 0f 1e fa          	endbr64
    3b08:	48 83 ec 08          	sub    rsp,0x8
    3b0c:	48 83 c4 08          	add    rsp,0x8
    3b10:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    DWORD PTR [rax],eax
    4002:	02 00                	add    al,BYTE PTR [rax]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    4009:	00 70 41             	add    BYTE PTR [rax+0x41],dh
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	00 3f                	add    BYTE PTR [rdi],bh
    4010:	00 00                	add    BYTE PTR [rax],al
    4012:	80 47 62 6f          	add    BYTE PTR [rdi+0x62],0x6f
    4016:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4017:	6b 2e 74             	imul   ebp,DWORD PTR [rsi],0x74
    401a:	78 74                	js     4090 <_IO_stdin_used+0x90>
    401c:	00 74 65 78          	add    BYTE PTR [rbp+riz*2+0x78],dh
    4020:	74 00                	je     4022 <_IO_stdin_used+0x22>
    4022:	68 61 73 68 4d       	push   0x4d687361
    4027:	61                   	(bad)
    4028:	70 00                	jo     402a <_IO_stdin_used+0x2a>
    402a:	76 6f                	jbe    409b <_IO_stdin_used+0x9b>
    402c:	69 64 20 68 61 73 68 	imul   esp,DWORD PTR [rax+riz*1+0x68],0x4d687361
    4033:	4d 
    4034:	61                   	(bad)
    4035:	70 44                	jo     407b <_IO_stdin_used+0x7b>
    4037:	74 6f                	je     40a8 <_IO_stdin_used+0xa8>
    4039:	72 28                	jb     4063 <_IO_stdin_used+0x63>
    403b:	48 61                	rex.W (bad)
    403d:	73 68                	jae    40a7 <_IO_stdin_used+0xa7>
    403f:	4d 61                	rex.WRB (bad)
    4041:	70 2a                	jo     406d <_IO_stdin_used+0x6d>
    4043:	29 00                	sub    DWORD PTR [rax],eax
    4045:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4054:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4059:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    405e:	3d 00 4e 55 4c       	cmp    eax,0x4c554e00
    4063:	4c 00 48 4d          	rex.WR add BYTE PTR [rax+0x4d],r9b
    4067:	20 43 41             	and    BYTE PTR [rbx+0x41],al
    406a:	50                   	push   rax
    406b:	41                   	rex.B
    406c:	43                   	rex.XB
    406d:	49 54                	rex.WB push r12
    406f:	59                   	pop    rcx
    4070:	3a 20                	cmp    ah,BYTE PTR [rax]
    4072:	25 64 0a 00 4c       	and    eax,0x4c000a64
    4077:	4f                   	rex.WRXB
    4078:	41                   	rex.B
    4079:	44 20 46 41          	and    BYTE PTR [rsi+0x41],r8b
    407d:	43 54                	rex.XB push r12
    407f:	4f 52                	rex.WRXB push r10
    4081:	3a 20                	cmp    ah,BYTE PTR [rax]
    4083:	25 66 0a 00 48       	and    eax,0x48000a66
    4088:	41 53                	push   r11
    408a:	48                   	rex.W
    408b:	4d                   	rex.WRB
    408c:	41 50                	push   r8
    408e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    4091:	58                   	pop    rax
    4092:	3a 20                	cmp    ah,BYTE PTR [rax]
    4094:	25 64 0a 00 2f       	and    eax,0x2f000a64
    4099:	72 6f                	jb     410a <_IO_stdin_used+0x10a>
    409b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    409c:	74 2f                	je     40cd <_IO_stdin_used+0xcd>
    409e:	68 61 73 68 4d       	push   0x4d687361
    40a3:	61                   	(bad)
    40a4:	70 2f                	jo     40d5 <_IO_stdin_used+0xd5>
    40a6:	73 72                	jae    411a <_IO_stdin_used+0x11a>
    40a8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    40ab:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
    40b2:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
    40b6:	74 00                	je     40b8 <_IO_stdin_used+0xb8>
    40b8:	76 6f                	jbe    4129 <_IO_stdin_used+0x129>
    40ba:	69 64 20 6c 69 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x44747369
    40c1:	44 
    40c2:	74 6f                	je     4133 <_IO_stdin_used+0x133>
    40c4:	72 28                	jb     40ee <_IO_stdin_used+0xee>
    40c6:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x7600292a
    40cd:	76 
    40ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40cf:	69 64 20 64 65 62 75 	imul   esp,DWORD PTR [rax+riz*1+0x64],0x67756265
    40d6:	67 
    40d7:	50                   	push   rax
    40d8:	72 69                	jb     4143 <_IO_stdin_used+0x143>
    40da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40db:	74 28                	je     4105 <_IO_stdin_used+0x105>
    40dd:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x4300292a
    40e4:	43 
    40e5:	41 50                	push   r8
    40e7:	41                   	rex.B
    40e8:	43                   	rex.XB
    40e9:	49 54                	rex.WB push r12
    40eb:	59                   	pop    rcx
    40ec:	3a 20                	cmp    ah,BYTE PTR [rax]
    40ee:	25 75 0a 00 54       	and    eax,0x54000a75
    40f3:	41                   	rex.B
    40f4:	49                   	rex.WB
    40f5:	4c 5f                	rex.WR pop rdi
    40f7:	49                   	rex.WB
    40f8:	4e 58                	rex.WRX pop rax
    40fa:	3a 20                	cmp    ah,BYTE PTR [rax]
    40fc:	25 75 0a 00 45       	and    eax,0x45000a75
    4101:	4c                   	rex.WR
    4102:	45                   	rex.RB
    4103:	4d 5f                	rex.WRB pop r15
    4105:	41                   	rex.B
    4106:	4d 20 3a             	rex.WRB and BYTE PTR [r10],r15b
    4109:	20 25 75 0a 00 49    	and    BYTE PTR [rip+0x49000a75],ah        # 49004b84 <_end+0x48ffeb6c>
    410f:	4e 58                	rex.WRX pop rax
    4111:	53                   	push   rbx
    4112:	3a 20                	cmp    ah,BYTE PTR [rax]
    4114:	20 20                	and    BYTE PTR [rax],ah
    4116:	20 20                	and    BYTE PTR [rax],ah
    4118:	00 25 75 20 00 4e    	add    BYTE PTR [rip+0x4e002075],ah        # 4e006193 <_end+0x4e00017b>
    411e:	45 58                	rex.RB pop r8
    4120:	54                   	push   rsp
    4121:	3a 20                	cmp    ah,BYTE PTR [rax]
    4123:	20 20                	and    BYTE PTR [rax],ah
    4125:	20 20                	and    BYTE PTR [rax],ah
    4127:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    412a:	45 56                	rex.RB push r14
    412c:	3a 20                	cmp    ah,BYTE PTR [rax]
    412e:	20 20                	and    BYTE PTR [rax],ah
    4130:	20 20                	and    BYTE PTR [rax],ah
    4132:	00 48 41             	add    BYTE PTR [rax+0x41],cl
    4135:	53                   	push   rbx
    4136:	48 3a 20             	rex.W cmp spl,BYTE PTR [rax]
    4139:	20 20                	and    BYTE PTR [rax],ah
    413b:	20 20                	and    BYTE PTR [rax],ah
    413d:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    4140:	52                   	push   rdx
    4141:	3a 00                	cmp    al,BYTE PTR [rax]
    4143:	25 2d 33 32 73       	and    eax,0x7332332d
    4148:	0a 00                	or     al,BYTE PTR [rax]
    414a:	2f                   	(bad)
    414b:	72 6f                	jb     41bc <_IO_stdin_used+0x1bc>
    414d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    414e:	74 2f                	je     417f <_IO_stdin_used+0x17f>
    4150:	68 61 73 68 4d       	push   0x4d687361
    4155:	61                   	(bad)
    4156:	70 2f                	jo     4187 <_IO_stdin_used+0x187>
    4158:	73 72                	jae    41cc <_IO_stdin_used+0x1cc>
    415a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    415c:	75 74                	jne    41d2 <_IO_stdin_used+0x1d2>
    415e:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
    4165:	00 
    4166:	66 69 6c 65 6e 61 6d 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
    416d:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    4170:	72 6f                	jb     41e1 <_IO_stdin_used+0x1e1>
    4172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4173:	74 2f                	je     41a4 <_IO_stdin_used+0x1a4>
    4175:	68 61 73 68 4d       	push   0x4d687361
    417a:	61                   	(bad)
    417b:	70 2f                	jo     41ac <_IO_stdin_used+0x1ac>
    417d:	73 72                	jae    41f1 <_IO_stdin_used+0x1f1>
    417f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    4181:	74 65                	je     41e8 <_IO_stdin_used+0x1e8>
    4183:	73 74                	jae    41f9 <_IO_stdin_used+0x1f9>
    4185:	73 2e                	jae    41b5 <_IO_stdin_used+0x1b5>
    4187:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    418a:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    418d:	6c                   	ins    BYTE PTR es:[rdi],dx
    418e:	65 00 42 75          	add    BYTE PTR gs:[rdx+0x75],al
    4192:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    4195:	74 20                	je     41b7 <_IO_stdin_used+0x1b7>
    4197:	69 6e 64 65 78 2c 42 	imul   ebp,DWORD PTR [rsi+0x64],0x422c7865
    419e:	75 63                	jne    4203 <_IO_stdin_used+0x203>
    41a0:	6b 65 74 20          	imul   esp,DWORD PTR [rbp+0x74],0x20
    41a4:	73 69                	jae    420f <_IO_stdin_used+0x20f>
    41a6:	7a 65                	jp     420d <_IO_stdin_used+0x20d>
    41a8:	0a 00                	or     al,BYTE PTR [rax]
    41aa:	25 75 2c 25 75       	and    eax,0x75252c75
    41af:	0a 00                	or     al,BYTE PTR [rax]
    41b1:	41 56                	push   r14
    41b3:	45 52                	rex.RB push r10
    41b5:	41                   	rex.B
    41b6:	47                   	rex.RXB
    41b7:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    41bb:	4c                   	rex.WR
    41bc:	4c                   	rex.WR
    41bd:	49 53                	rex.WB push r11
    41bf:	49                   	rex.WB
    41c0:	4f                   	rex.WRXB
    41c1:	4e 53                	rex.WRX push rbx
    41c3:	3a 20                	cmp    ah,BYTE PTR [rax]
    41c5:	25 2e 32 66 0a       	and    eax,0xa66322e
    41ca:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    41cd:	41                   	rex.B
    41ce:	4e                   	rex.WRX
    41cf:	44                   	rex.R
    41d0:	41 52                	push   r10
    41d2:	54                   	push   rsp
    41d3:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    41d7:	49                   	rex.WB
    41d8:	41 54                	push   r12
    41da:	49                   	rex.WB
    41db:	4f                   	rex.WRXB
    41dc:	4e 3a 20             	rex.WRX cmp r12b,BYTE PTR [rax]
    41df:	25 2e 32 66 0a       	and    eax,0xa66322e
    41e4:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    41e8:	74 20                	je     420a <_IO_stdin_used+0x20a>
    41ea:	69 6e 64 65 78 2c 54 	imul   ebp,DWORD PTR [rsi+0x64],0x542c7865
    41f1:	69 6d 65 20 6d 73 0a 	imul   ebp,DWORD PTR [rbp+0x65],0xa736d20
    41f8:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    41fc:	65 5f                	gs pop rdi
    41fe:	61                   	(bad)
    41ff:	72 72                	jb     4273 <_IO_stdin_used+0x273>
    4201:	61                   	(bad)
    4202:	79 00                	jns    4204 <_IO_stdin_used+0x204>
    4204:	25 75 2c 25 2e       	and    eax,0x2e252c75
    4209:	32 66 0a             	xor    ah,BYTE PTR [rsi+0xa]
    420c:	00 41 56             	add    BYTE PTR [rcx+0x56],al
    420f:	45 52                	rex.RB push r10
    4211:	41                   	rex.B
    4212:	47                   	rex.RXB
    4213:	45 20 53 45          	and    BYTE PTR [r11+0x45],r10b
    4217:	41 52                	push   r10
    4219:	43                   	rex.XB
    421a:	48 20 54 49 4d       	rex.W and BYTE PTR [rcx+rcx*2+0x4d],dl
    421f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    4222:	25 2e 32 66 20       	and    eax,0x2066322e
    4227:	6d                   	ins    DWORD PTR es:[rdi],dx
    4228:	73 0a                	jae    4234 <_IO_stdin_used+0x234>
    422a:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    422d:	41                   	rex.B
    422e:	4e                   	rex.WRX
    422f:	44                   	rex.R
    4230:	41 52                	push   r10
    4232:	54                   	push   rsp
    4233:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    4237:	49                   	rex.WB
    4238:	41 54                	push   r12
    423a:	49                   	rex.WB
    423b:	4f                   	rex.WRXB
    423c:	4e 20 3a             	rex.WRX and BYTE PTR [rdx],r15b
    423f:	20 25 2e 32 66 20    	and    BYTE PTR [rip+0x2066322e],ah        # 20667473 <_end+0x2066145b>
    4245:	6d                   	ins    DWORD PTR es:[rdi],dx
    4246:	73 0a                	jae    4252 <_IO_stdin_used+0x252>
    4248:	00 50 45             	add    BYTE PTR [rax+0x45],dl
    424b:	52                   	push   rdx
    424c:	43                   	rex.XB
    424d:	45                   	rex.RB
    424e:	4e 54                	rex.WRX push rsp
    4250:	41                   	rex.B
    4251:	47                   	rex.RXB
    4252:	45 20 4f 46          	and    BYTE PTR [r15+0x46],r9b
    4256:	20 45 52             	and    BYTE PTR [rbp+0x52],al
    4259:	52                   	push   rdx
    425a:	4f 52                	rex.WRXB push r10
    425c:	3a 20                	cmp    ah,BYTE PTR [rax]
    425e:	25 2e 32 66 0a       	and    eax,0xa66322e
    4263:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    4266:	74 65                	je     42cd <_IO_stdin_used+0x2cd>
    4268:	73 74                	jae    42de <_IO_stdin_used+0x2de>
    426a:	5f                   	pop    rdi
    426b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    426c:	61                   	(bad)
    426d:	6d                   	ins    DWORD PTR es:[rdi],dx
    426e:	65 00 5f 6d          	add    BYTE PTR gs:[rdi+0x6d],bl
    4272:	6d                   	ins    DWORD PTR es:[rdi],dx
    4273:	5f                   	pop    rdi
    4274:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4277:	33 32                	xor    esi,DWORD PTR [rdx]
    4279:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    427c:	72 6d                	jb     42eb <_IO_stdin_used+0x2eb>
    427e:	75 72                	jne    42f2 <_IO_stdin_used+0x2f2>
    4280:	33 00                	xor    eax,DWORD PTR [rax]
    4282:	6d                   	ins    DWORD PTR es:[rdi],dx
    4283:	75 72                	jne    42f7 <_IO_stdin_used+0x2f7>
    4285:	6d                   	ins    DWORD PTR es:[rdi],dx
    4286:	75 72                	jne    42fa <_IO_stdin_used+0x2fa>
    4288:	32 00                	xor    al,BYTE PTR [rax]
    428a:	73 75                	jae    4301 <_IO_stdin_used+0x301>
    428c:	6d                   	ins    DWORD PTR es:[rdi],dx
    428d:	00 70 6c             	add    BYTE PTR [rax+0x6c],dh
    4290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4291:	74 2f                	je     42c2 <_IO_stdin_used+0x2c2>
    4293:	73 75                	jae    430a <_IO_stdin_used+0x30a>
    4295:	6d                   	ins    DWORD PTR es:[rdi],dx
    4296:	2f                   	(bad)
    4297:	73 75                	jae    430e <_IO_stdin_used+0x30e>
    4299:	6d                   	ins    DWORD PTR es:[rdi],dx
    429a:	5f                   	pop    rdi
    429b:	73 65                	jae    4302 <_IO_stdin_used+0x302>
    429d:	61                   	(bad)
    429e:	72 63                	jb     4303 <_IO_stdin_used+0x303>
    42a0:	68 5f 74 69 6d       	push   0x6d69745f
    42a5:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42aa:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    42ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    42ae:	65 72 33             	gs jb  42e4 <_IO_stdin_used+0x2e4>
    42b1:	32 00                	xor    al,BYTE PTR [rax]
    42b3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42b5:	66 00 70 6c          	data16 add BYTE PTR [rax+0x6c],dh
    42b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42ba:	74 2f                	je     42eb <_IO_stdin_used+0x2eb>
    42bc:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42be:	66 2f                	data16 (bad)
    42c0:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42c2:	66 5f                	pop    di
    42c4:	73 65                	jae    432b <_IO_stdin_used+0x32b>
    42c6:	61                   	(bad)
    42c7:	72 63                	jb     432c <_IO_stdin_used+0x32c>
    42c9:	68 5f 74 69 6d       	push   0x6d69745f
    42ce:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42d3:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    42d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    42d7:	5f                   	pop    rdi
    42d8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    42db:	33 32                	xor    esi,DWORD PTR [rdx]
    42dd:	55                   	push   rbp
    42de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42df:	72 6f                	jb     4350 <_IO_stdin_used+0x350>
    42e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e3:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    42e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e7:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    42ea:	72 69                	jb     4355 <_IO_stdin_used+0x355>
    42ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42ed:	67 5f                	addr32 pop rdi
    42ef:	74 2a                	je     431b <_IO_stdin_used+0x31b>
    42f1:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
    42f4:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
    42fb:	6e 
    42fc:	67 41 72 72          	addr32 rex.B jb 4372 <_IO_stdin_used+0x372>
    4300:	61                   	(bad)
    4301:	79 28                	jns    432b <_IO_stdin_used+0x32b>
    4303:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4306:	72 2a                	jb     4332 <_IO_stdin_used+0x332>
    4308:	2c 20                	sub    al,0x20
    430a:	75 69                	jne    4375 <_IO_stdin_used+0x375>
    430c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    430d:	74 33                	je     4342 <_IO_stdin_used+0x342>
    430f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4312:	29 00                	sub    DWORD PTR [rax],eax
    4314:	00 00                	add    BYTE PTR [rax],al
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	2f                   	(bad)
    4319:	72 6f                	jb     438a <_IO_stdin_used+0x38a>
    431b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    431c:	74 2f                	je     434d <_IO_stdin_used+0x34d>
    431e:	68 61 73 68 4d       	push   0x4d687361
    4323:	61                   	(bad)
    4324:	70 2f                	jo     4355 <_IO_stdin_used+0x355>
    4326:	73 72                	jae    439a <_IO_stdin_used+0x39a>
    4328:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    432a:	68 61 73 68 5f       	push   0x5f687361
    432f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4330:	61                   	(bad)
    4331:	70 2e                	jo     4361 <_IO_stdin_used+0x361>
    4333:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    4336:	00 00                	add    BYTE PTR [rax],al
    4338:	75 69                	jne    43a3 <_IO_stdin_used+0x3a3>
    433a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    433b:	74 33                	je     4370 <_IO_stdin_used+0x370>
    433d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4340:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4343:	73 68                	jae    43ad <_IO_stdin_used+0x3ad>
    4345:	4d 61                	rex.WRB (bad)
    4347:	70 41                	jo     438a <_IO_stdin_used+0x38a>
    4349:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
    434d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    434f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4351:	74 28                	je     437b <_IO_stdin_used+0x37b>
    4353:	48 61                	rex.W (bad)
    4355:	73 68                	jae    43bf <_IO_stdin_used+0x3bf>
    4357:	4d 61                	rex.WRB (bad)
    4359:	70 2a                	jo     4385 <_IO_stdin_used+0x385>
    435b:	2c 20                	sub    al,0x20
    435d:	64 61                	fs (bad)
    435f:	74 61                	je     43c2 <_IO_stdin_used+0x3c2>
    4361:	5f                   	pop    rdi
    4362:	74 29                	je     438d <_IO_stdin_used+0x38d>
    4364:	00 00                	add    BYTE PTR [rax],al
    4366:	00 00                	add    BYTE PTR [rax],al
    4368:	75 69                	jne    43d3 <_IO_stdin_used+0x3d3>
    436a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    436b:	74 33                	je     43a0 <_IO_stdin_used+0x3a0>
    436d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4370:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4373:	73 68                	jae    43dd <_IO_stdin_used+0x3dd>
    4375:	4d 61                	rex.WRB (bad)
    4377:	70 50                	jo     43c9 <_IO_stdin_used+0x3c9>
    4379:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    437a:	70 45                	jo     43c1 <_IO_stdin_used+0x3c1>
    437c:	6c                   	ins    BYTE PTR es:[rdi],dx
    437d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    437f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4381:	74 28                	je     43ab <_IO_stdin_used+0x3ab>
    4383:	48 61                	rex.W (bad)
    4385:	73 68                	jae    43ef <_IO_stdin_used+0x3ef>
    4387:	4d 61                	rex.WRB (bad)
    4389:	70 2a                	jo     43b5 <_IO_stdin_used+0x3b5>
    438b:	2c 20                	sub    al,0x20
    438d:	64 61                	fs (bad)
    438f:	74 61                	je     43f2 <_IO_stdin_used+0x3f2>
    4391:	5f                   	pop    rdi
    4392:	74 29                	je     43bd <_IO_stdin_used+0x3bd>
    4394:	00 00                	add    BYTE PTR [rax],al
    4396:	00 00                	add    BYTE PTR [rax],al
    4398:	62 6f 6f 6c 20       	(bad)
    439d:	68 61 73 68 4d       	push   0x4d687361
    43a2:	61                   	(bad)
    43a3:	70 53                	jo     43f8 <_IO_stdin_used+0x3f8>
    43a5:	65 61                	gs (bad)
    43a7:	72 63                	jb     440c <_IO_stdin_used+0x40c>
    43a9:	68 45 6c 65 6d       	push   0x6d656c45
    43ae:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43b0:	74 28                	je     43da <_IO_stdin_used+0x3da>
    43b2:	48 61                	rex.W (bad)
    43b4:	73 68                	jae    441e <_IO_stdin_used+0x41e>
    43b6:	4d 61                	rex.WRB (bad)
    43b8:	70 2a                	jo     43e4 <_IO_stdin_used+0x3e4>
    43ba:	2c 20                	sub    al,0x20
    43bc:	64 61                	fs (bad)
    43be:	74 61                	je     4421 <_IO_stdin_used+0x421>
    43c0:	5f                   	pop    rdi
    43c1:	74 29                	je     43ec <_IO_stdin_used+0x3ec>
    43c3:	00 00                	add    BYTE PTR [rax],al
    43c5:	00 00                	add    BYTE PTR [rax],al
    43c7:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    43ca:	74 20                	je     43ec <_IO_stdin_used+0x3ec>
    43cc:	73 65                	jae    4433 <_IO_stdin_used+0x433>
    43ce:	61                   	(bad)
    43cf:	72 63                	jb     4434 <_IO_stdin_used+0x434>
    43d1:	68 45 6c 65 6d       	push   0x6d656c45
    43d6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43d8:	74 28                	je     4402 <_IO_stdin_used+0x402>
    43da:	4c 69 73 74 2a 2c 20 	imul   r14,QWORD PTR [rbx+0x74],0x64202c2a
    43e1:	64 
    43e2:	61                   	(bad)
    43e3:	74 61                	je     4446 <_IO_stdin_used+0x446>
    43e5:	5f                   	pop    rdi
    43e6:	74 29                	je     4411 <_IO_stdin_used+0x411>
	...
    43f0:	69 6e 74 20 70 75 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73757020
    43f7:	68 4c 69 73 74       	push   0x7473694c
    43fc:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    43fe:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4400:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4404:	74 2a                	je     4430 <_IO_stdin_used+0x430>
    4406:	2c 20                	sub    al,0x20
    4408:	64 61                	fs (bad)
    440a:	74 61                	je     446d <_IO_stdin_used+0x46d>
    440c:	5f                   	pop    rdi
    440d:	74 29                	je     4438 <_IO_stdin_used+0x438>
    440f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4412:	74 20                	je     4434 <_IO_stdin_used+0x434>
    4414:	70 6f                	jo     4485 <_IO_stdin_used+0x485>
    4416:	70 4c                	jo     4464 <_IO_stdin_used+0x464>
    4418:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
    441f:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4423:	74 2a                	je     444f <_IO_stdin_used+0x44f>
    4425:	2c 20                	sub    al,0x20
    4427:	64 61                	fs (bad)
    4429:	74 61                	je     448c <_IO_stdin_used+0x48c>
    442b:	5f                   	pop    rdi
    442c:	74 29                	je     4457 <_IO_stdin_used+0x457>
    442e:	00 00                	add    BYTE PTR [rax],al
    4430:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4433:	72 2a                	jb     445f <_IO_stdin_used+0x45f>
    4435:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    4438:	61                   	(bad)
    4439:	64 46 69 6c 65 28 63 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x736e6f63
    4440:	6f 6e 73 
    4443:	74 20                	je     4465 <_IO_stdin_used+0x465>
    4445:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4448:	72 2a                	jb     4474 <_IO_stdin_used+0x474>
    444a:	2c 20                	sub    al,0x20
    444c:	73 69                	jae    44b7 <_IO_stdin_used+0x4b7>
    444e:	7a 65                	jp     44b5 <_IO_stdin_used+0x4b5>
    4450:	5f                   	pop    rdi
    4451:	74 2a                	je     447d <_IO_stdin_used+0x47d>
    4453:	29 00                	sub    DWORD PTR [rax],eax
    4455:	00 00                	add    BYTE PTR [rax],al
    4457:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    445a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    445b:	74 33                	je     4490 <_IO_stdin_used+0x490>
    445d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4460:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    4463:	75 6e                	jne    44d3 <_IO_stdin_used+0x4d3>
    4465:	74 4c                	je     44b3 <_IO_stdin_used+0x4b3>
    4467:	69 6e 65 73 28 63 68 	imul   ebp,DWORD PTR [rsi+0x65],0x68632873
    446e:	61                   	(bad)
    446f:	72 2a                	jb     449b <_IO_stdin_used+0x49b>
    4471:	2c 20                	sub    al,0x20
    4473:	73 69                	jae    44de <_IO_stdin_used+0x4de>
    4475:	7a 65                	jp     44dc <_IO_stdin_used+0x4dc>
    4477:	5f                   	pop    rdi
    4478:	74 29                	je     44a3 <_IO_stdin_used+0x4a3>
    447a:	00 00                	add    BYTE PTR [rax],al
    447c:	00 00                	add    BYTE PTR [rax],al
    447e:	00 00                	add    BYTE PTR [rax],al
    4480:	76 6f                	jbe    44f1 <_IO_stdin_used+0x4f1>
    4482:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x43747365
    4489:	43 
    448a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    448b:	6c                   	ins    BYTE PTR es:[rdi],dx
    448c:	6c                   	ins    BYTE PTR es:[rdi],dx
    448d:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    4494:	46                   	rex.RX
    4495:	49                   	rex.WB
    4496:	4c                   	rex.WR
    4497:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    449b:	68 61 73 68 5f       	push   0x5f687361
    44a0:	74 2c                	je     44ce <_IO_stdin_used+0x4ce>
    44a2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44a6:	74 44                	je     44ec <_IO_stdin_used+0x4ec>
    44a8:	61                   	(bad)
    44a9:	74 61                	je     450c <_IO_stdin_used+0x50c>
    44ab:	29 00                	sub    DWORD PTR [rax],eax
    44ad:	00 00                	add    BYTE PTR [rax],al
    44af:	00 76 6f             	add    BYTE PTR [rsi+0x6f],dh
    44b2:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x53747365
    44b9:	53 
    44ba:	65 61                	gs (bad)
    44bc:	72 63                	jb     4521 <_IO_stdin_used+0x521>
    44be:	68 54 69 6d 65       	push   0x656d6954
    44c3:	28 46 49             	sub    BYTE PTR [rsi+0x49],al
    44c6:	4c                   	rex.WR
    44c7:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    44cb:	68 61 73 68 5f       	push   0x5f687361
    44d0:	74 2c                	je     44fe <_IO_stdin_used+0x4fe>
    44d2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44d6:	74 44                	je     451c <_IO_stdin_used+0x51c>
    44d8:	61                   	(bad)
    44d9:	74 61                	je     453c <_IO_stdin_used+0x53c>
    44db:	2c 20                	sub    al,0x20
    44dd:	75 69                	jne    4548 <_IO_stdin_used+0x548>
    44df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44e0:	74 33                	je     4515 <_IO_stdin_used+0x515>
    44e2:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44e5:	29 00                	sub    DWORD PTR [rax],eax
    44e7:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    44eb:	62 6c 65             	(bad)
    44ee:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    44f1:	61                   	(bad)
    44f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44f3:	64 61                	fs (bad)
    44f5:	72 74                	jb     456b <_IO_stdin_used+0x56b>
    44f7:	44                   	rex.R
    44f8:	65 76 69             	gs jbe 4564 <_IO_stdin_used+0x564>
    44fb:	61                   	(bad)
    44fc:	74 69                	je     4567 <_IO_stdin_used+0x567>
    44fe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4500:	54                   	push   rsp
    4501:	69 6d 65 28 64 6f 75 	imul   ebp,DWORD PTR [rbp+0x65],0x756f6428
    4508:	62 6c 65             	(bad)  {k2}
    450b:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    450e:	75 69                	jne    4579 <_IO_stdin_used+0x579>
    4510:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4511:	74 33                	je     4546 <_IO_stdin_used+0x546>
    4513:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4516:	2c 20                	sub    al,0x20
    4518:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    451a:	75 62                	jne    457e <_IO_stdin_used+0x57e>
    451c:	6c                   	ins    BYTE PTR es:[rdi],dx
    451d:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4520:	76 6f                	jbe    4591 <_IO_stdin_used+0x591>
    4522:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x41747365
    4529:	41 
    452a:	6c                   	ins    BYTE PTR es:[rdi],dx
    452b:	6c                   	ins    BYTE PTR es:[rdi],dx
    452c:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    452f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4530:	73 74                	jae    45a6 <_IO_stdin_used+0x5a6>
    4532:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    4535:	61                   	(bad)
    4536:	72 2a                	jb     4562 <_IO_stdin_used+0x562>
    4538:	2c 20                	sub    al,0x20
    453a:	75 69                	jne    45a5 <_IO_stdin_used+0x5a5>
    453c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    453d:	74 33                	je     4572 <_IO_stdin_used+0x572>
    453f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4542:	2c 20                	sub    al,0x20
    4544:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4547:	73 74                	jae    45bd <_IO_stdin_used+0x5bd>
    4549:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    454c:	61                   	(bad)
    454d:	72 2a                	jb     4579 <_IO_stdin_used+0x579>
    454f:	29 00                	sub    DWORD PTR [rax],eax
    4551:	00 00                	add    BYTE PTR [rax],al
    4553:	00 00                	add    BYTE PTR [rax],al
    4555:	00 00                	add    BYTE PTR [rax],al
    4557:	00 0a                	add    BYTE PTR [rdx],cl
    4559:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    455e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4563:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4568:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    456d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4572:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4577:	00 2d 2d 2d 2d 2d    	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2d72aa <_end+0x2d2d1292>
    457d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4582:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4587:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    458c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4591:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4596:	00 00                	add    BYTE PTR [rax],al
    4598:	70 6c                	jo     4606 <_IO_stdin_used+0x606>
    459a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    459b:	74 2f                	je     45cc <_IO_stdin_used+0x5cc>
    459d:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a0:	33 32                	xor    esi,DWORD PTR [rdx]
    45a2:	2f                   	(bad)
    45a3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a6:	33 32                	xor    esi,DWORD PTR [rdx]
    45a8:	5f                   	pop    rdi
    45a9:	73 65                	jae    4610 <_IO_stdin_used+0x610>
    45ab:	61                   	(bad)
    45ac:	72 63                	jb     4611 <_IO_stdin_used+0x611>
    45ae:	68 5f 74 69 6d       	push   0x6d69745f
    45b3:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    45c0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45c5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45ca:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45cf:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d9:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45de:	00 00                	add    BYTE PTR [rax],al
    45e0:	70 6c                	jo     464e <_IO_stdin_used+0x64e>
    45e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45e3:	74 2f                	je     4614 <_IO_stdin_used+0x614>
    45e5:	5f                   	pop    rdi
    45e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e7:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e8:	5f                   	pop    rdi
    45e9:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45ec:	33 32                	xor    esi,DWORD PTR [rdx]
    45ee:	2f                   	(bad)
    45ef:	5f                   	pop    rdi
    45f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f2:	5f                   	pop    rdi
    45f3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45f6:	33 32                	xor    esi,DWORD PTR [rdx]
    45f8:	5f                   	pop    rdi
    45f9:	73 65                	jae    4660 <_IO_stdin_used+0x660>
    45fb:	61                   	(bad)
    45fc:	72 63                	jb     4661 <_IO_stdin_used+0x661>
    45fe:	68 5f 74 69 6d       	push   0x6d69745f
    4603:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    4610:	70 6c                	jo     467e <_IO_stdin_used+0x67e>
    4612:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4613:	74 2f                	je     4644 <_IO_stdin_used+0x644>
    4615:	6d                   	ins    DWORD PTR es:[rdi],dx
    4616:	75 72                	jne    468a <_IO_stdin_used+0x68a>
    4618:	6d                   	ins    DWORD PTR es:[rdi],dx
    4619:	75 72                	jne    468d <_IO_stdin_used+0x68d>
    461b:	32 2f                	xor    ch,BYTE PTR [rdi]
    461d:	6d                   	ins    DWORD PTR es:[rdi],dx
    461e:	75 72                	jne    4692 <_IO_stdin_used+0x692>
    4620:	6d                   	ins    DWORD PTR es:[rdi],dx
    4621:	75 72                	jne    4695 <_IO_stdin_used+0x695>
    4623:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    4626:	65 61                	gs (bad)
    4628:	72 63                	jb     468d <_IO_stdin_used+0x68d>
    462a:	68 5f 74 69 6d       	push   0x6d69745f
    462f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4634:	00 00                	add    BYTE PTR [rax],al
    4636:	00 00                	add    BYTE PTR [rax],al
    4638:	70 6c                	jo     46a6 <_IO_stdin_used+0x6a6>
    463a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    463b:	74 2f                	je     466c <_IO_stdin_used+0x66c>
    463d:	61                   	(bad)
    463e:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4640:	65 72 33             	gs jb  4676 <_IO_stdin_used+0x676>
    4643:	32 2f                	xor    ch,BYTE PTR [rdi]
    4645:	61                   	(bad)
    4646:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4648:	65 72 33             	gs jb  467e <_IO_stdin_used+0x67e>
    464b:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    464e:	65 61                	gs (bad)
    4650:	72 63                	jb     46b5 <_IO_stdin_used+0x6b5>
    4652:	68 5f 74 69 6d       	push   0x6d69745f
    4657:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    465c:	00 00                	add    BYTE PTR [rax],al
    465e:	00 00                	add    BYTE PTR [rax],al
    4660:	70 6c                	jo     46ce <_IO_stdin_used+0x6ce>
    4662:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4663:	74 2f                	je     4694 <_IO_stdin_used+0x694>
    4665:	5f                   	pop    rdi
    4666:	6d                   	ins    DWORD PTR es:[rdi],dx
    4667:	6d                   	ins    DWORD PTR es:[rdi],dx
    4668:	5f                   	pop    rdi
    4669:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    466c:	33 32                	xor    esi,DWORD PTR [rdx]
    466e:	55                   	push   rbp
    466f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4670:	72 6f                	jb     46e1 <_IO_stdin_used+0x6e1>
    4672:	6c                   	ins    BYTE PTR es:[rdi],dx
    4673:	6c                   	ins    BYTE PTR es:[rdi],dx
    4674:	2f                   	(bad)
    4675:	5f                   	pop    rdi
    4676:	6d                   	ins    DWORD PTR es:[rdi],dx
    4677:	6d                   	ins    DWORD PTR es:[rdi],dx
    4678:	5f                   	pop    rdi
    4679:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    467c:	33 32                	xor    esi,DWORD PTR [rdx]
    467e:	55                   	push   rbp
    467f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4680:	72 6f                	jb     46f1 <__GNU_EH_FRAME_HDR+0x1>
    4682:	6c                   	ins    BYTE PTR es:[rdi],dx
    4683:	6c                   	ins    BYTE PTR es:[rdi],dx
    4684:	5f                   	pop    rdi
    4685:	73 65                	jae    46ec <_IO_stdin_used+0x6ec>
    4687:	61                   	(bad)
    4688:	72 63                	jb     46ed <_IO_stdin_used+0x6ed>
    468a:	68 5f 74 69 6d       	push   0x6d69745f
    468f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4694:	00 00                	add    BYTE PTR [rax],al
    4696:	00 00                	add    BYTE PTR [rax],al
    4698:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    469a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    469b:	61                   	(bad)
    469c:	74 20                	je     46be <_IO_stdin_used+0x6be>
    469e:	73 74                	jae    4714 <__GNU_EH_FRAME_HDR+0x24>
    46a0:	61                   	(bad)
    46a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46a2:	64 61                	fs (bad)
    46a4:	72 74                	jb     471a <__GNU_EH_FRAME_HDR+0x2a>
    46a6:	44                   	rex.R
    46a7:	65 76 69             	gs jbe 4713 <__GNU_EH_FRAME_HDR+0x23>
    46aa:	61                   	(bad)
    46ab:	74 69                	je     4716 <__GNU_EH_FRAME_HDR+0x26>
    46ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46af:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    46b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b3:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    46ba:	48 61                	rex.W (bad)
    46bc:	73 68                	jae    4726 <__GNU_EH_FRAME_HDR+0x36>
    46be:	4d 61                	rex.WRB (bad)
    46c0:	70 2a                	jo     46ec <_IO_stdin_used+0x6ec>
    46c2:	2c 20                	sub    al,0x20
    46c4:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    46c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46c7:	61                   	(bad)
    46c8:	74 29                	je     46f3 <__GNU_EH_FRAME_HDR+0x3>
    46ca:	00 00                	add    BYTE PTR [rax],al
    46cc:	00 00                	add    BYTE PTR [rax],al
    46ce:	00 00                	add    BYTE PTR [rax],al
    46d0:	02 00                	add    al,BYTE PTR [rax]
    46d2:	00 00                	add    BYTE PTR [rax],al
    46d4:	01 00                	add    DWORD PTR [rax],eax
    46d6:	00 00                	add    BYTE PTR [rax],al
    46d8:	03 00                	add    eax,DWORD PTR [rax]
    46da:	00 00                	add    BYTE PTR [rax],al
    46dc:	02 00                	add    al,BYTE PTR [rax]
    46de:	00 00                	add    BYTE PTR [rax],al
    46e0:	04 00                	add    al,0x0
    46e2:	00 00                	add    BYTE PTR [rax],al
    46e4:	03 00                	add    eax,DWORD PTR [rax]
	...
    46ee:	59                   	pop    rcx
    46ef:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000000046f0 <__GNU_EH_FRAME_HDR>:
    46f0:	01 1b                	add    DWORD PTR [rbx],ebx
    46f2:	03 3b                	add    edi,DWORD PTR [rbx]
    46f4:	14 01                	adc    al,0x1
    46f6:	00 00                	add    BYTE PTR [rax],al
    46f8:	21 00                	and    DWORD PTR [rax],eax
    46fa:	00 00                	add    BYTE PTR [rax],al
    46fc:	30 c9                	xor    cl,cl
    46fe:	ff                   	(bad)
    46ff:	ff 48 01             	dec    DWORD PTR [rax+0x1]
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	e0 ca                	loopne 46d0 <_IO_stdin_used+0x6d0>
    4706:	ff                   	(bad)
    4707:	ff 70 01             	push   QWORD PTR [rax+0x1]
    470a:	00 00                	add    BYTE PTR [rax],al
    470c:	f0 ca ff ff          	lock retf 0xffff
    4710:	88 01                	mov    BYTE PTR [rcx],al
    4712:	00 00                	add    BYTE PTR [rax],al
    4714:	20 cb                	and    bl,cl
    4716:	ff                   	(bad)
    4717:	ff 30                	push   QWORD PTR [rax]
    4719:	01 00                	add    DWORD PTR [rax],eax
    471b:	00 10                	add    BYTE PTR [rax],dl
    471d:	cc                   	int3
    471e:	ff                   	(bad)
    471f:	ff a8 01 00 00 40    	jmp    FWORD PTR [rax+0x40000001]
    4725:	cd ff                	int    0xff
    4727:	ff f4                	push   rsp
    4729:	01 00                	add    DWORD PTR [rax],eax
    472b:	00 f0                	add    al,dh
    472d:	cd ff                	int    0xff
    472f:	ff 20                	jmp    QWORD PTR [rax]
    4731:	02 00                	add    al,BYTE PTR [rax]
    4733:	00 a0 d0 ff ff 4c    	add    BYTE PTR [rax+0x4cffffd0],ah
    4739:	02 00                	add    al,BYTE PTR [rax]
    473b:	00 70 d1             	add    BYTE PTR [rax-0x2f],dh
    473e:	ff                   	(bad)
    473f:	ff 9c 02 00 00 00 d2 	call   FWORD PTR [rdx+rax*1-0x2e000000]
    4746:	ff                   	(bad)
    4747:	ff                   	(bad)
    4748:	b8 02 00 00 70       	mov    eax,0x70000002
    474d:	d2 ff                	sar    bh,cl
    474f:	ff e4                	jmp    rsp
    4751:	02 00                	add    al,BYTE PTR [rax]
    4753:	00 30                	add    BYTE PTR [rax],dh
    4755:	d3 ff                	sar    edi,cl
    4757:	ff 20                	jmp    QWORD PTR [rax]
    4759:	03 00                	add    eax,DWORD PTR [rax]
    475b:	00 50 d4             	add    BYTE PTR [rax-0x2c],dl
    475e:	ff                   	(bad)
    475f:	ff 40 03             	inc    DWORD PTR [rax+0x3]
    4762:	00 00                	add    BYTE PTR [rax],al
    4764:	a0 d4 ff ff 54 03 00 	movabs al,ds:0xe000000354ffffd4
    476b:	00 e0 
    476d:	d4                   	(bad)
    476e:	ff                   	(bad)
    476f:	ff 68 03             	jmp    FWORD PTR [rax+0x3]
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	90                   	nop
    4775:	d5 ff ff 7c 03 00    	ud0    r31,QWORD PTR [r27+r24*1+0x0]
    477b:	00 00                	add    BYTE PTR [rax],al
    477d:	d7                   	xlat   BYTE PTR ds:[rbx]
    477e:	ff                   	(bad)
    477f:	ff 90 03 00 00 80    	call   QWORD PTR [rax-0x7ffffffd]
    4785:	d7                   	xlat   BYTE PTR ds:[rbx]
    4786:	ff                   	(bad)
    4787:	ff a4 03 00 00 d0 d7 	jmp    QWORD PTR [rbx+rax*1-0x28300000]
    478e:	ff                   	(bad)
    478f:	ff                   	(bad)
    4790:	b8 03 00 00 00       	mov    eax,0x3
    4795:	d8 ff                	fdivr  st,st(7)
    4797:	ff d4                	call   rsp
    4799:	03 00                	add    eax,DWORD PTR [rax]
    479b:	00 60 d8             	add    BYTE PTR [rax-0x28],ah
    479e:	ff                   	(bad)
    479f:	ff f0                	push   rax
    47a1:	03 00                	add    eax,DWORD PTR [rax]
    47a3:	00 c0                	add    al,al
    47a5:	d9 ff                	fcos
    47a7:	ff 2c 04             	jmp    FWORD PTR [rsp+rax*1]
    47aa:	00 00                	add    BYTE PTR [rax],al
    47ac:	70 da                	jo     4788 <__GNU_EH_FRAME_HDR+0x98>
    47ae:	ff                   	(bad)
    47af:	ff 44 04 00          	inc    DWORD PTR [rsp+rax*1+0x0]
    47b3:	00 d0                	add    al,dl
    47b5:	da ff                	(bad)
    47b7:	ff 5c 04 00          	call   FWORD PTR [rsp+rax*1+0x0]
    47bb:	00 10                	add    BYTE PTR [rax],dl
    47bd:	db ff                	(bad)
    47bf:	ff                   	(bad)
    47c0:	78 04                	js     47c6 <__GNU_EH_FRAME_HDR+0xd6>
    47c2:	00 00                	add    BYTE PTR [rax],al
    47c4:	40 dd ff             	rex (bad)
    47c7:	ff a8 04 00 00 50    	jmp    FWORD PTR [rax+0x50000004]
    47cd:	de ff                	fdivp  st(7),st
    47cf:	ff d0                	call   rax
    47d1:	04 00                	add    al,0x0
    47d3:	00 c0                	add    al,al
    47d5:	de ff                	fdivp  st(7),st
    47d7:	ff 00                	inc    DWORD PTR [rax]
    47d9:	05 00 00 20 e3       	add    eax,0xe3200000
    47de:	ff                   	(bad)
    47df:	ff 48 05             	dec    DWORD PTR [rax+0x5]
    47e2:	00 00                	add    BYTE PTR [rax],al
    47e4:	80 e7 ff             	and    bh,0xff
    47e7:	ff 94 05 00 00 d0 e7 	call   QWORD PTR [rbp+rax*1-0x18300000]
    47ee:	ff                   	(bad)
    47ef:	ff d0                	call   rax
    47f1:	05 00 00 80 ef       	add    eax,0xef800000
    47f6:	ff                   	(bad)
    47f7:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    47fa:	00 00                	add    BYTE PTR [rax],al
    47fc:	e0 f0                	loopne 47ee <__GNU_EH_FRAME_HDR+0xfe>
    47fe:	ff                   	(bad)
    47ff:	ff 4c 06 00          	dec    DWORD PTR [rsi+rax*1+0x0]
	...

Disassembly of section .eh_frame:

0000000000004808 <__FRAME_END__-0x588>:
    4808:	14 00                	adc    al,0x0
    480a:	00 00                	add    BYTE PTR [rax],al
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	00 00                	add    BYTE PTR [rax],al
    4810:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    4813:	00 01                	add    BYTE PTR [rcx],al
    4815:	78 10                	js     4827 <__GNU_EH_FRAME_HDR+0x137>
    4817:	01 1b                	add    DWORD PTR [rbx],ebx
    4819:	0c 07                	or     al,0x7
    481b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    4821:	00 00                	add    BYTE PTR [rax],al
    4823:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4826:	00 00                	add    BYTE PTR [rax],al
    4828:	e8 c9 ff ff 26       	call   270047f6 <_end+0x26ffe7de>
    482d:	00 00                	add    BYTE PTR [rax],al
    482f:	00 00                	add    BYTE PTR [rax],al
    4831:	44 07                	rex.R (bad)
    4833:	10 00                	adc    BYTE PTR [rax],al
    4835:	00 00                	add    BYTE PTR [rax],al
    4837:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    483a:	00 00                	add    BYTE PTR [rax],al
    483c:	34 00                	xor    al,0x0
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	e0 c7                	loopne 4809 <__GNU_EH_FRAME_HDR+0x119>
    4842:	ff                   	(bad)
    4843:	ff b0 01 00 00 00    	push   QWORD PTR [rax+0x1]
    4849:	0e                   	(bad)
    484a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    484d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    4850:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    4853:	80 00 3f             	add    BYTE PTR [rax],0x3f
    4856:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    4858:	2a 33                	sub    dh,BYTE PTR [rbx]
    485a:	24 22                	and    al,0x22
    485c:	00 00                	add    BYTE PTR [rax],al
    485e:	00 00                	add    BYTE PTR [rax],al
    4860:	14 00                	adc    al,0x0
    4862:	00 00                	add    BYTE PTR [rax],al
    4864:	5c                   	pop    rsp
    4865:	00 00                	add    BYTE PTR [rax],al
    4867:	00 68 c9             	add    BYTE PTR [rax-0x37],ch
    486a:	ff                   	(bad)
    486b:	ff 08                	dec    DWORD PTR [rax]
	...
    4875:	00 00                	add    BYTE PTR [rax],al
    4877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    487a:	00 00                	add    BYTE PTR [rax],al
    487c:	74 00                	je     487e <__GNU_EH_FRAME_HDR+0x18e>
    487e:	00 00                	add    BYTE PTR [rax],al
    4880:	60                   	(bad)
    4881:	c9                   	leave
    4882:	ff                   	(bad)
    4883:	ff 2e                	jmp    FWORD PTR [rsi]
    4885:	00 00                	add    BYTE PTR [rax],al
    4887:	00 00                	add    BYTE PTR [rax],al
    4889:	45 0e                	rex.RB (bad)
    488b:	10 83 02 68 0e 08    	adc    BYTE PTR [rbx+0x80e6802],al
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 00                	add    BYTE PTR [rax],al
    4895:	00 00                	add    BYTE PTR [rax],al
    4897:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    489a:	00 00                	add    BYTE PTR [rax],al
    489c:	94                   	xchg   esp,eax
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 60 ca             	add    BYTE PTR [rax-0x36],ah
    48a2:	ff                   	(bad)
    48a3:	ff 23                	jmp    QWORD PTR [rbx]
    48a5:	01 00                	add    DWORD PTR [rax],eax
    48a7:	00 00                	add    BYTE PTR [rax],al
    48a9:	46 0e                	rex.RX (bad)
    48ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    48b1:	8e 03                	mov    es,WORD PTR [rbx]
    48b3:	42 0e                	rex.X (bad)
    48b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    48bb:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305702 <_end+0xffffffff862ff6ea>
    48c1:	06                   	(bad)
    48c2:	41 0e                	rex.B (bad)
    48c4:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    48ca:	02 e4                	add    ah,ah
    48cc:	0a 0e                	or     cl,BYTE PTR [rsi]
    48ce:	38 44 0e 30          	cmp    BYTE PTR [rsi+rcx*1+0x30],al
    48d2:	41 0e                	rex.B (bad)
    48d4:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    48d7:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    48da:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    48dd:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    48e0:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48e3:	00 28                	add    BYTE PTR [rax],ch
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	00 e0                	add    al,ah
    48e9:	00 00                	add    BYTE PTR [rax],al
    48eb:	00 44 cb ff          	add    BYTE PTR [rbx+rcx*8-0x1],al
    48ef:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    48f5:	45 0e                	rex.RB (bad)
    48f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    48fd:	42 8e 03             	rex.X mov es,WORD PTR [rbx]
    4900:	47 8d 04 8c          	lea    r8d,[r12+r9*4]
    4904:	05 4c 83 06 02       	add    eax,0x206834c
    4909:	86 0a                	xchg   BYTE PTR [rdx],cl
    490b:	0c 07                	or     al,0x7
    490d:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4910:	28 00                	sub    BYTE PTR [rax],al
    4912:	00 00                	add    BYTE PTR [rax],al
    4914:	0c 01                	or     al,0x1
    4916:	00 00                	add    BYTE PTR [rax],al
    4918:	c8 cb ff ff          	enter  0xffcb,0xff
    491c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    491d:	02 00                	add    al,BYTE PTR [rax]
    491f:	00 00                	add    BYTE PTR [rax],al
    4921:	45 0e                	rex.RB (bad)
    4923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4929:	51                   	push   rcx
    492a:	8f 03                	pop    QWORD PTR [rbx]
    492c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    4933:	07                   	(bad)
    4934:	02 a1 0a 0c 07 08    	add    ah,BYTE PTR [rcx+0x8070c0a]
    493a:	46 0b 4c 00 00       	or     r9d,DWORD PTR [rax+r8*1+0x0]
    493f:	00 38                	add    BYTE PTR [rax],bh
    4941:	01 00                	add    DWORD PTR [rax],eax
    4943:	00 4c ce ff          	add    BYTE PTR [rsi+rcx*8-0x1],cl
    4947:	ff c9                	dec    ecx
    4949:	00 00                	add    BYTE PTR [rax],al
    494b:	00 00                	add    BYTE PTR [rax],al
    494d:	46 0e                	rex.RX (bad)
    494f:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4955:	8c 03                	mov    WORD PTR [rbx],es
    4957:	41 0e                	rex.B (bad)
    4959:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    495f:	83 05 44 0e 30 02 7c 	add    DWORD PTR [rip+0x2300e44],0x7c        # 23057aa <_end+0x22ff792>
    4966:	0a 0e                	or     cl,BYTE PTR [rsi]
    4968:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    496b:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    496e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4971:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4974:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4977:	48 0a 0e             	rex.W or cl,BYTE PTR [rsi]
    497a:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    497d:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4980:	18 45 0e             	sbb    BYTE PTR [rbp+0xe],al
    4983:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4986:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4989:	00 00                	add    BYTE PTR [rax],al
    498b:	00 18                	add    BYTE PTR [rax],bl
    498d:	00 00                	add    BYTE PTR [rax],al
    498f:	00 88 01 00 00 cc    	add    BYTE PTR [rax-0x33ffffff],cl
    4995:	ce                   	(bad)
    4996:	ff                   	(bad)
    4997:	ff 84 00 00 00 00 48 	inc    DWORD PTR [rax+rax*1+0x48000000]
    499e:	0e                   	(bad)
    499f:	10 02                	adc    BYTE PTR [rdx],al
    49a1:	5c                   	pop    rsp
    49a2:	0a 0e                	or     cl,BYTE PTR [rsi]
    49a4:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    49a7:	00 28                	add    BYTE PTR [rax],ch
    49a9:	00 00                	add    BYTE PTR [rax],al
    49ab:	00 a4 01 00 00 40 cf 	add    BYTE PTR [rcx+rax*1-0x30c00000],ah
    49b2:	ff                   	(bad)
    49b3:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    49b6:	00 00                	add    BYTE PTR [rax],al
    49b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    49bb:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    49c1:	83 03 44             	add    DWORD PTR [rbx],0x44
    49c4:	0e                   	(bad)
    49c5:	20 78 0a             	and    BYTE PTR [rax+0xa],bh
    49c8:	0e                   	(bad)
    49c9:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49cc:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    49cf:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    49d2:	00 00                	add    BYTE PTR [rax],al
    49d4:	38 00                	cmp    BYTE PTR [rax],al
    49d6:	00 00                	add    BYTE PTR [rax],al
    49d8:	d0 01                	rol    BYTE PTR [rcx],1
    49da:	00 00                	add    BYTE PTR [rax],al
    49dc:	84 cf                	test   bh,cl
    49de:	ff                   	(bad)
    49df:	ff                   	(bad)
    49e0:	be 00 00 00 00       	mov    esi,0x0
    49e5:	46 0e                	rex.RX (bad)
    49e7:	10 8d 02 49 0e 18    	adc    BYTE PTR [rbp+0x180e4902],cl
    49ed:	8c 03                	mov    WORD PTR [rbx],es
    49ef:	41 0e                	rex.B (bad)
    49f1:	20 86 04 47 0e 28    	and    BYTE PTR [rsi+0x280e4704],al
    49f7:	83 05 44 0e 30 02 84 	add    DWORD PTR [rip+0x2300e44],0xffffff84        # 2305842 <_end+0x22ff82a>
    49fe:	0a 0e                	or     cl,BYTE PTR [rsi]
    4a00:	28 44 0e 20          	sub    BYTE PTR [rsi+rcx*1+0x20],al
    4a04:	41 0e                	rex.B (bad)
    4a06:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4a09:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4a0c:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4a0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4a12:	00 00                	add    BYTE PTR [rax],al
    4a14:	0c 02                	or     al,0x2
    4a16:	00 00                	add    BYTE PTR [rax],al
    4a18:	08 d0                	or     al,dl
    4a1a:	ff                   	(bad)
    4a1b:	ff 19                	call   FWORD PTR [rcx]
    4a1d:	01 00                	add    DWORD PTR [rax],eax
    4a1f:	00 00                	add    BYTE PTR [rax],al
    4a21:	55                   	push   rbp
    4a22:	0e                   	(bad)
    4a23:	10 83 02 03 00 01    	adc    BYTE PTR [rbx+0x1000302],al
    4a29:	0e                   	(bad)
    4a2a:	08 41 c3             	or     BYTE PTR [rcx-0x3d],al
    4a2d:	00 00                	add    BYTE PTR [rax],al
    4a2f:	00 10                	add    BYTE PTR [rax],dl
    4a31:	00 00                	add    BYTE PTR [rax],al
    4a33:	00 2c 02             	add    BYTE PTR [rdx+rax*1],ch
    4a36:	00 00                	add    BYTE PTR [rax],al
    4a38:	08 d1                	or     cl,dl
    4a3a:	ff                   	(bad)
    4a3b:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
    4a3e:	00 00                	add    BYTE PTR [rax],al
    4a40:	00 00                	add    BYTE PTR [rax],al
    4a42:	00 00                	add    BYTE PTR [rax],al
    4a44:	10 00                	adc    BYTE PTR [rax],al
    4a46:	00 00                	add    BYTE PTR [rax],al
    4a48:	40 02 00             	rex add al,BYTE PTR [rax]
    4a4b:	00 44 d1 ff          	add    BYTE PTR [rcx+rdx*8-0x1],al
    4a4f:	ff 31                	push   QWORD PTR [rcx]
    4a51:	00 00                	add    BYTE PTR [rax],al
    4a53:	00 00                	add    BYTE PTR [rax],al
    4a55:	00 00                	add    BYTE PTR [rax],al
    4a57:	00 10                	add    BYTE PTR [rax],dl
    4a59:	00 00                	add    BYTE PTR [rax],al
    4a5b:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
    4a5f:	00 70 d1             	add    BYTE PTR [rax-0x2f],dh
    4a62:	ff                   	(bad)
    4a63:	ff a4 00 00 00 00 00 	jmp    QWORD PTR [rax+rax*1+0x0]
    4a6a:	00 00                	add    BYTE PTR [rax],al
    4a6c:	10 00                	adc    BYTE PTR [rax],al
    4a6e:	00 00                	add    BYTE PTR [rax],al
    4a70:	68 02 00 00 0c       	push   0xc000002
    4a75:	d2 ff                	sar    bh,cl
    4a77:	ff 6e 01             	jmp    FWORD PTR [rsi+0x1]
    4a7a:	00 00                	add    BYTE PTR [rax],al
    4a7c:	00 00                	add    BYTE PTR [rax],al
    4a7e:	00 00                	add    BYTE PTR [rax],al
    4a80:	10 00                	adc    BYTE PTR [rax],al
    4a82:	00 00                	add    BYTE PTR [rax],al
    4a84:	7c 02                	jl     4a88 <__GNU_EH_FRAME_HDR+0x398>
    4a86:	00 00                	add    BYTE PTR [rax],al
    4a88:	68 d3 ff ff 76       	push   0x76ffffd3
    4a8d:	00 00                	add    BYTE PTR [rax],al
    4a8f:	00 00                	add    BYTE PTR [rax],al
    4a91:	00 00                	add    BYTE PTR [rax],al
    4a93:	00 10                	add    BYTE PTR [rax],dl
    4a95:	00 00                	add    BYTE PTR [rax],al
    4a97:	00 90 02 00 00 d4    	add    BYTE PTR [rax-0x2bfffffe],dl
    4a9d:	d3 ff                	sar    edi,cl
    4a9f:	ff 4a 00             	dec    DWORD PTR [rdx+0x0]
    4aa2:	00 00                	add    BYTE PTR [rax],al
    4aa4:	00 00                	add    BYTE PTR [rax],al
    4aa6:	00 00                	add    BYTE PTR [rax],al
    4aa8:	18 00                	sbb    BYTE PTR [rax],al
    4aaa:	00 00                	add    BYTE PTR [rax],al
    4aac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4aad:	02 00                	add    al,BYTE PTR [rax]
    4aaf:	00 10                	add    BYTE PTR [rax],dl
    4ab1:	d4                   	(bad)
    4ab2:	ff                   	(bad)
    4ab3:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4ab9 <__GNU_EH_FRAME_HDR+0x3c9>
    4ab9:	41 0e                	rex.B (bad)
    4abb:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4abe:	08 5e 0e             	or     BYTE PTR [rsi+0xe],bl
    4ac1:	10 00                	adc    BYTE PTR [rax],al
    4ac3:	00 18                	add    BYTE PTR [rax],bl
    4ac5:	00 00                	add    BYTE PTR [rax],al
    4ac7:	00 c0                	add    al,al
    4ac9:	02 00                	add    al,BYTE PTR [rax]
    4acb:	00 24 d4             	add    BYTE PTR [rsp+rdx*8],ah
    4ace:	ff                   	(bad)
    4acf:	ff 5d 00             	call   FWORD PTR [rbp+0x0]
    4ad2:	00 00                	add    BYTE PTR [rax],al
    4ad4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4ad7:	10 83 02 02 57 0e    	adc    BYTE PTR [rbx+0xe570202],al
    4add:	08 00                	or     BYTE PTR [rax],al
    4adf:	00 38                	add    BYTE PTR [rax],bh
    4ae1:	00 00                	add    BYTE PTR [rax],al
    4ae3:	00 dc                	add    ah,bl
    4ae5:	02 00                	add    al,BYTE PTR [rax]
    4ae7:	00 68 d4             	add    BYTE PTR [rax-0x2c],ch
    4aea:	ff                   	(bad)
    4aeb:	ff 5f 01             	call   FWORD PTR [rdi+0x1]
    4aee:	00 00                	add    BYTE PTR [rax],al
    4af0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4af3:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4afa:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4afd:	20 83 04 02 d0 0a    	and    BYTE PTR [rbx+0xad00204],al
    4b03:	0e                   	(bad)
    4b04:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4b07:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b0a:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4b0d:	02 50 0a             	add    dl,BYTE PTR [rax+0xa]
    4b10:	0e                   	(bad)
    4b11:	18 43 0e             	sbb    BYTE PTR [rbx+0xe],al
    4b14:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b17:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b1a:	00 00                	add    BYTE PTR [rax],al
    4b1c:	14 00                	adc    al,0x0
    4b1e:	00 00                	add    BYTE PTR [rax],al
    4b20:	18 03                	sbb    BYTE PTR [rbx],al
    4b22:	00 00                	add    BYTE PTR [rax],al
    4b24:	8c d5                	mov    ebp,ss
    4b26:	ff                   	(bad)
    4b27:	ff b0 00 00 00 00    	push   QWORD PTR [rax+0x0]
    4b2d:	02 91 0e 10 00 00    	add    dl,BYTE PTR [rcx+0x100e]
    4b33:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
    4b36:	00 00                	add    BYTE PTR [rax],al
    4b38:	30 03                	xor    BYTE PTR [rbx],al
    4b3a:	00 00                	add    BYTE PTR [rax],al
    4b3c:	24 d6                	and    al,0xd6
    4b3e:	ff                   	(bad)
    4b3f:	ff 52 00             	call   QWORD PTR [rdx+0x0]
    4b42:	00 00                	add    BYTE PTR [rax],al
    4b44:	00 02                	add    BYTE PTR [rdx],al
    4b46:	4d 0e                	rex.WRB (bad)
    4b48:	10 00                	adc    BYTE PTR [rax],al
    4b4a:	00 00                	add    BYTE PTR [rax],al
    4b4c:	18 00                	sbb    BYTE PTR [rax],al
    4b4e:	00 00                	add    BYTE PTR [rax],al
    4b50:	48 03 00             	add    rax,QWORD PTR [rax]
    4b53:	00 6c d6 ff          	add    BYTE PTR [rsi+rdx*8-0x1],ch
    4b57:	ff                   	(bad)
    4b58:	3e 00 00             	ds add BYTE PTR [rax],al
    4b5b:	00 00                	add    BYTE PTR [rax],al
    4b5d:	45 0e                	rex.RB (bad)
    4b5f:	10 83 02 59 0a 0e    	adc    BYTE PTR [rbx+0xe0a5902],al
    4b65:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b68:	2c 00                	sub    al,0x0
    4b6a:	00 00                	add    BYTE PTR [rax],al
    4b6c:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4b6f:	00 90 d6 ff ff 23    	add    BYTE PTR [rax+0x23ffffd6],dl
    4b75:	02 00                	add    al,BYTE PTR [rax]
    4b77:	00 00                	add    BYTE PTR [rax],al
    4b79:	46 0e                	rex.RX (bad)
    4b7b:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4b82:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4b85:	20 83 04 03 ef 01    	and    BYTE PTR [rbx+0x1ef0304],al
    4b8b:	0a 0e                	or     cl,BYTE PTR [rsi]
    4b8d:	18 46 0e             	sbb    BYTE PTR [rsi+0xe],al
    4b90:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b93:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4b96:	00 00                	add    BYTE PTR [rax],al
    4b98:	24 00                	and    al,0x0
    4b9a:	00 00                	add    BYTE PTR [rax],al
    4b9c:	94                   	xchg   esp,eax
    4b9d:	03 00                	add    eax,DWORD PTR [rax]
    4b9f:	00 90 d8 ff ff 08    	add    BYTE PTR [rax+0x8ffffd8],dl
    4ba5:	01 00                	add    DWORD PTR [rax],eax
    4ba7:	00 00                	add    BYTE PTR [rax],al
    4ba9:	45 0e                	rex.RB (bad)
    4bab:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4bb1:	4c 8d 03             	lea    r8,[rbx]
    4bb4:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    4bb7:	05 02 c1 0a 0c       	add    eax,0xc0ac102
    4bbc:	07                   	(bad)
    4bbd:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4bc0:	2c 00                	sub    al,0x0
    4bc2:	00 00                	add    BYTE PTR [rax],al
    4bc4:	bc 03 00 00 78       	mov    esp,0x78000003
    4bc9:	d9 ff                	fcos
    4bcb:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4bce:	00 00                	add    BYTE PTR [rax],al
    4bd0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4bd3:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4bda:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4bdd:	20 83 04 77 0a 0e    	and    BYTE PTR [rbx+0xe0a7704],al
    4be3:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4be6:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4be9:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4bec:	00 00                	add    BYTE PTR [rax],al
    4bee:	00 00                	add    BYTE PTR [rax],al
    4bf0:	44 00 00             	add    BYTE PTR [rax],r8b
    4bf3:	00 ec                	add    ah,ch
    4bf5:	03 00                	add    eax,DWORD PTR [rax]
    4bf7:	00 b8 d9 ff ff 53    	add    BYTE PTR [rax+0x53ffffd9],bh
    4bfd:	04 00                	add    al,0x0
    4bff:	00 00                	add    BYTE PTR [rax],al
    4c01:	49 0c 0a             	rex.WB or al,0xa
    4c04:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4c08:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4c0b:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4c10:	06                   	(bad)
    4c11:	10 0f                	adc    BYTE PTR [rdi],cl
    4c13:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4c16:	10 0e                	adc    BYTE PTR [rsi],cl
    4c18:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4c1b:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068c223 <_end+0x1068620b>
    4c21:	0c 02                	or     al,0x2
    4c23:	76 60                	jbe    4c85 <__GNU_EH_FRAME_HDR+0x595>
    4c25:	45 10 03             	adc    BYTE PTR [r11],r8b
    4c28:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    4c2b:	03 c5                	add    eax,ebp
    4c2d:	03 0a                	add    ecx,DWORD PTR [rdx]
    4c2f:	0c 0a                	or     al,0xa
    4c31:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    4c34:	07                   	(bad)
    4c35:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
    4c38:	48 00 00             	rex.W add BYTE PTR [rax],al
    4c3b:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    4c3e:	00 00                	add    BYTE PTR [rax],al
    4c40:	d0 dd                	rcr    ch,1
    4c42:	ff                   	(bad)
    4c43:	ff 56 04             	call   QWORD PTR [rsi+0x4]
    4c46:	00 00                	add    BYTE PTR [rax],al
    4c48:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c4b:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4c51:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4c55:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4c58:	46 0f 03 76 68       	rex.RX lsl r14d,WORD PTR [rsi+0x68]
    4c5d:	06                   	(bad)
    4c5e:	10 0f                	adc    BYTE PTR [rdi],cl
    4c60:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4c63:	10 0e                	adc    BYTE PTR [rsi],cl
    4c65:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4c68:	47 10 0c 02          	adc    BYTE PTR [r10+r8*1],r9b
    4c6c:	76 60                	jbe    4cce <__GNU_EH_FRAME_HDR+0x5de>
    4c6e:	10 03                	adc    BYTE PTR [rbx],al
    4c70:	02 76 58             	add    dh,BYTE PTR [rsi+0x58]
    4c73:	03 77 03             	add    esi,DWORD PTR [rdi+0x3]
    4c76:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4c7d:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c80:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4c83:	00 38                	add    BYTE PTR [rax],bh
    4c85:	00 00                	add    BYTE PTR [rax],al
    4c87:	00 80 04 00 00 e4    	add    BYTE PTR [rax-0x1bfffffc],al
    4c8d:	e1 ff                	loope  4c8e <__GNU_EH_FRAME_HDR+0x59e>
    4c8f:	ff 4e 00             	dec    DWORD PTR [rsi+0x0]
    4c92:	00 00                	add    BYTE PTR [rax],al
    4c94:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c97:	10 8e 02 4c 0e 18    	adc    BYTE PTR [rsi+0x180e4c02],cl
    4c9d:	8d 03                	lea    eax,[rbx]
    4c9f:	45 0e                	rex.RB (bad)
    4ca1:	20 8c 04 44 0e 28 86 	and    BYTE PTR [rsp+rax*1-0x79d7f1bc],cl
    4ca8:	05 47 0e 30 83       	add    eax,0x83300e47
    4cad:	06                   	(bad)
    4cae:	60                   	(bad)
    4caf:	0e                   	(bad)
    4cb0:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4cb3:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4cb6:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4cb9:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4cbc:	08 00                	or     BYTE PTR [rax],al
    4cbe:	00 00                	add    BYTE PTR [rax],al
    4cc0:	48 00 00             	rex.W add BYTE PTR [rax],al
    4cc3:	00 bc 04 00 00 f8 e1 	add    BYTE PTR [rsp+rax*1-0x1e080000],bh
    4cca:	ff                   	(bad)
    4ccb:	ff a9 07 00 00 00    	jmp    FWORD PTR [rcx+0x7]
    4cd1:	46 0e                	rex.RX (bad)
    4cd3:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4cd9:	8e 03                	mov    es,WORD PTR [rbx]
    4cdb:	42 0e                	rex.X (bad)
    4cdd:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4ce3:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305b2a <_end+0xffffffff862ffb12>
    4ce9:	06                   	(bad)
    4cea:	41 0e                	rex.B (bad)
    4cec:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    4cf2:	03 54 01 0a          	add    edx,DWORD PTR [rcx+rax*1+0xa]
    4cf6:	0e                   	(bad)
    4cf7:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4cfa:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4cfd:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4d00:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4d03:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4d06:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d09:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4d0c:	2c 00                	sub    al,0x0
    4d0e:	00 00                	add    BYTE PTR [rax],al
    4d10:	08 05 00 00 5c e9    	or     BYTE PTR [rip+0xffffffffe95c0000],al        # ffffffffe95c4d16 <_end+0xffffffffe95becfe>
    4d16:	ff                   	(bad)
    4d17:	ff 5b 01             	call   FWORD PTR [rbx+0x1]
    4d1a:	00 00                	add    BYTE PTR [rax],al
    4d1c:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4d1f:	0a 00                	or     al,BYTE PTR [rax]
    4d21:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4d24:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4d27:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4d2c:	06                   	(bad)
    4d2d:	02 f0                	add    dh,al
    4d2f:	0a 0c 0a             	or     cl,BYTE PTR [rdx+rcx*1]
    4d32:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4d35:	07                   	(bad)
    4d36:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4d39:	00 00                	add    BYTE PTR [rax],al
    4d3b:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    4d3e:	00 00                	add    BYTE PTR [rax],al
    4d40:	38 05 00 00 8c ea    	cmp    BYTE PTR [rip+0xffffffffea8c0000],al        # ffffffffea8c4d46 <_end+0xffffffffea8bed2e>
    4d46:	ff                   	(bad)
    4d47:	ff 1c 03             	call   FWORD PTR [rbx+rax*1]
    4d4a:	00 00                	add    BYTE PTR [rax],al
    4d4c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4d4f:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4d55:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4d59:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4d5c:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4d61:	06                   	(bad)
    4d62:	03 8b 02 0a 0c 0d    	add    ecx,DWORD PTR [rbx+0xd0c0a02]
    4d68:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    4d6b:	07                   	(bad)
    4d6c:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d6f:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4d72:	49 0a 0c 0d 00 4a 0c 	rex.WB or cl,BYTE PTR [rcx*1+0x70c4a00]
    4d79:	07 
    4d7a:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d7d:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4d80:	55                   	push   rbp
    4d81:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4d88:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d8b:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
	...

0000000000004d90 <__FRAME_END__>:
    4d90:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005cd0 <__frame_dummy_init_array_entry>:
    5cd0:	f0 12 00             	lock adc al,BYTE PTR [rax]
    5cd3:	00 00                	add    BYTE PTR [rax],al
    5cd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005cd8 <__do_global_dtors_aux_fini_array_entry>:
    5cd8:	b0 12                	mov    al,0x12
    5cda:	00 00                	add    BYTE PTR [rax],al
    5cdc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005ce0 <_DYNAMIC>:
    5ce0:	01 00                	add    DWORD PTR [rax],eax
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	00 00                	add    BYTE PTR [rax],al
    5ce6:	00 00                	add    BYTE PTR [rax],al
    5ce8:	58                   	pop    rax
    5ce9:	01 00                	add    DWORD PTR [rax],eax
    5ceb:	00 00                	add    BYTE PTR [rax],al
    5ced:	00 00                	add    BYTE PTR [rax],al
    5cef:	00 01                	add    BYTE PTR [rcx],al
    5cf1:	00 00                	add    BYTE PTR [rax],al
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	00 00                	add    BYTE PTR [rax],al
    5cf7:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    5cfa:	00 00                	add    BYTE PTR [rax],al
    5cfc:	00 00                	add    BYTE PTR [rax],al
    5cfe:	00 00                	add    BYTE PTR [rax],al
    5d00:	01 00                	add    DWORD PTR [rax],eax
    5d02:	00 00                	add    BYTE PTR [rax],al
    5d04:	00 00                	add    BYTE PTR [rax],al
    5d06:	00 00                	add    BYTE PTR [rax],al
    5d08:	71 01                	jno    5d0b <_DYNAMIC+0x2b>
    5d0a:	00 00                	add    BYTE PTR [rax],al
    5d0c:	00 00                	add    BYTE PTR [rax],al
    5d0e:	00 00                	add    BYTE PTR [rax],al
    5d10:	0c 00                	or     al,0x0
    5d12:	00 00                	add    BYTE PTR [rax],al
    5d14:	00 00                	add    BYTE PTR [rax],al
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	00 10                	add    BYTE PTR [rax],dl
    5d1a:	00 00                	add    BYTE PTR [rax],al
    5d1c:	00 00                	add    BYTE PTR [rax],al
    5d1e:	00 00                	add    BYTE PTR [rax],al
    5d20:	0d 00 00 00 00       	or     eax,0x0
    5d25:	00 00                	add    BYTE PTR [rax],al
    5d27:	00 04 3b             	add    BYTE PTR [rbx+rdi*1],al
    5d2a:	00 00                	add    BYTE PTR [rax],al
    5d2c:	00 00                	add    BYTE PTR [rax],al
    5d2e:	00 00                	add    BYTE PTR [rax],al
    5d30:	19 00                	sbb    DWORD PTR [rax],eax
    5d32:	00 00                	add    BYTE PTR [rax],al
    5d34:	00 00                	add    BYTE PTR [rax],al
    5d36:	00 00                	add    BYTE PTR [rax],al
    5d38:	d0 5c 00 00          	rcr    BYTE PTR [rax+rax*1+0x0],1
    5d3c:	00 00                	add    BYTE PTR [rax],al
    5d3e:	00 00                	add    BYTE PTR [rax],al
    5d40:	1b 00                	sbb    eax,DWORD PTR [rax]
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	00 00                	add    BYTE PTR [rax],al
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	08 00                	or     BYTE PTR [rax],al
    5d4a:	00 00                	add    BYTE PTR [rax],al
    5d4c:	00 00                	add    BYTE PTR [rax],al
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	1a 00                	sbb    al,BYTE PTR [rax]
    5d52:	00 00                	add    BYTE PTR [rax],al
    5d54:	00 00                	add    BYTE PTR [rax],al
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
    5d5c:	00 00                	add    BYTE PTR [rax],al
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	1c 00                	sbb    al,0x0
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
    5d66:	00 00                	add    BYTE PTR [rax],al
    5d68:	08 00                	or     BYTE PTR [rax],al
    5d6a:	00 00                	add    BYTE PTR [rax],al
    5d6c:	00 00                	add    BYTE PTR [rax],al
    5d6e:	00 00                	add    BYTE PTR [rax],al
    5d70:	f5                   	cmc
    5d71:	fe                   	(bad)
    5d72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5d75:	00 00                	add    BYTE PTR [rax],al
    5d77:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d85 <_DYNAMIC+0xa5>
    5d85:	00 00                	add    BYTE PTR [rax],al
    5d87:	00 c8                	add    al,cl
    5d89:	06                   	(bad)
    5d8a:	00 00                	add    BYTE PTR [rax],al
    5d8c:	00 00                	add    BYTE PTR [rax],al
    5d8e:	00 00                	add    BYTE PTR [rax],al
    5d90:	06                   	(bad)
    5d91:	00 00                	add    BYTE PTR [rax],al
    5d93:	00 00                	add    BYTE PTR [rax],al
    5d95:	00 00                	add    BYTE PTR [rax],al
    5d97:	00 c8                	add    al,cl
    5d99:	03 00                	add    eax,DWORD PTR [rax]
    5d9b:	00 00                	add    BYTE PTR [rax],al
    5d9d:	00 00                	add    BYTE PTR [rax],al
    5d9f:	00 0a                	add    BYTE PTR [rdx],cl
    5da1:	00 00                	add    BYTE PTR [rax],al
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 d8                	add    al,bl
    5da9:	01 00                	add    DWORD PTR [rax],eax
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 0b                	add    BYTE PTR [rbx],cl
    5db1:	00 00                	add    BYTE PTR [rax],al
    5db3:	00 00                	add    BYTE PTR [rax],al
    5db5:	00 00                	add    BYTE PTR [rax],al
    5db7:	00 18                	add    BYTE PTR [rax],bl
    5db9:	00 00                	add    BYTE PTR [rax],al
    5dbb:	00 00                	add    BYTE PTR [rax],al
    5dbd:	00 00                	add    BYTE PTR [rax],al
    5dbf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5dc5 <_DYNAMIC+0xe5>
	...
    5dcd:	00 00                	add    BYTE PTR [rax],al
    5dcf:	00 03                	add    BYTE PTR [rbx],al
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	00 00                	add    BYTE PTR [rax],al
    5dd5:	00 00                	add    BYTE PTR [rax],al
    5dd7:	00 f0                	add    al,dh
    5dd9:	5e                   	pop    rsi
    5dda:	00 00                	add    BYTE PTR [rax],al
    5ddc:	00 00                	add    BYTE PTR [rax],al
    5dde:	00 00                	add    BYTE PTR [rax],al
    5de0:	02 00                	add    al,BYTE PTR [rax]
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	70 02                	jo     5dec <_DYNAMIC+0x10c>
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	14 00                	adc    al,0x0
    5df2:	00 00                	add    BYTE PTR [rax],al
    5df4:	00 00                	add    BYTE PTR [rax],al
    5df6:	00 00                	add    BYTE PTR [rax],al
    5df8:	07                   	(bad)
    5df9:	00 00                	add    BYTE PTR [rax],al
    5dfb:	00 00                	add    BYTE PTR [rax],al
    5dfd:	00 00                	add    BYTE PTR [rax],al
    5dff:	00 17                	add    BYTE PTR [rdi],dl
    5e01:	00 00                	add    BYTE PTR [rax],al
    5e03:	00 00                	add    BYTE PTR [rax],al
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 60 0a             	add    BYTE PTR [rax+0xa],ah
    5e0a:	00 00                	add    BYTE PTR [rax],al
    5e0c:	00 00                	add    BYTE PTR [rax],al
    5e0e:	00 00                	add    BYTE PTR [rax],al
    5e10:	07                   	(bad)
    5e11:	00 00                	add    BYTE PTR [rax],al
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	00 00                	add    BYTE PTR [rax],al
    5e17:	00 a0 09 00 00 00    	add    BYTE PTR [rax+0x9],ah
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 08                	add    BYTE PTR [rax],cl
    5e21:	00 00                	add    BYTE PTR [rax],al
    5e23:	00 00                	add    BYTE PTR [rax],al
    5e25:	00 00                	add    BYTE PTR [rax],al
    5e27:	00 c0                	add    al,al
    5e29:	00 00                	add    BYTE PTR [rax],al
    5e2b:	00 00                	add    BYTE PTR [rax],al
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	00 09                	add    BYTE PTR [rcx],cl
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	00 00                	add    BYTE PTR [rax],al
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	00 18                	add    BYTE PTR [rax],bl
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 1e                	add    BYTE PTR [rsi],bl
    5e41:	00 00                	add    BYTE PTR [rax],al
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 08                	add    BYTE PTR [rax],cl
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	00 00                	add    BYTE PTR [rax],al
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 fb                	add    bl,bh
    5e51:	ff                   	(bad)
    5e52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	00 01                	add    BYTE PTR [rcx],al
    5e59:	00 00                	add    BYTE PTR [rax],al
    5e5b:	08 00                	or     BYTE PTR [rax],al
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 fe                	add    dh,bh
    5e61:	ff                   	(bad)
    5e62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e65:	00 00                	add    BYTE PTR [rax],al
    5e67:	00 e0                	add    al,ah
    5e69:	08 00                	or     BYTE PTR [rax],al
    5e6b:	00 00                	add    BYTE PTR [rax],al
    5e6d:	00 00                	add    BYTE PTR [rax],al
    5e6f:	00 ff                	add    bh,bh
    5e71:	ff                   	(bad)
    5e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 03                	add    BYTE PTR [rbx],al
    5e79:	00 00                	add    BYTE PTR [rax],al
    5e7b:	00 00                	add    BYTE PTR [rax],al
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 f0                	add    al,dh
    5e81:	ff                   	(bad)
    5e82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 a0 08 00 00 00    	add    BYTE PTR [rax+0x8],ah
    5e8d:	00 00                	add    BYTE PTR [rax],al
    5e8f:	00 f9                	add    cl,bh
    5e91:	ff                   	(bad)
    5e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000005ef0 <_GLOBAL_OFFSET_TABLE_>:
    5ef0:	e0 5c                	loopne 5f4e <_GLOBAL_OFFSET_TABLE_+0x5e>
	...
    5f06:	00 00                	add    BYTE PTR [rax],al
    5f08:	36 10 00             	ss adc BYTE PTR [rax],al
    5f0b:	00 00                	add    BYTE PTR [rax],al
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    5f12:	00 00                	add    BYTE PTR [rax],al
    5f14:	00 00                	add    BYTE PTR [rax],al
    5f16:	00 00                	add    BYTE PTR [rax],al
    5f18:	56                   	push   rsi
    5f19:	10 00                	adc    BYTE PTR [rax],al
    5f1b:	00 00                	add    BYTE PTR [rax],al
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    5f22:	00 00                	add    BYTE PTR [rax],al
    5f24:	00 00                	add    BYTE PTR [rax],al
    5f26:	00 00                	add    BYTE PTR [rax],al
    5f28:	76 10                	jbe    5f3a <_GLOBAL_OFFSET_TABLE_+0x4a>
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	86 10                	xchg   BYTE PTR [rax],dl
    5f32:	00 00                	add    BYTE PTR [rax],al
    5f34:	00 00                	add    BYTE PTR [rax],al
    5f36:	00 00                	add    BYTE PTR [rax],al
    5f38:	96                   	xchg   esi,eax
    5f39:	10 00                	adc    BYTE PTR [rax],al
    5f3b:	00 00                	add    BYTE PTR [rax],al
    5f3d:	00 00                	add    BYTE PTR [rax],al
    5f3f:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 c6                	add    dh,al
    5f51:	10 00                	adc    BYTE PTR [rax],al
    5f53:	00 00                	add    BYTE PTR [rax],al
    5f55:	00 00                	add    BYTE PTR [rax],al
    5f57:	00 d6                	add    dh,dl
    5f59:	10 00                	adc    BYTE PTR [rax],al
    5f5b:	00 00                	add    BYTE PTR [rax],al
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	00 e6                	add    dh,ah
    5f61:	10 00                	adc    BYTE PTR [rax],al
    5f63:	00 00                	add    BYTE PTR [rax],al
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	00 f6                	add    dh,dh
    5f69:	10 00                	adc    BYTE PTR [rax],al
    5f6b:	00 00                	add    BYTE PTR [rax],al
    5f6d:	00 00                	add    BYTE PTR [rax],al
    5f6f:	00 06                	add    BYTE PTR [rsi],al
    5f71:	11 00                	adc    DWORD PTR [rax],eax
    5f73:	00 00                	add    BYTE PTR [rax],al
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	00 16                	add    BYTE PTR [rsi],dl
    5f79:	11 00                	adc    DWORD PTR [rax],eax
    5f7b:	00 00                	add    BYTE PTR [rax],al
    5f7d:	00 00                	add    BYTE PTR [rax],al
    5f7f:	00 26                	add    BYTE PTR [rsi],ah
    5f81:	11 00                	adc    DWORD PTR [rax],eax
    5f83:	00 00                	add    BYTE PTR [rax],al
    5f85:	00 00                	add    BYTE PTR [rax],al
    5f87:	00 36                	add    BYTE PTR [rsi],dh
    5f89:	11 00                	adc    DWORD PTR [rax],eax
    5f8b:	00 00                	add    BYTE PTR [rax],al
    5f8d:	00 00                	add    BYTE PTR [rax],al
    5f8f:	00 46 11             	add    BYTE PTR [rsi+0x11],al
    5f92:	00 00                	add    BYTE PTR [rax],al
    5f94:	00 00                	add    BYTE PTR [rax],al
    5f96:	00 00                	add    BYTE PTR [rax],al
    5f98:	56                   	push   rsi
    5f99:	11 00                	adc    DWORD PTR [rax],eax
    5f9b:	00 00                	add    BYTE PTR [rax],al
    5f9d:	00 00                	add    BYTE PTR [rax],al
    5f9f:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
    5fa2:	00 00                	add    BYTE PTR [rax],al
    5fa4:	00 00                	add    BYTE PTR [rax],al
    5fa6:	00 00                	add    BYTE PTR [rax],al
    5fa8:	76 11                	jbe    5fbb <_GLOBAL_OFFSET_TABLE_+0xcb>
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	00 00                	add    BYTE PTR [rax],al
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	86 11                	xchg   BYTE PTR [rcx],dl
    5fb2:	00 00                	add    BYTE PTR [rax],al
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	96                   	xchg   esi,eax
    5fb9:	11 00                	adc    DWORD PTR [rax],eax
    5fbb:	00 00                	add    BYTE PTR [rax],al
    5fbd:	00 00                	add    BYTE PTR [rax],al
    5fbf:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
    5fc5:	00 00                	add    BYTE PTR [rax],al
    5fc7:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
    5fcd:	00 00                	add    BYTE PTR [rax],al
    5fcf:	00 c6                	add    dh,al
    5fd1:	11 00                	adc    DWORD PTR [rax],eax
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     BYTE PTR [rax+0x0],ah
    600b:	00 00                	add    BYTE PTR [rax],al
    600d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x304>
   a:	74 75                	je     81 <__abi_tag-0x2fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75621536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2ec>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	e0 11                	loopne 23 <__abi_tag-0x359>
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	2e 00 00             	cs add BYTE PTR [rax],al
	...
  2f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	ec                   	in     al,dx
  37:	08 00                	or     BYTE PTR [rax],al
  39:	00 08                	add    BYTE PTR [rax],cl
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	13 00                	adc    eax,DWORD PTR [rax]
  43:	00 00                	add    BYTE PTR [rax],al
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 1e                	add    BYTE PTR [rsi],bl
  49:	07                   	(bad)
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	57                   	push   rdi
  67:	22 00                	and    al,BYTE PTR [rax]
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 20                	add    BYTE PTR [rax],ah
  71:	1a 00                	sbb    al,BYTE PTR [rax]
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
	...
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	98                   	cwde
  97:	31 00                	xor    DWORD PTR [rax],eax
  99:	00 08                	add    BYTE PTR [rax],cl
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 c0                	add    al,al
  a1:	1e                   	(bad)
  a2:	00 00                	add    BYTE PTR [rax],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	63 05 00 00 00 00    	movsxd eax,DWORD PTR [rip+0x0]        # ae <__abi_tag-0x2ce>
	...
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	2c 00                	sub    al,0x0
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	91                   	xchg   ecx,eax
  c7:	48 00 00             	rex.W add BYTE PTR [rax],al
  ca:	08 00                	or     BYTE PTR [rax],al
  cc:	00 00                	add    BYTE PTR [rax],al
  ce:	00 00                	add    BYTE PTR [rax],al
  d0:	30 24 00             	xor    BYTE PTR [rax+rax*1],ah
  d3:	00 00                	add    BYTE PTR [rax],al
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
	...
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	2c 00                	sub    al,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	3b 57 00             	cmp    edx,DWORD PTR [rdi+0x0]
  f9:	00 08                	add    BYTE PTR [rax],cl
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 b0 25 00 00 00    	add    BYTE PTR [rax+0x25],dh
 105:	00 00                	add    BYTE PTR [rax],al
 107:	00 3c 15 00 00 00 00 	add    BYTE PTR [rdx*1+0x0],bh
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	e8 08 00 00 05       	call   500000d <_end+0x4ff9ff5>
       5:	00 01                	add    BYTE PTR [rcx],al
       7:	08 00                	or     BYTE PTR [rax],al
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 14 14             	add    BYTE PTR [rsp+rdx*1],dl
       e:	01 00                	add    DWORD PTR [rax],eax
      10:	00 21                	add    BYTE PTR [rcx],ah
      12:	14 00                	adc    al,0x0
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	1c 00                	sbb    al,0x0
	...
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	08 cc                	or     ah,cl
      2c:	0a 00                	or     al,BYTE PTR [rax]
      2e:	00 03                	add    BYTE PTR [rbx],al
      30:	d6                   	(bad)
      31:	17                   	(bad)
      32:	36 00 00             	ss add BYTE PTR [rax],al
      35:	00 03                	add    BYTE PTR [rbx],al
      37:	08 07                	or     BYTE PTR [rdi],al
      39:	f3 00 00             	repz add BYTE PTR [rax],al
      3c:	00 03                	add    BYTE PTR [rbx],al
      3e:	04 07                	add    al,0x7
      40:	f8                   	clc
      41:	00 00                	add    BYTE PTR [rax],al
      43:	00 15 08 03 01 08    	add    BYTE PTR [rip+0x8010308],dl        # 8010351 <_end+0x800a339>
      49:	ff 01                	inc    DWORD PTR [rcx]
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	03 02                	add    eax,DWORD PTR [rdx]
      4f:	07                   	(bad)
      50:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
      53:	00 03                	add    BYTE PTR [rbx],al
      55:	01 06                	add    DWORD PTR [rsi],eax
      57:	01 02                	add    DWORD PTR [rdx],eax
      59:	00 00                	add    BYTE PTR [rax],al
      5b:	03 02                	add    eax,DWORD PTR [rdx]
      5d:	05 5b 00 00 00       	add    eax,0x5b
      62:	16                   	(bad)
      63:	04 05                	add    al,0x5
      65:	69 6e 74 00 09 62 00 	imul   ebp,DWORD PTR [rsi+0x74],0x620900
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	08 a9 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],ch
      74:	2a 16                	sub    dl,BYTE PTR [rsi]
      76:	3d 00 00 00 03       	cmp    eax,0x3000000
      7b:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 166 <__abi_tag-0x216>
      81:	05 86 00 00 00       	add    eax,0x86
      86:	03 01                	add    eax,DWORD PTR [rcx]
      88:	06                   	(bad)
      89:	08 02                	or     BYTE PTR [rdx],al
      8b:	00 00                	add    BYTE PTR [rax],al
      8d:	09 86 00 00 00 05    	or     DWORD PTR [rsi+0x5000000],eax
      93:	8d 00                	lea    eax,[rax]
      95:	00 00                	add    BYTE PTR [rax],al
      97:	03 08                	add    ecx,DWORD PTR [rax]
      99:	05 e0 00 00 00       	add    eax,0xe0
      9e:	03 10                	add    edx,DWORD PTR [rax]
      a0:	04 f3                	add    al,0xf3
      a2:	01 00                	add    DWORD PTR [rax],eax
      a4:	00 03                	add    BYTE PTR [rbx],al
      a6:	08 07                	or     BYTE PTR [rdi],al
      a8:	ee                   	out    dx,al
      a9:	00 00                	add    BYTE PTR [rax],al
      ab:	00 03                	add    BYTE PTR [rbx],al
      ad:	04 04                	add    al,0x4
      af:	d3 00                	rol    DWORD PTR [rax],cl
      b1:	00 00                	add    BYTE PTR [rax],al
      b3:	0c 08                	or     al,0x8
      b5:	3c dd                	cmp    al,0xdd
      b7:	02 00                	add    al,BYTE PTR [rax]
      b9:	00 d6                	add    dh,dl
      bb:	00 00                	add    BYTE PTR [rax],al
      bd:	00 0d 49 02 00 00    	add    BYTE PTR [rip+0x249],cl        # 30c <__abi_tag-0x70>
      c3:	3d 09 62 00 00       	cmp    eax,0x6209
      c8:	00 0e                	add    BYTE PTR [rsi],cl
      ca:	72 65                	jb     131 <__abi_tag-0x24b>
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	00 3e                	add    BYTE PTR [rsi],bh
      cf:	09 62 00             	or     DWORD PTR [rdx+0x0],esp
      d2:	00 00                	add    BYTE PTR [rax],al
      d4:	04 00                	add    al,0x0
      d6:	08 de                	or     dh,bl
      d8:	02 00                	add    al,BYTE PTR [rax]
      da:	00 02                	add    BYTE PTR [rdx],al
      dc:	3f                   	(bad)
      dd:	05 b3 00 00 00       	add    eax,0xb3
      e2:	0c 10                	or     al,0x10
      e4:	44 09 00             	or     DWORD PTR [rax],r8d
      e7:	00 00                	add    BYTE PTR [rax],al
      e9:	05 01 00 00 0d       	add    eax,0xd000001
      ee:	49 02 00             	rex.WB add al,BYTE PTR [r8]
      f1:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
      f4:	7a 00                	jp     f6 <__abi_tag-0x286>
      f6:	00 00                	add    BYTE PTR [rax],al
      f8:	0e                   	(bad)
      f9:	72 65                	jb     160 <__abi_tag-0x21c>
      fb:	6d                   	ins    DWORD PTR es:[rdi],dx
      fc:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
      ff:	7a 00                	jp     101 <__abi_tag-0x27b>
     101:	00 00                	add    BYTE PTR [rax],al
     103:	08 00                	or     BYTE PTR [rax],al
     105:	08 0a                	or     BYTE PTR [rdx],cl
     107:	00 00                	add    BYTE PTR [rax],al
     109:	00 02                	add    BYTE PTR [rdx],al
     10b:	47 05 e2 00 00 00    	rex.RXB add eax,0xe2
     111:	0c 10                	or     al,0x10
     113:	4e b4 00             	rex.WRX mov spl,0x0
     116:	00 00                	add    BYTE PTR [rax],al
     118:	34 01                	xor    al,0x1
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	0d 49 02 00 00       	or     eax,0x249
     121:	4f 13 97 00 00 00 0e 	rex.WRXB adc r10,QWORD PTR [r15+0xe000000]
     128:	72 65                	jb     18f <__abi_tag-0x1ed>
     12a:	6d                   	ins    DWORD PTR es:[rdi],dx
     12b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     12e:	97                   	xchg   edi,eax
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 08                	add    BYTE PTR [rax],cl
     133:	00 08                	add    BYTE PTR [rax],cl
     135:	b5 00                	mov    ch,0x0
     137:	00 00                	add    BYTE PTR [rax],al
     139:	02 51 05             	add    dl,BYTE PTR [rcx+0x5]
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	00 00                	add    BYTE PTR [rax],al
     140:	17                   	(bad)
     141:	cf                   	iret
     142:	02 00                	add    al,BYTE PTR [rax]
     144:	00 02                	add    BYTE PTR [rdx],al
     146:	b4 03                	mov    ah,0x3
     148:	0f 4d 01             	cmovge eax,DWORD PTR [rcx]
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	05 52 01 00 00       	add    eax,0x152
     152:	18 62 00             	sbb    BYTE PTR [rdx+0x0],ah
     155:	00 00                	add    BYTE PTR [rax],al
     157:	66 01 00             	add    WORD PTR [rax],ax
     15a:	00 01                	add    BYTE PTR [rcx],al
     15c:	66 01 00             	add    WORD PTR [rax],ax
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	66 01 00             	add    WORD PTR [rax],ax
     164:	00 00                	add    BYTE PTR [rax],al
     166:	05 6b 01 00 00       	add    eax,0x16b
     16b:	19 1a                	sbb    DWORD PTR [rdx],ebx
     16d:	73 74                	jae    1e3 <__abi_tag-0x199>
     16f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
     172:	32 01                	xor    al,BYTE PTR [rcx]
     174:	0b 3c 03             	or     edi,DWORD PTR [rbx+rax*1]
     177:	00 00                	add    BYTE PTR [rax],al
     179:	02 05 83 0b d6 00    	add    al,BYTE PTR [rip+0xd60b83]        # d60d02 <_end+0xd5acea>
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	02 05 84 0b 05 01    	add    al,BYTE PTR [rip+0x1050b84]        # 1050d0b <_end+0x104acf3>
     187:	00 00                	add    BYTE PTR [rax],al
     189:	02 05 8a 0b 3c 03    	add    al,BYTE PTR [rip+0x33c0b8a]        # 33c0d19 <_end+0x33bad01>
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	02 05 8d 0b 58 03    	add    al,BYTE PTR [rip+0x3580b8d]        # 3580d24 <_end+0x357ad0c>
     197:	00 00                	add    BYTE PTR [rax],al
     199:	02 05 90 0b 73 03    	add    al,BYTE PTR [rip+0x3730b90]        # 3730d2f <_end+0x372ad17>
     19f:	00 00                	add    BYTE PTR [rax],al
     1a1:	02 05 91 0b 90 03    	add    al,BYTE PTR [rip+0x3900b91]        # 3900d38 <_end+0x38fad20>
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	02 05 92 0b b0 03    	add    al,BYTE PTR [rip+0x3b00b92]        # 3b00d41 <_end+0x3afad29>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	02 05 93 0b c6 03    	add    al,BYTE PTR [rip+0x3c60b93]        # 3c60d4a <_end+0x3c5ad32>
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	02 05 95 0b f0 03    	add    al,BYTE PTR [rip+0x3f00b95]        # 3f00d54 <_end+0x3efad3c>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	02 05 98 0b 0c 04    	add    al,BYTE PTR [rip+0x40c0b98]        # 40c0d5f <_end+0x40bad47>
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	02 05 9a 0b 22 04    	add    al,BYTE PTR [rip+0x4220b9a]        # 4220d69 <_end+0x421ad51>
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	02 05 9d 0b 3d 04    	add    al,BYTE PTR [rip+0x43d0b9d]        # 43d0d74 <_end+0x43cad5c>
     1d7:	00 00                	add    BYTE PTR [rax],al
     1d9:	02 05 9e 0b 58 04    	add    al,BYTE PTR [rip+0x4580b9e]        # 4580d7d <_end+0x457ad65>
     1df:	00 00                	add    BYTE PTR [rax],al
     1e1:	02 05 9f 0b 89 04    	add    al,BYTE PTR [rip+0x4890b9f]        # 4890d86 <_end+0x488ad6e>
     1e7:	00 00                	add    BYTE PTR [rax],al
     1e9:	02 05 a1 0b a9 04    	add    al,BYTE PTR [rip+0x4a90ba1]        # 4a90d90 <_end+0x4a8ad78>
     1ef:	00 00                	add    BYTE PTR [rax],al
     1f1:	02 05 a4 0b c9 04    	add    al,BYTE PTR [rip+0x4c90ba4]        # 4c90d9b <_end+0x4c8ad83>
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	02 05 a7 0b dc 04    	add    al,BYTE PTR [rip+0x4dc0ba7]        # 4dc0da6 <_end+0x4dbad8e>
     1ff:	00 00                	add    BYTE PTR [rax],al
     201:	02 05 a9 0b e9 04    	add    al,BYTE PTR [rip+0x4e90ba9]        # 4e90db0 <_end+0x4e8ad98>
     207:	00 00                	add    BYTE PTR [rax],al
     209:	02 05 aa 0b fa 04    	add    al,BYTE PTR [rip+0x4fa0baa]        # 4fa0db9 <_end+0x4f9ada1>
     20f:	00 00                	add    BYTE PTR [rax],al
     211:	02 05 ab 0b 1a 05    	add    al,BYTE PTR [rip+0x51a0bab]        # 51a0dc2 <_end+0x519adaa>
     217:	00 00                	add    BYTE PTR [rax],al
     219:	02 05 ac 0b 3d 05    	add    al,BYTE PTR [rip+0x53d0bac]        # 53d0dcb <_end+0x53cadb3>
     21f:	00 00                	add    BYTE PTR [rax],al
     221:	02 05 ad 0b 60 05    	add    al,BYTE PTR [rip+0x5600bad]        # 5600dd4 <_end+0x55fadbc>
     227:	00 00                	add    BYTE PTR [rax],al
     229:	02 05 af 0b 76 05    	add    al,BYTE PTR [rip+0x5760baf]        # 5760dde <_end+0x575adc6>
     22f:	00 00                	add    BYTE PTR [rax],al
     231:	02 05 b0 0b 9b 05    	add    al,BYTE PTR [rip+0x59b0bb0]        # 59b0de7 <_end+0x59aadcf>
     237:	00 00                	add    BYTE PTR [rax],al
     239:	02 05 f4 16 34 01    	add    al,BYTE PTR [rip+0x13416f4]        # 1341933 <_end+0x133b91b>
     23f:	00 00                	add    BYTE PTR [rax],al
     241:	02 05 f9 16 fb 05    	add    al,BYTE PTR [rip+0x5fb16f9]        # 5fb1940 <_end+0x5fab928>
     247:	00 00                	add    BYTE PTR [rax],al
     249:	02 05 fa 16 15 06    	add    al,BYTE PTR [rip+0x61516fa]        # 6151949 <_end+0x614b931>
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	02 05 fc 16 30 06    	add    al,BYTE PTR [rip+0x63016fc]        # 6301953 <_end+0x62fb93b>
     257:	00 00                	add    BYTE PTR [rax],al
     259:	02 05 fd 16 8c 06    	add    al,BYTE PTR [rip+0x68c16fd]        # 68c195c <_end+0x68bb944>
     25f:	00 00                	add    BYTE PTR [rax],al
     261:	02 05 fe 16 46 06    	add    al,BYTE PTR [rip+0x64616fe]        # 6461965 <_end+0x645b94d>
     267:	00 00                	add    BYTE PTR [rax],al
     269:	02 05 ff 16 69 06    	add    al,BYTE PTR [rip+0x66916ff]        # 669196e <_end+0x668b956>
     26f:	00 00                	add    BYTE PTR [rax],al
     271:	1b 05 00 01 16 a7    	sbb    eax,DWORD PTR [rip+0xffffffffa7160100]        # ffffffffa7160377 <_end+0xffffffffa715a35f>
     277:	06                   	(bad)
     278:	00 00                	add    BYTE PTR [rax],al
     27a:	07                   	(bad)
     27b:	61                   	(bad)
     27c:	62 73 00 89 0f       	(bad)
     281:	03 00                	add    eax,DWORD PTR [rax]
     283:	00 ea                	add    dl,ch
     285:	06                   	(bad)
     286:	00 00                	add    BYTE PTR [rax],al
     288:	92                   	xchg   edx,eax
     289:	02 00                	add    al,BYTE PTR [rax]
     28b:	00 01                	add    BYTE PTR [rcx],al
     28d:	ea                   	(bad)
     28e:	06                   	(bad)
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	00 07                	add    BYTE PTR [rdi],al
     293:	61                   	(bad)
     294:	62 73 00 55 1b       	(bad)
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	00 f9                	add    cl,bh
     29d:	06                   	(bad)
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	aa                   	stos   BYTE PTR es:[rdi],al
     2a1:	02 00                	add    al,BYTE PTR [rax]
     2a3:	00 01                	add    BYTE PTR [rcx],al
     2a5:	f9                   	stc
     2a6:	06                   	(bad)
     2a7:	00 00                	add    BYTE PTR [rax],al
     2a9:	00 07                	add    BYTE PTR [rdi],al
     2ab:	61                   	(bad)
     2ac:	62 73 00 4f fb       	(bad)
     2b1:	02 00                	add    al,BYTE PTR [rax]
     2b3:	00 9e 00 00 00 c2    	add    BYTE PTR [rsi-0x3e000000],bl
     2b9:	02 00                	add    al,BYTE PTR [rax]
     2bb:	00 01                	add    BYTE PTR [rcx],al
     2bd:	9e                   	sahf
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	07                   	(bad)
     2c3:	61                   	(bad)
     2c4:	62 73 00 4b 05       	(bad)
     2c9:	03 00                	add    eax,DWORD PTR [rax]
     2cb:	00 ac 00 00 00 da 02 	add    BYTE PTR [rax+rax*1+0x2da0000],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	01 ac 00 00 00 00 07 	add    DWORD PTR [rax+rax*1+0x7000000],ebp
     2db:	61                   	(bad)
     2dc:	62 73 00 47 f1       	(bad)
     2e1:	02 00                	add    al,BYTE PTR [rax]
     2e3:	00 89 03 00 00 f2    	add    BYTE PTR [rcx-0xdfffffd],cl
     2e9:	02 00                	add    al,BYTE PTR [rax]
     2eb:	00 01                	add    BYTE PTR [rcx],al
     2ed:	89 03                	mov    DWORD PTR [rbx],eax
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	00 07                	add    BYTE PTR [rdi],al
     2f3:	61                   	(bad)
     2f4:	62 73 00 3d 41       	(bad)
     2f9:	00 00                	add    BYTE PTR [rax],al
     2fb:	00 97 00 00 00 0a    	add    BYTE PTR [rdi+0xa000000],dl
     301:	03 00                	add    eax,DWORD PTR [rax]
     303:	00 01                	add    BYTE PTR [rcx],al
     305:	97                   	xchg   edi,eax
     306:	00 00                	add    BYTE PTR [rax],al
     308:	00 00                	add    BYTE PTR [rax],al
     30a:	07                   	(bad)
     30b:	61                   	(bad)
     30c:	62 73 00 38 11       	(bad)
     311:	00 00                	add    BYTE PTR [rax],al
     313:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     316:	00 00                	add    BYTE PTR [rax],al
     318:	22 03                	and    al,BYTE PTR [rbx]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 10                	add    BYTE PTR [rax],dl
     323:	64 69 76 00 b5 74 00 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b5
     32a:	00 
     32b:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000332 <_end+0xffa31a>
     331:	7a 00                	jp     333 <__abi_tag-0x49>
     333:	00 00                	add    BYTE PTR [rax],al
     335:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     338:	00 00                	add    BYTE PTR [rax],al
     33a:	00 00                	add    BYTE PTR [rax],al
     33c:	04 6d                	add    al,0x6d
     33e:	00 00                	add    BYTE PTR [rax],al
     340:	00 de                	add    dh,bl
     342:	02 0c 62             	add    cl,BYTE PTR [rdx+riz*2]
     345:	00 00                	add    BYTE PTR [rax],al
     347:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
     34a:	00 00                	add    BYTE PTR [rax],al
     34c:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 05 57 03 00 00    	add    BYTE PTR [rip+0x357],al        # 6ae <__abi_tag+0x332>
     357:	1c 1d                	sbb    al,0x1d
     359:	33 00                	xor    eax,DWORD PTR [rax]
     35b:	00 00                	add    BYTE PTR [rax],al
     35d:	02 e3                	add    ah,bl
     35f:	02 12                	add    dl,BYTE PTR [rdx]
     361:	33 00                	xor    eax,DWORD PTR [rax]
     363:	00 00                	add    BYTE PTR [rax],al
     365:	62                   	(bad)
     366:	00 00                	add    BYTE PTR [rax],al
     368:	00 73 03             	add    BYTE PTR [rbx+0x3],dh
     36b:	00 00                	add    BYTE PTR [rax],al
     36d:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	00 06                	add    BYTE PTR [rsi],al
     374:	cd 01                	int    0x1
     376:	00 00                	add    BYTE PTR [rax],al
     378:	07                   	(bad)
     379:	19 01                	sbb    DWORD PTR [rcx],eax
     37b:	89 03                	mov    DWORD PTR [rbx],eax
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	89 03                	mov    DWORD PTR [rbx],eax
     381:	00 00                	add    BYTE PTR [rax],al
     383:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     389:	03 08                	add    ecx,DWORD PTR [rax]
     38b:	04 f8                	add    al,0xf8
     38d:	01 00                	add    DWORD PTR [rax],eax
     38f:	00 1e                	add    BYTE PTR [rsi],bl
     391:	d2 01                	rol    BYTE PTR [rcx],cl
     393:	00 00                	add    BYTE PTR [rax],al
     395:	02 e1                	add    ah,cl
     397:	01 01                	add    DWORD PTR [rcx],eax
     399:	62                   	(bad)
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	00 03                	add    BYTE PTR [rbx],al
     39e:	b0 03                	mov    al,0x3
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	1f                   	(bad)
     3a3:	e4 02                	in     al,0x2
     3a5:	00 00                	add    BYTE PTR [rax],al
     3a7:	02 e1                	add    ah,cl
     3a9:	01 01                	add    DWORD PTR [rcx],eax
     3ab:	92                   	xchg   edx,eax
     3ac:	00 00                	add    BYTE PTR [rax],al
     3ae:	00 00                	add    BYTE PTR [rax],al
     3b0:	04 dc                	add    al,0xdc
     3b2:	01 00                	add    DWORD PTR [rax],eax
     3b4:	00 e6                	add    dh,ah
     3b6:	01 01                	add    DWORD PTR [rcx],eax
     3b8:	7a 00                	jp     3ba <__abi_tag+0x3e>
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     3bf:	00 01                	add    BYTE PTR [rcx],al
     3c1:	92                   	xchg   edx,eax
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	00 00                	add    BYTE PTR [rax],al
     3c6:	06                   	(bad)
     3c7:	65 00 00             	add    BYTE PTR gs:[rax],al
     3ca:	00 08                	add    BYTE PTR [rax],cl
     3cc:	14 01                	adc    al,0x1
     3ce:	44 00 00             	add    BYTE PTR [rax],r8b
     3d1:	00 f0                	add    al,dh
     3d3:	03 00                	add    eax,DWORD PTR [rax]
     3d5:	00 01                	add    BYTE PTR [rcx],al
     3d7:	66 01 00             	add    WORD PTR [rax],ax
     3da:	00 01                	add    BYTE PTR [rcx],al
     3dc:	66 01 00             	add    WORD PTR [rax],ax
     3df:	00 01                	add    BYTE PTR [rcx],al
     3e1:	2a 00                	sub    al,BYTE PTR [rax]
     3e3:	00 00                	add    BYTE PTR [rax],al
     3e5:	01 2a                	add    DWORD PTR [rdx],ebp
     3e7:	00 00                	add    BYTE PTR [rax],al
     3e9:	00 01                	add    BYTE PTR [rcx],al
     3eb:	40 01 00             	rex add DWORD PTR [rax],eax
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	20 64 69 76          	and    BYTE PTR [rcx+rbp*2+0x76],ah
     3f4:	00 02                	add    BYTE PTR [rdx],al
     3f6:	e0 03                	loopne 3fb <__abi_tag+0x7f>
     3f8:	0e                   	(bad)
     3f9:	d6                   	(bad)
     3fa:	00 00                	add    BYTE PTR [rax],al
     3fc:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     404:	00 00                	add    BYTE PTR [rax],al
     406:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     409:	00 00                	add    BYTE PTR [rax],al
     40b:	00 04 bd 00 00 00 05 	add    BYTE PTR [rdi*4+0x5000000],al
     412:	03 0e                	add    ecx,DWORD PTR [rsi]
     414:	81 00 00 00 22 04    	add    DWORD PTR [rax],0x4220000
     41a:	00 00                	add    BYTE PTR [rax],al
     41c:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     422:	04 c3                	add    al,0xc3
     424:	02 00                	add    al,BYTE PTR [rax]
     426:	00 e2                	add    dl,ah
     428:	03 0f                	add    ecx,DWORD PTR [rdi]
     42a:	05 01 00 00 3d       	add    eax,0x3d000001
     42f:	04 00                	add    al,0x0
     431:	00 01                	add    BYTE PTR [rcx],al
     433:	7a 00                	jp     435 <__abi_tag+0xb9>
     435:	00 00                	add    BYTE PTR [rax],al
     437:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
     43f:	02 00                	add    al,BYTE PTR [rax]
     441:	00 26                	add    BYTE PTR [rsi],ah
     443:	04 0c                	add    al,0xc
     445:	62                   	(bad)
     446:	00 00                	add    BYTE PTR [rax],al
     448:	00 58 04             	add    BYTE PTR [rax+0x4],bl
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     453:	2a 00                	sub    al,BYTE PTR [rax]
     455:	00 00                	add    BYTE PTR [rax],al
     457:	00 06                	add    BYTE PTR [rsi],al
     459:	39 02                	cmp    DWORD PTR [rdx],eax
     45b:	00 00                	add    BYTE PTR [rax],al
     45d:	09 75 01             	or     DWORD PTR [rbp+0x1],esi
     460:	2a 00                	sub    al,BYTE PTR [rax]
     462:	00 00                	add    BYTE PTR [rax],al
     464:	78 04                	js     46a <__abi_tag+0xee>
     466:	00 00                	add    BYTE PTR [rax],al
     468:	01 78 04             	add    DWORD PTR [rax+0x4],edi
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     473:	2a 00                	sub    al,BYTE PTR [rax]
     475:	00 00                	add    BYTE PTR [rax],al
     477:	00 05 7d 04 00 00    	add    BYTE PTR [rip+0x47d],al        # 8fa <__abi_tag+0x57e>
     47d:	03 04 05 61 02 00 00 	add    eax,DWORD PTR [rax*1+0x261]
     484:	09 7d 04             	or     DWORD PTR [rbp+0x4],edi
     487:	00 00                	add    BYTE PTR [rax],al
     489:	04 d9                	add    al,0xd9
     48b:	00 00                	add    BYTE PTR [rax],al
     48d:	00 29                	add    BYTE PTR [rcx],ch
     48f:	04 0c                	add    al,0xc
     491:	62                   	(bad)
     492:	00 00                	add    BYTE PTR [rax],al
     494:	00 a9 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],ch
     49a:	78 04                	js     4a0 <__abi_tag+0x124>
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     4a4:	2a 00                	sub    al,BYTE PTR [rax]
     4a6:	00 00                	add    BYTE PTR [rax],al
     4a8:	00 11                	add    BYTE PTR [rcx],dl
     4aa:	25 00 00 00 ca       	and    eax,0xca000000
     4af:	03 c9                	add    ecx,ecx
     4b1:	04 00                	add    al,0x0
     4b3:	00 01                	add    BYTE PTR [rcx],al
     4b5:	44 00 00             	add    BYTE PTR [rax],r8b
     4b8:	00 01                	add    BYTE PTR [rcx],al
     4ba:	2a 00                	sub    al,BYTE PTR [rax]
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	01 2a                	add    DWORD PTR [rdx],ebp
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	00 01                	add    BYTE PTR [rcx],al
     4c4:	40 01 00             	rex add DWORD PTR [rax],eax
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	21 36                	and    DWORD PTR [rsi],esi
     4cb:	00 00                	add    BYTE PTR [rax],al
     4cd:	00 02                	add    BYTE PTR [rdx],al
     4cf:	fa                   	cli
     4d0:	02 0d dc 04 00 00    	add    cl,BYTE PTR [rip+0x4dc]        # 9b2 <__abi_tag+0x636>
     4d6:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     4d9:	00 00                	add    BYTE PTR [rax],al
     4db:	00 22                	add    BYTE PTR [rdx],ah
     4dd:	ec                   	in     al,dx
     4de:	02 00                	add    al,BYTE PTR [rax]
     4e0:	00 02                	add    BYTE PTR [rdx],al
     4e2:	3d 02 0c 62 00       	cmp    eax,0x620c02
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	11 eb                	adc    ebx,ebp
     4eb:	02 00                	add    al,BYTE PTR [rax]
     4ed:	00 3f                	add    BYTE PTR [rdi],bh
     4ef:	02 fa                	add    bh,dl
     4f1:	04 00                	add    al,0x0
     4f3:	00 01                	add    BYTE PTR [rcx],al
     4f5:	3d 00 00 00 00       	cmp    eax,0x0
     4fa:	06                   	(bad)
     4fb:	05 01 00 00 02       	add    eax,0x2000001
     500:	76 0f                	jbe    511 <__abi_tag+0x195>
     502:	89 03                	mov    DWORD PTR [rbx],eax
     504:	00 00                	add    BYTE PTR [rax],al
     506:	15 05 00 00 01       	adc    eax,0x1000005
     50b:	92                   	xchg   edx,eax
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 01                	add    BYTE PTR [rcx],al
     510:	15 05 00 00 00       	adc    eax,0x5
     515:	05 81 00 00 00       	add    eax,0x81
     51a:	0a 54 00 00          	or     dl,BYTE PTR [rax+rax*1+0x0]
     51e:	00 d7                	add    bh,dl
     520:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     523:	00 00                	add    BYTE PTR [rax],al
     525:	7a 00                	jp     527 <__abi_tag+0x1ab>
     527:	00 00                	add    BYTE PTR [rax],al
     529:	3d 05 00 00 01       	cmp    eax,0x1000005
     52e:	92                   	xchg   edx,eax
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	00 01                	add    BYTE PTR [rcx],al
     533:	15 05 00 00 01       	adc    eax,0x1000005
     538:	62                   	(bad)
     539:	00 00                	add    BYTE PTR [rax],al
     53b:	00 00                	add    BYTE PTR [rax],al
     53d:	0a 25 02 00 00 db    	or     ah,BYTE PTR [rip+0xffffffffdb000002]        # ffffffffdb000545 <_end+0xffffffffdaffa52d>
     543:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
     546:	00 00                	add    BYTE PTR [rax],al
     548:	36 00 00             	ss add BYTE PTR [rax],al
     54b:	00 60 05             	add    BYTE PTR [rax+0x5],ah
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     556:	15 05 00 00 01       	adc    eax,0x1000005
     55b:	62                   	(bad)
     55c:	00 00                	add    BYTE PTR [rax],al
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	04 d8                	add    al,0xd8
     562:	25 00 00 9b 03       	and    eax,0x39b0000
     567:	0c 62                	or     al,0x62
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     576:	06                   	(bad)
     577:	e1 01                	loope  57a <__abi_tag+0x1fe>
     579:	00 00                	add    BYTE PTR [rax],al
     57b:	09 8f 01 2a 00 00    	or     DWORD PTR [rdi+0x2a01],ecx
     581:	00 96 05 00 00 01    	add    BYTE PTR [rsi+0x1000005],dl
     587:	81 00 00 00 01 96    	add    DWORD PTR [rax],0x96010000
     58d:	05 00 00 01 2a       	add    eax,0x2a010000
     592:	00 00                	add    BYTE PTR [rax],al
     594:	00 00                	add    BYTE PTR [rax],al
     596:	05 84 04 00 00       	add    eax,0x484
     59b:	06                   	(bad)
     59c:	42 02 00             	rex.X add al,BYTE PTR [rax]
     59f:	00 09                	add    BYTE PTR [rcx],cl
     5a1:	4f 01 62 00          	rex.WRXB add QWORD PTR [r10+0x0],r12
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	b6 05                	mov    dh,0x5
     5a9:	00 00                	add    BYTE PTR [rax],al
     5ab:	01 81 00 00 00 01    	add    DWORD PTR [rcx+0x1000000],eax
     5b1:	7d 04                	jge    5b7 <__abi_tag+0x23b>
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	00 23                	add    BYTE PTR [rbx],ah
     5b7:	12 02                	adc    al,BYTE PTR [rdx]
     5b9:	00 00                	add    BYTE PTR [rax],al
     5bb:	0e                   	(bad)
     5bc:	57                   	push   rdi
     5bd:	01 0b                	add    DWORD PTR [rbx],ecx
     5bf:	15 06 00 00 02       	adc    eax,0x2000006
     5c4:	05 cc 0b 34 01       	add    eax,0x1340bcc
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	02 05 dc 0b 15 06    	add    al,BYTE PTR [rip+0x6150bdc]        # 61511ad <_end+0x614b195>
     5d1:	00 00                	add    BYTE PTR [rax],al
     5d3:	02 05 e7 0b 30 06    	add    al,BYTE PTR [rip+0x6300be7]        # 63011c0 <_end+0x62fb1a8>
     5d9:	00 00                	add    BYTE PTR [rax],al
     5db:	02 05 e8 0b 46 06    	add    al,BYTE PTR [rip+0x6460be8]        # 64611c9 <_end+0x645b1b1>
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	02 05 e9 0b 69 06    	add    al,BYTE PTR [rip+0x6690be9]        # 66911d2 <_end+0x668b1ba>
     5e9:	00 00                	add    BYTE PTR [rax],al
     5eb:	02 05 eb 0b 8c 06    	add    al,BYTE PTR [rip+0x68c0beb]        # 68c11dc <_end+0x68bb1c4>
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	02 05 ec 0b a7 06    	add    al,BYTE PTR [rip+0x6a70bec]        # 6a711e5 <_end+0x6a6b1cd>
     5f9:	00 00                	add    BYTE PTR [rax],al
     5fb:	10 64 69 76          	adc    BYTE PTR [rcx+rbp*2+0x76],ah
     5ff:	00 d9                	add    cl,bl
     601:	b8 01 00 00 34       	mov    eax,0x34000001
     606:	01 00                	add    DWORD PTR [rax],eax
     608:	00 01                	add    BYTE PTR [rcx],al
     60a:	97                   	xchg   edi,eax
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 01                	add    BYTE PTR [rcx],al
     60f:	97                   	xchg   edi,eax
     610:	00 00                	add    BYTE PTR [rax],al
     612:	00 00                	add    BYTE PTR [rax],al
     614:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	00 e6                	add    dh,ah
     61b:	03 1e                	add    ebx,DWORD PTR [rsi]
     61d:	34 01                	xor    al,0x1
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	30 06                	xor    BYTE PTR [rsi],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     62b:	97                   	xchg   edi,eax
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	04 2d                	add    al,0x2d
     632:	02 00                	add    al,BYTE PTR [rax]
     634:	00 ed                	add    ch,ch
     636:	01 01                	add    DWORD PTR [rcx],eax
     638:	97                   	xchg   edi,eax
     639:	00 00                	add    BYTE PTR [rax],al
     63b:	00 46 06             	add    BYTE PTR [rsi+0x6],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     646:	0a 88 00 00 00 ee    	or     cl,BYTE PTR [rax-0x12000000]
     64c:	16                   	(bad)
     64d:	7f 00                	jg     64f <__abi_tag+0x2d3>
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	97                   	xchg   edi,eax
     652:	00 00                	add    BYTE PTR [rax],al
     654:	00 69 06             	add    BYTE PTR [rcx+0x6],ch
     657:	00 00                	add    BYTE PTR [rax],al
     659:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     65f:	15 05 00 00 01       	adc    eax,0x1000005
     664:	62                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	00 00                	add    BYTE PTR [rax],al
     669:	0a b9 02 00 00 f3    	or     bh,BYTE PTR [rcx-0xcfffffe]
     66f:	1f                   	(bad)
     670:	b0 02                	mov    al,0x2
     672:	00 00                	add    BYTE PTR [rax],al
     674:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 8c 06 00 00 01 92 	add    BYTE PTR [rsi+rax*1-0x6dff0000],cl
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	00 01                	add    BYTE PTR [rcx],al
     682:	15 05 00 00 01       	adc    eax,0x1000005
     687:	62                   	(bad)
     688:	00 00                	add    BYTE PTR [rax],al
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	06                   	(bad)
     68d:	97                   	xchg   edi,eax
     68e:	02 00                	add    al,BYTE PTR [rax]
     690:	00 02                	add    BYTE PTR [rdx],al
     692:	7c 0e                	jl     6a2 <__abi_tag+0x326>
     694:	ac                   	lods   al,BYTE PTR ds:[rsi]
     695:	00 00                	add    BYTE PTR [rax],al
     697:	00 a7 06 00 00 01    	add    BYTE PTR [rdi+0x1000006],ah
     69d:	92                   	xchg   edx,eax
     69e:	00 00                	add    BYTE PTR [rax],al
     6a0:	00 01                	add    BYTE PTR [rcx],al
     6a2:	15 05 00 00 00       	adc    eax,0x5
     6a7:	06                   	(bad)
     6a8:	2b 00                	sub    eax,DWORD PTR [rax]
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	02 7f 14             	add    bh,BYTE PTR [rdi+0x14]
     6af:	9e                   	sahf
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 c2                	add    dl,al
     6b4:	06                   	(bad)
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     6bd:	15 05 00 00 00       	adc    eax,0x5
     6c2:	02 0a                	add    cl,BYTE PTR [rdx]
     6c4:	27                   	(bad)
     6c5:	0c 3c                	or     al,0x3c
     6c7:	03 00                	add    eax,DWORD PTR [rax]
     6c9:	00 02                	add    BYTE PTR [rdx],al
     6cb:	0a 2b                	or     ch,BYTE PTR [rbx]
     6cd:	0e                   	(bad)
     6ce:	58                   	pop    rax
     6cf:	03 00                	add    eax,DWORD PTR [rax]
     6d1:	00 02                	add    BYTE PTR [rdx],al
     6d3:	0a 2e                	or     ch,BYTE PTR [rsi]
     6d5:	0e                   	(bad)
     6d6:	c9                   	leave
     6d7:	04 00                	add    al,0x0
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	0a 36                	or     dh,BYTE PTR [rsi]
     6dd:	0c d6                	or     al,0xd6
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 02                	add    BYTE PTR [rdx],al
     6e3:	0a 37                	or     dh,BYTE PTR [rdi]
     6e5:	0c 05                	or     al,0x5
     6e7:	01 00                	add    DWORD PTR [rax],eax
     6e9:	00 03                	add    BYTE PTR [rbx],al
     6eb:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 02                	add    BYTE PTR [rdx],al
     6f2:	0a 39                	or     bh,BYTE PTR [rcx]
     6f4:	0c 7a                	or     al,0x7a
     6f6:	02 00                	add    al,BYTE PTR [rax]
     6f8:	00 03                	add    BYTE PTR [rbx],al
     6fa:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 8ea <__abi_tag+0x56e>
     700:	02 0a                	add    cl,BYTE PTR [rdx]
     702:	39 0c 92             	cmp    DWORD PTR [rdx+rdx*4],ecx
     705:	02 00                	add    al,BYTE PTR [rax]
     707:	00 02                	add    BYTE PTR [rdx],al
     709:	0a 39                	or     bh,BYTE PTR [rcx]
     70b:	0c aa                	or     al,0xaa
     70d:	02 00                	add    al,BYTE PTR [rax]
     70f:	00 02                	add    BYTE PTR [rdx],al
     711:	0a 39                	or     bh,BYTE PTR [rcx]
     713:	0c c2                	or     al,0xc2
     715:	02 00                	add    al,BYTE PTR [rax]
     717:	00 02                	add    BYTE PTR [rdx],al
     719:	0a 39                	or     bh,BYTE PTR [rcx]
     71b:	0c da                	or     al,0xda
     71d:	02 00                	add    al,BYTE PTR [rax]
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	0a 39                	or     bh,BYTE PTR [rcx]
     723:	0c f2                	or     al,0xf2
     725:	02 00                	add    al,BYTE PTR [rax]
     727:	00 02                	add    BYTE PTR [rdx],al
     729:	0a 39                	or     bh,BYTE PTR [rcx]
     72b:	0c 0a                	or     al,0xa
     72d:	03 00                	add    eax,DWORD PTR [rax]
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	0a 3a                	or     bh,BYTE PTR [rdx]
     733:	0c 73                	or     al,0x73
     735:	03 00                	add    eax,DWORD PTR [rax]
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	0a 3b                	or     bh,BYTE PTR [rbx]
     73b:	0c 90                	or     al,0x90
     73d:	03 00                	add    eax,DWORD PTR [rax]
     73f:	00 02                	add    BYTE PTR [rdx],al
     741:	0a 3c 0c             	or     bh,BYTE PTR [rsp+rcx*1]
     744:	b0 03                	mov    al,0x3
     746:	00 00                	add    BYTE PTR [rax],al
     748:	02 0a                	add    cl,BYTE PTR [rdx]
     74a:	3d 0c c6 03 00       	cmp    eax,0x3c60c
     74f:	00 02                	add    BYTE PTR [rdx],al
     751:	0a 3f                	or     bh,BYTE PTR [rdi]
     753:	0c fb                	or     al,0xfb
     755:	05 00 00 02 0a       	add    eax,0xa020000
     75a:	3f                   	(bad)
     75b:	0c 22                	or     al,0x22
     75d:	03 00                	add    eax,DWORD PTR [rax]
     75f:	00 02                	add    BYTE PTR [rdx],al
     761:	0a 3f                	or     bh,BYTE PTR [rdi]
     763:	0c f0                	or     al,0xf0
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	0a 41 0c             	or     al,BYTE PTR [rcx+0xc]
     76c:	0c 04                	or     al,0x4
     76e:	00 00                	add    BYTE PTR [rax],al
     770:	02 0a                	add    cl,BYTE PTR [rdx]
     772:	43 0c 22             	rex.XB or al,0x22
     775:	04 00                	add    al,0x0
     777:	00 02                	add    BYTE PTR [rdx],al
     779:	0a 46 0c             	or     al,BYTE PTR [rsi+0xc]
     77c:	3d 04 00 00 02       	cmp    eax,0x2000004
     781:	0a 47 0c             	or     al,BYTE PTR [rdi+0xc]
     784:	58                   	pop    rax
     785:	04 00                	add    al,0x0
     787:	00 02                	add    BYTE PTR [rdx],al
     789:	0a 48 0c             	or     cl,BYTE PTR [rax+0xc]
     78c:	89 04 00             	mov    DWORD PTR [rax+rax*1],eax
     78f:	00 02                	add    BYTE PTR [rdx],al
     791:	0a 4a 0c             	or     cl,BYTE PTR [rdx+0xc]
     794:	a9 04 00 00 02       	test   eax,0x2000004
     799:	0a 4b 0c             	or     cl,BYTE PTR [rbx+0xc]
     79c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
     79f:	00 02                	add    BYTE PTR [rdx],al
     7a1:	0a 4d 0c             	or     cl,BYTE PTR [rbp+0xc]
     7a4:	e9 04 00 00 02       	jmp    20007ad <_end+0x1ffa795>
     7a9:	0a 4e 0c             	or     cl,BYTE PTR [rsi+0xc]
     7ac:	fa                   	cli
     7ad:	04 00                	add    al,0x0
     7af:	00 02                	add    BYTE PTR [rdx],al
     7b1:	0a 4f 0c             	or     cl,BYTE PTR [rdi+0xc]
     7b4:	1a 05 00 00 02 0a    	sbb    al,BYTE PTR [rip+0xa020000]        # a0207ba <_end+0xa01a7a2>
     7ba:	50                   	push   rax
     7bb:	0c 3d                	or     al,0x3d
     7bd:	05 00 00 02 0a       	add    eax,0xa020000
     7c2:	51                   	push   rcx
     7c3:	0c 60                	or     al,0x60
     7c5:	05 00 00 02 0a       	add    eax,0xa020000
     7ca:	53                   	push   rbx
     7cb:	0c 76                	or     al,0x76
     7cd:	05 00 00 02 0a       	add    eax,0xa020000
     7d2:	54                   	push   rsp
     7d3:	0c 9b                	or     al,0x9b
     7d5:	05 00 00 03 02       	add    eax,0x2030000
     7da:	04 00                	add    al,0x0
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 03                	add    BYTE PTR [rbx],al
     7e0:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 08                	add    BYTE PTR [rax],cl
     7e7:	ab                   	stos   DWORD PTR es:[rdi],eax
     7e8:	00 00                	add    BYTE PTR [rax],al
     7ea:	00 0b                	add    BYTE PTR [rbx],cl
     7ec:	1a 14 6e             	sbb    dl,BYTE PTR [rsi+rbp*2]
     7ef:	00 00                	add    BYTE PTR [rax],al
     7f1:	00 09                	add    BYTE PTR [rcx],cl
     7f3:	e6 07                	out    0x7,al
     7f5:	00 00                	add    BYTE PTR [rax],al
     7f7:	0f 69 02             	punpckhwd mm0,QWORD PTR [rdx]
     7fa:	00 00                	add    BYTE PTR [rax],al
     7fc:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
     7ff:	00 00                	add    BYTE PTR [rax],al
     801:	0f                   	(bad)
     802:	0f 75 02             	pcmpeqw mm0,QWORD PTR [rdx]
     805:	00 00                	add    BYTE PTR [rax],al
     807:	09 69 00             	or     DWORD PTR [rcx+0x0],ebp
     80a:	00 00                	add    BYTE PTR [rax],al
     80c:	02 0f                	add    cl,BYTE PTR [rdi]
     80e:	c4                   	(bad)
     80f:	00 00                	add    BYTE PTR [rax],al
     811:	00 0a                	add    BYTE PTR [rdx],cl
     813:	69 00 00 00 20 24    	imul   eax,DWORD PTR [rax],0x24200000
     819:	90                   	nop
     81a:	00 00                	add    BYTE PTR [rax],al
     81c:	00 0d 06 10 f2 07    	add    BYTE PTR [rip+0x7f21006],cl        # 7f21828 <_end+0x7f1b810>
     822:	00 00                	add    BYTE PTR [rax],al
     824:	40                   	rex
     825:	42 0f 00 25 0c 01 00 	rex.X verr WORD PTR [rip+0x10c]        # 939 <__abi_tag+0x5bd>
     82c:	00 
     82d:	0d 1d 06 9e 02       	or     eax,0x29e061d
     832:	00 00                	add    BYTE PTR [rax],al
     834:	48 08 00             	rex.W or BYTE PTR [rax],al
     837:	00 01                	add    BYTE PTR [rcx],al
     839:	92                   	xchg   edx,eax
     83a:	00 00                	add    BYTE PTR [rax],al
     83c:	00 01                	add    BYTE PTR [rcx],al
     83e:	e6 07                	out    0x7,al
     840:	00 00                	add    BYTE PTR [rax],al
     842:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     848:	26 a4                	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     84a:	00 00                	add    BYTE PTR [rax],al
     84c:	00 01                	add    BYTE PTR [rcx],al
     84e:	07                   	(bad)
     84f:	05 62 00 00 00       	add    eax,0x62
     854:	e0 11                	loopne 867 <__abi_tag+0x4eb>
     856:	00 00                	add    BYTE PTR [rax],al
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	2e 00 00             	cs add BYTE PTR [rax],al
     85f:	00 00                	add    BYTE PTR [rax],al
     861:	00 00                	add    BYTE PTR [rax],al
     863:	00 01                	add    BYTE PTR [rcx],al
     865:	9c                   	pushf
     866:	12 0d 02 00 00 0e    	adc    cl,BYTE PTR [rip+0xe000002]        # e00086e <_end+0xdffa856>
     86c:	62                   	(bad)
     86d:	00 00                	add    BYTE PTR [rax],al
     86f:	00 10                	add    BYTE PTR [rax],dl
     871:	00 00                	add    BYTE PTR [rax],al
     873:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     876:	00 00                	add    BYTE PTR [rax],al
     878:	12 d7                	adc    dl,bh
     87a:	01 00                	add    DWORD PTR [rax],eax
     87c:	00 1a                	add    BYTE PTR [rdx],bl
     87e:	15 05 00 00 2b       	adc    eax,0x2b000005
     883:	00 00                	add    BYTE PTR [rax],al
     885:	00 27                	add    BYTE PTR [rdi],ah
     887:	00 00                	add    BYTE PTR [rax],al
     889:	00 27                	add    BYTE PTR [rdi],ah
     88b:	90                   	nop
     88c:	03 00                	add    eax,DWORD PTR [rax]
     88e:	00 f2                	add    dl,dh
     890:	11 00                	adc    DWORD PTR [rax],eax
     892:	00 00                	add    BYTE PTR [rax],al
     894:	00 00                	add    BYTE PTR [rax],al
     896:	00 00                	add    BYTE PTR [rax],al
     898:	0c 00                	or     al,0x0
     89a:	00 00                	add    BYTE PTR [rax],al
     89c:	01 08                	add    DWORD PTR [rax],ecx
     89e:	1d c9 08 00 00       	sbb    eax,0x8c9
     8a3:	28 a2 03 00 00 44    	sub    BYTE PTR [rdx+0x44000003],ah
     8a9:	00 00                	add    BYTE PTR [rax],al
     8ab:	00 42 00             	add    BYTE PTR [rdx+0x0],al
     8ae:	00 00                	add    BYTE PTR [rax],al
     8b0:	13 f9                	adc    edi,ecx
     8b2:	11 00                	adc    DWORD PTR [rax],eax
     8b4:	00 00                	add    BYTE PTR [rax],al
     8b6:	00 00                	add    BYTE PTR [rax],al
     8b8:	00 1a                	add    BYTE PTR [rdx],bl
     8ba:	05 00 00 0b 01       	add    eax,0x10b0000
     8bf:	54                   	push   rsp
     8c0:	01 30                	add    DWORD PTR [rax],esi
     8c2:	0b 01                	or     eax,DWORD PTR [rcx]
     8c4:	51                   	push   rcx
     8c5:	01 3a                	add    DWORD PTR [rdx],edi
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	13 0a                	adc    ecx,DWORD PTR [rdx]
     8cb:	12 00                	adc    al,BYTE PTR [rax]
     8cd:	00 00                	add    BYTE PTR [rax],al
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	00 28                	add    BYTE PTR [rax],ch
     8d3:	08 00                	or     BYTE PTR [rax],al
     8d5:	00 0b                	add    BYTE PTR [rbx],cl
     8d7:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
     8da:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
     8dd:	00 00                	add    BYTE PTR [rax],al
     8df:	00 00                	add    BYTE PTR [rax],al
     8e1:	00 00                	add    BYTE PTR [rax],al
     8e3:	0b 01                	or     eax,DWORD PTR [rcx]
     8e5:	51                   	push   rcx
     8e6:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
     8e9:	00 00                	add    BYTE PTR [rax],al
     8eb:	00 67 19             	add    BYTE PTR [rdi+0x19],ah
     8ee:	00 00                	add    BYTE PTR [rax],al
     8f0:	05 00 01 08 87       	add    eax,0x87080100
     8f5:	02 00                	add    al,BYTE PTR [rax]
     8f7:	00 3b                	add    BYTE PTR [rbx],bh
     8f9:	14 01                	adc    al,0x1
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	21 81 01 00 00 00    	and    DWORD PTR [rcx+0x1],eax
     903:	00 00                	add    BYTE PTR [rax],al
     905:	00 00                	add    BYTE PTR [rax],al
     907:	13 00                	adc    eax,DWORD PTR [rax]
     909:	00 00                	add    BYTE PTR [rax],al
     90b:	00 00                	add    BYTE PTR [rax],al
     90d:	00 1e                	add    BYTE PTR [rsi],bl
     90f:	07                   	(bad)
     910:	00 00                	add    BYTE PTR [rax],al
     912:	00 00                	add    BYTE PTR [rax],al
     914:	00 00                	add    BYTE PTR [rax],al
     916:	e7 00                	out    0x0,eax
     918:	00 00                	add    BYTE PTR [rax],al
     91a:	08 cc                	or     ah,cl
     91c:	0a 00                	or     al,BYTE PTR [rax]
     91e:	00 06                	add    BYTE PTR [rsi],al
     920:	d6                   	(bad)
     921:	17                   	(bad)
     922:	3a 00                	cmp    al,BYTE PTR [rax]
     924:	00 00                	add    BYTE PTR [rax],al
     926:	05 08 07 f3 00       	add    eax,0xf30708
     92b:	00 00                	add    BYTE PTR [rax],al
     92d:	22 08                	and    cl,BYTE PTR [rax]
     92f:	3c dd                	cmp    al,0xdd
     931:	02 00                	add    al,BYTE PTR [rax]
     933:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     936:	00 00                	add    BYTE PTR [rax],al
     938:	06                   	(bad)
     939:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     93c:	00 07                	add    BYTE PTR [rdi],al
     93e:	3d 09 66 00 00       	cmp    eax,0x6609
     943:	00 00                	add    BYTE PTR [rax],al
     945:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     948:	6d                   	ins    DWORD PTR es:[rdi],dx
     949:	00 3e                	add    BYTE PTR [rsi],bh
     94b:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
     94e:	00 00                	add    BYTE PTR [rax],al
     950:	04 00                	add    al,0x0
     952:	3c 04                	cmp    al,0x4
     954:	05 69 6e 74 00       	add    eax,0x746e69
     959:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
     95c:	00 00                	add    BYTE PTR [rax],al
     95e:	08 de                	or     dh,bl
     960:	02 00                	add    al,BYTE PTR [rax]
     962:	00 07                	add    BYTE PTR [rdi],al
     964:	3f                   	(bad)
     965:	05 41 00 00 00       	add    eax,0x41
     96a:	22 10                	and    dl,BYTE PTR [rax]
     96c:	44 09 00             	or     DWORD PTR [rax],r8d
     96f:	00 00                	add    BYTE PTR [rax],al
     971:	a3 00 00 00 06 49 02 	movabs ds:0x24906000000,eax
     978:	00 00 
     97a:	07                   	(bad)
     97b:	45 0e                	rex.RB (bad)
     97d:	a3 00 00 00 00 23 72 	movabs ds:0x6d65722300000000,eax
     984:	65 6d 
     986:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
     989:	a3 00 00 00 08 00 05 	movabs ds:0x508050008000000,eax
     990:	08 05 
     992:	e5 00                	in     eax,0x0
     994:	00 00                	add    BYTE PTR [rax],al
     996:	08 0a                	or     BYTE PTR [rdx],cl
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	00 07                	add    BYTE PTR [rdi],al
     99c:	47 05 7e 00 00 00    	rex.RXB add eax,0x7e
     9a2:	22 10                	and    dl,BYTE PTR [rax]
     9a4:	4e b4 00             	rex.WRX mov spl,0x0
     9a7:	00 00                	add    BYTE PTR [rax],al
     9a9:	db 00                	fild   DWORD PTR [rax]
     9ab:	00 00                	add    BYTE PTR [rax],al
     9ad:	06                   	(bad)
     9ae:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     9b1:	00 07                	add    BYTE PTR [rdi],al
     9b3:	4f 13 db             	rex.WRXB adc r11,r11
     9b6:	00 00                	add    BYTE PTR [rax],al
     9b8:	00 00                	add    BYTE PTR [rax],al
     9ba:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     9bd:	6d                   	ins    DWORD PTR es:[rdi],dx
     9be:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     9c1:	db 00                	fild   DWORD PTR [rax]
     9c3:	00 00                	add    BYTE PTR [rax],al
     9c5:	08 00                	or     BYTE PTR [rax],al
     9c7:	05 08 05 e0 00       	add    eax,0xe00508
     9cc:	00 00                	add    BYTE PTR [rax],al
     9ce:	08 b5 00 00 00 07    	or     BYTE PTR [rbp+0x7000000],dh
     9d4:	51                   	push   rcx
     9d5:	05 b6 00 00 00       	add    eax,0xb6
     9da:	05 02 07 4e 02       	add    eax,0x24e0702
     9df:	00 00                	add    BYTE PTR [rax],al
     9e1:	09 06                	or     DWORD PTR [rsi],eax
     9e3:	01 00                	add    DWORD PTR [rax],eax
     9e5:	00 2a                	add    BYTE PTR [rdx],ch
     9e7:	f5                   	cmc
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	00 05 01 06 08 02    	add    BYTE PTR [rip+0x2080601],al        # 2080ff1 <_end+0x207afd9>
     9f0:	00 00                	add    BYTE PTR [rax],al
     9f2:	12 ff                	adc    bh,bh
     9f4:	00 00                	add    BYTE PTR [rax],al
     9f6:	00 05 01 08 ff 01    	add    BYTE PTR [rip+0x1ff0801],al        # 1ff11fd <_end+0x1feb1e5>
     9fc:	00 00                	add    BYTE PTR [rax],al
     9fe:	05 04 07 f8 00       	add    eax,0xf80704
     a03:	00 00                	add    BYTE PTR [rax],al
     a05:	05 01 06 01 02       	add    eax,0x2010601
     a0a:	00 00                	add    BYTE PTR [rax],al
     a0c:	05 02 05 5b 00       	add    eax,0x5b0502
     a11:	00 00                	add    BYTE PTR [rax],al
     a13:	08 a9 00 00 00 08    	or     BYTE PTR [rcx+0x8000000],ch
     a19:	2a 16                	sub    dl,BYTE PTR [rsi]
     a1b:	12 01                	adc    al,BYTE PTR [rcx]
     a1d:	00 00                	add    BYTE PTR [rax],al
     a1f:	08 85 05 00 00 08    	or     BYTE PTR [rbp+0x8000005],al
     a25:	2d 1b 3a 00 00       	sub    eax,0x3a1b
     a2a:	00 3d 08 09 ff 00    	add    BYTE PTR [rip+0xff0908],bh        # ff1338 <_end+0xfeb320>
     a30:	00 00                	add    BYTE PTR [rax],al
     a32:	2a 41 01             	sub    al,BYTE PTR [rcx+0x1]
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	05 08 07 ee 00       	add    eax,0xee0708
     a3c:	00 00                	add    BYTE PTR [rax],al
     a3e:	3e cf                	ds iret
     a40:	02 00                	add    al,BYTE PTR [rax]
     a42:	00 07                	add    BYTE PTR [rdi],al
     a44:	b4 03                	mov    ah,0x3
     a46:	0f 5f 01             	maxps  xmm0,XMMWORD PTR [rcx]
     a49:	00 00                	add    BYTE PTR [rax],al
     a4b:	09 64 01 00          	or     DWORD PTR [rcx+rax*1+0x0],esp
     a4f:	00 2b                	add    BYTE PTR [rbx],ch
     a51:	66 00 00             	data16 add BYTE PTR [rax],al
     a54:	00 78 01             	add    BYTE PTR [rax+0x1],bh
     a57:	00 00                	add    BYTE PTR [rax],al
     a59:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a5c:	00 00                	add    BYTE PTR [rax],al
     a5e:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a61:	00 00                	add    BYTE PTR [rax],al
     a63:	00 09                	add    BYTE PTR [rcx],cl
     a65:	7d 01                	jge    a68 <__abi_tag+0x6ec>
     a67:	00 00                	add    BYTE PTR [rax],al
     a69:	3f                   	(bad)
     a6a:	40 73 74             	rex jae ae1 <__abi_tag+0x765>
     a6d:	64 00 15 32 01 0b 4e 	add    BYTE PTR fs:[rip+0x4e0b0132],dl        # 4e0b0ba6 <_end+0x4e0aab8e>
     a74:	03 00                	add    eax,DWORD PTR [rax]
     a76:	00 02                	add    BYTE PTR [rdx],al
     a78:	09 83 0b 72 00 00    	or     DWORD PTR [rbx+0x720b],eax
     a7e:	00 02                	add    BYTE PTR [rdx],al
     a80:	09 84 0b aa 00 00 00 	or     DWORD PTR [rbx+rcx*1+0xaa],eax
     a87:	02 09                	add    cl,BYTE PTR [rcx]
     a89:	8a 0b                	mov    cl,BYTE PTR [rbx]
     a8b:	4e 03 00             	rex.WRX add r8,QWORD PTR [rax]
     a8e:	00 02                	add    BYTE PTR [rdx],al
     a90:	09 8d 0b 6a 03 00    	or     DWORD PTR [rbp+0x36a0b],ecx
     a96:	00 02                	add    BYTE PTR [rdx],al
     a98:	09 90 0b 85 03 00    	or     DWORD PTR [rax+0x3850b],edx
     a9e:	00 02                	add    BYTE PTR [rdx],al
     aa0:	09 91 0b a2 03 00    	or     DWORD PTR [rcx+0x3a20b],edx
     aa6:	00 02                	add    BYTE PTR [rdx],al
     aa8:	09 92 0b b8 03 00    	or     DWORD PTR [rdx+0x3b80b],edx
     aae:	00 02                	add    BYTE PTR [rdx],al
     ab0:	09 93 0b ce 03 00    	or     DWORD PTR [rbx+0x3ce0b],edx
     ab6:	00 02                	add    BYTE PTR [rdx],al
     ab8:	09 95 0b f8 03 00    	or     DWORD PTR [rbp+0x3f80b],edx
     abe:	00 02                	add    BYTE PTR [rdx],al
     ac0:	09 98 0b 14 04 00    	or     DWORD PTR [rax+0x4140b],ebx
     ac6:	00 02                	add    BYTE PTR [rdx],al
     ac8:	09 9a 0b 2a 04 00    	or     DWORD PTR [rdx+0x42a0b],ebx
     ace:	00 02                	add    BYTE PTR [rdx],al
     ad0:	09 9d 0b 45 04 00    	or     DWORD PTR [rbp+0x4450b],ebx
     ad6:	00 02                	add    BYTE PTR [rdx],al
     ad8:	09 9e 0b 60 04 00    	or     DWORD PTR [rsi+0x4600b],ebx
     ade:	00 02                	add    BYTE PTR [rdx],al
     ae0:	09 9f 0b 91 04 00    	or     DWORD PTR [rdi+0x4910b],ebx
     ae6:	00 02                	add    BYTE PTR [rdx],al
     ae8:	09 a1 0b b1 04 00    	or     DWORD PTR [rcx+0x4b10b],esp
     aee:	00 02                	add    BYTE PTR [rdx],al
     af0:	09 a4 0b d1 04 00 00 	or     DWORD PTR [rbx+rcx*1+0x4d1],esp
     af7:	02 09                	add    cl,BYTE PTR [rcx]
     af9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     afa:	0b e4                	or     esp,esp
     afc:	04 00                	add    al,0x0
     afe:	00 02                	add    BYTE PTR [rdx],al
     b00:	09 a9 0b f1 04 00    	or     DWORD PTR [rcx+0x4f10b],ebp
     b06:	00 02                	add    BYTE PTR [rdx],al
     b08:	09 aa 0b 02 05 00    	or     DWORD PTR [rdx+0x5020b],ebp
     b0e:	00 02                	add    BYTE PTR [rdx],al
     b10:	09 ab 0b 22 05 00    	or     DWORD PTR [rbx+0x5220b],ebp
     b16:	00 02                	add    BYTE PTR [rdx],al
     b18:	09 ac 0b 46 05 00 00 	or     DWORD PTR [rbx+rcx*1+0x546],ebp
     b1f:	02 09                	add    cl,BYTE PTR [rcx]
     b21:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b22:	0b 6a 05             	or     ebp,DWORD PTR [rdx+0x5]
     b25:	00 00                	add    BYTE PTR [rax],al
     b27:	02 09                	add    cl,BYTE PTR [rcx]
     b29:	af                   	scas   eax,DWORD PTR es:[rdi]
     b2a:	0b 80 05 00 00 02    	or     eax,DWORD PTR [rax+0x2000005]
     b30:	09 b0 0b a5 05 00    	or     DWORD PTR [rax+0x5a50b],esi
     b36:	00 02                	add    BYTE PTR [rdx],al
     b38:	09 f4                	or     esp,esi
     b3a:	16                   	(bad)
     b3b:	e2 00                	loop   b3d <__abi_tag+0x7c1>
     b3d:	00 00                	add    BYTE PTR [rax],al
     b3f:	02 09                	add    cl,BYTE PTR [rcx]
     b41:	f9                   	stc
     b42:	16                   	(bad)
     b43:	05 06 00 00 02       	add    eax,0x2000006
     b48:	09 fa                	or     edx,edi
     b4a:	16                   	(bad)
     b4b:	1f                   	(bad)
     b4c:	06                   	(bad)
     b4d:	00 00                	add    BYTE PTR [rax],al
     b4f:	02 09                	add    cl,BYTE PTR [rcx]
     b51:	fc                   	cld
     b52:	16                   	(bad)
     b53:	3a 06                	cmp    al,BYTE PTR [rsi]
     b55:	00 00                	add    BYTE PTR [rax],al
     b57:	02 09                	add    cl,BYTE PTR [rcx]
     b59:	fd                   	std
     b5a:	16                   	(bad)
     b5b:	98                   	cwde
     b5c:	06                   	(bad)
     b5d:	00 00                	add    BYTE PTR [rax],al
     b5f:	02 09                	add    cl,BYTE PTR [rcx]
     b61:	fe                   	(bad)
     b62:	16                   	(bad)
     b63:	50                   	push   rax
     b64:	06                   	(bad)
     b65:	00 00                	add    BYTE PTR [rax],al
     b67:	02 09                	add    cl,BYTE PTR [rcx]
     b69:	ff 16                	call   QWORD PTR [rsi]
     b6b:	74 06                	je     b73 <__abi_tag+0x7f7>
     b6d:	00 00                	add    BYTE PTR [rax],al
     b6f:	41 09 00             	or     DWORD PTR [r8],eax
     b72:	01 16                	add    DWORD PTR [rsi],edx
     b74:	ba 06 00 00 13       	mov    edx,0x13000006
     b79:	61                   	(bad)
     b7a:	62 73 00 89 0f       	(bad)
     b7f:	03 00                	add    eax,DWORD PTR [rax]
     b81:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     b87:	02 00                	add    al,BYTE PTR [rax]
     b89:	00 01                	add    BYTE PTR [rcx],al
     b8b:	04 07                	add    al,0x7
     b8d:	00 00                	add    BYTE PTR [rax],al
     b8f:	00 13                	add    BYTE PTR [rbx],dl
     b91:	61                   	(bad)
     b92:	62 73 00 55 1b       	(bad)
     b97:	00 00                	add    BYTE PTR [rax],al
     b99:	00 13                	add    BYTE PTR [rbx],dl
     b9b:	07                   	(bad)
     b9c:	00 00                	add    BYTE PTR [rax],al
     b9e:	bc 02 00 00 01       	mov    esp,0x1000002
     ba3:	13 07                	adc    eax,DWORD PTR [rdi]
     ba5:	00 00                	add    BYTE PTR [rax],al
     ba7:	00 13                	add    BYTE PTR [rbx],dl
     ba9:	61                   	(bad)
     baa:	62 73 00 4f fb       	(bad)
     baf:	02 00                	add    al,BYTE PTR [rax]
     bb1:	00 d5                	add    ch,dl
     bb3:	06                   	(bad)
     bb4:	00 00                	add    BYTE PTR [rax],al
     bb6:	d4                   	(bad)
     bb7:	02 00                	add    al,BYTE PTR [rax]
     bb9:	00 01                	add    BYTE PTR [rcx],al
     bbb:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     bbf:	00 13                	add    BYTE PTR [rbx],dl
     bc1:	61                   	(bad)
     bc2:	62 73 00 4b 05       	(bad)
     bc7:	03 00                	add    eax,DWORD PTR [rax]
     bc9:	00 b3 06 00 00 ec    	add    BYTE PTR [rbx-0x13fffffa],dh
     bcf:	02 00                	add    al,BYTE PTR [rax]
     bd1:	00 01                	add    BYTE PTR [rcx],al
     bd3:	b3 06                	mov    bl,0x6
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	00 13                	add    BYTE PTR [rbx],dl
     bd9:	61                   	(bad)
     bda:	62 73 00 47 f1       	(bad)
     bdf:	02 00                	add    al,BYTE PTR [rax]
     be1:	00 9b 03 00 00 04    	add    BYTE PTR [rbx+0x4000003],bl
     be7:	03 00                	add    eax,DWORD PTR [rax]
     be9:	00 01                	add    BYTE PTR [rcx],al
     beb:	9b                   	fwait
     bec:	03 00                	add    eax,DWORD PTR [rax]
     bee:	00 00                	add    BYTE PTR [rax],al
     bf0:	13 61 62             	adc    esp,DWORD PTR [rcx+0x62]
     bf3:	73 00                	jae    bf5 <__abi_tag+0x879>
     bf5:	3d 41 00 00 00       	cmp    eax,0x41
     bfa:	db 00                	fild   DWORD PTR [rax]
     bfc:	00 00                	add    BYTE PTR [rax],al
     bfe:	1c 03                	sbb    al,0x3
     c00:	00 00                	add    BYTE PTR [rax],al
     c02:	01 db                	add    ebx,ebx
     c04:	00 00                	add    BYTE PTR [rax],al
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	13 61 62             	adc    esp,DWORD PTR [rcx+0x62]
     c0b:	73 00                	jae    c0d <__abi_tag+0x891>
     c0d:	38 11                	cmp    BYTE PTR [rcx],dl
     c0f:	00 00                	add    BYTE PTR [rax],al
     c11:	00 a3 00 00 00 34    	add    BYTE PTR [rbx+0x34000000],ah
     c17:	03 00                	add    eax,DWORD PTR [rax]
     c19:	00 01                	add    BYTE PTR [rcx],al
     c1b:	a3 00 00 00 00 2c 64 	movabs ds:0x7669642c00000000,eax
     c22:	69 76 
     c24:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
     c2a:	aa                   	stos   BYTE PTR es:[rdi],al
     c2b:	00 00                	add    BYTE PTR [rax],al
     c2d:	00 01                	add    BYTE PTR [rcx],al
     c2f:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     c36:	00 00 
     c38:	00 00                	add    BYTE PTR [rax],al
     c3a:	0b 6d 00             	or     ebp,DWORD PTR [rbp+0x0]
     c3d:	00 00                	add    BYTE PTR [rax],al
     c3f:	de 02                	fiadd  WORD PTR [rdx]
     c41:	0c 66                	or     al,0x66
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	00 64 03 00          	add    BYTE PTR [rbx+rax*1+0x0],ah
     c49:	00 01                	add    BYTE PTR [rcx],al
     c4b:	64 03 00             	add    eax,DWORD PTR fs:[rax]
     c4e:	00 00                	add    BYTE PTR [rax],al
     c50:	09 69 03             	or     DWORD PTR [rcx+0x3],ebp
     c53:	00 00                	add    BYTE PTR [rax],al
     c55:	42                   	rex.X
     c56:	43 33 00             	rex.XB xor eax,DWORD PTR [r8]
     c59:	00 00                	add    BYTE PTR [rax],al
     c5b:	07                   	(bad)
     c5c:	e3 02                	jrcxz  c60 <__abi_tag+0x8e4>
     c5e:	12 33                	adc    dh,BYTE PTR [rbx]
     c60:	00 00                	add    BYTE PTR [rax],al
     c62:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     c65:	00 00                	add    BYTE PTR [rax],al
     c67:	85 03                	test   DWORD PTR [rbx],eax
     c69:	00 00                	add    BYTE PTR [rax],al
     c6b:	01 64 03 00          	add    DWORD PTR [rbx+rax*1+0x0],esp
     c6f:	00 00                	add    BYTE PTR [rax],al
     c71:	0f cd                	bswap  ebp
     c73:	01 00                	add    DWORD PTR [rax],eax
     c75:	00 0b                	add    BYTE PTR [rbx],cl
     c77:	19 01                	sbb    DWORD PTR [rcx],eax
     c79:	9b                   	fwait
     c7a:	03 00                	add    eax,DWORD PTR [rax]
     c7c:	00 9b 03 00 00 01    	add    BYTE PTR [rbx+0x1000003],bl
     c82:	f5                   	cmc
     c83:	00 00                	add    BYTE PTR [rax],al
     c85:	00 00                	add    BYTE PTR [rax],al
     c87:	05 08 04 f8 01       	add    eax,0x1f80408
     c8c:	00 00                	add    BYTE PTR [rax],al
     c8e:	0b d2                	or     edx,edx
     c90:	01 00                	add    DWORD PTR [rax],eax
     c92:	00 e1                	add    cl,ah
     c94:	01 01                	add    DWORD PTR [rcx],eax
     c96:	66 00 00             	data16 add BYTE PTR [rax],al
     c99:	00 b8 03 00 00 01    	add    BYTE PTR [rax+0x1000003],bh
     c9f:	f5                   	cmc
     ca0:	00 00                	add    BYTE PTR [rax],al
     ca2:	00 00                	add    BYTE PTR [rax],al
     ca4:	0b dc                	or     ebx,esp
     ca6:	01 00                	add    DWORD PTR [rax],eax
     ca8:	00 e6                	add    dh,ah
     caa:	01 01                	add    DWORD PTR [rcx],eax
     cac:	a3 00 00 00 ce 03 00 	movabs ds:0x1000003ce000000,eax
     cb3:	00 01 
     cb5:	f5                   	cmc
     cb6:	00 00                	add    BYTE PTR [rax],al
     cb8:	00 00                	add    BYTE PTR [rax],al
     cba:	0f 65 00             	pcmpgtw mm0,QWORD PTR [rax]
     cbd:	00 00                	add    BYTE PTR [rax],al
     cbf:	0c 14                	or     al,0x14
     cc1:	01 3f                	add    DWORD PTR [rdi],edi
     cc3:	01 00                	add    DWORD PTR [rax],eax
     cc5:	00 f8                	add    al,bh
     cc7:	03 00                	add    eax,DWORD PTR [rax]
     cc9:	00 01                	add    BYTE PTR [rcx],al
     ccb:	78 01                	js     cce <__abi_tag+0x952>
     ccd:	00 00                	add    BYTE PTR [rax],al
     ccf:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     cd2:	00 00                	add    BYTE PTR [rax],al
     cd4:	01 2e                	add    DWORD PTR [rsi],ebp
     cd6:	00 00                	add    BYTE PTR [rax],al
     cd8:	00 01                	add    BYTE PTR [rcx],al
     cda:	2e 00 00             	cs add BYTE PTR [rax],al
     cdd:	00 01                	add    BYTE PTR [rcx],al
     cdf:	52                   	push   rdx
     ce0:	01 00                	add    DWORD PTR [rax],eax
     ce2:	00 00                	add    BYTE PTR [rax],al
     ce4:	44                   	rex.R
     ce5:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
     cec:	0e 
     ced:	72 00                	jb     cef <__abi_tag+0x973>
     cef:	00 00                	add    BYTE PTR [rax],al
     cf1:	14 04                	adc    al,0x4
     cf3:	00 00                	add    BYTE PTR [rax],al
     cf5:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     cf8:	00 00                	add    BYTE PTR [rax],al
     cfa:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     cfd:	00 00                	add    BYTE PTR [rax],al
     cff:	00 0b                	add    BYTE PTR [rbx],cl
     d01:	bd 00 00 00 05       	mov    ebp,0x5000000
     d06:	03 0e                	add    ecx,DWORD PTR [rsi]
     d08:	41 01 00             	add    DWORD PTR [r8],eax
     d0b:	00 2a                	add    BYTE PTR [rdx],ch
     d0d:	04 00                	add    al,0x0
     d0f:	00 01                	add    BYTE PTR [rcx],al
     d11:	f5                   	cmc
     d12:	00 00                	add    BYTE PTR [rax],al
     d14:	00 00                	add    BYTE PTR [rax],al
     d16:	0b c3                	or     eax,ebx
     d18:	02 00                	add    al,BYTE PTR [rax]
     d1a:	00 e2                	add    dl,ah
     d1c:	03 0f                	add    ecx,DWORD PTR [rdi]
     d1e:	aa                   	stos   BYTE PTR es:[rdi],al
     d1f:	00 00                	add    BYTE PTR [rax],al
     d21:	00 45 04             	add    BYTE PTR [rbp+0x4],al
     d24:	00 00                	add    BYTE PTR [rax],al
     d26:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
     d2c:	a3 00 00 00 00 0b 33 	movabs ds:0x2330b00000000,eax
     d33:	02 00 
     d35:	00 26                	add    BYTE PTR [rsi],ah
     d37:	04 0c                	add    al,0xc
     d39:	66 00 00             	data16 add BYTE PTR [rax],al
     d3c:	00 60 04             	add    BYTE PTR [rax+0x4],ah
     d3f:	00 00                	add    BYTE PTR [rax],al
     d41:	01 f5                	add    ebp,esi
     d43:	00 00                	add    BYTE PTR [rax],al
     d45:	00 01                	add    BYTE PTR [rcx],al
     d47:	2e 00 00             	cs add BYTE PTR [rax],al
     d4a:	00 00                	add    BYTE PTR [rax],al
     d4c:	0f 39                	(bad)
     d4e:	02 00                	add    al,BYTE PTR [rax]
     d50:	00 0d 75 01 2e 00    	add    BYTE PTR [rip+0x2e0175],cl        # 2e0ecb <_end+0x2daeb3>
     d56:	00 00                	add    BYTE PTR [rax],al
     d58:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d5c:	01 80 04 00 00 01    	add    DWORD PTR [rax+0x1000004],eax
     d62:	f5                   	cmc
     d63:	00 00                	add    BYTE PTR [rax],al
     d65:	00 01                	add    BYTE PTR [rcx],al
     d67:	2e 00 00             	cs add BYTE PTR [rax],al
     d6a:	00 00                	add    BYTE PTR [rax],al
     d6c:	09 85 04 00 00 05    	or     DWORD PTR [rbp+0x5000004],eax
     d72:	04 05                	add    al,0x5
     d74:	61                   	(bad)
     d75:	02 00                	add    al,BYTE PTR [rax]
     d77:	00 12                	add    BYTE PTR [rdx],dl
     d79:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
     d7c:	00 0b                	add    BYTE PTR [rbx],cl
     d7e:	d9 00                	fld    DWORD PTR [rax]
     d80:	00 00                	add    BYTE PTR [rax],al
     d82:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
     d85:	66 00 00             	data16 add BYTE PTR [rax],al
     d88:	00 b1 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],dh
     d8e:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d92:	01 f5                	add    ebp,esi
     d94:	00 00                	add    BYTE PTR [rax],al
     d96:	00 01                	add    BYTE PTR [rcx],al
     d98:	2e 00 00             	cs add BYTE PTR [rax],al
     d9b:	00 00                	add    BYTE PTR [rax],al
     d9d:	24 25                	and    al,0x25
     d9f:	00 00                	add    BYTE PTR [rax],al
     da1:	00 ca                	add    dl,cl
     da3:	03 d1                	add    edx,ecx
     da5:	04 00                	add    al,0x0
     da7:	00 01                	add    BYTE PTR [rcx],al
     da9:	3f                   	(bad)
     daa:	01 00                	add    DWORD PTR [rax],eax
     dac:	00 01                	add    BYTE PTR [rcx],al
     dae:	2e 00 00             	cs add BYTE PTR [rax],al
     db1:	00 01                	add    BYTE PTR [rcx],al
     db3:	2e 00 00             	cs add BYTE PTR [rax],al
     db6:	00 01                	add    BYTE PTR [rcx],al
     db8:	52                   	push   rdx
     db9:	01 00                	add    DWORD PTR [rax],eax
     dbb:	00 00                	add    BYTE PTR [rax],al
     dbd:	45                   	rex.RB
     dbe:	36 00 00             	ss add BYTE PTR [rax],al
     dc1:	00 07                	add    BYTE PTR [rdi],al
     dc3:	fa                   	cli
     dc4:	02 0d e4 04 00 00    	add    cl,BYTE PTR [rip+0x4e4]        # 12ae <register_tm_clones+0x3e>
     dca:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     dcd:	00 00                	add    BYTE PTR [rax],al
     dcf:	00 46 ec             	add    BYTE PTR [rsi-0x14],al
     dd2:	02 00                	add    al,BYTE PTR [rax]
     dd4:	00 07                	add    BYTE PTR [rdi],al
     dd6:	3d 02 0c 66 00       	cmp    eax,0x660c02
     ddb:	00 00                	add    BYTE PTR [rax],al
     ddd:	24 eb                	and    al,0xeb
     ddf:	02 00                	add    al,BYTE PTR [rax]
     de1:	00 3f                	add    BYTE PTR [rdi],bh
     de3:	02 02                	add    al,BYTE PTR [rdx]
     de5:	05 00 00 01 12       	add    eax,0x12010000
     dea:	01 00                	add    DWORD PTR [rax],eax
     dec:	00 00                	add    BYTE PTR [rax],al
     dee:	0f 05                	syscall
     df0:	01 00                	add    DWORD PTR [rax],eax
     df2:	00 07                	add    BYTE PTR [rdi],al
     df4:	76 0f                	jbe    e05 <__abi_tag+0xa89>
     df6:	9b                   	fwait
     df7:	03 00                	add    eax,DWORD PTR [rax]
     df9:	00 1d 05 00 00 01    	add    BYTE PTR [rip+0x1000005],bl        # 1000e04 <_end+0xffadec>
     dff:	f5                   	cmc
     e00:	00 00                	add    BYTE PTR [rax],al
     e02:	00 01                	add    BYTE PTR [rcx],al
     e04:	1d 05 00 00 00       	sbb    eax,0x5
     e09:	09 41 01             	or     DWORD PTR [rcx+0x1],eax
     e0c:	00 00                	add    BYTE PTR [rax],al
     e0e:	14 54                	adc    al,0x54
     e10:	00 00                	add    BYTE PTR [rax],al
     e12:	00 07                	add    BYTE PTR [rdi],al
     e14:	d7                   	xlat   BYTE PTR ds:[rbx]
     e15:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     e18:	00 00                	add    BYTE PTR [rax],al
     e1a:	a3 00 00 00 46 05 00 	movabs ds:0x100000546000000,eax
     e21:	00 01 
     e23:	f5                   	cmc
     e24:	00 00                	add    BYTE PTR [rax],al
     e26:	00 01                	add    BYTE PTR [rcx],al
     e28:	1d 05 00 00 01       	sbb    eax,0x1000005
     e2d:	66 00 00             	data16 add BYTE PTR [rax],al
     e30:	00 00                	add    BYTE PTR [rax],al
     e32:	14 25                	adc    al,0x25
     e34:	02 00                	add    al,BYTE PTR [rax]
     e36:	00 07                	add    BYTE PTR [rdi],al
     e38:	db 1a                	fistp  DWORD PTR [rdx]
     e3a:	1c 02                	sbb    al,0x2
     e3c:	00 00                	add    BYTE PTR [rax],al
     e3e:	3a 00                	cmp    al,BYTE PTR [rax]
     e40:	00 00                	add    BYTE PTR [rax],al
     e42:	6a 05                	push   0x5
     e44:	00 00                	add    BYTE PTR [rax],al
     e46:	01 f5                	add    ebp,esi
     e48:	00 00                	add    BYTE PTR [rax],al
     e4a:	00 01                	add    BYTE PTR [rcx],al
     e4c:	1d 05 00 00 01       	sbb    eax,0x1000005
     e51:	66 00 00             	data16 add BYTE PTR [rax],al
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	0b d8                	or     ebx,eax
     e58:	25 00 00 9b 03       	and    eax,0x39b0000
     e5d:	0c 66                	or     al,0x66
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	00 80 05 00 00 01    	add    BYTE PTR [rax+0x1000005],al
     e67:	f5                   	cmc
     e68:	00 00                	add    BYTE PTR [rax],al
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	0f e1 01             	psraw  mm0,QWORD PTR [rcx]
     e6f:	00 00                	add    BYTE PTR [rax],al
     e71:	0d 8f 01 2e 00       	or     eax,0x2e018f
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	a0 05 00 00 01 41 01 	movabs al,ds:0x14101000005
     e7f:	00 00 
     e81:	01 a0 05 00 00 01    	add    DWORD PTR [rax+0x1000005],esp
     e87:	2e 00 00             	cs add BYTE PTR [rax],al
     e8a:	00 00                	add    BYTE PTR [rax],al
     e8c:	09 8c 04 00 00 0f 42 	or     DWORD PTR [rsp+rax*1+0x420f0000],ecx
     e93:	02 00                	add    al,BYTE PTR [rax]
     e95:	00 0d 4f 01 66 00    	add    BYTE PTR [rip+0x66014f],cl        # 660fea <_end+0x65afd2>
     e9b:	00 00                	add    BYTE PTR [rax],al
     e9d:	c0 05 00 00 01 41 01 	rol    BYTE PTR [rip+0x41010000],0x1        # 41010ea4 <_end+0x4100ae8c>
     ea4:	00 00                	add    BYTE PTR [rax],al
     ea6:	01 85 04 00 00 00    	add    DWORD PTR [rbp+0x4],eax
     eac:	47 12 02             	rex.RXB adc r8b,BYTE PTR [r10]
     eaf:	00 00                	add    BYTE PTR [rax],al
     eb1:	15 57 01 0b 1f       	adc    eax,0x1f0b0157
     eb6:	06                   	(bad)
     eb7:	00 00                	add    BYTE PTR [rax],al
     eb9:	02 09                	add    cl,BYTE PTR [rcx]
     ebb:	cc                   	int3
     ebc:	0b e2                	or     esp,edx
     ebe:	00 00                	add    BYTE PTR [rax],al
     ec0:	00 02                	add    BYTE PTR [rdx],al
     ec2:	09 dc                	or     esp,ebx
     ec4:	0b 1f                	or     ebx,DWORD PTR [rdi]
     ec6:	06                   	(bad)
     ec7:	00 00                	add    BYTE PTR [rax],al
     ec9:	02 09                	add    cl,BYTE PTR [rcx]
     ecb:	e7 0b                	out    0xb,eax
     ecd:	3a 06                	cmp    al,BYTE PTR [rsi]
     ecf:	00 00                	add    BYTE PTR [rax],al
     ed1:	02 09                	add    cl,BYTE PTR [rcx]
     ed3:	e8 0b 50 06 00       	call   65ee3 <_end+0x5fecb>
     ed8:	00 02                	add    BYTE PTR [rdx],al
     eda:	09 e9                	or     ecx,ebp
     edc:	0b 74 06 00          	or     esi,DWORD PTR [rsi+rax*1+0x0]
     ee0:	00 02                	add    BYTE PTR [rdx],al
     ee2:	09 eb                	or     ebx,ebp
     ee4:	0b 98 06 00 00 02    	or     ebx,DWORD PTR [rax+0x2000006]
     eea:	09 ec                	or     esp,ebp
     eec:	0b ba 06 00 00 2c    	or     edi,DWORD PTR [rdx+0x2c000006]
     ef2:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
     ef9:	00 
     efa:	00 e2                	add    dl,ah
     efc:	00 00                	add    BYTE PTR [rax],al
     efe:	00 01                	add    BYTE PTR [rcx],al
     f00:	db 00                	fild   DWORD PTR [rax]
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	01 db                	add    ebx,ebx
     f06:	00 00                	add    BYTE PTR [rax],al
     f08:	00 00                	add    BYTE PTR [rax],al
     f0a:	00 0b                	add    BYTE PTR [rbx],cl
     f0c:	c2 02 00             	ret    0x2
     f0f:	00 e6                	add    dh,ah
     f11:	03 1e                	add    ebx,DWORD PTR [rsi]
     f13:	e2 00                	loop   f15 <__abi_tag+0xb99>
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	3a 06                	cmp    al,BYTE PTR [rsi]
     f19:	00 00                	add    BYTE PTR [rax],al
     f1b:	01 db                	add    ebx,ebx
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 01                	add    BYTE PTR [rcx],al
     f21:	db 00                	fild   DWORD PTR [rax]
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 0b                	add    BYTE PTR [rbx],cl
     f27:	2d 02 00 00 ed       	sub    eax,0xed000002
     f2c:	01 01                	add    DWORD PTR [rcx],eax
     f2e:	db 00                	fild   DWORD PTR [rax]
     f30:	00 00                	add    BYTE PTR [rax],al
     f32:	50                   	push   rax
     f33:	06                   	(bad)
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	01 f5                	add    ebp,esi
     f38:	00 00                	add    BYTE PTR [rax],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	14 88                	adc    al,0x88
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	00 07                	add    BYTE PTR [rdi],al
     f42:	ee                   	out    dx,al
     f43:	16                   	(bad)
     f44:	7f 00                	jg     f46 <__abi_tag+0xbca>
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	db 00                	fild   DWORD PTR [rax]
     f4a:	00 00                	add    BYTE PTR [rax],al
     f4c:	74 06                	je     f54 <__abi_tag+0xbd8>
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	01 f5                	add    ebp,esi
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 01                	add    BYTE PTR [rcx],al
     f56:	1d 05 00 00 01       	sbb    eax,0x1000005
     f5b:	66 00 00             	data16 add BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	14 b9                	adc    al,0xb9
     f62:	02 00                	add    al,BYTE PTR [rax]
     f64:	00 07                	add    BYTE PTR [rdi],al
     f66:	f3 1f                	repz (bad)
     f68:	b0 02                	mov    al,0x2
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
     f6f:	00 98 06 00 00 01    	add    BYTE PTR [rax+0x1000006],bl
     f75:	f5                   	cmc
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	00 01                	add    BYTE PTR [rcx],al
     f7a:	1d 05 00 00 01       	sbb    eax,0x1000005
     f7f:	66 00 00             	data16 add BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	0f 97 02             	seta   BYTE PTR [rdx]
     f87:	00 00                	add    BYTE PTR [rax],al
     f89:	07                   	(bad)
     f8a:	7c 0e                	jl     f9a <__abi_tag+0xc1e>
     f8c:	b3 06                	mov    bl,0x6
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	b3 06                	mov    bl,0x6
     f92:	00 00                	add    BYTE PTR [rax],al
     f94:	01 f5                	add    ebp,esi
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	00 01                	add    BYTE PTR [rcx],al
     f9a:	1d 05 00 00 00       	sbb    eax,0x5
     f9f:	05 04 04 d3 00       	add    eax,0xd30404
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	0f 2b 00             	movntps XMMWORD PTR [rax],xmm0
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	07                   	(bad)
     fac:	7f 14                	jg     fc2 <__abi_tag+0xc46>
     fae:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fb2:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fb6:	01 f5                	add    ebp,esi
     fb8:	00 00                	add    BYTE PTR [rax],al
     fba:	00 01                	add    BYTE PTR [rcx],al
     fbc:	1d 05 00 00 00       	sbb    eax,0x5
     fc1:	05 10 04 f3 01       	add    eax,0x1f30410
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	02 0e                	add    cl,BYTE PTR [rsi]
     fca:	27                   	(bad)
     fcb:	0c 4e                	or     al,0x4e
     fcd:	03 00                	add    eax,DWORD PTR [rax]
     fcf:	00 02                	add    BYTE PTR [rdx],al
     fd1:	0e                   	(bad)
     fd2:	2b 0e                	sub    ecx,DWORD PTR [rsi]
     fd4:	6a 03                	push   0x3
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	02 0e                	add    cl,BYTE PTR [rsi]
     fda:	2e 0e                	cs (bad)
     fdc:	d1 04 00             	rol    DWORD PTR [rax+rax*1],1
     fdf:	00 02                	add    BYTE PTR [rdx],al
     fe1:	0e                   	(bad)
     fe2:	36 0c 72             	ss or  al,0x72
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 02                	add    BYTE PTR [rdx],al
     fe9:	0e                   	(bad)
     fea:	37                   	(bad)
     feb:	0c aa                	or     al,0xaa
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 05 10 04 8c 02    	add    BYTE PTR [rip+0x28c0410],al        # 28c1405 <_end+0x28bb3ed>
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	02 0e                	add    cl,BYTE PTR [rsi]
     ff9:	39 0c 8c             	cmp    DWORD PTR [rsp+rcx*4],ecx
     ffc:	02 00                	add    al,BYTE PTR [rax]
     ffe:	00 05 10 05 ea 01    	add    BYTE PTR [rip+0x1ea0510],al        # 1ea1514 <_end+0x1e9b4fc>
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	02 0e                	add    cl,BYTE PTR [rsi]
    1008:	39 0c a4             	cmp    DWORD PTR [rsp+riz*4],ecx
    100b:	02 00                	add    al,BYTE PTR [rax]
    100d:	00 02                	add    BYTE PTR [rdx],al
    100f:	0e                   	(bad)
    1010:	39 0c bc             	cmp    DWORD PTR [rsp+rdi*4],ecx
    1013:	02 00                	add    al,BYTE PTR [rax]
    1015:	00 02                	add    BYTE PTR [rdx],al
    1017:	0e                   	(bad)
    1018:	39 0c d4             	cmp    DWORD PTR [rsp+rdx*8],ecx
    101b:	02 00                	add    al,BYTE PTR [rax]
    101d:	00 02                	add    BYTE PTR [rdx],al
    101f:	0e                   	(bad)
    1020:	39 0c ec             	cmp    DWORD PTR [rsp+rbp*8],ecx
    1023:	02 00                	add    al,BYTE PTR [rax]
    1025:	00 02                	add    BYTE PTR [rdx],al
    1027:	0e                   	(bad)
    1028:	39 0c 04             	cmp    DWORD PTR [rsp+rax*1],ecx
    102b:	03 00                	add    eax,DWORD PTR [rax]
    102d:	00 02                	add    BYTE PTR [rdx],al
    102f:	0e                   	(bad)
    1030:	39 0c 1c             	cmp    DWORD PTR [rsp+rbx*1],ecx
    1033:	03 00                	add    eax,DWORD PTR [rax]
    1035:	00 02                	add    BYTE PTR [rdx],al
    1037:	0e                   	(bad)
    1038:	3a 0c 85 03 00 00 02 	cmp    cl,BYTE PTR [rax*4+0x2000003]
    103f:	0e                   	(bad)
    1040:	3b 0c a2             	cmp    ecx,DWORD PTR [rdx+riz*4]
    1043:	03 00                	add    eax,DWORD PTR [rax]
    1045:	00 02                	add    BYTE PTR [rdx],al
    1047:	0e                   	(bad)
    1048:	3c 0c                	cmp    al,0xc
    104a:	b8 03 00 00 02       	mov    eax,0x2000003
    104f:	0e                   	(bad)
    1050:	3d 0c ce 03 00       	cmp    eax,0x3ce0c
    1055:	00 02                	add    BYTE PTR [rdx],al
    1057:	0e                   	(bad)
    1058:	3f                   	(bad)
    1059:	0c 05                	or     al,0x5
    105b:	06                   	(bad)
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	02 0e                	add    cl,BYTE PTR [rsi]
    1060:	3f                   	(bad)
    1061:	0c 34                	or     al,0x34
    1063:	03 00                	add    eax,DWORD PTR [rax]
    1065:	00 02                	add    BYTE PTR [rdx],al
    1067:	0e                   	(bad)
    1068:	3f                   	(bad)
    1069:	0c f8                	or     al,0xf8
    106b:	03 00                	add    eax,DWORD PTR [rax]
    106d:	00 02                	add    BYTE PTR [rdx],al
    106f:	0e                   	(bad)
    1070:	41 0c 14             	rex.B or al,0x14
    1073:	04 00                	add    al,0x0
    1075:	00 02                	add    BYTE PTR [rdx],al
    1077:	0e                   	(bad)
    1078:	43 0c 2a             	rex.XB or al,0x2a
    107b:	04 00                	add    al,0x0
    107d:	00 02                	add    BYTE PTR [rdx],al
    107f:	0e                   	(bad)
    1080:	46 0c 45             	rex.RX or al,0x45
    1083:	04 00                	add    al,0x0
    1085:	00 02                	add    BYTE PTR [rdx],al
    1087:	0e                   	(bad)
    1088:	47 0c 60             	rex.RXB or al,0x60
    108b:	04 00                	add    al,0x0
    108d:	00 02                	add    BYTE PTR [rdx],al
    108f:	0e                   	(bad)
    1090:	48 0c 91             	rex.W or al,0x91
    1093:	04 00                	add    al,0x0
    1095:	00 02                	add    BYTE PTR [rdx],al
    1097:	0e                   	(bad)
    1098:	4a 0c b1             	rex.WX or al,0xb1
    109b:	04 00                	add    al,0x0
    109d:	00 02                	add    BYTE PTR [rdx],al
    109f:	0e                   	(bad)
    10a0:	4b 0c e4             	rex.WXB or al,0xe4
    10a3:	04 00                	add    al,0x0
    10a5:	00 02                	add    BYTE PTR [rdx],al
    10a7:	0e                   	(bad)
    10a8:	4d 0c f1             	rex.WRB or al,0xf1
    10ab:	04 00                	add    al,0x0
    10ad:	00 02                	add    BYTE PTR [rdx],al
    10af:	0e                   	(bad)
    10b0:	4e 0c 02             	rex.WRX or al,0x2
    10b3:	05 00 00 02 0e       	add    eax,0xe020000
    10b8:	4f 0c 22             	rex.WRXB or al,0x22
    10bb:	05 00 00 02 0e       	add    eax,0xe020000
    10c0:	50                   	push   rax
    10c1:	0c 46                	or     al,0x46
    10c3:	05 00 00 02 0e       	add    eax,0xe020000
    10c8:	51                   	push   rcx
    10c9:	0c 6a                	or     al,0x6a
    10cb:	05 00 00 02 0e       	add    eax,0xe020000
    10d0:	53                   	push   rbx
    10d1:	0c 80                	or     al,0x80
    10d3:	05 00 00 02 0e       	add    eax,0xe020000
    10d8:	54                   	push   rsp
    10d9:	0c a5                	or     al,0xa5
    10db:	05 00 00 05 10       	add    eax,0x10050000
    10e0:	07                   	(bad)
    10e1:	66 07                	data16 (bad)
    10e3:	00 00                	add    BYTE PTR [rax],al
    10e5:	05 02 04 00 00       	add    eax,0x402
    10ea:	00 00                	add    BYTE PTR [rax],al
    10ec:	05 02 04 c8 02       	add    eax,0x2c80402
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	08 ab 00 00 00 0f    	or     BYTE PTR [rbx+0xf000000],ch
    10f9:	1a 14 27             	sbb    dl,BYTE PTR [rdi+riz*1]
    10fc:	01 00                	add    DWORD PTR [rax],eax
    10fe:	00 08                	add    BYTE PTR [rax],cl
    1100:	87 05 00 00 0f 1b    	xchg   DWORD PTR [rip+0x1b0f0000],eax        # 1b0f1106 <_end+0x1b0eb0ee>
    1106:	14 33                	adc    al,0x33
    1108:	01 00                	add    DWORD PTR [rax],eax
    110a:	00 1a                	add    BYTE PTR [rdx],bl
    110c:	40 08 00             	rex or BYTE PTR [rax],al
    110f:	00 10                	add    BYTE PTR [rax],dl
    1111:	10 07                	adc    BYTE PTR [rdi],al
    1113:	53                   	push   rbx
    1114:	08 00                	or     BYTE PTR [rax],al
    1116:	00 06                	add    BYTE PTR [rsi],al
    1118:	a3 03 00 00 10 08 0b 	movabs ds:0x1410b0810000003,eax
    111f:	41 01 
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 06                	add    BYTE PTR [rsi],al
    1125:	e5 05                	in     eax,0x5
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	10 09                	adc    BYTE PTR [rcx],cl
    112b:	0e                   	(bad)
    112c:	07                   	(bad)
    112d:	08 00                	or     BYTE PTR [rax],al
    112f:	00 08                	add    BYTE PTR [rax],cl
    1131:	06                   	(bad)
    1132:	ea                   	(bad)
    1133:	05 00 00 10 0a       	add    eax,0xa100000
    1138:	0e                   	(bad)
    1139:	07                   	(bad)
    113a:	08 00                	or     BYTE PTR [rax],al
    113c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    113f:	08 40 08             	or     BYTE PTR [rax+0x8],al
    1142:	00 00                	add    BYTE PTR [rax],al
    1144:	10 0b                	adc    BYTE PTR [rbx],cl
    1146:	03 1f                	add    ebx,DWORD PTR [rdi]
    1148:	08 00                	or     BYTE PTR [rax],al
    114a:	00 1b                	add    BYTE PTR [rbx],bl
    114c:	69 02 00 00 11 08    	imul   eax,DWORD PTR [rdx],0x8110000
    1152:	6d                   	ins    DWORD PTR es:[rdi],dx
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 0f                	add    BYTE PTR [rdi],cl
    1157:	1b 75 02             	sbb    esi,DWORD PTR [rbp+0x2]
    115a:	00 00                	add    BYTE PTR [rax],al
    115c:	11 09                	adc    DWORD PTR [rcx],ecx
    115e:	6d                   	ins    DWORD PTR es:[rdi],dx
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	00 02                	add    BYTE PTR [rdx],al
    1163:	1b c4                	sbb    eax,esp
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 11                	add    BYTE PTR [rcx],dl
    1169:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	20 08                	and    BYTE PTR [rax],cl
    1170:	36 03 00             	ss add eax,DWORD PTR [rax]
    1173:	00 11                	add    BYTE PTR [rcx],dl
    1175:	0c 12                	or     al,0x12
    1177:	53                   	push   rbx
    1178:	08 00                	or     BYTE PTR [rax],al
    117a:	00 08                	add    BYTE PTR [rax],cl
    117c:	5f                   	pop    rdi
    117d:	07                   	(bad)
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	11 0d 14 9b 08 00    	adc    DWORD PTR [rip+0x89b14],ecx        # 8ac9a <_end+0x84c82>
    1186:	00 09                	add    BYTE PTR [rcx],cl
    1188:	a0 08 00 00 2b 07 08 	movabs al,ds:0x8072b000008
    118f:	00 00 
    1191:	af                   	scas   eax,DWORD PTR es:[rdi]
    1192:	08 00                	or     BYTE PTR [rax],al
    1194:	00 01                	add    BYTE PTR [rcx],al
    1196:	83 08 00             	or     DWORD PTR [rax],0x0
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	1a 42 05             	sbb    al,BYTE PTR [rdx+0x5]
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	20 11                	and    BYTE PTR [rcx],dl
    11a2:	0f f0                	(bad)
    11a4:	08 00                	or     BYTE PTR [rax],al
    11a6:	00 06                	add    BYTE PTR [rsi],al
    11a8:	14 06                	adc    al,0x6
    11aa:	00 00                	add    BYTE PTR [rax],al
    11ac:	11 10                	adc    DWORD PTR [rax],edx
    11ae:	0e                   	(bad)
    11af:	07                   	(bad)
    11b0:	08 00                	or     BYTE PTR [rax],al
    11b2:	00 00                	add    BYTE PTR [rax],al
    11b4:	06                   	(bad)
    11b5:	95                   	xchg   ebp,eax
    11b6:	04 00                	add    al,0x0
    11b8:	00 11                	add    BYTE PTR [rcx],dl
    11ba:	11 0e                	adc    DWORD PTR [rsi],ecx
    11bc:	07                   	(bad)
    11bd:	08 00                	or     BYTE PTR [rax],al
    11bf:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    11c2:	d0 05 00 00 11 13    	rol    BYTE PTR [rip+0x13110000],1        # 131111c8 <_end+0x1310b1b0>
    11c8:	0e                   	(bad)
    11c9:	07                   	(bad)
    11ca:	08 00                	or     BYTE PTR [rax],al
    11cc:	00 08                	add    BYTE PTR [rax],cl
    11ce:	06                   	(bad)
    11cf:	c7                   	(bad)
    11d0:	14 00                	adc    al,0x0
    11d2:	00 11                	add    BYTE PTR [rcx],dl
    11d4:	15 0c 83 08 00       	adc    eax,0x8830c
    11d9:	00 10                	add    BYTE PTR [rax],dl
    11db:	00 08                	add    BYTE PTR [rax],cl
    11dd:	42 05 00 00 11 16    	rex.X add eax,0x16110000
    11e3:	03 af 08 00 00 1a    	add    ebp,DWORD PTR [rdi+0x1a000008]
    11e9:	60                   	(bad)
    11ea:	04 00                	add    al,0x0
    11ec:	00 18                	add    BYTE PTR [rax],bl
    11ee:	11 18                	adc    DWORD PTR [rax],ebx
    11f0:	3d 09 00 00 06       	cmp    eax,0x6000009
    11f5:	d8 05 00 00 11 19    	fadd   DWORD PTR [rip+0x19110000]        # 191111fb <_end+0x1910b1e3>
    11fb:	0f 3d                	(bad)
    11fd:	09 00                	or     DWORD PTR [rax],eax
    11ff:	00 00                	add    BYTE PTR [rax],al
    1201:	06                   	(bad)
    1202:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1203:	05 00 00 11 1a       	add    eax,0x1a110000
    1208:	0e                   	(bad)
    1209:	07                   	(bad)
    120a:	08 00                	or     BYTE PTR [rax],al
    120c:	00 08                	add    BYTE PTR [rax],cl
    120e:	06                   	(bad)
    120f:	19 03                	sbb    DWORD PTR [rbx],eax
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	11 1b                	adc    DWORD PTR [rbx],ebx
    1215:	0e                   	(bad)
    1216:	07                   	(bad)
    1217:	08 00                	or     BYTE PTR [rax],al
    1219:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    121c:	69 03 00 00 11 1c    	imul   eax,DWORD PTR [rbx],0x1c110000
    1222:	0e                   	(bad)
    1223:	07                   	(bad)
    1224:	08 00                	or     BYTE PTR [rax],al
    1226:	00 10                	add    BYTE PTR [rax],dl
    1228:	00 09                	add    BYTE PTR [rcx],cl
    122a:	f0 08 00             	lock or BYTE PTR [rax],al
    122d:	00 08                	add    BYTE PTR [rax],cl
    122f:	60                   	(bad)
    1230:	04 00                	add    al,0x0
    1232:	00 11                	add    BYTE PTR [rcx],dl
    1234:	1d 03 fc 08 00       	sbb    eax,0x8fc03
    1239:	00 1a                	add    BYTE PTR [rdx],bl
    123b:	8d 04 00             	lea    eax,[rax+rax*1]
    123e:	00 18                	add    BYTE PTR [rax],bl
    1240:	11 1f                	adc    DWORD PTR [rdi],ebx
    1242:	8f 09 00 00          	(bad)
    1246:	06                   	(bad)
    1247:	ef                   	out    dx,eax
    1248:	04 00                	add    al,0x0
    124a:	00 11                	add    BYTE PTR [rcx],dl
    124c:	20 0b                	and    BYTE PTR [rbx],cl
    124e:	8f 09 00 00          	(bad)
    1252:	00 06                	add    BYTE PTR [rsi],al
    1254:	19 03                	sbb    DWORD PTR [rbx],eax
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	11 21                	adc    DWORD PTR [rcx],esp
    125a:	0e                   	(bad)
    125b:	07                   	(bad)
    125c:	08 00                	or     BYTE PTR [rax],al
    125e:	00 08                	add    BYTE PTR [rax],cl
    1260:	06                   	(bad)
    1261:	45 07                	rex.RB (bad)
    1263:	00 00                	add    BYTE PTR [rax],al
    1265:	11 22                	adc    DWORD PTR [rdx],esp
    1267:	0b b3 06 00 00 0c    	or     esi,DWORD PTR [rbx+0xc000006]
    126d:	06                   	(bad)
    126e:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    1271:	00 11                	add    BYTE PTR [rcx],dl
    1273:	23 0c 8f             	and    ecx,DWORD PTR [rdi+rcx*4]
    1276:	08 00                	or     BYTE PTR [rax],al
    1278:	00 10                	add    BYTE PTR [rax],dl
    127a:	00 09                	add    BYTE PTR [rcx],cl
    127c:	42 09 00             	rex.X or DWORD PTR [rax],eax
    127f:	00 08                	add    BYTE PTR [rax],cl
    1281:	8d 04 00             	lea    eax,[rax+rax*1]
    1284:	00 11                	add    BYTE PTR [rcx],dl
    1286:	24 03                	and    al,0x3
    1288:	4e 09 00             	rex.WRX or QWORD PTR [rax],r8
    128b:	00 1b                	add    BYTE PTR [rbx],bl
    128d:	f8                   	clc
    128e:	06                   	(bad)
    128f:	00 00                	add    BYTE PTR [rax],al
    1291:	12 06                	adc    al,BYTE PTR [rsi]
    1293:	6d                   	ins    DWORD PTR es:[rdi],dx
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    1299:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    129c:	00 13                	add    BYTE PTR [rbx],dl
    129e:	34 0c                	xor    al,0xc
    12a0:	66 00 00             	data16 add BYTE PTR [rax],al
    12a3:	00 c8                	add    al,cl
    12a5:	09 00                	or     DWORD PTR [rax],eax
    12a7:	00 01                	add    BYTE PTR [rcx],al
    12a9:	66 00 00             	data16 add BYTE PTR [rax],al
    12ac:	00 01                	add    BYTE PTR [rcx],al
    12ae:	f5                   	cmc
    12af:	00 00                	add    BYTE PTR [rax],al
    12b1:	00 2d 00 2e 0b 05    	add    BYTE PTR [rip+0x50b2e00],ch        # 50b40b7 <_end+0x50ae09f>
    12b7:	00 00                	add    BYTE PTR [rax],al
    12b9:	0e                   	(bad)
    12ba:	3d 03 00 00 dc       	cmp    eax,0xdc000003
    12bf:	09 00                	or     DWORD PTR [rax],eax
    12c1:	00 01                	add    BYTE PTR [rcx],al
    12c3:	8f 09 00 00          	(bad)
    12c7:	00 24 b0             	add    BYTE PTR [rax+rsi*4],ah
    12ca:	03 00                	add    eax,DWORD PTR [rax]
    12cc:	00 af 02 ed 09 00    	add    BYTE PTR [rdi+0x9ed02],ch
    12d2:	00 01                	add    BYTE PTR [rcx],al
    12d4:	3f                   	(bad)
    12d5:	01 00                	add    DWORD PTR [rax],eax
    12d7:	00 00                	add    BYTE PTR [rax],al
    12d9:	2e 9e                	cs sahf
    12db:	04 00                	add    al,0x0
    12dd:	00 0c 53             	add    BYTE PTR [rbx+rdx*2],cl
    12e0:	04 00                	add    al,0x0
    12e2:	00 01                	add    BYTE PTR [rcx],al
    12e4:	0a 00                	or     al,BYTE PTR [rax]
    12e6:	00 01                	add    BYTE PTR [rcx],al
    12e8:	8f 09 00 00          	(bad)
    12ec:	00 14 77             	add    BYTE PTR [rdi+rsi*2],dl
    12ef:	05 00 00 12 0b       	add    eax,0xb120000
    12f4:	05 16 05 00 00       	add    eax,0x516
    12f9:	66 00 00             	data16 add BYTE PTR [rax],al
    12fc:	00 20                	add    BYTE PTR [rax],ah
    12fe:	0a 00                	or     al,BYTE PTR [rax]
    1300:	00 01                	add    BYTE PTR [rcx],al
    1302:	8f 09 00 00          	(bad)
    1306:	01 83 08 00 00 00    	add    DWORD PTR [rbx+0x8],eax
    130c:	14 0f                	adc    al,0xf
    130e:	04 00                	add    al,0x0
    1310:	00 12                	add    BYTE PTR [rdx],dl
    1312:	0a 05 52 06 00 00    	or     al,BYTE PTR [rip+0x652]        # 196a <_Z17hashMapDebugPrintP7HashMap+0xa>
    1318:	66 00 00             	data16 add BYTE PTR [rax],al
    131b:	00 3f                	add    BYTE PTR [rdi],bh
    131d:	0a 00                	or     al,BYTE PTR [rax]
    131f:	00 01                	add    BYTE PTR [rcx],al
    1321:	8f 09 00 00          	(bad)
    1325:	01 83 08 00 00 00    	add    DWORD PTR [rbx+0x8],eax
    132b:	14 3e                	adc    al,0x3e
    132d:	05 00 00 12 09       	add    eax,0x9120000
    1332:	05 71 06 00 00       	add    eax,0x671
    1337:	66 00 00             	data16 add BYTE PTR [rax],al
    133a:	00 5e 0a             	add    BYTE PTR [rsi+0xa],bl
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	01 8f 09 00 00 01    	add    DWORD PTR [rdi+0x1000009],ecx
    1345:	83 08 00             	or     DWORD PTR [rax],0x0
    1348:	00 00                	add    BYTE PTR [rax],al
    134a:	48 f5                	rex.W cmc
    134c:	04 00                	add    al,0x0
    134e:	00 12                	add    BYTE PTR [rdx],dl
    1350:	08 06                	or     BYTE PTR [rsi],al
    1352:	fe 04 00             	inc    BYTE PTR [rax+rax*1]
    1355:	00 42 09             	add    BYTE PTR [rdx+0x9],al
    1358:	00 00                	add    BYTE PTR [rax],al
    135a:	0b e1                	or     esp,ecx
    135c:	04 00                	add    al,0x0
    135e:	00 d4                	add    ah,dl
    1360:	02 0e                	add    cl,BYTE PTR [rsi]
    1362:	3f                   	(bad)
    1363:	01 00                	add    DWORD PTR [rax],eax
    1365:	00 89 0a 00 00 01    	add    BYTE PTR [rcx+0x100000a],cl
    136b:	2e 00 00             	cs add BYTE PTR [rax],al
    136e:	00 01                	add    BYTE PTR [rcx],al
    1370:	2e 00 00             	cs add BYTE PTR [rax],al
    1373:	00 00                	add    BYTE PTR [rax],al
    1375:	0b 91 06 00 00 a3    	or     edx,DWORD PTR [rcx-0x5cfffffa]
    137b:	02 0e                	add    cl,BYTE PTR [rsi]
    137d:	3f                   	(bad)
    137e:	01 00                	add    DWORD PTR [rax],eax
    1380:	00 a4 0a 00 00 01 2e 	add    BYTE PTR [rdx+rcx*1+0x2e010000],ah
    1387:	00 00                	add    BYTE PTR [rax],al
    1389:	00 01                	add    BYTE PTR [rcx],al
    138b:	2e 00 00             	cs add BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	49 ad                	rex.WB lods rax,QWORD PTR ds:[rsi]
    1392:	05 00 00 14 45       	add    eax,0x45140000
    1397:	0d c5 0a 00 00       	or     eax,0xac5
    139c:	01 f5                	add    ebp,esi
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	00 01                	add    BYTE PTR [rcx],al
    13a2:	f5                   	cmc
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 01                	add    BYTE PTR [rcx],al
    13a7:	12 01                	adc    al,BYTE PTR [rcx]
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	01 f5                	add    ebp,esi
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 00                	add    BYTE PTR [rax],al
    13b1:	4a 5c                	rex.WX pop rsp
    13b3:	05 00 00 01 ba       	add    eax,0xba010000
    13b8:	06                   	(bad)
    13b9:	25 04 00 00 60       	and    eax,0x60000004
    13be:	19 00                	sbb    DWORD PTR [rax],eax
    13c0:	00 00                	add    BYTE PTR [rax],al
    13c2:	00 00                	add    BYTE PTR [rax],al
    13c4:	00 be 00 00 00 00    	add    BYTE PTR [rsi+0x0],bh
    13ca:	00 00                	add    BYTE PTR [rax],al
    13cc:	00 01                	add    BYTE PTR [rcx],al
    13ce:	9c                   	pushf
    13cf:	0e                   	(bad)
    13d0:	0d 00 00 10 94       	or     eax,0x94100000
    13d5:	05 00 00 ba 21       	add    eax,0x21ba0000
    13da:	0e                   	(bad)
    13db:	0d 00 00 65 00       	or     eax,0x650000
    13e0:	00 00                	add    BYTE PTR [rax],al
    13e2:	5d                   	pop    rbp
    13e3:	00 00                	add    BYTE PTR [rax],al
    13e5:	00 2f                	add    BYTE PTR [rdi],ch
    13e7:	be 19 00 00 00       	mov    esi,0x19
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 13f4 <_Z16buildStringArrayPcj+0xf4>
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 7f 0b             	add    BYTE PTR [rdi+0xb],bh
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	15 69 00 c7 13       	adc    eax,0x13c70069
    1400:	07                   	(bad)
    1401:	08 00                	or     BYTE PTR [rax],al
    1403:	00 8b 00 00 00 85    	add    BYTE PTR [rbx-0x7b000000],cl
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 17                	add    BYTE PTR [rdi],dl
    140d:	97                   	xchg   edi,eax
    140e:	17                   	(bad)
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	d0 19                	rcr    BYTE PTR [rcx],1
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 00                	add    BYTE PTR [rax],al
    1419:	01 d0                	add    eax,edx
    141b:	19 00                	sbb    DWORD PTR [rax],eax
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 00                	add    BYTE PTR [rax],al
    1421:	00 11                	add    BYTE PTR [rcx],dl
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 00                	add    BYTE PTR [rax],al
    1429:	00 c8                	add    al,cl
    142b:	0f 71                	(bad)
    142d:	0b 00                	or     eax,DWORD PTR [rax]
    142f:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1432:	17                   	(bad)
    1433:	00 00                	add    BYTE PTR [rax],al
    1435:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	00 a4 00 00 00 07 e1 	add    BYTE PTR [rax+rax*1-0x1ef90000],ah
    143f:	19 00                	sbb    DWORD PTR [rax],eax
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 00                	add    BYTE PTR [rax],al
    1445:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    144c:	55                   	push   rbp
    144d:	01 32                	add    DWORD PTR [rdx],esi
    144f:	03 01                	add    eax,DWORD PTR [rcx]
    1451:	54                   	push   rsp
    1452:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    1456:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1459:	73 00                	jae    145b <_Z11hashMapCtorPFj8string_tEj+0x2b>
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	0d f6 19 00 00       	or     eax,0x19f6
    1462:	00 00                	add    BYTE PTR [rax],al
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	c8 09 00 00          	enter  0x9,0x0
    146a:	00 0e                	add    BYTE PTR [rsi],cl
    146c:	97                   	xchg   edi,eax
    146d:	17                   	(bad)
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	64 19 00             	sbb    DWORD PTR fs:[rax],eax
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 01                	add    BYTE PTR [rcx],al
    1479:	f7 00 00 00 bb 0b    	test   DWORD PTR [rax],0xbbb0000
    147f:	b9 0b 00 00 04       	mov    ecx,0x400000b
    1484:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1485:	17                   	(bad)
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	b9 00 00 00 b7       	mov    ecx,0xb7000000
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 07                	add    BYTE PTR [rdi],al
    1491:	80 19 00             	sbb    BYTE PTR [rcx],0x0
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	00 33                	add    BYTE PTR [rbx],dh
    149a:	19 00                	sbb    DWORD PTR [rax],eax
    149c:	00 03                	add    BYTE PTR [rbx],al
    149e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    14a1:	7d 00                	jge    14a3 <_Z11hashMapCtorPFj8string_tEj+0x73>
    14a3:	00 00                	add    BYTE PTR [rax],al
    14a5:	17                   	(bad)
    14a6:	97                   	xchg   edi,eax
    14a7:	17                   	(bad)
    14a8:	00 00                	add    BYTE PTR [rax],al
    14aa:	89 19                	mov    DWORD PTR [rcx],ebx
    14ac:	00 00                	add    BYTE PTR [rax],al
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	00 00                	add    BYTE PTR [rax],al
    14b2:	01 89 19 00 00 00    	add    DWORD PTR [rcx+0x19],ecx
    14b8:	00 00                	add    BYTE PTR [rax],al
    14ba:	00 16                	add    BYTE PTR [rsi],dl
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	00 00                	add    BYTE PTR [rax],al
    14c2:	00 c4                	add    ah,al
    14c4:	0b 0b                	or     ecx,DWORD PTR [rbx]
    14c6:	0c 00                	or     al,0x0
    14c8:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    14cb:	17                   	(bad)
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	c8 00 00 00          	enter  0x0,0x0
    14d2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    14d5:	00 07                	add    BYTE PTR [rdi],al
    14d7:	9f                   	lahf
    14d8:	19 00                	sbb    DWORD PTR [rax],eax
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    14e5:	55                   	push   rbp
    14e6:	01 32                	add    DWORD PTR [rdx],esi
    14e8:	03 01                	add    eax,DWORD PTR [rcx]
    14ea:	54                   	push   rsp
    14eb:	09 03                	or     DWORD PTR [rbx],eax
    14ed:	65 40 00 00          	rex add BYTE PTR gs:[rax],al
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 00                	add    BYTE PTR [rax],al
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	0e                   	(bad)
    14f8:	97                   	xchg   edi,eax
    14f9:	17                   	(bad)
    14fa:	00 00                	add    BYTE PTR [rax],al
    14fc:	9f                   	lahf
    14fd:	19 00                	sbb    DWORD PTR [rax],eax
    14ff:	00 00                	add    BYTE PTR [rax],al
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 02                	add    BYTE PTR [rdx],al
    1505:	0c 01                	or     al,0x1
    1507:	00 00                	add    BYTE PTR [rax],al
    1509:	c5 0b 51 0c 00       	vsqrtsd xmm9,xmm14,QWORD PTR [rax+rax*1]
    150e:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1511:	17                   	(bad)
    1512:	00 00                	add    BYTE PTR [rax],al
    1514:	db 00                	fild   DWORD PTR [rax]
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	d9 00                	fld    DWORD PTR [rax]
    151a:	00 00                	add    BYTE PTR [rax],al
    151c:	07                   	(bad)
    151d:	be 19 00 00 00       	mov    esi,0x19
    1522:	00 00                	add    BYTE PTR [rax],al
    1524:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    152b:	55                   	push   rbp
    152c:	01 32                	add    DWORD PTR [rdx],esi
    152e:	03 01                	add    eax,DWORD PTR [rcx]
    1530:	54                   	push   rsp
    1531:	09 03                	or     DWORD PTR [rbx],eax
    1533:	76 40                	jbe    1575 <_Z17hashMapAddElementP7HashMap8string_t+0x95>
	...
    153d:	0e                   	(bad)
    153e:	97                   	xchg   edi,eax
    153f:	17                   	(bad)
    1540:	00 00                	add    BYTE PTR [rax],al
    1542:	fb                   	sti
    1543:	19 00                	sbb    DWORD PTR [rax],eax
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 00                	add    BYTE PTR [rax],al
    1549:	00 02                	add    BYTE PTR [rdx],al
    154b:	1c 01                	sbb    al,0x1
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	cb                   	retf
    1550:	0b 92 0c 00 00 04    	or     edx,DWORD PTR [rdx+0x400000c]
    1556:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1557:	17                   	(bad)
    1558:	00 00                	add    BYTE PTR [rax],al
    155a:	ee                   	out    dx,al
    155b:	00 00                	add    BYTE PTR [rax],al
    155d:	00 ec                	add    ah,ch
    155f:	00 00                	add    BYTE PTR [rax],al
    1561:	00 4b 0d             	add    BYTE PTR [rbx+0xd],cl
    1564:	1a 00                	sbb    al,BYTE PTR [rax]
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	00 00                	add    BYTE PTR [rax],al
    156a:	00 33                	add    BYTE PTR [rbx],dh
    156c:	19 00                	sbb    DWORD PTR [rax],eax
    156e:	00 03                	add    BYTE PTR [rbx],al
    1570:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1573:	03 45 40             	add    eax,DWORD PTR [rbp+0x40]
	...
    157e:	17                   	(bad)
    157f:	97                   	xchg   edi,eax
    1580:	17                   	(bad)
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	10 1a                	adc    BYTE PTR [rdx],bl
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 00                	add    BYTE PTR [rax],al
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	02 10                	add    dl,BYTE PTR [rax]
    158d:	1a 00                	sbb    al,BYTE PTR [rax]
    158f:	00 00                	add    BYTE PTR [rax],al
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	00 00                	add    BYTE PTR [rax],al
    159a:	00 00                	add    BYTE PTR [rax],al
    159c:	be 0f df 0c 00       	mov    esi,0xcdf0f
    15a1:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    15a4:	17                   	(bad)
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	fd                   	std
    15a8:	00 00                	add    BYTE PTR [rax],al
    15aa:	00 fb                	add    bl,bh
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 07                	add    BYTE PTR [rdi],al
    15b0:	1c 1a                	sbb    al,0x1a
    15b2:	00 00                	add    BYTE PTR [rax],al
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	33 19                	xor    ebx,DWORD PTR [rcx]
    15ba:	00 00                	add    BYTE PTR [rax],al
    15bc:	03 01                	add    eax,DWORD PTR [rcx]
    15be:	55                   	push   rbp
    15bf:	09 03                	or     DWORD PTR [rbx],eax
    15c1:	60                   	(bad)
    15c2:	40 00 00             	rex add BYTE PTR [rax],al
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 00                	add    BYTE PTR [rax],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	4c 97                	rex.WR xchg rdi,rax
    15cd:	17                   	(bad)
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	1c 1a                	sbb    al,0x1a
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	02 1c 1a             	add    bl,BYTE PTR [rdx+rbx*1]
    15db:	00 00                	add    BYTE PTR [rax],al
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 00                	add    BYTE PTR [rax],al
    15e1:	02 00                	add    al,BYTE PTR [rax]
    15e3:	00 00                	add    BYTE PTR [rax],al
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 00                	add    BYTE PTR [rax],al
    15e9:	01 bf 0f 4d a6 17    	add    DWORD PTR [rdi+0x17a64d0f],edi
    15ef:	00 00                	add    BYTE PTR [rax],al
    15f1:	06                   	(bad)
    15f2:	a0 ff 21 00 00 00 00 	movabs al,ds:0x9000000000021ff
    15f9:	00 09 
    15fb:	94                   	xchg   esp,eax
    15fc:	09 00                	or     DWORD PTR [rax],eax
    15fe:	00 30                	add    BYTE PTR [rax],dh
    1600:	e3 05                	jrcxz  1607 <_Z17hashMapAddElementP7HashMap8string_t+0x127>
    1602:	00 00                	add    BYTE PTR [rax],al
    1604:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1605:	10 94 09 00 00 68 0d 	adc    BYTE PTR [rcx+rcx*1+0xd680000],dl
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	0a 94 05 00 00 01 a4 	or     dl,BYTE PTR [rbp+rax*1-0x5bff0000]
    1615:	20 0e                	and    BYTE PTR [rsi],cl
    1617:	0d 00 00 25 cd       	or     eax,0xcd250000
    161c:	03 00                	add    eax,DWORD PTR [rax]
    161e:	00 78 0d             	add    BYTE PTR [rax+0xd],bh
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	16                   	(bad)
    1624:	90                   	nop
    1625:	05 00 00 a7 0d       	add    eax,0xda70000
    162a:	94                   	xchg   esp,eax
    162b:	09 00                	or     DWORD PTR [rax],eax
    162d:	00 18                	add    BYTE PTR [rax],bl
    162f:	1c 69                	sbb    al,0x69
    1631:	00 aa 13 07 08 00    	add    BYTE PTR [rdx+0x80713],ch
    1637:	00 18                	add    BYTE PTR [rax],bl
    1639:	16                   	(bad)
    163a:	65 04 00             	gs add al,0x0
    163d:	00 ab 12 07 08 00    	add    BYTE PTR [rbx+0x80712],ch
    1643:	00 18                	add    BYTE PTR [rax],bl
    1645:	16                   	(bad)
    1646:	c7                   	(bad)
    1647:	14 00                	adc    al,0x0
    1649:	00 ae 14 83 08 00    	add    BYTE PTR [rsi+0x88314],ch
    164f:	00 00                	add    BYTE PTR [rax],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 175f <_Z17hashMapAddElementP7HashMap8string_t+0x27f>
    1659:	78 0d                	js     1668 <_Z17hashMapAddElementP7HashMap8string_t+0x188>
    165b:	00 00                	add    BYTE PTR [rax],al
    165d:	1e                   	(bad)
    165e:	3a 00                	cmp    al,BYTE PTR [rax]
    1660:	00 00                	add    BYTE PTR [rax],al
    1662:	18 00                	sbb    BYTE PTR [rax],al
    1664:	12 68 0d             	adc    ch,BYTE PTR [rax+0xd]
    1667:	00 00                	add    BYTE PTR [rax],al
    1669:	30 9c 05 00 00 9a 11 	xor    BYTE PTR [rbp+rax*1+0x119a0000],bl
    1670:	07                   	(bad)
    1671:	08 00                	or     BYTE PTR [rax],al
    1673:	00 c4                	add    ah,al
    1675:	0d 00 00 0a 94       	or     eax,0x940a0000
    167a:	05 00 00 01 9a       	add    eax,0x9a010000
    167f:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    1681:	0d 00 00 0a c7       	or     eax,0xc70a0000
    1686:	14 00                	adc    al,0x0
    1688:	00 01                	add    BYTE PTR [rcx],al
    168a:	9a                   	(bad)
    168b:	3b 83 08 00 00 25    	cmp    eax,DWORD PTR [rbx+0x25000008]
    1691:	cd 03                	int    0x3
    1693:	00 00                	add    BYTE PTR [rax],al
    1695:	d4                   	(bad)
    1696:	0d 00 00 1c 69       	or     eax,0x691c0000
    169b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    169c:	78 00                	js     169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    169e:	9d                   	popf
    169f:	0e                   	(bad)
    16a0:	07                   	(bad)
    16a1:	08 00                	or     BYTE PTR [rax],al
    16a3:	00 16                	add    BYTE PTR [rsi],dl
    16a5:	d0 05 00 00 9f 0e    	rol    BYTE PTR [rip+0xe9f0000],1        # e9f16ab <_end+0xe9eb693>
    16ab:	07                   	(bad)
    16ac:	08 00                	or     BYTE PTR [rax],al
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	1d 06 01 00 00       	sbb    eax,0x106
    16b5:	d4                   	(bad)
    16b6:	0d 00 00 1e 3a       	or     eax,0x3a1e0000
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	00 2b                	add    BYTE PTR [rbx],ch
    16bf:	00 12                	add    BYTE PTR [rdx],dl
    16c1:	c4                   	(bad)
    16c2:	0d 00 00 4e 39       	or     eax,0x394e0000
    16c7:	07                   	(bad)
    16c8:	00 00                	add    BYTE PTR [rax],al
    16ca:	01 90 06 7c 04 00    	add    DWORD PTR [rax+0x47c06],edx
    16d0:	00 01                	add    BYTE PTR [rcx],al
    16d2:	18 0e                	sbb    BYTE PTR [rsi],cl
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	0a 94 05 00 00 01 90 	or     dl,BYTE PTR [rbp+rax*1-0x6fff0000]
    16dd:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    16df:	0d 00 00 25 cd       	or     eax,0xcd250000
    16e4:	03 00                	add    eax,DWORD PTR [rax]
    16e6:	00 28                	add    BYTE PTR [rax],ch
    16e8:	0e                   	(bad)
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	18 1c 69             	sbb    BYTE PTR [rcx+rbp*2],bl
    16ee:	00 93 13 07 08 00    	add    BYTE PTR [rbx+0x80713],dl
    16f4:	00 0d 25 19 00 00    	add    BYTE PTR [rip+0x1925],cl        # 301f <_Z7testAllPKcjS0_+0x15f>
    16fa:	00 00                	add    BYTE PTR [rax],al
    16fc:	00 00                	add    BYTE PTR [rax],al
    16fe:	ed                   	in     eax,dx
    16ff:	09 00                	or     DWORD PTR [rax],eax
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 180f <_Z17hashMapPopElementP7HashMap8string_t+0x7f>
    1709:	28 0e                	sub    BYTE PTR [rsi],cl
    170b:	00 00                	add    BYTE PTR [rax],al
    170d:	1e                   	(bad)
    170e:	3a 00                	cmp    al,BYTE PTR [rax]
    1710:	00 00                	add    BYTE PTR [rax],al
    1712:	1a 00                	sbb    al,BYTE PTR [rax]
    1714:	12 18                	adc    bl,BYTE PTR [rax]
    1716:	0e                   	(bad)
    1717:	00 00                	add    BYTE PTR [rax],al
    1719:	31 bb 05 00 00 5b    	xor    DWORD PTR [rbx+0x5b000005],edi
    171f:	06                   	(bad)
    1720:	98                   	cwde
    1721:	06                   	(bad)
    1722:	00 00                	add    BYTE PTR [rax],al
    1724:	43 10 00             	rex.XB adc BYTE PTR [r8],al
    1727:	00 60 18             	add    BYTE PTR [rax+0x18],ah
    172a:	00 00                	add    BYTE PTR [rax],al
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	84 00                	test   BYTE PTR [rax],al
    1732:	00 00                	add    BYTE PTR [rax],al
    1734:	00 00                	add    BYTE PTR [rax],al
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	01 9c 43 10 00 00 10 	add    DWORD PTR [rbx+rax*2+0x10000010],ebx
    173f:	94                   	xchg   esp,eax
    1740:	05 00 00 5b 24       	add    eax,0x245b0000
    1745:	0e                   	(bad)
    1746:	0d 00 00 12 01       	or     eax,0x1120000
    174b:	00 00                	add    BYTE PTR [rax],al
    174d:	0a 01                	or     al,BYTE PTR [rcx]
    174f:	00 00                	add    BYTE PTR [rax],al
    1751:	10 c7                	adc    bh,al
    1753:	14 00                	adc    al,0x0
    1755:	00 5b 34             	add    BYTE PTR [rbx+0x34],bl
    1758:	83 08 00             	or     DWORD PTR [rax],0x0
    175b:	00 3b                	add    BYTE PTR [rbx],bh
    175d:	01 00                	add    DWORD PTR [rax],eax
    175f:	00 35 01 00 00 1f    	add    BYTE PTR [rip+0x1f000001],dh        # 1f001766 <_end+0x1effb74e>
    1765:	cd 03                	int    0x3
    1767:	00 00                	add    BYTE PTR [rax],al
    1769:	d4                   	(bad)
    176a:	0d 00 00 09 03       	or     eax,0x3090000
    176f:	98                   	cwde
    1770:	43 00 00             	rex.XB add BYTE PTR [r8],al
    1773:	00 00                	add    BYTE PTR [rax],al
    1775:	00 00                	add    BYTE PTR [rax],al
    1777:	0c e5                	or     al,0xe5
    1779:	05 00 00 6c 12       	add    eax,0x126c0000
    177e:	07                   	(bad)
    177f:	08 00                	or     BYTE PTR [rax],al
    1781:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	60                   	(bad)
    1787:	01 00                	add    DWORD PTR [rax],eax
    1789:	00 0c 33             	add    BYTE PTR [rbx+rsi*1],cl
    178c:	07                   	(bad)
    178d:	00 00                	add    BYTE PTR [rax],al
    178f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1790:	12 07                	adc    al,BYTE PTR [rdi]
    1792:	08 00                	or     BYTE PTR [rax],al
    1794:	00 6d 01             	add    BYTE PTR [rbp+0x1],ch
    1797:	00 00                	add    BYTE PTR [rax],al
    1799:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
    179c:	00 15 63 72 63 00    	add    BYTE PTR [rip+0x637263],dl        # 638a05 <_end+0x6329ed>
    17a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17a3:	12 13                	adc    dl,BYTE PTR [rbx]
    17a5:	08 00                	or     BYTE PTR [rax],al
    17a7:	00 78 01             	add    BYTE PTR [rax+0x1],bh
    17aa:	00 00                	add    BYTE PTR [rax],al
    17ac:	76 01                	jbe    17af <_Z17hashMapPopElementP7HashMap8string_t+0x1f>
    17ae:	00 00                	add    BYTE PTR [rax],al
    17b0:	0c b5                	or     al,0xb5
    17b2:	03 00                	add    eax,DWORD PTR [rax]
    17b4:	00 70 12             	add    BYTE PTR [rax+0x12],dh
    17b7:	13 08                	adc    ecx,DWORD PTR [rax]
    17b9:	00 00                	add    BYTE PTR [rax],al
    17bb:	8d 01                	lea    eax,[rcx]
    17bd:	00 00                	add    BYTE PTR [rax],al
    17bf:	89 01                	mov    DWORD PTR [rcx],eax
    17c1:	00 00                	add    BYTE PTR [rax],al
    17c3:	0c bb                	or     al,0xbb
    17c5:	03 00                	add    eax,DWORD PTR [rax]
    17c7:	00 71 12             	add    BYTE PTR [rcx+0x12],dh
    17ca:	13 08                	adc    ecx,DWORD PTR [rax]
    17cc:	00 00                	add    BYTE PTR [rax],al
    17ce:	a1 01 00 00 9d 01 00 	movabs eax,ds:0xc0000019d000001
    17d5:	00 0c 
    17d7:	c1 03 00             	rol    DWORD PTR [rbx],0x0
    17da:	00 72 12             	add    BYTE PTR [rdx+0x12],dh
    17dd:	13 08                	adc    ecx,DWORD PTR [rax]
    17df:	00 00                	add    BYTE PTR [rax],al
    17e1:	b5 01                	mov    ch,0x1
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	b1 01                	mov    cl,0x1
    17e7:	00 00                	add    BYTE PTR [rax],al
    17e9:	0c c7                	or     al,0xc7
    17eb:	03 00                	add    eax,DWORD PTR [rax]
    17ed:	00 73 12             	add    BYTE PTR [rbx+0x12],dh
    17f0:	13 08                	adc    ecx,DWORD PTR [rax]
    17f2:	00 00                	add    BYTE PTR [rax],al
    17f4:	c9                   	leave
    17f5:	01 00                	add    DWORD PTR [rax],eax
    17f7:	00 c5                	add    ch,al
    17f9:	01 00                	add    DWORD PTR [rax],eax
    17fb:	00 16                	add    BYTE PTR [rsi],dl
    17fd:	44 04 00             	rex.R add al,0x0
    1800:	00 83 16 07 08 00    	add    BYTE PTR [rbx+0x80716],al
    1806:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 788675 <_end+0x78265d>
    180c:	89 0e                	mov    DWORD PTR [rsi],ecx
    180e:	07                   	(bad)
    180f:	08 00                	or     BYTE PTR [rax],al
    1811:	00 db                	add    bl,bl
    1813:	01 00                	add    DWORD PTR [rax],eax
    1815:	00 d9                	add    cl,bl
    1817:	01 00                	add    DWORD PTR [rax],eax
    1819:	00 0e                	add    BYTE PTR [rsi],cl
    181b:	d8 16                	fcom   DWORD PTR [rsi]
    181d:	00 00                	add    BYTE PTR [rax],al
    181f:	70 18                	jo     1839 <_Z17hashMapPopElementP7HashMap8string_t+0xa9>
    1821:	00 00                	add    BYTE PTR [rax],al
    1823:	00 00                	add    BYTE PTR [rax],al
    1825:	00 00                	add    BYTE PTR [rax],al
    1827:	08 cb                	or     bl,cl
    1829:	00 00                	add    BYTE PTR [rax],al
    182b:	00 76 1e             	add    BYTE PTR [rsi+0x1e],dh
    182e:	61                   	(bad)
    182f:	0f 00 00             	sldt   WORD PTR [rax]
    1832:	04 f8                	add    al,0xf8
    1834:	16                   	(bad)
    1835:	00 00                	add    BYTE PTR [rax],al
    1837:	e5 01                	in     eax,0x1
    1839:	00 00                	add    BYTE PTR [rax],al
    183b:	e3 01                	jrcxz  183e <_Z17hashMapPopElementP7HashMap8string_t+0xae>
    183d:	00 00                	add    BYTE PTR [rax],al
    183f:	04 ee                	add    al,0xee
    1841:	16                   	(bad)
    1842:	00 00                	add    BYTE PTR [rax],al
    1844:	f0 01 00             	lock add DWORD PTR [rax],eax
    1847:	00 ee                	add    dh,ch
    1849:	01 00                	add    DWORD PTR [rax],eax
    184b:	00 00                	add    BYTE PTR [rax],al
    184d:	0e                   	(bad)
    184e:	d8 16                	fcom   DWORD PTR [rsi]
    1850:	00 00                	add    BYTE PTR [rax],al
    1852:	83 18 00             	sbb    DWORD PTR [rax],0x0
    1855:	00 00                	add    BYTE PTR [rax],al
    1857:	00 00                	add    BYTE PTR [rax],al
    1859:	00 02                	add    BYTE PTR [rdx],al
    185b:	d6                   	(bad)
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	00 77 1e             	add    BYTE PTR [rdi+0x1e],dh
    1861:	94                   	xchg   esp,eax
    1862:	0f 00 00             	sldt   WORD PTR [rax]
    1865:	04 f8                	add    al,0xf8
    1867:	16                   	(bad)
    1868:	00 00                	add    BYTE PTR [rax],al
    186a:	03 02                	add    eax,DWORD PTR [rdx]
    186c:	00 00                	add    BYTE PTR [rax],al
    186e:	01 02                	add    DWORD PTR [rdx],eax
    1870:	00 00                	add    BYTE PTR [rax],al
    1872:	04 ee                	add    al,0xee
    1874:	16                   	(bad)
    1875:	00 00                	add    BYTE PTR [rax],al
    1877:	0e                   	(bad)
    1878:	02 00                	add    al,BYTE PTR [rax]
    187a:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
    187d:	00 00                	add    BYTE PTR [rax],al
    187f:	00 0e                	add    BYTE PTR [rsi],cl
    1881:	d8 16                	fcom   DWORD PTR [rsi]
    1883:	00 00                	add    BYTE PTR [rax],al
    1885:	8a 18                	mov    bl,BYTE PTR [rax]
    1887:	00 00                	add    BYTE PTR [rax],al
    1889:	00 00                	add    BYTE PTR [rax],al
    188b:	00 00                	add    BYTE PTR [rax],al
    188d:	02 e1                	add    ah,cl
    188f:	00 00                	add    BYTE PTR [rax],al
    1891:	00 78 1e             	add    BYTE PTR [rax+0x1e],bh
    1894:	c7                   	(bad)
    1895:	0f 00 00             	sldt   WORD PTR [rax]
    1898:	04 f8                	add    al,0xf8
    189a:	16                   	(bad)
    189b:	00 00                	add    BYTE PTR [rax],al
    189d:	21 02                	and    DWORD PTR [rdx],eax
    189f:	00 00                	add    BYTE PTR [rax],al
    18a1:	1f                   	(bad)
    18a2:	02 00                	add    al,BYTE PTR [rax]
    18a4:	00 04 ee             	add    BYTE PTR [rsi+rbp*8],al
    18a7:	16                   	(bad)
    18a8:	00 00                	add    BYTE PTR [rax],al
    18aa:	2c 02                	sub    al,0x2
    18ac:	00 00                	add    BYTE PTR [rax],al
    18ae:	2a 02                	sub    al,BYTE PTR [rdx]
    18b0:	00 00                	add    BYTE PTR [rax],al
    18b2:	00 0e                	add    BYTE PTR [rsi],cl
    18b4:	d8 16                	fcom   DWORD PTR [rsi]
    18b6:	00 00                	add    BYTE PTR [rax],al
    18b8:	91                   	xchg   ecx,eax
    18b9:	18 00                	sbb    BYTE PTR [rax],al
    18bb:	00 00                	add    BYTE PTR [rax],al
    18bd:	00 00                	add    BYTE PTR [rax],al
    18bf:	00 02                	add    BYTE PTR [rdx],al
    18c1:	ec                   	in     al,dx
    18c2:	00 00                	add    BYTE PTR [rax],al
    18c4:	00 79 1e             	add    BYTE PTR [rcx+0x1e],bh
    18c7:	fa                   	cli
    18c8:	0f 00 00             	sldt   WORD PTR [rax]
    18cb:	04 f8                	add    al,0xf8
    18cd:	16                   	(bad)
    18ce:	00 00                	add    BYTE PTR [rax],al
    18d0:	3f                   	(bad)
    18d1:	02 00                	add    al,BYTE PTR [rax]
    18d3:	00 3d 02 00 00 04    	add    BYTE PTR [rip+0x4000002],bh        # 40018db <_end+0x3ffb8c3>
    18d9:	ee                   	out    dx,al
    18da:	16                   	(bad)
    18db:	00 00                	add    BYTE PTR [rax],al
    18dd:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
    18e0:	00 48 02             	add    BYTE PTR [rax+0x2],cl
    18e3:	00 00                	add    BYTE PTR [rax],al
    18e5:	00 0d bb 18 00 00    	add    BYTE PTR [rip+0x18bb],cl        # 31a6 <_Z7testAllPKcjS0_+0x2e6>
    18eb:	00 00                	add    BYTE PTR [rax],al
    18ed:	00 00                	add    BYTE PTR [rax],al
    18ef:	01 0a                	add    DWORD PTR [rdx],ecx
    18f1:	00 00                	add    BYTE PTR [rax],al
    18f3:	07                   	(bad)
    18f4:	e4 18                	in     al,0x18
    18f6:	00 00                	add    BYTE PTR [rax],al
    18f8:	00 00                	add    BYTE PTR [rax],al
    18fa:	00 00                	add    BYTE PTR [rax],al
    18fc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    18fd:	0a 00                	or     al,BYTE PTR [rax]
    18ff:	00 03                	add    BYTE PTR [rbx],al
    1901:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1904:	03 22                	add    esp,DWORD PTR [rdx]
    1906:	40 00 00             	rex add BYTE PTR [rax],al
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	03 01                	add    eax,DWORD PTR [rcx]
    190f:	54                   	push   rsp
    1910:	09 03                	or     DWORD PTR [rbx],eax
    1912:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1915:	00 00                	add    BYTE PTR [rax],al
    1917:	00 00                	add    BYTE PTR [rax],al
    1919:	00 03                	add    BYTE PTR [rbx],al
    191b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    191e:	08 5c 03 01          	or     BYTE PTR [rbx+rax*1+0x1],bl
    1922:	52                   	push   rdx
    1923:	09 03                	or     DWORD PTR [rbx],eax
    1925:	98                   	cwde
    1926:	43 00 00             	rex.XB add BYTE PTR [r8],al
    1929:	00 00                	add    BYTE PTR [rax],al
    192b:	00 00                	add    BYTE PTR [rax],al
    192d:	00 00                	add    BYTE PTR [rax],al
    192f:	05 01 02 dc 04       	add    eax,0x4dc0201
    1934:	00 00                	add    BYTE PTR [rax],al
    1936:	32 02                	xor    al,BYTE PTR [rdx]
    1938:	06                   	(bad)
    1939:	00 00                	add    BYTE PTR [rax],al
    193b:	4e 0b 07             	rex.WRX or r8,QWORD PTR [rdi]
    193e:	00 00                	add    BYTE PTR [rax],al
    1940:	07                   	(bad)
    1941:	08 00                	or     BYTE PTR [rax],al
    1943:	00 90 17 00 00 00    	add    BYTE PTR [rax+0x17],dl
    1949:	00 00                	add    BYTE PTR [rax],al
    194b:	00 c9                	add    cl,cl
    194d:	00 00                	add    BYTE PTR [rax],al
    194f:	00 00                	add    BYTE PTR [rax],al
    1951:	00 00                	add    BYTE PTR [rax],al
    1953:	00 01                	add    BYTE PTR [rcx],al
    1955:	9c                   	pushf
    1956:	03 11                	add    edx,DWORD PTR [rcx]
    1958:	00 00                	add    BYTE PTR [rax],al
    195a:	10 94 05 00 00 4e 25 	adc    BYTE PTR [rbp+rax*1+0x254e0000],dl
    1961:	0e                   	(bad)
    1962:	0d 00 00 69 02       	or     eax,0x2690000
    1967:	00 00                	add    BYTE PTR [rax],al
    1969:	5b                   	pop    rbx
    196a:	02 00                	add    al,BYTE PTR [rax]
    196c:	00 10                	add    BYTE PTR [rax],dl
    196e:	c7                   	(bad)
    196f:	14 00                	adc    al,0x0
    1971:	00 4e 35             	add    BYTE PTR [rsi+0x35],cl
    1974:	83 08 00             	or     DWORD PTR [rax],0x0
    1977:	00 ae 02 00 00 a4    	add    BYTE PTR [rsi-0x5bfffffe],ch
    197d:	02 00                	add    al,BYTE PTR [rax]
    197f:	00 1f                	add    BYTE PTR [rdi],bl
    1981:	cd 03                	int    0x3
    1983:	00 00                	add    BYTE PTR [rax],al
    1985:	13 11                	adc    edx,DWORD PTR [rcx]
    1987:	00 00                	add    BYTE PTR [rax],al
    1989:	09 03                	or     DWORD PTR [rbx],eax
    198b:	68 43 00 00 00       	push   0x43
    1990:	00 00                	add    BYTE PTR [rax],al
    1992:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 788801 <_end+0x7827e9>
    1998:	52                   	push   rdx
    1999:	0e                   	(bad)
    199a:	07                   	(bad)
    199b:	08 00                	or     BYTE PTR [rax],al
    199d:	00 f1                	add    cl,dh
    199f:	02 00                	add    al,BYTE PTR [rax]
    19a1:	00 eb                	add    bl,ch
    19a3:	02 00                	add    al,BYTE PTR [rax]
    19a5:	00 0d ed 17 00 00    	add    BYTE PTR [rip+0x17ed],cl        # 3198 <_Z7testAllPKcjS0_+0x2d8>
    19ab:	00 00                	add    BYTE PTR [rax],al
    19ad:	00 00                	add    BYTE PTR [rax],al
    19af:	20 0a                	and    BYTE PTR [rdx],cl
    19b1:	00 00                	add    BYTE PTR [rax],al
    19b3:	07                   	(bad)
    19b4:	59                   	pop    rcx
    19b5:	18 00                	sbb    BYTE PTR [rax],al
    19b7:	00 00                	add    BYTE PTR [rax],al
    19b9:	00 00                	add    BYTE PTR [rax],al
    19bb:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    19c2:	55                   	push   rbp
    19c3:	09 03                	or     DWORD PTR [rbx],eax
    19c5:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    19c8:	00 00                	add    BYTE PTR [rax],al
    19ca:	00 00                	add    BYTE PTR [rax],al
    19cc:	00 03                	add    BYTE PTR [rbx],al
    19ce:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    19d2:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    19d5:	00 00                	add    BYTE PTR [rax],al
    19d7:	00 00                	add    BYTE PTR [rax],al
    19d9:	00 03                	add    BYTE PTR [rbx],al
    19db:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    19de:	08 4f 03             	or     BYTE PTR [rdi+0x3],cl
    19e1:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    19e4:	03 68 43             	add    ebp,DWORD PTR [rax+0x43]
	...
    19ef:	1d 06 01 00 00       	sbb    eax,0x106
    19f4:	13 11                	adc    edx,DWORD PTR [rcx]
    19f6:	00 00                	add    BYTE PTR [rax],al
    19f8:	1e                   	(bad)
    19f9:	3a 00                	cmp    al,BYTE PTR [rax]
    19fb:	00 00                	add    BYTE PTR [rax],al
    19fd:	2c 00                	sub    al,0x0
    19ff:	12 03                	adc    al,BYTE PTR [rbx]
    1a01:	11 00                	adc    DWORD PTR [rax],eax
    1a03:	00 32                	add    BYTE PTR [rdx],dh
    1a05:	e1 03                	loope  1a0a <_Z17hashMapDebugPrintP7HashMap+0xaa>
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	3d d0 06 00 00       	cmp    eax,0x6d0
    1a0e:	07                   	(bad)
    1a0f:	08 00                	or     BYTE PTR [rax],al
    1a11:	00 e0                	add    al,ah
    1a13:	14 00                	adc    al,0x0
    1a15:	00 00                	add    BYTE PTR [rax],al
    1a17:	00 00                	add    BYTE PTR [rax],al
    1a19:	00 a7 02 00 00 00    	add    BYTE PTR [rdi+0x2],ah
    1a1f:	00 00                	add    BYTE PTR [rax],al
    1a21:	00 01                	add    BYTE PTR [rcx],al
    1a23:	9c                   	pushf
    1a24:	9f                   	lahf
    1a25:	13 00                	adc    eax,DWORD PTR [rax]
    1a27:	00 10                	add    BYTE PTR [rax],dl
    1a29:	94                   	xchg   esp,eax
    1a2a:	05 00 00 3d 25       	add    eax,0x253d0000
    1a2f:	0e                   	(bad)
    1a30:	0d 00 00 15 03       	or     eax,0x3150000
    1a35:	00 00                	add    BYTE PTR [rax],al
    1a37:	07                   	(bad)
    1a38:	03 00                	add    eax,DWORD PTR [rax]
    1a3a:	00 10                	add    BYTE PTR [rax],dl
    1a3c:	c7                   	(bad)
    1a3d:	14 00                	adc    al,0x0
    1a3f:	00 3d 35 83 08 00    	add    BYTE PTR [rip+0x88335],bh        # 89d7a <_end+0x83d62>
    1a45:	00 59 03             	add    BYTE PTR [rcx+0x3],bl
    1a48:	00 00                	add    BYTE PTR [rax],al
    1a4a:	4d 03 00             	add    r8,QWORD PTR [r8]
    1a4d:	00 1f                	add    BYTE PTR [rdi],bl
    1a4f:	cd 03                	int    0x3
    1a51:	00 00                	add    BYTE PTR [rax],al
    1a53:	13 11                	adc    edx,DWORD PTR [rcx]
    1a55:	00 00                	add    BYTE PTR [rax],al
    1a57:	09 03                	or     DWORD PTR [rbx],eax
    1a59:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    1a5c:	00 00                	add    BYTE PTR [rax],al
    1a5e:	00 00                	add    BYTE PTR [rax],al
    1a60:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 7888cf <_end+0x7828b7>
    1a66:	41 0e                	rex.B (bad)
    1a68:	07                   	(bad)
    1a69:	08 00                	or     BYTE PTR [rax],al
    1a6b:	00 ae 03 00 00 a2    	add    BYTE PTR [rsi-0x5dfffffd],ch
    1a71:	03 00                	add    eax,DWORD PTR [rax]
    1a73:	00 0c d0             	add    BYTE PTR [rax+rdx*8],cl
    1a76:	05 00 00 43 0e       	add    eax,0xe430000
    1a7b:	07                   	(bad)
    1a7c:	08 00                	or     BYTE PTR [rax],al
    1a7e:	00 ee                	add    dh,ch
    1a80:	03 00                	add    eax,DWORD PTR [rax]
    1a82:	00 ea                	add    dl,ch
    1a84:	03 00                	add    eax,DWORD PTR [rax]
    1a86:	00 0e                	add    BYTE PTR [rsi],cl
    1a88:	13 0d 00 00 e7 15    	adc    ecx,DWORD PTR [rip+0x15e70000]        # 15e71a8e <_end+0x15e6ba76>
    1a8e:	00 00                	add    BYTE PTR [rax],al
    1a90:	00 00                	add    BYTE PTR [rax],al
    1a92:	00 00                	add    BYTE PTR [rax],al
    1a94:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
    1a97:	00 00                	add    BYTE PTR [rax],al
    1a99:	49 1a 45 13          	rex.WB sbb al,BYTE PTR [r13+0x13]
    1a9d:	00 00                	add    BYTE PTR [rax],al
    1a9f:	04 22                	add    al,0x22
    1aa1:	0d 00 00 ff 03       	or     eax,0x3ff0000
    1aa6:	00 00                	add    BYTE PTR [rax],al
    1aa8:	fd                   	std
    1aa9:	03 00                	add    eax,DWORD PTR [rax]
    1aab:	00 20                	add    BYTE PTR [rax],ah
    1aad:	5f                   	pop    rdi
    1aae:	00 00                	add    BYTE PTR [rax],al
    1ab0:	00 26                	add    BYTE PTR [rsi],ah
    1ab2:	37                   	(bad)
    1ab3:	0d 00 00 0e 9f       	or     eax,0x9f0e0000
    1ab8:	13 00                	adc    eax,DWORD PTR [rax]
    1aba:	00 f8                	add    al,bh
    1abc:	15 00 00 00 00       	adc    eax,0x0
    1ac1:	00 00                	add    BYTE PTR [rax],al
    1ac3:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
    1ac6:	00 00                	add    BYTE PTR [rax],al
    1ac8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1ac9:	26 51                	es push rcx
    1acb:	12 00                	adc    al,BYTE PTR [rax]
    1acd:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    1ad0:	13 00                	adc    eax,DWORD PTR [rax]
    1ad2:	00 0b                	add    BYTE PTR [rbx],cl
    1ad4:	04 00                	add    al,0x0
    1ad6:	00 07                	add    BYTE PTR [rdi],al
    1ad8:	04 00                	add    al,0x0
    1ada:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    1add:	13 00                	adc    eax,DWORD PTR [rax]
    1adf:	00 1e                	add    BYTE PTR [rsi],bl
    1ae1:	04 00                	add    al,0x0
    1ae3:	00 1a                	add    BYTE PTR [rdx],bl
    1ae5:	04 00                	add    al,0x0
    1ae7:	00 20                	add    BYTE PTR [rax],ah
    1ae9:	6a 00                	push   0x0
    1aeb:	00 00                	add    BYTE PTR [rax],al
    1aed:	26 cc                	es int3
    1aef:	13 00                	adc    eax,DWORD PTR [rax]
    1af1:	00 27                	add    BYTE PTR [rdi],ah
    1af3:	d7                   	xlat   BYTE PTR ds:[rbx]
    1af4:	13 00                	adc    eax,DWORD PTR [rax]
    1af6:	00 84 00 00 00 36 12 	add    BYTE PTR [rax+rax*1+0x12360000],al
    1afd:	00 00                	add    BYTE PTR [rax],al
    1aff:	11 d8                	adc    eax,ebx
    1b01:	13 00                	adc    eax,DWORD PTR [rax]
    1b03:	00 30                	add    BYTE PTR [rax],dh
    1b05:	04 00                	add    al,0x0
    1b07:	00 2e                	add    BYTE PTR [rsi],ch
    1b09:	04 00                	add    al,0x0
    1b0b:	00 07                	add    BYTE PTR [rdi],al
    1b0d:	3e 16                	ds (bad)
    1b0f:	00 00                	add    BYTE PTR [rax],al
    1b11:	00 00                	add    BYTE PTR [rax],al
    1b13:	00 00                	add    BYTE PTR [rax],al
    1b15:	5e                   	pop    rsi
    1b16:	0a 00                	or     al,BYTE PTR [rax]
    1b18:	00 03                	add    BYTE PTR [rbx],al
    1b1a:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
    1b1d:	77 18                	ja     1b37 <_Z15crc32HashString8string_t+0x117>
    1b1f:	06                   	(bad)
    1b20:	00 00                	add    BYTE PTR [rax],al
    1b22:	07                   	(bad)
    1b23:	00 16                	add    BYTE PTR [rsi],dl
    1b25:	00 00                	add    BYTE PTR [rax],al
    1b27:	00 00                	add    BYTE PTR [rax],al
    1b29:	00 00                	add    BYTE PTR [rax],al
    1b2b:	89 0a                	mov    DWORD PTR [rdx],ecx
    1b2d:	00 00                	add    BYTE PTR [rax],al
    1b2f:	03 01                	add    eax,DWORD PTR [rcx]
    1b31:	55                   	push   rbp
    1b32:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    1b35:	03 01                	add    eax,DWORD PTR [rcx]
    1b37:	54                   	push   rsp
    1b38:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    1b3b:	00 00                	add    BYTE PTR [rax],al
    1b3d:	27                   	(bad)
    1b3e:	42 0d 00 00 8f 00    	rex.X or eax,0x8f0000
    1b44:	00 00                	add    BYTE PTR [rax],al
    1b46:	f6 12                	not    BYTE PTR [rdx]
    1b48:	00 00                	add    BYTE PTR [rax],al
    1b4a:	11 43 0d             	adc    DWORD PTR [rbx+0xd],eax
    1b4d:	00 00                	add    BYTE PTR [rax],al
    1b4f:	3f                   	(bad)
    1b50:	04 00                	add    al,0x0
    1b52:	00 39                	add    BYTE PTR [rcx],bh
    1b54:	04 00                	add    al,0x0
    1b56:	00 33                	add    BYTE PTR [rbx],dh
    1b58:	4c 0d 00 00 90 16    	rex.WR or rax,0x16900000
    1b5e:	00 00                	add    BYTE PTR [rax],al
    1b60:	00 00                	add    BYTE PTR [rax],al
    1b62:	00 00                	add    BYTE PTR [rax],al
    1b64:	66 00 00             	data16 add BYTE PTR [rax],al
    1b67:	00 00                	add    BYTE PTR [rax],al
    1b69:	00 00                	add    BYTE PTR [rax],al
    1b6b:	00 11                	add    BYTE PTR [rcx],dl
    1b6d:	4d 0d 00 00 61 04    	rex.WRB or rax,0x4610000
    1b73:	00 00                	add    BYTE PTR [rax],al
    1b75:	5d                   	pop    rbp
    1b76:	04 00                	add    al,0x0
    1b78:	00 33                	add    BYTE PTR [rbx],dh
    1b7a:	58                   	pop    rax
    1b7b:	0d 00 00 b0 16       	or     eax,0x16b00000
    1b80:	00 00                	add    BYTE PTR [rax],al
    1b82:	00 00                	add    BYTE PTR [rax],al
    1b84:	00 00                	add    BYTE PTR [rax],al
    1b86:	42 00 00             	rex.X add BYTE PTR [rax],al
    1b89:	00 00                	add    BYTE PTR [rax],al
    1b8b:	00 00                	add    BYTE PTR [rax],al
    1b8d:	00 11                	add    BYTE PTR [rcx],dl
    1b8f:	59                   	pop    rcx
    1b90:	0d 00 00 76 04       	or     eax,0x4760000
    1b95:	00 00                	add    BYTE PTR [rax],al
    1b97:	70 04                	jo     1b9d <_Z25_mm_crc32UnrollHashString8string_t+0xd>
    1b99:	00 00                	add    BYTE PTR [rax],al
    1b9b:	34 7d                	xor    al,0x7d
    1b9d:	0d 00 00 ce 16       	or     eax,0x16ce0000
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	00 00                	add    BYTE PTR [rax],al
    1ba6:	00 00                	add    BYTE PTR [rax],al
    1ba8:	01 9a 00 00 00 af    	add    DWORD PTR [rdx-0x51000000],ebx
    1bae:	1d 28 98 0d 00       	sbb    eax,0xd9828
    1bb3:	00 28                	add    BYTE PTR [rax],ch
    1bb5:	8c 0d 00 00 20 a5    	mov    WORD PTR [rip+0xffffffffa5200000],cs        # ffffffffa5201bbb <_end+0xffffffffa51fbba3>
    1bbb:	00 00                	add    BYTE PTR [rax],al
    1bbd:	00 11                	add    BYTE PTR [rcx],dl
    1bbf:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1bc0:	0d 00 00 a4 04       	or     eax,0x4a40000
    1bc5:	00 00                	add    BYTE PTR [rax],al
    1bc7:	a0 04 00 00 26 b8 0d 	movabs al,ds:0xdb826000004
    1bce:	00 00 
    1bd0:	0d e3 16 00 00       	or     eax,0x16e3
    1bd5:	00 00                	add    BYTE PTR [rax],al
    1bd7:	00 00                	add    BYTE PTR [rax],al
    1bd9:	3f                   	(bad)
    1bda:	0a 00                	or     al,BYTE PTR [rax]
    1bdc:	00 00                	add    BYTE PTR [rax],al
    1bde:	00 00                	add    BYTE PTR [rax],al
    1be0:	00 00                	add    BYTE PTR [rax],al
    1be2:	4f d9 0d 00 00 b5 00 	rex.WRXB (bad) [rip+0xb50000]        # b51be9 <_end+0xb4bbd1>
    1be9:	00 00                	add    BYTE PTR [rax],al
    1beb:	01 b5 10 28 ea 0d    	add    DWORD PTR [rbp+0xdea2810],esi
    1bf1:	00 00                	add    BYTE PTR [rax],al
    1bf3:	20 b5 00 00 00 27    	and    BYTE PTR [rbp+0x27000000],dh
    1bf9:	ff 0d 00 00 c0 00    	dec    DWORD PTR [rip+0xc00000]        # c01bff <_end+0xbfbbe7>
    1bff:	00 00                	add    BYTE PTR [rax],al
    1c01:	34 13                	xor    al,0x13
    1c03:	00 00                	add    BYTE PTR [rax],al
    1c05:	11 00                	adc    DWORD PTR [rax],eax
    1c07:	0e                   	(bad)
    1c08:	00 00                	add    BYTE PTR [rax],al
    1c0a:	c3                   	ret
    1c0b:	04 00                	add    al,0x0
    1c0d:	00 bd 04 00 00 0d    	add    BYTE PTR [rbp+0xd000004],bh
    1c13:	2e 17                	cs (bad)
    1c15:	00 00                	add    BYTE PTR [rax],al
    1c17:	00 00                	add    BYTE PTR [rax],al
    1c19:	00 00                	add    BYTE PTR [rax],al
    1c1b:	ed                   	in     eax,dx
    1c1c:	09 00                	or     DWORD PTR [rax],eax
    1c1e:	00 00                	add    BYTE PTR [rax],al
    1c20:	0d 3e 17 00 00       	or     eax,0x173e
    1c25:	00 00                	add    BYTE PTR [rax],al
    1c27:	00 00                	add    BYTE PTR [rax],al
    1c29:	dc 09                	fmul   QWORD PTR [rcx]
    1c2b:	00 00                	add    BYTE PTR [rax],al
    1c2d:	00 00                	add    BYTE PTR [rax],al
    1c2f:	00 00                	add    BYTE PTR [rax],al
    1c31:	0d 5e 15 00 00       	or     eax,0x155e
    1c36:	00 00                	add    BYTE PTR [rax],al
    1c38:	00 00                	add    BYTE PTR [rax],al
    1c3a:	3f                   	(bad)
    1c3b:	0a 00                	or     al,BYTE PTR [rax]
    1c3d:	00 21                	add    BYTE PTR [rcx],ah
    1c3f:	82                   	(bad)
    1c40:	17                   	(bad)
    1c41:	00 00                	add    BYTE PTR [rax],al
    1c43:	00 00                	add    BYTE PTR [rax],al
    1c45:	00 00                	add    BYTE PTR [rax],al
    1c47:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1c48:	0a 00                	or     al,BYTE PTR [rax]
    1c4a:	00 91 13 00 00 03    	add    BYTE PTR [rcx+0x3000013],dl
    1c50:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1c53:	03 22                	add    esp,DWORD PTR [rdx]
    1c55:	40 00 00             	rex add BYTE PTR [rax],al
    1c58:	00 00                	add    BYTE PTR [rax],al
    1c5a:	00 00                	add    BYTE PTR [rax],al
    1c5c:	03 01                	add    eax,DWORD PTR [rcx]
    1c5e:	54                   	push   rsp
    1c5f:	09 03                	or     DWORD PTR [rbx],eax
    1c61:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1c64:	00 00                	add    BYTE PTR [rax],al
    1c66:	00 00                	add    BYTE PTR [rax],al
    1c68:	00 03                	add    BYTE PTR [rbx],al
    1c6a:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1c6d:	08 3e                	or     BYTE PTR [rsi],bh
    1c6f:	03 01                	add    eax,DWORD PTR [rcx]
    1c71:	52                   	push   rdx
    1c72:	09 03                	or     DWORD PTR [rbx],eax
    1c74:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    1c77:	00 00                	add    BYTE PTR [rax],al
    1c79:	00 00                	add    BYTE PTR [rax],al
    1c7b:	00 00                	add    BYTE PTR [rax],al
    1c7d:	0d 87 17 00 00       	or     eax,0x1787
    1c82:	00 00                	add    BYTE PTR [rax],al
    1c84:	00 00                	add    BYTE PTR [rax],al
    1c86:	46 19 00             	rex.RX sbb DWORD PTR [rax],r8d
    1c89:	00 00                	add    BYTE PTR [rax],al
    1c8b:	35 52 03 00 00       	xor    eax,0x352
    1c90:	01 2e                	add    DWORD PTR [rsi],ebp
    1c92:	09 1d 06 00 00 94    	or     DWORD PTR [rip+0xffffffff94000006],ebx        # ffffffff94001c9e <_end+0xffffffff93ffbc86>
    1c98:	09 00                	or     DWORD PTR [rax],eax
    1c9a:	00 01                	add    BYTE PTR [rcx],al
    1c9c:	f7 13                	not    DWORD PTR [rbx]
    1c9e:	00 00                	add    BYTE PTR [rax],al
    1ca0:	0a 1b                	or     bl,BYTE PTR [rbx]
    1ca2:	04 00                	add    al,0x0
    1ca4:	00 01                	add    BYTE PTR [rcx],al
    1ca6:	2e 1c 8f             	cs sbb al,0x8f
    1ca9:	08 00                	or     BYTE PTR [rax],al
    1cab:	00 0a                	add    BYTE PTR [rdx],cl
    1cad:	19 03                	sbb    DWORD PTR [rbx],eax
    1caf:	00 00                	add    BYTE PTR [rax],al
    1cb1:	01 2e                	add    DWORD PTR [rsi],ebp
    1cb3:	30 07                	xor    BYTE PTR [rdi],al
    1cb5:	08 00                	or     BYTE PTR [rax],al
    1cb7:	00 16                	add    BYTE PTR [rsi],dl
    1cb9:	94                   	xchg   esp,eax
    1cba:	05 00 00 2f 0d       	add    eax,0xd2f0000
    1cbf:	94                   	xchg   esp,eax
    1cc0:	09 00                	or     DWORD PTR [rax],eax
    1cc2:	00 18                	add    BYTE PTR [rax],bl
    1cc4:	1c 69                	sbb    al,0x69
    1cc6:	00 36                	add    BYTE PTR [rsi],dh
    1cc8:	13 07                	adc    eax,DWORD PTR [rdi]
    1cca:	08 00                	or     BYTE PTR [rax],al
    1ccc:	00 07                	add    BYTE PTR [rdi],al
    1cce:	9c                   	pushf
    1ccf:	14 00                	adc    al,0x0
    1cd1:	00 00                	add    BYTE PTR [rax],al
    1cd3:	00 00                	add    BYTE PTR [rax],al
    1cd5:	00 5e 0a             	add    BYTE PTR [rsi+0xa],bl
    1cd8:	00 00                	add    BYTE PTR [rax],al
    1cda:	03 01                	add    eax,DWORD PTR [rcx]
    1cdc:	55                   	push   rbp
    1cdd:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    1ce0:	00 00                	add    BYTE PTR [rax],al
    1ce2:	00 31                	add    BYTE PTR [rcx],dh
    1ce4:	41 06                	rex.B (bad)
    1ce6:	00 00                	add    BYTE PTR [rax],al
    1ce8:	14 0b                	adc    al,0xb
    1cea:	7e 03                	jle    1cef <_Z13sumHashString8string_t+0x6f>
    1cec:	00 00                	add    BYTE PTR [rax],al
    1cee:	d3 16                	rcl    DWORD PTR [rsi],cl
    1cf0:	00 00                	add    BYTE PTR [rax],al
    1cf2:	00 13                	add    BYTE PTR [rbx],dl
    1cf4:	00 00                	add    BYTE PTR [rax],al
    1cf6:	00 00                	add    BYTE PTR [rax],al
    1cf8:	00 00                	add    BYTE PTR [rax],al
    1cfa:	23 01                	and    eax,DWORD PTR [rcx]
    1cfc:	00 00                	add    BYTE PTR [rax],al
    1cfe:	00 00                	add    BYTE PTR [rax],al
    1d00:	00 00                	add    BYTE PTR [rax],al
    1d02:	01 9c d3 16 00 00 10 	add    DWORD PTR [rbx+rdx*8+0x10000016],ebx
    1d09:	9e                   	sahf
    1d0a:	03 00                	add    eax,DWORD PTR [rax]
    1d0c:	00 14 22             	add    BYTE PTR [rdx+riz*1],dl
    1d0f:	41 01 00             	add    DWORD PTR [r8],eax
    1d12:	00 e8                	add    al,ch
    1d14:	04 00                	add    al,0x0
    1d16:	00 dc                	add    ah,bl
    1d18:	04 00                	add    al,0x0
    1d1a:	00 10                	add    BYTE PTR [rax],dl
    1d1c:	be 04 00 00 14       	mov    esi,0x14000004
    1d21:	31 07                	xor    DWORD PTR [rdi],eax
    1d23:	08 00                	or     BYTE PTR [rax],al
    1d25:	00 19                	add    BYTE PTR [rcx],bl
    1d27:	05 00 00 0f 05       	add    eax,0x50f0000
    1d2c:	00 00                	add    BYTE PTR [rax],al
    1d2e:	1f                   	(bad)
    1d2f:	cd 03                	int    0x3
    1d31:	00 00                	add    BYTE PTR [rax],al
    1d33:	d4                   	(bad)
    1d34:	0d 00 00 09 03       	or     eax,0x3090000
    1d39:	e8 42 00 00 00       	call   1d80 <_Z13sumHashString8string_t+0x100>
    1d3e:	00 00                	add    BYTE PTR [rax],al
    1d40:	00 0c c3             	add    BYTE PTR [rbx+rax*8],cl
    1d43:	06                   	(bad)
    1d44:	00 00                	add    BYTE PTR [rax],al
    1d46:	17                   	(bad)
    1d47:	0f d3 16             	psrlq  mm2,QWORD PTR [rsi]
    1d4a:	00 00                	add    BYTE PTR [rax],al
    1d4c:	44 05 00 00 3e 05    	rex.R add eax,0x53e0000
    1d52:	00 00                	add    BYTE PTR [rax],al
    1d54:	0c 96                	or     al,0x96
    1d56:	03 00                	add    eax,DWORD PTR [rax]
    1d58:	00 18                	add    BYTE PTR [rax],bl
    1d5a:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1d5d:	00 00                	add    BYTE PTR [rax],al
    1d5f:	5b                   	pop    rbx
    1d60:	05 00 00 57 05       	add    eax,0x5570000
    1d65:	00 00                	add    BYTE PTR [rax],al
    1d67:	0c 5e                	or     al,0x5e
    1d69:	03 00                	add    eax,DWORD PTR [rax]
    1d6b:	00 19                	add    BYTE PTR [rcx],bl
    1d6d:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1d70:	00 00                	add    BYTE PTR [rax],al
    1d72:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d73:	05 00 00 67 05       	add    eax,0x5670000
    1d78:	00 00                	add    BYTE PTR [rax],al
    1d7a:	0c ea                	or     al,0xea
    1d7c:	05 00 00 1a 0e       	add    eax,0xe1a0000
    1d81:	07                   	(bad)
    1d82:	08 00                	or     BYTE PTR [rax],al
    1d84:	00 83 05 00 00 7f    	add    BYTE PTR [rbx+0x7f000005],al
    1d8a:	05 00 00 2f 4a       	add    eax,0x4a2f0000
    1d8f:	13 00                	adc    eax,DWORD PTR [rax]
    1d91:	00 00                	add    BYTE PTR [rax],al
    1d93:	00 00                	add    BYTE PTR [rax],al
    1d95:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
    1d9b:	00 00                	add    BYTE PTR [rax],al
    1d9d:	00 5d 16             	add    BYTE PTR [rbp+0x16],bl
    1da0:	00 00                	add    BYTE PTR [rax],al
    1da2:	15 69 00 1c 13       	adc    eax,0x131c0069
    1da7:	07                   	(bad)
    1da8:	08 00                	or     BYTE PTR [rax],al
    1daa:	00 99 05 00 00 91    	add    BYTE PTR [rcx-0x6efffffb],bl
    1db0:	05 00 00 17 6b       	add    eax,0x6b170000
    1db5:	17                   	(bad)
    1db6:	00 00                	add    BYTE PTR [rax],al
    1db8:	60                   	(bad)
    1db9:	13 00                	adc    eax,DWORD PTR [rax]
    1dbb:	00 00                	add    BYTE PTR [rax],al
    1dbd:	00 00                	add    BYTE PTR [rax],al
    1dbf:	00 02                	add    BYTE PTR [rdx],al
    1dc1:	60                   	(bad)
    1dc2:	13 00                	adc    eax,DWORD PTR [rax]
    1dc4:	00 00                	add    BYTE PTR [rax],al
    1dc6:	00 00                	add    BYTE PTR [rax],al
    1dc8:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1dce <_Z13sumHashString8string_t+0x14e>
    1dce:	00 00                	add    BYTE PTR [rax],al
    1dd0:	00 1f                	add    BYTE PTR [rdi],bl
    1dd2:	17                   	(bad)
    1dd3:	1f                   	(bad)
    1dd4:	15 00 00 04 8b       	adc    eax,0x8b040000
    1dd9:	17                   	(bad)
    1dda:	00 00                	add    BYTE PTR [rax],al
    1ddc:	c6 05 00 00 c4 05 00 	mov    BYTE PTR [rip+0x5c40000],0x0        # 5c41de3 <_end+0x5c3bdcb>
    1de3:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    1de6:	17                   	(bad)
    1de7:	00 00                	add    BYTE PTR [rax],al
    1de9:	cf                   	iret
    1dea:	05 00 00 cd 05       	add    eax,0x5cd0000
    1def:	00 00                	add    BYTE PTR [rax],al
    1df1:	07                   	(bad)
    1df2:	6d                   	ins    DWORD PTR es:[rdi],dx
    1df3:	13 00                	adc    eax,DWORD PTR [rax]
    1df5:	00 00                	add    BYTE PTR [rax],al
    1df7:	00 00                	add    BYTE PTR [rax],al
    1df9:	00 4f 19             	add    BYTE PTR [rdi+0x19],cl
    1dfc:	00 00                	add    BYTE PTR [rax],al
    1dfe:	03 01                	add    eax,DWORD PTR [rcx]
    1e00:	55                   	push   rbp
    1e01:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    1e04:	03 01                	add    eax,DWORD PTR [rcx]
    1e06:	54                   	push   rsp
    1e07:	01 3a                	add    DWORD PTR [rdx],edi
    1e09:	00 00                	add    BYTE PTR [rax],al
    1e0b:	0e                   	(bad)
    1e0c:	03 17                	add    edx,DWORD PTR [rdi]
    1e0e:	00 00                	add    BYTE PTR [rax],al
    1e10:	9b                   	fwait
    1e11:	13 00                	adc    eax,DWORD PTR [rax]
    1e13:	00 00                	add    BYTE PTR [rax],al
    1e15:	00 00                	add    BYTE PTR [rax],al
    1e17:	00 00                	add    BYTE PTR [rax],al
    1e19:	33 00                	xor    eax,DWORD PTR [rax]
    1e1b:	00 00                	add    BYTE PTR [rax],al
    1e1d:	24 10                	and    al,0x10
    1e1f:	ae                   	scas   al,BYTE PTR es:[rdi]
    1e20:	15 00 00 04 2a       	adc    eax,0x2a040000
    1e25:	17                   	(bad)
    1e26:	00 00                	add    BYTE PTR [rax],al
    1e28:	d9 05 00 00 d5 05    	fld    DWORD PTR [rip+0x5d50000]        # 5d51e2e <_end+0x5d4be16>
    1e2e:	00 00                	add    BYTE PTR [rax],al
    1e30:	04 1e                	add    al,0x1e
    1e32:	17                   	(bad)
    1e33:	00 00                	add    BYTE PTR [rax],al
    1e35:	ec                   	in     al,dx
    1e36:	05 00 00 ea 05       	add    eax,0x5ea0000
    1e3b:	00 00                	add    BYTE PTR [rax],al
    1e3d:	04 12                	add    al,0x12
    1e3f:	17                   	(bad)
    1e40:	00 00                	add    BYTE PTR [rax],al
    1e42:	f8                   	clc
    1e43:	05 00 00 f4 05       	add    eax,0x5f40000
    1e48:	00 00                	add    BYTE PTR [rax],al
    1e4a:	07                   	(bad)
    1e4b:	a8 13                	test   al,0x13
    1e4d:	00 00                	add    BYTE PTR [rax],al
    1e4f:	00 00                	add    BYTE PTR [rax],al
    1e51:	00 00                	add    BYTE PTR [rax],al
    1e53:	58                   	pop    rax
    1e54:	19 00                	sbb    DWORD PTR [rax],eax
    1e56:	00 03                	add    BYTE PTR [rbx],al
    1e58:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1e5b:	91                   	xchg   ecx,eax
    1e5c:	a0 7f 06 03 01 51 04 	movabs al,ds:0xa89104510103067f
    1e63:	91 a8 
    1e65:	7f 06                	jg     1e6d <_Z17adler32HashString8string_t+0x7d>
    1e67:	03 01                	add    eax,DWORD PTR [rcx]
    1e69:	52                   	push   rdx
    1e6a:	2d 73 00 91 b0       	sub    eax,0xb0910073
    1e6f:	7f 06                	jg     1e77 <_Z13elfHashString8string_t+0x7>
    1e71:	73 00                	jae    1e73 <_Z13elfHashString8string_t+0x3>
    1e73:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1e79:	80 80 80 80 01 91 b0 	add    BYTE PTR [rax-0x6efe7f80],0xb0
    1e80:	7f 06                	jg     1e88 <_Z13elfHashString8string_t+0x18>
    1e82:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1e88:	80 80 80 80 01 2a 28 	add    BYTE PTR [rax+0x2a018080],0x28
    1e8f:	01 00                	add    DWORD PTR [rax],eax
    1e91:	16                   	(bad)
    1e92:	13 91 b0 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fb0]
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	34 37                	xor    al,0x37
    1e9c:	17                   	(bad)
    1e9d:	00 00                	add    BYTE PTR [rax],al
    1e9f:	b6 13                	mov    dh,0x13
    1ea1:	00 00                	add    BYTE PTR [rax],al
    1ea3:	00 00                	add    BYTE PTR [rax],al
    1ea5:	00 00                	add    BYTE PTR [rax],al
    1ea7:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
    1eaa:	00 00                	add    BYTE PTR [rax],al
    1eac:	25 0f 04 5e 17       	and    eax,0x175e040f
    1eb1:	00 00                	add    BYTE PTR [rax],al
    1eb3:	0f 06                	clts
    1eb5:	00 00                	add    BYTE PTR [rax],al
    1eb7:	09 06                	or     DWORD PTR [rsi],eax
    1eb9:	00 00                	add    BYTE PTR [rax],al
    1ebb:	04 52                	add    al,0x52
    1ebd:	17                   	(bad)
    1ebe:	00 00                	add    BYTE PTR [rax],al
    1ec0:	3d 06 00 00 3b       	cmp    eax,0x3b000006
    1ec5:	06                   	(bad)
    1ec6:	00 00                	add    BYTE PTR [rax],al
    1ec8:	04 46                	add    al,0x46
    1eca:	17                   	(bad)
    1ecb:	00 00                	add    BYTE PTR [rax],al
    1ecd:	4c 06                	rex.WR (bad)
    1ecf:	00 00                	add    BYTE PTR [rax],al
    1ed1:	46 06                	rex.RX (bad)
    1ed3:	00 00                	add    BYTE PTR [rax],al
    1ed5:	07                   	(bad)
    1ed6:	d5 13 00 00          	{rex2 0x13} add BYTE PTR [r24],al
    1eda:	00 00                	add    BYTE PTR [rax],al
    1edc:	00 00                	add    BYTE PTR [rax],al
    1ede:	61                   	(bad)
    1edf:	19 00                	sbb    DWORD PTR [rax],eax
    1ee1:	00 03                	add    BYTE PTR [rbx],al
    1ee3:	01 55 0c             	add    DWORD PTR [rbp+0xc],edx
    1ee6:	7e 00                	jle    1ee8 <_Z13searchElementP4List8string_t.part.0+0x28>
    1ee8:	91                   	xchg   ecx,eax
    1ee9:	a8 7f                	test   al,0x7f
    1eeb:	06                   	(bad)
    1eec:	22 91 b0 7f 06 22    	and    dl,BYTE PTR [rcx+0x22067fb0]
    1ef2:	03 01                	add    eax,DWORD PTR [rcx]
    1ef4:	54                   	push   rsp
    1ef5:	01 30                	add    DWORD PTR [rax],esi
    1ef7:	03 01                	add    eax,DWORD PTR [rcx]
    1ef9:	51                   	push   rcx
    1efa:	0b 08                	or     ecx,DWORD PTR [rax]
    1efc:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
    1f00:	0c ff                	or     al,0xff
    1f02:	ff                   	(bad)
    1f03:	ff                   	(bad)
    1f04:	ff 1a                	call   FWORD PTR [rdx]
    1f06:	03 01                	add    eax,DWORD PTR [rcx]
    1f08:	52                   	push   rdx
    1f09:	3c 73                	cmp    al,0x73
    1f0b:	00 91 a8 7f 06 91    	add    BYTE PTR [rcx-0x6ef98058],dl
    1f11:	b0 7f                	mov    al,0x7f
    1f13:	06                   	(bad)
    1f14:	22 73 00             	and    dh,BYTE PTR [rbx+0x0]
    1f17:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1f1d:	80 80 80 80 01 91 a8 	add    BYTE PTR [rax-0x6efe7f80],0xa8
    1f24:	7f 06                	jg     1f2c <_Z8listCtorv+0x3c>
    1f26:	91                   	xchg   ecx,eax
    1f27:	b0 7f                	mov    al,0x7f
    1f29:	06                   	(bad)
    1f2a:	22 23                	and    ah,BYTE PTR [rbx]
    1f2c:	80 80 80 80 80 80 80 	add    BYTE PTR [rax-0x7f7f7f80],0x80
    1f33:	80 80 01 2a 28 01 00 	add    BYTE PTR [rax+0x1282a01],0x0
    1f3a:	16                   	(bad)
    1f3b:	13 91 a8 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fa8]
    1f41:	91                   	xchg   ecx,eax
    1f42:	b0 7f                	mov    al,0x7f
    1f44:	06                   	(bad)
    1f45:	1c 00                	sbb    al,0x0
    1f47:	00 00                	add    BYTE PTR [rax],al
    1f49:	21 34 13             	and    DWORD PTR [rbx+rdx*1],esi
    1f4c:	00 00                	add    BYTE PTR [rax],al
    1f4e:	00 00                	add    BYTE PTR [rax],al
    1f50:	00 00                	add    BYTE PTR [rax],al
    1f52:	89 0a                	mov    DWORD PTR [rdx],ecx
    1f54:	00 00                	add    BYTE PTR [rax],al
    1f56:	7a 16                	jp     1f6e <_Z12pushListElemP4List8string_t+0x1e>
    1f58:	00 00                	add    BYTE PTR [rax],al
    1f5a:	03 01                	add    eax,DWORD PTR [rcx]
    1f5c:	55                   	push   rbp
    1f5d:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    1f60:	03 01                	add    eax,DWORD PTR [rcx]
    1f62:	54                   	push   rsp
    1f63:	01 40 00             	add    DWORD PTR [rax+0x0],eax
    1f66:	21 47 13             	and    DWORD PTR [rdi+0x13],eax
    1f69:	00 00                	add    BYTE PTR [rax],al
    1f6b:	00 00                	add    BYTE PTR [rax],al
    1f6d:	00 00                	add    BYTE PTR [rax],al
    1f6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f70:	0a 00                	or     al,BYTE PTR [rax]
    1f72:	00 98 16 00 00 03    	add    BYTE PTR [rax+0x3000016],bl
    1f78:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1f7b:	08 20                	or     BYTE PTR [rax],ah
    1f7d:	03 01                	add    eax,DWORD PTR [rcx]
    1f7f:	54                   	push   rsp
    1f80:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    1f83:	00 07                	add    BYTE PTR [rdi],al
    1f85:	23 14 00             	and    edx,DWORD PTR [rax+rax*1]
    1f88:	00 00                	add    BYTE PTR [rax],al
    1f8a:	00 00                	add    BYTE PTR [rax],al
    1f8c:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    1f93:	55                   	push   rbp
    1f94:	09 03                	or     DWORD PTR [rbx],eax
    1f96:	1d 40 00 00 00       	sbb    eax,0x40
    1f9b:	00 00                	add    BYTE PTR [rax],al
    1f9d:	00 03                	add    BYTE PTR [rbx],al
    1f9f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1fa3:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1fa6:	00 00                	add    BYTE PTR [rax],al
    1fa8:	00 00                	add    BYTE PTR [rax],al
    1faa:	00 03                	add    BYTE PTR [rbx],al
    1fac:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    1faf:	45 03 01             	add    r8d,DWORD PTR [r9]
    1fb2:	52                   	push   rdx
    1fb3:	09 03                	or     DWORD PTR [rbx],eax
    1fb5:	e8 42 00 00 00       	call   1ffc <_Z12pushListElemP4List8string_t+0xac>
    1fba:	00 00                	add    BYTE PTR [rax],al
    1fbc:	00 00                	add    BYTE PTR [rax],al
    1fbe:	00 09                	add    BYTE PTR [rcx],cl
    1fc0:	53                   	push   rbx
    1fc1:	08 00                	or     BYTE PTR [rax],al
    1fc3:	00 50 51             	add    BYTE PTR [rax+0x51],dl
    1fc6:	07                   	(bad)
    1fc7:	00 00                	add    BYTE PTR [rax],al
    1fc9:	04 49                	add    al,0x49
    1fcb:	03 01                	add    eax,DWORD PTR [rcx]
    1fcd:	22 03                	and    al,BYTE PTR [rbx]
    1fcf:	00 00                	add    BYTE PTR [rax],al
    1fd1:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fd4:	00 03                	add    BYTE PTR [rbx],al
    1fd6:	03 17                	add    edx,DWORD PTR [rdi]
    1fd8:	00 00                	add    BYTE PTR [rax],al
    1fda:	36 5f                	ss pop rdi
    1fdc:	5f                   	pop    rdi
    1fdd:	43 00 23             	rex.XB add BYTE PTR [r11],spl
    1fe0:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fe3:	00 36                	add    BYTE PTR [rsi],dh
    1fe5:	5f                   	pop    rdi
    1fe6:	5f                   	pop    rdi
    1fe7:	56                   	push   rsi
    1fe8:	00 3b                	add    BYTE PTR [rbx],bh
    1fea:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fed:	00 00                	add    BYTE PTR [rax],al
    1fef:	29 74 04 00          	sub    DWORD PTR [rsp+rax*1+0x0],esi
    1ff3:	00 03                	add    BYTE PTR [rbx],al
    1ff5:	5c                   	pop    rsp
    1ff6:	41 01 00             	add    DWORD PTR [r8],eax
    1ff9:	00 37                	add    BYTE PTR [rdi],dh
    1ffb:	17                   	(bad)
    1ffc:	00 00                	add    BYTE PTR [rax],al
    1ffe:	0a 37                	or     dh,BYTE PTR [rdi]
    2000:	05 00 00 03 5c       	add    eax,0x5c030000
    2005:	01 46 01             	add    DWORD PTR [rsi+0x1],eax
    2008:	00 00                	add    BYTE PTR [rax],al
    200a:	0a aa 03 00 00 03    	or     ch,BYTE PTR [rdx+0x3000003]
    2010:	5c                   	pop    rsp
    2011:	01 fa                	add    edx,edi
    2013:	00 00                	add    BYTE PTR [rax],al
    2015:	00 0a                	add    BYTE PTR [rdx],cl
    2017:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2018:	04 00                	add    al,0x0
    201a:	00 03                	add    BYTE PTR [rbx],al
    201c:	5c                   	pop    rsp
    201d:	01 2e                	add    DWORD PTR [rsi],ebp
    201f:	00 00                	add    BYTE PTR [rax],al
    2021:	00 00                	add    BYTE PTR [rax],al
    2023:	29 f4                	sub    esp,esi
    2025:	17                   	(bad)
    2026:	00 00                	add    BYTE PTR [rax],al
    2028:	03 39                	add    edi,DWORD PTR [rcx]
    202a:	3f                   	(bad)
    202b:	01 00                	add    DWORD PTR [rax],eax
    202d:	00 6b 17             	add    BYTE PTR [rbx+0x17],ch
    2030:	00 00                	add    BYTE PTR [rax],al
    2032:	0a 37                	or     dh,BYTE PTR [rdi]
    2034:	05 00 00 03 39       	add    eax,0x39030000
    2039:	01 3f                	add    DWORD PTR [rdi],edi
    203b:	01 00                	add    DWORD PTR [rax],eax
    203d:	00 0a                	add    BYTE PTR [rdx],cl
    203f:	79 03                	jns    2044 <_Z12pushListElemP4List8string_t+0xf4>
    2041:	00 00                	add    BYTE PTR [rax],al
    2043:	03 39                	add    edi,DWORD PTR [rcx]
    2045:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    2048:	00 00                	add    BYTE PTR [rax],al
    204a:	0a 6e 04             	or     ch,BYTE PTR [rsi+0x4]
    204d:	00 00                	add    BYTE PTR [rax],al
    204f:	03 39                	add    edi,DWORD PTR [rcx]
    2051:	01 2e                	add    DWORD PTR [rsi],ebp
    2053:	00 00                	add    BYTE PTR [rax],al
    2055:	00 00                	add    BYTE PTR [rax],al
    2057:	35 55 05 00 00       	xor    eax,0x555
    205c:	02 e9                	add    ch,cl
    205e:	01 55 05             	add    DWORD PTR [rbp+0x5],edx
    2061:	00 00                	add    BYTE PTR [rax],al
    2063:	41 01 00             	add    DWORD PTR [r8],eax
    2066:	00 03                	add    BYTE PTR [rbx],al
    2068:	97                   	xchg   edi,eax
    2069:	17                   	(bad)
    206a:	00 00                	add    BYTE PTR [rax],al
    206c:	37                   	(bad)
    206d:	5f                   	pop    rdi
    206e:	5f                   	pop    rdi
    206f:	73 00                	jae    2071 <_Z12pushListElemP4List8string_t+0x121>
    2071:	e9 0f 41 01 00       	jmp    16185 <_end+0x1016d>
    2076:	00 37                	add    BYTE PTR [rdi],dh
    2078:	5f                   	pop    rdi
    2079:	5f                   	pop    rdi
    207a:	63 00                	movsxd eax,DWORD PTR [rax]
    207c:	e9 18 66 00 00       	jmp    8699 <_end+0x2681>
    2081:	00 00                	add    BYTE PTR [rax],al
    2083:	29 a1 2d 00 00 05    	sub    DWORD PTR [rcx+0x500002d],esp
    2089:	54                   	push   rsp
    208a:	66 00 00             	data16 add BYTE PTR [rax],al
    208d:	00 b4 17 00 00 0a 3b 	add    BYTE PTR [rdi+rdx*1+0x3b0a0000],dh
    2094:	06                   	(bad)
    2095:	00 00                	add    BYTE PTR [rax],al
    2097:	05 54 20 fa 00       	add    eax,0xfa2054
    209c:	00 00                	add    BYTE PTR [rax],al
    209e:	2d 00 38 9f 13       	sub    eax,0x139f3800
    20a3:	00 00                	add    BYTE PTR [rax],al
    20a5:	1d 06 00 00 30       	sbb    eax,0x30000006
    20aa:	14 00                	adc    al,0x0
    20ac:	00 00                	add    BYTE PTR [rax],al
    20ae:	00 00                	add    BYTE PTR [rax],al
    20b0:	00 a9 00 00 00 00    	add    BYTE PTR [rcx+0x0],ch
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	00 01                	add    BYTE PTR [rcx],al
    20ba:	9c                   	pushf
    20bb:	4c 18 00             	rex.WR sbb BYTE PTR [rax],r8b
    20be:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    20c1:	13 00                	adc    eax,DWORD PTR [rax]
    20c3:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    20c6:	00 00                	add    BYTE PTR [rax],al
    20c8:	73 06                	jae    20d0 <_Z11popListElemP4List8string_t+0x20>
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	04 c0                	add    al,0xc0
    20ce:	13 00                	adc    eax,DWORD PTR [rax]
    20d0:	00 a3 06 00 00 9d    	add    BYTE PTR [rbx-0x62fffffa],ah
    20d6:	06                   	(bad)
    20d7:	00 00                	add    BYTE PTR [rax],al
    20d9:	11 cc                	adc    esp,ecx
    20db:	13 00                	adc    eax,DWORD PTR [rax]
    20dd:	00 c4                	add    ah,al
    20df:	06                   	(bad)
    20e0:	00 00                	add    BYTE PTR [rax],al
    20e2:	bc 06 00 00 39       	mov    esp,0x39000006
    20e7:	d7                   	xlat   BYTE PTR ds:[rbx]
    20e8:	13 00                	adc    eax,DWORD PTR [rax]
    20ea:	00 7d 14             	add    BYTE PTR [rbp+0x14],bh
    20ed:	00 00                	add    BYTE PTR [rax],al
    20ef:	00 00                	add    BYTE PTR [rax],al
    20f1:	00 00                	add    BYTE PTR [rax],al
    20f3:	37                   	(bad)
    20f4:	00 00                	add    BYTE PTR [rax],al
    20f6:	00 00                	add    BYTE PTR [rax],al
    20f8:	00 00                	add    BYTE PTR [rax],al
    20fa:	00 21                	add    BYTE PTR [rcx],ah
    20fc:	18 00                	sbb    BYTE PTR [rax],al
    20fe:	00 11                	add    BYTE PTR [rcx],dl
    2100:	d8 13                	fcom   DWORD PTR [rbx]
    2102:	00 00                	add    BYTE PTR [rax],al
    2104:	e7 06                	out    0x6,eax
    2106:	00 00                	add    BYTE PTR [rax],al
    2108:	e5 06                	in     eax,0x6
    210a:	00 00                	add    BYTE PTR [rax],al
    210c:	00 21                	add    BYTE PTR [rcx],ah
    210e:	79 14                	jns    2124 <_Z11popListElemP4List8string_t+0x74>
    2110:	00 00                	add    BYTE PTR [rax],al
    2112:	00 00                	add    BYTE PTR [rax],al
    2114:	00 00                	add    BYTE PTR [rax],al
    2116:	89 0a                	mov    DWORD PTR [rdx],ecx
    2118:	00 00                	add    BYTE PTR [rax],al
    211a:	3e 18 00             	ds sbb BYTE PTR [rax],al
    211d:	00 03                	add    BYTE PTR [rbx],al
    211f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    2122:	7e 00                	jle    2124 <_Z11popListElemP4List8string_t+0x74>
    2124:	03 01                	add    eax,DWORD PTR [rcx]
    2126:	54                   	push   rsp
    2127:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    212a:	0d d9 14 00 00       	or     eax,0x14d9
    212f:	00 00                	add    BYTE PTR [rax],al
    2131:	00 00                	add    BYTE PTR [rax],al
    2133:	46 19 00             	rex.RX sbb DWORD PTR [rax],r8d
    2136:	00 00                	add    BYTE PTR [rax],al
    2138:	38 d9                	cmp    cl,bl
    213a:	0d 00 00 7c 04       	or     eax,0x47c0000
    213f:	00 00                	add    BYTE PTR [rax],al
    2141:	f0 18 00             	lock sbb BYTE PTR [rax],al
    2144:	00 00                	add    BYTE PTR [rax],al
    2146:	00 00                	add    BYTE PTR [rax],al
    2148:	00 68 00             	add    BYTE PTR [rax+0x0],ch
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	00 00                	add    BYTE PTR [rax],al
    2151:	01 9c 13 19 00 00 04 	add    DWORD PTR [rbx+rdx*1+0x4000019],ebx
    2158:	ea                   	(bad)
    2159:	0d 00 00 fa 06       	or     eax,0x6fa0000
    215e:	00 00                	add    BYTE PTR [rax],al
    2160:	f0 06                	lock (bad)
    2162:	00 00                	add    BYTE PTR [rax],al
    2164:	39 ff                	cmp    edi,edi
    2166:	0d 00 00 ff 18       	or     eax,0x18ff0000
    216b:	00 00                	add    BYTE PTR [rax],al
    216d:	00 00                	add    BYTE PTR [rax],al
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	2b 00                	sub    eax,DWORD PTR [rax]
    2173:	00 00                	add    BYTE PTR [rax],al
    2175:	00 00                	add    BYTE PTR [rax],al
    2177:	00 00                	add    BYTE PTR [rax],al
    2179:	9f                   	lahf
    217a:	18 00                	sbb    BYTE PTR [rax],al
    217c:	00 11                	add    BYTE PTR [rcx],dl
    217e:	00 0e                	add    BYTE PTR [rsi],cl
    2180:	00 00                	add    BYTE PTR [rax],al
    2182:	2a 07                	sub    al,BYTE PTR [rdi]
    2184:	00 00                	add    BYTE PTR [rax],al
    2186:	24 07                	and    al,0x7
    2188:	00 00                	add    BYTE PTR [rax],al
    218a:	00 17                	add    BYTE PTR [rdi],dl
    218c:	d9 0d 00 00 39 19    	(bad)  [rip+0x19390000]        # 19392192 <_end+0x1938c17a>
    2192:	00 00                	add    BYTE PTR [rax],al
    2194:	00 00                	add    BYTE PTR [rax],al
    2196:	00 00                	add    BYTE PTR [rax],al
    2198:	00 39                	add    BYTE PTR [rcx],bh
    219a:	19 00                	sbb    DWORD PTR [rax],eax
    219c:	00 00                	add    BYTE PTR [rax],al
    219e:	00 00                	add    BYTE PTR [rax],al
    21a0:	00 1f                	add    BYTE PTR [rdi],bl
    21a2:	00 00                	add    BYTE PTR [rax],al
    21a4:	00 00                	add    BYTE PTR [rax],al
    21a6:	00 00                	add    BYTE PTR [rax],al
    21a8:	00 90 06 05 19 00    	add    BYTE PTR [rax+0x190506],dl
    21ae:	00 51 ea             	add    BYTE PTR [rcx-0x16],dl
    21b1:	0d 00 00 00 07       	or     eax,0x7000000
    21b6:	58                   	pop    rax
    21b7:	19 00                	sbb    DWORD PTR [rax],eax
    21b9:	00 00                	add    BYTE PTR [rax],al
    21bb:	00 00                	add    BYTE PTR [rax],al
    21bd:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    21c4:	55                   	push   rbp
    21c5:	09 03                	or     DWORD PTR [rbx],eax
    21c7:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    21ca:	00 00                	add    BYTE PTR [rax],al
    21cc:	00 00                	add    BYTE PTR [rax],al
    21ce:	00 03                	add    BYTE PTR [rbx],al
    21d0:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    21d4:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    21d7:	00 00                	add    BYTE PTR [rax],al
    21d9:	00 00                	add    BYTE PTR [rax],al
    21db:	00 03                	add    BYTE PTR [rbx],al
    21dd:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    21e0:	08 91 03 01 52 09    	or     BYTE PTR [rcx+0x9520103],dl
    21e6:	03 2a                	add    ebp,DWORD PTR [rdx]
    21e8:	40 00 00             	rex add BYTE PTR [rax],al
    21eb:	00 00                	add    BYTE PTR [rax],al
    21ed:	00 00                	add    BYTE PTR [rax],al
    21ef:	00 00                	add    BYTE PTR [rax],al
    21f1:	52                   	push   rdx
    21f2:	39 19                	cmp    DWORD PTR [rcx],ebx
    21f4:	00 00                	add    BYTE PTR [rax],al
    21f6:	00 00                	add    BYTE PTR [rax],al
    21f8:	00 00                	add    BYTE PTR [rax],al
    21fa:	dc 09                	fmul   QWORD PTR [rcx]
    21fc:	00 00                	add    BYTE PTR [rax],al
    21fe:	00 3a                	add    BYTE PTR [rdx],bh
    2200:	1e                   	(bad)
    2201:	9e                   	sahf
    2202:	1c 3d                	sbb    al,0x3d
    2204:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2209:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    220e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2213:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2218:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    221d:	0a 00                	or     al,BYTE PTR [rax]
    221f:	19 fd                	sbb    ebp,edi
    2221:	03 00                	add    eax,DWORD PTR [rax]
    2223:	00 f3                	add    bl,dh
    2225:	03 00                	add    eax,DWORD PTR [rax]
    2227:	00 3a                	add    BYTE PTR [rdx],bh
    2229:	08 9e 06 4e 55 4c    	or     BYTE PTR [rsi+0x4c554e06],bl
    222f:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
    2232:	19 f1                	sbb    ecx,esi
    2234:	05 00 00 f1 05       	add    eax,0x5f10000
    2239:	00 00                	add    BYTE PTR [rax],al
    223b:	19 55 05             	sbb    DWORD PTR [rbp+0x5],edx
    223e:	00 00                	add    BYTE PTR [rax],al
    2240:	4b 05 00 00 19 ce    	rex.WXB add rax,0xffffffffce190000
    2246:	04 00                	add    al,0x0
    2248:	00 c4                	add    ah,al
    224a:	04 00                	add    al,0x0
    224c:	00 19                	add    BYTE PTR [rcx],bl
    224e:	b1 04                	mov    cl,0x4
    2250:	00 00                	add    BYTE PTR [rax],al
    2252:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2253:	04 00                	add    al,0x0
    2255:	00 00                	add    BYTE PTR [rax],al
    2257:	3d 0f 00 00 05       	cmp    eax,0x500000f
    225c:	00 01                	add    BYTE PTR [rcx],al
    225e:	08 87 07 00 00 22    	or     BYTE PTR [rdi+0x22000007],al
    2264:	14 01                	adc    al,0x1
    2266:	00 00                	add    BYTE PTR [rax],al
    2268:	21 fa                	and    edx,edi
    226a:	01 00                	add    DWORD PTR [rax],eax
    226c:	00 00                	add    BYTE PTR [rax],al
    226e:	00 00                	add    BYTE PTR [rax],al
    2270:	00 20                	add    BYTE PTR [rax],ah
    2272:	1a 00                	sbb    al,BYTE PTR [rax]
    2274:	00 00                	add    BYTE PTR [rax],al
    2276:	00 00                	add    BYTE PTR [rax],al
    2278:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
    227e:	00 00                	add    BYTE PTR [rax],al
    2280:	00 b0 08 00 00 04    	add    BYTE PTR [rax+0x4000008],dh
    2286:	01 08                	add    DWORD PTR [rax],ecx
    2288:	ff 01                	inc    DWORD PTR [rcx]
    228a:	00 00                	add    BYTE PTR [rax],al
    228c:	04 02                	add    al,0x2
    228e:	07                   	(bad)
    228f:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    2292:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    2295:	07                   	(bad)
    2296:	f8                   	clc
    2297:	00 00                	add    BYTE PTR [rax],al
    2299:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    229c:	07                   	(bad)
    229d:	f3 00 00             	repz add BYTE PTR [rax],al
    22a0:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    22a3:	06                   	(bad)
    22a4:	01 02                	add    DWORD PTR [rdx],eax
    22a6:	00 00                	add    BYTE PTR [rax],al
    22a8:	04 02                	add    al,0x2
    22aa:	05 5b 00 00 00       	add    eax,0x5b
    22af:	06                   	(bad)
    22b0:	e9 08 00 00 03       	jmp    30022bd <_end+0x2ffc2a5>
    22b5:	29 14 64             	sub    DWORD PTR [rsp+riz*2],edx
    22b8:	00 00                	add    BYTE PTR [rax],al
    22ba:	00 23                	add    BYTE PTR [rbx],ah
    22bc:	04 05                	add    al,0x5
    22be:	69 6e 74 00 06 a9 00 	imul   ebp,DWORD PTR [rsi+0x74],0xa90600
    22c5:	00 00                	add    BYTE PTR [rax],al
    22c7:	03 2a                	add    ebp,DWORD PTR [rdx]
    22c9:	16                   	(bad)
    22ca:	3c 00                	cmp    al,0x0
    22cc:	00 00                	add    BYTE PTR [rax],al
    22ce:	04 08                	add    al,0x8
    22d0:	05 e5 00 00 00       	add    eax,0xe5
    22d5:	06                   	(bad)
    22d6:	85 05 00 00 03 2d    	test   DWORD PTR [rip+0x2d030000],eax        # 2d0322dc <_end+0x2d02c2c4>
    22dc:	1b 43 00             	sbb    eax,DWORD PTR [rbx+0x0]
    22df:	00 00                	add    BYTE PTR [rax],al
    22e1:	24 08                	and    al,0x8
    22e3:	08 91 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],dl
    22e9:	01 06                	add    DWORD PTR [rsi],eax
    22eb:	08 02                	or     BYTE PTR [rdx],al
    22ed:	00 00                	add    BYTE PTR [rax],al
    22ef:	1b 91 00 00 00 06    	sbb    edx,DWORD PTR [rcx+0x6000000]
    22f5:	eb 08                	jmp    22ff <_Z10debugPrintP4List+0xff>
    22f7:	00 00                	add    BYTE PTR [rax],al
    22f9:	04 1a                	add    al,0x1a
    22fb:	13 58 00             	adc    ebx,DWORD PTR [rax+0x0]
    22fe:	00 00                	add    BYTE PTR [rax],al
    2300:	06                   	(bad)
    2301:	ab                   	stos   DWORD PTR es:[rdi],eax
    2302:	00 00                	add    BYTE PTR [rax],al
    2304:	00 05 1a 14 6b 00    	add    BYTE PTR [rip+0x6b141a],al        # 6b3724 <_end+0x6ad70c>
    230a:	00 00                	add    BYTE PTR [rax],al
    230c:	06                   	(bad)
    230d:	87 05 00 00 05 1b    	xchg   DWORD PTR [rip+0x1b050000],eax        # 1b052313 <_end+0x1b04c2fb>
    2313:	14 7e                	adc    al,0x7e
    2315:	00 00                	add    BYTE PTR [rax],al
    2317:	00 06                	add    BYTE PTR [rsi],al
    2319:	cc                   	int3
    231a:	0a 00                	or     al,BYTE PTR [rax]
    231c:	00 06                	add    BYTE PTR [rsi],al
    231e:	d6                   	(bad)
    231f:	17                   	(bad)
    2320:	43 00 00             	rex.XB add BYTE PTR [r8],al
    2323:	00 08                	add    BYTE PTR [rax],cl
    2325:	98                   	cwde
    2326:	00 00                	add    BYTE PTR [rax],al
    2328:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    232b:	05 e0 00 00 00       	add    eax,0xe0
    2330:	04 10                	add    al,0x10
    2332:	04 f3                	add    al,0xf3
    2334:	01 00                	add    DWORD PTR [rax],eax
    2336:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2339:	07                   	(bad)
    233a:	ee                   	out    dx,al
    233b:	00 00                	add    BYTE PTR [rax],al
    233d:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    2340:	04 d3                	add    al,0xd3
    2342:	00 00                	add    BYTE PTR [rax],al
    2344:	00 17                	add    BYTE PTR [rdi],dl
    2346:	08 3c dd 02 00 00 13 	or     BYTE PTR [rbx*8+0x13000002],bh
    234d:	01 00                	add    DWORD PTR [rax],eax
    234f:	00 0e                	add    BYTE PTR [rsi],cl
    2351:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    2354:	00 07                	add    BYTE PTR [rdi],al
    2356:	3d 09 64 00 00       	cmp    eax,0x6409
    235b:	00 00                	add    BYTE PTR [rax],al
    235d:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    2360:	6d                   	ins    DWORD PTR es:[rdi],dx
    2361:	00 3e                	add    BYTE PTR [rsi],bh
    2363:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2367:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    236a:	06                   	(bad)
    236b:	de 02                	fiadd  WORD PTR [rdx]
    236d:	00 00                	add    BYTE PTR [rax],al
    236f:	07                   	(bad)
    2370:	3f                   	(bad)
    2371:	05 ee 00 00 00       	add    eax,0xee
    2376:	17                   	(bad)
    2377:	10 44 09 00          	adc    BYTE PTR [rcx+rcx*1+0x0],al
    237b:	00 00                	add    BYTE PTR [rax],al
    237d:	44 01 00             	add    DWORD PTR [rax],r8d
    2380:	00 0e                	add    BYTE PTR [rsi],cl
    2382:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    2385:	00 07                	add    BYTE PTR [rdi],al
    2387:	45 0e                	rex.RB (bad)
    2389:	77 00                	ja     238b <_Z10debugPrintP4List+0x18b>
    238b:	00 00                	add    BYTE PTR [rax],al
    238d:	00 18                	add    BYTE PTR [rax],bl
    238f:	72 65                	jb     23f6 <_Z10debugPrintP4List+0x1f6>
    2391:	6d                   	ins    DWORD PTR es:[rdi],dx
    2392:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    2395:	77 00                	ja     2397 <_Z10debugPrintP4List+0x197>
    2397:	00 00                	add    BYTE PTR [rax],al
    2399:	08 00                	or     BYTE PTR [rax],al
    239b:	06                   	(bad)
    239c:	0a 00                	or     al,BYTE PTR [rax]
    239e:	00 00                	add    BYTE PTR [rax],al
    23a0:	07                   	(bad)
    23a1:	47 05 1f 01 00 00    	rex.RXB add eax,0x11f
    23a7:	17                   	(bad)
    23a8:	10 4e b4             	adc    BYTE PTR [rsi-0x4c],cl
    23ab:	00 00                	add    BYTE PTR [rax],al
    23ad:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    23b0:	00 00                	add    BYTE PTR [rax],al
    23b2:	0e                   	(bad)
    23b3:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    23b6:	00 07                	add    BYTE PTR [rdi],al
    23b8:	4f 13 d2             	rex.WRXB adc r10,r10
    23bb:	00 00                	add    BYTE PTR [rax],al
    23bd:	00 00                	add    BYTE PTR [rax],al
    23bf:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    23c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    23c3:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    23c6:	d2 00                	rol    BYTE PTR [rax],cl
    23c8:	00 00                	add    BYTE PTR [rax],al
    23ca:	08 00                	or     BYTE PTR [rax],al
    23cc:	06                   	(bad)
    23cd:	b5 00                	mov    ch,0x0
    23cf:	00 00                	add    BYTE PTR [rax],al
    23d1:	07                   	(bad)
    23d2:	51                   	push   rcx
    23d3:	05 50 01 00 00       	add    eax,0x150
    23d8:	25 cf 02 00 00       	and    eax,0x2cf
    23dd:	07                   	(bad)
    23de:	b4 03                	mov    ah,0x3
    23e0:	0f 8e 01 00 00 08    	jle    80023e7 <_end+0x7ffc3cf>
    23e6:	93                   	xchg   ebx,eax
    23e7:	01 00                	add    DWORD PTR [rax],eax
    23e9:	00 26                	add    BYTE PTR [rsi],ah
    23eb:	64 00 00             	add    BYTE PTR fs:[rax],al
    23ee:	00 a7 01 00 00 02    	add    BYTE PTR [rdi+0x2000001],ah
    23f4:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    23f5:	01 00                	add    DWORD PTR [rax],eax
    23f7:	00 02                	add    BYTE PTR [rdx],al
    23f9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    23fa:	01 00                	add    DWORD PTR [rax],eax
    23fc:	00 00                	add    BYTE PTR [rax],al
    23fe:	08 ac 01 00 00 27 28 	or     BYTE PTR [rcx+rax*1+0x28270000],ch
    2405:	73 74                	jae    247b <_Z8readFilePKcPm+0x4b>
    2407:	64 00 0f             	add    BYTE PTR fs:[rdi],cl
    240a:	32 01                	xor    al,BYTE PTR [rcx]
    240c:	0b 7d 03             	or     edi,DWORD PTR [rbp+0x3]
    240f:	00 00                	add    BYTE PTR [rax],al
    2411:	01 08                	add    DWORD PTR [rax],ecx
    2413:	83 0b 13             	or     DWORD PTR [rbx],0x13
    2416:	01 00                	add    DWORD PTR [rax],eax
    2418:	00 01                	add    BYTE PTR [rcx],al
    241a:	08 84 0b 44 01 00 00 	or     BYTE PTR [rbx+rcx*1+0x144],al
    2421:	01 08                	add    DWORD PTR [rax],ecx
    2423:	8a 0b                	mov    cl,BYTE PTR [rbx]
    2425:	7d 03                	jge    242a <_Z10debugPrintP4List+0x22a>
    2427:	00 00                	add    BYTE PTR [rax],al
    2429:	01 08                	add    DWORD PTR [rax],ecx
    242b:	8d 0b                	lea    ecx,[rbx]
    242d:	99                   	cdq
    242e:	03 00                	add    eax,DWORD PTR [rax]
    2430:	00 01                	add    BYTE PTR [rcx],al
    2432:	08 90 0b b4 03 00    	or     BYTE PTR [rax+0x3b40b],dl
    2438:	00 01                	add    BYTE PTR [rcx],al
    243a:	08 91 0b d1 03 00    	or     BYTE PTR [rcx+0x3d10b],dl
    2440:	00 01                	add    BYTE PTR [rcx],al
    2442:	08 92 0b e7 03 00    	or     BYTE PTR [rdx+0x3e70b],dl
    2448:	00 01                	add    BYTE PTR [rcx],al
    244a:	08 93 0b fd 03 00    	or     BYTE PTR [rbx+0x3fd0b],dl
    2450:	00 01                	add    BYTE PTR [rcx],al
    2452:	08 95 0b 27 04 00    	or     BYTE PTR [rbp+0x4270b],dl
    2458:	00 01                	add    BYTE PTR [rcx],al
    245a:	08 98 0b 43 04 00    	or     BYTE PTR [rax+0x4430b],bl
    2460:	00 01                	add    BYTE PTR [rcx],al
    2462:	08 9a 0b 59 04 00    	or     BYTE PTR [rdx+0x4590b],bl
    2468:	00 01                	add    BYTE PTR [rcx],al
    246a:	08 9d 0b 74 04 00    	or     BYTE PTR [rbp+0x4740b],bl
    2470:	00 01                	add    BYTE PTR [rcx],al
    2472:	08 9e 0b 8f 04 00    	or     BYTE PTR [rsi+0x48f0b],bl
    2478:	00 01                	add    BYTE PTR [rcx],al
    247a:	08 9f 0b c0 04 00    	or     BYTE PTR [rdi+0x4c00b],bl
    2480:	00 01                	add    BYTE PTR [rcx],al
    2482:	08 a1 0b e0 04 00    	or     BYTE PTR [rcx+0x4e00b],ah
    2488:	00 01                	add    BYTE PTR [rcx],al
    248a:	08 a4 0b 00 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x500],ah
    2491:	01 08                	add    DWORD PTR [rax],ecx
    2493:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2494:	0b 13                	or     edx,DWORD PTR [rbx]
    2496:	05 00 00 01 08       	add    eax,0x8010000
    249b:	a9 0b 20 05 00       	test   eax,0x5200b
    24a0:	00 01                	add    BYTE PTR [rcx],al
    24a2:	08 aa 0b 31 05 00    	or     BYTE PTR [rdx+0x5310b],ch
    24a8:	00 01                	add    BYTE PTR [rcx],al
    24aa:	08 ab 0b 51 05 00    	or     BYTE PTR [rbx+0x5510b],ch
    24b0:	00 01                	add    BYTE PTR [rcx],al
    24b2:	08 ac 0b 74 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x574],ch
    24b9:	01 08                	add    DWORD PTR [rax],ecx
    24bb:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    24bc:	0b 97 05 00 00 01    	or     edx,DWORD PTR [rdi+0x1000005]
    24c2:	08 af 0b ad 05 00    	or     BYTE PTR [rdi+0x5ad0b],ch
    24c8:	00 01                	add    BYTE PTR [rcx],al
    24ca:	08 b0 0b d2 05 00    	or     BYTE PTR [rax+0x5d20b],dh
    24d0:	00 01                	add    BYTE PTR [rcx],al
    24d2:	08 f4                	or     ah,dh
    24d4:	16                   	(bad)
    24d5:	75 01                	jne    24d8 <_Z8readFilePKcPm+0xa8>
    24d7:	00 00                	add    BYTE PTR [rax],al
    24d9:	01 08                	add    DWORD PTR [rax],ecx
    24db:	f9                   	stc
    24dc:	16                   	(bad)
    24dd:	32 06                	xor    al,BYTE PTR [rsi]
    24df:	00 00                	add    BYTE PTR [rax],al
    24e1:	01 08                	add    DWORD PTR [rax],ecx
    24e3:	fa                   	cli
    24e4:	16                   	(bad)
    24e5:	4c 06                	rex.WR (bad)
    24e7:	00 00                	add    BYTE PTR [rax],al
    24e9:	01 08                	add    DWORD PTR [rax],ecx
    24eb:	fc                   	cld
    24ec:	16                   	(bad)
    24ed:	67 06                	addr32 (bad)
    24ef:	00 00                	add    BYTE PTR [rax],al
    24f1:	01 08                	add    DWORD PTR [rax],ecx
    24f3:	fd                   	std
    24f4:	16                   	(bad)
    24f5:	c3                   	ret
    24f6:	06                   	(bad)
    24f7:	00 00                	add    BYTE PTR [rax],al
    24f9:	01 08                	add    DWORD PTR [rax],ecx
    24fb:	fe                   	(bad)
    24fc:	16                   	(bad)
    24fd:	7d 06                	jge    2505 <_Z8readFilePKcPm+0xd5>
    24ff:	00 00                	add    BYTE PTR [rax],al
    2501:	01 08                	add    DWORD PTR [rax],ecx
    2503:	ff 16                	call   QWORD PTR [rsi]
    2505:	a0 06 00 00 29 08 00 	movabs al,ds:0x1601000829000006
    250c:	01 16 
    250e:	de 06                	fiadd  WORD PTR [rsi]
    2510:	00 00                	add    BYTE PTR [rax],al
    2512:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    2515:	73 00                	jae    2517 <_Z8readFilePKcPm+0xe7>
    2517:	89 0f                	mov    DWORD PTR [rdi],ecx
    2519:	03 00                	add    eax,DWORD PTR [rax]
    251b:	00 21                	add    BYTE PTR [rcx],ah
    251d:	07                   	(bad)
    251e:	00 00                	add    BYTE PTR [rax],al
    2520:	d3 02                	rol    DWORD PTR [rdx],cl
    2522:	00 00                	add    BYTE PTR [rax],al
    2524:	02 21                	add    ah,BYTE PTR [rcx]
    2526:	07                   	(bad)
    2527:	00 00                	add    BYTE PTR [rax],al
    2529:	00 0b                	add    BYTE PTR [rbx],cl
    252b:	61                   	(bad)
    252c:	62 73 00 55 1b       	(bad)
    2531:	00 00                	add    BYTE PTR [rax],al
    2533:	00 30                	add    BYTE PTR [rax],dh
    2535:	07                   	(bad)
    2536:	00 00                	add    BYTE PTR [rax],al
    2538:	eb 02                	jmp    253c <_Z8readFilePKcPm+0x10c>
    253a:	00 00                	add    BYTE PTR [rax],al
    253c:	02 30                	add    dh,BYTE PTR [rax]
    253e:	07                   	(bad)
    253f:	00 00                	add    BYTE PTR [rax],al
    2541:	00 0b                	add    BYTE PTR [rbx],cl
    2543:	61                   	(bad)
    2544:	62 73 00 4f fb       	(bad)
    2549:	02 00                	add    al,BYTE PTR [rax]
    254b:	00 d9                	add    cl,bl
    254d:	00 00                	add    BYTE PTR [rax],al
    254f:	00 03                	add    BYTE PTR [rbx],al
    2551:	03 00                	add    eax,DWORD PTR [rax]
    2553:	00 02                	add    BYTE PTR [rdx],al
    2555:	d9 00                	fld    DWORD PTR [rax]
    2557:	00 00                	add    BYTE PTR [rax],al
    2559:	00 0b                	add    BYTE PTR [rbx],cl
    255b:	61                   	(bad)
    255c:	62 73 00 4b 05       	(bad)
    2561:	03 00                	add    eax,DWORD PTR [rax]
    2563:	00 e7                	add    bh,ah
    2565:	00 00                	add    BYTE PTR [rax],al
    2567:	00 1b                	add    BYTE PTR [rbx],bl
    2569:	03 00                	add    eax,DWORD PTR [rax]
    256b:	00 02                	add    BYTE PTR [rdx],al
    256d:	e7 00                	out    0x0,eax
    256f:	00 00                	add    BYTE PTR [rax],al
    2571:	00 0b                	add    BYTE PTR [rbx],cl
    2573:	61                   	(bad)
    2574:	62 73 00 47 f1       	(bad)
    2579:	02 00                	add    al,BYTE PTR [rax]
    257b:	00 ca                	add    dl,cl
    257d:	03 00                	add    eax,DWORD PTR [rax]
    257f:	00 33                	add    BYTE PTR [rbx],dh
    2581:	03 00                	add    eax,DWORD PTR [rax]
    2583:	00 02                	add    BYTE PTR [rdx],al
    2585:	ca 03 00             	retf   0x3
    2588:	00 00                	add    BYTE PTR [rax],al
    258a:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    258d:	73 00                	jae    258f <_Z10countLinesPcm+0x4f>
    258f:	3d 41 00 00 00       	cmp    eax,0x41
    2594:	d2 00                	rol    BYTE PTR [rax],cl
    2596:	00 00                	add    BYTE PTR [rax],al
    2598:	4b 03 00             	rex.WXB add rax,QWORD PTR [r8]
    259b:	00 02                	add    BYTE PTR [rdx],al
    259d:	d2 00                	rol    BYTE PTR [rax],cl
    259f:	00 00                	add    BYTE PTR [rax],al
    25a1:	00 0b                	add    BYTE PTR [rbx],cl
    25a3:	61                   	(bad)
    25a4:	62 73 00 38 11       	(bad)
    25a9:	00 00                	add    BYTE PTR [rax],al
    25ab:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    25ae:	00 00                	add    BYTE PTR [rax],al
    25b0:	63 03                	movsxd eax,DWORD PTR [rbx]
    25b2:	00 00                	add    BYTE PTR [rax],al
    25b4:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    25b7:	00 00                	add    BYTE PTR [rax],al
    25b9:	00 1c 64             	add    BYTE PTR [rsp+riz*2],bl
    25bc:	69 76 00 b5 74 00 00 	imul   esi,DWORD PTR [rsi+0x0],0x74b5
    25c3:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
    25c7:	00 02                	add    BYTE PTR [rdx],al
    25c9:	77 00                	ja     25cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1b>
    25cb:	00 00                	add    BYTE PTR [rax],al
    25cd:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    25d0:	00 00                	add    BYTE PTR [rax],al
    25d2:	00 00                	add    BYTE PTR [rax],al
    25d4:	07                   	(bad)
    25d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    25d6:	00 00                	add    BYTE PTR [rax],al
    25d8:	00 de                	add    dh,bl
    25da:	02 0c 64             	add    cl,BYTE PTR [rsp+riz*2]
    25dd:	00 00                	add    BYTE PTR [rax],al
    25df:	00 93 03 00 00 02    	add    BYTE PTR [rbx+0x2000003],dl
    25e5:	93                   	xchg   ebx,eax
    25e6:	03 00                	add    eax,DWORD PTR [rax]
    25e8:	00 00                	add    BYTE PTR [rax],al
    25ea:	08 98 03 00 00 2a    	or     BYTE PTR [rax+0x2a000003],bl
    25f0:	2b 33                	sub    esi,DWORD PTR [rbx]
    25f2:	00 00                	add    BYTE PTR [rax],al
    25f4:	00 07                	add    BYTE PTR [rdi],al
    25f6:	e3 02                	jrcxz  25fa <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x4a>
    25f8:	12 33                	adc    dh,BYTE PTR [rbx]
    25fa:	00 00                	add    BYTE PTR [rax],al
    25fc:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
    2600:	00 b4 03 00 00 02 93 	add    BYTE PTR [rbx+rax*1-0x6cfe0000],dh
    2607:	03 00                	add    eax,DWORD PTR [rax]
    2609:	00 00                	add    BYTE PTR [rax],al
    260b:	09 cd                	or     ebp,ecx
    260d:	01 00                	add    DWORD PTR [rax],eax
    260f:	00 0a                	add    BYTE PTR [rdx],cl
    2611:	19 01                	sbb    DWORD PTR [rcx],eax
    2613:	ca 03 00             	retf   0x3
    2616:	00 ca                	add    dl,cl
    2618:	03 00                	add    eax,DWORD PTR [rax]
    261a:	00 02                	add    BYTE PTR [rdx],al
    261c:	cd 00                	int    0x0
    261e:	00 00                	add    BYTE PTR [rax],al
    2620:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2623:	04 f8                	add    al,0xf8
    2625:	01 00                	add    DWORD PTR [rax],eax
    2627:	00 07                	add    BYTE PTR [rdi],al
    2629:	d2 01                	rol    BYTE PTR [rcx],cl
    262b:	00 00                	add    BYTE PTR [rax],al
    262d:	e1 01                	loope  2630 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x80>
    262f:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    2633:	00 e7                	add    bh,ah
    2635:	03 00                	add    eax,DWORD PTR [rax]
    2637:	00 02                	add    BYTE PTR [rdx],al
    2639:	cd 00                	int    0x0
    263b:	00 00                	add    BYTE PTR [rax],al
    263d:	00 07                	add    BYTE PTR [rdi],al
    263f:	dc 01                	fadd   QWORD PTR [rcx]
    2641:	00 00                	add    BYTE PTR [rax],al
    2643:	e6 01                	out    0x1,al
    2645:	01 77 00             	add    DWORD PTR [rdi+0x0],esi
    2648:	00 00                	add    BYTE PTR [rax],al
    264a:	fd                   	std
    264b:	03 00                	add    eax,DWORD PTR [rax]
    264d:	00 02                	add    BYTE PTR [rdx],al
    264f:	cd 00                	int    0x0
    2651:	00 00                	add    BYTE PTR [rax],al
    2653:	00 09                	add    BYTE PTR [rcx],cl
    2655:	65 00 00             	add    BYTE PTR gs:[rax],al
    2658:	00 0b                	add    BYTE PTR [rbx],cl
    265a:	14 01                	adc    al,0x1
    265c:	8a 00                	mov    al,BYTE PTR [rax]
    265e:	00 00                	add    BYTE PTR [rax],al
    2660:	27                   	(bad)
    2661:	04 00                	add    al,0x0
    2663:	00 02                	add    BYTE PTR [rdx],al
    2665:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2666:	01 00                	add    DWORD PTR [rax],eax
    2668:	00 02                	add    BYTE PTR [rdx],al
    266a:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    266b:	01 00                	add    DWORD PTR [rax],eax
    266d:	00 02                	add    BYTE PTR [rdx],al
    266f:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2672:	00 02                	add    BYTE PTR [rdx],al
    2674:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2677:	00 02                	add    BYTE PTR [rdx],al
    2679:	81 01 00 00 00 2c    	add    DWORD PTR [rcx],0x2c000000
    267f:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
    2686:	0e 
    2687:	13 01                	adc    eax,DWORD PTR [rcx]
    2689:	00 00                	add    BYTE PTR [rax],al
    268b:	43 04 00             	rex.XB add al,0x0
    268e:	00 02                	add    BYTE PTR [rdx],al
    2690:	64 00 00             	add    BYTE PTR fs:[rax],al
    2693:	00 02                	add    BYTE PTR [rdx],al
    2695:	64 00 00             	add    BYTE PTR fs:[rax],al
    2698:	00 00                	add    BYTE PTR [rax],al
    269a:	07                   	(bad)
    269b:	bd 00 00 00 05       	mov    ebp,0x5000000
    26a0:	03 0e                	add    ecx,DWORD PTR [rsi]
    26a2:	8c 00                	mov    WORD PTR [rax],es
    26a4:	00 00                	add    BYTE PTR [rax],al
    26a6:	59                   	pop    rcx
    26a7:	04 00                	add    al,0x0
    26a9:	00 02                	add    BYTE PTR [rdx],al
    26ab:	cd 00                	int    0x0
    26ad:	00 00                	add    BYTE PTR [rax],al
    26af:	00 07                	add    BYTE PTR [rdi],al
    26b1:	c3                   	ret
    26b2:	02 00                	add    al,BYTE PTR [rax]
    26b4:	00 e2                	add    dl,ah
    26b6:	03 0f                	add    ecx,DWORD PTR [rdi]
    26b8:	44 01 00             	add    DWORD PTR [rax],r8d
    26bb:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    26bf:	00 02                	add    BYTE PTR [rdx],al
    26c1:	77 00                	ja     26c3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x113>
    26c3:	00 00                	add    BYTE PTR [rax],al
    26c5:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    26c8:	00 00                	add    BYTE PTR [rax],al
    26ca:	00 07                	add    BYTE PTR [rdi],al
    26cc:	33 02                	xor    eax,DWORD PTR [rdx]
    26ce:	00 00                	add    BYTE PTR [rax],al
    26d0:	26 04 0c             	es add al,0xc
    26d3:	64 00 00             	add    BYTE PTR fs:[rax],al
    26d6:	00 8f 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],cl
    26dc:	cd 00                	int    0x0
    26de:	00 00                	add    BYTE PTR [rax],al
    26e0:	02 c1                	add    al,cl
    26e2:	00 00                	add    BYTE PTR [rax],al
    26e4:	00 00                	add    BYTE PTR [rax],al
    26e6:	09 39                	or     DWORD PTR [rcx],edi
    26e8:	02 00                	add    al,BYTE PTR [rax]
    26ea:	00 0c 75 01 c1 00 00 	add    BYTE PTR [rsi*2+0xc101],cl
    26f1:	00 af 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],ch
    26f7:	af                   	scas   eax,DWORD PTR es:[rdi]
    26f8:	04 00                	add    al,0x0
    26fa:	00 02                	add    BYTE PTR [rdx],al
    26fc:	cd 00                	int    0x0
    26fe:	00 00                	add    BYTE PTR [rax],al
    2700:	02 c1                	add    al,cl
    2702:	00 00                	add    BYTE PTR [rax],al
    2704:	00 00                	add    BYTE PTR [rax],al
    2706:	08 b4 04 00 00 04 04 	or     BYTE PTR [rsp+rax*1+0x4040000],dh
    270d:	05 61 02 00 00       	add    eax,0x261
    2712:	1b b4 04 00 00 07 d9 	sbb    esi,DWORD PTR [rsp+rax*1-0x26f90000]
    2719:	00 00                	add    BYTE PTR [rax],al
    271b:	00 29                	add    BYTE PTR [rcx],ch
    271d:	04 0c                	add    al,0xc
    271f:	64 00 00             	add    BYTE PTR fs:[rax],al
    2722:	00 e0                	add    al,ah
    2724:	04 00                	add    al,0x0
    2726:	00 02                	add    BYTE PTR [rdx],al
    2728:	af                   	scas   eax,DWORD PTR es:[rdi]
    2729:	04 00                	add    al,0x0
    272b:	00 02                	add    BYTE PTR [rdx],al
    272d:	cd 00                	int    0x0
    272f:	00 00                	add    BYTE PTR [rax],al
    2731:	02 c1                	add    al,cl
    2733:	00 00                	add    BYTE PTR [rax],al
    2735:	00 00                	add    BYTE PTR [rax],al
    2737:	1d 25 00 00 00       	sbb    eax,0x25
    273c:	ca 03 00             	retf   0x3
    273f:	05 00 00 02 8a       	add    eax,0x8a020000
    2744:	00 00                	add    BYTE PTR [rax],al
    2746:	00 02                	add    BYTE PTR [rdx],al
    2748:	c1 00 00             	rol    DWORD PTR [rax],0x0
    274b:	00 02                	add    BYTE PTR [rdx],al
    274d:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2750:	00 02                	add    BYTE PTR [rdx],al
    2752:	81 01 00 00 00 2d    	add    DWORD PTR [rcx],0x2d000000
    2758:	36 00 00             	ss add BYTE PTR [rax],al
    275b:	00 07                	add    BYTE PTR [rdi],al
    275d:	fa                   	cli
    275e:	02 0d 13 05 00 00    	add    cl,BYTE PTR [rip+0x513]        # 2c77 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x267>
    2764:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
    2768:	00 00                	add    BYTE PTR [rax],al
    276a:	2e ec                	cs in  al,dx
    276c:	02 00                	add    al,BYTE PTR [rax]
    276e:	00 07                	add    BYTE PTR [rdi],al
    2770:	3d 02 0c 64 00       	cmp    eax,0x640c02
    2775:	00 00                	add    BYTE PTR [rax],al
    2777:	1d eb 02 00 00       	sbb    eax,0x2eb
    277c:	3f                   	(bad)
    277d:	02 31                	add    dh,BYTE PTR [rcx]
    277f:	05 00 00 02 3c       	add    eax,0x3c020000
    2784:	00 00                	add    BYTE PTR [rax],al
    2786:	00 00                	add    BYTE PTR [rax],al
    2788:	09 05 01 00 00 07    	or     DWORD PTR [rip+0x7000001],eax        # 700278f <_end+0x6ffc777>
    278e:	76 0f                	jbe    279f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ef>
    2790:	ca 03 00             	retf   0x3
    2793:	00 4c 05 00          	add    BYTE PTR [rbp+rax*1+0x0],cl
    2797:	00 02                	add    BYTE PTR [rdx],al
    2799:	cd 00                	int    0x0
    279b:	00 00                	add    BYTE PTR [rax],al
    279d:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    27a1:	00 00                	add    BYTE PTR [rax],al
    27a3:	08 8c 00 00 00 11 54 	or     BYTE PTR [rax+rax*1+0x54110000],cl
    27aa:	00 00                	add    BYTE PTR [rax],al
    27ac:	00 d7                	add    bh,dl
    27ae:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    27b1:	00 00                	add    BYTE PTR [rax],al
    27b3:	77 00                	ja     27b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x205>
    27b5:	00 00                	add    BYTE PTR [rax],al
    27b7:	74 05                	je     27be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x20e>
    27b9:	00 00                	add    BYTE PTR [rax],al
    27bb:	02 cd                	add    cl,ch
    27bd:	00 00                	add    BYTE PTR [rax],al
    27bf:	00 02                	add    BYTE PTR [rdx],al
    27c1:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    27c7:	00 00                	add    BYTE PTR [rax],al
    27c9:	00 00                	add    BYTE PTR [rax],al
    27cb:	11 25 02 00 00 db    	adc    DWORD PTR [rip+0xffffffffdb000002],esp        # ffffffffdb0027d3 <_end+0xffffffffdaffc7bb>
    27d1:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    27d4:	00 00                	add    BYTE PTR [rax],al
    27d6:	43 00 00             	rex.XB add BYTE PTR [r8],al
    27d9:	00 97 05 00 00 02    	add    BYTE PTR [rdi+0x2000005],dl
    27df:	cd 00                	int    0x0
    27e1:	00 00                	add    BYTE PTR [rax],al
    27e3:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    27e7:	00 02                	add    BYTE PTR [rdx],al
    27e9:	64 00 00             	add    BYTE PTR fs:[rax],al
    27ec:	00 00                	add    BYTE PTR [rax],al
    27ee:	07                   	(bad)
    27ef:	d8 25 00 00 9b 03    	fsub   DWORD PTR [rip+0x39b0000]        # 39b27f5 <_end+0x39ac7dd>
    27f5:	0c 64                	or     al,0x64
    27f7:	00 00                	add    BYTE PTR [rax],al
    27f9:	00 ad 05 00 00 02    	add    BYTE PTR [rbp+0x2000005],ch
    27ff:	cd 00                	int    0x0
    2801:	00 00                	add    BYTE PTR [rax],al
    2803:	00 09                	add    BYTE PTR [rcx],cl
    2805:	e1 01                	loope  2808 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x258>
    2807:	00 00                	add    BYTE PTR [rax],al
    2809:	0c 8f                	or     al,0x8f
    280b:	01 c1                	add    ecx,eax
    280d:	00 00                	add    BYTE PTR [rax],al
    280f:	00 cd                	add    ch,cl
    2811:	05 00 00 02 8c       	add    eax,0x8c020000
    2816:	00 00                	add    BYTE PTR [rax],al
    2818:	00 02                	add    BYTE PTR [rdx],al
    281a:	cd 05                	int    0x5
    281c:	00 00                	add    BYTE PTR [rax],al
    281e:	02 c1                	add    al,cl
    2820:	00 00                	add    BYTE PTR [rax],al
    2822:	00 00                	add    BYTE PTR [rax],al
    2824:	08 bb 04 00 00 09    	or     BYTE PTR [rbx+0x9000004],bh
    282a:	42 02 00             	rex.X add al,BYTE PTR [rax]
    282d:	00 0c 4f             	add    BYTE PTR [rdi+rcx*2],cl
    2830:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    2834:	00 ed                	add    ch,ch
    2836:	05 00 00 02 8c       	add    eax,0x8c020000
    283b:	00 00                	add    BYTE PTR [rax],al
    283d:	00 02                	add    BYTE PTR [rdx],al
    283f:	b4 04                	mov    ah,0x4
    2841:	00 00                	add    BYTE PTR [rax],al
    2843:	00 2f                	add    BYTE PTR [rdi],ch
    2845:	12 02                	adc    al,BYTE PTR [rdx]
    2847:	00 00                	add    BYTE PTR [rax],al
    2849:	0f 57 01             	xorps  xmm0,XMMWORD PTR [rcx]
    284c:	0b 4c 06 00          	or     ecx,DWORD PTR [rsi+rax*1+0x0]
    2850:	00 01                	add    BYTE PTR [rcx],al
    2852:	08 cc                	or     ah,cl
    2854:	0b 75 01             	or     esi,DWORD PTR [rbp+0x1]
    2857:	00 00                	add    BYTE PTR [rax],al
    2859:	01 08                	add    DWORD PTR [rax],ecx
    285b:	dc 0b                	fmul   QWORD PTR [rbx]
    285d:	4c 06                	rex.WR (bad)
    285f:	00 00                	add    BYTE PTR [rax],al
    2861:	01 08                	add    DWORD PTR [rax],ecx
    2863:	e7 0b                	out    0xb,eax
    2865:	67 06                	addr32 (bad)
    2867:	00 00                	add    BYTE PTR [rax],al
    2869:	01 08                	add    DWORD PTR [rax],ecx
    286b:	e8 0b 7d 06 00       	call   6a57b <_end+0x64563>
    2870:	00 01                	add    BYTE PTR [rcx],al
    2872:	08 e9                	or     cl,ch
    2874:	0b a0 06 00 00 01    	or     esp,DWORD PTR [rax+0x1000006]
    287a:	08 eb                	or     bl,ch
    287c:	0b c3                	or     eax,ebx
    287e:	06                   	(bad)
    287f:	00 00                	add    BYTE PTR [rax],al
    2881:	01 08                	add    DWORD PTR [rax],ecx
    2883:	ec                   	in     al,dx
    2884:	0b de                	or     ebx,esi
    2886:	06                   	(bad)
    2887:	00 00                	add    BYTE PTR [rax],al
    2889:	1c 64                	sbb    al,0x64
    288b:	69 76 00 d9 b8 01 00 	imul   esi,DWORD PTR [rsi+0x0],0x1b8d9
    2892:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    2895:	00 00                	add    BYTE PTR [rax],al
    2897:	02 d2                	add    dl,dl
    2899:	00 00                	add    BYTE PTR [rax],al
    289b:	00 02                	add    BYTE PTR [rdx],al
    289d:	d2 00                	rol    BYTE PTR [rax],cl
    289f:	00 00                	add    BYTE PTR [rax],al
    28a1:	00 00                	add    BYTE PTR [rax],al
    28a3:	07                   	(bad)
    28a4:	c2 02 00             	ret    0x2
    28a7:	00 e6                	add    dh,ah
    28a9:	03 1e                	add    ebx,DWORD PTR [rsi]
    28ab:	75 01                	jne    28ae <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2fe>
    28ad:	00 00                	add    BYTE PTR [rax],al
    28af:	67 06                	addr32 (bad)
    28b1:	00 00                	add    BYTE PTR [rax],al
    28b3:	02 d2                	add    dl,dl
    28b5:	00 00                	add    BYTE PTR [rax],al
    28b7:	00 02                	add    BYTE PTR [rdx],al
    28b9:	d2 00                	rol    BYTE PTR [rax],cl
    28bb:	00 00                	add    BYTE PTR [rax],al
    28bd:	00 07                	add    BYTE PTR [rdi],al
    28bf:	2d 02 00 00 ed       	sub    eax,0xed000002
    28c4:	01 01                	add    DWORD PTR [rcx],eax
    28c6:	d2 00                	rol    BYTE PTR [rax],cl
    28c8:	00 00                	add    BYTE PTR [rax],al
    28ca:	7d 06                	jge    28d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x322>
    28cc:	00 00                	add    BYTE PTR [rax],al
    28ce:	02 cd                	add    cl,ch
    28d0:	00 00                	add    BYTE PTR [rax],al
    28d2:	00 00                	add    BYTE PTR [rax],al
    28d4:	11 88 00 00 00 ee    	adc    DWORD PTR [rax-0x12000000],ecx
    28da:	16                   	(bad)
    28db:	7f 00                	jg     28dd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x32d>
    28dd:	00 00                	add    BYTE PTR [rax],al
    28df:	d2 00                	rol    BYTE PTR [rax],cl
    28e1:	00 00                	add    BYTE PTR [rax],al
    28e3:	a0 06 00 00 02 cd 00 	movabs al,ds:0xcd02000006
    28ea:	00 00 
    28ec:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    28f0:	00 02                	add    BYTE PTR [rdx],al
    28f2:	64 00 00             	add    BYTE PTR fs:[rax],al
    28f5:	00 00                	add    BYTE PTR [rax],al
    28f7:	11 b9 02 00 00 f3    	adc    DWORD PTR [rcx-0xcfffffe],edi
    28fd:	1f                   	(bad)
    28fe:	b0 02                	mov    al,0x2
    2900:	00 00                	add    BYTE PTR [rax],al
    2902:	e0 00                	loopne 2904 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x354>
    2904:	00 00                	add    BYTE PTR [rax],al
    2906:	c3                   	ret
    2907:	06                   	(bad)
    2908:	00 00                	add    BYTE PTR [rax],al
    290a:	02 cd                	add    cl,ch
    290c:	00 00                	add    BYTE PTR [rax],al
    290e:	00 02                	add    BYTE PTR [rdx],al
    2910:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    2916:	00 00                	add    BYTE PTR [rax],al
    2918:	00 00                	add    BYTE PTR [rax],al
    291a:	09 97 02 00 00 07    	or     DWORD PTR [rdi+0x7000002],edx
    2920:	7c 0e                	jl     2930 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x380>
    2922:	e7 00                	out    0x0,eax
    2924:	00 00                	add    BYTE PTR [rax],al
    2926:	de 06                	fiadd  WORD PTR [rsi]
    2928:	00 00                	add    BYTE PTR [rax],al
    292a:	02 cd                	add    cl,ch
    292c:	00 00                	add    BYTE PTR [rax],al
    292e:	00 02                	add    BYTE PTR [rdx],al
    2930:	4c 05 00 00 00 09    	rex.WR add rax,0x9000000
    2936:	2b 00                	sub    eax,DWORD PTR [rax]
    2938:	00 00                	add    BYTE PTR [rax],al
    293a:	07                   	(bad)
    293b:	7f 14                	jg     2951 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3a1>
    293d:	d9 00                	fld    DWORD PTR [rax]
    293f:	00 00                	add    BYTE PTR [rax],al
    2941:	f9                   	stc
    2942:	06                   	(bad)
    2943:	00 00                	add    BYTE PTR [rax],al
    2945:	02 cd                	add    cl,ch
    2947:	00 00                	add    BYTE PTR [rax],al
    2949:	00 02                	add    BYTE PTR [rdx],al
    294b:	4c 05 00 00 00 01    	rex.WR add rax,0x1000000
    2951:	0d 27 0c 7d 03       	or     eax,0x37d0c27
    2956:	00 00                	add    BYTE PTR [rax],al
    2958:	01 0d 2b 0e 99 03    	add    DWORD PTR [rip+0x3990e2b],ecx        # 3993789 <_end+0x398d771>
    295e:	00 00                	add    BYTE PTR [rax],al
    2960:	01 0d 2e 0e 00 05    	add    DWORD PTR [rip+0x5000e2e],ecx        # 5003794 <_end+0x4ffd77c>
    2966:	00 00                	add    BYTE PTR [rax],al
    2968:	01 0d 36 0c 13 01    	add    DWORD PTR [rip+0x1130c36],ecx        # 11335a4 <_end+0x112d58c>
    296e:	00 00                	add    BYTE PTR [rax],al
    2970:	01 0d 37 0c 44 01    	add    DWORD PTR [rip+0x1440c37],ecx        # 14435ad <_end+0x143d595>
    2976:	00 00                	add    BYTE PTR [rax],al
    2978:	04 10                	add    al,0x10
    297a:	04 8c                	add    al,0x8c
    297c:	02 00                	add    al,BYTE PTR [rax]
    297e:	00 01                	add    BYTE PTR [rcx],al
    2980:	0d 39 0c bb 02       	or     eax,0x2bb0c39
    2985:	00 00                	add    BYTE PTR [rax],al
    2987:	04 10                	add    al,0x10
    2989:	05 ea 01 00 00       	add    eax,0x1ea
    298e:	01 0d 39 0c d3 02    	add    DWORD PTR [rip+0x2d30c39],ecx        # 2d335cd <_end+0x2d2d5b5>
    2994:	00 00                	add    BYTE PTR [rax],al
    2996:	01 0d 39 0c eb 02    	add    DWORD PTR [rip+0x2eb0c39],ecx        # 2eb35d5 <_end+0x2ead5bd>
    299c:	00 00                	add    BYTE PTR [rax],al
    299e:	01 0d 39 0c 03 03    	add    DWORD PTR [rip+0x3030c39],ecx        # 30335dd <_end+0x302d5c5>
    29a4:	00 00                	add    BYTE PTR [rax],al
    29a6:	01 0d 39 0c 1b 03    	add    DWORD PTR [rip+0x31b0c39],ecx        # 31b35e5 <_end+0x31ad5cd>
    29ac:	00 00                	add    BYTE PTR [rax],al
    29ae:	01 0d 39 0c 33 03    	add    DWORD PTR [rip+0x3330c39],ecx        # 33335ed <_end+0x332d5d5>
    29b4:	00 00                	add    BYTE PTR [rax],al
    29b6:	01 0d 39 0c 4b 03    	add    DWORD PTR [rip+0x34b0c39],ecx        # 34b35f5 <_end+0x34ad5dd>
    29bc:	00 00                	add    BYTE PTR [rax],al
    29be:	01 0d 3a 0c b4 03    	add    DWORD PTR [rip+0x3b40c3a],ecx        # 3b435fe <_end+0x3b3d5e6>
    29c4:	00 00                	add    BYTE PTR [rax],al
    29c6:	01 0d 3b 0c d1 03    	add    DWORD PTR [rip+0x3d10c3b],ecx        # 3d13607 <_end+0x3d0d5ef>
    29cc:	00 00                	add    BYTE PTR [rax],al
    29ce:	01 0d 3c 0c e7 03    	add    DWORD PTR [rip+0x3e70c3c],ecx        # 3e73610 <_end+0x3e6d5f8>
    29d4:	00 00                	add    BYTE PTR [rax],al
    29d6:	01 0d 3d 0c fd 03    	add    DWORD PTR [rip+0x3fd0c3d],ecx        # 3fd3619 <_end+0x3fcd601>
    29dc:	00 00                	add    BYTE PTR [rax],al
    29de:	01 0d 3f 0c 32 06    	add    DWORD PTR [rip+0x6320c3f],ecx        # 6323623 <_end+0x631d60b>
    29e4:	00 00                	add    BYTE PTR [rax],al
    29e6:	01 0d 3f 0c 63 03    	add    DWORD PTR [rip+0x3630c3f],ecx        # 363362b <_end+0x362d613>
    29ec:	00 00                	add    BYTE PTR [rax],al
    29ee:	01 0d 3f 0c 27 04    	add    DWORD PTR [rip+0x4270c3f],ecx        # 4273633 <_end+0x426d61b>
    29f4:	00 00                	add    BYTE PTR [rax],al
    29f6:	01 0d 41 0c 43 04    	add    DWORD PTR [rip+0x4430c41],ecx        # 443363d <_end+0x442d625>
    29fc:	00 00                	add    BYTE PTR [rax],al
    29fe:	01 0d 43 0c 59 04    	add    DWORD PTR [rip+0x4590c43],ecx        # 4593647 <_end+0x458d62f>
    2a04:	00 00                	add    BYTE PTR [rax],al
    2a06:	01 0d 46 0c 74 04    	add    DWORD PTR [rip+0x4740c46],ecx        # 4743652 <_end+0x473d63a>
    2a0c:	00 00                	add    BYTE PTR [rax],al
    2a0e:	01 0d 47 0c 8f 04    	add    DWORD PTR [rip+0x48f0c47],ecx        # 48f365b <_end+0x48ed643>
    2a14:	00 00                	add    BYTE PTR [rax],al
    2a16:	01 0d 48 0c c0 04    	add    DWORD PTR [rip+0x4c00c48],ecx        # 4c03664 <_end+0x4bfd64c>
    2a1c:	00 00                	add    BYTE PTR [rax],al
    2a1e:	01 0d 4a 0c e0 04    	add    DWORD PTR [rip+0x4e00c4a],ecx        # 4e0366e <_end+0x4dfd656>
    2a24:	00 00                	add    BYTE PTR [rax],al
    2a26:	01 0d 4b 0c 13 05    	add    DWORD PTR [rip+0x5130c4b],ecx        # 5133677 <_end+0x512d65f>
    2a2c:	00 00                	add    BYTE PTR [rax],al
    2a2e:	01 0d 4d 0c 20 05    	add    DWORD PTR [rip+0x5200c4d],ecx        # 5203681 <_end+0x51fd669>
    2a34:	00 00                	add    BYTE PTR [rax],al
    2a36:	01 0d 4e 0c 31 05    	add    DWORD PTR [rip+0x5310c4e],ecx        # 531368a <_end+0x530d672>
    2a3c:	00 00                	add    BYTE PTR [rax],al
    2a3e:	01 0d 4f 0c 51 05    	add    DWORD PTR [rip+0x5510c4f],ecx        # 5513693 <_end+0x550d67b>
    2a44:	00 00                	add    BYTE PTR [rax],al
    2a46:	01 0d 50 0c 74 05    	add    DWORD PTR [rip+0x5740c50],ecx        # 574369c <_end+0x573d684>
    2a4c:	00 00                	add    BYTE PTR [rax],al
    2a4e:	01 0d 51 0c 97 05    	add    DWORD PTR [rip+0x5970c51],ecx        # 59736a5 <_end+0x596d68d>
    2a54:	00 00                	add    BYTE PTR [rax],al
    2a56:	01 0d 53 0c ad 05    	add    DWORD PTR [rip+0x5ad0c53],ecx        # 5ad36af <_end+0x5acd697>
    2a5c:	00 00                	add    BYTE PTR [rax],al
    2a5e:	01 0d 54 0c d2 05    	add    DWORD PTR [rip+0x5d20c54],ecx        # 5d236b8 <_end+0x5d1d6a0>
    2a64:	00 00                	add    BYTE PTR [rax],al
    2a66:	04 02                	add    al,0x2
    2a68:	04 00                	add    al,0x0
    2a6a:	00 00                	add    BYTE PTR [rax],al
    2a6c:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    2a6f:	04 c8                	add    al,0xc8
    2a71:	02 00                	add    al,BYTE PTR [rax]
    2a73:	00 30                	add    BYTE PTR [rax],dh
    2a75:	40 08 00             	rex or BYTE PTR [rax],al
    2a78:	00 10                	add    BYTE PTR [rax],dl
    2a7a:	0e                   	(bad)
    2a7b:	07                   	(bad)
    2a7c:	10 52 08             	adc    BYTE PTR [rdx+0x8],dl
    2a7f:	00 00                	add    BYTE PTR [rax],al
    2a81:	0e                   	(bad)
    2a82:	a3 03 00 00 0e 08 0b 	movabs ds:0x8c0b080e000003,eax
    2a89:	8c 00 
    2a8b:	00 00                	add    BYTE PTR [rax],al
    2a8d:	00 0e                	add    BYTE PTR [rsi],cl
    2a8f:	e5 05                	in     eax,0x5
    2a91:	00 00                	add    BYTE PTR [rax],al
    2a93:	0e                   	(bad)
    2a94:	09 0e                	or     DWORD PTR [rsi],ecx
    2a96:	a9 00 00 00 08       	test   eax,0x8000000
    2a9b:	0e                   	(bad)
    2a9c:	ea                   	(bad)
    2a9d:	05 00 00 0e 0a       	add    eax,0xa0e0000
    2aa2:	0e                   	(bad)
    2aa3:	a9 00 00 00 0c       	test   eax,0xc000000
    2aa8:	00 06                	add    BYTE PTR [rsi],al
    2aaa:	40 08 00             	rex or BYTE PTR [rax],al
    2aad:	00 0e                	add    BYTE PTR [rsi],cl
    2aaf:	0b 03                	or     eax,DWORD PTR [rbx]
    2ab1:	1d 08 00 00 1e       	sbb    eax,0x1e000008
    2ab6:	ab                   	stos   DWORD PTR es:[rdi],eax
    2ab7:	08 00                	or     BYTE PTR [rax],al
    2ab9:	00 a8 a9 00 00 00    	add    BYTE PTR [rax+0xa9],ch
    2abf:	bd 08 00 00 19       	mov    ebp,0x19000008
    2ac4:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    2ac7:	00 a8 24 a9 00 00    	add    BYTE PTR [rax+0xa924],ch
    2acd:	00 19                	add    BYTE PTR [rcx],bl
    2acf:	76 00                	jbe    2ad1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xc1>
    2ad1:	a8 32                	test   al,0x32
    2ad3:	a9 00 00 00 12       	test   eax,0x12000000
    2ad8:	8b 07                	mov    eax,DWORD PTR [rdi]
    2ada:	00 00                	add    BYTE PTR [rax],al
    2adc:	a9 a9 00 00 00       	test   eax,0xa9
    2ae1:	12 86 07 00 00 aa    	adc    al,BYTE PTR [rsi-0x55fffff9]
    2ae7:	a9 00 00 00 1f       	test   eax,0x1f000000
    2aec:	74 6d                	je     2b5b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x14b>
    2aee:	70 00                	jo     2af0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xe0>
    2af0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2af1:	b5 00                	mov    ch,0x0
    2af3:	00 00                	add    BYTE PTR [rax],al
    2af5:	12 9c 07 00 00 ae b5 	adc    bl,BYTE PTR [rdi+rax*1-0x4a520000]
    2afc:	00 00                	add    BYTE PTR [rax],al
    2afe:	00 12                	add    BYTE PTR [rdx],dl
    2b00:	38 09                	cmp    BYTE PTR [rcx],cl
    2b02:	00 00                	add    BYTE PTR [rax],al
    2b04:	b6 a9                	mov    dh,0xa9
    2b06:	00 00                	add    BYTE PTR [rax],al
    2b08:	00 31                	add    BYTE PTR [rcx],dh
    2b0a:	1f                   	(bad)
    2b0b:	69 00 b0 64 00 00    	imul   eax,DWORD PTR [rax],0x64b0
    2b11:	00 00                	add    BYTE PTR [rax],al
    2b13:	00 1e                	add    BYTE PTR [rsi],bl
    2b15:	90                   	nop
    2b16:	07                   	(bad)
    2b17:	00 00                	add    BYTE PTR [rax],al
    2b19:	9e                   	sahf
    2b1a:	a9 00 00 00 d7       	test   eax,0xd7000000
    2b1f:	08 00                	or     BYTE PTR [rax],al
    2b21:	00 19                	add    BYTE PTR [rcx],bl
    2b23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b24:	75 6d                	jne    2b93 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x183>
    2b26:	00 9e 26 a9 00 00    	add    BYTE PTR [rsi+0xa926],bl
    2b2c:	00 00                	add    BYTE PTR [rax],al
    2b2e:	0c b5                	or     al,0xb5
    2b30:	08 00                	or     BYTE PTR [rax],al
    2b32:	00 8f 5b 08 00 00    	add    BYTE PTR [rdi+0x85b],cl
    2b38:	a9 00 00 00 70       	test   eax,0x70000000
    2b3d:	1e                   	(bad)
    2b3e:	00 00                	add    BYTE PTR [rax],al
    2b40:	00 00                	add    BYTE PTR [rax],al
    2b42:	00 00                	add    BYTE PTR [rax],al
    2b44:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    2b47:	00 00                	add    BYTE PTR [rax],al
    2b49:	00 00                	add    BYTE PTR [rax],al
    2b4b:	00 01                	add    BYTE PTR [rcx],al
    2b4d:	9c                   	pushf
    2b4e:	4b 09 00             	rex.WXB or QWORD PTR [r8],rax
    2b51:	00 0d a3 03 00 00    	add    BYTE PTR [rip+0x3a3],cl        # 2efa <_Z7testAllPKcjS0_+0x3a>
    2b57:	8f                   	(bad)
    2b58:	21 52 08             	and    DWORD PTR [rdx+0x8],edx
    2b5b:	00 00                	add    BYTE PTR [rax],al
    2b5d:	51                   	push   rcx
    2b5e:	07                   	(bad)
    2b5f:	00 00                	add    BYTE PTR [rax],al
    2b61:	4f 07                	rex.WRXB (bad)
    2b63:	00 00                	add    BYTE PTR [rax],al
    2b65:	03 e5                	add    esp,ebp
    2b67:	05 00 00 90 0e       	add    eax,0xe900000
    2b6c:	a9 00 00 00 64       	test   eax,0x64000000
    2b71:	07                   	(bad)
    2b72:	00 00                	add    BYTE PTR [rax],al
    2b74:	5e                   	pop    rsi
    2b75:	07                   	(bad)
    2b76:	00 00                	add    BYTE PTR [rax],al
    2b78:	03 f3                	add    esi,ebx
    2b7a:	08 00                	or     BYTE PTR [rax],al
    2b7c:	00 91 0e a9 00 00    	add    BYTE PTR [rcx+0xa90e],dl
    2b82:	00 87 07 00 00 7b    	add    BYTE PTR [rdi+0x7b000007],al
    2b88:	07                   	(bad)
    2b89:	00 00                	add    BYTE PTR [rax],al
    2b8b:	0f e8 01             	psubsb mm0,QWORD PTR [rcx]
    2b8e:	00 00                	add    BYTE PTR [rax],al
    2b90:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2b93:	92                   	xchg   edx,eax
    2b94:	64 00 00             	add    BYTE PTR fs:[rax],al
    2b97:	00 bf 07 00 00 bd    	add    BYTE PTR [rdi-0x42fffff9],bh
    2b9d:	07                   	(bad)
    2b9e:	00 00                	add    BYTE PTR [rax],al
    2ba0:	00 00                	add    BYTE PTR [rax],al
    2ba2:	0c 49                	or     al,0x49
    2ba4:	08 00                	or     BYTE PTR [rax],al
    2ba6:	00 81 76 08 00 00    	add    BYTE PTR [rcx+0x876],al
    2bac:	a9 00 00 00 f0       	test   eax,0xf0000000
    2bb1:	1d 00 00 00 00       	sbb    eax,0x0
    2bb6:	00 00                	add    BYTE PTR [rax],al
    2bb8:	76 00                	jbe    2bba <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1aa>
    2bba:	00 00                	add    BYTE PTR [rax],al
    2bbc:	00 00                	add    BYTE PTR [rax],al
    2bbe:	00 00                	add    BYTE PTR [rax],al
    2bc0:	01 9c c7 09 00 00 0d 	add    DWORD PTR [rdi+rax*8+0xd000009],ebx
    2bc7:	a3 03 00 00 81 25 52 	movabs ds:0x8522581000003,eax
    2bce:	08 00 
    2bd0:	00 ca                	add    dl,cl
    2bd2:	07                   	(bad)
    2bd3:	00 00                	add    BYTE PTR [rax],al
    2bd5:	c8 07 00 00          	enter  0x7,0x0
    2bd9:	0a 41 00             	or     al,BYTE PTR [rcx+0x0]
    2bdc:	82                   	(bad)
    2bdd:	a9 00 00 00 df       	test   eax,0xdf000000
    2be2:	07                   	(bad)
    2be3:	00 00                	add    BYTE PTR [rax],al
    2be5:	d7                   	xlat   BYTE PTR ds:[rbx]
    2be6:	07                   	(bad)
    2be7:	00 00                	add    BYTE PTR [rax],al
    2be9:	0a 42 00             	or     al,BYTE PTR [rdx+0x0]
    2bec:	83 a9 00 00 00 08 08 	sub    DWORD PTR [rcx+0x8000000],0x8
    2bf3:	00 00                	add    BYTE PTR [rax],al
    2bf5:	fe 07                	inc    BYTE PTR [rdi]
    2bf7:	00 00                	add    BYTE PTR [rax],al
    2bf9:	32 d7                	xor    dl,bh
    2bfb:	08 00                	or     BYTE PTR [rax],al
    2bfd:	00 01                	add    BYTE PTR [rcx],al
    2bff:	84 0e                	test   BYTE PTR [rsi],cl
    2c01:	a9 00 00 00 f1       	test   eax,0xf1000000
    2c06:	ff 0f                	dec    DWORD PTR [rdi]
    2c08:	d8 01                	fadd   DWORD PTR [rcx]
    2c0a:	00 00                	add    BYTE PTR [rax],al
    2c0c:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2c0f:	86 64 00 00          	xchg   BYTE PTR [rax+rax*1+0x0],ah
    2c13:	00 37                	add    BYTE PTR [rdi],dh
    2c15:	08 00                	or     BYTE PTR [rax],al
    2c17:	00 33                	add    BYTE PTR [rbx],dh
    2c19:	08 00                	or     BYTE PTR [rax],al
    2c1b:	00 00                	add    BYTE PTR [rax],al
    2c1d:	00 0c 78             	add    BYTE PTR [rax+rdi*2],cl
    2c20:	07                   	(bad)
    2c21:	00 00                	add    BYTE PTR [rax],al
    2c23:	6b ad 07 00 00 a9 00 	imul   ebp,DWORD PTR [rbp-0x56fffff9],0x0
    2c2a:	00 00                	add    BYTE PTR [rax],al
    2c2c:	80 1c 00 00          	sbb    BYTE PTR [rax+rax*1],0x0
    2c30:	00 00                	add    BYTE PTR [rax],al
    2c32:	00 00                	add    BYTE PTR [rax],al
    2c34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c35:	01 00                	add    DWORD PTR [rax],eax
    2c37:	00 00                	add    BYTE PTR [rax],al
    2c39:	00 00                	add    BYTE PTR [rax],al
    2c3b:	00 01                	add    BYTE PTR [rcx],al
    2c3d:	9c                   	pushf
    2c3e:	82                   	(bad)
    2c3f:	0a 00                	or     al,BYTE PTR [rax]
    2c41:	00 0d a3 03 00 00    	add    BYTE PTR [rip+0x3a3],cl        # 2fea <_Z7testAllPKcjS0_+0x12a>
    2c47:	6b 21 52             	imul   esp,DWORD PTR [rcx],0x52
    2c4a:	08 00                	or     BYTE PTR [rax],al
    2c4c:	00 4a 08             	add    BYTE PTR [rdx+0x8],cl
    2c4f:	00 00                	add    BYTE PTR [rax],al
    2c51:	48 08 00             	rex.W or BYTE PTR [rax],al
    2c54:	00 03                	add    BYTE PTR [rbx],al
    2c56:	e5 05                	in     eax,0x5
    2c58:	00 00                	add    BYTE PTR [rax],al
    2c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c5b:	0e                   	(bad)
    2c5c:	a9 00 00 00 6b       	test   eax,0x6b000000
    2c61:	08 00                	or     BYTE PTR [rax],al
    2c63:	00 57 08             	add    BYTE PTR [rdi+0x8],dl
    2c66:	00 00                	add    BYTE PTR [rax],al
    2c68:	03 33                	add    esi,DWORD PTR [rbx]
    2c6a:	07                   	(bad)
    2c6b:	00 00                	add    BYTE PTR [rax],al
    2c6d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c6e:	0e                   	(bad)
    2c6f:	a9 00 00 00 f0       	test   eax,0xf0000000
    2c74:	08 00                	or     BYTE PTR [rax],al
    2c76:	00 c4                	add    ah,al
    2c78:	08 00                	or     BYTE PTR [rax],al
    2c7a:	00 03                	add    BYTE PTR [rbx],al
    2c7c:	c8 07 00 00          	enter  0x7,0x0
    2c80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c81:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2c85:	00 11                	add    BYTE PTR [rcx],dl
    2c87:	0a 00                	or     al,BYTE PTR [rax]
    2c89:	00 07                	add    BYTE PTR [rdi],al
    2c8b:	0a 00                	or     al,BYTE PTR [rax]
    2c8d:	00 20                	add    BYTE PTR [rax],ah
    2c8f:	b3 01                	mov    bl,0x1
    2c91:	00 00                	add    BYTE PTR [rax],al
    2c93:	51                   	push   rcx
    2c94:	0a 00                	or     al,BYTE PTR [rax]
    2c96:	00 0a                	add    BYTE PTR [rdx],cl
    2c98:	69 00 76 64 00 00    	imul   eax,DWORD PTR [rax],0x6476
    2c9e:	00 3e                	add    BYTE PTR [rsi],bh
    2ca0:	0a 00                	or     al,BYTE PTR [rax]
    2ca2:	00 38                	add    BYTE PTR [rax],bh
    2ca4:	0a 00                	or     al,BYTE PTR [rax]
    2ca6:	00 00                	add    BYTE PTR [rax],al
    2ca8:	20 c3                	and    bl,al
    2caa:	01 00                	add    DWORD PTR [rax],eax
    2cac:	00 6b 0a             	add    BYTE PTR [rbx+0xa],ch
    2caf:	00 00                	add    BYTE PTR [rax],al
    2cb1:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2cb4:	79 64                	jns    2d1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x30a>
    2cb6:	00 00                	add    BYTE PTR [rax],al
    2cb8:	00 62 0a             	add    BYTE PTR [rdx+0xa],ah
    2cbb:	00 00                	add    BYTE PTR [rax],al
    2cbd:	56                   	push   rsi
    2cbe:	0a 00                	or     al,BYTE PTR [rax]
    2cc0:	00 00                	add    BYTE PTR [rax],al
    2cc2:	21 01                	and    DWORD PTR [rcx],eax
    2cc4:	1d 00 00 00 00       	sbb    eax,0x0
    2cc9:	00 00                	add    BYTE PTR [rax],al
    2ccb:	01 30                	add    DWORD PTR [rax],esi
    2ccd:	21 e3                	and    ebx,esp
    2ccf:	1d 00 00 00 00       	sbb    eax,0x0
    2cd4:	00 00                	add    BYTE PTR [rax],al
    2cd6:	01 30                	add    DWORD PTR [rax],esi
    2cd8:	00 0c 95 08 00 00 3d 	add    BYTE PTR [rdx*4+0x3d000008],cl
    2cdf:	f8                   	clc
    2ce0:	08 00                	or     BYTE PTR [rax],al
    2ce2:	00 a9 00 00 00 d0    	add    BYTE PTR [rcx-0x30000000],ch
    2ce8:	1b 00                	sbb    eax,DWORD PTR [rax]
    2cea:	00 00                	add    BYTE PTR [rax],al
    2cec:	00 00                	add    BYTE PTR [rax],al
    2cee:	00 a4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],ah
    2cf5:	00 00                	add    BYTE PTR [rax],al
    2cf7:	01 9c 2c 0b 00 00 0d 	add    DWORD PTR [rsp+rbp*1+0xd00000b],ebx
    2cfe:	a3 03 00 00 3d 25 52 	movabs ds:0x852253d000003,eax
    2d05:	08 00 
    2d07:	00 a7 0a 00 00 a5    	add    BYTE PTR [rdi-0x5afffff6],ah
    2d0d:	0a 00                	or     al,BYTE PTR [rax]
    2d0f:	00 1a                	add    BYTE PTR [rdx],bl
    2d11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d12:	75 6d                	jne    2d81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x371>
    2d14:	00 3e                	add    BYTE PTR [rsi],bh
    2d16:	a9 00 00 00 95       	test   eax,0x95000000
    2d1b:	e9 d1 5b 13 e6       	jmp    ffffffffe61388f1 <_end+0xffffffffe61328d9>
    2d20:	07                   	(bad)
    2d21:	00 00                	add    BYTE PTR [rax],al
    2d23:	3f                   	(bad)
    2d24:	0e                   	(bad)
    2d25:	a9 00 00 00 00       	test   eax,0x0
    2d2a:	13 a7 07 00 00 40    	adc    esp,DWORD PTR [rdi+0x40000007]
    2d30:	0e                   	(bad)
    2d31:	9d                   	popf
    2d32:	00 00                	add    BYTE PTR [rax],al
    2d34:	00 18                	add    BYTE PTR [rax],bl
    2d36:	03 ea                	add    ebp,edx
    2d38:	05 00 00 41 0e       	add    eax,0xe410000
    2d3d:	a9 00 00 00 bc       	test   eax,0xbc000000
    2d42:	0a 00                	or     al,BYTE PTR [rax]
    2d44:	00 b4 0a 00 00 03 c7 	add    BYTE PTR [rdx+rcx*1-0x38fd0000],dh
    2d4b:	14 00                	adc    al,0x0
    2d4d:	00 42 14             	add    BYTE PTR [rdx+0x14],al
    2d50:	2c 0b                	sub    al,0xb
    2d52:	00 00                	add    BYTE PTR [rax],al
    2d54:	e3 0a                	jrcxz  2d60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x350>
    2d56:	00 00                	add    BYTE PTR [rax],al
    2d58:	dd 0a                	fisttp QWORD PTR [rdx]
    2d5a:	00 00                	add    BYTE PTR [rax],al
    2d5c:	03 e5                	add    esp,ebp
    2d5e:	05 00 00 44 0e       	add    eax,0xe440000
    2d63:	a9 00 00 00 0b       	test   eax,0xb000000
    2d68:	0b 00                	or     eax,DWORD PTR [rax]
    2d6a:	00 fb                	add    bl,bh
    2d6c:	0a 00                	or     al,BYTE PTR [rax]
    2d6e:	00 03                	add    BYTE PTR [rbx],al
    2d70:	e1 08                	loope  2d7a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x36a>
    2d72:	00 00                	add    BYTE PTR [rax],al
    2d74:	45 0e                	rex.RB (bad)
    2d76:	a9 00 00 00 5f       	test   eax,0x5f000000
    2d7b:	0b 00                	or     eax,DWORD PTR [rax]
    2d7d:	00 49 0b             	add    BYTE PTR [rcx+0xb],cl
    2d80:	00 00                	add    BYTE PTR [rax],al
    2d82:	00 08                	add    BYTE PTR [rax],cl
    2d84:	2e 00 00             	cs add BYTE PTR [rax],al
    2d87:	00 0c 12             	add    BYTE PTR [rdx+rdx*1],cl
    2d8a:	08 00                	or     BYTE PTR [rax],al
    2d8c:	00 28                	add    BYTE PTR [rax],ch
    2d8e:	eb 07                	jmp    2d97 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x387>
    2d90:	00 00                	add    BYTE PTR [rax],al
    2d92:	a9 00 00 00 90       	test   eax,0x90000000
    2d97:	1b 00                	sbb    eax,DWORD PTR [rax]
    2d99:	00 00                	add    BYTE PTR [rax],al
    2d9b:	00 00                	add    BYTE PTR [rax],al
    2d9d:	00 31                	add    BYTE PTR [rcx],dh
    2d9f:	00 00                	add    BYTE PTR [rax],al
    2da1:	00 00                	add    BYTE PTR [rax],al
    2da3:	00 00                	add    BYTE PTR [rax],al
    2da5:	00 01                	add    BYTE PTR [rcx],al
    2da7:	9c                   	pushf
    2da8:	b0 0c                	mov    al,0xc
    2daa:	00 00                	add    BYTE PTR [rax],al
    2dac:	0d a3 03 00 00       	or     eax,0x3a3
    2db1:	28 2d 52 08 00 00    	sub    BYTE PTR [rip+0x852],ch        # 3609 <_Z7testAllPKcjS0_+0x749>
    2db7:	1e                   	(bad)
    2db8:	0c 00                	or     al,0x0
    2dba:	00 1c 0c             	add    BYTE PTR [rsp+rcx*1],bl
    2dbd:	00 00                	add    BYTE PTR [rax],al
    2dbf:	03 e5                	add    esp,ebp
    2dc1:	05 00 00 29 0e       	add    eax,0xe290000
    2dc6:	a9 00 00 00 2d       	test   eax,0x2d000000
    2dcb:	0c 00                	or     al,0x0
    2dcd:	00 2b                	add    BYTE PTR [rbx],ch
    2dcf:	0c 00                	or     al,0x0
    2dd1:	00 13                	add    BYTE PTR [rbx],dl
    2dd3:	33 07                	xor    eax,DWORD PTR [rdi]
    2dd5:	00 00                	add    BYTE PTR [rax],al
    2dd7:	2a 0e                	sub    cl,BYTE PTR [rsi]
    2dd9:	a9 00 00 00 00       	test   eax,0x0
    2dde:	33 63 72             	xor    esp,DWORD PTR [rbx+0x72]
    2de1:	63 00                	movsxd eax,DWORD PTR [rax]
    2de3:	01 2b                	add    DWORD PTR [rbx],ebp
    2de5:	0e                   	(bad)
    2de6:	b5 00                	mov    ch,0x0
    2de8:	00 00                	add    BYTE PTR [rax],al
    2dea:	11 11                	adc    DWORD PTR [rcx],edx
    2dec:	11 21                	adc    DWORD PTR [rcx],esp
    2dee:	11 12                	adc    DWORD PTR [rdx],edx
    2df0:	12 12                	adc    dl,BYTE PTR [rdx]
    2df2:	03 b5 03 00 00 2d    	add    esi,DWORD PTR [rbp+0x2d000003]
    2df8:	0e                   	(bad)
    2df9:	b5 00                	mov    ch,0x0
    2dfb:	00 00                	add    BYTE PTR [rax],al
    2dfd:	3a 0c 00             	cmp    cl,BYTE PTR [rax+rax*1]
    2e00:	00 36                	add    BYTE PTR [rsi],dh
    2e02:	0c 00                	or     al,0x0
    2e04:	00 03                	add    BYTE PTR [rbx],al
    2e06:	bb 03 00 00 2e       	mov    ebx,0x2e000003
    2e0b:	0e                   	(bad)
    2e0c:	b5 00                	mov    ch,0x0
    2e0e:	00 00                	add    BYTE PTR [rax],al
    2e10:	4e 0c 00             	rex.WRX or al,0x0
    2e13:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    2e16:	00 00                	add    BYTE PTR [rax],al
    2e18:	03 c1                	add    eax,ecx
    2e1a:	03 00                	add    eax,DWORD PTR [rax]
    2e1c:	00 2f                	add    BYTE PTR [rdi],ch
    2e1e:	0e                   	(bad)
    2e1f:	b5 00                	mov    ch,0x0
    2e21:	00 00                	add    BYTE PTR [rax],al
    2e23:	62 0c 00             	(bad)
    2e26:	00 5e 0c             	add    BYTE PTR [rsi+0xc],bl
    2e29:	00 00                	add    BYTE PTR [rax],al
    2e2b:	03 c7                	add    eax,edi
    2e2d:	03 00                	add    eax,DWORD PTR [rax]
    2e2f:	00 30                	add    BYTE PTR [rax],dh
    2e31:	0e                   	(bad)
    2e32:	b5 00                	mov    ch,0x0
    2e34:	00 00                	add    BYTE PTR [rax],al
    2e36:	76 0c                	jbe    2e44 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x434>
    2e38:	00 00                	add    BYTE PTR [rax],al
    2e3a:	72 0c                	jb     2e48 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x438>
    2e3c:	00 00                	add    BYTE PTR [rax],al
    2e3e:	14 e6                	adc    al,0xe6
    2e40:	0e                   	(bad)
    2e41:	00 00                	add    BYTE PTR [rax],al
    2e43:	94                   	xchg   esp,eax
    2e44:	1b 00                	sbb    eax,DWORD PTR [rax]
    2e46:	00 00                	add    BYTE PTR [rax],al
    2e48:	00 00                	add    BYTE PTR [rax],al
    2e4a:	00 08                	add    BYTE PTR [rax],cl
    2e4c:	87 01                	xchg   DWORD PTR [rcx],eax
    2e4e:	00 00                	add    BYTE PTR [rax],al
    2e50:	33 1a                	xor    ebx,DWORD PTR [rdx]
    2e52:	1a 0c 00             	sbb    cl,BYTE PTR [rax+rax*1]
    2e55:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3d63 <_fini+0x25f>
    2e5b:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    2e5e:	00 86 0c 00 00 05    	add    BYTE PTR [rsi+0x500000c],al
    2e64:	fc                   	cld
    2e65:	0e                   	(bad)
    2e66:	00 00                	add    BYTE PTR [rax],al
    2e68:	93                   	xchg   ebx,eax
    2e69:	0c 00                	or     al,0x0
    2e6b:	00 91 0c 00 00 00    	add    BYTE PTR [rcx+0xc],dl
    2e71:	14 e6                	adc    al,0xe6
    2e73:	0e                   	(bad)
    2e74:	00 00                	add    BYTE PTR [rax],al
    2e76:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2e77:	1b 00                	sbb    eax,DWORD PTR [rax]
    2e79:	00 00                	add    BYTE PTR [rax],al
    2e7b:	00 00                	add    BYTE PTR [rax],al
    2e7d:	00 02                	add    BYTE PTR [rdx],al
    2e7f:	92                   	xchg   edx,eax
    2e80:	01 00                	add    DWORD PTR [rax],eax
    2e82:	00 34 1a             	add    BYTE PTR [rdx+rbx*1],dh
    2e85:	4d 0c 00             	rex.WRB or al,0x0
    2e88:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3d96 <_fini+0x292>
    2e8e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2e8f:	0c 00                	or     al,0x0
    2e91:	00 a4 0c 00 00 05 fc 	add    BYTE PTR [rsp+rcx*1-0x3fb0000],ah
    2e98:	0e                   	(bad)
    2e99:	00 00                	add    BYTE PTR [rax],al
    2e9b:	b1 0c                	mov    cl,0xc
    2e9d:	00 00                	add    BYTE PTR [rax],al
    2e9f:	af                   	scas   eax,DWORD PTR es:[rdi]
    2ea0:	0c 00                	or     al,0x0
    2ea2:	00 00                	add    BYTE PTR [rax],al
    2ea4:	14 e6                	adc    al,0xe6
    2ea6:	0e                   	(bad)
    2ea7:	00 00                	add    BYTE PTR [rax],al
    2ea9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2eaa:	1b 00                	sbb    eax,DWORD PTR [rax]
    2eac:	00 00                	add    BYTE PTR [rax],al
    2eae:	00 00                	add    BYTE PTR [rax],al
    2eb0:	00 02                	add    BYTE PTR [rdx],al
    2eb2:	9d                   	popf
    2eb3:	01 00                	add    DWORD PTR [rax],eax
    2eb5:	00 35 1a 80 0c 00    	add    BYTE PTR [rip+0xc801a],dh        # caed5 <_end+0xc4ebd>
    2ebb:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3dc9 <_fini+0x2c5>
    2ec1:	c4                   	(bad)
    2ec2:	0c 00                	or     al,0x0
    2ec4:	00 c2                	add    dl,al
    2ec6:	0c 00                	or     al,0x0
    2ec8:	00 05 fc 0e 00 00    	add    BYTE PTR [rip+0xefc],al        # 3dca <_fini+0x2c6>
    2ece:	cf                   	iret
    2ecf:	0c 00                	or     al,0x0
    2ed1:	00 cd                	add    ch,cl
    2ed3:	0c 00                	or     al,0x0
    2ed5:	00 00                	add    BYTE PTR [rax],al
    2ed7:	15 e6 0e 00 00       	adc    eax,0xee6
    2edc:	b3 1b                	mov    bl,0x1b
    2ede:	00 00                	add    BYTE PTR [rax],al
    2ee0:	00 00                	add    BYTE PTR [rax],al
    2ee2:	00 00                	add    BYTE PTR [rax],al
    2ee4:	02 a8 01 00 00 36    	add    ch,BYTE PTR [rax+0x36000001]
    2eea:	1a 05 08 0f 00 00    	sbb    al,BYTE PTR [rip+0xf08]        # 3df8 <_fini+0x2f4>
    2ef0:	e2 0c                	loop   2efe <_Z7testAllPKcjS0_+0x3e>
    2ef2:	00 00                	add    BYTE PTR [rax],al
    2ef4:	e0 0c                	loopne 2f02 <_Z7testAllPKcjS0_+0x42>
    2ef6:	00 00                	add    BYTE PTR [rax],al
    2ef8:	05 fc 0e 00 00       	add    eax,0xefc
    2efd:	ed                   	in     eax,dx
    2efe:	0c 00                	or     al,0x0
    2f00:	00 eb                	add    bl,ch
    2f02:	0c 00                	or     al,0x0
    2f04:	00 00                	add    BYTE PTR [rax],al
    2f06:	00 0c c3             	add    BYTE PTR [rbx+rax*8],cl
    2f09:	08 00                	or     BYTE PTR [rax],al
    2f0b:	00 1a                	add    BYTE PTR [rdx],bl
    2f0d:	17                   	(bad)
    2f0e:	09 00                	or     DWORD PTR [rax],eax
    2f10:	00 a9 00 00 00 40    	add    BYTE PTR [rcx+0x40000000],ch
    2f16:	1b 00                	sbb    eax,DWORD PTR [rax]
    2f18:	00 00                	add    BYTE PTR [rax],al
    2f1a:	00 00                	add    BYTE PTR [rax],al
    2f1c:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    2f1f:	00 00                	add    BYTE PTR [rax],al
    2f21:	00 00                	add    BYTE PTR [rax],al
    2f23:	00 00                	add    BYTE PTR [rax],al
    2f25:	01 9c 74 0d 00 00 0d 	add    DWORD PTR [rsp+rsi*2+0xd00000d],ebx
    2f2c:	a3 03 00 00 1a 27 52 	movabs ds:0x852271a000003,eax
    2f33:	08 00 
    2f35:	00 00                	add    BYTE PTR [rax],al
    2f37:	0d 00 00 fe 0c       	or     eax,0xcfe0000
    2f3c:	00 00                	add    BYTE PTR [rax],al
    2f3e:	03 e5                	add    esp,ebp
    2f40:	05 00 00 1b 0e       	add    eax,0xe1b0000
    2f45:	a9 00 00 00 13       	test   eax,0x13000000
    2f4a:	0d 00 00 0d 0d       	or     eax,0xd0d0000
    2f4f:	00 00                	add    BYTE PTR [rax],al
    2f51:	03 33                	add    esi,DWORD PTR [rbx]
    2f53:	07                   	(bad)
    2f54:	00 00                	add    BYTE PTR [rax],al
    2f56:	1c 0e                	sbb    al,0xe
    2f58:	a9 00 00 00 33       	test   eax,0x33000000
    2f5d:	0d 00 00 2b 0d       	or     eax,0xd2b0000
    2f62:	00 00                	add    BYTE PTR [rax],al
    2f64:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    2f67:	63 00                	movsxd eax,DWORD PTR [rax]
    2f69:	1d a9 00 00 00       	sbb    eax,0xa9
    2f6e:	11 11                	adc    DWORD PTR [rcx],edx
    2f70:	11 11                	adc    DWORD PTR [rcx],edx
    2f72:	03 ea                	add    ebp,edx
    2f74:	05 00 00 1e 09       	add    eax,0x91e0000
    2f79:	64 00 00             	add    BYTE PTR fs:[rax],al
    2f7c:	00 5a 0d             	add    BYTE PTR [rdx+0xd],bl
    2f7f:	00 00                	add    BYTE PTR [rax],al
    2f81:	54                   	push   rsp
    2f82:	0d 00 00 0f 6c       	or     eax,0x6c0f0000
    2f87:	01 00                	add    DWORD PTR [rax],eax
    2f89:	00 0a                	add    BYTE PTR [rdx],cl
    2f8b:	69 00 20 64 00 00    	imul   eax,DWORD PTR [rax],0x6420
    2f91:	00 76 0d             	add    BYTE PTR [rsi+0xd],dh
    2f94:	00 00                	add    BYTE PTR [rax],al
    2f96:	72 0d                	jb     2fa5 <_Z7testAllPKcjS0_+0xe5>
    2f98:	00 00                	add    BYTE PTR [rax],al
    2f9a:	15 15 0f 00 00       	adc    eax,0xf15
    2f9f:	70 1b                	jo     2fbc <_Z7testAllPKcjS0_+0xfc>
    2fa1:	00 00                	add    BYTE PTR [rax],al
    2fa3:	00 00                	add    BYTE PTR [rax],al
    2fa5:	00 00                	add    BYTE PTR [rax],al
    2fa7:	02 77 01             	add    dh,BYTE PTR [rdi+0x1]
    2faa:	00 00                	add    BYTE PTR [rax],al
    2fac:	22 1e                	and    bl,BYTE PTR [rsi]
    2fae:	05 33 0f 00 00       	add    eax,0xf33
    2fb3:	8b 0d 00 00 87 0d    	mov    ecx,DWORD PTR [rip+0xd870000]        # d872fb9 <_end+0xd86cfa1>
    2fb9:	00 00                	add    BYTE PTR [rax],al
    2fbb:	05 27 0f 00 00       	add    eax,0xf27
    2fc0:	9e                   	sahf
    2fc1:	0d 00 00 9c 0d       	or     eax,0xd9c0000
    2fc6:	00 00                	add    BYTE PTR [rax],al
    2fc8:	00 00                	add    BYTE PTR [rax],al
    2fca:	00 0c c7             	add    BYTE PTR [rdi+rax*8],cl
    2fcd:	08 00                	or     BYTE PTR [rax],al
    2fcf:	00 0b                	add    BYTE PTR [rbx],cl
    2fd1:	2c 08                	sub    al,0x8
    2fd3:	00 00                	add    BYTE PTR [rax],al
    2fd5:	a9 00 00 00 20       	test   eax,0x20000000
    2fda:	1a 00                	sbb    al,BYTE PTR [rax]
    2fdc:	00 00                	add    BYTE PTR [rax],al
    2fde:	00 00                	add    BYTE PTR [rax],al
    2fe0:	00 19                	add    BYTE PTR [rcx],bl
    2fe2:	01 00                	add    DWORD PTR [rax],eax
    2fe4:	00 00                	add    BYTE PTR [rax],al
    2fe6:	00 00                	add    BYTE PTR [rax],al
    2fe8:	00 01                	add    BYTE PTR [rcx],al
    2fea:	9c                   	pushf
    2feb:	e6 0e                	out    0xe,al
    2fed:	00 00                	add    BYTE PTR [rax],al
    2fef:	0d a3 03 00 00       	or     eax,0x3a3
    2ff4:	0b 23                	or     esp,DWORD PTR [rbx]
    2ff6:	52                   	push   rdx
    2ff7:	08 00                	or     BYTE PTR [rax],al
    2ff9:	00 ad 0d 00 00 ab    	add    BYTE PTR [rbp-0x54fffff3],ch
    2fff:	0d 00 00 03 e5       	or     eax,0xe5030000
    3004:	05 00 00 0c 0e       	add    eax,0xe0c0000
    3009:	a9 00 00 00 be       	test   eax,0xbe000000
    300e:	0d 00 00 b8 0d       	or     eax,0xdb80000
    3013:	00 00                	add    BYTE PTR [rax],al
    3015:	03 33                	add    esi,DWORD PTR [rbx]
    3017:	07                   	(bad)
    3018:	00 00                	add    BYTE PTR [rax],al
    301a:	0d 0e a9 00 00       	or     eax,0xa90e
    301f:	00 dd                	add    ch,bl
    3021:	0d 00 00 d3 0d       	or     eax,0xdd30000
    3026:	00 00                	add    BYTE PTR [rax],al
    3028:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    302b:	63 00                	movsxd eax,DWORD PTR [rax]
    302d:	0e                   	(bad)
    302e:	a9 00 00 00 11       	test   eax,0x11000000
    3033:	11 11                	adc    DWORD PTR [rcx],edx
    3035:	11 13                	adc    DWORD PTR [rbx],edx
    3037:	c8 07 00 00          	enter  0x7,0x0
    303b:	0f 09                	wbinvd
    303d:	64 00 00             	add    BYTE PTR fs:[rax],al
    3040:	00 00                	add    BYTE PTR [rax],al
    3042:	03 ea                	add    ebp,edx
    3044:	05 00 00 10 09       	add    eax,0x9100000
    3049:	64 00 00             	add    BYTE PTR fs:[rax],al
    304c:	00 06                	add    BYTE PTR [rsi],al
    304e:	0e                   	(bad)
    304f:	00 00                	add    BYTE PTR [rax],al
    3051:	00 0e                	add    BYTE PTR [rsi],cl
    3053:	00 00                	add    BYTE PTR [rax],al
    3055:	0f 38 01 00          	phaddw mm0,QWORD PTR [rax]
    3059:	00 0a                	add    BYTE PTR [rdx],cl
    305b:	69 00 12 64 00 00    	imul   eax,DWORD PTR [rax],0x6412
    3061:	00 1e                	add    BYTE PTR [rsi],bl
    3063:	0e                   	(bad)
    3064:	00 00                	add    BYTE PTR [rax],al
    3066:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    3068:	00 00                	add    BYTE PTR [rax],al
    306a:	15 5e 08 00 00       	adc    eax,0x85e
    306f:	6b 1a 00             	imul   ebx,DWORD PTR [rdx],0x0
    3072:	00 00                	add    BYTE PTR [rax],al
    3074:	00 00                	add    BYTE PTR [rax],al
    3076:	00 01                	add    BYTE PTR [rcx],al
    3078:	40 01 00             	rex add DWORD PTR [rax],eax
    307b:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    307e:	05 6c 08 00 00       	add    eax,0x86c
    3083:	2f                   	(bad)
    3084:	0e                   	(bad)
    3085:	00 00                	add    BYTE PTR [rax],al
    3087:	2d 0e 00 00 05       	sub    eax,0x500000e
    308c:	77 08                	ja     3096 <_Z7testAllPKcjS0_+0x1d6>
    308e:	00 00                	add    BYTE PTR [rax],al
    3090:	41 0e                	rex.B (bad)
    3092:	00 00                	add    BYTE PTR [rax],al
    3094:	3b 0e                	cmp    ecx,DWORD PTR [rsi]
    3096:	00 00                	add    BYTE PTR [rax],al
    3098:	0f 40 01             	cmovo  eax,DWORD PTR [rcx]
    309b:	00 00                	add    BYTE PTR [rax],al
    309d:	10 80 08 00 00 5c    	adc    BYTE PTR [rax+0x5c000008],al
    30a3:	0e                   	(bad)
    30a4:	00 00                	add    BYTE PTR [rax],al
    30a6:	56                   	push   rsi
    30a7:	0e                   	(bad)
    30a8:	00 00                	add    BYTE PTR [rax],al
    30aa:	10 8a 08 00 00 0e    	adc    BYTE PTR [rdx+0xe000008],cl
    30b0:	12 00                	adc    al,BYTE PTR [rax]
    30b2:	00 0c 12             	add    BYTE PTR [rdx+rdx*1],cl
    30b5:	00 00                	add    BYTE PTR [rax],al
    30b7:	10 94 08 00 00 1d 12 	adc    BYTE PTR [rax+rcx*1+0x121d0000],dl
    30be:	00 00                	add    BYTE PTR [rax],al
    30c0:	1b 12                	sbb    edx,DWORD PTR [rdx]
    30c2:	00 00                	add    BYTE PTR [rax],al
    30c4:	10 9e 08 00 00 27    	adc    BYTE PTR [rsi+0x27000008],bl
    30ca:	12 00                	adc    al,BYTE PTR [rax]
    30cc:	00 25 12 00 00 34    	add    BYTE PTR [rip+0x34000012],ah        # 340030e4 <_end+0x33ffd0cc>
    30d2:	a8 08                	test   al,0x8
    30d4:	00 00                	add    BYTE PTR [rax],al
    30d6:	35 b2 08 00 00       	xor    eax,0x8b2
    30db:	4d 01 00             	add    QWORD PTR [r8],r8
    30de:	00 9a 0e 00 00 10    	add    BYTE PTR [rdx+0x1000000e],bl
    30e4:	b3 08                	mov    bl,0x8
    30e6:	00 00                	add    BYTE PTR [rax],al
    30e8:	39 12                	cmp    DWORD PTR [rdx],edx
    30ea:	00 00                	add    BYTE PTR [rax],al
    30ec:	35 12 00 00 00       	xor    eax,0x12
    30f1:	14 bd                	adc    al,0xbd
    30f3:	08 00                	or     BYTE PTR [rax],al
    30f5:	00 6b 1a             	add    BYTE PTR [rbx+0x1a],ch
    30f8:	00 00                	add    BYTE PTR [rax],al
    30fa:	00 00                	add    BYTE PTR [rax],al
    30fc:	00 00                	add    BYTE PTR [rax],al
    30fe:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    3101:	00 00                	add    BYTE PTR [rax],al
    3103:	a9 20 c0 0e 00       	test   eax,0xec020
    3108:	00 05 cb 08 00 00    	add    BYTE PTR [rip+0x8cb],al        # 39d9 <_Z27standartDeviationCollisionsP7HashMapf+0x209>
    310e:	5f                   	pop    rdi
    310f:	12 00                	adc    al,BYTE PTR [rax]
    3111:	00 49 12             	add    BYTE PTR [rcx+0x12],cl
    3114:	00 00                	add    BYTE PTR [rax],al
    3116:	00 15 bd 08 00 00    	add    BYTE PTR [rip+0x8bd],dl        # 39d9 <_Z27standartDeviationCollisionsP7HashMapf+0x209>
    311c:	e3 1a                	jrcxz  3138 <_Z7testAllPKcjS0_+0x278>
    311e:	00 00                	add    BYTE PTR [rax],al
    3120:	00 00                	add    BYTE PTR [rax],al
    3122:	00 00                	add    BYTE PTR [rax],al
    3124:	02 61 01             	add    ah,BYTE PTR [rcx+0x1]
    3127:	00 00                	add    BYTE PTR [rax],al
    3129:	b6 22                	mov    dh,0x22
    312b:	05 cb 08 00 00       	add    eax,0x8cb
    3130:	f0 13 00             	lock adc eax,DWORD PTR [rax]
    3133:	00 e2                	add    dl,ah
    3135:	13 00                	adc    eax,DWORD PTR [rax]
    3137:	00 00                	add    BYTE PTR [rax],al
    3139:	00 00                	add    BYTE PTR [rax],al
    313b:	00 00                	add    BYTE PTR [rax],al
    313d:	36 51                	ss push rcx
    313f:	07                   	(bad)
    3140:	00 00                	add    BYTE PTR [rax],al
    3142:	02 49 03             	add    cl,BYTE PTR [rcx+0x3]
    3145:	01 22                	add    DWORD PTR [rdx],esp
    3147:	03 00                	add    eax,DWORD PTR [rax]
    3149:	00 e0                	add    al,ah
    314b:	00 00                	add    BYTE PTR [rax],al
    314d:	00 03                	add    BYTE PTR [rbx],al
    314f:	15 0f 00 00 16       	adc    eax,0x1600000f
    3154:	5f                   	pop    rdi
    3155:	5f                   	pop    rdi
    3156:	43 00 49 03          	rex.XB add BYTE PTR [r9+0x3],cl
    315a:	23 e0                	and    esp,eax
    315c:	00 00                	add    BYTE PTR [rax],al
    315e:	00 16                	add    BYTE PTR [rsi],dl
    3160:	5f                   	pop    rdi
    3161:	5f                   	pop    rdi
    3162:	56                   	push   rsi
    3163:	00 49 03             	add    BYTE PTR [rcx+0x3],cl
    3166:	3b e0                	cmp    esp,eax
    3168:	00 00                	add    BYTE PTR [rax],al
    316a:	00 00                	add    BYTE PTR [rax],al
    316c:	37                   	(bad)
    316d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    316e:	08 00                	or     BYTE PTR [rax],al
    3170:	00 02                	add    BYTE PTR [rdx],al
    3172:	42 03 01             	rex.X add eax,DWORD PTR [rcx]
    3175:	d2 07                	rol    BYTE PTR [rdi],cl
    3177:	00 00                	add    BYTE PTR [rax],al
    3179:	3c 00                	cmp    al,0x0
    317b:	00 00                	add    BYTE PTR [rax],al
    317d:	03 16                	add    edx,DWORD PTR [rsi]
    317f:	5f                   	pop    rdi
    3180:	5f                   	pop    rdi
    3181:	43 00 42 03          	rex.XB add BYTE PTR [r10+0x3],al
    3185:	1d 3c 00 00 00       	sbb    eax,0x3c
    318a:	16                   	(bad)
    318b:	5f                   	pop    rdi
    318c:	5f                   	pop    rdi
    318d:	56                   	push   rsi
    318e:	00 42 03             	add    BYTE PTR [rdx+0x3],al
    3191:	2f                   	(bad)
    3192:	3c 00                	cmp    al,0x0
    3194:	00 00                	add    BYTE PTR [rax],al
    3196:	00 00                	add    BYTE PTR [rax],al
    3198:	f5                   	cmc
    3199:	16                   	(bad)
    319a:	00 00                	add    BYTE PTR [rax],al
    319c:	05 00 01 08 00       	add    eax,0x80100
    31a1:	0b 00                	or     eax,DWORD PTR [rax]
    31a3:	00 2a                	add    BYTE PTR [rdx],ch
    31a5:	14 01                	adc    al,0x1
    31a7:	00 00                	add    BYTE PTR [rax],al
    31a9:	21 29                	and    DWORD PTR [rcx],ebp
    31ab:	02 00                	add    al,BYTE PTR [rax]
    31ad:	00 00                	add    BYTE PTR [rax],al
    31af:	00 00                	add    BYTE PTR [rax],al
    31b1:	00 c0                	add    al,al
    31b3:	1e                   	(bad)
    31b4:	00 00                	add    BYTE PTR [rax],al
    31b6:	00 00                	add    BYTE PTR [rax],al
    31b8:	00 00                	add    BYTE PTR [rax],al
    31ba:	63 05 00 00 00 00    	movsxd eax,DWORD PTR [rip+0x0]        # 31c0 <_Z7testAllPKcjS0_+0x300>
    31c0:	00 00                	add    BYTE PTR [rax],al
    31c2:	ac                   	lods   al,BYTE PTR ds:[rsi]
    31c3:	0f 00 00             	sldt   WORD PTR [rax]
    31c6:	0b cc                	or     ecx,esp
    31c8:	0a 00                	or     al,BYTE PTR [rax]
    31ca:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    31cd:	17                   	(bad)
    31ce:	3a 00                	cmp    al,BYTE PTR [rax]
    31d0:	00 00                	add    BYTE PTR [rax],al
    31d2:	06                   	(bad)
    31d3:	08 07                	or     BYTE PTR [rdi],al
    31d5:	f3 00 00             	repz add BYTE PTR [rax],al
    31d8:	00 1c 08             	add    BYTE PTR [rax+rcx*1],bl
    31db:	3c dd                	cmp    al,0xdd
    31dd:	02 00                	add    al,BYTE PTR [rax]
    31df:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    31e2:	00 00                	add    BYTE PTR [rax],al
    31e4:	07                   	(bad)
    31e5:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    31e8:	00 05 3d 09 66 00    	add    BYTE PTR [rip+0x66093d],al        # 663b2b <_end+0x65db13>
    31ee:	00 00                	add    BYTE PTR [rax],al
    31f0:	00 1d 72 65 6d 00    	add    BYTE PTR [rip+0x6d6572],bl        # 6d9768 <_end+0x6d3750>
    31f6:	3e 09 66 00          	ds or  DWORD PTR [rsi+0x0],esp
    31fa:	00 00                	add    BYTE PTR [rax],al
    31fc:	04 00                	add    al,0x0
    31fe:	2b 04 05 69 6e 74 00 	sub    eax,DWORD PTR [rax*1+0x746e69]
    3205:	0e                   	(bad)
    3206:	66 00 00             	data16 add BYTE PTR [rax],al
    3209:	00 0b                	add    BYTE PTR [rbx],cl
    320b:	de 02                	fiadd  WORD PTR [rdx]
    320d:	00 00                	add    BYTE PTR [rax],al
    320f:	05 3f 05 41 00       	add    eax,0x41053f
    3214:	00 00                	add    BYTE PTR [rax],al
    3216:	1c 10                	sbb    al,0x10
    3218:	44 09 00             	or     DWORD PTR [rax],r8d
    321b:	00 00                	add    BYTE PTR [rax],al
    321d:	a3 00 00 00 07 49 02 	movabs ds:0x24907000000,eax
    3224:	00 00 
    3226:	05 45 0e a3 00       	add    eax,0xa30e45
    322b:	00 00                	add    BYTE PTR [rax],al
    322d:	00 1d 72 65 6d 00    	add    BYTE PTR [rip+0x6d6572],bl        # 6d97a5 <_end+0x6d378d>
    3233:	46 0e                	rex.RX (bad)
    3235:	a3 00 00 00 08 00 06 	movabs ds:0x508060008000000,eax
    323c:	08 05 
    323e:	e5 00                	in     eax,0x0
    3240:	00 00                	add    BYTE PTR [rax],al
    3242:	0b 0a                	or     ecx,DWORD PTR [rdx]
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	00 05 47 05 7e 00    	add    BYTE PTR [rip+0x7e0547],al        # 7e3793 <_end+0x7dd77b>
    324c:	00 00                	add    BYTE PTR [rax],al
    324e:	1c 10                	sbb    al,0x10
    3250:	4e b4 00             	rex.WRX mov spl,0x0
    3253:	00 00                	add    BYTE PTR [rax],al
    3255:	db 00                	fild   DWORD PTR [rax]
    3257:	00 00                	add    BYTE PTR [rax],al
    3259:	07                   	(bad)
    325a:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    325d:	00 05 4f 13 db 00    	add    BYTE PTR [rip+0xdb134f],al        # db45b2 <_end+0xdae59a>
    3263:	00 00                	add    BYTE PTR [rax],al
    3265:	00 1d 72 65 6d 00    	add    BYTE PTR [rip+0x6d6572],bl        # 6d97dd <_end+0x6d37c5>
    326b:	50                   	push   rax
    326c:	13 db                	adc    ebx,ebx
    326e:	00 00                	add    BYTE PTR [rax],al
    3270:	00 08                	add    BYTE PTR [rax],cl
    3272:	00 06                	add    BYTE PTR [rsi],al
    3274:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 335a <_Z7testAllPKcjS0_+0x49a>
    327a:	0b b5 00 00 00 05    	or     esi,DWORD PTR [rbp+0x5000000]
    3280:	51                   	push   rcx
    3281:	05 b6 00 00 00       	add    eax,0xb6
    3286:	06                   	(bad)
    3287:	02 07                	add    al,BYTE PTR [rdi]
    3289:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    328c:	00 0a                	add    BYTE PTR [rdx],cl
    328e:	06                   	(bad)
    328f:	01 00                	add    DWORD PTR [rax],eax
    3291:	00 2c f5 00 00 00 06 	add    BYTE PTR [rsi*8+0x6000000],ch
    3298:	01 06                	add    DWORD PTR [rsi],eax
    329a:	08 02                	or     BYTE PTR [rdx],al
    329c:	00 00                	add    BYTE PTR [rax],al
    329e:	0e                   	(bad)
    329f:	ff 00                	inc    DWORD PTR [rax]
    32a1:	00 00                	add    BYTE PTR [rax],al
    32a3:	06                   	(bad)
    32a4:	01 08                	add    DWORD PTR [rax],ecx
    32a6:	ff 01                	inc    DWORD PTR [rcx]
    32a8:	00 00                	add    BYTE PTR [rax],al
    32aa:	06                   	(bad)
    32ab:	04 07                	add    al,0x7
    32ad:	f8                   	clc
    32ae:	00 00                	add    BYTE PTR [rax],al
    32b0:	00 06                	add    BYTE PTR [rsi],al
    32b2:	01 06                	add    DWORD PTR [rsi],eax
    32b4:	01 02                	add    DWORD PTR [rdx],eax
    32b6:	00 00                	add    BYTE PTR [rax],al
    32b8:	06                   	(bad)
    32b9:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 331a <_Z7testAllPKcjS0_+0x45a>
    32bf:	0b a9 00 00 00 06    	or     ebp,DWORD PTR [rcx+0x6000000]
    32c5:	2a 16                	sub    dl,BYTE PTR [rsi]
    32c7:	12 01                	adc    al,BYTE PTR [rcx]
    32c9:	00 00                	add    BYTE PTR [rax],al
    32cb:	2d 08 0a ff 00       	sub    eax,0xff0a08
    32d0:	00 00                	add    BYTE PTR [rax],al
    32d2:	06                   	(bad)
    32d3:	08 07                	or     BYTE PTR [rdi],al
    32d5:	ee                   	out    dx,al
    32d6:	00 00                	add    BYTE PTR [rax],al
    32d8:	00 2e                	add    BYTE PTR [rsi],ch
    32da:	cf                   	iret
    32db:	02 00                	add    al,BYTE PTR [rax]
    32dd:	00 05 b4 03 0f 4e    	add    BYTE PTR [rip+0x4e0f03b4],al        # 4e0f3697 <_end+0x4e0ed67f>
    32e3:	01 00                	add    DWORD PTR [rax],eax
    32e5:	00 0a                	add    BYTE PTR [rdx],cl
    32e7:	53                   	push   rbx
    32e8:	01 00                	add    DWORD PTR [rax],eax
    32ea:	00 2f                	add    BYTE PTR [rdi],ch
    32ec:	66 00 00             	data16 add BYTE PTR [rax],al
    32ef:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    32f2:	00 00                	add    BYTE PTR [rax],al
    32f4:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    32f7:	00 00                	add    BYTE PTR [rax],al
    32f9:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    32fc:	00 00                	add    BYTE PTR [rax],al
    32fe:	00 0a                	add    BYTE PTR [rdx],cl
    3300:	6c                   	ins    BYTE PTR es:[rdi],dx
    3301:	01 00                	add    DWORD PTR [rax],eax
    3303:	00 30                	add    BYTE PTR [rax],dh
    3305:	31 73 74             	xor    DWORD PTR [rbx+0x74],esi
    3308:	64 00 13             	add    BYTE PTR fs:[rbx],dl
    330b:	32 01                	xor    al,BYTE PTR [rcx]
    330d:	0b 3d 03 00 00 02    	or     edi,DWORD PTR [rip+0x2000003]        # 2003316 <_end+0x1ffd2fe>
    3313:	07                   	(bad)
    3314:	83 0b 72             	or     DWORD PTR [rbx],0x72
    3317:	00 00                	add    BYTE PTR [rax],al
    3319:	00 02                	add    BYTE PTR [rdx],al
    331b:	07                   	(bad)
    331c:	84 0b                	test   BYTE PTR [rbx],cl
    331e:	aa                   	stos   BYTE PTR es:[rdi],al
    331f:	00 00                	add    BYTE PTR [rax],al
    3321:	00 02                	add    BYTE PTR [rdx],al
    3323:	07                   	(bad)
    3324:	8a 0b                	mov    cl,BYTE PTR [rbx]
    3326:	3d 03 00 00 02       	cmp    eax,0x2000003
    332b:	07                   	(bad)
    332c:	8d 0b                	lea    ecx,[rbx]
    332e:	59                   	pop    rcx
    332f:	03 00                	add    eax,DWORD PTR [rax]
    3331:	00 02                	add    BYTE PTR [rdx],al
    3333:	07                   	(bad)
    3334:	90                   	nop
    3335:	0b 74 03 00          	or     esi,DWORD PTR [rbx+rax*1+0x0]
    3339:	00 02                	add    BYTE PTR [rdx],al
    333b:	07                   	(bad)
    333c:	91                   	xchg   ecx,eax
    333d:	0b 91 03 00 00 02    	or     edx,DWORD PTR [rcx+0x2000003]
    3343:	07                   	(bad)
    3344:	92                   	xchg   edx,eax
    3345:	0b a7 03 00 00 02    	or     esp,DWORD PTR [rdi+0x2000003]
    334b:	07                   	(bad)
    334c:	93                   	xchg   ebx,eax
    334d:	0b bd 03 00 00 02    	or     edi,DWORD PTR [rbp+0x2000003]
    3353:	07                   	(bad)
    3354:	95                   	xchg   ebp,eax
    3355:	0b e7                	or     esp,edi
    3357:	03 00                	add    eax,DWORD PTR [rax]
    3359:	00 02                	add    BYTE PTR [rdx],al
    335b:	07                   	(bad)
    335c:	98                   	cwde
    335d:	0b 03                	or     eax,DWORD PTR [rbx]
    335f:	04 00                	add    al,0x0
    3361:	00 02                	add    BYTE PTR [rdx],al
    3363:	07                   	(bad)
    3364:	9a                   	(bad)
    3365:	0b 19                	or     ebx,DWORD PTR [rcx]
    3367:	04 00                	add    al,0x0
    3369:	00 02                	add    BYTE PTR [rdx],al
    336b:	07                   	(bad)
    336c:	9d                   	popf
    336d:	0b 34 04             	or     esi,DWORD PTR [rsp+rax*1]
    3370:	00 00                	add    BYTE PTR [rax],al
    3372:	02 07                	add    al,BYTE PTR [rdi]
    3374:	9e                   	sahf
    3375:	0b 4f 04             	or     ecx,DWORD PTR [rdi+0x4]
    3378:	00 00                	add    BYTE PTR [rax],al
    337a:	02 07                	add    al,BYTE PTR [rdi]
    337c:	9f                   	lahf
    337d:	0b 80 04 00 00 02    	or     eax,DWORD PTR [rax+0x2000004]
    3383:	07                   	(bad)
    3384:	a1 0b a0 04 00 00 02 	movabs eax,ds:0xa40702000004a00b
    338b:	07 a4 
    338d:	0b c0                	or     eax,eax
    338f:	04 00                	add    al,0x0
    3391:	00 02                	add    BYTE PTR [rdx],al
    3393:	07                   	(bad)
    3394:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3395:	0b d3                	or     edx,ebx
    3397:	04 00                	add    al,0x0
    3399:	00 02                	add    BYTE PTR [rdx],al
    339b:	07                   	(bad)
    339c:	a9 0b e0 04 00       	test   eax,0x4e00b
    33a1:	00 02                	add    BYTE PTR [rdx],al
    33a3:	07                   	(bad)
    33a4:	aa                   	stos   BYTE PTR es:[rdi],al
    33a5:	0b f1                	or     esi,ecx
    33a7:	04 00                	add    al,0x0
    33a9:	00 02                	add    BYTE PTR [rdx],al
    33ab:	07                   	(bad)
    33ac:	ab                   	stos   DWORD PTR es:[rdi],eax
    33ad:	0b 11                	or     edx,DWORD PTR [rcx]
    33af:	05 00 00 02 07       	add    eax,0x7020000
    33b4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    33b5:	0b 34 05 00 00 02 07 	or     esi,DWORD PTR [rax*1+0x7020000]
    33bc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    33bd:	0b 57 05             	or     edx,DWORD PTR [rdi+0x5]
    33c0:	00 00                	add    BYTE PTR [rax],al
    33c2:	02 07                	add    al,BYTE PTR [rdi]
    33c4:	af                   	scas   eax,DWORD PTR es:[rdi]
    33c5:	0b 6d 05             	or     ebp,DWORD PTR [rbp+0x5]
    33c8:	00 00                	add    BYTE PTR [rax],al
    33ca:	02 07                	add    al,BYTE PTR [rdi]
    33cc:	b0 0b                	mov    al,0xb
    33ce:	92                   	xchg   edx,eax
    33cf:	05 00 00 02 07       	add    eax,0x7020000
    33d4:	f4                   	hlt
    33d5:	16                   	(bad)
    33d6:	e2 00                	loop   33d8 <_Z7testAllPKcjS0_+0x518>
    33d8:	00 00                	add    BYTE PTR [rax],al
    33da:	02 07                	add    al,BYTE PTR [rdi]
    33dc:	f9                   	stc
    33dd:	16                   	(bad)
    33de:	f2 05 00 00 02 07    	repnz add eax,0x7020000
    33e4:	fa                   	cli
    33e5:	16                   	(bad)
    33e6:	0c 06                	or     al,0x6
    33e8:	00 00                	add    BYTE PTR [rax],al
    33ea:	02 07                	add    al,BYTE PTR [rdi]
    33ec:	fc                   	cld
    33ed:	16                   	(bad)
    33ee:	27                   	(bad)
    33ef:	06                   	(bad)
    33f0:	00 00                	add    BYTE PTR [rax],al
    33f2:	02 07                	add    al,BYTE PTR [rdi]
    33f4:	fd                   	std
    33f5:	16                   	(bad)
    33f6:	83 06 00             	add    DWORD PTR [rsi],0x0
    33f9:	00 02                	add    BYTE PTR [rdx],al
    33fb:	07                   	(bad)
    33fc:	fe                   	(bad)
    33fd:	16                   	(bad)
    33fe:	3d 06 00 00 02       	cmp    eax,0x2000006
    3403:	07                   	(bad)
    3404:	ff 16                	call   QWORD PTR [rsi]
    3406:	60                   	(bad)
    3407:	06                   	(bad)
    3408:	00 00                	add    BYTE PTR [rax],al
    340a:	32 07                	xor    al,BYTE PTR [rdi]
    340c:	00 01                	add    BYTE PTR [rcx],al
    340e:	16                   	(bad)
    340f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3410:	06                   	(bad)
    3411:	00 00                	add    BYTE PTR [rax],al
    3413:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    3416:	73 00                	jae    3418 <_Z7testAllPKcjS0_+0x558>
    3418:	89 0f                	mov    DWORD PTR [rdi],ecx
    341a:	03 00                	add    eax,DWORD PTR [rax]
    341c:	00 ef                	add    bh,ch
    341e:	06                   	(bad)
    341f:	00 00                	add    BYTE PTR [rax],al
    3421:	93                   	xchg   ebx,eax
    3422:	02 00                	add    al,BYTE PTR [rax]
    3424:	00 01                	add    BYTE PTR [rcx],al
    3426:	ef                   	out    dx,eax
    3427:	06                   	(bad)
    3428:	00 00                	add    BYTE PTR [rax],al
    342a:	00 10                	add    BYTE PTR [rax],dl
    342c:	61                   	(bad)
    342d:	62 73 00 55 1b       	(bad)
    3432:	00 00                	add    BYTE PTR [rax],al
    3434:	00 fe                	add    dh,bh
    3436:	06                   	(bad)
    3437:	00 00                	add    BYTE PTR [rax],al
    3439:	ab                   	stos   DWORD PTR es:[rdi],eax
    343a:	02 00                	add    al,BYTE PTR [rax]
    343c:	00 01                	add    BYTE PTR [rcx],al
    343e:	fe 06                	inc    BYTE PTR [rsi]
    3440:	00 00                	add    BYTE PTR [rax],al
    3442:	00 10                	add    BYTE PTR [rax],dl
    3444:	61                   	(bad)
    3445:	62 73 00 4f fb       	(bad)
    344a:	02 00                	add    al,BYTE PTR [rax]
    344c:	00 c0                	add    al,al
    344e:	06                   	(bad)
    344f:	00 00                	add    BYTE PTR [rax],al
    3451:	c3                   	ret
    3452:	02 00                	add    al,BYTE PTR [rax]
    3454:	00 01                	add    BYTE PTR [rcx],al
    3456:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    3459:	00 00                	add    BYTE PTR [rax],al
    345b:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    345e:	73 00                	jae    3460 <_Z7testAllPKcjS0_+0x5a0>
    3460:	4b 05 03 00 00 9e    	rex.WXB add rax,0xffffffff9e000003
    3466:	06                   	(bad)
    3467:	00 00                	add    BYTE PTR [rax],al
    3469:	db 02                	fild   DWORD PTR [rdx]
    346b:	00 00                	add    BYTE PTR [rax],al
    346d:	01 9e 06 00 00 00    	add    DWORD PTR [rsi+0x6],ebx
    3473:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    3476:	73 00                	jae    3478 <_Z7testAllPKcjS0_+0x5b8>
    3478:	47 f1                	rex.RXB int1
    347a:	02 00                	add    al,BYTE PTR [rax]
    347c:	00 8a 03 00 00 f3    	add    BYTE PTR [rdx-0xcfffffd],cl
    3482:	02 00                	add    al,BYTE PTR [rax]
    3484:	00 01                	add    BYTE PTR [rcx],al
    3486:	8a 03                	mov    al,BYTE PTR [rbx]
    3488:	00 00                	add    BYTE PTR [rax],al
    348a:	00 10                	add    BYTE PTR [rax],dl
    348c:	61                   	(bad)
    348d:	62 73 00 3d 41       	(bad)
    3492:	00 00                	add    BYTE PTR [rax],al
    3494:	00 db                	add    bl,bl
    3496:	00 00                	add    BYTE PTR [rax],al
    3498:	00 0b                	add    BYTE PTR [rbx],cl
    349a:	03 00                	add    eax,DWORD PTR [rax]
    349c:	00 01                	add    BYTE PTR [rcx],al
    349e:	db 00                	fild   DWORD PTR [rax]
    34a0:	00 00                	add    BYTE PTR [rax],al
    34a2:	00 10                	add    BYTE PTR [rax],dl
    34a4:	61                   	(bad)
    34a5:	62 73 00 38 11       	(bad)
    34aa:	00 00                	add    BYTE PTR [rax],al
    34ac:	00 a3 00 00 00 23    	add    BYTE PTR [rbx+0x23000000],ah
    34b2:	03 00                	add    eax,DWORD PTR [rax]
    34b4:	00 01                	add    BYTE PTR [rcx],al
    34b6:	a3 00 00 00 00 23 64 	movabs ds:0x7669642300000000,eax
    34bd:	69 76 
    34bf:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    34c5:	aa                   	stos   BYTE PTR es:[rdi],al
    34c6:	00 00                	add    BYTE PTR [rax],al
    34c8:	00 01                	add    BYTE PTR [rcx],al
    34ca:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    34d1:	00 00 
    34d3:	00 00                	add    BYTE PTR [rax],al
    34d5:	09 6d 00             	or     DWORD PTR [rbp+0x0],ebp
    34d8:	00 00                	add    BYTE PTR [rax],al
    34da:	de 02                	fiadd  WORD PTR [rdx]
    34dc:	0c 66                	or     al,0x66
    34de:	00 00                	add    BYTE PTR [rax],al
    34e0:	00 53 03             	add    BYTE PTR [rbx+0x3],dl
    34e3:	00 00                	add    BYTE PTR [rax],al
    34e5:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    34e8:	00 00                	add    BYTE PTR [rax],al
    34ea:	00 0a                	add    BYTE PTR [rdx],cl
    34ec:	58                   	pop    rax
    34ed:	03 00                	add    eax,DWORD PTR [rax]
    34ef:	00 33                	add    BYTE PTR [rbx],dh
    34f1:	34 33                	xor    al,0x33
    34f3:	00 00                	add    BYTE PTR [rax],al
    34f5:	00 05 e3 02 12 33    	add    BYTE PTR [rip+0x331202e3],al        # 331237de <_end+0x3311d7c6>
    34fb:	00 00                	add    BYTE PTR [rax],al
    34fd:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    3500:	00 00                	add    BYTE PTR [rax],al
    3502:	74 03                	je     3507 <_Z7testAllPKcjS0_+0x647>
    3504:	00 00                	add    BYTE PTR [rax],al
    3506:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    3509:	00 00                	add    BYTE PTR [rax],al
    350b:	00 0c cd 01 00 00 09 	add    BYTE PTR [rcx*8+0x9000001],cl
    3512:	19 01                	sbb    DWORD PTR [rcx],eax
    3514:	8a 03                	mov    al,BYTE PTR [rbx]
    3516:	00 00                	add    BYTE PTR [rax],al
    3518:	8a 03                	mov    al,BYTE PTR [rbx]
    351a:	00 00                	add    BYTE PTR [rax],al
    351c:	01 f5                	add    ebp,esi
    351e:	00 00                	add    BYTE PTR [rax],al
    3520:	00 00                	add    BYTE PTR [rax],al
    3522:	06                   	(bad)
    3523:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    3526:	01 00                	add    DWORD PTR [rax],eax
    3528:	00 09                	add    BYTE PTR [rcx],cl
    352a:	d2 01                	rol    BYTE PTR [rcx],cl
    352c:	00 00                	add    BYTE PTR [rax],al
    352e:	e1 01                	loope  3531 <_Z7testAllPKcjS0_+0x671>
    3530:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3533:	00 00                	add    BYTE PTR [rax],al
    3535:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3536:	03 00                	add    eax,DWORD PTR [rax]
    3538:	00 01                	add    BYTE PTR [rcx],al
    353a:	f5                   	cmc
    353b:	00 00                	add    BYTE PTR [rax],al
    353d:	00 00                	add    BYTE PTR [rax],al
    353f:	09 dc                	or     esp,ebx
    3541:	01 00                	add    DWORD PTR [rax],eax
    3543:	00 e6                	add    dh,ah
    3545:	01 01                	add    DWORD PTR [rcx],eax
    3547:	a3 00 00 00 bd 03 00 	movabs ds:0x1000003bd000000,eax
    354e:	00 01 
    3550:	f5                   	cmc
    3551:	00 00                	add    BYTE PTR [rax],al
    3553:	00 00                	add    BYTE PTR [rax],al
    3555:	0c 65                	or     al,0x65
    3557:	00 00                	add    BYTE PTR [rax],al
    3559:	00 0a                	add    BYTE PTR [rdx],cl
    355b:	14 01                	adc    al,0x1
    355d:	33 01                	xor    eax,DWORD PTR [rcx]
    355f:	00 00                	add    BYTE PTR [rax],al
    3561:	e7 03                	out    0x3,eax
    3563:	00 00                	add    BYTE PTR [rax],al
    3565:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    3568:	00 00                	add    BYTE PTR [rax],al
    356a:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    356d:	00 00                	add    BYTE PTR [rax],al
    356f:	01 2e                	add    DWORD PTR [rsi],ebp
    3571:	00 00                	add    BYTE PTR [rax],al
    3573:	00 01                	add    BYTE PTR [rcx],al
    3575:	2e 00 00             	cs add BYTE PTR [rax],al
    3578:	00 01                	add    BYTE PTR [rcx],al
    357a:	41 01 00             	add    DWORD PTR [r8],eax
    357d:	00 00                	add    BYTE PTR [rax],al
    357f:	35 64 69 76 00       	xor    eax,0x766964
    3584:	05 e0 03 0e 72       	add    eax,0x720e03e0
    3589:	00 00                	add    BYTE PTR [rax],al
    358b:	00 03                	add    BYTE PTR [rbx],al
    358d:	04 00                	add    al,0x0
    358f:	00 01                	add    BYTE PTR [rcx],al
    3591:	66 00 00             	data16 add BYTE PTR [rax],al
    3594:	00 01                	add    BYTE PTR [rcx],al
    3596:	66 00 00             	data16 add BYTE PTR [rax],al
    3599:	00 00                	add    BYTE PTR [rax],al
    359b:	09 bd 00 00 00 05    	or     DWORD PTR [rbp+0x5000000],edi
    35a1:	03 0e                	add    ecx,DWORD PTR [rsi]
    35a3:	35 01 00 00 19       	xor    eax,0x19000001
    35a8:	04 00                	add    al,0x0
    35aa:	00 01                	add    BYTE PTR [rcx],al
    35ac:	f5                   	cmc
    35ad:	00 00                	add    BYTE PTR [rax],al
    35af:	00 00                	add    BYTE PTR [rax],al
    35b1:	09 c3                	or     ebx,eax
    35b3:	02 00                	add    al,BYTE PTR [rax]
    35b5:	00 e2                	add    dl,ah
    35b7:	03 0f                	add    ecx,DWORD PTR [rdi]
    35b9:	aa                   	stos   BYTE PTR es:[rdi],al
    35ba:	00 00                	add    BYTE PTR [rax],al
    35bc:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    35bf:	00 00                	add    BYTE PTR [rax],al
    35c1:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
    35c7:	a3 00 00 00 00 09 33 	movabs ds:0x2330900000000,eax
    35ce:	02 00 
    35d0:	00 26                	add    BYTE PTR [rsi],ah
    35d2:	04 0c                	add    al,0xc
    35d4:	66 00 00             	data16 add BYTE PTR [rax],al
    35d7:	00 4f 04             	add    BYTE PTR [rdi+0x4],cl
    35da:	00 00                	add    BYTE PTR [rax],al
    35dc:	01 f5                	add    ebp,esi
    35de:	00 00                	add    BYTE PTR [rax],al
    35e0:	00 01                	add    BYTE PTR [rcx],al
    35e2:	2e 00 00             	cs add BYTE PTR [rax],al
    35e5:	00 00                	add    BYTE PTR [rax],al
    35e7:	0c 39                	or     al,0x39
    35e9:	02 00                	add    al,BYTE PTR [rax]
    35eb:	00 0b                	add    BYTE PTR [rbx],cl
    35ed:	75 01                	jne    35f0 <_Z7testAllPKcjS0_+0x730>
    35ef:	2e 00 00             	cs add BYTE PTR [rax],al
    35f2:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    35f5:	00 00                	add    BYTE PTR [rax],al
    35f7:	01 6f 04             	add    DWORD PTR [rdi+0x4],ebp
    35fa:	00 00                	add    BYTE PTR [rax],al
    35fc:	01 f5                	add    ebp,esi
    35fe:	00 00                	add    BYTE PTR [rax],al
    3600:	00 01                	add    BYTE PTR [rcx],al
    3602:	2e 00 00             	cs add BYTE PTR [rax],al
    3605:	00 00                	add    BYTE PTR [rax],al
    3607:	0a 74 04 00          	or     dh,BYTE PTR [rsp+rax*1+0x0]
    360b:	00 06                	add    BYTE PTR [rsi],al
    360d:	04 05                	add    al,0x5
    360f:	61                   	(bad)
    3610:	02 00                	add    al,BYTE PTR [rax]
    3612:	00 0e                	add    BYTE PTR [rsi],cl
    3614:	74 04                	je     361a <_Z7testAllPKcjS0_+0x75a>
    3616:	00 00                	add    BYTE PTR [rax],al
    3618:	09 d9                	or     ecx,ebx
    361a:	00 00                	add    BYTE PTR [rax],al
    361c:	00 29                	add    BYTE PTR [rcx],ch
    361e:	04 0c                	add    al,0xc
    3620:	66 00 00             	data16 add BYTE PTR [rax],al
    3623:	00 a0 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ah
    3629:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    362a:	04 00                	add    al,0x0
    362c:	00 01                	add    BYTE PTR [rcx],al
    362e:	f5                   	cmc
    362f:	00 00                	add    BYTE PTR [rax],al
    3631:	00 01                	add    BYTE PTR [rcx],al
    3633:	2e 00 00             	cs add BYTE PTR [rax],al
    3636:	00 00                	add    BYTE PTR [rax],al
    3638:	1e                   	(bad)
    3639:	25 00 00 00 ca       	and    eax,0xca000000
    363e:	03 c0                	add    eax,eax
    3640:	04 00                	add    al,0x0
    3642:	00 01                	add    BYTE PTR [rcx],al
    3644:	33 01                	xor    eax,DWORD PTR [rcx]
    3646:	00 00                	add    BYTE PTR [rax],al
    3648:	01 2e                	add    DWORD PTR [rsi],ebp
    364a:	00 00                	add    BYTE PTR [rax],al
    364c:	00 01                	add    BYTE PTR [rcx],al
    364e:	2e 00 00             	cs add BYTE PTR [rax],al
    3651:	00 01                	add    BYTE PTR [rcx],al
    3653:	41 01 00             	add    DWORD PTR [r8],eax
    3656:	00 00                	add    BYTE PTR [rax],al
    3658:	36 36 00 00          	ss ss add BYTE PTR [rax],al
    365c:	00 05 fa 02 0d d3    	add    BYTE PTR [rip+0xffffffffd30d02fa],al        # ffffffffd30d395c <_end+0xffffffffd30cd944>
    3662:	04 00                	add    al,0x0
    3664:	00 01                	add    BYTE PTR [rcx],al
    3666:	66 00 00             	data16 add BYTE PTR [rax],al
    3669:	00 00                	add    BYTE PTR [rax],al
    366b:	37                   	(bad)
    366c:	ec                   	in     al,dx
    366d:	02 00                	add    al,BYTE PTR [rax]
    366f:	00 05 3d 02 0c 66    	add    BYTE PTR [rip+0x660c023d],al        # 660c38b2 <_end+0x660bd89a>
    3675:	00 00                	add    BYTE PTR [rax],al
    3677:	00 1e                	add    BYTE PTR [rsi],bl
    3679:	eb 02                	jmp    367d <_Z21standartDeviationTimePdjd+0xd>
    367b:	00 00                	add    BYTE PTR [rax],al
    367d:	3f                   	(bad)
    367e:	02 f1                	add    dh,cl
    3680:	04 00                	add    al,0x0
    3682:	00 01                	add    BYTE PTR [rcx],al
    3684:	12 01                	adc    al,BYTE PTR [rcx]
    3686:	00 00                	add    BYTE PTR [rax],al
    3688:	00 0c 05 01 00 00 05 	add    BYTE PTR [rax*1+0x5000001],cl
    368f:	76 0f                	jbe    36a0 <_Z21standartDeviationTimePdjd+0x30>
    3691:	8a 03                	mov    al,BYTE PTR [rbx]
    3693:	00 00                	add    BYTE PTR [rax],al
    3695:	0c 05                	or     al,0x5
    3697:	00 00                	add    BYTE PTR [rax],al
    3699:	01 f5                	add    ebp,esi
    369b:	00 00                	add    BYTE PTR [rax],al
    369d:	00 01                	add    BYTE PTR [rcx],al
    369f:	0c 05                	or     al,0x5
    36a1:	00 00                	add    BYTE PTR [rax],al
    36a3:	00 0a                	add    BYTE PTR [rdx],cl
    36a5:	35 01 00 00 16       	xor    eax,0x16000001
    36aa:	54                   	push   rsp
    36ab:	00 00                	add    BYTE PTR [rax],al
    36ad:	00 d7                	add    bh,dl
    36af:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    36b2:	00 00                	add    BYTE PTR [rax],al
    36b4:	a3 00 00 00 34 05 00 	movabs ds:0x100000534000000,eax
    36bb:	00 01 
    36bd:	f5                   	cmc
    36be:	00 00                	add    BYTE PTR [rax],al
    36c0:	00 01                	add    BYTE PTR [rcx],al
    36c2:	0c 05                	or     al,0x5
    36c4:	00 00                	add    BYTE PTR [rax],al
    36c6:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    36c9:	00 00                	add    BYTE PTR [rax],al
    36cb:	00 16                	add    BYTE PTR [rsi],dl
    36cd:	25 02 00 00 db       	and    eax,0xdb000002
    36d2:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    36d5:	00 00                	add    BYTE PTR [rax],al
    36d7:	3a 00                	cmp    al,BYTE PTR [rax]
    36d9:	00 00                	add    BYTE PTR [rax],al
    36db:	57                   	push   rdi
    36dc:	05 00 00 01 f5       	add    eax,0xf5010000
    36e1:	00 00                	add    BYTE PTR [rax],al
    36e3:	00 01                	add    BYTE PTR [rcx],al
    36e5:	0c 05                	or     al,0x5
    36e7:	00 00                	add    BYTE PTR [rax],al
    36e9:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    36ec:	00 00                	add    BYTE PTR [rax],al
    36ee:	00 09                	add    BYTE PTR [rcx],cl
    36f0:	d8 25 00 00 9b 03    	fsub   DWORD PTR [rip+0x39b0000]        # 39b36f6 <_end+0x39ad6de>
    36f6:	0c 66                	or     al,0x66
    36f8:	00 00                	add    BYTE PTR [rax],al
    36fa:	00 6d 05             	add    BYTE PTR [rbp+0x5],ch
    36fd:	00 00                	add    BYTE PTR [rax],al
    36ff:	01 f5                	add    ebp,esi
    3701:	00 00                	add    BYTE PTR [rax],al
    3703:	00 00                	add    BYTE PTR [rax],al
    3705:	0c e1                	or     al,0xe1
    3707:	01 00                	add    DWORD PTR [rax],eax
    3709:	00 0b                	add    BYTE PTR [rbx],cl
    370b:	8f 01                	pop    QWORD PTR [rcx]
    370d:	2e 00 00             	cs add BYTE PTR [rax],al
    3710:	00 8d 05 00 00 01    	add    BYTE PTR [rbp+0x1000005],cl
    3716:	35 01 00 00 01       	xor    eax,0x1000001
    371b:	8d 05 00 00 01 2e    	lea    eax,[rip+0x2e010000]        # 2e013721 <_end+0x2e00d709>
    3721:	00 00                	add    BYTE PTR [rax],al
    3723:	00 00                	add    BYTE PTR [rax],al
    3725:	0a 7b 04             	or     bh,BYTE PTR [rbx+0x4]
    3728:	00 00                	add    BYTE PTR [rax],al
    372a:	0c 42                	or     al,0x42
    372c:	02 00                	add    al,BYTE PTR [rax]
    372e:	00 0b                	add    BYTE PTR [rbx],cl
    3730:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    3734:	00 00                	add    BYTE PTR [rax],al
    3736:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3737:	05 00 00 01 35       	add    eax,0x35010000
    373c:	01 00                	add    DWORD PTR [rax],eax
    373e:	00 01                	add    BYTE PTR [rcx],al
    3740:	74 04                	je     3746 <_Z21standartDeviationTimePdjd+0xd6>
    3742:	00 00                	add    BYTE PTR [rax],al
    3744:	00 38                	add    BYTE PTR [rax],bh
    3746:	12 02                	adc    al,BYTE PTR [rdx]
    3748:	00 00                	add    BYTE PTR [rax],al
    374a:	13 57 01             	adc    edx,DWORD PTR [rdi+0x1]
    374d:	0b 0c 06             	or     ecx,DWORD PTR [rsi+rax*1]
    3750:	00 00                	add    BYTE PTR [rax],al
    3752:	02 07                	add    al,BYTE PTR [rdi]
    3754:	cc                   	int3
    3755:	0b e2                	or     esp,edx
    3757:	00 00                	add    BYTE PTR [rax],al
    3759:	00 02                	add    BYTE PTR [rdx],al
    375b:	07                   	(bad)
    375c:	dc 0b                	fmul   QWORD PTR [rbx]
    375e:	0c 06                	or     al,0x6
    3760:	00 00                	add    BYTE PTR [rax],al
    3762:	02 07                	add    al,BYTE PTR [rdi]
    3764:	e7 0b                	out    0xb,eax
    3766:	27                   	(bad)
    3767:	06                   	(bad)
    3768:	00 00                	add    BYTE PTR [rax],al
    376a:	02 07                	add    al,BYTE PTR [rdi]
    376c:	e8 0b 3d 06 00       	call   6747c <_end+0x61464>
    3771:	00 02                	add    BYTE PTR [rdx],al
    3773:	07                   	(bad)
    3774:	e9 0b 60 06 00       	jmp    69784 <_end+0x6376c>
    3779:	00 02                	add    BYTE PTR [rdx],al
    377b:	07                   	(bad)
    377c:	eb 0b                	jmp    3789 <_Z21standartDeviationTimePdjd+0x119>
    377e:	83 06 00             	add    DWORD PTR [rsi],0x0
    3781:	00 02                	add    BYTE PTR [rdx],al
    3783:	07                   	(bad)
    3784:	ec                   	in     al,dx
    3785:	0b a5 06 00 00 23    	or     esp,DWORD PTR [rbp+0x23000006]
    378b:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    3792:	00 
    3793:	00 e2                	add    dl,ah
    3795:	00 00                	add    BYTE PTR [rax],al
    3797:	00 01                	add    BYTE PTR [rcx],al
    3799:	db 00                	fild   DWORD PTR [rax]
    379b:	00 00                	add    BYTE PTR [rax],al
    379d:	01 db                	add    ebx,ebx
    379f:	00 00                	add    BYTE PTR [rax],al
    37a1:	00 00                	add    BYTE PTR [rax],al
    37a3:	00 09                	add    BYTE PTR [rcx],cl
    37a5:	c2 02 00             	ret    0x2
    37a8:	00 e6                	add    dh,ah
    37aa:	03 1e                	add    ebx,DWORD PTR [rsi]
    37ac:	e2 00                	loop   37ae <_Z21standartDeviationTimePdjd+0x13e>
    37ae:	00 00                	add    BYTE PTR [rax],al
    37b0:	27                   	(bad)
    37b1:	06                   	(bad)
    37b2:	00 00                	add    BYTE PTR [rax],al
    37b4:	01 db                	add    ebx,ebx
    37b6:	00 00                	add    BYTE PTR [rax],al
    37b8:	00 01                	add    BYTE PTR [rcx],al
    37ba:	db 00                	fild   DWORD PTR [rax]
    37bc:	00 00                	add    BYTE PTR [rax],al
    37be:	00 09                	add    BYTE PTR [rcx],cl
    37c0:	2d 02 00 00 ed       	sub    eax,0xed000002
    37c5:	01 01                	add    DWORD PTR [rcx],eax
    37c7:	db 00                	fild   DWORD PTR [rax]
    37c9:	00 00                	add    BYTE PTR [rax],al
    37cb:	3d 06 00 00 01       	cmp    eax,0x1000006
    37d0:	f5                   	cmc
    37d1:	00 00                	add    BYTE PTR [rax],al
    37d3:	00 00                	add    BYTE PTR [rax],al
    37d5:	16                   	(bad)
    37d6:	88 00                	mov    BYTE PTR [rax],al
    37d8:	00 00                	add    BYTE PTR [rax],al
    37da:	ee                   	out    dx,al
    37db:	16                   	(bad)
    37dc:	7f 00                	jg     37de <_Z27standartDeviationCollisionsP7HashMapf+0xe>
    37de:	00 00                	add    BYTE PTR [rax],al
    37e0:	db 00                	fild   DWORD PTR [rax]
    37e2:	00 00                	add    BYTE PTR [rax],al
    37e4:	60                   	(bad)
    37e5:	06                   	(bad)
    37e6:	00 00                	add    BYTE PTR [rax],al
    37e8:	01 f5                	add    ebp,esi
    37ea:	00 00                	add    BYTE PTR [rax],al
    37ec:	00 01                	add    BYTE PTR [rcx],al
    37ee:	0c 05                	or     al,0x5
    37f0:	00 00                	add    BYTE PTR [rax],al
    37f2:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    37f5:	00 00                	add    BYTE PTR [rax],al
    37f7:	00 16                	add    BYTE PTR [rsi],dl
    37f9:	b9 02 00 00 f3       	mov    ecx,0xf3000002
    37fe:	1f                   	(bad)
    37ff:	b0 02                	mov    al,0x2
    3801:	00 00                	add    BYTE PTR [rax],al
    3803:	3a 01                	cmp    al,BYTE PTR [rcx]
    3805:	00 00                	add    BYTE PTR [rax],al
    3807:	83 06 00             	add    DWORD PTR [rsi],0x0
    380a:	00 01                	add    BYTE PTR [rcx],al
    380c:	f5                   	cmc
    380d:	00 00                	add    BYTE PTR [rax],al
    380f:	00 01                	add    BYTE PTR [rcx],al
    3811:	0c 05                	or     al,0x5
    3813:	00 00                	add    BYTE PTR [rax],al
    3815:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3818:	00 00                	add    BYTE PTR [rax],al
    381a:	00 0c 97             	add    BYTE PTR [rdi+rdx*4],cl
    381d:	02 00                	add    al,BYTE PTR [rax]
    381f:	00 05 7c 0e 9e 06    	add    BYTE PTR [rip+0x69e0e7c],al        # 69e46a1 <_end+0x69de689>
    3825:	00 00                	add    BYTE PTR [rax],al
    3827:	9e                   	sahf
    3828:	06                   	(bad)
    3829:	00 00                	add    BYTE PTR [rax],al
    382b:	01 f5                	add    ebp,esi
    382d:	00 00                	add    BYTE PTR [rax],al
    382f:	00 01                	add    BYTE PTR [rcx],al
    3831:	0c 05                	or     al,0x5
    3833:	00 00                	add    BYTE PTR [rax],al
    3835:	00 06                	add    BYTE PTR [rsi],al
    3837:	04 04                	add    al,0x4
    3839:	d3 00                	rol    DWORD PTR [rax],cl
    383b:	00 00                	add    BYTE PTR [rax],al
    383d:	0c 2b                	or     al,0x2b
    383f:	00 00                	add    BYTE PTR [rax],al
    3841:	00 05 7f 14 c0 06    	add    BYTE PTR [rip+0x6c0147f],al        # 6c04cc6 <_end+0x6bfecae>
    3847:	00 00                	add    BYTE PTR [rax],al
    3849:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    384c:	00 01                	add    BYTE PTR [rcx],al
    384e:	f5                   	cmc
    384f:	00 00                	add    BYTE PTR [rax],al
    3851:	00 01                	add    BYTE PTR [rcx],al
    3853:	0c 05                	or     al,0x5
    3855:	00 00                	add    BYTE PTR [rax],al
    3857:	00 06                	add    BYTE PTR [rsi],al
    3859:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    385c:	01 00                	add    DWORD PTR [rax],eax
    385e:	00 02                	add    BYTE PTR [rdx],al
    3860:	0c 27                	or     al,0x27
    3862:	0c 3d                	or     al,0x3d
    3864:	03 00                	add    eax,DWORD PTR [rax]
    3866:	00 02                	add    BYTE PTR [rdx],al
    3868:	0c 2b                	or     al,0x2b
    386a:	0e                   	(bad)
    386b:	59                   	pop    rcx
    386c:	03 00                	add    eax,DWORD PTR [rax]
    386e:	00 02                	add    BYTE PTR [rdx],al
    3870:	0c 2e                	or     al,0x2e
    3872:	0e                   	(bad)
    3873:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    3877:	02 0c 36             	add    cl,BYTE PTR [rsi+rsi*1]
    387a:	0c 72                	or     al,0x72
    387c:	00 00                	add    BYTE PTR [rax],al
    387e:	00 02                	add    BYTE PTR [rdx],al
    3880:	0c 37                	or     al,0x37
    3882:	0c aa                	or     al,0xaa
    3884:	00 00                	add    BYTE PTR [rax],al
    3886:	00 06                	add    BYTE PTR [rsi],al
    3888:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    388b:	02 00                	add    al,BYTE PTR [rax]
    388d:	00 02                	add    BYTE PTR [rdx],al
    388f:	0c 39                	or     al,0x39
    3891:	0c 7b                	or     al,0x7b
    3893:	02 00                	add    al,BYTE PTR [rax]
    3895:	00 06                	add    BYTE PTR [rsi],al
    3897:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 3a87 <_Z27standartDeviationCollisionsP7HashMapf+0x2b7>
    389d:	02 0c 39             	add    cl,BYTE PTR [rcx+rdi*1]
    38a0:	0c 93                	or     al,0x93
    38a2:	02 00                	add    al,BYTE PTR [rax]
    38a4:	00 02                	add    BYTE PTR [rdx],al
    38a6:	0c 39                	or     al,0x39
    38a8:	0c ab                	or     al,0xab
    38aa:	02 00                	add    al,BYTE PTR [rax]
    38ac:	00 02                	add    BYTE PTR [rdx],al
    38ae:	0c 39                	or     al,0x39
    38b0:	0c c3                	or     al,0xc3
    38b2:	02 00                	add    al,BYTE PTR [rax]
    38b4:	00 02                	add    BYTE PTR [rdx],al
    38b6:	0c 39                	or     al,0x39
    38b8:	0c db                	or     al,0xdb
    38ba:	02 00                	add    al,BYTE PTR [rax]
    38bc:	00 02                	add    BYTE PTR [rdx],al
    38be:	0c 39                	or     al,0x39
    38c0:	0c f3                	or     al,0xf3
    38c2:	02 00                	add    al,BYTE PTR [rax]
    38c4:	00 02                	add    BYTE PTR [rdx],al
    38c6:	0c 39                	or     al,0x39
    38c8:	0c 0b                	or     al,0xb
    38ca:	03 00                	add    eax,DWORD PTR [rax]
    38cc:	00 02                	add    BYTE PTR [rdx],al
    38ce:	0c 3a                	or     al,0x3a
    38d0:	0c 74                	or     al,0x74
    38d2:	03 00                	add    eax,DWORD PTR [rax]
    38d4:	00 02                	add    BYTE PTR [rdx],al
    38d6:	0c 3b                	or     al,0x3b
    38d8:	0c 91                	or     al,0x91
    38da:	03 00                	add    eax,DWORD PTR [rax]
    38dc:	00 02                	add    BYTE PTR [rdx],al
    38de:	0c 3c                	or     al,0x3c
    38e0:	0c a7                	or     al,0xa7
    38e2:	03 00                	add    eax,DWORD PTR [rax]
    38e4:	00 02                	add    BYTE PTR [rdx],al
    38e6:	0c 3d                	or     al,0x3d
    38e8:	0c bd                	or     al,0xbd
    38ea:	03 00                	add    eax,DWORD PTR [rax]
    38ec:	00 02                	add    BYTE PTR [rdx],al
    38ee:	0c 3f                	or     al,0x3f
    38f0:	0c f2                	or     al,0xf2
    38f2:	05 00 00 02 0c       	add    eax,0xc020000
    38f7:	3f                   	(bad)
    38f8:	0c 23                	or     al,0x23
    38fa:	03 00                	add    eax,DWORD PTR [rax]
    38fc:	00 02                	add    BYTE PTR [rdx],al
    38fe:	0c 3f                	or     al,0x3f
    3900:	0c e7                	or     al,0xe7
    3902:	03 00                	add    eax,DWORD PTR [rax]
    3904:	00 02                	add    BYTE PTR [rdx],al
    3906:	0c 41                	or     al,0x41
    3908:	0c 03                	or     al,0x3
    390a:	04 00                	add    al,0x0
    390c:	00 02                	add    BYTE PTR [rdx],al
    390e:	0c 43                	or     al,0x43
    3910:	0c 19                	or     al,0x19
    3912:	04 00                	add    al,0x0
    3914:	00 02                	add    BYTE PTR [rdx],al
    3916:	0c 46                	or     al,0x46
    3918:	0c 34                	or     al,0x34
    391a:	04 00                	add    al,0x0
    391c:	00 02                	add    BYTE PTR [rdx],al
    391e:	0c 47                	or     al,0x47
    3920:	0c 4f                	or     al,0x4f
    3922:	04 00                	add    al,0x0
    3924:	00 02                	add    BYTE PTR [rdx],al
    3926:	0c 48                	or     al,0x48
    3928:	0c 80                	or     al,0x80
    392a:	04 00                	add    al,0x0
    392c:	00 02                	add    BYTE PTR [rdx],al
    392e:	0c 4a                	or     al,0x4a
    3930:	0c a0                	or     al,0xa0
    3932:	04 00                	add    al,0x0
    3934:	00 02                	add    BYTE PTR [rdx],al
    3936:	0c 4b                	or     al,0x4b
    3938:	0c d3                	or     al,0xd3
    393a:	04 00                	add    al,0x0
    393c:	00 02                	add    BYTE PTR [rdx],al
    393e:	0c 4d                	or     al,0x4d
    3940:	0c e0                	or     al,0xe0
    3942:	04 00                	add    al,0x0
    3944:	00 02                	add    BYTE PTR [rdx],al
    3946:	0c 4e                	or     al,0x4e
    3948:	0c f1                	or     al,0xf1
    394a:	04 00                	add    al,0x0
    394c:	00 02                	add    BYTE PTR [rdx],al
    394e:	0c 4f                	or     al,0x4f
    3950:	0c 11                	or     al,0x11
    3952:	05 00 00 02 0c       	add    eax,0xc020000
    3957:	50                   	push   rax
    3958:	0c 34                	or     al,0x34
    395a:	05 00 00 02 0c       	add    eax,0xc020000
    395f:	51                   	push   rcx
    3960:	0c 57                	or     al,0x57
    3962:	05 00 00 02 0c       	add    eax,0xc020000
    3967:	53                   	push   rbx
    3968:	0c 6d                	or     al,0x6d
    396a:	05 00 00 02 0c       	add    eax,0xc020000
    396f:	54                   	push   rsp
    3970:	0c 92                	or     al,0x92
    3972:	05 00 00 0b ab       	add    eax,0xab0b0000
    3977:	00 00                	add    BYTE PTR [rax],al
    3979:	00 0d 1a 14 27 01    	add    BYTE PTR [rip+0x127141a],cl        # 1274d99 <_end+0x126ed81>
    397f:	00 00                	add    BYTE PTR [rax],al
    3981:	06                   	(bad)
    3982:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    3985:	00 00                	add    BYTE PTR [rax],al
    3987:	00 06                	add    BYTE PTR [rsi],al
    3989:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    398c:	02 00                	add    al,BYTE PTR [rax]
    398e:	00 1f                	add    BYTE PTR [rdi],bl
    3990:	40 08 00             	rex or BYTE PTR [rax],al
    3993:	00 10                	add    BYTE PTR [rax],dl
    3995:	0e                   	(bad)
    3996:	07                   	(bad)
    3997:	2b 08                	sub    ecx,DWORD PTR [rax]
    3999:	00 00                	add    BYTE PTR [rax],al
    399b:	07                   	(bad)
    399c:	a3 03 00 00 0e 08 0b 	movabs ds:0x1350b080e000003,eax
    39a3:	35 01 
    39a5:	00 00                	add    BYTE PTR [rax],al
    39a7:	00 07                	add    BYTE PTR [rdi],al
    39a9:	e5 05                	in     eax,0x5
    39ab:	00 00                	add    BYTE PTR [rax],al
    39ad:	0e                   	(bad)
    39ae:	09 0e                	or     DWORD PTR [rsi],ecx
    39b0:	dd 07                	fld    QWORD PTR [rdi]
    39b2:	00 00                	add    BYTE PTR [rax],al
    39b4:	08 07                	or     BYTE PTR [rdi],al
    39b6:	ea                   	(bad)
    39b7:	05 00 00 0e 0a       	add    eax,0xa0e0000
    39bc:	0e                   	(bad)
    39bd:	dd 07                	fld    QWORD PTR [rdi]
    39bf:	00 00                	add    BYTE PTR [rax],al
    39c1:	0c 00                	or     al,0x0
    39c3:	0b 40 08             	or     eax,DWORD PTR [rax+0x8]
    39c6:	00 00                	add    BYTE PTR [rax],al
    39c8:	0e                   	(bad)
    39c9:	0b 03                	or     eax,DWORD PTR [rbx]
    39cb:	f7 07 00 00 17 69    	test   DWORD PTR [rdi],0x69170000
    39d1:	02 00                	add    al,BYTE PTR [rax]
    39d3:	00 0f                	add    BYTE PTR [rdi],cl
    39d5:	08 6d 00             	or     BYTE PTR [rbp+0x0],ch
    39d8:	00 00                	add    BYTE PTR [rax],al
    39da:	0f 17 75 02          	movhps QWORD PTR [rbp+0x2],xmm6
    39de:	00 00                	add    BYTE PTR [rax],al
    39e0:	0f 09                	wbinvd
    39e2:	6d                   	ins    DWORD PTR es:[rdi],dx
    39e3:	00 00                	add    BYTE PTR [rax],al
    39e5:	00 02                	add    BYTE PTR [rdx],al
    39e7:	17                   	(bad)
    39e8:	c4                   	(bad)
    39e9:	00 00                	add    BYTE PTR [rax],al
    39eb:	00 0f                	add    BYTE PTR [rdi],cl
    39ed:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    39f0:	00 00                	add    BYTE PTR [rax],al
    39f2:	20 0b                	and    BYTE PTR [rbx],cl
    39f4:	36 03 00             	ss add eax,DWORD PTR [rax]
    39f7:	00 0f                	add    BYTE PTR [rdi],cl
    39f9:	0c 12                	or     al,0x12
    39fb:	2b 08                	sub    ecx,DWORD PTR [rax]
    39fd:	00 00                	add    BYTE PTR [rax],al
    39ff:	1f                   	(bad)
    3a00:	42 05 00 00 20 0f    	rex.X add eax,0xf200000
    3a06:	0f a8                	push   gs
    3a08:	08 00                	or     BYTE PTR [rax],al
    3a0a:	00 07                	add    BYTE PTR [rdi],al
    3a0c:	14 06                	adc    al,0x6
    3a0e:	00 00                	add    BYTE PTR [rax],al
    3a10:	0f 10 0e             	movups xmm1,XMMWORD PTR [rsi]
    3a13:	dd 07                	fld    QWORD PTR [rdi]
    3a15:	00 00                	add    BYTE PTR [rax],al
    3a17:	00 07                	add    BYTE PTR [rdi],al
    3a19:	95                   	xchg   ebp,eax
    3a1a:	04 00                	add    al,0x0
    3a1c:	00 0f                	add    BYTE PTR [rdi],cl
    3a1e:	11 0e                	adc    DWORD PTR [rsi],ecx
    3a20:	dd 07                	fld    QWORD PTR [rdi]
    3a22:	00 00                	add    BYTE PTR [rax],al
    3a24:	04 07                	add    al,0x7
    3a26:	d0 05 00 00 0f 13    	rol    BYTE PTR [rip+0x130f0000],1        # 130f3a2c <_end+0x130eda14>
    3a2c:	0e                   	(bad)
    3a2d:	dd 07                	fld    QWORD PTR [rdi]
    3a2f:	00 00                	add    BYTE PTR [rax],al
    3a31:	08 07                	or     BYTE PTR [rdi],al
    3a33:	c7                   	(bad)
    3a34:	14 00                	adc    al,0x0
    3a36:	00 0f                	add    BYTE PTR [rdi],cl
    3a38:	15 0c 5b 08 00       	adc    eax,0x85b0c
    3a3d:	00 10                	add    BYTE PTR [rax],dl
    3a3f:	00 0b                	add    BYTE PTR [rbx],cl
    3a41:	42 05 00 00 0f 16    	rex.X add eax,0x160f0000
    3a47:	03 67 08             	add    esp,DWORD PTR [rdi+0x8]
    3a4a:	00 00                	add    BYTE PTR [rax],al
    3a4c:	1f                   	(bad)
    3a4d:	60                   	(bad)
    3a4e:	04 00                	add    al,0x0
    3a50:	00 18                	add    BYTE PTR [rax],bl
    3a52:	0f 18 f5             	nop    ebp
    3a55:	08 00                	or     BYTE PTR [rax],al
    3a57:	00 07                	add    BYTE PTR [rdi],al
    3a59:	d8 05 00 00 0f 19    	fadd   DWORD PTR [rip+0x190f0000]        # 190f3a5f <_end+0x190eda47>
    3a5f:	0f f5 08             	pmaddwd mm1,QWORD PTR [rax]
    3a62:	00 00                	add    BYTE PTR [rax],al
    3a64:	00 07                	add    BYTE PTR [rdi],al
    3a66:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a67:	05 00 00 0f 1a       	add    eax,0x1a0f0000
    3a6c:	0e                   	(bad)
    3a6d:	dd 07                	fld    QWORD PTR [rdi]
    3a6f:	00 00                	add    BYTE PTR [rax],al
    3a71:	08 07                	or     BYTE PTR [rdi],al
    3a73:	19 03                	sbb    DWORD PTR [rbx],eax
    3a75:	00 00                	add    BYTE PTR [rax],al
    3a77:	0f 1b 0e             	bndstx [rsi],bnd1
    3a7a:	dd 07                	fld    QWORD PTR [rdi]
    3a7c:	00 00                	add    BYTE PTR [rax],al
    3a7e:	0c 07                	or     al,0x7
    3a80:	69 03 00 00 0f 1c    	imul   eax,DWORD PTR [rbx],0x1c0f0000
    3a86:	0e                   	(bad)
    3a87:	dd 07                	fld    QWORD PTR [rdi]
    3a89:	00 00                	add    BYTE PTR [rax],al
    3a8b:	10 00                	adc    BYTE PTR [rax],al
    3a8d:	0a a8 08 00 00 0b    	or     ch,BYTE PTR [rax+0xb000008]
    3a93:	60                   	(bad)
    3a94:	04 00                	add    al,0x0
    3a96:	00 0f                	add    BYTE PTR [rdi],cl
    3a98:	1d 03 b4 08 00       	sbb    eax,0x8b403
    3a9d:	00 0a                	add    BYTE PTR [rdx],cl
    3a9f:	fa                   	cli
    3aa0:	08 00                	or     BYTE PTR [rax],al
    3aa2:	00 17                	add    BYTE PTR [rdi],dl
    3aa4:	f8                   	clc
    3aa5:	06                   	(bad)
    3aa6:	00 00                	add    BYTE PTR [rax],al
    3aa8:	10 06                	adc    BYTE PTR [rsi],al
    3aaa:	6d                   	ins    DWORD PTR es:[rdi],dx
    3aab:	00 00                	add    BYTE PTR [rax],al
    3aad:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    3ab0:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    3ab3:	00 11                	add    BYTE PTR [rcx],dl
    3ab5:	34 0c                	xor    al,0xc
    3ab7:	66 00 00             	data16 add BYTE PTR [rax],al
    3aba:	00 33                	add    BYTE PTR [rbx],dh
    3abc:	09 00                	or     DWORD PTR [rax],eax
    3abe:	00 01                	add    BYTE PTR [rcx],al
    3ac0:	66 00 00             	data16 add BYTE PTR [rax],al
    3ac3:	00 01                	add    BYTE PTR [rcx],al
    3ac5:	f5                   	cmc
    3ac6:	00 00                	add    BYTE PTR [rax],al
    3ac8:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    3acb:	1e                   	(bad)
    3acc:	b0 03                	mov    al,0x3
    3ace:	00 00                	add    BYTE PTR [rax],al
    3ad0:	af                   	scas   eax,DWORD PTR es:[rdi]
    3ad1:	02 44 09 00          	add    al,BYTE PTR [rcx+rcx*1+0x0]
    3ad5:	00 01                	add    BYTE PTR [rcx],al
    3ad7:	33 01                	xor    eax,DWORD PTR [rcx]
    3ad9:	00 00                	add    BYTE PTR [rax],al
    3adb:	00 09                	add    BYTE PTR [rcx],cl
    3add:	80 09 00             	or     BYTE PTR [rcx],0x0
    3ae0:	00 ab 02 0e 33 01    	add    BYTE PTR [rbx+0x1330e02],ch
    3ae6:	00 00                	add    BYTE PTR [rax],al
    3ae8:	5f                   	pop    rdi
    3ae9:	09 00                	or     DWORD PTR [rax],eax
    3aeb:	00 01                	add    BYTE PTR [rcx],al
    3aed:	33 01                	xor    eax,DWORD PTR [rcx]
    3aef:	00 00                	add    BYTE PTR [rax],al
    3af1:	01 2e                	add    DWORD PTR [rsi],ebp
    3af3:	00 00                	add    BYTE PTR [rax],al
    3af5:	00 00                	add    BYTE PTR [rax],al
    3af7:	39 ad 05 00 00 12    	cmp    DWORD PTR [rbp+0x12000005],ebp
    3afd:	45 0d 80 09 00 00    	rex.RB or eax,0x980
    3b03:	01 f5                	add    ebp,esi
    3b05:	00 00                	add    BYTE PTR [rax],al
    3b07:	00 01                	add    BYTE PTR [rcx],al
    3b09:	f5                   	cmc
    3b0a:	00 00                	add    BYTE PTR [rax],al
    3b0c:	00 01                	add    BYTE PTR [rcx],al
    3b0e:	12 01                	adc    al,BYTE PTR [rcx]
    3b10:	00 00                	add    BYTE PTR [rax],al
    3b12:	01 f5                	add    ebp,esi
    3b14:	00 00                	add    BYTE PTR [rax],al
    3b16:	00 00                	add    BYTE PTR [rax],al
    3b18:	09 91 06 00 00 a3    	or     DWORD PTR [rcx-0x5cfffffa],edx
    3b1e:	02 0e                	add    cl,BYTE PTR [rsi]
    3b20:	33 01                	xor    eax,DWORD PTR [rcx]
    3b22:	00 00                	add    BYTE PTR [rax],al
    3b24:	9b                   	fwait
    3b25:	09 00                	or     DWORD PTR [rax],eax
    3b27:	00 01                	add    BYTE PTR [rcx],al
    3b29:	2e 00 00             	cs add BYTE PTR [rax],al
    3b2c:	00 01                	add    BYTE PTR [rcx],al
    3b2e:	2e 00 00             	cs add BYTE PTR [rax],al
    3b31:	00 00                	add    BYTE PTR [rax],al
    3b33:	25 0b 05 00 00       	and    eax,0x50b
    3b38:	96                   	xchg   esi,eax
    3b39:	3d 03 00 00 00       	cmp    eax,0x3
    3b3e:	22 00                	and    al,BYTE PTR [rax]
    3b40:	00 00                	add    BYTE PTR [rax],al
    3b42:	00 00                	add    BYTE PTR [rax],al
    3b44:	00 23                	add    BYTE PTR [rbx],ah
    3b46:	02 00                	add    al,BYTE PTR [rax]
    3b48:	00 00                	add    BYTE PTR [rax],al
    3b4a:	00 00                	add    BYTE PTR [rax],al
    3b4c:	00 01                	add    BYTE PTR [rcx],al
    3b4e:	9c                   	pushf
    3b4f:	e1 0f                	loope  3b60 <_fini+0x5c>
    3b51:	00 00                	add    BYTE PTR [rax],al
    3b53:	12 78 21             	adc    bh,BYTE PTR [rax+0x21]
    3b56:	00 00                	add    BYTE PTR [rax],al
    3b58:	96                   	xchg   esi,eax
    3b59:	17                   	(bad)
    3b5a:	06                   	(bad)
    3b5b:	09 00                	or     DWORD PTR [rax],eax
    3b5d:	00 4d 14             	add    BYTE PTR [rbp+0x14],cl
    3b60:	00 00                	add    BYTE PTR [rax],al
    3b62:	43 14 00             	rex.XB adc al,0x0
    3b65:	00 18                	add    BYTE PTR [rax],bl
    3b67:	cd 03                	int    0x3
    3b69:	00 00                	add    BYTE PTR [rax],al
    3b6b:	f1                   	int1
    3b6c:	0f 00 00             	sldt   WORD PTR [rax]
    3b6f:	09 03                	or     DWORD PTR [rbx],eax
    3b71:	cd 40                	int    0x40
    3b73:	00 00                	add    BYTE PTR [rax],al
    3b75:	00 00                	add    BYTE PTR [rax],al
    3b77:	00 00                	add    BYTE PTR [rax],al
    3b79:	13 69 22             	adc    ebp,DWORD PTR [rcx+0x22]
    3b7c:	00 00                	add    BYTE PTR [rax],al
    3b7e:	00 00                	add    BYTE PTR [rax],al
    3b80:	00 00                	add    BYTE PTR [rax],al
    3b82:	33 00                	xor    eax,DWORD PTR [rax]
    3b84:	00 00                	add    BYTE PTR [rax],al
    3b86:	00 00                	add    BYTE PTR [rax],al
    3b88:	00 00                	add    BYTE PTR [rax],al
    3b8a:	55                   	push   rbp
    3b8b:	0a 00                	or     al,BYTE PTR [rax]
    3b8d:	00 0f                	add    BYTE PTR [rdi],cl
    3b8f:	69 00 9d 0e 66 00    	imul   eax,DWORD PTR [rax],0x660e9d
    3b95:	00 00                	add    BYTE PTR [rax],al
    3b97:	7b 14                	jnp    3bad <_fini+0xa9>
    3b99:	00 00                	add    BYTE PTR [rax],al
    3b9b:	77 14                	ja     3bb1 <_fini+0xad>
    3b9d:	00 00                	add    BYTE PTR [rax],al
    3b9f:	20 66 15             	and    BYTE PTR [rsi+0x15],ah
    3ba2:	00 00                	add    BYTE PTR [rax],al
    3ba4:	80 22 00             	and    BYTE PTR [rdx],0x0
    3ba7:	00 00                	add    BYTE PTR [rax],al
    3ba9:	00 00                	add    BYTE PTR [rax],al
    3bab:	00 01                	add    BYTE PTR [rcx],al
    3bad:	80 22 00             	and    BYTE PTR [rdx],0x0
    3bb0:	00 00                	add    BYTE PTR [rax],al
    3bb2:	00 00                	add    BYTE PTR [rax],al
    3bb4:	00 12                	add    BYTE PTR [rdx],dl
    3bb6:	00 00                	add    BYTE PTR [rax],al
    3bb8:	00 00                	add    BYTE PTR [rax],al
    3bba:	00 00                	add    BYTE PTR [rax],al
    3bbc:	00 9e 0f 04 75 15    	add    BYTE PTR [rsi+0x1575040f],bl
    3bc2:	00 00                	add    BYTE PTR [rax],al
    3bc4:	8d 14 00             	lea    edx,[rax+rax*1]
    3bc7:	00 8b 14 00 00 05    	add    BYTE PTR [rbx+0x5000014],cl
    3bcd:	92                   	xchg   edx,eax
    3bce:	22 00                	and    al,BYTE PTR [rax]
    3bd0:	00 00                	add    BYTE PTR [rax],al
    3bd2:	00 00                	add    BYTE PTR [rax],al
    3bd4:	00 17                	add    BYTE PTR [rdi],dl
    3bd6:	09 00                	or     DWORD PTR [rax],eax
    3bd8:	00 03                	add    BYTE PTR [rbx],al
    3bda:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3bdd:	32 03                	xor    al,BYTE PTR [rbx]
    3bdf:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3be3:	00 03                	add    BYTE PTR [rbx],al
    3be5:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    3be8:	7c 00                	jl     3bea <_fini+0xe6>
    3bea:	00 00                	add    BYTE PTR [rax],al
    3bec:	00 13                	add    BYTE PTR [rbx],dl
    3bee:	b9 22 00 00 00       	mov    ecx,0x22
    3bf3:	00 00                	add    BYTE PTR [rax],al
    3bf5:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    3bf8:	00 00                	add    BYTE PTR [rax],al
    3bfa:	00 00                	add    BYTE PTR [rax],al
    3bfc:	00 00                	add    BYTE PTR [rax],al
    3bfe:	b6 0a                	mov    dh,0xa
    3c00:	00 00                	add    BYTE PTR [rax],al
    3c02:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3c05:	a2 0e 66 00 00 00 a6 	movabs ds:0x14a6000000660e,al
    3c0c:	14 00 
    3c0e:	00 9e 14 00 00 19    	add    BYTE PTR [rsi+0x19000014],bl
    3c14:	66 15 00 00          	adc    ax,0x0
    3c18:	d0 22                	shl    BYTE PTR [rdx],1
    3c1a:	00 00                	add    BYTE PTR [rax],al
    3c1c:	00 00                	add    BYTE PTR [rax],al
    3c1e:	00 00                	add    BYTE PTR [rax],al
    3c20:	01 4a 02             	add    DWORD PTR [rdx+0x2],ecx
    3c23:	00 00                	add    BYTE PTR [rax],al
    3c25:	a3 04 75 15 00 00 c8 	movabs ds:0x14c80000157504,eax
    3c2c:	14 00 
    3c2e:	00 c6                	add    dh,al
    3c30:	14 00                	adc    al,0x0
    3c32:	00 05 ef 22 00 00    	add    BYTE PTR [rip+0x22ef],al        # 5f27 <_GLOBAL_OFFSET_TABLE_+0x37>
    3c38:	00 00                	add    BYTE PTR [rax],al
    3c3a:	00 00                	add    BYTE PTR [rax],al
    3c3c:	17                   	(bad)
    3c3d:	09 00                	or     DWORD PTR [rax],eax
    3c3f:	00 03                	add    BYTE PTR [rbx],al
    3c41:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3c44:	32 03                	xor    al,BYTE PTR [rbx]
    3c46:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3c4a:	00 00                	add    BYTE PTR [rax],al
    3c4c:	00 00                	add    BYTE PTR [rax],al
    3c4e:	13 12                	adc    edx,DWORD PTR [rdx]
    3c50:	23 00                	and    eax,DWORD PTR [rax]
    3c52:	00 00                	add    BYTE PTR [rax],al
    3c54:	00 00                	add    BYTE PTR [rax],al
    3c56:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    3c59:	00 00                	add    BYTE PTR [rax],al
    3c5b:	00 00                	add    BYTE PTR [rax],al
    3c5d:	00 00                	add    BYTE PTR [rax],al
    3c5f:	17                   	(bad)
    3c60:	0b 00                	or     eax,DWORD PTR [rax]
    3c62:	00 0f                	add    BYTE PTR [rdi],cl
    3c64:	69 00 a7 0e 66 00    	imul   eax,DWORD PTR [rax],0x660ea7
    3c6a:	00 00                	add    BYTE PTR [rax],al
    3c6c:	e1 14                	loope  3c82 <_fini+0x17e>
    3c6e:	00 00                	add    BYTE PTR [rax],al
    3c70:	d9 14 00             	fst    DWORD PTR [rax+rax*1]
    3c73:	00 19                	add    BYTE PTR [rcx],bl
    3c75:	66 15 00 00          	adc    ax,0x0
    3c79:	28 23                	sub    BYTE PTR [rbx],ah
    3c7b:	00 00                	add    BYTE PTR [rax],al
    3c7d:	00 00                	add    BYTE PTR [rax],al
    3c7f:	00 00                	add    BYTE PTR [rax],al
    3c81:	01 5a 02             	add    DWORD PTR [rdx+0x2],ebx
    3c84:	00 00                	add    BYTE PTR [rax],al
    3c86:	a8 04                	test   al,0x4
    3c88:	75 15                	jne    3c9f <_fini+0x19b>
    3c8a:	00 00                	add    BYTE PTR [rax],al
    3c8c:	03 15 00 00 01 15    	add    edx,DWORD PTR [rip+0x15010000]        # 15013c92 <_end+0x1500dc7a>
    3c92:	00 00                	add    BYTE PTR [rax],al
    3c94:	05 48 23 00 00       	add    eax,0x2348
    3c99:	00 00                	add    BYTE PTR [rax],al
    3c9b:	00 00                	add    BYTE PTR [rax],al
    3c9d:	17                   	(bad)
    3c9e:	09 00                	or     DWORD PTR [rax],eax
    3ca0:	00 03                	add    BYTE PTR [rbx],al
    3ca2:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3ca5:	32 03                	xor    al,BYTE PTR [rbx]
    3ca7:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3cab:	00 00                	add    BYTE PTR [rax],al
    3cad:	00 00                	add    BYTE PTR [rax],al
    3caf:	13 6b 23             	adc    ebp,DWORD PTR [rbx+0x23]
    3cb2:	00 00                	add    BYTE PTR [rax],al
    3cb4:	00 00                	add    BYTE PTR [rax],al
    3cb6:	00 00                	add    BYTE PTR [rax],al
    3cb8:	3b 00                	cmp    eax,DWORD PTR [rax]
    3cba:	00 00                	add    BYTE PTR [rax],al
    3cbc:	00 00                	add    BYTE PTR [rax],al
    3cbe:	00 00                	add    BYTE PTR [rax],al
    3cc0:	78 0b                	js     3ccd <_fini+0x1c9>
    3cc2:	00 00                	add    BYTE PTR [rax],al
    3cc4:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3cc7:	ac                   	lods   al,BYTE PTR ds:[rsi]
    3cc8:	0e                   	(bad)
    3cc9:	66 00 00             	data16 add BYTE PTR [rax],al
    3ccc:	00 1c 15 00 00 14 15 	add    BYTE PTR [rdx*1+0x15140000],bl
    3cd3:	00 00                	add    BYTE PTR [rax],al
    3cd5:	19 66 15             	sbb    DWORD PTR [rsi+0x15],esp
    3cd8:	00 00                	add    BYTE PTR [rax],al
    3cda:	80 23 00             	and    BYTE PTR [rbx],0x0
    3cdd:	00 00                	add    BYTE PTR [rax],al
    3cdf:	00 00                	add    BYTE PTR [rax],al
    3ce1:	00 01                	add    BYTE PTR [rcx],al
    3ce3:	6a 02                	push   0x2
    3ce5:	00 00                	add    BYTE PTR [rax],al
    3ce7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3ce8:	04 75                	add    al,0x75
    3cea:	15 00 00 3e 15       	adc    eax,0x153e0000
    3cef:	00 00                	add    BYTE PTR [rax],al
    3cf1:	3c 15                	cmp    al,0x15
    3cf3:	00 00                	add    BYTE PTR [rax],al
    3cf5:	05 a0 23 00 00       	add    eax,0x23a0
    3cfa:	00 00                	add    BYTE PTR [rax],al
    3cfc:	00 00                	add    BYTE PTR [rax],al
    3cfe:	17                   	(bad)
    3cff:	09 00                	or     DWORD PTR [rax],eax
    3d01:	00 03                	add    BYTE PTR [rbx],al
    3d03:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3d06:	32 03                	xor    al,BYTE PTR [rbx]
    3d08:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3d0c:	00 00                	add    BYTE PTR [rax],al
    3d0e:	00 00                	add    BYTE PTR [rax],al
    3d10:	13 bc 23 00 00 00 00 	adc    edi,DWORD PTR [rbx+riz*1+0x0]
    3d17:	00 00                	add    BYTE PTR [rax],al
    3d19:	3a 00                	cmp    al,BYTE PTR [rax]
    3d1b:	00 00                	add    BYTE PTR [rax],al
    3d1d:	00 00                	add    BYTE PTR [rax],al
    3d1f:	00 00                	add    BYTE PTR [rax],al
    3d21:	d9 0b                	(bad)  [rbx]
    3d23:	00 00                	add    BYTE PTR [rax],al
    3d25:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3d28:	b1 0e                	mov    cl,0xe
    3d2a:	66 00 00             	data16 add BYTE PTR [rax],al
    3d2d:	00 57 15             	add    BYTE PTR [rdi+0x15],dl
    3d30:	00 00                	add    BYTE PTR [rax],al
    3d32:	4f 15 00 00 19 66    	rex.WRXB adc rax,0x66190000
    3d38:	15 00 00 d0 23       	adc    eax,0x23d00000
    3d3d:	00 00                	add    BYTE PTR [rax],al
    3d3f:	00 00                	add    BYTE PTR [rax],al
    3d41:	00 00                	add    BYTE PTR [rax],al
    3d43:	01 7a 02             	add    DWORD PTR [rdx+0x2],edi
    3d46:	00 00                	add    BYTE PTR [rax],al
    3d48:	b2 04                	mov    dl,0x4
    3d4a:	75 15                	jne    3d61 <_fini+0x25d>
    3d4c:	00 00                	add    BYTE PTR [rax],al
    3d4e:	79 15                	jns    3d65 <_fini+0x261>
    3d50:	00 00                	add    BYTE PTR [rax],al
    3d52:	77 15                	ja     3d69 <_fini+0x265>
    3d54:	00 00                	add    BYTE PTR [rax],al
    3d56:	05 f1 23 00 00       	add    eax,0x23f1
    3d5b:	00 00                	add    BYTE PTR [rax],al
    3d5d:	00 00                	add    BYTE PTR [rax],al
    3d5f:	17                   	(bad)
    3d60:	09 00                	or     DWORD PTR [rax],eax
    3d62:	00 03                	add    BYTE PTR [rbx],al
    3d64:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3d67:	32 03                	xor    al,BYTE PTR [rbx]
    3d69:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    3d6d:	00 00                	add    BYTE PTR [rax],al
    3d6f:	00 00                	add    BYTE PTR [rax],al
    3d71:	1a 66 15             	sbb    ah,BYTE PTR [rsi+0x15]
    3d74:	00 00                	add    BYTE PTR [rax],al
    3d76:	17                   	(bad)
    3d77:	22 00                	and    al,BYTE PTR [rax]
    3d79:	00 00                	add    BYTE PTR [rax],al
    3d7b:	00 00                	add    BYTE PTR [rax],al
    3d7d:	00 01                	add    BYTE PTR [rcx],al
    3d7f:	3f                   	(bad)
    3d80:	02 00                	add    al,BYTE PTR [rax]
    3d82:	00 99 0b 1f 0c 00    	add    BYTE PTR [rcx+0xc1f0b],bl
    3d88:	00 04 75 15 00 00 8c 	add    BYTE PTR [rsi*2-0x73ffffeb],al
    3d8f:	15 00 00 8a 15       	adc    eax,0x158a0000
    3d94:	00 00                	add    BYTE PTR [rax],al
    3d96:	05 2a 22 00 00       	add    eax,0x222a
    3d9b:	00 00                	add    BYTE PTR [rax],al
    3d9d:	00 00                	add    BYTE PTR [rax],al
    3d9f:	17                   	(bad)
    3da0:	09 00                	or     DWORD PTR [rax],eax
    3da2:	00 03                	add    BYTE PTR [rbx],al
    3da4:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3da7:	32 03                	xor    al,BYTE PTR [rbx]
    3da9:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3dad:	e4 40                	in     al,0x40
	...
    3db7:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    3dba:	00 00                	add    BYTE PTR [rax],al
    3dbc:	2a 22                	sub    ah,BYTE PTR [rdx]
    3dbe:	00 00                	add    BYTE PTR [rax],al
    3dc0:	00 00                	add    BYTE PTR [rax],al
    3dc2:	00 00                	add    BYTE PTR [rax],al
    3dc4:	02 2a                	add    ch,BYTE PTR [rdx]
    3dc6:	22 00                	and    al,BYTE PTR [rax]
    3dc8:	00 00                	add    BYTE PTR [rax],al
    3dca:	00 00                	add    BYTE PTR [rax],al
    3dcc:	00 16                	add    BYTE PTR [rsi],dl
    3dce:	00 00                	add    BYTE PTR [rax],al
    3dd0:	00 00                	add    BYTE PTR [rax],al
    3dd2:	00 00                	add    BYTE PTR [rax],al
    3dd4:	00 9a 0b 71 0c 00    	add    BYTE PTR [rdx+0xc710b],bl
    3dda:	00 04 75 15 00 00 9f 	add    BYTE PTR [rsi*2-0x60ffffeb],al
    3de1:	15 00 00 9d 15       	adc    eax,0x159d0000
    3de6:	00 00                	add    BYTE PTR [rax],al
    3de8:	05 40 22 00 00       	add    eax,0x2240
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 00                	add    BYTE PTR [rax],al
    3df1:	17                   	(bad)
    3df2:	09 00                	or     DWORD PTR [rax],eax
    3df4:	00 03                	add    BYTE PTR [rbx],al
    3df6:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3df9:	32 03                	xor    al,BYTE PTR [rbx]
    3dfb:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3dff:	f2 40 00 00          	repnz rex add BYTE PTR [rax],al
    3e03:	00 00                	add    BYTE PTR [rax],al
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 00                	add    BYTE PTR [rax],al
    3e09:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    3e0c:	00 00                	add    BYTE PTR [rax],al
    3e0e:	40 22 00             	rex and al,BYTE PTR [rax]
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 02                	add    BYTE PTR [rdx],al
    3e17:	40 22 00             	rex and al,BYTE PTR [rax]
    3e1a:	00 00                	add    BYTE PTR [rax],al
    3e1c:	00 00                	add    BYTE PTR [rax],al
    3e1e:	00 16                	add    BYTE PTR [rsi],dl
    3e20:	00 00                	add    BYTE PTR [rax],al
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 9b 0b c3 0c 00    	add    BYTE PTR [rbx+0xcc30b],bl
    3e2c:	00 04 75 15 00 00 b2 	add    BYTE PTR [rsi*2-0x4dffffeb],al
    3e33:	15 00 00 b0 15       	adc    eax,0x15b00000
    3e38:	00 00                	add    BYTE PTR [rax],al
    3e3a:	05 56 22 00 00       	add    eax,0x2256
    3e3f:	00 00                	add    BYTE PTR [rax],al
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	17                   	(bad)
    3e44:	09 00                	or     DWORD PTR [rax],eax
    3e46:	00 03                	add    BYTE PTR [rbx],al
    3e48:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3e4b:	32 03                	xor    al,BYTE PTR [rbx]
    3e4d:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3e51:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    3e54:	00 00                	add    BYTE PTR [rax],al
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	00 00                	add    BYTE PTR [rax],al
    3e5a:	00 08                	add    BYTE PTR [rax],cl
    3e5c:	66 15 00 00          	adc    ax,0x0
    3e60:	56                   	push   rsi
    3e61:	22 00                	and    al,BYTE PTR [rax]
    3e63:	00 00                	add    BYTE PTR [rax],al
    3e65:	00 00                	add    BYTE PTR [rax],al
    3e67:	00 02                	add    BYTE PTR [rdx],al
    3e69:	56                   	push   rsi
    3e6a:	22 00                	and    al,BYTE PTR [rax]
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	00 13                	add    BYTE PTR [rbx],dl
    3e72:	00 00                	add    BYTE PTR [rax],al
    3e74:	00 00                	add    BYTE PTR [rax],al
    3e76:	00 00                	add    BYTE PTR [rax],al
    3e78:	00 9c 0b 15 0d 00 00 	add    BYTE PTR [rbx+rcx*1+0xd15],bl
    3e7f:	04 75                	add    al,0x75
    3e81:	15 00 00 c5 15       	adc    eax,0x15c50000
    3e86:	00 00                	add    BYTE PTR [rax],al
    3e88:	c3                   	ret
    3e89:	15 00 00 05 69       	adc    eax,0x69050000
    3e8e:	22 00                	and    al,BYTE PTR [rax]
    3e90:	00 00                	add    BYTE PTR [rax],al
    3e92:	00 00                	add    BYTE PTR [rax],al
    3e94:	00 17                	add    BYTE PTR [rdi],dl
    3e96:	09 00                	or     DWORD PTR [rax],eax
    3e98:	00 03                	add    BYTE PTR [rbx],al
    3e9a:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3e9d:	32 03                	xor    al,BYTE PTR [rbx]
    3e9f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3ea3:	0e                   	(bad)
    3ea4:	41 00 00             	add    BYTE PTR [r8],al
    3ea7:	00 00                	add    BYTE PTR [rax],al
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    3eb0:	00 00                	add    BYTE PTR [rax],al
    3eb2:	9c                   	pushf
    3eb3:	22 00                	and    al,BYTE PTR [rax]
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 00                	add    BYTE PTR [rax],al
    3eb9:	00 02                	add    BYTE PTR [rdx],al
    3ebb:	9c                   	pushf
    3ebc:	22 00                	and    al,BYTE PTR [rax]
    3ebe:	00 00                	add    BYTE PTR [rax],al
    3ec0:	00 00                	add    BYTE PTR [rax],al
    3ec2:	00 0a                	add    BYTE PTR [rdx],cl
    3ec4:	00 00                	add    BYTE PTR [rax],al
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	00 00                	add    BYTE PTR [rax],al
    3eca:	00 a0 0b 5a 0d 00    	add    BYTE PTR [rax+0xd5a0b],ah
    3ed0:	00 04 75 15 00 00 d8 	add    BYTE PTR [rsi*2-0x27ffffeb],al
    3ed7:	15 00 00 d6 15       	adc    eax,0x15d60000
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	05 a6 22 00 00       	add    eax,0x22a6
    3ee3:	00 00                	add    BYTE PTR [rax],al
    3ee5:	00 00                	add    BYTE PTR [rax],al
    3ee7:	d3 16                	rcl    DWORD PTR [rsi],cl
    3ee9:	00 00                	add    BYTE PTR [rax],al
    3eeb:	03 01                	add    eax,DWORD PTR [rcx]
    3eed:	55                   	push   rbp
    3eee:	01 3a                	add    DWORD PTR [rdx],edi
    3ef0:	00 00                	add    BYTE PTR [rax],al
    3ef2:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3ef8:	22 00                	and    al,BYTE PTR [rax]
    3efa:	00 00                	add    BYTE PTR [rax],al
    3efc:	00 00                	add    BYTE PTR [rax],al
    3efe:	00 02                	add    BYTE PTR [rdx],al
    3f00:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3f01:	22 00                	and    al,BYTE PTR [rax]
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 13                	add    BYTE PTR [rbx],dl
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 a1 0b ac 0d 00    	add    BYTE PTR [rcx+0xdac0b],ah
    3f15:	00 04 75 15 00 00 e7 	add    BYTE PTR [rsi*2-0x18ffffeb],al
    3f1c:	15 00 00 e5 15       	adc    eax,0x15e50000
    3f21:	00 00                	add    BYTE PTR [rax],al
    3f23:	05 b9 22 00 00       	add    eax,0x22b9
    3f28:	00 00                	add    BYTE PTR [rax],al
    3f2a:	00 00                	add    BYTE PTR [rax],al
    3f2c:	17                   	(bad)
    3f2d:	09 00                	or     DWORD PTR [rax],eax
    3f2f:	00 03                	add    BYTE PTR [rbx],al
    3f31:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3f34:	32 03                	xor    al,BYTE PTR [rbx]
    3f36:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3f3a:	1d 41 00 00 00       	sbb    eax,0x41
    3f3f:	00 00                	add    BYTE PTR [rax],al
    3f41:	00 00                	add    BYTE PTR [rax],al
    3f43:	00 08                	add    BYTE PTR [rax],cl
    3f45:	66 15 00 00          	adc    ax,0x0
    3f49:	f5                   	cmc
    3f4a:	22 00                	and    al,BYTE PTR [rax]
    3f4c:	00 00                	add    BYTE PTR [rax],al
    3f4e:	00 00                	add    BYTE PTR [rax],al
    3f50:	00 02                	add    BYTE PTR [rdx],al
    3f52:	f5                   	cmc
    3f53:	22 00                	and    al,BYTE PTR [rax]
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 00                	add    BYTE PTR [rax],al
    3f59:	00 0a                	add    BYTE PTR [rdx],cl
    3f5b:	00 00                	add    BYTE PTR [rax],al
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 00                	add    BYTE PTR [rax],al
    3f61:	00 a5 0b f1 0d 00    	add    BYTE PTR [rbp+0xdf10b],ah
    3f67:	00 04 75 15 00 00 fa 	add    BYTE PTR [rsi*2-0x5ffffeb],al
    3f6e:	15 00 00 f8 15       	adc    eax,0x15f80000
    3f73:	00 00                	add    BYTE PTR [rax],al
    3f75:	05 ff 22 00 00       	add    eax,0x22ff
    3f7a:	00 00                	add    BYTE PTR [rax],al
    3f7c:	00 00                	add    BYTE PTR [rax],al
    3f7e:	d3 16                	rcl    DWORD PTR [rsi],cl
    3f80:	00 00                	add    BYTE PTR [rax],al
    3f82:	03 01                	add    eax,DWORD PTR [rcx]
    3f84:	55                   	push   rbp
    3f85:	01 3a                	add    DWORD PTR [rdx],edi
    3f87:	00 00                	add    BYTE PTR [rax],al
    3f89:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    3f8c:	00 00                	add    BYTE PTR [rax],al
    3f8e:	ff 22                	jmp    QWORD PTR [rdx]
    3f90:	00 00                	add    BYTE PTR [rax],al
    3f92:	00 00                	add    BYTE PTR [rax],al
    3f94:	00 00                	add    BYTE PTR [rax],al
    3f96:	02 ff                	add    bh,bh
    3f98:	22 00                	and    al,BYTE PTR [rax]
    3f9a:	00 00                	add    BYTE PTR [rax],al
    3f9c:	00 00                	add    BYTE PTR [rax],al
    3f9e:	00 13                	add    BYTE PTR [rbx],dl
    3fa0:	00 00                	add    BYTE PTR [rax],al
    3fa2:	00 00                	add    BYTE PTR [rax],al
    3fa4:	00 00                	add    BYTE PTR [rax],al
    3fa6:	00 a6 0b 43 0e 00    	add    BYTE PTR [rsi+0xe430b],ah
    3fac:	00 04 75 15 00 00 09 	add    BYTE PTR [rsi*2+0x9000015],al
    3fb3:	16                   	(bad)
    3fb4:	00 00                	add    BYTE PTR [rax],al
    3fb6:	07                   	(bad)
    3fb7:	16                   	(bad)
    3fb8:	00 00                	add    BYTE PTR [rax],al
    3fba:	05 12 23 00 00       	add    eax,0x2312
    3fbf:	00 00                	add    BYTE PTR [rax],al
    3fc1:	00 00                	add    BYTE PTR [rax],al
    3fc3:	17                   	(bad)
    3fc4:	09 00                	or     DWORD PTR [rax],eax
    3fc6:	00 03                	add    BYTE PTR [rbx],al
    3fc8:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3fcb:	32 03                	xor    al,BYTE PTR [rbx]
    3fcd:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3fd1:	28 41 00             	sub    BYTE PTR [rcx+0x0],al
    3fd4:	00 00                	add    BYTE PTR [rax],al
    3fd6:	00 00                	add    BYTE PTR [rax],al
    3fd8:	00 00                	add    BYTE PTR [rax],al
    3fda:	00 08                	add    BYTE PTR [rax],cl
    3fdc:	66 15 00 00          	adc    ax,0x0
    3fe0:	4e 23 00             	rex.WRX and r8,QWORD PTR [rax]
    3fe3:	00 00                	add    BYTE PTR [rax],al
    3fe5:	00 00                	add    BYTE PTR [rax],al
    3fe7:	00 02                	add    BYTE PTR [rdx],al
    3fe9:	4e 23 00             	rex.WRX and r8,QWORD PTR [rax]
    3fec:	00 00                	add    BYTE PTR [rax],al
    3fee:	00 00                	add    BYTE PTR [rax],al
    3ff0:	00 0a                	add    BYTE PTR [rdx],cl
    3ff2:	00 00                	add    BYTE PTR [rax],al
    3ff4:	00 00                	add    BYTE PTR [rax],al
    3ff6:	00 00                	add    BYTE PTR [rax],al
    3ff8:	00 aa 0b 88 0e 00    	add    BYTE PTR [rdx+0xe880b],ch
    3ffe:	00 04 75 15 00 00 1c 	add    BYTE PTR [rsi*2+0x1c000015],al
    4005:	16                   	(bad)
    4006:	00 00                	add    BYTE PTR [rax],al
    4008:	1a 16                	sbb    dl,BYTE PTR [rsi]
    400a:	00 00                	add    BYTE PTR [rax],al
    400c:	05 58 23 00 00       	add    eax,0x2358
    4011:	00 00                	add    BYTE PTR [rax],al
    4013:	00 00                	add    BYTE PTR [rax],al
    4015:	d3 16                	rcl    DWORD PTR [rsi],cl
    4017:	00 00                	add    BYTE PTR [rax],al
    4019:	03 01                	add    eax,DWORD PTR [rcx]
    401b:	55                   	push   rbp
    401c:	01 3a                	add    DWORD PTR [rdx],edi
    401e:	00 00                	add    BYTE PTR [rax],al
    4020:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    4023:	00 00                	add    BYTE PTR [rax],al
    4025:	58                   	pop    rax
    4026:	23 00                	and    eax,DWORD PTR [rax]
    4028:	00 00                	add    BYTE PTR [rax],al
    402a:	00 00                	add    BYTE PTR [rax],al
    402c:	00 02                	add    BYTE PTR [rdx],al
    402e:	58                   	pop    rax
    402f:	23 00                	and    eax,DWORD PTR [rax]
    4031:	00 00                	add    BYTE PTR [rax],al
    4033:	00 00                	add    BYTE PTR [rax],al
    4035:	00 13                	add    BYTE PTR [rbx],dl
    4037:	00 00                	add    BYTE PTR [rax],al
    4039:	00 00                	add    BYTE PTR [rax],al
    403b:	00 00                	add    BYTE PTR [rax],al
    403d:	00 ab 0b da 0e 00    	add    BYTE PTR [rbx+0xeda0b],ch
    4043:	00 04 75 15 00 00 2b 	add    BYTE PTR [rsi*2+0x2b000015],al
    404a:	16                   	(bad)
    404b:	00 00                	add    BYTE PTR [rax],al
    404d:	29 16                	sub    DWORD PTR [rsi],edx
    404f:	00 00                	add    BYTE PTR [rax],al
    4051:	05 6b 23 00 00       	add    eax,0x236b
    4056:	00 00                	add    BYTE PTR [rax],al
    4058:	00 00                	add    BYTE PTR [rax],al
    405a:	17                   	(bad)
    405b:	09 00                	or     DWORD PTR [rax],eax
    405d:	00 03                	add    BYTE PTR [rbx],al
    405f:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    4062:	32 03                	xor    al,BYTE PTR [rbx]
    4064:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    4068:	33 41 00             	xor    eax,DWORD PTR [rcx+0x0]
    406b:	00 00                	add    BYTE PTR [rax],al
    406d:	00 00                	add    BYTE PTR [rax],al
    406f:	00 00                	add    BYTE PTR [rax],al
    4071:	00 08                	add    BYTE PTR [rax],cl
    4073:	66 15 00 00          	adc    ax,0x0
    4077:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4078:	23 00                	and    eax,DWORD PTR [rax]
    407a:	00 00                	add    BYTE PTR [rax],al
    407c:	00 00                	add    BYTE PTR [rax],al
    407e:	00 02                	add    BYTE PTR [rdx],al
    4080:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4081:	23 00                	and    eax,DWORD PTR [rax]
    4083:	00 00                	add    BYTE PTR [rax],al
    4085:	00 00                	add    BYTE PTR [rax],al
    4087:	00 0a                	add    BYTE PTR [rdx],cl
    4089:	00 00                	add    BYTE PTR [rax],al
    408b:	00 00                	add    BYTE PTR [rax],al
    408d:	00 00                	add    BYTE PTR [rax],al
    408f:	00 af 0b 1f 0f 00    	add    BYTE PTR [rdi+0xf1f0b],ch
    4095:	00 04 75 15 00 00 3e 	add    BYTE PTR [rsi*2+0x3e000015],al
    409c:	16                   	(bad)
    409d:	00 00                	add    BYTE PTR [rax],al
    409f:	3c 16                	cmp    al,0x16
    40a1:	00 00                	add    BYTE PTR [rax],al
    40a3:	05 b0 23 00 00       	add    eax,0x23b0
    40a8:	00 00                	add    BYTE PTR [rax],al
    40aa:	00 00                	add    BYTE PTR [rax],al
    40ac:	d3 16                	rcl    DWORD PTR [rsi],cl
    40ae:	00 00                	add    BYTE PTR [rax],al
    40b0:	03 01                	add    eax,DWORD PTR [rcx]
    40b2:	55                   	push   rbp
    40b3:	01 3a                	add    DWORD PTR [rdx],edi
    40b5:	00 00                	add    BYTE PTR [rax],al
    40b7:	08 66 15             	or     BYTE PTR [rsi+0x15],ah
    40ba:	00 00                	add    BYTE PTR [rax],al
    40bc:	b0 23                	mov    al,0x23
    40be:	00 00                	add    BYTE PTR [rax],al
    40c0:	00 00                	add    BYTE PTR [rax],al
    40c2:	00 00                	add    BYTE PTR [rax],al
    40c4:	02 b0 23 00 00 00    	add    dh,BYTE PTR [rax+0x23]
    40ca:	00 00                	add    BYTE PTR [rax],al
    40cc:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    40cf:	00 00                	add    BYTE PTR [rax],al
    40d1:	00 00                	add    BYTE PTR [rax],al
    40d3:	00 00                	add    BYTE PTR [rax],al
    40d5:	b0 0b                	mov    al,0xb
    40d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    40d8:	0f 00 00             	sldt   WORD PTR [rax]
    40db:	04 75                	add    al,0x75
    40dd:	15 00 00 4d 16       	adc    eax,0x164d0000
    40e2:	00 00                	add    BYTE PTR [rax],al
    40e4:	4b 16                	rex.WXB (bad)
    40e6:	00 00                	add    BYTE PTR [rax],al
    40e8:	05 bc 23 00 00       	add    eax,0x23bc
    40ed:	00 00                	add    BYTE PTR [rax],al
    40ef:	00 00                	add    BYTE PTR [rax],al
    40f1:	e6 16                	out    0x16,al
    40f3:	00 00                	add    BYTE PTR [rax],al
    40f5:	03 01                	add    eax,DWORD PTR [rcx]
    40f7:	55                   	push   rbp
    40f8:	09 03                	or     DWORD PTR [rbx],eax
    40fa:	3e 41 00 00          	ds add BYTE PTR [r8],al
    40fe:	00 00                	add    BYTE PTR [rax],al
    4100:	00 00                	add    BYTE PTR [rax],al
    4102:	00 00                	add    BYTE PTR [rax],al
    4104:	1a 66 15             	sbb    ah,BYTE PTR [rsi+0x15]
    4107:	00 00                	add    BYTE PTR [rax],al
    4109:	f6 23                	mul    BYTE PTR [rbx]
    410b:	00 00                	add    BYTE PTR [rax],al
    410d:	00 00                	add    BYTE PTR [rax],al
    410f:	00 00                	add    BYTE PTR [rax],al
    4111:	02 8a 02 00 00 b4    	add    cl,BYTE PTR [rdx-0x4bfffffe]
    4117:	0b a5 0f 00 00 04    	or     esp,DWORD PTR [rbp+0x400000f]
    411d:	75 15                	jne    4134 <_IO_stdin_used+0x134>
    411f:	00 00                	add    BYTE PTR [rax],al
    4121:	5c                   	pop    rsp
    4122:	16                   	(bad)
    4123:	00 00                	add    BYTE PTR [rax],al
    4125:	5a                   	pop    rdx
    4126:	16                   	(bad)
    4127:	00 00                	add    BYTE PTR [rax],al
    4129:	3a 04 24             	cmp    al,BYTE PTR [rsp]
    412c:	00 00                	add    BYTE PTR [rax],al
    412e:	00 00                	add    BYTE PTR [rax],al
    4130:	00 00                	add    BYTE PTR [rax],al
    4132:	d3 16                	rcl    DWORD PTR [rsi],cl
    4134:	00 00                	add    BYTE PTR [rax],al
    4136:	03 01                	add    eax,DWORD PTR [rcx]
    4138:	55                   	push   rbp
    4139:	01 3a                	add    DWORD PTR [rdx],edi
    413b:	00 00                	add    BYTE PTR [rax],al
    413d:	05 23 24 00 00       	add    eax,0x2423
    4142:	00 00                	add    BYTE PTR [rax],al
    4144:	00 00                	add    BYTE PTR [rax],al
    4146:	5f                   	pop    rdi
    4147:	09 00                	or     DWORD PTR [rax],eax
    4149:	00 03                	add    BYTE PTR [rbx],al
    414b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    414e:	03 b3 40 00 00 00    	add    esi,DWORD PTR [rbx+0x40]
    4154:	00 00                	add    BYTE PTR [rax],al
    4156:	00 03                	add    BYTE PTR [rbx],al
    4158:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    415c:	98                   	cwde
    415d:	40 00 00             	rex add BYTE PTR [rax],al
    4160:	00 00                	add    BYTE PTR [rax],al
    4162:	00 00                	add    BYTE PTR [rax],al
    4164:	03 01                	add    eax,DWORD PTR [rcx]
    4166:	51                   	push   rcx
    4167:	02 08                	add    cl,BYTE PTR [rax]
    4169:	97                   	xchg   edi,eax
    416a:	03 01                	add    eax,DWORD PTR [rcx]
    416c:	52                   	push   rdx
    416d:	09 03                	or     DWORD PTR [rbx],eax
    416f:	cd 40                	int    0x40
	...
    4179:	14 06                	adc    al,0x6
    417b:	01 00                	add    DWORD PTR [rax],eax
    417d:	00 f1                	add    cl,dh
    417f:	0f 00 00             	sldt   WORD PTR [rax]
    4182:	15 3a 00 00 00       	adc    eax,0x3a
    4187:	16                   	(bad)
    4188:	00 0e                	add    BYTE PTR [rsi],cl
    418a:	e1 0f                	loope  419b <_IO_stdin_used+0x19b>
    418c:	00 00                	add    BYTE PTR [rax],al
    418e:	25 9e 04 00 00       	and    eax,0x49e
    4193:	8d 53 04             	lea    edx,[rbx+0x4]
    4196:	00 00                	add    BYTE PTR [rax],al
    4198:	c0 21 00             	shl    BYTE PTR [rcx],0x0
    419b:	00 00                	add    BYTE PTR [rax],al
    419d:	00 00                	add    BYTE PTR [rax],al
    419f:	00 3e                	add    BYTE PTR [rsi],bh
    41a1:	00 00                	add    BYTE PTR [rax],al
    41a3:	00 00                	add    BYTE PTR [rax],al
    41a5:	00 00                	add    BYTE PTR [rax],al
    41a7:	00 01                	add    BYTE PTR [rcx],al
    41a9:	9c                   	pushf
    41aa:	85 10                	test   DWORD PTR [rax],edx
    41ac:	00 00                	add    BYTE PTR [rax],al
    41ae:	12 78 21             	adc    bh,BYTE PTR [rax+0x21]
    41b1:	00 00                	add    BYTE PTR [rax],al
    41b3:	8d 15 06 09 00 00    	lea    edx,[rip+0x906]        # 4abf <__GNU_EH_FRAME_HDR+0x3cf>
    41b9:	73 16                	jae    41d1 <_IO_stdin_used+0x1d1>
    41bb:	00 00                	add    BYTE PTR [rax],al
    41bd:	69 16 00 00 18 cd    	imul   edx,DWORD PTR [rsi],0xcd180000
    41c3:	03 00                	add    eax,DWORD PTR [rax]
    41c5:	00 95 10 00 00 09    	add    BYTE PTR [rbp+0x9000010],dl
    41cb:	03 b8 40 00 00 00    	add    edi,DWORD PTR [rax+0x40]
    41d1:	00 00                	add    BYTE PTR [rax],al
    41d3:	00 3b                	add    BYTE PTR [rbx],bh
    41d5:	d5 21 00 00          	{rex2 0x21} add BYTE PTR [r8],al
    41d9:	00 00                	add    BYTE PTR [rax],al
    41db:	00 00                	add    BYTE PTR [rax],al
    41dd:	33 09                	xor    ecx,DWORD PTR [rcx]
    41df:	00 00                	add    BYTE PTR [rax],al
    41e1:	05 fe 21 00 00       	add    eax,0x21fe
    41e6:	00 00                	add    BYTE PTR [rax],al
    41e8:	00 00                	add    BYTE PTR [rax],al
    41ea:	5f                   	pop    rdi
    41eb:	09 00                	or     DWORD PTR [rax],eax
    41ed:	00 03                	add    BYTE PTR [rbx],al
    41ef:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    41f2:	03 b3 40 00 00 00    	add    esi,DWORD PTR [rbx+0x40]
    41f8:	00 00                	add    BYTE PTR [rax],al
    41fa:	00 03                	add    BYTE PTR [rbx],al
    41fc:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    4200:	98                   	cwde
    4201:	40 00 00             	rex add BYTE PTR [rax],al
    4204:	00 00                	add    BYTE PTR [rax],al
    4206:	00 00                	add    BYTE PTR [rax],al
    4208:	03 01                	add    eax,DWORD PTR [rcx]
    420a:	51                   	push   rcx
    420b:	02 08                	add    cl,BYTE PTR [rax]
    420d:	8e 03                	mov    es,WORD PTR [rbx]
    420f:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4212:	03 b8 40 00 00 00    	add    edi,DWORD PTR [rax+0x40]
    4218:	00 00                	add    BYTE PTR [rax],al
    421a:	00 00                	add    BYTE PTR [rax],al
    421c:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    421f:	01 00                	add    DWORD PTR [rax],eax
    4221:	00 95 10 00 00 15    	add    BYTE PTR [rbp+0x15000010],dl
    4227:	3a 00                	cmp    al,BYTE PTR [rax]
    4229:	00 00                	add    BYTE PTR [rax],al
    422b:	14 00                	adc    al,0x0
    422d:	0e                   	(bad)
    422e:	85 10                	test   DWORD PTR [rax],edx
    4230:	00 00                	add    BYTE PTR [rax],al
    4232:	3c 3f                	cmp    al,0x3f
    4234:	09 00                	or     DWORD PTR [rax],eax
    4236:	00 01                	add    BYTE PTR [rcx],al
    4238:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4239:	0c 66                	or     al,0x66
    423b:	00 00                	add    BYTE PTR [rax],al
    423d:	00 01                	add    BYTE PTR [rcx],al
    423f:	d0 10                	rcl    BYTE PTR [rax],1
    4241:	00 00                	add    BYTE PTR [rax],al
    4243:	0d 74 09 00 00       	or     eax,0x974
    4248:	01 6f 21             	add    DWORD PTR [rdi+0x21],ebp
    424b:	d0 10                	rcl    BYTE PTR [rax],1
    424d:	00 00                	add    BYTE PTR [rax],al
    424f:	0d 7a 09 00 00       	or     eax,0x97a
    4254:	01 6f 30             	add    DWORD PTR [rdi+0x30],ebp
    4257:	d0 10                	rcl    BYTE PTR [rax],1
    4259:	00 00                	add    BYTE PTR [rax],al
    425b:	3d 38 09 00 00       	cmp    eax,0x938
    4260:	01 71 0e             	add    DWORD PTR [rcx+0xe],esi
    4263:	dd 07                	fld    QWORD PTR [rdi]
    4265:	00 00                	add    BYTE PTR [rax],al
    4267:	00 0a                	add    BYTE PTR [rdx],cl
    4269:	5b                   	pop    rbx
    426a:	08 00                	or     BYTE PTR [rax],al
    426c:	00 3e                	add    BYTE PTR [rsi],bh
    426e:	4c 09 00             	or     QWORD PTR [rax],r8
    4271:	00 01                	add    BYTE PTR [rcx],al
    4273:	61                   	(bad)
    4274:	0d 01 fa 10 00       	or     eax,0x10fa01
    4279:	00 0d 78 21 00 00    	add    BYTE PTR [rip+0x2178],cl        # 63f7 <_end+0x3df>
    427f:	01 61 1c             	add    DWORD PTR [rcx+0x1c],esp
    4282:	06                   	(bad)
    4283:	09 00                	or     DWORD PTR [rax],eax
    4285:	00 3f                	add    BYTE PTR [rdi],bh
    4287:	26 69 00 65 13 dd 07 	es imul eax,DWORD PTR [rax],0x7dd1365
    428e:	00 00                	add    BYTE PTR [rax],al
    4290:	00 00                	add    BYTE PTR [rax],al
    4292:	40 77 05             	rex ja 429a <_IO_stdin_used+0x29a>
    4295:	00 00                	add    BYTE PTR [rax],al
    4297:	01 53 05             	add    DWORD PTR [rbx+0x5],edx
    429a:	16                   	(bad)
    429b:	05 00 00 66 00       	add    eax,0x660000
    42a0:	00 00                	add    BYTE PTR [rax],al
    42a2:	01 3c 11             	add    DWORD PTR [rcx+rdx*1],edi
    42a5:	00 00                	add    BYTE PTR [rax],al
    42a7:	0d 78 21 00 00       	or     eax,0x2178
    42ac:	01 53 19             	add    DWORD PTR [rbx+0x19],edx
    42af:	06                   	(bad)
    42b0:	09 00                	or     DWORD PTR [rax],eax
    42b2:	00 0d c7 14 00 00    	add    BYTE PTR [rip+0x14c7],cl        # 577f <__FRAME_END__+0x9ef>
    42b8:	01 53 26             	add    DWORD PTR [rbx+0x26],edx
    42bb:	5b                   	pop    rbx
    42bc:	08 00                	or     BYTE PTR [rax],al
    42be:	00 41 cd             	add    BYTE PTR [rcx-0x33],al
    42c1:	03 00                	add    eax,DWORD PTR [rax]
    42c3:	00 4c 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],cl
    42c7:	00 26                	add    BYTE PTR [rsi],ah
    42c9:	69 6e 78 00 56 0e dd 	imul   ebp,DWORD PTR [rsi+0x78],0xdd0e5600
    42d0:	07                   	(bad)
    42d1:	00 00                	add    BYTE PTR [rax],al
    42d3:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    42d6:	01 00                	add    DWORD PTR [rax],eax
    42d8:	00 4c 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],cl
    42dc:	00 15 3a 00 00 00    	add    BYTE PTR [rip+0x3a],dl        # 431c <_IO_stdin_used+0x31c>
    42e2:	20 00                	and    BYTE PTR [rax],al
    42e4:	0e                   	(bad)
    42e5:	3c 11                	cmp    al,0x11
    42e7:	00 00                	add    BYTE PTR [rax],al
    42e9:	21 0f                	and    DWORD PTR [rdi],ecx
    42eb:	04 00                	add    al,0x0
    42ed:	00 3a                	add    BYTE PTR [rdx],bh
    42ef:	05 52 06 00 00       	add    eax,0x652
    42f4:	66 00 00             	data16 add BYTE PTR [rax],al
    42f7:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
    42fd:	00 00                	add    BYTE PTR [rax],al
    42ff:	00 b0 00 00 00 00    	add    BYTE PTR [rax+0x0],dh
    4305:	00 00                	add    BYTE PTR [rax],al
    4307:	00 01                	add    BYTE PTR [rcx],al
    4309:	9c                   	pushf
    430a:	b2 12                	mov    dl,0x12
    430c:	00 00                	add    BYTE PTR [rax],al
    430e:	12 78 21             	adc    bh,BYTE PTR [rax+0x21]
    4311:	00 00                	add    BYTE PTR [rax],al
    4313:	3a 17                	cmp    dl,BYTE PTR [rdi]
    4315:	06                   	(bad)
    4316:	09 00                	or     DWORD PTR [rax],eax
    4318:	00 a5 16 00 00 9d    	add    BYTE PTR [rbp-0x62ffffea],ah
    431e:	16                   	(bad)
    431f:	00 00                	add    BYTE PTR [rax],al
    4321:	12 c7                	adc    al,bh
    4323:	14 00                	adc    al,0x0
    4325:	00 3a                	add    BYTE PTR [rdx],bh
    4327:	24 5b                	and    al,0x5b
    4329:	08 00                	or     BYTE PTR [rax],al
    432b:	00 cb                	add    bl,cl
    432d:	16                   	(bad)
    432e:	00 00                	add    BYTE PTR [rax],al
    4330:	c5 16 00             	(bad)
    4333:	00 18                	add    BYTE PTR [rax],bl
    4335:	cd 03                	int    0x3
    4337:	00 00                	add    BYTE PTR [rax],al
    4339:	c2 12 00             	ret    0x12
    433c:	00 09                	add    BYTE PTR [rcx],cl
    433e:	03 10                	add    edx,DWORD PTR [rax]
    4340:	44 00 00             	add    BYTE PTR [rax],r8b
    4343:	00 00                	add    BYTE PTR [rax],al
    4345:	00 00                	add    BYTE PTR [rax],al
    4347:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    434b:	00 3d 0e dd 07 00    	add    BYTE PTR [rip+0x7dd0e],bh        # 8205f <_end+0x7c047>
    4351:	00 f4                	add    ah,dh
    4353:	16                   	(bad)
    4354:	00 00                	add    BYTE PTR [rax],al
    4356:	f0 16                	lock (bad)
    4358:	00 00                	add    BYTE PTR [rax],al
    435a:	1b 95 04 00 00 44    	sbb    edx,DWORD PTR [rbp+0x44000004]
    4360:	0e                   	(bad)
    4361:	dd 07                	fld    QWORD PTR [rdi]
    4363:	00 00                	add    BYTE PTR [rax],al
    4365:	08 17                	or     BYTE PTR [rdi],dl
    4367:	00 00                	add    BYTE PTR [rax],al
    4369:	04 17                	add    al,0x17
    436b:	00 00                	add    BYTE PTR [rax],al
    436d:	1b 14 06             	sbb    edx,DWORD PTR [rsi+rax*1]
    4370:	00 00                	add    BYTE PTR [rax],al
    4372:	45 0e                	rex.RB (bad)
    4374:	dd 07                	fld    QWORD PTR [rdi]
    4376:	00 00                	add    BYTE PTR [rax],al
    4378:	19 17                	sbb    DWORD PTR [rdi],edx
    437a:	00 00                	add    BYTE PTR [rax],al
    437c:	17                   	(bad)
    437d:	17                   	(bad)
    437e:	00 00                	add    BYTE PTR [rax],al
    4380:	1a fa                	sbb    bh,dl
    4382:	10 00                	adc    BYTE PTR [rax],al
    4384:	00 c3                	add    bl,al
    4386:	20 00                	and    BYTE PTR [rax],al
    4388:	00 00                	add    BYTE PTR [rax],al
    438a:	00 00                	add    BYTE PTR [rax],al
    438c:	00 01                	add    BYTE PTR [rcx],al
    438e:	2a 02                	sub    al,BYTE PTR [rdx]
    4390:	00 00                	add    BYTE PTR [rax],al
    4392:	3d 21 76 12 00       	cmp    eax,0x127621
    4397:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
    439a:	11 00                	adc    DWORD PTR [rax],eax
    439c:	00 26                	add    BYTE PTR [rsi],ah
    439e:	17                   	(bad)
    439f:	00 00                	add    BYTE PTR [rax],al
    43a1:	22 17                	and    dl,BYTE PTR [rdi]
    43a3:	00 00                	add    BYTE PTR [rax],al
    43a5:	04 0f                	add    al,0xf
    43a7:	11 00                	adc    DWORD PTR [rax],eax
    43a9:	00 43 17             	add    BYTE PTR [rbx+0x17],al
    43ac:	00 00                	add    BYTE PTR [rax],al
    43ae:	3d 17 00 00 42       	cmp    eax,0x42000017
    43b3:	2a 02                	sub    al,BYTE PTR [rdx]
    43b5:	00 00                	add    BYTE PTR [rax],al
    43b7:	11 30                	adc    DWORD PTR [rax],esi
    43b9:	11 00                	adc    DWORD PTR [rax],eax
    43bb:	00 61 17             	add    BYTE PTR [rcx+0x17],ah
    43be:	00 00                	add    BYTE PTR [rax],al
    43c0:	59                   	pop    rcx
    43c1:	17                   	(bad)
    43c2:	00 00                	add    BYTE PTR [rax],al
    43c4:	20 9a 10 00 00 d9    	and    BYTE PTR [rdx-0x26fffff0],bl
    43ca:	20 00                	and    BYTE PTR [rax],al
    43cc:	00 00                	add    BYTE PTR [rax],al
    43ce:	00 00                	add    BYTE PTR [rax],al
    43d0:	00 00                	add    BYTE PTR [rax],al
    43d2:	d9 20                	fldenv [rax]
    43d4:	00 00                	add    BYTE PTR [rax],al
    43d6:	00 00                	add    BYTE PTR [rax],al
    43d8:	00 00                	add    BYTE PTR [rax],al
    43da:	18 00                	sbb    BYTE PTR [rax],al
    43dc:	00 00                	add    BYTE PTR [rax],al
    43de:	00 00                	add    BYTE PTR [rax],al
    43e0:	00 00                	add    BYTE PTR [rax],al
    43e2:	59                   	pop    rcx
    43e3:	19 04 b7             	sbb    DWORD PTR [rdi+rsi*4],eax
    43e6:	10 00                	adc    BYTE PTR [rax],al
    43e8:	00 80 17 00 00 7e    	add    BYTE PTR [rax+0x7e000017],al
    43ee:	17                   	(bad)
    43ef:	00 00                	add    BYTE PTR [rax],al
    43f1:	04 ab                	add    al,0xab
    43f3:	10 00                	adc    BYTE PTR [rax],al
    43f5:	00 8c 17 00 00 8a 17 	add    BYTE PTR [rdi+rdx*1+0x178a0000],cl
    43fc:	00 00                	add    BYTE PTR [rax],al
    43fe:	11 c3                	adc    ebx,eax
    4400:	10 00                	adc    BYTE PTR [rax],al
    4402:	00 9d 17 00 00 99    	add    BYTE PTR [rbp-0x66ffffe9],bl
    4408:	17                   	(bad)
    4409:	00 00                	add    BYTE PTR [rax],al
    440b:	00 00                	add    BYTE PTR [rax],al
    440d:	00 05 60 21 00 00    	add    BYTE PTR [rip+0x2160],al        # 6573 <_end+0x55b>
    4413:	00 00                	add    BYTE PTR [rax],al
    4415:	00 00                	add    BYTE PTR [rax],al
    4417:	5f                   	pop    rdi
    4418:	09 00                	or     DWORD PTR [rax],eax
    441a:	00 03                	add    BYTE PTR [rbx],al
    441c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    441f:	03 b3 40 00 00 00    	add    esi,DWORD PTR [rbx+0x40]
    4425:	00 00                	add    BYTE PTR [rax],al
    4427:	00 03                	add    BYTE PTR [rbx],al
    4429:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    442d:	98                   	cwde
    442e:	40 00 00             	rex add BYTE PTR [rax],al
    4431:	00 00                	add    BYTE PTR [rax],al
    4433:	00 00                	add    BYTE PTR [rax],al
    4435:	03 01                	add    eax,DWORD PTR [rcx]
    4437:	51                   	push   rcx
    4438:	02 08                	add    cl,BYTE PTR [rax]
    443a:	3b 03                	cmp    eax,DWORD PTR [rbx]
    443c:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    443f:	03 10                	add    edx,DWORD PTR [rax]
    4441:	44 00 00             	add    BYTE PTR [rax],r8b
    4444:	00 00                	add    BYTE PTR [rax],al
    4446:	00 00                	add    BYTE PTR [rax],al
    4448:	00 00                	add    BYTE PTR [rax],al
    444a:	14 06                	adc    al,0x6
    444c:	01 00                	add    DWORD PTR [rax],eax
    444e:	00 c2                	add    dl,al
    4450:	12 00                	adc    al,BYTE PTR [rax]
    4452:	00 15 3a 00 00 00    	add    BYTE PTR [rip+0x3a],dl        # 4492 <_IO_stdin_used+0x492>
    4458:	1e                   	(bad)
    4459:	00 0e                	add    BYTE PTR [rsi],cl
    445b:	b2 12                	mov    dl,0x12
    445d:	00 00                	add    BYTE PTR [rax],al
    445f:	21 3e                	and    DWORD PTR [rsi],edi
    4461:	05 00 00 1d 05       	add    eax,0x51d0000
    4466:	71 06                	jno    446e <_IO_stdin_used+0x46e>
    4468:	00 00                	add    BYTE PTR [rax],al
    446a:	66 00 00             	data16 add BYTE PTR [rax],al
    446d:	00 50 1f             	add    BYTE PTR [rax+0x1f],dl
    4470:	00 00                	add    BYTE PTR [rax],al
    4472:	00 00                	add    BYTE PTR [rax],al
    4474:	00 00                	add    BYTE PTR [rax],al
    4476:	5f                   	pop    rdi
    4477:	01 00                	add    DWORD PTR [rax],eax
    4479:	00 00                	add    BYTE PTR [rax],al
    447b:	00 00                	add    BYTE PTR [rax],al
    447d:	00 01                	add    BYTE PTR [rcx],al
    447f:	9c                   	pushf
    4480:	e4 14                	in     al,0x14
    4482:	00 00                	add    BYTE PTR [rax],al
    4484:	12 78 21             	adc    bh,BYTE PTR [rax+0x21]
    4487:	00 00                	add    BYTE PTR [rax],al
    4489:	1d 18 06 09 00       	sbb    eax,0x90618
    448e:	00 bd 17 00 00 ad    	add    BYTE PTR [rbp-0x52ffffe9],bh
    4494:	17                   	(bad)
    4495:	00 00                	add    BYTE PTR [rax],al
    4497:	12 c7                	adc    al,bh
    4499:	14 00                	adc    al,0x0
    449b:	00 1d 25 5b 08 00    	add    BYTE PTR [rip+0x85b25],bl        # 89fc6 <_end+0x83fae>
    44a1:	00 05 18 00 00 ff    	add    BYTE PTR [rip+0xffffffffff000018],al        # ffffffffff0044bf <_end+0xfffffffffeffe4a7>
    44a7:	17                   	(bad)
    44a8:	00 00                	add    BYTE PTR [rax],al
    44aa:	18 cd                	sbb    ch,cl
    44ac:	03 00                	add    eax,DWORD PTR [rax]
    44ae:	00 f4                	add    ah,dh
    44b0:	14 00                	adc    al,0x0
    44b2:	00 09                	add    BYTE PTR [rcx],cl
    44b4:	03 f0                	add    esi,eax
    44b6:	43 00 00             	rex.XB add BYTE PTR [r8],al
    44b9:	00 00                	add    BYTE PTR [rax],al
    44bb:	00 00                	add    BYTE PTR [rax],al
    44bd:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    44c1:	00 20                	add    BYTE PTR [rax],ah
    44c3:	0e                   	(bad)
    44c4:	dd 07                	fld    QWORD PTR [rdi]
    44c6:	00 00                	add    BYTE PTR [rax],al
    44c8:	30 18                	xor    BYTE PTR [rax],bl
    44ca:	00 00                	add    BYTE PTR [rax],al
    44cc:	2a 18                	sub    bl,BYTE PTR [rax]
    44ce:	00 00                	add    BYTE PTR [rax],al
    44d0:	27                   	(bad)
    44d1:	1f                   	(bad)
    44d2:	02 00                	add    al,BYTE PTR [rax]
    44d4:	00 55 13             	add    BYTE PTR [rbp+0x13],dl
    44d7:	00 00                	add    BYTE PTR [rax],al
    44d9:	1b 67 09             	sbb    esp,DWORD PTR [rdi+0x9]
    44dc:	00 00                	add    BYTE PTR [rax],al
    44de:	28 12                	sub    BYTE PTR [rdx],dl
    44e0:	dd 07                	fld    QWORD PTR [rdi]
    44e2:	00 00                	add    BYTE PTR [rax],al
    44e4:	4b 18 00             	rex.WXB sbb BYTE PTR [r8],al
    44e7:	00 47 18             	add    BYTE PTR [rdi+0x18],al
    44ea:	00 00                	add    BYTE PTR [rax],al
    44ec:	00 08                	add    BYTE PTR [rax],cl
    44ee:	fa                   	cli
    44ef:	10 00                	adc    BYTE PTR [rax],al
    44f1:	00 64 1f 00          	add    BYTE PTR [rdi+rbx*1+0x0],ah
    44f5:	00 00                	add    BYTE PTR [rax],al
    44f7:	00 00                	add    BYTE PTR [rax],al
    44f9:	00 01                	add    BYTE PTR [rcx],al
    44fb:	64 1f                	fs (bad)
    44fd:	00 00                	add    BYTE PTR [rax],al
    44ff:	00 00                	add    BYTE PTR [rax],al
    4501:	00 00                	add    BYTE PTR [rax],al
    4503:	42 00 00             	rex.X add BYTE PTR [rax],al
    4506:	00 00                	add    BYTE PTR [rax],al
    4508:	00 00                	add    BYTE PTR [rax],al
    450a:	00 20                	add    BYTE PTR [rax],ah
    450c:	21 e9                	and    ecx,ebp
    450e:	13 00                	adc    eax,DWORD PTR [rax]
    4510:	00 04 1b             	add    BYTE PTR [rbx+rbx*1],al
    4513:	11 00                	adc    DWORD PTR [rax],eax
    4515:	00 5d 18             	add    BYTE PTR [rbp+0x18],bl
    4518:	00 00                	add    BYTE PTR [rax],al
    451a:	5b                   	pop    rbx
    451b:	18 00                	sbb    BYTE PTR [rax],al
    451d:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    4520:	11 00                	adc    DWORD PTR [rax],eax
    4522:	00 6d 18             	add    BYTE PTR [rbp+0x18],ch
    4525:	00 00                	add    BYTE PTR [rax],al
    4527:	69 18 00 00 11 30    	imul   ebx,DWORD PTR [rax],0x30110000
    452d:	11 00                	adc    DWORD PTR [rax],eax
    452f:	00 82 18 00 00 7c    	add    BYTE PTR [rdx+0x7c000018],al
    4535:	18 00                	sbb    BYTE PTR [rax],al
    4537:	00 20                	add    BYTE PTR [rax],ah
    4539:	9a                   	(bad)
    453a:	10 00                	adc    BYTE PTR [rax],al
    453c:	00 8c 1f 00 00 00 00 	add    BYTE PTR [rdi+rbx*1+0x0],cl
    4543:	00 00                	add    BYTE PTR [rax],al
    4545:	00 8c 1f 00 00 00 00 	add    BYTE PTR [rdi+rbx*1+0x0],cl
    454c:	00 00                	add    BYTE PTR [rax],al
    454e:	16                   	(bad)
    454f:	00 00                	add    BYTE PTR [rax],al
    4551:	00 00                	add    BYTE PTR [rax],al
    4553:	00 00                	add    BYTE PTR [rax],al
    4555:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    4558:	04 b7                	add    al,0xb7
    455a:	10 00                	adc    BYTE PTR [rax],al
    455c:	00 9b 18 00 00 99    	add    BYTE PTR [rbx-0x66ffffe8],bl
    4562:	18 00                	sbb    BYTE PTR [rax],al
    4564:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    4567:	10 00                	adc    BYTE PTR [rax],al
    4569:	00 a7 18 00 00 a5    	add    BYTE PTR [rdi-0x5affffe8],ah
    456f:	18 00                	sbb    BYTE PTR [rax],al
    4571:	00 11                	add    BYTE PTR [rcx],dl
    4573:	c3                   	ret
    4574:	10 00                	adc    BYTE PTR [rax],al
    4576:	00 b8 18 00 00 b4    	add    BYTE PTR [rax-0x4bffffe8],bh
    457c:	18 00                	sbb    BYTE PTR [rax],al
    457e:	00 00                	add    BYTE PTR [rax],al
    4580:	00 08                	add    BYTE PTR [rax],cl
    4582:	d5 10 00 00          	add    BYTE PTR [r16],al
    4586:	bb 1f 00 00 00       	mov    ebx,0x1f
    458b:	00 00                	add    BYTE PTR [rax],al
    458d:	00 01                	add    BYTE PTR [rcx],al
    458f:	bb 1f 00 00 00       	mov    ebx,0x1f
    4594:	00 00                	add    BYTE PTR [rax],al
    4596:	00 68 00             	add    BYTE PTR [rax+0x0],ch
    4599:	00 00                	add    BYTE PTR [rax],al
    459b:	00 00                	add    BYTE PTR [rax],al
    459d:	00 00                	add    BYTE PTR [rax],al
    459f:	35 33 a9 14 00       	xor    eax,0x14a933
    45a4:	00 04 e2             	add    BYTE PTR [rdx+riz*8],al
    45a7:	10 00                	adc    BYTE PTR [rax],al
    45a9:	00 cc                	add    ah,cl
    45ab:	18 00                	sbb    BYTE PTR [rax],al
    45ad:	00 c8                	add    al,cl
    45af:	18 00                	sbb    BYTE PTR [rax],al
    45b1:	00 1a                	add    BYTE PTR [rdx],bl
    45b3:	83 15 00 00 df 1f 00 	adc    DWORD PTR [rip+0x1fdf0000],0x0        # 1fdf45ba <_end+0x1fdee5a2>
    45ba:	00 00                	add    BYTE PTR [rax],al
    45bc:	00 00                	add    BYTE PTR [rax],al
    45be:	00 00                	add    BYTE PTR [rax],al
    45c0:	0f 02 00             	lar    eax,WORD PTR [rax]
    45c3:	00 64 0b 6d          	add    BYTE PTR [rbx+rcx*1+0x6d],ah
    45c7:	14 00                	adc    al,0x0
    45c9:	00 04 aa             	add    BYTE PTR [rdx+rbp*4],al
    45cc:	15 00 00 dd 18       	adc    eax,0x18dd0000
    45d1:	00 00                	add    BYTE PTR [rax],al
    45d3:	db 18                	fistp  DWORD PTR [rax]
    45d5:	00 00                	add    BYTE PTR [rax],al
    45d7:	04 9e                	add    al,0x9e
    45d9:	15 00 00 e7 18       	adc    eax,0x18e70000
    45de:	00 00                	add    BYTE PTR [rax],al
    45e0:	e5 18                	in     eax,0x18
    45e2:	00 00                	add    BYTE PTR [rax],al
    45e4:	04 92                	add    al,0x92
    45e6:	15 00 00 f4 18       	adc    eax,0x18f40000
    45eb:	00 00                	add    BYTE PTR [rax],al
    45ed:	f0 18 00             	lock sbb BYTE PTR [rax],al
    45f0:	00 05 f4 1f 00 00    	add    BYTE PTR [rip+0x1ff4],al        # 65ea <_end+0x5d2>
    45f6:	00 00                	add    BYTE PTR [rax],al
    45f8:	00 00                	add    BYTE PTR [rax],al
    45fa:	ef                   	out    dx,eax
    45fb:	16                   	(bad)
    45fc:	00 00                	add    BYTE PTR [rax],al
    45fe:	03 01                	add    eax,DWORD PTR [rcx]
    4600:	54                   	push   rsp
    4601:	01 30                	add    DWORD PTR [rax],esi
    4603:	00 00                	add    BYTE PTR [rax],al
    4605:	43 ee                	rex.XB out dx,al
    4607:	10 00                	adc    BYTE PTR [rax],al
    4609:	00 f4                	add    ah,dh
    460b:	1f                   	(bad)
    460c:	00 00                	add    BYTE PTR [rax],al
    460e:	00 00                	add    BYTE PTR [rax],al
    4610:	00 00                	add    BYTE PTR [rax],al
    4612:	2f                   	(bad)
    4613:	00 00                	add    BYTE PTR [rax],al
    4615:	00 00                	add    BYTE PTR [rax],al
    4617:	00 00                	add    BYTE PTR [rax],al
    4619:	00 94 14 00 00 11 ef 	add    BYTE PTR [rsp+rdx*1-0x10ef0000],dl
    4620:	10 00                	adc    BYTE PTR [rax],al
    4622:	00 12                	add    BYTE PTR [rdx],dl
    4624:	19 00                	sbb    DWORD PTR [rax],eax
    4626:	00 08                	add    BYTE PTR [rax],cl
    4628:	19 00                	sbb    DWORD PTR [rax],eax
    462a:	00 00                	add    BYTE PTR [rax],al
    462c:	05 cf 1f 00 00       	add    eax,0x1fcf
    4631:	00 00                	add    BYTE PTR [rax],al
    4633:	00 00                	add    BYTE PTR [rax],al
    4635:	44 09 00             	or     DWORD PTR [rax],r8d
    4638:	00 03                	add    BYTE PTR [rbx],al
    463a:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    463e:	00 00                	add    BYTE PTR [rax],al
    4640:	00 05 af 20 00 00    	add    BYTE PTR [rip+0x20af],al        # 66f5 <_end+0x6dd>
    4646:	00 00                	add    BYTE PTR [rax],al
    4648:	00 00                	add    BYTE PTR [rax],al
    464a:	5f                   	pop    rdi
    464b:	09 00                	or     DWORD PTR [rax],eax
    464d:	00 03                	add    BYTE PTR [rbx],al
    464f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    4652:	03 b3 40 00 00 00    	add    esi,DWORD PTR [rbx+0x40]
    4658:	00 00                	add    BYTE PTR [rax],al
    465a:	00 03                	add    BYTE PTR [rbx],al
    465c:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    4660:	98                   	cwde
    4661:	40 00 00             	rex add BYTE PTR [rax],al
    4664:	00 00                	add    BYTE PTR [rax],al
    4666:	00 00                	add    BYTE PTR [rax],al
    4668:	03 01                	add    eax,DWORD PTR [rcx]
    466a:	51                   	push   rcx
    466b:	01 4e 03             	add    DWORD PTR [rsi+0x3],ecx
    466e:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4671:	03 f0                	add    esi,eax
    4673:	43 00 00             	rex.XB add BYTE PTR [r8],al
    4676:	00 00                	add    BYTE PTR [rax],al
    4678:	00 00                	add    BYTE PTR [rax],al
    467a:	00 00                	add    BYTE PTR [rax],al
    467c:	14 06                	adc    al,0x6
    467e:	01 00                	add    DWORD PTR [rax],eax
    4680:	00 f4                	add    ah,dh
    4682:	14 00                	adc    al,0x0
    4684:	00 15 3a 00 00 00    	add    BYTE PTR [rip+0x3a],dl        # 46c4 <_IO_stdin_used+0x6c4>
    468a:	1f                   	(bad)
    468b:	00 0e                	add    BYTE PTR [rsi],cl
    468d:	e4 14                	in     al,0x14
    468f:	00 00                	add    BYTE PTR [rax],al
    4691:	21 f5                	and    ebp,esi
    4693:	04 00                	add    al,0x0
    4695:	00 0d 06 fe 04 00    	add    BYTE PTR [rip+0x4fe06],cl        # 544a1 <_end+0x4e489>
    469b:	00 fa                	add    dl,bh
    469d:	08 00                	or     BYTE PTR [rax],al
    469f:	00 f0                	add    al,dh
    46a1:	1e                   	(bad)
    46a2:	00 00                	add    BYTE PTR [rax],al
    46a4:	00 00                	add    BYTE PTR [rax],al
    46a6:	00 00                	add    BYTE PTR [rax],al
    46a8:	5d                   	pop    rbp
    46a9:	00 00                	add    BYTE PTR [rax],al
    46ab:	00 00                	add    BYTE PTR [rax],al
    46ad:	00 00                	add    BYTE PTR [rax],al
    46af:	00 01                	add    BYTE PTR [rcx],al
    46b1:	9c                   	pushf
    46b2:	66 15 00 00          	adc    ax,0x0
    46b6:	1b 78 21             	sbb    edi,DWORD PTR [rax+0x21]
    46b9:	00 00                	add    BYTE PTR [rax],al
    46bb:	0e                   	(bad)
    46bc:	0a fa                	or     bh,dl
    46be:	08 00                	or     BYTE PTR [rax],al
    46c0:	00 3d 19 00 00 37    	add    BYTE PTR [rip+0x37000019],bh        # 370046df <_end+0x36ffe6c7>
    46c6:	19 00                	sbb    DWORD PTR [rax],eax
    46c8:	00 27                	add    BYTE PTR [rdi],ah
    46ca:	ff 01                	inc    DWORD PTR [rcx]
    46cc:	00 00                	add    BYTE PTR [rax],al
    46ce:	4c 15 00 00 0f 69    	rex.WR adc rax,0x690f0000
    46d4:	00 15 13 dd 07 00    	add    BYTE PTR [rip+0x7dd13],dl        # 823ed <_end+0x7c3d5>
    46da:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    46dd:	00 00                	add    BYTE PTR [rax],al
    46df:	53                   	push   rbx
    46e0:	19 00                	sbb    DWORD PTR [rax],eax
    46e2:	00 00                	add    BYTE PTR [rax],al
    46e4:	05 07 1f 00 00       	add    eax,0x1f07
    46e9:	00 00                	add    BYTE PTR [rax],al
    46eb:	00 00                	add    BYTE PTR [rax],al
    46ed:	80 09 00             	or     BYTE PTR [rcx],0x0
    46f0:	00 03                	add    BYTE PTR [rbx],al
    46f2:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    46f5:	34 03                	xor    al,0x3
    46f7:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
    46fb:	20 00                	and    BYTE PTR [rax],al
    46fd:	00 28                	add    BYTE PTR [rax],ch
    46ff:	a1 2d 00 00 03 54 66 	movabs eax,ds:0x66540300002d
    4706:	00 00 
    4708:	00 83 15 00 00 0d    	add    BYTE PTR [rbx+0xd000015],al
    470e:	3b 06                	cmp    eax,DWORD PTR [rsi]
    4710:	00 00                	add    BYTE PTR [rax],al
    4712:	03 54 20 fa          	add    edx,DWORD PTR [rax+riz*1-0x6]
    4716:	00 00                	add    BYTE PTR [rax],al
    4718:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    471b:	28 f4                	sub    ah,dh
    471d:	17                   	(bad)
    471e:	00 00                	add    BYTE PTR [rax],al
    4720:	02 39                	add    bh,BYTE PTR [rcx]
    4722:	33 01                	xor    eax,DWORD PTR [rcx]
    4724:	00 00                	add    BYTE PTR [rax],al
    4726:	b7 15                	mov    bh,0x15
    4728:	00 00                	add    BYTE PTR [rax],al
    472a:	0d 37 05 00 00       	or     eax,0x537
    472f:	02 39                	add    bh,BYTE PTR [rcx]
    4731:	01 33                	add    DWORD PTR [rbx],esi
    4733:	01 00                	add    DWORD PTR [rax],eax
    4735:	00 0d 79 03 00 00    	add    BYTE PTR [rip+0x379],cl        # 4ab4 <__GNU_EH_FRAME_HDR+0x3c4>
    473b:	02 39                	add    bh,BYTE PTR [rcx]
    473d:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4740:	00 00                	add    BYTE PTR [rax],al
    4742:	0d 6e 04 00 00       	or     eax,0x46e
    4747:	02 39                	add    bh,BYTE PTR [rcx]
    4749:	01 2e                	add    DWORD PTR [rsi],ebp
    474b:	00 00                	add    BYTE PTR [rax],al
    474d:	00 00                	add    BYTE PTR [rax],al
    474f:	44 fa                	rex.R cli
    4751:	10 00                	adc    BYTE PTR [rax],al
    4753:	00 c0                	add    al,al
    4755:	1e                   	(bad)
    4756:	00 00                	add    BYTE PTR [rax],al
    4758:	00 00                	add    BYTE PTR [rax],al
    475a:	00 00                	add    BYTE PTR [rax],al
    475c:	25 00 00 00 00       	and    eax,0x0
    4761:	00 00                	add    BYTE PTR [rax],al
    4763:	00 01                	add    BYTE PTR [rcx],al
    4765:	9c                   	pushf
    4766:	25 16 00 00 45       	and    eax,0x45000016
    476b:	30 11                	xor    BYTE PTR [rcx],dl
    476d:	00 00                	add    BYTE PTR [rax],al
    476f:	46 1b 11             	rex.RX sbb r10d,DWORD PTR [rcx]
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	04 0f                	add    al,0xf
    4776:	11 00                	adc    DWORD PTR [rax],eax
    4778:	00 79 19             	add    BYTE PTR [rcx+0x19],bh
    477b:	00 00                	add    BYTE PTR [rax],al
    477d:	77 19                	ja     4798 <__GNU_EH_FRAME_HDR+0xa8>
    477f:	00 00                	add    BYTE PTR [rax],al
    4781:	05 e5 1e 00 00       	add    eax,0x1ee5
    4786:	00 00                	add    BYTE PTR [rax],al
    4788:	00 00                	add    BYTE PTR [rax],al
    478a:	5f                   	pop    rdi
    478b:	09 00                	or     DWORD PTR [rax],eax
    478d:	00 03                	add    BYTE PTR [rbx],al
    478f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    4792:	03 b3 40 00 00 00    	add    esi,DWORD PTR [rbx+0x40]
    4798:	00 00                	add    BYTE PTR [rax],al
    479a:	00 03                	add    BYTE PTR [rbx],al
    479c:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    47a0:	98                   	cwde
    47a1:	40 00 00             	rex add BYTE PTR [rax],al
    47a4:	00 00                	add    BYTE PTR [rax],al
    47a6:	00 00                	add    BYTE PTR [rax],al
    47a8:	03 01                	add    eax,DWORD PTR [rcx]
    47aa:	51                   	push   rcx
    47ab:	02 08                	add    cl,BYTE PTR [rax]
    47ad:	54                   	push   rsp
    47ae:	03 01                	add    eax,DWORD PTR [rcx]
    47b0:	52                   	push   rdx
    47b1:	09 03                	or     DWORD PTR [rbx],eax
    47b3:	c8 43 00 00          	enter  0x43,0x0
    47b7:	00 00                	add    BYTE PTR [rax],al
    47b9:	00 00                	add    BYTE PTR [rax],al
    47bb:	00 00                	add    BYTE PTR [rax],al
    47bd:	47 fa                	rex.RXB cli
    47bf:	10 00                	adc    BYTE PTR [rax],al
    47c1:	00 16                	add    BYTE PTR [rsi],dl
    47c3:	05 00 00 60 21       	add    eax,0x21600000
    47c8:	00 00                	add    BYTE PTR [rax],al
    47ca:	00 00                	add    BYTE PTR [rax],al
    47cc:	00 00                	add    BYTE PTR [rax],al
    47ce:	52                   	push   rdx
    47cf:	00 00                	add    BYTE PTR [rax],al
    47d1:	00 00                	add    BYTE PTR [rax],al
    47d3:	00 00                	add    BYTE PTR [rax],al
    47d5:	00 01                	add    BYTE PTR [rcx],al
    47d7:	9c                   	pushf
    47d8:	cd 16                	int    0x16
    47da:	00 00                	add    BYTE PTR [rax],al
    47dc:	04 0f                	add    al,0xf
    47de:	11 00                	adc    DWORD PTR [rax],eax
    47e0:	00 8c 19 00 00 84 19 	add    BYTE PTR [rcx+rbx*1+0x19840000],cl
    47e7:	00 00                	add    BYTE PTR [rax],al
    47e9:	04 1b                	add    al,0x1b
    47eb:	11 00                	adc    DWORD PTR [rax],eax
    47ed:	00 b5 19 00 00 af    	add    BYTE PTR [rbp-0x50ffffe7],dh
    47f3:	19 00                	sbb    DWORD PTR [rax],eax
    47f5:	00 11                	add    BYTE PTR [rcx],dl
    47f7:	30 11                	xor    BYTE PTR [rcx],dl
    47f9:	00 00                	add    BYTE PTR [rax],al
    47fb:	de 19                	ficomp WORD PTR [rcx]
    47fd:	00 00                	add    BYTE PTR [rax],al
    47ff:	da 19                	ficomp DWORD PTR [rcx]
    4801:	00 00                	add    BYTE PTR [rax],al
    4803:	08 9a 10 00 00 87    	or     BYTE PTR [rdx-0x78fffff0],bl
    4809:	21 00                	and    DWORD PTR [rax],eax
    480b:	00 00                	add    BYTE PTR [rax],al
    480d:	00 00                	add    BYTE PTR [rax],al
    480f:	00 00                	add    BYTE PTR [rax],al
    4811:	87 21                	xchg   DWORD PTR [rcx],esp
    4813:	00 00                	add    BYTE PTR [rax],al
    4815:	00 00                	add    BYTE PTR [rax],al
    4817:	00 00                	add    BYTE PTR [rax],al
    4819:	16                   	(bad)
    481a:	00 00                	add    BYTE PTR [rax],al
    481c:	00 00                	add    BYTE PTR [rax],al
    481e:	00 00                	add    BYTE PTR [rax],al
    4820:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    4823:	b7 16                	mov    bh,0x16
    4825:	00 00                	add    BYTE PTR [rax],al
    4827:	04 b7                	add    al,0xb7
    4829:	10 00                	adc    BYTE PTR [rax],al
    482b:	00 f0                	add    al,dh
    482d:	19 00                	sbb    DWORD PTR [rax],eax
    482f:	00 ee                	add    dh,ch
    4831:	19 00                	sbb    DWORD PTR [rax],eax
    4833:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    4836:	10 00                	adc    BYTE PTR [rax],al
    4838:	00 fc                	add    ah,bh
    483a:	19 00                	sbb    DWORD PTR [rax],eax
    483c:	00 fa                	add    dl,bh
    483e:	19 00                	sbb    DWORD PTR [rax],eax
    4840:	00 11                	add    BYTE PTR [rcx],dl
    4842:	c3                   	ret
    4843:	10 00                	adc    BYTE PTR [rax],al
    4845:	00 0d 1a 00 00 09    	add    BYTE PTR [rip+0x900001a],cl        # 9004865 <_end+0x8ffe84d>
    484b:	1a 00                	sbb    al,BYTE PTR [rax]
    484d:	00 00                	add    BYTE PTR [rax],al
    484f:	05 b2 21 00 00       	add    eax,0x21b2
    4854:	00 00                	add    BYTE PTR [rax],al
    4856:	00 00                	add    BYTE PTR [rax],al
    4858:	b7 15                	mov    bh,0x15
    485a:	00 00                	add    BYTE PTR [rax],al
    485c:	48 0f 11 00          	rex.W movups XMMWORD PTR [rax],xmm0
    4860:	00 01                	add    BYTE PTR [rcx],al
    4862:	30 00                	xor    BYTE PTR [rax],al
    4864:	00 29                	add    BYTE PTR [rcx],ch
    4866:	04 9e                	add    al,0x9e
    4868:	02 0a                	add    cl,BYTE PTR [rdx]
    486a:	00 22                	add    BYTE PTR [rdx],ah
    486c:	5f                   	pop    rdi
    486d:	09 00                	or     DWORD PTR [rax],eax
    486f:	00 55 09             	add    BYTE PTR [rbp+0x9],dl
    4872:	00 00                	add    BYTE PTR [rax],al
    4874:	29 08                	sub    DWORD PTR [rax],ecx
    4876:	9e                   	sahf
    4877:	06                   	(bad)
    4878:	53                   	push   rbx
    4879:	54                   	push   rsp
    487a:	52                   	push   rdx
    487b:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    487d:	00 22                	add    BYTE PTR [rdx],ah
    487f:	fd                   	std
    4880:	03 00                	add    eax,DWORD PTR [rax]
    4882:	00 f3                	add    bl,dh
    4884:	03 00                	add    eax,DWORD PTR [rax]
    4886:	00 22                	add    BYTE PTR [rdx],ah
    4888:	b1 04                	mov    cl,0x4
    488a:	00 00                	add    BYTE PTR [rax],al
    488c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    488d:	04 00                	add    al,0x0
    488f:	00 00                	add    BYTE PTR [rax],al
    4891:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4892:	0e                   	(bad)
    4893:	00 00                	add    BYTE PTR [rax],al
    4895:	05 00 01 08 4e       	add    eax,0x4e080100
    489a:	0f 00 00             	sldt   WORD PTR [rax]
    489d:	22 14 01             	and    dl,BYTE PTR [rcx+rax*1]
    48a0:	00 00                	add    BYTE PTR [rax],al
    48a2:	21 44 02 00          	and    DWORD PTR [rdx+rax*1+0x0],eax
    48a6:	00 00                	add    BYTE PTR [rax],al
    48a8:	00 00                	add    BYTE PTR [rax],al
    48aa:	00 30                	add    BYTE PTR [rax],dh
    48ac:	24 00                	and    al,0x0
    48ae:	00 00                	add    BYTE PTR [rax],al
    48b0:	00 00                	add    BYTE PTR [rax],al
    48b2:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    48b5:	00 00                	add    BYTE PTR [rax],al
    48b7:	00 00                	add    BYTE PTR [rax],al
    48b9:	00 00                	add    BYTE PTR [rax],al
    48bb:	af                   	scas   eax,DWORD PTR es:[rdi]
    48bc:	17                   	(bad)
    48bd:	00 00                	add    BYTE PTR [rax],al
    48bf:	04 cc                	add    al,0xcc
    48c1:	0a 00                	or     al,BYTE PTR [rax]
    48c3:	00 05 d6 17 3a 00    	add    BYTE PTR [rip+0x3a17d6],al        # 3a609f <_end+0x3a0087>
    48c9:	00 00                	add    BYTE PTR [rax],al
    48cb:	06                   	(bad)
    48cc:	08 07                	or     BYTE PTR [rdi],al
    48ce:	f3 00 00             	repz add BYTE PTR [rax],al
    48d1:	00 13                	add    BYTE PTR [rbx],dl
    48d3:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
    48da:	00 00                	add    BYTE PTR [rax],al
    48dc:	00 03                	add    BYTE PTR [rbx],al
    48de:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    48e1:	00 06                	add    BYTE PTR [rsi],al
    48e3:	3d 09 66 00 00       	cmp    eax,0x6609
    48e8:	00 00                	add    BYTE PTR [rax],al
    48ea:	14 72                	adc    al,0x72
    48ec:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    48ee:	00 3e                	add    BYTE PTR [rsi],bh
    48f0:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    48f3:	00 00                	add    BYTE PTR [rax],al
    48f5:	04 00                	add    al,0x0
    48f7:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    48fe:	04 de                	add    al,0xde
    4900:	02 00                	add    al,BYTE PTR [rax]
    4902:	00 06                	add    BYTE PTR [rsi],al
    4904:	3f                   	(bad)
    4905:	05 41 00 00 00       	add    eax,0x41
    490a:	13 10                	adc    edx,DWORD PTR [rax]
    490c:	44 09 00             	or     DWORD PTR [rax],r8d
    490f:	00 00                	add    BYTE PTR [rax],al
    4911:	9e                   	sahf
    4912:	00 00                	add    BYTE PTR [rax],al
    4914:	00 03                	add    BYTE PTR [rbx],al
    4916:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    4919:	00 06                	add    BYTE PTR [rsi],al
    491b:	45 0e                	rex.RB (bad)
    491d:	9e                   	sahf
    491e:	00 00                	add    BYTE PTR [rax],al
    4920:	00 00                	add    BYTE PTR [rax],al
    4922:	14 72                	adc    al,0x72
    4924:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4926:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4929:	9e                   	sahf
    492a:	00 00                	add    BYTE PTR [rax],al
    492c:	00 08                	add    BYTE PTR [rax],cl
    492e:	00 06                	add    BYTE PTR [rsi],al
    4930:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 4a1b <__GNU_EH_FRAME_HDR+0x32b>
    4936:	04 0a                	add    al,0xa
    4938:	00 00                	add    BYTE PTR [rax],al
    493a:	00 06                	add    BYTE PTR [rsi],al
    493c:	47 05 79 00 00 00    	rex.RXB add eax,0x79
    4942:	13 10                	adc    edx,DWORD PTR [rax]
    4944:	4e b4 00             	rex.WRX mov spl,0x0
    4947:	00 00                	add    BYTE PTR [rax],al
    4949:	d6                   	(bad)
    494a:	00 00                	add    BYTE PTR [rax],al
    494c:	00 03                	add    BYTE PTR [rbx],al
    494e:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    4951:	00 06                	add    BYTE PTR [rsi],al
    4953:	4f 13 d6             	rex.WRXB adc r10,r14
    4956:	00 00                	add    BYTE PTR [rax],al
    4958:	00 00                	add    BYTE PTR [rax],al
    495a:	14 72                	adc    al,0x72
    495c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    495e:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    4961:	d6                   	(bad)
    4962:	00 00                	add    BYTE PTR [rax],al
    4964:	00 08                	add    BYTE PTR [rax],cl
    4966:	00 06                	add    BYTE PTR [rsi],al
    4968:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 4a4e <__GNU_EH_FRAME_HDR+0x35e>
    496e:	04 b5                	add    al,0xb5
    4970:	00 00                	add    BYTE PTR [rax],al
    4972:	00 06                	add    BYTE PTR [rsi],al
    4974:	51                   	push   rcx
    4975:	05 b1 00 00 00       	add    eax,0xb1
    497a:	06                   	(bad)
    497b:	02 07                	add    al,BYTE PTR [rdi]
    497d:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    4980:	00 09                	add    BYTE PTR [rcx],cl
    4982:	fc                   	cld
    4983:	00 00                	add    BYTE PTR [rax],al
    4985:	00 06                	add    BYTE PTR [rsi],al
    4987:	01 06                	add    DWORD PTR [rsi],eax
    4989:	08 02                	or     BYTE PTR [rdx],al
    498b:	00 00                	add    BYTE PTR [rax],al
    498d:	0f f5 00             	pmaddwd mm0,QWORD PTR [rax]
    4990:	00 00                	add    BYTE PTR [rax],al
    4992:	06                   	(bad)
    4993:	01 08                	add    DWORD PTR [rax],ecx
    4995:	ff 01                	inc    DWORD PTR [rcx]
    4997:	00 00                	add    BYTE PTR [rax],al
    4999:	06                   	(bad)
    499a:	04 07                	add    al,0x7
    499c:	f8                   	clc
    499d:	00 00                	add    BYTE PTR [rax],al
    499f:	00 06                	add    BYTE PTR [rsi],al
    49a1:	01 06                	add    DWORD PTR [rsi],eax
    49a3:	01 02                	add    DWORD PTR [rdx],eax
    49a5:	00 00                	add    BYTE PTR [rax],al
    49a7:	06                   	(bad)
    49a8:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 4a09 <__GNU_EH_FRAME_HDR+0x319>
    49ae:	04 a9                	add    al,0xa9
    49b0:	00 00                	add    BYTE PTR [rax],al
    49b2:	00 07                	add    BYTE PTR [rdi],al
    49b4:	2a 16                	sub    dl,BYTE PTR [rsi]
    49b6:	08 01                	or     BYTE PTR [rcx],al
    49b8:	00 00                	add    BYTE PTR [rax],al
    49ba:	04 9c                	add    al,0x9c
    49bc:	0a 00                	or     al,BYTE PTR [rax]
    49be:	00 07                	add    BYTE PTR [rdi],al
    49c0:	91                   	xchg   ecx,eax
    49c1:	19 3a                	sbb    DWORD PTR [rdx],edi
    49c3:	00 00                	add    BYTE PTR [rax],al
    49c5:	00 04 29             	add    BYTE PTR [rcx+rbp*1],al
    49c8:	0b 00                	or     eax,DWORD PTR [rax]
    49ca:	00 07                	add    BYTE PTR [rdi],al
    49cc:	92                   	xchg   edx,eax
    49cd:	19 08                	sbb    DWORD PTR [rax],ecx
    49cf:	01 00                	add    DWORD PTR [rax],eax
    49d1:	00 04 88             	add    BYTE PTR [rax+rcx*4],al
    49d4:	09 00                	or     DWORD PTR [rax],eax
    49d6:	00 07                	add    BYTE PTR [rdi],al
    49d8:	93                   	xchg   ebx,eax
    49d9:	19 08                	sbb    DWORD PTR [rax],ecx
    49db:	01 00                	add    DWORD PTR [rax],eax
    49dd:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    49e0:	0b 00                	or     eax,DWORD PTR [rax]
    49e2:	00 07                	add    BYTE PTR [rdi],al
    49e4:	94                   	xchg   esp,eax
    49e5:	19 3a                	sbb    DWORD PTR [rdx],edi
    49e7:	00 00                	add    BYTE PTR [rax],al
    49e9:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    49ec:	09 00                	or     DWORD PTR [rax],eax
    49ee:	00 07                	add    BYTE PTR [rdi],al
    49f0:	96                   	xchg   esi,eax
    49f1:	1a 08                	sbb    cl,BYTE PTR [rax]
    49f3:	01 00                	add    DWORD PTR [rax],eax
    49f5:	00 04 4e             	add    BYTE PTR [rsi+rcx*2],al
    49f8:	0a 00                	or     al,BYTE PTR [rax]
    49fa:	00 07                	add    BYTE PTR [rdi],al
    49fc:	97                   	xchg   edi,eax
    49fd:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    49ff:	00 00                	add    BYTE PTR [rax],al
    4a01:	00 04 41             	add    BYTE PTR [rcx+rax*2],al
    4a04:	0b 00                	or     eax,DWORD PTR [rax]
    4a06:	00 07                	add    BYTE PTR [rdi],al
    4a08:	98                   	cwde
    4a09:	19 9e 00 00 00 04    	sbb    DWORD PTR [rsi+0x4000000],ebx
    4a0f:	38 0b                	cmp    BYTE PTR [rbx],cl
    4a11:	00 00                	add    BYTE PTR [rax],al
    4a13:	07                   	(bad)
    4a14:	a0 1a 9e 00 00 00 24 	movabs al,ds:0x408240000009e1a
    4a1b:	08 04 
    4a1d:	c7                   	(bad)
    4a1e:	0a 00                	or     al,BYTE PTR [rax]
    4a20:	00 07                	add    BYTE PTR [rdi],al
    4a22:	af                   	scas   eax,DWORD PTR es:[rdi]
    4a23:	1d 9e 00 00 00       	sbb    eax,0x9e
    4a28:	04 05                	add    al,0x5
    4a2a:	0a 00                	or     al,BYTE PTR [rax]
    4a2c:	00 07                	add    BYTE PTR [rdi],al
    4a2e:	b4 1c                	mov    ah,0x1c
    4a30:	9e                   	sahf
    4a31:	00 00                	add    BYTE PTR [rax],al
    4a33:	00 04 10             	add    BYTE PTR [rax+rdx*1],al
    4a36:	0a 00                	or     al,BYTE PTR [rax]
    4a38:	00 07                	add    BYTE PTR [rdi],al
    4a3a:	c2 1b 9e             	ret    0x9e1b
    4a3d:	00 00                	add    BYTE PTR [rax],al
    4a3f:	00 04 ab             	add    BYTE PTR [rbx+rbp*4],al
    4a42:	0a 00                	or     al,BYTE PTR [rax]
    4a44:	00 07                	add    BYTE PTR [rdi],al
    4a46:	c5 21 9e             	(bad)
    4a49:	00 00                	add    BYTE PTR [rax],al
    4a4b:	00 09                	add    BYTE PTR [rcx],cl
    4a4d:	f5                   	cmc
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	00 04 12             	add    BYTE PTR [rdx+rdx*1],al
    4a53:	0a 00                	or     al,BYTE PTR [rax]
    4a55:	00 08                	add    BYTE PTR [rax],cl
    4a57:	6c                   	ins    BYTE PTR es:[rdi],dx
    4a58:	13 a3 01 00 00 17    	adc    esp,DWORD PTR [rbx+0x17000001]
    4a5e:	05 0b 00 00 10       	add    eax,0x1000000b
    4a63:	09 0b                	or     DWORD PTR [rbx],ecx
    4a65:	f3 01 00             	repz add DWORD PTR [rax],eax
    4a68:	00 03                	add    BYTE PTR [rbx],al
    4a6a:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4a6b:	0a 00                	or     al,BYTE PTR [rax]
    4a6d:	00 09                	add    BYTE PTR [rcx],cl
    4a6f:	10 0c 7d 01 00 00 00 	adc    BYTE PTR [rdi*2+0x1],cl
    4a76:	03 94 0a 00 00 09 15 	add    edx,DWORD PTR [rdx+rcx*1+0x15090000]
    4a7d:	15 af 01 00 00       	adc    eax,0x1af
    4a82:	08 00                	or     BYTE PTR [rax],al
    4a84:	06                   	(bad)
    4a85:	08 07                	or     BYTE PTR [rdi],al
    4a87:	ee                   	out    dx,al
    4a88:	00 00                	add    BYTE PTR [rax],al
    4a8a:	00 25 cf 02 00 00    	add    BYTE PTR [rip+0x2cf],ah        # 4d5f <__GNU_EH_FRAME_HDR+0x66f>
    4a90:	06                   	(bad)
    4a91:	b4 03                	mov    ah,0x3
    4a93:	0f 07                	sysretd
    4a95:	02 00                	add    al,BYTE PTR [rax]
    4a97:	00 09                	add    BYTE PTR [rcx],cl
    4a99:	0c 02                	or     al,0x2
    4a9b:	00 00                	add    BYTE PTR [rax],al
    4a9d:	26 66 00 00          	es data16 add BYTE PTR [rax],al
    4aa1:	00 20                	add    BYTE PTR [rax],ah
    4aa3:	02 00                	add    al,BYTE PTR [rax]
    4aa5:	00 01                	add    BYTE PTR [rcx],al
    4aa7:	20 02                	and    BYTE PTR [rdx],al
    4aa9:	00 00                	add    BYTE PTR [rax],al
    4aab:	01 20                	add    DWORD PTR [rax],esp
    4aad:	02 00                	add    al,BYTE PTR [rax]
    4aaf:	00 00                	add    BYTE PTR [rax],al
    4ab1:	09 25 02 00 00 27    	or     DWORD PTR [rip+0x27000002],esp        # 27004ab9 <_end+0x26ffeaa1>
    4ab7:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    4aba:	64 00 16             	add    BYTE PTR fs:[rsi],dl
    4abd:	32 01                	xor    al,BYTE PTR [rcx]
    4abf:	0b f6                	or     esi,esi
    4ac1:	03 00                	add    eax,DWORD PTR [rax]
    4ac3:	00 02                	add    BYTE PTR [rdx],al
    4ac5:	0a 83 0b 6d 00 00    	or     al,BYTE PTR [rbx+0x6d0b]
    4acb:	00 02                	add    BYTE PTR [rdx],al
    4acd:	0a 84 0b a5 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xa5]
    4ad4:	02 0a                	add    cl,BYTE PTR [rdx]
    4ad6:	8a 0b                	mov    cl,BYTE PTR [rbx]
    4ad8:	f6 03 00             	test   BYTE PTR [rbx],0x0
    4adb:	00 02                	add    BYTE PTR [rdx],al
    4add:	0a 8d 0b 13 04 00    	or     cl,BYTE PTR [rbp+0x4130b]
    4ae3:	00 02                	add    BYTE PTR [rdx],al
    4ae5:	0a 90 0b 2e 04 00    	or     dl,BYTE PTR [rax+0x42e0b]
    4aeb:	00 02                	add    BYTE PTR [rdx],al
    4aed:	0a 91 0b 4b 04 00    	or     dl,BYTE PTR [rcx+0x44b0b]
    4af3:	00 02                	add    BYTE PTR [rdx],al
    4af5:	0a 92 0b 62 04 00    	or     dl,BYTE PTR [rdx+0x4620b]
    4afb:	00 02                	add    BYTE PTR [rdx],al
    4afd:	0a 93 0b 79 04 00    	or     dl,BYTE PTR [rbx+0x4790b]
    4b03:	00 02                	add    BYTE PTR [rdx],al
    4b05:	0a 95 0b a3 04 00    	or     dl,BYTE PTR [rbp+0x4a30b]
    4b0b:	00 02                	add    BYTE PTR [rdx],al
    4b0d:	0a 98 0b bf 04 00    	or     bl,BYTE PTR [rax+0x4bf0b]
    4b13:	00 02                	add    BYTE PTR [rdx],al
    4b15:	0a 9a 0b d6 04 00    	or     bl,BYTE PTR [rdx+0x4d60b]
    4b1b:	00 02                	add    BYTE PTR [rdx],al
    4b1d:	0a 9d 0b f2 04 00    	or     bl,BYTE PTR [rbp+0x4f20b]
    4b23:	00 02                	add    BYTE PTR [rdx],al
    4b25:	0a 9e 0b 0e 05 00    	or     bl,BYTE PTR [rsi+0x50e0b]
    4b2b:	00 02                	add    BYTE PTR [rdx],al
    4b2d:	0a 9f 0b 3f 05 00    	or     bl,BYTE PTR [rdi+0x53f0b]
    4b33:	00 02                	add    BYTE PTR [rdx],al
    4b35:	0a a1 0b 60 05 00    	or     ah,BYTE PTR [rcx+0x5600b]
    4b3b:	00 02                	add    BYTE PTR [rdx],al
    4b3d:	0a a4 0b 80 05 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x580]
    4b44:	02 0a                	add    cl,BYTE PTR [rdx]
    4b46:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4b47:	0b 93 05 00 00 02    	or     edx,DWORD PTR [rbx+0x2000005]
    4b4d:	0a a9 0b a0 05 00    	or     ch,BYTE PTR [rcx+0x5a00b]
    4b53:	00 02                	add    BYTE PTR [rdx],al
    4b55:	0a aa 0b b1 05 00    	or     ch,BYTE PTR [rdx+0x5b10b]
    4b5b:	00 02                	add    BYTE PTR [rdx],al
    4b5d:	0a ab 0b d1 05 00    	or     ch,BYTE PTR [rbx+0x5d10b]
    4b63:	00 02                	add    BYTE PTR [rdx],al
    4b65:	0a ac 0b f5 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x5f5]
    4b6c:	02 0a                	add    cl,BYTE PTR [rdx]
    4b6e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4b6f:	0b 19                	or     ebx,DWORD PTR [rcx]
    4b71:	06                   	(bad)
    4b72:	00 00                	add    BYTE PTR [rax],al
    4b74:	02 0a                	add    cl,BYTE PTR [rdx]
    4b76:	af                   	scas   eax,DWORD PTR es:[rdi]
    4b77:	0b 30                	or     esi,DWORD PTR [rax]
    4b79:	06                   	(bad)
    4b7a:	00 00                	add    BYTE PTR [rax],al
    4b7c:	02 0a                	add    cl,BYTE PTR [rdx]
    4b7e:	b0 0b                	mov    al,0xb
    4b80:	55                   	push   rbp
    4b81:	06                   	(bad)
    4b82:	00 00                	add    BYTE PTR [rax],al
    4b84:	02 0a                	add    cl,BYTE PTR [rdx]
    4b86:	f4                   	hlt
    4b87:	16                   	(bad)
    4b88:	dd 00                	fld    QWORD PTR [rax]
    4b8a:	00 00                	add    BYTE PTR [rax],al
    4b8c:	02 0a                	add    cl,BYTE PTR [rdx]
    4b8e:	f9                   	stc
    4b8f:	16                   	(bad)
    4b90:	b5 06                	mov    ch,0x6
    4b92:	00 00                	add    BYTE PTR [rax],al
    4b94:	02 0a                	add    cl,BYTE PTR [rdx]
    4b96:	fa                   	cli
    4b97:	16                   	(bad)
    4b98:	cf                   	iret
    4b99:	06                   	(bad)
    4b9a:	00 00                	add    BYTE PTR [rax],al
    4b9c:	02 0a                	add    cl,BYTE PTR [rdx]
    4b9e:	fc                   	cld
    4b9f:	16                   	(bad)
    4ba0:	eb 06                	jmp    4ba8 <__GNU_EH_FRAME_HDR+0x4b8>
    4ba2:	00 00                	add    BYTE PTR [rax],al
    4ba4:	02 0a                	add    cl,BYTE PTR [rdx]
    4ba6:	fd                   	std
    4ba7:	16                   	(bad)
    4ba8:	4a 07                	rex.WX (bad)
    4baa:	00 00                	add    BYTE PTR [rax],al
    4bac:	02 0a                	add    cl,BYTE PTR [rdx]
    4bae:	fe                   	(bad)
    4baf:	16                   	(bad)
    4bb0:	02 07                	add    al,BYTE PTR [rdi]
    4bb2:	00 00                	add    BYTE PTR [rax],al
    4bb4:	02 0a                	add    cl,BYTE PTR [rdx]
    4bb6:	ff 16                	call   QWORD PTR [rsi]
    4bb8:	26 07                	es (bad)
    4bba:	00 00                	add    BYTE PTR [rax],al
    4bbc:	29 0a                	sub    DWORD PTR [rdx],ecx
    4bbe:	00 01                	add    BYTE PTR [rcx],al
    4bc0:	16                   	(bad)
    4bc1:	6c                   	ins    BYTE PTR es:[rdi],dx
    4bc2:	07                   	(bad)
    4bc3:	00 00                	add    BYTE PTR [rax],al
    4bc5:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4bc8:	73 00                	jae    4bca <__GNU_EH_FRAME_HDR+0x4da>
    4bca:	89 0f                	mov    DWORD PTR [rdi],ecx
    4bcc:	03 00                	add    eax,DWORD PTR [rax]
    4bce:	00 b6 07 00 00 4c    	add    BYTE PTR [rsi+0x4c000007],dh
    4bd4:	03 00                	add    eax,DWORD PTR [rax]
    4bd6:	00 01                	add    BYTE PTR [rcx],al
    4bd8:	b6 07                	mov    dh,0x7
    4bda:	00 00                	add    BYTE PTR [rax],al
    4bdc:	00 0a                	add    BYTE PTR [rdx],cl
    4bde:	61                   	(bad)
    4bdf:	62 73 00 55 1b       	(bad)
    4be4:	00 00                	add    BYTE PTR [rax],al
    4be6:	00 c5                	add    ch,al
    4be8:	07                   	(bad)
    4be9:	00 00                	add    BYTE PTR [rax],al
    4beb:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4bee:	00 01                	add    BYTE PTR [rcx],al
    4bf0:	c5 07 00             	(bad)
    4bf3:	00 00                	add    BYTE PTR [rax],al
    4bf5:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4bf8:	73 00                	jae    4bfa <__GNU_EH_FRAME_HDR+0x50a>
    4bfa:	4f fb                	rex.WRXB sti
    4bfc:	02 00                	add    al,BYTE PTR [rax]
    4bfe:	00 87 07 00 00 7c    	add    BYTE PTR [rdi+0x7c000007],al
    4c04:	03 00                	add    eax,DWORD PTR [rax]
    4c06:	00 01                	add    BYTE PTR [rcx],al
    4c08:	87 07                	xchg   DWORD PTR [rdi],eax
    4c0a:	00 00                	add    BYTE PTR [rax],al
    4c0c:	00 0a                	add    BYTE PTR [rdx],cl
    4c0e:	61                   	(bad)
    4c0f:	62 73 00 4b 05       	(bad)
    4c14:	03 00                	add    eax,DWORD PTR [rax]
    4c16:	00 65 07             	add    BYTE PTR [rbp+0x7],ah
    4c19:	00 00                	add    BYTE PTR [rax],al
    4c1b:	94                   	xchg   esp,eax
    4c1c:	03 00                	add    eax,DWORD PTR [rax]
    4c1e:	00 01                	add    BYTE PTR [rcx],al
    4c20:	65 07                	gs (bad)
    4c22:	00 00                	add    BYTE PTR [rax],al
    4c24:	00 0a                	add    BYTE PTR [rdx],cl
    4c26:	61                   	(bad)
    4c27:	62 73 00 47 f1       	(bad)
    4c2c:	02 00                	add    al,BYTE PTR [rax]
    4c2e:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4c32:	00 ac 03 00 00 01 44 	add    BYTE PTR [rbx+rax*1+0x44010000],ch
    4c39:	04 00                	add    al,0x0
    4c3b:	00 00                	add    BYTE PTR [rax],al
    4c3d:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4c40:	73 00                	jae    4c42 <__GNU_EH_FRAME_HDR+0x552>
    4c42:	3d 41 00 00 00       	cmp    eax,0x41
    4c47:	d6                   	(bad)
    4c48:	00 00                	add    BYTE PTR [rax],al
    4c4a:	00 c4                	add    ah,al
    4c4c:	03 00                	add    eax,DWORD PTR [rax]
    4c4e:	00 01                	add    BYTE PTR [rcx],al
    4c50:	d6                   	(bad)
    4c51:	00 00                	add    BYTE PTR [rax],al
    4c53:	00 00                	add    BYTE PTR [rax],al
    4c55:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4c58:	73 00                	jae    4c5a <__GNU_EH_FRAME_HDR+0x56a>
    4c5a:	38 11                	cmp    BYTE PTR [rcx],dl
    4c5c:	00 00                	add    BYTE PTR [rax],al
    4c5e:	00 9e 00 00 00 dc    	add    BYTE PTR [rsi-0x24000000],bl
    4c64:	03 00                	add    eax,DWORD PTR [rax]
    4c66:	00 01                	add    BYTE PTR [rcx],al
    4c68:	9e                   	sahf
    4c69:	00 00                	add    BYTE PTR [rax],al
    4c6b:	00 00                	add    BYTE PTR [rax],al
    4c6d:	18 64 69 76          	sbb    BYTE PTR [rcx+rbp*2+0x76],ah
    4c71:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    4c77:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4c78:	00 00                	add    BYTE PTR [rax],al
    4c7a:	00 01                	add    BYTE PTR [rcx],al
    4c7c:	9e                   	sahf
    4c7d:	00 00                	add    BYTE PTR [rax],al
    4c7f:	00 01                	add    BYTE PTR [rcx],al
    4c81:	9e                   	sahf
    4c82:	00 00                	add    BYTE PTR [rax],al
    4c84:	00 00                	add    BYTE PTR [rax],al
    4c86:	00 07                	add    BYTE PTR [rdi],al
    4c88:	6d                   	ins    DWORD PTR es:[rdi],dx
    4c89:	00 00                	add    BYTE PTR [rax],al
    4c8b:	00 06                	add    BYTE PTR [rsi],al
    4c8d:	de 02                	fiadd  WORD PTR [rdx]
    4c8f:	0c 66                	or     al,0x66
    4c91:	00 00                	add    BYTE PTR [rax],al
    4c93:	00 0d 04 00 00 01    	add    BYTE PTR [rip+0x1000004],cl        # 1004c9d <_end+0xffec85>
    4c99:	0d 04 00 00 00       	or     eax,0x4
    4c9e:	09 12                	or     DWORD PTR [rdx],edx
    4ca0:	04 00                	add    al,0x0
    4ca2:	00 2a                	add    BYTE PTR [rdx],ch
    4ca4:	2b 33                	sub    esi,DWORD PTR [rbx]
    4ca6:	00 00                	add    BYTE PTR [rax],al
    4ca8:	00 06                	add    BYTE PTR [rsi],al
    4caa:	e3 02                	jrcxz  4cae <__GNU_EH_FRAME_HDR+0x5be>
    4cac:	12 33                	adc    dh,BYTE PTR [rbx]
    4cae:	00 00                	add    BYTE PTR [rax],al
    4cb0:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    4cb3:	00 00                	add    BYTE PTR [rax],al
    4cb5:	2e 04 00             	cs add al,0x0
    4cb8:	00 01                	add    BYTE PTR [rcx],al
    4cba:	0d 04 00 00 00       	or     eax,0x4
    4cbf:	08 cd                	or     ch,cl
    4cc1:	01 00                	add    DWORD PTR [rax],eax
    4cc3:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    4cc6:	01 44 04 00          	add    DWORD PTR [rsp+rax*1+0x0],eax
    4cca:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4cce:	00 01                	add    BYTE PTR [rcx],al
    4cd0:	f0 00 00             	lock add BYTE PTR [rax],al
    4cd3:	00 00                	add    BYTE PTR [rax],al
    4cd5:	06                   	(bad)
    4cd6:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    4cd9:	01 00                	add    DWORD PTR [rax],eax
    4cdb:	00 07                	add    BYTE PTR [rdi],al
    4cdd:	d2 01                	rol    BYTE PTR [rcx],cl
    4cdf:	00 00                	add    BYTE PTR [rax],al
    4ce1:	06                   	(bad)
    4ce2:	e1 01                	loope  4ce5 <__GNU_EH_FRAME_HDR+0x5f5>
    4ce4:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4ce7:	00 00                	add    BYTE PTR [rax],al
    4ce9:	62 04 00             	(bad)
    4cec:	00 01                	add    BYTE PTR [rcx],al
    4cee:	f0 00 00             	lock add BYTE PTR [rax],al
    4cf1:	00 00                	add    BYTE PTR [rax],al
    4cf3:	07                   	(bad)
    4cf4:	dc 01                	fadd   QWORD PTR [rcx]
    4cf6:	00 00                	add    BYTE PTR [rax],al
    4cf8:	06                   	(bad)
    4cf9:	e6 01                	out    0x1,al
    4cfb:	01 9e 00 00 00 79    	add    DWORD PTR [rsi+0x79000000],ebx
    4d01:	04 00                	add    al,0x0
    4d03:	00 01                	add    BYTE PTR [rcx],al
    4d05:	f0 00 00             	lock add BYTE PTR [rax],al
    4d08:	00 00                	add    BYTE PTR [rax],al
    4d0a:	08 65 00             	or     BYTE PTR [rbp+0x0],ah
    4d0d:	00 00                	add    BYTE PTR [rax],al
    4d0f:	0d 14 01 89 01       	or     eax,0x1890114
    4d14:	00 00                	add    BYTE PTR [rax],al
    4d16:	a3 04 00 00 01 20 02 	movabs ds:0x22001000004,eax
    4d1d:	00 00 
    4d1f:	01 20                	add    DWORD PTR [rax],esp
    4d21:	02 00                	add    al,BYTE PTR [rax]
    4d23:	00 01                	add    BYTE PTR [rcx],al
    4d25:	2e 00 00             	cs add BYTE PTR [rax],al
    4d28:	00 01                	add    BYTE PTR [rcx],al
    4d2a:	2e 00 00             	cs add BYTE PTR [rax],al
    4d2d:	00 01                	add    BYTE PTR [rcx],al
    4d2f:	fa                   	cli
    4d30:	01 00                	add    DWORD PTR [rax],eax
    4d32:	00 00                	add    BYTE PTR [rax],al
    4d34:	2c 64                	sub    al,0x64
    4d36:	69 76 00 06 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e006
    4d3d:	6d                   	ins    DWORD PTR es:[rdi],dx
    4d3e:	00 00                	add    BYTE PTR [rax],al
    4d40:	00 bf 04 00 00 01    	add    BYTE PTR [rdi+0x1000004],bh
    4d46:	66 00 00             	data16 add BYTE PTR [rax],al
    4d49:	00 01                	add    BYTE PTR [rcx],al
    4d4b:	66 00 00             	data16 add BYTE PTR [rax],al
    4d4e:	00 00                	add    BYTE PTR [rax],al
    4d50:	07                   	(bad)
    4d51:	bd 00 00 00 06       	mov    ebp,0x6000000
    4d56:	05 03 0e bb 01       	add    eax,0x1bb0e03
    4d5b:	00 00                	add    BYTE PTR [rax],al
    4d5d:	d6                   	(bad)
    4d5e:	04 00                	add    al,0x0
    4d60:	00 01                	add    BYTE PTR [rcx],al
    4d62:	f0 00 00             	lock add BYTE PTR [rax],al
    4d65:	00 00                	add    BYTE PTR [rax],al
    4d67:	07                   	(bad)
    4d68:	c3                   	ret
    4d69:	02 00                	add    al,BYTE PTR [rax]
    4d6b:	00 06                	add    BYTE PTR [rsi],al
    4d6d:	e2 03                	loop   4d72 <__GNU_EH_FRAME_HDR+0x682>
    4d6f:	0f a5 00             	shld   DWORD PTR [rax],eax,cl
    4d72:	00 00                	add    BYTE PTR [rax],al
    4d74:	f2 04 00             	repnz add al,0x0
    4d77:	00 01                	add    BYTE PTR [rcx],al
    4d79:	9e                   	sahf
    4d7a:	00 00                	add    BYTE PTR [rax],al
    4d7c:	00 01                	add    BYTE PTR [rcx],al
    4d7e:	9e                   	sahf
    4d7f:	00 00                	add    BYTE PTR [rax],al
    4d81:	00 00                	add    BYTE PTR [rax],al
    4d83:	07                   	(bad)
    4d84:	33 02                	xor    eax,DWORD PTR [rdx]
    4d86:	00 00                	add    BYTE PTR [rax],al
    4d88:	06                   	(bad)
    4d89:	26 04 0c             	es add al,0xc
    4d8c:	66 00 00             	data16 add BYTE PTR [rax],al
    4d8f:	00 0e                	add    BYTE PTR [rsi],cl
    4d91:	05 00 00 01 f0       	add    eax,0xf0010000
    4d96:	00 00                	add    BYTE PTR [rax],al
    4d98:	00 01                	add    BYTE PTR [rcx],al
    4d9a:	2e 00 00             	cs add BYTE PTR [rax],al
    4d9d:	00 00                	add    BYTE PTR [rax],al
    4d9f:	08 39                	or     BYTE PTR [rcx],bh
    4da1:	02 00                	add    al,BYTE PTR [rax]
    4da3:	00 0e                	add    BYTE PTR [rsi],cl
    4da5:	75 01                	jne    4da8 <__FRAME_END__+0x18>
    4da7:	2e 00 00             	cs add BYTE PTR [rax],al
    4daa:	00 2e                	add    BYTE PTR [rsi],ch
    4dac:	05 00 00 01 2e       	add    eax,0x2e010000
    4db1:	05 00 00 01 f0       	add    eax,0xf0010000
    4db6:	00 00                	add    BYTE PTR [rax],al
    4db8:	00 01                	add    BYTE PTR [rcx],al
    4dba:	2e 00 00             	cs add BYTE PTR [rax],al
    4dbd:	00 00                	add    BYTE PTR [rax],al
    4dbf:	09 33                	or     DWORD PTR [rbx],esi
    4dc1:	05 00 00 06 04       	add    eax,0x4060000
    4dc6:	05 61 02 00 00       	add    eax,0x261
    4dcb:	0f 33                	rdpmc
    4dcd:	05 00 00 07 d9       	add    eax,0xd9070000
    4dd2:	00 00                	add    BYTE PTR [rax],al
    4dd4:	00 06                	add    BYTE PTR [rsi],al
    4dd6:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    4dd9:	66 00 00             	data16 add BYTE PTR [rax],al
    4ddc:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    4ddf:	00 00                	add    BYTE PTR [rax],al
    4de1:	01 2e                	add    DWORD PTR [rsi],ebp
    4de3:	05 00 00 01 f0       	add    eax,0xf0010000
    4de8:	00 00                	add    BYTE PTR [rax],al
    4dea:	00 01                	add    BYTE PTR [rcx],al
    4dec:	2e 00 00             	cs add BYTE PTR [rax],al
    4def:	00 00                	add    BYTE PTR [rax],al
    4df1:	19 25 00 00 00 ca    	sbb    DWORD PTR [rip+0xffffffffca000000],esp        # ffffffffca004df7 <_end+0xffffffffc9ffeddf>
    4df7:	03 80 05 00 00 01    	add    eax,DWORD PTR [rax+0x1000005]
    4dfd:	89 01                	mov    DWORD PTR [rcx],eax
    4dff:	00 00                	add    BYTE PTR [rax],al
    4e01:	01 2e                	add    DWORD PTR [rsi],ebp
    4e03:	00 00                	add    BYTE PTR [rax],al
    4e05:	00 01                	add    BYTE PTR [rcx],al
    4e07:	2e 00 00             	cs add BYTE PTR [rax],al
    4e0a:	00 01                	add    BYTE PTR [rcx],al
    4e0c:	fa                   	cli
    4e0d:	01 00                	add    DWORD PTR [rax],eax
    4e0f:	00 00                	add    BYTE PTR [rax],al
    4e11:	2d 36 00 00 00       	sub    eax,0x36
    4e16:	06                   	(bad)
    4e17:	fa                   	cli
    4e18:	02 0d 93 05 00 00    	add    cl,BYTE PTR [rip+0x593]        # 53b1 <__FRAME_END__+0x621>
    4e1e:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4e21:	00 00                	add    BYTE PTR [rax],al
    4e23:	00 2e                	add    BYTE PTR [rsi],ch
    4e25:	ec                   	in     al,dx
    4e26:	02 00                	add    al,BYTE PTR [rax]
    4e28:	00 06                	add    BYTE PTR [rsi],al
    4e2a:	3d 02 0c 66 00       	cmp    eax,0x660c02
    4e2f:	00 00                	add    BYTE PTR [rax],al
    4e31:	19 eb                	sbb    ebx,ebp
    4e33:	02 00                	add    al,BYTE PTR [rax]
    4e35:	00 3f                	add    BYTE PTR [rdi],bh
    4e37:	02 b1 05 00 00 01    	add    dh,BYTE PTR [rcx+0x1000005]
    4e3d:	08 01                	or     BYTE PTR [rcx],al
    4e3f:	00 00                	add    BYTE PTR [rax],al
    4e41:	00 08                	add    BYTE PTR [rax],cl
    4e43:	05 01 00 00 06       	add    eax,0x6000001
    4e48:	76 0f                	jbe    4e59 <__FRAME_END__+0xc9>
    4e4a:	44 04 00             	rex.R add al,0x0
    4e4d:	00 cc                	add    ah,cl
    4e4f:	05 00 00 01 f0       	add    eax,0xf0010000
    4e54:	00 00                	add    BYTE PTR [rax],al
    4e56:	00 01                	add    BYTE PTR [rcx],al
    4e58:	cc                   	int3
    4e59:	05 00 00 00 09       	add    eax,0x9000000
    4e5e:	bb 01 00 00 0b       	mov    ebx,0xb000001
    4e63:	54                   	push   rsp
    4e64:	00 00                	add    BYTE PTR [rax],al
    4e66:	00 06                	add    BYTE PTR [rsi],al
    4e68:	d7                   	xlat   BYTE PTR ds:[rbx]
    4e69:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    4e6c:	00 00                	add    BYTE PTR [rax],al
    4e6e:	9e                   	sahf
    4e6f:	00 00                	add    BYTE PTR [rax],al
    4e71:	00 f5                	add    ch,dh
    4e73:	05 00 00 01 f0       	add    eax,0xf0010000
    4e78:	00 00                	add    BYTE PTR [rax],al
    4e7a:	00 01                	add    BYTE PTR [rcx],al
    4e7c:	cc                   	int3
    4e7d:	05 00 00 01 66       	add    eax,0x66010000
    4e82:	00 00                	add    BYTE PTR [rax],al
    4e84:	00 00                	add    BYTE PTR [rax],al
    4e86:	0b 25 02 00 00 06    	or     esp,DWORD PTR [rip+0x6000002]        # 6004e8e <_end+0x5ffee76>
    4e8c:	db 1a                	fistp  DWORD PTR [rdx]
    4e8e:	1c 02                	sbb    al,0x2
    4e90:	00 00                	add    BYTE PTR [rax],al
    4e92:	3a 00                	cmp    al,BYTE PTR [rax]
    4e94:	00 00                	add    BYTE PTR [rax],al
    4e96:	19 06                	sbb    DWORD PTR [rsi],eax
    4e98:	00 00                	add    BYTE PTR [rax],al
    4e9a:	01 f0                	add    eax,esi
    4e9c:	00 00                	add    BYTE PTR [rax],al
    4e9e:	00 01                	add    BYTE PTR [rcx],al
    4ea0:	cc                   	int3
    4ea1:	05 00 00 01 66       	add    eax,0x66010000
    4ea6:	00 00                	add    BYTE PTR [rax],al
    4ea8:	00 00                	add    BYTE PTR [rax],al
    4eaa:	07                   	(bad)
    4eab:	d8 25 00 00 06 9b    	fsub   DWORD PTR [rip+0xffffffff9b060000]        # ffffffff9b064eb1 <_end+0xffffffff9b05ee99>
    4eb1:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    4eb4:	00 00                	add    BYTE PTR [rax],al
    4eb6:	00 30                	add    BYTE PTR [rax],dh
    4eb8:	06                   	(bad)
    4eb9:	00 00                	add    BYTE PTR [rax],al
    4ebb:	01 f0                	add    eax,esi
    4ebd:	00 00                	add    BYTE PTR [rax],al
    4ebf:	00 00                	add    BYTE PTR [rax],al
    4ec1:	08 e1                	or     cl,ah
    4ec3:	01 00                	add    DWORD PTR [rax],eax
    4ec5:	00 0e                	add    BYTE PTR [rsi],cl
    4ec7:	8f 01                	pop    QWORD PTR [rcx]
    4ec9:	2e 00 00             	cs add BYTE PTR [rax],al
    4ecc:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    4ecf:	00 00                	add    BYTE PTR [rax],al
    4ed1:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4ed7:	50                   	push   rax
    4ed8:	06                   	(bad)
    4ed9:	00 00                	add    BYTE PTR [rax],al
    4edb:	01 2e                	add    DWORD PTR [rsi],ebp
    4edd:	00 00                	add    BYTE PTR [rax],al
    4edf:	00 00                	add    BYTE PTR [rax],al
    4ee1:	09 3a                	or     DWORD PTR [rdx],edi
    4ee3:	05 00 00 08 42       	add    eax,0x42080000
    4ee8:	02 00                	add    al,BYTE PTR [rax]
    4eea:	00 0e                	add    BYTE PTR [rsi],cl
    4eec:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    4ef0:	00 00                	add    BYTE PTR [rax],al
    4ef2:	70 06                	jo     4efa <__FRAME_END__+0x16a>
    4ef4:	00 00                	add    BYTE PTR [rax],al
    4ef6:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4efc:	33 05 00 00 00 2f    	xor    eax,DWORD PTR [rip+0x2f000000]        # 2f004f02 <_end+0x2effeeea>
    4f02:	12 02                	adc    al,BYTE PTR [rdx]
    4f04:	00 00                	add    BYTE PTR [rax],al
    4f06:	16                   	(bad)
    4f07:	57                   	push   rdi
    4f08:	01 0b                	add    DWORD PTR [rbx],ecx
    4f0a:	cf                   	iret
    4f0b:	06                   	(bad)
    4f0c:	00 00                	add    BYTE PTR [rax],al
    4f0e:	02 0a                	add    cl,BYTE PTR [rdx]
    4f10:	cc                   	int3
    4f11:	0b dd                	or     ebx,ebp
    4f13:	00 00                	add    BYTE PTR [rax],al
    4f15:	00 02                	add    BYTE PTR [rdx],al
    4f17:	0a dc                	or     bl,ah
    4f19:	0b cf                	or     ecx,edi
    4f1b:	06                   	(bad)
    4f1c:	00 00                	add    BYTE PTR [rax],al
    4f1e:	02 0a                	add    cl,BYTE PTR [rdx]
    4f20:	e7 0b                	out    0xb,eax
    4f22:	eb 06                	jmp    4f2a <__FRAME_END__+0x19a>
    4f24:	00 00                	add    BYTE PTR [rax],al
    4f26:	02 0a                	add    cl,BYTE PTR [rdx]
    4f28:	e8 0b 02 07 00       	call   75138 <_end+0x6f120>
    4f2d:	00 02                	add    BYTE PTR [rdx],al
    4f2f:	0a e9                	or     ch,cl
    4f31:	0b 26                	or     esp,DWORD PTR [rsi]
    4f33:	07                   	(bad)
    4f34:	00 00                	add    BYTE PTR [rax],al
    4f36:	02 0a                	add    cl,BYTE PTR [rdx]
    4f38:	eb 0b                	jmp    4f45 <__FRAME_END__+0x1b5>
    4f3a:	4a 07                	rex.WX (bad)
    4f3c:	00 00                	add    BYTE PTR [rax],al
    4f3e:	02 0a                	add    cl,BYTE PTR [rdx]
    4f40:	ec                   	in     al,dx
    4f41:	0b 6c 07 00          	or     ebp,DWORD PTR [rdi+rax*1+0x0]
    4f45:	00 18                	add    BYTE PTR [rax],bl
    4f47:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    4f4e:	00 
    4f4f:	00 dd                	add    ch,bl
    4f51:	00 00                	add    BYTE PTR [rax],al
    4f53:	00 01                	add    BYTE PTR [rcx],al
    4f55:	d6                   	(bad)
    4f56:	00 00                	add    BYTE PTR [rax],al
    4f58:	00 01                	add    BYTE PTR [rcx],al
    4f5a:	d6                   	(bad)
    4f5b:	00 00                	add    BYTE PTR [rax],al
    4f5d:	00 00                	add    BYTE PTR [rax],al
    4f5f:	00 07                	add    BYTE PTR [rdi],al
    4f61:	c2 02 00             	ret    0x2
    4f64:	00 06                	add    BYTE PTR [rsi],al
    4f66:	e6 03                	out    0x3,al
    4f68:	1e                   	(bad)
    4f69:	dd 00                	fld    QWORD PTR [rax]
    4f6b:	00 00                	add    BYTE PTR [rax],al
    4f6d:	eb 06                	jmp    4f75 <__FRAME_END__+0x1e5>
    4f6f:	00 00                	add    BYTE PTR [rax],al
    4f71:	01 d6                	add    esi,edx
    4f73:	00 00                	add    BYTE PTR [rax],al
    4f75:	00 01                	add    BYTE PTR [rcx],al
    4f77:	d6                   	(bad)
    4f78:	00 00                	add    BYTE PTR [rax],al
    4f7a:	00 00                	add    BYTE PTR [rax],al
    4f7c:	07                   	(bad)
    4f7d:	2d 02 00 00 06       	sub    eax,0x6000002
    4f82:	ed                   	in     eax,dx
    4f83:	01 01                	add    DWORD PTR [rcx],eax
    4f85:	d6                   	(bad)
    4f86:	00 00                	add    BYTE PTR [rax],al
    4f88:	00 02                	add    BYTE PTR [rdx],al
    4f8a:	07                   	(bad)
    4f8b:	00 00                	add    BYTE PTR [rax],al
    4f8d:	01 f0                	add    eax,esi
    4f8f:	00 00                	add    BYTE PTR [rax],al
    4f91:	00 00                	add    BYTE PTR [rax],al
    4f93:	0b 88 00 00 00 06    	or     ecx,DWORD PTR [rax+0x6000000]
    4f99:	ee                   	out    dx,al
    4f9a:	16                   	(bad)
    4f9b:	7f 00                	jg     4f9d <__FRAME_END__+0x20d>
    4f9d:	00 00                	add    BYTE PTR [rax],al
    4f9f:	d6                   	(bad)
    4fa0:	00 00                	add    BYTE PTR [rax],al
    4fa2:	00 26                	add    BYTE PTR [rsi],ah
    4fa4:	07                   	(bad)
    4fa5:	00 00                	add    BYTE PTR [rax],al
    4fa7:	01 f0                	add    eax,esi
    4fa9:	00 00                	add    BYTE PTR [rax],al
    4fab:	00 01                	add    BYTE PTR [rcx],al
    4fad:	cc                   	int3
    4fae:	05 00 00 01 66       	add    eax,0x66010000
    4fb3:	00 00                	add    BYTE PTR [rax],al
    4fb5:	00 00                	add    BYTE PTR [rax],al
    4fb7:	0b b9 02 00 00 06    	or     edi,DWORD PTR [rcx+0x6000002]
    4fbd:	f3 1f                	repz (bad)
    4fbf:	b0 02                	mov    al,0x2
    4fc1:	00 00                	add    BYTE PTR [rax],al
    4fc3:	f3 01 00             	repz add DWORD PTR [rax],eax
    4fc6:	00 4a 07             	add    BYTE PTR [rdx+0x7],cl
    4fc9:	00 00                	add    BYTE PTR [rax],al
    4fcb:	01 f0                	add    eax,esi
    4fcd:	00 00                	add    BYTE PTR [rax],al
    4fcf:	00 01                	add    BYTE PTR [rcx],al
    4fd1:	cc                   	int3
    4fd2:	05 00 00 01 66       	add    eax,0x66010000
    4fd7:	00 00                	add    BYTE PTR [rax],al
    4fd9:	00 00                	add    BYTE PTR [rax],al
    4fdb:	08 97 02 00 00 06    	or     BYTE PTR [rdi+0x6000002],dl
    4fe1:	7c 0e                	jl     4ff1 <__FRAME_END__+0x261>
    4fe3:	65 07                	gs (bad)
    4fe5:	00 00                	add    BYTE PTR [rax],al
    4fe7:	65 07                	gs (bad)
    4fe9:	00 00                	add    BYTE PTR [rax],al
    4feb:	01 f0                	add    eax,esi
    4fed:	00 00                	add    BYTE PTR [rax],al
    4fef:	00 01                	add    BYTE PTR [rcx],al
    4ff1:	cc                   	int3
    4ff2:	05 00 00 00 06       	add    eax,0x6000000
    4ff7:	04 04                	add    al,0x4
    4ff9:	d3 00                	rol    DWORD PTR [rax],cl
    4ffb:	00 00                	add    BYTE PTR [rax],al
    4ffd:	08 2b                	or     BYTE PTR [rbx],ch
    4fff:	00 00                	add    BYTE PTR [rax],al
    5001:	00 06                	add    BYTE PTR [rsi],al
    5003:	7f 14                	jg     5019 <__FRAME_END__+0x289>
    5005:	87 07                	xchg   DWORD PTR [rdi],eax
    5007:	00 00                	add    BYTE PTR [rax],al
    5009:	87 07                	xchg   DWORD PTR [rdi],eax
    500b:	00 00                	add    BYTE PTR [rax],al
    500d:	01 f0                	add    eax,esi
    500f:	00 00                	add    BYTE PTR [rax],al
    5011:	00 01                	add    BYTE PTR [rcx],al
    5013:	cc                   	int3
    5014:	05 00 00 00 06       	add    eax,0x6000000
    5019:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    501c:	01 00                	add    DWORD PTR [rax],eax
    501e:	00 02                	add    BYTE PTR [rdx],al
    5020:	0f 27                	(bad)
    5022:	0c f6                	or     al,0xf6
    5024:	03 00                	add    eax,DWORD PTR [rax]
    5026:	00 02                	add    BYTE PTR [rdx],al
    5028:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    502b:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    502e:	00 02                	add    BYTE PTR [rdx],al
    5030:	0f 2e 0e             	ucomiss xmm1,DWORD PTR [rsi]
    5033:	80 05 00 00 02 0f 36 	add    BYTE PTR [rip+0xf020000],0x36        # f02503a <_end+0xf01f022>
    503a:	0c 6d                	or     al,0x6d
    503c:	00 00                	add    BYTE PTR [rax],al
    503e:	00 02                	add    BYTE PTR [rdx],al
    5040:	0f 37                	getsec
    5042:	0c a5                	or     al,0xa5
    5044:	00 00                	add    BYTE PTR [rax],al
    5046:	00 06                	add    BYTE PTR [rsi],al
    5048:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    504b:	02 00                	add    al,BYTE PTR [rax]
    504d:	00 02                	add    BYTE PTR [rdx],al
    504f:	0f 39                	(bad)
    5051:	0c 34                	or     al,0x34
    5053:	03 00                	add    eax,DWORD PTR [rax]
    5055:	00 06                	add    BYTE PTR [rsi],al
    5057:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 5247 <__FRAME_END__+0x4b7>
    505d:	02 0f                	add    cl,BYTE PTR [rdi]
    505f:	39 0c 4c             	cmp    DWORD PTR [rsp+rcx*2],ecx
    5062:	03 00                	add    eax,DWORD PTR [rax]
    5064:	00 02                	add    BYTE PTR [rdx],al
    5066:	0f 39                	(bad)
    5068:	0c 64                	or     al,0x64
    506a:	03 00                	add    eax,DWORD PTR [rax]
    506c:	00 02                	add    BYTE PTR [rdx],al
    506e:	0f 39                	(bad)
    5070:	0c 7c                	or     al,0x7c
    5072:	03 00                	add    eax,DWORD PTR [rax]
    5074:	00 02                	add    BYTE PTR [rdx],al
    5076:	0f 39                	(bad)
    5078:	0c 94                	or     al,0x94
    507a:	03 00                	add    eax,DWORD PTR [rax]
    507c:	00 02                	add    BYTE PTR [rdx],al
    507e:	0f 39                	(bad)
    5080:	0c ac                	or     al,0xac
    5082:	03 00                	add    eax,DWORD PTR [rax]
    5084:	00 02                	add    BYTE PTR [rdx],al
    5086:	0f 39                	(bad)
    5088:	0c c4                	or     al,0xc4
    508a:	03 00                	add    eax,DWORD PTR [rax]
    508c:	00 02                	add    BYTE PTR [rdx],al
    508e:	0f 3a 0c             	(bad)
    5091:	2e 04 00             	cs add al,0x0
    5094:	00 02                	add    BYTE PTR [rdx],al
    5096:	0f 3b                	(bad)
    5098:	0c 4b                	or     al,0x4b
    509a:	04 00                	add    al,0x0
    509c:	00 02                	add    BYTE PTR [rdx],al
    509e:	0f 3c                	(bad)
    50a0:	0c 62                	or     al,0x62
    50a2:	04 00                	add    al,0x0
    50a4:	00 02                	add    BYTE PTR [rdx],al
    50a6:	0f 3d                	(bad)
    50a8:	0c 79                	or     al,0x79
    50aa:	04 00                	add    al,0x0
    50ac:	00 02                	add    BYTE PTR [rdx],al
    50ae:	0f 3f                	(bad)
    50b0:	0c b5                	or     al,0xb5
    50b2:	06                   	(bad)
    50b3:	00 00                	add    BYTE PTR [rax],al
    50b5:	02 0f                	add    cl,BYTE PTR [rdi]
    50b7:	3f                   	(bad)
    50b8:	0c dc                	or     al,0xdc
    50ba:	03 00                	add    eax,DWORD PTR [rax]
    50bc:	00 02                	add    BYTE PTR [rdx],al
    50be:	0f 3f                	(bad)
    50c0:	0c a3                	or     al,0xa3
    50c2:	04 00                	add    al,0x0
    50c4:	00 02                	add    BYTE PTR [rdx],al
    50c6:	0f 41 0c bf          	cmovno ecx,DWORD PTR [rdi+rdi*4]
    50ca:	04 00                	add    al,0x0
    50cc:	00 02                	add    BYTE PTR [rdx],al
    50ce:	0f 43 0c d6          	cmovae ecx,DWORD PTR [rsi+rdx*8]
    50d2:	04 00                	add    al,0x0
    50d4:	00 02                	add    BYTE PTR [rdx],al
    50d6:	0f 46 0c f2          	cmovbe ecx,DWORD PTR [rdx+rsi*8]
    50da:	04 00                	add    al,0x0
    50dc:	00 02                	add    BYTE PTR [rdx],al
    50de:	0f 47 0c 0e          	cmova  ecx,DWORD PTR [rsi+rcx*1]
    50e2:	05 00 00 02 0f       	add    eax,0xf020000
    50e7:	48 0c 3f             	rex.W or al,0x3f
    50ea:	05 00 00 02 0f       	add    eax,0xf020000
    50ef:	4a 0c 60             	rex.WX or al,0x60
    50f2:	05 00 00 02 0f       	add    eax,0xf020000
    50f7:	4b 0c 93             	rex.WXB or al,0x93
    50fa:	05 00 00 02 0f       	add    eax,0xf020000
    50ff:	4d 0c a0             	rex.WRB or al,0xa0
    5102:	05 00 00 02 0f       	add    eax,0xf020000
    5107:	4e 0c b1             	rex.WRX or al,0xb1
    510a:	05 00 00 02 0f       	add    eax,0xf020000
    510f:	4f 0c d1             	rex.WRXB or al,0xd1
    5112:	05 00 00 02 0f       	add    eax,0xf020000
    5117:	50                   	push   rax
    5118:	0c f5                	or     al,0xf5
    511a:	05 00 00 02 0f       	add    eax,0xf020000
    511f:	51                   	push   rcx
    5120:	0c 19                	or     al,0x19
    5122:	06                   	(bad)
    5123:	00 00                	add    BYTE PTR [rax],al
    5125:	02 0f                	add    cl,BYTE PTR [rdi]
    5127:	53                   	push   rbx
    5128:	0c 30                	or     al,0x30
    512a:	06                   	(bad)
    512b:	00 00                	add    BYTE PTR [rax],al
    512d:	02 0f                	add    cl,BYTE PTR [rdi]
    512f:	54                   	push   rsp
    5130:	0c 55                	or     al,0x55
    5132:	06                   	(bad)
    5133:	00 00                	add    BYTE PTR [rax],al
    5135:	17                   	(bad)
    5136:	c2 0a 00             	ret    0xa
    5139:	00 90 10 1a 74 09    	add    BYTE PTR [rax+0x9741a10],dl
    513f:	00 00                	add    BYTE PTR [rax],al
    5141:	03 49 0b             	add    ecx,DWORD PTR [rcx+0xb]
    5144:	00 00                	add    BYTE PTR [rax],al
    5146:	10 1f                	adc    BYTE PTR [rdi],bl
    5148:	0d 29 01 00 00       	or     eax,0x129
    514d:	00 03                	add    BYTE PTR [rbx],al
    514f:	f5                   	cmc
    5150:	09 00                	or     DWORD PTR [rax],eax
    5152:	00 10                	add    BYTE PTR [rax],dl
    5154:	24 0d                	and    al,0xd
    5156:	4d 01 00             	add    QWORD PTR [r8],r8
    5159:	00 08                	add    BYTE PTR [rax],cl
    515b:	03 f1                	add    esi,ecx
    515d:	0a 00                	or     al,BYTE PTR [rax]
    515f:	00 10                	add    BYTE PTR [rax],dl
    5161:	2c 0f                	sub    al,0xf
    5163:	65 01 00             	add    DWORD PTR gs:[rax],eax
    5166:	00 10                	add    BYTE PTR [rax],dl
    5168:	03 84 0a 00 00 10 2d 	add    eax,DWORD PTR [rdx+rcx*1+0x2d100000]
    516f:	0e                   	(bad)
    5170:	59                   	pop    rcx
    5171:	01 00                	add    DWORD PTR [rax],eax
    5173:	00 18                	add    BYTE PTR [rax],bl
    5175:	03 33                	add    esi,DWORD PTR [rbx]
    5177:	0a 00                	or     al,BYTE PTR [rax]
    5179:	00 10                	add    BYTE PTR [rax],dl
    517b:	2f                   	(bad)
    517c:	0d 35 01 00 00       	or     eax,0x135
    5181:	1c 03                	sbb    al,0x3
    5183:	31 0b                	xor    DWORD PTR [rbx],ecx
    5185:	00 00                	add    BYTE PTR [rax],al
    5187:	10 30                	adc    BYTE PTR [rax],dh
    5189:	0d 41 01 00 00       	or     eax,0x141
    518e:	20 03                	and    BYTE PTR [rbx],al
    5190:	d9 0a                	(bad)  [rdx]
    5192:	00 00                	add    BYTE PTR [rax],al
    5194:	10 32                	adc    BYTE PTR [rdx],dh
    5196:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    5199:	00 00                	add    BYTE PTR [rax],al
    519b:	24 03                	and    al,0x3
    519d:	21 0b                	and    DWORD PTR [rbx],ecx
    519f:	00 00                	add    BYTE PTR [rax],al
    51a1:	10 34 0d 29 01 00 00 	adc    BYTE PTR [rcx*1+0x129],dh
    51a8:	28 03                	sub    BYTE PTR [rbx],al
    51aa:	73 0a                	jae    51b6 <__FRAME_END__+0x426>
    51ac:	00 00                	add    BYTE PTR [rax],al
    51ae:	10 39                	adc    BYTE PTR [rcx],bh
    51b0:	0d 71 01 00 00       	or     eax,0x171
    51b5:	30 03                	xor    BYTE PTR [rbx],al
    51b7:	fa                   	cli
    51b8:	0a 00                	or     al,BYTE PTR [rax]
    51ba:	00 10                	add    BYTE PTR [rax],dl
    51bc:	3d 11 8b 01 00       	cmp    eax,0x18b11
    51c1:	00 38                	add    BYTE PTR [rax],bh
    51c3:	03 20                	add    esp,DWORD PTR [rax]
    51c5:	0a 00                	or     al,BYTE PTR [rax]
    51c7:	00 10                	add    BYTE PTR [rax],dl
    51c9:	3f                   	(bad)
    51ca:	10 97 01 00 00 40    	adc    BYTE PTR [rdi+0x40000001],dl
    51d0:	03 8c 0a 00 00 10 4a 	add    ecx,DWORD PTR [rdx+rcx*1+0x4a100000]
    51d7:	15 cc 01 00 00       	adc    eax,0x1cc
    51dc:	48 03 66 0b          	add    rsp,QWORD PTR [rsi+0xb]
    51e0:	00 00                	add    BYTE PTR [rax],al
    51e2:	10 4b 15             	adc    BYTE PTR [rbx+0x15],cl
    51e5:	cc                   	int3
    51e6:	01 00                	add    DWORD PTR [rax],eax
    51e8:	00 58 03             	add    BYTE PTR [rax+0x3],bl
    51eb:	90                   	nop
    51ec:	09 00                	or     DWORD PTR [rax],eax
    51ee:	00 10                	add    BYTE PTR [rax],dl
    51f0:	4c 15 cc 01 00 00    	rex.WR adc rax,0x1cc
    51f6:	68 03 e0 0a 00       	push   0xae003
    51fb:	00 10                	add    BYTE PTR [rax],dl
    51fd:	59                   	pop    rcx
    51fe:	17                   	(bad)
    51ff:	74 09                	je     520a <__FRAME_END__+0x47a>
    5201:	00 00                	add    BYTE PTR [rax],al
    5203:	78 00                	js     5205 <__FRAME_END__+0x475>
    5205:	15 af 01 00 00       	adc    eax,0x1af
    520a:	84 09                	test   BYTE PTR [rcx],cl
    520c:	00 00                	add    BYTE PTR [rax],al
    520e:	16                   	(bad)
    520f:	3a 00                	cmp    al,BYTE PTR [rax]
    5211:	00 00                	add    BYTE PTR [rax],al
    5213:	02 00                	add    al,BYTE PTR [rax]
    5215:	06                   	(bad)
    5216:	10 07                	adc    BYTE PTR [rdi],al
    5218:	66 07                	data16 (bad)
    521a:	00 00                	add    BYTE PTR [rax],al
    521c:	04 ab                	add    al,0xab
    521e:	00 00                	add    BYTE PTR [rax],al
    5220:	00 11                	add    BYTE PTR [rcx],dl
    5222:	1a 14 1d 01 00 00 08 	sbb    dl,BYTE PTR [rbx*1+0x8000001]
    5229:	58                   	pop    rax
    522a:	0a 00                	or     al,BYTE PTR [rax]
    522c:	00 12                	add    BYTE PTR [rdx],dl
    522e:	1a 10                	sbb    dl,BYTE PTR [rax]
    5230:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    5233:	00 bc 09 00 00 01 66 	add    BYTE PTR [rcx+rcx*1+0x66010000],bh
    523a:	00 00                	add    BYTE PTR [rax],al
    523c:	00 01                	add    BYTE PTR [rcx],al
    523e:	89 01                	mov    DWORD PTR [rcx],eax
    5240:	00 00                	add    BYTE PTR [rax],al
    5242:	01 2e                	add    DWORD PTR [rsi],ebp
    5244:	00 00                	add    BYTE PTR [rax],al
    5246:	00 01                	add    BYTE PTR [rcx],al
    5248:	2e 00 00             	cs add BYTE PTR [rax],al
    524b:	00 00                	add    BYTE PTR [rax],al
    524d:	0b 6e 0b             	or     ebp,DWORD PTR [rsi+0xb]
    5250:	00 00                	add    BYTE PTR [rax],al
    5252:	12 20                	adc    ah,BYTE PTR [rax]
    5254:	10 58 0a             	adc    BYTE PTR [rax+0xa],bl
    5257:	00 00                	add    BYTE PTR [rax],al
    5259:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    525c:	00 e5                	add    ch,ah
    525e:	09 00                	or     DWORD PTR [rax],eax
    5260:	00 01                	add    BYTE PTR [rcx],al
    5262:	66 00 00             	data16 add BYTE PTR [rax],al
    5265:	00 01                	add    BYTE PTR [rcx],al
    5267:	89 01                	mov    DWORD PTR [rcx],eax
    5269:	00 00                	add    BYTE PTR [rax],al
    526b:	01 2e                	add    DWORD PTR [rsi],ebp
    526d:	00 00                	add    BYTE PTR [rax],al
    526f:	00 01                	add    BYTE PTR [rcx],al
    5271:	2e 00 00             	cs add BYTE PTR [rax],al
    5274:	00 00                	add    BYTE PTR [rax],al
    5276:	0b 98 09 00 00 12    	or     ebx,DWORD PTR [rax+0x12000009]
    527c:	1d 10 5f 32 00       	sbb    eax,0x325f10
    5281:	00 c0                	add    al,al
    5283:	01 00                	add    DWORD PTR [rax],eax
    5285:	00 09                	add    BYTE PTR [rcx],cl
    5287:	0a 00                	or     al,BYTE PTR [rax]
    5289:	00 01                	add    BYTE PTR [rcx],al
    528b:	66 00 00             	data16 add BYTE PTR [rax],al
    528e:	00 01                	add    BYTE PTR [rcx],al
    5290:	89 01                	mov    DWORD PTR [rcx],eax
    5292:	00 00                	add    BYTE PTR [rax],al
    5294:	01 2e                	add    DWORD PTR [rsi],ebp
    5296:	00 00                	add    BYTE PTR [rax],al
    5298:	00 00                	add    BYTE PTR [rax],al
    529a:	0b 50 0b             	or     edx,DWORD PTR [rax+0xb]
    529d:	00 00                	add    BYTE PTR [rax],al
    529f:	02 1b                	add    bl,BYTE PTR [rbx]
    52a1:	0c d0                	or     al,0xd0
    52a3:	2d 00 00 66 00       	sub    eax,0x660000
    52a8:	00 00                	add    BYTE PTR [rax],al
    52aa:	29 0a                	sub    DWORD PTR [rdx],ecx
    52ac:	00 00                	add    BYTE PTR [rax],al
    52ae:	01 f0                	add    eax,esi
    52b0:	00 00                	add    BYTE PTR [rax],al
    52b2:	00 01                	add    BYTE PTR [rcx],al
    52b4:	66 00 00             	data16 add BYTE PTR [rax],al
    52b7:	00 1a                	add    BYTE PTR [rdx],bl
    52b9:	00 08                	add    BYTE PTR [rax],cl
    52bb:	7b 0a                	jnp    52c7 <__FRAME_END__+0x537>
    52bd:	00 00                	add    BYTE PTR [rax],al
    52bf:	02 1a                	add    bl,BYTE PTR [rdx]
    52c1:	0c 66                	or     al,0x66
    52c3:	00 00                	add    BYTE PTR [rax],al
    52c5:	00 44 0a 00          	add    BYTE PTR [rdx+rcx*1+0x0],al
    52c9:	00 01                	add    BYTE PTR [rcx],al
    52cb:	f0 00 00             	lock add BYTE PTR [rax],al
    52ce:	00 01                	add    BYTE PTR [rcx],al
    52d0:	66 00 00             	data16 add BYTE PTR [rax],al
    52d3:	00 00                	add    BYTE PTR [rax],al
    52d5:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    52d7:	0a 00                	or     al,BYTE PTR [rax]
    52d9:	00 25 1b d8 09 00    	add    BYTE PTR [rip+0x9d81b],ah        # a2afa <_end+0x9cae2>
    52df:	00 23                	add    BYTE PTR [rbx],ah
    52e1:	07                   	(bad)
    52e2:	79 15                	jns    52f9 <__FRAME_END__+0x569>
    52e4:	00 00                	add    BYTE PTR [rax],al
    52e6:	13 66 01             	adc    esp,DWORD PTR [rsi+0x1]
    52e9:	0c 66                	or     al,0x66
    52eb:	00 00                	add    BYTE PTR [rax],al
    52ed:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    52f0:	00 00                	add    BYTE PTR [rax],al
    52f2:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    52f5:	00 00                	add    BYTE PTR [rax],al
    52f7:	00 07                	add    BYTE PTR [rdi],al
    52f9:	91                   	xchg   ecx,eax
    52fa:	06                   	(bad)
    52fb:	00 00                	add    BYTE PTR [rax],al
    52fd:	06                   	(bad)
    52fe:	a3 02 0e 89 01 00 00 	movabs ds:0xa83000001890e02,eax
    5305:	83 0a 
    5307:	00 00                	add    BYTE PTR [rax],al
    5309:	01 2e                	add    DWORD PTR [rsi],ebp
    530b:	00 00                	add    BYTE PTR [rax],al
    530d:	00 01                	add    BYTE PTR [rcx],al
    530f:	2e 00 00             	cs add BYTE PTR [rax],al
    5312:	00 00                	add    BYTE PTR [rax],al
    5314:	08 c2                	or     dl,al
    5316:	0a 00                	or     al,BYTE PTR [rax]
    5318:	00 14 cd 0c 66 00 00 	add    BYTE PTR [rcx*8+0x660c],dl
    531f:	00 9e 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bl
    5325:	f0 00 00             	lock add BYTE PTR [rax],al
    5328:	00 01                	add    BYTE PTR [rcx],al
    532a:	9e                   	sahf
    532b:	0a 00                	or     al,BYTE PTR [rax]
    532d:	00 00                	add    BYTE PTR [rax],al
    532f:	09 a4 08 00 00 30 ad 	or     DWORD PTR [rax+rcx*1-0x52d00000],esp
    5336:	05 00 00 15 45       	add    eax,0x45150000
    533b:	0d c4 0a 00 00       	or     eax,0xac4
    5340:	01 f0                	add    eax,esi
    5342:	00 00                	add    BYTE PTR [rax],al
    5344:	00 01                	add    BYTE PTR [rcx],al
    5346:	f0 00 00             	lock add BYTE PTR [rax],al
    5349:	00 01                	add    BYTE PTR [rcx],al
    534b:	08 01                	or     BYTE PTR [rcx],al
    534d:	00 00                	add    BYTE PTR [rax],al
    534f:	01 f0                	add    eax,esi
    5351:	00 00                	add    BYTE PTR [rax],al
    5353:	00 00                	add    BYTE PTR [rax],al
    5355:	1c 63                	sbb    al,0x63
    5357:	0a 00                	or     al,BYTE PTR [rax]
    5359:	00 21                	add    BYTE PTR [rcx],ah
    535b:	0a ac 09 00 00 8b 09 	or     ch,BYTE PTR [rcx+rcx*1+0x98b0000]
    5362:	00 00                	add    BYTE PTR [rax],al
    5364:	40 25 00 00 00 00    	rex and eax,0x0
    536a:	00 00                	add    BYTE PTR [rax],al
    536c:	62                   	(bad)
    536d:	00 00                	add    BYTE PTR [rax],al
    536f:	00 00                	add    BYTE PTR [rax],al
    5371:	00 00                	add    BYTE PTR [rax],al
    5373:	00 01                	add    BYTE PTR [rcx],al
    5375:	9c                   	pushf
    5376:	ca 0b 00             	retf   0xb
    5379:	00 10                	add    BYTE PTR [rax],dl
    537b:	9e                   	sahf
    537c:	03 00                	add    eax,DWORD PTR [rax]
    537e:	00 21                	add    BYTE PTR [rcx],ah
    5380:	1b bb 01 00 00 33    	sbb    edi,DWORD PTR [rbx+0x33000001]
    5386:	1a 00                	sbb    al,BYTE PTR [rax]
    5388:	00 29                	add    BYTE PTR [rcx],ch
    538a:	1a 00                	sbb    al,BYTE PTR [rax]
    538c:	00 10                	add    BYTE PTR [rax],dl
    538e:	7e 0b                	jle    539b <__FRAME_END__+0x60b>
    5390:	00 00                	add    BYTE PTR [rax],al
    5392:	21 28                	and    DWORD PTR [rax],ebp
    5394:	2e 00 00             	cs add BYTE PTR [rax],al
    5397:	00 67 1a             	add    BYTE PTR [rdi+0x1a],ah
    539a:	00 00                	add    BYTE PTR [rax],al
    539c:	5d                   	pop    rbp
    539d:	1a 00                	sbb    al,BYTE PTR [rax]
    539f:	00 1d cd 03 00 00    	add    BYTE PTR [rip+0x3cd],bl        # 5772 <__FRAME_END__+0x9e2>
    53a5:	da 0b                	fimul  DWORD PTR [rbx]
    53a7:	00 00                	add    BYTE PTR [rax],al
    53a9:	09 03                	or     DWORD PTR [rbx],eax
    53ab:	58                   	pop    rax
    53ac:	44 00 00             	add    BYTE PTR [rax],r8b
    53af:	00 00                	add    BYTE PTR [rax],al
    53b1:	00 00                	add    BYTE PTR [rax],al
    53b3:	0d 5d 0b 00 00       	or     eax,0xb5d
    53b8:	24 0b                	and    al,0xb
    53ba:	bb 01 00 00 95       	mov    ebx,0x95000001
    53bf:	1a 00                	sbb    al,BYTE PTR [rax]
    53c1:	00 91 1a 00 00 0d    	add    BYTE PTR [rcx+0xd00001a],dl
    53c7:	be 04 00 00 25       	mov    esi,0x25000004
    53cc:	0e                   	(bad)
    53cd:	8b 09                	mov    ecx,DWORD PTR [rcx]
    53cf:	00 00                	add    BYTE PTR [rax],al
    53d1:	a8 1a                	test   al,0x1a
    53d3:	00 00                	add    BYTE PTR [rax],al
    53d5:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    53d6:	1a 00                	sbb    al,BYTE PTR [rax]
    53d8:	00 1e                	add    BYTE PTR [rsi],bl
    53da:	6b 0e 00             	imul   ecx,DWORD PTR [rsi],0x0
    53dd:	00 68 25             	add    BYTE PTR [rax+0x25],ch
    53e0:	00 00                	add    BYTE PTR [rax],al
    53e2:	00 00                	add    BYTE PTR [rax],al
    53e4:	00 00                	add    BYTE PTR [rax],al
    53e6:	01 ae 02 00 00 29    	add    DWORD PTR [rsi+0x29000002],ebp
    53ec:	1b 8e 0b 00 00 0c    	sbb    ecx,DWORD PTR [rsi+0xc00000b]
    53f2:	8b 0e                	mov    ecx,DWORD PTR [rsi]
    53f4:	00 00                	add    BYTE PTR [rax],al
    53f6:	ba 1a 00 00 b8       	mov    edx,0xb800001a
    53fb:	1a 00                	sbb    al,BYTE PTR [rax]
    53fd:	00 0c 80             	add    BYTE PTR [rax+rax*4],cl
    5400:	0e                   	(bad)
    5401:	00 00                	add    BYTE PTR [rax],al
    5403:	c5 1a 00             	(bad)
    5406:	00 c3                	add    bl,al
    5408:	1a 00                	sbb    al,BYTE PTR [rax]
    540a:	00 11                	add    BYTE PTR [rcx],dl
    540c:	6d                   	ins    DWORD PTR es:[rdi],dx
    540d:	25 00 00 00 00       	and    eax,0x0
    5412:	00 00                	add    BYTE PTR [rax],al
    5414:	97                   	xchg   edi,eax
    5415:	0e                   	(bad)
    5416:	00 00                	add    BYTE PTR [rax],al
    5418:	05 01 54 01 3a       	add    eax,0x3a015401
    541d:	00 00                	add    BYTE PTR [rax],al
    541f:	11 a2 25 00 00 00    	adc    DWORD PTR [rdx+0x25],esp
    5425:	00 00                	add    BYTE PTR [rax],al
    5427:	00 a3 0a 00 00 05    	add    BYTE PTR [rbx+0x500000a],ah
    542d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    5430:	03 1d 40 00 00 00    	add    ebx,DWORD PTR [rip+0x40]        # 5476 <__FRAME_END__+0x6e6>
    5436:	00 00                	add    BYTE PTR [rax],al
    5438:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a83f <_end+0x3094827>
    543e:	4a                   	rex.WX
    543f:	41 00 00             	add    BYTE PTR [r8],al
    5442:	00 00                	add    BYTE PTR [rax],al
    5444:	00 00                	add    BYTE PTR [rax],al
    5446:	05 01 51 02 08       	add    eax,0x8025101
    544b:	22 05 01 52 09 03    	and    al,BYTE PTR [rip+0x3095201]        # 309a652 <_end+0x309463a>
    5451:	58                   	pop    rax
    5452:	44 00 00             	add    BYTE PTR [rax],r8b
    5455:	00 00                	add    BYTE PTR [rax],al
    5457:	00 00                	add    BYTE PTR [rax],al
    5459:	00 00                	add    BYTE PTR [rax],al
    545b:	15 fc 00 00 00       	adc    eax,0xfc
    5460:	da 0b                	fimul  DWORD PTR [rbx]
    5462:	00 00                	add    BYTE PTR [rax],al
    5464:	16                   	(bad)
    5465:	3a 00                	cmp    al,BYTE PTR [rax]
    5467:	00 00                	add    BYTE PTR [rax],al
    5469:	22 00                	and    al,BYTE PTR [rax]
    546b:	0f ca                	bswap  edx
    546d:	0b 00                	or     eax,DWORD PTR [rax]
    546f:	00 1c be             	add    BYTE PTR [rsi+rdi*4],bl
    5472:	09 00                	or     DWORD PTR [rax],eax
    5474:	00 0b                	add    BYTE PTR [rbx],cl
    5476:	07                   	(bad)
    5477:	c7                   	(bad)
    5478:	09 00                	or     DWORD PTR [rax],eax
    547a:	00 bb 01 00 00 30    	add    BYTE PTR [rbx+0x30000001],bh
    5480:	24 00                	and    al,0x0
    5482:	00 00                	add    BYTE PTR [rax],al
    5484:	00 00                	add    BYTE PTR [rax],al
    5486:	00 08                	add    BYTE PTR [rax],cl
    5488:	01 00                	add    DWORD PTR [rax],eax
    548a:	00 00                	add    BYTE PTR [rax],al
    548c:	00 00                	add    BYTE PTR [rax],al
    548e:	00 01                	add    BYTE PTR [rcx],al
    5490:	9c                   	pushf
    5491:	f4                   	hlt
    5492:	0d 00 00 10 4d       	or     eax,0x4d100000
    5497:	0e                   	(bad)
    5498:	00 00                	add    BYTE PTR [rax],al
    549a:	0b 1c f0             	or     ebx,DWORD PTR [rax+rsi*8]
    549d:	00 00                	add    BYTE PTR [rax],al
    549f:	00 db                	add    bl,bl
    54a1:	1a 00                	sbb    al,BYTE PTR [rax]
    54a3:	00 cd                	add    ch,cl
    54a5:	1a 00                	sbb    al,BYTE PTR [rax]
    54a7:	00 10                	add    BYTE PTR [rax],dl
    54a9:	83 0b 00             	or     DWORD PTR [rbx],0x0
    54ac:	00 0b                	add    BYTE PTR [rbx],cl
    54ae:	2e f4                	cs hlt
    54b0:	0d 00 00 1d 1b       	or     eax,0x1b1d0000
    54b5:	00 00                	add    BYTE PTR [rax],al
    54b7:	13 1b                	adc    ebx,DWORD PTR [rbx]
    54b9:	00 00                	add    BYTE PTR [rax],al
    54bb:	1d cd 03 00 00       	sbb    eax,0x3cd
    54c0:	09 0e                	or     DWORD PTR [rsi],ecx
    54c2:	00 00                	add    BYTE PTR [rax],al
    54c4:	09 03                	or     DWORD PTR [rbx],eax
    54c6:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    54ca:	00 00                	add    BYTE PTR [rax],al
    54cc:	00 00                	add    BYTE PTR [rax],al
    54ce:	31 bd 0a 00 00 01    	xor    DWORD PTR [rbp+0x100000a],edi
    54d4:	0e                   	(bad)
    54d5:	11 a4 08 00 00 02 77 	adc    DWORD PTR [rax+rcx*1+0x77020000],esp
    54dc:	00 0d 7e 0b 00 00    	add    BYTE PTR [rip+0xb7e],cl        # 6060 <_end+0x48>
    54e2:	11 0c 2e             	adc    DWORD PTR [rsi+rbp*1],ecx
    54e5:	00 00                	add    BYTE PTR [rax],al
    54e7:	00 46 1b             	add    BYTE PTR [rsi+0x1b],al
    54ea:	00 00                	add    BYTE PTR [rax],al
    54ec:	44 1b 00             	sbb    r8d,DWORD PTR [rax]
    54ef:	00 0d 16 0b 00 00    	add    BYTE PTR [rip+0xb16],cl        # 600b <__dso_handle+0x3>
    54f5:	14 09                	adc    al,0x9
    54f7:	66 00 00             	data16 add BYTE PTR [rax],al
    54fa:	00 51 1b             	add    BYTE PTR [rcx+0x1b],dl
    54fd:	00 00                	add    BYTE PTR [rax],al
    54ff:	4d 1b 00             	sbb    r8,QWORD PTR [r8]
    5502:	00 0d 9e 03 00 00    	add    BYTE PTR [rip+0x39e],cl        # 58a6 <__FRAME_END__+0xb16>
    5508:	17                   	(bad)
    5509:	0b bb 01 00 00 64    	or     edi,DWORD PTR [rbx+0x64000001]
    550f:	1b 00                	sbb    eax,DWORD PTR [rax]
    5511:	00 60 1b             	add    BYTE PTR [rax+0x1b],ah
    5514:	00 00                	add    BYTE PTR [rax],al
    5516:	32 1a                	xor    bl,BYTE PTR [rdx]
    5518:	0a 00                	or     al,BYTE PTR [rax]
    551a:	00 01                	add    BYTE PTR [rcx],al
    551c:	1a 0d c0 01 00 00    	sbb    cl,BYTE PTR [rip+0x1c0]        # 56e2 <__FRAME_END__+0x952>
    5522:	1e                   	(bad)
    5523:	0e                   	(bad)
    5524:	0e                   	(bad)
    5525:	00 00                	add    BYTE PTR [rax],al
    5527:	aa                   	stos   BYTE PTR es:[rdi],al
    5528:	24 00                	and    al,0x0
    552a:	00 00                	add    BYTE PTR [rax],al
    552c:	00 00                	add    BYTE PTR [rax],al
    552e:	00 01                	add    BYTE PTR [rcx],al
    5530:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5531:	02 00                	add    al,BYTE PTR [rax]
    5533:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    5536:	dd 0c 00             	fisttp QWORD PTR [rax+rax*1]
    5539:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    553c:	0e                   	(bad)
    553d:	00 00                	add    BYTE PTR [rax],al
    553f:	75 1b                	jne    555c <__FRAME_END__+0x7cc>
    5541:	00 00                	add    BYTE PTR [rax],al
    5543:	73 1b                	jae    5560 <__FRAME_END__+0x7d0>
    5545:	00 00                	add    BYTE PTR [rax],al
    5547:	0c 1d                	or     al,0x1d
    5549:	0e                   	(bad)
    554a:	00 00                	add    BYTE PTR [rax],al
    554c:	7f 1b                	jg     5569 <__FRAME_END__+0x7d9>
    554e:	00 00                	add    BYTE PTR [rax],al
    5550:	7d 1b                	jge    556d <__FRAME_END__+0x7dd>
    5552:	00 00                	add    BYTE PTR [rax],al
    5554:	11 af 24 00 00 00    	adc    DWORD PTR [rdi+0x24],ebp
    555a:	00 00                	add    BYTE PTR [rax],al
    555c:	00 09                	add    BYTE PTR [rcx],cl
    555e:	0a 00                	or     al,BYTE PTR [rax]
    5560:	00 05 01 55 02 73    	add    BYTE PTR [rip+0x73025501],al        # 7302aa67 <_end+0x73024a4f>
    5566:	00 05 01 54 01 30    	add    BYTE PTR [rip+0x30015401],al        # 3001a96d <_end+0x30014955>
    556c:	00 00                	add    BYTE PTR [rax],al
    556e:	33 37                	xor    esi,DWORD PTR [rdi]
    5570:	0e                   	(bad)
    5571:	00 00                	add    BYTE PTR [rax],al
    5573:	cc                   	int3
    5574:	24 00                	and    al,0x0
    5576:	00 00                	add    BYTE PTR [rax],al
    5578:	00 00                	add    BYTE PTR [rax],al
    557a:	00 01                	add    BYTE PTR [rcx],al
    557c:	cc                   	int3
    557d:	24 00                	and    al,0x0
    557f:	00 00                	add    BYTE PTR [rax],al
    5581:	00 00                	add    BYTE PTR [rax],al
    5583:	00 0e                	add    BYTE PTR [rsi],cl
    5585:	00 00                	add    BYTE PTR [rax],al
    5587:	00 00                	add    BYTE PTR [rax],al
    5589:	00 00                	add    BYTE PTR [rax],al
    558b:	00 01                	add    BYTE PTR [rcx],al
    558d:	1a 19                	sbb    bl,BYTE PTR [rcx]
    558f:	4a 0d 00 00 0c 5e    	rex.WX or rax,0x5e0c0000
    5595:	0e                   	(bad)
    5596:	00 00                	add    BYTE PTR [rax],al
    5598:	88 1b                	mov    BYTE PTR [rbx],bl
    559a:	00 00                	add    BYTE PTR [rax],al
    559c:	86 1b                	xchg   BYTE PTR [rbx],bl
    559e:	00 00                	add    BYTE PTR [rax],al
    55a0:	0c 52                	or     al,0x52
    55a2:	0e                   	(bad)
    55a3:	00 00                	add    BYTE PTR [rax],al
    55a5:	94                   	xchg   esp,eax
    55a6:	1b 00                	sbb    eax,DWORD PTR [rax]
    55a8:	00 90 1b 00 00 0c    	add    BYTE PTR [rax+0xc00001b],dl
    55ae:	46 0e                	rex.RX (bad)
    55b0:	00 00                	add    BYTE PTR [rax],al
    55b2:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    55b3:	1b 00                	sbb    eax,DWORD PTR [rax]
    55b5:	00 a3 1b 00 00 11    	add    BYTE PTR [rbx+0x1100001b],ah
    55bb:	da 24 00             	fisub  DWORD PTR [rax+rax*1]
    55be:	00 00                	add    BYTE PTR [rax],al
    55c0:	00 00                	add    BYTE PTR [rax],al
    55c2:	00 e5                	add    ch,ah
    55c4:	09 00                	or     DWORD PTR [rax],eax
    55c6:	00 05 01 55 02 7c    	add    BYTE PTR [rip+0x7c025501],al        # 7c02aacd <_end+0x7c024ab5>
    55cc:	00 05 01 54 02 73    	add    BYTE PTR [rip+0x73025401],al        # 7302a9d3 <_end+0x730249bb>
    55d2:	00 05 01 51 02 7d    	add    BYTE PTR [rip+0x7d025101],al        # 7d02a6d9 <_end+0x7d0246c1>
    55d8:	00 00                	add    BYTE PTR [rax],al
    55da:	00 34 90             	add    BYTE PTR [rax+rdx*4],dh
    55dd:	24 00                	and    al,0x0
    55df:	00 00                	add    BYTE PTR [rax],al
    55e1:	00 00                	add    BYTE PTR [rax],al
    55e3:	00 01                	add    BYTE PTR [rcx],al
    55e5:	30 12                	xor    BYTE PTR [rdx],dl
    55e7:	95                   	xchg   ebp,eax
    55e8:	24 00                	and    al,0x0
    55ea:	00 00                	add    BYTE PTR [rax],al
    55ec:	00 00                	add    BYTE PTR [rax],al
    55ee:	00 83 0a 00 00 73    	add    BYTE PTR [rbx+0x7300000a],al
    55f4:	0d 00 00 05 01       	or     eax,0x1050000
    55f9:	55                   	push   rbp
    55fa:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    55fd:	05 01 54 02 77       	add    eax,0x77025401
    5602:	00 00                	add    BYTE PTR [rax],al
    5604:	12 c4                	adc    al,ah
    5606:	24 00                	and    al,0x0
    5608:	00 00                	add    BYTE PTR [rax],al
    560a:	00 00                	add    BYTE PTR [rax],al
    560c:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    560f:	00 00                	add    BYTE PTR [rax],al
    5611:	90                   	nop
    5612:	0d 00 00 05 01       	or     eax,0x1050000
    5617:	55                   	push   rbp
    5618:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    561b:	05 01 54 01 31       	add    eax,0x31015401
    5620:	00 12                	add    BYTE PTR [rdx],dl
    5622:	e2 24                	loop   5648 <__FRAME_END__+0x8b8>
    5624:	00 00                	add    BYTE PTR [rax],al
    5626:	00 00                	add    BYTE PTR [rax],al
    5628:	00 00                	add    BYTE PTR [rax],al
    562a:	50                   	push   rax
    562b:	0a 00                	or     al,BYTE PTR [rax]
    562d:	00 a8 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],ch
    5633:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    5636:	7c 00                	jl     5638 <__FRAME_END__+0x8a8>
    5638:	00 12                	add    BYTE PTR [rdx],dl
    563a:	33 25 00 00 00 00    	xor    esp,DWORD PTR [rip+0x0]        # 5640 <__FRAME_END__+0x8b0>
    5640:	00 00                	add    BYTE PTR [rax],al
    5642:	a3 0a 00 00 e6 0d 00 	movabs ds:0x500000de600000a,eax
    5649:	00 05 
    564b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    564e:	03 66 41             	add    esp,DWORD PTR [rsi+0x41]
    5651:	00 00                	add    BYTE PTR [rax],al
    5653:	00 00                	add    BYTE PTR [rax],al
    5655:	00 00                	add    BYTE PTR [rax],al
    5657:	05 01 54 09 03       	add    eax,0x3095401
    565c:	4a                   	rex.WX
    565d:	41 00 00             	add    BYTE PTR [r8],al
    5660:	00 00                	add    BYTE PTR [rax],al
    5662:	00 00                	add    BYTE PTR [rax],al
    5664:	05 01 51 01 3c       	add    eax,0x3c015101
    5669:	05 01 52 09 03       	add    eax,0x3095201
    566e:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    5672:	00 00                	add    BYTE PTR [rax],al
    5674:	00 00                	add    BYTE PTR [rax],al
    5676:	00 35 38 25 00 00    	add    BYTE PTR [rip+0x2538],dh        # 7bb4 <_end+0x1b9c>
    567c:	00 00                	add    BYTE PTR [rax],al
    567e:	00 00                	add    BYTE PTR [rax],al
    5680:	a0 0e 00 00 00 09 2e 	movabs al,ds:0x2e090000000e
    5687:	00 00 
    5689:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 578b <__FRAME_END__+0x9fb>
    568f:	09 0e                	or     DWORD PTR [rsi],ecx
    5691:	00 00                	add    BYTE PTR [rax],al
    5693:	16                   	(bad)
    5694:	3a 00                	cmp    al,BYTE PTR [rax]
    5696:	00 00                	add    BYTE PTR [rax],al
    5698:	24 00                	and    al,0x0
    569a:	0f f9 0d 00 00 1f d0 	psubw  mm1,QWORD PTR [rip+0xffffffffd01f0000]        # ffffffffd01f56a1 <_end+0xffffffffd01ef689>
    56a1:	2d 00 00 02 29       	sub    eax,0x29020000
    56a6:	66 00 00             	data16 add BYTE PTR [rax],al
    56a9:	00 37                	add    BYTE PTR [rdi],dh
    56ab:	0e                   	(bad)
    56ac:	00 00                	add    BYTE PTR [rax],al
    56ae:	0e                   	(bad)
    56af:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    56b0:	09 00                	or     DWORD PTR [rax],eax
    56b2:	00 02                	add    BYTE PTR [rdx],al
    56b4:	29 13                	sub    DWORD PTR [rbx],edx
    56b6:	f0 00 00             	lock add BYTE PTR [rax],al
    56b9:	00 0e                	add    BYTE PTR [rsi],cl
    56bb:	ed                   	in     eax,dx
    56bc:	09 00                	or     DWORD PTR [rax],eax
    56be:	00 02                	add    BYTE PTR [rdx],al
    56c0:	29 1f                	sub    DWORD PTR [rdi],ebx
    56c2:	66 00 00             	data16 add BYTE PTR [rax],al
    56c5:	00 1a                	add    BYTE PTR [rdx],bl
    56c7:	00 1f                	add    BYTE PTR [rdi],bl
    56c9:	5f                   	pop    rdi
    56ca:	32 00                	xor    al,BYTE PTR [rax]
    56cc:	00 03                	add    BYTE PTR [rbx],al
    56ce:	1a c0                	sbb    al,al
    56d0:	01 00                	add    DWORD PTR [rax],eax
    56d2:	00 6b 0e             	add    BYTE PTR [rbx+0xe],ch
    56d5:	00 00                	add    BYTE PTR [rax],al
    56d7:	0e                   	(bad)
    56d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56d9:	0a 00                	or     al,BYTE PTR [rax]
    56db:	00 03                	add    BYTE PTR [rbx],al
    56dd:	1a 0b                	sbb    cl,BYTE PTR [rbx]
    56df:	66 00 00             	data16 add BYTE PTR [rax],al
    56e2:	00 0e                	add    BYTE PTR [rsi],cl
    56e4:	d3 0a                	ror    DWORD PTR [rdx],cl
    56e6:	00 00                	add    BYTE PTR [rax],al
    56e8:	03 1a                	add    ebx,DWORD PTR [rdx]
    56ea:	17                   	(bad)
    56eb:	89 01                	mov    DWORD PTR [rcx],eax
    56ed:	00 00                	add    BYTE PTR [rax],al
    56ef:	0e                   	(bad)
    56f0:	2a 0a                	sub    cl,BYTE PTR [rdx]
    56f2:	00 00                	add    BYTE PTR [rax],al
    56f4:	03 1a                	add    ebx,DWORD PTR [rdx]
    56f6:	25 2e 00 00 00       	and    eax,0x2e
    56fb:	00 36                	add    BYTE PTR [rsi],dh
    56fd:	55                   	push   rbp
    56fe:	05 00 00 04 e9       	add    eax,0xe9040000
    5703:	01 55 05             	add    DWORD PTR [rbp+0x5],edx
    5706:	00 00                	add    BYTE PTR [rax],al
    5708:	bb 01 00 00 03       	mov    ebx,0x3000001
    570d:	97                   	xchg   edi,eax
    570e:	0e                   	(bad)
    570f:	00 00                	add    BYTE PTR [rax],al
    5711:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    5714:	73 00                	jae    5716 <__FRAME_END__+0x986>
    5716:	e9 0f bb 01 00       	jmp    2122a <_end+0x1b212>
    571b:	00 20                	add    BYTE PTR [rax],ah
    571d:	5f                   	pop    rdi
    571e:	5f                   	pop    rdi
    571f:	63 00                	movsxd eax,DWORD PTR [rax]
    5721:	e9 18 66 00 00       	jmp    bd3e <_end+0x5d26>
    5726:	00 00                	add    BYTE PTR [rax],al
    5728:	21 55 05             	and    DWORD PTR [rbp+0x5],edx
    572b:	00 00                	add    BYTE PTR [rax],al
    572d:	4b 05 00 00 21 f1    	rex.WXB add rax,0xfffffffff1210000
    5733:	05 00 00 f1 05       	add    eax,0x5f10000
    5738:	00 00                	add    BYTE PTR [rax],al
    573a:	00 44 76 00          	add    BYTE PTR [rsi+rsi*2+0x0],al
    573e:	00 05 00 01 08 a1    	add    BYTE PTR [rip+0xffffffffa1080100],al        # ffffffffa1085844 <_end+0xffffffffa107f82c>
    5744:	12 00                	adc    al,BYTE PTR [rax]
    5746:	00 66 14             	add    BYTE PTR [rsi+0x14],ah
    5749:	01 00                	add    DWORD PTR [rax],eax
    574b:	00 21                	add    BYTE PTR [rcx],ah
    574d:	eb 02                	jmp    5751 <__FRAME_END__+0x9c1>
    574f:	00 00                	add    BYTE PTR [rax],al
    5751:	00 00                	add    BYTE PTR [rax],al
    5753:	00 00                	add    BYTE PTR [rax],al
    5755:	b0 25                	mov    al,0x25
    5757:	00 00                	add    BYTE PTR [rax],al
    5759:	00 00                	add    BYTE PTR [rax],al
    575b:	00 00                	add    BYTE PTR [rax],al
    575d:	3c 15                	cmp    al,0x15
    575f:	00 00                	add    BYTE PTR [rax],al
    5761:	00 00                	add    BYTE PTR [rax],al
    5763:	00 00                	add    BYTE PTR [rax],al
    5765:	b2 19                	mov    dl,0x19
    5767:	00 00                	add    BYTE PTR [rax],al
    5769:	12 08                	adc    cl,BYTE PTR [rax]
    576b:	04 f8                	add    al,0xf8
    576d:	01 00                	add    DWORD PTR [rax],eax
    576f:	00 12                	add    BYTE PTR [rdx],dl
    5771:	04 04                	add    al,0x4
    5773:	d3 00                	rol    DWORD PTR [rax],cl
    5775:	00 00                	add    BYTE PTR [rax],al
    5777:	67 73 74             	addr32 jae 57ee <__FRAME_END__+0xa5e>
    577a:	64 00 11             	add    BYTE PTR fs:[rcx],dl
    577d:	32 01                	xor    al,BYTE PTR [rcx]
    577f:	0b e3                	or     esp,ebx
    5781:	20 00                	and    BYTE PTR [rax],al
    5783:	00 18                	add    BYTE PTR [rax],bl
    5785:	03 59 07             	add    ebx,DWORD PTR [rcx+0x7]
    5788:	0b ff                	or     edi,edi
    578a:	22 00                	and    al,BYTE PTR [rax]
    578c:	00 18                	add    BYTE PTR [rax],bl
    578e:	03 5a 07             	add    ebx,DWORD PTR [rdx+0x7]
    5791:	0b f3                	or     esi,ebx
    5793:	22 00                	and    al,BYTE PTR [rax]
    5795:	00 4f b9             	add    BYTE PTR [rdi-0x47],cl
    5798:	2b 00                	sub    eax,DWORD PTR [rax]
    579a:	00 b0 0a 4f c1 2f    	add    BYTE PTR [rax+0x2fc14f0a],dh
    57a0:	00 00                	add    BYTE PTR [rax],al
    57a2:	06                   	(bad)
    57a3:	0b 3d d5 2d 00 00    	or     edi,DWORD PTR [rip+0x2dd5]        # 857e <_end+0x2566>
    57a9:	06                   	(bad)
    57aa:	32 0d 1a 61 62 73    	xor    cl,BYTE PTR [rip+0x7362611a]        # 7362b8ca <_end+0x736258b2>
    57b0:	00 07                	add    BYTE PTR [rdi],al
    57b2:	89 0f                	mov    DWORD PTR [rdi],ecx
    57b4:	03 00                	add    eax,DWORD PTR [rax]
    57b6:	00 cb                	add    bl,cl
    57b8:	24 00                	and    al,0x0
    57ba:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    57c0:	cb                   	retf
    57c1:	24 00                	and    al,0x0
    57c3:	00 00                	add    BYTE PTR [rax],al
    57c5:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57c8:	73 00                	jae    57ca <__FRAME_END__+0xa3a>
    57ca:	07                   	(bad)
    57cb:	55                   	push   rbp
    57cc:	1b 00                	sbb    eax,DWORD PTR [rax]
    57ce:	00 00                	add    BYTE PTR [rax],al
    57d0:	95                   	xchg   ebp,eax
    57d1:	24 00                	and    al,0x0
    57d3:	00 a3 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],ah
    57d9:	95                   	xchg   ebp,eax
    57da:	24 00                	and    al,0x0
    57dc:	00 00                	add    BYTE PTR [rax],al
    57de:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57e1:	73 00                	jae    57e3 <__FRAME_END__+0xa53>
    57e3:	07                   	(bad)
    57e4:	4f fb                	rex.WRXB sti
    57e6:	02 00                	add    al,BYTE PTR [rax]
    57e8:	00 c5                	add    ch,al
    57ea:	21 00                	and    DWORD PTR [rax],eax
    57ec:	00 bc 00 00 00 01 c5 	add    BYTE PTR [rax+rax*1-0x3aff0000],bh
    57f3:	21 00                	and    DWORD PTR [rax],eax
    57f5:	00 00                	add    BYTE PTR [rax],al
    57f7:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57fa:	73 00                	jae    57fc <__FRAME_END__+0xa6c>
    57fc:	07                   	(bad)
    57fd:	4b 05 03 00 00 35    	rex.WXB add rax,0x35000003
    5803:	00 00                	add    BYTE PTR [rax],al
    5805:	00 d5                	add    ch,dl
    5807:	00 00                	add    BYTE PTR [rax],al
    5809:	00 01                	add    BYTE PTR [rcx],al
    580b:	35 00 00 00 00       	xor    eax,0x0
    5810:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5813:	73 00                	jae    5815 <__FRAME_END__+0xa85>
    5815:	07                   	(bad)
    5816:	47 f1                	rex.RXB int1
    5818:	02 00                	add    al,BYTE PTR [rax]
    581a:	00 2e                	add    BYTE PTR [rsi],ch
    581c:	00 00                	add    BYTE PTR [rax],al
    581e:	00 ee                	add    dh,ch
    5820:	00 00                	add    BYTE PTR [rax],al
    5822:	00 01                	add    BYTE PTR [rcx],al
    5824:	2e 00 00             	cs add BYTE PTR [rax],al
    5827:	00 00                	add    BYTE PTR [rax],al
    5829:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    582c:	73 00                	jae    582e <__FRAME_END__+0xa9e>
    582e:	07                   	(bad)
    582f:	3d 41 00 00 00       	cmp    eax,0x41
    5834:	be 21 00 00 07       	mov    esi,0x7000021
    5839:	01 00                	add    DWORD PTR [rax],eax
    583b:	00 01                	add    BYTE PTR [rcx],al
    583d:	be 21 00 00 00       	mov    esi,0x21
    5842:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5845:	73 00                	jae    5847 <__FRAME_END__+0xab7>
    5847:	07                   	(bad)
    5848:	38 11                	cmp    BYTE PTR [rcx],dl
    584a:	00 00                	add    BYTE PTR [rax],al
    584c:	00 b2 21 00 00 20    	add    BYTE PTR [rdx+0x20000021],dh
    5852:	01 00                	add    DWORD PTR [rax],eax
    5854:	00 01                	add    BYTE PTR [rcx],al
    5856:	b2 21                	mov    dl,0x21
    5858:	00 00                	add    BYTE PTR [rax],al
    585a:	00 0f                	add    BYTE PTR [rdi],cl
    585c:	4d 29 00             	sub    QWORD PTR [r8],r8
    585f:	00 03                	add    BYTE PTR [rbx],al
    5861:	5d                   	pop    rbp
    5862:	03 91 24 00 00 c5    	add    edx,DWORD PTR [rcx-0x3affffdc]
    5868:	21 00                	and    DWORD PTR [rax],eax
    586a:	00 3a                	add    BYTE PTR [rdx],bh
    586c:	01 00                	add    DWORD PTR [rax],eax
    586e:	00 01                	add    BYTE PTR [rcx],al
    5870:	c5 21 00             	(bad)
    5873:	00 00                	add    BYTE PTR [rax],al
    5875:	0f 4d 29             	cmovge ebp,DWORD PTR [rcx]
    5878:	00 00                	add    BYTE PTR [rax],al
    587a:	03 59 03             	add    ebx,DWORD PTR [rcx+0x3]
    587d:	9c                   	pushf
    587e:	24 00                	and    al,0x0
    5880:	00 35 00 00 00 54    	add    BYTE PTR [rip+0x54000000],dh        # 54005886 <_end+0x53fff86e>
    5886:	01 00                	add    DWORD PTR [rax],eax
    5888:	00 01                	add    BYTE PTR [rcx],al
    588a:	35 00 00 00 00       	xor    eax,0x0
    588f:	0f b5 29             	lgs    ebp,FWORD PTR [rcx]
    5892:	00 00                	add    BYTE PTR [rax],al
    5894:	03 70 03             	add    esi,DWORD PTR [rax+0x3]
    5897:	73 18                	jae    58b1 <__FRAME_END__+0xb21>
    5899:	00 00                	add    BYTE PTR [rax],al
    589b:	c5 21 00             	(bad)
    589e:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    58a1:	00 00                	add    BYTE PTR [rax],al
    58a3:	01 c5                	add    ebp,eax
    58a5:	21 00                	and    DWORD PTR [rax],eax
    58a7:	00 00                	add    BYTE PTR [rax],al
    58a9:	0f b5 29             	lgs    ebp,FWORD PTR [rcx]
    58ac:	00 00                	add    BYTE PTR [rax],al
    58ae:	03 6c 03 7e          	add    ebp,DWORD PTR [rbx+rax*1+0x7e]
    58b2:	18 00                	sbb    BYTE PTR [rax],al
    58b4:	00 35 00 00 00 88    	add    BYTE PTR [rip+0xffffffff88000000],dh        # ffffffff880058ba <_end+0xffffffff87fff8a2>
    58ba:	01 00                	add    DWORD PTR [rax],eax
    58bc:	00 01                	add    BYTE PTR [rcx],al
    58be:	35 00 00 00 00       	xor    eax,0x0
    58c3:	0f 9d 26             	setge  BYTE PTR [rsi]
    58c6:	00 00                	add    BYTE PTR [rax],al
    58c8:	03 83 03 5d 14 00    	add    eax,DWORD PTR [rbx+0x145d03]
    58ce:	00 c5                	add    ch,al
    58d0:	21 00                	and    DWORD PTR [rax],eax
    58d2:	00 a2 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],ah
    58d8:	c5 21 00             	(bad)
    58db:	00 00                	add    BYTE PTR [rax],al
    58dd:	0f 9d 26             	setge  BYTE PTR [rsi]
    58e0:	00 00                	add    BYTE PTR [rax],al
    58e2:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    58e5:	68 14 00 00 35       	push   0x35000014
    58ea:	00 00                	add    BYTE PTR [rax],al
    58ec:	00 bc 01 00 00 01 35 	add    BYTE PTR [rcx+rax*1+0x35010000],bh
    58f3:	00 00                	add    BYTE PTR [rax],al
    58f5:	00 00                	add    BYTE PTR [rax],al
    58f7:	0f 3f                	(bad)
    58f9:	32 00                	xor    al,BYTE PTR [rax]
    58fb:	00 03                	add    BYTE PTR [rbx],al
    58fd:	96                   	xchg   esi,eax
    58fe:	03 64 23 00          	add    esp,DWORD PTR [rbx+riz*1+0x0]
    5902:	00 c5                	add    ch,al
    5904:	21 00                	and    DWORD PTR [rax],eax
    5906:	00 db                	add    bl,bl
    5908:	01 00                	add    DWORD PTR [rax],eax
    590a:	00 01                	add    BYTE PTR [rcx],al
    590c:	c5 21 00             	(bad)
    590f:	00 01                	add    BYTE PTR [rcx],al
    5911:	c5 21 00             	(bad)
    5914:	00 00                	add    BYTE PTR [rax],al
    5916:	0f 3f                	(bad)
    5918:	32 00                	xor    al,BYTE PTR [rax]
    591a:	00 03                	add    BYTE PTR [rbx],al
    591c:	92                   	xchg   edx,eax
    591d:	03 e2                	add    esp,edx
    591f:	24 00                	and    al,0x0
    5921:	00 35 00 00 00 fa    	add    BYTE PTR [rip+0xfffffffffa000000],dh        # fffffffffa005927 <_end+0xfffffffff9fff90f>
    5927:	01 00                	add    DWORD PTR [rax],eax
    5929:	00 01                	add    BYTE PTR [rcx],al
    592b:	35 00 00 00 01       	xor    eax,0x1000000
    5930:	35 00 00 00 00       	xor    eax,0x0
    5935:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    5938:	73 00                	jae    593a <__FRAME_END__+0xbaa>
    593a:	03 b5 ad 25 00 00    	add    esi,DWORD PTR [rbp+0x25ad]
    5940:	c5 21 00             	(bad)
    5943:	00 13                	add    BYTE PTR [rbx],dl
    5945:	02 00                	add    al,BYTE PTR [rax]
    5947:	00 01                	add    BYTE PTR [rcx],al
    5949:	c5 21 00             	(bad)
    594c:	00 00                	add    BYTE PTR [rax],al
    594e:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    5951:	73 00                	jae    5953 <__FRAME_END__+0xbc3>
    5953:	03 b1 b7 25 00 00    	add    esi,DWORD PTR [rcx+0x25b7]
    5959:	35 00 00 00 2c       	xor    eax,0x2c000000
    595e:	02 00                	add    al,BYTE PTR [rax]
    5960:	00 01                	add    BYTE PTR [rcx],al
    5962:	35 00 00 00 00       	xor    eax,0x0
    5967:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    596c:	94                   	xchg   esp,eax
    596d:	01 96 19 00 00 c5    	add    DWORD PTR [rsi-0x3affffe7],edx
    5973:	21 00                	and    DWORD PTR [rax],eax
    5975:	00 45 02             	add    BYTE PTR [rbp+0x2],al
    5978:	00 00                	add    BYTE PTR [rax],al
    597a:	01 c5                	add    ebp,eax
    597c:	21 00                	and    DWORD PTR [rax],eax
    597e:	00 00                	add    BYTE PTR [rax],al
    5980:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    5985:	90                   	nop
    5986:	01 a0 19 00 00 35    	add    DWORD PTR [rax+0x35000019],esp
    598c:	00 00                	add    BYTE PTR [rax],al
    598e:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
    5991:	00 00                	add    BYTE PTR [rax],al
    5993:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5999 <__FRAME_END__+0xc09>
    5999:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    599e:	cd 01                	int    0x1
    59a0:	e1 31                	loope  59d3 <__FRAME_END__+0xc43>
    59a2:	00 00                	add    BYTE PTR [rax],al
    59a4:	c5 21 00             	(bad)
    59a7:	00 77 02             	add    BYTE PTR [rdi+0x2],dh
    59aa:	00 00                	add    BYTE PTR [rax],al
    59ac:	01 c5                	add    ebp,eax
    59ae:	21 00                	and    DWORD PTR [rax],eax
    59b0:	00 00                	add    BYTE PTR [rax],al
    59b2:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    59b7:	c9                   	leave
    59b8:	01 90 15 00 00 35    	add    DWORD PTR [rax+0x35000015],edx
    59be:	00 00                	add    BYTE PTR [rax],al
    59c0:	00 90 02 00 00 01    	add    BYTE PTR [rax+0x1000002],dl
    59c6:	35 00 00 00 00       	xor    eax,0x0
    59cb:	0f 1c 2a             	nop    DWORD PTR [rdx]
    59ce:	00 00                	add    BYTE PTR [rax],al
    59d0:	03 c8                	add    ecx,eax
    59d2:	03 8a 2d 00 00 c5    	add    ecx,DWORD PTR [rdx-0x3affffd3]
    59d8:	21 00                	and    DWORD PTR [rax],eax
    59da:	00 aa 02 00 00 01    	add    BYTE PTR [rdx+0x1000002],ch
    59e0:	c5 21 00             	(bad)
    59e3:	00 00                	add    BYTE PTR [rax],al
    59e5:	0f 1c 2a             	nop    DWORD PTR [rdx]
    59e8:	00 00                	add    BYTE PTR [rax],al
    59ea:	03 c4                	add    eax,esp
    59ec:	03 95 2d 00 00 35    	add    edx,DWORD PTR [rbp+0x3500002d]
    59f2:	00 00                	add    BYTE PTR [rax],al
    59f4:	00 c4                	add    ah,al
    59f6:	02 00                	add    al,BYTE PTR [rax]
    59f8:	00 01                	add    BYTE PTR [rcx],al
    59fa:	35 00 00 00 00       	xor    eax,0x0
    59ff:	04 e8                	add    al,0xe8
    5a01:	1e                   	(bad)
    5a02:	00 00                	add    BYTE PTR [rax],al
    5a04:	03 a7 01 03 dc 1e    	add    esp,DWORD PTR [rdi+0x1edc0301]
    5a0a:	00 00                	add    BYTE PTR [rax],al
    5a0c:	c5 21 00             	(bad)
    5a0f:	00 df                	add    bh,bl
    5a11:	02 00                	add    al,BYTE PTR [rax]
    5a13:	00 01                	add    BYTE PTR [rcx],al
    5a15:	c5 21 00             	(bad)
    5a18:	00 00                	add    BYTE PTR [rax],al
    5a1a:	04 e8                	add    al,0xe8
    5a1c:	1e                   	(bad)
    5a1d:	00 00                	add    BYTE PTR [rax],al
    5a1f:	03 a3 01 03 3e 17    	add    esp,DWORD PTR [rbx+0x173e0301]
    5a25:	00 00                	add    BYTE PTR [rax],al
    5a27:	35 00 00 00 fa       	xor    eax,0xfa000000
    5a2c:	02 00                	add    al,BYTE PTR [rax]
    5a2e:	00 01                	add    BYTE PTR [rcx],al
    5a30:	35 00 00 00 00       	xor    eax,0x0
    5a35:	04 18                	add    al,0x18
    5a37:	25 00 00 03 e0       	and    eax,0xe0030000
    5a3c:	01 03                	add    DWORD PTR [rbx],eax
    5a3e:	22 10                	and    dl,BYTE PTR [rax]
    5a40:	00 00                	add    BYTE PTR [rax],al
    5a42:	c5 21 00             	(bad)
    5a45:	00 15 03 00 00 01    	add    BYTE PTR [rip+0x1000003],dl        # 1005a4e <_end+0xfffa36>
    5a4b:	c5 21 00             	(bad)
    5a4e:	00 00                	add    BYTE PTR [rax],al
    5a50:	04 18                	add    al,0x18
    5a52:	25 00 00 03 dc       	and    eax,0xdc030000
    5a57:	01 03                	add    DWORD PTR [rbx],eax
    5a59:	2d 10 00 00 35       	sub    eax,0x35000010
    5a5e:	00 00                	add    BYTE PTR [rax],al
    5a60:	00 30                	add    BYTE PTR [rax],dh
    5a62:	03 00                	add    eax,DWORD PTR [rax]
    5a64:	00 01                	add    BYTE PTR [rcx],al
    5a66:	35 00 00 00 00       	xor    eax,0x0
    5a6b:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    5a6e:	70 00                	jo     5a70 <__FRAME_END__+0xce0>
    5a70:	03 db                	add    ebx,ebx
    5a72:	ea                   	(bad)
    5a73:	0d 00 00 c5 21       	or     eax,0x21c50000
    5a78:	00 00                	add    BYTE PTR [rax],al
    5a7a:	49 03 00             	add    rax,QWORD PTR [r8]
    5a7d:	00 01                	add    BYTE PTR [rcx],al
    5a7f:	c5 21 00             	(bad)
    5a82:	00 00                	add    BYTE PTR [rax],al
    5a84:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    5a87:	70 00                	jo     5a89 <__FRAME_END__+0xcf9>
    5a89:	03 d7                	add    edx,edi
    5a8b:	9f                   	lahf
    5a8c:	1a 00                	sbb    al,BYTE PTR [rax]
    5a8e:	00 35 00 00 00 62    	add    BYTE PTR [rip+0x62000000],dh        # 62005a94 <_end+0x61fffa7c>
    5a94:	03 00                	add    eax,DWORD PTR [rax]
    5a96:	00 01                	add    BYTE PTR [rcx],al
    5a98:	35 00 00 00 00       	xor    eax,0x0
    5a9d:	04 ad                	add    al,0xad
    5a9f:	27                   	(bad)
    5aa0:	00 00                	add    BYTE PTR [rax],al
    5aa2:	03 20                	add    esp,DWORD PTR [rax]
    5aa4:	01 03                	add    DWORD PTR [rbx],eax
    5aa6:	c7                   	(bad)
    5aa7:	1c 00                	sbb    al,0x0
    5aa9:	00 c5                	add    ch,al
    5aab:	21 00                	and    DWORD PTR [rax],eax
    5aad:	00 82 03 00 00 01    	add    BYTE PTR [rdx+0x1000003],al
    5ab3:	c5 21 00             	(bad)
    5ab6:	00 01                	add    BYTE PTR [rcx],al
    5ab8:	ba 25 00 00 00       	mov    edx,0x25
    5abd:	04 ad                	add    al,0xad
    5abf:	27                   	(bad)
    5ac0:	00 00                	add    BYTE PTR [rax],al
    5ac2:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    5ac5:	03 61 24             	add    esp,DWORD PTR [rcx+0x24]
    5ac8:	00 00                	add    BYTE PTR [rax],al
    5aca:	35 00 00 00 a2       	xor    eax,0xa2000000
    5acf:	03 00                	add    eax,DWORD PTR [rax]
    5ad1:	00 01                	add    BYTE PTR [rcx],al
    5ad3:	35 00 00 00 01       	xor    eax,0x1000000
    5ad8:	ba 25 00 00 00       	mov    edx,0x25
    5add:	04 9a                	add    al,0x9a
    5adf:	11 00                	adc    DWORD PTR [rax],eax
    5ae1:	00 03                	add    BYTE PTR [rbx],al
    5ae3:	33 01                	xor    eax,DWORD PTR [rcx]
    5ae5:	03 fb                	add    edi,ebx
    5ae7:	31 00                	xor    DWORD PTR [rax],eax
    5ae9:	00 c5                	add    ch,al
    5aeb:	21 00                	and    DWORD PTR [rax],eax
    5aed:	00 c2                	add    dl,al
    5aef:	03 00                	add    eax,DWORD PTR [rax]
    5af1:	00 01                	add    BYTE PTR [rcx],al
    5af3:	c5 21 00             	(bad)
    5af6:	00 01                	add    BYTE PTR [rcx],al
    5af8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5af9:	21 00                	and    DWORD PTR [rax],eax
    5afb:	00 00                	add    BYTE PTR [rax],al
    5afd:	04 9a                	add    al,0x9a
    5aff:	11 00                	adc    DWORD PTR [rax],eax
    5b01:	00 03                	add    BYTE PTR [rbx],al
    5b03:	2f                   	(bad)
    5b04:	01 03                	add    DWORD PTR [rbx],eax
    5b06:	69 1f 00 00 35 00    	imul   ebx,DWORD PTR [rdi],0x350000
    5b0c:	00 00                	add    BYTE PTR [rax],al
    5b0e:	e2 03                	loop   5b13 <__FRAME_END__+0xd83>
    5b10:	00 00                	add    BYTE PTR [rax],al
    5b12:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005b18 <_end+0xfffb00>
    5b18:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5b19:	21 00                	and    DWORD PTR [rax],eax
    5b1b:	00 00                	add    BYTE PTR [rax],al
    5b1d:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    5b22:	46 01 cd             	rex.RX add ebp,r9d
    5b25:	2b 00                	sub    eax,DWORD PTR [rax]
    5b27:	00 c5                	add    ch,al
    5b29:	21 00                	and    DWORD PTR [rax],eax
    5b2b:	00 fb                	add    bl,bh
    5b2d:	03 00                	add    eax,DWORD PTR [rax]
    5b2f:	00 01                	add    BYTE PTR [rcx],al
    5b31:	c5 21 00             	(bad)
    5b34:	00 00                	add    BYTE PTR [rax],al
    5b36:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    5b3b:	42 01 d7             	rex.X add edi,edx
    5b3e:	2b 00                	sub    eax,DWORD PTR [rax]
    5b40:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 14005b46 <_end+0x13fffb2e>
    5b46:	04 00                	add    al,0x0
    5b48:	00 01                	add    BYTE PTR [rcx],al
    5b4a:	35 00 00 00 00       	xor    eax,0x0
    5b4f:	04 75                	add    al,0x75
    5b51:	17                   	(bad)
    5b52:	00 00                	add    BYTE PTR [rax],al
    5b54:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    5b57:	03 67 0c             	add    esp,DWORD PTR [rdi+0xc]
    5b5a:	00 00                	add    BYTE PTR [rax],al
    5b5c:	c5 21 00             	(bad)
    5b5f:	00 2f                	add    BYTE PTR [rdi],ch
    5b61:	04 00                	add    al,0x0
    5b63:	00 01                	add    BYTE PTR [rcx],al
    5b65:	c5 21 00             	(bad)
    5b68:	00 00                	add    BYTE PTR [rax],al
    5b6a:	04 75                	add    al,0x75
    5b6c:	17                   	(bad)
    5b6d:	00 00                	add    BYTE PTR [rax],al
    5b6f:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    5b72:	03 73 0c             	add    esi,DWORD PTR [rbx+0xc]
    5b75:	00 00                	add    BYTE PTR [rax],al
    5b77:	35 00 00 00 4a       	xor    eax,0x4a000000
    5b7c:	04 00                	add    al,0x0
    5b7e:	00 01                	add    BYTE PTR [rcx],al
    5b80:	35 00 00 00 00       	xor    eax,0x0
    5b85:	04 7c                	add    al,0x7c
    5b87:	14 00                	adc    al,0x0
    5b89:	00 03                	add    BYTE PTR [rbx],al
    5b8b:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b8c:	01 03                	add    DWORD PTR [rbx],eax
    5b8e:	6b 15 00 00 c5 21 00 	imul   edx,DWORD PTR [rip+0x21c50000],0x0        # 21c55b95 <_end+0x21c4fb7d>
    5b95:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    5b98:	00 00                	add    BYTE PTR [rax],al
    5b9a:	01 c5                	add    ebp,eax
    5b9c:	21 00                	and    DWORD PTR [rax],eax
    5b9e:	00 01                	add    BYTE PTR [rcx],al
    5ba0:	ff 25 00 00 00 04    	jmp    QWORD PTR [rip+0x4000000]        # 4005ba6 <_end+0x3fffb8e>
    5ba6:	7c 14                	jl     5bbc <__FRAME_END__+0xe2c>
    5ba8:	00 00                	add    BYTE PTR [rax],al
    5baa:	03 68 01             	add    ebp,DWORD PTR [rax+0x1]
    5bad:	03 d9                	add    ebx,ecx
    5baf:	1d 00 00 35 00       	sbb    eax,0x350000
    5bb4:	00 00                	add    BYTE PTR [rax],al
    5bb6:	8a 04 00             	mov    al,BYTE PTR [rax+rax*1]
    5bb9:	00 01                	add    BYTE PTR [rcx],al
    5bbb:	35 00 00 00 01       	xor    eax,0x1000000
    5bc0:	0c 26                	or     al,0x26
    5bc2:	00 00                	add    BYTE PTR [rax],al
    5bc4:	00 1d 70 6f 77 00    	add    BYTE PTR [rip+0x776f70],bl        # 77cb3a <_end+0x776b22>
    5bca:	78 01                	js     5bcd <__FRAME_END__+0xe3d>
    5bcc:	39 30                	cmp    DWORD PTR [rax],esi
    5bce:	00 00                	add    BYTE PTR [rax],al
    5bd0:	c5 21 00             	(bad)
    5bd3:	00 a8 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ch
    5bd9:	c5 21 00             	(bad)
    5bdc:	00 01                	add    BYTE PTR [rcx],al
    5bde:	c5 21 00             	(bad)
    5be1:	00 00                	add    BYTE PTR [rax],al
    5be3:	1d 70 6f 77 00       	sbb    eax,0x776f70
    5be8:	74 01                	je     5beb <__FRAME_END__+0xe5b>
    5bea:	4a 31 00             	rex.WX xor QWORD PTR [rax],rax
    5bed:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc6005bf3 <_end+0xffffffffc5fffbdb>
    5bf3:	04 00                	add    al,0x0
    5bf5:	00 01                	add    BYTE PTR [rcx],al
    5bf7:	35 00 00 00 01       	xor    eax,0x1000000
    5bfc:	35 00 00 00 00       	xor    eax,0x0
    5c01:	04 e5                	add    al,0xe5
    5c03:	0d 00 00 03 ba       	or     eax,0xba030000
    5c08:	01 03                	add    DWORD PTR [rbx],eax
    5c0a:	79 22                	jns    5c2e <__FRAME_END__+0xe9e>
    5c0c:	00 00                	add    BYTE PTR [rax],al
    5c0e:	c5 21 00             	(bad)
    5c11:	00 e1                	add    cl,ah
    5c13:	04 00                	add    al,0x0
    5c15:	00 01                	add    BYTE PTR [rcx],al
    5c17:	c5 21 00             	(bad)
    5c1a:	00 00                	add    BYTE PTR [rax],al
    5c1c:	04 e5                	add    al,0xe5
    5c1e:	0d 00 00 03 b6       	or     eax,0xb6030000
    5c23:	01 03                	add    DWORD PTR [rbx],eax
    5c25:	84 22                	test   BYTE PTR [rdx],ah
    5c27:	00 00                	add    BYTE PTR [rax],al
    5c29:	35 00 00 00 fc       	xor    eax,0xfc000000
    5c2e:	04 00                	add    al,0x0
    5c30:	00 01                	add    BYTE PTR [rcx],al
    5c32:	35 00 00 00 00       	xor    eax,0x0
    5c37:	0f 08                	invd
    5c39:	32 00                	xor    al,BYTE PTR [rax]
    5c3b:	00 03                	add    BYTE PTR [rbx],al
    5c3d:	a2 03 84 2b 00 00 c5 	movabs ds:0x21c500002b8403,al
    5c44:	21 00 
    5c46:	00 16                	add    BYTE PTR [rsi],dl
    5c48:	05 00 00 01 c5       	add    eax,0xc5010000
    5c4d:	21 00                	and    DWORD PTR [rax],eax
    5c4f:	00 00                	add    BYTE PTR [rax],al
    5c51:	0f 08                	invd
    5c53:	32 00                	xor    al,BYTE PTR [rax]
    5c55:	00 03                	add    BYTE PTR [rbx],al
    5c57:	9e                   	sahf
    5c58:	03 8f 2b 00 00 35    	add    ecx,DWORD PTR [rdi+0x3500002b]
    5c5e:	00 00                	add    BYTE PTR [rax],al
    5c60:	00 30                	add    BYTE PTR [rax],dh
    5c62:	05 00 00 01 35       	add    eax,0x35010000
    5c67:	00 00                	add    BYTE PTR [rax],al
    5c69:	00 00                	add    BYTE PTR [rax],al
    5c6b:	0f d5 1c 00          	pmullw mm3,QWORD PTR [rax+rax*1]
    5c6f:	00 03                	add    BYTE PTR [rbx],al
    5c71:	ee                   	out    dx,al
    5c72:	03 77 33             	add    esi,DWORD PTR [rdi+0x33]
    5c75:	00 00                	add    BYTE PTR [rax],al
    5c77:	c5 21 00             	(bad)
    5c7a:	00 4a 05             	add    BYTE PTR [rdx+0x5],cl
    5c7d:	00 00                	add    BYTE PTR [rax],al
    5c7f:	01 c5                	add    ebp,eax
    5c81:	21 00                	and    DWORD PTR [rax],eax
    5c83:	00 00                	add    BYTE PTR [rax],al
    5c85:	0f d5 1c 00          	pmullw mm3,QWORD PTR [rax+rax*1]
    5c89:	00 03                	add    BYTE PTR [rbx],al
    5c8b:	ea                   	(bad)
    5c8c:	03 12                	add    edx,DWORD PTR [rdx]
    5c8e:	14 00                	adc    al,0x0
    5c90:	00 35 00 00 00 64    	add    BYTE PTR [rip+0x64000000],dh        # 64005c96 <_end+0x63fffc7e>
    5c96:	05 00 00 01 35       	add    eax,0x35010000
    5c9b:	00 00                	add    BYTE PTR [rax],al
    5c9d:	00 00                	add    BYTE PTR [rax],al
    5c9f:	04 da                	add    al,0xda
    5ca1:	1b 00                	sbb    eax,DWORD PTR [rax]
    5ca3:	00 03                	add    BYTE PTR [rbx],al
    5ca5:	01 01                	add    DWORD PTR [rcx],eax
    5ca7:	03 3a                	add    edi,DWORD PTR [rdx]
    5ca9:	2f                   	(bad)
    5caa:	00 00                	add    BYTE PTR [rax],al
    5cac:	c5 21 00             	(bad)
    5caf:	00 7f 05             	add    BYTE PTR [rdi+0x5],bh
    5cb2:	00 00                	add    BYTE PTR [rax],al
    5cb4:	01 c5                	add    ebp,eax
    5cb6:	21 00                	and    DWORD PTR [rax],eax
    5cb8:	00 00                	add    BYTE PTR [rax],al
    5cba:	0f da 1b             	pminub mm3,QWORD PTR [rbx]
    5cbd:	00 00                	add    BYTE PTR [rax],al
    5cbf:	03 fd                	add    edi,ebp
    5cc1:	03 46 2f             	add    eax,DWORD PTR [rsi+0x2f]
    5cc4:	00 00                	add    BYTE PTR [rax],al
    5cc6:	35 00 00 00 99       	xor    eax,0x99000000
    5ccb:	05 00 00 01 35       	add    eax,0x35010000
    5cd0:	00 00                	add    BYTE PTR [rax],al
    5cd2:	00 00                	add    BYTE PTR [rax],al
    5cd4:	04 31                	add    al,0x31
    5cd6:	16                   	(bad)
    5cd7:	00 00                	add    BYTE PTR [rax],al
    5cd9:	03 14 01             	add    edx,DWORD PTR [rcx+rax*1]
    5cdc:	03 8d 0b 00 00 c5    	add    ecx,DWORD PTR [rbp-0x3afffff5]
    5ce2:	21 00                	and    DWORD PTR [rax],eax
    5ce4:	00 b9 05 00 00 01    	add    BYTE PTR [rcx+0x1000005],bh
    5cea:	c5 21 00             	(bad)
    5ced:	00 01                	add    BYTE PTR [rcx],al
    5cef:	c5 21 00             	(bad)
    5cf2:	00 00                	add    BYTE PTR [rax],al
    5cf4:	04 31                	add    al,0x31
    5cf6:	16                   	(bad)
    5cf7:	00 00                	add    BYTE PTR [rax],al
    5cf9:	03 10                	add    edx,DWORD PTR [rax]
    5cfb:	01 03                	add    DWORD PTR [rbx],eax
    5cfd:	35 21 00 00 35       	xor    eax,0x35000021
    5d02:	00 00                	add    BYTE PTR [rax],al
    5d04:	00 d9                	add    cl,bl
    5d06:	05 00 00 01 35       	add    eax,0x35010000
    5d0b:	00 00                	add    BYTE PTR [rax],al
    5d0d:	00 01                	add    BYTE PTR [rcx],al
    5d0f:	35 00 00 00 00       	xor    eax,0x0
    5d14:	04 05                	add    al,0x5
    5d16:	15 00 00 03 53       	adc    eax,0x53030000
    5d1b:	04 03                	add    al,0x3
    5d1d:	93                   	xchg   ebx,eax
    5d1e:	14 00                	adc    al,0x0
    5d20:	00 a6 21 00 00 f4    	add    BYTE PTR [rsi-0xbffffdf],ah
    5d26:	05 00 00 01 c5       	add    eax,0xc5010000
    5d2b:	21 00                	and    DWORD PTR [rax],eax
    5d2d:	00 00                	add    BYTE PTR [rax],al
    5d2f:	04 05                	add    al,0x5
    5d31:	15 00 00 03 4e       	adc    eax,0x4e030000
    5d36:	04 03                	add    al,0x3
    5d38:	81 14 00 00 a6 21 00 	adc    DWORD PTR [rax+rax*1],0x21a600
    5d3f:	00 0f                	add    BYTE PTR [rdi],cl
    5d41:	06                   	(bad)
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	01 2e                	add    DWORD PTR [rsi],ebp
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	00 00                	add    BYTE PTR [rax],al
    5d4a:	04 05                	add    al,0x5
    5d4c:	15 00 00 03 49       	adc    eax,0x49030000
    5d51:	04 03                	add    al,0x3
    5d53:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    5d54:	14 00                	adc    al,0x0
    5d56:	00 a6 21 00 00 2a    	add    BYTE PTR [rsi+0x2a000021],ah
    5d5c:	06                   	(bad)
    5d5d:	00 00                	add    BYTE PTR [rax],al
    5d5f:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5d65 <_DYNAMIC+0x85>
    5d65:	04 2f                	add    al,0x2f
    5d67:	2e 00 00             	cs add BYTE PTR [rax],al
    5d6a:	03 6a 04             	add    ebp,DWORD PTR [rdx+0x4]
    5d6d:	03 6c 26 00          	add    ebp,DWORD PTR [rsi+riz*1+0x0]
    5d71:	00 ea                	add    dl,ch
    5d73:	20 00                	and    BYTE PTR [rax],al
    5d75:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    5d78:	00 00                	add    BYTE PTR [rax],al
    5d7a:	01 c5                	add    ebp,eax
    5d7c:	21 00                	and    DWORD PTR [rax],eax
    5d7e:	00 00                	add    BYTE PTR [rax],al
    5d80:	04 2f                	add    al,0x2f
    5d82:	2e 00 00             	cs add BYTE PTR [rax],al
    5d85:	03 66 04             	add    esp,DWORD PTR [rsi+0x4]
    5d88:	03 69 27             	add    ebp,DWORD PTR [rcx+0x27]
    5d8b:	00 00                	add    BYTE PTR [rax],al
    5d8d:	ea                   	(bad)
    5d8e:	20 00                	and    BYTE PTR [rax],al
    5d90:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    5d93:	00 00                	add    BYTE PTR [rax],al
    5d95:	01 2e                	add    DWORD PTR [rsi],ebp
    5d97:	00 00                	add    BYTE PTR [rax],al
    5d99:	00 00                	add    BYTE PTR [rax],al
    5d9b:	04 2f                	add    al,0x2f
    5d9d:	2e 00 00             	cs add BYTE PTR [rax],al
    5da0:	03 62 04             	add    esp,DWORD PTR [rdx+0x4]
    5da3:	03 8a 27 00 00 ea    	add    ecx,DWORD PTR [rdx-0x15ffffd9]
    5da9:	20 00                	and    BYTE PTR [rax],al
    5dab:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    5dae:	00 00                	add    BYTE PTR [rax],al
    5db0:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5db6 <_DYNAMIC+0xd6>
    5db6:	04 ff                	add    al,0xff
    5db8:	14 00                	adc    al,0x0
    5dba:	00 03                	add    BYTE PTR [rbx],al
    5dbc:	85 04 03             	test   DWORD PTR [rbx+rax*1],eax
    5dbf:	5d                   	pop    rbp
    5dc0:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5dc5:	00 00                	add    BYTE PTR [rax],al
    5dc7:	96                   	xchg   esi,eax
    5dc8:	06                   	(bad)
    5dc9:	00 00                	add    BYTE PTR [rax],al
    5dcb:	01 c5                	add    ebp,eax
    5dcd:	21 00                	and    DWORD PTR [rax],eax
    5dcf:	00 00                	add    BYTE PTR [rax],al
    5dd1:	04 ff                	add    al,0xff
    5dd3:	14 00                	adc    al,0x0
    5dd5:	00 03                	add    BYTE PTR [rbx],al
    5dd7:	80 04 03 51          	add    BYTE PTR [rbx+rax*1],0x51
    5ddb:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5de0:	00 00                	add    BYTE PTR [rax],al
    5de2:	b1 06                	mov    cl,0x6
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	01 2e                	add    DWORD PTR [rsi],ebp
    5de8:	00 00                	add    BYTE PTR [rax],al
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	04 ff                	add    al,0xff
    5dee:	14 00                	adc    al,0x0
    5df0:	00 03                	add    BYTE PTR [rbx],al
    5df2:	78 04                	js     5df8 <_DYNAMIC+0x118>
    5df4:	03 2f                	add    ebp,DWORD PTR [rdi]
    5df6:	18 00                	sbb    BYTE PTR [rax],al
    5df8:	00 ea                	add    dl,ch
    5dfa:	20 00                	and    BYTE PTR [rax],al
    5dfc:	00 cc                	add    ah,cl
    5dfe:	06                   	(bad)
    5dff:	00 00                	add    BYTE PTR [rax],al
    5e01:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5e07 <_DYNAMIC+0x127>
    5e07:	04 a3                	add    al,0xa3
    5e09:	1c 00                	sbb    al,0x0
    5e0b:	00 03                	add    BYTE PTR [rbx],al
    5e0d:	a0 04 03 1e 20 00 00 	movabs al,ds:0x20ea0000201e0304
    5e14:	ea 20 
    5e16:	00 00                	add    BYTE PTR [rax],al
    5e18:	e7 06                	out    0x6,eax
    5e1a:	00 00                	add    BYTE PTR [rax],al
    5e1c:	01 c5                	add    ebp,eax
    5e1e:	21 00                	and    DWORD PTR [rax],eax
    5e20:	00 00                	add    BYTE PTR [rax],al
    5e22:	04 a3                	add    al,0xa3
    5e24:	1c 00                	sbb    al,0x0
    5e26:	00 03                	add    BYTE PTR [rbx],al
    5e28:	9b                   	fwait
    5e29:	04 03                	add    al,0x3
    5e2b:	12 20                	adc    ah,BYTE PTR [rax]
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	ea                   	(bad)
    5e30:	20 00                	and    BYTE PTR [rax],al
    5e32:	00 02                	add    BYTE PTR [rdx],al
    5e34:	07                   	(bad)
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	01 2e                	add    DWORD PTR [rsi],ebp
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	04 a3                	add    al,0xa3
    5e3f:	1c 00                	sbb    al,0x0
    5e41:	00 03                	add    BYTE PTR [rbx],al
    5e43:	93                   	xchg   ebx,eax
    5e44:	04 03                	add    al,0x3
    5e46:	2a 20                	sub    ah,BYTE PTR [rax]
    5e48:	00 00                	add    BYTE PTR [rax],al
    5e4a:	ea                   	(bad)
    5e4b:	20 00                	and    BYTE PTR [rax],al
    5e4d:	00 1d 07 00 00 01    	add    BYTE PTR [rip+0x1000007],bl        # 1005e5a <_end+0xfffe42>
    5e53:	35 00 00 00 00       	xor    eax,0x0
    5e58:	04 99                	add    al,0x99
    5e5a:	34 00                	xor    al,0x0
    5e5c:	00 03                	add    BYTE PTR [rbx],al
    5e5e:	b6 04                	mov    dh,0x4
    5e60:	03 c5                	add    eax,ebp
    5e62:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5e67:	00 00                	add    BYTE PTR [rax],al
    5e69:	38 07                	cmp    BYTE PTR [rdi],al
    5e6b:	00 00                	add    BYTE PTR [rax],al
    5e6d:	01 c5                	add    ebp,eax
    5e6f:	21 00                	and    DWORD PTR [rax],eax
    5e71:	00 00                	add    BYTE PTR [rax],al
    5e73:	04 99                	add    al,0x99
    5e75:	34 00                	xor    al,0x0
    5e77:	00 03                	add    BYTE PTR [rbx],al
    5e79:	b2 04                	mov    dl,0x4
    5e7b:	03 b6 15 00 00 ea    	add    esi,DWORD PTR [rsi-0x15ffffeb]
    5e81:	20 00                	and    BYTE PTR [rax],al
    5e83:	00 53 07             	add    BYTE PTR [rbx+0x7],dl
    5e86:	00 00                	add    BYTE PTR [rax],al
    5e88:	01 2e                	add    DWORD PTR [rsi],ebp
    5e8a:	00 00                	add    BYTE PTR [rax],al
    5e8c:	00 00                	add    BYTE PTR [rax],al
    5e8e:	04 99                	add    al,0x99
    5e90:	34 00                	xor    al,0x0
    5e92:	00 03                	add    BYTE PTR [rbx],al
    5e94:	ae                   	scas   al,BYTE PTR es:[rdi]
    5e95:	04 03                	add    al,0x3
    5e97:	d4                   	(bad)
    5e98:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5e9d:	00 00                	add    BYTE PTR [rax],al
    5e9f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5ea0:	07                   	(bad)
    5ea1:	00 00                	add    BYTE PTR [rax],al
    5ea3:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5ea9 <_DYNAMIC+0x1c9>
    5ea9:	04 3a                	add    al,0x3a
    5eab:	33 00                	xor    eax,DWORD PTR [rax]
    5ead:	00 03                	add    BYTE PTR [rbx],al
    5eaf:	cd 04                	int    0x4
    5eb1:	03 cc                	add    ecx,esp
    5eb3:	24 00                	and    al,0x0
    5eb5:	00 ea                	add    dl,ch
    5eb7:	20 00                	and    BYTE PTR [rax],al
    5eb9:	00 89 07 00 00 01    	add    BYTE PTR [rcx+0x1000007],cl
    5ebf:	c5 21 00             	(bad)
    5ec2:	00 00                	add    BYTE PTR [rax],al
    5ec4:	04 3a                	add    al,0x3a
    5ec6:	33 00                	xor    eax,DWORD PTR [rax]
    5ec8:	00 03                	add    BYTE PTR [rbx],al
    5eca:	c9                   	leave
    5ecb:	04 03                	add    al,0x3
    5ecd:	e5 0b                	in     eax,0xb
    5ecf:	00 00                	add    BYTE PTR [rax],al
    5ed1:	ea                   	(bad)
    5ed2:	20 00                	and    BYTE PTR [rax],al
    5ed4:	00 a4 07 00 00 01 2e 	add    BYTE PTR [rdi+rax*1+0x2e010000],ah
    5edb:	00 00                	add    BYTE PTR [rax],al
    5edd:	00 00                	add    BYTE PTR [rax],al
    5edf:	04 3a                	add    al,0x3a
    5ee1:	33 00                	xor    eax,DWORD PTR [rax]
    5ee3:	00 03                	add    BYTE PTR [rbx],al
    5ee5:	c5 04 03             	(bad)
    5ee8:	f3 0b 00             	repz or eax,DWORD PTR [rax]
    5eeb:	00 ea                	add    dl,ch
    5eed:	20 00                	and    BYTE PTR [rax],al
    5eef:	00 bf 07 00 00 01    	add    BYTE PTR [rdi+0x1000007],bh
    5ef5:	35 00 00 00 00       	xor    eax,0x0
    5efa:	04 f6                	add    al,0xf6
    5efc:	18 00                	sbb    BYTE PTR [rax],al
    5efe:	00 03                	add    BYTE PTR [rbx],al
    5f00:	e3 04                	jrcxz  5f06 <_GLOBAL_OFFSET_TABLE_+0x16>
    5f02:	03 09                	add    ecx,DWORD PTR [rcx]
    5f04:	1d 00 00 ea 20       	sbb    eax,0x20ea0000
    5f09:	00 00                	add    BYTE PTR [rax],al
    5f0b:	df 07                	fild   WORD PTR [rdi]
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	01 c5                	add    ebp,eax
    5f11:	21 00                	and    DWORD PTR [rax],eax
    5f13:	00 01                	add    BYTE PTR [rcx],al
    5f15:	c5 21 00             	(bad)
    5f18:	00 00                	add    BYTE PTR [rax],al
    5f1a:	04 f6                	add    al,0xf6
    5f1c:	18 00                	sbb    BYTE PTR [rax],al
    5f1e:	00 03                	add    BYTE PTR [rbx],al
    5f20:	df 04 03             	fild   WORD PTR [rbx+rax*1]
    5f23:	ba 1b 00 00 ea       	mov    edx,0xea00001b
    5f28:	20 00                	and    BYTE PTR [rax],al
    5f2a:	00 ff                	add    bh,bh
    5f2c:	07                   	(bad)
    5f2d:	00 00                	add    BYTE PTR [rax],al
    5f2f:	01 2e                	add    DWORD PTR [rsi],ebp
    5f31:	00 00                	add    BYTE PTR [rax],al
    5f33:	00 01                	add    BYTE PTR [rcx],al
    5f35:	2e 00 00             	cs add BYTE PTR [rax],al
    5f38:	00 00                	add    BYTE PTR [rax],al
    5f3a:	04 f6                	add    al,0xf6
    5f3c:	18 00                	sbb    BYTE PTR [rax],al
    5f3e:	00 03                	add    BYTE PTR [rbx],al
    5f40:	db 04 03             	fild   DWORD PTR [rbx+rax*1]
    5f43:	5a                   	pop    rdx
    5f44:	29 00                	sub    DWORD PTR [rax],eax
    5f46:	00 ea                	add    dl,ch
    5f48:	20 00                	and    BYTE PTR [rax],al
    5f4a:	00 1f                	add    BYTE PTR [rdi],bl
    5f4c:	08 00                	or     BYTE PTR [rax],al
    5f4e:	00 01                	add    BYTE PTR [rcx],al
    5f50:	35 00 00 00 01       	xor    eax,0x1000000
    5f55:	35 00 00 00 00       	xor    eax,0x0
    5f5a:	04 e6                	add    al,0xe6
    5f5c:	1d 00 00 03 fd       	sbb    eax,0xfd030000
    5f61:	04 03                	add    al,0x3
    5f63:	23 2f                	and    ebp,DWORD PTR [rdi]
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	ea                   	(bad)
    5f68:	20 00                	and    BYTE PTR [rax],al
    5f6a:	00 3f                	add    BYTE PTR [rdi],bh
    5f6c:	08 00                	or     BYTE PTR [rax],al
    5f6e:	00 01                	add    BYTE PTR [rcx],al
    5f70:	c5 21 00             	(bad)
    5f73:	00 01                	add    BYTE PTR [rcx],al
    5f75:	c5 21 00             	(bad)
    5f78:	00 00                	add    BYTE PTR [rax],al
    5f7a:	04 e6                	add    al,0xe6
    5f7c:	1d 00 00 03 f9       	sbb    eax,0xf9030000
    5f81:	04 03                	add    al,0x3
    5f83:	f4                   	hlt
    5f84:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5f89:	00 00                	add    BYTE PTR [rax],al
    5f8b:	5f                   	pop    rdi
    5f8c:	08 00                	or     BYTE PTR [rax],al
    5f8e:	00 01                	add    BYTE PTR [rcx],al
    5f90:	2e 00 00             	cs add BYTE PTR [rax],al
    5f93:	00 01                	add    BYTE PTR [rcx],al
    5f95:	2e 00 00             	cs add BYTE PTR [rax],al
    5f98:	00 00                	add    BYTE PTR [rax],al
    5f9a:	04 e6                	add    al,0xe6
    5f9c:	1d 00 00 03 f5       	sbb    eax,0xf5030000
    5fa1:	04 03                	add    al,0x3
    5fa3:	5e                   	pop    rsi
    5fa4:	30 00                	xor    BYTE PTR [rax],al
    5fa6:	00 ea                	add    dl,ch
    5fa8:	20 00                	and    BYTE PTR [rax],al
    5faa:	00 7f 08             	add    BYTE PTR [rdi+0x8],bh
    5fad:	00 00                	add    BYTE PTR [rax],al
    5faf:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005fb5 <_end+0xffff9d>
    5fb5:	35 00 00 00 00       	xor    eax,0x0
    5fba:	04 5f                	add    al,0x5f
    5fbc:	31 00                	xor    DWORD PTR [rax],eax
    5fbe:	00 03                	add    BYTE PTR [rbx],al
    5fc0:	17                   	(bad)
    5fc1:	05 03 84 2e 00       	add    eax,0x2e8403
    5fc6:	00 ea                	add    dl,ch
    5fc8:	20 00                	and    BYTE PTR [rax],al
    5fca:	00 9f 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bl
    5fd0:	c5 21 00             	(bad)
    5fd3:	00 01                	add    BYTE PTR [rcx],al
    5fd5:	c5 21 00             	(bad)
    5fd8:	00 00                	add    BYTE PTR [rax],al
    5fda:	04 5f                	add    al,0x5f
    5fdc:	31 00                	xor    DWORD PTR [rax],eax
    5fde:	00 03                	add    BYTE PTR [rbx],al
    5fe0:	13 05 03 43 2d 00    	adc    eax,DWORD PTR [rip+0x2d4303]        # 2da2e9 <_end+0x2d42d1>
    5fe6:	00 ea                	add    dl,ch
    5fe8:	20 00                	and    BYTE PTR [rax],al
    5fea:	00 bf 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bh
    5ff0:	2e 00 00             	cs add BYTE PTR [rax],al
    5ff3:	00 01                	add    BYTE PTR [rcx],al
    5ff5:	2e 00 00             	cs add BYTE PTR [rax],al
    5ff8:	00 00                	add    BYTE PTR [rax],al
    5ffa:	04 5f                	add    al,0x5f
    5ffc:	31 00                	xor    DWORD PTR [rax],eax
    5ffe:	00 03                	add    BYTE PTR [rbx],al
    6000:	0f 05                	syscall
    6002:	03 24 2d 00 00 ea 20 	add    esp,DWORD PTR [rbp*1+0x20ea0000]
    6009:	00 00                	add    BYTE PTR [rax],al
    600b:	df 08                	fisttp WORD PTR [rax]
    600d:	00 00                	add    BYTE PTR [rax],al
    600f:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1006015 <_end+0xfffffd>
    6015:	35 00 00 00 00       	xor    eax,0x0
    601a:	04 aa                	add    al,0xaa
    601c:	15 00 00 03 31       	adc    eax,0x31030000
    6021:	05 03 cc 26 00       	add    eax,0x26cc03
    6026:	00 ea                	add    dl,ch
    6028:	20 00                	and    BYTE PTR [rax],al
    602a:	00 ff                	add    bh,bh
    602c:	08 00                	or     BYTE PTR [rax],al
    602e:	00 01                	add    BYTE PTR [rcx],al
    6030:	c5 21 00             	(bad)
    6033:	00 01                	add    BYTE PTR [rcx],al
    6035:	c5 21 00             	(bad)
    6038:	00 00                	add    BYTE PTR [rax],al
    603a:	04 aa                	add    al,0xaa
    603c:	15 00 00 03 2d       	adc    eax,0x2d030000
    6041:	05 03 fe 13 00       	add    eax,0x13fe03
    6046:	00 ea                	add    dl,ch
    6048:	20 00                	and    BYTE PTR [rax],al
    604a:	00 1f                	add    BYTE PTR [rdi],bl
    604c:	09 00                	or     DWORD PTR [rax],eax
    604e:	00 01                	add    BYTE PTR [rcx],al
    6050:	2e 00 00             	cs add BYTE PTR [rax],al
    6053:	00 01                	add    BYTE PTR [rcx],al
    6055:	2e 00 00             	cs add BYTE PTR [rax],al
    6058:	00 00                	add    BYTE PTR [rax],al
    605a:	04 aa                	add    al,0xaa
    605c:	15 00 00 03 29       	adc    eax,0x29030000
    6061:	05 03 ea 28 00       	add    eax,0x28ea03
    6066:	00 ea                	add    dl,ch
    6068:	20 00                	and    BYTE PTR [rax],al
    606a:	00 3f                	add    BYTE PTR [rdi],bh
    606c:	09 00                	or     DWORD PTR [rax],eax
    606e:	00 01                	add    BYTE PTR [rcx],al
    6070:	35 00 00 00 01       	xor    eax,0x1000000
    6075:	35 00 00 00 00       	xor    eax,0x0
    607a:	04 4d                	add    al,0x4d
    607c:	18 00                	sbb    BYTE PTR [rax],al
    607e:	00 03                	add    BYTE PTR [rbx],al
    6080:	4b 05 03 4b 1b 00    	rex.WXB add rax,0x1b4b03
    6086:	00 ea                	add    dl,ch
    6088:	20 00                	and    BYTE PTR [rax],al
    608a:	00 5f 09             	add    BYTE PTR [rdi+0x9],bl
    608d:	00 00                	add    BYTE PTR [rax],al
    608f:	01 c5                	add    ebp,eax
    6091:	21 00                	and    DWORD PTR [rax],eax
    6093:	00 01                	add    BYTE PTR [rcx],al
    6095:	c5 21 00             	(bad)
    6098:	00 00                	add    BYTE PTR [rax],al
    609a:	04 4d                	add    al,0x4d
    609c:	18 00                	sbb    BYTE PTR [rax],al
    609e:	00 03                	add    BYTE PTR [rbx],al
    60a0:	47 05 03 57 19 00    	rex.RXB add eax,0x195703
    60a6:	00 ea                	add    dl,ch
    60a8:	20 00                	and    BYTE PTR [rax],al
    60aa:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    60ad:	00 00                	add    BYTE PTR [rax],al
    60af:	01 2e                	add    DWORD PTR [rsi],ebp
    60b1:	00 00                	add    BYTE PTR [rax],al
    60b3:	00 01                	add    BYTE PTR [rcx],al
    60b5:	2e 00 00             	cs add BYTE PTR [rax],al
    60b8:	00 00                	add    BYTE PTR [rax],al
    60ba:	04 4d                	add    al,0x4d
    60bc:	18 00                	sbb    BYTE PTR [rax],al
    60be:	00 03                	add    BYTE PTR [rbx],al
    60c0:	43 05 03 b1 1c 00    	rex.XB add eax,0x1cb103
    60c6:	00 ea                	add    dl,ch
    60c8:	20 00                	and    BYTE PTR [rax],al
    60ca:	00 9f 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bl
    60d0:	35 00 00 00 01       	xor    eax,0x1000000
    60d5:	35 00 00 00 00       	xor    eax,0x0
    60da:	04 3f                	add    al,0x3f
    60dc:	0f 00 00             	sldt   WORD PTR [rax]
    60df:	03 65 05             	add    esp,DWORD PTR [rbp+0x5]
    60e2:	03 99 27 00 00 ea    	add    ebx,DWORD PTR [rcx-0x15ffffd9]
    60e8:	20 00                	and    BYTE PTR [rax],al
    60ea:	00 bf 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bh
    60f0:	c5 21 00             	(bad)
    60f3:	00 01                	add    BYTE PTR [rcx],al
    60f5:	c5 21 00             	(bad)
    60f8:	00 00                	add    BYTE PTR [rax],al
    60fa:	04 3f                	add    al,0x3f
    60fc:	0f 00 00             	sldt   WORD PTR [rax]
    60ff:	03 61 05             	add    esp,DWORD PTR [rcx+0x5]
    6102:	03 d0                	add    edx,eax
    6104:	10 00                	adc    BYTE PTR [rax],al
    6106:	00 ea                	add    dl,ch
    6108:	20 00                	and    BYTE PTR [rax],al
    610a:	00 df                	add    bh,bl
    610c:	09 00                	or     DWORD PTR [rax],eax
    610e:	00 01                	add    BYTE PTR [rcx],al
    6110:	2e 00 00             	cs add BYTE PTR [rax],al
    6113:	00 01                	add    BYTE PTR [rcx],al
    6115:	2e 00 00             	cs add BYTE PTR [rax],al
    6118:	00 00                	add    BYTE PTR [rax],al
    611a:	04 3f                	add    al,0x3f
    611c:	0f 00 00             	sldt   WORD PTR [rax]
    611f:	03 5d 05             	add    ebx,DWORD PTR [rbp+0x5]
    6122:	03 dc                	add    ebx,esp
    6124:	2a 00                	sub    al,BYTE PTR [rax]
    6126:	00 ea                	add    dl,ch
    6128:	20 00                	and    BYTE PTR [rax],al
    612a:	00 ff                	add    bh,bh
    612c:	09 00                	or     DWORD PTR [rax],eax
    612e:	00 01                	add    BYTE PTR [rcx],al
    6130:	35 00 00 00 01       	xor    eax,0x1000000
    6135:	35 00 00 00 00       	xor    eax,0x0
    613a:	04 1b                	add    al,0x1b
    613c:	2a 00                	sub    al,BYTE PTR [rax]
    613e:	00 03                	add    BYTE PTR [rbx],al
    6140:	f2 07                	repnz (bad)
    6142:	03 da                	add    ebx,edx
    6144:	34 00                	xor    al,0x0
    6146:	00 c5                	add    ch,al
    6148:	21 00                	and    DWORD PTR [rax],eax
    614a:	00 1a                	add    BYTE PTR [rdx],bl
    614c:	0a 00                	or     al,BYTE PTR [rax]
    614e:	00 01                	add    BYTE PTR [rcx],al
    6150:	c5 21 00             	(bad)
    6153:	00 00                	add    BYTE PTR [rax],al
    6155:	04 1b                	add    al,0x1b
    6157:	2a 00                	sub    al,BYTE PTR [rax]
    6159:	00 03                	add    BYTE PTR [rbx],al
    615b:	ee                   	out    dx,al
    615c:	07                   	(bad)
    615d:	03 e6                	add    esp,esi
    615f:	34 00                	xor    al,0x0
    6161:	00 35 00 00 00 35    	add    BYTE PTR [rip+0x35000000],dh        # 35006167 <_end+0x3500014f>
    6167:	0a 00                	or     al,BYTE PTR [rax]
    6169:	00 01                	add    BYTE PTR [rcx],al
    616b:	35 00 00 00 00       	xor    eax,0x0
    6170:	04 e7                	add    al,0xe7
    6172:	1e                   	(bad)
    6173:	00 00                	add    BYTE PTR [rax],al
    6175:	03 04 08             	add    eax,DWORD PTR [rax+rcx*1]
    6178:	03 69 2d             	add    ebp,DWORD PTR [rcx+0x2d]
    617b:	00 00                	add    BYTE PTR [rax],al
    617d:	c5 21 00             	(bad)
    6180:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    6183:	00 00                	add    BYTE PTR [rax],al
    6185:	01 c5                	add    ebp,eax
    6187:	21 00                	and    DWORD PTR [rax],eax
    6189:	00 00                	add    BYTE PTR [rax],al
    618b:	04 e7                	add    al,0xe7
    618d:	1e                   	(bad)
    618e:	00 00                	add    BYTE PTR [rax],al
    6190:	03 00                	add    eax,DWORD PTR [rax]
    6192:	08 03                	or     BYTE PTR [rbx],al
    6194:	75 2d                	jne    61c3 <_end+0x1ab>
    6196:	00 00                	add    BYTE PTR [rax],al
    6198:	35 00 00 00 6b       	xor    eax,0x6b000000
    619d:	0a 00                	or     al,BYTE PTR [rax]
    619f:	00 01                	add    BYTE PTR [rcx],al
    61a1:	35 00 00 00 00       	xor    eax,0x0
    61a6:	04 17                	add    al,0x17
    61a8:	25 00 00 03 16       	and    eax,0x16030000
    61ad:	08 03                	or     BYTE PTR [rbx],al
    61af:	79 24                	jns    61d5 <_end+0x1bd>
    61b1:	00 00                	add    BYTE PTR [rax],al
    61b3:	c5 21 00             	(bad)
    61b6:	00 86 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],al
    61bc:	c5 21 00             	(bad)
    61bf:	00 00                	add    BYTE PTR [rax],al
    61c1:	04 17                	add    al,0x17
    61c3:	25 00 00 03 12       	and    eax,0x12030000
    61c8:	08 03                	or     BYTE PTR [rbx],al
    61ca:	85 24 00             	test   DWORD PTR [rax+rax*1],esp
    61cd:	00 35 00 00 00 a1    	add    BYTE PTR [rip+0xffffffffa1000000],dh        # ffffffffa10061d3 <_end+0xffffffffa10001bb>
    61d3:	0a 00                	or     al,BYTE PTR [rax]
    61d5:	00 01                	add    BYTE PTR [rcx],al
    61d7:	35 00 00 00 00       	xor    eax,0x0
    61dc:	04 c7                	add    al,0xc7
    61de:	24 00                	and    al,0x0
    61e0:	00 03                	add    BYTE PTR [rbx],al
    61e2:	28 08                	sub    BYTE PTR [rax],cl
    61e4:	03 96 1d 00 00 c5    	add    edx,DWORD PTR [rsi-0x3affffe3]
    61ea:	21 00                	and    DWORD PTR [rax],eax
    61ec:	00 bc 0a 00 00 01 c5 	add    BYTE PTR [rdx+rcx*1-0x3aff0000],bh
    61f3:	21 00                	and    DWORD PTR [rax],eax
    61f5:	00 00                	add    BYTE PTR [rax],al
    61f7:	04 c7                	add    al,0xc7
    61f9:	24 00                	and    al,0x0
    61fb:	00 03                	add    BYTE PTR [rbx],al
    61fd:	24 08                	and    al,0x8
    61ff:	03 a1 1d 00 00 35    	add    esp,DWORD PTR [rcx+0x3500001d]
    6205:	00 00                	add    BYTE PTR [rax],al
    6207:	00 d7                	add    bh,dl
    6209:	0a 00                	or     al,BYTE PTR [rax]
    620b:	00 01                	add    BYTE PTR [rcx],al
    620d:	35 00 00 00 00       	xor    eax,0x0
    6212:	04 87                	add    al,0x87
    6214:	15 00 00 03 3a       	adc    eax,0x3a030000
    6219:	08 03                	or     BYTE PTR [rbx],al
    621b:	02 18                	add    bl,BYTE PTR [rax]
    621d:	00 00                	add    BYTE PTR [rax],al
    621f:	c5 21 00             	(bad)
    6222:	00 f7                	add    bh,dh
    6224:	0a 00                	or     al,BYTE PTR [rax]
    6226:	00 01                	add    BYTE PTR [rcx],al
    6228:	c5 21 00             	(bad)
    622b:	00 01                	add    BYTE PTR [rcx],al
    622d:	c5 21 00             	(bad)
    6230:	00 00                	add    BYTE PTR [rax],al
    6232:	04 87                	add    al,0x87
    6234:	15 00 00 03 36       	adc    eax,0x36030000
    6239:	08 03                	or     BYTE PTR [rbx],al
    623b:	1f                   	(bad)
    623c:	18 00                	sbb    BYTE PTR [rax],al
    623e:	00 35 00 00 00 17    	add    BYTE PTR [rip+0x17000000],dh        # 17006244 <_end+0x1700022c>
    6244:	0b 00                	or     eax,DWORD PTR [rax]
    6246:	00 01                	add    BYTE PTR [rcx],al
    6248:	35 00 00 00 01       	xor    eax,0x1000000
    624d:	35 00 00 00 00       	xor    eax,0x0
    6252:	1d 65 72 66 00       	sbb    eax,0x667265
    6257:	44 08 12             	or     BYTE PTR [rdx],r10b
    625a:	2e 00 00             	cs add BYTE PTR [rax],al
    625d:	c5 21 00             	(bad)
    6260:	00 30                	add    BYTE PTR [rax],dh
    6262:	0b 00                	or     eax,DWORD PTR [rax]
    6264:	00 01                	add    BYTE PTR [rcx],al
    6266:	c5 21 00             	(bad)
    6269:	00 00                	add    BYTE PTR [rax],al
    626b:	1d 65 72 66 00       	sbb    eax,0x667265
    6270:	40 08 1c 2e          	rex or BYTE PTR [rsi+rbp*1],bl
    6274:	00 00                	add    BYTE PTR [rax],al
    6276:	35 00 00 00 49       	xor    eax,0x49000000
    627b:	0b 00                	or     eax,DWORD PTR [rax]
    627d:	00 01                	add    BYTE PTR [rcx],al
    627f:	35 00 00 00 00       	xor    eax,0x0
    6284:	04 be                	add    al,0xbe
    6286:	1e                   	(bad)
    6287:	00 00                	add    BYTE PTR [rax],al
    6289:	03 56 08             	add    edx,DWORD PTR [rsi+0x8]
    628c:	03 19                	add    ebx,DWORD PTR [rcx]
    628e:	15 00 00 c5 21       	adc    eax,0x21c50000
    6293:	00 00                	add    BYTE PTR [rax],al
    6295:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    6298:	00 01                	add    BYTE PTR [rcx],al
    629a:	c5 21 00             	(bad)
    629d:	00 00                	add    BYTE PTR [rax],al
    629f:	04 be                	add    al,0xbe
    62a1:	1e                   	(bad)
    62a2:	00 00                	add    BYTE PTR [rax],al
    62a4:	03 52 08             	add    edx,DWORD PTR [rdx+0x8]
    62a7:	03 24 15 00 00 35 00 	add    esp,DWORD PTR [rdx*1+0x350000]
    62ae:	00 00                	add    BYTE PTR [rax],al
    62b0:	7f 0b                	jg     62bd <_end+0x2a5>
    62b2:	00 00                	add    BYTE PTR [rax],al
    62b4:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62ba <_end+0x2a2>
    62ba:	04 90                	add    al,0x90
    62bc:	33 00                	xor    eax,DWORD PTR [rax]
    62be:	00 03                	add    BYTE PTR [rbx],al
    62c0:	68 08 03 7b 26       	push   0x267b0308
    62c5:	00 00                	add    BYTE PTR [rax],al
    62c7:	c5 21 00             	(bad)
    62ca:	00 9a 0b 00 00 01    	add    BYTE PTR [rdx+0x100000b],bl
    62d0:	c5 21 00             	(bad)
    62d3:	00 00                	add    BYTE PTR [rax],al
    62d5:	04 90                	add    al,0x90
    62d7:	33 00                	xor    eax,DWORD PTR [rax]
    62d9:	00 03                	add    BYTE PTR [rbx],al
    62db:	64 08 03             	or     BYTE PTR fs:[rbx],al
    62de:	86 26                	xchg   BYTE PTR [rsi],ah
    62e0:	00 00                	add    BYTE PTR [rax],al
    62e2:	35 00 00 00 b5       	xor    eax,0xb5000000
    62e7:	0b 00                	or     eax,DWORD PTR [rax]
    62e9:	00 01                	add    BYTE PTR [rcx],al
    62eb:	35 00 00 00 00       	xor    eax,0x0
    62f0:	04 07                	add    al,0x7
    62f2:	28 00                	sub    BYTE PTR [rax],al
    62f4:	00 03                	add    BYTE PTR [rbx],al
    62f6:	7a 08                	jp     6300 <_end+0x2e8>
    62f8:	03 76 19             	add    esi,DWORD PTR [rsi+0x19]
    62fb:	00 00                	add    BYTE PTR [rax],al
    62fd:	c5 21 00             	(bad)
    6300:	00 d0                	add    al,dl
    6302:	0b 00                	or     eax,DWORD PTR [rax]
    6304:	00 01                	add    BYTE PTR [rcx],al
    6306:	c5 21 00             	(bad)
    6309:	00 00                	add    BYTE PTR [rax],al
    630b:	04 07                	add    al,0x7
    630d:	28 00                	sub    BYTE PTR [rax],al
    630f:	00 03                	add    BYTE PTR [rbx],al
    6311:	76 08                	jbe    631b <_end+0x303>
    6313:	03 82 19 00 00 35    	add    eax,DWORD PTR [rdx+0x35000019]
    6319:	00 00                	add    BYTE PTR [rax],al
    631b:	00 eb                	add    bl,ch
    631d:	0b 00                	or     eax,DWORD PTR [rax]
    631f:	00 01                	add    BYTE PTR [rcx],al
    6321:	35 00 00 00 00       	xor    eax,0x0
    6326:	04 88                	add    al,0x88
    6328:	0b 00                	or     eax,DWORD PTR [rax]
    632a:	00 03                	add    BYTE PTR [rbx],al
    632c:	8c 08                	mov    WORD PTR [rax],cs
    632e:	03 5a 13             	add    ebx,DWORD PTR [rdx+0x13]
    6331:	00 00                	add    BYTE PTR [rax],al
    6333:	c5 21 00             	(bad)
    6336:	00 0b                	add    BYTE PTR [rbx],cl
    6338:	0c 00                	or     al,0x0
    633a:	00 01                	add    BYTE PTR [rcx],al
    633c:	c5 21 00             	(bad)
    633f:	00 01                	add    BYTE PTR [rcx],al
    6341:	c5 21 00             	(bad)
    6344:	00 00                	add    BYTE PTR [rax],al
    6346:	04 88                	add    al,0x88
    6348:	0b 00                	or     eax,DWORD PTR [rax]
    634a:	00 03                	add    BYTE PTR [rbx],al
    634c:	88 08                	mov    BYTE PTR [rax],cl
    634e:	03 cc                	add    ecx,esp
    6350:	14 00                	adc    al,0x0
    6352:	00 35 00 00 00 2b    	add    BYTE PTR [rip+0x2b000000],dh        # 2b006358 <_end+0x2b000340>
    6358:	0c 00                	or     al,0x0
    635a:	00 01                	add    BYTE PTR [rcx],al
    635c:	35 00 00 00 01       	xor    eax,0x1000000
    6361:	35 00 00 00 00       	xor    eax,0x0
    6366:	1d 66 6d 61 00       	sbb    eax,0x616d66
    636b:	96                   	xchg   esi,eax
    636c:	08 5b 0f             	or     BYTE PTR [rbx+0xf],bl
    636f:	00 00                	add    BYTE PTR [rax],al
    6371:	c5 21 00             	(bad)
    6374:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    6377:	00 00                	add    BYTE PTR [rax],al
    6379:	01 c5                	add    ebp,eax
    637b:	21 00                	and    DWORD PTR [rax],eax
    637d:	00 01                	add    BYTE PTR [rcx],al
    637f:	c5 21 00             	(bad)
    6382:	00 01                	add    BYTE PTR [rcx],al
    6384:	c5 21 00             	(bad)
    6387:	00 00                	add    BYTE PTR [rax],al
    6389:	1d 66 6d 61 00       	sbb    eax,0x616d66
    638e:	92                   	xchg   edx,eax
    638f:	08 89 18 00 00 35    	or     BYTE PTR [rcx+0x35000018],cl
    6395:	00 00                	add    BYTE PTR [rax],al
    6397:	00 71 0c             	add    BYTE PTR [rcx+0xc],dh
    639a:	00 00                	add    BYTE PTR [rax],al
    639c:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 10063a2 <_end+0x100038a>
    63a2:	35 00 00 00 01       	xor    eax,0x1000000
    63a7:	35 00 00 00 00       	xor    eax,0x0
    63ac:	04 ae                	add    al,0xae
    63ae:	2c 00                	sub    al,0x0
    63b0:	00 03                	add    BYTE PTR [rbx],al
    63b2:	a0 08 03 c6 1a 00 00 	movabs al,ds:0x21c500001ac60308
    63b9:	c5 21 
    63bb:	00 00                	add    BYTE PTR [rax],al
    63bd:	91                   	xchg   ecx,eax
    63be:	0c 00                	or     al,0x0
    63c0:	00 01                	add    BYTE PTR [rcx],al
    63c2:	c5 21 00             	(bad)
    63c5:	00 01                	add    BYTE PTR [rcx],al
    63c7:	c5 21 00             	(bad)
    63ca:	00 00                	add    BYTE PTR [rax],al
    63cc:	04 ae                	add    al,0xae
    63ce:	2c 00                	sub    al,0x0
    63d0:	00 03                	add    BYTE PTR [rbx],al
    63d2:	9c                   	pushf
    63d3:	08 03                	or     BYTE PTR [rbx],al
    63d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    63d6:	34 00                	xor    al,0x0
    63d8:	00 35 00 00 00 b1    	add    BYTE PTR [rip+0xffffffffb1000000],dh        # ffffffffb10063de <_end+0xffffffffb10003c6>
    63de:	0c 00                	or     al,0x0
    63e0:	00 01                	add    BYTE PTR [rcx],al
    63e2:	35 00 00 00 01       	xor    eax,0x1000000
    63e7:	35 00 00 00 00       	xor    eax,0x0
    63ec:	04 1c                	add    al,0x1c
    63ee:	0e                   	(bad)
    63ef:	00 00                	add    BYTE PTR [rax],al
    63f1:	03 aa 08 03 3f 34    	add    ebp,DWORD PTR [rdx+0x343f0308]
    63f7:	00 00                	add    BYTE PTR [rax],al
    63f9:	c5 21 00             	(bad)
    63fc:	00 d1                	add    cl,dl
    63fe:	0c 00                	or     al,0x0
    6400:	00 01                	add    BYTE PTR [rcx],al
    6402:	c5 21 00             	(bad)
    6405:	00 01                	add    BYTE PTR [rcx],al
    6407:	c5 21 00             	(bad)
    640a:	00 00                	add    BYTE PTR [rax],al
    640c:	04 1c                	add    al,0x1c
    640e:	0e                   	(bad)
    640f:	00 00                	add    BYTE PTR [rax],al
    6411:	03 a6 08 03 5b 0c    	add    esp,DWORD PTR [rsi+0xc5b0308]
    6417:	00 00                	add    BYTE PTR [rax],al
    6419:	35 00 00 00 f1       	xor    eax,0xf1000000
    641e:	0c 00                	or     al,0x0
    6420:	00 01                	add    BYTE PTR [rcx],al
    6422:	35 00 00 00 01       	xor    eax,0x1000000
    6427:	35 00 00 00 00       	xor    eax,0x0
    642c:	04 1d                	add    al,0x1d
    642e:	2f                   	(bad)
    642f:	00 00                	add    BYTE PTR [rax],al
    6431:	03 f6                	add    esi,esi
    6433:	0d 03 e0 13 00       	or     eax,0x13e003
    6438:	00 c5                	add    ch,al
    643a:	21 00                	and    DWORD PTR [rax],eax
    643c:	00 16                	add    BYTE PTR [rsi],dl
    643e:	0d 00 00 01 c5       	or     eax,0xc5010000
    6443:	21 00                	and    DWORD PTR [rax],eax
    6445:	00 01                	add    BYTE PTR [rcx],al
    6447:	c5 21 00             	(bad)
    644a:	00 01                	add    BYTE PTR [rcx],al
    644c:	c5 21 00             	(bad)
    644f:	00 00                	add    BYTE PTR [rax],al
    6451:	04 1d                	add    al,0x1d
    6453:	2f                   	(bad)
    6454:	00 00                	add    BYTE PTR [rax],al
    6456:	03 f2                	add    esi,edx
    6458:	0d 03 82 33 00       	or     eax,0x338203
    645d:	00 2e                	add    BYTE PTR [rsi],ch
    645f:	00 00                	add    BYTE PTR [rax],al
    6461:	00 3b                	add    BYTE PTR [rbx],bh
    6463:	0d 00 00 01 2e       	or     eax,0x2e010000
    6468:	00 00                	add    BYTE PTR [rax],al
    646a:	00 01                	add    BYTE PTR [rcx],al
    646c:	2e 00 00             	cs add BYTE PTR [rax],al
    646f:	00 01                	add    BYTE PTR [rcx],al
    6471:	2e 00 00             	cs add BYTE PTR [rax],al
    6474:	00 00                	add    BYTE PTR [rax],al
    6476:	04 1d                	add    al,0x1d
    6478:	2f                   	(bad)
    6479:	00 00                	add    BYTE PTR [rax],al
    647b:	03 ee                	add    ebp,esi
    647d:	0d 03 2b 29 00       	or     eax,0x292b03
    6482:	00 35 00 00 00 60    	add    BYTE PTR [rip+0x60000000],dh        # 60006488 <_end+0x60000470>
    6488:	0d 00 00 01 35       	or     eax,0x35010000
    648d:	00 00                	add    BYTE PTR [rax],al
    648f:	00 01                	add    BYTE PTR [rcx],al
    6491:	35 00 00 00 01       	xor    eax,0x1000000
    6496:	35 00 00 00 00       	xor    eax,0x0
    649b:	04 1d                	add    al,0x1d
    649d:	2f                   	(bad)
    649e:	00 00                	add    BYTE PTR [rax],al
    64a0:	03 b4 08 03 81 12 00 	add    esi,DWORD PTR [rax+rcx*1+0x128103]
    64a7:	00 c5                	add    ch,al
    64a9:	21 00                	and    DWORD PTR [rax],eax
    64ab:	00 80 0d 00 00 01    	add    BYTE PTR [rax+0x100000d],al
    64b1:	c5 21 00             	(bad)
    64b4:	00 01                	add    BYTE PTR [rcx],al
    64b6:	c5 21 00             	(bad)
    64b9:	00 00                	add    BYTE PTR [rax],al
    64bb:	04 1d                	add    al,0x1d
    64bd:	2f                   	(bad)
    64be:	00 00                	add    BYTE PTR [rax],al
    64c0:	03 b0 08 03 70 13    	add    esi,DWORD PTR [rax+0x13700308]
    64c6:	00 00                	add    BYTE PTR [rax],al
    64c8:	35 00 00 00 a0       	xor    eax,0xa0000000
    64cd:	0d 00 00 01 35       	or     eax,0x35010000
    64d2:	00 00                	add    BYTE PTR [rax],al
    64d4:	00 01                	add    BYTE PTR [rcx],al
    64d6:	35 00 00 00 00       	xor    eax,0x0
    64db:	04 50                	add    al,0x50
    64dd:	26 00 00             	es add BYTE PTR [rax],al
    64e0:	03 be 08 03 52 30    	add    edi,DWORD PTR [rsi+0x30520308]
    64e6:	00 00                	add    BYTE PTR [rax],al
    64e8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    64e9:	21 00                	and    DWORD PTR [rax],eax
    64eb:	00 bb 0d 00 00 01    	add    BYTE PTR [rbx+0x100000d],bh
    64f1:	c5 21 00             	(bad)
    64f4:	00 00                	add    BYTE PTR [rax],al
    64f6:	04 50                	add    al,0x50
    64f8:	26 00 00             	es add BYTE PTR [rax],al
    64fb:	03 ba 08 03 2d 30    	add    edi,DWORD PTR [rdx+0x302d0308]
    6501:	00 00                	add    BYTE PTR [rax],al
    6503:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6504:	21 00                	and    DWORD PTR [rax],eax
    6506:	00 d6                	add    dh,dl
    6508:	0d 00 00 01 35       	or     eax,0x35010000
    650d:	00 00                	add    BYTE PTR [rax],al
    650f:	00 00                	add    BYTE PTR [rax],al
    6511:	04 3c                	add    al,0x3c
    6513:	2d 00 00 03 d1       	sub    eax,0xd1030000
    6518:	08 03                	or     BYTE PTR [rbx],al
    651a:	2c 0e                	sub    al,0xe
    651c:	00 00                	add    BYTE PTR [rax],al
    651e:	c5 21 00             	(bad)
    6521:	00 f1                	add    cl,dh
    6523:	0d 00 00 01 c5       	or     eax,0xc5010000
    6528:	21 00                	and    DWORD PTR [rax],eax
    652a:	00 00                	add    BYTE PTR [rax],al
    652c:	04 3c                	add    al,0x3c
    652e:	2d 00 00 03 cd       	sub    eax,0xcd030000
    6533:	08 03                	or     BYTE PTR [rbx],al
    6535:	39 0e                	cmp    DWORD PTR [rsi],ecx
    6537:	00 00                	add    BYTE PTR [rax],al
    6539:	35 00 00 00 0c       	xor    eax,0xc000000
    653e:	0e                   	(bad)
    653f:	00 00                	add    BYTE PTR [rax],al
    6541:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6547 <_end+0x52f>
    6547:	04 ff                	add    al,0xff
    6549:	33 00                	xor    eax,DWORD PTR [rax]
    654b:	00 03                	add    BYTE PTR [rbx],al
    654d:	e3 08                	jrcxz  6557 <_end+0x53f>
    654f:	03 a0 2b 00 00 be    	add    esp,DWORD PTR [rax-0x41ffffd5]
    6555:	21 00                	and    DWORD PTR [rax],eax
    6557:	00 27                	add    BYTE PTR [rdi],ah
    6559:	0e                   	(bad)
    655a:	00 00                	add    BYTE PTR [rax],al
    655c:	01 c5                	add    ebp,eax
    655e:	21 00                	and    DWORD PTR [rax],eax
    6560:	00 00                	add    BYTE PTR [rax],al
    6562:	04 ff                	add    al,0xff
    6564:	33 00                	xor    eax,DWORD PTR [rax]
    6566:	00 03                	add    BYTE PTR [rbx],al
    6568:	df 08                	fisttp WORD PTR [rax]
    656a:	03 08                	add    ecx,DWORD PTR [rax]
    656c:	33 00                	xor    eax,DWORD PTR [rax]
    656e:	00 be 21 00 00 42    	add    BYTE PTR [rsi+0x42000021],bh
    6574:	0e                   	(bad)
    6575:	00 00                	add    BYTE PTR [rax],al
    6577:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 657d <_end+0x565>
    657d:	04 19                	add    al,0x19
    657f:	23 00                	and    eax,DWORD PTR [rax]
    6581:	00 03                	add    BYTE PTR [rbx],al
    6583:	f5                   	cmc
    6584:	08 03                	or     BYTE PTR [rbx],al
    6586:	78 1b                	js     65a3 <_end+0x58b>
    6588:	00 00                	add    BYTE PTR [rax],al
    658a:	be 21 00 00 5d       	mov    esi,0x5d000021
    658f:	0e                   	(bad)
    6590:	00 00                	add    BYTE PTR [rax],al
    6592:	01 c5                	add    ebp,eax
    6594:	21 00                	and    DWORD PTR [rax],eax
    6596:	00 00                	add    BYTE PTR [rax],al
    6598:	04 19                	add    al,0x19
    659a:	23 00                	and    eax,DWORD PTR [rax]
    659c:	00 03                	add    BYTE PTR [rbx],al
    659e:	f1                   	int1
    659f:	08 03                	or     BYTE PTR [rbx],al
    65a1:	86 1b                	xchg   BYTE PTR [rbx],bl
    65a3:	00 00                	add    BYTE PTR [rax],al
    65a5:	be 21 00 00 78       	mov    esi,0x78000021
    65aa:	0e                   	(bad)
    65ab:	00 00                	add    BYTE PTR [rax],al
    65ad:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 65b3 <_end+0x59b>
    65b3:	04 f0                	add    al,0xf0
    65b5:	18 00                	sbb    BYTE PTR [rax],al
    65b7:	00 03                	add    BYTE PTR [rbx],al
    65b9:	07                   	(bad)
    65ba:	09 03                	or     DWORD PTR [rbx],eax
    65bc:	b3 11                	mov    bl,0x11
    65be:	00 00                	add    BYTE PTR [rax],al
    65c0:	c5 21 00             	(bad)
    65c3:	00 93 0e 00 00 01    	add    BYTE PTR [rbx+0x100000e],dl
    65c9:	c5 21 00             	(bad)
    65cc:	00 00                	add    BYTE PTR [rax],al
    65ce:	04 f0                	add    al,0xf0
    65d0:	18 00                	sbb    BYTE PTR [rax],al
    65d2:	00 03                	add    BYTE PTR [rbx],al
    65d4:	03 09                	add    ecx,DWORD PTR [rcx]
    65d6:	03 eb                	add    ebp,ebx
    65d8:	1c 00                	sbb    al,0x0
    65da:	00 35 00 00 00 ae    	add    BYTE PTR [rip+0xffffffffae000000],dh        # ffffffffae0065e0 <_end+0xffffffffae0005c8>
    65e0:	0e                   	(bad)
    65e1:	00 00                	add    BYTE PTR [rax],al
    65e3:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 65e9 <_end+0x5d1>
    65e9:	04 85                	add    al,0x85
    65eb:	1c 00                	sbb    al,0x0
    65ed:	00 03                	add    BYTE PTR [rbx],al
    65ef:	1a 09                	sbb    cl,BYTE PTR [rcx]
    65f1:	03 d8                	add    ebx,eax
    65f3:	14 00                	adc    al,0x0
    65f5:	00 c5                	add    ch,al
    65f7:	21 00                	and    DWORD PTR [rax],eax
    65f9:	00 c9                	add    cl,cl
    65fb:	0e                   	(bad)
    65fc:	00 00                	add    BYTE PTR [rax],al
    65fe:	01 c5                	add    ebp,eax
    6600:	21 00                	and    DWORD PTR [rax],eax
    6602:	00 00                	add    BYTE PTR [rax],al
    6604:	04 85                	add    al,0x85
    6606:	1c 00                	sbb    al,0x0
    6608:	00 03                	add    BYTE PTR [rbx],al
    660a:	16                   	(bad)
    660b:	09 03                	or     DWORD PTR [rbx],eax
    660d:	e3 14                	jrcxz  6623 <_end+0x60b>
    660f:	00 00                	add    BYTE PTR [rax],al
    6611:	35 00 00 00 e4       	xor    eax,0xe4000000
    6616:	0e                   	(bad)
    6617:	00 00                	add    BYTE PTR [rax],al
    6619:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 661f <_end+0x607>
    661f:	04 51                	add    al,0x51
    6621:	26 00 00             	es add BYTE PTR [rax],al
    6624:	03 2c 09             	add    ebp,DWORD PTR [rcx+rcx*1]
    6627:	03 fa                	add    edi,edx
    6629:	2b 00                	sub    eax,DWORD PTR [rax]
    662b:	00 c5                	add    ch,al
    662d:	21 00                	and    DWORD PTR [rax],eax
    662f:	00 ff                	add    bh,bh
    6631:	0e                   	(bad)
    6632:	00 00                	add    BYTE PTR [rax],al
    6634:	01 c5                	add    ebp,eax
    6636:	21 00                	and    DWORD PTR [rax],eax
    6638:	00 00                	add    BYTE PTR [rax],al
    663a:	04 51                	add    al,0x51
    663c:	26 00 00             	es add BYTE PTR [rax],al
    663f:	03 28                	add    ebp,DWORD PTR [rax]
    6641:	09 03                	or     DWORD PTR [rbx],eax
    6643:	05 2c 00 00 35       	add    eax,0x3500002c
    6648:	00 00                	add    BYTE PTR [rax],al
    664a:	00 1a                	add    BYTE PTR [rdx],bl
    664c:	0f 00 00             	sldt   WORD PTR [rax]
    664f:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6655 <_end+0x63d>
    6655:	04 00                	add    al,0x0
    6657:	34 00                	xor    al,0x0
    6659:	00 03                	add    BYTE PTR [rbx],al
    665b:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    665e:	b6 30                	mov    dh,0x30
    6660:	00 00                	add    BYTE PTR [rax],al
    6662:	b2 21                	mov    dl,0x21
    6664:	00 00                	add    BYTE PTR [rax],al
    6666:	35 0f 00 00 01       	xor    eax,0x100000f
    666b:	c5 21 00             	(bad)
    666e:	00 00                	add    BYTE PTR [rax],al
    6670:	04 00                	add    al,0x0
    6672:	34 00                	xor    al,0x0
    6674:	00 03                	add    BYTE PTR [rbx],al
    6676:	3a 09                	cmp    cl,BYTE PTR [rcx]
    6678:	03 5a 10             	add    ebx,DWORD PTR [rdx+0x10]
    667b:	00 00                	add    BYTE PTR [rax],al
    667d:	b2 21                	mov    dl,0x21
    667f:	00 00                	add    BYTE PTR [rax],al
    6681:	50                   	push   rax
    6682:	0f 00 00             	sldt   WORD PTR [rax]
    6685:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 668b <_end+0x673>
    668b:	04 1a                	add    al,0x1a
    668d:	23 00                	and    eax,DWORD PTR [rax]
    668f:	00 03                	add    BYTE PTR [rbx],al
    6691:	50                   	push   rax
    6692:	09 03                	or     DWORD PTR [rbx],eax
    6694:	fb                   	sti
    6695:	32 00                	xor    al,BYTE PTR [rax]
    6697:	00 b2 21 00 00 6b    	add    BYTE PTR [rdx+0x6b000021],dh
    669d:	0f 00 00             	sldt   WORD PTR [rax]
    66a0:	01 c5                	add    ebp,eax
    66a2:	21 00                	and    DWORD PTR [rax],eax
    66a4:	00 00                	add    BYTE PTR [rax],al
    66a6:	04 1a                	add    al,0x1a
    66a8:	23 00                	and    eax,DWORD PTR [rax]
    66aa:	00 03                	add    BYTE PTR [rbx],al
    66ac:	4c 09 03             	or     QWORD PTR [rbx],r8
    66af:	68 17 00 00 b2       	push   0xffffffffb2000017
    66b4:	21 00                	and    DWORD PTR [rax],eax
    66b6:	00 86 0f 00 00 01    	add    BYTE PTR [rsi+0x100000f],al
    66bc:	35 00 00 00 00       	xor    eax,0x0
    66c1:	04 49                	add    al,0x49
    66c3:	14 00                	adc    al,0x0
    66c5:	00 03                	add    BYTE PTR [rbx],al
    66c7:	62 09 03 ee 13       	(bad)
    66cc:	00 00                	add    BYTE PTR [rax],al
    66ce:	c5 21 00             	(bad)
    66d1:	00 a1 0f 00 00 01    	add    BYTE PTR [rcx+0x100000f],ah
    66d7:	c5 21 00             	(bad)
    66da:	00 00                	add    BYTE PTR [rax],al
    66dc:	04 49                	add    al,0x49
    66de:	14 00                	adc    al,0x0
    66e0:	00 03                	add    BYTE PTR [rbx],al
    66e2:	5e                   	pop    rsi
    66e3:	09 03                	or     DWORD PTR [rbx],eax
    66e5:	cc                   	int3
    66e6:	16                   	(bad)
    66e7:	00 00                	add    BYTE PTR [rax],al
    66e9:	35 00 00 00 bc       	xor    eax,0xbc000000
    66ee:	0f 00 00             	sldt   WORD PTR [rax]
    66f1:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 66f7 <_end+0x6df>
    66f7:	04 fd                	add    al,0xfd
    66f9:	27                   	(bad)
    66fa:	00 00                	add    BYTE PTR [rax],al
    66fc:	03 74 09 03          	add    esi,DWORD PTR [rcx+rcx*1+0x3]
    6700:	fc                   	cld
    6701:	0d 00 00 c5 21       	or     eax,0x21c50000
    6706:	00 00                	add    BYTE PTR [rax],al
    6708:	dc 0f                	fmul   QWORD PTR [rdi]
    670a:	00 00                	add    BYTE PTR [rax],al
    670c:	01 c5                	add    ebp,eax
    670e:	21 00                	and    DWORD PTR [rax],eax
    6710:	00 01                	add    BYTE PTR [rcx],al
    6712:	c5 21 00             	(bad)
    6715:	00 00                	add    BYTE PTR [rax],al
    6717:	04 fd                	add    al,0xfd
    6719:	27                   	(bad)
    671a:	00 00                	add    BYTE PTR [rax],al
    671c:	03 70 09             	add    esi,DWORD PTR [rax+0x9]
    671f:	03 8c 10 00 00 35 00 	add    ecx,DWORD PTR [rax+rdx*1+0x350000]
    6726:	00 00                	add    BYTE PTR [rax],al
    6728:	fc                   	cld
    6729:	0f 00 00             	sldt   WORD PTR [rax]
    672c:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1006732 <_end+0x100071a>
    6732:	35 00 00 00 00       	xor    eax,0x0
    6737:	04 01                	add    al,0x1
    6739:	12 00                	adc    al,BYTE PTR [rax]
    673b:	00 03                	add    BYTE PTR [rbx],al
    673d:	7e 09                	jle    6748 <_end+0x730>
    673f:	03 1d 25 00 00 c5    	add    ebx,DWORD PTR [rip+0xffffffffc5000025]        # ffffffffc500676a <_end+0xffffffffc5000752>
    6745:	21 00                	and    DWORD PTR [rax],eax
    6747:	00 1c 10             	add    BYTE PTR [rax+rdx*1],bl
    674a:	00 00                	add    BYTE PTR [rax],al
    674c:	01 c5                	add    ebp,eax
    674e:	21 00                	and    DWORD PTR [rax],eax
    6750:	00 01                	add    BYTE PTR [rcx],al
    6752:	c5 21 00             	(bad)
    6755:	00 00                	add    BYTE PTR [rax],al
    6757:	04 01                	add    al,0x1
    6759:	12 00                	adc    al,BYTE PTR [rax]
    675b:	00 03                	add    BYTE PTR [rbx],al
    675d:	7a 09                	jp     6768 <_end+0x750>
    675f:	03 20                	add    esp,DWORD PTR [rax]
    6761:	0f 00 00             	sldt   WORD PTR [rax]
    6764:	35 00 00 00 3c       	xor    eax,0x3c000000
    6769:	10 00                	adc    BYTE PTR [rax],al
    676b:	00 01                	add    BYTE PTR [rcx],al
    676d:	35 00 00 00 01       	xor    eax,0x1000000
    6772:	c5 21 00             	(bad)
    6775:	00 00                	add    BYTE PTR [rax],al
    6777:	04 c8                	add    al,0xc8
    6779:	07                   	(bad)
    677a:	00 00                	add    BYTE PTR [rax],al
    677c:	03 90 09 03 ca 30    	add    edx,DWORD PTR [rax+0x30ca0309]
    6782:	00 00                	add    BYTE PTR [rax],al
    6784:	c5 21 00             	(bad)
    6787:	00 5c 10 00          	add    BYTE PTR [rax+rdx*1+0x0],bl
    678b:	00 01                	add    BYTE PTR [rcx],al
    678d:	c5 21 00             	(bad)
    6790:	00 01                	add    BYTE PTR [rcx],al
    6792:	c5 21 00             	(bad)
    6795:	00 00                	add    BYTE PTR [rax],al
    6797:	04 c8                	add    al,0xc8
    6799:	07                   	(bad)
    679a:	00 00                	add    BYTE PTR [rax],al
    679c:	03 8c 09 03 2e 32 00 	add    ecx,DWORD PTR [rcx+rcx*1+0x322e03]
    67a3:	00 35 00 00 00 7c    	add    BYTE PTR [rip+0x7c000000],dh        # 7c0067a9 <_end+0x7c000791>
    67a9:	10 00                	adc    BYTE PTR [rax],al
    67ab:	00 01                	add    BYTE PTR [rcx],al
    67ad:	35 00 00 00 01       	xor    eax,0x1000000
    67b2:	35 00 00 00 00       	xor    eax,0x0
    67b7:	04 56                	add    al,0x56
    67b9:	23 00                	and    eax,DWORD PTR [rax]
    67bb:	00 03                	add    BYTE PTR [rbx],al
    67bd:	9a                   	(bad)
    67be:	09 03                	or     DWORD PTR [rbx],eax
    67c0:	87 16                	xchg   DWORD PTR [rsi],edx
    67c2:	00 00                	add    BYTE PTR [rax],al
    67c4:	c5 21 00             	(bad)
    67c7:	00 a1 10 00 00 01    	add    BYTE PTR [rcx+0x1000010],ah
    67cd:	c5 21 00             	(bad)
    67d0:	00 01                	add    BYTE PTR [rcx],al
    67d2:	c5 21 00             	(bad)
    67d5:	00 01                	add    BYTE PTR [rcx],al
    67d7:	ba 25 00 00 00       	mov    edx,0x25
    67dc:	04 56                	add    al,0x56
    67de:	23 00                	and    eax,DWORD PTR [rax]
    67e0:	00 03                	add    BYTE PTR [rbx],al
    67e2:	96                   	xchg   esi,eax
    67e3:	09 03                	or     DWORD PTR [rbx],eax
    67e5:	da 33                	fidiv  DWORD PTR [rbx]
    67e7:	00 00                	add    BYTE PTR [rax],al
    67e9:	35 00 00 00 c6       	xor    eax,0xc6000000
    67ee:	10 00                	adc    BYTE PTR [rax],al
    67f0:	00 01                	add    BYTE PTR [rcx],al
    67f2:	35 00 00 00 01       	xor    eax,0x1000000
    67f7:	35 00 00 00 01       	xor    eax,0x1000000
    67fc:	ba 25 00 00 00       	mov    edx,0x25
    6801:	04 69                	add    al,0x69
    6803:	05 00 00 03 a4       	add    eax,0xa4030000
    6808:	09 03                	or     DWORD PTR [rbx],eax
    680a:	92                   	xchg   edx,eax
    680b:	2e 00 00             	cs add BYTE PTR [rax],al
    680e:	c5 21 00             	(bad)
    6811:	00 e1                	add    cl,ah
    6813:	10 00                	adc    BYTE PTR [rax],al
    6815:	00 01                	add    BYTE PTR [rcx],al
    6817:	c5 21 00             	(bad)
    681a:	00 00                	add    BYTE PTR [rax],al
    681c:	04 69                	add    al,0x69
    681e:	05 00 00 03 a0       	add    eax,0xa0030000
    6823:	09 03                	or     DWORD PTR [rbx],eax
    6825:	9d                   	popf
    6826:	2e 00 00             	cs add BYTE PTR [rax],al
    6829:	35 00 00 00 fc       	xor    eax,0xfc000000
    682e:	10 00                	adc    BYTE PTR [rax],al
    6830:	00 01                	add    BYTE PTR [rcx],al
    6832:	35 00 00 00 00       	xor    eax,0x0
    6837:	04 1b                	add    al,0x1b
    6839:	23 00                	and    eax,DWORD PTR [rax]
    683b:	00 03                	add    BYTE PTR [rbx],al
    683d:	b6 09                	mov    dh,0x9
    683f:	03 03                	add    eax,DWORD PTR [rbx]
    6841:	1e                   	(bad)
    6842:	00 00                	add    BYTE PTR [rax],al
    6844:	c5 21 00             	(bad)
    6847:	00 17                	add    BYTE PTR [rdi],dl
    6849:	11 00                	adc    DWORD PTR [rax],eax
    684b:	00 01                	add    BYTE PTR [rcx],al
    684d:	c5 21 00             	(bad)
    6850:	00 00                	add    BYTE PTR [rax],al
    6852:	04 1b                	add    al,0x1b
    6854:	23 00                	and    eax,DWORD PTR [rax]
    6856:	00 03                	add    BYTE PTR [rbx],al
    6858:	b2 09                	mov    dl,0x9
    685a:	03 0f                	add    ecx,DWORD PTR [rdi]
    685c:	1e                   	(bad)
    685d:	00 00                	add    BYTE PTR [rax],al
    685f:	35 00 00 00 32       	xor    eax,0x32000000
    6864:	11 00                	adc    DWORD PTR [rax],eax
    6866:	00 01                	add    BYTE PTR [rcx],al
    6868:	35 00 00 00 00       	xor    eax,0x0
    686d:	04 30                	add    al,0x30
    686f:	25 00 00 03 c8       	and    eax,0xc8030000
    6874:	09 03                	or     DWORD PTR [rbx],eax
    6876:	e0 19                	loopne 6891 <_end+0x879>
    6878:	00 00                	add    BYTE PTR [rax],al
    687a:	c5 21 00             	(bad)
    687d:	00 52 11             	add    BYTE PTR [rdx+0x11],dl
    6880:	00 00                	add    BYTE PTR [rax],al
    6882:	01 c5                	add    ebp,eax
    6884:	21 00                	and    DWORD PTR [rax],eax
    6886:	00 01                	add    BYTE PTR [rcx],al
    6888:	b2 21                	mov    dl,0x21
    688a:	00 00                	add    BYTE PTR [rax],al
    688c:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    688f:	25 00 00 03 c4       	and    eax,0xc4030000
    6894:	09 03                	or     DWORD PTR [rbx],eax
    6896:	ab                   	stos   DWORD PTR es:[rdi],eax
    6897:	1b 00                	sbb    eax,DWORD PTR [rax]
    6899:	00 35 00 00 00 72    	add    BYTE PTR [rip+0x72000000],dh        # 7200689f <_end+0x72000887>
    689f:	11 00                	adc    DWORD PTR [rax],eax
    68a1:	00 01                	add    BYTE PTR [rcx],al
    68a3:	35 00 00 00 01       	xor    eax,0x1000000
    68a8:	b2 21                	mov    dl,0x21
    68aa:	00 00                	add    BYTE PTR [rax],al
    68ac:	00 04 0b             	add    BYTE PTR [rbx+rcx*1],al
    68af:	2e 00 00             	cs add BYTE PTR [rax],al
    68b2:	03 da                	add    ebx,edx
    68b4:	09 03                	or     DWORD PTR [rbx],eax
    68b6:	03 10                	add    edx,DWORD PTR [rax]
    68b8:	00 00                	add    BYTE PTR [rax],al
    68ba:	c5 21 00             	(bad)
    68bd:	00 92 11 00 00 01    	add    BYTE PTR [rdx+0x1000011],dl
    68c3:	c5 21 00             	(bad)
    68c6:	00 01                	add    BYTE PTR [rcx],al
    68c8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    68c9:	21 00                	and    DWORD PTR [rax],eax
    68cb:	00 00                	add    BYTE PTR [rax],al
    68cd:	04 0b                	add    al,0xb
    68cf:	2e 00 00             	cs add BYTE PTR [rax],al
    68d2:	03 d6                	add    edx,esi
    68d4:	09 03                	or     DWORD PTR [rbx],eax
    68d6:	d7                   	xlat   BYTE PTR ds:[rbx]
    68d7:	0b 00                	or     eax,DWORD PTR [rax]
    68d9:	00 35 00 00 00 b2    	add    BYTE PTR [rip+0xffffffffb2000000],dh        # ffffffffb20068df <_end+0xffffffffb20008c7>
    68df:	11 00                	adc    DWORD PTR [rax],eax
    68e1:	00 01                	add    BYTE PTR [rcx],al
    68e3:	35 00 00 00 01       	xor    eax,0x1000000
    68e8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    68e9:	21 00                	and    DWORD PTR [rax],eax
    68eb:	00 00                	add    BYTE PTR [rax],al
    68ed:	04 71                	add    al,0x71
    68ef:	1b 00                	sbb    eax,DWORD PTR [rax]
    68f1:	00 03                	add    BYTE PTR [rbx],al
    68f3:	ec                   	in     al,dx
    68f4:	09 03                	or     DWORD PTR [rbx],eax
    68f6:	ed                   	in     eax,dx
    68f7:	1e                   	(bad)
    68f8:	00 00                	add    BYTE PTR [rax],al
    68fa:	c5 21 00             	(bad)
    68fd:	00 cd                	add    ch,cl
    68ff:	11 00                	adc    DWORD PTR [rax],eax
    6901:	00 01                	add    BYTE PTR [rcx],al
    6903:	c5 21 00             	(bad)
    6906:	00 00                	add    BYTE PTR [rax],al
    6908:	04 71                	add    al,0x71
    690a:	1b 00                	sbb    eax,DWORD PTR [rax]
    690c:	00 03                	add    BYTE PTR [rbx],al
    690e:	e8 09 03 fa 1e       	call   1efa6c1c <_end+0x1efa0c04>
    6913:	00 00                	add    BYTE PTR [rax],al
    6915:	35 00 00 00 e8       	xor    eax,0xe8000000
    691a:	11 00                	adc    DWORD PTR [rax],eax
    691c:	00 01                	add    BYTE PTR [rcx],al
    691e:	35 00 00 00 00       	xor    eax,0x0
    6923:	04 21                	add    al,0x21
    6925:	2a 00                	sub    al,BYTE PTR [rax]
    6927:	00 03                	add    BYTE PTR [rbx],al
    6929:	fe 09                	dec    BYTE PTR [rcx]
    692b:	03 1d 21 00 00 c5    	add    ebx,DWORD PTR [rip+0xffffffffc5000021]        # ffffffffc5006952 <_end+0xffffffffc500093a>
    6931:	21 00                	and    DWORD PTR [rax],eax
    6933:	00 03                	add    BYTE PTR [rbx],al
    6935:	12 00                	adc    al,BYTE PTR [rax]
    6937:	00 01                	add    BYTE PTR [rcx],al
    6939:	c5 21 00             	(bad)
    693c:	00 00                	add    BYTE PTR [rax],al
    693e:	04 21                	add    al,0x21
    6940:	2a 00                	sub    al,BYTE PTR [rax]
    6942:	00 03                	add    BYTE PTR [rbx],al
    6944:	fa                   	cli
    6945:	09 03                	or     DWORD PTR [rbx],eax
    6947:	29 21                	sub    DWORD PTR [rcx],esp
    6949:	00 00                	add    BYTE PTR [rax],al
    694b:	35 00 00 00 1e       	xor    eax,0x1e000000
    6950:	12 00                	adc    al,BYTE PTR [rax]
    6952:	00 01                	add    BYTE PTR [rcx],al
    6954:	35 00 00 00 00       	xor    eax,0x0
    6959:	02 08                	add    cl,BYTE PTR [rax]
    695b:	83 0b 61             	or     DWORD PTR [rbx],0x61
    695e:	23 00                	and    eax,DWORD PTR [rax]
    6960:	00 02                	add    BYTE PTR [rdx],al
    6962:	08 84 0b 94 23 00 00 	or     BYTE PTR [rbx+rcx*1+0x2394],al
    6969:	02 08                	add    cl,BYTE PTR [rax]
    696b:	8a 0b                	mov    cl,BYTE PTR [rbx]
    696d:	c2 2d 00             	ret    0x2d
    6970:	00 02                	add    BYTE PTR [rdx],al
    6972:	08 8d 0b df 2d 00    	or     BYTE PTR [rbp+0x2ddf0b],cl
    6978:	00 02                	add    BYTE PTR [rdx],al
    697a:	08 90 0b fa 2d 00    	or     BYTE PTR [rax+0x2dfa0b],dl
    6980:	00 02                	add    BYTE PTR [rdx],al
    6982:	08 91 0b 10 2e 00    	or     BYTE PTR [rcx+0x2e100b],dl
    6988:	00 02                	add    BYTE PTR [rdx],al
    698a:	08 92 0b 27 2e 00    	or     BYTE PTR [rdx+0x2e270b],dl
    6990:	00 02                	add    BYTE PTR [rdx],al
    6992:	08 93 0b 3e 2e 00    	or     BYTE PTR [rbx+0x2e3e0b],dl
    6998:	00 02                	add    BYTE PTR [rdx],al
    699a:	08 95 0b 68 2e 00    	or     BYTE PTR [rbp+0x2e680b],dl
    69a0:	00 02                	add    BYTE PTR [rdx],al
    69a2:	08 98 0b 84 2e 00    	or     BYTE PTR [rax+0x2e840b],bl
    69a8:	00 02                	add    BYTE PTR [rdx],al
    69aa:	08 9a 0b 9b 2e 00    	or     BYTE PTR [rdx+0x2e9b0b],bl
    69b0:	00 02                	add    BYTE PTR [rdx],al
    69b2:	08 9d 0b b7 2e 00    	or     BYTE PTR [rbp+0x2eb70b],bl
    69b8:	00 02                	add    BYTE PTR [rdx],al
    69ba:	08 9e 0b d3 2e 00    	or     BYTE PTR [rsi+0x2ed30b],bl
    69c0:	00 02                	add    BYTE PTR [rdx],al
    69c2:	08 9f 0b f8 2e 00    	or     BYTE PTR [rdi+0x2ef80b],bl
    69c8:	00 02                	add    BYTE PTR [rdx],al
    69ca:	08 a1 0b 19 2f 00    	or     BYTE PTR [rcx+0x2f190b],ah
    69d0:	00 02                	add    BYTE PTR [rdx],al
    69d2:	08 a4 0b 3a 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2f3a],ah
    69d9:	02 08                	add    cl,BYTE PTR [rax]
    69db:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    69dc:	0b 4d 2f             	or     ecx,DWORD PTR [rbp+0x2f]
    69df:	00 00                	add    BYTE PTR [rax],al
    69e1:	02 08                	add    cl,BYTE PTR [rax]
    69e3:	a9 0b 5a 2f 00       	test   eax,0x2f5a0b
    69e8:	00 02                	add    BYTE PTR [rdx],al
    69ea:	08 aa 0b 6c 2f 00    	or     BYTE PTR [rdx+0x2f6c0b],ch
    69f0:	00 02                	add    BYTE PTR [rdx],al
    69f2:	08 ab 0b 8c 2f 00    	or     BYTE PTR [rbx+0x2f8c0b],ch
    69f8:	00 02                	add    BYTE PTR [rdx],al
    69fa:	08 ac 0b b0 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2fb0],ch
    6a01:	02 08                	add    cl,BYTE PTR [rax]
    6a03:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6a04:	0b d4                	or     edx,esp
    6a06:	2f                   	(bad)
    6a07:	00 00                	add    BYTE PTR [rax],al
    6a09:	02 08                	add    cl,BYTE PTR [rax]
    6a0b:	af                   	scas   eax,DWORD PTR es:[rdi]
    6a0c:	0b eb                	or     ebp,ebx
    6a0e:	2f                   	(bad)
    6a0f:	00 00                	add    BYTE PTR [rax],al
    6a11:	02 08                	add    cl,BYTE PTR [rax]
    6a13:	b0 0b                	mov    al,0xb
    6a15:	10 30                	adc    BYTE PTR [rax],dh
    6a17:	00 00                	add    BYTE PTR [rax],al
    6a19:	02 08                	add    cl,BYTE PTR [rax]
    6a1b:	f4                   	hlt
    6a1c:	16                   	(bad)
    6a1d:	c7                   	(bad)
    6a1e:	23 00                	and    eax,DWORD PTR [rax]
    6a20:	00 02                	add    BYTE PTR [rdx],al
    6a22:	08 f9                	or     cl,bh
    6a24:	16                   	(bad)
    6a25:	43 21 00             	rex.XB and DWORD PTR [r8],eax
    6a28:	00 02                	add    BYTE PTR [rdx],al
    6a2a:	08 fa                	or     dl,bh
    6a2c:	16                   	(bad)
    6a2d:	2b 30                	sub    esi,DWORD PTR [rax]
    6a2f:	00 00                	add    BYTE PTR [rax],al
    6a31:	02 08                	add    cl,BYTE PTR [rax]
    6a33:	fc                   	cld
    6a34:	16                   	(bad)
    6a35:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    6a38:	00 02                	add    BYTE PTR [rdx],al
    6a3a:	08 fd                	or     ch,bh
    6a3c:	16                   	(bad)
    6a3d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6a3e:	30 00                	xor    BYTE PTR [rax],al
    6a40:	00 02                	add    BYTE PTR [rdx],al
    6a42:	08 fe                	or     dh,bh
    6a44:	16                   	(bad)
    6a45:	5e                   	pop    rsi
    6a46:	30 00                	xor    BYTE PTR [rax],al
    6a48:	00 02                	add    BYTE PTR [rdx],al
    6a4a:	08 ff                	or     bh,bh
    6a4c:	16                   	(bad)
    6a4d:	82                   	(bad)
    6a4e:	30 00                	xor    BYTE PTR [rax],al
    6a50:	00 18                	add    BYTE PTR [rax],bl
    6a52:	08 00                	or     BYTE PTR [rax],al
    6a54:	01 16                	add    DWORD PTR [rsi],edx
    6a56:	c1 30 00             	shl    DWORD PTR [rax],0x0
    6a59:	00 1a                	add    BYTE PTR [rdx],bl
    6a5b:	64 69 76 00 08 b5 74 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b508
    6a62:	00 
    6a63:	00 00                	add    BYTE PTR [rax],al
    6a65:	94                   	xchg   esp,eax
    6a66:	23 00                	and    eax,DWORD PTR [rax]
    6a68:	00 3d 13 00 00 01    	add    BYTE PTR [rip+0x1000013],bh        # 1006a81 <_end+0x1000a69>
    6a6e:	b2 21                	mov    dl,0x21
    6a70:	00 00                	add    BYTE PTR [rax],al
    6a72:	01 b2 21 00 00 00    	add    DWORD PTR [rdx+0x21],esi
    6a78:	02 09                	add    cl,BYTE PTR [rcx]
    6a7a:	40 0b 3a             	rex or edi,DWORD PTR [rdx]
    6a7d:	32 00                	xor    al,BYTE PTR [rax]
    6a7f:	00 02                	add    BYTE PTR [rdx],al
    6a81:	09 8d 0b 2e 32 00    	or     DWORD PTR [rbp+0x322e0b],ecx
    6a87:	00 02                	add    BYTE PTR [rdx],al
    6a89:	09 8f 0b 4b 32 00    	or     DWORD PTR [rdi+0x324b0b],ecx
    6a8f:	00 02                	add    BYTE PTR [rdx],al
    6a91:	09 90 0b 62 32 00    	or     DWORD PTR [rax+0x32620b],edx
    6a97:	00 02                	add    BYTE PTR [rdx],al
    6a99:	09 91 0b 7e 32 00    	or     DWORD PTR [rcx+0x327e0b],edx
    6a9f:	00 02                	add    BYTE PTR [rdx],al
    6aa1:	09 92 0b 9e 32 00    	or     DWORD PTR [rdx+0x329e0b],edx
    6aa7:	00 02                	add    BYTE PTR [rdx],al
    6aa9:	09 93 0b ba 32 00    	or     DWORD PTR [rbx+0x32ba0b],edx
    6aaf:	00 02                	add    BYTE PTR [rdx],al
    6ab1:	09 94 0b d6 32 00 00 	or     DWORD PTR [rbx+rcx*1+0x32d6],edx
    6ab8:	02 09                	add    cl,BYTE PTR [rcx]
    6aba:	95                   	xchg   ebp,eax
    6abb:	0b f2                	or     esi,edx
    6abd:	32 00                	xor    al,BYTE PTR [rax]
    6abf:	00 02                	add    BYTE PTR [rdx],al
    6ac1:	09 96 0b 0e 33 00    	or     DWORD PTR [rsi+0x330e0b],edx
    6ac7:	00 02                	add    BYTE PTR [rdx],al
    6ac9:	09 97 0b 2f 33 00    	or     DWORD PTR [rdi+0x332f0b],edx
    6acf:	00 02                	add    BYTE PTR [rdx],al
    6ad1:	09 98 0b 46 33 00    	or     DWORD PTR [rax+0x33460b],ebx
    6ad7:	00 02                	add    BYTE PTR [rdx],al
    6ad9:	09 99 0b 53 33 00    	or     DWORD PTR [rcx+0x33530b],ebx
    6adf:	00 02                	add    BYTE PTR [rdx],al
    6ae1:	09 9a 0b 79 33 00    	or     DWORD PTR [rdx+0x33790b],ebx
    6ae7:	00 02                	add    BYTE PTR [rdx],al
    6ae9:	09 9b 0b 9f 33 00    	or     DWORD PTR [rbx+0x339f0b],ebx
    6aef:	00 02                	add    BYTE PTR [rdx],al
    6af1:	09 9c 0b bb 33 00 00 	or     DWORD PTR [rbx+rcx*1+0x33bb],ebx
    6af8:	02 09                	add    cl,BYTE PTR [rcx]
    6afa:	9d                   	popf
    6afb:	0b e5                	or     esp,ebp
    6afd:	33 00                	xor    eax,DWORD PTR [rax]
    6aff:	00 02                	add    BYTE PTR [rdx],al
    6b01:	09 9e 0b 01 34 00    	or     DWORD PTR [rsi+0x34010b],ebx
    6b07:	00 02                	add    BYTE PTR [rdx],al
    6b09:	09 a0 0b 18 34 00    	or     DWORD PTR [rax+0x34180b],esp
    6b0f:	00 02                	add    BYTE PTR [rdx],al
    6b11:	09 a2 0b 39 34 00    	or     DWORD PTR [rdx+0x34390b],esp
    6b17:	00 02                	add    BYTE PTR [rdx],al
    6b19:	09 a3 0b 5a 34 00    	or     DWORD PTR [rbx+0x345a0b],esp
    6b1f:	00 02                	add    BYTE PTR [rdx],al
    6b21:	09 a4 0b 76 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x3476],esp
    6b28:	02 09                	add    cl,BYTE PTR [rcx]
    6b2a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6b2b:	0b 9b 34 00 00 02    	or     ebx,DWORD PTR [rbx+0x2000034]
    6b31:	09 a9 0b c0 34 00    	or     DWORD PTR [rcx+0x34c00b],ebp
    6b37:	00 02                	add    BYTE PTR [rdx],al
    6b39:	09 ac 0b e5 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x34e5],ebp
    6b40:	02 09                	add    cl,BYTE PTR [rcx]
    6b42:	ae                   	scas   al,BYTE PTR es:[rdi]
    6b43:	0b 0a                	or     ecx,DWORD PTR [rdx]
    6b45:	35 00 00 02 09       	xor    eax,0x9020000
    6b4a:	b0 0b                	mov    al,0xb
    6b4c:	25 35 00 00 02       	and    eax,0x2000035
    6b51:	09 b2 0b 45 35 00    	or     DWORD PTR [rdx+0x35450b],esi
    6b57:	00 02                	add    BYTE PTR [rdx],al
    6b59:	09 b3 0b 65 35 00    	or     DWORD PTR [rbx+0x35650b],esi
    6b5f:	00 02                	add    BYTE PTR [rdx],al
    6b61:	09 b4 0b 80 35 00 00 	or     DWORD PTR [rbx+rcx*1+0x3580],esi
    6b68:	02 09                	add    cl,BYTE PTR [rcx]
    6b6a:	b5 0b                	mov    ch,0xb
    6b6c:	9b                   	fwait
    6b6d:	35 00 00 02 09       	xor    eax,0x9020000
    6b72:	b6 0b                	mov    dh,0xb
    6b74:	b6 35                	mov    dh,0x35
    6b76:	00 00                	add    BYTE PTR [rax],al
    6b78:	02 09                	add    cl,BYTE PTR [rcx]
    6b7a:	b7 0b                	mov    bh,0xb
    6b7c:	d1 35 00 00 02 09    	shl    DWORD PTR [rip+0x9020000],1        # 9026b82 <_end+0x9020b6a>
    6b82:	b8 0b ec 35 00       	mov    eax,0x35ec0b
    6b87:	00 02                	add    BYTE PTR [rdx],al
    6b89:	09 b9 0b b9 36 00    	or     DWORD PTR [rcx+0x36b90b],edi
    6b8f:	00 02                	add    BYTE PTR [rdx],al
    6b91:	09 ba 0b cf 36 00    	or     DWORD PTR [rdx+0x36cf0b],edi
    6b97:	00 02                	add    BYTE PTR [rdx],al
    6b99:	09 bb 0b ef 36 00    	or     DWORD PTR [rbx+0x36ef0b],edi
    6b9f:	00 02                	add    BYTE PTR [rdx],al
    6ba1:	09 bc 0b 0f 37 00 00 	or     DWORD PTR [rbx+rcx*1+0x370f],edi
    6ba8:	02 09                	add    cl,BYTE PTR [rcx]
    6baa:	bd 0b 2f 37 00       	mov    ebp,0x372f0b
    6baf:	00 02                	add    BYTE PTR [rdx],al
    6bb1:	09 be 0b 5a 37 00    	or     DWORD PTR [rsi+0x375a0b],edi
    6bb7:	00 02                	add    BYTE PTR [rdx],al
    6bb9:	09 bf 0b 75 37 00    	or     DWORD PTR [rdi+0x37750b],edi
    6bbf:	00 02                	add    BYTE PTR [rdx],al
    6bc1:	09 c1                	or     ecx,eax
    6bc3:	0b 96 37 00 00 02    	or     edx,DWORD PTR [rsi+0x2000037]
    6bc9:	09 c3                	or     ebx,eax
    6bcb:	0b b2 37 00 00 02    	or     esi,DWORD PTR [rdx+0x2000037]
    6bd1:	09 c4                	or     esp,eax
    6bd3:	0b d2                	or     edx,edx
    6bd5:	37                   	(bad)
    6bd6:	00 00                	add    BYTE PTR [rax],al
    6bd8:	02 09                	add    cl,BYTE PTR [rcx]
    6bda:	c5 0b f7             	(bad)
    6bdd:	37                   	(bad)
    6bde:	00 00                	add    BYTE PTR [rax],al
    6be0:	02 09                	add    cl,BYTE PTR [rcx]
    6be2:	c6                   	(bad)
    6be3:	0b 1c 38             	or     ebx,DWORD PTR [rax+rdi*1]
    6be6:	00 00                	add    BYTE PTR [rax],al
    6be8:	02 09                	add    cl,BYTE PTR [rcx]
    6bea:	c7                   	(bad)
    6beb:	0b 3c 38             	or     edi,DWORD PTR [rax+rdi*1]
    6bee:	00 00                	add    BYTE PTR [rax],al
    6bf0:	02 09                	add    cl,BYTE PTR [rcx]
    6bf2:	c8 0b 53 38          	enter  0x530b,0x38
    6bf6:	00 00                	add    BYTE PTR [rax],al
    6bf8:	02 09                	add    cl,BYTE PTR [rcx]
    6bfa:	c9                   	leave
    6bfb:	0b 74 38 00          	or     esi,DWORD PTR [rax+rdi*1+0x0]
    6bff:	00 02                	add    BYTE PTR [rdx],al
    6c01:	09 ca                	or     edx,ecx
    6c03:	0b 94 38 00 00 02 09 	or     edx,DWORD PTR [rax+rdi*1+0x9020000]
    6c0a:	cb                   	retf
    6c0b:	0b b4 38 00 00 02 09 	or     esi,DWORD PTR [rax+rdi*1+0x9020000]
    6c12:	cc                   	int3
    6c13:	0b d4                	or     edx,esp
    6c15:	38 00                	cmp    BYTE PTR [rax],al
    6c17:	00 02                	add    BYTE PTR [rdx],al
    6c19:	09 cd                	or     ebp,ecx
    6c1b:	0b eb                	or     ebp,ebx
    6c1d:	38 00                	cmp    BYTE PTR [rax],al
    6c1f:	00 02                	add    BYTE PTR [rdx],al
    6c21:	09 ce                	or     esi,ecx
    6c23:	0b 07                	or     eax,DWORD PTR [rdi]
    6c25:	39 00                	cmp    DWORD PTR [rax],eax
    6c27:	00 02                	add    BYTE PTR [rdx],al
    6c29:	09 ce                	or     esi,ecx
    6c2b:	0b 26                	or     esp,DWORD PTR [rsi]
    6c2d:	39 00                	cmp    DWORD PTR [rax],eax
    6c2f:	00 02                	add    BYTE PTR [rdx],al
    6c31:	09 cf                	or     edi,ecx
    6c33:	0b 45 39             	or     eax,DWORD PTR [rbp+0x39]
    6c36:	00 00                	add    BYTE PTR [rax],al
    6c38:	02 09                	add    cl,BYTE PTR [rcx]
    6c3a:	cf                   	iret
    6c3b:	0b 64 39 00          	or     esp,DWORD PTR [rcx+rdi*1+0x0]
    6c3f:	00 02                	add    BYTE PTR [rdx],al
    6c41:	09 d0                	or     eax,edx
    6c43:	0b 83 39 00 00 02    	or     eax,DWORD PTR [rbx+0x2000039]
    6c49:	09 d0                	or     eax,edx
    6c4b:	0b a2 39 00 00 02    	or     esp,DWORD PTR [rdx+0x2000039]
    6c51:	09 d1                	or     ecx,edx
    6c53:	0b c1                	or     eax,ecx
    6c55:	39 00                	cmp    DWORD PTR [rax],eax
    6c57:	00 02                	add    BYTE PTR [rdx],al
    6c59:	09 d1                	or     ecx,edx
    6c5b:	0b e0                	or     esp,eax
    6c5d:	39 00                	cmp    DWORD PTR [rax],eax
    6c5f:	00 02                	add    BYTE PTR [rdx],al
    6c61:	09 d2                	or     edx,edx
    6c63:	0b ff                	or     edi,edi
    6c65:	39 00                	cmp    DWORD PTR [rax],eax
    6c67:	00 02                	add    BYTE PTR [rdx],al
    6c69:	09 d2                	or     edx,edx
    6c6b:	0b 24 3a             	or     esp,DWORD PTR [rdx+rdi*1]
    6c6e:	00 00                	add    BYTE PTR [rax],al
    6c70:	18 09                	sbb    BYTE PTR [rcx],cl
    6c72:	0b 01                	or     eax,DWORD PTR [rcx]
    6c74:	16                   	(bad)
    6c75:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6c78:	00 18                	add    BYTE PTR [rax],bl
    6c7a:	09 0c 01             	or     DWORD PTR [rcx+rax*1],ecx
    6c7d:	16                   	(bad)
    6c7e:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6c81:	00 18                	add    BYTE PTR [rax],bl
    6c83:	09 0d 01 16 8a 3a    	or     DWORD PTR [rip+0x3a8a1601],ecx        # 3a8a828a <_end+0x3a8a2272>
    6c89:	00 00                	add    BYTE PTR [rax],al
    6c8b:	18 09                	sbb    BYTE PTR [rcx],cl
    6c8d:	1b 01                	sbb    eax,DWORD PTR [rcx]
    6c8f:	0e                   	(bad)
    6c90:	96                   	xchg   esi,eax
    6c91:	37                   	(bad)
    6c92:	00 00                	add    BYTE PTR [rax],al
    6c94:	18 09                	sbb    BYTE PTR [rcx],cl
    6c96:	1e                   	(bad)
    6c97:	01 0e                	add    DWORD PTR [rsi],ecx
    6c99:	9b                   	fwait
    6c9a:	34 00                	xor    al,0x0
    6c9c:	00 18                	add    BYTE PTR [rax],bl
    6c9e:	09 21                	or     DWORD PTR [rcx],esp
    6ca0:	01 0e                	add    DWORD PTR [rsi],ecx
    6ca2:	e5 34                	in     eax,0x34
    6ca4:	00 00                	add    BYTE PTR [rax],al
    6ca6:	18 09                	sbb    BYTE PTR [rcx],cl
    6ca8:	24 01                	and    al,0x1
    6caa:	0e                   	(bad)
    6cab:	25 35 00 00 18       	and    eax,0x18000035
    6cb0:	09 28                	or     DWORD PTR [rax],ebp
    6cb2:	01 0e                	add    DWORD PTR [rsi],ecx
    6cb4:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6cb7:	00 18                	add    BYTE PTR [rax],bl
    6cb9:	09 29                	or     DWORD PTR [rcx],ebp
    6cbb:	01 0e                	add    DWORD PTR [rsi],ecx
    6cbd:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6cc0:	00 18                	add    BYTE PTR [rax],bl
    6cc2:	09 2a                	or     DWORD PTR [rdx],ebp
    6cc4:	01 0e                	add    DWORD PTR [rsi],ecx
    6cc6:	8a 3a                	mov    bh,BYTE PTR [rdx]
    6cc8:	00 00                	add    BYTE PTR [rax],al
    6cca:	02 0a                	add    cl,BYTE PTR [rdx]
    6ccc:	35 0b af 3a 00       	xor    eax,0x3aaf0b
    6cd1:	00 02                	add    BYTE PTR [rdx],al
    6cd3:	0a 36                	or     dh,BYTE PTR [rsi]
    6cd5:	0b f5                	or     esi,ebp
    6cd7:	3b 00                	cmp    eax,DWORD PTR [rax]
    6cd9:	00 02                	add    BYTE PTR [rdx],al
    6cdb:	0a 37                	or     dh,BYTE PTR [rdi]
    6cdd:	0b 10                	or     edx,DWORD PTR [rax]
    6cdf:	3c 00                	cmp    al,0x0
    6ce1:	00 02                	add    BYTE PTR [rdx],al
    6ce3:	0b 62 0b             	or     esp,DWORD PTR [rdx+0xb]
    6ce6:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    6ce9:	00 02                	add    BYTE PTR [rdx],al
    6ceb:	0b 63 0b             	or     esp,DWORD PTR [rbx+0xb]
    6cee:	7d 2c                	jge    6d1c <_end+0xd04>
    6cf0:	00 00                	add    BYTE PTR [rax],al
    6cf2:	02 0b                	add    cl,BYTE PTR [rbx]
    6cf4:	65 0b 21             	or     esp,DWORD PTR gs:[rcx]
    6cf7:	3c 00                	cmp    al,0x0
    6cf9:	00 02                	add    BYTE PTR [rdx],al
    6cfb:	0b 66 0b             	or     esp,DWORD PTR [rsi+0xb]
    6cfe:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    6d01:	00 02                	add    BYTE PTR [rdx],al
    6d03:	0b 67 0b             	or     esp,DWORD PTR [rdi+0xb]
    6d06:	49 3c 00             	rex.WB cmp al,0x0
    6d09:	00 02                	add    BYTE PTR [rdx],al
    6d0b:	0b 68 0b             	or     ebp,DWORD PTR [rax+0xb]
    6d0e:	60                   	(bad)
    6d0f:	3c 00                	cmp    al,0x0
    6d11:	00 02                	add    BYTE PTR [rdx],al
    6d13:	0b 69 0b             	or     ebp,DWORD PTR [rcx+0xb]
    6d16:	77 3c                	ja     6d54 <_end+0xd3c>
    6d18:	00 00                	add    BYTE PTR [rax],al
    6d1a:	02 0b                	add    cl,BYTE PTR [rbx]
    6d1c:	6a 0b                	push   0xb
    6d1e:	8d 3c 00             	lea    edi,[rax+rax*1]
    6d21:	00 02                	add    BYTE PTR [rdx],al
    6d23:	0b 6b 0b             	or     ebp,DWORD PTR [rbx+0xb]
    6d26:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6d27:	3c 00                	cmp    al,0x0
    6d29:	00 02                	add    BYTE PTR [rdx],al
    6d2b:	0b 6c 0b c5          	or     ebp,DWORD PTR [rbx+rcx*1-0x3b]
    6d2f:	3c 00                	cmp    al,0x0
    6d31:	00 02                	add    BYTE PTR [rdx],al
    6d33:	0b 6d 0b             	or     ebp,DWORD PTR [rbp+0xb]
    6d36:	e5 3c                	in     eax,0x3c
    6d38:	00 00                	add    BYTE PTR [rax],al
    6d3a:	02 0b                	add    cl,BYTE PTR [rbx]
    6d3c:	71 0b                	jno    6d49 <_end+0xd31>
    6d3e:	01 3d 00 00 02 0b    	add    DWORD PTR [rip+0xb020000],edi        # b026d44 <_end+0xb020d2c>
    6d44:	72 0b                	jb     6d51 <_end+0xd39>
    6d46:	26 3d 00 00 02 0b    	es cmp eax,0xb020000
    6d4c:	74 0b                	je     6d59 <_end+0xd41>
    6d4e:	47 3d 00 00 02 0b    	rex.RXB cmp eax,0xb020000
    6d54:	75 0b                	jne    6d61 <_end+0xd49>
    6d56:	68 3d 00 00 02       	push   0x200003d
    6d5b:	0b 76 0b             	or     esi,DWORD PTR [rsi+0xb]
    6d5e:	89 3d 00 00 02 0b    	mov    DWORD PTR [rip+0xb020000],edi        # b026d64 <_end+0xb020d4c>
    6d64:	78 0b                	js     6d71 <_end+0xd59>
    6d66:	a0 3d 00 00 02 0b 79 	movabs al,ds:0xb70b790b0200003d
    6d6d:	0b b7 
    6d6f:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d74:	7e 0b                	jle    6d81 <_end+0xd69>
    6d76:	c3                   	ret
    6d77:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d7c:	83 0b d5             	or     DWORD PTR [rbx],0xffffffd5
    6d7f:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d84:	84 0b                	test   BYTE PTR [rbx],cl
    6d86:	eb 3d                	jmp    6dc5 <_end+0xdad>
    6d88:	00 00                	add    BYTE PTR [rax],al
    6d8a:	02 0b                	add    cl,BYTE PTR [rbx]
    6d8c:	85 0b                	test   DWORD PTR [rbx],ecx
    6d8e:	06                   	(bad)
    6d8f:	3e 00 00             	ds add BYTE PTR [rax],al
    6d92:	02 0b                	add    cl,BYTE PTR [rbx]
    6d94:	87 0b                	xchg   DWORD PTR [rbx],ecx
    6d96:	18 3e                	sbb    BYTE PTR [rsi],bh
    6d98:	00 00                	add    BYTE PTR [rax],al
    6d9a:	02 0b                	add    cl,BYTE PTR [rbx]
    6d9c:	88 0b                	mov    BYTE PTR [rbx],cl
    6d9e:	2f                   	(bad)
    6d9f:	3e 00 00             	ds add BYTE PTR [rax],al
    6da2:	02 0b                	add    cl,BYTE PTR [rbx]
    6da4:	8b 0b                	mov    ecx,DWORD PTR [rbx]
    6da6:	55                   	push   rbp
    6da7:	3e 00 00             	ds add BYTE PTR [rax],al
    6daa:	02 0b                	add    cl,BYTE PTR [rbx]
    6dac:	8d 0b                	lea    ecx,[rbx]
    6dae:	61                   	(bad)
    6daf:	3e 00 00             	ds add BYTE PTR [rax],al
    6db2:	02 0b                	add    cl,BYTE PTR [rbx]
    6db4:	8f                   	(bad)
    6db5:	0b 77 3e             	or     esi,DWORD PTR [rdi+0x3e]
    6db8:	00 00                	add    BYTE PTR [rax],al
    6dba:	50                   	push   rax
    6dbb:	c1 29 00             	shr    DWORD PTR [rcx],0x0
    6dbe:	00 11                	add    BYTE PTR [rcx],dl
    6dc0:	55                   	push   rbp
    6dc1:	01 41 02             	add    DWORD PTR [rcx+0x2],eax
    6dc4:	0c 3a                	or     al,0x3a
    6dc6:	0b 11                	or     edx,DWORD PTR [rcx]
    6dc8:	32 00                	xor    al,BYTE PTR [rax]
    6dca:	00 68 70             	add    BYTE PTR [rax+0x70],ch
    6dcd:	6d                   	ins    DWORD PTR es:[rdi],dx
    6dce:	72 00                	jb     6dd0 <_end+0xdb8>
    6dd0:	3c 35                	cmp    al,0x35
    6dd2:	0b 02                	or     eax,DWORD PTR [rdx]
    6dd4:	0d 33 0b fa 23       	or     eax,0x23fa0b33
    6dd9:	00 00                	add    BYTE PTR [rax],al
    6ddb:	02 0d 34 0b 06 24    	add    cl,BYTE PTR [rip+0x24060b34]        # 24067915 <_end+0x240618fd>
    6de1:	00 00                	add    BYTE PTR [rax],al
    6de3:	02 0d 35 0b 12 24    	add    cl,BYTE PTR [rip+0x24120b35]        # 2412791e <_end+0x24121906>
    6de9:	00 00                	add    BYTE PTR [rax],al
    6deb:	02 0d 36 0b 1e 24    	add    cl,BYTE PTR [rip+0x241e0b36]        # 241e7927 <_end+0x241e190f>
    6df1:	00 00                	add    BYTE PTR [rax],al
    6df3:	02 0d 38 0b 2d 2d    	add    cl,BYTE PTR [rip+0x2d2d0b38]        # 2d2d7931 <_end+0x2d2d1919>
    6df9:	00 00                	add    BYTE PTR [rax],al
    6dfb:	02 0d 39 0b 39 2d    	add    cl,BYTE PTR [rip+0x2d390b39]        # 2d39793a <_end+0x2d391922>
    6e01:	00 00                	add    BYTE PTR [rax],al
    6e03:	02 0d 3a 0b 45 2d    	add    cl,BYTE PTR [rip+0x2d450b3a]        # 2d457943 <_end+0x2d45192b>
    6e09:	00 00                	add    BYTE PTR [rax],al
    6e0b:	02 0d 3b 0b 51 2d    	add    cl,BYTE PTR [rip+0x2d510b3b]        # 2d51794c <_end+0x2d511934>
    6e11:	00 00                	add    BYTE PTR [rax],al
    6e13:	02 0d 3d 0b cd 2c    	add    cl,BYTE PTR [rip+0x2ccd0b3d]        # 2ccd7956 <_end+0x2ccd193e>
    6e19:	00 00                	add    BYTE PTR [rax],al
    6e1b:	02 0d 3e 0b d9 2c    	add    cl,BYTE PTR [rip+0x2cd90b3e]        # 2cd9795f <_end+0x2cd91947>
    6e21:	00 00                	add    BYTE PTR [rax],al
    6e23:	02 0d 3f 0b e5 2c    	add    cl,BYTE PTR [rip+0x2ce50b3f]        # 2ce57968 <_end+0x2ce51950>
    6e29:	00 00                	add    BYTE PTR [rax],al
    6e2b:	02 0d 40 0b f1 2c    	add    cl,BYTE PTR [rip+0x2cf10b40]        # 2cf17971 <_end+0x2cf11959>
    6e31:	00 00                	add    BYTE PTR [rax],al
    6e33:	02 0d 42 0b a5 2d    	add    cl,BYTE PTR [rip+0x2da50b42]        # 2da5797b <_end+0x2da51963>
    6e39:	00 00                	add    BYTE PTR [rax],al
    6e3b:	02 0d 43 0b 8d 2d    	add    cl,BYTE PTR [rip+0x2d8d0b43]        # 2d8d7984 <_end+0x2d8d196c>
    6e41:	00 00                	add    BYTE PTR [rax],al
    6e43:	02 0d 45 0b 98 2c    	add    cl,BYTE PTR [rip+0x2c980b45]        # 2c98798e <_end+0x2c981976>
    6e49:	00 00                	add    BYTE PTR [rax],al
    6e4b:	02 0d 46 0b a4 2c    	add    cl,BYTE PTR [rip+0x2ca40b46]        # 2ca47997 <_end+0x2ca4197f>
    6e51:	00 00                	add    BYTE PTR [rax],al
    6e53:	02 0d 47 0b b0 2c    	add    cl,BYTE PTR [rip+0x2cb00b47]        # 2cb079a0 <_end+0x2cb01988>
    6e59:	00 00                	add    BYTE PTR [rax],al
    6e5b:	02 0d 48 0b c1 2c    	add    cl,BYTE PTR [rip+0x2cc10b48]        # 2cc179a9 <_end+0x2cc11991>
    6e61:	00 00                	add    BYTE PTR [rax],al
    6e63:	02 0d 4a 0b 5d 2d    	add    cl,BYTE PTR [rip+0x2d5d0b4a]        # 2d5d79b3 <_end+0x2d5d199b>
    6e69:	00 00                	add    BYTE PTR [rax],al
    6e6b:	02 0d 4b 0b 69 2d    	add    cl,BYTE PTR [rip+0x2d690b4b]        # 2d6979bc <_end+0x2d6919a4>
    6e71:	00 00                	add    BYTE PTR [rax],al
    6e73:	02 0d 4c 0b 75 2d    	add    cl,BYTE PTR [rip+0x2d750b4c]        # 2d7579c5 <_end+0x2d7519ad>
    6e79:	00 00                	add    BYTE PTR [rax],al
    6e7b:	02 0d 4d 0b 81 2d    	add    cl,BYTE PTR [rip+0x2d810b4d]        # 2d8179ce <_end+0x2d8119b6>
    6e81:	00 00                	add    BYTE PTR [rax],al
    6e83:	02 0d 4f 0b fd 2c    	add    cl,BYTE PTR [rip+0x2cfd0b4f]        # 2cfd79d8 <_end+0x2cfd19c0>
    6e89:	00 00                	add    BYTE PTR [rax],al
    6e8b:	02 0d 50 0b 09 2d    	add    cl,BYTE PTR [rip+0x2d090b50]        # 2d0979e1 <_end+0x2d0919c9>
    6e91:	00 00                	add    BYTE PTR [rax],al
    6e93:	02 0d 51 0b 15 2d    	add    cl,BYTE PTR [rip+0x2d150b51]        # 2d1579ea <_end+0x2d1519d2>
    6e99:	00 00                	add    BYTE PTR [rax],al
    6e9b:	02 0d 52 0b 21 2d    	add    cl,BYTE PTR [rip+0x2d210b52]        # 2d2179f3 <_end+0x2d2119db>
    6ea1:	00 00                	add    BYTE PTR [rax],al
    6ea3:	02 0d 54 0b b6 2d    	add    cl,BYTE PTR [rip+0x2db60b54]        # 2db679fd <_end+0x2db619e5>
    6ea9:	00 00                	add    BYTE PTR [rax],al
    6eab:	02 0d 55 0b 99 2d    	add    cl,BYTE PTR [rip+0x2d990b55]        # 2d997a06 <_end+0x2d9919ee>
    6eb1:	00 00                	add    BYTE PTR [rax],al
    6eb3:	33 6a 32             	xor    ebp,DWORD PTR [rdx+0x32]
    6eb6:	00 00                	add    BYTE PTR [rax],al
    6eb8:	05 91 0d a0 17       	add    eax,0x17a00d91
    6ebd:	00 00                	add    BYTE PTR [rax],al
    6ebf:	3e 26 19 00          	ds es sbb DWORD PTR [rax],eax
    6ec3:	00 f1                	add    cl,dh
    6ec5:	20 00                	and    BYTE PTR [rax],al
    6ec7:	00 3e                	add    BYTE PTR [rsi],bh
    6ec9:	26 19 00             	es sbb DWORD PTR [rax],eax
    6ecc:	00 f1                	add    cl,dh
    6ece:	20 00                	and    BYTE PTR [rax],al
    6ed0:	00 3e                	add    BYTE PTR [rsi],bh
    6ed2:	26 19 00             	es sbb DWORD PTR [rax],eax
    6ed5:	00 f1                	add    cl,dh
    6ed7:	20 00                	and    BYTE PTR [rax],al
    6ed9:	00 00                	add    BYTE PTR [rax],al
    6edb:	02 0f                	add    cl,BYTE PTR [rdi]
    6edd:	3c 0b                	cmp    al,0xb
    6edf:	dd 23                	frstor [rbx]
    6ee1:	00 00                	add    BYTE PTR [rax],al
    6ee3:	02 0f                	add    cl,BYTE PTR [rdi]
    6ee5:	3d 0b e9 23 00       	cmp    eax,0x23e90b
    6eea:	00 02                	add    BYTE PTR [rdx],al
    6eec:	0f 3e                	(bad)
    6eee:	0b 17                	or     edx,DWORD PTR [rdi]
    6ef0:	36 00 00             	ss add BYTE PTR [rax],al
    6ef3:	02 0f                	add    cl,BYTE PTR [rdi]
    6ef5:	40 0b b7 3e 00 00 02 	rex or esi,DWORD PTR [rdi+0x200003e]
    6efc:	0f 41 0b             	cmovno ecx,DWORD PTR [rbx]
    6eff:	c3                   	ret
    6f00:	3e 00 00             	ds add BYTE PTR [rax],al
    6f03:	02 0f                	add    cl,BYTE PTR [rdi]
    6f05:	42 0b de             	rex.X or ebx,esi
    6f08:	3e 00 00             	ds add BYTE PTR [rax],al
    6f0b:	02 0f                	add    cl,BYTE PTR [rdi]
    6f0d:	43 0b f9             	rex.XB or edi,r9d
    6f10:	3e 00 00             	ds add BYTE PTR [rax],al
    6f13:	02 0f                	add    cl,BYTE PTR [rdi]
    6f15:	44 0b 14 3f          	or     r10d,DWORD PTR [rdi+rdi*1]
    6f19:	00 00                	add    BYTE PTR [rax],al
    6f1b:	02 0f                	add    cl,BYTE PTR [rdi]
    6f1d:	45 0b 2a             	or     r13d,DWORD PTR [r10]
    6f20:	3f                   	(bad)
    6f21:	00 00                	add    BYTE PTR [rax],al
    6f23:	02 0f                	add    cl,BYTE PTR [rdi]
    6f25:	46 0b 45 3f          	rex.RX or r8d,DWORD PTR [rbp+0x3f]
    6f29:	00 00                	add    BYTE PTR [rax],al
    6f2b:	02 0f                	add    cl,BYTE PTR [rdi]
    6f2d:	47 0b 5b 3f          	rex.RXB or r11d,DWORD PTR [r11+0x3f]
    6f31:	00 00                	add    BYTE PTR [rax],al
    6f33:	02 0f                	add    cl,BYTE PTR [rdi]
    6f35:	4f 0b 2a             	rex.WRXB or r13,QWORD PTR [r10]
    6f38:	24 00                	and    al,0x0
    6f3a:	00 02                	add    BYTE PTR [rdx],al
    6f3c:	0f                   	movmskps ecx,(bad)
    6f3d:	50                   	push   rax
    6f3e:	0b 71 3f             	or     esi,DWORD PTR [rcx+0x3f]
    6f41:	00 00                	add    BYTE PTR [rax],al
    6f43:	33 1b                	xor    ebx,DWORD PTR [rbx]
    6f45:	13 00                	adc    eax,DWORD PTR [rax]
    6f47:	00 04 37             	add    BYTE PTR [rdi+rsi*1],al
    6f4a:	0d 94 1f 00 00       	or     eax,0x1f94
    6f4f:	3f                   	(bad)
    6f50:	4a                   	rex.WX
    6f51:	2e 00 00             	cs add BYTE PTR [rax],al
    6f54:	ff 01                	inc    DWORD PTR [rcx]
    6f56:	94                   	xchg   esp,eax
    6f57:	1a 00                	sbb    al,BYTE PTR [rax]
    6f59:	00 04 15 0e 00 00 04 	add    BYTE PTR [rdx*1+0x400000e],al
    6f60:	0b 02                	or     eax,DWORD PTR [rdx]
    6f62:	02 07                	add    al,BYTE PTR [rdi]
    6f64:	2b 00                	sub    eax,DWORD PTR [rax]
    6f66:	00 a5 2d 00 00 3f    	add    BYTE PTR [rbp+0x3f00002d],ah
    6f6c:	18 00                	sbb    BYTE PTR [rax],al
    6f6e:	00 01                	add    BYTE PTR [rcx],al
    6f70:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6f71:	2d 00 00 01 a5       	sub    eax,0xa5010000
    6f76:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6f7b:	5c                   	pop    rsp
    6f7c:	0d 00 00 34 02       	or     eax,0x2340000
    6f81:	0c a5                	or     al,0xa5
    6f83:	17                   	(bad)
    6f84:	00 00                	add    BYTE PTR [rax],al
    6f86:	53                   	push   rbx
    6f87:	18 00                	sbb    BYTE PTR [rax],al
    6f89:	00 59 18             	add    BYTE PTR [rcx+0x18],bl
    6f8c:	00 00                	add    BYTE PTR [rax],al
    6f8e:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    6f94:	2b 5c 0d 00          	sub    ebx,DWORD PTR [rbp+rcx*1+0x0]
    6f98:	00 36                	add    BYTE PTR [rsi],dh
    6f9a:	02 02                	add    al,BYTE PTR [rdx]
    6f9c:	d2 1a                	rcr    BYTE PTR [rdx],cl
    6f9e:	00 00                	add    BYTE PTR [rax],al
    6fa0:	6d                   	ins    DWORD PTR es:[rdi],dx
    6fa1:	18 00                	sbb    BYTE PTR [rax],al
    6fa3:	00 78 18             	add    BYTE PTR [rax+0x18],bh
    6fa6:	00 00                	add    BYTE PTR [rax],al
    6fa8:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    6fae:	9c                   	pushf
    6faf:	3f                   	(bad)
    6fb0:	00 00                	add    BYTE PTR [rax],al
    6fb2:	00 2b                	add    BYTE PTR [rbx],ch
    6fb4:	70 0d                	jo     6fc3 <_end+0xfab>
    6fb6:	00 00                	add    BYTE PTR [rax],al
    6fb8:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    6fbb:	8e 12                	mov    ss,WORD PTR [rdx]
    6fbd:	00 00                	add    BYTE PTR [rax],al
    6fbf:	8c 18                	mov    WORD PTR [rax],ds
    6fc1:	00 00                	add    BYTE PTR [rax],al
    6fc3:	97                   	xchg   edi,eax
    6fc4:	18 00                	sbb    BYTE PTR [rax],al
    6fc6:	00 10                	add    BYTE PTR [rax],dl
    6fc8:	92                   	xchg   edx,eax
    6fc9:	3f                   	(bad)
    6fca:	00 00                	add    BYTE PTR [rax],al
    6fcc:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    6fd2:	51                   	push   rcx
    6fd3:	ee                   	out    dx,al
    6fd4:	14 00                	adc    al,0x0
    6fd6:	00 86 32 00 00 a1    	add    BYTE PTR [rsi-0x5effffce],al
    6fdc:	3f                   	(bad)
    6fdd:	00 00                	add    BYTE PTR [rax],al
    6fdf:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6fe0:	18 00                	sbb    BYTE PTR [rax],al
    6fe2:	00 b7 18 00 00 10    	add    BYTE PTR [rdi+0x10000018],dh
    6fe8:	92                   	xchg   edx,eax
    6fe9:	3f                   	(bad)
    6fea:	00 00                	add    BYTE PTR [rax],al
    6fec:	01 9c 3f 00 00 00 52 	add    DWORD PTR [rdi+rdi*1+0x52000000],ebx
    6ff3:	72 65                	jb     705a <_end+0x1042>
    6ff5:	70 00                	jo     6ff7 <_end+0xfdf>
    6ff7:	b2 21                	mov    dl,0x21
    6ff9:	00 00                	add    BYTE PTR [rax],al
    6ffb:	13 b7 18 00 00 14    	adc    esi,DWORD PTR [rdi+0x14000018]
    7001:	f1                   	int1
    7002:	24 00                	and    al,0x0
    7004:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    7007:	0e                   	(bad)
    7008:	1b 00                	sbb    eax,DWORD PTR [rax]
    700a:	00 b7 18 00 00 dc    	add    BYTE PTR [rdi-0x23ffffe8],dh
    7010:	18 00                	sbb    BYTE PTR [rax],al
    7012:	00 e2                	add    dl,ah
    7014:	18 00                	sbb    BYTE PTR [rax],al
    7016:	00 10                	add    BYTE PTR [rax],dl
    7018:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7019:	3f                   	(bad)
    701a:	00 00                	add    BYTE PTR [rax],al
    701c:	00 14 53             	add    BYTE PTR [rbx+rdx*2],dl
    701f:	14 00                	adc    al,0x0
    7021:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    7024:	52                   	push   rdx
    7025:	2f                   	(bad)
    7026:	00 00                	add    BYTE PTR [rax],al
    7028:	14 18                	adc    al,0x18
    702a:	00 00                	add    BYTE PTR [rax],al
    702c:	f9                   	stc
    702d:	18 00                	sbb    BYTE PTR [rax],al
    702f:	00 ff                	add    bh,bh
    7031:	18 00                	sbb    BYTE PTR [rax],al
    7033:	00 10                	add    BYTE PTR [rax],dl
    7035:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7036:	3f                   	(bad)
    7037:	00 00                	add    BYTE PTR [rax],al
    7039:	00 14 d8             	add    BYTE PTR [rax+rbx*8],dl
    703c:	18 00                	sbb    BYTE PTR [rax],al
    703e:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    7041:	1a 1d 00 00 14 18    	sbb    bl,BYTE PTR [rip+0x18140000]        # 18147047 <_end+0x1814102f>
    7047:	00 00                	add    BYTE PTR [rax],al
    7049:	16                   	(bad)
    704a:	19 00                	sbb    DWORD PTR [rax],eax
    704c:	00 1c 19             	add    BYTE PTR [rcx+rbx*1],bl
    704f:	00 00                	add    BYTE PTR [rax],al
    7051:	10 a6 3f 00 00 00    	adc    BYTE PTR [rsi+0x3f],ah
    7057:	14 79                	adc    al,0x79
    7059:	2e 00 00             	cs add BYTE PTR [rax],al
    705c:	5b                   	pop    rbx
    705d:	02 c9                	add    cl,cl
    705f:	11 00                	adc    DWORD PTR [rax],eax
    7061:	00 a1 3f 00 00 33    	add    BYTE PTR [rcx+0x3300003f],ah
    7067:	19 00                	sbb    DWORD PTR [rax],eax
    7069:	00 39                	add    BYTE PTR [rcx],bh
    706b:	19 00                	sbb    DWORD PTR [rax],eax
    706d:	00 10                	add    BYTE PTR [rax],dl
    706f:	92                   	xchg   edx,eax
    7070:	3f                   	(bad)
    7071:	00 00                	add    BYTE PTR [rax],al
    7073:	00 14 79             	add    BYTE PTR [rcx+rdi*2],dl
    7076:	2e 00 00             	cs add BYTE PTR [rax],al
    7079:	62 02 62 11 00       	(bad)
    707e:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    7081:	00 00                	add    BYTE PTR [rax],al
    7083:	50                   	push   rax
    7084:	19 00                	sbb    DWORD PTR [rax],eax
    7086:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    7089:	00 00                	add    BYTE PTR [rax],al
    708b:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    7091:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7092:	21 00                	and    DWORD PTR [rax],eax
    7094:	00 00                	add    BYTE PTR [rax],al
    7096:	14 db                	adc    al,0xdb
    7098:	30 00                	xor    BYTE PTR [rax],al
    709a:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    709d:	99                   	cdq
    709e:	0b 00                	or     eax,DWORD PTR [rax]
    70a0:	00 a1 3f 00 00 72    	add    BYTE PTR [rcx+0x7200003f],ah
    70a6:	19 00                	sbb    DWORD PTR [rax],eax
    70a8:	00 78 19             	add    BYTE PTR [rax+0x19],bh
    70ab:	00 00                	add    BYTE PTR [rax],al
    70ad:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    70b3:	14 db                	adc    al,0xdb
    70b5:	30 00                	xor    BYTE PTR [rax],al
    70b7:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    70ba:	a2 34 00 00 14 18 00 	movabs ds:0x8f00001814000034,al
    70c1:	00 8f 
    70c3:	19 00                	sbb    DWORD PTR [rax],eax
    70c5:	00 9a 19 00 00 10    	add    BYTE PTR [rdx+0x10000019],bl
    70cb:	92                   	xchg   edx,eax
    70cc:	3f                   	(bad)
    70cd:	00 00                	add    BYTE PTR [rax],al
    70cf:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    70d5:	14 09                	adc    al,0x9
    70d7:	2a 00                	sub    al,BYTE PTR [rax]
    70d9:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    70dc:	76 1f                	jbe    70fd <_end+0x10e5>
    70de:	00 00                	add    BYTE PTR [rax],al
    70e0:	a1 3f 00 00 b1 19 00 	movabs eax,ds:0xbc000019b100003f
    70e7:	00 bc 
    70e9:	19 00                	sbb    DWORD PTR [rax],eax
    70eb:	00 10                	add    BYTE PTR [rax],dl
    70ed:	92                   	xchg   edx,eax
    70ee:	3f                   	(bad)
    70ef:	00 00                	add    BYTE PTR [rax],al
    70f1:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    70f8:	f6 30                	div    BYTE PTR [rax]
    70fa:	00 00                	add    BYTE PTR [rax],al
    70fc:	78 02                	js     7100 <_end+0x10e8>
    70fe:	67 0f 00 00          	sldt   WORD PTR [eax]
    7102:	a1 3f 00 00 d3 19 00 	movabs eax,ds:0xde000019d300003f
    7109:	00 de 
    710b:	19 00                	sbb    DWORD PTR [rax],eax
    710d:	00 10                	add    BYTE PTR [rax],dl
    710f:	92                   	xchg   edx,eax
    7110:	3f                   	(bad)
    7111:	00 00                	add    BYTE PTR [rax],al
    7113:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    711a:	a8 2d                	test   al,0x2d
    711c:	00 00                	add    BYTE PTR [rax],al
    711e:	7f 02                	jg     7122 <_end+0x110a>
    7120:	09 0d 00 00 a1 3f    	or     DWORD PTR [rip+0x3fa10000],ecx        # 3fa17126 <_end+0x3fa1110e>
    7126:	00 00                	add    BYTE PTR [rax],al
    7128:	f5                   	cmc
    7129:	19 00                	sbb    DWORD PTR [rax],eax
    712b:	00 00                	add    BYTE PTR [rax],al
    712d:	1a 00                	sbb    al,BYTE PTR [rax]
    712f:	00 10                	add    BYTE PTR [rax],dl
    7131:	92                   	xchg   edx,eax
    7132:	3f                   	(bad)
    7133:	00 00                	add    BYTE PTR [rax],al
    7135:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    713b:	14 cf                	adc    al,0xcf
    713d:	33 00                	xor    eax,DWORD PTR [rax]
    713f:	00 86 02 95 33 00    	add    BYTE PTR [rsi+0x339502],al
    7145:	00 a1 3f 00 00 17    	add    BYTE PTR [rcx+0x1700003f],ah
    714b:	1a 00                	sbb    al,BYTE PTR [rax]
    714d:	00 22                	add    BYTE PTR [rdx],ah
    714f:	1a 00                	sbb    al,BYTE PTR [rax]
    7151:	00 10                	add    BYTE PTR [rax],dl
    7153:	92                   	xchg   edx,eax
    7154:	3f                   	(bad)
    7155:	00 00                	add    BYTE PTR [rax],al
    7157:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    715d:	53                   	push   rbx
    715e:	b5 23                	mov    ch,0x23
    7160:	00 00                	add    BYTE PTR [rax],al
    7162:	e3 15                	jrcxz  7179 <_end+0x1161>
    7164:	00 00                	add    BYTE PTR [rax],al
    7166:	14 18                	adc    al,0x18
    7168:	00 00                	add    BYTE PTR [rax],al
    716a:	2c 6d                	sub    al,0x6d
    716c:	69 6e 00 a5 02 01 0c 	imul   ebp,DWORD PTR [rsi+0x0],0xc0102a5
    7173:	00 00                	add    BYTE PTR [rax],al
    7175:	14 18                	adc    al,0x18
    7177:	00 00                	add    BYTE PTR [rax],al
    7179:	2c 6d                	sub    al,0x6d
    717b:	61                   	(bad)
    717c:	78 00                	js     717e <_end+0x1166>
    717e:	a9 02 f3 2f 00       	test   eax,0x2ff302
    7183:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    7186:	00 00                	add    BYTE PTR [rax],al
    7188:	40 5f                	rex pop rdi
    718a:	5f                   	pop    rdi
    718b:	72 00                	jb     718d <_end+0x1175>
    718d:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    718e:	02 06                	add    al,BYTE PTR [rsi]
    7190:	b7 18                	mov    bh,0x18
    7192:	00 00                	add    BYTE PTR [rax],al
    7194:	41 c7                	rex.B (bad)
    7196:	2e 00 00             	cs add BYTE PTR [rax],al
    7199:	3d 02 17 45 2b       	cmp    eax,0x2b451702
    719e:	00 00                	add    BYTE PTR [rax],al
    71a0:	76 1a                	jbe    71bc <_end+0x11a4>
    71a2:	00 00                	add    BYTE PTR [rax],al
    71a4:	81 1a 00 00 11 06    	sbb    DWORD PTR [rdx],0x6110000
    71aa:	19 00                	sbb    DWORD PTR [rax],eax
    71ac:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    71b2:	92                   	xchg   edx,eax
    71b3:	3f                   	(bad)
    71b4:	00 00                	add    BYTE PTR [rax],al
    71b6:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    71b9:	00 00                	add    BYTE PTR [rax],al
    71bb:	00 11                	add    BYTE PTR [rcx],dl
    71bd:	81 32 00 00 b2 21    	xor    DWORD PTR [rdx],0x21b20000
    71c3:	00 00                	add    BYTE PTR [rax],al
    71c5:	11 4e 23             	adc    DWORD PTR [rsi+0x23],ecx
    71c8:	00 00                	add    BYTE PTR [rax],al
    71ca:	94                   	xchg   esp,eax
    71cb:	1f                   	(bad)
    71cc:	00 00                	add    BYTE PTR [rax],al
    71ce:	00 13                	add    BYTE PTR [rbx],dl
    71d0:	14 18                	adc    al,0x18
    71d2:	00 00                	add    BYTE PTR [rax],al
    71d4:	69 5f 56 32 00 04 c1 	imul   ebx,DWORD PTR [rdi+0x56],0xc1040032
    71db:	04 01                	add    al,0x1
    71dd:	e3 1a                	jrcxz  71f9 <_end+0x11e1>
    71df:	00 00                	add    BYTE PTR [rax],al
    71e1:	6a b2                	push   0xffffffffffffffb2
    71e3:	10 00                	adc    BYTE PTR [rax],al
    71e5:	00 01                	add    BYTE PTR [rcx],al
    71e7:	04 f3                	add    al,0xf3
    71e9:	04 0c                	add    al,0xc
    71eb:	6b 67 1b 00          	imul   esp,DWORD PTR [rdi+0x1b],0x0
    71ef:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    71f2:	04 1d                	add    al,0x1d
    71f4:	7b 17                	jnp    720d <_end+0x11f5>
    71f6:	00 00                	add    BYTE PTR [rax],al
    71f8:	f1                   	int1
    71f9:	20 00                	and    BYTE PTR [rax],al
    71fb:	00 01                	add    BYTE PTR [rcx],al
    71fd:	01 42 65             	add    DWORD PTR [rdx+0x65],eax
    7200:	0d 00 00 04 f8       	or     eax,0xf8040000
    7205:	04 3a                	add    al,0x3a
    7207:	e3 1a                	jrcxz  7223 <_end+0x120b>
    7209:	00 00                	add    BYTE PTR [rax],al
    720b:	6c                   	ins    BYTE PTR es:[rdi],dx
    720c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    720d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    720e:	77 00                	ja     7210 <_end+0x11f8>
    7210:	04 fd                	add    al,0xfd
    7212:	04 07                	add    al,0x7
    7214:	15 33 00 00 c3       	adc    eax,0xc3000033
    7219:	1a 00                	sbb    al,BYTE PTR [rax]
    721b:	00 00                	add    BYTE PTR [rax],al
    721d:	00 3f                	add    BYTE PTR [rdi],bh
    721f:	44 25 00 00 9a 03    	rex.R and eax,0x39a0000
    7225:	da 1b                	ficomp DWORD PTR [rbx]
    7227:	00 00                	add    BYTE PTR [rax],al
    7229:	6d                   	ins    DWORD PTR es:[rdi],dx
    722a:	65 0d 00 00 04 a5    	gs or  eax,0xa5040000
    7230:	03 0c a3             	add    ecx,DWORD PTR [rbx+riz*4]
    7233:	0f 00 00             	sldt   WORD PTR [rax]
    7236:	01 04 1b             	add    DWORD PTR [rbx+rbx*1],eax
    7239:	00 00                	add    BYTE PTR [rax],al
    723b:	0a 1b                	or     bl,BYTE PTR [rbx]
    723d:	00 00                	add    BYTE PTR [rax],al
    723f:	10 e7                	adc    bh,ah
    7241:	41 00 00             	add    BYTE PTR [r8],al
    7244:	00 41 65             	add    BYTE PTR [rcx+0x65],al
    7247:	0d 00 00 a8 03       	or     eax,0x3a80000
    724c:	15 7f 0c 00 00       	adc    eax,0xc7f
    7251:	1e                   	(bad)
    7252:	1b 00                	sbb    eax,DWORD PTR [rax]
    7254:	00 29                	add    BYTE PTR [rcx],ch
    7256:	1b 00                	sbb    eax,DWORD PTR [rax]
    7258:	00 10                	add    BYTE PTR [rax],dl
    725a:	e7 41                	out    0x41,eax
    725c:	00 00                	add    BYTE PTR [rax],al
    725e:	01 ec                	add    esp,ebp
    7260:	41 00 00             	add    BYTE PTR [r8],al
    7263:	00 6e 5c             	add    BYTE PTR [rsi+0x5c],ch
    7266:	0d 00 00 04 a1       	or     eax,0xa1040000
    726b:	03 14 14             	add    edx,DWORD PTR [rsp+rdx*1]
    726e:	18 00                	sbb    BYTE PTR [rax],al
    7270:	00 01                	add    BYTE PTR [rcx],al
    7272:	13 29                	adc    ebp,DWORD PTR [rcx]
    7274:	1b 00                	sbb    eax,DWORD PTR [rax]
    7276:	00 14 a4             	add    BYTE PTR [rsp+riz*4],dl
    7279:	23 00                	and    eax,DWORD PTR [rax]
    727b:	00 b5 03 b3 2c 00    	add    BYTE PTR [rbp+0x2cb303],dh
    7281:	00 29                	add    BYTE PTR [rcx],ch
    7283:	1b 00                	sbb    eax,DWORD PTR [rax]
    7285:	00 53 1b             	add    BYTE PTR [rbx+0x1b],dl
    7288:	00 00                	add    BYTE PTR [rax],al
    728a:	59                   	pop    rcx
    728b:	1b 00                	sbb    eax,DWORD PTR [rax]
    728d:	00 10                	add    BYTE PTR [rax],dl
    728f:	f1                   	int1
    7290:	41 00 00             	add    BYTE PTR [r8],al
    7293:	00 14 09             	add    BYTE PTR [rcx+rcx*1],dl
    7296:	2a 00                	sub    al,BYTE PTR [rax]
    7298:	00 d2                	add    dl,dl
    729a:	03 fe                	add    edi,esi
    729c:	10 00                	adc    BYTE PTR [rax],al
    729e:	00 fb                	add    bl,bh
    72a0:	41 00 00             	add    BYTE PTR [r8],al
    72a3:	70 1b                	jo     72c0 <_end+0x12a8>
    72a5:	00 00                	add    BYTE PTR [rax],al
    72a7:	7b 1b                	jnp    72c4 <_end+0x12ac>
    72a9:	00 00                	add    BYTE PTR [rax],al
    72ab:	10 e7                	adc    bh,ah
    72ad:	41 00 00             	add    BYTE PTR [r8],al
    72b0:	01 ec                	add    esp,ebp
    72b2:	41 00 00             	add    BYTE PTR [r8],al
    72b5:	00 14 f6             	add    BYTE PTR [rsi+rsi*8],dl
    72b8:	30 00                	xor    BYTE PTR [rax],al
    72ba:	00 d9                	add    cl,bl
    72bc:	03 56 0e             	add    edx,DWORD PTR [rsi+0xe]
    72bf:	00 00                	add    BYTE PTR [rax],al
    72c1:	fb                   	sti
    72c2:	41 00 00             	add    BYTE PTR [r8],al
    72c5:	92                   	xchg   edx,eax
    72c6:	1b 00                	sbb    eax,DWORD PTR [rax]
    72c8:	00 9d 1b 00 00 10    	add    BYTE PTR [rbp+0x1000001b],bl
    72ce:	e7 41                	out    0x41,eax
    72d0:	00 00                	add    BYTE PTR [rax],al
    72d2:	01 ec                	add    esp,ebp
    72d4:	41 00 00             	add    BYTE PTR [r8],al
    72d7:	00 2c 6d 69 6e 00 e1 	add    BYTE PTR [rbp*2-0x1eff9197],ch
    72de:	03 b6 20 00 00 e3    	add    esi,DWORD PTR [rsi-0x1cffffe0]
    72e4:	1a 00                	sbb    al,BYTE PTR [rax]
    72e6:	00 2c 6d 61 78 00 e5 	add    BYTE PTR [rbp*2-0x1aff879f],ch
    72ed:	03 07                	add    eax,DWORD PTR [rdi]
    72ef:	1f                   	(bad)
    72f0:	00 00                	add    BYTE PTR [rax],al
    72f2:	e3 1a                	jrcxz  730e <_end+0x12f6>
    72f4:	00 00                	add    BYTE PTR [rax],al
    72f6:	40 5f                	rex pop rdi
    72f8:	5f                   	pop    rdi
    72f9:	64 00 e9             	fs add cl,ch
    72fc:	03 0b                	add    ecx,DWORD PTR [rbx]
    72fe:	29 1b                	sub    DWORD PTR [rbx],ebx
    7300:	00 00                	add    BYTE PTR [rax],al
    7302:	11 b4 28 00 00 a6 1a 	adc    DWORD PTR [rax+rbp*1+0x1aa60000],esi
    7309:	00 00                	add    BYTE PTR [rax],al
    730b:	11 f6                	adc    esi,esi
    730d:	25 00 00 14 18       	and    eax,0x18140000
    7312:	00 00                	add    BYTE PTR [rax],al
    7314:	00 13                	add    BYTE PTR [rbx],dl
    7316:	e3 1a                	jrcxz  7332 <_end+0x131a>
    7318:	00 00                	add    BYTE PTR [rax],al
    731a:	3f                   	(bad)
    731b:	1d 14 00 00 ff       	sbb    eax,0xff000014
    7320:	01 5f 1e             	add    DWORD PTR [rdi+0x1e],ebx
    7323:	00 00                	add    BYTE PTR [rax],al
    7325:	04 15                	add    al,0x15
    7327:	0e                   	(bad)
    7328:	00 00                	add    BYTE PTR [rax],al
    732a:	04 0b                	add    al,0xb
    732c:	02 02                	add    al,BYTE PTR [rdx]
    732e:	64 2a 00             	sub    al,BYTE PTR fs:[rax]
    7331:	00 a5 2d 00 00 0a    	add    BYTE PTR [rbp+0xa00002d],ah
    7337:	1c 00                	sbb    al,0x0
    7339:	00 01                	add    BYTE PTR [rcx],al
    733b:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    733c:	2d 00 00 01 a5       	sub    eax,0xa5010000
    7341:	2d 00 00 00 2b       	sub    eax,0x2b000000
    7346:	5c                   	pop    rsp
    7347:	0d 00 00 34 02       	or     eax,0x2340000
    734c:	0c 89                	or     al,0x89
    734e:	1e                   	(bad)
    734f:	00 00                	add    BYTE PTR [rax],al
    7351:	1e                   	(bad)
    7352:	1c 00                	sbb    al,0x0
    7354:	00 24 1c             	add    BYTE PTR [rsp+rbx*1],ah
    7357:	00 00                	add    BYTE PTR [rax],al
    7359:	10 b5 3f 00 00 00    	adc    BYTE PTR [rbp+0x3f],dh
    735f:	2b 5c 0d 00          	sub    ebx,DWORD PTR [rbp+rcx*1+0x0]
    7363:	00 36                	add    BYTE PTR [rsi],dh
    7365:	02 02                	add    al,BYTE PTR [rdx]
    7367:	c2 32 00             	ret    0x32
    736a:	00 38                	add    BYTE PTR [rax],bh
    736c:	1c 00                	sbb    al,0x0
    736e:	00 43 1c             	add    BYTE PTR [rbx+0x1c],al
    7371:	00 00                	add    BYTE PTR [rax],al
    7373:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    7379:	bf 3f 00 00 00       	mov    edi,0x3f
    737e:	2b 70 0d             	sub    esi,DWORD PTR [rax+0xd]
    7381:	00 00                	add    BYTE PTR [rax],al
    7383:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    7386:	42 33 00             	rex.X xor eax,DWORD PTR [rax]
    7389:	00 57 1c             	add    BYTE PTR [rdi+0x1c],dl
    738c:	00 00                	add    BYTE PTR [rax],al
    738e:	62 1c 00             	(bad)
    7391:	00 10                	add    BYTE PTR [rax],dl
    7393:	b5 3f                	mov    ch,0x3f
    7395:	00 00                	add    BYTE PTR [rax],al
    7397:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    739d:	51                   	push   rcx
    739e:	ee                   	out    dx,al
    739f:	14 00                	adc    al,0x0
    73a1:	00 40 22             	add    BYTE PTR [rax+0x22],al
    73a4:	00 00                	add    BYTE PTR [rax],al
    73a6:	c4                   	(bad)
    73a7:	3f                   	(bad)
    73a8:	00 00                	add    BYTE PTR [rax],al
    73aa:	77 1c                	ja     73c8 <_end+0x13b0>
    73ac:	00 00                	add    BYTE PTR [rax],al
    73ae:	82                   	(bad)
    73af:	1c 00                	sbb    al,0x0
    73b1:	00 10                	add    BYTE PTR [rax],dl
    73b3:	b5 3f                	mov    ch,0x3f
    73b5:	00 00                	add    BYTE PTR [rax],al
    73b7:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    73bd:	52                   	push   rdx
    73be:	72 65                	jb     7425 <_end+0x140d>
    73c0:	70 00                	jo     73c2 <_end+0x13aa>
    73c2:	b2 21                	mov    dl,0x21
    73c4:	00 00                	add    BYTE PTR [rax],al
    73c6:	13 82 1c 00 00 14    	adc    eax,DWORD PTR [rdx+0x1400001c]
    73cc:	f1                   	int1
    73cd:	24 00                	and    al,0x0
    73cf:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    73d2:	ec                   	in     al,dx
    73d3:	16                   	(bad)
    73d4:	00 00                	add    BYTE PTR [rax],al
    73d6:	82                   	(bad)
    73d7:	1c 00                	sbb    al,0x0
    73d9:	00 a7 1c 00 00 ad    	add    BYTE PTR [rdi-0x52ffffe4],ah
    73df:	1c 00                	sbb    al,0x0
    73e1:	00 10                	add    BYTE PTR [rax],dl
    73e3:	c9                   	leave
    73e4:	3f                   	(bad)
    73e5:	00 00                	add    BYTE PTR [rax],al
    73e7:	00 14 53             	add    BYTE PTR [rbx+rdx*2],dl
    73ea:	14 00                	adc    al,0x0
    73ec:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    73ef:	9b                   	fwait
    73f0:	13 00                	adc    eax,DWORD PTR [rax]
    73f2:	00 df                	add    bh,bl
    73f4:	1b 00                	sbb    eax,DWORD PTR [rax]
    73f6:	00 c4                	add    ah,al
    73f8:	1c 00                	sbb    al,0x0
    73fa:	00 ca                	add    dl,cl
    73fc:	1c 00                	sbb    al,0x0
    73fe:	00 10                	add    BYTE PTR [rax],dl
    7400:	c9                   	leave
    7401:	3f                   	(bad)
    7402:	00 00                	add    BYTE PTR [rax],al
    7404:	00 14 d8             	add    BYTE PTR [rax+rbx*8],dl
    7407:	18 00                	sbb    BYTE PTR [rax],al
    7409:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    740c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    740d:	2a 00                	sub    al,BYTE PTR [rax]
    740f:	00 df                	add    bh,bl
    7411:	1b 00                	sbb    eax,DWORD PTR [rax]
    7413:	00 e1                	add    cl,ah
    7415:	1c 00                	sbb    al,0x0
    7417:	00 e7                	add    bh,ah
    7419:	1c 00                	sbb    al,0x0
    741b:	00 10                	add    BYTE PTR [rax],dl
    741d:	c9                   	leave
    741e:	3f                   	(bad)
    741f:	00 00                	add    BYTE PTR [rax],al
    7421:	00 14 79             	add    BYTE PTR [rcx+rdi*2],dl
    7424:	2e 00 00             	cs add BYTE PTR [rax],al
    7427:	5b                   	pop    rbx
    7428:	02 4a 1e             	add    cl,BYTE PTR [rdx+0x1e]
    742b:	00 00                	add    BYTE PTR [rax],al
    742d:	c4                   	(bad)
    742e:	3f                   	(bad)
    742f:	00 00                	add    BYTE PTR [rax],al
    7431:	fe                   	(bad)
    7432:	1c 00                	sbb    al,0x0
    7434:	00 04 1d 00 00 10 b5 	add    BYTE PTR [rbx*1-0x4af00000],al
    743b:	3f                   	(bad)
    743c:	00 00                	add    BYTE PTR [rax],al
    743e:	00 14 79             	add    BYTE PTR [rcx+rdi*2],dl
    7441:	2e 00 00             	cs add BYTE PTR [rax],al
    7444:	62 02 97 16 00       	(bad)
    7449:	00 df                	add    bh,bl
    744b:	1b 00                	sbb    eax,DWORD PTR [rax]
    744d:	00 1b                	add    BYTE PTR [rbx],bl
    744f:	1d 00 00 26 1d       	sbb    eax,0x1d260000
    7454:	00 00                	add    BYTE PTR [rax],al
    7456:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    745c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    745d:	21 00                	and    DWORD PTR [rax],eax
    745f:	00 00                	add    BYTE PTR [rax],al
    7461:	14 db                	adc    al,0xdb
    7463:	30 00                	xor    BYTE PTR [rax],al
    7465:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    7468:	95                   	xchg   ebp,eax
    7469:	18 00                	sbb    BYTE PTR [rax],al
    746b:	00 c4                	add    ah,al
    746d:	3f                   	(bad)
    746e:	00 00                	add    BYTE PTR [rax],al
    7470:	3d 1d 00 00 43       	cmp    eax,0x4300001d
    7475:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    747a:	3f                   	(bad)
    747b:	00 00                	add    BYTE PTR [rax],al
    747d:	00 14 db             	add    BYTE PTR [rbx+rbx*8],dl
    7480:	30 00                	xor    BYTE PTR [rax],al
    7482:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    7485:	c6                   	(bad)
    7486:	12 00                	adc    al,BYTE PTR [rax]
    7488:	00 df                	add    bh,bl
    748a:	1b 00                	sbb    eax,DWORD PTR [rax]
    748c:	00 5a 1d             	add    BYTE PTR [rdx+0x1d],bl
    748f:	00 00                	add    BYTE PTR [rax],al
    7491:	65 1d 00 00 10 b5    	gs sbb eax,0xb5100000
    7497:	3f                   	(bad)
    7498:	00 00                	add    BYTE PTR [rax],al
    749a:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    74a0:	14 09                	adc    al,0x9
    74a2:	2a 00                	sub    al,BYTE PTR [rax]
    74a4:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    74a7:	ac                   	lods   al,BYTE PTR ds:[rsi]
    74a8:	0d 00 00 c4 3f       	or     eax,0x3fc40000
    74ad:	00 00                	add    BYTE PTR [rax],al
    74af:	7c 1d                	jl     74ce <_end+0x14b6>
    74b1:	00 00                	add    BYTE PTR [rax],al
    74b3:	87 1d 00 00 10 b5    	xchg   DWORD PTR [rip+0xffffffffb5100000],ebx        # ffffffffb51074b9 <_end+0xffffffffb51014a1>
    74b9:	3f                   	(bad)
    74ba:	00 00                	add    BYTE PTR [rax],al
    74bc:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    74c2:	14 f6                	adc    al,0xf6
    74c4:	30 00                	xor    BYTE PTR [rax],al
    74c6:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    74c9:	06                   	(bad)
    74ca:	34 00                	xor    al,0x0
    74cc:	00 c4                	add    ah,al
    74ce:	3f                   	(bad)
    74cf:	00 00                	add    BYTE PTR [rax],al
    74d1:	9e                   	sahf
    74d2:	1d 00 00 a9 1d       	sbb    eax,0x1da90000
    74d7:	00 00                	add    BYTE PTR [rax],al
    74d9:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    74df:	bf 3f 00 00 00       	mov    edi,0x3f
    74e4:	14 a8                	adc    al,0xa8
    74e6:	2d 00 00 7f 02       	sub    eax,0x27f0000
    74eb:	7f 20                	jg     750d <_end+0x14f5>
    74ed:	00 00                	add    BYTE PTR [rax],al
    74ef:	c4                   	(bad)
    74f0:	3f                   	(bad)
    74f1:	00 00                	add    BYTE PTR [rax],al
    74f3:	c0 1d 00 00 cb 1d 00 	rcr    BYTE PTR [rip+0x1dcb0000],0x0        # 1dcb74fa <_end+0x1dcb14e2>
    74fa:	00 10                	add    BYTE PTR [rax],dl
    74fc:	b5 3f                	mov    ch,0x3f
    74fe:	00 00                	add    BYTE PTR [rax],al
    7500:	01 d3                	add    ebx,edx
    7502:	3f                   	(bad)
    7503:	00 00                	add    BYTE PTR [rax],al
    7505:	00 14 cf             	add    BYTE PTR [rdi+rcx*8],dl
    7508:	33 00                	xor    eax,DWORD PTR [rax]
    750a:	00 86 02 d2 29 00    	add    BYTE PTR [rsi+0x29d202],al
    7510:	00 c4                	add    ah,al
    7512:	3f                   	(bad)
    7513:	00 00                	add    BYTE PTR [rax],al
    7515:	e2 1d                	loop   7534 <_end+0x151c>
    7517:	00 00                	add    BYTE PTR [rax],al
    7519:	ed                   	in     eax,dx
    751a:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    751f:	3f                   	(bad)
    7520:	00 00                	add    BYTE PTR [rax],al
    7522:	01 d3                	add    ebx,edx
    7524:	3f                   	(bad)
    7525:	00 00                	add    BYTE PTR [rax],al
    7527:	00 53 b5             	add    BYTE PTR [rbx-0x4b],dl
    752a:	23 00                	and    eax,DWORD PTR [rax]
    752c:	00 47 20             	add    BYTE PTR [rdi+0x20],al
    752f:	00 00                	add    BYTE PTR [rax],al
    7531:	df 1b                	fistp  WORD PTR [rbx]
    7533:	00 00                	add    BYTE PTR [rax],al
    7535:	2c 6d                	sub    al,0x6d
    7537:	69 6e 00 a5 02 b3 27 	imul   ebp,DWORD PTR [rsi+0x0],0x27b302a5
    753e:	00 00                	add    BYTE PTR [rax],al
    7540:	df 1b                	fistp  WORD PTR [rbx]
    7542:	00 00                	add    BYTE PTR [rax],al
    7544:	2c 6d                	sub    al,0x6d
    7546:	61                   	(bad)
    7547:	78 00                	js     7549 <_end+0x1531>
    7549:	a9 02 f4 21 00       	test   eax,0x21f402
    754e:	00 df                	add    bh,bl
    7550:	1b 00                	sbb    eax,DWORD PTR [rax]
    7552:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
    7555:	5f                   	pop    rdi
    7556:	72 00                	jb     7558 <_end+0x1540>
    7558:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7559:	02 06                	add    al,BYTE PTR [rsi]
    755b:	82                   	(bad)
    755c:	1c 00                	sbb    al,0x0
    755e:	00 41 c7             	add    BYTE PTR [rcx-0x39],al
    7561:	2e 00 00             	cs add BYTE PTR [rax],al
    7564:	3d 02 17 79 29       	cmp    eax,0x29791702
    7569:	00 00                	add    BYTE PTR [rax],al
    756b:	41 1e                	rex.B (bad)
    756d:	00 00                	add    BYTE PTR [rax],al
    756f:	4c 1e                	rex.WR (bad)
    7571:	00 00                	add    BYTE PTR [rax],al
    7573:	11 06                	adc    DWORD PTR [rsi],eax
    7575:	19 00                	sbb    DWORD PTR [rax],eax
    7577:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    757d:	b5 3f                	mov    ch,0x3f
    757f:	00 00                	add    BYTE PTR [rax],al
    7581:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    7584:	00 00                	add    BYTE PTR [rax],al
    7586:	00 11                	add    BYTE PTR [rcx],dl
    7588:	81 32 00 00 b2 21    	xor    DWORD PTR [rdx],0x21b20000
    758e:	00 00                	add    BYTE PTR [rax],al
    7590:	11 4e 23             	adc    DWORD PTR [rsi+0x23],ecx
    7593:	00 00                	add    BYTE PTR [rax],al
    7595:	3d 20 00 00 00       	cmp    eax,0x20
    759a:	13 df                	adc    ebx,edi
    759c:	1b 00                	sbb    eax,DWORD PTR [rax]
    759e:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    75a1:	9e                   	sahf
    75a2:	05 1f 89 20 00       	add    eax,0x20891f
    75a7:	00 1b                	add    BYTE PTR [rbx],bl
    75a9:	66 31 00             	xor    WORD PTR [rax],ax
    75ac:	00 01                	add    BYTE PTR [rcx],al
    75ae:	04 cc                	add    al,0xcc
    75b0:	0e                   	(bad)
    75b1:	d6                   	(bad)
    75b2:	1e                   	(bad)
    75b3:	00 00                	add    BYTE PTR [rax],al
    75b5:	0f fe 28             	paddd  mm5,QWORD PTR [rax]
    75b8:	00 00                	add    BYTE PTR [rax],al
    75ba:	04 d0                	add    al,0xd0
    75bc:	04 1c                	add    al,0x1c
    75be:	28 00                	sub    BYTE PTR [rax],al
    75c0:	00 df                	add    bh,bl
    75c2:	1b 00                	sbb    eax,DWORD PTR [rax]
    75c4:	00 a6 1e 00 00 11    	add    BYTE PTR [rsi+0x1100001e],ah
    75ca:	81 32 00 00 b2 21    	xor    DWORD PTR [rdx],0x21b20000
    75d0:	00 00                	add    BYTE PTR [rax],al
    75d2:	11 4e 23             	adc    DWORD PTR [rsi+0x23],ecx
    75d5:	00 00                	add    BYTE PTR [rax],al
    75d7:	94                   	xchg   esp,eax
    75d8:	1f                   	(bad)
    75d9:	00 00                	add    BYTE PTR [rax],al
    75db:	01 9c 3f 00 00 00 11 	add    DWORD PTR [rdi+rdi*1+0x11000000],ebx
    75e2:	39 22                	cmp    DWORD PTR [rdx],esp
    75e4:	00 00                	add    BYTE PTR [rax],al
    75e6:	df 1b                	fistp  WORD PTR [rbx]
    75e8:	00 00                	add    BYTE PTR [rax],al
    75ea:	43 5f                	rex.XB pop r15
    75ec:	43                   	rex.XB
    75ed:	46 00 fd             	rex.RX add bpl,r15b
    75f0:	1f                   	(bad)
    75f1:	00 00                	add    BYTE PTR [rax],al
    75f3:	43 5f                	rex.XB pop r15
    75f5:	43 52                	rex.XB push r10
    75f7:	00 b2 21 00 00 2f    	add    BYTE PTR [rdx+0x2f000021],dh
    75fd:	32 2d 00 00 ea 20    	xor    ch,BYTE PTR [rip+0x20ea0000]        # 20ea7603 <_end+0x20ea15eb>
    7603:	00 00                	add    BYTE PTR [rax],al
    7605:	01 2f                	add    DWORD PTR [rdi],ebp
    7607:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7608:	24 00                	and    al,0x0
    760a:	00 ea                	add    dl,ch
    760c:	20 00                	and    BYTE PTR [rax],al
    760e:	00 00                	add    BYTE PTR [rax],al
    7610:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
    7613:	25 00 00 04 c6       	and    eax,0xc6040000
    7618:	02 07                	add    al,BYTE PTR [rdi]
    761a:	7d 21                	jge    763d <_end+0x1625>
    761c:	00 00                	add    BYTE PTR [rax],al
    761e:	e0 1f                	loopne 763f <_end+0x1627>
    7620:	00 00                	add    BYTE PTR [rax],al
    7622:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    7624:	00 00                	add    BYTE PTR [rax],al
    7626:	11 00                	adc    DWORD PTR [rax],eax
    7628:	19 00                	sbb    DWORD PTR [rax],eax
    762a:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    7630:	95                   	xchg   ebp,eax
    7631:	22 00                	and    al,BYTE PTR [rax]
    7633:	00 94 1f 00 00 11 06 	add    BYTE PTR [rdi+rbx*1+0x6110000],dl
    763a:	19 00                	sbb    DWORD PTR [rax],eax
    763c:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    7642:	b8 2f 00 00 94       	mov    eax,0x9400002f
    7647:	1f                   	(bad)
    7648:	00 00                	add    BYTE PTR [rax],al
    764a:	01 9c 3f 00 00 01 9c 	add    DWORD PTR [rdi+rdi*1-0x63ff0000],ebx
    7651:	3f                   	(bad)
    7652:	00 00                	add    BYTE PTR [rax],al
    7654:	00 08                	add    BYTE PTR [rax],cl
    7656:	4d 0d 00 00 04 f0    	rex.WRB or rax,0xfffffffff0040000
    765c:	0d a8 20 00 00       	or     eax,0x20a8
    7661:	04 e0                	add    al,0xe0
    7663:	26 00 00             	es add BYTE PTR [rax],al
    7666:	04 11                	add    al,0x11
    7668:	01 07                	add    DWORD PTR [rdi],eax
    766a:	f9                   	stc
    766b:	19 00                	sbb    DWORD PTR [rax],eax
    766d:	00 1a                	add    BYTE PTR [rdx],bl
    766f:	1f                   	(bad)
    7670:	00 00                	add    BYTE PTR [rax],al
    7672:	5c                   	pop    rsp
    7673:	1f                   	(bad)
    7674:	00 00                	add    BYTE PTR [rax],al
    7676:	11 39                	adc    DWORD PTR [rcx],edi
    7678:	22 00                	and    al,BYTE PTR [rax]
    767a:	00 df                	add    bh,bl
    767c:	1b 00                	sbb    eax,DWORD PTR [rax]
    767e:	00 11                	add    BYTE PTR [rcx],dl
    7680:	81 32 00 00 b2 21    	xor    DWORD PTR [rdx],0x21b20000
    7686:	00 00                	add    BYTE PTR [rax],al
    7688:	11 4e 23             	adc    DWORD PTR [rsi+0x23],ecx
    768b:	00 00                	add    BYTE PTR [rax],al
    768d:	94                   	xchg   esp,eax
    768e:	1f                   	(bad)
    768f:	00 00                	add    BYTE PTR [rax],al
    7691:	01 9c 3f 00 00 00 70 	add    DWORD PTR [rdi+rdi*1+0x70000000],ebx
    7698:	e0 1b                	loopne 76b5 <_end+0x169d>
    769a:	00 00                	add    BYTE PTR [rax],al
    769c:	04 75                	add    al,0x75
    769e:	04 07                	add    al,0x7
    76a0:	10 2c 00             	adc    BYTE PTR [rax+rax*1],ch
    76a3:	00 e0                	add    al,ah
    76a5:	1f                   	(bad)
    76a6:	00 00                	add    BYTE PTR [rax],al
    76a8:	11 b4 28 00 00 a6 1a 	adc    DWORD PTR [rax+rbp*1+0x1aa60000],esi
    76af:	00 00                	add    BYTE PTR [rax],al
    76b1:	11 c7                	adc    edi,eax
    76b3:	22 00                	and    al,BYTE PTR [rax]
    76b5:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    76b8:	00 00                	add    BYTE PTR [rax],al
    76ba:	11 cd                	adc    ebp,ecx
    76bc:	22 00                	and    al,BYTE PTR [rax]
    76be:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    76c1:	00 00                	add    BYTE PTR [rax],al
    76c3:	01 84 4e 00 00 01 84 	add    DWORD PTR [rsi+rcx*2-0x7bff0000],eax
    76ca:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    76cd:	00 00                	add    BYTE PTR [rax],al
    76cf:	44 c6                	rex.R (bad)
    76d1:	1f                   	(bad)
    76d2:	00 00                	add    BYTE PTR [rax],al
    76d4:	d3 1f                	rcr    DWORD PTR [rdi],cl
    76d6:	00 00                	add    BYTE PTR [rax],al
    76d8:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    76da:	75 6d                	jne    7749 <_end+0x1731>
    76dc:	00 ee                	add    dh,ch
    76de:	1f                   	(bad)
    76df:	00 00                	add    BYTE PTR [rax],al
    76e1:	b1 2d                	mov    cl,0x2d
    76e3:	00 00                	add    BYTE PTR [rax],al
    76e5:	54                   	push   rsp
    76e6:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    76e9:	00 47 15             	add    BYTE PTR [rdi+0x15],al
    76ec:	00 00                	add    BYTE PTR [rax],al
    76ee:	b1 2d                	mov    cl,0x2d
    76f0:	00 00                	add    BYTE PTR [rax],al
    76f2:	00 ca                	add    dl,cl
    76f4:	9a                   	(bad)
    76f5:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    76f7:	91                   	xchg   ecx,eax
    76f8:	26 00 00             	es add BYTE PTR [rax],al
    76fb:	b2 21                	mov    dl,0x21
    76fd:	00 00                	add    BYTE PTR [rax],al
    76ff:	01 55 ae             	add    DWORD PTR [rbp-0x52],edx
    7702:	11 00                	adc    DWORD PTR [rax],eax
    7704:	00 b2 21 00 00 00    	add    BYTE PTR [rdx+0x21],dh
    770a:	ca 9a 3b             	retf   0x3b9a
    770d:	00 1b                	add    BYTE PTR [rbx],bl
    770f:	da 23                	fisub  DWORD PTR [rbx]
    7711:	00 00                	add    BYTE PTR [rax],al
    7713:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    7716:	0c fd                	or     al,0xfd
    7718:	1f                   	(bad)
    7719:	00 00                	add    BYTE PTR [rax],al
    771b:	08 4b 13             	or     BYTE PTR [rbx+0x13],cl
    771e:	00 00                	add    BYTE PTR [rax],al
    7720:	04 73                	add    al,0x73
    7722:	0d 14 18 00 00       	or     eax,0x1814
    7727:	71 5f                	jno    7788 <_end+0x1770>
    7729:	54                   	push   rsp
    772a:	70 00                	jo     772c <_end+0x1714>
    772c:	56                   	push   rsi
    772d:	14 18                	adc    al,0x18
    772f:	00 00                	add    BYTE PTR [rax],al
    7731:	56                   	push   rsi
    7732:	14 18                	adc    al,0x18
    7734:	00 00                	add    BYTE PTR [rax],al
    7736:	00 00                	add    BYTE PTR [rax],al
    7738:	44 55                	rex.R push rbp
    773a:	2a 00                	sub    al,BYTE PTR [rax]
    773c:	00 3d 20 00 00 45    	add    BYTE PTR [rip+0x45000020],bh        # 45007762 <_end+0x4500174a>
    7742:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7743:	75 6d                	jne    77b2 <_end+0x179a>
    7745:	00 5b 1d             	add    BYTE PTR [rbx+0x1d],bl
    7748:	00 00                	add    BYTE PTR [rax],al
    774a:	b1 2d                	mov    cl,0x2d
    774c:	00 00                	add    BYTE PTR [rax],al
    774e:	72 64                	jb     77b4 <_end+0x179c>
    7750:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7752:	00 10                	add    BYTE PTR [rax],dl
    7754:	14 01                	adc    al,0x1
    7756:	21 7d 13             	and    DWORD PTR [rbp+0x13],edi
    7759:	00 00                	add    BYTE PTR [rax],al
    775b:	b1 2d                	mov    cl,0x2d
    775d:	00 00                	add    BYTE PTR [rax],al
    775f:	e8 03 01 2f 91       	call   ffffffff912f7867 <_end+0xffffffff912f184f>
    7764:	26 00 00             	es add BYTE PTR [rax],al
    7767:	b2 21                	mov    dl,0x21
    7769:	00 00                	add    BYTE PTR [rax],al
    776b:	01 73 ae             	add    DWORD PTR [rbx-0x52],esi
    776e:	11 00                	adc    DWORD PTR [rax],eax
    7770:	00 b2 21 00 00 e8    	add    BYTE PTR [rdx-0x17ffffdf],dh
    7776:	03 00                	add    eax,DWORD PTR [rax]
    7778:	44 f7 1c 00          	rex.R neg DWORD PTR [rax+rax*1]
    777c:	00 7c 20 00          	add    BYTE PTR [rax+riz*1+0x0],bh
    7780:	00 45 6e             	add    BYTE PTR [rbp+0x6e],al
    7783:	75 6d                	jne    77f2 <_end+0x17da>
    7785:	00 ab 26 00 00 b1    	add    BYTE PTR [rbx-0x4effffda],ch
    778b:	2d 00 00 54 64       	sub    eax,0x64540000
    7790:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7792:	00 20                	add    BYTE PTR [rax],ah
    7794:	1e                   	(bad)
    7795:	00 00                	add    BYTE PTR [rax],al
    7797:	b1 2d                	mov    cl,0x2d
    7799:	00 00                	add    BYTE PTR [rax],al
    779b:	40                   	rex
    779c:	42 0f 00 2f          	rex.X verw WORD PTR [rdi]
    77a0:	91                   	xchg   ecx,eax
    77a1:	26 00 00             	es add BYTE PTR [rax],al
    77a4:	b2 21                	mov    dl,0x21
    77a6:	00 00                	add    BYTE PTR [rax],al
    77a8:	01 55 ae             	add    DWORD PTR [rbp-0x52],edx
    77ab:	11 00                	adc    DWORD PTR [rax],eax
    77ad:	00 b2 21 00 00 40    	add    BYTE PTR [rdx+0x40000021],dh
    77b3:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    77b7:	74 ea                	je     77a3 <_end+0x178b>
    77b9:	0c 00                	or     al,0x0
    77bb:	00 3d 58 03 14 93    	add    BYTE PTR [rip+0xffffffff93140358],bh        # ffffffff93147b19 <_end+0xffffffff93141b01>
    77c1:	20 00                	and    BYTE PTR [rax],al
    77c3:	00 50 e3             	add    BYTE PTR [rax-0x1d],dl
    77c6:	0c 00                	or     al,0x0
    77c8:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    77cb:	05 14 00 3d d4       	add    eax,0xd43d0014
    77d0:	25 00 00 04 34       	and    eax,0x34040000
    77d5:	0d 1b 0c 12 00       	or     eax,0x120c1b
    77da:	00 01                	add    BYTE PTR [rcx],al
    77dc:	05 6f 0c be 20       	add    eax,0x20be0c6f
    77e1:	00 00                	add    BYTE PTR [rax],al
    77e3:	08 4b 13             	or     BYTE PTR [rbx+0x13],cl
    77e6:	00 00                	add    BYTE PTR [rax],al
    77e8:	05 70 13 df 1b       	add    eax,0x1bdf1370
    77ed:	00 00                	add    BYTE PTR [rax],al
    77ef:	43 5f                	rex.XB pop r15
    77f1:	54                   	push   rsp
    77f2:	70 00                	jo     77f4 <_end+0x17dc>
    77f4:	df 1b                	fistp  WORD PTR [rbx]
    77f6:	00 00                	add    BYTE PTR [rax],al
    77f8:	00 34 c0             	add    BYTE PTR [rax+rax*8],dh
    77fb:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7800:	00 00                	add    BYTE PTR [rax],al
    7802:	34 c0                	xor    al,0xc0
    7804:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7809:	00 00                	add    BYTE PTR [rax],al
    780b:	34 c0                	xor    al,0xc0
    780d:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7812:	00 00                	add    BYTE PTR [rax],al
    7814:	34 c0                	xor    al,0xc0
    7816:	2d 00 00 f1 20       	sub    eax,0x20f10000
    781b:	00 00                	add    BYTE PTR [rax],al
    781d:	00 12                	add    BYTE PTR [rdx],dl
    781f:	04 07                	add    al,0x7
    7821:	f8                   	clc
    7822:	00 00                	add    BYTE PTR [rax],al
    7824:	00 12                	add    BYTE PTR [rdx],dl
    7826:	01 02                	add    DWORD PTR [rdx],eax
    7828:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
    782b:	00 13                	add    BYTE PTR [rbx],dl
    782d:	ea                   	(bad)
    782e:	20 00                	and    BYTE PTR [rax],al
    7830:	00 75 12             	add    BYTE PTR [rbp+0x12],dh
    7833:	02 00                	add    al,BYTE PTR [rax]
    7835:	00 11                	add    BYTE PTR [rcx],dl
    7837:	57                   	push   rdi
    7838:	01 0b                	add    DWORD PTR [rbx],ecx
    783a:	7c 21                	jl     785d <_end+0x1845>
    783c:	00 00                	add    BYTE PTR [rax],al
    783e:	3d 64 32 00 00       	cmp    eax,0x3264
    7843:	12 25 0b 02 08 cc    	adc    ah,BYTE PTR [rip+0xffffffffcc08020b]        # ffffffffcc087a54 <_end+0xffffffffcc081a3c>
    7849:	0b c7                	or     eax,edi
    784b:	23 00                	and    eax,DWORD PTR [rax]
    784d:	00 02                	add    BYTE PTR [rdx],al
    784f:	08 dc                	or     ah,bl
    7851:	0b 2b                	or     ebp,DWORD PTR [rbx]
    7853:	30 00                	xor    BYTE PTR [rax],al
    7855:	00 02                	add    BYTE PTR [rdx],al
    7857:	08 e7                	or     bh,ah
    7859:	0b 47 30             	or     eax,DWORD PTR [rdi+0x30]
    785c:	00 00                	add    BYTE PTR [rax],al
    785e:	02 08                	add    cl,BYTE PTR [rax]
    7860:	e8 0b 5e 30 00       	call   30d670 <_end+0x307658>
    7865:	00 02                	add    BYTE PTR [rdx],al
    7867:	08 e9                	or     cl,ch
    7869:	0b 82 30 00 00 02    	or     eax,DWORD PTR [rdx+0x2000030]
    786f:	08 eb                	or     bl,ch
    7871:	0b a6 30 00 00 02    	or     esp,DWORD PTR [rsi+0x2000030]
    7877:	08 ec                	or     ah,ch
    7879:	0b c1                	or     eax,ecx
    787b:	30 00                	xor    BYTE PTR [rax],al
    787d:	00 1a                	add    BYTE PTR [rdx],bl
    787f:	64 69 76 00 08 d9 b8 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d908
    7886:	01 
    7887:	00 00                	add    BYTE PTR [rax],al
    7889:	c7                   	(bad)
    788a:	23 00                	and    eax,DWORD PTR [rax]
    788c:	00 61 21             	add    BYTE PTR [rcx+0x21],ah
    788f:	00 00                	add    BYTE PTR [rax],al
    7891:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    7897:	be 21 00 00 00       	mov    esi,0x21
    789c:	02 09                	add    cl,BYTE PTR [rcx]
    789e:	fb                   	sti
    789f:	0b 49 3a             	or     ecx,DWORD PTR [rcx+0x3a]
    78a2:	00 00                	add    BYTE PTR [rax],al
    78a4:	18 09                	sbb    BYTE PTR [rcx],cl
    78a6:	04 01                	add    al,0x1
    78a8:	0b 65 3a             	or     esp,DWORD PTR [rbp+0x3a]
    78ab:	00 00                	add    BYTE PTR [rax],al
    78ad:	18 09                	sbb    BYTE PTR [rcx],cl
    78af:	05 01 0b 8a 3a       	add    eax,0x3a8a0b01
    78b4:	00 00                	add    BYTE PTR [rax],al
    78b6:	00 12                	add    BYTE PTR [rdx],dl
    78b8:	01 08                	add    DWORD PTR [rax],ecx
    78ba:	ff 01                	inc    DWORD PTR [rcx]
    78bc:	00 00                	add    BYTE PTR [rax],al
    78be:	12 02                	adc    al,BYTE PTR [rdx]
    78c0:	07                   	(bad)
    78c1:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    78c4:	00 12                	add    BYTE PTR [rdx],dl
    78c6:	08 07                	or     BYTE PTR [rdi],al
    78c8:	f3 00 00             	repz add BYTE PTR [rax],al
    78cb:	00 12                	add    BYTE PTR [rdx],dl
    78cd:	08 07                	or     BYTE PTR [rdi],al
    78cf:	ee                   	out    dx,al
    78d0:	00 00                	add    BYTE PTR [rax],al
    78d2:	00 12                	add    BYTE PTR [rdx],dl
    78d4:	01 06                	add    DWORD PTR [rsi],eax
    78d6:	01 02                	add    DWORD PTR [rdx],eax
    78d8:	00 00                	add    BYTE PTR [rax],al
    78da:	12 02                	adc    al,BYTE PTR [rdx]
    78dc:	05 5b 00 00 00       	add    eax,0x5b
    78e1:	76 04                	jbe    78e7 <_end+0x18cf>
    78e3:	05 69 6e 74 00       	add    eax,0x746e69
    78e8:	13 a6 21 00 00 12    	adc    esp,DWORD PTR [rsi+0x12000021]
    78ee:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 79d9 <_end+0x19c1>
    78f4:	13 b2 21 00 00 12    	adc    esi,DWORD PTR [rdx+0x12000021]
    78fa:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 79e0 <_end+0x19c8>
    7900:	12 10                	adc    dl,BYTE PTR [rax]
    7902:	04 f3                	add    al,0xf3
    7904:	01 00                	add    DWORD PTR [rax],eax
    7906:	00 08                	add    BYTE PTR [rax],cl
    7908:	a2 26 00 00 13 25 15 	movabs ds:0x2198152513000026,al
    790f:	98 21 
    7911:	00 00                	add    BYTE PTR [rax],al
    7913:	08 bf 11 00 00 13    	or     BYTE PTR [rdi+0x13000011],bh
    7919:	26 17                	es (bad)
    791b:	7c 21                	jl     793e <_end+0x1926>
    791d:	00 00                	add    BYTE PTR [rax],al
    791f:	08 27                	or     BYTE PTR [rdi],ah
    7921:	2a 00                	sub    al,BYTE PTR [rax]
    7923:	00 13                	add    BYTE PTR [rbx],dl
    7925:	27                   	(bad)
    7926:	1a 9f 21 00 00 08    	sbb    bl,BYTE PTR [rdi+0x8000021]
    792c:	54                   	push   rsp
    792d:	17                   	(bad)
    792e:	00 00                	add    BYTE PTR [rax],al
    7930:	13 28                	adc    ebp,DWORD PTR [rax]
    7932:	1c 83                	sbb    al,0x83
    7934:	21 00                	and    DWORD PTR [rax],eax
    7936:	00 08                	add    BYTE PTR [rax],cl
    7938:	e9 08 00 00 13       	jmp    13007945 <_end+0x1300192d>
    793d:	29 14 a6             	sub    DWORD PTR [rsi+riz*4],edx
    7940:	21 00                	and    DWORD PTR [rax],eax
    7942:	00 08                	add    BYTE PTR [rax],cl
    7944:	a9 00 00 00 13       	test   eax,0x13000000
    7949:	2a 16                	sub    dl,BYTE PTR [rsi]
    794b:	e3 20                	jrcxz  796d <_end+0x1955>
    794d:	00 00                	add    BYTE PTR [rax],al
    794f:	08 e2                	or     dl,ah
    7951:	2f                   	(bad)
    7952:	00 00                	add    BYTE PTR [rax],al
    7954:	13 2c 19             	adc    ebp,DWORD PTR [rcx+rbx*1]
    7957:	b2 21                	mov    dl,0x21
    7959:	00 00                	add    BYTE PTR [rax],al
    795b:	08 85 05 00 00 13    	or     BYTE PTR [rbp+0x13000005],al
    7961:	2d 1b 8a 21 00       	sub    eax,0x218a1b
    7966:	00 08                	add    BYTE PTR [rax],cl
    7968:	f7 24 00             	mul    DWORD PTR [rax+rax*1]
    796b:	00 13                	add    BYTE PTR [rbx],dl
    796d:	34 12                	xor    al,0x12
    796f:	cc                   	int3
    7970:	21 00                	and    DWORD PTR [rax],eax
    7972:	00 08                	add    BYTE PTR [rax],cl
    7974:	8f                   	(bad)
    7975:	0d 00 00 13 35       	or     eax,0x35130000
    797a:	13 d8                	adc    ebx,eax
    797c:	21 00                	and    DWORD PTR [rax],eax
    797e:	00 08                	add    BYTE PTR [rax],cl
    7980:	c5 28 00             	(bad)
    7983:	00 13                	add    BYTE PTR [rbx],dl
    7985:	36 13 e4             	ss adc esp,esp
    7988:	21 00                	and    DWORD PTR [rax],eax
    798a:	00 08                	add    BYTE PTR [rax],cl
    798c:	36 15 00 00 13 37    	ss adc eax,0x37130000
    7992:	14 f0                	adc    al,0xf0
    7994:	21 00                	and    DWORD PTR [rax],eax
    7996:	00 08                	add    BYTE PTR [rax],cl
    7998:	eb 31                	jmp    79cb <_end+0x19b3>
    799a:	00 00                	add    BYTE PTR [rax],al
    799c:	13 38                	adc    edi,DWORD PTR [rax]
    799e:	13 fc                	adc    edi,esp
    79a0:	21 00                	and    DWORD PTR [rax],eax
    79a2:	00 08                	add    BYTE PTR [rax],cl
    79a4:	85 1d 00 00 13 39    	test   DWORD PTR [rip+0x39130000],ebx        # 391379aa <_end+0x39131992>
    79aa:	14 08                	adc    al,0x8
    79ac:	22 00                	and    al,BYTE PTR [rax]
    79ae:	00 08                	add    BYTE PTR [rax],cl
    79b0:	b7 2e                	mov    bh,0x2e
    79b2:	00 00                	add    BYTE PTR [rax],al
    79b4:	13 3a                	adc    edi,DWORD PTR [rdx]
    79b6:	13 14 22             	adc    edx,DWORD PTR [rdx+riz*1]
    79b9:	00 00                	add    BYTE PTR [rax],al
    79bb:	08 be 19 00 00 13    	or     BYTE PTR [rsi+0x13000019],bh
    79c1:	3b 14 20             	cmp    edx,DWORD PTR [rax+riz*1]
    79c4:	22 00                	and    al,BYTE PTR [rax]
    79c6:	00 08                	add    BYTE PTR [rax],cl
    79c8:	f8                   	clc
    79c9:	22 00                	and    al,BYTE PTR [rax]
    79cb:	00 13                	add    BYTE PTR [rbx],dl
    79cd:	48 12 b2 21 00 00 08 	rex.W adc sil,BYTE PTR [rdx+0x8000021]
    79d4:	11 2f                	adc    DWORD PTR [rdi],ebp
    79d6:	00 00                	add    BYTE PTR [rax],al
    79d8:	13 49 1b             	adc    ecx,DWORD PTR [rcx+0x1b]
    79db:	8a 21                	mov    ah,BYTE PTR [rcx]
    79dd:	00 00                	add    BYTE PTR [rax],al
    79df:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    79e2:	00 00                	add    BYTE PTR [rax],al
    79e4:	13 98 19 b2 21 00    	adc    ebx,DWORD PTR [rax+0x21b219]
    79ea:	00 08                	add    BYTE PTR [rax],cl
    79ec:	fd                   	std
    79ed:	2a 00                	sub    al,BYTE PTR [rax]
    79ef:	00 13                	add    BYTE PTR [rbx],dl
    79f1:	99                   	cdq
    79f2:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    79f8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    79f9:	24 00                	and    al,0x0
    79fb:	00 13                	add    BYTE PTR [rbx],dl
    79fd:	9c                   	pushf
    79fe:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    7a04:	38 0b                	cmp    BYTE PTR [rbx],cl
    7a06:	00 00                	add    BYTE PTR [rax],al
    7a08:	13 a0 1a b2 21 00    	adc    esp,DWORD PTR [rax+0x21b21a]
    7a0e:	00 77 08             	add    BYTE PTR [rdi+0x8],dh
    7a11:	08 ab 0a 00 00 13    	or     BYTE PTR [rbx+0x1300000a],ch
    7a17:	c5 21 b2             	(bad)
    7a1a:	21 00                	and    DWORD PTR [rax],eax
    7a1c:	00 0d e7 22 00 00    	add    BYTE PTR [rip+0x22e7],cl        # 9d09 <_end+0x3cf1>
    7a22:	12 01                	adc    al,BYTE PTR [rcx]
    7a24:	06                   	(bad)
    7a25:	08 02                	or     BYTE PTR [rdx],al
    7a27:	00 00                	add    BYTE PTR [rax],al
    7a29:	13 e7                	adc    esp,edi
    7a2b:	22 00                	and    al,BYTE PTR [rax]
    7a2d:	00 08                	add    BYTE PTR [rax],cl
    7a2f:	ee                   	out    dx,al
    7a30:	25 00 00 14 a3       	and    eax,0xa3140000
    7a35:	0f 35                	sysexitd
    7a37:	00 00                	add    BYTE PTR [rax],al
    7a39:	00 08                	add    BYTE PTR [rax],cl
    7a3b:	10 23                	adc    BYTE PTR [rbx],ah
    7a3d:	00 00                	add    BYTE PTR [rax],al
    7a3f:	14 a4                	adc    al,0xa4
    7a41:	10 2e                	adc    BYTE PTR [rsi],ch
    7a43:	00 00                	add    BYTE PTR [rax],al
    7a45:	00 12                	add    BYTE PTR [rdx],dl
    7a47:	04 04                	add    al,0x4
    7a49:	26 2e 00 00          	es cs add BYTE PTR [rax],al
    7a4d:	12 08                	adc    cl,BYTE PTR [rax]
    7a4f:	04 0d                	add    al,0xd
    7a51:	32 00                	xor    al,BYTE PTR [rax]
    7a53:	00 12                	add    BYTE PTR [rdx],dl
    7a55:	10 04 09             	adc    BYTE PTR [rcx+rcx*1],al
    7a58:	31 00                	xor    DWORD PTR [rax],eax
    7a5a:	00 12                	add    BYTE PTR [rdx],dl
    7a5c:	08 04 aa             	or     BYTE PTR [rdx+rbp*4],al
    7a5f:	19 00                	sbb    DWORD PTR [rax],eax
    7a61:	00 12                	add    BYTE PTR [rdx],dl
    7a63:	10 04 51             	adc    BYTE PTR [rcx+rdx*2],al
    7a66:	0c 00                	or     al,0x0
    7a68:	00 08                	add    BYTE PTR [rax],cl
    7a6a:	cc                   	int3
    7a6b:	0a 00                	or     al,BYTE PTR [rax]
    7a6d:	00 15 d6 17 8a 21    	add    BYTE PTR [rip+0x218a17d6],dl        # 218a9249 <_end+0x218a3231>
    7a73:	00 00                	add    BYTE PTR [rax],al
    7a75:	35 08 16 3c 03       	xor    eax,0x33c1608
    7a7a:	dd 02                	fld    QWORD PTR [rdx]
    7a7c:	00 00                	add    BYTE PTR [rax],al
    7a7e:	61                   	(bad)
    7a7f:	23 00                	and    eax,DWORD PTR [rax]
    7a81:	00 06                	add    BYTE PTR [rsi],al
    7a83:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7a86:	00 16                	add    BYTE PTR [rsi],dl
    7a88:	3d 09 a6 21 00       	cmp    eax,0x21a609
    7a8d:	00 00                	add    BYTE PTR [rax],al
    7a8f:	46 72 65             	rex.RX jb 7af7 <_end+0x1adf>
    7a92:	6d                   	ins    DWORD PTR es:[rdi],dx
    7a93:	00 3e                	add    BYTE PTR [rsi],bh
    7a95:	09 a6 21 00 00 04    	or     DWORD PTR [rsi+0x4000021],esp
    7a9b:	00 08                	add    BYTE PTR [rax],cl
    7a9d:	de 02                	fiadd  WORD PTR [rdx]
    7a9f:	00 00                	add    BYTE PTR [rax],al
    7aa1:	16                   	(bad)
    7aa2:	3f                   	(bad)
    7aa3:	05 3a 23 00 00       	add    eax,0x233a
    7aa8:	35 10 16 44 03       	xor    eax,0x3441610
    7aad:	09 00                	or     DWORD PTR [rax],eax
    7aaf:	00 00                	add    BYTE PTR [rax],al
    7ab1:	94                   	xchg   esp,eax
    7ab2:	23 00                	and    eax,DWORD PTR [rax]
    7ab4:	00 06                	add    BYTE PTR [rsi],al
    7ab6:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7ab9:	00 16                	add    BYTE PTR [rsi],dl
    7abb:	45 0e                	rex.RB (bad)
    7abd:	b2 21                	mov    dl,0x21
    7abf:	00 00                	add    BYTE PTR [rax],al
    7ac1:	00 46 72             	add    BYTE PTR [rsi+0x72],al
    7ac4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    7ac6:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    7ac9:	b2 21                	mov    dl,0x21
    7acb:	00 00                	add    BYTE PTR [rax],al
    7acd:	08 00                	or     BYTE PTR [rax],al
    7acf:	08 0a                	or     BYTE PTR [rdx],cl
    7ad1:	00 00                	add    BYTE PTR [rax],al
    7ad3:	00 16                	add    BYTE PTR [rsi],dl
    7ad5:	47 05 6d 23 00 00    	rex.RXB add eax,0x236d
    7adb:	35 10 16 4e 03       	xor    eax,0x34e1610
    7ae0:	b4 00                	mov    ah,0x0
    7ae2:	00 00                	add    BYTE PTR [rax],al
    7ae4:	c7                   	(bad)
    7ae5:	23 00                	and    eax,DWORD PTR [rax]
    7ae7:	00 06                	add    BYTE PTR [rsi],al
    7ae9:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7aec:	00 16                	add    BYTE PTR [rsi],dl
    7aee:	4f 13 be 21 00 00 00 	rex.WRXB adc r15,QWORD PTR [r14+0x21]
    7af5:	46 72 65             	rex.RX jb 7b5d <_end+0x1b45>
    7af8:	6d                   	ins    DWORD PTR es:[rdi],dx
    7af9:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    7afc:	be 21 00 00 08       	mov    esi,0x8000021
    7b01:	00 08                	add    BYTE PTR [rax],cl
    7b03:	b5 00                	mov    ch,0x0
    7b05:	00 00                	add    BYTE PTR [rax],al
    7b07:	16                   	(bad)
    7b08:	51                   	push   rcx
    7b09:	05 a0 23 00 00       	add    eax,0x23a0
    7b0e:	0d ee 22 00 00       	or     eax,0x22ee
    7b13:	57                   	push   rdi
    7b14:	d3 23                	shl    DWORD PTR [rbx],cl
    7b16:	00 00                	add    BYTE PTR [rax],al
    7b18:	08 a9 24 00 00 17    	or     BYTE PTR [rcx+0x17000024],ch
    7b1e:	07                   	(bad)
    7b1f:	13 bc 22 00 00 08 3a 	adc    edi,DWORD PTR [rdx+riz*1+0x3a080000]
    7b26:	0b 00                	or     eax,DWORD PTR [rax]
    7b28:	00 18                	add    BYTE PTR [rax],bl
    7b2a:	0a 12                	or     dl,BYTE PTR [rdx]
    7b2c:	c8 22 00 00          	enter  0x22,0x0
    7b30:	13 e9                	adc    ebp,ecx
    7b32:	23 00                	and    eax,DWORD PTR [rax]
    7b34:	00 08                	add    BYTE PTR [rax],cl
    7b36:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7b37:	26 00 00             	es add BYTE PTR [rax],al
    7b3a:	19 18                	sbb    DWORD PTR [rax],ebx
    7b3c:	12 cc                	adc    cl,ah
    7b3e:	21 00                	and    DWORD PTR [rax],eax
    7b40:	00 08                	add    BYTE PTR [rax],cl
    7b42:	29 2a                	sub    DWORD PTR [rdx],ebp
    7b44:	00 00                	add    BYTE PTR [rax],al
    7b46:	19 19                	sbb    DWORD PTR [rcx],ebx
    7b48:	13 e4                	adc    esp,esp
    7b4a:	21 00                	and    DWORD PTR [rax],eax
    7b4c:	00 08                	add    BYTE PTR [rax],cl
    7b4e:	eb 08                	jmp    7b58 <_end+0x1b40>
    7b50:	00 00                	add    BYTE PTR [rax],al
    7b52:	19 1a                	sbb    DWORD PTR [rdx],ebx
    7b54:	13 fc                	adc    edi,esp
    7b56:	21 00                	and    DWORD PTR [rax],eax
    7b58:	00 08                	add    BYTE PTR [rax],cl
    7b5a:	e4 2f                	in     al,0x2f
    7b5c:	00 00                	add    BYTE PTR [rax],al
    7b5e:	19 1b                	sbb    DWORD PTR [rbx],ebx
    7b60:	13 14 22             	adc    edx,DWORD PTR [rdx+riz*1]
    7b63:	00 00                	add    BYTE PTR [rax],al
    7b65:	1b 05 0b 00 00 10    	sbb    eax,DWORD PTR [rip+0x1000000b]        # 10007b76 <_end+0x10001b5e>
    7b6b:	1a 0b                	sbb    cl,BYTE PTR [rbx]
    7b6d:	08 52 24             	or     BYTE PTR [rdx+0x24],dl
    7b70:	00 00                	add    BYTE PTR [rax],al
    7b72:	06                   	(bad)
    7b73:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7b74:	0a 00                	or     al,BYTE PTR [rax]
    7b76:	00 1a                	add    BYTE PTR [rdx],bl
    7b78:	10 0c c8             	adc    BYTE PTR [rax+rcx*8],cl
    7b7b:	22 00                	and    al,BYTE PTR [rax]
    7b7d:	00 00                	add    BYTE PTR [rax],al
    7b7f:	06                   	(bad)
    7b80:	94                   	xchg   esp,eax
    7b81:	0a 00                	or     al,BYTE PTR [rax]
    7b83:	00 1a                	add    BYTE PTR [rdx],bl
    7b85:	15 15 d6 22 00       	adc    eax,0x22d615
    7b8a:	00 08                	add    BYTE PTR [rax],cl
    7b8c:	00 25 e7 22 00 00    	add    BYTE PTR [rip+0x22e7],ah        # 9e79 <_end+0x3e61>
    7b92:	62 24 00             	(bad)
    7b95:	00 26                	add    BYTE PTR [rsi],ah
    7b97:	8a 21                	mov    ah,BYTE PTR [rcx]
    7b99:	00 00                	add    BYTE PTR [rax],al
    7b9b:	03 00                	add    eax,DWORD PTR [rax]
    7b9d:	42 cf                	rex.X iret
    7b9f:	02 00                	add    al,BYTE PTR [rax]
    7ba1:	00 16                	add    BYTE PTR [rsi],dl
    7ba3:	b4 03                	mov    ah,0x3
    7ba5:	0f 6f 24 00          	movq   mm4,QWORD PTR [rax+rax*1]
    7ba9:	00 0d 74 24 00 00    	add    BYTE PTR [rip+0x2474],cl        # a023 <_end+0x400b>
    7baf:	58                   	pop    rax
    7bb0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7bb1:	21 00                	and    DWORD PTR [rax],eax
    7bb3:	00 88 24 00 00 01    	add    BYTE PTR [rax+0x1000024],cl
    7bb9:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7bbc:	00 01                	add    BYTE PTR [rcx],al
    7bbe:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7bc1:	00 00                	add    BYTE PTR [rax],al
    7bc3:	0d 8d 24 00 00       	or     eax,0x248d
    7bc8:	78 12                	js     7bdc <_end+0x1bc4>
    7bca:	10 07                	adc    BYTE PTR [rdi],al
    7bcc:	66 07                	data16 (bad)
    7bce:	00 00                	add    BYTE PTR [rax],al
    7bd0:	12 10                	adc    dl,BYTE PTR [rax]
    7bd2:	05 ea 01 00 00       	add    eax,0x1ea
    7bd7:	12 04 05 61 02 00 00 	adc    al,BYTE PTR [rax*1+0x261]
    7bde:	13 9c 24 00 00 12 02 	adc    ebx,DWORD PTR [rsp+0x2120000]
    7be5:	10 16                	adc    BYTE PTR [rsi],dl
    7be7:	32 00                	xor    al,BYTE PTR [rax]
    7be9:	00 12                	add    BYTE PTR [rdx],dl
    7beb:	04 10                	add    al,0x10
    7bed:	e1 2b                	loope  7c1a <_end+0x1c02>
    7bef:	00 00                	add    BYTE PTR [rax],al
    7bf1:	33 79 1d             	xor    edi,DWORD PTR [rcx+0x1d]
    7bf4:	00 00                	add    BYTE PTR [rax],al
    7bf6:	06                   	(bad)
    7bf7:	38 0b                	cmp    BYTE PTR [rbx],cl
    7bf9:	cb                   	retf
    7bfa:	24 00                	and    al,0x0
    7bfc:	00 79 06             	add    BYTE PTR [rcx+0x6],bh
    7bff:	3a 18                	cmp    bl,BYTE PTR [rax]
    7c01:	69 00 00 00 00 12    	imul   eax,DWORD PTR [rax],0x12000000
    7c07:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    7c0a:	02 00                	add    al,BYTE PTR [rax]
    7c0c:	00 02                	add    BYTE PTR [rdx],al
    7c0e:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c10:	0c 71                	or     al,0x71
    7c12:	00 00                	add    BYTE PTR [rax],al
    7c14:	00 02                	add    BYTE PTR [rdx],al
    7c16:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c18:	0c 8a                	or     al,0x8a
    7c1a:	00 00                	add    BYTE PTR [rax],al
    7c1c:	00 02                	add    BYTE PTR [rdx],al
    7c1e:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c20:	0c a3                	or     al,0xa3
    7c22:	00 00                	add    BYTE PTR [rax],al
    7c24:	00 02                	add    BYTE PTR [rdx],al
    7c26:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c28:	0c bc                	or     al,0xbc
    7c2a:	00 00                	add    BYTE PTR [rax],al
    7c2c:	00 02                	add    BYTE PTR [rdx],al
    7c2e:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c30:	0c d5                	or     al,0xd5
    7c32:	00 00                	add    BYTE PTR [rax],al
    7c34:	00 02                	add    BYTE PTR [rdx],al
    7c36:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c38:	0c ee                	or     al,0xee
    7c3a:	00 00                	add    BYTE PTR [rax],al
    7c3c:	00 02                	add    BYTE PTR [rdx],al
    7c3e:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c40:	0c 07                	or     al,0x7
    7c42:	01 00                	add    DWORD PTR [rax],eax
    7c44:	00 02                	add    BYTE PTR [rdx],al
    7c46:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7c48:	0c 20                	or     al,0x20
    7c4a:	01 00                	add    DWORD PTR [rax],eax
    7c4c:	00 02                	add    BYTE PTR [rdx],al
    7c4e:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7c50:	0c 3a                	or     al,0x3a
    7c52:	01 00                	add    DWORD PTR [rax],eax
    7c54:	00 02                	add    BYTE PTR [rdx],al
    7c56:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7c58:	0c 54                	or     al,0x54
    7c5a:	01 00                	add    DWORD PTR [rax],eax
    7c5c:	00 02                	add    BYTE PTR [rdx],al
    7c5e:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7c60:	0c 6e                	or     al,0x6e
    7c62:	01 00                	add    DWORD PTR [rax],eax
    7c64:	00 02                	add    BYTE PTR [rdx],al
    7c66:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7c68:	0c 88                	or     al,0x88
    7c6a:	01 00                	add    DWORD PTR [rax],eax
    7c6c:	00 02                	add    BYTE PTR [rdx],al
    7c6e:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7c70:	0c a2                	or     al,0xa2
    7c72:	01 00                	add    DWORD PTR [rax],eax
    7c74:	00 02                	add    BYTE PTR [rdx],al
    7c76:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7c78:	0c bc                	or     al,0xbc
    7c7a:	01 00                	add    DWORD PTR [rax],eax
    7c7c:	00 02                	add    BYTE PTR [rdx],al
    7c7e:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7c80:	0c db                	or     al,0xdb
    7c82:	01 00                	add    DWORD PTR [rax],eax
    7c84:	00 02                	add    BYTE PTR [rdx],al
    7c86:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7c88:	0c fa                	or     al,0xfa
    7c8a:	01 00                	add    DWORD PTR [rax],eax
    7c8c:	00 02                	add    BYTE PTR [rdx],al
    7c8e:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7c90:	0c 13                	or     al,0x13
    7c92:	02 00                	add    al,BYTE PTR [rax]
    7c94:	00 02                	add    BYTE PTR [rdx],al
    7c96:	1b 2c 0c             	sbb    ebp,DWORD PTR [rsp+rcx*1]
    7c99:	2c 02                	sub    al,0x2
    7c9b:	00 00                	add    BYTE PTR [rax],al
    7c9d:	02 1b                	add    bl,BYTE PTR [rbx]
    7c9f:	2c 0c                	sub    al,0xc
    7ca1:	45 02 00             	add    r8b,BYTE PTR [r8]
    7ca4:	00 02                	add    BYTE PTR [rdx],al
    7ca6:	1b 2d 0c 5e 02 00    	sbb    ebp,DWORD PTR [rip+0x25e0c]        # 2dab8 <_end+0x27aa0>
    7cac:	00 02                	add    BYTE PTR [rdx],al
    7cae:	1b 2d 0c 77 02 00    	sbb    ebp,DWORD PTR [rip+0x2770c]        # 2f3c0 <_end+0x293a8>
    7cb4:	00 02                	add    BYTE PTR [rdx],al
    7cb6:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7cb8:	0c 90                	or     al,0x90
    7cba:	02 00                	add    al,BYTE PTR [rax]
    7cbc:	00 02                	add    BYTE PTR [rdx],al
    7cbe:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7cc0:	0c aa                	or     al,0xaa
    7cc2:	02 00                	add    al,BYTE PTR [rax]
    7cc4:	00 02                	add    BYTE PTR [rdx],al
    7cc6:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7cc8:	0c c4                	or     al,0xc4
    7cca:	02 00                	add    al,BYTE PTR [rax]
    7ccc:	00 02                	add    BYTE PTR [rdx],al
    7cce:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7cd0:	0c df                	or     al,0xdf
    7cd2:	02 00                	add    al,BYTE PTR [rax]
    7cd4:	00 02                	add    BYTE PTR [rdx],al
    7cd6:	1b 30                	sbb    esi,DWORD PTR [rax]
    7cd8:	0c fa                	or     al,0xfa
    7cda:	02 00                	add    al,BYTE PTR [rax]
    7cdc:	00 02                	add    BYTE PTR [rdx],al
    7cde:	1b 30                	sbb    esi,DWORD PTR [rax]
    7ce0:	0c 15                	or     al,0x15
    7ce2:	03 00                	add    eax,DWORD PTR [rax]
    7ce4:	00 02                	add    BYTE PTR [rdx],al
    7ce6:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7ce8:	0c 30                	or     al,0x30
    7cea:	03 00                	add    eax,DWORD PTR [rax]
    7cec:	00 02                	add    BYTE PTR [rdx],al
    7cee:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7cf0:	0c 49                	or     al,0x49
    7cf2:	03 00                	add    eax,DWORD PTR [rax]
    7cf4:	00 0d a6 21 00 00    	add    BYTE PTR [rip+0x21a6],cl        # 9ea0 <_end+0x3e88>
    7cfa:	02 1b                	add    bl,BYTE PTR [rbx]
    7cfc:	32 0c 62             	xor    cl,BYTE PTR [rdx+riz*2]
    7cff:	03 00                	add    eax,DWORD PTR [rax]
    7d01:	00 02                	add    BYTE PTR [rdx],al
    7d03:	1b 32                	sbb    esi,DWORD PTR [rdx]
    7d05:	0c 82                	or     al,0x82
    7d07:	03 00                	add    eax,DWORD PTR [rax]
    7d09:	00 02                	add    BYTE PTR [rdx],al
    7d0b:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7d0d:	0c a2                	or     al,0xa2
    7d0f:	03 00                	add    eax,DWORD PTR [rax]
    7d11:	00 02                	add    BYTE PTR [rdx],al
    7d13:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7d15:	0c c2                	or     al,0xc2
    7d17:	03 00                	add    eax,DWORD PTR [rax]
    7d19:	00 02                	add    BYTE PTR [rdx],al
    7d1b:	1b 34 0c             	sbb    esi,DWORD PTR [rsp+rcx*1]
    7d1e:	e2 03                	loop   7d23 <_end+0x1d0b>
    7d20:	00 00                	add    BYTE PTR [rax],al
    7d22:	02 1b                	add    bl,BYTE PTR [rbx]
    7d24:	34 0c                	xor    al,0xc
    7d26:	fb                   	sti
    7d27:	03 00                	add    eax,DWORD PTR [rax]
    7d29:	00 02                	add    BYTE PTR [rdx],al
    7d2b:	1b 35 0c 14 04 00    	sbb    esi,DWORD PTR [rip+0x4140c]        # 4913d <_end+0x43125>
    7d31:	00 02                	add    BYTE PTR [rdx],al
    7d33:	1b 35 0c 2f 04 00    	sbb    esi,DWORD PTR [rip+0x42f0c]        # 4ac45 <_end+0x44c2d>
    7d39:	00 0d c5 21 00 00    	add    BYTE PTR [rip+0x21c5],cl        # 9f04 <_end+0x3eec>
    7d3f:	02 1b                	add    bl,BYTE PTR [rbx]
    7d41:	36 0c 4a             	ss or  al,0x4a
    7d44:	04 00                	add    al,0x0
    7d46:	00 0d 35 00 00 00    	add    BYTE PTR [rip+0x35],cl        # 7d81 <_end+0x1d69>
    7d4c:	02 1b                	add    bl,BYTE PTR [rbx]
    7d4e:	36 0c 6a             	ss or  al,0x6a
    7d51:	04 00                	add    al,0x0
    7d53:	00 02                	add    BYTE PTR [rdx],al
    7d55:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7d57:	0c 8a                	or     al,0x8a
    7d59:	04 00                	add    al,0x0
    7d5b:	00 02                	add    BYTE PTR [rdx],al
    7d5d:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7d5f:	0c a8                	or     al,0xa8
    7d61:	04 00                	add    al,0x0
    7d63:	00 02                	add    BYTE PTR [rdx],al
    7d65:	1b 38                	sbb    edi,DWORD PTR [rax]
    7d67:	0c c6                	or     al,0xc6
    7d69:	04 00                	add    al,0x0
    7d6b:	00 02                	add    BYTE PTR [rdx],al
    7d6d:	1b 38                	sbb    edi,DWORD PTR [rax]
    7d6f:	0c e1                	or     al,0xe1
    7d71:	04 00                	add    al,0x0
    7d73:	00 02                	add    BYTE PTR [rdx],al
    7d75:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7d77:	0c fc                	or     al,0xfc
    7d79:	04 00                	add    al,0x0
    7d7b:	00 02                	add    BYTE PTR [rdx],al
    7d7d:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7d7f:	0c 16                	or     al,0x16
    7d81:	05 00 00 02 1b       	add    eax,0x1b020000
    7d86:	3a 0c 30             	cmp    cl,BYTE PTR [rax+rsi*1]
    7d89:	05 00 00 02 1b       	add    eax,0x1b020000
    7d8e:	3a 0c 4a             	cmp    cl,BYTE PTR [rdx+rcx*2]
    7d91:	05 00 00 02 1b       	add    eax,0x1b020000
    7d96:	3b 0c 64             	cmp    ecx,DWORD PTR [rsp+riz*2]
    7d99:	05 00 00 02 1b       	add    eax,0x1b020000
    7d9e:	3b 0c 7f             	cmp    ecx,DWORD PTR [rdi+rdi*2]
    7da1:	05 00 00 02 1b       	add    eax,0x1b020000
    7da6:	3c 0c                	cmp    al,0xc
    7da8:	99                   	cdq
    7da9:	05 00 00 02 1b       	add    eax,0x1b020000
    7dae:	3c 0c                	cmp    al,0xc
    7db0:	b9 05 00 00 02       	mov    ecx,0x2000005
    7db5:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    7db7:	0c d9                	or     al,0xd9
    7db9:	05 00 00 02 1b       	add    eax,0x1b020000
    7dbe:	3f                   	(bad)
    7dbf:	0c f4                	or     al,0xf4
    7dc1:	05 00 00 02 1b       	add    eax,0x1b020000
    7dc6:	3f                   	(bad)
    7dc7:	0c 0f                	or     al,0xf
    7dc9:	06                   	(bad)
    7dca:	00 00                	add    BYTE PTR [rax],al
    7dcc:	02 1b                	add    bl,BYTE PTR [rbx]
    7dce:	40 0c 2a             	rex or al,0x2a
    7dd1:	06                   	(bad)
    7dd2:	00 00                	add    BYTE PTR [rax],al
    7dd4:	02 1b                	add    bl,BYTE PTR [rbx]
    7dd6:	40 0c 45             	rex or al,0x45
    7dd9:	06                   	(bad)
    7dda:	00 00                	add    BYTE PTR [rax],al
    7ddc:	02 1b                	add    bl,BYTE PTR [rbx]
    7dde:	40 0c 60             	rex or al,0x60
    7de1:	06                   	(bad)
    7de2:	00 00                	add    BYTE PTR [rax],al
    7de4:	02 1b                	add    bl,BYTE PTR [rbx]
    7de6:	41 0c 7b             	rex.B or al,0x7b
    7de9:	06                   	(bad)
    7dea:	00 00                	add    BYTE PTR [rax],al
    7dec:	02 1b                	add    bl,BYTE PTR [rbx]
    7dee:	41 0c 96             	rex.B or al,0x96
    7df1:	06                   	(bad)
    7df2:	00 00                	add    BYTE PTR [rax],al
    7df4:	02 1b                	add    bl,BYTE PTR [rbx]
    7df6:	41 0c b1             	rex.B or al,0xb1
    7df9:	06                   	(bad)
    7dfa:	00 00                	add    BYTE PTR [rax],al
    7dfc:	02 1b                	add    bl,BYTE PTR [rbx]
    7dfe:	42 0c cc             	rex.X or al,0xcc
    7e01:	06                   	(bad)
    7e02:	00 00                	add    BYTE PTR [rax],al
    7e04:	02 1b                	add    bl,BYTE PTR [rbx]
    7e06:	42 0c e7             	rex.X or al,0xe7
    7e09:	06                   	(bad)
    7e0a:	00 00                	add    BYTE PTR [rax],al
    7e0c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e0e:	42 0c 02             	rex.X or al,0x2
    7e11:	07                   	(bad)
    7e12:	00 00                	add    BYTE PTR [rax],al
    7e14:	02 1b                	add    bl,BYTE PTR [rbx]
    7e16:	43 0c 1d             	rex.XB or al,0x1d
    7e19:	07                   	(bad)
    7e1a:	00 00                	add    BYTE PTR [rax],al
    7e1c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e1e:	43 0c 38             	rex.XB or al,0x38
    7e21:	07                   	(bad)
    7e22:	00 00                	add    BYTE PTR [rax],al
    7e24:	02 1b                	add    bl,BYTE PTR [rbx]
    7e26:	43 0c 53             	rex.XB or al,0x53
    7e29:	07                   	(bad)
    7e2a:	00 00                	add    BYTE PTR [rax],al
    7e2c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e2e:	44 0c 6e             	rex.R or al,0x6e
    7e31:	07                   	(bad)
    7e32:	00 00                	add    BYTE PTR [rax],al
    7e34:	02 1b                	add    bl,BYTE PTR [rbx]
    7e36:	44 0c 89             	rex.R or al,0x89
    7e39:	07                   	(bad)
    7e3a:	00 00                	add    BYTE PTR [rax],al
    7e3c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e3e:	44 0c a4             	rex.R or al,0xa4
    7e41:	07                   	(bad)
    7e42:	00 00                	add    BYTE PTR [rax],al
    7e44:	02 1b                	add    bl,BYTE PTR [rbx]
    7e46:	45 0c bf             	rex.RB or al,0xbf
    7e49:	07                   	(bad)
    7e4a:	00 00                	add    BYTE PTR [rax],al
    7e4c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e4e:	45 0c df             	rex.RB or al,0xdf
    7e51:	07                   	(bad)
    7e52:	00 00                	add    BYTE PTR [rax],al
    7e54:	02 1b                	add    bl,BYTE PTR [rbx]
    7e56:	45 0c ff             	rex.RB or al,0xff
    7e59:	07                   	(bad)
    7e5a:	00 00                	add    BYTE PTR [rax],al
    7e5c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e5e:	46 0c 1f             	rex.RX or al,0x1f
    7e61:	08 00                	or     BYTE PTR [rax],al
    7e63:	00 02                	add    BYTE PTR [rdx],al
    7e65:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7e68:	3f                   	(bad)
    7e69:	08 00                	or     BYTE PTR [rax],al
    7e6b:	00 02                	add    BYTE PTR [rdx],al
    7e6d:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7e70:	5f                   	pop    rdi
    7e71:	08 00                	or     BYTE PTR [rax],al
    7e73:	00 02                	add    BYTE PTR [rdx],al
    7e75:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7e78:	7f 08                	jg     7e82 <_end+0x1e6a>
    7e7a:	00 00                	add    BYTE PTR [rax],al
    7e7c:	02 1b                	add    bl,BYTE PTR [rbx]
    7e7e:	47 0c 9f             	rex.RXB or al,0x9f
    7e81:	08 00                	or     BYTE PTR [rax],al
    7e83:	00 02                	add    BYTE PTR [rdx],al
    7e85:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7e88:	bf 08 00 00 02       	mov    edi,0x2000008
    7e8d:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7e90:	df 08                	fisttp WORD PTR [rax]
    7e92:	00 00                	add    BYTE PTR [rax],al
    7e94:	02 1b                	add    bl,BYTE PTR [rbx]
    7e96:	48 0c ff             	rex.W or al,0xff
    7e99:	08 00                	or     BYTE PTR [rax],al
    7e9b:	00 02                	add    BYTE PTR [rdx],al
    7e9d:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7ea0:	1f                   	(bad)
    7ea1:	09 00                	or     DWORD PTR [rax],eax
    7ea3:	00 02                	add    BYTE PTR [rdx],al
    7ea5:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7ea8:	3f                   	(bad)
    7ea9:	09 00                	or     DWORD PTR [rax],eax
    7eab:	00 02                	add    BYTE PTR [rdx],al
    7ead:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7eb0:	5f                   	pop    rdi
    7eb1:	09 00                	or     DWORD PTR [rax],eax
    7eb3:	00 02                	add    BYTE PTR [rdx],al
    7eb5:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7eb8:	7f 09                	jg     7ec3 <_end+0x1eab>
    7eba:	00 00                	add    BYTE PTR [rax],al
    7ebc:	02 1b                	add    bl,BYTE PTR [rbx]
    7ebe:	4a 0c 9f             	rex.WX or al,0x9f
    7ec1:	09 00                	or     DWORD PTR [rax],eax
    7ec3:	00 02                	add    BYTE PTR [rdx],al
    7ec5:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7ec8:	bf 09 00 00 02       	mov    edi,0x2000009
    7ecd:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7ed0:	df 09                	fisttp WORD PTR [rcx]
    7ed2:	00 00                	add    BYTE PTR [rax],al
    7ed4:	02 1b                	add    bl,BYTE PTR [rbx]
    7ed6:	4e 0c ff             	rex.WRX or al,0xff
    7ed9:	09 00                	or     DWORD PTR [rax],eax
    7edb:	00 02                	add    BYTE PTR [rdx],al
    7edd:	1b 4e 0c             	sbb    ecx,DWORD PTR [rsi+0xc]
    7ee0:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    7ee2:	00 00                	add    BYTE PTR [rax],al
    7ee4:	02 1b                	add    bl,BYTE PTR [rbx]
    7ee6:	4f 0c 35             	rex.WRXB or al,0x35
    7ee9:	0a 00                	or     al,BYTE PTR [rax]
    7eeb:	00 02                	add    BYTE PTR [rdx],al
    7eed:	1b 4f 0c             	sbb    ecx,DWORD PTR [rdi+0xc]
    7ef0:	50                   	push   rax
    7ef1:	0a 00                	or     al,BYTE PTR [rax]
    7ef3:	00 02                	add    BYTE PTR [rdx],al
    7ef5:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7ef8:	6b 0a 00             	imul   ecx,DWORD PTR [rdx],0x0
    7efb:	00 02                	add    BYTE PTR [rdx],al
    7efd:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7f00:	86 0a                	xchg   BYTE PTR [rdx],cl
    7f02:	00 00                	add    BYTE PTR [rax],al
    7f04:	02 1b                	add    bl,BYTE PTR [rbx]
    7f06:	51                   	push   rcx
    7f07:	0c a1                	or     al,0xa1
    7f09:	0a 00                	or     al,BYTE PTR [rax]
    7f0b:	00 02                	add    BYTE PTR [rdx],al
    7f0d:	1b 51 0c             	sbb    edx,DWORD PTR [rcx+0xc]
    7f10:	bc 0a 00 00 02       	mov    esp,0x200000a
    7f15:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7f18:	d7                   	xlat   BYTE PTR ds:[rbx]
    7f19:	0a 00                	or     al,BYTE PTR [rax]
    7f1b:	00 02                	add    BYTE PTR [rdx],al
    7f1d:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7f20:	f7 0a 00 00 02 1b    	test   DWORD PTR [rdx],0x1b020000
    7f26:	53                   	push   rbx
    7f27:	0c 17                	or     al,0x17
    7f29:	0b 00                	or     eax,DWORD PTR [rax]
    7f2b:	00 02                	add    BYTE PTR [rdx],al
    7f2d:	1b 53 0c             	sbb    edx,DWORD PTR [rbx+0xc]
    7f30:	30 0b                	xor    BYTE PTR [rbx],cl
    7f32:	00 00                	add    BYTE PTR [rax],al
    7f34:	02 1b                	add    bl,BYTE PTR [rbx]
    7f36:	54                   	push   rsp
    7f37:	0c 49                	or     al,0x49
    7f39:	0b 00                	or     eax,DWORD PTR [rax]
    7f3b:	00 02                	add    BYTE PTR [rdx],al
    7f3d:	1b 54 0c 64          	sbb    edx,DWORD PTR [rsp+rcx*1+0x64]
    7f41:	0b 00                	or     eax,DWORD PTR [rax]
    7f43:	00 02                	add    BYTE PTR [rdx],al
    7f45:	1b 55 0c             	sbb    edx,DWORD PTR [rbp+0xc]
    7f48:	7f 0b                	jg     7f55 <_end+0x1f3d>
    7f4a:	00 00                	add    BYTE PTR [rax],al
    7f4c:	02 1b                	add    bl,BYTE PTR [rbx]
    7f4e:	55                   	push   rbp
    7f4f:	0c 9a                	or     al,0x9a
    7f51:	0b 00                	or     eax,DWORD PTR [rax]
    7f53:	00 02                	add    BYTE PTR [rdx],al
    7f55:	1b 56 0c             	sbb    edx,DWORD PTR [rsi+0xc]
    7f58:	b5 0b                	mov    ch,0xb
    7f5a:	00 00                	add    BYTE PTR [rax],al
    7f5c:	02 1b                	add    bl,BYTE PTR [rbx]
    7f5e:	56                   	push   rsi
    7f5f:	0c d0                	or     al,0xd0
    7f61:	0b 00                	or     eax,DWORD PTR [rax]
    7f63:	00 02                	add    BYTE PTR [rdx],al
    7f65:	1b 57 0c             	sbb    edx,DWORD PTR [rdi+0xc]
    7f68:	eb 0b                	jmp    7f75 <_end+0x1f5d>
    7f6a:	00 00                	add    BYTE PTR [rax],al
    7f6c:	02 1b                	add    bl,BYTE PTR [rbx]
    7f6e:	57                   	push   rdi
    7f6f:	0c 0b                	or     al,0xb
    7f71:	0c 00                	or     al,0x0
    7f73:	00 02                	add    BYTE PTR [rdx],al
    7f75:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7f78:	2b 0c 00             	sub    ecx,DWORD PTR [rax+rax*1]
    7f7b:	00 02                	add    BYTE PTR [rdx],al
    7f7d:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7f80:	4e 0c 00             	rex.WRX or al,0x0
    7f83:	00 02                	add    BYTE PTR [rdx],al
    7f85:	1b 59 0c             	sbb    ebx,DWORD PTR [rcx+0xc]
    7f88:	71 0c                	jno    7f96 <_end+0x1f7e>
    7f8a:	00 00                	add    BYTE PTR [rax],al
    7f8c:	02 1b                	add    bl,BYTE PTR [rbx]
    7f8e:	59                   	pop    rcx
    7f8f:	0c 91                	or     al,0x91
    7f91:	0c 00                	or     al,0x0
    7f93:	00 02                	add    BYTE PTR [rdx],al
    7f95:	1b 5a 0c             	sbb    ebx,DWORD PTR [rdx+0xc]
    7f98:	b1 0c                	mov    cl,0xc
    7f9a:	00 00                	add    BYTE PTR [rax],al
    7f9c:	02 1b                	add    bl,BYTE PTR [rbx]
    7f9e:	5a                   	pop    rdx
    7f9f:	0c d1                	or     al,0xd1
    7fa1:	0c 00                	or     al,0x0
    7fa3:	00 02                	add    BYTE PTR [rdx],al
    7fa5:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7fa8:	f1                   	int1
    7fa9:	0c 00                	or     al,0x0
    7fab:	00 02                	add    BYTE PTR [rdx],al
    7fad:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7fb0:	16                   	(bad)
    7fb1:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fb6:	5b                   	pop    rbx
    7fb7:	0c 3b                	or     al,0x3b
    7fb9:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fbe:	5b                   	pop    rbx
    7fbf:	0c 60                	or     al,0x60
    7fc1:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fc6:	5b                   	pop    rbx
    7fc7:	0c 80                	or     al,0x80
    7fc9:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fce:	5c                   	pop    rsp
    7fcf:	0c a0                	or     al,0xa0
    7fd1:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fd6:	5c                   	pop    rsp
    7fd7:	0c bb                	or     al,0xbb
    7fd9:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fde:	5d                   	pop    rbp
    7fdf:	0c d6                	or     al,0xd6
    7fe1:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fe6:	5d                   	pop    rbp
    7fe7:	0c f1                	or     al,0xf1
    7fe9:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fee:	5e                   	pop    rsi
    7fef:	0c 0c                	or     al,0xc
    7ff1:	0e                   	(bad)
    7ff2:	00 00                	add    BYTE PTR [rax],al
    7ff4:	02 1b                	add    bl,BYTE PTR [rbx]
    7ff6:	5e                   	pop    rsi
    7ff7:	0c 27                	or     al,0x27
    7ff9:	0e                   	(bad)
    7ffa:	00 00                	add    BYTE PTR [rax],al
    7ffc:	02 1b                	add    bl,BYTE PTR [rbx]
    7ffe:	5f                   	pop    rdi
    7fff:	0c 42                	or     al,0x42
    8001:	0e                   	(bad)
    8002:	00 00                	add    BYTE PTR [rax],al
    8004:	02 1b                	add    bl,BYTE PTR [rbx]
    8006:	5f                   	pop    rdi
    8007:	0c 5d                	or     al,0x5d
    8009:	0e                   	(bad)
    800a:	00 00                	add    BYTE PTR [rax],al
    800c:	02 1b                	add    bl,BYTE PTR [rbx]
    800e:	60                   	(bad)
    800f:	0c 78                	or     al,0x78
    8011:	0e                   	(bad)
    8012:	00 00                	add    BYTE PTR [rax],al
    8014:	02 1b                	add    bl,BYTE PTR [rbx]
    8016:	60                   	(bad)
    8017:	0c 93                	or     al,0x93
    8019:	0e                   	(bad)
    801a:	00 00                	add    BYTE PTR [rax],al
    801c:	02 1b                	add    bl,BYTE PTR [rbx]
    801e:	61                   	(bad)
    801f:	0c ae                	or     al,0xae
    8021:	0e                   	(bad)
    8022:	00 00                	add    BYTE PTR [rax],al
    8024:	02 1b                	add    bl,BYTE PTR [rbx]
    8026:	61                   	(bad)
    8027:	0c c9                	or     al,0xc9
    8029:	0e                   	(bad)
    802a:	00 00                	add    BYTE PTR [rax],al
    802c:	02 1b                	add    bl,BYTE PTR [rbx]
    802e:	62 0c e4             	(bad)  {k6}
    8031:	0e                   	(bad)
    8032:	00 00                	add    BYTE PTR [rax],al
    8034:	02 1b                	add    bl,BYTE PTR [rbx]
    8036:	62 0c ff             	(bad)  {k6}
    8039:	0e                   	(bad)
    803a:	00 00                	add    BYTE PTR [rax],al
    803c:	02 1b                	add    bl,BYTE PTR [rbx]
    803e:	63 0c 1a             	movsxd ecx,DWORD PTR [rdx+rbx*1]
    8041:	0f 00 00             	sldt   WORD PTR [rax]
    8044:	02 1b                	add    bl,BYTE PTR [rbx]
    8046:	63 0c 35 0f 00 00 02 	movsxd ecx,DWORD PTR [rsi*1+0x200000f]
    804d:	1b 64 0c 50          	sbb    esp,DWORD PTR [rsp+rcx*1+0x50]
    8051:	0f 00 00             	sldt   WORD PTR [rax]
    8054:	02 1b                	add    bl,BYTE PTR [rbx]
    8056:	64 0c 6b             	fs or  al,0x6b
    8059:	0f 00 00             	sldt   WORD PTR [rax]
    805c:	02 1b                	add    bl,BYTE PTR [rbx]
    805e:	65 0c 86             	gs or  al,0x86
    8061:	0f 00 00             	sldt   WORD PTR [rax]
    8064:	02 1b                	add    bl,BYTE PTR [rbx]
    8066:	65 0c a1             	gs or  al,0xa1
    8069:	0f 00 00             	sldt   WORD PTR [rax]
    806c:	02 1b                	add    bl,BYTE PTR [rbx]
    806e:	66 0c bc             	data16 or al,0xbc
    8071:	0f 00 00             	sldt   WORD PTR [rax]
    8074:	02 1b                	add    bl,BYTE PTR [rbx]
    8076:	66 0c dc             	data16 or al,0xdc
    8079:	0f 00 00             	sldt   WORD PTR [rax]
    807c:	02 1b                	add    bl,BYTE PTR [rbx]
    807e:	67 0c fc             	addr32 or al,0xfc
    8081:	0f 00 00             	sldt   WORD PTR [rax]
    8084:	02 1b                	add    bl,BYTE PTR [rbx]
    8086:	67 0c 1c             	addr32 or al,0x1c
    8089:	10 00                	adc    BYTE PTR [rax],al
    808b:	00 02                	add    BYTE PTR [rdx],al
    808d:	1b 68 0c             	sbb    ebp,DWORD PTR [rax+0xc]
    8090:	3c 10                	cmp    al,0x10
    8092:	00 00                	add    BYTE PTR [rax],al
    8094:	02 1b                	add    bl,BYTE PTR [rbx]
    8096:	68 0c 5c 10 00       	push   0x105c0c
    809b:	00 02                	add    BYTE PTR [rdx],al
    809d:	1b 69 0c             	sbb    ebp,DWORD PTR [rcx+0xc]
    80a0:	7c 10                	jl     80b2 <_end+0x209a>
    80a2:	00 00                	add    BYTE PTR [rax],al
    80a4:	02 1b                	add    bl,BYTE PTR [rbx]
    80a6:	69 0c a1 10 00 00 02 	imul   ecx,DWORD PTR [rcx+riz*4],0x2000010
    80ad:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    80b0:	c6                   	(bad)
    80b1:	10 00                	adc    BYTE PTR [rax],al
    80b3:	00 02                	add    BYTE PTR [rdx],al
    80b5:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    80b8:	e1 10                	loope  80ca <_end+0x20b2>
    80ba:	00 00                	add    BYTE PTR [rax],al
    80bc:	02 1b                	add    bl,BYTE PTR [rbx]
    80be:	6b 0c fc 10          	imul   ecx,DWORD PTR [rsp+rdi*8],0x10
    80c2:	00 00                	add    BYTE PTR [rax],al
    80c4:	02 1b                	add    bl,BYTE PTR [rbx]
    80c6:	6b 0c 17 11          	imul   ecx,DWORD PTR [rdi+rdx*1],0x11
    80ca:	00 00                	add    BYTE PTR [rax],al
    80cc:	02 1b                	add    bl,BYTE PTR [rbx]
    80ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    80cf:	0c 32                	or     al,0x32
    80d1:	11 00                	adc    DWORD PTR [rax],eax
    80d3:	00 02                	add    BYTE PTR [rdx],al
    80d5:	1b 6c 0c 52          	sbb    ebp,DWORD PTR [rsp+rcx*1+0x52]
    80d9:	11 00                	adc    DWORD PTR [rax],eax
    80db:	00 02                	add    BYTE PTR [rdx],al
    80dd:	1b 6d 0c             	sbb    ebp,DWORD PTR [rbp+0xc]
    80e0:	72 11                	jb     80f3 <_end+0x20db>
    80e2:	00 00                	add    BYTE PTR [rax],al
    80e4:	02 1b                	add    bl,BYTE PTR [rbx]
    80e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    80e7:	0c 92                	or     al,0x92
    80e9:	11 00                	adc    DWORD PTR [rax],eax
    80eb:	00 02                	add    BYTE PTR [rdx],al
    80ed:	1b 6e 0c             	sbb    ebp,DWORD PTR [rsi+0xc]
    80f0:	b2 11                	mov    dl,0x11
    80f2:	00 00                	add    BYTE PTR [rax],al
    80f4:	02 1b                	add    bl,BYTE PTR [rbx]
    80f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    80f7:	0c cd                	or     al,0xcd
    80f9:	11 00                	adc    DWORD PTR [rax],eax
    80fb:	00 02                	add    BYTE PTR [rdx],al
    80fd:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    8100:	e8 11 00 00 02       	call   2008116 <_end+0x20020fe>
    8105:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    8108:	03 12                	add    edx,DWORD PTR [rdx]
    810a:	00 00                	add    BYTE PTR [rax],al
    810c:	7a 4b                	jp     8159 <_end+0x2141>
    810e:	34 00                	xor    al,0x0
    8110:	00 18                	add    BYTE PTR [rax],bl
    8112:	1c 00                	sbb    al,0x0
    8114:	06                   	(bad)
    8115:	2a 00                	sub    al,BYTE PTR [rax]
    8117:	00 36                	add    BYTE PTR [rsi],dh
    8119:	26 17                	es (bad)
    811b:	00 00                	add    BYTE PTR [rax],al
    811d:	e3 20                	jrcxz  813f <_end+0x2127>
    811f:	00 00                	add    BYTE PTR [rax],al
    8121:	00 36                	add    BYTE PTR [rsi],dh
    8123:	63 18                	movsxd ebx,DWORD PTR [rax]
    8125:	00 00                	add    BYTE PTR [rax],al
    8127:	e3 20                	jrcxz  8149 <_end+0x2131>
    8129:	00 00                	add    BYTE PTR [rax],al
    812b:	04 36                	add    al,0x36
    812d:	ba 23 00 00 d4       	mov    edx,0xd4000023
    8132:	22 00                	and    al,BYTE PTR [rax]
    8134:	00 08                	add    BYTE PTR [rax],cl
    8136:	36 f5                	ss cmc
    8138:	1d 00 00 d4 22       	sbb    eax,0x22d40000
    813d:	00 00                	add    BYTE PTR [rax],al
    813f:	10 00                	adc    BYTE PTR [rax],al
    8141:	35 08 1d 0e 01       	xor    eax,0x10e1d08
    8146:	9a                   	(bad)
    8147:	2f                   	(bad)
    8148:	00 00                	add    BYTE PTR [rax],al
    814a:	4e 2a 00             	rex.WRX sub r8b,BYTE PTR [rax]
    814d:	00 7b 04             	add    BYTE PTR [rbx+0x4],bh
    8150:	1d 11 03 33 2a       	sbb    eax,0x2a330311
    8155:	00 00                	add    BYTE PTR [rax],al
    8157:	59                   	pop    rcx
    8158:	61                   	(bad)
    8159:	12 00                	adc    al,BYTE PTR [rax]
    815b:	00 12                	add    BYTE PTR [rdx],dl
    815d:	13 e3                	adc    esp,ebx
    815f:	20 00                	and    BYTE PTR [rax],al
    8161:	00 59 96             	add    BYTE PTR [rcx-0x6a],bl
    8164:	26 00 00             	es add BYTE PTR [rax],al
    8167:	13 0a                	adc    ecx,DWORD PTR [rdx]
    8169:	52                   	push   rdx
    816a:	24 00                	and    al,0x0
    816c:	00 00                	add    BYTE PTR [rax],al
    816e:	06                   	(bad)
    816f:	ef                   	out    dx,eax
    8170:	24 00                	and    al,0x0
    8172:	00 1d 0f 07 a6 21    	add    BYTE PTR [rip+0x21a6070f],bl        # 21a68887 <_end+0x21a6286f>
    8178:	00 00                	add    BYTE PTR [rax],al
    817a:	00 06                	add    BYTE PTR [rsi],al
    817c:	49 0c 00             	rex.WB or al,0x0
    817f:	00 1d 14 05 13 2a    	add    BYTE PTR [rip+0x2a130514],bl        # 2a138699 <_end+0x2a132681>
    8185:	00 00                	add    BYTE PTR [rax],al
    8187:	04 00                	add    al,0x0
    8189:	08 9c 2f 00 00 1d 15 	or     BYTE PTR [rdi+rbp*1+0x151d0000],bl
    8190:	03 06                	add    eax,DWORD PTR [rsi]
    8192:	2a 00                	sub    al,BYTE PTR [rax]
    8194:	00 1b                	add    BYTE PTR [rbx],bl
    8196:	b4 19                	mov    ah,0x19
    8198:	00 00                	add    BYTE PTR [rax],al
    819a:	10 1e                	adc    BYTE PTR [rsi],bl
    819c:	0a 10                	or     dl,BYTE PTR [rax]
    819e:	82                   	(bad)
    819f:	2a 00                	sub    al,BYTE PTR [rax]
    81a1:	00 06                	add    BYTE PTR [rsi],al
    81a3:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    81a4:	10 00                	adc    BYTE PTR [rax],al
    81a6:	00 1e                	add    BYTE PTR [rsi],bl
    81a8:	0c 0b                	or     al,0xb
    81aa:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    81ab:	22 00                	and    al,BYTE PTR [rax]
    81ad:	00 00                	add    BYTE PTR [rax],al
    81af:	06                   	(bad)
    81b0:	42                   	rex.X
    81b1:	2e 00 00             	cs add BYTE PTR [rax],al
    81b4:	1e                   	(bad)
    81b5:	0d 0f 4e 2a 00       	or     eax,0x2a4e0f
    81ba:	00 08                	add    BYTE PTR [rax],cl
    81bc:	00 08                	add    BYTE PTR [rax],cl
    81be:	c9                   	leave
    81bf:	29 00                	sub    DWORD PTR [rax],eax
    81c1:	00 1e                	add    BYTE PTR [rsi],bl
    81c3:	0e                   	(bad)
    81c4:	03 5a 2a             	add    ebx,DWORD PTR [rdx+0x2a]
    81c7:	00 00                	add    BYTE PTR [rax],al
    81c9:	08 14 2a             	or     BYTE PTR [rdx+rbp*1],dl
    81cc:	00 00                	add    BYTE PTR [rax],al
    81ce:	1f                   	(bad)
    81cf:	05 19 9a 2a 00       	add    eax,0x2a9a19
    81d4:	00 1b                	add    BYTE PTR [rbx],bl
    81d6:	73 14                	jae    81ec <_end+0x21d4>
    81d8:	00 00                	add    BYTE PTR [rax],al
    81da:	d8 20                	fsub   DWORD PTR [rax]
    81dc:	31 08                	xor    DWORD PTR [rax],ecx
    81de:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    81e1:	00 06                	add    BYTE PTR [rsi],al
    81e3:	d3 23                	shl    DWORD PTR [rbx],cl
    81e5:	00 00                	add    BYTE PTR [rax],al
    81e7:	20 33                	and    BYTE PTR [rbx],dh
    81e9:	07                   	(bad)
    81ea:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    81eb:	21 00                	and    DWORD PTR [rax],eax
    81ed:	00 00                	add    BYTE PTR [rax],al
    81ef:	06                   	(bad)
    81f0:	12 18                	adc    bl,BYTE PTR [rax]
    81f2:	00 00                	add    BYTE PTR [rax],al
    81f4:	20 36                	and    BYTE PTR [rsi],dh
    81f6:	09 e2                	or     edx,esp
    81f8:	22 00                	and    al,BYTE PTR [rax]
    81fa:	00 08                	add    BYTE PTR [rax],cl
    81fc:	06                   	(bad)
    81fd:	a9 30 00 00 20       	test   eax,0x20000030
    8202:	37                   	(bad)
    8203:	09 e2                	or     edx,esp
    8205:	22 00                	and    al,BYTE PTR [rax]
    8207:	00 10                	add    BYTE PTR [rax],dl
    8209:	06                   	(bad)
    820a:	ac                   	lods   al,BYTE PTR ds:[rsi]
    820b:	1d 00 00 20 38       	sbb    eax,0x38200000
    8210:	09 e2                	or     edx,esp
    8212:	22 00                	and    al,BYTE PTR [rax]
    8214:	00 18                	add    BYTE PTR [rax],bl
    8216:	06                   	(bad)
    8217:	0a 0f                	or     cl,BYTE PTR [rdi]
    8219:	00 00                	add    BYTE PTR [rax],al
    821b:	20 39                	and    BYTE PTR [rcx],bh
    821d:	09 e2                	or     edx,esp
    821f:	22 00                	and    al,BYTE PTR [rax]
    8221:	00 20                	add    BYTE PTR [rax],ah
    8223:	06                   	(bad)
    8224:	73 32                	jae    8258 <_end+0x2240>
    8226:	00 00                	add    BYTE PTR [rax],al
    8228:	20 3a                	and    BYTE PTR [rdx],bh
    822a:	09 e2                	or     edx,esp
    822c:	22 00                	and    al,BYTE PTR [rax]
    822e:	00 28                	add    BYTE PTR [rax],ch
    8230:	06                   	(bad)
    8231:	2b 22                	sub    esp,DWORD PTR [rdx]
    8233:	00 00                	add    BYTE PTR [rax],al
    8235:	20 3b                	and    BYTE PTR [rbx],bh
    8237:	09 e2                	or     edx,esp
    8239:	22 00                	and    al,BYTE PTR [rax]
    823b:	00 30                	add    BYTE PTR [rax],dh
    823d:	06                   	(bad)
    823e:	03 23                	add    esp,DWORD PTR [rbx]
    8240:	00 00                	add    BYTE PTR [rax],al
    8242:	20 3c 09             	and    BYTE PTR [rcx+rcx*1],bh
    8245:	e2 22                	loop   8269 <_end+0x2251>
    8247:	00 00                	add    BYTE PTR [rax],al
    8249:	38 06                	cmp    BYTE PTR [rsi],al
    824b:	38 10                	cmp    BYTE PTR [rax],dl
    824d:	00 00                	add    BYTE PTR [rax],al
    824f:	20 3d 09 e2 22 00    	and    BYTE PTR [rip+0x22e209],bh        # 23645e <_end+0x230446>
    8255:	00 40 06             	add    BYTE PTR [rax+0x6],al
    8258:	44 10 00             	adc    BYTE PTR [rax],r8b
    825b:	00 20                	add    BYTE PTR [rax],ah
    825d:	40 09 e2             	rex or edx,esp
    8260:	22 00                	and    al,BYTE PTR [rax]
    8262:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    8265:	31 2a                	xor    DWORD PTR [rdx],ebp
    8267:	00 00                	add    BYTE PTR [rax],al
    8269:	20 41 09             	and    BYTE PTR [rcx+0x9],al
    826c:	e2 22                	loop   8290 <_end+0x2278>
    826e:	00 00                	add    BYTE PTR [rax],al
    8270:	50                   	push   rax
    8271:	06                   	(bad)
    8272:	9f                   	lahf
    8273:	0d 00 00 20 42       	or     eax,0x42200000
    8278:	09 e2                	or     edx,esp
    827a:	22 00                	and    al,BYTE PTR [rax]
    827c:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    827f:	6d                   	ins    DWORD PTR es:[rdi],dx
    8280:	19 00                	sbb    DWORD PTR [rax],eax
    8282:	00 20                	add    BYTE PTR [rax],ah
    8284:	44 16                	rex.R (bad)
    8286:	3a 2c 00             	cmp    ch,BYTE PTR [rax+rax*1]
    8289:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    828c:	ab                   	stos   DWORD PTR es:[rdi],eax
    828d:	10 00                	adc    BYTE PTR [rax],al
    828f:	00 20                	add    BYTE PTR [rax],ah
    8291:	46 14 3f             	rex.RX adc al,0x3f
    8294:	2c 00                	sub    al,0x0
    8296:	00 68 06             	add    BYTE PTR [rax+0x6],ch
    8299:	01 31                	add    DWORD PTR [rcx],esi
    829b:	00 00                	add    BYTE PTR [rax],al
    829d:	20 48 07             	and    BYTE PTR [rax+0x7],cl
    82a0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    82a1:	21 00                	and    DWORD PTR [rax],eax
    82a3:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    82a6:	53                   	push   rbx
    82a7:	1d 00 00 20 49       	sbb    eax,0x49200000
    82ac:	07                   	(bad)
    82ad:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    82ae:	21 00                	and    DWORD PTR [rax],eax
    82b0:	00 74 06 b2          	add    BYTE PTR [rsi+rax*1-0x4e],dh
    82b4:	1f                   	(bad)
    82b5:	00 00                	add    BYTE PTR [rax],al
    82b7:	20 4a 0b             	and    BYTE PTR [rdx+0xb],cl
    82ba:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    82bb:	22 00                	and    al,BYTE PTR [rax]
    82bd:	00 78 06             	add    BYTE PTR [rax+0x6],bh
    82c0:	e4 10                	in     al,0x10
    82c2:	00 00                	add    BYTE PTR [rax],al
    82c4:	20 4d 12             	and    BYTE PTR [rbp+0x12],cl
    82c7:	83 21 00             	and    DWORD PTR [rcx],0x0
    82ca:	00 80 06 df 25 00    	add    BYTE PTR [rax+0x25df06],al
    82d0:	00 20                	add    BYTE PTR [rax],ah
    82d2:	4e 0f 98 21          	rex.WRX sets BYTE PTR [rcx]
    82d6:	00 00                	add    BYTE PTR [rax],al
    82d8:	82                   	(bad)
    82d9:	06                   	(bad)
    82da:	4b 2a 00             	rex.WXB sub al,BYTE PTR [r8]
    82dd:	00 20                	add    BYTE PTR [rax],ah
    82df:	4f 08 44 2c 00       	rex.WRXB or BYTE PTR [r12+r13*1+0x0],r8b
    82e4:	00 83 06 39 0f 00    	add    BYTE PTR [rbx+0xf3906],al
    82ea:	00 20                	add    BYTE PTR [rax],ah
    82ec:	51                   	push   rcx
    82ed:	0f 54 2c 00          	andps  xmm5,XMMWORD PTR [rax+rax*1]
    82f1:	00 88 06 b6 1f 00    	add    BYTE PTR [rax+0x1fb606],cl
    82f7:	00 20                	add    BYTE PTR [rax],ah
    82f9:	59                   	pop    rcx
    82fa:	0d b0 22 00 00       	or     eax,0x22b0
    82ff:	90                   	nop
    8300:	06                   	(bad)
    8301:	f4                   	hlt
    8302:	27                   	(bad)
    8303:	00 00                	add    BYTE PTR [rax],al
    8305:	20 5b 17             	and    BYTE PTR [rbx+0x17],bl
    8308:	5e                   	pop    rsi
    8309:	2c 00                	sub    al,0x0
    830b:	00 98 06 c1 14 00    	add    BYTE PTR [rax+0x14c106],bl
    8311:	00 20                	add    BYTE PTR [rax],ah
    8313:	5c                   	pop    rsp
    8314:	19 68 2c             	sbb    DWORD PTR [rax+0x2c],ebp
    8317:	00 00                	add    BYTE PTR [rax],al
    8319:	a0 06 6f 21 00 00 20 	movabs al,ds:0x145d200000216f06
    8320:	5d 14 
    8322:	3f                   	(bad)
    8323:	2c 00                	sub    al,0x0
    8325:	00 a8 06 d5 28 00    	add    BYTE PTR [rax+0x28d506],ch
    832b:	00 20                	add    BYTE PTR [rax],ah
    832d:	5e                   	pop    rsi
    832e:	09 d4                	or     esp,edx
    8330:	22 00                	and    al,BYTE PTR [rax]
    8332:	00 b0 06 3f 23 00    	add    BYTE PTR [rax+0x233f06],dh
    8338:	00 20                	add    BYTE PTR [rax],ah
    833a:	5f                   	pop    rdi
    833b:	0a 2e                	or     ch,BYTE PTR [rsi]
    833d:	23 00                	and    eax,DWORD PTR [rax]
    833f:	00 b8 06 48 0a 00    	add    BYTE PTR [rax+0xa4806],bh
    8345:	00 20                	add    BYTE PTR [rax],ah
    8347:	60                   	(bad)
    8348:	07                   	(bad)
    8349:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    834a:	21 00                	and    DWORD PTR [rax],eax
    834c:	00 c0                	add    al,al
    834e:	06                   	(bad)
    834f:	41 1e                	rex.B (bad)
    8351:	00 00                	add    BYTE PTR [rax],al
    8353:	20 62 08             	and    BYTE PTR [rdx+0x8],ah
    8356:	6d                   	ins    DWORD PTR es:[rdi],dx
    8357:	2c 00                	sub    al,0x0
    8359:	00 c4                	add    ah,al
    835b:	00 08                	add    BYTE PTR [rax],cl
    835d:	77 14                	ja     8373 <_end+0x235b>
    835f:	00 00                	add    BYTE PTR [rax],al
    8361:	21 07                	and    DWORD PTR [rdi],eax
    8363:	19 9a 2a 00 00 7c    	sbb    DWORD PTR [rdx+0x7c00002a],ebx
    8369:	49 17                	rex.WB (bad)
    836b:	00 00                	add    BYTE PTR [rax],al
    836d:	20 2b                	and    BYTE PTR [rbx],ch
    836f:	0e                   	(bad)
    8370:	47 27                	rex.RXB (bad)
    8372:	13 00                	adc    eax,DWORD PTR [rax]
    8374:	00 0d 35 2c 00 00    	add    BYTE PTR [rip+0x2c35],cl        # afaf <_end+0x4f97>
    837a:	0d 9a 2a 00 00       	or     eax,0x2a9a
    837f:	25 e7 22 00 00       	and    eax,0x22e7
    8384:	54                   	push   rsp
    8385:	2c 00                	sub    al,0x0
    8387:	00 26                	add    BYTE PTR [rsi],ah
    8389:	8a 21                	mov    ah,BYTE PTR [rcx]
    838b:	00 00                	add    BYTE PTR [rax],al
    838d:	00 00                	add    BYTE PTR [rax],al
    838f:	0d 2d 2c 00 00       	or     eax,0x2c2d
    8394:	47 f1                	rex.RXB int1
    8396:	27                   	(bad)
    8397:	00 00                	add    BYTE PTR [rax],al
    8399:	0d 59 2c 00 00       	or     eax,0x2c59
    839e:	47 be 14 00 00 0d    	rex.RXB mov r14d,0xd000014
    83a4:	63 2c 00             	movsxd ebp,DWORD PTR [rax+rax*1]
    83a7:	00 25 e7 22 00 00    	add    BYTE PTR [rip+0x22e7],ah        # a694 <_end+0x467c>
    83ad:	7d 2c                	jge    83db <_end+0x23c3>
    83af:	00 00                	add    BYTE PTR [rax],al
    83b1:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    83b4:	00 00                	add    BYTE PTR [rax],al
    83b6:	13 00                	adc    eax,DWORD PTR [rax]
    83b8:	08 b7 19 00 00 22    	or     BYTE PTR [rdi+0x22000019],dh
    83be:	55                   	push   rbp
    83bf:	12 82 2a 00 00 13    	adc    al,BYTE PTR [rdx+0x1300002a]
    83c5:	7d 2c                	jge    83f3 <_end+0x23db>
    83c7:	00 00                	add    BYTE PTR [rax],al
    83c9:	0d 21 2c 00 00       	or     eax,0x2c21
    83ce:	57                   	push   rdi
    83cf:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    83d2:	00 08                	add    BYTE PTR [rax],cl
    83d4:	c1 11 00             	rcl    DWORD PTR [rcx],0x0
    83d7:	00 23                	add    BYTE PTR [rbx],ah
    83d9:	18 13                	sbb    BYTE PTR [rbx],dl
    83db:	d8 21                	fsub   DWORD PTR [rcx]
    83dd:	00 00                	add    BYTE PTR [rax],al
    83df:	08 56 17             	or     BYTE PTR [rsi+0x17],dl
    83e2:	00 00                	add    BYTE PTR [rax],al
    83e4:	23 19                	and    ebx,DWORD PTR [rcx]
    83e6:	14 f0                	adc    al,0xf0
    83e8:	21 00                	and    DWORD PTR [rax],eax
    83ea:	00 08                	add    BYTE PTR [rax],cl
    83ec:	ab                   	stos   DWORD PTR es:[rdi],eax
    83ed:	00 00                	add    BYTE PTR [rax],al
    83ef:	00 23                	add    BYTE PTR [rbx],ah
    83f1:	1a 14 08             	sbb    dl,BYTE PTR [rax+rcx*1]
    83f4:	22 00                	and    al,BYTE PTR [rax]
    83f6:	00 13                	add    BYTE PTR [rbx],dl
    83f8:	b0 2c                	mov    al,0x2c
    83fa:	00 00                	add    BYTE PTR [rax],al
    83fc:	08 87 05 00 00 23    	or     BYTE PTR [rdi+0x23000005],al
    8402:	1b 14 20             	sbb    edx,DWORD PTR [rax+riz*1]
    8405:	22 00                	and    al,BYTE PTR [rax]
    8407:	00 08                	add    BYTE PTR [rax],cl
    8409:	f9                   	stc
    840a:	24 00                	and    al,0x0
    840c:	00 24 19             	add    BYTE PTR [rcx+rbx*1],ah
    840f:	18 2c 22             	sbb    BYTE PTR [rdx+riz*1],ch
    8412:	00 00                	add    BYTE PTR [rax],al
    8414:	08 c7                	or     bh,al
    8416:	28 00                	sub    BYTE PTR [rax],al
    8418:	00 24 1a             	add    BYTE PTR [rdx+rbx*1],ah
    841b:	19 44 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],eax
    841f:	00 08                	add    BYTE PTR [rax],cl
    8421:	ed                   	in     eax,dx
    8422:	31 00                	xor    DWORD PTR [rax],eax
    8424:	00 24 1b             	add    BYTE PTR [rbx+rbx*1],ah
    8427:	19 5c 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],ebx
    842b:	00 08                	add    BYTE PTR [rax],cl
    842d:	b9 2e 00 00 24       	mov    ecx,0x2400002e
    8432:	1c 19                	sbb    al,0x19
    8434:	74 22                	je     8458 <_end+0x2440>
    8436:	00 00                	add    BYTE PTR [rax],al
    8438:	08 91 0d 00 00 24    	or     BYTE PTR [rcx+0x2400000d],dl
    843e:	1f                   	(bad)
    843f:	19 38                	sbb    DWORD PTR [rax],edi
    8441:	22 00                	and    al,BYTE PTR [rax]
    8443:	00 08                	add    BYTE PTR [rax],cl
    8445:	38 15 00 00 24 20    	cmp    BYTE PTR [rip+0x20240000],dl        # 2024844b <_end+0x20242433>
    844b:	1a 50 22             	sbb    dl,BYTE PTR [rax+0x22]
    844e:	00 00                	add    BYTE PTR [rax],al
    8450:	08 87 1d 00 00 24    	or     BYTE PTR [rdi+0x2400001d],al
    8456:	21 1a                	and    DWORD PTR [rdx],ebx
    8458:	68 22 00 00 08       	push   0x8000022
    845d:	c0 19 00             	rcr    BYTE PTR [rcx],0x0
    8460:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    8463:	1a 80 22 00 00 08    	sbb    al,BYTE PTR [rax+0x8000022]
    8469:	b4 2d                	mov    ah,0x2d
    846b:	00 00                	add    BYTE PTR [rax],al
    846d:	25 2f 16 98 21       	and    eax,0x2198162f
    8472:	00 00                	add    BYTE PTR [rax],al
    8474:	08 3d 31 00 00 25    	or     BYTE PTR [rip+0x25000031],bh        # 250084ab <_end+0x25002493>
    847a:	31 13                	xor    DWORD PTR [rbx],edx
    847c:	b2 21                	mov    dl,0x21
    847e:	00 00                	add    BYTE PTR [rax],al
    8480:	08 f1                	or     cl,dh
    8482:	10 00                	adc    BYTE PTR [rax],al
    8484:	00 25 32 13 b2 21    	add    BYTE PTR [rip+0x21b21332],ah        # 21b297bc <_end+0x21b237a4>
    848a:	00 00                	add    BYTE PTR [rax],al
    848c:	08 82 0d 00 00 25    	or     BYTE PTR [rdx+0x2500000d],al
    8492:	33 13                	xor    edx,DWORD PTR [rbx]
    8494:	b2 21                	mov    dl,0x21
    8496:	00 00                	add    BYTE PTR [rax],al
    8498:	08 b3 2d 00 00 25    	or     BYTE PTR [rbx+0x2500002d],dh
    849e:	3c 18                	cmp    al,0x18
    84a0:	7c 21                	jl     84c3 <_end+0x24ab>
    84a2:	00 00                	add    BYTE PTR [rax],al
    84a4:	08 3c 31             	or     BYTE PTR [rcx+rsi*1],bh
    84a7:	00 00                	add    BYTE PTR [rax],al
    84a9:	25 3e 1b 8a 21       	and    eax,0x218a1b3e
    84ae:	00 00                	add    BYTE PTR [rax],al
    84b0:	08 f0                	or     al,dh
    84b2:	10 00                	adc    BYTE PTR [rax],al
    84b4:	00 25 3f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3f],ah        # 218a9ff9 <_end+0x218a3fe1>
    84ba:	00 00                	add    BYTE PTR [rax],al
    84bc:	08 81 0d 00 00 25    	or     BYTE PTR [rcx+0x2500000d],al
    84c2:	40 1b 8a 21 00 00 08 	rex sbb ecx,DWORD PTR [rdx+0x8000021]
    84c9:	d3 1e                	rcr    DWORD PTR [rsi],cl
    84cb:	00 00                	add    BYTE PTR [rax],al
    84cd:	25 4c 13 b2 21       	and    eax,0x21b2134c
    84d2:	00 00                	add    BYTE PTR [rax],al
    84d4:	08 d2                	or     dl,dl
    84d6:	1e                   	(bad)
    84d7:	00 00                	add    BYTE PTR [rax],al
    84d9:	25 4f 1b 8a 21       	and    eax,0x218a1b4f
    84de:	00 00                	add    BYTE PTR [rax],al
    84e0:	08 fa                	or     dl,bh
    84e2:	22 00                	and    al,BYTE PTR [rax]
    84e4:	00 25 5a 15 8c 22    	add    BYTE PTR [rip+0x228c155a],ah        # 228c9a44 <_end+0x228c3a2c>
    84ea:	00 00                	add    BYTE PTR [rax],al
    84ec:	13 a5 2d 00 00 08    	adc    esp,DWORD PTR [rbp+0x800002d]
    84f2:	13 2f                	adc    ebp,DWORD PTR [rdi]
    84f4:	00 00                	add    BYTE PTR [rax],al
    84f6:	25 5b 16 98 22       	and    eax,0x2298165b
    84fb:	00 00                	add    BYTE PTR [rax],al
    84fd:	0e                   	(bad)
    84fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    84ff:	00 00                	add    BYTE PTR [rax],al
    8501:	00 16                	add    BYTE PTR [rsi],dl
    8503:	de 02                	fiadd  WORD PTR [rdx]
    8505:	0c a6                	or     al,0xa6
    8507:	21 00                	and    DWORD PTR [rax],eax
    8509:	00 d9                	add    cl,bl
    850b:	2d 00 00 01 d9       	sub    eax,0xd9010000
    8510:	2d 00 00 00 0d       	sub    eax,0xd000000
    8515:	de 2d 00 00 7d 04    	fisubr WORD PTR [rip+0x47d0000]        # 47d851b <_end+0x47d2503>
    851b:	33 00                	xor    eax,DWORD PTR [rax]
    851d:	00 00                	add    BYTE PTR [rax],al
    851f:	16                   	(bad)
    8520:	e3 02                	jrcxz  8524 <_end+0x250c>
    8522:	12 33                	adc    dh,BYTE PTR [rbx]
    8524:	00 00                	add    BYTE PTR [rax],al
    8526:	00 a6 21 00 00 fa    	add    BYTE PTR [rsi-0x5ffffdf],ah
    852c:	2d 00 00 01 d9       	sub    eax,0xd9010000
    8531:	2d 00 00 00 0c       	sub    eax,0xc000000
    8536:	cd 01                	int    0x1
    8538:	00 00                	add    BYTE PTR [rax],al
    853a:	26 19 01             	es sbb DWORD PTR [rcx],eax
    853d:	2e 00 00             	cs add BYTE PTR [rax],al
    8540:	00 10                	add    BYTE PTR [rax],dl
    8542:	2e 00 00             	cs add BYTE PTR [rax],al
    8545:	01 d3                	add    ebx,edx
    8547:	23 00                	and    eax,DWORD PTR [rax]
    8549:	00 00                	add    BYTE PTR [rax],al
    854b:	0e                   	(bad)
    854c:	d2 01                	rol    BYTE PTR [rcx],cl
    854e:	00 00                	add    BYTE PTR [rax],al
    8550:	16                   	(bad)
    8551:	e1 01                	loope  8554 <_end+0x253c>
    8553:	01 a6 21 00 00 27    	add    DWORD PTR [rsi+0x27000021],esp
    8559:	2e 00 00             	cs add BYTE PTR [rax],al
    855c:	01 d3                	add    ebx,edx
    855e:	23 00                	and    eax,DWORD PTR [rax]
    8560:	00 00                	add    BYTE PTR [rax],al
    8562:	0e                   	(bad)
    8563:	dc 01                	fadd   QWORD PTR [rcx]
    8565:	00 00                	add    BYTE PTR [rax],al
    8567:	16                   	(bad)
    8568:	e6 01                	out    0x1,al
    856a:	01 b2 21 00 00 3e    	add    DWORD PTR [rdx+0x3e000021],esi
    8570:	2e 00 00             	cs add BYTE PTR [rax],al
    8573:	01 d3                	add    ebx,edx
    8575:	23 00                	and    eax,DWORD PTR [rax]
    8577:	00 00                	add    BYTE PTR [rax],al
    8579:	0c 65                	or     al,0x65
    857b:	00 00                	add    BYTE PTR [rax],al
    857d:	00 27                	add    BYTE PTR [rdi],ah
    857f:	14 01                	adc    al,0x1
    8581:	d4                   	(bad)
    8582:	22 00                	and    al,BYTE PTR [rax]
    8584:	00 68 2e             	add    BYTE PTR [rax+0x2e],ch
    8587:	00 00                	add    BYTE PTR [rax],al
    8589:	01 88 24 00 00 01    	add    DWORD PTR [rax+0x1000024],ecx
    858f:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    8592:	00 01                	add    BYTE PTR [rcx],al
    8594:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8597:	00 01                	add    BYTE PTR [rcx],al
    8599:	2e 23 00             	cs and eax,DWORD PTR [rax]
    859c:	00 01                	add    BYTE PTR [rcx],al
    859e:	62 24 00             	(bad)
    85a1:	00 00                	add    BYTE PTR [rax],al
    85a3:	7e 64                	jle    8609 <_end+0x25f1>
    85a5:	69 76 00 16 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e016
    85ac:	61                   	(bad)
    85ad:	23 00                	and    eax,DWORD PTR [rax]
    85af:	00 84 2e 00 00 01 a6 	add    BYTE PTR [rsi+rbp*1-0x59ff0000],al
    85b6:	21 00                	and    DWORD PTR [rax],eax
    85b8:	00 01                	add    BYTE PTR [rcx],al
    85ba:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    85bb:	21 00                	and    DWORD PTR [rax],eax
    85bd:	00 00                	add    BYTE PTR [rax],al
    85bf:	0e                   	(bad)
    85c0:	bd 00 00 00 16       	mov    ebp,0x16000000
    85c5:	05 03 0e e2 22       	add    eax,0x22e20e03
    85ca:	00 00                	add    BYTE PTR [rax],al
    85cc:	9b                   	fwait
    85cd:	2e 00 00             	cs add BYTE PTR [rax],al
    85d0:	01 d3                	add    ebx,edx
    85d2:	23 00                	and    eax,DWORD PTR [rax]
    85d4:	00 00                	add    BYTE PTR [rax],al
    85d6:	0e                   	(bad)
    85d7:	c3                   	ret
    85d8:	02 00                	add    al,BYTE PTR [rax]
    85da:	00 16                	add    BYTE PTR [rsi],dl
    85dc:	e2 03                	loop   85e1 <_end+0x25c9>
    85de:	0f 94 23             	sete   BYTE PTR [rbx]
    85e1:	00 00                	add    BYTE PTR [rax],al
    85e3:	b7 2e                	mov    bh,0x2e
    85e5:	00 00                	add    BYTE PTR [rax],al
    85e7:	01 b2 21 00 00 01    	add    DWORD PTR [rdx+0x1000021],esi
    85ed:	b2 21                	mov    dl,0x21
    85ef:	00 00                	add    BYTE PTR [rax],al
    85f1:	00 0e                	add    BYTE PTR [rsi],cl
    85f3:	33 02                	xor    eax,DWORD PTR [rdx]
    85f5:	00 00                	add    BYTE PTR [rax],al
    85f7:	16                   	(bad)
    85f8:	26 04 0c             	es add al,0xc
    85fb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    85fc:	21 00                	and    DWORD PTR [rax],eax
    85fe:	00 d3                	add    bl,dl
    8600:	2e 00 00             	cs add BYTE PTR [rax],al
    8603:	01 d3                	add    ebx,edx
    8605:	23 00                	and    eax,DWORD PTR [rax]
    8607:	00 01                	add    BYTE PTR [rcx],al
    8609:	2e 23 00             	cs and eax,DWORD PTR [rax]
    860c:	00 00                	add    BYTE PTR [rax],al
    860e:	0c 39                	or     al,0x39
    8610:	02 00                	add    al,BYTE PTR [rax]
    8612:	00 28                	add    BYTE PTR [rax],ch
    8614:	75 01                	jne    8617 <_end+0x25ff>
    8616:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8619:	00 f3                	add    bl,dh
    861b:	2e 00 00             	cs add BYTE PTR [rax],al
    861e:	01 f3                	add    ebx,esi
    8620:	2e 00 00             	cs add BYTE PTR [rax],al
    8623:	01 d3                	add    ebx,edx
    8625:	23 00                	and    eax,DWORD PTR [rax]
    8627:	00 01                	add    BYTE PTR [rcx],al
    8629:	2e 23 00             	cs and eax,DWORD PTR [rax]
    862c:	00 00                	add    BYTE PTR [rax],al
    862e:	0d 9c 24 00 00       	or     eax,0x249c
    8633:	0e                   	(bad)
    8634:	d9 00                	fld    DWORD PTR [rax]
    8636:	00 00                	add    BYTE PTR [rax],al
    8638:	16                   	(bad)
    8639:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    863c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    863d:	21 00                	and    DWORD PTR [rax],eax
    863f:	00 19                	add    BYTE PTR [rcx],bl
    8641:	2f                   	(bad)
    8642:	00 00                	add    BYTE PTR [rax],al
    8644:	01 f3                	add    ebx,esi
    8646:	2e 00 00             	cs add BYTE PTR [rax],al
    8649:	01 d3                	add    ebx,edx
    864b:	23 00                	and    eax,DWORD PTR [rax]
    864d:	00 01                	add    BYTE PTR [rcx],al
    864f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8652:	00 00                	add    BYTE PTR [rax],al
    8654:	28 25 00 00 00 16    	sub    BYTE PTR [rip+0x16000000],ah        # 1600865a <_end+0x16002642>
    865a:	ca 03 3a             	retf   0x3a03
    865d:	2f                   	(bad)
    865e:	00 00                	add    BYTE PTR [rax],al
    8660:	01 d4                	add    esp,edx
    8662:	22 00                	and    al,BYTE PTR [rax]
    8664:	00 01                	add    BYTE PTR [rcx],al
    8666:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8669:	00 01                	add    BYTE PTR [rcx],al
    866b:	2e 23 00             	cs and eax,DWORD PTR [rax]
    866e:	00 01                	add    BYTE PTR [rcx],al
    8670:	62 24 00             	(bad)
    8673:	00 00                	add    BYTE PTR [rax],al
    8675:	7f 36                	jg     86ad <_end+0x2695>
    8677:	00 00                	add    BYTE PTR [rax],al
    8679:	00 16                	add    BYTE PTR [rsi],dl
    867b:	fa                   	cli
    867c:	02 0d 4d 2f 00 00    	add    cl,BYTE PTR [rip+0x2f4d]        # b5cf <_end+0x55b7>
    8682:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8688:	5a                   	pop    rdx
    8689:	ec                   	in     al,dx
    868a:	02 00                	add    al,BYTE PTR [rax]
    868c:	00 16                	add    BYTE PTR [rsi],dl
    868e:	3d 02 0c a6 21       	cmp    eax,0x21a60c02
    8693:	00 00                	add    BYTE PTR [rax],al
    8695:	28 eb                	sub    bl,ch
    8697:	02 00                	add    al,BYTE PTR [rax]
    8699:	00 16                	add    BYTE PTR [rsi],dl
    869b:	3f                   	(bad)
    869c:	02 6c 2f 00          	add    ch,BYTE PTR [rdi+rbp*1+0x0]
    86a0:	00 01                	add    BYTE PTR [rcx],al
    86a2:	e3 20                	jrcxz  86c4 <_end+0x26ac>
    86a4:	00 00                	add    BYTE PTR [rax],al
    86a6:	00 0c 05 01 00 00 16 	add    BYTE PTR [rax*1+0x16000001],cl
    86ad:	76 0f                	jbe    86be <_end+0x26a6>
    86af:	2e 00 00             	cs add BYTE PTR [rax],al
    86b2:	00 87 2f 00 00 01    	add    BYTE PTR [rdi+0x100002f],al
    86b8:	d3 23                	shl    DWORD PTR [rbx],cl
    86ba:	00 00                	add    BYTE PTR [rax],al
    86bc:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    86c2:	0d e2 22 00 00       	or     eax,0x22e2
    86c7:	0f 54 00             	andps  xmm0,XMMWORD PTR [rax]
    86ca:	00 00                	add    BYTE PTR [rax],al
    86cc:	16                   	(bad)
    86cd:	d7                   	xlat   BYTE PTR ds:[rbx]
    86ce:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    86d1:	00 00                	add    BYTE PTR [rax],al
    86d3:	b2 21                	mov    dl,0x21
    86d5:	00 00                	add    BYTE PTR [rax],al
    86d7:	b0 2f                	mov    al,0x2f
    86d9:	00 00                	add    BYTE PTR [rax],al
    86db:	01 d3                	add    ebx,edx
    86dd:	23 00                	and    eax,DWORD PTR [rax]
    86df:	00 01                	add    BYTE PTR [rcx],al
    86e1:	87 2f                	xchg   DWORD PTR [rdi],ebp
    86e3:	00 00                	add    BYTE PTR [rax],al
    86e5:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    86eb:	0f 25                	(bad)
    86ed:	02 00                	add    al,BYTE PTR [rax]
    86ef:	00 16                	add    BYTE PTR [rsi],dl
    86f1:	db 1a                	fistp  DWORD PTR [rdx]
    86f3:	1c 02                	sbb    al,0x2
    86f5:	00 00                	add    BYTE PTR [rax],al
    86f7:	8a 21                	mov    ah,BYTE PTR [rcx]
    86f9:	00 00                	add    BYTE PTR [rax],al
    86fb:	d4                   	(bad)
    86fc:	2f                   	(bad)
    86fd:	00 00                	add    BYTE PTR [rax],al
    86ff:	01 d3                	add    ebx,edx
    8701:	23 00                	and    eax,DWORD PTR [rax]
    8703:	00 01                	add    BYTE PTR [rcx],al
    8705:	87 2f                	xchg   DWORD PTR [rdi],ebp
    8707:	00 00                	add    BYTE PTR [rax],al
    8709:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    870f:	0e                   	(bad)
    8710:	d8 25 00 00 16 9b    	fsub   DWORD PTR [rip+0xffffffff9b160000]        # ffffffff9b168716 <_end+0xffffffff9b1626fe>
    8716:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    8719:	21 00                	and    DWORD PTR [rax],eax
    871b:	00 eb                	add    bl,ch
    871d:	2f                   	(bad)
    871e:	00 00                	add    BYTE PTR [rax],al
    8720:	01 d3                	add    ebx,edx
    8722:	23 00                	and    eax,DWORD PTR [rax]
    8724:	00 00                	add    BYTE PTR [rax],al
    8726:	0c e1                	or     al,0xe1
    8728:	01 00                	add    DWORD PTR [rax],eax
    872a:	00 28                	add    BYTE PTR [rax],ch
    872c:	8f 01                	pop    QWORD PTR [rcx]
    872e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8731:	00 0b                	add    BYTE PTR [rbx],cl
    8733:	30 00                	xor    BYTE PTR [rax],al
    8735:	00 01                	add    BYTE PTR [rcx],al
    8737:	e2 22                	loop   875b <_end+0x2743>
    8739:	00 00                	add    BYTE PTR [rax],al
    873b:	01 0b                	add    DWORD PTR [rbx],ecx
    873d:	30 00                	xor    BYTE PTR [rax],al
    873f:	00 01                	add    BYTE PTR [rcx],al
    8741:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8744:	00 00                	add    BYTE PTR [rax],al
    8746:	0d a3 24 00 00       	or     eax,0x24a3
    874b:	0c 42                	or     al,0x42
    874d:	02 00                	add    al,BYTE PTR [rax]
    874f:	00 28                	add    BYTE PTR [rax],ch
    8751:	4f 01 a6 21 00 00 2b 	rex.WRXB add QWORD PTR [r14+0x2b000021],r12
    8758:	30 00                	xor    BYTE PTR [rax],al
    875a:	00 01                	add    BYTE PTR [rcx],al
    875c:	e2 22                	loop   8780 <_end+0x2768>
    875e:	00 00                	add    BYTE PTR [rax],al
    8760:	01 9c 24 00 00 00 0e 	add    DWORD PTR [rsp+0xe000000],ebx
    8767:	c2 02 00             	ret    0x2
    876a:	00 16                	add    BYTE PTR [rsi],dl
    876c:	e6 03                	out    0x3,al
    876e:	1e                   	(bad)
    876f:	c7                   	(bad)
    8770:	23 00                	and    eax,DWORD PTR [rax]
    8772:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    8775:	00 00                	add    BYTE PTR [rax],al
    8777:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    877d:	be 21 00 00 00       	mov    esi,0x21
    8782:	0e                   	(bad)
    8783:	2d 02 00 00 16       	sub    eax,0x16000002
    8788:	ed                   	in     eax,dx
    8789:	01 01                	add    DWORD PTR [rcx],eax
    878b:	be 21 00 00 5e       	mov    esi,0x5e000021
    8790:	30 00                	xor    BYTE PTR [rax],al
    8792:	00 01                	add    BYTE PTR [rcx],al
    8794:	d3 23                	shl    DWORD PTR [rbx],cl
    8796:	00 00                	add    BYTE PTR [rax],al
    8798:	00 0f                	add    BYTE PTR [rdi],cl
    879a:	88 00                	mov    BYTE PTR [rax],al
    879c:	00 00                	add    BYTE PTR [rax],al
    879e:	16                   	(bad)
    879f:	ee                   	out    dx,al
    87a0:	16                   	(bad)
    87a1:	7f 00                	jg     87a3 <_end+0x278b>
    87a3:	00 00                	add    BYTE PTR [rax],al
    87a5:	be 21 00 00 82       	mov    esi,0x82000021
    87aa:	30 00                	xor    BYTE PTR [rax],al
    87ac:	00 01                	add    BYTE PTR [rcx],al
    87ae:	d3 23                	shl    DWORD PTR [rbx],cl
    87b0:	00 00                	add    BYTE PTR [rax],al
    87b2:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    87b8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    87b9:	21 00                	and    DWORD PTR [rax],eax
    87bb:	00 00                	add    BYTE PTR [rax],al
    87bd:	0f b9 02             	ud1    eax,DWORD PTR [rdx]
    87c0:	00 00                	add    BYTE PTR [rax],al
    87c2:	16                   	(bad)
    87c3:	f3 1f                	repz (bad)
    87c5:	b0 02                	mov    al,0x2
    87c7:	00 00                	add    BYTE PTR [rax],al
    87c9:	91                   	xchg   ecx,eax
    87ca:	21 00                	and    DWORD PTR [rax],eax
    87cc:	00 a6 30 00 00 01    	add    BYTE PTR [rsi+0x1000030],ah
    87d2:	d3 23                	shl    DWORD PTR [rbx],cl
    87d4:	00 00                	add    BYTE PTR [rax],al
    87d6:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    87dc:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    87dd:	21 00                	and    DWORD PTR [rax],eax
    87df:	00 00                	add    BYTE PTR [rax],al
    87e1:	0c 97                	or     al,0x97
    87e3:	02 00                	add    al,BYTE PTR [rax]
    87e5:	00 16                	add    BYTE PTR [rsi],dl
    87e7:	7c 0e                	jl     87f7 <_end+0x27df>
    87e9:	35 00 00 00 c1       	xor    eax,0xc1000000
    87ee:	30 00                	xor    BYTE PTR [rax],al
    87f0:	00 01                	add    BYTE PTR [rcx],al
    87f2:	d3 23                	shl    DWORD PTR [rbx],cl
    87f4:	00 00                	add    BYTE PTR [rax],al
    87f6:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    87fc:	0c 2b                	or     al,0x2b
    87fe:	00 00                	add    BYTE PTR [rax],al
    8800:	00 16                	add    BYTE PTR [rsi],dl
    8802:	7f 14                	jg     8818 <_end+0x2800>
    8804:	c5 21 00             	(bad)
    8807:	00 dc                	add    ah,bl
    8809:	30 00                	xor    BYTE PTR [rax],al
    880b:	00 01                	add    BYTE PTR [rcx],al
    880d:	d3 23                	shl    DWORD PTR [rbx],cl
    880f:	00 00                	add    BYTE PTR [rax],al
    8811:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8817:	02 29                	add    ch,BYTE PTR [rcx]
    8819:	27                   	(bad)
    881a:	0c c2                	or     al,0xc2
    881c:	2d 00 00 02 29       	sub    eax,0x29020000
    8821:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    8823:	df 2d 00 00 02 29    	fild   QWORD PTR [rip+0x29020000]        # 29028829 <_end+0x29022811>
    8829:	2e 0e                	cs (bad)
    882b:	3a 2f                	cmp    ch,BYTE PTR [rdi]
    882d:	00 00                	add    BYTE PTR [rax],al
    882f:	02 29                	add    ch,BYTE PTR [rcx]
    8831:	36 0c 61             	ss or  al,0x61
    8834:	23 00                	and    eax,DWORD PTR [rax]
    8836:	00 02                	add    BYTE PTR [rdx],al
    8838:	29 37                	sub    DWORD PTR [rdi],esi
    883a:	0c 94                	or     al,0x94
    883c:	23 00                	and    eax,DWORD PTR [rax]
    883e:	00 02                	add    BYTE PTR [rdx],al
    8840:	29 39                	sub    DWORD PTR [rcx],edi
    8842:	0c 71                	or     al,0x71
    8844:	00 00                	add    BYTE PTR [rax],al
    8846:	00 02                	add    BYTE PTR [rdx],al
    8848:	29 39                	sub    DWORD PTR [rcx],edi
    884a:	0c 8a                	or     al,0x8a
    884c:	00 00                	add    BYTE PTR [rax],al
    884e:	00 02                	add    BYTE PTR [rdx],al
    8850:	29 39                	sub    DWORD PTR [rcx],edi
    8852:	0c a3                	or     al,0xa3
    8854:	00 00                	add    BYTE PTR [rax],al
    8856:	00 02                	add    BYTE PTR [rdx],al
    8858:	29 39                	sub    DWORD PTR [rcx],edi
    885a:	0c bc                	or     al,0xbc
    885c:	00 00                	add    BYTE PTR [rax],al
    885e:	00 02                	add    BYTE PTR [rdx],al
    8860:	29 39                	sub    DWORD PTR [rcx],edi
    8862:	0c d5                	or     al,0xd5
    8864:	00 00                	add    BYTE PTR [rax],al
    8866:	00 02                	add    BYTE PTR [rdx],al
    8868:	29 39                	sub    DWORD PTR [rcx],edi
    886a:	0c ee                	or     al,0xee
    886c:	00 00                	add    BYTE PTR [rax],al
    886e:	00 02                	add    BYTE PTR [rdx],al
    8870:	29 39                	sub    DWORD PTR [rcx],edi
    8872:	0c 07                	or     al,0x7
    8874:	01 00                	add    DWORD PTR [rax],eax
    8876:	00 02                	add    BYTE PTR [rdx],al
    8878:	29 3a                	sub    DWORD PTR [rdx],edi
    887a:	0c fa                	or     al,0xfa
    887c:	2d 00 00 02 29       	sub    eax,0x29020000
    8881:	3b 0c 10             	cmp    ecx,DWORD PTR [rax+rdx*1]
    8884:	2e 00 00             	cs add BYTE PTR [rax],al
    8887:	02 29                	add    ch,BYTE PTR [rcx]
    8889:	3c 0c                	cmp    al,0xc
    888b:	27                   	(bad)
    888c:	2e 00 00             	cs add BYTE PTR [rax],al
    888f:	02 29                	add    ch,BYTE PTR [rcx]
    8891:	3d 0c 3e 2e 00       	cmp    eax,0x2e3e0c
    8896:	00 02                	add    BYTE PTR [rdx],al
    8898:	29 3f                	sub    DWORD PTR [rdi],edi
    889a:	0c 43                	or     al,0x43
    889c:	21 00                	and    DWORD PTR [rax],eax
    889e:	00 02                	add    BYTE PTR [rdx],al
    88a0:	29 3f                	sub    DWORD PTR [rdi],edi
    88a2:	0c 1f                	or     al,0x1f
    88a4:	13 00                	adc    eax,DWORD PTR [rax]
    88a6:	00 02                	add    BYTE PTR [rdx],al
    88a8:	29 3f                	sub    DWORD PTR [rdi],edi
    88aa:	0c 68                	or     al,0x68
    88ac:	2e 00 00             	cs add BYTE PTR [rax],al
    88af:	02 29                	add    ch,BYTE PTR [rcx]
    88b1:	41 0c 84             	rex.B or al,0x84
    88b4:	2e 00 00             	cs add BYTE PTR [rax],al
    88b7:	02 29                	add    ch,BYTE PTR [rcx]
    88b9:	43 0c 9b             	rex.XB or al,0x9b
    88bc:	2e 00 00             	cs add BYTE PTR [rax],al
    88bf:	02 29                	add    ch,BYTE PTR [rcx]
    88c1:	46 0c b7             	rex.RX or al,0xb7
    88c4:	2e 00 00             	cs add BYTE PTR [rax],al
    88c7:	02 29                	add    ch,BYTE PTR [rcx]
    88c9:	47 0c d3             	rex.RXB or al,0xd3
    88cc:	2e 00 00             	cs add BYTE PTR [rax],al
    88cf:	02 29                	add    ch,BYTE PTR [rcx]
    88d1:	48 0c f8             	rex.W or al,0xf8
    88d4:	2e 00 00             	cs add BYTE PTR [rax],al
    88d7:	02 29                	add    ch,BYTE PTR [rcx]
    88d9:	4a 0c 19             	rex.WX or al,0x19
    88dc:	2f                   	(bad)
    88dd:	00 00                	add    BYTE PTR [rax],al
    88df:	02 29                	add    ch,BYTE PTR [rcx]
    88e1:	4b 0c 4d             	rex.WXB or al,0x4d
    88e4:	2f                   	(bad)
    88e5:	00 00                	add    BYTE PTR [rax],al
    88e7:	02 29                	add    ch,BYTE PTR [rcx]
    88e9:	4d 0c 5a             	rex.WRB or al,0x5a
    88ec:	2f                   	(bad)
    88ed:	00 00                	add    BYTE PTR [rax],al
    88ef:	02 29                	add    ch,BYTE PTR [rcx]
    88f1:	4e 0c 6c             	rex.WRX or al,0x6c
    88f4:	2f                   	(bad)
    88f5:	00 00                	add    BYTE PTR [rax],al
    88f7:	02 29                	add    ch,BYTE PTR [rcx]
    88f9:	4f 0c 8c             	rex.WRXB or al,0x8c
    88fc:	2f                   	(bad)
    88fd:	00 00                	add    BYTE PTR [rax],al
    88ff:	02 29                	add    ch,BYTE PTR [rcx]
    8901:	50                   	push   rax
    8902:	0c b0                	or     al,0xb0
    8904:	2f                   	(bad)
    8905:	00 00                	add    BYTE PTR [rax],al
    8907:	02 29                	add    ch,BYTE PTR [rcx]
    8909:	51                   	push   rcx
    890a:	0c d4                	or     al,0xd4
    890c:	2f                   	(bad)
    890d:	00 00                	add    BYTE PTR [rax],al
    890f:	02 29                	add    ch,BYTE PTR [rcx]
    8911:	53                   	push   rbx
    8912:	0c eb                	or     al,0xeb
    8914:	2f                   	(bad)
    8915:	00 00                	add    BYTE PTR [rax],al
    8917:	02 29                	add    ch,BYTE PTR [rcx]
    8919:	54                   	push   rsp
    891a:	0c 10                	or     al,0x10
    891c:	30 00                	xor    BYTE PTR [rax],al
    891e:	00 80 01 20 10 15    	add    BYTE PTR [rax+0x15102001],al
    8924:	a9 01 10 66 10       	test   eax,0x10661001
    8929:	00 00                	add    BYTE PTR [rax],al
    892b:	11 32                	adc    DWORD PTR [rdx],esi
    892d:	00 00                	add    BYTE PTR [rax],al
    892f:	5b                   	pop    rbx
    8930:	b1 24                	mov    cl,0x24
    8932:	00 00                	add    BYTE PTR [rax],al
    8934:	aa                   	stos   BYTE PTR es:[rdi],al
    8935:	01 0d be 21 00 00    	add    DWORD PTR [rip+0x21be],ecx        # aaf9 <_end+0x4ae1>
    893b:	08 00                	or     BYTE PTR [rax],al
    893d:	5b                   	pop    rbx
    893e:	0d 28 00 00 ab       	or     eax,0xab000028
    8943:	01 0f                	add    DWORD PTR [rdi],ecx
    8945:	c5 21 00             	(bad)
    8948:	00 10                	add    BYTE PTR [rax],dl
    894a:	10 00                	adc    BYTE PTR [rax],al
    894c:	81 01 68 10 00 00    	add    DWORD PTR [rcx],0x1068
    8952:	15 b4 01 03 e4       	adc    eax,0xe40301b4
    8957:	31 00                	xor    DWORD PTR [rax],eax
    8959:	00 10                	add    BYTE PTR [rax],dl
    895b:	12 02                	adc    al,BYTE PTR [rdx]
    895d:	04 00                	add    al,0x0
    895f:	00 00                	add    BYTE PTR [rax],al
    8961:	00 12                	add    BYTE PTR [rdx],dl
    8963:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    8966:	02 00                	add    al,BYTE PTR [rax]
    8968:	00 08                	add    BYTE PTR [rax],cl
    896a:	9f                   	lahf
    896b:	2a 00                	sub    al,BYTE PTR [rax]
    896d:	00 2a                	add    BYTE PTR [rdx],ch
    896f:	14 17                	adc    al,0x17
    8971:	e3 20                	jrcxz  8993 <_end+0x297b>
    8973:	00 00                	add    BYTE PTR [rax],al
    8975:	08 9e 2f 00 00 2b    	or     BYTE PTR [rsi+0x2b00002f],bl
    897b:	06                   	(bad)
    897c:	15 4e 2a 00 00       	adc    eax,0x2a4e
    8981:	13 3a                	adc    edi,DWORD PTR [rdx]
    8983:	32 00                	xor    al,BYTE PTR [rax]
    8985:	00 0e                	add    BYTE PTR [rsi],cl
    8987:	da 00                	fiadd  DWORD PTR [rax]
    8989:	00 00                	add    BYTE PTR [rax],al
    898b:	2c 57                	sub    al,0x57
    898d:	01 01                	add    DWORD PTR [rcx],eax
    898f:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8992:	00 62 32             	add    BYTE PTR [rdx+0x32],ah
    8995:	00 00                	add    BYTE PTR [rax],al
    8997:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    899d:	0e                   	(bad)
    899e:	f8                   	clc
    899f:	14 00                	adc    al,0x0
    89a1:	00 2c a7             	add    BYTE PTR [rdi+riz*4],ch
    89a4:	03 0f                	add    ecx,DWORD PTR [rdi]
    89a6:	2e 32 00             	cs xor al,BYTE PTR [rax]
    89a9:	00 79 32             	add    BYTE PTR [rcx+0x32],bh
    89ac:	00 00                	add    BYTE PTR [rax],al
    89ae:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    89b1:	00 00                	add    BYTE PTR [rax],al
    89b3:	00 0d 8e 2a 00 00    	add    BYTE PTR [rip+0x2a8e],cl        # b447 <_end+0x542f>
    89b9:	0c 2f                	or     al,0x2f
    89bb:	15 00 00 2d d3       	adc    eax,0xd32d0000
    89c0:	01 f3                	add    ebx,esi
    89c2:	2e 00 00             	cs add BYTE PTR [rax],al
    89c5:	9e                   	sahf
    89c6:	32 00                	xor    al,BYTE PTR [rax]
    89c8:	00 01                	add    BYTE PTR [rcx],al
    89ca:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    89ce:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    89d4:	79 32                	jns    8a08 <_end+0x29f0>
    89d6:	00 00                	add    BYTE PTR [rax],al
    89d8:	00 0e                	add    BYTE PTR [rsi],cl
    89da:	1f                   	(bad)
    89db:	32 00                	xor    al,BYTE PTR [rax]
    89dd:	00 2c b5 03 0f 2e 32 	add    BYTE PTR [rsi*4+0x322e0f03],ch
    89e4:	00 00                	add    BYTE PTR [rax],al
    89e6:	ba 32 00 00 01       	mov    edx,0x1000032
    89eb:	9c                   	pushf
    89ec:	24 00                	and    al,0x0
    89ee:	00 01                	add    BYTE PTR [rcx],al
    89f0:	79 32                	jns    8a24 <_end+0x2a0c>
    89f2:	00 00                	add    BYTE PTR [rax],al
    89f4:	00 0e                	add    BYTE PTR [rsi],cl
    89f6:	7a 0d                	jp     8a05 <_end+0x29ed>
    89f8:	00 00                	add    BYTE PTR [rax],al
    89fa:	2c cb                	sub    al,0xcb
    89fc:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    89ff:	21 00                	and    DWORD PTR [rax],eax
    8a01:	00 d6                	add    dh,dl
    8a03:	32 00                	xor    al,BYTE PTR [rax]
    8a05:	00 01                	add    BYTE PTR [rcx],al
    8a07:	0b 30                	or     esi,DWORD PTR [rax]
    8a09:	00 00                	add    BYTE PTR [rax],al
    8a0b:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8a0e:	00 00                	add    BYTE PTR [rax],al
    8a10:	00 0e                	add    BYTE PTR [rsi],cl
    8a12:	61                   	(bad)
    8a13:	1b 00                	sbb    eax,DWORD PTR [rax]
    8a15:	00 2c d5 02 0c a6 21 	add    BYTE PTR [rdx*8+0x21a60c02],ch
    8a1c:	00 00                	add    BYTE PTR [rax],al
    8a1e:	f2 32 00             	repnz xor al,BYTE PTR [rax]
    8a21:	00 01                	add    BYTE PTR [rcx],al
    8a23:	79 32                	jns    8a57 <_end+0x2a3f>
    8a25:	00 00                	add    BYTE PTR [rax],al
    8a27:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8a2d:	0c ef                	or     al,0xef
    8a2f:	22 00                	and    al,BYTE PTR [rax]
    8a31:	00 2d b8 01 a6 21    	add    BYTE PTR [rip+0x21a601b8],ch        # 21a68bef <_end+0x21a62bd7>
    8a37:	00 00                	add    BYTE PTR [rax],al
    8a39:	0e                   	(bad)
    8a3a:	33 00                	xor    eax,DWORD PTR [rax]
    8a3c:	00 01                	add    BYTE PTR [rcx],al
    8a3e:	79 32                	jns    8a72 <_end+0x2a5a>
    8a40:	00 00                	add    BYTE PTR [rax],al
    8a42:	01 0b                	add    DWORD PTR [rbx],ecx
    8a44:	30 00                	xor    BYTE PTR [rax],al
    8a46:	00 21                	add    BYTE PTR [rcx],ah
    8a48:	00 04 52             	add    BYTE PTR [rdx+rdx*2],al
    8a4b:	21 00                	and    DWORD PTR [rax],eax
    8a4d:	00 2c 1b             	add    BYTE PTR [rbx+rbx*1],ch
    8a50:	03 0c 49             	add    ecx,DWORD PTR [rcx+rcx*2]
    8a53:	21 00                	and    DWORD PTR [rax],eax
    8a55:	00 a6 21 00 00 2f    	add    BYTE PTR [rsi+0x2f000021],ah
    8a5b:	33 00                	xor    eax,DWORD PTR [rax]
    8a5d:	00 01                	add    BYTE PTR [rcx],al
    8a5f:	79 32                	jns    8a93 <_end+0x2a7b>
    8a61:	00 00                	add    BYTE PTR [rax],al
    8a63:	01 0b                	add    DWORD PTR [rbx],ecx
    8a65:	30 00                	xor    BYTE PTR [rax],al
    8a67:	00 21                	add    BYTE PTR [rcx],ah
    8a69:	00 0e                	add    BYTE PTR [rsi],cl
    8a6b:	f9                   	stc
    8a6c:	14 00                	adc    al,0x0
    8a6e:	00 2c a8             	add    BYTE PTR [rax+rbp*4],ch
    8a71:	03 0f                	add    ecx,DWORD PTR [rdi]
    8a73:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8a76:	00 46 33             	add    BYTE PTR [rsi+0x33],al
    8a79:	00 00                	add    BYTE PTR [rax],al
    8a7b:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8a7e:	00 00                	add    BYTE PTR [rax],al
    8a80:	00 5a 10             	add    BYTE PTR [rdx+0x10],bl
    8a83:	15 00 00 2c ae       	adc    eax,0xae2c0000
    8a88:	03 0f                	add    ecx,DWORD PTR [rdi]
    8a8a:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8a8d:	00 0e                	add    BYTE PTR [rsi],cl
    8a8f:	ca 18 00             	retf   0x18
    8a92:	00 2c 62             	add    BYTE PTR [rdx+riz*2],ch
    8a95:	01 01                	add    DWORD PTR [rcx],eax
    8a97:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8a9a:	00 74 33 00          	add    BYTE PTR [rbx+rsi*1+0x0],dh
    8a9e:	00 01                	add    BYTE PTR [rcx],al
    8aa0:	d3 23                	shl    DWORD PTR [rbx],cl
    8aa2:	00 00                	add    BYTE PTR [rax],al
    8aa4:	01 2e                	add    DWORD PTR [rsi],ebp
    8aa6:	23 00                	and    eax,DWORD PTR [rax]
    8aa8:	00 01                	add    BYTE PTR [rcx],al
    8aaa:	74 33                	je     8adf <_end+0x2ac7>
    8aac:	00 00                	add    BYTE PTR [rax],al
    8aae:	00 0d 3a 32 00 00    	add    BYTE PTR [rip+0x323a],cl        # bcee <_end+0x5cd6>
    8ab4:	0e                   	(bad)
    8ab5:	52                   	push   rdx
    8ab6:	10 00                	adc    BYTE PTR [rax],al
    8ab8:	00 2c 41             	add    BYTE PTR [rcx+rax*2],ch
    8abb:	01 0f                	add    DWORD PTR [rdi],ecx
    8abd:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8ac0:	00 9f 33 00 00 01    	add    BYTE PTR [rdi+0x1000033],bl
    8ac6:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8aca:	01 d3                	add    ebx,edx
    8acc:	23 00                	and    eax,DWORD PTR [rax]
    8ace:	00 01                	add    BYTE PTR [rcx],al
    8ad0:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8ad3:	00 01                	add    BYTE PTR [rcx],al
    8ad5:	74 33                	je     8b0a <_end+0x2af2>
    8ad7:	00 00                	add    BYTE PTR [rax],al
    8ad9:	00 0e                	add    BYTE PTR [rsi],cl
    8adb:	45 29 00             	sub    DWORD PTR [r8],r8d
    8ade:	00 2c 3d 01 0c a6 21 	add    BYTE PTR [rdi*1+0x21a60c01],ch
    8ae5:	00 00                	add    BYTE PTR [rax],al
    8ae7:	b6 33                	mov    dh,0x33
    8ae9:	00 00                	add    BYTE PTR [rax],al
    8aeb:	01 b6 33 00 00 00    	add    DWORD PTR [rsi+0x33],esi
    8af1:	0d 46 32 00 00       	or     eax,0x3246
    8af6:	0c 55                	or     al,0x55
    8af8:	31 00                	xor    DWORD PTR [rax],eax
    8afa:	00 2d fd 01 2e 23    	add    BYTE PTR [rip+0x232e01fd],ch        # 232e8cfd <_end+0x232e2ce5>
    8b00:	00 00                	add    BYTE PTR [rax],al
    8b02:	e0 33                	loopne 8b37 <_end+0x2b1f>
    8b04:	00 00                	add    BYTE PTR [rax],al
    8b06:	01 f3                	add    ebx,esi
    8b08:	2e 00 00             	cs add BYTE PTR [rax],al
    8b0b:	01 e0                	add    eax,esp
    8b0d:	33 00                	xor    eax,DWORD PTR [rax]
    8b0f:	00 01                	add    BYTE PTR [rcx],al
    8b11:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8b14:	00 01                	add    BYTE PTR [rcx],al
    8b16:	74 33                	je     8b4b <_end+0x2b33>
    8b18:	00 00                	add    BYTE PTR [rax],al
    8b1a:	00 0d d3 23 00 00    	add    BYTE PTR [rip+0x23d3],cl        # aef3 <_end+0x4edb>
    8b20:	0e                   	(bad)
    8b21:	20 32                	and    BYTE PTR [rdx],dh
    8b23:	00 00                	add    BYTE PTR [rax],al
    8b25:	2c b6                	sub    al,0xb6
    8b27:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b29:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8b2c:	00 01                	add    BYTE PTR [rcx],al
    8b2e:	34 00                	xor    al,0x0
    8b30:	00 01                	add    BYTE PTR [rcx],al
    8b32:	9c                   	pushf
    8b33:	24 00                	and    al,0x0
    8b35:	00 01                	add    BYTE PTR [rcx],al
    8b37:	79 32                	jns    8b6b <_end+0x2b53>
    8b39:	00 00                	add    BYTE PTR [rax],al
    8b3b:	00 0e                	add    BYTE PTR [rsi],cl
    8b3d:	8a 1c 00             	mov    bl,BYTE PTR [rax+rax*1]
    8b40:	00 2c bc             	add    BYTE PTR [rsp+rdi*4],ch
    8b43:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b45:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8b48:	00 18                	add    BYTE PTR [rax],bl
    8b4a:	34 00                	xor    al,0x0
    8b4c:	00 01                	add    BYTE PTR [rcx],al
    8b4e:	9c                   	pushf
    8b4f:	24 00                	and    al,0x0
    8b51:	00 00                	add    BYTE PTR [rax],al
    8b53:	0c f0                	or     al,0xf0
    8b55:	19 00                	sbb    DWORD PTR [rax],eax
    8b57:	00 2d 90 01 a6 21    	add    BYTE PTR [rip+0x21a60190],ch        # 21a68ced <_end+0x21a62cd5>
    8b5d:	00 00                	add    BYTE PTR [rax],al
    8b5f:	39 34 00             	cmp    DWORD PTR [rax+rax*1],esi
    8b62:	00 01                	add    BYTE PTR [rcx],al
    8b64:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8b68:	01 2e                	add    DWORD PTR [rsi],ebp
    8b6a:	23 00                	and    eax,DWORD PTR [rax]
    8b6c:	00 01                	add    BYTE PTR [rcx],al
    8b6e:	0b 30                	or     esi,DWORD PTR [rax]
    8b70:	00 00                	add    BYTE PTR [rax],al
    8b72:	21 00                	and    DWORD PTR [rax],eax
    8b74:	04 3f                	add    al,0x3f
    8b76:	20 00                	and    BYTE PTR [rax],al
    8b78:	00 2c 22             	add    BYTE PTR [rdx+riz*1],ch
    8b7b:	03 0c 36             	add    ecx,DWORD PTR [rsi+rsi*1]
    8b7e:	20 00                	and    BYTE PTR [rax],al
    8b80:	00 a6 21 00 00 5a    	add    BYTE PTR [rsi+0x5a000021],ah
    8b86:	34 00                	xor    al,0x0
    8b88:	00 01                	add    BYTE PTR [rcx],al
    8b8a:	0b 30                	or     esi,DWORD PTR [rax]
    8b8c:	00 00                	add    BYTE PTR [rax],al
    8b8e:	01 0b                	add    DWORD PTR [rbx],ecx
    8b90:	30 00                	xor    BYTE PTR [rax],al
    8b92:	00 21                	add    BYTE PTR [rcx],ah
    8b94:	00 0e                	add    BYTE PTR [rsi],cl
    8b96:	5b                   	pop    rbx
    8b97:	18 00                	sbb    BYTE PTR [rax],al
    8b99:	00 2c d3             	add    BYTE PTR [rbx+rdx*8],ch
    8b9c:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b9e:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8ba1:	00 76 34             	add    BYTE PTR [rsi+0x34],dh
    8ba4:	00 00                	add    BYTE PTR [rax],al
    8ba6:	01 2e                	add    DWORD PTR [rsi],ebp
    8ba8:	32 00                	xor    al,BYTE PTR [rax]
    8baa:	00 01                	add    BYTE PTR [rcx],al
    8bac:	79 32                	jns    8be0 <_end+0x2bc8>
    8bae:	00 00                	add    BYTE PTR [rax],al
    8bb0:	00 0c ee             	add    BYTE PTR [rsi+rbp*8],cl
    8bb3:	22 00                	and    al,BYTE PTR [rax]
    8bb5:	00 2d cb 01 a6 21    	add    BYTE PTR [rip+0x21a601cb],ch        # 21a68d86 <_end+0x21a62d6e>
    8bbb:	00 00                	add    BYTE PTR [rax],al
    8bbd:	96                   	xchg   esi,eax
    8bbe:	34 00                	xor    al,0x0
    8bc0:	00 01                	add    BYTE PTR [rcx],al
    8bc2:	79 32                	jns    8bf6 <_end+0x2bde>
    8bc4:	00 00                	add    BYTE PTR [rax],al
    8bc6:	01 0b                	add    DWORD PTR [rbx],ecx
    8bc8:	30 00                	xor    BYTE PTR [rax],al
    8bca:	00 01                	add    BYTE PTR [rcx],al
    8bcc:	96                   	xchg   esi,eax
    8bcd:	34 00                	xor    al,0x0
    8bcf:	00 00                	add    BYTE PTR [rax],al
    8bd1:	0d d1 29 00 00       	or     eax,0x29d1
    8bd6:	04 b2                	add    al,0xb2
    8bd8:	1a 00                	sbb    al,BYTE PTR [rax]
    8bda:	00 2c 6b             	add    BYTE PTR [rbx+rbp*2],ch
    8bdd:	03 0c a9             	add    ecx,DWORD PTR [rcx+rbp*4]
    8be0:	1a 00                	sbb    al,BYTE PTR [rax]
    8be2:	00 a6 21 00 00 c0    	add    BYTE PTR [rsi-0x3fffffdf],ah
    8be8:	34 00                	xor    al,0x0
    8bea:	00 01                	add    BYTE PTR [rcx],al
    8bec:	79 32                	jns    8c20 <_end+0x2c08>
    8bee:	00 00                	add    BYTE PTR [rax],al
    8bf0:	01 0b                	add    DWORD PTR [rbx],ecx
    8bf2:	30 00                	xor    BYTE PTR [rax],al
    8bf4:	00 01                	add    BYTE PTR [rcx],al
    8bf6:	96                   	xchg   esi,eax
    8bf7:	34 00                	xor    al,0x0
    8bf9:	00 00                	add    BYTE PTR [rax],al
    8bfb:	0c ef                	or     al,0xef
    8bfd:	19 00                	sbb    DWORD PTR [rax],eax
    8bff:	00 2d a3 01 a6 21    	add    BYTE PTR [rip+0x21a601a3],ch        # 21a68da8 <_end+0x21a62d90>
    8c05:	00 00                	add    BYTE PTR [rax],al
    8c07:	e5 34                	in     eax,0x34
    8c09:	00 00                	add    BYTE PTR [rax],al
    8c0b:	01 f3                	add    ebx,esi
    8c0d:	2e 00 00             	cs add BYTE PTR [rax],al
    8c10:	01 2e                	add    DWORD PTR [rsi],ebp
    8c12:	23 00                	and    eax,DWORD PTR [rax]
    8c14:	00 01                	add    BYTE PTR [rcx],al
    8c16:	0b 30                	or     esi,DWORD PTR [rax]
    8c18:	00 00                	add    BYTE PTR [rax],al
    8c1a:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c20:	04 4e                	add    al,0x4e
    8c22:	19 00                	sbb    DWORD PTR [rax],eax
    8c24:	00 2c 72             	add    BYTE PTR [rdx+rsi*2],ch
    8c27:	03 0c 45 19 00 00 a6 	add    ecx,DWORD PTR [rax*2-0x59ffffe7]
    8c2e:	21 00                	and    DWORD PTR [rax],eax
    8c30:	00 0a                	add    BYTE PTR [rdx],cl
    8c32:	35 00 00 01 0b       	xor    eax,0xb010000
    8c37:	30 00                	xor    BYTE PTR [rax],al
    8c39:	00 01                	add    BYTE PTR [rcx],al
    8c3b:	0b 30                	or     esi,DWORD PTR [rax]
    8c3d:	00 00                	add    BYTE PTR [rax],al
    8c3f:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c45:	0c 04                	or     al,0x4
    8c47:	13 00                	adc    eax,DWORD PTR [rax]
    8c49:	00 2d c5 01 a6 21    	add    BYTE PTR [rip+0x21a601c5],ch        # 21a68e14 <_end+0x21a62dfc>
    8c4f:	00 00                	add    BYTE PTR [rax],al
    8c51:	25 35 00 00 01       	and    eax,0x1000035
    8c56:	0b 30                	or     esi,DWORD PTR [rax]
    8c58:	00 00                	add    BYTE PTR [rax],al
    8c5a:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c60:	04 0f                	add    al,0xf
    8c62:	25 00 00 2c 6f       	and    eax,0x6f2c0000
    8c67:	03 0c 06             	add    ecx,DWORD PTR [rsi+rax*1]
    8c6a:	25 00 00 a6 21       	and    eax,0x21a60000
    8c6f:	00 00                	add    BYTE PTR [rax],al
    8c71:	45 35 00 00 01 0b    	rex.RB xor eax,0xb010000
    8c77:	30 00                	xor    BYTE PTR [rax],al
    8c79:	00 01                	add    BYTE PTR [rcx],al
    8c7b:	96                   	xchg   esi,eax
    8c7c:	34 00                	xor    al,0x0
    8c7e:	00 00                	add    BYTE PTR [rax],al
    8c80:	0c 44                	or     al,0x44
    8c82:	30 00                	xor    BYTE PTR [rax],al
    8c84:	00 2d ec 01 2e 23    	add    BYTE PTR [rip+0x232e01ec],ch        # 232e8e76 <_end+0x232e2e5e>
    8c8a:	00 00                	add    BYTE PTR [rax],al
    8c8c:	65 35 00 00 01 e2    	gs xor eax,0xe2010000
    8c92:	22 00                	and    al,BYTE PTR [rax]
    8c94:	00 01                	add    BYTE PTR [rcx],al
    8c96:	9c                   	pushf
    8c97:	24 00                	and    al,0x0
    8c99:	00 01                	add    BYTE PTR [rcx],al
    8c9b:	74 33                	je     8cd0 <_end+0x2cb8>
    8c9d:	00 00                	add    BYTE PTR [rax],al
    8c9f:	00 0c 8b             	add    BYTE PTR [rbx+rcx*4],cl
    8ca2:	2f                   	(bad)
    8ca3:	00 00                	add    BYTE PTR [rax],al
    8ca5:	2d 60 01 f3 2e       	sub    eax,0x2ef30160
    8caa:	00 00                	add    BYTE PTR [rax],al
    8cac:	80 35 00 00 01 f3 2e 	xor    BYTE PTR [rip+0xfffffffff3010000],0x2e        # fffffffff3018cb3 <_end+0xfffffffff3012c9b>
    8cb3:	00 00                	add    BYTE PTR [rax],al
    8cb5:	01 0b                	add    DWORD PTR [rbx],ecx
    8cb7:	30 00                	xor    BYTE PTR [rax],al
    8cb9:	00 00                	add    BYTE PTR [rax],al
    8cbb:	0c 36                	or     al,0x36
    8cbd:	16                   	(bad)
    8cbe:	00 00                	add    BYTE PTR [rax],al
    8cc0:	2c 82                	sub    al,0x82
    8cc2:	0c a6                	or     al,0xa6
    8cc4:	21 00                	and    DWORD PTR [rax],eax
    8cc6:	00 9b 35 00 00 01    	add    BYTE PTR [rbx+0x1000035],bl
    8ccc:	0b 30                	or     esi,DWORD PTR [rax]
    8cce:	00 00                	add    BYTE PTR [rax],al
    8cd0:	01 0b                	add    DWORD PTR [rbx],ecx
    8cd2:	30 00                	xor    BYTE PTR [rax],al
    8cd4:	00 00                	add    BYTE PTR [rax],al
    8cd6:	0c bf                	or     al,0xbf
    8cd8:	10 00                	adc    BYTE PTR [rax],al
    8cda:	00 2c 9b             	add    BYTE PTR [rbx+rbx*4],ch
    8cdd:	0c a6                	or     al,0xa6
    8cdf:	21 00                	and    DWORD PTR [rax],eax
    8ce1:	00 b6 35 00 00 01    	add    BYTE PTR [rsi+0x1000035],dh
    8ce7:	0b 30                	or     esi,DWORD PTR [rax]
    8ce9:	00 00                	add    BYTE PTR [rax],al
    8ceb:	01 0b                	add    DWORD PTR [rbx],ecx
    8ced:	30 00                	xor    BYTE PTR [rax],al
    8cef:	00 00                	add    BYTE PTR [rax],al
    8cf1:	0c d9                	or     al,0xd9
    8cf3:	19 00                	sbb    DWORD PTR [rax],eax
    8cf5:	00 2d 3c 01 f3 2e    	add    BYTE PTR [rip+0x2ef3013c],ch        # 2ef38e37 <_end+0x2ef32e1f>
    8cfb:	00 00                	add    BYTE PTR [rax],al
    8cfd:	d1 35 00 00 01 f3    	shl    DWORD PTR [rip+0xfffffffff3010000],1        # fffffffff3018d03 <_end+0xfffffffff3012ceb>
    8d03:	2e 00 00             	cs add BYTE PTR [rax],al
    8d06:	01 0b                	add    DWORD PTR [rbx],ecx
    8d08:	30 00                	xor    BYTE PTR [rax],al
    8d0a:	00 00                	add    BYTE PTR [rax],al
    8d0c:	0c 0d                	or     al,0xd
    8d0e:	0e                   	(bad)
    8d0f:	00 00                	add    BYTE PTR [rax],al
    8d11:	2c d4                	sub    al,0xd4
    8d13:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8d16:	00 00                	add    BYTE PTR [rax],al
    8d18:	ec                   	in     al,dx
    8d19:	35 00 00 01 0b       	xor    eax,0xb010000
    8d1e:	30 00                	xor    BYTE PTR [rax],al
    8d20:	00 01                	add    BYTE PTR [rcx],al
    8d22:	0b 30                	or     esi,DWORD PTR [rax]
    8d24:	00 00                	add    BYTE PTR [rax],al
    8d26:	00 0e                	add    BYTE PTR [rsi],cl
    8d28:	81 2d 00 00 2c 13 04 	sub    DWORD PTR [rip+0x132c0000],0x232e0f04        # 132c8d32 <_end+0x132c2d1a>
    8d2f:	0f 2e 23 
    8d32:	00 00                	add    BYTE PTR [rax],al
    8d34:	12 36                	adc    dh,BYTE PTR [rsi]
    8d36:	00 00                	add    BYTE PTR [rax],al
    8d38:	01 f3                	add    ebx,esi
    8d3a:	2e 00 00             	cs add BYTE PTR [rax],al
    8d3d:	01 2e                	add    DWORD PTR [rsi],ebp
    8d3f:	23 00                	and    eax,DWORD PTR [rax]
    8d41:	00 01                	add    BYTE PTR [rcx],al
    8d43:	0b 30                	or     esi,DWORD PTR [rax]
    8d45:	00 00                	add    BYTE PTR [rax],al
    8d47:	01 12                	add    DWORD PTR [rdx],edx
    8d49:	36 00 00             	ss add BYTE PTR [rax],al
    8d4c:	00 0d b4 36 00 00    	add    BYTE PTR [rip+0x36b4],cl        # c406 <_end+0x63ee>
    8d52:	82                   	(bad)
    8d53:	01 74 6d 00          	add    DWORD PTR [rbp+rbp*2+0x0],esi
    8d57:	38 2e                	cmp    BYTE PTR [rsi],ch
    8d59:	07                   	(bad)
    8d5a:	08 b4 36 00 00 06 94 	or     BYTE PTR [rsi+rsi*1-0x6bfa0000],dh
    8d61:	1b 00                	sbb    eax,DWORD PTR [rax]
    8d63:	00 2e                	add    BYTE PTR [rsi],ch
    8d65:	09 07                	or     DWORD PTR [rdi],eax
    8d67:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d68:	21 00                	and    DWORD PTR [rax],eax
    8d6a:	00 00                	add    BYTE PTR [rax],al
    8d6c:	06                   	(bad)
    8d6d:	fb                   	sti
    8d6e:	17                   	(bad)
    8d6f:	00 00                	add    BYTE PTR [rax],al
    8d71:	2e 0a 07             	cs or  al,BYTE PTR [rdi]
    8d74:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d75:	21 00                	and    DWORD PTR [rax],eax
    8d77:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    8d7a:	41 0c 00             	rex.B or al,0x0
    8d7d:	00 2e                	add    BYTE PTR [rsi],ch
    8d7f:	0b 07                	or     eax,DWORD PTR [rdi]
    8d81:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d82:	21 00                	and    DWORD PTR [rax],eax
    8d84:	00 08                	add    BYTE PTR [rax],cl
    8d86:	06                   	(bad)
    8d87:	8e 19                	mov    ds,WORD PTR [rcx]
    8d89:	00 00                	add    BYTE PTR [rax],al
    8d8b:	2e 0c 07             	cs or  al,0x7
    8d8e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d8f:	21 00                	and    DWORD PTR [rax],eax
    8d91:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    8d94:	5a                   	pop    rdx
    8d95:	21 00                	and    DWORD PTR [rax],eax
    8d97:	00 2e                	add    BYTE PTR [rsi],ch
    8d99:	0d 07 a6 21 00       	or     eax,0x21a607
    8d9e:	00 10                	add    BYTE PTR [rax],dl
    8da0:	06                   	(bad)
    8da1:	26 32 00             	es xor al,BYTE PTR [rax]
    8da4:	00 2e                	add    BYTE PTR [rsi],ch
    8da6:	0e                   	(bad)
    8da7:	07                   	(bad)
    8da8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8da9:	21 00                	and    DWORD PTR [rax],eax
    8dab:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    8dae:	e2 28                	loop   8dd8 <_end+0x2dc0>
    8db0:	00 00                	add    BYTE PTR [rax],al
    8db2:	2e 0f 07             	cs sysretd
    8db5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8db6:	21 00                	and    DWORD PTR [rax],eax
    8db8:	00 18                	add    BYTE PTR [rax],bl
    8dba:	06                   	(bad)
    8dbb:	52                   	push   rdx
    8dbc:	29 00                	sub    DWORD PTR [rax],eax
    8dbe:	00 2e                	add    BYTE PTR [rsi],ch
    8dc0:	10 07                	adc    BYTE PTR [rdi],al
    8dc2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8dc3:	21 00                	and    DWORD PTR [rax],eax
    8dc5:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    8dc8:	fb                   	sti
    8dc9:	12 00                	adc    al,BYTE PTR [rax]
    8dcb:	00 2e                	add    BYTE PTR [rsi],ch
    8dcd:	11 07                	adc    DWORD PTR [rdi],eax
    8dcf:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8dd0:	21 00                	and    DWORD PTR [rax],eax
    8dd2:	00 20                	add    BYTE PTR [rax],ah
    8dd4:	06                   	(bad)
    8dd5:	7f 1e                	jg     8df5 <_end+0x2ddd>
    8dd7:	00 00                	add    BYTE PTR [rax],al
    8dd9:	2e 14 0c             	cs adc al,0xc
    8ddc:	b2 21                	mov    dl,0x21
    8dde:	00 00                	add    BYTE PTR [rax],al
    8de0:	28 06                	sub    BYTE PTR [rsi],al
    8de2:	da 2f                	fisubr DWORD PTR [rdi]
    8de4:	00 00                	add    BYTE PTR [rax],al
    8de6:	2e 15 0f d3 23 00    	cs adc eax,0x23d30f
    8dec:	00 30                	add    BYTE PTR [rax],dh
    8dee:	00 13                	add    BYTE PTR [rbx],dl
    8df0:	17                   	(bad)
    8df1:	36 00 00             	ss add BYTE PTR [rax],al
    8df4:	0c c0                	or     al,0xc0
    8df6:	24 00                	and    al,0x0
    8df8:	00 2c f7             	add    BYTE PTR [rdi+rsi*8],ch
    8dfb:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8dfe:	00 00                	add    BYTE PTR [rax],al
    8e00:	cf                   	iret
    8e01:	36 00 00             	ss add BYTE PTR [rax],al
    8e04:	01 0b                	add    DWORD PTR [rbx],ecx
    8e06:	30 00                	xor    BYTE PTR [rax],al
    8e08:	00 00                	add    BYTE PTR [rax],al
    8e0a:	0c c2                	or     al,0xc2
    8e0c:	30 00                	xor    BYTE PTR [rax],al
    8e0e:	00 2d 69 01 f3 2e    	add    BYTE PTR [rip+0x2ef30169],ch        # 2ef38f7d <_end+0x2ef32f65>
    8e14:	00 00                	add    BYTE PTR [rax],al
    8e16:	ef                   	out    dx,eax
    8e17:	36 00 00             	ss add BYTE PTR [rax],al
    8e1a:	01 f3                	add    ebx,esi
    8e1c:	2e 00 00             	cs add BYTE PTR [rax],al
    8e1f:	01 0b                	add    DWORD PTR [rbx],ecx
    8e21:	30 00                	xor    BYTE PTR [rax],al
    8e23:	00 01                	add    BYTE PTR [rcx],al
    8e25:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e28:	00 00                	add    BYTE PTR [rax],al
    8e2a:	0c 36                	or     al,0x36
    8e2c:	17                   	(bad)
    8e2d:	00 00                	add    BYTE PTR [rax],al
    8e2f:	2c 85                	sub    al,0x85
    8e31:	0c a6                	or     al,0xa6
    8e33:	21 00                	and    DWORD PTR [rax],eax
    8e35:	00 0f                	add    BYTE PTR [rdi],cl
    8e37:	37                   	(bad)
    8e38:	00 00                	add    BYTE PTR [rax],al
    8e3a:	01 0b                	add    DWORD PTR [rbx],ecx
    8e3c:	30 00                	xor    BYTE PTR [rax],al
    8e3e:	00 01                	add    BYTE PTR [rcx],al
    8e40:	0b 30                	or     esi,DWORD PTR [rax]
    8e42:	00 00                	add    BYTE PTR [rax],al
    8e44:	01 2e                	add    DWORD PTR [rsi],ebp
    8e46:	23 00                	and    eax,DWORD PTR [rax]
    8e48:	00 00                	add    BYTE PTR [rax],al
    8e4a:	0c d2                	or     al,0xd2
    8e4c:	1b 00                	sbb    eax,DWORD PTR [rax]
    8e4e:	00 2d 4e 01 f3 2e    	add    BYTE PTR [rip+0x2ef3014e],ch        # 2ef38fa2 <_end+0x2ef32f8a>
    8e54:	00 00                	add    BYTE PTR [rax],al
    8e56:	2f                   	(bad)
    8e57:	37                   	(bad)
    8e58:	00 00                	add    BYTE PTR [rax],al
    8e5a:	01 f3                	add    ebx,esi
    8e5c:	2e 00 00             	cs add BYTE PTR [rax],al
    8e5f:	01 0b                	add    DWORD PTR [rbx],ecx
    8e61:	30 00                	xor    BYTE PTR [rax],al
    8e63:	00 01                	add    BYTE PTR [rcx],al
    8e65:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e68:	00 00                	add    BYTE PTR [rax],al
    8e6a:	0e                   	(bad)
    8e6b:	bb 28 00 00 2d       	mov    ebx,0x2d000028
    8e70:	06                   	(bad)
    8e71:	01 01                	add    DWORD PTR [rcx],eax
    8e73:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e76:	00 55 37             	add    BYTE PTR [rbp+0x37],dl
    8e79:	00 00                	add    BYTE PTR [rax],al
    8e7b:	01 e2                	add    edx,esp
    8e7d:	22 00                	and    al,BYTE PTR [rax]
    8e7f:	00 01                	add    BYTE PTR [rcx],al
    8e81:	55                   	push   rbp
    8e82:	37                   	(bad)
    8e83:	00 00                	add    BYTE PTR [rax],al
    8e85:	01 2e                	add    DWORD PTR [rsi],ebp
    8e87:	23 00                	and    eax,DWORD PTR [rax]
    8e89:	00 01                	add    BYTE PTR [rcx],al
    8e8b:	74 33                	je     8ec0 <_end+0x2ea8>
    8e8d:	00 00                	add    BYTE PTR [rax],al
    8e8f:	00 0d 0b 30 00 00    	add    BYTE PTR [rip+0x300b],cl        # bea0 <_end+0x5e88>
    8e95:	0c 32                	or     al,0x32
    8e97:	23 00                	and    eax,DWORD PTR [rax]
    8e99:	00 2c d8             	add    BYTE PTR [rax+rbx*8],ch
    8e9c:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8e9f:	00 00                	add    BYTE PTR [rax],al
    8ea1:	75 37                	jne    8eda <_end+0x2ec2>
    8ea3:	00 00                	add    BYTE PTR [rax],al
    8ea5:	01 0b                	add    DWORD PTR [rbx],ecx
    8ea7:	30 00                	xor    BYTE PTR [rax],al
    8ea9:	00 01                	add    BYTE PTR [rcx],al
    8eab:	0b 30                	or     esi,DWORD PTR [rax]
    8ead:	00 00                	add    BYTE PTR [rax],al
    8eaf:	00 0e                	add    BYTE PTR [rsi],cl
    8eb1:	6b 29 00             	imul   ebp,DWORD PTR [rcx],0x0
    8eb4:	00 2c 92             	add    BYTE PTR [rdx+rdx*4],ch
    8eb7:	01 0f                	add    DWORD PTR [rdi],ecx
    8eb9:	2e 00 00             	cs add BYTE PTR [rax],al
    8ebc:	00 91 37 00 00 01    	add    BYTE PTR [rcx+0x1000037],dl
    8ec2:	0b 30                	or     esi,DWORD PTR [rax]
    8ec4:	00 00                	add    BYTE PTR [rax],al
    8ec6:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    8ecc:	0d f3 2e 00 00       	or     eax,0x2ef3
    8ed1:	0e                   	(bad)
    8ed2:	72 29                	jb     8efd <_end+0x2ee5>
    8ed4:	00 00                	add    BYTE PTR [rax],al
    8ed6:	2c 97                	sub    al,0x97
    8ed8:	01 0e                	add    DWORD PTR [rsi],ecx
    8eda:	35 00 00 00 b2       	xor    eax,0xb2000000
    8edf:	37                   	(bad)
    8ee0:	00 00                	add    BYTE PTR [rax],al
    8ee2:	01 0b                	add    DWORD PTR [rbx],ecx
    8ee4:	30 00                	xor    BYTE PTR [rax],al
    8ee6:	00 01                	add    BYTE PTR [rcx],al
    8ee8:	91                   	xchg   ecx,eax
    8ee9:	37                   	(bad)
    8eea:	00 00                	add    BYTE PTR [rax],al
    8eec:	00 0c ba             	add    BYTE PTR [rdx+rdi*4],cl
    8eef:	29 00                	sub    DWORD PTR [rax],eax
    8ef1:	00 2c f2             	add    BYTE PTR [rdx+rsi*8],ch
    8ef4:	11 f3                	adc    ebx,esi
    8ef6:	2e 00 00             	cs add BYTE PTR [rax],al
    8ef9:	d2 37                	shl    BYTE PTR [rdi],cl
    8efb:	00 00                	add    BYTE PTR [rax],al
    8efd:	01 f3                	add    ebx,esi
    8eff:	2e 00 00             	cs add BYTE PTR [rax],al
    8f02:	01 0b                	add    DWORD PTR [rbx],ecx
    8f04:	30 00                	xor    BYTE PTR [rax],al
    8f06:	00 01                	add    BYTE PTR [rcx],al
    8f08:	91                   	xchg   ecx,eax
    8f09:	37                   	(bad)
    8f0a:	00 00                	add    BYTE PTR [rax],al
    8f0c:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
    8f0f:	1b 00                	sbb    eax,DWORD PTR [rax]
    8f11:	00 2c f4             	add    BYTE PTR [rsp+rsi*8],ch
    8f14:	01 11                	add    DWORD PTR [rcx],edx
    8f16:	9b                   	fwait
    8f17:	1b 00                	sbb    eax,DWORD PTR [rax]
    8f19:	00 b2 21 00 00 f7    	add    BYTE PTR [rdx-0x8ffffdf],dh
    8f1f:	37                   	(bad)
    8f20:	00 00                	add    BYTE PTR [rax],al
    8f22:	01 0b                	add    DWORD PTR [rbx],ecx
    8f24:	30 00                	xor    BYTE PTR [rax],al
    8f26:	00 01                	add    BYTE PTR [rcx],al
    8f28:	91                   	xchg   ecx,eax
    8f29:	37                   	(bad)
    8f2a:	00 00                	add    BYTE PTR [rax],al
    8f2c:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8f32:	04 c3                	add    al,0xc3
    8f34:	0e                   	(bad)
    8f35:	00 00                	add    BYTE PTR [rax],al
    8f37:	2c f7                	sub    al,0xf7
    8f39:	01 1a                	add    DWORD PTR [rdx],ebx
    8f3b:	ba 0e 00 00 8a       	mov    edx,0x8a00000e
    8f40:	21 00                	and    DWORD PTR [rax],eax
    8f42:	00 1c 38             	add    BYTE PTR [rax+rdi*1],bl
    8f45:	00 00                	add    BYTE PTR [rax],al
    8f47:	01 0b                	add    DWORD PTR [rbx],ecx
    8f49:	30 00                	xor    BYTE PTR [rax],al
    8f4b:	00 01                	add    BYTE PTR [rcx],al
    8f4d:	91                   	xchg   ecx,eax
    8f4e:	37                   	(bad)
    8f4f:	00 00                	add    BYTE PTR [rax],al
    8f51:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8f57:	0c 74                	or     al,0x74
    8f59:	10 00                	adc    BYTE PTR [rax],al
    8f5b:	00 2c 9f             	add    BYTE PTR [rdi+rbx*4],ch
    8f5e:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8f61:	00 00                	add    BYTE PTR [rax],al
    8f63:	3c 38                	cmp    al,0x38
    8f65:	00 00                	add    BYTE PTR [rax],al
    8f67:	01 f3                	add    ebx,esi
    8f69:	2e 00 00             	cs add BYTE PTR [rax],al
    8f6c:	01 0b                	add    DWORD PTR [rbx],ecx
    8f6e:	30 00                	xor    BYTE PTR [rax],al
    8f70:	00 01                	add    BYTE PTR [rcx],al
    8f72:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8f75:	00 00                	add    BYTE PTR [rax],al
    8f77:	0e                   	(bad)
    8f78:	8f                   	(bad)
    8f79:	22 00                	and    al,BYTE PTR [rax]
    8f7b:	00 2c 5d 01 01 a6 21 	add    BYTE PTR [rbx*2+0x21a60101],ch
    8f82:	00 00                	add    BYTE PTR [rax],al
    8f84:	53                   	push   rbx
    8f85:	38 00                	cmp    BYTE PTR [rax],al
    8f87:	00 01                	add    BYTE PTR [rcx],al
    8f89:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8f8c:	00 00                	add    BYTE PTR [rax],al
    8f8e:	0e                   	(bad)
    8f8f:	a9 1c 00 00 2c       	test   eax,0x2c00001c
    8f94:	1b 01                	sbb    eax,DWORD PTR [rcx]
    8f96:	0c a6                	or     al,0xa6
    8f98:	21 00                	and    DWORD PTR [rax],eax
    8f9a:	00 74 38 00          	add    BYTE PTR [rax+rdi*1+0x0],dh
    8f9e:	00 01                	add    BYTE PTR [rcx],al
    8fa0:	0b 30                	or     esi,DWORD PTR [rax]
    8fa2:	00 00                	add    BYTE PTR [rax],al
    8fa4:	01 0b                	add    DWORD PTR [rbx],ecx
    8fa6:	30 00                	xor    BYTE PTR [rax],al
    8fa8:	00 01                	add    BYTE PTR [rcx],al
    8faa:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fad:	00 00                	add    BYTE PTR [rax],al
    8faf:	0c 41                	or     al,0x41
    8fb1:	21 00                	and    DWORD PTR [rax],eax
    8fb3:	00 2d 18 01 f3 2e    	add    BYTE PTR [rip+0x2ef30118],ch        # 2ef390d1 <_end+0x2ef330b9>
    8fb9:	00 00                	add    BYTE PTR [rax],al
    8fbb:	94                   	xchg   esp,eax
    8fbc:	38 00                	cmp    BYTE PTR [rax],al
    8fbe:	00 01                	add    BYTE PTR [rcx],al
    8fc0:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8fc4:	01 0b                	add    DWORD PTR [rbx],ecx
    8fc6:	30 00                	xor    BYTE PTR [rax],al
    8fc8:	00 01                	add    BYTE PTR [rcx],al
    8fca:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fcd:	00 00                	add    BYTE PTR [rax],al
    8fcf:	0c 5f                	or     al,0x5f
    8fd1:	17                   	(bad)
    8fd2:	00 00                	add    BYTE PTR [rax],al
    8fd4:	2d 21 01 f3 2e       	sub    eax,0x2ef30121
    8fd9:	00 00                	add    BYTE PTR [rax],al
    8fdb:	b4 38                	mov    ah,0x38
    8fdd:	00 00                	add    BYTE PTR [rax],al
    8fdf:	01 f3                	add    ebx,esi
    8fe1:	2e 00 00             	cs add BYTE PTR [rax],al
    8fe4:	01 0b                	add    DWORD PTR [rbx],ecx
    8fe6:	30 00                	xor    BYTE PTR [rax],al
    8fe8:	00 01                	add    BYTE PTR [rcx],al
    8fea:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fed:	00 00                	add    BYTE PTR [rax],al
    8fef:	0c f3                	or     al,0xf3
    8ff1:	17                   	(bad)
    8ff2:	00 00                	add    BYTE PTR [rax],al
    8ff4:	2d 34 01 f3 2e       	sub    eax,0x2ef30134
    8ff9:	00 00                	add    BYTE PTR [rax],al
    8ffb:	d4                   	(bad)
    8ffc:	38 00                	cmp    BYTE PTR [rax],al
    8ffe:	00 01                	add    BYTE PTR [rcx],al
    9000:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9004:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    900b:	23 00                	and    eax,DWORD PTR [rax]
    900d:	00 00                	add    BYTE PTR [rax],al
    900f:	0c f0                	or     al,0xf0
    9011:	22 00                	and    al,BYTE PTR [rax]
    9013:	00 2d b2 01 a6 21    	add    BYTE PTR [rip+0x21a601b2],ch        # 21a691cb <_end+0x21a631b3>
    9019:	00 00                	add    BYTE PTR [rax],al
    901b:	eb 38                	jmp    9055 <_end+0x303d>
    901d:	00 00                	add    BYTE PTR [rax],al
    901f:	01 0b                	add    DWORD PTR [rbx],ecx
    9021:	30 00                	xor    BYTE PTR [rax],al
    9023:	00 21                	add    BYTE PTR [rcx],ah
    9025:	00 04 e5 16 00 00 2c 	add    BYTE PTR [riz*8+0x2c000016],al
    902c:	1f                   	(bad)
    902d:	03 0c dc             	add    ecx,DWORD PTR [rsp+rbx*8]
    9030:	16                   	(bad)
    9031:	00 00                	add    BYTE PTR [rax],al
    9033:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9034:	21 00                	and    DWORD PTR [rax],eax
    9036:	00 07                	add    BYTE PTR [rdi],al
    9038:	39 00                	cmp    DWORD PTR [rax],eax
    903a:	00 01                	add    BYTE PTR [rcx],al
    903c:	0b 30                	or     esi,DWORD PTR [rax]
    903e:	00 00                	add    BYTE PTR [rax],al
    9040:	21 00                	and    DWORD PTR [rax],eax
    9042:	0f 44 13             	cmove  edx,DWORD PTR [rbx]
    9045:	00 00                	add    BYTE PTR [rax],al
    9047:	2c ba                	sub    al,0xba
    9049:	1d 44 13 00 00       	sbb    eax,0x1344
    904e:	0b 30                	or     esi,DWORD PTR [rax]
    9050:	00 00                	add    BYTE PTR [rax],al
    9052:	26 39 00             	es cmp DWORD PTR [rax],eax
    9055:	00 01                	add    BYTE PTR [rcx],al
    9057:	0b 30                	or     esi,DWORD PTR [rax]
    9059:	00 00                	add    BYTE PTR [rax],al
    905b:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    9062:	44 13 00             	adc    r8d,DWORD PTR [rax]
    9065:	00 2c b8             	add    BYTE PTR [rax+rdi*4],ch
    9068:	17                   	(bad)
    9069:	44 13 00             	adc    r8d,DWORD PTR [rax]
    906c:	00 f3                	add    bl,dh
    906e:	2e 00 00             	cs add BYTE PTR [rax],al
    9071:	45 39 00             	cmp    DWORD PTR [r8],r8d
    9074:	00 01                	add    BYTE PTR [rcx],al
    9076:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    907a:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    9081:	43 16                	rex.XB (bad)
    9083:	00 00                	add    BYTE PTR [rax],al
    9085:	2c de                	sub    al,0xde
    9087:	1d 43 16 00 00       	sbb    eax,0x1643
    908c:	0b 30                	or     esi,DWORD PTR [rax]
    908e:	00 00                	add    BYTE PTR [rax],al
    9090:	64 39 00             	cmp    DWORD PTR fs:[rax],eax
    9093:	00 01                	add    BYTE PTR [rcx],al
    9095:	0b 30                	or     esi,DWORD PTR [rax]
    9097:	00 00                	add    BYTE PTR [rax],al
    9099:	01 0b                	add    DWORD PTR [rbx],ecx
    909b:	30 00                	xor    BYTE PTR [rax],al
    909d:	00 00                	add    BYTE PTR [rax],al
    909f:	0f 43 16             	cmovae edx,DWORD PTR [rsi]
    90a2:	00 00                	add    BYTE PTR [rax],al
    90a4:	2c dc                	sub    al,0xdc
    90a6:	17                   	(bad)
    90a7:	43 16                	rex.XB (bad)
    90a9:	00 00                	add    BYTE PTR [rax],al
    90ab:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90af:	83 39 00             	cmp    DWORD PTR [rcx],0x0
    90b2:	00 01                	add    BYTE PTR [rcx],al
    90b4:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90b8:	01 0b                	add    DWORD PTR [rbx],ecx
    90ba:	30 00                	xor    BYTE PTR [rax],al
    90bc:	00 00                	add    BYTE PTR [rax],al
    90be:	0f 67 12             	packuswb mm2,QWORD PTR [rdx]
    90c1:	00 00                	add    BYTE PTR [rax],al
    90c3:	2c c4                	sub    al,0xc4
    90c5:	1d 67 12 00 00       	sbb    eax,0x1267
    90ca:	0b 30                	or     esi,DWORD PTR [rax]
    90cc:	00 00                	add    BYTE PTR [rax],al
    90ce:	a2 39 00 00 01 0b 30 	movabs ds:0x300b01000039,al
    90d5:	00 00 
    90d7:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    90de:	67 12 00             	adc    al,BYTE PTR [eax]
    90e1:	00 2c c2             	add    BYTE PTR [rdx+rax*8],ch
    90e4:	17                   	(bad)
    90e5:	67 12 00             	adc    al,BYTE PTR [eax]
    90e8:	00 f3                	add    bl,dh
    90ea:	2e 00 00             	cs add BYTE PTR [rax],al
    90ed:	c1 39 00             	sar    DWORD PTR [rcx],0x0
    90f0:	00 01                	add    BYTE PTR [rcx],al
    90f2:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90f6:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    90fd:	ea                   	(bad)
    90fe:	27                   	(bad)
    90ff:	00 00                	add    BYTE PTR [rax],al
    9101:	2c e9                	sub    al,0xe9
    9103:	1d ea 27 00 00       	sbb    eax,0x27ea
    9108:	0b 30                	or     esi,DWORD PTR [rax]
    910a:	00 00                	add    BYTE PTR [rax],al
    910c:	e0 39                	loopne 9147 <_end+0x312f>
    910e:	00 00                	add    BYTE PTR [rax],al
    9110:	01 0b                	add    DWORD PTR [rbx],ecx
    9112:	30 00                	xor    BYTE PTR [rax],al
    9114:	00 01                	add    BYTE PTR [rcx],al
    9116:	0b 30                	or     esi,DWORD PTR [rax]
    9118:	00 00                	add    BYTE PTR [rax],al
    911a:	00 0f                	add    BYTE PTR [rdi],cl
    911c:	ea                   	(bad)
    911d:	27                   	(bad)
    911e:	00 00                	add    BYTE PTR [rax],al
    9120:	2c e7                	sub    al,0xe7
    9122:	17                   	(bad)
    9123:	ea                   	(bad)
    9124:	27                   	(bad)
    9125:	00 00                	add    BYTE PTR [rax],al
    9127:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    912b:	ff                   	(bad)
    912c:	39 00                	cmp    DWORD PTR [rax],eax
    912e:	00 01                	add    BYTE PTR [rcx],al
    9130:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9134:	01 0b                	add    DWORD PTR [rbx],ecx
    9136:	30 00                	xor    BYTE PTR [rax],al
    9138:	00 00                	add    BYTE PTR [rax],al
    913a:	04 7f                	add    al,0x7f
    913c:	15 00 00 2c 12       	adc    eax,0x122c0000
    9141:	01 1d 7f 15 00 00    	add    DWORD PTR [rip+0x157f],ebx        # a6c6 <_end+0x46ae>
    9147:	0b 30                	or     esi,DWORD PTR [rax]
    9149:	00 00                	add    BYTE PTR [rax],al
    914b:	24 3a                	and    al,0x3a
    914d:	00 00                	add    BYTE PTR [rax],al
    914f:	01 0b                	add    DWORD PTR [rbx],ecx
    9151:	30 00                	xor    BYTE PTR [rax],al
    9153:	00 01                	add    BYTE PTR [rcx],al
    9155:	9c                   	pushf
    9156:	24 00                	and    al,0x0
    9158:	00 01                	add    BYTE PTR [rcx],al
    915a:	2e 23 00             	cs and eax,DWORD PTR [rax]
    915d:	00 00                	add    BYTE PTR [rax],al
    915f:	04 7f                	add    al,0x7f
    9161:	15 00 00 2c 10       	adc    eax,0x102c0000
    9166:	01 17                	add    DWORD PTR [rdi],edx
    9168:	7f 15                	jg     917f <_end+0x3167>
    916a:	00 00                	add    BYTE PTR [rax],al
    916c:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9170:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    9173:	00 01                	add    BYTE PTR [rcx],al
    9175:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9179:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    9180:	23 00                	and    eax,DWORD PTR [rax]
    9182:	00 00                	add    BYTE PTR [rax],al
    9184:	0e                   	(bad)
    9185:	4e 27                	rex.WRX (bad)
    9187:	00 00                	add    BYTE PTR [rax],al
    9189:	2c 99                	sub    al,0x99
    918b:	01 14 c5 21 00 00 65 	add    DWORD PTR [rax*8+0x65000021],edx
    9192:	3a 00                	cmp    al,BYTE PTR [rax]
    9194:	00 01                	add    BYTE PTR [rcx],al
    9196:	0b 30                	or     esi,DWORD PTR [rax]
    9198:	00 00                	add    BYTE PTR [rax],al
    919a:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    91a0:	04 c3                	add    al,0xc3
    91a2:	1d 00 00 2c fc       	sbb    eax,0xfc2c0000
    91a7:	01 16                	add    DWORD PTR [rsi],edx
    91a9:	ba 1d 00 00 be       	mov    edx,0xbe00001d
    91ae:	21 00                	and    DWORD PTR [rax],eax
    91b0:	00 8a 3a 00 00 01    	add    BYTE PTR [rdx+0x100003a],cl
    91b6:	0b 30                	or     esi,DWORD PTR [rax]
    91b8:	00 00                	add    BYTE PTR [rax],al
    91ba:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    91c0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91c1:	21 00                	and    DWORD PTR [rax],eax
    91c3:	00 00                	add    BYTE PTR [rax],al
    91c5:	04 55                	add    al,0x55
    91c7:	32 00                	xor    al,BYTE PTR [rax]
    91c9:	00 2c 01             	add    BYTE PTR [rcx+rax*1],ch
    91cc:	02 1f                	add    bl,BYTE PTR [rdi]
    91ce:	4c 32 00             	rex.WR xor r8b,BYTE PTR [rax]
    91d1:	00 91 21 00 00 af    	add    BYTE PTR [rcx-0x50ffffdf],dl
    91d7:	3a 00                	cmp    al,BYTE PTR [rax]
    91d9:	00 01                	add    BYTE PTR [rcx],al
    91db:	0b 30                	or     esi,DWORD PTR [rax]
    91dd:	00 00                	add    BYTE PTR [rax],al
    91df:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    91e5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91e6:	21 00                	and    DWORD PTR [rax],eax
    91e8:	00 00                	add    BYTE PTR [rax],al
    91ea:	1b 4c 30 00          	sbb    ecx,DWORD PTR [rax+rsi*1+0x0]
    91ee:	00 60 2f             	add    BYTE PTR [rax+0x2f],ah
    91f1:	33 08                	xor    ecx,DWORD PTR [rax]
    91f3:	f5                   	cmc
    91f4:	3b 00                	cmp    eax,DWORD PTR [rax]
    91f6:	00 06                	add    BYTE PTR [rsi],al
    91f8:	73 12                	jae    920c <_end+0x31f4>
    91fa:	00 00                	add    BYTE PTR [rax],al
    91fc:	2f                   	(bad)
    91fd:	37                   	(bad)
    91fe:	09 e2                	or     edx,esp
    9200:	22 00                	and    al,BYTE PTR [rax]
    9202:	00 00                	add    BYTE PTR [rax],al
    9204:	06                   	(bad)
    9205:	3f                   	(bad)
    9206:	18 00                	sbb    BYTE PTR [rax],al
    9208:	00 2f                	add    BYTE PTR [rdi],ch
    920a:	38 09                	cmp    BYTE PTR [rcx],cl
    920c:	e2 22                	loop   9230 <_end+0x3218>
    920e:	00 00                	add    BYTE PTR [rax],al
    9210:	08 06                	or     BYTE PTR [rsi],al
    9212:	de 2e                	fisubr WORD PTR [rsi]
    9214:	00 00                	add    BYTE PTR [rax],al
    9216:	2f                   	(bad)
    9217:	3e 09 e2             	ds or  edx,esp
    921a:	22 00                	and    al,BYTE PTR [rax]
    921c:	00 10                	add    BYTE PTR [rax],dl
    921e:	06                   	(bad)
    921f:	4b 0f 00 00          	rex.WXB sldt WORD PTR [r8]
    9223:	2f                   	(bad)
    9224:	44 09 e2             	or     edx,r12d
    9227:	22 00                	and    al,BYTE PTR [rax]
    9229:	00 18                	add    BYTE PTR [rax],bl
    922b:	06                   	(bad)
    922c:	e4 2d                	in     al,0x2d
    922e:	00 00                	add    BYTE PTR [rax],al
    9230:	2f                   	(bad)
    9231:	45 09 e2             	or     r10d,r12d
    9234:	22 00                	and    al,BYTE PTR [rax]
    9236:	00 20                	add    BYTE PTR [rax],ah
    9238:	06                   	(bad)
    9239:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    923a:	12 00                	adc    al,BYTE PTR [rax]
    923c:	00 2f                	add    BYTE PTR [rdi],ch
    923e:	46 09 e2             	rex.RX or edx,r12d
    9241:	22 00                	and    al,BYTE PTR [rax]
    9243:	00 28                	add    BYTE PTR [rax],ch
    9245:	06                   	(bad)
    9246:	3b 18                	cmp    ebx,DWORD PTR [rax]
    9248:	00 00                	add    BYTE PTR [rax],al
    924a:	2f                   	(bad)
    924b:	47 09 e2             	rex.RXB or r10d,r12d
    924e:	22 00                	and    al,BYTE PTR [rax]
    9250:	00 30                	add    BYTE PTR [rax],dh
    9252:	06                   	(bad)
    9253:	da 2e                	fisubr DWORD PTR [rsi]
    9255:	00 00                	add    BYTE PTR [rax],al
    9257:	2f                   	(bad)
    9258:	48 09 e2             	or     rdx,rsp
    925b:	22 00                	and    al,BYTE PTR [rax]
    925d:	00 38                	add    BYTE PTR [rax],bh
    925f:	06                   	(bad)
    9260:	a0 11 00 00 2f 49 09 	movabs al,ds:0x22e209492f000011
    9267:	e2 22 
    9269:	00 00                	add    BYTE PTR [rax],al
    926b:	40 06                	rex (bad)
    926d:	e2 18                	loop   9287 <_end+0x326f>
    926f:	00 00                	add    BYTE PTR [rax],al
    9271:	2f                   	(bad)
    9272:	4a 09 e2             	rex.WX or rdx,rsp
    9275:	22 00                	and    al,BYTE PTR [rax]
    9277:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    927a:	7c 10                	jl     928c <_end+0x3274>
    927c:	00 00                	add    BYTE PTR [rax],al
    927e:	2f                   	(bad)
    927f:	4b 08 e7             	rex.WXB or r15b,spl
    9282:	22 00                	and    al,BYTE PTR [rax]
    9284:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    9287:	80 10 00             	adc    BYTE PTR [rax],0x0
    928a:	00 2f                	add    BYTE PTR [rdi],ch
    928c:	4c 08 e7             	rex.WR or dil,r12b
    928f:	22 00                	and    al,BYTE PTR [rax]
    9291:	00 51 06             	add    BYTE PTR [rcx+0x6],dl
    9294:	10 19                	adc    BYTE PTR [rcx],bl
    9296:	00 00                	add    BYTE PTR [rax],al
    9298:	2f                   	(bad)
    9299:	4e 08 e7             	rex.WRX or dil,r12b
    929c:	22 00                	and    al,BYTE PTR [rax]
    929e:	00 52 06             	add    BYTE PTR [rdx+0x6],dl
    92a1:	5a                   	pop    rdx
    92a2:	27                   	(bad)
    92a3:	00 00                	add    BYTE PTR [rax],al
    92a5:	2f                   	(bad)
    92a6:	50                   	push   rax
    92a7:	08 e7                	or     bh,ah
    92a9:	22 00                	and    al,BYTE PTR [rax]
    92ab:	00 53 06             	add    BYTE PTR [rbx+0x6],dl
    92ae:	36 13 00             	ss adc eax,DWORD PTR [rax]
    92b1:	00 2f                	add    BYTE PTR [rdi],ch
    92b3:	52                   	push   rdx
    92b4:	08 e7                	or     bh,ah
    92b6:	22 00                	and    al,BYTE PTR [rax]
    92b8:	00 54 06 df          	add    BYTE PTR [rsi+rax*1-0x21],dl
    92bc:	1f                   	(bad)
    92bd:	00 00                	add    BYTE PTR [rax],al
    92bf:	2f                   	(bad)
    92c0:	54                   	push   rsp
    92c1:	08 e7                	or     bh,ah
    92c3:	22 00                	and    al,BYTE PTR [rax]
    92c5:	00 55 06             	add    BYTE PTR [rbp+0x6],dl
    92c8:	ac                   	lods   al,BYTE PTR ds:[rsi]
    92c9:	2f                   	(bad)
    92ca:	00 00                	add    BYTE PTR [rax],al
    92cc:	2f                   	(bad)
    92cd:	5b                   	pop    rbx
    92ce:	08 e7                	or     bh,ah
    92d0:	22 00                	and    al,BYTE PTR [rax]
    92d2:	00 56 06             	add    BYTE PTR [rsi+0x6],dl
    92d5:	ea                   	(bad)
    92d6:	30 00                	xor    BYTE PTR [rax],al
    92d8:	00 2f                	add    BYTE PTR [rdi],ch
    92da:	5c                   	pop    rsp
    92db:	08 e7                	or     bh,ah
    92dd:	22 00                	and    al,BYTE PTR [rax]
    92df:	00 57 06             	add    BYTE PTR [rdi+0x6],dl
    92e2:	0c 19                	or     al,0x19
    92e4:	00 00                	add    BYTE PTR [rax],al
    92e6:	2f                   	(bad)
    92e7:	5f                   	pop    rdi
    92e8:	08 e7                	or     bh,ah
    92ea:	22 00                	and    al,BYTE PTR [rax]
    92ec:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    92ef:	56                   	push   rsi
    92f0:	27                   	(bad)
    92f1:	00 00                	add    BYTE PTR [rax],al
    92f3:	2f                   	(bad)
    92f4:	61                   	(bad)
    92f5:	08 e7                	or     bh,ah
    92f7:	22 00                	and    al,BYTE PTR [rax]
    92f9:	00 59 06             	add    BYTE PTR [rcx+0x6],bl
    92fc:	32 13                	xor    dl,BYTE PTR [rbx]
    92fe:	00 00                	add    BYTE PTR [rax],al
    9300:	2f                   	(bad)
    9301:	63 08                	movsxd ecx,DWORD PTR [rax]
    9303:	e7 22                	out    0x22,eax
    9305:	00 00                	add    BYTE PTR [rax],al
    9307:	5a                   	pop    rdx
    9308:	06                   	(bad)
    9309:	db 1f                	fistp  DWORD PTR [rdi]
    930b:	00 00                	add    BYTE PTR [rax],al
    930d:	2f                   	(bad)
    930e:	65 08 e7             	gs or  bh,ah
    9311:	22 00                	and    al,BYTE PTR [rax]
    9313:	00 5b 06             	add    BYTE PTR [rbx+0x6],bl
    9316:	a8 2f                	test   al,0x2f
    9318:	00 00                	add    BYTE PTR [rax],al
    931a:	2f                   	(bad)
    931b:	6c                   	ins    BYTE PTR es:[rdi],dx
    931c:	08 e7                	or     bh,ah
    931e:	22 00                	and    al,BYTE PTR [rax]
    9320:	00 5c 06 e6          	add    BYTE PTR [rsi+rax*1-0x1a],bl
    9324:	30 00                	xor    BYTE PTR [rax],al
    9326:	00 2f                	add    BYTE PTR [rdi],ch
    9328:	6d                   	ins    DWORD PTR es:[rdi],dx
    9329:	08 e7                	or     bh,ah
    932b:	22 00                	and    al,BYTE PTR [rax]
    932d:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    9330:	0c 41                	or     al,0x41
    9332:	2a 00                	sub    al,BYTE PTR [rax]
    9334:	00 2f                	add    BYTE PTR [rdi],ch
    9336:	7a 0e                	jp     9346 <_end+0x332e>
    9338:	e2 22                	loop   935c <_end+0x3344>
    933a:	00 00                	add    BYTE PTR [rax],al
    933c:	10 3c 00             	adc    BYTE PTR [rax+rax*1],bh
    933f:	00 01                	add    BYTE PTR [rcx],al
    9341:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9342:	21 00                	and    DWORD PTR [rax],eax
    9344:	00 01                	add    BYTE PTR [rcx],al
    9346:	d3 23                	shl    DWORD PTR [rbx],cl
    9348:	00 00                	add    BYTE PTR [rax],al
    934a:	00 37                	add    BYTE PTR [rdi],dh
    934c:	21 0e                	and    DWORD PTR [rsi],ecx
    934e:	00 00                	add    BYTE PTR [rax],al
    9350:	2f                   	(bad)
    9351:	7d 16                	jge    9369 <_end+0x3351>
    9353:	1c 3c                	sbb    al,0x3c
    9355:	00 00                	add    BYTE PTR [rax],al
    9357:	0d af 3a 00 00       	or     eax,0x3aaf
    935c:	28 c7                	sub    bh,al
    935e:	10 00                	adc    BYTE PTR [rax],al
    9360:	00 22                	add    BYTE PTR [rdx],ah
    9362:	5c                   	pop    rsp
    9363:	03 33                	add    esi,DWORD PTR [rbx]
    9365:	3c 00                	cmp    al,0x0
    9367:	00 01                	add    BYTE PTR [rcx],al
    9369:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    936c:	00 00                	add    BYTE PTR [rax],al
    936e:	0c 78                	or     al,0x78
    9370:	15 00 00 22 b8       	adc    eax,0xb8220000
    9375:	0c a6                	or     al,0xa6
    9377:	21 00                	and    DWORD PTR [rax],eax
    9379:	00 49 3c             	add    BYTE PTR [rcx+0x3c],cl
    937c:	00 00                	add    BYTE PTR [rax],al
    937e:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9384:	0e                   	(bad)
    9385:	3f                   	(bad)
    9386:	25 00 00 22 5e       	and    eax,0x5e220000
    938b:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    938e:	21 00                	and    DWORD PTR [rax],eax
    9390:	00 60 3c             	add    BYTE PTR [rax+0x3c],ah
    9393:	00 00                	add    BYTE PTR [rax],al
    9395:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    939b:	0e                   	(bad)
    939c:	dd 2d 00 00 22 60    	(bad)  [rip+0x60220000]        # 602293a2 <_end+0x6022338a>
    93a2:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    93a5:	21 00                	and    DWORD PTR [rax],eax
    93a7:	00 77 3c             	add    BYTE PTR [rdi+0x3c],dh
    93aa:	00 00                	add    BYTE PTR [rax],al
    93ac:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    93b2:	0c f8                	or     al,0xf8
    93b4:	33 00                	xor    eax,DWORD PTR [rax]
    93b6:	00 22                	add    BYTE PTR [rdx],ah
    93b8:	ec                   	in     al,dx
    93b9:	0c a6                	or     al,0xa6
    93bb:	21 00                	and    DWORD PTR [rax],eax
    93bd:	00 8d 3c 00 00 01    	add    BYTE PTR [rbp+0x100003c],cl
    93c3:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    93c6:	00 00                	add    BYTE PTR [rax],al
    93c8:	0e                   	(bad)
    93c9:	d1 0b                	ror    DWORD PTR [rbx],1
    93cb:	00 00                	add    BYTE PTR [rax],al
    93cd:	22 3f                	and    bh,BYTE PTR [rdi]
    93cf:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    93d2:	21 00                	and    DWORD PTR [rax],eax
    93d4:	00 a4 3c 00 00 01 8e 	add    BYTE PTR [rsp+rdi*1-0x71ff0000],ah
    93db:	2c 00                	sub    al,0x0
    93dd:	00 00                	add    BYTE PTR [rax],al
    93df:	0e                   	(bad)
    93e0:	9d                   	popf
    93e1:	10 00                	adc    BYTE PTR [rax],al
    93e3:	00 22                	add    BYTE PTR [rdx],ah
    93e5:	3d 03 0c a6 21       	cmp    eax,0x21a60c03
    93ea:	00 00                	add    BYTE PTR [rax],al
    93ec:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    93f0:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    93f6:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    93fa:	00 0d 7d 2c 00 00    	add    BYTE PTR [rip+0x2c7d],cl        # c07d <_end+0x6065>
    9400:	0c 3b                	or     al,0x3b
    9402:	0c 00                	or     al,0x0
    9404:	00 02                	add    BYTE PTR [rdx],al
    9406:	c4 01 e2 22          	(bad)
    940a:	00 00                	add    BYTE PTR [rax],al
    940c:	e5 3c                	in     eax,0x3c
    940e:	00 00                	add    BYTE PTR [rax],al
    9410:	01 e2                	add    edx,esp
    9412:	22 00                	and    al,BYTE PTR [rax]
    9414:	00 01                	add    BYTE PTR [rcx],al
    9416:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9417:	21 00                	and    DWORD PTR [rax],eax
    9419:	00 01                	add    BYTE PTR [rcx],al
    941b:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    941e:	00 00                	add    BYTE PTR [rax],al
    9420:	0e                   	(bad)
    9421:	9a                   	(bad)
    9422:	2b 00                	sub    eax,DWORD PTR [rax]
    9424:	00 22                	add    BYTE PTR [rdx],ah
    9426:	08 01                	or     BYTE PTR [rcx],al
    9428:	0e                   	(bad)
    9429:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    942c:	00 01                	add    BYTE PTR [rcx],al
    942e:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    9433:	23 00                	and    eax,DWORD PTR [rax]
    9435:	00 01                	add    BYTE PTR [rcx],al
    9437:	d3 23                	shl    DWORD PTR [rbx],cl
    9439:	00 00                	add    BYTE PTR [rax],al
    943b:	00 0c 5e             	add    BYTE PTR [rsi+rbx*2],cl
    943e:	32 00                	xor    al,BYTE PTR [rax]
    9440:	00 02                	add    BYTE PTR [rdx],al
    9442:	cf                   	iret
    9443:	01 2e                	add    DWORD PTR [rsi],ebp
    9445:	23 00                	and    eax,DWORD PTR [rax]
    9447:	00 26                	add    BYTE PTR [rsi],ah
    9449:	3d 00 00 01 d4       	cmp    eax,0xd4010000
    944e:	22 00                	and    al,BYTE PTR [rax]
    9450:	00 01                	add    BYTE PTR [rcx],al
    9452:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9455:	00 01                	add    BYTE PTR [rcx],al
    9457:	2e 23 00             	cs and eax,DWORD PTR [rax]
    945a:	00 01                	add    BYTE PTR [rcx],al
    945c:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    945f:	00 00                	add    BYTE PTR [rax],al
    9461:	0e                   	(bad)
    9462:	cd 2d                	int    0x2d
    9464:	00 00                	add    BYTE PTR [rax],al
    9466:	22 0f                	and    cl,BYTE PTR [rdi]
    9468:	01 0e                	add    DWORD PTR [rsi],ecx
    946a:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    946d:	00 47 3d             	add    BYTE PTR [rdi+0x3d],al
    9470:	00 00                	add    BYTE PTR [rax],al
    9472:	01 d3                	add    ebx,edx
    9474:	23 00                	and    eax,DWORD PTR [rax]
    9476:	00 01                	add    BYTE PTR [rcx],al
    9478:	d3 23                	shl    DWORD PTR [rbx],cl
    947a:	00 00                	add    BYTE PTR [rax],al
    947c:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9482:	0e                   	(bad)
    9483:	39 23                	cmp    DWORD PTR [rbx],esp
    9485:	00 00                	add    BYTE PTR [rax],al
    9487:	22 0b                	and    cl,BYTE PTR [rbx]
    9489:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    948c:	21 00                	and    DWORD PTR [rax],eax
    948e:	00 68 3d             	add    BYTE PTR [rax+0x3d],ch
    9491:	00 00                	add    BYTE PTR [rax],al
    9493:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9499:	b2 21                	mov    dl,0x21
    949b:	00 00                	add    BYTE PTR [rax],al
    949d:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    94a3:	0e                   	(bad)
    94a4:	be 1f 00 00 22       	mov    esi,0x2200001f
    94a9:	43 03 0c a6          	add    ecx,DWORD PTR [r14+r12*4]
    94ad:	21 00                	and    DWORD PTR [rax],eax
    94af:	00 84 3d 00 00 01 8e 	add    BYTE PTR [rbp+rdi*1-0x71ff0000],al
    94b6:	2c 00                	sub    al,0x0
    94b8:	00 01                	add    BYTE PTR [rcx],al
    94ba:	84 3d 00 00 00 0d    	test   BYTE PTR [rip+0xd000000],bh        # d0094c0 <_end+0xd0034a8>
    94c0:	89 2c 00             	mov    DWORD PTR [rax+rax*1],ebp
    94c3:	00 0e                	add    BYTE PTR [rsi],cl
    94c5:	6d                   	ins    DWORD PTR es:[rdi],dx
    94c6:	18 00                	sbb    BYTE PTR [rax],al
    94c8:	00 22                	add    BYTE PTR [rdx],ah
    94ca:	11 03                	adc    DWORD PTR [rbx],eax
    94cc:	11 b2 21 00 00 a0    	adc    DWORD PTR [rdx-0x5fffffdf],esi
    94d2:	3d 00 00 01 8e       	cmp    eax,0x8e010000
    94d7:	2c 00                	sub    al,0x0
    94d9:	00 00                	add    BYTE PTR [rax],al
    94db:	0e                   	(bad)
    94dc:	d2 0b                	ror    BYTE PTR [rbx],cl
    94de:	00 00                	add    BYTE PTR [rax],al
    94e0:	22 40 02             	and    al,BYTE PTR [rax+0x2]
    94e3:	0c a6                	or     al,0xa6
    94e5:	21 00                	and    DWORD PTR [rax],eax
    94e7:	00 b7 3d 00 00 01    	add    BYTE PTR [rdi+0x100003d],dh
    94ed:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    94f0:	00 00                	add    BYTE PTR [rax],al
    94f2:	37                   	(bad)
    94f3:	da 24 00             	fisub  DWORD PTR [rax+rax*1]
    94f6:	00 30                	add    BYTE PTR [rax],dh
    94f8:	2f                   	(bad)
    94f9:	01 a6 21 00 00 28    	add    DWORD PTR [rsi+0x28000021],esp
    94ff:	21 23                	and    DWORD PTR [rbx],esp
    9501:	00 00                	add    BYTE PTR [rax],al
    9503:	22 6e 03             	and    ch,BYTE PTR [rsi+0x3]
    9506:	d5 3d 00 00          	{rex2 0x3d} add BYTE PTR [r24],r8b
    950a:	01 d3                	add    ebx,edx
    950c:	23 00                	and    eax,DWORD PTR [rax]
    950e:	00 00                	add    BYTE PTR [rax],al
    9510:	0c b7                	or     al,0xb7
    9512:	14 00                	adc    al,0x0
    9514:	00 22                	add    BYTE PTR [rdx],ah
    9516:	9e                   	sahf
    9517:	0c a6                	or     al,0xa6
    9519:	21 00                	and    DWORD PTR [rax],eax
    951b:	00 eb                	add    bl,ch
    951d:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    9522:	23 00                	and    eax,DWORD PTR [rax]
    9524:	00 00                	add    BYTE PTR [rax],al
    9526:	0c cc                	or     al,0xcc
    9528:	23 00                	and    eax,DWORD PTR [rax]
    952a:	00 22                	add    BYTE PTR [rdx],ah
    952c:	a0 0c a6 21 00 00 06 	movabs al,ds:0x3e06000021a60c
    9533:	3e 00 
    9535:	00 01                	add    BYTE PTR [rcx],al
    9537:	d3 23                	shl    DWORD PTR [rbx],cl
    9539:	00 00                	add    BYTE PTR [rax],al
    953b:	01 d3                	add    ebx,edx
    953d:	23 00                	and    eax,DWORD PTR [rax]
    953f:	00 00                	add    BYTE PTR [rax],al
    9541:	28 ea                	sub    dl,ch
    9543:	2b 00                	sub    eax,DWORD PTR [rax]
    9545:	00 22                	add    BYTE PTR [rdx],ah
    9547:	16                   	(bad)
    9548:	03 18                	add    ebx,DWORD PTR [rax]
    954a:	3e 00 00             	ds add BYTE PTR [rax],al
    954d:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9553:	28 38                	sub    BYTE PTR [rax],bh
    9555:	25 00 00 22 4e       	and    eax,0x4e220000
    955a:	01 2f                	add    DWORD PTR [rdi],ebp
    955c:	3e 00 00             	ds add BYTE PTR [rax],al
    955f:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9565:	e2 22                	loop   9589 <_end+0x3571>
    9567:	00 00                	add    BYTE PTR [rax],al
    9569:	00 0e                	add    BYTE PTR [rsi],cl
    956b:	46 23 00             	rex.RX and r8d,DWORD PTR [rax]
    956e:	00 22                	add    BYTE PTR [rdx],ah
    9570:	53                   	push   rbx
    9571:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    9574:	21 00                	and    DWORD PTR [rax],eax
    9576:	00 55 3e             	add    BYTE PTR [rbp+0x3e],dl
    9579:	00 00                	add    BYTE PTR [rax],al
    957b:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9581:	e2 22                	loop   95a5 <_end+0x358d>
    9583:	00 00                	add    BYTE PTR [rax],al
    9585:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    958b:	2e 23 00             	cs and eax,DWORD PTR [rax]
    958e:	00 00                	add    BYTE PTR [rax],al
    9590:	37                   	(bad)
    9591:	92                   	xchg   edx,eax
    9592:	2f                   	(bad)
    9593:	00 00                	add    BYTE PTR [rax],al
    9595:	22 c2                	and    al,dl
    9597:	0e                   	(bad)
    9598:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    959b:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    959e:	0f 00 00             	sldt   WORD PTR [rax]
    95a1:	22 d3                	and    dl,bl
    95a3:	0e                   	(bad)
    95a4:	e2 22                	loop   95c8 <_end+0x35b0>
    95a6:	00 00                	add    BYTE PTR [rax],al
    95a8:	77 3e                	ja     95e8 <_end+0x35d0>
    95aa:	00 00                	add    BYTE PTR [rax],al
    95ac:	01 e2                	add    edx,esp
    95ae:	22 00                	and    al,BYTE PTR [rax]
    95b0:	00 00                	add    BYTE PTR [rax],al
    95b2:	0e                   	(bad)
    95b3:	ec                   	in     al,dx
    95b4:	2f                   	(bad)
    95b5:	00 00                	add    BYTE PTR [rax],al
    95b7:	22 db                	and    bl,bl
    95b9:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    95bc:	21 00                	and    DWORD PTR [rax],eax
    95be:	00 93 3e 00 00 01    	add    BYTE PTR [rbx+0x100003e],dl
    95c4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    95c5:	21 00                	and    DWORD PTR [rax],eax
    95c7:	00 01                	add    BYTE PTR [rcx],al
    95c9:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    95cc:	00 00                	add    BYTE PTR [rax],al
    95ce:	0d 2e 00 00 00       	or     eax,0x2e
    95d3:	33 cb                	xor    ecx,ebx
    95d5:	1b 00                	sbb    eax,DWORD PTR [rax]
    95d7:	00 31                	add    BYTE PTR [rcx],dh
    95d9:	0f 0b                	ud2
    95db:	b7 3e                	mov    bh,0x3e
    95dd:	00 00                	add    BYTE PTR [rax],al
    95df:	83 01 66             	add    DWORD PTR [rcx],0x66
    95e2:	13 00                	adc    eax,DWORD PTR [rax]
    95e4:	00 31                	add    BYTE PTR [rcx],dh
    95e6:	11 0b                	adc    DWORD PTR [rbx],ecx
    95e8:	84 01                	test   BYTE PTR [rcx],al
    95ea:	76 31                	jbe    961d <_end+0x3605>
    95ec:	00 31                	add    BYTE PTR [rcx],dh
    95ee:	13 12                	adc    edx,DWORD PTR [rdx]
    95f0:	00 00                	add    BYTE PTR [rax],al
    95f2:	37                   	(bad)
    95f3:	b9 10 00 00 32       	mov    ecx,0x32000010
    95f8:	48 10 dd             	rex.W adc bpl,bl
    95fb:	23 00                	and    eax,DWORD PTR [rax]
    95fd:	00 0c 11             	add    BYTE PTR [rcx+rdx*1],cl
    9600:	10 00                	adc    BYTE PTR [rax],al
    9602:	00 32                	add    BYTE PTR [rdx],dh
    9604:	4f 0f 2e 00          	rex.WRXB ucomiss xmm8,DWORD PTR [r8]
    9608:	00 00                	add    BYTE PTR [rax],al
    960a:	de 3e                	fidivr WORD PTR [rsi]
    960c:	00 00                	add    BYTE PTR [rax],al
    960e:	01 e9                	add    ecx,ebp
    9610:	23 00                	and    eax,DWORD PTR [rax]
    9612:	00 01                	add    BYTE PTR [rcx],al
    9614:	e9 23 00 00 00       	jmp    963c <_end+0x3624>
    9619:	0c 5d                	or     al,0x5d
    961b:	23 00                	and    eax,DWORD PTR [rax]
    961d:	00 32                	add    BYTE PTR [rdx],dh
    961f:	53                   	push   rbx
    9620:	0f e9 23             	psubsw mm4,QWORD PTR [rbx]
    9623:	00 00                	add    BYTE PTR [rax],al
    9625:	f4                   	hlt
    9626:	3e 00 00             	ds add BYTE PTR [rax],al
    9629:	01 f4                	add    esp,esi
    962b:	3e 00 00             	ds add BYTE PTR [rax],al
    962e:	00 0d 17 36 00 00    	add    BYTE PTR [rip+0x3617],cl        # cc4b <_end+0x6c33>
    9634:	0c a6                	or     al,0xa6
    9636:	22 00                	and    al,BYTE PTR [rax]
    9638:	00 32                	add    BYTE PTR [rdx],dh
    963a:	4c 0f e9 23          	rex.WR psubsw mm4,QWORD PTR [rbx]
    963e:	00 00                	add    BYTE PTR [rax],al
    9640:	0f 3f                	(bad)
    9642:	00 00                	add    BYTE PTR [rax],al
    9644:	01 0f                	add    DWORD PTR [rdi],ecx
    9646:	3f                   	(bad)
    9647:	00 00                	add    BYTE PTR [rax],al
    9649:	00 0d e9 23 00 00    	add    BYTE PTR [rip+0x23e9],cl        # ba38 <_end+0x5a20>
    964f:	0c f4                	or     al,0xf4
    9651:	0d 00 00 32 b4       	or     eax,0xb4320000
    9656:	0e                   	(bad)
    9657:	e2 22                	loop   967b <_end+0x3663>
    9659:	00 00                	add    BYTE PTR [rax],al
    965b:	2a 3f                	sub    bh,BYTE PTR [rdi]
    965d:	00 00                	add    BYTE PTR [rax],al
    965f:	01 12                	add    DWORD PTR [rdx],edx
    9661:	36 00 00             	ss add BYTE PTR [rax],al
    9664:	00 0c f6             	add    BYTE PTR [rsi+rsi*8],cl
    9667:	0d 00 00 32 b8       	or     eax,0xb8320000
    966c:	0e                   	(bad)
    966d:	e2 22                	loop   9691 <_end+0x3679>
    966f:	00 00                	add    BYTE PTR [rax],al
    9671:	40 3f                	rex (bad)
    9673:	00 00                	add    BYTE PTR [rax],al
    9675:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    9678:	00 00                	add    BYTE PTR [rax],al
    967a:	00 0d f5 23 00 00    	add    BYTE PTR [rip+0x23f5],cl        # ba75 <_end+0x5a5d>
    9680:	0c 45                	or     al,0x45
    9682:	32 00                	xor    al,BYTE PTR [rax]
    9684:	00 32                	add    BYTE PTR [rdx],dh
    9686:	85 13                	test   DWORD PTR [rbx],edx
    9688:	f4                   	hlt
    9689:	3e 00 00             	ds add BYTE PTR [rax],al
    968c:	5b                   	pop    rbx
    968d:	3f                   	(bad)
    968e:	00 00                	add    BYTE PTR [rax],al
    9690:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    9693:	00 00                	add    BYTE PTR [rax],al
    9695:	00 0c cf             	add    BYTE PTR [rdi+rcx*8],cl
    9698:	19 00                	sbb    DWORD PTR [rax],eax
    969a:	00 32                	add    BYTE PTR [rdx],dh
    969c:	89 13                	mov    DWORD PTR [rbx],edx
    969e:	f4                   	hlt
    969f:	3e 00 00             	ds add BYTE PTR [rax],al
    96a2:	71 3f                	jno    96e3 <_end+0x36cb>
    96a4:	00 00                	add    BYTE PTR [rax],al
    96a6:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    96a9:	00 00                	add    BYTE PTR [rax],al
    96ab:	00 0e                	add    BYTE PTR [rsi],cl
    96ad:	f0 2a 00             	lock sub al,BYTE PTR [rax]
    96b0:	00 32                	add    BYTE PTR [rdx],dh
    96b2:	80 01 0c             	add    BYTE PTR [rcx],0xc
    96b5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    96b6:	21 00                	and    DWORD PTR [rax],eax
    96b8:	00 8d 3f 00 00 01    	add    BYTE PTR [rbp+0x100003f],cl
    96be:	8d 3f                	lea    edi,[rdi]
    96c0:	00 00                	add    BYTE PTR [rax],al
    96c2:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    96c8:	0d 2a 24 00 00       	or     eax,0x242a
    96cd:	0d 14 18 00 00       	or     eax,0x1814
    96d2:	13 92 3f 00 00 22    	adc    edx,DWORD PTR [rdx+0x2200003f]
    96d8:	94                   	xchg   esp,eax
    96d9:	1a 00                	sbb    al,BYTE PTR [rax]
    96db:	00 22                	add    BYTE PTR [rdx],ah
    96dd:	14 18                	adc    al,0x18
    96df:	00 00                	add    BYTE PTR [rax],al
    96e1:	0d 94 1a 00 00       	or     eax,0x1a94
    96e6:	13 a6 3f 00 00 22    	adc    esp,DWORD PTR [rsi+0x2200003f]
    96ec:	c0 18 00             	rcr    BYTE PTR [rax],0x0
    96ef:	00 0d df 1b 00 00    	add    BYTE PTR [rip+0x1bdf],cl        # b2d4 <_end+0x52bc>
    96f5:	13 b5 3f 00 00 22    	adc    esi,DWORD PTR [rbp+0x2200003f]
    96fb:	5f                   	pop    rdi
    96fc:	1e                   	(bad)
    96fd:	00 00                	add    BYTE PTR [rax],al
    96ff:	22 df                	and    bl,bh
    9701:	1b 00                	sbb    eax,DWORD PTR [rax]
    9703:	00 0d 5f 1e 00 00    	add    BYTE PTR [rip+0x1e5f],cl        # b568 <_end+0x5550>
    9709:	13 c9                	adc    ecx,ecx
    970b:	3f                   	(bad)
    970c:	00 00                	add    BYTE PTR [rax],al
    970e:	22 8b 1c 00 00 1b    	and    cl,BYTE PTR [rbx+0x1b00001c]
    9714:	40 08 00             	rex or BYTE PTR [rax],al
    9717:	00 10                	add    BYTE PTR [rax],dl
    9719:	33 07                	xor    eax,DWORD PTR [rdi]
    971b:	10 0d 40 00 00 06    	adc    BYTE PTR [rip+0x6000040],cl        # 6009761 <_end+0x6003749>
    9721:	a3 03 00 00 33 08 0b 	movabs ds:0x22e20b0833000003,eax
    9728:	e2 22 
    972a:	00 00                	add    BYTE PTR [rax],al
    972c:	00 06                	add    BYTE PTR [rsi],al
    972e:	e5 05                	in     eax,0x5
    9730:	00 00                	add    BYTE PTR [rax],al
    9732:	33 09                	xor    ecx,DWORD PTR [rcx]
    9734:	0e                   	(bad)
    9735:	b0 2c                	mov    al,0x2c
    9737:	00 00                	add    BYTE PTR [rax],al
    9739:	08 06                	or     BYTE PTR [rsi],al
    973b:	ea                   	(bad)
    973c:	05 00 00 33 0a       	add    eax,0xa330000
    9741:	0e                   	(bad)
    9742:	b0 2c                	mov    al,0x2c
    9744:	00 00                	add    BYTE PTR [rax],al
    9746:	0c 00                	or     al,0x0
    9748:	08 40 08             	or     BYTE PTR [rax+0x8],al
    974b:	00 00                	add    BYTE PTR [rax],al
    974d:	33 0b                	xor    ecx,DWORD PTR [rbx]
    974f:	03 d8                	add    ebx,eax
    9751:	3f                   	(bad)
    9752:	00 00                	add    BYTE PTR [rax],al
    9754:	38 69 02             	cmp    BYTE PTR [rcx+0x2],ch
    9757:	00 00                	add    BYTE PTR [rax],al
    9759:	34 08                	xor    al,0x8
    975b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    975c:	21 00                	and    DWORD PTR [rax],eax
    975e:	00 0f                	add    BYTE PTR [rdi],cl
    9760:	38 75 02             	cmp    BYTE PTR [rbp+0x2],dh
    9763:	00 00                	add    BYTE PTR [rax],al
    9765:	34 09                	xor    al,0x9
    9767:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9768:	21 00                	and    DWORD PTR [rax],eax
    976a:	00 02                	add    BYTE PTR [rdx],al
    976c:	38 c4                	cmp    ah,al
    976e:	00 00                	add    BYTE PTR [rax],al
    9770:	00 34 0a             	add    BYTE PTR [rdx+rcx*1],dh
    9773:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9774:	21 00                	and    DWORD PTR [rax],eax
    9776:	00 20                	add    BYTE PTR [rax],ah
    9778:	08 36                	or     BYTE PTR [rsi],dh
    977a:	03 00                	add    eax,DWORD PTR [rax]
    977c:	00 34 0c             	add    BYTE PTR [rsp+rcx*1],dh
    977f:	12 0d 40 00 00 08    	adc    cl,BYTE PTR [rip+0x8000040]        # 80097c5 <_end+0x80037ad>
    9785:	5f                   	pop    rdi
    9786:	07                   	(bad)
    9787:	00 00                	add    BYTE PTR [rax],al
    9789:	34 0d                	xor    al,0xd
    978b:	14 55                	adc    al,0x55
    978d:	40 00 00             	rex add BYTE PTR [rax],al
    9790:	0d 5a 40 00 00       	or     eax,0x405a
    9795:	58                   	pop    rax
    9796:	b0 2c                	mov    al,0x2c
    9798:	00 00                	add    BYTE PTR [rax],al
    979a:	69 40 00 00 01 3d 40 	imul   eax,DWORD PTR [rax+0x0],0x403d0100
    97a1:	00 00                	add    BYTE PTR [rax],al
    97a3:	00 1b                	add    BYTE PTR [rbx],bl
    97a5:	42 05 00 00 20 34    	rex.X add eax,0x34200000
    97ab:	0f 10 ab 40 00 00 06 	movups xmm5,XMMWORD PTR [rbx+0x6000040]
    97b2:	14 06                	adc    al,0x6
    97b4:	00 00                	add    BYTE PTR [rax],al
    97b6:	34 10                	xor    al,0x10
    97b8:	0e                   	(bad)
    97b9:	b0 2c                	mov    al,0x2c
    97bb:	00 00                	add    BYTE PTR [rax],al
    97bd:	00 06                	add    BYTE PTR [rsi],al
    97bf:	95                   	xchg   ebp,eax
    97c0:	04 00                	add    al,0x0
    97c2:	00 34 11             	add    BYTE PTR [rcx+rdx*1],dh
    97c5:	0e                   	(bad)
    97c6:	b0 2c                	mov    al,0x2c
    97c8:	00 00                	add    BYTE PTR [rax],al
    97ca:	04 06                	add    al,0x6
    97cc:	d0 05 00 00 34 13    	rol    BYTE PTR [rip+0x13340000],1        # 133497d2 <_end+0x133437ba>
    97d2:	0e                   	(bad)
    97d3:	b0 2c                	mov    al,0x2c
    97d5:	00 00                	add    BYTE PTR [rax],al
    97d7:	08 06                	or     BYTE PTR [rsi],al
    97d9:	c7                   	(bad)
    97da:	14 00                	adc    al,0x0
    97dc:	00 34 15 0c 3d 40 00 	add    BYTE PTR [rdx*1+0x403d0c],dh
    97e3:	00 10                	add    BYTE PTR [rax],dl
    97e5:	00 08                	add    BYTE PTR [rax],cl
    97e7:	42 05 00 00 34 16    	rex.X add eax,0x16340000
    97ed:	03 69 40             	add    ebp,DWORD PTR [rcx+0x40]
    97f0:	00 00                	add    BYTE PTR [rax],al
    97f2:	1b 60 04             	sbb    esp,DWORD PTR [rax+0x4]
    97f5:	00 00                	add    BYTE PTR [rax],al
    97f7:	18 34 18             	sbb    BYTE PTR [rax+rbx*1],dh
    97fa:	10 f9                	adc    cl,bh
    97fc:	40 00 00             	rex add BYTE PTR [rax],al
    97ff:	06                   	(bad)
    9800:	d8 05 00 00 34 19    	fadd   DWORD PTR [rip+0x19340000]        # 19349806 <_end+0x193437ee>
    9806:	0f f9 40 00          	psubw  mm0,QWORD PTR [rax+0x0]
    980a:	00 00                	add    BYTE PTR [rax],al
    980c:	06                   	(bad)
    980d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    980e:	05 00 00 34 1a       	add    eax,0x1a340000
    9813:	0e                   	(bad)
    9814:	b0 2c                	mov    al,0x2c
    9816:	00 00                	add    BYTE PTR [rax],al
    9818:	08 06                	or     BYTE PTR [rsi],al
    981a:	19 03                	sbb    DWORD PTR [rbx],eax
    981c:	00 00                	add    BYTE PTR [rax],al
    981e:	34 1b                	xor    al,0x1b
    9820:	0e                   	(bad)
    9821:	b0 2c                	mov    al,0x2c
    9823:	00 00                	add    BYTE PTR [rax],al
    9825:	0c 06                	or     al,0x6
    9827:	69 03 00 00 34 1c    	imul   eax,DWORD PTR [rbx],0x1c340000
    982d:	0e                   	(bad)
    982e:	b0 2c                	mov    al,0x2c
    9830:	00 00                	add    BYTE PTR [rax],al
    9832:	10 00                	adc    BYTE PTR [rax],al
    9834:	0d ab 40 00 00       	or     eax,0x40ab
    9839:	08 60 04             	or     BYTE PTR [rax+0x4],ah
    983c:	00 00                	add    BYTE PTR [rax],al
    983e:	34 1d                	xor    al,0x1d
    9840:	03 b7 40 00 00 1b    	add    esi,DWORD PTR [rdi+0x1b000040]
    9846:	8d 04 00             	lea    eax,[rax+rax*1]
    9849:	00 18                	add    BYTE PTR [rax],bl
    984b:	34 1f                	xor    al,0x1f
    984d:	10 4c 41 00          	adc    BYTE PTR [rcx+rax*2+0x0],cl
    9851:	00 06                	add    BYTE PTR [rsi],al
    9853:	ef                   	out    dx,eax
    9854:	04 00                	add    al,0x0
    9856:	00 34 20             	add    BYTE PTR [rax+riz*1],dh
    9859:	0b 4c 41 00          	or     ecx,DWORD PTR [rcx+rax*2+0x0]
    985d:	00 00                	add    BYTE PTR [rax],al
    985f:	06                   	(bad)
    9860:	19 03                	sbb    DWORD PTR [rbx],eax
    9862:	00 00                	add    BYTE PTR [rax],al
    9864:	34 21                	xor    al,0x21
    9866:	0e                   	(bad)
    9867:	b0 2c                	mov    al,0x2c
    9869:	00 00                	add    BYTE PTR [rax],al
    986b:	08 06                	or     BYTE PTR [rsi],al
    986d:	45 07                	rex.RB (bad)
    986f:	00 00                	add    BYTE PTR [rax],al
    9871:	34 22                	xor    al,0x22
    9873:	0b 35 00 00 00 0c    	or     esi,DWORD PTR [rip+0xc000000]        # c009879 <_end+0xc003861>
    9879:	06                   	(bad)
    987a:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    987d:	00 34 23             	add    BYTE PTR [rbx+riz*1],dh
    9880:	0c 49                	or     al,0x49
    9882:	40 00 00             	rex add BYTE PTR [rax],al
    9885:	10 00                	adc    BYTE PTR [rax],al
    9887:	0d fe 40 00 00       	or     eax,0x40fe
    988c:	08 8d 04 00 00 34    	or     BYTE PTR [rbp+0x34000004],cl
    9892:	24 03                	and    al,0x3
    9894:	0a 41 00             	or     al,BYTE PTR [rcx+0x0]
    9897:	00 38                	add    BYTE PTR [rax],bh
    9899:	f8                   	clc
    989a:	06                   	(bad)
    989b:	00 00                	add    BYTE PTR [rax],al
    989d:	35 06 ad 21 00       	xor    eax,0x21ad06
    98a2:	00 04 85 01 90 00 00 	add    BYTE PTR [rax*4+0x9001],al
    98a9:	00 36                	add    BYTE PTR [rsi],dh
    98ab:	06                   	(bad)
    98ac:	10 bc 2c 00 00 40 42 	adc    BYTE PTR [rsp+rbp*1+0x42400000],bh
    98b3:	0f 00 1b             	ltr    WORD PTR [rbx]
    98b6:	9b                   	fwait
    98b7:	23 00                	and    eax,DWORD PTR [rax]
    98b9:	00 10                	add    BYTE PTR [rax],dl
    98bb:	36 08 10             	ss or  BYTE PTR [rax],dl
    98be:	a2 41 00 00 06 bb 1a 	movabs ds:0x1abb06000041,al
    98c5:	00 00 
    98c7:	36 09 0d a2 41 00 00 	ss or  DWORD PTR [rip+0x41a2],ecx        # da70 <_end+0x7a58>
    98ce:	00 06                	add    BYTE PTR [rsi],al
    98d0:	be 04 00 00 36       	mov    esi,0x36000004
    98d5:	0a 0e                	or     cl,BYTE PTR [rsi]
    98d7:	b0 2c                	mov    al,0x2c
    98d9:	00 00                	add    BYTE PTR [rax],al
    98db:	08 00                	or     BYTE PTR [rax],al
    98dd:	0d 3d 40 00 00       	or     eax,0x403d
    98e2:	08 9b 23 00 00 36    	or     BYTE PTR [rbx+0x36000023],bl
    98e8:	0b 03                	or     eax,DWORD PTR [rbx]
    98ea:	7a 41                	jp     992d <_end+0x3915>
    98ec:	00 00                	add    BYTE PTR [rax],al
    98ee:	1b 50 13             	sbb    edx,DWORD PTR [rax+0x13]
    98f1:	00 00                	add    BYTE PTR [rax],al
    98f3:	10 36                	adc    BYTE PTR [rsi],dh
    98f5:	0d 10 db 41 00       	or     eax,0x41db10
    98fa:	00 06                	add    BYTE PTR [rsi],al
    98fc:	c1 25 00 00 36 0e 11 	shl    DWORD PTR [rip+0xe360000],0x11        # e369903 <_end+0xe3638eb>
    9903:	d3 23                	shl    DWORD PTR [rbx],cl
    9905:	00 00                	add    BYTE PTR [rax],al
    9907:	00 06                	add    BYTE PTR [rsi],al
    9909:	46 0e                	rex.RX (bad)
    990b:	00 00                	add    BYTE PTR [rax],al
    990d:	36 0f 11 d3          	ss movups xmm3,xmm2
    9911:	23 00                	and    eax,DWORD PTR [rax]
    9913:	00 08                	add    BYTE PTR [rax],cl
    9915:	00 08                	add    BYTE PTR [rax],cl
    9917:	50                   	push   rax
    9918:	13 00                	adc    eax,DWORD PTR [rax]
    991a:	00 36                	add    BYTE PTR [rsi],dh
    991c:	10 03                	adc    BYTE PTR [rbx],al
    991e:	b3 41                	mov    bl,0x41
    9920:	00 00                	add    BYTE PTR [rax],al
    9922:	0d e3 1a 00 00       	or     eax,0x1ae3
    9927:	22 37                	and    dh,BYTE PTR [rdi]
    9929:	1b 00                	sbb    eax,DWORD PTR [rax]
    992b:	00 0d da 1b 00 00    	add    BYTE PTR [rip+0x1bda],cl        # b50b <_end+0x54f3>
    9931:	13 f1                	adc    esi,ecx
    9933:	41 00 00             	add    BYTE PTR [r8],al
    9936:	22 e3                	and    ah,bl
    9938:	1a 00                	sbb    al,BYTE PTR [rax]
    993a:	00 29                	add    BYTE PTR [rcx],ch
    993c:	84 17                	test   BYTE PTR [rdi],dl
    993e:	00 00                	add    BYTE PTR [rax],al
    9940:	29 8d 17 00 00 29    	sub    DWORD PTR [rbp+0x29000017],ecx
    9946:	96                   	xchg   esi,eax
    9947:	17                   	(bad)
    9948:	00 00                	add    BYTE PTR [rax],al
    994a:	29 be 20 00 00 29    	sub    DWORD PTR [rsi+0x29000020],edi
    9950:	c7                   	(bad)
    9951:	20 00                	and    BYTE PTR [rax],al
    9953:	00 29                	add    BYTE PTR [rcx],ch
    9955:	d0 20                	shl    BYTE PTR [rax],1
    9957:	00 00                	add    BYTE PTR [rax],al
    9959:	29 d9                	sub    ecx,ebx
    995b:	20 00                	and    BYTE PTR [rax],al
    995d:	00 0f                	add    BYTE PTR [rdi],cl
    995f:	bb 05 00 00 34       	mov    ebx,0x34000005
    9964:	2a 06                	sub    al,BYTE PTR [rsi]
    9966:	98                   	cwde
    9967:	06                   	(bad)
    9968:	00 00                	add    BYTE PTR [rax],al
    996a:	ea                   	(bad)
    996b:	20 00                	and    BYTE PTR [rax],al
    996d:	00 42 42             	add    BYTE PTR [rdx+0x42],al
    9970:	00 00                	add    BYTE PTR [rax],al
    9972:	01 42 42             	add    DWORD PTR [rdx+0x42],eax
    9975:	00 00                	add    BYTE PTR [rax],al
    9977:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 99bd <_end+0x39a5>
    997d:	0d 51 41 00 00       	or     eax,0x4151
    9982:	0e                   	(bad)
    9983:	91                   	xchg   ecx,eax
    9984:	06                   	(bad)
    9985:	00 00                	add    BYTE PTR [rax],al
    9987:	16                   	(bad)
    9988:	a3 02 0e d4 22 00 00 	movabs ds:0x4263000022d40e02,eax
    998f:	63 42 
    9991:	00 00                	add    BYTE PTR [rax],al
    9993:	01 2e                	add    DWORD PTR [rsi],ebp
    9995:	23 00                	and    eax,DWORD PTR [rax]
    9997:	00 01                	add    BYTE PTR [rcx],al
    9999:	2e 23 00             	cs and eax,DWORD PTR [rax]
    999c:	00 00                	add    BYTE PTR [rax],al
    999e:	0c 0d                	or     al,0xd
    99a0:	13 00                	adc    eax,DWORD PTR [rax]
    99a2:	00 37                	add    BYTE PTR [rdi],dh
    99a4:	31 0c a6             	xor    DWORD PTR [rsi+riz*4],ecx
    99a7:	21 00                	and    DWORD PTR [rax],eax
    99a9:	00 84 42 00 00 01 8e 	add    BYTE PTR [rdx+rax*2-0x71ff0000],al
    99b0:	2c 00                	sub    al,0x0
    99b2:	00 01                	add    BYTE PTR [rcx],al
    99b4:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    99b5:	21 00                	and    DWORD PTR [rax],eax
    99b7:	00 01                	add    BYTE PTR [rcx],al
    99b9:	d3 23                	shl    DWORD PTR [rbx],cl
    99bb:	00 00                	add    BYTE PTR [rax],al
    99bd:	21 00                	and    DWORD PTR [rax],eax
    99bf:	86 01                	xchg   BYTE PTR [rcx],al
    99c1:	39 07                	cmp    DWORD PTR [rdi],eax
    99c3:	00 00                	add    BYTE PTR [rax],al
    99c5:	34 2b                	xor    al,0x2b
    99c7:	06                   	(bad)
    99c8:	7c 04                	jl     99ce <_end+0x39b6>
    99ca:	00 00                	add    BYTE PTR [rax],al
    99cc:	9b                   	fwait
    99cd:	42 00 00             	rex.X add BYTE PTR [rax],al
    99d0:	01 42 42             	add    DWORD PTR [rdx+0x42],eax
    99d3:	00 00                	add    BYTE PTR [rax],al
    99d5:	00 0f                	add    BYTE PTR [rdi],cl
    99d7:	e1 03                	loope  99dc <_end+0x39c4>
    99d9:	00 00                	add    BYTE PTR [rax],al
    99db:	34 28                	xor    al,0x28
    99dd:	0a d0                	or     dl,al
    99df:	06                   	(bad)
    99e0:	00 00                	add    BYTE PTR [rax],al
    99e2:	b0 2c                	mov    al,0x2c
    99e4:	00 00                	add    BYTE PTR [rax],al
    99e6:	ba 42 00 00 01       	mov    edx,0x1000042
    99eb:	42                   	rex.X
    99ec:	42 00 00             	rex.X add BYTE PTR [rax],al
    99ef:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 9a35 <_end+0x3a1d>
    99f5:	0f 52 03             	rsqrtps xmm0,XMMWORD PTR [rbx]
    99f8:	00 00                	add    BYTE PTR [rax],al
    99fa:	34 27                	xor    al,0x27
    99fc:	09 1d 06 00 00 51    	or     DWORD PTR [rip+0x51000006],ebx        # 51009a08 <_end+0x510039f0>
    9a02:	41 00 00             	add    BYTE PTR [r8],al
    9a05:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    9a08:	00 01                	add    BYTE PTR [rcx],al
    9a0a:	49                   	rex.WB
    9a0b:	40 00 00             	rex add BYTE PTR [rax],al
    9a0e:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9a14:	0c 02                	or     al,0x2
    9a16:	04 00                	add    al,0x0
    9a18:	00 37                	add    BYTE PTR [rdi],dh
    9a1a:	34 0c                	xor    al,0xc
    9a1c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9a1d:	21 00                	and    DWORD PTR [rax],eax
    9a1f:	00 f5                	add    ch,dh
    9a21:	42 00 00             	rex.X add BYTE PTR [rax],al
    9a24:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    9a2a:	d3 23                	shl    DWORD PTR [rbx],cl
    9a2c:	00 00                	add    BYTE PTR [rax],al
    9a2e:	21 00                	and    DWORD PTR [rax],eax
    9a30:	28 b0 03 00 00 16    	sub    BYTE PTR [rax+0x16000003],dh
    9a36:	af                   	scas   eax,DWORD PTR es:[rdi]
    9a37:	02 07                	add    al,BYTE PTR [rdi]
    9a39:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9a3c:	01 d4                	add    esp,edx
    9a3e:	22 00                	and    al,BYTE PTR [rax]
    9a40:	00 00                	add    BYTE PTR [rax],al
    9a42:	0f 12 08             	movlps xmm1,QWORD PTR [rax]
    9a45:	00 00                	add    BYTE PTR [rax],al
    9a47:	38 0a                	cmp    BYTE PTR [rdx],cl
    9a49:	0a eb                	or     ch,bl
    9a4b:	07                   	(bad)
    9a4c:	00 00                	add    BYTE PTR [rax],al
    9a4e:	b0 2c                	mov    al,0x2c
    9a50:	00 00                	add    BYTE PTR [rax],al
    9a52:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    9a55:	00 01                	add    BYTE PTR [rcx],al
    9a57:	0d 40 00 00 00       	or     eax,0x40
    9a5c:	0f b5 08             	lgs    ecx,FWORD PTR [rax]
    9a5f:	00 00                	add    BYTE PTR [rax],al
    9a61:	38 0e                	cmp    BYTE PTR [rsi],cl
    9a63:	0a 5b 08             	or     bl,BYTE PTR [rbx+0x8]
    9a66:	00 00                	add    BYTE PTR [rax],al
    9a68:	b0 2c                	mov    al,0x2c
    9a6a:	00 00                	add    BYTE PTR [rax],al
    9a6c:	3b 43 00             	cmp    eax,DWORD PTR [rbx+0x0]
    9a6f:	00 01                	add    BYTE PTR [rcx],al
    9a71:	0d 40 00 00 00       	or     eax,0x40
    9a76:	0f 49 08             	cmovns ecx,DWORD PTR [rax]
    9a79:	00 00                	add    BYTE PTR [rax],al
    9a7b:	38 0d 0a 76 08 00    	cmp    BYTE PTR [rip+0x8760a],cl        # 9108b <_end+0x8b073>
    9a81:	00 b0 2c 00 00 55    	add    BYTE PTR [rax+0x5500002c],dh
    9a87:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9a8a:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9ad0 <_end+0x3ab8>
    9a90:	0f 78 07             	vmread QWORD PTR [rdi],rax
    9a93:	00 00                	add    BYTE PTR [rax],al
    9a95:	38 0c 0a             	cmp    BYTE PTR [rdx+rcx*1],cl
    9a98:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9a99:	07                   	(bad)
    9a9a:	00 00                	add    BYTE PTR [rax],al
    9a9c:	b0 2c                	mov    al,0x2c
    9a9e:	00 00                	add    BYTE PTR [rax],al
    9aa0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9aa1:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9aa4:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9aea <_end+0x3ad2>
    9aaa:	0f 95 08             	setne  BYTE PTR [rax]
    9aad:	00 00                	add    BYTE PTR [rax],al
    9aaf:	38 0b                	cmp    BYTE PTR [rbx],cl
    9ab1:	0a f8                	or     bh,al
    9ab3:	08 00                	or     BYTE PTR [rax],al
    9ab5:	00 b0 2c 00 00 89    	add    BYTE PTR [rax-0x76ffffd4],dh
    9abb:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9abe:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9b04 <_end+0x3aec>
    9ac4:	0f c3 08             	movnti DWORD PTR [rax],ecx
    9ac7:	00 00                	add    BYTE PTR [rax],al
    9ac9:	38 09                	cmp    BYTE PTR [rcx],cl
    9acb:	0a 17                	or     dl,BYTE PTR [rdi]
    9acd:	09 00                	or     DWORD PTR [rax],eax
    9acf:	00 b0 2c 00 00 a3    	add    BYTE PTR [rax-0x5cffffd4],dh
    9ad5:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9ad8:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9b1e <_end+0x3b06>
    9ade:	0f c7 08             	cmpxchg8b QWORD PTR [rax]
    9ae1:	00 00                	add    BYTE PTR [rax],al
    9ae3:	38 08                	cmp    BYTE PTR [rax],cl
    9ae5:	0a 2c 08             	or     ch,BYTE PTR [rax+rcx*1]
    9ae8:	00 00                	add    BYTE PTR [rax],al
    9aea:	b0 2c                	mov    al,0x2c
    9aec:	00 00                	add    BYTE PTR [rax],al
    9aee:	bd 43 00 00 01       	mov    ebp,0x1000043
    9af3:	0d 40 00 00 00       	or     eax,0x40
    9af8:	0c d1                	or     al,0xd1
    9afa:	18 00                	sbb    BYTE PTR [rax],al
    9afc:	00 39                	add    BYTE PTR [rcx],bh
    9afe:	9c                   	pushf
    9aff:	0c a6                	or     al,0xa6
    9b01:	21 00                	and    DWORD PTR [rax],eax
    9b03:	00 d8                	add    al,bl
    9b05:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9b08:	01 d3                	add    ebx,edx
    9b0a:	23 00                	and    eax,DWORD PTR [rax]
    9b0c:	00 01                	add    BYTE PTR [rcx],al
    9b0e:	d3 23                	shl    DWORD PTR [rbx],cl
    9b10:	00 00                	add    BYTE PTR [rax],al
    9b12:	00 0f                	add    BYTE PTR [rdi],cl
    9b14:	41 06                	rex.B (bad)
    9b16:	00 00                	add    BYTE PTR [rax],al
    9b18:	34 26                	xor    al,0x26
    9b1a:	0b 7e 03             	or     edi,DWORD PTR [rsi+0x3]
    9b1d:	00 00                	add    BYTE PTR [rax],al
    9b1f:	f7 43 00 00 f7 43 00 	test   DWORD PTR [rbx+0x0],0x43f700
    9b26:	00 01                	add    BYTE PTR [rcx],al
    9b28:	e2 22                	loop   9b4c <_end+0x3b34>
    9b2a:	00 00                	add    BYTE PTR [rax],al
    9b2c:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9b32:	0d 0d 40 00 00       	or     eax,0x400d
    9b37:	0f 63 0a             	packsswb mm1,QWORD PTR [rdx]
    9b3a:	00 00                	add    BYTE PTR [rax],al
    9b3c:	3a 07                	cmp    al,BYTE PTR [rdi]
    9b3e:	0a ac 09 00 00 b0 2c 	or     ch,BYTE PTR [rcx+rcx*1+0x2cb00000]
    9b45:	00 00                	add    BYTE PTR [rax],al
    9b47:	1b 44 00 00          	sbb    eax,DWORD PTR [rax+rax*1+0x0]
    9b4b:	01 e2                	add    edx,esp
    9b4d:	22 00                	and    al,BYTE PTR [rax]
    9b4f:	00 01                	add    BYTE PTR [rcx],al
    9b51:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9b54:	00 00                	add    BYTE PTR [rax],al
    9b56:	0f be 09             	movsx  ecx,BYTE PTR [rcx]
    9b59:	00 00                	add    BYTE PTR [rax],al
    9b5b:	3a 06                	cmp    al,BYTE PTR [rsi]
    9b5d:	07                   	(bad)
    9b5e:	c7                   	(bad)
    9b5f:	09 00                	or     DWORD PTR [rax],eax
    9b61:	00 e2                	add    dl,ah
    9b63:	22 00                	and    al,BYTE PTR [rax]
    9b65:	00 3a                	add    BYTE PTR [rdx],bh
    9b67:	44 00 00             	add    BYTE PTR [rax],r8b
    9b6a:	01 d3                	add    ebx,edx
    9b6c:	23 00                	and    eax,DWORD PTR [rax]
    9b6e:	00 01                	add    BYTE PTR [rcx],al
    9b70:	3a 44 00 00          	cmp    al,BYTE PTR [rax+rax*1+0x0]
    9b74:	00 0d 2e 23 00 00    	add    BYTE PTR [rip+0x232e],cl        # bea8 <_end+0x5e90>
    9b7a:	87 01                	xchg   DWORD PTR [rcx],eax
    9b7c:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9b7d:	05 00 00 3b 45       	add    eax,0x453b0000
    9b82:	0d 61 44 00 00       	or     eax,0x4461
    9b87:	01 d3                	add    ebx,edx
    9b89:	23 00                	and    eax,DWORD PTR [rax]
    9b8b:	00 01                	add    BYTE PTR [rcx],al
    9b8d:	d3 23                	shl    DWORD PTR [rbx],cl
    9b8f:	00 00                	add    BYTE PTR [rax],al
    9b91:	01 e3                	add    ebx,esp
    9b93:	20 00                	and    BYTE PTR [rax],al
    9b95:	00 01                	add    BYTE PTR [rcx],al
    9b97:	d3 23                	shl    DWORD PTR [rbx],cl
    9b99:	00 00                	add    BYTE PTR [rax],al
    9b9b:	00 22                	add    BYTE PTR [rdx],ah
    9b9d:	b9 21 00 00 30       	mov    ecx,0x30000021
    9ba2:	24 1e                	and    al,0x1e
    9ba4:	00 00                	add    BYTE PTR [rax],al
    9ba6:	7d 44                	jge    9bec <_end+0x3bd4>
    9ba8:	00 00                	add    BYTE PTR [rax],al
    9baa:	02 93 44 00 00 11    	add    dl,BYTE PTR [rbx+0x11000044]
    9bb0:	06                   	(bad)
    9bb1:	19 00                	sbb    DWORD PTR [rax],eax
    9bb3:	00 b2 21 00 00 31    	add    BYTE PTR [rdx+0x31000021],dh
    9bb9:	1b 1e                	sbb    ebx,DWORD PTR [rsi]
    9bbb:	00 00                	add    BYTE PTR [rax],al
    9bbd:	ba 3f 00 00 2d       	mov    edx,0x2d00003f
    9bc2:	3d 16 00 00 3d       	cmp    eax,0x3d000016
    9bc7:	02 2d 61 44 00 00    	add    ch,BYTE PTR [rip+0x4461]        # e02e <_end+0x8016>
    9bcd:	00 5c 66 44          	add    BYTE PTR [rsi+riz*2+0x44],bl
    9bd1:	00 00                	add    BYTE PTR [rax],al
    9bd3:	4b 16                	rex.WXB (bad)
    9bd5:	00 00                	add    BYTE PTR [rax],al
    9bd7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9bd8:	44 00 00             	add    BYTE PTR [rax],r8b
    9bdb:	b8 44 00 00 11       	mov    eax,0x11000044
    9be0:	06                   	(bad)
    9be1:	19 00                	sbb    DWORD PTR [rax],eax
    9be3:	00 b2 21 00 00 0b    	add    BYTE PTR [rdx+0xb000021],dh
    9be9:	7d 44                	jge    9c2f <_end+0x3c17>
    9beb:	00 00                	add    BYTE PTR [rax],al
    9bed:	0b 86 44 00 00 00    	or     eax,DWORD PTR [rsi+0x44]
    9bf3:	32 7a 1e             	xor    bh,BYTE PTR [rdx+0x1e]
    9bf6:	00 00                	add    BYTE PTR [rax],al
    9bf8:	ed                   	in     eax,dx
    9bf9:	44 00 00             	add    BYTE PTR [rax],r8b
    9bfc:	11 81 32 00 00 b2    	adc    DWORD PTR [rcx-0x4dffffce],eax
    9c02:	21 00                	and    DWORD PTR [rax],eax
    9c04:	00 11                	add    BYTE PTR [rcx],dl
    9c06:	4e 23 00             	rex.WRX and r8,QWORD PTR [rax]
    9c09:	00 94 1f 00 00 88 01 	add    BYTE PTR [rdi+rbx*1+0x1880000],dl
    9c10:	5f                   	pop    rdi
    9c11:	5f                   	pop    rdi
    9c12:	64 00 04 d0          	add    BYTE PTR fs:[rax+rdx*8],al
    9c16:	2a 9c 3f 00 00 08 e5 	sub    bl,BYTE PTR [rdi+rdi*1-0x1af80000]
    9c1d:	22 00                	and    al,BYTE PTR [rax]
    9c1f:	00 04 d2             	add    BYTE PTR [rdx+rdx*8],al
    9c22:	25 82 1c 00 00       	and    eax,0x1c82
    9c27:	00 32                	add    BYTE PTR [rdx],dh
    9c29:	d6                   	(bad)
    9c2a:	1e                   	(bad)
    9c2b:	00 00                	add    BYTE PTR [rax],al
    9c2d:	40                   	rex
    9c2e:	45 00 00             	add    BYTE PTR [r8],r8b
    9c31:	11 00                	adc    DWORD PTR [rax],eax
    9c33:	19 00                	sbb    DWORD PTR [rax],eax
    9c35:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9c3b:	95                   	xchg   ebp,eax
    9c3c:	22 00                	and    al,BYTE PTR [rax]
    9c3e:	00 94 1f 00 00 11 06 	add    BYTE PTR [rdi+rbx*1+0x6110000],dl
    9c45:	19 00                	sbb    DWORD PTR [rax],eax
    9c47:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9c4d:	b8 2f 00 00 94       	mov    eax,0x9400002f
    9c52:	1f                   	(bad)
    9c53:	00 00                	add    BYTE PTR [rax],al
    9c55:	2d 33 0f 00 00       	sub    eax,0xf33
    9c5a:	c6 02 32             	mov    BYTE PTR [rdx],0x32
    9c5d:	9c                   	pushf
    9c5e:	3f                   	(bad)
    9c5f:	00 00                	add    BYTE PTR [rax],al
    9c61:	2d 30 17 00 00       	sub    eax,0x1730
    9c66:	c7 02 24 9c 3f 00    	mov    DWORD PTR [rdx],0x3f9c24
    9c6c:	00 42 18             	add    BYTE PTR [rdx+0x18],al
    9c6f:	21 00                	and    DWORD PTR [rax],eax
    9c71:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    9c74:	02 34 e0             	add    dh,BYTE PTR [rax+riz*8]
    9c77:	1f                   	(bad)
    9c78:	00 00                	add    BYTE PTR [rax],al
    9c7a:	00 32                	add    BYTE PTR [rdx],dh
    9c7c:	26 1f                	es (bad)
    9c7e:	00 00                	add    BYTE PTR [rax],al
    9c80:	74 45                	je     9cc7 <_end+0x3caf>
    9c82:	00 00                	add    BYTE PTR [rax],al
    9c84:	11 39                	adc    DWORD PTR [rcx],edi
    9c86:	22 00                	and    al,BYTE PTR [rax]
    9c88:	00 df                	add    bh,bl
    9c8a:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c8c:	00 11                	add    BYTE PTR [rcx],dl
    9c8e:	81 32 00 00 b2 21    	xor    DWORD PTR [rdx],0x21b20000
    9c94:	00 00                	add    BYTE PTR [rax],al
    9c96:	11 4e 23             	adc    DWORD PTR [rsi+0x23],ecx
    9c99:	00 00                	add    BYTE PTR [rax],al
    9c9b:	94                   	xchg   esp,eax
    9c9c:	1f                   	(bad)
    9c9d:	00 00                	add    BYTE PTR [rax],al
    9c9f:	5d                   	pop    rbp
    9ca0:	5f                   	pop    rdi
    9ca1:	5f                   	pop    rdi
    9ca2:	64 00 04 11          	add    BYTE PTR fs:[rcx+rdx*1],al
    9ca6:	01 34 9c             	add    DWORD PTR [rsp+rbx*4],esi
    9ca9:	3f                   	(bad)
    9caa:	00 00                	add    BYTE PTR [rax],al
    9cac:	89 01                	mov    DWORD PTR [rcx],eax
    9cae:	00 5e ab             	add    BYTE PTR [rsi-0x55],bl
    9cb1:	22 00                	and    al,BYTE PTR [rax]
    9cb3:	00 b4 07 e7 2e 00 00 	add    BYTE PTR [rdi+rax*1+0x2ee7],dh
    9cba:	35 00 00 00 cc       	xor    eax,0xcc000000
    9cbf:	45 00 00             	add    BYTE PTR [r8],r8b
    9cc2:	1e                   	(bad)
    9cc3:	94                   	xchg   esp,eax
    9cc4:	05 00 00 01 b4       	add    eax,0xb4010000
    9cc9:	2c 42                	sub    al,0x42
    9ccb:	42 00 00             	rex.X add BYTE PTR [rax],al
    9cce:	1e                   	(bad)
    9ccf:	1a 10                	sbb    dl,BYTE PTR [rax]
    9cd1:	00 00                	add    BYTE PTR [rax],al
    9cd3:	01 b4 3b 35 00 00 00 	add    DWORD PTR [rbx+rdi*1+0x35],esi
    9cda:	5f                   	pop    rdi
    9cdb:	cd 03                	int    0x3
    9cdd:	00 00                	add    BYTE PTR [rax],al
    9cdf:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9ce2:	00 17                	add    BYTE PTR [rdi],dl
    9ce4:	1e                   	(bad)
    9ce5:	16                   	(bad)
    9ce6:	00 00                	add    BYTE PTR [rax],al
    9ce8:	b7 0b                	mov    bh,0xb
    9cea:	35 00 00 00 48       	xor    eax,0x48000000
    9cef:	49 69 00 b8 13 b0 2c 	imul   rax,QWORD PTR [r8],0x2cb013b8
    9cf6:	00 00                	add    BYTE PTR [rax],al
    9cf8:	48 17                	rex.W (bad)
    9cfa:	dd 05 00 00 b9 12    	fld    QWORD PTR [rip+0x12b90000]        # 12b99d00 <_end+0x12b93ce8>
    9d00:	b0 2c                	mov    al,0x2c
    9d02:	00 00                	add    BYTE PTR [rax],al
    9d04:	00 00                	add    BYTE PTR [rax],al
    9d06:	00 25 ee 22 00 00    	add    BYTE PTR [rip+0x22ee],ah        # bffa <_end+0x5fe2>
    9d0c:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9d0f:	00 26                	add    BYTE PTR [rsi],ah
    9d11:	8a 21                	mov    ah,BYTE PTR [rcx]
    9d13:	00 00                	add    BYTE PTR [rax],al
    9d15:	32 00                	xor    al,BYTE PTR [rax]
    9d17:	13 cc                	adc    ecx,esp
    9d19:	45 00 00             	add    BYTE PTR [r8],r8b
    9d1c:	5e                   	pop    rsi
    9d1d:	56                   	push   rsi
    9d1e:	26 00 00             	es add BYTE PTR [rax],al
    9d21:	a8 08                	test   al,0x8
    9d23:	7b 34                	jnp    9d59 <_end+0x3d41>
    9d25:	00 00                	add    BYTE PTR [rax],al
    9d27:	2e 00 00             	cs add BYTE PTR [rax],al
    9d2a:	00 38                	add    BYTE PTR [rax],bh
    9d2c:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9d2f:	1e                   	(bad)
    9d30:	da 22                	fisub  DWORD PTR [rdx]
    9d32:	00 00                	add    BYTE PTR [rax],al
    9d34:	01 a8 26 93 3e 00    	add    DWORD PTR [rax+0x3e9326],ebp
    9d3a:	00 1e                	add    BYTE PTR [rsi],bl
    9d3c:	ea                   	(bad)
    9d3d:	05 00 00 01 a8       	add    eax,0xa8010000
    9d42:	3b b0 2c 00 00 1e    	cmp    esi,DWORD PTR [rax+0x1e00002c]
    9d48:	1a 10                	sbb    dl,BYTE PTR [rax]
    9d4a:	00 00                	add    BYTE PTR [rax],al
    9d4c:	01 a8 4a 2e 00 00    	add    DWORD PTR [rax+0x2e4a],ebp
    9d52:	00 5f cd             	add    BYTE PTR [rdi-0x33],bl
    9d55:	03 00                	add    eax,DWORD PTR [rax]
    9d57:	00 48 46             	add    BYTE PTR [rax+0x46],cl
    9d5a:	00 00                	add    BYTE PTR [rax],al
    9d5c:	17                   	(bad)
    9d5d:	1e                   	(bad)
    9d5e:	16                   	(bad)
    9d5f:	00 00                	add    BYTE PTR [rax],al
    9d61:	ab                   	stos   DWORD PTR es:[rdi],eax
    9d62:	0c 2e                	or     al,0x2e
    9d64:	00 00                	add    BYTE PTR [rax],al
    9d66:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9d69:	69 00 ac 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013ac
    9d6f:	00 00                	add    BYTE PTR [rax],al
    9d71:	00 00                	add    BYTE PTR [rax],al
    9d73:	25 ee 22 00 00       	and    eax,0x22ee
    9d78:	48                   	rex.W
    9d79:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9d7c:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    9d7f:	00 00                	add    BYTE PTR [rax],al
    9d81:	37                   	(bad)
    9d82:	00 13                	add    BYTE PTR [rbx],dl
    9d84:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    9d87:	00 4a d1             	add    BYTE PTR [rdx-0x2f],cl
    9d8a:	13 00                	adc    eax,DWORD PTR [rax]
    9d8c:	00 5d 75             	add    BYTE PTR [rbp+0x75],bl
    9d8f:	30 00                	xor    BYTE PTR [rax],al
    9d91:	00 10                	add    BYTE PTR [rax],dl
    9d93:	2a 00                	sub    al,BYTE PTR [rax]
    9d95:	00 00                	add    BYTE PTR [rax],al
    9d97:	00 00                	add    BYTE PTR [rax],al
    9d99:	00 56 04             	add    BYTE PTR [rsi+0x4],dl
    9d9c:	00 00                	add    BYTE PTR [rax],al
    9d9e:	00 00                	add    BYTE PTR [rax],al
    9da0:	00 00                	add    BYTE PTR [rax],al
    9da2:	01 9c 3a 4e 00 00 23 	add    DWORD PTR [rdx+rdi*1+0x2300004e],ebx
    9da9:	b4 2b                	mov    ah,0x2b
    9dab:	00 00                	add    BYTE PTR [rax],al
    9dad:	5d                   	pop    rbp
    9dae:	1b 8e 2c 00 00 c5    	sbb    ecx,DWORD PTR [rsi-0x3affffd4]
    9db4:	1b 00                	sbb    eax,DWORD PTR [rax]
    9db6:	00 b9 1b 00 00 23    	add    BYTE PTR [rcx+0x2300001b],bh
    9dbc:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    9dbf:	00 5d 28             	add    BYTE PTR [rbp+0x28],bl
    9dc2:	49                   	rex.WB
    9dc3:	40 00 00             	rex add BYTE PTR [rax],al
    9dc6:	07                   	(bad)
    9dc7:	1c 00                	sbb    al,0x0
    9dc9:	00 fd                	add    ch,bh
    9dcb:	1b 00                	sbb    eax,DWORD PTR [rax]
    9dcd:	00 23                	add    BYTE PTR [rbx],ah
    9dcf:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    9dd2:	00 5d 3c             	add    BYTE PTR [rbp+0x3c],bl
    9dd5:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9dd6:	41 00 00             	add    BYTE PTR [r8],al
    9dd9:	39 1c 00             	cmp    DWORD PTR [rax+rax*1],ebx
    9ddc:	00 31                	add    BYTE PTR [rcx],dh
    9dde:	1c 00                	sbb    al,0x0
    9de0:	00 23                	add    BYTE PTR [rbx],ah
    9de2:	39 29                	cmp    DWORD PTR [rcx],ebp
    9de4:	00 00                	add    BYTE PTR [rax],al
    9de6:	5d                   	pop    rbp
    9de7:	50                   	push   rax
    9de8:	b0 2c                	mov    al,0x2c
    9dea:	00 00                	add    BYTE PTR [rax],al
    9dec:	76 1c                	jbe    9e0a <_end+0x3df2>
    9dee:	00 00                	add    BYTE PTR [rax],al
    9df0:	6a 1c                	push   0x1c
    9df2:	00 00                	add    BYTE PTR [rax],al
    9df4:	4b cd 03             	rex.WXB int 0x3
    9df7:	00 00                	add    BYTE PTR [rax],al
    9df9:	4a                   	rex.WX
    9dfa:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9dfd:	09 03                	or     DWORD PTR [rbx],eax
    9dff:	b0 44                	mov    al,0x44
    9e01:	00 00                	add    BYTE PTR [rax],al
    9e03:	00 00                	add    BYTE PTR [rax],al
    9e05:	00 00                	add    BYTE PTR [rax],al
    9e07:	4c 94                	rex.WR xchg rsp,rax
    9e09:	05 00 00 61 0d       	add    eax,0xd610000
    9e0e:	51                   	push   rcx
    9e0f:	41 00 00             	add    BYTE PTR [r8],al
    9e12:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    9e15:	7f 1f                	jg     9e36 <_end+0x3e1e>
    9e17:	f3 0c 00             	repz or al,0x0
    9e1a:	00 66 0f             	add    BYTE PTR [rsi+0xf],ah
    9e1d:	4f                   	rex.WRXB
    9e1e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9e21:	ba 1c 00 00 ae       	mov    edx,0xae00001c
    9e26:	1c 00                	sbb    al,0x0
    9e28:	00 1f                	add    BYTE PTR [rdi],bl
    9e2a:	d3 22                	shl    DWORD PTR [rdx],cl
    9e2c:	00 00                	add    BYTE PTR [rax],al
    9e2e:	67 0d 93 3e 00 00    	addr32 or eax,0x3e93
    9e34:	fc                   	cld
    9e35:	1c 00                	sbb    al,0x0
    9e37:	00 f2                	add    dl,dh
    9e39:	1c 00                	sbb    al,0x0
    9e3b:	00 1f                	add    BYTE PTR [rdi],bl
    9e3d:	f1                   	int1
    9e3e:	2b 00                	sub    eax,DWORD PTR [rax]
    9e40:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    9e43:	b0 2c                	mov    al,0x2c
    9e45:	00 00                	add    BYTE PTR [rax],al
    9e47:	31 1d 00 00 2d 1d    	xor    DWORD PTR [rip+0x1d2d0000],ebx        # 1d2d9e4d <_end+0x1d2d3e35>
    9e4d:	00 00                	add    BYTE PTR [rax],al
    9e4f:	1f                   	(bad)
    9e50:	9e                   	sahf
    9e51:	22 00                	and    al,BYTE PTR [rax]
    9e53:	00 95 0c 2e 00 00    	add    BYTE PTR [rbp+0x2e0c],dl
    9e59:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    9e5c:	00 00                	add    BYTE PTR [rax],al
    9e5e:	4a 1d 00 00 1f 61    	rex.WX sbb rax,0x611f0000
    9e64:	21 00                	and    DWORD PTR [rax],eax
    9e66:	00 9e 0c 2e 00 00    	add    BYTE PTR [rsi+0x2e0c],bl
    9e6c:	00 d5                	add    ch,dl
    9e6e:	1d 00 00 d1 1d       	sbb    eax,0x1dd10000
    9e73:	00 00                	add    BYTE PTR [rax],al
    9e75:	16                   	(bad)
    9e76:	81 2a 00 00 00 00    	sub    DWORD PTR [rdx],0x0
    9e7c:	00 00                	add    BYTE PTR [rax],al
    9e7e:	28 00                	sub    BYTE PTR [rax],al
    9e80:	00 00                	add    BYTE PTR [rax],al
    9e82:	00 00                	add    BYTE PTR [rax],al
    9e84:	00 00                	add    BYTE PTR [rax],al
    9e86:	75 47                	jne    9ecf <_end+0x3eb7>
    9e88:	00 00                	add    BYTE PTR [rax],al
    9e8a:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9e8d:	62 0e a6 21 00       	(bad)
    9e92:	00 e6                	add    dh,ah
    9e94:	1d 00 00 e4 1d       	sbb    eax,0x1de40000
    9e99:	00 00                	add    BYTE PTR [rax],al
    9e9b:	07                   	(bad)
    9e9c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    9e9d:	2a 00                	sub    al,BYTE PTR [rax]
    9e9f:	00 00                	add    BYTE PTR [rax],al
    9ea1:	00 00                	add    BYTE PTR [rax],al
    9ea3:	00 9b 42 00 00 03    	add    BYTE PTR [rbx+0x3000042],bl
    9ea9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    9eac:	7c 00                	jl     9eae <_end+0x3e96>
    9eae:	00 00                	add    BYTE PTR [rax],al
    9eb0:	16                   	(bad)
    9eb1:	e1 2a                	loope  9edd <_end+0x3ec5>
    9eb3:	00 00                	add    BYTE PTR [rax],al
    9eb5:	00 00                	add    BYTE PTR [rax],al
    9eb7:	00 00                	add    BYTE PTR [rax],al
    9eb9:	1e                   	(bad)
    9eba:	00 00                	add    BYTE PTR [rax],al
    9ebc:	00 00                	add    BYTE PTR [rax],al
    9ebe:	00 00                	add    BYTE PTR [rax],al
    9ec0:	00 a9 47 00 00 2a    	add    BYTE PTR [rcx+0x2a000047],ch
    9ec6:	6a 00                	push   0x0
    9ec8:	6a 0e                	push   0xe
    9eca:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9ecb:	21 00                	and    DWORD PTR [rax],eax
    9ecd:	00 f1                	add    cl,dh
    9ecf:	1d 00 00 ef 1d       	sbb    eax,0x1def0000
    9ed4:	00 00                	add    BYTE PTR [rax],al
    9ed6:	20 ed                	and    ch,ch
    9ed8:	2a 00                	sub    al,BYTE PTR [rax]
    9eda:	00 00                	add    BYTE PTR [rax],al
    9edc:	00 00                	add    BYTE PTR [rax],al
    9ede:	00 4d 2f             	add    BYTE PTR [rbp+0x2f],cl
    9ee1:	00 00                	add    BYTE PTR [rax],al
    9ee3:	00 16                	add    BYTE PTR [rsi],dl
    9ee5:	ff 2a                	jmp    FWORD PTR [rdx]
    9ee7:	00 00                	add    BYTE PTR [rax],al
    9ee9:	00 00                	add    BYTE PTR [rax],al
    9eeb:	00 00                	add    BYTE PTR [rax],al
    9eed:	9d                   	popf
    9eee:	00 00                	add    BYTE PTR [rax],al
    9ef0:	00 00                	add    BYTE PTR [rax],al
    9ef2:	00 00                	add    BYTE PTR [rax],al
    9ef4:	00 c2                	add    dl,al
    9ef6:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9ef9:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9efc:	86 0e                	xchg   BYTE PTR [rsi],cl
    9efe:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9eff:	21 00                	and    DWORD PTR [rax],eax
    9f01:	00 00                	add    BYTE PTR [rax],al
    9f03:	1e                   	(bad)
    9f04:	00 00                	add    BYTE PTR [rax],al
    9f06:	fa                   	cli
    9f07:	1d 00 00 2e 4f       	sbb    eax,0x4f2e0000
    9f0c:	03 00                	add    eax,DWORD PTR [rax]
    9f0e:	00 1f                	add    BYTE PTR [rdi],bl
    9f10:	a8 2e                	test   al,0x2e
    9f12:	00 00                	add    BYTE PTR [rax],al
    9f14:	87 0e                	xchg   DWORD PTR [rsi],ecx
    9f16:	e3 1a                	jrcxz  9f32 <_end+0x3f1a>
    9f18:	00 00                	add    BYTE PTR [rax],al
    9f1a:	1b 1e                	sbb    ebx,DWORD PTR [rsi]
    9f1c:	00 00                	add    BYTE PTR [rax],al
    9f1e:	19 1e                	sbb    DWORD PTR [rsi],ebx
    9f20:	00 00                	add    BYTE PTR [rax],al
    9f22:	49                   	rex.WB
    9f23:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    9f25:	64 00 8d 0e e3 1a 00 	add    BYTE PTR fs:[rbp+0x1ae30e],cl
    9f2c:	00 1f                	add    BYTE PTR [rdi],bl
    9f2e:	1e                   	(bad)
    9f2f:	19 00                	sbb    DWORD PTR [rax],eax
    9f31:	00 8e 0e df 1b 00    	add    BYTE PTR [rsi+0x1bdf0e],cl
    9f37:	00 26                	add    BYTE PTR [rsi],ah
    9f39:	1e                   	(bad)
    9f3a:	00 00                	add    BYTE PTR [rax],al
    9f3c:	24 1e                	and    al,0x1e
    9f3e:	00 00                	add    BYTE PTR [rax],al
    9f40:	16                   	(bad)
    9f41:	2e 2b 00             	cs sub eax,DWORD PTR [rax]
    9f44:	00 00                	add    BYTE PTR [rax],al
    9f46:	00 00                	add    BYTE PTR [rax],al
    9f48:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    9f4b:	00 00                	add    BYTE PTR [rax],al
    9f4d:	00 00                	add    BYTE PTR [rax],al
    9f4f:	00 00                	add    BYTE PTR [rax],al
    9f51:	40                   	rex
    9f52:	48 00 00             	rex.W add BYTE PTR [rax],al
    9f55:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9f58:	89 12                	mov    DWORD PTR [rdx],edx
    9f5a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9f5b:	21 00                	and    DWORD PTR [rax],eax
    9f5d:	00 3d 1e 00 00 3b    	add    BYTE PTR [rip+0x3b00001e],bh        # 3b009f81 <_end+0x3b003f69>
    9f63:	1e                   	(bad)
    9f64:	00 00                	add    BYTE PTR [rax],al
    9f66:	07                   	(bad)
    9f67:	4d 2b 00             	sub    r8,QWORD PTR [r8]
    9f6a:	00 00                	add    BYTE PTR [rax],al
    9f6c:	00 00                	add    BYTE PTR [rax],al
    9f6e:	00 23                	add    BYTE PTR [rbx],ah
    9f70:	42 00 00             	rex.X add BYTE PTR [rax],al
    9f73:	03 01                	add    eax,DWORD PTR [rcx]
    9f75:	55                   	push   rbp
    9f76:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9f7a:	00 1c 40             	add    BYTE PTR [rax+rax*2],bl
    9f7d:	45 00 00             	add    BYTE PTR [r8],r8b
    9f80:	57                   	push   rdi
    9f81:	2b 00                	sub    eax,DWORD PTR [rax]
    9f83:	00 00                	add    BYTE PTR [rax],al
    9f85:	00 00                	add    BYTE PTR [rax],al
    9f87:	00 09                	add    BYTE PTR [rcx],cl
    9f89:	00 5f 03             	add    BYTE PTR [rdi+0x3],bl
    9f8c:	00 00                	add    BYTE PTR [rax],al
    9f8e:	8e 4d b8             	mov    cs,WORD PTR [rbp-0x48]
    9f91:	48 00 00             	rex.W add BYTE PTR [rax],al
    9f94:	0b 64 45 00          	or     esp,DWORD PTR [rbp+rax*2+0x0]
    9f98:	00 4d 71             	add    BYTE PTR [rbp+0x71],cl
    9f9b:	45 00 00             	add    BYTE PTR [r8],r8b
    9f9e:	5f                   	pop    rdi
    9f9f:	03 00                	add    eax,DWORD PTR [rax]
    9fa1:	00 60 b8             	add    BYTE PTR [rax-0x48],ah
    9fa4:	44 00 00             	add    BYTE PTR [rax],r8b
    9fa7:	57                   	push   rdi
    9fa8:	2b 00                	sub    eax,DWORD PTR [rax]
    9faa:	00 00                	add    BYTE PTR [rax],al
    9fac:	00 00                	add    BYTE PTR [rax],al
    9fae:	00 0a                	add    BYTE PTR [rdx],cl
    9fb0:	00 5f 03             	add    BYTE PTR [rdi+0x3],bl
    9fb3:	00 00                	add    BYTE PTR [rax],al
    9fb5:	1f                   	(bad)
    9fb6:	01 17                	add    DWORD PTR [rdi],edx
    9fb8:	0b d3                	or     edx,ebx
    9fba:	44 00 00             	add    BYTE PTR [rax],r8b
    9fbd:	2e 5f                	cs pop rdi
    9fbf:	03 00                	add    eax,DWORD PTR [rax]
    9fc1:	00 19                	add    BYTE PTR [rcx],bl
    9fc3:	66 44 00 00          	data16 add BYTE PTR [rax],r8b
    9fc7:	57                   	push   rdi
    9fc8:	2b 00                	sub    eax,DWORD PTR [rax]
    9fca:	00 00                	add    BYTE PTR [rax],al
    9fcc:	00 00                	add    BYTE PTR [rax],al
    9fce:	00 0b                	add    BYTE PTR [rbx],cl
    9fd0:	00 57 2b             	add    BYTE PTR [rdi+0x2b],dl
	...
    9fdf:	00 00                	add    BYTE PTR [rax],al
    9fe1:	04 d3                	add    al,0xd3
    9fe3:	0d 0b 86 44 00       	or     eax,0x44860b
    9fe8:	00 0b                	add    BYTE PTR [rbx],cl
    9fea:	7d 44                	jge    a030 <_end+0x4018>
    9fec:	00 00                	add    BYTE PTR [rax],al
    9fee:	00 00                	add    BYTE PTR [rax],al
    9ff0:	00 00                	add    BYTE PTR [rax],al
    9ff2:	00 1c 89             	add    BYTE PTR [rcx+rcx*4],bl
    9ff5:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9ff8:	57                   	push   rdi
    9ff9:	2b 00                	sub    eax,DWORD PTR [rax]
    9ffb:	00 00                	add    BYTE PTR [rax],al
    9ffd:	00 00                	add    BYTE PTR [rax],al
    9fff:	00 01                	add    BYTE PTR [rcx],al
    a001:	00 74 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dh
    a005:	00 8e 54 a6 49 00    	add    BYTE PTR [rsi+0x49a654],cl
    a00b:	00 05 b9 4e 00 00    	add    BYTE PTR [rip+0x4eb9],al        # eeca <_end+0x8eb2>
    a011:	48 1e                	rex.W (bad)
    a013:	00 00                	add    BYTE PTR [rax],al
    a015:	46 1e                	rex.RX (bad)
    a017:	00 00                	add    BYTE PTR [rax],al
    a019:	05 ad 4e 00 00       	add    eax,0x4ead
    a01e:	57                   	push   rdi
    a01f:	1e                   	(bad)
    a020:	00 00                	add    BYTE PTR [rax],al
    a022:	55                   	push   rbp
    a023:	1e                   	(bad)
    a024:	00 00                	add    BYTE PTR [rax],al
    a026:	61                   	(bad)
    a027:	6c                   	ins    BYTE PTR es:[rdi],dx
    a028:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a02b:	57                   	push   rdi
    a02c:	2b 00                	sub    eax,DWORD PTR [rax]
    a02e:	00 00                	add    BYTE PTR [rax],al
    a030:	00 00                	add    BYTE PTR [rax],al
    a032:	00 02                	add    BYTE PTR [rdx],al
    a034:	00 57 2b             	add    BYTE PTR [rdi+0x2b],dl
	...
    a043:	00 00                	add    BYTE PTR [rax],al
    a045:	41 1d 49 00 00 05    	rex.B sbb eax,0x5000049
    a04b:	7a 4e                	jp     a09b <_end+0x4083>
    a04d:	00 00                	add    BYTE PTR [rax],al
    a04f:	66 1e                	data16 (bad)
    a051:	00 00                	add    BYTE PTR [rax],al
    a053:	64 1e                	fs (bad)
    a055:	00 00                	add    BYTE PTR [rax],al
    a057:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    a05a:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a05d:	57                   	push   rdi
    a05e:	2b 00                	sub    eax,DWORD PTR [rax]
    a060:	00 00                	add    BYTE PTR [rax],al
    a062:	00 00                	add    BYTE PTR [rax],al
    a064:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    a067:	57                   	push   rdi
    a068:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    a076:	00 26                	add    BYTE PTR [rsi],ah
    a078:	4f                   	rex.WRXB
    a079:	49 00 00             	rex.WB add BYTE PTR [r8],al
    a07c:	05 7a 4e 00 00       	add    eax,0x4e7a
    a081:	75 1e                	jne    a0a1 <_end+0x4089>
    a083:	00 00                	add    BYTE PTR [rax],al
    a085:	73 1e                	jae    a0a5 <_end+0x408d>
    a087:	00 00                	add    BYTE PTR [rax],al
    a089:	00 60 ed             	add    BYTE PTR [rax-0x13],ah
    a08c:	44 00 00             	add    BYTE PTR [rax],r8b
    a08f:	57                   	push   rdi
    a090:	2b 00                	sub    eax,DWORD PTR [rax]
    a092:	00 00                	add    BYTE PTR [rax],al
    a094:	00 00                	add    BYTE PTR [rax],al
    a096:	00 06                	add    BYTE PTR [rsi],al
    a098:	00 84 03 00 00 77 04 	add    BYTE PTR [rbx+rax*1+0x4770000],al
    a09f:	29 0b                	sub    DWORD PTR [rbx],ecx
    a0a1:	26 45 00 00          	es add BYTE PTR [r8],r8b
    a0a5:	0b 1a                	or     ebx,DWORD PTR [rdx]
    a0a7:	45 00 00             	add    BYTE PTR [r8],r8b
    a0aa:	2e 84 03             	cs test BYTE PTR [rbx],al
    a0ad:	00 00                	add    BYTE PTR [rax],al
    a0af:	8a 01                	mov    al,BYTE PTR [rcx]
    a0b1:	84 71 00             	test   BYTE PTR [rcx+0x0],dh
    a0b4:	00 57 2b             	add    BYTE PTR [rdi+0x2b],dl
    a0b7:	00 00                	add    BYTE PTR [rax],al
    a0b9:	00 00                	add    BYTE PTR [rax],al
    a0bb:	00 00                	add    BYTE PTR [rax],al
    a0bd:	07                   	(bad)
    a0be:	00 57 2b             	add    BYTE PTR [rdi+0x2b],dl
	...
    a0cd:	00 00                	add    BYTE PTR [rax],al
    a0cf:	04 cc                	add    al,0xcc
    a0d1:	02 09                	add    cl,BYTE PTR [rcx]
    a0d3:	0b a4 71 00 00 0b 9b 	or     esp,DWORD PTR [rcx+rsi*2-0x64f50000]
    a0da:	71 00                	jno    a0dc <_end+0x40c4>
    a0dc:	00 00                	add    BYTE PTR [rax],al
    a0de:	00 00                	add    BYTE PTR [rax],al
    a0e0:	00 20                	add    BYTE PTR [rax],ah
    a0e2:	26 2b 00             	es sub eax,DWORD PTR [rax]
    a0e5:	00 00                	add    BYTE PTR [rax],al
    a0e7:	00 00                	add    BYTE PTR [rax],al
    a0e9:	00 d0                	add    al,dl
    a0eb:	1a 00                	sbb    al,BYTE PTR [rax]
    a0ed:	00 20                	add    BYTE PTR [rax],ah
    a0ef:	57                   	push   rdi
    a0f0:	2b 00                	sub    eax,DWORD PTR [rax]
    a0f2:	00 00                	add    BYTE PTR [rax],al
    a0f4:	00 00                	add    BYTE PTR [rax],al
    a0f6:	00 d0                	add    al,dl
    a0f8:	1a 00                	sbb    al,BYTE PTR [rax]
    a0fa:	00 00                	add    BYTE PTR [rax],al
    a0fc:	00 62 a4             	add    BYTE PTR [rdx-0x5c],ah
    a0ff:	03 00                	add    eax,DWORD PTR [rax]
    a101:	00 38                	add    BYTE PTR [rax],bh
    a103:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a106:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a109:	98                   	cwde
    a10a:	13 b0 2c 00 00 8a    	adc    esi,DWORD PTR [rax-0x75ffffd4]
    a110:	1e                   	(bad)
    a111:	00 00                	add    BYTE PTR [rax],al
    a113:	82                   	(bad)
    a114:	1e                   	(bad)
    a115:	00 00                	add    BYTE PTR [rax],al
    a117:	39 f2                	cmp    edx,esi
    a119:	71 00                	jno    a11b <_end+0x4103>
    a11b:	00 04 2c             	add    BYTE PTR [rsp+rbp*1],al
    a11e:	00 00                	add    BYTE PTR [rax],al
    a120:	00 00                	add    BYTE PTR [rax],al
    a122:	00 00                	add    BYTE PTR [rax],al
    a124:	02 00                	add    al,BYTE PTR [rax]
    a126:	b4 03                	mov    ah,0x3
    a128:	00 00                	add    BYTE PTR [rax],al
    a12a:	99                   	cdq
    a12b:	10 05 0c 72 00 00    	adc    BYTE PTR [rip+0x720c],al        # 1133d <_end+0xb325>
    a131:	ac                   	lods   al,BYTE PTR ds:[rsi]
    a132:	1e                   	(bad)
    a133:	00 00                	add    BYTE PTR [rax],al
    a135:	aa                   	stos   BYTE PTR es:[rdi],al
    a136:	1e                   	(bad)
    a137:	00 00                	add    BYTE PTR [rax],al
    a139:	05 00 72 00 00       	add    eax,0x7200
    a13e:	c1 1e 00             	rcr    DWORD PTR [rsi],0x0
    a141:	00 bd 1e 00 00 07    	add    BYTE PTR [rbp+0x700001e],bh
    a147:	12 2c 00             	adc    ch,BYTE PTR [rax+rax*1]
    a14a:	00 00                	add    BYTE PTR [rax],al
    a14c:	00 00                	add    BYTE PTR [rax],al
    a14e:	00 63 42             	add    BYTE PTR [rbx+0x42],ah
    a151:	00 00                	add    BYTE PTR [rax],al
    a153:	03 01                	add    eax,DWORD PTR [rcx]
    a155:	55                   	push   rbp
    a156:	04 76                	add    al,0x76
    a158:	f8                   	clc
    a159:	7e 06                	jle    a161 <_end+0x4149>
    a15b:	03 01                	add    eax,DWORD PTR [rcx]
    a15d:	54                   	push   rsp
    a15e:	01 32                	add    DWORD PTR [rdx],esi
    a160:	03 01                	add    eax,DWORD PTR [rcx]
    a162:	51                   	push   rcx
    a163:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    a166:	03 01                	add    eax,DWORD PTR [rcx]
    a168:	61                   	(bad)
    a169:	06                   	(bad)
    a16a:	76 a8                	jbe    a114 <_end+0x40fc>
    a16c:	7f a6                	jg     a114 <_end+0x40fc>
    a16e:	08 2e                	or     BYTE PTR [rsi],ch
    a170:	00 00                	add    BYTE PTR [rax],al
    a172:	00 1c f2             	add    BYTE PTR [rdx+rsi*8],bl
    a175:	71 00                	jno    a177 <_end+0x415f>
    a177:	00 b2 2b 00 00 00    	add    BYTE PTR [rdx+0x2b],dh
    a17d:	00 00                	add    BYTE PTR [rax],al
    a17f:	00 02                	add    BYTE PTR [rdx],al
    a181:	00 94 03 00 00 97 0c 	add    BYTE PTR [rbx+rax*1+0xc970000],dl
    a188:	ca 4a 00             	retf   0x4a
    a18b:	00 05 0c 72 00 00    	add    BYTE PTR [rip+0x720c],al        # 1139d <_end+0xb385>
    a191:	d6                   	(bad)
    a192:	1e                   	(bad)
    a193:	00 00                	add    BYTE PTR [rax],al
    a195:	d2 1e                	rcr    BYTE PTR [rsi],cl
    a197:	00 00                	add    BYTE PTR [rax],al
    a199:	05 00 72 00 00       	add    eax,0x7200
    a19e:	fb                   	sti
    a19f:	1e                   	(bad)
    a1a0:	00 00                	add    BYTE PTR [rax],al
    a1a2:	f7 1e                	neg    DWORD PTR [rsi]
    a1a4:	00 00                	add    BYTE PTR [rax],al
    a1a6:	0a d2                	or     dl,dl
    a1a8:	2b 00                	sub    eax,DWORD PTR [rax]
    a1aa:	00 00                	add    BYTE PTR [rax],al
    a1ac:	00 00                	add    BYTE PTR [rax],al
    a1ae:	00 5b 75             	add    BYTE PTR [rbx+0x75],bl
    a1b1:	00 00                	add    BYTE PTR [rax],al
    a1b3:	9c                   	pushf
    a1b4:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a1b7:	03 01                	add    eax,DWORD PTR [rcx]
    a1b9:	55                   	push   rbp
    a1ba:	09 03                	or     DWORD PTR [rbx],eax
    a1bc:	e5 41                	in     eax,0x41
    a1be:	00 00                	add    BYTE PTR [rax],al
    a1c0:	00 00                	add    BYTE PTR [rax],al
    a1c2:	00 00                	add    BYTE PTR [rax],al
    a1c4:	03 01                	add    eax,DWORD PTR [rcx]
    a1c6:	54                   	push   rsp
    a1c7:	01 31                	add    DWORD PTR [rcx],esi
    a1c9:	03 01                	add    eax,DWORD PTR [rcx]
    a1cb:	51                   	push   rcx
    a1cc:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a1cf:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a1d2:	76 f8                	jbe    a1cc <_end+0x41b4>
    a1d4:	7e 06                	jle    a1dc <_end+0x41c4>
    a1d6:	00 07                	add    BYTE PTR [rdi],al
    a1d8:	e8 2d 00 00 00       	call   a20a <_end+0x41f2>
    a1dd:	00 00                	add    BYTE PTR [rax],al
    a1df:	00 5b 75             	add    BYTE PTR [rbx+0x75],bl
    a1e2:	00 00                	add    BYTE PTR [rax],al
    a1e4:	03 01                	add    eax,DWORD PTR [rcx]
    a1e6:	55                   	push   rbp
    a1e7:	09 03                	or     DWORD PTR [rbx],eax
    a1e9:	e5 41                	in     eax,0x41
    a1eb:	00 00                	add    BYTE PTR [rax],al
    a1ed:	00 00                	add    BYTE PTR [rax],al
    a1ef:	00 00                	add    BYTE PTR [rax],al
    a1f1:	03 01                	add    eax,DWORD PTR [rcx]
    a1f3:	54                   	push   rsp
    a1f4:	01 31                	add    DWORD PTR [rcx],esi
    a1f6:	03 01                	add    eax,DWORD PTR [rcx]
    a1f8:	51                   	push   rcx
    a1f9:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a1fc:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a1ff:	76 f8                	jbe    a1f9 <_end+0x41e1>
    a201:	7e 06                	jle    a209 <_end+0x41f1>
    a203:	00 00                	add    BYTE PTR [rax],al
    a205:	1c e1                	sbb    al,0xe1
    a207:	45 00 00             	add    BYTE PTR [r8],r8b
    a20a:	3d 2c 00 00 00       	cmp    eax,0x2c
    a20f:	00 00                	add    BYTE PTR [rax],al
    a211:	00 01                	add    BYTE PTR [rcx],al
    a213:	00 c4                	add    ah,al
    a215:	03 00                	add    eax,DWORD PTR [rax]
    a217:	00 9e 31 e7 4b 00    	add    BYTE PTR [rsi+0x4be731],bl
    a21d:	00 05 0c 46 00 00    	add    BYTE PTR [rip+0x460c],al        # e82f <_end+0x8817>
    a223:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    a225:	00 00                	add    BYTE PTR [rax],al
    a227:	0e                   	(bad)
    a228:	1f                   	(bad)
    a229:	00 00                	add    BYTE PTR [rax],al
    a22b:	05 00 46 00 00       	add    eax,0x4600
    a230:	64 1f                	fs (bad)
    a232:	00 00                	add    BYTE PTR [rax],al
    a234:	54                   	push   rsp
    a235:	1f                   	(bad)
    a236:	00 00                	add    BYTE PTR [rax],al
    a238:	05 f4 45 00 00       	add    eax,0x45f4
    a23d:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    a23e:	1f                   	(bad)
    a23f:	00 00                	add    BYTE PTR [rax],al
    a241:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a242:	1f                   	(bad)
    a243:	00 00                	add    BYTE PTR [rax],al
    a245:	2e c4 03 00 00       	(bad)
    a24a:	15 21 46 00 00       	adc    eax,0x4621
    a24f:	dc 1f                	fcomp  QWORD PTR [rdi]
    a251:	00 00                	add    BYTE PTR [rax],al
    a253:	d0 1f                	rcr    BYTE PTR [rdi],1
    a255:	00 00                	add    BYTE PTR [rax],al
    a257:	3a 2c 46             	cmp    ch,BYTE PTR [rsi+rax*2]
    a25a:	00 00                	add    BYTE PTR [rax],al
    a25c:	de 03                	fiadd  WORD PTR [rbx]
    a25e:	00 00                	add    BYTE PTR [rax],al
    a260:	2f                   	(bad)
    a261:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    a264:	3b 2d 46 00 00 00    	cmp    ebp,DWORD PTR [rip+0x46]        # a2b0 <_end+0x4298>
    a26a:	1c 1a                	sbb    al,0x1a
    a26c:	72 00                	jb     a26e <_end+0x4256>
    a26e:	00 01                	add    BYTE PTR [rcx],al
    a270:	2d 00 00 00 00       	sub    eax,0x0
    a275:	00 00                	add    BYTE PTR [rax],al
    a277:	00 00                	add    BYTE PTR [rax],al
    a279:	e9 03 00 00 af       	jmp    ffffffffaf00a281 <_end+0xffffffffaf004269>
    a27e:	1e                   	(bad)
    a27f:	63 4b 00             	movsxd ecx,DWORD PTR [rbx+0x0]
    a282:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 114ab <_end+0xb493>
    a288:	0d 20 00 00 07       	or     eax,0x7000020
    a28d:	20 00                	and    BYTE PTR [rax],al
    a28f:	00 20                	add    BYTE PTR [rax],ah
    a291:	5c                   	pop    rsp
    a292:	2e 00 00             	cs add BYTE PTR [rax],al
    a295:	00 00                	add    BYTE PTR [rax],al
    a297:	00 00                	add    BYTE PTR [rax],al
    a299:	64 75 00             	fs jne a29c <_end+0x4284>
    a29c:	00 00                	add    BYTE PTR [rax],al
    a29e:	19 e1                	sbb    ecx,esp
    a2a0:	45 00 00             	add    BYTE PTR [r8],r8b
    a2a3:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    a2a6:	00 00                	add    BYTE PTR [rax],al
    a2a8:	00 00                	add    BYTE PTR [rax],al
    a2aa:	00 01                	add    BYTE PTR [rcx],al
    a2ac:	00 0f                	add    BYTE PTR [rdi],cl
    a2ae:	2e 00 00             	cs add BYTE PTR [rax],al
    a2b1:	00 00                	add    BYTE PTR [rax],al
    a2b3:	00 00                	add    BYTE PTR [rax],al
    a2b5:	1f                   	(bad)
    a2b6:	00 00                	add    BYTE PTR [rax],al
    a2b8:	00 00                	add    BYTE PTR [rax],al
    a2ba:	00 00                	add    BYTE PTR [rax],al
    a2bc:	00 01                	add    BYTE PTR [rcx],al
    a2be:	a8 08                	test   al,0x8
    a2c0:	05 f4 45 00 00       	add    eax,0x45f4
    a2c5:	25 20 00 00 23       	and    eax,0x23000020
    a2ca:	20 00                	and    BYTE PTR [rax],al
    a2cc:	00 05 00 46 00 00    	add    BYTE PTR [rip+0x4600],al        # e8d2 <_end+0x88ba>
    a2d2:	25 20 00 00 23       	and    eax,0x23000020
    a2d7:	20 00                	and    BYTE PTR [rax],al
    a2d9:	00 0b                	add    BYTE PTR [rbx],cl
    a2db:	0c 46                	or     al,0x46
    a2dd:	00 00                	add    BYTE PTR [rax],al
    a2df:	3b 21                	cmp    esp,DWORD PTR [rcx]
    a2e1:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    a2e4:	07                   	(bad)
    a2e5:	2e 2e 00 00          	cs cs add BYTE PTR [rax],al
    a2e9:	00 00                	add    BYTE PTR [rax],al
    a2eb:	00 00                	add    BYTE PTR [rax],al
    a2ed:	3f                   	(bad)
    a2ee:	44 00 00             	add    BYTE PTR [rax],r8b
    a2f1:	03 01                	add    eax,DWORD PTR [rcx]
    a2f3:	55                   	push   rbp
    a2f4:	09 03                	or     DWORD PTR [rbx],eax
    a2f6:	f9                   	stc
    a2f7:	41 00 00             	add    BYTE PTR [r8],al
    a2fa:	00 00                	add    BYTE PTR [rax],al
    a2fc:	00 00                	add    BYTE PTR [rax],al
    a2fe:	03 01                	add    eax,DWORD PTR [rcx]
    a300:	54                   	push   rsp
    a301:	09 03                	or     DWORD PTR [rbx],eax
    a303:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a304:	41 00 00             	add    BYTE PTR [r8],al
    a307:	00 00                	add    BYTE PTR [rax],al
    a309:	00 00                	add    BYTE PTR [rax],al
    a30b:	03 01                	add    eax,DWORD PTR [rcx]
    a30d:	51                   	push   rcx
    a30e:	02 08                	add    cl,BYTE PTR [rax]
    a310:	a9 03 01 52 09       	test   eax,0x9520103
    a315:	03 e8                	add    ebp,eax
    a317:	44 00 00             	add    BYTE PTR [rax],r8b
	...
    a322:	1c d6                	sbb    al,0xd6
    a324:	71 00                	jno    a326 <_end+0x430e>
    a326:	00 23                	add    BYTE PTR [rbx],ah
    a328:	2d 00 00 00 00       	sub    eax,0x0
    a32d:	00 00                	add    BYTE PTR [rax],al
    a32f:	03 00                	add    eax,DWORD PTR [rax]
    a331:	f9                   	stc
    a332:	03 00                	add    eax,DWORD PTR [rax]
    a334:	00 a0 0b 38 4c 00    	add    BYTE PTR [rax+0x4c380b],ah
    a33a:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11524 <_end+0xb50c>
    a340:	30 20                	xor    BYTE PTR [rax],ah
    a342:	00 00                	add    BYTE PTR [rax],al
    a344:	2e 20 00             	cs and BYTE PTR [rax],al
    a347:	00 07                	add    BYTE PTR [rdi],al
    a349:	3b 2d 00 00 00 00    	cmp    ebp,DWORD PTR [rip+0x0]        # a34f <_end+0x4337>
    a34f:	00 00                	add    BYTE PTR [rax],al
    a351:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a354:	00 03                	add    BYTE PTR [rbx],al
    a356:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a359:	32 03                	xor    al,BYTE PTR [rbx]
    a35b:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a35f:	0d 42 00 00 00       	or     eax,0x42
    a364:	00 00                	add    BYTE PTR [rax],al
    a366:	00 03                	add    BYTE PTR [rbx],al
    a368:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    a36b:	76 a8                	jbe    a315 <_end+0x42fd>
    a36d:	7f a6                	jg     a315 <_end+0x42fd>
    a36f:	08 2e                	or     BYTE PTR [rsi],ch
    a371:	00 00                	add    BYTE PTR [rax],al
    a373:	09 d6                	or     esi,edx
    a375:	71 00                	jno    a377 <_end+0x435f>
    a377:	00 3b                	add    BYTE PTR [rbx],bh
    a379:	2d 00 00 00 00       	sub    eax,0x0
    a37e:	00 00                	add    BYTE PTR [rax],al
    a380:	02 00                	add    al,BYTE PTR [rax]
    a382:	3b 2d 00 00 00 00    	cmp    ebp,DWORD PTR [rip+0x0]        # a388 <_end+0x4370>
    a388:	00 00                	add    BYTE PTR [rax],al
    a38a:	1b 00                	sbb    eax,DWORD PTR [rax]
    a38c:	00 00                	add    BYTE PTR [rax],al
    a38e:	00 00                	add    BYTE PTR [rax],al
    a390:	00 00                	add    BYTE PTR [rax],al
    a392:	a1 0b 92 4c 00 00 05 	movabs eax,ds:0x71e40500004c920b
    a399:	e4 71 
    a39b:	00 00                	add    BYTE PTR [rax],al
    a39d:	43 20 00             	rex.XB and BYTE PTR [r8],al
    a3a0:	00 41 20             	add    BYTE PTR [rcx+0x20],al
    a3a3:	00 00                	add    BYTE PTR [rax],al
    a3a5:	07                   	(bad)
    a3a6:	56                   	push   rsi
    a3a7:	2d 00 00 00 00       	sub    eax,0x0
    a3ac:	00 00                	add    BYTE PTR [rax],al
    a3ae:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a3b1:	00 03                	add    BYTE PTR [rbx],al
    a3b3:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a3b6:	32 03                	xor    al,BYTE PTR [rbx]
    a3b8:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a3bc:	2b 42 00             	sub    eax,DWORD PTR [rdx+0x0]
    a3bf:	00 00                	add    BYTE PTR [rax],al
    a3c1:	00 00                	add    BYTE PTR [rax],al
    a3c3:	00 03                	add    BYTE PTR [rbx],al
    a3c5:	01 61 03             	add    DWORD PTR [rcx+0x3],esp
    a3c8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a3c9:	03 2e                	add    ebp,DWORD PTR [rsi]
    a3cb:	00 00                	add    BYTE PTR [rax],al
    a3cd:	1c d6                	sbb    al,0xd6
    a3cf:	71 00                	jno    a3d1 <_end+0x43b9>
    a3d1:	00 56 2d             	add    BYTE PTR [rsi+0x2d],dl
    a3d4:	00 00                	add    BYTE PTR [rax],al
    a3d6:	00 00                	add    BYTE PTR [rax],al
    a3d8:	00 00                	add    BYTE PTR [rax],al
    a3da:	02 00                	add    al,BYTE PTR [rax]
    a3dc:	04 04                	add    al,0x4
    a3de:	00 00                	add    BYTE PTR [rax],al
    a3e0:	a2 0b f3 4c 00 00 05 	movabs ds:0x71e40500004cf30b,al
    a3e7:	e4 71 
    a3e9:	00 00                	add    BYTE PTR [rax],al
    a3eb:	56                   	push   rsi
    a3ec:	20 00                	and    BYTE PTR [rax],al
    a3ee:	00 54 20 00          	add    BYTE PTR [rax+riz*1+0x0],dl
    a3f2:	00 07                	add    BYTE PTR [rdi],al
    a3f4:	82                   	(bad)
    a3f5:	2d 00 00 00 00       	sub    eax,0x0
    a3fa:	00 00                	add    BYTE PTR [rax],al
    a3fc:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a3ff:	00 03                	add    BYTE PTR [rbx],al
    a401:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a404:	32 03                	xor    al,BYTE PTR [rbx]
    a406:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a40a:	49                   	rex.WB
    a40b:	42 00 00             	rex.X add BYTE PTR [rax],al
    a40e:	00 00                	add    BYTE PTR [rax],al
    a410:	00 00                	add    BYTE PTR [rax],al
    a412:	03 01                	add    eax,DWORD PTR [rcx]
    a414:	61                   	(bad)
    a415:	16                   	(bad)
    a416:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a417:	03 2e                	add    ebp,DWORD PTR [rsi]
    a419:	76 a8                	jbe    a3c3 <_end+0x43ab>
    a41b:	7f a6                	jg     a3c3 <_end+0x43ab>
    a41d:	08 2e                	or     BYTE PTR [rsi],ch
    a41f:	1b a4 2e 08 00 00 00 	sbb    esp,DWORD PTR [rsi+rbp*1+0x8]
    a426:	00 00                	add    BYTE PTR [rax],al
    a428:	00 59 40             	add    BYTE PTR [rcx+0x40],bl
    a42b:	1e                   	(bad)
    a42c:	00 00                	add    BYTE PTR [rax],al
    a42e:	0a 71 2a             	or     dh,BYTE PTR [rcx+0x2a]
    a431:	00 00                	add    BYTE PTR [rax],al
    a433:	00 00                	add    BYTE PTR [rax],al
    a435:	00 00                	add    BYTE PTR [rax],al
    a437:	5a                   	pop    rdx
    a438:	2f                   	(bad)
    a439:	00 00                	add    BYTE PTR [rax],al
    a43b:	0a 4d 00             	or     cl,BYTE PTR [rbp+0x0]
    a43e:	00 03                	add    BYTE PTR [rbx],al
    a440:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a443:	3a 00                	cmp    al,BYTE PTR [rax]
    a445:	0a 81 2a 00 00 00    	or     al,BYTE PTR [rcx+0x2a]
    a44b:	00 00                	add    BYTE PTR [rax],al
    a44d:	00 ba 42 00 00 2d    	add    BYTE PTR [rdx+0x2d000042],bh
    a453:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a456:	03 01                	add    eax,DWORD PTR [rcx]
    a458:	55                   	push   rbp
    a459:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a45d:	01 54 02 7f          	add    DWORD PTR [rdx+rax*1+0x7f],edx
    a461:	00 03                	add    BYTE PTR [rbx],al
    a463:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    a466:	32 00                	xor    al,BYTE PTR [rax]
    a468:	0a b8 2a 00 00 00    	or     bh,BYTE PTR [rax+0x2a]
    a46e:	00 00                	add    BYTE PTR [rax],al
    a470:	00 47 42             	add    BYTE PTR [rdi+0x42],al
    a473:	00 00                	add    BYTE PTR [rax],al
    a475:	4d                   	rex.WRB
    a476:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a479:	03 01                	add    eax,DWORD PTR [rcx]
    a47b:	55                   	push   rbp
    a47c:	05 0c 40 42 0f       	add    eax,0xf42400c
    a481:	00 03                	add    BYTE PTR [rbx],al
    a483:	01 54 01 34          	add    DWORD PTR [rcx+rax*1+0x34],edx
    a487:	00 0a                	add    BYTE PTR [rdx],cl
    a489:	dd 2a                	(bad)  [rdx]
    a48b:	00 00                	add    BYTE PTR [rax],al
    a48d:	00 00                	add    BYTE PTR [rax],al
    a48f:	00 00                	add    BYTE PTR [rax],al
    a491:	47                   	rex.RXB
    a492:	42 00 00             	rex.X add BYTE PTR [rax],al
    a495:	6c                   	ins    BYTE PTR es:[rdi],dx
    a496:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a499:	03 01                	add    eax,DWORD PTR [rcx]
    a49b:	55                   	push   rbp
    a49c:	04 76                	add    al,0x76
    a49e:	80 7f 06 03          	cmp    BYTE PTR [rdi+0x6],0x3
    a4a2:	01 54 01 38          	add    DWORD PTR [rcx+rax*1+0x38],edx
    a4a6:	00 0a                	add    BYTE PTR [rdx],cl
    a4a8:	b2 2b                	mov    dl,0x2b
    a4aa:	00 00                	add    BYTE PTR [rax],al
    a4ac:	00 00                	add    BYTE PTR [rax],al
    a4ae:	00 00                	add    BYTE PTR [rax],al
    a4b0:	84 42 00             	test   BYTE PTR [rdx+0x0],al
    a4b3:	00 85 4d 00 00 03    	add    BYTE PTR [rbp+0x300004d],al
    a4b9:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
    a4bc:	76 b0                	jbe    a46e <_end+0x4456>
    a4be:	7f 00                	jg     a4c0 <_end+0x44a8>
    a4c0:	27                   	(bad)
    a4c1:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    a4c2:	2c 00                	sub    al,0x0
    a4c4:	00 00                	add    BYTE PTR [rax],al
    a4c6:	00 00                	add    BYTE PTR [rax],al
    a4c8:	00 01                	add    BYTE PTR [rcx],al
    a4ca:	30 0a                	xor    BYTE PTR [rdx],cl
    a4cc:	8b 2d 00 00 00 00    	mov    ebp,DWORD PTR [rip+0x0]        # a4d2 <_end+0x44ba>
    a4d2:	00 00                	add    BYTE PTR [rax],al
    a4d4:	f5                   	cmc
    a4d5:	42 00 00             	rex.X add BYTE PTR [rax],al
    a4d8:	aa                   	stos   BYTE PTR es:[rdi],al
    a4d9:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a4dc:	03 01                	add    eax,DWORD PTR [rcx]
    a4de:	55                   	push   rbp
    a4df:	04 76                	add    al,0x76
    a4e1:	90                   	nop
    a4e2:	7f 06                	jg     a4ea <_end+0x44d2>
    a4e4:	00 8b 01 bb 2d 00    	add    BYTE PTR [rbx+0x2dbb01],cl
    a4ea:	00 00                	add    BYTE PTR [rax],al
    a4ec:	00 00                	add    BYTE PTR [rax],al
    a4ee:	00 f5                	add    ch,dh
    a4f0:	42 00 00             	rex.X add BYTE PTR [rax],al
    a4f3:	ca 4d 00             	retf   0x4d
    a4f6:	00 03                	add    BYTE PTR [rbx],al
    a4f8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a4fb:	91                   	xchg   ecx,eax
    a4fc:	70 09                	jo     a507 <_end+0x44ef>
    a4fe:	e0 1a                	loopne a51a <_end+0x4502>
    a500:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    a503:	06                   	(bad)
    a504:	00 27                	add    BYTE PTR [rdi],ah
    a506:	be 2d 00 00 00       	mov    esi,0x2d
    a50b:	00 00                	add    BYTE PTR [rax],al
    a50d:	00 01                	add    BYTE PTR [rcx],al
    a50f:	30 0a                	xor    BYTE PTR [rdx],cl
    a511:	cb                   	retf
    a512:	2d 00 00 00 00       	sub    eax,0x0
    a517:	00 00                	add    BYTE PTR [rax],al
    a519:	84 42 00             	test   BYTE PTR [rdx+0x0],al
    a51c:	00 ed                	add    ch,ch
    a51e:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a521:	03 01                	add    eax,DWORD PTR [rcx]
    a523:	55                   	push   rbp
    a524:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a528:	0a 4d 2e             	or     cl,BYTE PTR [rbp+0x2e]
    a52b:	00 00                	add    BYTE PTR [rax],al
    a52d:	00 00                	add    BYTE PTR [rax],al
    a52f:	00 00                	add    BYTE PTR [rax],al
    a531:	3f                   	(bad)
    a532:	44 00 00             	add    BYTE PTR [rax],r8b
    a535:	2c 4e                	sub    al,0x4e
    a537:	00 00                	add    BYTE PTR [rax],al
    a539:	03 01                	add    eax,DWORD PTR [rcx]
    a53b:	55                   	push   rbp
    a53c:	09 03                	or     DWORD PTR [rbx],eax
    a53e:	8b 41 00             	mov    eax,DWORD PTR [rcx+0x0]
    a541:	00 00                	add    BYTE PTR [rax],al
    a543:	00 00                	add    BYTE PTR [rax],al
    a545:	00 03                	add    BYTE PTR [rbx],al
    a547:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a54b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a54c:	41 00 00             	add    BYTE PTR [r8],al
    a54f:	00 00                	add    BYTE PTR [rax],al
    a551:	00 00                	add    BYTE PTR [rax],al
    a553:	03 01                	add    eax,DWORD PTR [rcx]
    a555:	51                   	push   rcx
    a556:	02 08                	add    cl,BYTE PTR [rax]
    a558:	5e                   	pop    rsi
    a559:	03 01                	add    eax,DWORD PTR [rcx]
    a55b:	52                   	push   rdx
    a55c:	09 03                	or     DWORD PTR [rbx],eax
    a55e:	b0 44                	mov    al,0x44
    a560:	00 00                	add    BYTE PTR [rax],al
    a562:	00 00                	add    BYTE PTR [rax],al
    a564:	00 00                	add    BYTE PTR [rax],al
    a566:	00 20                	add    BYTE PTR [rax],ah
    a568:	52                   	push   rdx
    a569:	2e 00 00             	cs add BYTE PTR [rax],al
    a56c:	00 00                	add    BYTE PTR [rax],al
    a56e:	00 00                	add    BYTE PTR [rax],al
    a570:	6d                   	ins    DWORD PTR es:[rdi],dx
    a571:	75 00                	jne    a573 <_end+0x455b>
    a573:	00 00                	add    BYTE PTR [rax],al
    a575:	25 ee 22 00 00       	and    eax,0x22ee
    a57a:	4a                   	rex.WX
    a57b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a57e:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a581:	00 00                	add    BYTE PTR [rax],al
    a583:	36 00 13             	ss add BYTE PTR [rbx],dl
    a586:	3a 4e 00             	cmp    cl,BYTE PTR [rsi+0x0]
    a589:	00 0d b0 2c 00 00    	add    BYTE PTR [rip+0x2cb0],cl        # d23f <_end+0x7227>
    a58f:	30 90 1c 00 00 62    	xor    BYTE PTR [rax+0x6200001c],dl
    a595:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a598:	03 6c 4e 00          	add    ebp,DWORD PTR [rsi+rcx*2+0x0]
    a59c:	00 31                	add    BYTE PTR [rcx],dh
    a59e:	1b 1e                	sbb    ebx,DWORD PTR [rsi]
    a5a0:	00 00                	add    BYTE PTR [rax],al
    a5a2:	ce                   	(bad)
    a5a3:	3f                   	(bad)
    a5a4:	00 00                	add    BYTE PTR [rax],al
    a5a6:	00 30                	add    BYTE PTR [rax],dh
    a5a8:	3c 1b                	cmp    al,0x1b
    a5aa:	00 00                	add    BYTE PTR [rax],al
    a5ac:	7a 4e                	jp     a5fc <_end+0x45e4>
    a5ae:	00 00                	add    BYTE PTR [rax],al
    a5b0:	03 84 4e 00 00 31 1b 	add    eax,DWORD PTR [rsi+rcx*2+0x1b310000]
    a5b7:	1e                   	(bad)
    a5b8:	00 00                	add    BYTE PTR [rax],al
    a5ba:	f6 41 00 00          	test   BYTE PTR [rcx+0x0],0x0
    a5be:	00 22                	add    BYTE PTR [rdx],ah
    a5c0:	da 1b                	ficomp DWORD PTR [rbx]
    a5c2:	00 00                	add    BYTE PTR [rax],al
    a5c4:	32 5c 1f 00          	xor    bl,BYTE PTR [rdi+rbx*1+0x0]
    a5c8:	00 c6                	add    dh,al
    a5ca:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a5cd:	11 b4 28 00 00 a6 1a 	adc    DWORD PTR [rax+rbp*1+0x1aa60000],esi
    a5d4:	00 00                	add    BYTE PTR [rax],al
    a5d6:	11 c7                	adc    edi,eax
    a5d8:	22 00                	and    al,BYTE PTR [rax]
    a5da:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a5dd:	00 00                	add    BYTE PTR [rax],al
    a5df:	11 cd                	adc    ebp,ecx
    a5e1:	22 00                	and    al,BYTE PTR [rax]
    a5e3:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a5e6:	00 00                	add    BYTE PTR [rax],al
    a5e8:	2d 33 0f 00 00       	sub    eax,0xf33
    a5ed:	75 04                	jne    a5f3 <_end+0x45db>
    a5ef:	32 84 4e 00 00 2d 30 	xor    al,BYTE PTR [rsi+rcx*2+0x302d0000]
    a5f6:	17                   	(bad)
    a5f7:	00 00                	add    BYTE PTR [rax],al
    a5f9:	76 04                	jbe    a5ff <_end+0x45e7>
    a5fb:	24 84                	and    al,0x84
    a5fd:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a600:	00 4a c3             	add    BYTE PTR [rdx-0x3d],cl
    a603:	1e                   	(bad)
    a604:	00 00                	add    BYTE PTR [rax],al
    a606:	43 71 23             	rex.XB jno a62c <_end+0x4614>
    a609:	00 00                	add    BYTE PTR [rax],al
    a60b:	b0 25                	mov    al,0x25
    a60d:	00 00                	add    BYTE PTR [rax],al
    a60f:	00 00                	add    BYTE PTR [rax],al
    a611:	00 00                	add    BYTE PTR [rax],al
    a613:	53                   	push   rbx
    a614:	04 00                	add    al,0x0
    a616:	00 00                	add    BYTE PTR [rax],al
    a618:	00 00                	add    BYTE PTR [rax],al
    a61a:	00 01                	add    BYTE PTR [rcx],al
    a61c:	9c                   	pushf
    a61d:	46 52                	rex.RX push rdx
    a61f:	00 00                	add    BYTE PTR [rax],al
    a621:	23 b4 2b 00 00 43 1b 	and    esi,DWORD PTR [rbx+rbp*1+0x1b430000]
    a628:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    a62b:	00 75 20             	add    BYTE PTR [rbp+0x20],dh
    a62e:	00 00                	add    BYTE PTR [rax],al
    a630:	67 20 00             	and    BYTE PTR [eax],al
    a633:	00 23                	add    BYTE PTR [rbx],ah
    a635:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    a638:	00 43 28             	add    BYTE PTR [rbx+0x28],al
    a63b:	49                   	rex.WB
    a63c:	40 00 00             	rex add BYTE PTR [rax],al
    a63f:	b2 20                	mov    dl,0x20
    a641:	00 00                	add    BYTE PTR [rax],al
    a643:	aa                   	stos   BYTE PTR es:[rdi],al
    a644:	20 00                	and    BYTE PTR [rax],al
    a646:	00 23                	add    BYTE PTR [rbx],ah
    a648:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    a64b:	00 43 3c             	add    BYTE PTR [rbx+0x3c],al
    a64e:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a64f:	41 00 00             	add    BYTE PTR [r8],al
    a652:	e2 20                	loop   a674 <_end+0x465c>
    a654:	00 00                	add    BYTE PTR [rax],al
    a656:	d2 20                	shl    BYTE PTR [rax],cl
    a658:	00 00                	add    BYTE PTR [rax],al
    a65a:	4b cd 03             	rex.WXB int 0x3
    a65d:	00 00                	add    BYTE PTR [rax],al
    a65f:	56                   	push   rsi
    a660:	52                   	push   rdx
    a661:	00 00                	add    BYTE PTR [rax],al
    a663:	09 03                	or     DWORD PTR [rbx],eax
    a665:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a66a:	00 00                	add    BYTE PTR [rax],al
    a66c:	00 4c 94 05          	add    BYTE PTR [rsp+rdx*4+0x5],cl
    a670:	00 00                	add    BYTE PTR [rax],al
    a672:	46 0d 51 41 00 00    	rex.RX or eax,0x4151
    a678:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a67b:	7f 1f                	jg     a69c <_end+0x4684>
    a67d:	78 27                	js     a6a6 <_end+0x468e>
    a67f:	00 00                	add    BYTE PTR [rax],al
    a681:	4c 0b 35 00 00 00 4f 	or     r14,QWORD PTR [rip+0x4f000000]        # 4f00a688 <_end+0x4f004670>
    a688:	21 00                	and    DWORD PTR [rax],eax
    a68a:	00 3f                	add    BYTE PTR [rdi],bh
    a68c:	21 00                	and    DWORD PTR [rax],eax
    a68e:	00 16                	add    BYTE PTR [rsi],dl
    a690:	06                   	(bad)
    a691:	26 00 00             	es add BYTE PTR [rax],al
    a694:	00 00                	add    BYTE PTR [rax],al
    a696:	00 00                	add    BYTE PTR [rax],al
    a698:	2a 00                	sub    al,BYTE PTR [rax]
    a69a:	00 00                	add    BYTE PTR [rax],al
    a69c:	00 00                	add    BYTE PTR [rax],al
    a69e:	00 00                	add    BYTE PTR [rax],al
    a6a0:	8f                   	(bad)
    a6a1:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a6a4:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    a6a7:	48 0e                	rex.W (bad)
    a6a9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a6aa:	21 00                	and    DWORD PTR [rax],eax
    a6ac:	00 97 21 00 00 95    	add    BYTE PTR [rdi-0x6affffdf],dl
    a6b2:	21 00                	and    DWORD PTR [rax],eax
    a6b4:	00 07                	add    BYTE PTR [rdi],al
    a6b6:	2b 26                	sub    esp,DWORD PTR [rsi]
    a6b8:	00 00                	add    BYTE PTR [rax],al
    a6ba:	00 00                	add    BYTE PTR [rax],al
    a6bc:	00 00                	add    BYTE PTR [rax],al
    a6be:	9b                   	fwait
    a6bf:	42 00 00             	rex.X add BYTE PTR [rax],al
    a6c2:	03 01                	add    eax,DWORD PTR [rcx]
    a6c4:	55                   	push   rbp
    a6c5:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a6c9:	00 62 c5             	add    BYTE PTR [rdx-0x3b],ah
    a6cc:	02 00                	add    al,BYTE PTR [rax]
    a6ce:	00 f9                	add    cl,bh
    a6d0:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a6d3:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a6d6:	50                   	push   rax
    a6d7:	13 b0 2c 00 00 a2    	adc    esi,DWORD PTR [rax-0x5dffffd4]
    a6dd:	21 00                	and    DWORD PTR [rax],eax
    a6df:	00 9e 21 00 00 39    	add    BYTE PTR [rsi+0x39000021],bl
    a6e5:	f2 71 00             	bnd jno a6e8 <_end+0x46d0>
    a6e8:	00 8a 26 00 00 00    	add    BYTE PTR [rdx+0x26],cl
    a6ee:	00 00                	add    BYTE PTR [rax],al
    a6f0:	00 02                	add    BYTE PTR [rdx],al
    a6f2:	00 d5                	add    ch,dl
    a6f4:	02 00                	add    al,BYTE PTR [rax]
    a6f6:	00 51 10             	add    BYTE PTR [rcx+0x10],dl
    a6f9:	05 0c 72 00 00       	add    eax,0x720c
    a6fe:	b4 21                	mov    ah,0x21
    a700:	00 00                	add    BYTE PTR [rax],al
    a702:	b2 21                	mov    dl,0x21
    a704:	00 00                	add    BYTE PTR [rax],al
    a706:	05 00 72 00 00       	add    eax,0x7200
    a70b:	c9                   	leave
    a70c:	21 00                	and    DWORD PTR [rax],eax
    a70e:	00 c5                	add    ch,al
    a710:	21 00                	and    DWORD PTR [rax],eax
    a712:	00 07                	add    BYTE PTR [rdi],al
    a714:	9a                   	(bad)
    a715:	26 00 00             	es add BYTE PTR [rax],al
    a718:	00 00                	add    BYTE PTR [rax],al
    a71a:	00 00                	add    BYTE PTR [rax],al
    a71c:	63 42 00             	movsxd eax,DWORD PTR [rdx+0x0]
    a71f:	00 03                	add    BYTE PTR [rbx],al
    a721:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a724:	7d 00                	jge    a726 <_end+0x470e>
    a726:	03 01                	add    eax,DWORD PTR [rcx]
    a728:	54                   	push   rsp
    a729:	01 32                	add    DWORD PTR [rdx],esi
    a72b:	03 01                	add    eax,DWORD PTR [rcx]
    a72d:	51                   	push   rcx
    a72e:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a731:	00 00                	add    BYTE PTR [rax],al
    a733:	00 09                	add    BYTE PTR [rcx],cl
    a735:	f2 71 00             	bnd jno a738 <_end+0x4720>
    a738:	00 30                	add    BYTE PTR [rax],dh
    a73a:	26 00 00             	es add BYTE PTR [rax],al
    a73d:	00 00                	add    BYTE PTR [rax],al
    a73f:	00 00                	add    BYTE PTR [rax],al
    a741:	03 00                	add    eax,DWORD PTR [rax]
    a743:	30 26                	xor    BYTE PTR [rsi],ah
    a745:	00 00                	add    BYTE PTR [rax],al
    a747:	00 00                	add    BYTE PTR [rax],al
    a749:	00 00                	add    BYTE PTR [rax],al
    a74b:	19 00                	sbb    DWORD PTR [rax],eax
    a74d:	00 00                	add    BYTE PTR [rax],al
    a74f:	00 00                	add    BYTE PTR [rax],al
    a751:	00 00                	add    BYTE PTR [rax],al
    a753:	4e 0c 64             	rex.WRX or al,0x64
    a756:	50                   	push   rax
    a757:	00 00                	add    BYTE PTR [rax],al
    a759:	05 0c 72 00 00       	add    eax,0x720c
    a75e:	da 21                	fisub  DWORD PTR [rcx]
    a760:	00 00                	add    BYTE PTR [rax],al
    a762:	d8 21                	fsub   DWORD PTR [rcx]
    a764:	00 00                	add    BYTE PTR [rax],al
    a766:	05 00 72 00 00       	add    eax,0x7200
    a76b:	ed                   	in     eax,dx
    a76c:	21 00                	and    DWORD PTR [rax],eax
    a76e:	00 eb                	add    bl,ch
    a770:	21 00                	and    DWORD PTR [rax],eax
    a772:	00 07                	add    BYTE PTR [rdi],al
    a774:	49                   	rex.WB
    a775:	26 00 00             	es add BYTE PTR [rax],al
    a778:	00 00                	add    BYTE PTR [rax],al
    a77a:	00 00                	add    BYTE PTR [rax],al
    a77c:	5b                   	pop    rbx
    a77d:	75 00                	jne    a77f <_end+0x4767>
    a77f:	00 03                	add    BYTE PTR [rbx],al
    a781:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a784:	03 90 41 00 00 00    	add    edx,DWORD PTR [rax+0x41]
    a78a:	00 00                	add    BYTE PTR [rax],al
    a78c:	00 03                	add    BYTE PTR [rbx],al
    a78e:	01 54 01 31          	add    DWORD PTR [rcx+rax*1+0x31],edx
    a792:	03 01                	add    eax,DWORD PTR [rcx]
    a794:	51                   	push   rcx
    a795:	01 49 03             	add    DWORD PTR [rcx+0x3],ecx
    a798:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    a79b:	7d 00                	jge    a79d <_end+0x4785>
    a79d:	00 00                	add    BYTE PTR [rax],al
    a79f:	1c d6                	sbb    al,0xd6
    a7a1:	71 00                	jno    a7a3 <_end+0x478b>
    a7a3:	00 c5                	add    ch,al
    a7a5:	26 00 00             	es add BYTE PTR [rax],al
    a7a8:	00 00                	add    BYTE PTR [rax],al
    a7aa:	00 00                	add    BYTE PTR [rax],al
    a7ac:	01 00                	add    DWORD PTR [rax],eax
    a7ae:	e5 02                	in     eax,0x2
    a7b0:	00 00                	add    BYTE PTR [rax],al
    a7b2:	57                   	push   rdi
    a7b3:	0b b7 50 00 00 05    	or     esi,DWORD PTR [rdi+0x5000050]
    a7b9:	e4 71                	in     al,0x71
    a7bb:	00 00                	add    BYTE PTR [rax],al
    a7bd:	f7 21                	mul    DWORD PTR [rcx]
    a7bf:	00 00                	add    BYTE PTR [rax],al
    a7c1:	f5                   	cmc
    a7c2:	21 00                	and    DWORD PTR [rax],eax
    a7c4:	00 07                	add    BYTE PTR [rdi],al
    a7c6:	e4 26                	in     al,0x26
    a7c8:	00 00                	add    BYTE PTR [rax],al
    a7ca:	00 00                	add    BYTE PTR [rax],al
    a7cc:	00 00                	add    BYTE PTR [rax],al
    a7ce:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a7d1:	00 03                	add    BYTE PTR [rbx],al
    a7d3:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a7d6:	32 03                	xor    al,BYTE PTR [rbx]
    a7d8:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a7dc:	b1 41                	mov    cl,0x41
    a7de:	00 00                	add    BYTE PTR [rax],al
    a7e0:	00 00                	add    BYTE PTR [rax],al
    a7e2:	00 00                	add    BYTE PTR [rax],al
    a7e4:	03 01                	add    eax,DWORD PTR [rcx]
    a7e6:	61                   	(bad)
    a7e7:	08 76 90             	or     BYTE PTR [rsi-0x70],dh
    a7ea:	7f a6                	jg     a792 <_end+0x477a>
    a7ec:	04 35                	add    al,0x35
    a7ee:	a8 2e                	test   al,0x2e
    a7f0:	00 00                	add    BYTE PTR [rax],al
    a7f2:	1c 74                	sbb    al,0x74
    a7f4:	45 00 00             	add    BYTE PTR [r8],r8b
    a7f7:	e4 26                	in     al,0x26
    a7f9:	00 00                	add    BYTE PTR [rax],al
    a7fb:	00 00                	add    BYTE PTR [rax],al
    a7fd:	00 00                	add    BYTE PTR [rax],al
    a7ff:	02 00                	add    al,BYTE PTR [rax]
    a801:	f0 02 00             	lock add al,BYTE PTR [rax]
    a804:	00 58 45             	add    BYTE PTR [rax+0x45],bl
    a807:	60                   	(bad)
    a808:	51                   	push   rcx
    a809:	00 00                	add    BYTE PTR [rax],al
    a80b:	05 93 45 00 00       	add    eax,0x4593
    a810:	10 22                	adc    BYTE PTR [rdx],ah
    a812:	00 00                	add    BYTE PTR [rax],al
    a814:	08 22                	or     BYTE PTR [rdx],ah
    a816:	00 00                	add    BYTE PTR [rax],al
    a818:	05 87 45 00 00       	add    eax,0x4587
    a81d:	35 22 00 00 31       	xor    eax,0x31000022
    a822:	22 00                	and    al,BYTE PTR [rax]
    a824:	00 2e                	add    BYTE PTR [rsi],ch
    a826:	f0 02 00             	lock add al,BYTE PTR [rax]
    a829:	00 15 a8 45 00 00    	add    BYTE PTR [rip+0x45a8],dl        # edd7 <_end+0x8dbf>
    a82f:	58                   	pop    rax
    a830:	22 00                	and    al,BYTE PTR [rax]
    a832:	00 4a 22             	add    BYTE PTR [rdx+0x22],cl
    a835:	00 00                	add    BYTE PTR [rax],al
    a837:	3a b3 45 00 00 fb    	cmp    dh,BYTE PTR [rbx-0x4ffffbb]
    a83d:	02 00                	add    al,BYTE PTR [rax]
    a83f:	00 2e                	add    BYTE PTR [rsi],ch
    a841:	51                   	push   rcx
    a842:	00 00                	add    BYTE PTR [rax],al
    a844:	15 b4 45 00 00       	adc    eax,0x45b4
    a849:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a84a:	22 00                	and    al,BYTE PTR [rax]
    a84c:	00 99 22 00 00 4d    	add    BYTE PTR [rcx+0x4d000022],bl
    a852:	bd 45 00 00 0b       	mov    ebp,0xb000045
    a857:	03 00                	add    eax,DWORD PTR [rax]
    a859:	00 15 be 45 00 00    	add    BYTE PTR [rip+0x45be],dl        # ee1d <_end+0x8e05>
    a85f:	db 22                	(bad)  [rdx]
    a861:	00 00                	add    BYTE PTR [rax],al
    a863:	d5 22 00 00          	{rex2 0x22} add BYTE PTR [rax],al
    a867:	00 00                	add    BYTE PTR [rax],al
    a869:	39 1a                	cmp    DWORD PTR [rdx],ebx
    a86b:	72 00                	jb     a86d <_end+0x4855>
    a86d:	00 53 29             	add    BYTE PTR [rbx+0x29],dl
	...
    a878:	34 03                	xor    al,0x3
    a87a:	00 00                	add    BYTE PTR [rax],al
    a87c:	bc 1e 05 23 72       	mov    esp,0x7223051e
    a881:	00 00                	add    BYTE PTR [rax],al
    a883:	21 23                	and    DWORD PTR [rbx],esp
    a885:	00 00                	add    BYTE PTR [rax],al
    a887:	1b 23                	sbb    esp,DWORD PTR [rbx]
    a889:	00 00                	add    BYTE PTR [rax],al
    a88b:	20 d9                	and    cl,bl
    a88d:	29 00                	sub    DWORD PTR [rax],eax
    a88f:	00 00                	add    BYTE PTR [rax],al
    a891:	00 00                	add    BYTE PTR [rax],al
    a893:	00 64 75 00          	add    BYTE PTR [rbp+rsi*2+0x0],ah
    a897:	00 00                	add    BYTE PTR [rax],al
    a899:	00 00                	add    BYTE PTR [rax],al
    a89b:	1c d6                	sbb    al,0xd6
    a89d:	71 00                	jno    a89f <_end+0x4887>
    a89f:	00 61 29             	add    BYTE PTR [rcx+0x29],ah
    a8a2:	00 00                	add    BYTE PTR [rax],al
    a8a4:	00 00                	add    BYTE PTR [rax],al
    a8a6:	00 00                	add    BYTE PTR [rax],al
    a8a8:	03 00                	add    eax,DWORD PTR [rax]
    a8aa:	44 03 00             	add    r8d,DWORD PTR [rax]
    a8ad:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
    a8b0:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a8b1:	51                   	push   rcx
    a8b2:	00 00                	add    BYTE PTR [rax],al
    a8b4:	05 e4 71 00 00       	add    eax,0x71e4
    a8b9:	39 23                	cmp    DWORD PTR [rbx],esp
    a8bb:	00 00                	add    BYTE PTR [rax],al
    a8bd:	37                   	(bad)
    a8be:	23 00                	and    eax,DWORD PTR [rax]
    a8c0:	00 07                	add    BYTE PTR [rdi],al
    a8c2:	7b 29                	jnp    a8ed <_end+0x48d5>
    a8c4:	00 00                	add    BYTE PTR [rax],al
    a8c6:	00 00                	add    BYTE PTR [rax],al
    a8c8:	00 00                	add    BYTE PTR [rax],al
    a8ca:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a8cd:	00 03                	add    BYTE PTR [rbx],al
    a8cf:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a8d2:	32 03                	xor    al,BYTE PTR [rbx]
    a8d4:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a8d8:	cb                   	retf
    a8d9:	41 00 00             	add    BYTE PTR [r8],al
    a8dc:	00 00                	add    BYTE PTR [rax],al
    a8de:	00 00                	add    BYTE PTR [rax],al
    a8e0:	00 00                	add    BYTE PTR [rax],al
    a8e2:	0a 06                	or     al,BYTE PTR [rsi]
    a8e4:	26 00 00             	es add BYTE PTR [rax],al
    a8e7:	00 00                	add    BYTE PTR [rax],al
    a8e9:	00 00                	add    BYTE PTR [rax],al
    a8eb:	ba 42 00 00 cb       	mov    edx,0xcb000042
    a8f0:	51                   	push   rcx
    a8f1:	00 00                	add    BYTE PTR [rax],al
    a8f3:	03 01                	add    eax,DWORD PTR [rcx]
    a8f5:	55                   	push   rbp
    a8f6:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a8fa:	01 54 03 a3          	add    DWORD PTR [rbx+rax*1-0x5d],edx
    a8fe:	01 54 03 01          	add    DWORD PTR [rbx+rax*1+0x1],edx
    a902:	51                   	push   rcx
    a903:	01 32                	add    DWORD PTR [rdx],esi
    a905:	00 27                	add    BYTE PTR [rdi],ah
    a907:	4c 28 00             	rex.WR sub BYTE PTR [rax],r8b
    a90a:	00 00                	add    BYTE PTR [rax],al
    a90c:	00 00                	add    BYTE PTR [rax],al
    a90e:	00 01                	add    BYTE PTR [rcx],al
    a910:	30 0a                	xor    BYTE PTR [rdx],cl
    a912:	83 29 00             	sub    DWORD PTR [rcx],0x0
    a915:	00 00                	add    BYTE PTR [rax],al
    a917:	00 00                	add    BYTE PTR [rax],al
    a919:	00 84 42 00 00 ee 51 	add    BYTE PTR [rdx+rax*2+0x51ee0000],al
    a920:	00 00                	add    BYTE PTR [rax],al
    a922:	03 01                	add    eax,DWORD PTR [rcx]
    a924:	55                   	push   rbp
    a925:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a929:	27                   	(bad)
    a92a:	c3                   	ret
    a92b:	29 00                	sub    DWORD PTR [rax],eax
    a92d:	00 00                	add    BYTE PTR [rax],al
    a92f:	00 00                	add    BYTE PTR [rax],al
    a931:	00 01                	add    BYTE PTR [rcx],al
    a933:	30 0a                	xor    BYTE PTR [rdx],cl
    a935:	fe                   	(bad)
    a936:	29 00                	sub    DWORD PTR [rax],eax
    a938:	00 00                	add    BYTE PTR [rax],al
    a93a:	00 00                	add    BYTE PTR [rax],al
    a93c:	00 3f                	add    BYTE PTR [rdi],bh
    a93e:	44 00 00             	add    BYTE PTR [rax],r8b
    a941:	38 52 00             	cmp    BYTE PTR [rdx+0x0],dl
    a944:	00 03                	add    BYTE PTR [rbx],al
    a946:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a949:	03 8b 41 00 00 00    	add    ecx,DWORD PTR [rbx+0x41]
    a94f:	00 00                	add    BYTE PTR [rax],al
    a951:	00 03                	add    BYTE PTR [rbx],al
    a953:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a957:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a958:	41 00 00             	add    BYTE PTR [r8],al
    a95b:	00 00                	add    BYTE PTR [rax],al
    a95d:	00 00                	add    BYTE PTR [rax],al
    a95f:	03 01                	add    eax,DWORD PTR [rcx]
    a961:	51                   	push   rcx
    a962:	02 08                	add    cl,BYTE PTR [rax]
    a964:	44 03 01             	add    r8d,DWORD PTR [rcx]
    a967:	52                   	push   rdx
    a968:	09 03                	or     DWORD PTR [rbx],eax
    a96a:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a96f:	00 00                	add    BYTE PTR [rax],al
    a971:	00 00                	add    BYTE PTR [rax],al
    a973:	20 03                	and    BYTE PTR [rbx],al
    a975:	2a 00                	sub    al,BYTE PTR [rax]
    a977:	00 00                	add    BYTE PTR [rax],al
    a979:	00 00                	add    BYTE PTR [rax],al
    a97b:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    a97e:	00 00                	add    BYTE PTR [rax],al
    a980:	00 25 ee 22 00 00    	add    BYTE PTR [rip+0x22ee],ah        # cc74 <_end+0x6c5c>
    a986:	56                   	push   rsi
    a987:	52                   	push   rdx
    a988:	00 00                	add    BYTE PTR [rax],al
    a98a:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a98d:	00 00                	add    BYTE PTR [rax],al
    a98f:	2c 00                	sub    al,0x0
    a991:	13 46 52             	adc    eax,DWORD PTR [rsi+0x52]
    a994:	00 00                	add    BYTE PTR [rax],al
    a996:	8c 01                	mov    WORD PTR [rcx],es
    a998:	22 13                	and    dl,BYTE PTR [rbx]
    a99a:	00 00                	add    BYTE PTR [rax],al
    a99c:	01 33                	add    DWORD PTR [rbx],esi
    a99e:	06                   	(bad)
    a99f:	13 31                	adc    esi,DWORD PTR [rcx]
    a9a1:	00 00                	add    BYTE PTR [rax],al
    a9a3:	01 a9 52 00 00 1e    	add    DWORD PTR [rcx+0x1e000052],ebp
    a9a9:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    a9ac:	00 01                	add    BYTE PTR [rcx],al
    a9ae:	33 12                	xor    edx,DWORD PTR [rdx]
    a9b0:	49                   	rex.WB
    a9b1:	40 00 00             	rex add BYTE PTR [rax],al
    a9b4:	1e                   	(bad)
    a9b5:	38 2e                	cmp    BYTE PTR [rsi],ch
    a9b7:	00 00                	add    BYTE PTR [rax],al
    a9b9:	01 33                	add    DWORD PTR [rbx],esi
    a9bb:	27                   	(bad)
    a9bc:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    a9bf:	00 1e                	add    BYTE PTR [rsi],bl
    a9c1:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    a9c4:	00 01                	add    BYTE PTR [rcx],al
    a9c6:	33 3b                	xor    edi,DWORD PTR [rbx]
    a9c8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a9c9:	41 00 00             	add    BYTE PTR [r8],al
    a9cc:	1e                   	(bad)
    a9cd:	39 29                	cmp    DWORD PTR [rcx],ebp
    a9cf:	00 00                	add    BYTE PTR [rax],al
    a9d1:	01 33                	add    DWORD PTR [rbx],esi
    a9d3:	4f b0 2c             	rex.WRXB mov r8b,0x2c
    a9d6:	00 00                	add    BYTE PTR [rax],al
    a9d8:	17                   	(bad)
    a9d9:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    a9da:	2b 00                	sub    eax,DWORD PTR [rax]
    a9dc:	00 3e                	add    BYTE PTR [rsi],bh
    a9de:	0b 8e 2c 00 00 00    	or     ecx,DWORD PTR [rsi+0x2c]
    a9e4:	4a 0c 01             	rex.WX or al,0x1
    a9e7:	00 00                	add    BYTE PTR [rax],al
    a9e9:	11 9e 02 00 00 c0    	adc    DWORD PTR [rsi-0x3ffffffe],ebx
    a9ef:	2e 00 00             	cs add BYTE PTR [rax],al
    a9f2:	00 00                	add    BYTE PTR [rax],al
    a9f4:	00 00                	add    BYTE PTR [rax],al
    a9f6:	a9 07 00 00 00       	test   eax,0x7
    a9fb:	00 00                	add    BYTE PTR [rax],al
    a9fd:	00 01                	add    BYTE PTR [rcx],al
    a9ff:	9c                   	pushf
    aa00:	57                   	push   rdi
    aa01:	71 00                	jno    aa03 <_end+0x49eb>
    aa03:	00 23                	add    BYTE PTR [rbx],ah
    aa05:	4d 0e                	rex.WRB (bad)
    aa07:	00 00                	add    BYTE PTR [rax],al
    aa09:	11 1a                	adc    DWORD PTR [rdx],ebx
    aa0b:	d3 23                	shl    DWORD PTR [rbx],cl
    aa0d:	00 00                	add    BYTE PTR [rax],al
    aa0f:	56                   	push   rsi
    aa10:	23 00                	and    eax,DWORD PTR [rax]
    aa12:	00 4a 23             	add    BYTE PTR [rdx+0x23],cl
    aa15:	00 00                	add    BYTE PTR [rax],al
    aa17:	23 39                	and    edi,DWORD PTR [rcx]
    aa19:	29 00                	sub    DWORD PTR [rax],eax
    aa1b:	00 11                	add    BYTE PTR [rcx],dl
    aa1d:	2d b0 2c 00 00       	sub    eax,0x2cb0
    aa22:	9a                   	(bad)
    aa23:	23 00                	and    eax,DWORD PTR [rax]
    aa25:	00 8a 23 00 00 23    	add    BYTE PTR [rdx+0x23000023],cl
    aa2b:	28 23                	sub    BYTE PTR [rbx],ah
    aa2d:	00 00                	add    BYTE PTR [rax],al
    aa2f:	11 46 d3             	adc    DWORD PTR [rsi-0x2d],eax
    aa32:	23 00                	and    eax,DWORD PTR [rax]
    aa34:	00 f2                	add    dl,dh
    aa36:	23 00                	and    eax,DWORD PTR [rax]
    aa38:	00 dc                	add    ah,bl
    aa3a:	23 00                	and    eax,DWORD PTR [rax]
    aa3c:	00 4b cd             	add    BYTE PTR [rbx-0x33],cl
    aa3f:	03 00                	add    eax,DWORD PTR [rax]
    aa41:	00 67 71             	add    BYTE PTR [rdi+0x71],ah
    aa44:	00 00                	add    BYTE PTR [rax],al
    aa46:	09 03                	or     DWORD PTR [rbx],eax
    aa48:	20 45 00             	and    BYTE PTR [rbp+0x0],al
    aa4b:	00 00                	add    BYTE PTR [rax],al
    aa4d:	00 00                	add    BYTE PTR [rax],al
    aa4f:	00 4c 7e 0b          	add    BYTE PTR [rsi+rdi*2+0xb],cl
    aa53:	00 00                	add    BYTE PTR [rax],al
    aa55:	15 0c 2e 23 00       	adc    eax,0x232e0c
    aa5a:	00 03                	add    BYTE PTR [rbx],al
    aa5c:	91                   	xchg   ecx,eax
    aa5d:	b0 7f                	mov    al,0x7f
    aa5f:	1f                   	(bad)
    aa60:	9e                   	sahf
    aa61:	03 00                	add    eax,DWORD PTR [rax]
    aa63:	00 16                	add    BYTE PTR [rsi],dl
    aa65:	0b e2                	or     esp,edx
    aa67:	22 00                	and    al,BYTE PTR [rax]
    aa69:	00 56 24             	add    BYTE PTR [rsi+0x24],dl
    aa6c:	00 00                	add    BYTE PTR [rax],al
    aa6e:	4c 24 00             	rex.WR and al,0x0
    aa71:	00 1f                	add    BYTE PTR [rdi],bl
    aa73:	be 04 00 00 18       	mov    esi,0x18000004
    aa78:	0e                   	(bad)
    aa79:	b0 2c                	mov    al,0x2c
    aa7b:	00 00                	add    BYTE PTR [rax],al
    aa7d:	86 24 00             	xchg   BYTE PTR [rax+rax*1],ah
    aa80:	00 7e 24             	add    BYTE PTR [rsi+0x24],bh
    aa83:	00 00                	add    BYTE PTR [rax],al
    aa85:	1f                   	(bad)
    aa86:	ff 0c 00             	dec    DWORD PTR [rax+rax*1]
    aa89:	00 1a                	add    BYTE PTR [rdx],bl
    aa8b:	0e                   	(bad)
    aa8c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    aa8d:	41 00 00             	add    BYTE PTR [r8],al
    aa90:	bf 24 00 00 a5       	mov    edi,0xa5000024
    aa95:	24 00                	and    al,0x0
    aa97:	00 16                	add    BYTE PTR [rsi],dl
    aa99:	38 30                	cmp    BYTE PTR [rax],dh
    aa9b:	00 00                	add    BYTE PTR [rax],al
    aa9d:	00 00                	add    BYTE PTR [rax],al
    aa9f:	00 00                	add    BYTE PTR [rax],al
    aaa1:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
    aaa7:	00 00                	add    BYTE PTR [rax],al
    aaa9:	60                   	(bad)
    aaaa:	55                   	push   rbp
    aaab:	00 00                	add    BYTE PTR [rax],al
    aaad:	17                   	(bad)
    aaae:	9e                   	sahf
    aaaf:	15 00 00 1d 34       	adc    eax,0x341d0000
    aab4:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    aab7:	00 09                	add    BYTE PTR [rcx],cl
    aab9:	d6                   	(bad)
    aaba:	71 00                	jno    aabc <_end+0x4aa4>
    aabc:	00 38                	add    BYTE PTR [rax],bh
    aabe:	30 00                	xor    BYTE PTR [rax],al
    aac0:	00 00                	add    BYTE PTR [rax],al
    aac2:	00 00                	add    BYTE PTR [rax],al
    aac4:	00 01                	add    BYTE PTR [rcx],al
    aac6:	00 38                	add    BYTE PTR [rax],bh
    aac8:	30 00                	xor    BYTE PTR [rax],al
    aaca:	00 00                	add    BYTE PTR [rax],al
    aacc:	00 00                	add    BYTE PTR [rax],al
    aace:	00 0f                	add    BYTE PTR [rdi],cl
    aad0:	00 00                	add    BYTE PTR [rax],al
    aad2:	00 00                	add    BYTE PTR [rax],al
    aad4:	00 00                	add    BYTE PTR [rax],al
    aad6:	00 1d 34 cb 53 00    	add    BYTE PTR [rip+0x53cb34],bl        # 547610 <_end+0x5415f8>
    aadc:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11cc6 <_end+0xbcae>
    aae2:	76 25                	jbe    ab09 <_end+0x4af1>
    aae4:	00 00                	add    BYTE PTR [rax],al
    aae6:	74 25                	je     ab0d <_end+0x4af5>
    aae8:	00 00                	add    BYTE PTR [rax],al
    aaea:	07                   	(bad)
    aaeb:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    aaee:	00 00                	add    BYTE PTR [rax],al
    aaf0:	00 00                	add    BYTE PTR [rax],al
    aaf2:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    aaf8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aafb:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ab06:	09 d6                	or     esi,edx
    ab08:	71 00                	jno    ab0a <_end+0x4af2>
    ab0a:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    ab0d:	00 00                	add    BYTE PTR [rax],al
    ab0f:	00 00                	add    BYTE PTR [rax],al
    ab11:	00 00                	add    BYTE PTR [rax],al
    ab13:	02 00                	add    al,BYTE PTR [rax]
    ab15:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    ab18:	00 00                	add    BYTE PTR [rax],al
    ab1a:	00 00                	add    BYTE PTR [rax],al
    ab1c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ab1f:	00 00                	add    BYTE PTR [rax],al
    ab21:	00 00                	add    BYTE PTR [rax],al
    ab23:	00 00                	add    BYTE PTR [rax],al
    ab25:	1d 34 19 54 00       	sbb    eax,0x541934
    ab2a:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11d14 <_end+0xbcfc>
    ab30:	85 25 00 00 83 25    	test   DWORD PTR [rip+0x25830000],esp        # 2583ab36 <_end+0x25834b1e>
    ab36:	00 00                	add    BYTE PTR [rax],al
    ab38:	07                   	(bad)
    ab39:	53                   	push   rbx
    ab3a:	30 00                	xor    BYTE PTR [rax],al
    ab3c:	00 00                	add    BYTE PTR [rax],al
    ab3e:	00 00                	add    BYTE PTR [rax],al
    ab40:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ab46:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab49:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    ab4d:	00 00                	add    BYTE PTR [rax],al
    ab4f:	00 00                	add    BYTE PTR [rax],al
    ab51:	00 00                	add    BYTE PTR [rax],al
    ab53:	00 09                	add    BYTE PTR [rcx],cl
    ab55:	d6                   	(bad)
    ab56:	71 00                	jno    ab58 <_end+0x4b40>
    ab58:	00 53 30             	add    BYTE PTR [rbx+0x30],dl
    ab5b:	00 00                	add    BYTE PTR [rax],al
    ab5d:	00 00                	add    BYTE PTR [rax],al
    ab5f:	00 00                	add    BYTE PTR [rax],al
    ab61:	02 00                	add    al,BYTE PTR [rax]
    ab63:	53                   	push   rbx
    ab64:	30 00                	xor    BYTE PTR [rax],al
    ab66:	00 00                	add    BYTE PTR [rax],al
    ab68:	00 00                	add    BYTE PTR [rax],al
    ab6a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ab6d:	00 00                	add    BYTE PTR [rax],al
    ab6f:	00 00                	add    BYTE PTR [rax],al
    ab71:	00 00                	add    BYTE PTR [rax],al
    ab73:	1d 34 67 54 00       	sbb    eax,0x546734
    ab78:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11d62 <_end+0xbd4a>
    ab7e:	94                   	xchg   esp,eax
    ab7f:	25 00 00 92 25       	and    eax,0x25920000
    ab84:	00 00                	add    BYTE PTR [rax],al
    ab86:	07                   	(bad)
    ab87:	5f                   	pop    rdi
    ab88:	30 00                	xor    BYTE PTR [rax],al
    ab8a:	00 00                	add    BYTE PTR [rax],al
    ab8c:	00 00                	add    BYTE PTR [rax],al
    ab8e:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ab94:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab97:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    aba2:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    aba5:	00 00                	add    BYTE PTR [rax],al
    aba7:	5f                   	pop    rdi
    aba8:	30 00                	xor    BYTE PTR [rax],al
    abaa:	00 00                	add    BYTE PTR [rax],al
    abac:	00 00                	add    BYTE PTR [rax],al
    abae:	00 03                	add    BYTE PTR [rbx],al
    abb0:	00 5f 30             	add    BYTE PTR [rdi+0x30],bl
    abb3:	00 00                	add    BYTE PTR [rax],al
    abb5:	00 00                	add    BYTE PTR [rax],al
    abb7:	00 00                	add    BYTE PTR [rax],al
    abb9:	36 00 00             	ss add BYTE PTR [rax],al
    abbc:	00 00                	add    BYTE PTR [rax],al
    abbe:	00 00                	add    BYTE PTR [rax],al
    abc0:	00 1d 34 14 55 00    	add    BYTE PTR [rip+0x551434],bl        # 55bffa <_end+0x555fe2>
    abc6:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # fe5d <_end+0x9e45>
    abcc:	a3 25 00 00 a1 25 00 	movabs ds:0xb000025a1000025,eax
    abd3:	00 0b 
    abd5:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    abd8:	00 0b                	add    BYTE PTR [rbx],cl
    abda:	79 52                	jns    ac2e <_end+0x4c16>
    abdc:	00 00                	add    BYTE PTR [rax],al
    abde:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    abe1:	00 00                	add    BYTE PTR [rax],al
    abe3:	15 9d 52 00 00       	adc    eax,0x529d
    abe8:	af                   	scas   eax,DWORD PTR es:[rdi]
    abe9:	25 00 00 ab 25       	and    eax,0x25ab0000
    abee:	00 00                	add    BYTE PTR [rax],al
    abf0:	0a 72 30             	or     dh,BYTE PTR [rdx+0x30]
    abf3:	00 00                	add    BYTE PTR [rax],al
    abf5:	00 00                	add    BYTE PTR [rax],al
    abf7:	00 00                	add    BYTE PTR [rax],al
    abf9:	e5 3c                	in     eax,0x3c
    abfb:	00 00                	add    BYTE PTR [rax],al
    abfd:	e1 54                	loope  ac53 <_end+0x4c3b>
    abff:	00 00                	add    BYTE PTR [rax],al
    ac01:	03 01                	add    eax,DWORD PTR [rcx]
    ac03:	55                   	push   rbp
    ac04:	09 03                	or     DWORD PTR [rbx],eax
    ac06:	98                   	cwde
    ac07:	45 00 00             	add    BYTE PTR [r8],r8b
    ac0a:	00 00                	add    BYTE PTR [rax],al
    ac0c:	00 00                	add    BYTE PTR [rax],al
    ac0e:	03 01                	add    eax,DWORD PTR [rcx]
    ac10:	54                   	push   rsp
    ac11:	09 03                	or     DWORD PTR [rbx],eax
    ac13:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ac17:	00 00                	add    BYTE PTR [rax],al
    ac19:	00 00                	add    BYTE PTR [rax],al
    ac1b:	00 0a                	add    BYTE PTR [rdx],cl
    ac1d:	8d 30                	lea    esi,[rax]
    ac1f:	00 00                	add    BYTE PTR [rax],al
    ac21:	00 00                	add    BYTE PTR [rax],al
    ac23:	00 00                	add    BYTE PTR [rax],al
    ac25:	4d                   	rex.WRB
    ac26:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ac29:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
    ac2d:	03 01                	add    eax,DWORD PTR [rcx]
    ac2f:	55                   	push   rbp
    ac30:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ac33:	03 01                	add    eax,DWORD PTR [rcx]
    ac35:	58                   	pop    rax
    ac36:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ac39:	00 07                	add    BYTE PTR [rdi],al
    ac3b:	95                   	xchg   ebp,eax
    ac3c:	30 00                	xor    BYTE PTR [rax],al
    ac3e:	00 00                	add    BYTE PTR [rax],al
    ac40:	00 00                	add    BYTE PTR [rax],al
    ac42:	00 33                	add    BYTE PTR [rbx],dh
    ac44:	3c 00                	cmp    al,0x0
    ac46:	00 03                	add    BYTE PTR [rbx],al
    ac48:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ac4b:	7f 00                	jg     ac4d <_end+0x4c35>
    ac4d:	00 00                	add    BYTE PTR [rax],al
    ac4f:	19 d6                	sbb    esi,edx
    ac51:	71 00                	jno    ac53 <_end+0x4c3b>
    ac53:	00 95 30 00 00 00    	add    BYTE PTR [rbp+0x30],dl
    ac59:	00 00                	add    BYTE PTR [rax],al
    ac5b:	00 02                	add    BYTE PTR [rdx],al
    ac5d:	00 95 30 00 00 00    	add    BYTE PTR [rbp+0x30],dl
    ac63:	00 00                	add    BYTE PTR [rax],al
    ac65:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ac68:	00 00                	add    BYTE PTR [rax],al
    ac6a:	00 00                	add    BYTE PTR [rax],al
    ac6c:	00 00                	add    BYTE PTR [rax],al
    ac6e:	01 1d 34 05 e4 71    	add    DWORD PTR [rip+0x71e40534],ebx        # 71e4b1a8 <_end+0x71e45190>
    ac74:	00 00                	add    BYTE PTR [rax],al
    ac76:	c0 25 00 00 be 25 00 	shl    BYTE PTR [rip+0x25be0000],0x0        # 25beac7d <_end+0x25be4c65>
    ac7d:	00 07                	add    BYTE PTR [rdi],al
    ac7f:	a1 30 00 00 00 00 00 	movabs eax,ds:0x9b00000000000030
    ac86:	00 9b 
    ac88:	75 00                	jne    ac8a <_end+0x4c72>
    ac8a:	00 03                	add    BYTE PTR [rbx],al
    ac8c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ac8f:	03 c0                	add    eax,eax
    ac91:	45 00 00             	add    BYTE PTR [r8],r8b
    ac94:	00 00                	add    BYTE PTR [rax],al
    ac96:	00 00                	add    BYTE PTR [rax],al
    ac98:	00 00                	add    BYTE PTR [rax],al
    ac9a:	00 16                	add    BYTE PTR [rsi],dl
    ac9c:	b8 35 00 00 00       	mov    eax,0x35
    aca1:	00 00                	add    BYTE PTR [rax],al
    aca3:	00 69 00             	add    BYTE PTR [rcx+0x0],ch
    aca6:	00 00                	add    BYTE PTR [rax],al
    aca8:	00 00                	add    BYTE PTR [rax],al
    acaa:	00 00                	add    BYTE PTR [rax],al
    acac:	60                   	(bad)
    acad:	57                   	push   rdi
    acae:	00 00                	add    BYTE PTR [rax],al
    acb0:	17                   	(bad)
    acb1:	9a                   	(bad)
    acb2:	15 00 00 1e 34       	adc    eax,0x341e0000
    acb7:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    acba:	00 09                	add    BYTE PTR [rcx],cl
    acbc:	d6                   	(bad)
    acbd:	71 00                	jno    acbf <_end+0x4ca7>
    acbf:	00 b8 35 00 00 00    	add    BYTE PTR [rax+0x35],bh
    acc5:	00 00                	add    BYTE PTR [rax],al
    acc7:	00 02                	add    BYTE PTR [rdx],al
    acc9:	00 b8 35 00 00 00    	add    BYTE PTR [rax+0x35],bh
    accf:	00 00                	add    BYTE PTR [rax],al
    acd1:	00 0f                	add    BYTE PTR [rdi],cl
    acd3:	00 00                	add    BYTE PTR [rax],al
    acd5:	00 00                	add    BYTE PTR [rax],al
    acd7:	00 00                	add    BYTE PTR [rax],al
    acd9:	00 1e                	add    BYTE PTR [rsi],bl
    acdb:	34 ce                	xor    al,0xce
    acdd:	55                   	push   rbp
    acde:	00 00                	add    BYTE PTR [rax],al
    ace0:	05 e4 71 00 00       	add    eax,0x71e4
    ace5:	cf                   	iret
    ace6:	25 00 00 cd 25       	and    eax,0x25cd0000
    aceb:	00 00                	add    BYTE PTR [rax],al
    aced:	07                   	(bad)
    acee:	c7                   	(bad)
    acef:	35 00 00 00 00       	xor    eax,0x0
    acf4:	00 00                	add    BYTE PTR [rax],al
    acf6:	9b                   	fwait
    acf7:	75 00                	jne    acf9 <_end+0x4ce1>
    acf9:	00 03                	add    BYTE PTR [rbx],al
    acfb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    acfe:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ad09:	09 d6                	or     esi,edx
    ad0b:	71 00                	jno    ad0d <_end+0x4cf5>
    ad0d:	00 c7                	add    bh,al
    ad0f:	35 00 00 00 00       	xor    eax,0x0
    ad14:	00 00                	add    BYTE PTR [rax],al
    ad16:	02 00                	add    al,BYTE PTR [rax]
    ad18:	c7                   	(bad)
    ad19:	35 00 00 00 00       	xor    eax,0x0
    ad1e:	00 00                	add    BYTE PTR [rax],al
    ad20:	08 00                	or     BYTE PTR [rax],al
    ad22:	00 00                	add    BYTE PTR [rax],al
    ad24:	00 00                	add    BYTE PTR [rax],al
    ad26:	00 00                	add    BYTE PTR [rax],al
    ad28:	1e                   	(bad)
    ad29:	34 15                	xor    al,0x15
    ad2b:	56                   	push   rsi
    ad2c:	00 00                	add    BYTE PTR [rax],al
    ad2e:	05 e4 71 00 00       	add    eax,0x71e4
    ad33:	de 25 00 00 dc 25    	fisub  WORD PTR [rip+0x25dc0000]        # 25dcad39 <_end+0x25dc4d21>
    ad39:	00 00                	add    BYTE PTR [rax],al
    ad3b:	07                   	(bad)
    ad3c:	cf                   	iret
    ad3d:	35 00 00 00 00       	xor    eax,0x0
    ad42:	00 00                	add    BYTE PTR [rax],al
    ad44:	9b                   	fwait
    ad45:	75 00                	jne    ad47 <_end+0x4d2f>
    ad47:	00 03                	add    BYTE PTR [rbx],al
    ad49:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ad4c:	7d 00                	jge    ad4e <_end+0x4d36>
    ad4e:	00 00                	add    BYTE PTR [rax],al
    ad50:	09 d6                	or     esi,edx
    ad52:	71 00                	jno    ad54 <_end+0x4d3c>
    ad54:	00 cf                	add    bh,cl
    ad56:	35 00 00 00 00       	xor    eax,0x0
    ad5b:	00 00                	add    BYTE PTR [rax],al
    ad5d:	02 00                	add    al,BYTE PTR [rax]
    ad5f:	cf                   	iret
    ad60:	35 00 00 00 00       	xor    eax,0x0
    ad65:	00 00                	add    BYTE PTR [rax],al
    ad67:	0c 00                	or     al,0x0
    ad69:	00 00                	add    BYTE PTR [rax],al
    ad6b:	00 00                	add    BYTE PTR [rax],al
    ad6d:	00 00                	add    BYTE PTR [rax],al
    ad6f:	1e                   	(bad)
    ad70:	34 63                	xor    al,0x63
    ad72:	56                   	push   rsi
    ad73:	00 00                	add    BYTE PTR [rax],al
    ad75:	05 e4 71 00 00       	add    eax,0x71e4
    ad7a:	ed                   	in     eax,dx
    ad7b:	25 00 00 eb 25       	and    eax,0x25eb0000
    ad80:	00 00                	add    BYTE PTR [rax],al
    ad82:	07                   	(bad)
    ad83:	db 35 00 00 00 00    	(bad)  [rip+0x0]        # ad89 <_end+0x4d71>
    ad89:	00 00                	add    BYTE PTR [rax],al
    ad8b:	9b                   	fwait
    ad8c:	75 00                	jne    ad8e <_end+0x4d76>
    ad8e:	00 03                	add    BYTE PTR [rbx],al
    ad90:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ad93:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ad9e:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    ada1:	00 00                	add    BYTE PTR [rax],al
    ada3:	db 35 00 00 00 00    	(bad)  [rip+0x0]        # ada9 <_end+0x4d91>
    ada9:	00 00                	add    BYTE PTR [rax],al
    adab:	03 00                	add    eax,DWORD PTR [rax]
    adad:	db 35 00 00 00 00    	(bad)  [rip+0x0]        # adb3 <_end+0x4d9b>
    adb3:	00 00                	add    BYTE PTR [rax],al
    adb5:	3a 00                	cmp    al,BYTE PTR [rax]
    adb7:	00 00                	add    BYTE PTR [rax],al
    adb9:	00 00                	add    BYTE PTR [rax],al
    adbb:	00 00                	add    BYTE PTR [rax],al
    adbd:	1e                   	(bad)
    adbe:	34 14                	xor    al,0x14
    adc0:	57                   	push   rdi
    adc1:	00 00                	add    BYTE PTR [rax],al
    adc3:	05 91 52 00 00       	add    eax,0x5291
    adc8:	fc                   	cld
    adc9:	25 00 00 fa 25       	and    eax,0x25fa0000
    adce:	00 00                	add    BYTE PTR [rax],al
    add0:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    add6:	79 52                	jns    ae2a <_end+0x4e12>
    add8:	00 00                	add    BYTE PTR [rax],al
    adda:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    addd:	00 00                	add    BYTE PTR [rax],al
    addf:	15 9d 52 00 00       	adc    eax,0x529d
    ade4:	08 26                	or     BYTE PTR [rsi],ah
    ade6:	00 00                	add    BYTE PTR [rax],al
    ade8:	04 26                	add    al,0x26
    adea:	00 00                	add    BYTE PTR [rax],al
    adec:	0a ee                	or     ch,dh
    adee:	35 00 00 00 00       	xor    eax,0x0
    adf3:	00 00                	add    BYTE PTR [rax],al
    adf5:	e5 3c                	in     eax,0x3c
    adf7:	00 00                	add    BYTE PTR [rax],al
    adf9:	dd 56 00             	fst    QWORD PTR [rsi+0x0]
    adfc:	00 03                	add    BYTE PTR [rbx],al
    adfe:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ae01:	03 e0                	add    esp,eax
    ae03:	45 00 00             	add    BYTE PTR [r8],r8b
    ae06:	00 00                	add    BYTE PTR [rax],al
    ae08:	00 00                	add    BYTE PTR [rax],al
    ae0a:	03 01                	add    eax,DWORD PTR [rcx]
    ae0c:	54                   	push   rsp
    ae0d:	09 03                	or     DWORD PTR [rbx],eax
    ae0f:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ae13:	00 00                	add    BYTE PTR [rax],al
    ae15:	00 00                	add    BYTE PTR [rax],al
    ae17:	00 0a                	add    BYTE PTR [rdx],cl
    ae19:	0b 36                	or     esi,DWORD PTR [rsi]
    ae1b:	00 00                	add    BYTE PTR [rax],al
    ae1d:	00 00                	add    BYTE PTR [rax],al
    ae1f:	00 00                	add    BYTE PTR [rax],al
    ae21:	4d                   	rex.WRB
    ae22:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ae25:	fd                   	std
    ae26:	56                   	push   rsi
    ae27:	00 00                	add    BYTE PTR [rax],al
    ae29:	03 01                	add    eax,DWORD PTR [rcx]
    ae2b:	55                   	push   rbp
    ae2c:	04 91                	add    al,0x91
    ae2e:	a8 7f                	test   al,0x7f
    ae30:	06                   	(bad)
    ae31:	03 01                	add    eax,DWORD PTR [rcx]
    ae33:	58                   	pop    rax
    ae34:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ae37:	00 07                	add    BYTE PTR [rdi],al
    ae39:	15 36 00 00 00       	adc    eax,0x36
    ae3e:	00 00                	add    BYTE PTR [rax],al
    ae40:	00 33                	add    BYTE PTR [rbx],dh
    ae42:	3c 00                	cmp    al,0x0
    ae44:	00 03                	add    BYTE PTR [rbx],al
    ae46:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    ae49:	91                   	xchg   ecx,eax
    ae4a:	a8 7f                	test   al,0x7f
    ae4c:	06                   	(bad)
    ae4d:	00 00                	add    BYTE PTR [rax],al
    ae4f:	19 d6                	sbb    esi,edx
    ae51:	71 00                	jno    ae53 <_end+0x4e3b>
    ae53:	00 15 36 00 00 00    	add    BYTE PTR [rip+0x36],dl        # ae8f <_end+0x4e77>
    ae59:	00 00                	add    BYTE PTR [rax],al
    ae5b:	00 02                	add    BYTE PTR [rdx],al
    ae5d:	00 15 36 00 00 00    	add    BYTE PTR [rip+0x36],dl        # ae99 <_end+0x4e81>
    ae63:	00 00                	add    BYTE PTR [rax],al
    ae65:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ae68:	00 00                	add    BYTE PTR [rax],al
    ae6a:	00 00                	add    BYTE PTR [rax],al
    ae6c:	00 00                	add    BYTE PTR [rax],al
    ae6e:	01 1e                	add    DWORD PTR [rsi],ebx
    ae70:	34 05                	xor    al,0x5
    ae72:	e4 71                	in     al,0x71
    ae74:	00 00                	add    BYTE PTR [rax],al
    ae76:	1b 26                	sbb    esp,DWORD PTR [rsi]
    ae78:	00 00                	add    BYTE PTR [rax],al
    ae7a:	19 26                	sbb    DWORD PTR [rsi],esp
    ae7c:	00 00                	add    BYTE PTR [rax],al
    ae7e:	07                   	(bad)
    ae7f:	21 36                	and    DWORD PTR [rsi],esi
    ae81:	00 00                	add    BYTE PTR [rax],al
    ae83:	00 00                	add    BYTE PTR [rax],al
    ae85:	00 00                	add    BYTE PTR [rax],al
    ae87:	9b                   	fwait
    ae88:	75 00                	jne    ae8a <_end+0x4e72>
    ae8a:	00 03                	add    BYTE PTR [rbx],al
    ae8c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ae8f:	03 c0                	add    eax,eax
    ae91:	45 00 00             	add    BYTE PTR [r8],r8b
    ae94:	00 00                	add    BYTE PTR [rax],al
    ae96:	00 00                	add    BYTE PTR [rax],al
    ae98:	00 00                	add    BYTE PTR [rax],al
    ae9a:	00 16                	add    BYTE PTR [rsi],dl
    ae9c:	40 35 00 00 00 00    	rex xor eax,0x0
    aea2:	00 00                	add    BYTE PTR [rax],al
    aea4:	6d                   	ins    DWORD PTR es:[rdi],dx
    aea5:	00 00                	add    BYTE PTR [rax],al
    aea7:	00 00                	add    BYTE PTR [rax],al
    aea9:	00 00                	add    BYTE PTR [rax],al
    aeab:	00 67 59             	add    BYTE PTR [rdi+0x59],ah
    aeae:	00 00                	add    BYTE PTR [rax],al
    aeb0:	17                   	(bad)
    aeb1:	cb                   	retf
    aeb2:	1d 00 00 1f 34       	sbb    eax,0x341f0000
    aeb7:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    aeba:	00 09                	add    BYTE PTR [rcx],cl
    aebc:	d6                   	(bad)
    aebd:	71 00                	jno    aebf <_end+0x4ea7>
    aebf:	00 40 35             	add    BYTE PTR [rax+0x35],al
    aec2:	00 00                	add    BYTE PTR [rax],al
    aec4:	00 00                	add    BYTE PTR [rax],al
    aec6:	00 00                	add    BYTE PTR [rax],al
    aec8:	02 00                	add    al,BYTE PTR [rax]
    aeca:	40 35 00 00 00 00    	rex xor eax,0x0
    aed0:	00 00                	add    BYTE PTR [rax],al
    aed2:	0f 00 00             	sldt   WORD PTR [rax]
    aed5:	00 00                	add    BYTE PTR [rax],al
    aed7:	00 00                	add    BYTE PTR [rax],al
    aed9:	00 1f                	add    BYTE PTR [rdi],bl
    aedb:	34 ce                	xor    al,0xce
    aedd:	57                   	push   rdi
    aede:	00 00                	add    BYTE PTR [rax],al
    aee0:	05 e4 71 00 00       	add    eax,0x71e4
    aee5:	2a 26                	sub    ah,BYTE PTR [rsi]
    aee7:	00 00                	add    BYTE PTR [rax],al
    aee9:	28 26                	sub    BYTE PTR [rsi],ah
    aeeb:	00 00                	add    BYTE PTR [rax],al
    aeed:	07                   	(bad)
    aeee:	4f 35 00 00 00 00    	rex.WRXB xor rax,0x0
    aef4:	00 00                	add    BYTE PTR [rax],al
    aef6:	9b                   	fwait
    aef7:	75 00                	jne    aef9 <_end+0x4ee1>
    aef9:	00 03                	add    BYTE PTR [rbx],al
    aefb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aefe:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    af09:	09 d6                	or     esi,edx
    af0b:	71 00                	jno    af0d <_end+0x4ef5>
    af0d:	00 4f 35             	add    BYTE PTR [rdi+0x35],cl
    af10:	00 00                	add    BYTE PTR [rax],al
    af12:	00 00                	add    BYTE PTR [rax],al
    af14:	00 00                	add    BYTE PTR [rax],al
    af16:	02 00                	add    al,BYTE PTR [rax]
    af18:	4f 35 00 00 00 00    	rex.WRXB xor rax,0x0
    af1e:	00 00                	add    BYTE PTR [rax],al
    af20:	0c 00                	or     al,0x0
    af22:	00 00                	add    BYTE PTR [rax],al
    af24:	00 00                	add    BYTE PTR [rax],al
    af26:	00 00                	add    BYTE PTR [rax],al
    af28:	1f                   	(bad)
    af29:	34 1c                	xor    al,0x1c
    af2b:	58                   	pop    rax
    af2c:	00 00                	add    BYTE PTR [rax],al
    af2e:	05 e4 71 00 00       	add    eax,0x71e4
    af33:	39 26                	cmp    DWORD PTR [rsi],esp
    af35:	00 00                	add    BYTE PTR [rax],al
    af37:	37                   	(bad)
    af38:	26 00 00             	es add BYTE PTR [rax],al
    af3b:	07                   	(bad)
    af3c:	5b                   	pop    rbx
    af3d:	35 00 00 00 00       	xor    eax,0x0
    af42:	00 00                	add    BYTE PTR [rax],al
    af44:	9b                   	fwait
    af45:	75 00                	jne    af47 <_end+0x4f2f>
    af47:	00 03                	add    BYTE PTR [rbx],al
    af49:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af4c:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    af52:	00 00                	add    BYTE PTR [rax],al
    af54:	00 00                	add    BYTE PTR [rax],al
    af56:	00 09                	add    BYTE PTR [rcx],cl
    af58:	d6                   	(bad)
    af59:	71 00                	jno    af5b <_end+0x4f43>
    af5b:	00 5b 35             	add    BYTE PTR [rbx+0x35],bl
    af5e:	00 00                	add    BYTE PTR [rax],al
    af60:	00 00                	add    BYTE PTR [rax],al
    af62:	00 00                	add    BYTE PTR [rax],al
    af64:	02 00                	add    al,BYTE PTR [rax]
    af66:	5b                   	pop    rbx
    af67:	35 00 00 00 00       	xor    eax,0x0
    af6c:	00 00                	add    BYTE PTR [rax],al
    af6e:	0c 00                	or     al,0x0
    af70:	00 00                	add    BYTE PTR [rax],al
    af72:	00 00                	add    BYTE PTR [rax],al
    af74:	00 00                	add    BYTE PTR [rax],al
    af76:	1f                   	(bad)
    af77:	34 6a                	xor    al,0x6a
    af79:	58                   	pop    rax
    af7a:	00 00                	add    BYTE PTR [rax],al
    af7c:	05 e4 71 00 00       	add    eax,0x71e4
    af81:	48                   	rex.W
    af82:	26 00 00             	es add BYTE PTR [rax],al
    af85:	46                   	rex.RX
    af86:	26 00 00             	es add BYTE PTR [rax],al
    af89:	07                   	(bad)
    af8a:	67 35 00 00 00 00    	addr32 xor eax,0x0
    af90:	00 00                	add    BYTE PTR [rax],al
    af92:	9b                   	fwait
    af93:	75 00                	jne    af95 <_end+0x4f7d>
    af95:	00 03                	add    BYTE PTR [rbx],al
    af97:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af9a:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    afa5:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    afa8:	00 00                	add    BYTE PTR [rax],al
    afaa:	67 35 00 00 00 00    	addr32 xor eax,0x0
    afb0:	00 00                	add    BYTE PTR [rax],al
    afb2:	03 00                	add    eax,DWORD PTR [rax]
    afb4:	67 35 00 00 00 00    	addr32 xor eax,0x0
    afba:	00 00                	add    BYTE PTR [rax],al
    afbc:	3a 00                	cmp    al,BYTE PTR [rax]
    afbe:	00 00                	add    BYTE PTR [rax],al
    afc0:	00 00                	add    BYTE PTR [rax],al
    afc2:	00 00                	add    BYTE PTR [rax],al
    afc4:	1f                   	(bad)
    afc5:	34 1b                	xor    al,0x1b
    afc7:	59                   	pop    rcx
    afc8:	00 00                	add    BYTE PTR [rax],al
    afca:	05 91 52 00 00       	add    eax,0x5291
    afcf:	57                   	push   rdi
    afd0:	26 00 00             	es add BYTE PTR [rax],al
    afd3:	55                   	push   rbp
    afd4:	26 00 00             	es add BYTE PTR [rax],al
    afd7:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    afdd:	79 52                	jns    b031 <_end+0x5019>
    afdf:	00 00                	add    BYTE PTR [rax],al
    afe1:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    afe4:	00 00                	add    BYTE PTR [rax],al
    afe6:	15 9d 52 00 00       	adc    eax,0x529d
    afeb:	63 26                	movsxd esp,DWORD PTR [rsi]
    afed:	00 00                	add    BYTE PTR [rax],al
    afef:	5f                   	pop    rdi
    aff0:	26 00 00             	es add BYTE PTR [rax],al
    aff3:	0a 7a 35             	or     bh,BYTE PTR [rdx+0x35]
    aff6:	00 00                	add    BYTE PTR [rax],al
    aff8:	00 00                	add    BYTE PTR [rax],al
    affa:	00 00                	add    BYTE PTR [rax],al
    affc:	e5 3c                	in     eax,0x3c
    affe:	00 00                	add    BYTE PTR [rax],al
    b000:	e4 58                	in     al,0x58
    b002:	00 00                	add    BYTE PTR [rax],al
    b004:	03 01                	add    eax,DWORD PTR [rcx]
    b006:	55                   	push   rbp
    b007:	09 03                	or     DWORD PTR [rbx],eax
    b009:	10 46 00             	adc    BYTE PTR [rsi+0x0],al
    b00c:	00 00                	add    BYTE PTR [rax],al
    b00e:	00 00                	add    BYTE PTR [rax],al
    b010:	00 03                	add    BYTE PTR [rbx],al
    b012:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b016:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b01a:	00 00                	add    BYTE PTR [rax],al
    b01c:	00 00                	add    BYTE PTR [rax],al
    b01e:	00 0a                	add    BYTE PTR [rdx],cl
    b020:	97                   	xchg   edi,eax
    b021:	35 00 00 00 00       	xor    eax,0x0
    b026:	00 00                	add    BYTE PTR [rax],al
    b028:	4d                   	rex.WRB
    b029:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b02c:	04 59                	add    al,0x59
    b02e:	00 00                	add    BYTE PTR [rax],al
    b030:	03 01                	add    eax,DWORD PTR [rcx]
    b032:	55                   	push   rbp
    b033:	04 91                	add    al,0x91
    b035:	a8 7f                	test   al,0x7f
    b037:	06                   	(bad)
    b038:	03 01                	add    eax,DWORD PTR [rcx]
    b03a:	58                   	pop    rax
    b03b:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b03e:	00 07                	add    BYTE PTR [rdi],al
    b040:	a1 35 00 00 00 00 00 	movabs eax,ds:0x3300000000000035
    b047:	00 33 
    b049:	3c 00                	cmp    al,0x0
    b04b:	00 03                	add    BYTE PTR [rbx],al
    b04d:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b050:	91                   	xchg   ecx,eax
    b051:	a8 7f                	test   al,0x7f
    b053:	06                   	(bad)
    b054:	00 00                	add    BYTE PTR [rax],al
    b056:	19 d6                	sbb    esi,edx
    b058:	71 00                	jno    b05a <_end+0x5042>
    b05a:	00 a1 35 00 00 00    	add    BYTE PTR [rcx+0x35],ah
    b060:	00 00                	add    BYTE PTR [rax],al
    b062:	00 02                	add    BYTE PTR [rdx],al
    b064:	00 a1 35 00 00 00    	add    BYTE PTR [rcx+0x35],ah
    b06a:	00 00                	add    BYTE PTR [rax],al
    b06c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b06f:	00 00                	add    BYTE PTR [rax],al
    b071:	00 00                	add    BYTE PTR [rax],al
    b073:	00 00                	add    BYTE PTR [rax],al
    b075:	01 1f                	add    DWORD PTR [rdi],ebx
    b077:	34 05                	xor    al,0x5
    b079:	e4 71                	in     al,0x71
    b07b:	00 00                	add    BYTE PTR [rax],al
    b07d:	76 26                	jbe    b0a5 <_end+0x508d>
    b07f:	00 00                	add    BYTE PTR [rax],al
    b081:	74 26                	je     b0a9 <_end+0x5091>
    b083:	00 00                	add    BYTE PTR [rax],al
    b085:	07                   	(bad)
    b086:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    b087:	35 00 00 00 00       	xor    eax,0x0
    b08c:	00 00                	add    BYTE PTR [rax],al
    b08e:	9b                   	fwait
    b08f:	75 00                	jne    b091 <_end+0x5079>
    b091:	00 03                	add    BYTE PTR [rbx],al
    b093:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b096:	03 c0                	add    eax,eax
    b098:	45 00 00             	add    BYTE PTR [r8],r8b
    b09b:	00 00                	add    BYTE PTR [rax],al
    b09d:	00 00                	add    BYTE PTR [rax],al
    b09f:	00 00                	add    BYTE PTR [rax],al
    b0a1:	00 16                	add    BYTE PTR [rsi],dl
    b0a3:	c8 34 00 00          	enter  0x34,0x0
    b0a7:	00 00                	add    BYTE PTR [rax],al
    b0a9:	00 00                	add    BYTE PTR [rax],al
    b0ab:	6d                   	ins    DWORD PTR es:[rdi],dx
    b0ac:	00 00                	add    BYTE PTR [rax],al
    b0ae:	00 00                	add    BYTE PTR [rax],al
    b0b0:	00 00                	add    BYTE PTR [rax],al
    b0b2:	00 6e 5b             	add    BYTE PTR [rsi+0x5b],ch
    b0b5:	00 00                	add    BYTE PTR [rax],al
    b0b7:	17                   	(bad)
    b0b8:	43 0d 00 00 20 34    	rex.XB or eax,0x34200000
    b0be:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    b0c1:	00 09                	add    BYTE PTR [rcx],cl
    b0c3:	d6                   	(bad)
    b0c4:	71 00                	jno    b0c6 <_end+0x50ae>
    b0c6:	00 c8                	add    al,cl
    b0c8:	34 00                	xor    al,0x0
    b0ca:	00 00                	add    BYTE PTR [rax],al
    b0cc:	00 00                	add    BYTE PTR [rax],al
    b0ce:	00 02                	add    BYTE PTR [rdx],al
    b0d0:	00 c8                	add    al,cl
    b0d2:	34 00                	xor    al,0x0
    b0d4:	00 00                	add    BYTE PTR [rax],al
    b0d6:	00 00                	add    BYTE PTR [rax],al
    b0d8:	00 0f                	add    BYTE PTR [rdi],cl
    b0da:	00 00                	add    BYTE PTR [rax],al
    b0dc:	00 00                	add    BYTE PTR [rax],al
    b0de:	00 00                	add    BYTE PTR [rax],al
    b0e0:	00 20                	add    BYTE PTR [rax],ah
    b0e2:	34 d5                	xor    al,0xd5
    b0e4:	59                   	pop    rcx
    b0e5:	00 00                	add    BYTE PTR [rax],al
    b0e7:	05 e4 71 00 00       	add    eax,0x71e4
    b0ec:	85 26                	test   DWORD PTR [rsi],esp
    b0ee:	00 00                	add    BYTE PTR [rax],al
    b0f0:	83 26 00             	and    DWORD PTR [rsi],0x0
    b0f3:	00 07                	add    BYTE PTR [rdi],al
    b0f5:	d7                   	xlat   BYTE PTR ds:[rbx]
    b0f6:	34 00                	xor    al,0x0
    b0f8:	00 00                	add    BYTE PTR [rax],al
    b0fa:	00 00                	add    BYTE PTR [rax],al
    b0fc:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b102:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b105:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b110:	09 d6                	or     esi,edx
    b112:	71 00                	jno    b114 <_end+0x50fc>
    b114:	00 d7                	add    bh,dl
    b116:	34 00                	xor    al,0x0
    b118:	00 00                	add    BYTE PTR [rax],al
    b11a:	00 00                	add    BYTE PTR [rax],al
    b11c:	00 02                	add    BYTE PTR [rdx],al
    b11e:	00 d7                	add    bh,dl
    b120:	34 00                	xor    al,0x0
    b122:	00 00                	add    BYTE PTR [rax],al
    b124:	00 00                	add    BYTE PTR [rax],al
    b126:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b129:	00 00                	add    BYTE PTR [rax],al
    b12b:	00 00                	add    BYTE PTR [rax],al
    b12d:	00 00                	add    BYTE PTR [rax],al
    b12f:	20 34 23             	and    BYTE PTR [rbx+riz*1],dh
    b132:	5a                   	pop    rdx
    b133:	00 00                	add    BYTE PTR [rax],al
    b135:	05 e4 71 00 00       	add    eax,0x71e4
    b13a:	94                   	xchg   esp,eax
    b13b:	26 00 00             	es add BYTE PTR [rax],al
    b13e:	92                   	xchg   edx,eax
    b13f:	26 00 00             	es add BYTE PTR [rax],al
    b142:	07                   	(bad)
    b143:	e3 34                	jrcxz  b179 <_end+0x5161>
    b145:	00 00                	add    BYTE PTR [rax],al
    b147:	00 00                	add    BYTE PTR [rax],al
    b149:	00 00                	add    BYTE PTR [rax],al
    b14b:	9b                   	fwait
    b14c:	75 00                	jne    b14e <_end+0x5136>
    b14e:	00 03                	add    BYTE PTR [rbx],al
    b150:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b153:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    b159:	00 00                	add    BYTE PTR [rax],al
    b15b:	00 00                	add    BYTE PTR [rax],al
    b15d:	00 09                	add    BYTE PTR [rcx],cl
    b15f:	d6                   	(bad)
    b160:	71 00                	jno    b162 <_end+0x514a>
    b162:	00 e3                	add    bl,ah
    b164:	34 00                	xor    al,0x0
    b166:	00 00                	add    BYTE PTR [rax],al
    b168:	00 00                	add    BYTE PTR [rax],al
    b16a:	00 02                	add    BYTE PTR [rdx],al
    b16c:	00 e3                	add    bl,ah
    b16e:	34 00                	xor    al,0x0
    b170:	00 00                	add    BYTE PTR [rax],al
    b172:	00 00                	add    BYTE PTR [rax],al
    b174:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b177:	00 00                	add    BYTE PTR [rax],al
    b179:	00 00                	add    BYTE PTR [rax],al
    b17b:	00 00                	add    BYTE PTR [rax],al
    b17d:	20 34 71             	and    BYTE PTR [rcx+rsi*2],dh
    b180:	5a                   	pop    rdx
    b181:	00 00                	add    BYTE PTR [rax],al
    b183:	05 e4 71 00 00       	add    eax,0x71e4
    b188:	a3 26 00 00 a1 26 00 	movabs ds:0x7000026a1000026,eax
    b18f:	00 07 
    b191:	ef                   	out    dx,eax
    b192:	34 00                	xor    al,0x0
    b194:	00 00                	add    BYTE PTR [rax],al
    b196:	00 00                	add    BYTE PTR [rax],al
    b198:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b19e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b1a1:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b1ac:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b1af:	00 00                	add    BYTE PTR [rax],al
    b1b1:	ef                   	out    dx,eax
    b1b2:	34 00                	xor    al,0x0
    b1b4:	00 00                	add    BYTE PTR [rax],al
    b1b6:	00 00                	add    BYTE PTR [rax],al
    b1b8:	00 03                	add    BYTE PTR [rbx],al
    b1ba:	00 ef                	add    bh,ch
    b1bc:	34 00                	xor    al,0x0
    b1be:	00 00                	add    BYTE PTR [rax],al
    b1c0:	00 00                	add    BYTE PTR [rax],al
    b1c2:	00 3a                	add    BYTE PTR [rdx],bh
    b1c4:	00 00                	add    BYTE PTR [rax],al
    b1c6:	00 00                	add    BYTE PTR [rax],al
    b1c8:	00 00                	add    BYTE PTR [rax],al
    b1ca:	00 20                	add    BYTE PTR [rax],ah
    b1cc:	34 22                	xor    al,0x22
    b1ce:	5b                   	pop    rbx
    b1cf:	00 00                	add    BYTE PTR [rax],al
    b1d1:	05 91 52 00 00       	add    eax,0x5291
    b1d6:	b2 26                	mov    dl,0x26
    b1d8:	00 00                	add    BYTE PTR [rax],al
    b1da:	b0 26                	mov    al,0x26
    b1dc:	00 00                	add    BYTE PTR [rax],al
    b1de:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b1e4:	79 52                	jns    b238 <_end+0x5220>
    b1e6:	00 00                	add    BYTE PTR [rax],al
    b1e8:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b1eb:	00 00                	add    BYTE PTR [rax],al
    b1ed:	15 9d 52 00 00       	adc    eax,0x529d
    b1f2:	be 26 00 00 ba       	mov    esi,0xba000026
    b1f7:	26 00 00             	es add BYTE PTR [rax],al
    b1fa:	0a 02                	or     al,BYTE PTR [rdx]
    b1fc:	35 00 00 00 00       	xor    eax,0x0
    b201:	00 00                	add    BYTE PTR [rax],al
    b203:	e5 3c                	in     eax,0x3c
    b205:	00 00                	add    BYTE PTR [rax],al
    b207:	eb 5a                	jmp    b263 <_end+0x524b>
    b209:	00 00                	add    BYTE PTR [rax],al
    b20b:	03 01                	add    eax,DWORD PTR [rcx]
    b20d:	55                   	push   rbp
    b20e:	09 03                	or     DWORD PTR [rbx],eax
    b210:	8e 42 00             	mov    es,WORD PTR [rdx+0x0]
    b213:	00 00                	add    BYTE PTR [rax],al
    b215:	00 00                	add    BYTE PTR [rax],al
    b217:	00 03                	add    BYTE PTR [rbx],al
    b219:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b21d:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b221:	00 00                	add    BYTE PTR [rax],al
    b223:	00 00                	add    BYTE PTR [rax],al
    b225:	00 0a                	add    BYTE PTR [rdx],cl
    b227:	1f                   	(bad)
    b228:	35 00 00 00 00       	xor    eax,0x0
    b22d:	00 00                	add    BYTE PTR [rax],al
    b22f:	4d                   	rex.WRB
    b230:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b233:	0b 5b 00             	or     ebx,DWORD PTR [rbx+0x0]
    b236:	00 03                	add    BYTE PTR [rbx],al
    b238:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b23b:	91                   	xchg   ecx,eax
    b23c:	a8 7f                	test   al,0x7f
    b23e:	06                   	(bad)
    b23f:	03 01                	add    eax,DWORD PTR [rcx]
    b241:	58                   	pop    rax
    b242:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b245:	00 07                	add    BYTE PTR [rdi],al
    b247:	29 35 00 00 00 00    	sub    DWORD PTR [rip+0x0],esi        # b24d <_end+0x5235>
    b24d:	00 00                	add    BYTE PTR [rax],al
    b24f:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b252:	00 03                	add    BYTE PTR [rbx],al
    b254:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b257:	91                   	xchg   ecx,eax
    b258:	a8 7f                	test   al,0x7f
    b25a:	06                   	(bad)
    b25b:	00 00                	add    BYTE PTR [rax],al
    b25d:	19 d6                	sbb    esi,edx
    b25f:	71 00                	jno    b261 <_end+0x5249>
    b261:	00 29                	add    BYTE PTR [rcx],ch
    b263:	35 00 00 00 00       	xor    eax,0x0
    b268:	00 00                	add    BYTE PTR [rax],al
    b26a:	02 00                	add    al,BYTE PTR [rax]
    b26c:	29 35 00 00 00 00    	sub    DWORD PTR [rip+0x0],esi        # b272 <_end+0x525a>
    b272:	00 00                	add    BYTE PTR [rax],al
    b274:	0c 00                	or     al,0x0
    b276:	00 00                	add    BYTE PTR [rax],al
    b278:	00 00                	add    BYTE PTR [rax],al
    b27a:	00 00                	add    BYTE PTR [rax],al
    b27c:	01 20                	add    DWORD PTR [rax],esp
    b27e:	34 05                	xor    al,0x5
    b280:	e4 71                	in     al,0x71
    b282:	00 00                	add    BYTE PTR [rax],al
    b284:	d1 26                	shl    DWORD PTR [rsi],1
    b286:	00 00                	add    BYTE PTR [rax],al
    b288:	cf                   	iret
    b289:	26 00 00             	es add BYTE PTR [rax],al
    b28c:	07                   	(bad)
    b28d:	35 35 00 00 00       	xor    eax,0x35
    b292:	00 00                	add    BYTE PTR [rax],al
    b294:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b29a:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b29d:	03 c0                	add    eax,eax
    b29f:	45 00 00             	add    BYTE PTR [r8],r8b
    b2a2:	00 00                	add    BYTE PTR [rax],al
    b2a4:	00 00                	add    BYTE PTR [rax],al
    b2a6:	00 00                	add    BYTE PTR [rax],al
    b2a8:	00 16                	add    BYTE PTR [rsi],dl
    b2aa:	50                   	push   rax
    b2ab:	34 00                	xor    al,0x0
    b2ad:	00 00                	add    BYTE PTR [rax],al
    b2af:	00 00                	add    BYTE PTR [rax],al
    b2b1:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    b2b4:	00 00                	add    BYTE PTR [rax],al
    b2b6:	00 00                	add    BYTE PTR [rax],al
    b2b8:	00 00                	add    BYTE PTR [rax],al
    b2ba:	75 5d                	jne    b319 <_end+0x5301>
    b2bc:	00 00                	add    BYTE PTR [rax],al
    b2be:	17                   	(bad)
    b2bf:	ea                   	(bad)
    b2c0:	33 00                	xor    eax,DWORD PTR [rax]
    b2c2:	00 21                	add    BYTE PTR [rcx],ah
    b2c4:	34 db                	xor    al,0xdb
    b2c6:	41 00 00             	add    BYTE PTR [r8],al
    b2c9:	09 d6                	or     esi,edx
    b2cb:	71 00                	jno    b2cd <_end+0x52b5>
    b2cd:	00 50 34             	add    BYTE PTR [rax+0x34],dl
    b2d0:	00 00                	add    BYTE PTR [rax],al
    b2d2:	00 00                	add    BYTE PTR [rax],al
    b2d4:	00 00                	add    BYTE PTR [rax],al
    b2d6:	02 00                	add    al,BYTE PTR [rax]
    b2d8:	50                   	push   rax
    b2d9:	34 00                	xor    al,0x0
    b2db:	00 00                	add    BYTE PTR [rax],al
    b2dd:	00 00                	add    BYTE PTR [rax],al
    b2df:	00 0f                	add    BYTE PTR [rdi],cl
    b2e1:	00 00                	add    BYTE PTR [rax],al
    b2e3:	00 00                	add    BYTE PTR [rax],al
    b2e5:	00 00                	add    BYTE PTR [rax],al
    b2e7:	00 21                	add    BYTE PTR [rcx],ah
    b2e9:	34 dc                	xor    al,0xdc
    b2eb:	5b                   	pop    rbx
    b2ec:	00 00                	add    BYTE PTR [rax],al
    b2ee:	05 e4 71 00 00       	add    eax,0x71e4
    b2f3:	e0 26                	loopne b31b <_end+0x5303>
    b2f5:	00 00                	add    BYTE PTR [rax],al
    b2f7:	de 26                	fisub  WORD PTR [rsi]
    b2f9:	00 00                	add    BYTE PTR [rax],al
    b2fb:	07                   	(bad)
    b2fc:	5f                   	pop    rdi
    b2fd:	34 00                	xor    al,0x0
    b2ff:	00 00                	add    BYTE PTR [rax],al
    b301:	00 00                	add    BYTE PTR [rax],al
    b303:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b309:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b30c:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b317:	09 d6                	or     esi,edx
    b319:	71 00                	jno    b31b <_end+0x5303>
    b31b:	00 5f 34             	add    BYTE PTR [rdi+0x34],bl
    b31e:	00 00                	add    BYTE PTR [rax],al
    b320:	00 00                	add    BYTE PTR [rax],al
    b322:	00 00                	add    BYTE PTR [rax],al
    b324:	02 00                	add    al,BYTE PTR [rax]
    b326:	5f                   	pop    rdi
    b327:	34 00                	xor    al,0x0
    b329:	00 00                	add    BYTE PTR [rax],al
    b32b:	00 00                	add    BYTE PTR [rax],al
    b32d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b330:	00 00                	add    BYTE PTR [rax],al
    b332:	00 00                	add    BYTE PTR [rax],al
    b334:	00 00                	add    BYTE PTR [rax],al
    b336:	21 34 2a             	and    DWORD PTR [rdx+rbp*1],esi
    b339:	5c                   	pop    rsp
    b33a:	00 00                	add    BYTE PTR [rax],al
    b33c:	05 e4 71 00 00       	add    eax,0x71e4
    b341:	ef                   	out    dx,eax
    b342:	26 00 00             	es add BYTE PTR [rax],al
    b345:	ed                   	in     eax,dx
    b346:	26 00 00             	es add BYTE PTR [rax],al
    b349:	07                   	(bad)
    b34a:	6b 34 00 00          	imul   esi,DWORD PTR [rax+rax*1],0x0
    b34e:	00 00                	add    BYTE PTR [rax],al
    b350:	00 00                	add    BYTE PTR [rax],al
    b352:	9b                   	fwait
    b353:	75 00                	jne    b355 <_end+0x533d>
    b355:	00 03                	add    BYTE PTR [rbx],al
    b357:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b35a:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    b360:	00 00                	add    BYTE PTR [rax],al
    b362:	00 00                	add    BYTE PTR [rax],al
    b364:	00 09                	add    BYTE PTR [rcx],cl
    b366:	d6                   	(bad)
    b367:	71 00                	jno    b369 <_end+0x5351>
    b369:	00 6b 34             	add    BYTE PTR [rbx+0x34],ch
    b36c:	00 00                	add    BYTE PTR [rax],al
    b36e:	00 00                	add    BYTE PTR [rax],al
    b370:	00 00                	add    BYTE PTR [rax],al
    b372:	02 00                	add    al,BYTE PTR [rax]
    b374:	6b 34 00 00          	imul   esi,DWORD PTR [rax+rax*1],0x0
    b378:	00 00                	add    BYTE PTR [rax],al
    b37a:	00 00                	add    BYTE PTR [rax],al
    b37c:	0c 00                	or     al,0x0
    b37e:	00 00                	add    BYTE PTR [rax],al
    b380:	00 00                	add    BYTE PTR [rax],al
    b382:	00 00                	add    BYTE PTR [rax],al
    b384:	21 34 78             	and    DWORD PTR [rax+rdi*2],esi
    b387:	5c                   	pop    rsp
    b388:	00 00                	add    BYTE PTR [rax],al
    b38a:	05 e4 71 00 00       	add    eax,0x71e4
    b38f:	fe                   	(bad)
    b390:	26 00 00             	es add BYTE PTR [rax],al
    b393:	fc                   	cld
    b394:	26 00 00             	es add BYTE PTR [rax],al
    b397:	07                   	(bad)
    b398:	77 34                	ja     b3ce <_end+0x53b6>
    b39a:	00 00                	add    BYTE PTR [rax],al
    b39c:	00 00                	add    BYTE PTR [rax],al
    b39e:	00 00                	add    BYTE PTR [rax],al
    b3a0:	9b                   	fwait
    b3a1:	75 00                	jne    b3a3 <_end+0x538b>
    b3a3:	00 03                	add    BYTE PTR [rbx],al
    b3a5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b3a8:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b3b3:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b3b6:	00 00                	add    BYTE PTR [rax],al
    b3b8:	77 34                	ja     b3ee <_end+0x53d6>
    b3ba:	00 00                	add    BYTE PTR [rax],al
    b3bc:	00 00                	add    BYTE PTR [rax],al
    b3be:	00 00                	add    BYTE PTR [rax],al
    b3c0:	03 00                	add    eax,DWORD PTR [rax]
    b3c2:	77 34                	ja     b3f8 <_end+0x53e0>
    b3c4:	00 00                	add    BYTE PTR [rax],al
    b3c6:	00 00                	add    BYTE PTR [rax],al
    b3c8:	00 00                	add    BYTE PTR [rax],al
    b3ca:	3a 00                	cmp    al,BYTE PTR [rax]
    b3cc:	00 00                	add    BYTE PTR [rax],al
    b3ce:	00 00                	add    BYTE PTR [rax],al
    b3d0:	00 00                	add    BYTE PTR [rax],al
    b3d2:	21 34 29             	and    DWORD PTR [rcx+rbp*1],esi
    b3d5:	5d                   	pop    rbp
    b3d6:	00 00                	add    BYTE PTR [rax],al
    b3d8:	05 91 52 00 00       	add    eax,0x5291
    b3dd:	0d 27 00 00 0b       	or     eax,0xb000027
    b3e2:	27                   	(bad)
    b3e3:	00 00                	add    BYTE PTR [rax],al
    b3e5:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b3eb:	79 52                	jns    b43f <_end+0x5427>
    b3ed:	00 00                	add    BYTE PTR [rax],al
    b3ef:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b3f2:	00 00                	add    BYTE PTR [rax],al
    b3f4:	15 9d 52 00 00       	adc    eax,0x529d
    b3f9:	19 27                	sbb    DWORD PTR [rdi],esp
    b3fb:	00 00                	add    BYTE PTR [rax],al
    b3fd:	15 27 00 00 0a       	adc    eax,0xa000027
    b402:	8a 34 00             	mov    dh,BYTE PTR [rax+rax*1]
    b405:	00 00                	add    BYTE PTR [rax],al
    b407:	00 00                	add    BYTE PTR [rax],al
    b409:	00 e5                	add    ch,ah
    b40b:	3c 00                	cmp    al,0x0
    b40d:	00 f2                	add    dl,dh
    b40f:	5c                   	pop    rsp
    b410:	00 00                	add    BYTE PTR [rax],al
    b412:	03 01                	add    eax,DWORD PTR [rcx]
    b414:	55                   	push   rbp
    b415:	09 03                	or     DWORD PTR [rbx],eax
    b417:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    b41a:	00 00                	add    BYTE PTR [rax],al
    b41c:	00 00                	add    BYTE PTR [rax],al
    b41e:	00 03                	add    BYTE PTR [rbx],al
    b420:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b424:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b428:	00 00                	add    BYTE PTR [rax],al
    b42a:	00 00                	add    BYTE PTR [rax],al
    b42c:	00 0a                	add    BYTE PTR [rdx],cl
    b42e:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    b42f:	34 00                	xor    al,0x0
    b431:	00 00                	add    BYTE PTR [rax],al
    b433:	00 00                	add    BYTE PTR [rax],al
    b435:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b438:	00 00                	add    BYTE PTR [rax],al
    b43a:	12 5d 00             	adc    bl,BYTE PTR [rbp+0x0]
    b43d:	00 03                	add    BYTE PTR [rbx],al
    b43f:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b442:	91                   	xchg   ecx,eax
    b443:	a8 7f                	test   al,0x7f
    b445:	06                   	(bad)
    b446:	03 01                	add    eax,DWORD PTR [rcx]
    b448:	58                   	pop    rax
    b449:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b44c:	00 07                	add    BYTE PTR [rdi],al
    b44e:	b1 34                	mov    cl,0x34
    b450:	00 00                	add    BYTE PTR [rax],al
    b452:	00 00                	add    BYTE PTR [rax],al
    b454:	00 00                	add    BYTE PTR [rax],al
    b456:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b459:	00 03                	add    BYTE PTR [rbx],al
    b45b:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b45e:	91                   	xchg   ecx,eax
    b45f:	a8 7f                	test   al,0x7f
    b461:	06                   	(bad)
    b462:	00 00                	add    BYTE PTR [rax],al
    b464:	19 d6                	sbb    esi,edx
    b466:	71 00                	jno    b468 <_end+0x5450>
    b468:	00 b1 34 00 00 00    	add    BYTE PTR [rcx+0x34],dh
    b46e:	00 00                	add    BYTE PTR [rax],al
    b470:	00 02                	add    BYTE PTR [rdx],al
    b472:	00 b1 34 00 00 00    	add    BYTE PTR [rcx+0x34],dh
    b478:	00 00                	add    BYTE PTR [rax],al
    b47a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b47d:	00 00                	add    BYTE PTR [rax],al
    b47f:	00 00                	add    BYTE PTR [rax],al
    b481:	00 00                	add    BYTE PTR [rax],al
    b483:	01 21                	add    DWORD PTR [rcx],esp
    b485:	34 05                	xor    al,0x5
    b487:	e4 71                	in     al,0x71
    b489:	00 00                	add    BYTE PTR [rax],al
    b48b:	2c 27                	sub    al,0x27
    b48d:	00 00                	add    BYTE PTR [rax],al
    b48f:	2a 27                	sub    ah,BYTE PTR [rdi]
    b491:	00 00                	add    BYTE PTR [rax],al
    b493:	07                   	(bad)
    b494:	bd 34 00 00 00       	mov    ebp,0x34
    b499:	00 00                	add    BYTE PTR [rax],al
    b49b:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b4a1:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b4a4:	03 c0                	add    eax,eax
    b4a6:	45 00 00             	add    BYTE PTR [r8],r8b
    b4a9:	00 00                	add    BYTE PTR [rax],al
    b4ab:	00 00                	add    BYTE PTR [rax],al
    b4ad:	00 00                	add    BYTE PTR [rax],al
    b4af:	00 16                	add    BYTE PTR [rsi],dl
    b4b1:	d8 33                	fdiv   DWORD PTR [rbx]
    b4b3:	00 00                	add    BYTE PTR [rax],al
    b4b5:	00 00                	add    BYTE PTR [rax],al
    b4b7:	00 00                	add    BYTE PTR [rax],al
    b4b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    b4ba:	00 00                	add    BYTE PTR [rax],al
    b4bc:	00 00                	add    BYTE PTR [rax],al
    b4be:	00 00                	add    BYTE PTR [rax],al
    b4c0:	00 7c 5f 00          	add    BYTE PTR [rdi+rbx*2+0x0],bh
    b4c4:	00 17                	add    BYTE PTR [rdi],dl
    b4c6:	57                   	push   rdi
    b4c7:	12 00                	adc    al,BYTE PTR [rax]
    b4c9:	00 22                	add    BYTE PTR [rdx],ah
    b4cb:	34 db                	xor    al,0xdb
    b4cd:	41 00 00             	add    BYTE PTR [r8],al
    b4d0:	09 d6                	or     esi,edx
    b4d2:	71 00                	jno    b4d4 <_end+0x54bc>
    b4d4:	00 d8                	add    al,bl
    b4d6:	33 00                	xor    eax,DWORD PTR [rax]
    b4d8:	00 00                	add    BYTE PTR [rax],al
    b4da:	00 00                	add    BYTE PTR [rax],al
    b4dc:	00 02                	add    BYTE PTR [rdx],al
    b4de:	00 d8                	add    al,bl
    b4e0:	33 00                	xor    eax,DWORD PTR [rax]
    b4e2:	00 00                	add    BYTE PTR [rax],al
    b4e4:	00 00                	add    BYTE PTR [rax],al
    b4e6:	00 0f                	add    BYTE PTR [rdi],cl
    b4e8:	00 00                	add    BYTE PTR [rax],al
    b4ea:	00 00                	add    BYTE PTR [rax],al
    b4ec:	00 00                	add    BYTE PTR [rax],al
    b4ee:	00 22                	add    BYTE PTR [rdx],ah
    b4f0:	34 e3                	xor    al,0xe3
    b4f2:	5d                   	pop    rbp
    b4f3:	00 00                	add    BYTE PTR [rax],al
    b4f5:	05 e4 71 00 00       	add    eax,0x71e4
    b4fa:	3b 27                	cmp    esp,DWORD PTR [rdi]
    b4fc:	00 00                	add    BYTE PTR [rax],al
    b4fe:	39 27                	cmp    DWORD PTR [rdi],esp
    b500:	00 00                	add    BYTE PTR [rax],al
    b502:	07                   	(bad)
    b503:	e7 33                	out    0x33,eax
    b505:	00 00                	add    BYTE PTR [rax],al
    b507:	00 00                	add    BYTE PTR [rax],al
    b509:	00 00                	add    BYTE PTR [rax],al
    b50b:	9b                   	fwait
    b50c:	75 00                	jne    b50e <_end+0x54f6>
    b50e:	00 03                	add    BYTE PTR [rbx],al
    b510:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b513:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b51e:	09 d6                	or     esi,edx
    b520:	71 00                	jno    b522 <_end+0x550a>
    b522:	00 e7                	add    bh,ah
    b524:	33 00                	xor    eax,DWORD PTR [rax]
    b526:	00 00                	add    BYTE PTR [rax],al
    b528:	00 00                	add    BYTE PTR [rax],al
    b52a:	00 02                	add    BYTE PTR [rdx],al
    b52c:	00 e7                	add    bh,ah
    b52e:	33 00                	xor    eax,DWORD PTR [rax]
    b530:	00 00                	add    BYTE PTR [rax],al
    b532:	00 00                	add    BYTE PTR [rax],al
    b534:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b537:	00 00                	add    BYTE PTR [rax],al
    b539:	00 00                	add    BYTE PTR [rax],al
    b53b:	00 00                	add    BYTE PTR [rax],al
    b53d:	22 34 31             	and    dh,BYTE PTR [rcx+rsi*1]
    b540:	5e                   	pop    rsi
    b541:	00 00                	add    BYTE PTR [rax],al
    b543:	05 e4 71 00 00       	add    eax,0x71e4
    b548:	4a 27                	rex.WX (bad)
    b54a:	00 00                	add    BYTE PTR [rax],al
    b54c:	48 27                	rex.W (bad)
    b54e:	00 00                	add    BYTE PTR [rax],al
    b550:	07                   	(bad)
    b551:	f3 33 00             	repz xor eax,DWORD PTR [rax]
    b554:	00 00                	add    BYTE PTR [rax],al
    b556:	00 00                	add    BYTE PTR [rax],al
    b558:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b55e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b561:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    b567:	00 00                	add    BYTE PTR [rax],al
    b569:	00 00                	add    BYTE PTR [rax],al
    b56b:	00 09                	add    BYTE PTR [rcx],cl
    b56d:	d6                   	(bad)
    b56e:	71 00                	jno    b570 <_end+0x5558>
    b570:	00 f3                	add    bl,dh
    b572:	33 00                	xor    eax,DWORD PTR [rax]
    b574:	00 00                	add    BYTE PTR [rax],al
    b576:	00 00                	add    BYTE PTR [rax],al
    b578:	00 02                	add    BYTE PTR [rdx],al
    b57a:	00 f3                	add    bl,dh
    b57c:	33 00                	xor    eax,DWORD PTR [rax]
    b57e:	00 00                	add    BYTE PTR [rax],al
    b580:	00 00                	add    BYTE PTR [rax],al
    b582:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b585:	00 00                	add    BYTE PTR [rax],al
    b587:	00 00                	add    BYTE PTR [rax],al
    b589:	00 00                	add    BYTE PTR [rax],al
    b58b:	22 34 7f             	and    dh,BYTE PTR [rdi+rdi*2]
    b58e:	5e                   	pop    rsi
    b58f:	00 00                	add    BYTE PTR [rax],al
    b591:	05 e4 71 00 00       	add    eax,0x71e4
    b596:	59                   	pop    rcx
    b597:	27                   	(bad)
    b598:	00 00                	add    BYTE PTR [rax],al
    b59a:	57                   	push   rdi
    b59b:	27                   	(bad)
    b59c:	00 00                	add    BYTE PTR [rax],al
    b59e:	07                   	(bad)
    b59f:	ff 33                	push   QWORD PTR [rbx]
    b5a1:	00 00                	add    BYTE PTR [rax],al
    b5a3:	00 00                	add    BYTE PTR [rax],al
    b5a5:	00 00                	add    BYTE PTR [rax],al
    b5a7:	9b                   	fwait
    b5a8:	75 00                	jne    b5aa <_end+0x5592>
    b5aa:	00 03                	add    BYTE PTR [rbx],al
    b5ac:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b5af:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b5ba:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b5bd:	00 00                	add    BYTE PTR [rax],al
    b5bf:	ff 33                	push   QWORD PTR [rbx]
    b5c1:	00 00                	add    BYTE PTR [rax],al
    b5c3:	00 00                	add    BYTE PTR [rax],al
    b5c5:	00 00                	add    BYTE PTR [rax],al
    b5c7:	03 00                	add    eax,DWORD PTR [rax]
    b5c9:	ff 33                	push   QWORD PTR [rbx]
    b5cb:	00 00                	add    BYTE PTR [rax],al
    b5cd:	00 00                	add    BYTE PTR [rax],al
    b5cf:	00 00                	add    BYTE PTR [rax],al
    b5d1:	3a 00                	cmp    al,BYTE PTR [rax]
    b5d3:	00 00                	add    BYTE PTR [rax],al
    b5d5:	00 00                	add    BYTE PTR [rax],al
    b5d7:	00 00                	add    BYTE PTR [rax],al
    b5d9:	22 34 30             	and    dh,BYTE PTR [rax+rsi*1]
    b5dc:	5f                   	pop    rdi
    b5dd:	00 00                	add    BYTE PTR [rax],al
    b5df:	05 91 52 00 00       	add    eax,0x5291
    b5e4:	68 27 00 00 66       	push   0x66000027
    b5e9:	27                   	(bad)
    b5ea:	00 00                	add    BYTE PTR [rax],al
    b5ec:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b5f2:	79 52                	jns    b646 <_end+0x562e>
    b5f4:	00 00                	add    BYTE PTR [rax],al
    b5f6:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b5f9:	00 00                	add    BYTE PTR [rax],al
    b5fb:	15 9d 52 00 00       	adc    eax,0x529d
    b600:	74 27                	je     b629 <_end+0x5611>
    b602:	00 00                	add    BYTE PTR [rax],al
    b604:	70 27                	jo     b62d <_end+0x5615>
    b606:	00 00                	add    BYTE PTR [rax],al
    b608:	0a 12                	or     dl,BYTE PTR [rdx]
    b60a:	34 00                	xor    al,0x0
    b60c:	00 00                	add    BYTE PTR [rax],al
    b60e:	00 00                	add    BYTE PTR [rax],al
    b610:	00 e5                	add    ch,ah
    b612:	3c 00                	cmp    al,0x0
    b614:	00 f9                	add    cl,bh
    b616:	5e                   	pop    rsi
    b617:	00 00                	add    BYTE PTR [rax],al
    b619:	03 01                	add    eax,DWORD PTR [rcx]
    b61b:	55                   	push   rbp
    b61c:	09 03                	or     DWORD PTR [rbx],eax
    b61e:	b7 42                	mov    bh,0x42
    b620:	00 00                	add    BYTE PTR [rax],al
    b622:	00 00                	add    BYTE PTR [rax],al
    b624:	00 00                	add    BYTE PTR [rax],al
    b626:	03 01                	add    eax,DWORD PTR [rcx]
    b628:	54                   	push   rsp
    b629:	09 03                	or     DWORD PTR [rbx],eax
    b62b:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b62f:	00 00                	add    BYTE PTR [rax],al
    b631:	00 00                	add    BYTE PTR [rax],al
    b633:	00 0a                	add    BYTE PTR [rdx],cl
    b635:	2f                   	(bad)
    b636:	34 00                	xor    al,0x0
    b638:	00 00                	add    BYTE PTR [rax],al
    b63a:	00 00                	add    BYTE PTR [rax],al
    b63c:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b63f:	00 00                	add    BYTE PTR [rax],al
    b641:	19 5f 00             	sbb    DWORD PTR [rdi+0x0],ebx
    b644:	00 03                	add    BYTE PTR [rbx],al
    b646:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b649:	91                   	xchg   ecx,eax
    b64a:	a8 7f                	test   al,0x7f
    b64c:	06                   	(bad)
    b64d:	03 01                	add    eax,DWORD PTR [rcx]
    b64f:	58                   	pop    rax
    b650:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b653:	00 07                	add    BYTE PTR [rdi],al
    b655:	39 34 00             	cmp    DWORD PTR [rax+rax*1],esi
    b658:	00 00                	add    BYTE PTR [rax],al
    b65a:	00 00                	add    BYTE PTR [rax],al
    b65c:	00 33                	add    BYTE PTR [rbx],dh
    b65e:	3c 00                	cmp    al,0x0
    b660:	00 03                	add    BYTE PTR [rbx],al
    b662:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b665:	91                   	xchg   ecx,eax
    b666:	a8 7f                	test   al,0x7f
    b668:	06                   	(bad)
    b669:	00 00                	add    BYTE PTR [rax],al
    b66b:	19 d6                	sbb    esi,edx
    b66d:	71 00                	jno    b66f <_end+0x5657>
    b66f:	00 39                	add    BYTE PTR [rcx],bh
    b671:	34 00                	xor    al,0x0
    b673:	00 00                	add    BYTE PTR [rax],al
    b675:	00 00                	add    BYTE PTR [rax],al
    b677:	00 02                	add    BYTE PTR [rdx],al
    b679:	00 39                	add    BYTE PTR [rcx],bh
    b67b:	34 00                	xor    al,0x0
    b67d:	00 00                	add    BYTE PTR [rax],al
    b67f:	00 00                	add    BYTE PTR [rax],al
    b681:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b684:	00 00                	add    BYTE PTR [rax],al
    b686:	00 00                	add    BYTE PTR [rax],al
    b688:	00 00                	add    BYTE PTR [rax],al
    b68a:	01 22                	add    DWORD PTR [rdx],esp
    b68c:	34 05                	xor    al,0x5
    b68e:	e4 71                	in     al,0x71
    b690:	00 00                	add    BYTE PTR [rax],al
    b692:	87 27                	xchg   DWORD PTR [rdi],esp
    b694:	00 00                	add    BYTE PTR [rax],al
    b696:	85 27                	test   DWORD PTR [rdi],esp
    b698:	00 00                	add    BYTE PTR [rax],al
    b69a:	07                   	(bad)
    b69b:	45 34 00             	rex.RB xor al,0x0
    b69e:	00 00                	add    BYTE PTR [rax],al
    b6a0:	00 00                	add    BYTE PTR [rax],al
    b6a2:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b6a8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b6ab:	03 c0                	add    eax,eax
    b6ad:	45 00 00             	add    BYTE PTR [r8],r8b
    b6b0:	00 00                	add    BYTE PTR [rax],al
    b6b2:	00 00                	add    BYTE PTR [rax],al
    b6b4:	00 00                	add    BYTE PTR [rax],al
    b6b6:	00 16                	add    BYTE PTR [rsi],dl
    b6b8:	60                   	(bad)
    b6b9:	33 00                	xor    eax,DWORD PTR [rax]
    b6bb:	00 00                	add    BYTE PTR [rax],al
    b6bd:	00 00                	add    BYTE PTR [rax],al
    b6bf:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    b6c2:	00 00                	add    BYTE PTR [rax],al
    b6c4:	00 00                	add    BYTE PTR [rax],al
    b6c6:	00 00                	add    BYTE PTR [rax],al
    b6c8:	83 61 00 00          	and    DWORD PTR [rcx+0x0],0x0
    b6cc:	17                   	(bad)
    b6cd:	dd 17                	fst    QWORD PTR [rdi]
    b6cf:	00 00                	add    BYTE PTR [rax],al
    b6d1:	23 34 db             	and    esi,DWORD PTR [rbx+rbx*8]
    b6d4:	41 00 00             	add    BYTE PTR [r8],al
    b6d7:	09 d6                	or     esi,edx
    b6d9:	71 00                	jno    b6db <_end+0x56c3>
    b6db:	00 60 33             	add    BYTE PTR [rax+0x33],ah
    b6de:	00 00                	add    BYTE PTR [rax],al
    b6e0:	00 00                	add    BYTE PTR [rax],al
    b6e2:	00 00                	add    BYTE PTR [rax],al
    b6e4:	02 00                	add    al,BYTE PTR [rax]
    b6e6:	60                   	(bad)
    b6e7:	33 00                	xor    eax,DWORD PTR [rax]
    b6e9:	00 00                	add    BYTE PTR [rax],al
    b6eb:	00 00                	add    BYTE PTR [rax],al
    b6ed:	00 0f                	add    BYTE PTR [rdi],cl
    b6ef:	00 00                	add    BYTE PTR [rax],al
    b6f1:	00 00                	add    BYTE PTR [rax],al
    b6f3:	00 00                	add    BYTE PTR [rax],al
    b6f5:	00 23                	add    BYTE PTR [rbx],ah
    b6f7:	34 ea                	xor    al,0xea
    b6f9:	5f                   	pop    rdi
    b6fa:	00 00                	add    BYTE PTR [rax],al
    b6fc:	05 e4 71 00 00       	add    eax,0x71e4
    b701:	96                   	xchg   esi,eax
    b702:	27                   	(bad)
    b703:	00 00                	add    BYTE PTR [rax],al
    b705:	94                   	xchg   esp,eax
    b706:	27                   	(bad)
    b707:	00 00                	add    BYTE PTR [rax],al
    b709:	07                   	(bad)
    b70a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b70b:	33 00                	xor    eax,DWORD PTR [rax]
    b70d:	00 00                	add    BYTE PTR [rax],al
    b70f:	00 00                	add    BYTE PTR [rax],al
    b711:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b717:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b71a:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b725:	09 d6                	or     esi,edx
    b727:	71 00                	jno    b729 <_end+0x5711>
    b729:	00 6f 33             	add    BYTE PTR [rdi+0x33],ch
    b72c:	00 00                	add    BYTE PTR [rax],al
    b72e:	00 00                	add    BYTE PTR [rax],al
    b730:	00 00                	add    BYTE PTR [rax],al
    b732:	02 00                	add    al,BYTE PTR [rax]
    b734:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b735:	33 00                	xor    eax,DWORD PTR [rax]
    b737:	00 00                	add    BYTE PTR [rax],al
    b739:	00 00                	add    BYTE PTR [rax],al
    b73b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b73e:	00 00                	add    BYTE PTR [rax],al
    b740:	00 00                	add    BYTE PTR [rax],al
    b742:	00 00                	add    BYTE PTR [rax],al
    b744:	23 34 38             	and    esi,DWORD PTR [rax+rdi*1]
    b747:	60                   	(bad)
    b748:	00 00                	add    BYTE PTR [rax],al
    b74a:	05 e4 71 00 00       	add    eax,0x71e4
    b74f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    b750:	27                   	(bad)
    b751:	00 00                	add    BYTE PTR [rax],al
    b753:	a3 27 00 00 07 7b 33 	movabs ds:0x337b07000027,eax
    b75a:	00 00 
    b75c:	00 00                	add    BYTE PTR [rax],al
    b75e:	00 00                	add    BYTE PTR [rax],al
    b760:	9b                   	fwait
    b761:	75 00                	jne    b763 <_end+0x574b>
    b763:	00 03                	add    BYTE PTR [rbx],al
    b765:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b768:	03 d4                	add    edx,esp
    b76a:	42 00 00             	rex.X add BYTE PTR [rax],al
    b76d:	00 00                	add    BYTE PTR [rax],al
    b76f:	00 00                	add    BYTE PTR [rax],al
    b771:	00 00                	add    BYTE PTR [rax],al
    b773:	09 d6                	or     esi,edx
    b775:	71 00                	jno    b777 <_end+0x575f>
    b777:	00 7b 33             	add    BYTE PTR [rbx+0x33],bh
    b77a:	00 00                	add    BYTE PTR [rax],al
    b77c:	00 00                	add    BYTE PTR [rax],al
    b77e:	00 00                	add    BYTE PTR [rax],al
    b780:	02 00                	add    al,BYTE PTR [rax]
    b782:	7b 33                	jnp    b7b7 <_end+0x579f>
    b784:	00 00                	add    BYTE PTR [rax],al
    b786:	00 00                	add    BYTE PTR [rax],al
    b788:	00 00                	add    BYTE PTR [rax],al
    b78a:	0c 00                	or     al,0x0
    b78c:	00 00                	add    BYTE PTR [rax],al
    b78e:	00 00                	add    BYTE PTR [rax],al
    b790:	00 00                	add    BYTE PTR [rax],al
    b792:	23 34 86             	and    esi,DWORD PTR [rsi+rax*4]
    b795:	60                   	(bad)
    b796:	00 00                	add    BYTE PTR [rax],al
    b798:	05 e4 71 00 00       	add    eax,0x71e4
    b79d:	b4 27                	mov    ah,0x27
    b79f:	00 00                	add    BYTE PTR [rax],al
    b7a1:	b2 27                	mov    dl,0x27
    b7a3:	00 00                	add    BYTE PTR [rax],al
    b7a5:	07                   	(bad)
    b7a6:	87 33                	xchg   DWORD PTR [rbx],esi
    b7a8:	00 00                	add    BYTE PTR [rax],al
    b7aa:	00 00                	add    BYTE PTR [rax],al
    b7ac:	00 00                	add    BYTE PTR [rax],al
    b7ae:	9b                   	fwait
    b7af:	75 00                	jne    b7b1 <_end+0x5799>
    b7b1:	00 03                	add    BYTE PTR [rbx],al
    b7b3:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b7b6:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b7c1:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b7c4:	00 00                	add    BYTE PTR [rax],al
    b7c6:	87 33                	xchg   DWORD PTR [rbx],esi
    b7c8:	00 00                	add    BYTE PTR [rax],al
    b7ca:	00 00                	add    BYTE PTR [rax],al
    b7cc:	00 00                	add    BYTE PTR [rax],al
    b7ce:	03 00                	add    eax,DWORD PTR [rax]
    b7d0:	87 33                	xchg   DWORD PTR [rbx],esi
    b7d2:	00 00                	add    BYTE PTR [rax],al
    b7d4:	00 00                	add    BYTE PTR [rax],al
    b7d6:	00 00                	add    BYTE PTR [rax],al
    b7d8:	3a 00                	cmp    al,BYTE PTR [rax]
    b7da:	00 00                	add    BYTE PTR [rax],al
    b7dc:	00 00                	add    BYTE PTR [rax],al
    b7de:	00 00                	add    BYTE PTR [rax],al
    b7e0:	23 34 37             	and    esi,DWORD PTR [rdi+rsi*1]
    b7e3:	61                   	(bad)
    b7e4:	00 00                	add    BYTE PTR [rax],al
    b7e6:	05 91 52 00 00       	add    eax,0x5291
    b7eb:	c3                   	ret
    b7ec:	27                   	(bad)
    b7ed:	00 00                	add    BYTE PTR [rax],al
    b7ef:	c1 27 00             	shl    DWORD PTR [rdi],0x0
    b7f2:	00 0b                	add    BYTE PTR [rbx],cl
    b7f4:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    b7f7:	00 0b                	add    BYTE PTR [rbx],cl
    b7f9:	79 52                	jns    b84d <_end+0x5835>
    b7fb:	00 00                	add    BYTE PTR [rax],al
    b7fd:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b800:	00 00                	add    BYTE PTR [rax],al
    b802:	15 9d 52 00 00       	adc    eax,0x529d
    b807:	cf                   	iret
    b808:	27                   	(bad)
    b809:	00 00                	add    BYTE PTR [rax],al
    b80b:	cb                   	retf
    b80c:	27                   	(bad)
    b80d:	00 00                	add    BYTE PTR [rax],al
    b80f:	0a 9a 33 00 00 00    	or     bl,BYTE PTR [rdx+0x33]
    b815:	00 00                	add    BYTE PTR [rax],al
    b817:	00 e5                	add    ch,ah
    b819:	3c 00                	cmp    al,0x0
    b81b:	00 00                	add    BYTE PTR [rax],al
    b81d:	61                   	(bad)
    b81e:	00 00                	add    BYTE PTR [rax],al
    b820:	03 01                	add    eax,DWORD PTR [rcx]
    b822:	55                   	push   rbp
    b823:	09 03                	or     DWORD PTR [rbx],eax
    b825:	60                   	(bad)
    b826:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b829:	00 00                	add    BYTE PTR [rax],al
    b82b:	00 00                	add    BYTE PTR [rax],al
    b82d:	03 01                	add    eax,DWORD PTR [rcx]
    b82f:	54                   	push   rsp
    b830:	09 03                	or     DWORD PTR [rbx],eax
    b832:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b836:	00 00                	add    BYTE PTR [rax],al
    b838:	00 00                	add    BYTE PTR [rax],al
    b83a:	00 0a                	add    BYTE PTR [rdx],cl
    b83c:	b7 33                	mov    bh,0x33
    b83e:	00 00                	add    BYTE PTR [rax],al
    b840:	00 00                	add    BYTE PTR [rax],al
    b842:	00 00                	add    BYTE PTR [rax],al
    b844:	4d                   	rex.WRB
    b845:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b848:	20 61 00             	and    BYTE PTR [rcx+0x0],ah
    b84b:	00 03                	add    BYTE PTR [rbx],al
    b84d:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b850:	91                   	xchg   ecx,eax
    b851:	a8 7f                	test   al,0x7f
    b853:	06                   	(bad)
    b854:	03 01                	add    eax,DWORD PTR [rcx]
    b856:	58                   	pop    rax
    b857:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b85a:	00 07                	add    BYTE PTR [rdi],al
    b85c:	c1 33 00             	shl    DWORD PTR [rbx],0x0
    b85f:	00 00                	add    BYTE PTR [rax],al
    b861:	00 00                	add    BYTE PTR [rax],al
    b863:	00 33                	add    BYTE PTR [rbx],dh
    b865:	3c 00                	cmp    al,0x0
    b867:	00 03                	add    BYTE PTR [rbx],al
    b869:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b86c:	91                   	xchg   ecx,eax
    b86d:	a8 7f                	test   al,0x7f
    b86f:	06                   	(bad)
    b870:	00 00                	add    BYTE PTR [rax],al
    b872:	19 d6                	sbb    esi,edx
    b874:	71 00                	jno    b876 <_end+0x585e>
    b876:	00 c1                	add    cl,al
    b878:	33 00                	xor    eax,DWORD PTR [rax]
    b87a:	00 00                	add    BYTE PTR [rax],al
    b87c:	00 00                	add    BYTE PTR [rax],al
    b87e:	00 02                	add    BYTE PTR [rdx],al
    b880:	00 c1                	add    cl,al
    b882:	33 00                	xor    eax,DWORD PTR [rax]
    b884:	00 00                	add    BYTE PTR [rax],al
    b886:	00 00                	add    BYTE PTR [rax],al
    b888:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b88b:	00 00                	add    BYTE PTR [rax],al
    b88d:	00 00                	add    BYTE PTR [rax],al
    b88f:	00 00                	add    BYTE PTR [rax],al
    b891:	01 23                	add    DWORD PTR [rbx],esp
    b893:	34 05                	xor    al,0x5
    b895:	e4 71                	in     al,0x71
    b897:	00 00                	add    BYTE PTR [rax],al
    b899:	e2 27                	loop   b8c2 <_end+0x58aa>
    b89b:	00 00                	add    BYTE PTR [rax],al
    b89d:	e0 27                	loopne b8c6 <_end+0x58ae>
    b89f:	00 00                	add    BYTE PTR [rax],al
    b8a1:	07                   	(bad)
    b8a2:	cd 33                	int    0x33
    b8a4:	00 00                	add    BYTE PTR [rax],al
    b8a6:	00 00                	add    BYTE PTR [rax],al
    b8a8:	00 00                	add    BYTE PTR [rax],al
    b8aa:	9b                   	fwait
    b8ab:	75 00                	jne    b8ad <_end+0x5895>
    b8ad:	00 03                	add    BYTE PTR [rbx],al
    b8af:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b8b2:	03 c0                	add    eax,eax
    b8b4:	45 00 00             	add    BYTE PTR [r8],r8b
    b8b7:	00 00                	add    BYTE PTR [rax],al
    b8b9:	00 00                	add    BYTE PTR [rax],al
    b8bb:	00 00                	add    BYTE PTR [rax],al
    b8bd:	00 16                	add    BYTE PTR [rsi],dl
    b8bf:	b0 30                	mov    al,0x30
    b8c1:	00 00                	add    BYTE PTR [rax],al
    b8c3:	00 00                	add    BYTE PTR [rax],al
    b8c5:	00 00                	add    BYTE PTR [rax],al
    b8c7:	74 00                	je     b8c9 <_end+0x58b1>
    b8c9:	00 00                	add    BYTE PTR [rax],al
    b8cb:	00 00                	add    BYTE PTR [rax],al
    b8cd:	00 00                	add    BYTE PTR [rax],al
    b8cf:	5e                   	pop    rsi
    b8d0:	63 00                	movsxd eax,DWORD PTR [rax]
    b8d2:	00 17                	add    BYTE PTR [rdi],dl
    b8d4:	9e                   	sahf
    b8d5:	15 00 00 25 09       	adc    eax,0x9250000
    b8da:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    b8dd:	00 09                	add    BYTE PTR [rcx],cl
    b8df:	d6                   	(bad)
    b8e0:	71 00                	jno    b8e2 <_end+0x58ca>
    b8e2:	00 b0 30 00 00 00    	add    BYTE PTR [rax+0x30],dh
    b8e8:	00 00                	add    BYTE PTR [rax],al
    b8ea:	00 03                	add    BYTE PTR [rbx],al
    b8ec:	00 b0 30 00 00 00    	add    BYTE PTR [rax+0x30],dh
    b8f2:	00 00                	add    BYTE PTR [rax],al
    b8f4:	00 0f                	add    BYTE PTR [rdi],cl
    b8f6:	00 00                	add    BYTE PTR [rax],al
    b8f8:	00 00                	add    BYTE PTR [rax],al
    b8fa:	00 00                	add    BYTE PTR [rax],al
    b8fc:	00 25 09 ea 61 00    	add    BYTE PTR [rip+0x61ea09],ah        # 62a30b <_end+0x6242f3>
    b902:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12aec <_end+0xcad4>
    b908:	f1                   	int1
    b909:	27                   	(bad)
    b90a:	00 00                	add    BYTE PTR [rax],al
    b90c:	ef                   	out    dx,eax
    b90d:	27                   	(bad)
    b90e:	00 00                	add    BYTE PTR [rax],al
    b910:	07                   	(bad)
    b911:	bf 30 00 00 00       	mov    edi,0x30
    b916:	00 00                	add    BYTE PTR [rax],al
    b918:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b91e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b921:	7f 00                	jg     b923 <_end+0x590b>
    b923:	00 00                	add    BYTE PTR [rax],al
    b925:	09 d6                	or     esi,edx
    b927:	71 00                	jno    b929 <_end+0x5911>
    b929:	00 bf 30 00 00 00    	add    BYTE PTR [rdi+0x30],bh
    b92f:	00 00                	add    BYTE PTR [rax],al
    b931:	00 02                	add    BYTE PTR [rdx],al
    b933:	00 bf 30 00 00 00    	add    BYTE PTR [rdi+0x30],bh
    b939:	00 00                	add    BYTE PTR [rax],al
    b93b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b93e:	00 00                	add    BYTE PTR [rax],al
    b940:	00 00                	add    BYTE PTR [rax],al
    b942:	00 00                	add    BYTE PTR [rax],al
    b944:	25 09 38 62 00       	and    eax,0x623809
    b949:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12b33 <_end+0xcb1b>
    b94f:	00 28                	add    BYTE PTR [rax],ch
    b951:	00 00                	add    BYTE PTR [rax],al
    b953:	fe                   	(bad)
    b954:	27                   	(bad)
    b955:	00 00                	add    BYTE PTR [rax],al
    b957:	07                   	(bad)
    b958:	cb                   	retf
    b959:	30 00                	xor    BYTE PTR [rax],al
    b95b:	00 00                	add    BYTE PTR [rax],al
    b95d:	00 00                	add    BYTE PTR [rax],al
    b95f:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b965:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b968:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    b96c:	00 00                	add    BYTE PTR [rax],al
    b96e:	00 00                	add    BYTE PTR [rax],al
    b970:	00 00                	add    BYTE PTR [rax],al
    b972:	00 09                	add    BYTE PTR [rcx],cl
    b974:	d6                   	(bad)
    b975:	71 00                	jno    b977 <_end+0x595f>
    b977:	00 cb                	add    bl,cl
    b979:	30 00                	xor    BYTE PTR [rax],al
    b97b:	00 00                	add    BYTE PTR [rax],al
    b97d:	00 00                	add    BYTE PTR [rax],al
    b97f:	00 02                	add    BYTE PTR [rdx],al
    b981:	00 cb                	add    bl,cl
    b983:	30 00                	xor    BYTE PTR [rax],al
    b985:	00 00                	add    BYTE PTR [rax],al
    b987:	00 00                	add    BYTE PTR [rax],al
    b989:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b98c:	00 00                	add    BYTE PTR [rax],al
    b98e:	00 00                	add    BYTE PTR [rax],al
    b990:	00 00                	add    BYTE PTR [rax],al
    b992:	25 09 86 62 00       	and    eax,0x628609
    b997:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12b81 <_end+0xcb69>
    b99d:	0f 28 00             	movaps xmm0,XMMWORD PTR [rax]
    b9a0:	00 0d 28 00 00 07    	add    BYTE PTR [rip+0x7000028],cl        # 700b9ce <_end+0x70059b6>
    b9a6:	d7                   	xlat   BYTE PTR ds:[rbx]
    b9a7:	30 00                	xor    BYTE PTR [rax],al
    b9a9:	00 00                	add    BYTE PTR [rax],al
    b9ab:	00 00                	add    BYTE PTR [rax],al
    b9ad:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b9b3:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b9b6:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b9c1:	1c 5b                	sbb    al,0x5b
    b9c3:	52                   	push   rdx
    b9c4:	00 00                	add    BYTE PTR [rax],al
    b9c6:	d7                   	xlat   BYTE PTR ds:[rbx]
    b9c7:	30 00                	xor    BYTE PTR [rax],al
    b9c9:	00 00                	add    BYTE PTR [rax],al
    b9cb:	00 00                	add    BYTE PTR [rax],al
    b9cd:	00 03                	add    BYTE PTR [rbx],al
    b9cf:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
    b9d2:	00 00                	add    BYTE PTR [rax],al
    b9d4:	25 09 26 63 00       	and    eax,0x632609
    b9d9:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 10c70 <_end+0xac58>
    b9df:	1e                   	(bad)
    b9e0:	28 00                	sub    BYTE PTR [rax],al
    b9e2:	00 1c 28             	add    BYTE PTR [rax+rbp*1],bl
    b9e5:	00 00                	add    BYTE PTR [rax],al
    b9e7:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b9ed:	79 52                	jns    ba41 <_end+0x5a29>
    b9ef:	00 00                	add    BYTE PTR [rax],al
    b9f1:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b9f4:	00 00                	add    BYTE PTR [rax],al
    b9f6:	2e 14 04             	cs adc al,0x4
    b9f9:	00 00                	add    BYTE PTR [rax],al
    b9fb:	15 9d 52 00 00       	adc    eax,0x529d
    ba00:	2c 28                	sub    al,0x28
    ba02:	00 00                	add    BYTE PTR [rax],al
    ba04:	26 28 00             	es sub BYTE PTR [rax],al
    ba07:	00 0a                	add    BYTE PTR [rdx],cl
    ba09:	f2 30 00             	repnz xor BYTE PTR [rax],al
    ba0c:	00 00                	add    BYTE PTR [rax],al
    ba0e:	00 00                	add    BYTE PTR [rax],al
    ba10:	00 e5                	add    ch,ah
    ba12:	3c 00                	cmp    al,0x0
    ba14:	00 f9                	add    cl,bh
    ba16:	62                   	(bad)
    ba17:	00 00                	add    BYTE PTR [rax],al
    ba19:	03 01                	add    eax,DWORD PTR [rcx]
    ba1b:	55                   	push   rbp
    ba1c:	09 03                	or     DWORD PTR [rbx],eax
    ba1e:	98                   	cwde
    ba1f:	45 00 00             	add    BYTE PTR [r8],r8b
    ba22:	00 00                	add    BYTE PTR [rax],al
    ba24:	00 00                	add    BYTE PTR [rax],al
    ba26:	03 01                	add    eax,DWORD PTR [rcx]
    ba28:	54                   	push   rsp
    ba29:	09 03                	or     DWORD PTR [rbx],eax
    ba2b:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ba2f:	00 00                	add    BYTE PTR [rax],al
    ba31:	00 00                	add    BYTE PTR [rax],al
    ba33:	00 0a                	add    BYTE PTR [rdx],cl
    ba35:	0d 31 00 00 00       	or     eax,0x31
    ba3a:	00 00                	add    BYTE PTR [rax],al
    ba3c:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    ba3f:	00 00                	add    BYTE PTR [rax],al
    ba41:	17                   	(bad)
    ba42:	63 00                	movsxd eax,DWORD PTR [rax]
    ba44:	00 03                	add    BYTE PTR [rbx],al
    ba46:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ba49:	73 00                	jae    ba4b <_end+0x5a33>
    ba4b:	03 01                	add    eax,DWORD PTR [rcx]
    ba4d:	58                   	pop    rax
    ba4e:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ba51:	00 20                	add    BYTE PTR [rax],ah
    ba53:	1c 31                	sbb    al,0x31
    ba55:	00 00                	add    BYTE PTR [rax],al
    ba57:	00 00                	add    BYTE PTR [rax],al
    ba59:	00 00                	add    BYTE PTR [rax],al
    ba5b:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    ba5e:	00 00                	add    BYTE PTR [rax],al
    ba60:	00 39                	add    BYTE PTR [rcx],bh
    ba62:	d6                   	(bad)
    ba63:	71 00                	jno    ba65 <_end+0x5a4d>
    ba65:	00 1c 31             	add    BYTE PTR [rcx+rsi*1],bl
    ba68:	00 00                	add    BYTE PTR [rax],al
    ba6a:	00 00                	add    BYTE PTR [rax],al
    ba6c:	00 00                	add    BYTE PTR [rax],al
    ba6e:	02 00                	add    al,BYTE PTR [rax]
    ba70:	1f                   	(bad)
    ba71:	04 00                	add    al,0x0
    ba73:	00 25 09 05 e4 71    	add    BYTE PTR [rip+0x71e40509],ah        # 71e4bf82 <_end+0x71e45f6a>
    ba79:	00 00                	add    BYTE PTR [rax],al
    ba7b:	44 28 00             	sub    BYTE PTR [rax],r8b
    ba7e:	00 42 28             	add    BYTE PTR [rdx+0x28],al
    ba81:	00 00                	add    BYTE PTR [rax],al
    ba83:	07                   	(bad)
    ba84:	24 31                	and    al,0x31
    ba86:	00 00                	add    BYTE PTR [rax],al
    ba88:	00 00                	add    BYTE PTR [rax],al
    ba8a:	00 00                	add    BYTE PTR [rax],al
    ba8c:	9b                   	fwait
    ba8d:	75 00                	jne    ba8f <_end+0x5a77>
    ba8f:	00 03                	add    BYTE PTR [rbx],al
    ba91:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ba94:	73 00                	jae    ba96 <_end+0x5a7e>
    ba96:	00 00                	add    BYTE PTR [rax],al
    ba98:	00 16                	add    BYTE PTR [rsi],dl
    ba9a:	24 31                	and    al,0x31
    ba9c:	00 00                	add    BYTE PTR [rax],al
    ba9e:	00 00                	add    BYTE PTR [rax],al
    baa0:	00 00                	add    BYTE PTR [rax],al
    baa2:	5f                   	pop    rdi
    baa3:	00 00                	add    BYTE PTR [rax],al
    baa5:	00 00                	add    BYTE PTR [rax],al
    baa7:	00 00                	add    BYTE PTR [rax],al
    baa9:	00 4c 65 00          	add    BYTE PTR [rbp+riz*2+0x0],cl
    baad:	00 17                	add    BYTE PTR [rdi],dl
    baaf:	9a                   	(bad)
    bab0:	15 00 00 26 09       	adc    eax,0x9260000
    bab5:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    bab8:	00 09                	add    BYTE PTR [rcx],cl
    baba:	d6                   	(bad)
    babb:	71 00                	jno    babd <_end+0x5aa5>
    babd:	00 24 31             	add    BYTE PTR [rcx+rsi*1],ah
    bac0:	00 00                	add    BYTE PTR [rax],al
    bac2:	00 00                	add    BYTE PTR [rax],al
    bac4:	00 00                	add    BYTE PTR [rax],al
    bac6:	04 00                	add    al,0x0
    bac8:	24 31                	and    al,0x31
    baca:	00 00                	add    BYTE PTR [rax],al
    bacc:	00 00                	add    BYTE PTR [rax],al
    bace:	00 00                	add    BYTE PTR [rax],al
    bad0:	08 00                	or     BYTE PTR [rax],al
    bad2:	00 00                	add    BYTE PTR [rax],al
    bad4:	00 00                	add    BYTE PTR [rax],al
    bad6:	00 00                	add    BYTE PTR [rax],al
    bad8:	26 09 c5             	es or  ebp,eax
    badb:	63 00                	movsxd eax,DWORD PTR [rax]
    badd:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12cc7 <_end+0xccaf>
    bae3:	53                   	push   rbx
    bae4:	28 00                	sub    BYTE PTR [rax],al
    bae6:	00 51 28             	add    BYTE PTR [rcx+0x28],dl
    bae9:	00 00                	add    BYTE PTR [rax],al
    baeb:	07                   	(bad)
    baec:	2c 31                	sub    al,0x31
    baee:	00 00                	add    BYTE PTR [rax],al
    baf0:	00 00                	add    BYTE PTR [rax],al
    baf2:	00 00                	add    BYTE PTR [rax],al
    baf4:	9b                   	fwait
    baf5:	75 00                	jne    baf7 <_end+0x5adf>
    baf7:	00 03                	add    BYTE PTR [rbx],al
    baf9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bafc:	7f 00                	jg     bafe <_end+0x5ae6>
    bafe:	00 00                	add    BYTE PTR [rax],al
    bb00:	09 d6                	or     esi,edx
    bb02:	71 00                	jno    bb04 <_end+0x5aec>
    bb04:	00 2c 31             	add    BYTE PTR [rcx+rsi*1],ch
    bb07:	00 00                	add    BYTE PTR [rax],al
    bb09:	00 00                	add    BYTE PTR [rax],al
    bb0b:	00 00                	add    BYTE PTR [rax],al
    bb0d:	02 00                	add    al,BYTE PTR [rax]
    bb0f:	2c 31                	sub    al,0x31
    bb11:	00 00                	add    BYTE PTR [rax],al
    bb13:	00 00                	add    BYTE PTR [rax],al
    bb15:	00 00                	add    BYTE PTR [rax],al
    bb17:	08 00                	or     BYTE PTR [rax],al
    bb19:	00 00                	add    BYTE PTR [rax],al
    bb1b:	00 00                	add    BYTE PTR [rax],al
    bb1d:	00 00                	add    BYTE PTR [rax],al
    bb1f:	26 09 0c 64          	es or  DWORD PTR [rsp+riz*2],ecx
    bb23:	00 00                	add    BYTE PTR [rax],al
    bb25:	05 e4 71 00 00       	add    eax,0x71e4
    bb2a:	62                   	(bad)
    bb2b:	28 00                	sub    BYTE PTR [rax],al
    bb2d:	00 60 28             	add    BYTE PTR [rax+0x28],ah
    bb30:	00 00                	add    BYTE PTR [rax],al
    bb32:	07                   	(bad)
    bb33:	34 31                	xor    al,0x31
    bb35:	00 00                	add    BYTE PTR [rax],al
    bb37:	00 00                	add    BYTE PTR [rax],al
    bb39:	00 00                	add    BYTE PTR [rax],al
    bb3b:	9b                   	fwait
    bb3c:	75 00                	jne    bb3e <_end+0x5b26>
    bb3e:	00 03                	add    BYTE PTR [rbx],al
    bb40:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bb43:	7d 00                	jge    bb45 <_end+0x5b2d>
    bb45:	00 00                	add    BYTE PTR [rax],al
    bb47:	09 d6                	or     esi,edx
    bb49:	71 00                	jno    bb4b <_end+0x5b33>
    bb4b:	00 34 31             	add    BYTE PTR [rcx+rsi*1],dh
    bb4e:	00 00                	add    BYTE PTR [rax],al
    bb50:	00 00                	add    BYTE PTR [rax],al
    bb52:	00 00                	add    BYTE PTR [rax],al
    bb54:	02 00                	add    al,BYTE PTR [rax]
    bb56:	34 31                	xor    al,0x31
    bb58:	00 00                	add    BYTE PTR [rax],al
    bb5a:	00 00                	add    BYTE PTR [rax],al
    bb5c:	00 00                	add    BYTE PTR [rax],al
    bb5e:	0c 00                	or     al,0x0
    bb60:	00 00                	add    BYTE PTR [rax],al
    bb62:	00 00                	add    BYTE PTR [rax],al
    bb64:	00 00                	add    BYTE PTR [rax],al
    bb66:	26 09 5a 64          	es or  DWORD PTR [rdx+0x64],ebx
    bb6a:	00 00                	add    BYTE PTR [rax],al
    bb6c:	05 e4 71 00 00       	add    eax,0x71e4
    bb71:	71 28                	jno    bb9b <_end+0x5b83>
    bb73:	00 00                	add    BYTE PTR [rax],al
    bb75:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    bb76:	28 00                	sub    BYTE PTR [rax],al
    bb78:	00 07                	add    BYTE PTR [rdi],al
    bb7a:	40 31 00             	rex xor DWORD PTR [rax],eax
    bb7d:	00 00                	add    BYTE PTR [rax],al
    bb7f:	00 00                	add    BYTE PTR [rax],al
    bb81:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bb87:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bb8a:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bb95:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bb98:	00 00                	add    BYTE PTR [rax],al
    bb9a:	45 31 00             	xor    DWORD PTR [r8],r8d
    bb9d:	00 00                	add    BYTE PTR [rax],al
    bb9f:	00 00                	add    BYTE PTR [rax],al
    bba1:	00 00                	add    BYTE PTR [rax],al
    bba3:	00 45 31             	add    BYTE PTR [rbp+0x31],al
    bba6:	00 00                	add    BYTE PTR [rax],al
    bba8:	00 00                	add    BYTE PTR [rax],al
    bbaa:	00 00                	add    BYTE PTR [rax],al
    bbac:	36 00 00             	ss add BYTE PTR [rax],al
    bbaf:	00 00                	add    BYTE PTR [rax],al
    bbb1:	00 00                	add    BYTE PTR [rax],al
    bbb3:	00 26                	add    BYTE PTR [rsi],ah
    bbb5:	09 07                	or     DWORD PTR [rdi],eax
    bbb7:	65 00 00             	add    BYTE PTR gs:[rax],al
    bbba:	05 91 52 00 00       	add    eax,0x5291
    bbbf:	80 28 00             	sub    BYTE PTR [rax],0x0
    bbc2:	00 7e 28             	add    BYTE PTR [rsi+0x28],bh
    bbc5:	00 00                	add    BYTE PTR [rax],al
    bbc7:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    bbcd:	79 52                	jns    bc21 <_end+0x5c09>
    bbcf:	00 00                	add    BYTE PTR [rax],al
    bbd1:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bbd4:	00 00                	add    BYTE PTR [rax],al
    bbd6:	15 9d 52 00 00       	adc    eax,0x529d
    bbdb:	8c 28                	mov    WORD PTR [rax],gs
    bbdd:	00 00                	add    BYTE PTR [rax],al
    bbdf:	88 28                	mov    BYTE PTR [rax],ch
    bbe1:	00 00                	add    BYTE PTR [rax],al
    bbe3:	0a 58 31             	or     bl,BYTE PTR [rax+0x31]
    bbe6:	00 00                	add    BYTE PTR [rax],al
    bbe8:	00 00                	add    BYTE PTR [rax],al
    bbea:	00 00                	add    BYTE PTR [rax],al
    bbec:	e5 3c                	in     eax,0x3c
    bbee:	00 00                	add    BYTE PTR [rax],al
    bbf0:	d4                   	(bad)
    bbf1:	64 00 00             	add    BYTE PTR fs:[rax],al
    bbf4:	03 01                	add    eax,DWORD PTR [rcx]
    bbf6:	55                   	push   rbp
    bbf7:	09 03                	or     DWORD PTR [rbx],eax
    bbf9:	e0 45                	loopne bc40 <_end+0x5c28>
    bbfb:	00 00                	add    BYTE PTR [rax],al
    bbfd:	00 00                	add    BYTE PTR [rax],al
    bbff:	00 00                	add    BYTE PTR [rax],al
    bc01:	03 01                	add    eax,DWORD PTR [rcx]
    bc03:	54                   	push   rsp
    bc04:	09 03                	or     DWORD PTR [rbx],eax
    bc06:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bc0a:	00 00                	add    BYTE PTR [rax],al
    bc0c:	00 00                	add    BYTE PTR [rax],al
    bc0e:	00 0a                	add    BYTE PTR [rdx],cl
    bc10:	73 31                	jae    bc43 <_end+0x5c2b>
    bc12:	00 00                	add    BYTE PTR [rax],al
    bc14:	00 00                	add    BYTE PTR [rax],al
    bc16:	00 00                	add    BYTE PTR [rax],al
    bc18:	4d                   	rex.WRB
    bc19:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bc1c:	f2 64 00 00          	repnz add BYTE PTR fs:[rax],al
    bc20:	03 01                	add    eax,DWORD PTR [rcx]
    bc22:	55                   	push   rbp
    bc23:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bc26:	03 01                	add    eax,DWORD PTR [rcx]
    bc28:	58                   	pop    rax
    bc29:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bc2c:	00 07                	add    BYTE PTR [rdi],al
    bc2e:	7b 31                	jnp    bc61 <_end+0x5c49>
    bc30:	00 00                	add    BYTE PTR [rax],al
    bc32:	00 00                	add    BYTE PTR [rax],al
    bc34:	00 00                	add    BYTE PTR [rax],al
    bc36:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    bc39:	00 03                	add    BYTE PTR [rbx],al
    bc3b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bc3e:	7d 00                	jge    bc40 <_end+0x5c28>
    bc40:	00 00                	add    BYTE PTR [rax],al
    bc42:	19 d6                	sbb    esi,edx
    bc44:	71 00                	jno    bc46 <_end+0x5c2e>
    bc46:	00 7b 31             	add    BYTE PTR [rbx+0x31],bh
    bc49:	00 00                	add    BYTE PTR [rax],al
    bc4b:	00 00                	add    BYTE PTR [rax],al
    bc4d:	00 00                	add    BYTE PTR [rax],al
    bc4f:	02 00                	add    al,BYTE PTR [rax]
    bc51:	7b 31                	jnp    bc84 <_end+0x5c6c>
    bc53:	00 00                	add    BYTE PTR [rax],al
    bc55:	00 00                	add    BYTE PTR [rax],al
    bc57:	00 00                	add    BYTE PTR [rax],al
    bc59:	08 00                	or     BYTE PTR [rax],al
    bc5b:	00 00                	add    BYTE PTR [rax],al
    bc5d:	00 00                	add    BYTE PTR [rax],al
    bc5f:	00 00                	add    BYTE PTR [rax],al
    bc61:	01 26                	add    DWORD PTR [rsi],esp
    bc63:	09 05 e4 71 00 00    	or     DWORD PTR [rip+0x71e4],eax        # 12e4d <_end+0xce35>
    bc69:	9d                   	popf
    bc6a:	28 00                	sub    BYTE PTR [rax],al
    bc6c:	00 9b 28 00 00 07    	add    BYTE PTR [rbx+0x7000028],bl
    bc72:	83 31 00             	xor    DWORD PTR [rcx],0x0
    bc75:	00 00                	add    BYTE PTR [rax],al
    bc77:	00 00                	add    BYTE PTR [rax],al
    bc79:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bc7f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bc82:	73 00                	jae    bc84 <_end+0x5c6c>
    bc84:	00 00                	add    BYTE PTR [rax],al
    bc86:	00 16                	add    BYTE PTR [rsi],dl
    bc88:	83 31 00             	xor    DWORD PTR [rcx],0x0
    bc8b:	00 00                	add    BYTE PTR [rax],al
    bc8d:	00 00                	add    BYTE PTR [rax],al
    bc8f:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    bc92:	00 00                	add    BYTE PTR [rax],al
    bc94:	00 00                	add    BYTE PTR [rax],al
    bc96:	00 00                	add    BYTE PTR [rax],al
    bc98:	41                   	rex.B
    bc99:	67 00 00             	add    BYTE PTR [eax],al
    bc9c:	17                   	(bad)
    bc9d:	dd 17                	fst    QWORD PTR [rdi]
    bc9f:	00 00                	add    BYTE PTR [rax],al
    bca1:	27                   	(bad)
    bca2:	09 db                	or     ebx,ebx
    bca4:	41 00 00             	add    BYTE PTR [r8],al
    bca7:	09 d6                	or     esi,edx
    bca9:	71 00                	jno    bcab <_end+0x5c93>
    bcab:	00 83 31 00 00 00    	add    BYTE PTR [rbx+0x31],al
    bcb1:	00 00                	add    BYTE PTR [rax],al
    bcb3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bcb6:	83 31 00             	xor    DWORD PTR [rcx],0x0
    bcb9:	00 00                	add    BYTE PTR [rax],al
    bcbb:	00 00                	add    BYTE PTR [rax],al
    bcbd:	00 08                	add    BYTE PTR [rax],cl
    bcbf:	00 00                	add    BYTE PTR [rax],al
    bcc1:	00 00                	add    BYTE PTR [rax],al
    bcc3:	00 00                	add    BYTE PTR [rax],al
    bcc5:	00 27                	add    BYTE PTR [rdi],ah
    bcc7:	09 b3 65 00 00 05    	or     DWORD PTR [rbx+0x5000065],esi
    bccd:	e4 71                	in     al,0x71
    bccf:	00 00                	add    BYTE PTR [rax],al
    bcd1:	ac                   	lods   al,BYTE PTR ds:[rsi]
    bcd2:	28 00                	sub    BYTE PTR [rax],al
    bcd4:	00 aa 28 00 00 07    	add    BYTE PTR [rdx+0x7000028],ch
    bcda:	8b 31                	mov    esi,DWORD PTR [rcx]
    bcdc:	00 00                	add    BYTE PTR [rax],al
    bcde:	00 00                	add    BYTE PTR [rax],al
    bce0:	00 00                	add    BYTE PTR [rax],al
    bce2:	9b                   	fwait
    bce3:	75 00                	jne    bce5 <_end+0x5ccd>
    bce5:	00 03                	add    BYTE PTR [rbx],al
    bce7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bcea:	7f 00                	jg     bcec <_end+0x5cd4>
    bcec:	00 00                	add    BYTE PTR [rax],al
    bcee:	09 d6                	or     esi,edx
    bcf0:	71 00                	jno    bcf2 <_end+0x5cda>
    bcf2:	00 8b 31 00 00 00    	add    BYTE PTR [rbx+0x31],cl
    bcf8:	00 00                	add    BYTE PTR [rax],al
    bcfa:	00 02                	add    BYTE PTR [rdx],al
    bcfc:	00 8b 31 00 00 00    	add    BYTE PTR [rbx+0x31],cl
    bd02:	00 00                	add    BYTE PTR [rax],al
    bd04:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd07:	00 00                	add    BYTE PTR [rax],al
    bd09:	00 00                	add    BYTE PTR [rax],al
    bd0b:	00 00                	add    BYTE PTR [rax],al
    bd0d:	27                   	(bad)
    bd0e:	09 01                	or     DWORD PTR [rcx],eax
    bd10:	66 00 00             	data16 add BYTE PTR [rax],al
    bd13:	05 e4 71 00 00       	add    eax,0x71e4
    bd18:	bb 28 00 00 b9       	mov    ebx,0xb9000028
    bd1d:	28 00                	sub    BYTE PTR [rax],al
    bd1f:	00 07                	add    BYTE PTR [rdi],al
    bd21:	97                   	xchg   edi,eax
    bd22:	31 00                	xor    DWORD PTR [rax],eax
    bd24:	00 00                	add    BYTE PTR [rax],al
    bd26:	00 00                	add    BYTE PTR [rax],al
    bd28:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bd2e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bd31:	03 d4                	add    edx,esp
    bd33:	42 00 00             	rex.X add BYTE PTR [rax],al
    bd36:	00 00                	add    BYTE PTR [rax],al
    bd38:	00 00                	add    BYTE PTR [rax],al
    bd3a:	00 00                	add    BYTE PTR [rax],al
    bd3c:	09 d6                	or     esi,edx
    bd3e:	71 00                	jno    bd40 <_end+0x5d28>
    bd40:	00 97 31 00 00 00    	add    BYTE PTR [rdi+0x31],dl
    bd46:	00 00                	add    BYTE PTR [rax],al
    bd48:	00 02                	add    BYTE PTR [rdx],al
    bd4a:	00 97 31 00 00 00    	add    BYTE PTR [rdi+0x31],dl
    bd50:	00 00                	add    BYTE PTR [rax],al
    bd52:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd55:	00 00                	add    BYTE PTR [rax],al
    bd57:	00 00                	add    BYTE PTR [rax],al
    bd59:	00 00                	add    BYTE PTR [rax],al
    bd5b:	27                   	(bad)
    bd5c:	09 4f 66             	or     DWORD PTR [rdi+0x66],ecx
    bd5f:	00 00                	add    BYTE PTR [rax],al
    bd61:	05 e4 71 00 00       	add    eax,0x71e4
    bd66:	ca 28 00             	retf   0x28
    bd69:	00 c8                	add    al,cl
    bd6b:	28 00                	sub    BYTE PTR [rax],al
    bd6d:	00 07                	add    BYTE PTR [rdi],al
    bd6f:	a3 31 00 00 00 00 00 	movabs ds:0x9b00000000000031,eax
    bd76:	00 9b 
    bd78:	75 00                	jne    bd7a <_end+0x5d62>
    bd7a:	00 03                	add    BYTE PTR [rbx],al
    bd7c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bd7f:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bd8a:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bd8d:	00 00                	add    BYTE PTR [rax],al
    bd8f:	a3 31 00 00 00 00 00 	movabs ds:0x300000000000031,eax
    bd96:	00 03 
    bd98:	00 a3 31 00 00 00    	add    BYTE PTR [rbx+0x31],ah
    bd9e:	00 00                	add    BYTE PTR [rax],al
    bda0:	00 36                	add    BYTE PTR [rsi],dh
    bda2:	00 00                	add    BYTE PTR [rax],al
    bda4:	00 00                	add    BYTE PTR [rax],al
    bda6:	00 00                	add    BYTE PTR [rax],al
    bda8:	00 27                	add    BYTE PTR [rdi],ah
    bdaa:	09 fc                	or     esp,edi
    bdac:	66 00 00             	data16 add BYTE PTR [rax],al
    bdaf:	05 91 52 00 00       	add    eax,0x5291
    bdb4:	d9 28                	fldcw  WORD PTR [rax]
    bdb6:	00 00                	add    BYTE PTR [rax],al
    bdb8:	d7                   	xlat   BYTE PTR ds:[rbx]
    bdb9:	28 00                	sub    BYTE PTR [rax],al
    bdbb:	00 0b                	add    BYTE PTR [rbx],cl
    bdbd:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    bdc0:	00 0b                	add    BYTE PTR [rbx],cl
    bdc2:	79 52                	jns    be16 <_end+0x5dfe>
    bdc4:	00 00                	add    BYTE PTR [rax],al
    bdc6:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bdc9:	00 00                	add    BYTE PTR [rax],al
    bdcb:	15 9d 52 00 00       	adc    eax,0x529d
    bdd0:	e5 28                	in     eax,0x28
    bdd2:	00 00                	add    BYTE PTR [rax],al
    bdd4:	e1 28                	loope  bdfe <_end+0x5de6>
    bdd6:	00 00                	add    BYTE PTR [rax],al
    bdd8:	0a b6 31 00 00 00    	or     dh,BYTE PTR [rsi+0x31]
    bdde:	00 00                	add    BYTE PTR [rax],al
    bde0:	00 e5                	add    ch,ah
    bde2:	3c 00                	cmp    al,0x0
    bde4:	00 c9                	add    cl,cl
    bde6:	66 00 00             	data16 add BYTE PTR [rax],al
    bde9:	03 01                	add    eax,DWORD PTR [rcx]
    bdeb:	55                   	push   rbp
    bdec:	09 03                	or     DWORD PTR [rbx],eax
    bdee:	60                   	(bad)
    bdef:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bdf2:	00 00                	add    BYTE PTR [rax],al
    bdf4:	00 00                	add    BYTE PTR [rax],al
    bdf6:	03 01                	add    eax,DWORD PTR [rcx]
    bdf8:	54                   	push   rsp
    bdf9:	09 03                	or     DWORD PTR [rbx],eax
    bdfb:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bdff:	00 00                	add    BYTE PTR [rax],al
    be01:	00 00                	add    BYTE PTR [rax],al
    be03:	00 0a                	add    BYTE PTR [rdx],cl
    be05:	d1 31                	shl    DWORD PTR [rcx],1
    be07:	00 00                	add    BYTE PTR [rax],al
    be09:	00 00                	add    BYTE PTR [rax],al
    be0b:	00 00                	add    BYTE PTR [rax],al
    be0d:	4d                   	rex.WRB
    be0e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    be11:	e7 66                	out    0x66,eax
    be13:	00 00                	add    BYTE PTR [rax],al
    be15:	03 01                	add    eax,DWORD PTR [rcx]
    be17:	55                   	push   rbp
    be18:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    be1b:	03 01                	add    eax,DWORD PTR [rcx]
    be1d:	58                   	pop    rax
    be1e:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    be21:	00 07                	add    BYTE PTR [rdi],al
    be23:	d9 31                	fnstenv [rcx]
    be25:	00 00                	add    BYTE PTR [rax],al
    be27:	00 00                	add    BYTE PTR [rax],al
    be29:	00 00                	add    BYTE PTR [rax],al
    be2b:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    be2e:	00 03                	add    BYTE PTR [rbx],al
    be30:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be33:	7d 00                	jge    be35 <_end+0x5e1d>
    be35:	00 00                	add    BYTE PTR [rax],al
    be37:	19 d6                	sbb    esi,edx
    be39:	71 00                	jno    be3b <_end+0x5e23>
    be3b:	00 d9                	add    cl,bl
    be3d:	31 00                	xor    DWORD PTR [rax],eax
    be3f:	00 00                	add    BYTE PTR [rax],al
    be41:	00 00                	add    BYTE PTR [rax],al
    be43:	00 02                	add    BYTE PTR [rdx],al
    be45:	00 d9                	add    cl,bl
    be47:	31 00                	xor    DWORD PTR [rax],eax
    be49:	00 00                	add    BYTE PTR [rax],al
    be4b:	00 00                	add    BYTE PTR [rax],al
    be4d:	00 08                	add    BYTE PTR [rax],cl
    be4f:	00 00                	add    BYTE PTR [rax],al
    be51:	00 00                	add    BYTE PTR [rax],al
    be53:	00 00                	add    BYTE PTR [rax],al
    be55:	00 01                	add    BYTE PTR [rcx],al
    be57:	27                   	(bad)
    be58:	09 05 e4 71 00 00    	or     DWORD PTR [rip+0x71e4],eax        # 13042 <_end+0xd02a>
    be5e:	f6 28                	imul   BYTE PTR [rax]
    be60:	00 00                	add    BYTE PTR [rax],al
    be62:	f4                   	hlt
    be63:	28 00                	sub    BYTE PTR [rax],al
    be65:	00 07                	add    BYTE PTR [rdi],al
    be67:	e1 31                	loope  be9a <_end+0x5e82>
    be69:	00 00                	add    BYTE PTR [rax],al
    be6b:	00 00                	add    BYTE PTR [rax],al
    be6d:	00 00                	add    BYTE PTR [rax],al
    be6f:	9b                   	fwait
    be70:	75 00                	jne    be72 <_end+0x5e5a>
    be72:	00 03                	add    BYTE PTR [rbx],al
    be74:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be77:	73 00                	jae    be79 <_end+0x5e61>
    be79:	00 00                	add    BYTE PTR [rax],al
    be7b:	00 16                	add    BYTE PTR [rsi],dl
    be7d:	e1 31                	loope  beb0 <_end+0x5e98>
    be7f:	00 00                	add    BYTE PTR [rax],al
    be81:	00 00                	add    BYTE PTR [rax],al
    be83:	00 00                	add    BYTE PTR [rax],al
    be85:	5e                   	pop    rsi
    be86:	00 00                	add    BYTE PTR [rax],al
    be88:	00 00                	add    BYTE PTR [rax],al
    be8a:	00 00                	add    BYTE PTR [rax],al
    be8c:	00 36                	add    BYTE PTR [rsi],dh
    be8e:	69 00 00 17 cb 1d    	imul   eax,DWORD PTR [rax],0x1dcb1700
    be94:	00 00                	add    BYTE PTR [rax],al
    be96:	28 09                	sub    BYTE PTR [rcx],cl
    be98:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    be9b:	00 09                	add    BYTE PTR [rcx],cl
    be9d:	d6                   	(bad)
    be9e:	71 00                	jno    bea0 <_end+0x5e88>
    bea0:	00 e1                	add    cl,ah
    bea2:	31 00                	xor    DWORD PTR [rax],eax
    bea4:	00 00                	add    BYTE PTR [rax],al
    bea6:	00 00                	add    BYTE PTR [rax],al
    bea8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    beab:	e1 31                	loope  bede <_end+0x5ec6>
    bead:	00 00                	add    BYTE PTR [rax],al
    beaf:	00 00                	add    BYTE PTR [rax],al
    beb1:	00 00                	add    BYTE PTR [rax],al
    beb3:	08 00                	or     BYTE PTR [rax],al
    beb5:	00 00                	add    BYTE PTR [rax],al
    beb7:	00 00                	add    BYTE PTR [rax],al
    beb9:	00 00                	add    BYTE PTR [rax],al
    bebb:	28 09                	sub    BYTE PTR [rcx],cl
    bebd:	a8 67                	test   al,0x67
    bebf:	00 00                	add    BYTE PTR [rax],al
    bec1:	05 e4 71 00 00       	add    eax,0x71e4
    bec6:	05 29 00 00 03       	add    eax,0x3000029
    becb:	29 00                	sub    DWORD PTR [rax],eax
    becd:	00 07                	add    BYTE PTR [rdi],al
    becf:	e9 31 00 00 00       	jmp    bf05 <_end+0x5eed>
    bed4:	00 00                	add    BYTE PTR [rax],al
    bed6:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bedc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bedf:	7f 00                	jg     bee1 <_end+0x5ec9>
    bee1:	00 00                	add    BYTE PTR [rax],al
    bee3:	09 d6                	or     esi,edx
    bee5:	71 00                	jno    bee7 <_end+0x5ecf>
    bee7:	00 e9                	add    cl,ch
    bee9:	31 00                	xor    DWORD PTR [rax],eax
    beeb:	00 00                	add    BYTE PTR [rax],al
    beed:	00 00                	add    BYTE PTR [rax],al
    beef:	00 02                	add    BYTE PTR [rdx],al
    bef1:	00 e9                	add    cl,ch
    bef3:	31 00                	xor    DWORD PTR [rax],eax
    bef5:	00 00                	add    BYTE PTR [rax],al
    bef7:	00 00                	add    BYTE PTR [rax],al
    bef9:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    befc:	00 00                	add    BYTE PTR [rax],al
    befe:	00 00                	add    BYTE PTR [rax],al
    bf00:	00 00                	add    BYTE PTR [rax],al
    bf02:	28 09                	sub    BYTE PTR [rcx],cl
    bf04:	f6 67 00             	mul    BYTE PTR [rdi+0x0]
    bf07:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 130f1 <_end+0xd0d9>
    bf0d:	14 29                	adc    al,0x29
    bf0f:	00 00                	add    BYTE PTR [rax],al
    bf11:	12 29                	adc    ch,BYTE PTR [rcx]
    bf13:	00 00                	add    BYTE PTR [rax],al
    bf15:	07                   	(bad)
    bf16:	f5                   	cmc
    bf17:	31 00                	xor    DWORD PTR [rax],eax
    bf19:	00 00                	add    BYTE PTR [rax],al
    bf1b:	00 00                	add    BYTE PTR [rax],al
    bf1d:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bf23:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf26:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    bf2c:	00 00                	add    BYTE PTR [rax],al
    bf2e:	00 00                	add    BYTE PTR [rax],al
    bf30:	00 09                	add    BYTE PTR [rcx],cl
    bf32:	d6                   	(bad)
    bf33:	71 00                	jno    bf35 <_end+0x5f1d>
    bf35:	00 f5                	add    ch,dh
    bf37:	31 00                	xor    DWORD PTR [rax],eax
    bf39:	00 00                	add    BYTE PTR [rax],al
    bf3b:	00 00                	add    BYTE PTR [rax],al
    bf3d:	00 02                	add    BYTE PTR [rdx],al
    bf3f:	00 f5                	add    ch,dh
    bf41:	31 00                	xor    DWORD PTR [rax],eax
    bf43:	00 00                	add    BYTE PTR [rax],al
    bf45:	00 00                	add    BYTE PTR [rax],al
    bf47:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bf4a:	00 00                	add    BYTE PTR [rax],al
    bf4c:	00 00                	add    BYTE PTR [rax],al
    bf4e:	00 00                	add    BYTE PTR [rax],al
    bf50:	28 09                	sub    BYTE PTR [rcx],cl
    bf52:	44 68 00 00 05 e4    	rex.R push 0xffffffffe4050000
    bf58:	71 00                	jno    bf5a <_end+0x5f42>
    bf5a:	00 23                	add    BYTE PTR [rbx],ah
    bf5c:	29 00                	sub    DWORD PTR [rax],eax
    bf5e:	00 21                	add    BYTE PTR [rcx],ah
    bf60:	29 00                	sub    DWORD PTR [rax],eax
    bf62:	00 07                	add    BYTE PTR [rdi],al
    bf64:	01 32                	add    DWORD PTR [rdx],esi
    bf66:	00 00                	add    BYTE PTR [rax],al
    bf68:	00 00                	add    BYTE PTR [rax],al
    bf6a:	00 00                	add    BYTE PTR [rax],al
    bf6c:	9b                   	fwait
    bf6d:	75 00                	jne    bf6f <_end+0x5f57>
    bf6f:	00 03                	add    BYTE PTR [rbx],al
    bf71:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf74:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bf7f:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bf82:	00 00                	add    BYTE PTR [rax],al
    bf84:	01 32                	add    DWORD PTR [rdx],esi
    bf86:	00 00                	add    BYTE PTR [rax],al
    bf88:	00 00                	add    BYTE PTR [rax],al
    bf8a:	00 00                	add    BYTE PTR [rax],al
    bf8c:	03 00                	add    eax,DWORD PTR [rax]
    bf8e:	01 32                	add    DWORD PTR [rdx],esi
    bf90:	00 00                	add    BYTE PTR [rax],al
    bf92:	00 00                	add    BYTE PTR [rax],al
    bf94:	00 00                	add    BYTE PTR [rax],al
    bf96:	36 00 00             	ss add BYTE PTR [rax],al
    bf99:	00 00                	add    BYTE PTR [rax],al
    bf9b:	00 00                	add    BYTE PTR [rax],al
    bf9d:	00 28                	add    BYTE PTR [rax],ch
    bf9f:	09 f1                	or     ecx,esi
    bfa1:	68 00 00 05 91       	push   0xffffffff91050000
    bfa6:	52                   	push   rdx
    bfa7:	00 00                	add    BYTE PTR [rax],al
    bfa9:	32 29                	xor    ch,BYTE PTR [rcx]
    bfab:	00 00                	add    BYTE PTR [rax],al
    bfad:	30 29                	xor    BYTE PTR [rcx],ch
    bfaf:	00 00                	add    BYTE PTR [rax],al
    bfb1:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    bfb7:	79 52                	jns    c00b <_end+0x5ff3>
    bfb9:	00 00                	add    BYTE PTR [rax],al
    bfbb:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bfbe:	00 00                	add    BYTE PTR [rax],al
    bfc0:	15 9d 52 00 00       	adc    eax,0x529d
    bfc5:	3e 29 00             	ds sub DWORD PTR [rax],eax
    bfc8:	00 3a                	add    BYTE PTR [rdx],bh
    bfca:	29 00                	sub    DWORD PTR [rax],eax
    bfcc:	00 0a                	add    BYTE PTR [rdx],cl
    bfce:	14 32                	adc    al,0x32
    bfd0:	00 00                	add    BYTE PTR [rax],al
    bfd2:	00 00                	add    BYTE PTR [rax],al
    bfd4:	00 00                	add    BYTE PTR [rax],al
    bfd6:	e5 3c                	in     eax,0x3c
    bfd8:	00 00                	add    BYTE PTR [rax],al
    bfda:	be 68 00 00 03       	mov    esi,0x3000068
    bfdf:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bfe2:	03 10                	add    edx,DWORD PTR [rax]
    bfe4:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bfe7:	00 00                	add    BYTE PTR [rax],al
    bfe9:	00 00                	add    BYTE PTR [rax],al
    bfeb:	03 01                	add    eax,DWORD PTR [rcx]
    bfed:	54                   	push   rsp
    bfee:	09 03                	or     DWORD PTR [rbx],eax
    bff0:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bff4:	00 00                	add    BYTE PTR [rax],al
    bff6:	00 00                	add    BYTE PTR [rax],al
    bff8:	00 0a                	add    BYTE PTR [rdx],cl
    bffa:	2f                   	(bad)
    bffb:	32 00                	xor    al,BYTE PTR [rax]
    bffd:	00 00                	add    BYTE PTR [rax],al
    bfff:	00 00                	add    BYTE PTR [rax],al
    c001:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c004:	00 00                	add    BYTE PTR [rax],al
    c006:	dc 68 00             	fsubr  QWORD PTR [rax+0x0]
    c009:	00 03                	add    BYTE PTR [rbx],al
    c00b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c00e:	7d 00                	jge    c010 <_end+0x5ff8>
    c010:	03 01                	add    eax,DWORD PTR [rcx]
    c012:	58                   	pop    rax
    c013:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c016:	00 07                	add    BYTE PTR [rdi],al
    c018:	37                   	(bad)
    c019:	32 00                	xor    al,BYTE PTR [rax]
    c01b:	00 00                	add    BYTE PTR [rax],al
    c01d:	00 00                	add    BYTE PTR [rax],al
    c01f:	00 33                	add    BYTE PTR [rbx],dh
    c021:	3c 00                	cmp    al,0x0
    c023:	00 03                	add    BYTE PTR [rbx],al
    c025:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c028:	7d 00                	jge    c02a <_end+0x6012>
    c02a:	00 00                	add    BYTE PTR [rax],al
    c02c:	19 d6                	sbb    esi,edx
    c02e:	71 00                	jno    c030 <_end+0x6018>
    c030:	00 37                	add    BYTE PTR [rdi],dh
    c032:	32 00                	xor    al,BYTE PTR [rax]
    c034:	00 00                	add    BYTE PTR [rax],al
    c036:	00 00                	add    BYTE PTR [rax],al
    c038:	00 02                	add    BYTE PTR [rdx],al
    c03a:	00 37                	add    BYTE PTR [rdi],dh
    c03c:	32 00                	xor    al,BYTE PTR [rax]
    c03e:	00 00                	add    BYTE PTR [rax],al
    c040:	00 00                	add    BYTE PTR [rax],al
    c042:	00 08                	add    BYTE PTR [rax],cl
    c044:	00 00                	add    BYTE PTR [rax],al
    c046:	00 00                	add    BYTE PTR [rax],al
    c048:	00 00                	add    BYTE PTR [rax],al
    c04a:	00 01                	add    BYTE PTR [rcx],al
    c04c:	28 09                	sub    BYTE PTR [rcx],cl
    c04e:	05 e4 71 00 00       	add    eax,0x71e4
    c053:	4f 29 00             	rex.WRXB sub QWORD PTR [r8],r8
    c056:	00 4d 29             	add    BYTE PTR [rbp+0x29],cl
    c059:	00 00                	add    BYTE PTR [rax],al
    c05b:	07                   	(bad)
    c05c:	3f                   	(bad)
    c05d:	32 00                	xor    al,BYTE PTR [rax]
    c05f:	00 00                	add    BYTE PTR [rax],al
    c061:	00 00                	add    BYTE PTR [rax],al
    c063:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c069:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c06c:	73 00                	jae    c06e <_end+0x6056>
    c06e:	00 00                	add    BYTE PTR [rax],al
    c070:	00 16                	add    BYTE PTR [rsi],dl
    c072:	3f                   	(bad)
    c073:	32 00                	xor    al,BYTE PTR [rax]
    c075:	00 00                	add    BYTE PTR [rax],al
    c077:	00 00                	add    BYTE PTR [rax],al
    c079:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c07c:	00 00                	add    BYTE PTR [rax],al
    c07e:	00 00                	add    BYTE PTR [rax],al
    c080:	00 00                	add    BYTE PTR [rax],al
    c082:	2b 6b 00             	sub    ebp,DWORD PTR [rbx+0x0]
    c085:	00 17                	add    BYTE PTR [rdi],dl
    c087:	43 0d 00 00 29 09    	rex.XB or eax,0x9290000
    c08d:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    c090:	00 09                	add    BYTE PTR [rcx],cl
    c092:	d6                   	(bad)
    c093:	71 00                	jno    c095 <_end+0x607d>
    c095:	00 3f                	add    BYTE PTR [rdi],bh
    c097:	32 00                	xor    al,BYTE PTR [rax]
    c099:	00 00                	add    BYTE PTR [rax],al
    c09b:	00 00                	add    BYTE PTR [rax],al
    c09d:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c0a0:	3f                   	(bad)
    c0a1:	32 00                	xor    al,BYTE PTR [rax]
    c0a3:	00 00                	add    BYTE PTR [rax],al
    c0a5:	00 00                	add    BYTE PTR [rax],al
    c0a7:	00 08                	add    BYTE PTR [rax],cl
    c0a9:	00 00                	add    BYTE PTR [rax],al
    c0ab:	00 00                	add    BYTE PTR [rax],al
    c0ad:	00 00                	add    BYTE PTR [rax],al
    c0af:	00 29                	add    BYTE PTR [rcx],ch
    c0b1:	09 9d 69 00 00 05    	or     DWORD PTR [rbp+0x5000069],ebx
    c0b7:	e4 71                	in     al,0x71
    c0b9:	00 00                	add    BYTE PTR [rax],al
    c0bb:	5e                   	pop    rsi
    c0bc:	29 00                	sub    DWORD PTR [rax],eax
    c0be:	00 5c 29 00          	add    BYTE PTR [rcx+rbp*1+0x0],bl
    c0c2:	00 07                	add    BYTE PTR [rdi],al
    c0c4:	47 32 00             	rex.RXB xor r8b,BYTE PTR [r8]
    c0c7:	00 00                	add    BYTE PTR [rax],al
    c0c9:	00 00                	add    BYTE PTR [rax],al
    c0cb:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c0d1:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c0d4:	7f 00                	jg     c0d6 <_end+0x60be>
    c0d6:	00 00                	add    BYTE PTR [rax],al
    c0d8:	09 d6                	or     esi,edx
    c0da:	71 00                	jno    c0dc <_end+0x60c4>
    c0dc:	00 47 32             	add    BYTE PTR [rdi+0x32],al
    c0df:	00 00                	add    BYTE PTR [rax],al
    c0e1:	00 00                	add    BYTE PTR [rax],al
    c0e3:	00 00                	add    BYTE PTR [rax],al
    c0e5:	02 00                	add    al,BYTE PTR [rax]
    c0e7:	47 32 00             	rex.RXB xor r8b,BYTE PTR [r8]
    c0ea:	00 00                	add    BYTE PTR [rax],al
    c0ec:	00 00                	add    BYTE PTR [rax],al
    c0ee:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c0f1:	00 00                	add    BYTE PTR [rax],al
    c0f3:	00 00                	add    BYTE PTR [rax],al
    c0f5:	00 00                	add    BYTE PTR [rax],al
    c0f7:	29 09                	sub    DWORD PTR [rcx],ecx
    c0f9:	eb 69                	jmp    c164 <_end+0x614c>
    c0fb:	00 00                	add    BYTE PTR [rax],al
    c0fd:	05 e4 71 00 00       	add    eax,0x71e4
    c102:	6d                   	ins    DWORD PTR es:[rdi],dx
    c103:	29 00                	sub    DWORD PTR [rax],eax
    c105:	00 6b 29             	add    BYTE PTR [rbx+0x29],ch
    c108:	00 00                	add    BYTE PTR [rax],al
    c10a:	07                   	(bad)
    c10b:	53                   	push   rbx
    c10c:	32 00                	xor    al,BYTE PTR [rax]
    c10e:	00 00                	add    BYTE PTR [rax],al
    c110:	00 00                	add    BYTE PTR [rax],al
    c112:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c118:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c11b:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    c121:	00 00                	add    BYTE PTR [rax],al
    c123:	00 00                	add    BYTE PTR [rax],al
    c125:	00 09                	add    BYTE PTR [rcx],cl
    c127:	d6                   	(bad)
    c128:	71 00                	jno    c12a <_end+0x6112>
    c12a:	00 53 32             	add    BYTE PTR [rbx+0x32],dl
    c12d:	00 00                	add    BYTE PTR [rax],al
    c12f:	00 00                	add    BYTE PTR [rax],al
    c131:	00 00                	add    BYTE PTR [rax],al
    c133:	02 00                	add    al,BYTE PTR [rax]
    c135:	53                   	push   rbx
    c136:	32 00                	xor    al,BYTE PTR [rax]
    c138:	00 00                	add    BYTE PTR [rax],al
    c13a:	00 00                	add    BYTE PTR [rax],al
    c13c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c13f:	00 00                	add    BYTE PTR [rax],al
    c141:	00 00                	add    BYTE PTR [rax],al
    c143:	00 00                	add    BYTE PTR [rax],al
    c145:	29 09                	sub    DWORD PTR [rcx],ecx
    c147:	39 6a 00             	cmp    DWORD PTR [rdx+0x0],ebp
    c14a:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 13334 <_end+0xd31c>
    c150:	7c 29                	jl     c17b <_end+0x6163>
    c152:	00 00                	add    BYTE PTR [rax],al
    c154:	7a 29                	jp     c17f <_end+0x6167>
    c156:	00 00                	add    BYTE PTR [rax],al
    c158:	07                   	(bad)
    c159:	5f                   	pop    rdi
    c15a:	32 00                	xor    al,BYTE PTR [rax]
    c15c:	00 00                	add    BYTE PTR [rax],al
    c15e:	00 00                	add    BYTE PTR [rax],al
    c160:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c166:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c169:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c174:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c177:	00 00                	add    BYTE PTR [rax],al
    c179:	5f                   	pop    rdi
    c17a:	32 00                	xor    al,BYTE PTR [rax]
    c17c:	00 00                	add    BYTE PTR [rax],al
    c17e:	00 00                	add    BYTE PTR [rax],al
    c180:	00 03                	add    BYTE PTR [rbx],al
    c182:	00 5f 32             	add    BYTE PTR [rdi+0x32],bl
    c185:	00 00                	add    BYTE PTR [rax],al
    c187:	00 00                	add    BYTE PTR [rax],al
    c189:	00 00                	add    BYTE PTR [rax],al
    c18b:	36 00 00             	ss add BYTE PTR [rax],al
    c18e:	00 00                	add    BYTE PTR [rax],al
    c190:	00 00                	add    BYTE PTR [rax],al
    c192:	00 29                	add    BYTE PTR [rcx],ch
    c194:	09 e6                	or     esi,esp
    c196:	6a 00                	push   0x0
    c198:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 1142f <_end+0xb417>
    c19e:	8b 29                	mov    ebp,DWORD PTR [rcx]
    c1a0:	00 00                	add    BYTE PTR [rax],al
    c1a2:	89 29                	mov    DWORD PTR [rcx],ebp
    c1a4:	00 00                	add    BYTE PTR [rax],al
    c1a6:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    c1ac:	79 52                	jns    c200 <_end+0x61e8>
    c1ae:	00 00                	add    BYTE PTR [rax],al
    c1b0:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c1b3:	00 00                	add    BYTE PTR [rax],al
    c1b5:	15 9d 52 00 00       	adc    eax,0x529d
    c1ba:	97                   	xchg   edi,eax
    c1bb:	29 00                	sub    DWORD PTR [rax],eax
    c1bd:	00 93 29 00 00 0a    	add    BYTE PTR [rbx+0xa000029],dl
    c1c3:	72 32                	jb     c1f7 <_end+0x61df>
    c1c5:	00 00                	add    BYTE PTR [rax],al
    c1c7:	00 00                	add    BYTE PTR [rax],al
    c1c9:	00 00                	add    BYTE PTR [rax],al
    c1cb:	e5 3c                	in     eax,0x3c
    c1cd:	00 00                	add    BYTE PTR [rax],al
    c1cf:	b3 6a                	mov    bl,0x6a
    c1d1:	00 00                	add    BYTE PTR [rax],al
    c1d3:	03 01                	add    eax,DWORD PTR [rcx]
    c1d5:	55                   	push   rbp
    c1d6:	09 03                	or     DWORD PTR [rbx],eax
    c1d8:	8e 42 00             	mov    es,WORD PTR [rdx+0x0]
    c1db:	00 00                	add    BYTE PTR [rax],al
    c1dd:	00 00                	add    BYTE PTR [rax],al
    c1df:	00 03                	add    BYTE PTR [rbx],al
    c1e1:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c1e5:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c1e9:	00 00                	add    BYTE PTR [rax],al
    c1eb:	00 00                	add    BYTE PTR [rax],al
    c1ed:	00 0a                	add    BYTE PTR [rdx],cl
    c1ef:	8d 32                	lea    esi,[rdx]
    c1f1:	00 00                	add    BYTE PTR [rax],al
    c1f3:	00 00                	add    BYTE PTR [rax],al
    c1f5:	00 00                	add    BYTE PTR [rax],al
    c1f7:	4d                   	rex.WRB
    c1f8:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c1fb:	d1 6a 00             	shr    DWORD PTR [rdx+0x0],1
    c1fe:	00 03                	add    BYTE PTR [rbx],al
    c200:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c203:	7d 00                	jge    c205 <_end+0x61ed>
    c205:	03 01                	add    eax,DWORD PTR [rcx]
    c207:	58                   	pop    rax
    c208:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c20b:	00 07                	add    BYTE PTR [rdi],al
    c20d:	95                   	xchg   ebp,eax
    c20e:	32 00                	xor    al,BYTE PTR [rax]
    c210:	00 00                	add    BYTE PTR [rax],al
    c212:	00 00                	add    BYTE PTR [rax],al
    c214:	00 33                	add    BYTE PTR [rbx],dh
    c216:	3c 00                	cmp    al,0x0
    c218:	00 03                	add    BYTE PTR [rbx],al
    c21a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c21d:	7d 00                	jge    c21f <_end+0x6207>
    c21f:	00 00                	add    BYTE PTR [rax],al
    c221:	19 d6                	sbb    esi,edx
    c223:	71 00                	jno    c225 <_end+0x620d>
    c225:	00 95 32 00 00 00    	add    BYTE PTR [rbp+0x32],dl
    c22b:	00 00                	add    BYTE PTR [rax],al
    c22d:	00 02                	add    BYTE PTR [rdx],al
    c22f:	00 95 32 00 00 00    	add    BYTE PTR [rbp+0x32],dl
    c235:	00 00                	add    BYTE PTR [rax],al
    c237:	00 08                	add    BYTE PTR [rax],cl
    c239:	00 00                	add    BYTE PTR [rax],al
    c23b:	00 00                	add    BYTE PTR [rax],al
    c23d:	00 00                	add    BYTE PTR [rax],al
    c23f:	00 01                	add    BYTE PTR [rcx],al
    c241:	29 09                	sub    DWORD PTR [rcx],ecx
    c243:	05 e4 71 00 00       	add    eax,0x71e4
    c248:	a8 29                	test   al,0x29
    c24a:	00 00                	add    BYTE PTR [rax],al
    c24c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c24d:	29 00                	sub    DWORD PTR [rax],eax
    c24f:	00 07                	add    BYTE PTR [rdi],al
    c251:	9d                   	popf
    c252:	32 00                	xor    al,BYTE PTR [rax]
    c254:	00 00                	add    BYTE PTR [rax],al
    c256:	00 00                	add    BYTE PTR [rax],al
    c258:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c25e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c261:	73 00                	jae    c263 <_end+0x624b>
    c263:	00 00                	add    BYTE PTR [rax],al
    c265:	00 16                	add    BYTE PTR [rsi],dl
    c267:	9d                   	popf
    c268:	32 00                	xor    al,BYTE PTR [rax]
    c26a:	00 00                	add    BYTE PTR [rax],al
    c26c:	00 00                	add    BYTE PTR [rax],al
    c26e:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c271:	00 00                	add    BYTE PTR [rax],al
    c273:	00 00                	add    BYTE PTR [rax],al
    c275:	00 00                	add    BYTE PTR [rax],al
    c277:	20 6d 00             	and    BYTE PTR [rbp+0x0],ch
    c27a:	00 17                	add    BYTE PTR [rdi],dl
    c27c:	ea                   	(bad)
    c27d:	33 00                	xor    eax,DWORD PTR [rax]
    c27f:	00 2a                	add    BYTE PTR [rdx],ch
    c281:	09 db                	or     ebx,ebx
    c283:	41 00 00             	add    BYTE PTR [r8],al
    c286:	09 d6                	or     esi,edx
    c288:	71 00                	jno    c28a <_end+0x6272>
    c28a:	00 9d 32 00 00 00    	add    BYTE PTR [rbp+0x32],bl
    c290:	00 00                	add    BYTE PTR [rax],al
    c292:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c295:	9d                   	popf
    c296:	32 00                	xor    al,BYTE PTR [rax]
    c298:	00 00                	add    BYTE PTR [rax],al
    c29a:	00 00                	add    BYTE PTR [rax],al
    c29c:	00 08                	add    BYTE PTR [rax],cl
    c29e:	00 00                	add    BYTE PTR [rax],al
    c2a0:	00 00                	add    BYTE PTR [rax],al
    c2a2:	00 00                	add    BYTE PTR [rax],al
    c2a4:	00 2a                	add    BYTE PTR [rdx],ch
    c2a6:	09 92 6b 00 00 05    	or     DWORD PTR [rdx+0x500006b],edx
    c2ac:	e4 71                	in     al,0x71
    c2ae:	00 00                	add    BYTE PTR [rax],al
    c2b0:	b7 29                	mov    bh,0x29
    c2b2:	00 00                	add    BYTE PTR [rax],al
    c2b4:	b5 29                	mov    ch,0x29
    c2b6:	00 00                	add    BYTE PTR [rax],al
    c2b8:	07                   	(bad)
    c2b9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    c2ba:	32 00                	xor    al,BYTE PTR [rax]
    c2bc:	00 00                	add    BYTE PTR [rax],al
    c2be:	00 00                	add    BYTE PTR [rax],al
    c2c0:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c2c6:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c2c9:	7f 00                	jg     c2cb <_end+0x62b3>
    c2cb:	00 00                	add    BYTE PTR [rax],al
    c2cd:	09 d6                	or     esi,edx
    c2cf:	71 00                	jno    c2d1 <_end+0x62b9>
    c2d1:	00 a5 32 00 00 00    	add    BYTE PTR [rbp+0x32],ah
    c2d7:	00 00                	add    BYTE PTR [rax],al
    c2d9:	00 02                	add    BYTE PTR [rdx],al
    c2db:	00 a5 32 00 00 00    	add    BYTE PTR [rbp+0x32],ah
    c2e1:	00 00                	add    BYTE PTR [rax],al
    c2e3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c2e6:	00 00                	add    BYTE PTR [rax],al
    c2e8:	00 00                	add    BYTE PTR [rax],al
    c2ea:	00 00                	add    BYTE PTR [rax],al
    c2ec:	2a 09                	sub    cl,BYTE PTR [rcx]
    c2ee:	e0 6b                	loopne c35b <_end+0x6343>
    c2f0:	00 00                	add    BYTE PTR [rax],al
    c2f2:	05 e4 71 00 00       	add    eax,0x71e4
    c2f7:	c6                   	(bad)
    c2f8:	29 00                	sub    DWORD PTR [rax],eax
    c2fa:	00 c4                	add    ah,al
    c2fc:	29 00                	sub    DWORD PTR [rax],eax
    c2fe:	00 07                	add    BYTE PTR [rdi],al
    c300:	b1 32                	mov    cl,0x32
    c302:	00 00                	add    BYTE PTR [rax],al
    c304:	00 00                	add    BYTE PTR [rax],al
    c306:	00 00                	add    BYTE PTR [rax],al
    c308:	9b                   	fwait
    c309:	75 00                	jne    c30b <_end+0x62f3>
    c30b:	00 03                	add    BYTE PTR [rbx],al
    c30d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c310:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    c316:	00 00                	add    BYTE PTR [rax],al
    c318:	00 00                	add    BYTE PTR [rax],al
    c31a:	00 09                	add    BYTE PTR [rcx],cl
    c31c:	d6                   	(bad)
    c31d:	71 00                	jno    c31f <_end+0x6307>
    c31f:	00 b1 32 00 00 00    	add    BYTE PTR [rcx+0x32],dh
    c325:	00 00                	add    BYTE PTR [rax],al
    c327:	00 02                	add    BYTE PTR [rdx],al
    c329:	00 b1 32 00 00 00    	add    BYTE PTR [rcx+0x32],dh
    c32f:	00 00                	add    BYTE PTR [rax],al
    c331:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c334:	00 00                	add    BYTE PTR [rax],al
    c336:	00 00                	add    BYTE PTR [rax],al
    c338:	00 00                	add    BYTE PTR [rax],al
    c33a:	2a 09                	sub    cl,BYTE PTR [rcx]
    c33c:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    c33e:	00 00                	add    BYTE PTR [rax],al
    c340:	05 e4 71 00 00       	add    eax,0x71e4
    c345:	d5 29 00 00          	{rex2 0x29} add BYTE PTR [r8],al
    c349:	d3 29                	shr    DWORD PTR [rcx],cl
    c34b:	00 00                	add    BYTE PTR [rax],al
    c34d:	07                   	(bad)
    c34e:	bd 32 00 00 00       	mov    ebp,0x32
    c353:	00 00                	add    BYTE PTR [rax],al
    c355:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c35b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c35e:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c369:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c36c:	00 00                	add    BYTE PTR [rax],al
    c36e:	bd 32 00 00 00       	mov    ebp,0x32
    c373:	00 00                	add    BYTE PTR [rax],al
    c375:	00 03                	add    BYTE PTR [rbx],al
    c377:	00 bd 32 00 00 00    	add    BYTE PTR [rbp+0x32],bh
    c37d:	00 00                	add    BYTE PTR [rax],al
    c37f:	00 36                	add    BYTE PTR [rsi],dh
    c381:	00 00                	add    BYTE PTR [rax],al
    c383:	00 00                	add    BYTE PTR [rax],al
    c385:	00 00                	add    BYTE PTR [rax],al
    c387:	00 2a                	add    BYTE PTR [rdx],ch
    c389:	09 db                	or     ebx,ebx
    c38b:	6c                   	ins    BYTE PTR es:[rdi],dx
    c38c:	00 00                	add    BYTE PTR [rax],al
    c38e:	05 91 52 00 00       	add    eax,0x5291
    c393:	e4 29                	in     al,0x29
    c395:	00 00                	add    BYTE PTR [rax],al
    c397:	e2 29                	loop   c3c2 <_end+0x63aa>
    c399:	00 00                	add    BYTE PTR [rax],al
    c39b:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    c3a1:	79 52                	jns    c3f5 <_end+0x63dd>
    c3a3:	00 00                	add    BYTE PTR [rax],al
    c3a5:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c3a8:	00 00                	add    BYTE PTR [rax],al
    c3aa:	15 9d 52 00 00       	adc    eax,0x529d
    c3af:	f0 29 00             	lock sub DWORD PTR [rax],eax
    c3b2:	00 ec                	add    ah,ch
    c3b4:	29 00                	sub    DWORD PTR [rax],eax
    c3b6:	00 0a                	add    BYTE PTR [rdx],cl
    c3b8:	d0 32                	shl    BYTE PTR [rdx],1
    c3ba:	00 00                	add    BYTE PTR [rax],al
    c3bc:	00 00                	add    BYTE PTR [rax],al
    c3be:	00 00                	add    BYTE PTR [rax],al
    c3c0:	e5 3c                	in     eax,0x3c
    c3c2:	00 00                	add    BYTE PTR [rax],al
    c3c4:	a8 6c                	test   al,0x6c
    c3c6:	00 00                	add    BYTE PTR [rax],al
    c3c8:	03 01                	add    eax,DWORD PTR [rcx]
    c3ca:	55                   	push   rbp
    c3cb:	09 03                	or     DWORD PTR [rbx],eax
    c3cd:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    c3d0:	00 00                	add    BYTE PTR [rax],al
    c3d2:	00 00                	add    BYTE PTR [rax],al
    c3d4:	00 03                	add    BYTE PTR [rbx],al
    c3d6:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c3da:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c3de:	00 00                	add    BYTE PTR [rax],al
    c3e0:	00 00                	add    BYTE PTR [rax],al
    c3e2:	00 0a                	add    BYTE PTR [rdx],cl
    c3e4:	eb 32                	jmp    c418 <_end+0x6400>
    c3e6:	00 00                	add    BYTE PTR [rax],al
    c3e8:	00 00                	add    BYTE PTR [rax],al
    c3ea:	00 00                	add    BYTE PTR [rax],al
    c3ec:	4d                   	rex.WRB
    c3ed:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c3f0:	c6                   	(bad)
    c3f1:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3f2:	00 00                	add    BYTE PTR [rax],al
    c3f4:	03 01                	add    eax,DWORD PTR [rcx]
    c3f6:	55                   	push   rbp
    c3f7:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c3fa:	03 01                	add    eax,DWORD PTR [rcx]
    c3fc:	58                   	pop    rax
    c3fd:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c400:	00 07                	add    BYTE PTR [rdi],al
    c402:	f3 32 00             	repz xor al,BYTE PTR [rax]
    c405:	00 00                	add    BYTE PTR [rax],al
    c407:	00 00                	add    BYTE PTR [rax],al
    c409:	00 33                	add    BYTE PTR [rbx],dh
    c40b:	3c 00                	cmp    al,0x0
    c40d:	00 03                	add    BYTE PTR [rbx],al
    c40f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c412:	7d 00                	jge    c414 <_end+0x63fc>
    c414:	00 00                	add    BYTE PTR [rax],al
    c416:	19 d6                	sbb    esi,edx
    c418:	71 00                	jno    c41a <_end+0x6402>
    c41a:	00 f3                	add    bl,dh
    c41c:	32 00                	xor    al,BYTE PTR [rax]
    c41e:	00 00                	add    BYTE PTR [rax],al
    c420:	00 00                	add    BYTE PTR [rax],al
    c422:	00 02                	add    BYTE PTR [rdx],al
    c424:	00 f3                	add    bl,dh
    c426:	32 00                	xor    al,BYTE PTR [rax]
    c428:	00 00                	add    BYTE PTR [rax],al
    c42a:	00 00                	add    BYTE PTR [rax],al
    c42c:	00 08                	add    BYTE PTR [rax],cl
    c42e:	00 00                	add    BYTE PTR [rax],al
    c430:	00 00                	add    BYTE PTR [rax],al
    c432:	00 00                	add    BYTE PTR [rax],al
    c434:	00 01                	add    BYTE PTR [rcx],al
    c436:	2a 09                	sub    cl,BYTE PTR [rcx]
    c438:	05 e4 71 00 00       	add    eax,0x71e4
    c43d:	01 2a                	add    DWORD PTR [rdx],ebp
    c43f:	00 00                	add    BYTE PTR [rax],al
    c441:	ff 29                	jmp    FWORD PTR [rcx]
    c443:	00 00                	add    BYTE PTR [rax],al
    c445:	07                   	(bad)
    c446:	fb                   	sti
    c447:	32 00                	xor    al,BYTE PTR [rax]
    c449:	00 00                	add    BYTE PTR [rax],al
    c44b:	00 00                	add    BYTE PTR [rax],al
    c44d:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c453:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c456:	73 00                	jae    c458 <_end+0x6440>
    c458:	00 00                	add    BYTE PTR [rax],al
    c45a:	00 16                	add    BYTE PTR [rsi],dl
    c45c:	fb                   	sti
    c45d:	32 00                	xor    al,BYTE PTR [rax]
    c45f:	00 00                	add    BYTE PTR [rax],al
    c461:	00 00                	add    BYTE PTR [rax],al
    c463:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c466:	00 00                	add    BYTE PTR [rax],al
    c468:	00 00                	add    BYTE PTR [rax],al
    c46a:	00 00                	add    BYTE PTR [rax],al
    c46c:	15 6f 00 00 17       	adc    eax,0x1700006f
    c471:	57                   	push   rdi
    c472:	12 00                	adc    al,BYTE PTR [rax]
    c474:	00 2b                	add    BYTE PTR [rbx],ch
    c476:	09 db                	or     ebx,ebx
    c478:	41 00 00             	add    BYTE PTR [r8],al
    c47b:	09 d6                	or     esi,edx
    c47d:	71 00                	jno    c47f <_end+0x6467>
    c47f:	00 fb                	add    bl,bh
    c481:	32 00                	xor    al,BYTE PTR [rax]
    c483:	00 00                	add    BYTE PTR [rax],al
    c485:	00 00                	add    BYTE PTR [rax],al
    c487:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c48a:	fb                   	sti
    c48b:	32 00                	xor    al,BYTE PTR [rax]
    c48d:	00 00                	add    BYTE PTR [rax],al
    c48f:	00 00                	add    BYTE PTR [rax],al
    c491:	00 08                	add    BYTE PTR [rax],cl
    c493:	00 00                	add    BYTE PTR [rax],al
    c495:	00 00                	add    BYTE PTR [rax],al
    c497:	00 00                	add    BYTE PTR [rax],al
    c499:	00 2b                	add    BYTE PTR [rbx],ch
    c49b:	09 87 6d 00 00 05    	or     DWORD PTR [rdi+0x500006d],eax
    c4a1:	e4 71                	in     al,0x71
    c4a3:	00 00                	add    BYTE PTR [rax],al
    c4a5:	10 2a                	adc    BYTE PTR [rdx],ch
    c4a7:	00 00                	add    BYTE PTR [rax],al
    c4a9:	0e                   	(bad)
    c4aa:	2a 00                	sub    al,BYTE PTR [rax]
    c4ac:	00 07                	add    BYTE PTR [rdi],al
    c4ae:	03 33                	add    esi,DWORD PTR [rbx]
    c4b0:	00 00                	add    BYTE PTR [rax],al
    c4b2:	00 00                	add    BYTE PTR [rax],al
    c4b4:	00 00                	add    BYTE PTR [rax],al
    c4b6:	9b                   	fwait
    c4b7:	75 00                	jne    c4b9 <_end+0x64a1>
    c4b9:	00 03                	add    BYTE PTR [rbx],al
    c4bb:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4be:	7f 00                	jg     c4c0 <_end+0x64a8>
    c4c0:	00 00                	add    BYTE PTR [rax],al
    c4c2:	09 d6                	or     esi,edx
    c4c4:	71 00                	jno    c4c6 <_end+0x64ae>
    c4c6:	00 03                	add    BYTE PTR [rbx],al
    c4c8:	33 00                	xor    eax,DWORD PTR [rax]
    c4ca:	00 00                	add    BYTE PTR [rax],al
    c4cc:	00 00                	add    BYTE PTR [rax],al
    c4ce:	00 02                	add    BYTE PTR [rdx],al
    c4d0:	00 03                	add    BYTE PTR [rbx],al
    c4d2:	33 00                	xor    eax,DWORD PTR [rax]
    c4d4:	00 00                	add    BYTE PTR [rax],al
    c4d6:	00 00                	add    BYTE PTR [rax],al
    c4d8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c4db:	00 00                	add    BYTE PTR [rax],al
    c4dd:	00 00                	add    BYTE PTR [rax],al
    c4df:	00 00                	add    BYTE PTR [rax],al
    c4e1:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c4e3:	d5 6d 00 00          	{rex2 0x6d} add BYTE PTR [r8],r24b
    c4e7:	05 e4 71 00 00       	add    eax,0x71e4
    c4ec:	1f                   	(bad)
    c4ed:	2a 00                	sub    al,BYTE PTR [rax]
    c4ef:	00 1d 2a 00 00 07    	add    BYTE PTR [rip+0x700002a],bl        # 700c51f <_end+0x7006507>
    c4f5:	0f 33                	rdpmc
    c4f7:	00 00                	add    BYTE PTR [rax],al
    c4f9:	00 00                	add    BYTE PTR [rax],al
    c4fb:	00 00                	add    BYTE PTR [rax],al
    c4fd:	9b                   	fwait
    c4fe:	75 00                	jne    c500 <_end+0x64e8>
    c500:	00 03                	add    BYTE PTR [rbx],al
    c502:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c505:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    c50b:	00 00                	add    BYTE PTR [rax],al
    c50d:	00 00                	add    BYTE PTR [rax],al
    c50f:	00 09                	add    BYTE PTR [rcx],cl
    c511:	d6                   	(bad)
    c512:	71 00                	jno    c514 <_end+0x64fc>
    c514:	00 0f                	add    BYTE PTR [rdi],cl
    c516:	33 00                	xor    eax,DWORD PTR [rax]
    c518:	00 00                	add    BYTE PTR [rax],al
    c51a:	00 00                	add    BYTE PTR [rax],al
    c51c:	00 02                	add    BYTE PTR [rdx],al
    c51e:	00 0f                	add    BYTE PTR [rdi],cl
    c520:	33 00                	xor    eax,DWORD PTR [rax]
    c522:	00 00                	add    BYTE PTR [rax],al
    c524:	00 00                	add    BYTE PTR [rax],al
    c526:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c529:	00 00                	add    BYTE PTR [rax],al
    c52b:	00 00                	add    BYTE PTR [rax],al
    c52d:	00 00                	add    BYTE PTR [rax],al
    c52f:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c531:	23 6e 00             	and    ebp,DWORD PTR [rsi+0x0]
    c534:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 1371e <_end+0xd706>
    c53a:	2e 2a 00             	cs sub al,BYTE PTR [rax]
    c53d:	00 2c 2a             	add    BYTE PTR [rdx+rbp*1],ch
    c540:	00 00                	add    BYTE PTR [rax],al
    c542:	07                   	(bad)
    c543:	1b 33                	sbb    esi,DWORD PTR [rbx]
    c545:	00 00                	add    BYTE PTR [rax],al
    c547:	00 00                	add    BYTE PTR [rax],al
    c549:	00 00                	add    BYTE PTR [rax],al
    c54b:	9b                   	fwait
    c54c:	75 00                	jne    c54e <_end+0x6536>
    c54e:	00 03                	add    BYTE PTR [rbx],al
    c550:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c553:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c55e:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c561:	00 00                	add    BYTE PTR [rax],al
    c563:	1b 33                	sbb    esi,DWORD PTR [rbx]
    c565:	00 00                	add    BYTE PTR [rax],al
    c567:	00 00                	add    BYTE PTR [rax],al
    c569:	00 00                	add    BYTE PTR [rax],al
    c56b:	03 00                	add    eax,DWORD PTR [rax]
    c56d:	1b 33                	sbb    esi,DWORD PTR [rbx]
    c56f:	00 00                	add    BYTE PTR [rax],al
    c571:	00 00                	add    BYTE PTR [rax],al
    c573:	00 00                	add    BYTE PTR [rax],al
    c575:	36 00 00             	ss add BYTE PTR [rax],al
    c578:	00 00                	add    BYTE PTR [rax],al
    c57a:	00 00                	add    BYTE PTR [rax],al
    c57c:	00 2b                	add    BYTE PTR [rbx],ch
    c57e:	09 d0                	or     eax,edx
    c580:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c581:	00 00                	add    BYTE PTR [rax],al
    c583:	05 91 52 00 00       	add    eax,0x5291
    c588:	3d 2a 00 00 3b       	cmp    eax,0x3b00002a
    c58d:	2a 00                	sub    al,BYTE PTR [rax]
    c58f:	00 0b                	add    BYTE PTR [rbx],cl
    c591:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    c594:	00 0b                	add    BYTE PTR [rbx],cl
    c596:	79 52                	jns    c5ea <_end+0x65d2>
    c598:	00 00                	add    BYTE PTR [rax],al
    c59a:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c59d:	00 00                	add    BYTE PTR [rax],al
    c59f:	15 9d 52 00 00       	adc    eax,0x529d
    c5a4:	49 2a 00             	rex.WB sub al,BYTE PTR [r8]
    c5a7:	00 45 2a             	add    BYTE PTR [rbp+0x2a],al
    c5aa:	00 00                	add    BYTE PTR [rax],al
    c5ac:	0a 2e                	or     ch,BYTE PTR [rsi]
    c5ae:	33 00                	xor    eax,DWORD PTR [rax]
    c5b0:	00 00                	add    BYTE PTR [rax],al
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 e5                	add    ch,ah
    c5b6:	3c 00                	cmp    al,0x0
    c5b8:	00 9d 6e 00 00 03    	add    BYTE PTR [rbp+0x300006e],bl
    c5be:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c5c1:	03 b7 42 00 00 00    	add    esi,DWORD PTR [rdi+0x42]
    c5c7:	00 00                	add    BYTE PTR [rax],al
    c5c9:	00 03                	add    BYTE PTR [rbx],al
    c5cb:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c5cf:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c5d3:	00 00                	add    BYTE PTR [rax],al
    c5d5:	00 00                	add    BYTE PTR [rax],al
    c5d7:	00 0a                	add    BYTE PTR [rdx],cl
    c5d9:	49 33 00             	xor    rax,QWORD PTR [r8]
    c5dc:	00 00                	add    BYTE PTR [rax],al
    c5de:	00 00                	add    BYTE PTR [rax],al
    c5e0:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c5e3:	00 00                	add    BYTE PTR [rax],al
    c5e5:	bb 6e 00 00 03       	mov    ebx,0x300006e
    c5ea:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5ed:	7d 00                	jge    c5ef <_end+0x65d7>
    c5ef:	03 01                	add    eax,DWORD PTR [rcx]
    c5f1:	58                   	pop    rax
    c5f2:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c5f5:	00 07                	add    BYTE PTR [rdi],al
    c5f7:	51                   	push   rcx
    c5f8:	33 00                	xor    eax,DWORD PTR [rax]
    c5fa:	00 00                	add    BYTE PTR [rax],al
    c5fc:	00 00                	add    BYTE PTR [rax],al
    c5fe:	00 33                	add    BYTE PTR [rbx],dh
    c600:	3c 00                	cmp    al,0x0
    c602:	00 03                	add    BYTE PTR [rbx],al
    c604:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c607:	7d 00                	jge    c609 <_end+0x65f1>
    c609:	00 00                	add    BYTE PTR [rax],al
    c60b:	19 d6                	sbb    esi,edx
    c60d:	71 00                	jno    c60f <_end+0x65f7>
    c60f:	00 51 33             	add    BYTE PTR [rcx+0x33],dl
    c612:	00 00                	add    BYTE PTR [rax],al
    c614:	00 00                	add    BYTE PTR [rax],al
    c616:	00 00                	add    BYTE PTR [rax],al
    c618:	02 00                	add    al,BYTE PTR [rax]
    c61a:	51                   	push   rcx
    c61b:	33 00                	xor    eax,DWORD PTR [rax]
    c61d:	00 00                	add    BYTE PTR [rax],al
    c61f:	00 00                	add    BYTE PTR [rax],al
    c621:	00 08                	add    BYTE PTR [rax],cl
    c623:	00 00                	add    BYTE PTR [rax],al
    c625:	00 00                	add    BYTE PTR [rax],al
    c627:	00 00                	add    BYTE PTR [rax],al
    c629:	00 01                	add    BYTE PTR [rcx],al
    c62b:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c62d:	05 e4 71 00 00       	add    eax,0x71e4
    c632:	5a                   	pop    rdx
    c633:	2a 00                	sub    al,BYTE PTR [rax]
    c635:	00 58 2a             	add    BYTE PTR [rax+0x2a],bl
    c638:	00 00                	add    BYTE PTR [rax],al
    c63a:	07                   	(bad)
    c63b:	59                   	pop    rcx
    c63c:	33 00                	xor    eax,DWORD PTR [rax]
    c63e:	00 00                	add    BYTE PTR [rax],al
    c640:	00 00                	add    BYTE PTR [rax],al
    c642:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c648:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c64b:	73 00                	jae    c64d <_end+0x6635>
    c64d:	00 00                	add    BYTE PTR [rax],al
    c64f:	00 0a                	add    BYTE PTR [rdx],cl
    c651:	14 2f                	adc    al,0x2f
    c653:	00 00                	add    BYTE PTR [rax],al
    c655:	00 00                	add    BYTE PTR [rax],al
    c657:	00 00                	add    BYTE PTR [rax],al
    c659:	1b 44 00 00          	sbb    eax,DWORD PTR [rax+rax*1+0x0]
    c65d:	3b 6f 00             	cmp    ebp,DWORD PTR [rdi+0x0]
    c660:	00 03                	add    BYTE PTR [rbx],al
    c662:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c665:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
    c668:	00 00                	add    BYTE PTR [rax],al
    c66a:	00 00                	add    BYTE PTR [rax],al
    c66c:	00 00                	add    BYTE PTR [rax],al
    c66e:	03 01                	add    eax,DWORD PTR [rcx]
    c670:	54                   	push   rsp
    c671:	03 91 b0 7f 00 0a    	add    edx,DWORD PTR [rcx+0xa007fb0]
    c677:	28 2f                	sub    BYTE PTR [rdi],ch
    c679:	00 00                	add    BYTE PTR [rax],al
    c67b:	00 00                	add    BYTE PTR [rax],al
    c67d:	00 00                	add    BYTE PTR [rax],al
    c67f:	fc                   	cld
    c680:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c683:	53                   	push   rbx
    c684:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c685:	00 00                	add    BYTE PTR [rax],al
    c687:	03 01                	add    eax,DWORD PTR [rcx]
    c689:	55                   	push   rbp
    c68a:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c68d:	00 0a                	add    BYTE PTR [rdx],cl
    c68f:	36 2f                	ss (bad)
    c691:	00 00                	add    BYTE PTR [rax],al
    c693:	00 00                	add    BYTE PTR [rax],al
    c695:	00 00                	add    BYTE PTR [rax],al
    c697:	d8 43 00             	fadd   DWORD PTR [rbx+0x0]
    c69a:	00 71 6f             	add    BYTE PTR [rcx+0x6f],dh
    c69d:	00 00                	add    BYTE PTR [rax],al
    c69f:	03 01                	add    eax,DWORD PTR [rcx]
    c6a1:	55                   	push   rbp
    c6a2:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c6a5:	03 01                	add    eax,DWORD PTR [rcx]
    c6a7:	54                   	push   rsp
    c6a8:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    c6ac:	0a 48 2f             	or     cl,BYTE PTR [rax+0x2f]
    c6af:	00 00                	add    BYTE PTR [rax],al
    c6b1:	00 00                	add    BYTE PTR [rax],al
    c6b3:	00 00                	add    BYTE PTR [rax],al
    c6b5:	bd 43 00 00 96       	mov    ebp,0x96000043
    c6ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6bb:	00 00                	add    BYTE PTR [rax],al
    c6bd:	03 01                	add    eax,DWORD PTR [rcx]
    c6bf:	55                   	push   rbp
    c6c0:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c6c3:	03 01                	add    eax,DWORD PTR [rcx]
    c6c5:	54                   	push   rsp
    c6c6:	09 03                	or     DWORD PTR [rbx],eax
    c6c8:	74 42                	je     c70c <_end+0x66f4>
    c6ca:	00 00                	add    BYTE PTR [rax],al
    c6cc:	00 00                	add    BYTE PTR [rax],al
    c6ce:	00 00                	add    BYTE PTR [rax],al
    c6d0:	00 0a                	add    BYTE PTR [rdx],cl
    c6d2:	62 2f 00 00 00       	(bad)
    c6d7:	00 00                	add    BYTE PTR [rax],al
    c6d9:	00 bd 43 00 00 b4    	add    BYTE PTR [rbp-0x4bffffbd],bh
    c6df:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6e0:	00 00                	add    BYTE PTR [rax],al
    c6e2:	03 01                	add    eax,DWORD PTR [rcx]
    c6e4:	55                   	push   rbp
    c6e5:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c6e8:	03 01                	add    eax,DWORD PTR [rcx]
    c6ea:	54                   	push   rsp
    c6eb:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c6ee:	00 0a                	add    BYTE PTR [rdx],cl
    c6f0:	79 2f                	jns    c721 <_end+0x6709>
    c6f2:	00 00                	add    BYTE PTR [rax],al
    c6f4:	00 00                	add    BYTE PTR [rax],al
    c6f6:	00 00                	add    BYTE PTR [rax],al
    c6f8:	bd 43 00 00 d9       	mov    ebp,0xd9000043
    c6fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6fe:	00 00                	add    BYTE PTR [rax],al
    c700:	03 01                	add    eax,DWORD PTR [rcx]
    c702:	55                   	push   rbp
    c703:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c706:	03 01                	add    eax,DWORD PTR [rcx]
    c708:	54                   	push   rsp
    c709:	09 03                	or     DWORD PTR [rbx],eax
    c70b:	7a 42                	jp     c74f <_end+0x6737>
    c70d:	00 00                	add    BYTE PTR [rax],al
    c70f:	00 00                	add    BYTE PTR [rax],al
    c711:	00 00                	add    BYTE PTR [rax],al
    c713:	00 0a                	add    BYTE PTR [rdx],cl
    c715:	90                   	nop
    c716:	2f                   	(bad)
    c717:	00 00                	add    BYTE PTR [rax],al
    c719:	00 00                	add    BYTE PTR [rax],al
    c71b:	00 00                	add    BYTE PTR [rax],al
    c71d:	bd 43 00 00 fe       	mov    ebp,0xfe000043
    c722:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c723:	00 00                	add    BYTE PTR [rax],al
    c725:	03 01                	add    eax,DWORD PTR [rcx]
    c727:	55                   	push   rbp
    c728:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c72b:	03 01                	add    eax,DWORD PTR [rcx]
    c72d:	54                   	push   rsp
    c72e:	09 03                	or     DWORD PTR [rbx],eax
    c730:	8a 42 00             	mov    al,BYTE PTR [rdx+0x0]
    c733:	00 00                	add    BYTE PTR [rax],al
    c735:	00 00                	add    BYTE PTR [rax],al
    c737:	00 00                	add    BYTE PTR [rax],al
    c739:	0a a7 2f 00 00 00    	or     ah,BYTE PTR [rdi+0x2f]
    c73f:	00 00                	add    BYTE PTR [rax],al
    c741:	00 bd 43 00 00 23    	add    BYTE PTR [rbp+0x23000043],bh
    c747:	70 00                	jo     c749 <_end+0x6731>
    c749:	00 03                	add    BYTE PTR [rbx],al
    c74b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c74e:	73 00                	jae    c750 <_end+0x6738>
    c750:	03 01                	add    eax,DWORD PTR [rcx]
    c752:	54                   	push   rsp
    c753:	09 03                	or     DWORD PTR [rbx],eax
    c755:	ab                   	stos   DWORD PTR es:[rdi],eax
    c756:	42 00 00             	rex.X add BYTE PTR [rax],al
    c759:	00 00                	add    BYTE PTR [rax],al
    c75b:	00 00                	add    BYTE PTR [rax],al
    c75d:	00 0a                	add    BYTE PTR [rdx],cl
    c75f:	be 2f 00 00 00       	mov    esi,0x2f
    c764:	00 00                	add    BYTE PTR [rax],al
    c766:	00 bd 43 00 00 48    	add    BYTE PTR [rbp+0x48000043],bh
    c76c:	70 00                	jo     c76e <_end+0x6756>
    c76e:	00 03                	add    BYTE PTR [rbx],al
    c770:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c773:	73 00                	jae    c775 <_end+0x675d>
    c775:	03 01                	add    eax,DWORD PTR [rcx]
    c777:	54                   	push   rsp
    c778:	09 03                	or     DWORD PTR [rbx],eax
    c77a:	b3 42                	mov    bl,0x42
    c77c:	00 00                	add    BYTE PTR [rax],al
    c77e:	00 00                	add    BYTE PTR [rax],al
    c780:	00 00                	add    BYTE PTR [rax],al
    c782:	00 0a                	add    BYTE PTR [rdx],cl
    c784:	d5 2f 00 00          	{rex2 0x2f} add BYTE PTR [r8],r8b
    c788:	00 00                	add    BYTE PTR [rax],al
    c78a:	00 00                	add    BYTE PTR [rax],al
    c78c:	bd 43 00 00 6d       	mov    ebp,0x6d000043
    c791:	70 00                	jo     c793 <_end+0x677b>
    c793:	00 03                	add    BYTE PTR [rbx],al
    c795:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c798:	73 00                	jae    c79a <_end+0x6782>
    c79a:	03 01                	add    eax,DWORD PTR [rcx]
    c79c:	54                   	push   rsp
    c79d:	09 03                	or     DWORD PTR [rbx],eax
    c79f:	d4                   	(bad)
    c7a0:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7a3:	00 00                	add    BYTE PTR [rax],al
    c7a5:	00 00                	add    BYTE PTR [rax],al
    c7a7:	00 0a                	add    BYTE PTR [rdx],cl
    c7a9:	ec                   	in     al,dx
    c7aa:	2f                   	(bad)
    c7ab:	00 00                	add    BYTE PTR [rax],al
    c7ad:	00 00                	add    BYTE PTR [rax],al
    c7af:	00 00                	add    BYTE PTR [rax],al
    c7b1:	bd 43 00 00 92       	mov    ebp,0x92000043
    c7b6:	70 00                	jo     c7b8 <_end+0x67a0>
    c7b8:	00 03                	add    BYTE PTR [rbx],al
    c7ba:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c7bd:	73 00                	jae    c7bf <_end+0x67a7>
    c7bf:	03 01                	add    eax,DWORD PTR [rcx]
    c7c1:	54                   	push   rsp
    c7c2:	09 03                	or     DWORD PTR [rbx],eax
    c7c4:	e4 42                	in     al,0x42
    c7c6:	00 00                	add    BYTE PTR [rax],al
    c7c8:	00 00                	add    BYTE PTR [rax],al
    c7ca:	00 00                	add    BYTE PTR [rax],al
    c7cc:	00 0a                	add    BYTE PTR [rdx],cl
    c7ce:	fd                   	std
    c7cf:	2f                   	(bad)
    c7d0:	00 00                	add    BYTE PTR [rax],al
    c7d2:	00 00                	add    BYTE PTR [rax],al
    c7d4:	00 00                	add    BYTE PTR [rax],al
    c7d6:	f5                   	cmc
    c7d7:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7da:	ac                   	lods   al,BYTE PTR ds:[rsi]
    c7db:	70 00                	jo     c7dd <_end+0x67c5>
    c7dd:	00 03                	add    BYTE PTR [rbx],al
    c7df:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    c7e2:	91                   	xchg   ecx,eax
    c7e3:	a0 7f 06 00 20 06 30 	movabs al,ds:0x30062000067f
    c7ea:	00 00 
    c7ec:	00 00                	add    BYTE PTR [rax],al
    c7ee:	00 00                	add    BYTE PTR [rax],al
    c7f0:	f5                   	cmc
    c7f1:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7f4:	0a 0e                	or     cl,BYTE PTR [rsi]
    c7f6:	30 00                	xor    BYTE PTR [rax],al
    c7f8:	00 00                	add    BYTE PTR [rax],al
    c7fa:	00 00                	add    BYTE PTR [rax],al
    c7fc:	00 f5                	add    ch,dh
    c7fe:	42 00 00             	rex.X add BYTE PTR [rax],al
    c801:	d1 70 00             	shl    DWORD PTR [rax+0x0],1
    c804:	00 03                	add    BYTE PTR [rbx],al
    c806:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c809:	76 00                	jbe    c80b <_end+0x67f3>
    c80b:	00 20                	add    BYTE PTR [rax],ah
    c80d:	2b 36                	sub    esi,DWORD PTR [rsi]
    c80f:	00 00                	add    BYTE PTR [rax],al
    c811:	00 00                	add    BYTE PTR [rax],al
    c813:	00 00                	add    BYTE PTR [rax],al
    c815:	6d                   	ins    DWORD PTR es:[rdi],dx
    c816:	75 00                	jne    c818 <_end+0x6800>
    c818:	00 0a                	add    BYTE PTR [rdx],cl
    c81a:	4a                   	rex.WX
    c81b:	36 00 00             	ss add BYTE PTR [rax],al
    c81e:	00 00                	add    BYTE PTR [rax],al
    c820:	00 00                	add    BYTE PTR [rax],al
    c822:	3f                   	(bad)
    c823:	44 00 00             	add    BYTE PTR [rax],r8b
    c826:	1c 71                	sbb    al,0x71
    c828:	00 00                	add    BYTE PTR [rax],al
    c82a:	03 01                	add    eax,DWORD PTR [rcx]
    c82c:	55                   	push   rbp
    c82d:	09 03                	or     DWORD PTR [rbx],eax
    c82f:	66 42 00 00          	data16 rex.X add BYTE PTR [rax],al
    c833:	00 00                	add    BYTE PTR [rax],al
    c835:	00 00                	add    BYTE PTR [rax],al
    c837:	03 01                	add    eax,DWORD PTR [rcx]
    c839:	54                   	push   rsp
    c83a:	09 03                	or     DWORD PTR [rbx],eax
    c83c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c83d:	41 00 00             	add    BYTE PTR [r8],al
    c840:	00 00                	add    BYTE PTR [rax],al
    c842:	00 00                	add    BYTE PTR [rax],al
    c844:	03 01                	add    eax,DWORD PTR [rcx]
    c846:	51                   	push   rcx
    c847:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    c84a:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c84d:	03 20                	add    esp,DWORD PTR [rax]
    c84f:	45 00 00             	add    BYTE PTR [r8],r8b
    c852:	00 00                	add    BYTE PTR [rax],al
    c854:	00 00                	add    BYTE PTR [rax],al
    c856:	00 07                	add    BYTE PTR [rdi],al
    c858:	69 36 00 00 00 00    	imul   esi,DWORD PTR [rsi],0x0
    c85e:	00 00                	add    BYTE PTR [rax],al
    c860:	3f                   	(bad)
    c861:	44 00 00             	add    BYTE PTR [rax],r8b
    c864:	03 01                	add    eax,DWORD PTR [rcx]
    c866:	55                   	push   rbp
    c867:	09 03                	or     DWORD PTR [rbx],eax
    c869:	66 41 00 00          	data16 add BYTE PTR [r8],al
    c86d:	00 00                	add    BYTE PTR [rax],al
    c86f:	00 00                	add    BYTE PTR [rax],al
    c871:	03 01                	add    eax,DWORD PTR [rcx]
    c873:	54                   	push   rsp
    c874:	09 03                	or     DWORD PTR [rbx],eax
    c876:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c877:	41 00 00             	add    BYTE PTR [r8],al
    c87a:	00 00                	add    BYTE PTR [rax],al
    c87c:	00 00                	add    BYTE PTR [rax],al
    c87e:	03 01                	add    eax,DWORD PTR [rcx]
    c880:	51                   	push   rcx
    c881:	01 42 03             	add    DWORD PTR [rdx+0x3],eax
    c884:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c887:	03 20                	add    esp,DWORD PTR [rax]
    c889:	45 00 00             	add    BYTE PTR [r8],r8b
    c88c:	00 00                	add    BYTE PTR [rax],al
    c88e:	00 00                	add    BYTE PTR [rax],al
    c890:	00 00                	add    BYTE PTR [rax],al
    c892:	25 ee 22 00 00       	and    eax,0x22ee
    c897:	67 71 00             	addr32 jno c89a <_end+0x6882>
    c89a:	00 26                	add    BYTE PTR [rsi],ah
    c89c:	8a 21                	mov    ah,BYTE PTR [rcx]
    c89e:	00 00                	add    BYTE PTR [rax],al
    c8a0:	30 00                	xor    BYTE PTR [rax],al
    c8a2:	13 57 71             	adc    edx,DWORD PTR [rdi+0x71]
    c8a5:	00 00                	add    BYTE PTR [rax],al
    c8a7:	30 c5                	xor    ch,al
    c8a9:	18 00                	sbb    BYTE PTR [rax],al
    c8ab:	00 7a 71             	add    BYTE PTR [rdx+0x71],bh
    c8ae:	00 00                	add    BYTE PTR [rax],al
    c8b0:	03 84 71 00 00 31 1b 	add    eax,DWORD PTR [rcx+rsi*2+0x1b310000]
    c8b7:	1e                   	(bad)
    c8b8:	00 00                	add    BYTE PTR [rax],al
    c8ba:	ab                   	stos   DWORD PTR es:[rdi],eax
    c8bb:	3f                   	(bad)
    c8bc:	00 00                	add    BYTE PTR [rax],al
    c8be:	00 30                	add    BYTE PTR [rax],dh
    c8c0:	59                   	pop    rcx
    c8c1:	1a 00                	sbb    al,BYTE PTR [rax]
    c8c3:	00 9b 71 00 00 02    	add    BYTE PTR [rbx+0x2000071],bl
    c8c9:	b1 71                	mov    cl,0x71
    c8cb:	00 00                	add    BYTE PTR [rax],al
    c8cd:	11 06                	adc    DWORD PTR [rsi],eax
    c8cf:	19 00                	sbb    DWORD PTR [rax],eax
    c8d1:	00 b2 21 00 00 31    	add    BYTE PTR [rdx+0x31000021],dh
    c8d7:	1b 1e                	sbb    ebx,DWORD PTR [rsi]
    c8d9:	00 00                	add    BYTE PTR [rax],al
    c8db:	97                   	xchg   edi,eax
    c8dc:	3f                   	(bad)
    c8dd:	00 00                	add    BYTE PTR [rax],al
    c8df:	2d 3d 16 00 00       	sub    eax,0x163d
    c8e4:	3d 02 2d 61 44       	cmp    eax,0x44612d02
    c8e9:	00 00                	add    BYTE PTR [rax],al
    c8eb:	00 5c 84 71          	add    BYTE PTR [rsp+rax*4+0x71],bl
    c8ef:	00 00                	add    BYTE PTR [rax],al
    c8f1:	cb                   	retf
    c8f2:	0e                   	(bad)
    c8f3:	00 00                	add    BYTE PTR [rax],al
    c8f5:	cb                   	retf
    c8f6:	71 00                	jno    c8f8 <_end+0x68e0>
    c8f8:	00 d6                	add    dh,dl
    c8fa:	71 00                	jno    c8fc <_end+0x68e4>
    c8fc:	00 11                	add    BYTE PTR [rcx],dl
    c8fe:	06                   	(bad)
    c8ff:	19 00                	sbb    DWORD PTR [rax],eax
    c901:	00 b2 21 00 00 0b    	add    BYTE PTR [rdx+0xb000021],dh
    c907:	9b                   	fwait
    c908:	71 00                	jno    c90a <_end+0x68f2>
    c90a:	00 0b                	add    BYTE PTR [rbx],cl
    c90c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    c90d:	71 00                	jno    c90f <_end+0x68f7>
    c90f:	00 00                	add    BYTE PTR [rax],al
    c911:	63 a1 2d 00 00 54    	movsxd esp,DWORD PTR [rcx+0x5400002d]
    c917:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c918:	21 00                	and    DWORD PTR [rax],eax
    c91a:	00 f2                	add    dl,dh
    c91c:	71 00                	jno    c91e <_end+0x6906>
    c91e:	00 1e                	add    BYTE PTR [rsi],bl
    c920:	3b 06                	cmp    eax,DWORD PTR [rsi]
    c922:	00 00                	add    BYTE PTR [rax],al
    c924:	02 54 20 d8          	add    dl,BYTE PTR [rax+riz*1-0x28]
    c928:	23 00                	and    eax,DWORD PTR [rax]
    c92a:	00 21                	add    BYTE PTR [rcx],ah
    c92c:	00 63 a0             	add    BYTE PTR [rbx-0x60],ah
    c92f:	2d 00 00 4d a6       	sub    eax,0xa64d0000
    c934:	21 00                	and    DWORD PTR [rax],eax
    c936:	00 1a                	add    BYTE PTR [rdx],bl
    c938:	72 00                	jb     c93a <_end+0x6922>
    c93a:	00 1e                	add    BYTE PTR [rsi],bl
    c93c:	ae                   	scas   al,BYTE PTR es:[rdi]
    c93d:	2e 00 00             	cs add BYTE PTR [rax],al
    c940:	02 4d 1b             	add    cl,BYTE PTR [rbp+0x1b]
    c943:	93                   	xchg   ebx,eax
    c944:	2c 00                	sub    al,0x0
    c946:	00 1e                	add    BYTE PTR [rsi],bl
    c948:	3b 06                	cmp    eax,DWORD PTR [rsi]
    c94a:	00 00                	add    BYTE PTR [rax],al
    c94c:	02 4d 3c             	add    cl,BYTE PTR [rbp+0x3c]
    c94f:	d8 23                	fsub   DWORD PTR [rbx]
    c951:	00 00                	add    BYTE PTR [rax],al
    c953:	21 00                	and    DWORD PTR [rax],eax
    c955:	32 e1                	xor    ah,cl
    c957:	04 00                	add    al,0x0
    c959:	00 31                	add    BYTE PTR [rcx],dh
    c95b:	72 00                	jb     c95d <_end+0x6945>
    c95d:	00 5d 5f             	add    BYTE PTR [rbp+0x5f],bl
    c960:	5f                   	pop    rdi
    c961:	78 00                	js     c963 <_end+0x694b>
    c963:	03 b6 01 0e 35 00    	add    esi,DWORD PTR [rsi+0x350e01]
    c969:	00 00                	add    BYTE PTR [rax],al
    c96b:	00 4e 5b             	add    BYTE PTR [rsi+0x5b],cl
    c96e:	52                   	push   rdx
    c96f:	00 00                	add    BYTE PTR [rax],al
    c971:	13 31                	adc    esi,DWORD PTR [rcx]
    c973:	00 00                	add    BYTE PTR [rax],al
    c975:	70 2e                	jo     c9a5 <_end+0x698d>
    c977:	00 00                	add    BYTE PTR [rax],al
    c979:	00 00                	add    BYTE PTR [rax],al
    c97b:	00 00                	add    BYTE PTR [rax],al
    c97d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    c980:	00 00                	add    BYTE PTR [rax],al
    c982:	00 00                	add    BYTE PTR [rax],al
    c984:	00 01                	add    BYTE PTR [rcx],al
    c986:	9c                   	pushf
    c987:	e2 72                	loop   c9fb <_end+0x69e3>
    c989:	00 00                	add    BYTE PTR [rax],al
    c98b:	05 6d 52 00 00       	add    eax,0x526d
    c990:	6d                   	ins    DWORD PTR es:[rdi],dx
    c991:	2a 00                	sub    al,BYTE PTR [rax]
    c993:	00 67 2a             	add    BYTE PTR [rdi+0x2a],ah
    c996:	00 00                	add    BYTE PTR [rax],al
    c998:	05 79 52 00 00       	add    eax,0x5279
    c99d:	88 2a                	mov    BYTE PTR [rdx],ch
    c99f:	00 00                	add    BYTE PTR [rax],al
    c9a1:	86 2a                	xchg   BYTE PTR [rdx],ch
    c9a3:	00 00                	add    BYTE PTR [rax],al
    c9a5:	05 85 52 00 00       	add    eax,0x5285
    c9aa:	9b                   	fwait
    c9ab:	2a 00                	sub    al,BYTE PTR [rax]
    c9ad:	00 95 2a 00 00 05    	add    BYTE PTR [rbp+0x500002a],dl
    c9b3:	91                   	xchg   ecx,eax
    c9b4:	52                   	push   rdx
    c9b5:	00 00                	add    BYTE PTR [rax],al
    c9b7:	c6                   	(bad)
    c9b8:	2a 00                	sub    al,BYTE PTR [rax]
    c9ba:	00 c0                	add    al,al
    c9bc:	2a 00                	sub    al,BYTE PTR [rax]
    c9be:	00 15 9d 52 00 00    	add    BYTE PTR [rip+0x529d],dl        # 11c61 <_end+0xbc49>
    c9c4:	e5 2a                	in     eax,0x2a
    c9c6:	00 00                	add    BYTE PTR [rax],al
    c9c8:	df 2a                	fild   QWORD PTR [rdx]
    c9ca:	00 00                	add    BYTE PTR [rax],al
    c9cc:	0a 97 2e 00 00 00    	or     dl,BYTE PTR [rdi+0x2e]
    c9d2:	00 00                	add    BYTE PTR [rax],al
    c9d4:	00 e5                	add    ch,ah
    c9d6:	3c 00                	cmp    al,0x0
    c9d8:	00 b0 72 00 00 03    	add    BYTE PTR [rax+0x3000072],dh
    c9de:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c9e2:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c9e6:	00 00                	add    BYTE PTR [rax],al
    c9e8:	00 00                	add    BYTE PTR [rax],al
    c9ea:	00 0a                	add    BYTE PTR [rdx],cl
    c9ec:	ae                   	scas   al,BYTE PTR es:[rdi]
    c9ed:	2e 00 00             	cs add BYTE PTR [rax],al
    c9f0:	00 00                	add    BYTE PTR [rax],al
    c9f2:	00 00                	add    BYTE PTR [rax],al
    c9f4:	4d                   	rex.WRB
    c9f5:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c9f8:	d4                   	(bad)
    c9f9:	72 00                	jb     c9fb <_end+0x69e3>
    c9fb:	00 03                	add    BYTE PTR [rbx],al
    c9fd:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ca00:	73 00                	jae    ca02 <_end+0x69ea>
    ca02:	03 01                	add    eax,DWORD PTR [rcx]
    ca04:	54                   	push   rsp
    ca05:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    ca08:	03 01                	add    eax,DWORD PTR [rcx]
    ca0a:	58                   	pop    rax
    ca0b:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ca0e:	00 64 be 2e          	add    BYTE PTR [rsi+rdi*4+0x2e],ah
    ca12:	00 00                	add    BYTE PTR [rax],al
    ca14:	00 00                	add    BYTE PTR [rax],al
    ca16:	00 00                	add    BYTE PTR [rax],al
    ca18:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    ca1b:	00 00                	add    BYTE PTR [rax],al
    ca1d:	4e e1 45             	rex.WRX loope ca65 <_end+0x6a4d>
    ca20:	00 00                	add    BYTE PTR [rax],al
    ca22:	7b 34                	jnp    ca58 <_end+0x6a40>
    ca24:	00 00                	add    BYTE PTR [rax],al
    ca26:	70 36                	jo     ca5e <_end+0x6a46>
    ca28:	00 00                	add    BYTE PTR [rax],al
    ca2a:	00 00                	add    BYTE PTR [rax],al
    ca2c:	00 00                	add    BYTE PTR [rax],al
    ca2e:	5b                   	pop    rbx
    ca2f:	01 00                	add    DWORD PTR [rax],eax
    ca31:	00 00                	add    BYTE PTR [rax],al
    ca33:	00 00                	add    BYTE PTR [rax],al
    ca35:	00 01                	add    BYTE PTR [rcx],al
    ca37:	9c                   	pushf
    ca38:	20 74 00 00          	and    BYTE PTR [rax+rax*1+0x0],dh
    ca3c:	05 f4 45 00 00       	add    eax,0x45f4
    ca41:	0d 2b 00 00 fb       	or     eax,0xfb00002b
    ca46:	2a 00                	sub    al,BYTE PTR [rax]
    ca48:	00 05 00 46 00 00    	add    BYTE PTR [rip+0x4600],al        # 1104e <_end+0xb036>
    ca4e:	66 2b 00             	sub    ax,WORD PTR [rax]
    ca51:	00 56 2b             	add    BYTE PTR [rsi+0x2b],dl
    ca54:	00 00                	add    BYTE PTR [rax],al
    ca56:	05 0c 46 00 00       	add    eax,0x460c
    ca5b:	be 2b 00 00 a8       	mov    esi,0xa800002b
    ca60:	2b 00                	sub    eax,DWORD PTR [rax]
    ca62:	00 15 21 46 00 00    	add    BYTE PTR [rip+0x4621],dl        # 11089 <_end+0xb071>
    ca68:	30 2c 00             	xor    BYTE PTR [rax+rax*1],ch
    ca6b:	00 20                	add    BYTE PTR [rax],ah
    ca6d:	2c 00                	sub    al,0x0
    ca6f:	00 3a                	add    BYTE PTR [rdx],bh
    ca71:	2c 46                	sub    al,0x46
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
    ca78:	00 50 73             	add    BYTE PTR [rax+0x73],dl
    ca7b:	00 00                	add    BYTE PTR [rax],al
    ca7d:	15 2d 46 00 00       	adc    eax,0x462d
    ca82:	84 2c 00             	test   BYTE PTR [rax+rax*1],ch
    ca85:	00 80 2c 00 00 00    	add    BYTE PTR [rax+0x2c],al
    ca8b:	1c 1a                	sbb    al,0x1a
    ca8d:	72 00                	jb     ca8f <_end+0x6a77>
    ca8f:	00 65 37             	add    BYTE PTR [rbp+0x37],ah
	...
    ca9a:	3a 04 00             	cmp    al,BYTE PTR [rax+rax*1]
    ca9d:	00 af 1e 84 73 00    	add    BYTE PTR [rdi+0x73841e],ch
    caa3:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13ccc <_end+0xdcb4>
    caa9:	9b                   	fwait
    caaa:	2c 00                	sub    al,0x0
    caac:	00 95 2c 00 00 20    	add    BYTE PTR [rbp+0x2000002c],dl
    cab2:	aa                   	stos   BYTE PTR es:[rdi],al
    cab3:	37                   	(bad)
    cab4:	00 00                	add    BYTE PTR [rax],al
    cab6:	00 00                	add    BYTE PTR [rax],al
    cab8:	00 00                	add    BYTE PTR [rax],al
    caba:	64 75 00             	fs jne cabd <_end+0x6aa5>
    cabd:	00 00                	add    BYTE PTR [rax],al
    cabf:	09 e1                	or     ecx,esp
    cac1:	45 00 00             	add    BYTE PTR [r8],r8b
    cac4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    cac5:	37                   	(bad)
    cac6:	00 00                	add    BYTE PTR [rax],al
    cac8:	00 00                	add    BYTE PTR [rax],al
    caca:	00 00                	add    BYTE PTR [rax],al
    cacc:	01 00                	add    DWORD PTR [rax],eax
    cace:	ac                   	lods   al,BYTE PTR ds:[rsi]
    cacf:	37                   	(bad)
    cad0:	00 00                	add    BYTE PTR [rax],al
    cad2:	00 00                	add    BYTE PTR [rax],al
    cad4:	00 00                	add    BYTE PTR [rax],al
    cad6:	1f                   	(bad)
    cad7:	00 00                	add    BYTE PTR [rax],al
    cad9:	00 00                	add    BYTE PTR [rax],al
    cadb:	00 00                	add    BYTE PTR [rax],al
    cadd:	00 a8 08 09 74 00    	add    BYTE PTR [rax+0x740908],ch
    cae3:	00 65 f4             	add    BYTE PTR [rbp-0xc],ah
    cae6:	45 00 00             	add    BYTE PTR [r8],r8b
    cae9:	05 00 46 00 00       	add    eax,0x4600
    caee:	b5 2c                	mov    ch,0x2c
    caf0:	00 00                	add    BYTE PTR [rax],al
    caf2:	b1 2c                	mov    cl,0x2c
    caf4:	00 00                	add    BYTE PTR [rax],al
    caf6:	05 0c 46 00 00       	add    eax,0x460c
    cafb:	cb                   	retf
    cafc:	2c 00                	sub    al,0x0
    cafe:	00 c7                	add    bh,al
    cb00:	2c 00                	sub    al,0x0
    cb02:	00 3b                	add    BYTE PTR [rbx],bh
    cb04:	21 46 00             	and    DWORD PTR [rsi+0x0],eax
    cb07:	00 07                	add    BYTE PTR [rdi],al
    cb09:	cb                   	retf
    cb0a:	37                   	(bad)
    cb0b:	00 00                	add    BYTE PTR [rax],al
    cb0d:	00 00                	add    BYTE PTR [rax],al
    cb0f:	00 00                	add    BYTE PTR [rax],al
    cb11:	3f                   	(bad)
    cb12:	44 00 00             	add    BYTE PTR [rax],r8b
    cb15:	03 01                	add    eax,DWORD PTR [rcx]
    cb17:	55                   	push   rbp
    cb18:	09 03                	or     DWORD PTR [rbx],eax
    cb1a:	f9                   	stc
    cb1b:	41 00 00             	add    BYTE PTR [r8],al
    cb1e:	00 00                	add    BYTE PTR [rax],al
    cb20:	00 00                	add    BYTE PTR [rax],al
    cb22:	03 01                	add    eax,DWORD PTR [rcx]
    cb24:	54                   	push   rsp
    cb25:	09 03                	or     DWORD PTR [rbx],eax
    cb27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb28:	41 00 00             	add    BYTE PTR [r8],al
    cb2b:	00 00                	add    BYTE PTR [rax],al
    cb2d:	00 00                	add    BYTE PTR [rax],al
    cb2f:	03 01                	add    eax,DWORD PTR [rcx]
    cb31:	51                   	push   rcx
    cb32:	02 08                	add    cl,BYTE PTR [rax]
    cb34:	a9 03 01 52 09       	test   eax,0x9520103
    cb39:	03 e8                	add    ebp,eax
    cb3b:	44 00 00             	add    BYTE PTR [rax],r8b
    cb3e:	00 00                	add    BYTE PTR [rax],al
    cb40:	00 00                	add    BYTE PTR [rax],al
    cb42:	00 00                	add    BYTE PTR [rax],al
    cb44:	27                   	(bad)
    cb45:	10 37                	adc    BYTE PTR [rdi],dh
    cb47:	00 00                	add    BYTE PTR [rax],al
    cb49:	00 00                	add    BYTE PTR [rax],al
    cb4b:	00 00                	add    BYTE PTR [rax],al
    cb4d:	01 30                	add    DWORD PTR [rax],esi
    cb4f:	27                   	(bad)
    cb50:	8b 37                	mov    esi,DWORD PTR [rdi]
    cb52:	00 00                	add    BYTE PTR [rax],al
    cb54:	00 00                	add    BYTE PTR [rax],al
    cb56:	00 00                	add    BYTE PTR [rax],al
    cb58:	01 30                	add    DWORD PTR [rax],esi
    cb5a:	00 4e 74             	add    BYTE PTR [rsi+0x74],cl
    cb5d:	45 00 00             	add    BYTE PTR [r8],r8b
    cb60:	e7 2e                	out    0x2e,eax
    cb62:	00 00                	add    BYTE PTR [rax],al
    cb64:	d0 37                	shl    BYTE PTR [rdi],1
    cb66:	00 00                	add    BYTE PTR [rax],al
    cb68:	00 00                	add    BYTE PTR [rax],al
    cb6a:	00 00                	add    BYTE PTR [rax],al
    cb6c:	1c 03                	sbb    al,0x3
    cb6e:	00 00                	add    BYTE PTR [rax],al
    cb70:	00 00                	add    BYTE PTR [rax],al
    cb72:	00 00                	add    BYTE PTR [rax],al
    cb74:	01 9c 5b 75 00 00 05 	add    DWORD PTR [rbx+rbx*2+0x5000075],ebx
    cb7b:	87 45 00             	xchg   DWORD PTR [rbp+0x0],eax
    cb7e:	00 eb                	add    bl,ch
    cb80:	2c 00                	sub    al,0x0
    cb82:	00 df                	add    bh,bl
    cb84:	2c 00                	sub    al,0x0
    cb86:	00 05 93 45 00 00    	add    BYTE PTR [rip+0x4593],al        # 1111f <_end+0xb107>
    cb8c:	33 2d 00 00 1f 2d    	xor    ebp,DWORD PTR [rip+0x2d1f0000]        # 2d1fcb92 <_end+0x2d1f6b7a>
    cb92:	00 00                	add    BYTE PTR [rax],al
    cb94:	15 a8 45 00 00       	adc    eax,0x45a8
    cb99:	97                   	xchg   edi,eax
    cb9a:	2d 00 00 89 2d       	sub    eax,0x2d890000
    cb9f:	00 00                	add    BYTE PTR [rax],al
    cba1:	3a b3 45 00 00 4a    	cmp    dh,BYTE PTR [rbx+0x4a000045]
    cba7:	04 00                	add    al,0x0
    cba9:	00 98 74 00 00 15    	add    BYTE PTR [rax+0x15000074],bl
    cbaf:	b4 45                	mov    ah,0x45
    cbb1:	00 00                	add    BYTE PTR [rax],al
    cbb3:	e4 2d                	in     al,0x2d
    cbb5:	00 00                	add    BYTE PTR [rax],al
    cbb7:	d8 2d 00 00 4d bd    	fsubr  DWORD PTR [rip+0xffffffffbd4d0000]        # ffffffffbd4dcbbd <_end+0xffffffffbd4d6ba5>
    cbbd:	45 00 00             	add    BYTE PTR [r8],r8b
    cbc0:	5a                   	pop    rdx
    cbc1:	04 00                	add    al,0x0
    cbc3:	00 15 be 45 00 00    	add    BYTE PTR [rip+0x45be],dl        # 11187 <_end+0xb16f>
    cbc9:	1a 2e                	sbb    ch,BYTE PTR [rsi]
    cbcb:	00 00                	add    BYTE PTR [rax],al
    cbcd:	14 2e                	adc    al,0x2e
    cbcf:	00 00                	add    BYTE PTR [rax],al
    cbd1:	00 00                	add    BYTE PTR [rax],al
    cbd3:	1c 1a                	sbb    al,0x1a
    cbd5:	72 00                	jb     cbd7 <_end+0x6bbf>
    cbd7:	00 69 3a             	add    BYTE PTR [rcx+0x3a],ch
	...
    cbe2:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    cbe6:	bc 1e cc 74 00       	mov    esp,0x74cc1e
    cbeb:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13e14 <_end+0xddfc>
    cbf1:	60                   	(bad)
    cbf2:	2e 00 00             	cs add BYTE PTR [rax],al
    cbf5:	5a                   	pop    rdx
    cbf6:	2e 00 00             	cs add BYTE PTR [rax],al
    cbf9:	64 cd 3a             	fs int 0x3a
    cbfc:	00 00                	add    BYTE PTR [rax],al
    cbfe:	00 00                	add    BYTE PTR [rax],al
    cc00:	00 00                	add    BYTE PTR [rax],al
    cc02:	64 75 00             	fs jne cc05 <_end+0x6bed>
    cc05:	00 00                	add    BYTE PTR [rax],al
    cc07:	09 74 45 00          	or     DWORD PTR [rbp+rax*2+0x0],esi
    cc0b:	00 cd                	add    ch,cl
    cc0d:	3a 00                	cmp    al,BYTE PTR [rax]
    cc0f:	00 00                	add    BYTE PTR [rax],al
    cc11:	00 00                	add    BYTE PTR [rax],al
    cc13:	00 01                	add    BYTE PTR [rcx],al
    cc15:	00 cd                	add    ch,cl
    cc17:	3a 00                	cmp    al,BYTE PTR [rax]
    cc19:	00 00                	add    BYTE PTR [rax],al
    cc1b:	00 00                	add    BYTE PTR [rax],al
    cc1d:	00 1f                	add    BYTE PTR [rdi],bl
    cc1f:	00 00                	add    BYTE PTR [rax],al
    cc21:	00 00                	add    BYTE PTR [rax],al
    cc23:	00 00                	add    BYTE PTR [rax],al
    cc25:	00 b4 07 44 75 00 00 	add    BYTE PTR [rdi+rax*1+0x7544],dh
    cc2c:	65 87 45 00          	xchg   DWORD PTR gs:[rbp+0x0],eax
    cc30:	00 05 93 45 00 00    	add    BYTE PTR [rip+0x4593],al        # 111c9 <_end+0xb1b1>
    cc36:	7a 2e                	jp     cc66 <_end+0x6c4e>
    cc38:	00 00                	add    BYTE PTR [rax],al
    cc3a:	76 2e                	jbe    cc6a <_end+0x6c52>
    cc3c:	00 00                	add    BYTE PTR [rax],al
    cc3e:	3b a8 45 00 00 07    	cmp    ebp,DWORD PTR [rax+0x7000045]
    cc44:	ec                   	in     al,dx
    cc45:	3a 00                	cmp    al,BYTE PTR [rax]
    cc47:	00 00                	add    BYTE PTR [rax],al
    cc49:	00 00                	add    BYTE PTR [rax],al
    cc4b:	00 3f                	add    BYTE PTR [rdi],bh
    cc4d:	44 00 00             	add    BYTE PTR [rax],r8b
    cc50:	03 01                	add    eax,DWORD PTR [rcx]
    cc52:	55                   	push   rbp
    cc53:	09 03                	or     DWORD PTR [rbx],eax
    cc55:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    cc58:	00 00                	add    BYTE PTR [rax],al
    cc5a:	00 00                	add    BYTE PTR [rax],al
    cc5c:	00 03                	add    BYTE PTR [rbx],al
    cc5e:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    cc62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cc63:	41 00 00             	add    BYTE PTR [r8],al
    cc66:	00 00                	add    BYTE PTR [rax],al
    cc68:	00 00                	add    BYTE PTR [rax],al
    cc6a:	03 01                	add    eax,DWORD PTR [rcx]
    cc6c:	51                   	push   rcx
    cc6d:	02 08                	add    cl,BYTE PTR [rax]
    cc6f:	b5 03                	mov    ch,0x3
    cc71:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    cc74:	03 98 46 00 00 00    	add    ebx,DWORD PTR [rax+0x46]
    cc7a:	00 00                	add    BYTE PTR [rax],al
    cc7c:	00 00                	add    BYTE PTR [rax],al
    cc7e:	00 27                	add    BYTE PTR [rdi],ah
    cc80:	66 39 00             	cmp    WORD PTR [rax],ax
    cc83:	00 00                	add    BYTE PTR [rax],al
    cc85:	00 00                	add    BYTE PTR [rax],al
    cc87:	00 01                	add    BYTE PTR [rcx],al
    cc89:	30 27                	xor    BYTE PTR [rdi],ah
    cc8b:	ab                   	stos   DWORD PTR es:[rdi],eax
    cc8c:	3a 00                	cmp    al,BYTE PTR [rax]
    cc8e:	00 00                	add    BYTE PTR [rax],al
    cc90:	00 00                	add    BYTE PTR [rax],al
    cc92:	00 01                	add    BYTE PTR [rcx],al
    cc94:	30 00                	xor    BYTE PTR [rax],al
    cc96:	3c e4                	cmp    al,0xe4
    cc98:	1c 00                	sbb    al,0x0
    cc9a:	00 da                	add    dl,bl
    cc9c:	1c 00                	sbb    al,0x0
    cc9e:	00 3c 89             	add    BYTE PTR [rcx+rcx*4],bh
    cca1:	22 00                	and    al,BYTE PTR [rax]
    cca3:	00 93 1c 00 00 3c    	add    BYTE PTR [rbx+0x3c00001c],dl
    cca9:	f1                   	int1
    ccaa:	05 00 00 f1 05       	add    eax,0x5f10000
    ccaf:	00 00                	add    BYTE PTR [rax],al
    ccb1:	24 23                	and    al,0x23
    ccb3:	9e                   	sahf
    ccb4:	21 0a                	and    DWORD PTR [rdx],ecx
    ccb6:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccbb:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccc0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccc5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccca:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cccf:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccd4:	0a 00                	or     al,BYTE PTR [rax]
    ccd6:	3c fd                	cmp    al,0xfd
    ccd8:	03 00                	add    eax,DWORD PTR [rax]
    ccda:	00 f3                	add    bl,dh
    ccdc:	03 00                	add    eax,DWORD PTR [rax]
    ccde:	00 24 09             	add    BYTE PTR [rcx+rcx*1],ah
    cce1:	9e                   	sahf
    cce2:	07                   	(bad)
    cce3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cce6:	33 32                	xor    esi,DWORD PTR [rdx]
    cce8:	0a 00                	or     al,BYTE PTR [rax]
    ccea:	24 22                	and    al,0x22
    ccec:	9e                   	sahf
    cced:	20 2d 2d 2d 2d 2d    	and    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2dfa20 <_end+0x2d2d9a08>
    ccf3:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    ccf8:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    ccfd:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cd02:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cd07:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cd0c:	0a 00                	or     al,BYTE PTR [rax]
    cd0e:	24 22                	and    al,0x22
    cd10:	9e                   	sahf
    cd11:	20 3d 3d 3d 3d 3d    	and    BYTE PTR [rip+0x3d3d3d3d],bh        # 3d3e0a54 <_end+0x3d3daa3c>
    cd17:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd1c:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd21:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd26:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd2b:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd30:	0a 00                	or     al,BYTE PTR [rax]
    cd32:	24 0d                	and    al,0xd
    cd34:	9e                   	sahf
    cd35:	0b 5f 6d             	or     ebx,DWORD PTR [rdi+0x6d]
    cd38:	6d                   	ins    DWORD PTR es:[rdi],dx
    cd39:	5f                   	pop    rdi
    cd3a:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cd3d:	33 32                	xor    esi,DWORD PTR [rdx]
    cd3f:	0a 00                	or     al,BYTE PTR [rax]
    cd41:	24 0b                	and    al,0xb
    cd43:	9e                   	sahf
    cd44:	09 6d 75             	or     DWORD PTR [rbp+0x75],ebp
    cd47:	72 6d                	jb     cdb6 <_end+0x6d9e>
    cd49:	75 72                	jne    cdbd <_end+0x6da5>
    cd4b:	32 0a                	xor    cl,BYTE PTR [rdx]
    cd4d:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cd50:	9e                   	sahf
    cd51:	05 73 75 6d 0a       	add    eax,0xa6d7573
    cd56:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
    cd59:	9e                   	sahf
    cd5a:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    cd5d:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd5e:	65 72 33             	gs jb  cd94 <_end+0x6d7c>
    cd61:	32 0a                	xor    cl,BYTE PTR [rdx]
    cd63:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cd66:	9e                   	sahf
    cd67:	05 65 6c 66 0a       	add    eax,0xa666c65
    cd6c:	00 24 13             	add    BYTE PTR [rbx+rdx*1],ah
    cd6f:	9e                   	sahf
    cd70:	11 5f 6d             	adc    DWORD PTR [rdi+0x6d],ebx
    cd73:	6d                   	ins    DWORD PTR es:[rdi],dx
    cd74:	5f                   	pop    rdi
    cd75:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cd78:	33 32                	xor    esi,DWORD PTR [rdx]
    cd7a:	55                   	push   rbp
    cd7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd7c:	72 6f                	jb     cded <_end+0x6dd5>
    cd7e:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd7f:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd80:	0a 00                	or     al,BYTE PTR [rax]
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <_end+0x12e8ee>
       6:	00 02                	add    BYTE PTR [rdx],al
       8:	08 00                	or     BYTE PTR [rax],al
       a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
       c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
       e:	39 0b                	cmp    DWORD PTR [rbx],ecx
      10:	18 13                	sbb    BYTE PTR [rbx],dl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      17:	0b 0b                	or     ecx,DWORD PTR [rbx]
      19:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
      1c:	0e                   	(bad)
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	04 2e                	add    al,0x2e
      21:	01 3f                	add    DWORD PTR [rdi],edi
      23:	19 03                	sbb    DWORD PTR [rbx],eax
      25:	0e                   	(bad)
      26:	3a 21                	cmp    ah,BYTE PTR [rcx]
      28:	02 3b                	add    bh,BYTE PTR [rbx]
      2a:	05 39 0b 49 13       	add    eax,0x13490b39
      2f:	3c 19                	cmp    al,0x19
      31:	01 13                	add    DWORD PTR [rbx],edx
      33:	00 00                	add    BYTE PTR [rax],al
      35:	05 0f 00 0b 21       	add    eax,0x210b000f
      3a:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
      3d:	00 00                	add    BYTE PTR [rax],al
      3f:	06                   	(bad)
      40:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      43:	19 03                	sbb    DWORD PTR [rbx],eax
      45:	0e                   	(bad)
      46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      50:	01 13                	add    DWORD PTR [rbx],edx
      52:	00 00                	add    BYTE PTR [rax],al
      54:	07                   	(bad)
      55:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      58:	19 03                	sbb    DWORD PTR [rbx],eax
      5a:	08 3a                	or     BYTE PTR [rdx],bh
      5c:	21 06                	and    DWORD PTR [rsi],eax
      5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      60:	39 21                	cmp    DWORD PTR [rcx],esp
      62:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      65:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      69:	01 13                	add    DWORD PTR [rbx],edx
      6b:	00 00                	add    BYTE PTR [rax],al
      6d:	08 16                	or     BYTE PTR [rsi],dl
      6f:	00 03                	add    BYTE PTR [rbx],al
      71:	0e                   	(bad)
      72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      76:	39 0b                	cmp    DWORD PTR [rbx],ecx
      78:	49 13 00             	adc    rax,QWORD PTR [r8]
      7b:	00 09                	add    BYTE PTR [rcx],cl
      7d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
      81:	00 00                	add    BYTE PTR [rax],al
      83:	0a 2e                	or     ch,BYTE PTR [rsi]
      85:	01 3f                	add    DWORD PTR [rdi],edi
      87:	19 03                	sbb    DWORD PTR [rbx],eax
      89:	0e                   	(bad)
      8a:	3a 21                	cmp    ah,BYTE PTR [rcx]
      8c:	02 3b                	add    bh,BYTE PTR [rbx]
      8e:	0b 39                	or     edi,DWORD PTR [rcx]
      90:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
      93:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      97:	01 13                	add    DWORD PTR [rbx],edx
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	0b 49 00             	or     ecx,DWORD PTR [rcx+0x0]
      9e:	02 18                	add    bl,BYTE PTR [rax]
      a0:	7e 18                	jle    ba <__abi_tag-0x2c2>
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	0c 13                	or     al,0x13
      a6:	01 0b                	add    DWORD PTR [rbx],ecx
      a8:	0b 3a                	or     edi,DWORD PTR [rdx]
      aa:	21 02                	and    DWORD PTR [rdx],eax
      ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ae:	39 21                	cmp    DWORD PTR [rcx],esp
      b0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      b3:	01 13                	add    DWORD PTR [rbx],edx
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	0d 0d 00 03 0e       	or     eax,0xe03000d
      bc:	3a 21                	cmp    ah,BYTE PTR [rcx]
      be:	02 3b                	add    bh,BYTE PTR [rbx]
      c0:	0b 39                	or     edi,DWORD PTR [rcx]
      c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      c5:	38 21                	cmp    BYTE PTR [rcx],ah
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 0e                	add    BYTE PTR [rsi],cl
      cb:	0d 00 03 08 3a       	or     eax,0x3a080300
      d0:	21 02                	and    DWORD PTR [rdx],eax
      d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d6:	49 13 38             	adc    rdi,QWORD PTR [r8]
      d9:	0b 00                	or     eax,DWORD PTR [rax]
      db:	00 0f                	add    BYTE PTR [rdi],cl
      dd:	34 00                	xor    al,0x0
      df:	03 0e                	add    ecx,DWORD PTR [rsi]
      e1:	3a 21                	cmp    ah,BYTE PTR [rcx]
      e3:	0c 3b                	or     al,0x3b
      e5:	0b 39                	or     edi,DWORD PTR [rcx]
      e7:	21 0b                	and    DWORD PTR [rbx],ecx
      e9:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
      ed:	00 00                	add    BYTE PTR [rax],al
      ef:	10 2e                	adc    BYTE PTR [rsi],ch
      f1:	01 3f                	add    DWORD PTR [rdi],edi
      f3:	19 03                	sbb    DWORD PTR [rbx],eax
      f5:	08 3a                	or     BYTE PTR [rdx],bh
      f7:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 21390c38 <_end+0x2138ac20>
      fd:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     100:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     104:	00 00                	add    BYTE PTR [rax],al
     106:	11 2e                	adc    DWORD PTR [rsi],ebp
     108:	01 3f                	add    DWORD PTR [rdi],edi
     10a:	19 03                	sbb    DWORD PTR [rbx],eax
     10c:	0e                   	(bad)
     10d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     10f:	02 3b                	add    bh,BYTE PTR [rbx]
     111:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     116:	19 01                	sbb    DWORD PTR [rcx],eax
     118:	13 00                	adc    eax,DWORD PTR [rax]
     11a:	00 12                	add    BYTE PTR [rdx],dl
     11c:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     121:	21 01                	and    DWORD PTR [rcx],eax
     123:	3b 21                	cmp    esp,DWORD PTR [rcx]
     125:	07                   	(bad)
     126:	39 0b                	cmp    DWORD PTR [rbx],ecx
     128:	49 13 02             	adc    rax,QWORD PTR [r10]
     12b:	17                   	(bad)
     12c:	b7 42                	mov    bh,0x42
     12e:	17                   	(bad)
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	13 48 01             	adc    ecx,DWORD PTR [rax+0x1]
     134:	7d 01                	jge    137 <__abi_tag-0x245>
     136:	7f 13                	jg     14b <__abi_tag-0x231>
     138:	00 00                	add    BYTE PTR [rax],al
     13a:	14 11                	adc    al,0x11
     13c:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1450 <_end+0x30ab438>
     142:	1f                   	(bad)
     143:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     145:	55                   	push   rbp
     146:	17                   	(bad)
     147:	11 01                	adc    DWORD PTR [rcx],eax
     149:	10 17                	adc    BYTE PTR [rdi],dl
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	15 0f 00 0b 0b       	adc    eax,0xb0b000f
     152:	00 00                	add    BYTE PTR [rax],al
     154:	16                   	(bad)
     155:	24 00                	and    al,0x0
     157:	0b 0b                	or     ecx,DWORD PTR [rbx]
     159:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     15c:	08 00                	or     BYTE PTR [rax],al
     15e:	00 17                	add    BYTE PTR [rdi],dl
     160:	16                   	(bad)
     161:	00 03                	add    BYTE PTR [rbx],al
     163:	0e                   	(bad)
     164:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     166:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490ca5 <_end+0x1348ac8d>
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	18 15 01 49 13 01    	sbb    BYTE PTR [rip+0x1134901],dl        # 1134a75 <_end+0x112ea5d>
     174:	13 00                	adc    eax,DWORD PTR [rax]
     176:	00 19                	add    BYTE PTR [rcx],bl
     178:	26 00 00             	es add BYTE PTR [rax],al
     17b:	00 1a                	add    BYTE PTR [rdx],bl
     17d:	39 01                	cmp    DWORD PTR [rcx],eax
     17f:	03 08                	add    ecx,DWORD PTR [rax]
     181:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     183:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010cc2 <_end+0x1300acaa>
     189:	00 00                	add    BYTE PTR [rax],al
     18b:	1b 08                	sbb    ecx,DWORD PTR [rax]
     18d:	00 3a                	add    BYTE PTR [rdx],bh
     18f:	0b 3b                	or     edi,DWORD PTR [rbx]
     191:	05 39 0b 18 13       	add    eax,0x13180b39
     196:	00 00                	add    BYTE PTR [rax],al
     198:	1c 15                	sbb    al,0x15
     19a:	00 00                	add    BYTE PTR [rax],al
     19c:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f02d0 <_end+0x193ea2b8>
     1a2:	03 0e                	add    ecx,DWORD PTR [rsi]
     1a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1a6:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0ce5 <_end+0xe6daccd>
     1ac:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     1b0:	01 13                	add    DWORD PTR [rbx],edx
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	1e                   	(bad)
     1b5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1b8:	19 03                	sbb    DWORD PTR [rbx],eax
     1ba:	0e                   	(bad)
     1bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1bd:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cfc <_end+0x1348ace4>
     1c3:	20 0b                	and    BYTE PTR [rbx],cl
     1c5:	01 13                	add    DWORD PTR [rbx],edx
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	1f                   	(bad)
     1ca:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     1cf:	0b 3b                	or     edi,DWORD PTR [rbx]
     1d1:	05 39 0b 49 13       	add    eax,0x13490b39
     1d6:	00 00                	add    BYTE PTR [rax],al
     1d8:	20 2e                	and    BYTE PTR [rsi],ch
     1da:	01 3f                	add    DWORD PTR [rdi],edi
     1dc:	19 03                	sbb    DWORD PTR [rbx],eax
     1de:	08 3a                	or     BYTE PTR [rdx],bh
     1e0:	0b 3b                	or     edi,DWORD PTR [rbx]
     1e2:	05 39 0b 49 13       	add    eax,0x13490b39
     1e7:	3c 19                	cmp    al,0x19
     1e9:	01 13                	add    DWORD PTR [rbx],edx
     1eb:	00 00                	add    BYTE PTR [rax],al
     1ed:	21 2e                	and    DWORD PTR [rsi],ebp
     1ef:	01 3f                	add    DWORD PTR [rdi],edi
     1f1:	19 03                	sbb    DWORD PTR [rbx],eax
     1f3:	0e                   	(bad)
     1f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1f6:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1870d35 <_end+0x186ad1d>
     1fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     1ff:	01 13                	add    DWORD PTR [rbx],edx
     201:	00 00                	add    BYTE PTR [rax],al
     203:	22 2e                	and    ch,BYTE PTR [rsi]
     205:	00 3f                	add    BYTE PTR [rdi],bh
     207:	19 03                	sbb    DWORD PTR [rbx],eax
     209:	0e                   	(bad)
     20a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     20c:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d4b <_end+0x1348ad33>
     212:	3c 19                	cmp    al,0x19
     214:	00 00                	add    BYTE PTR [rax],al
     216:	23 39                	and    edi,DWORD PTR [rcx]
     218:	01 03                	add    DWORD PTR [rbx],eax
     21a:	0e                   	(bad)
     21b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     21d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010d5c <_end+0x1300ad44>
     223:	00 00                	add    BYTE PTR [rax],al
     225:	24 34                	and    al,0x34
     227:	00 03                	add    BYTE PTR [rbx],al
     229:	0e                   	(bad)
     22a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     22c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     22e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     230:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     234:	00 00                	add    BYTE PTR [rax],al
     236:	25 2e 01 3f 19       	and    eax,0x193f012e
     23b:	03 0e                	add    ecx,DWORD PTR [rsi]
     23d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     23f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     241:	39 0b                	cmp    DWORD PTR [rbx],ecx
     243:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     244:	0e                   	(bad)
     245:	3c 19                	cmp    al,0x19
     247:	01 13                	add    DWORD PTR [rbx],edx
     249:	00 00                	add    BYTE PTR [rax],al
     24b:	26 2e 01 3f          	es cs add DWORD PTR [rdi],edi
     24f:	19 03                	sbb    DWORD PTR [rbx],eax
     251:	0e                   	(bad)
     252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     256:	39 0b                	cmp    DWORD PTR [rbx],ecx
     258:	49 13 11             	adc    rdx,QWORD PTR [r9]
     25b:	01 12                	add    DWORD PTR [rdx],edx
     25d:	07                   	(bad)
     25e:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     262:	00 00                	add    BYTE PTR [rax],al
     264:	27                   	(bad)
     265:	1d 01 31 13 52       	sbb    eax,0x52133101
     26a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     270:	58                   	pop    rax
     271:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     274:	57                   	push   rdi
     275:	0b 01                	or     eax,DWORD PTR [rcx]
     277:	13 00                	adc    eax,DWORD PTR [rax]
     279:	00 28                	add    BYTE PTR [rax],ch
     27b:	05 00 31 13 02       	add    eax,0x2133100
     280:	17                   	(bad)
     281:	b7 42                	mov    bh,0x42
     283:	17                   	(bad)
     284:	00 00                	add    BYTE PTR [rax],al
     286:	00 01                	add    BYTE PTR [rcx],al
     288:	05 00 49 13 00       	add    eax,0x134900
     28d:	00 02                	add    BYTE PTR [rdx],al
     28f:	08 00                	or     BYTE PTR [rax],al
     291:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     293:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     295:	39 0b                	cmp    DWORD PTR [rbx],ecx
     297:	18 13                	sbb    BYTE PTR [rbx],dl
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     29e:	02 18                	add    bl,BYTE PTR [rax]
     2a0:	7e 18                	jle    2ba <__abi_tag-0xc2>
     2a2:	00 00                	add    BYTE PTR [rax],al
     2a4:	04 05                	add    al,0x5
     2a6:	00 31                	add    BYTE PTR [rcx],dh
     2a8:	13 02                	adc    eax,DWORD PTR [rdx]
     2aa:	17                   	(bad)
     2ab:	b7 42                	mov    bh,0x42
     2ad:	17                   	(bad)
     2ae:	00 00                	add    BYTE PTR [rax],al
     2b0:	05 24 00 0b 0b       	add    eax,0xb0b0024
     2b5:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     2b8:	0e                   	(bad)
     2b9:	00 00                	add    BYTE PTR [rax],al
     2bb:	06                   	(bad)
     2bc:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     2c1:	0b 3b                	or     edi,DWORD PTR [rbx]
     2c3:	0b 39                	or     edi,DWORD PTR [rcx]
     2c5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2c8:	38 0b                	cmp    BYTE PTR [rbx],cl
     2ca:	00 00                	add    BYTE PTR [rax],al
     2cc:	07                   	(bad)
     2cd:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     2d1:	7f 13                	jg     2e6 <__abi_tag-0x96>
     2d3:	00 00                	add    BYTE PTR [rax],al
     2d5:	08 16                	or     BYTE PTR [rsi],dl
     2d7:	00 03                	add    BYTE PTR [rbx],al
     2d9:	0e                   	(bad)
     2da:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2dc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2de:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2e0:	49 13 00             	adc    rax,QWORD PTR [r8]
     2e3:	00 09                	add    BYTE PTR [rcx],cl
     2e5:	0f 00 0b             	str    WORD PTR [rbx]
     2e8:	21 08                	and    DWORD PTR [rax],ecx
     2ea:	49 13 00             	adc    rax,QWORD PTR [r8]
     2ed:	00 0a                	add    BYTE PTR [rdx],cl
     2ef:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     2f4:	0b 3b                	or     edi,DWORD PTR [rbx]
     2f6:	0b 39                	or     edi,DWORD PTR [rcx]
     2f8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2fb:	00 00                	add    BYTE PTR [rax],al
     2fd:	0b 2e                	or     ebp,DWORD PTR [rsi]
     2ff:	01 3f                	add    DWORD PTR [rdi],edi
     301:	19 03                	sbb    DWORD PTR [rbx],eax
     303:	0e                   	(bad)
     304:	3a 21                	cmp    ah,BYTE PTR [rcx]
     306:	07                   	(bad)
     307:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490e46 <_end+0x1348ae2e>
     30d:	3c 19                	cmp    al,0x19
     30f:	01 13                	add    DWORD PTR [rbx],edx
     311:	00 00                	add    BYTE PTR [rax],al
     313:	0c 34                	or     al,0x34
     315:	00 03                	add    BYTE PTR [rbx],al
     317:	0e                   	(bad)
     318:	3a 21                	cmp    ah,BYTE PTR [rcx]
     31a:	01 3b                	add    DWORD PTR [rbx],edi
     31c:	0b 39                	or     edi,DWORD PTR [rcx]
     31e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     321:	02 17                	add    dl,BYTE PTR [rdi]
     323:	b7 42                	mov    bh,0x42
     325:	17                   	(bad)
     326:	00 00                	add    BYTE PTR [rax],al
     328:	0d 48 00 7d 01       	or     eax,0x17d0048
     32d:	7f 13                	jg     342 <__abi_tag-0x3a>
     32f:	00 00                	add    BYTE PTR [rax],al
     331:	0e                   	(bad)
     332:	1d 01 31 13 52       	sbb    eax,0x52133101
     337:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     33d:	58                   	pop    rax
     33e:	21 01                	and    DWORD PTR [rcx],eax
     340:	59                   	pop    rcx
     341:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     344:	01 13                	add    DWORD PTR [rbx],edx
     346:	00 00                	add    BYTE PTR [rax],al
     348:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     34b:	3f                   	(bad)
     34c:	19 03                	sbb    DWORD PTR [rbx],eax
     34e:	0e                   	(bad)
     34f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     351:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     353:	39 0b                	cmp    DWORD PTR [rbx],ecx
     355:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     359:	01 13                	add    DWORD PTR [rbx],edx
     35b:	00 00                	add    BYTE PTR [rax],al
     35d:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e0663 <_end+0x3a0da64b>
     363:	21 01                	and    DWORD PTR [rcx],eax
     365:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     367:	39 0b                	cmp    DWORD PTR [rbx],ecx
     369:	49 13 02             	adc    rax,QWORD PTR [r10]
     36c:	17                   	(bad)
     36d:	b7 42                	mov    bh,0x42
     36f:	17                   	(bad)
     370:	00 00                	add    BYTE PTR [rax],al
     372:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
     375:	31 13                	xor    DWORD PTR [rbx],edx
     377:	02 17                	add    dl,BYTE PTR [rdi]
     379:	b7 42                	mov    bh,0x42
     37b:	17                   	(bad)
     37c:	00 00                	add    BYTE PTR [rax],al
     37e:	12 26                	adc    ah,BYTE PTR [rsi]
     380:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     383:	00 00                	add    BYTE PTR [rax],al
     385:	13 2e                	adc    ebp,DWORD PTR [rsi]
     387:	01 3f                	add    DWORD PTR [rdi],edi
     389:	19 03                	sbb    DWORD PTR [rbx],eax
     38b:	08 3a                	or     BYTE PTR [rdx],bh
     38d:	21 0a                	and    DWORD PTR [rdx],ecx
     38f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     391:	39 21                	cmp    DWORD PTR [rcx],esp
     393:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     396:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     39a:	01 13                	add    DWORD PTR [rbx],edx
     39c:	00 00                	add    BYTE PTR [rax],al
     39e:	14 2e                	adc    al,0x2e
     3a0:	01 3f                	add    DWORD PTR [rdi],edi
     3a2:	19 03                	sbb    DWORD PTR [rbx],eax
     3a4:	0e                   	(bad)
     3a5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3a7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3a9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3ac:	0e                   	(bad)
     3ad:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3b1:	01 13                	add    DWORD PTR [rbx],edx
     3b3:	00 00                	add    BYTE PTR [rax],al
     3b5:	15 34 00 03 08       	adc    eax,0x8030034
     3ba:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3bc:	01 3b                	add    DWORD PTR [rbx],edi
     3be:	0b 39                	or     edi,DWORD PTR [rcx]
     3c0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3c3:	02 17                	add    dl,BYTE PTR [rdi]
     3c5:	b7 42                	mov    bh,0x42
     3c7:	17                   	(bad)
     3c8:	00 00                	add    BYTE PTR [rax],al
     3ca:	16                   	(bad)
     3cb:	34 00                	xor    al,0x0
     3cd:	03 0e                	add    ecx,DWORD PTR [rsi]
     3cf:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3d1:	01 3b                	add    DWORD PTR [rbx],edi
     3d3:	0b 39                	or     edi,DWORD PTR [rcx]
     3d5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3d8:	00 00                	add    BYTE PTR [rax],al
     3da:	17                   	(bad)
     3db:	1d 01 31 13 52       	sbb    eax,0x52133101
     3e0:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     3e6:	12 07                	adc    al,BYTE PTR [rdi]
     3e8:	58                   	pop    rax
     3e9:	21 01                	and    DWORD PTR [rcx],eax
     3eb:	59                   	pop    rcx
     3ec:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     3ef:	01 13                	add    DWORD PTR [rbx],edx
     3f1:	00 00                	add    BYTE PTR [rax],al
     3f3:	18 0b                	sbb    BYTE PTR [rbx],cl
     3f5:	01 00                	add    DWORD PTR [rax],eax
     3f7:	00 19                	add    BYTE PTR [rcx],bl
     3f9:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     3fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     3ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     400:	0e                   	(bad)
     401:	03 0e                	add    ecx,DWORD PTR [rsi]
     403:	00 00                	add    BYTE PTR [rax],al
     405:	1a 13                	sbb    dl,BYTE PTR [rbx]
     407:	01 03                	add    DWORD PTR [rbx],eax
     409:	0e                   	(bad)
     40a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     40c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     40e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     410:	39 21                	cmp    DWORD PTR [rcx],esp
     412:	10 01                	adc    BYTE PTR [rcx],al
     414:	13 00                	adc    eax,DWORD PTR [rax]
     416:	00 1b                	add    BYTE PTR [rbx],bl
     418:	34 00                	xor    al,0x0
     41a:	03 0e                	add    ecx,DWORD PTR [rsi]
     41c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     41e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     420:	39 21                	cmp    DWORD PTR [rcx],esp
     422:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     425:	1c 0b                	sbb    al,0xb
     427:	00 00                	add    BYTE PTR [rax],al
     429:	1c 34                	sbb    al,0x34
     42b:	00 03                	add    BYTE PTR [rbx],al
     42d:	08 3a                	or     BYTE PTR [rdx],bh
     42f:	21 01                	and    DWORD PTR [rcx],eax
     431:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     433:	39 0b                	cmp    DWORD PTR [rbx],ecx
     435:	49 13 00             	adc    rax,QWORD PTR [r8]
     438:	00 1d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],bl        # 1349053f <_end+0x1348a527>
     43e:	01 13                	add    DWORD PTR [rbx],edx
     440:	00 00                	add    BYTE PTR [rax],al
     442:	1e                   	(bad)
     443:	21 00                	and    DWORD PTR [rax],eax
     445:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     448:	0b 00                	or     eax,DWORD PTR [rax]
     44a:	00 1f                	add    BYTE PTR [rdi],bl
     44c:	34 00                	xor    al,0x0
     44e:	03 0e                	add    ecx,DWORD PTR [rsi]
     450:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     454:	6c                   	ins    BYTE PTR es:[rdi],dx
     455:	19 02                	sbb    DWORD PTR [rdx],eax
     457:	18 00                	sbb    BYTE PTR [rax],al
     459:	00 20                	add    BYTE PTR [rax],ah
     45b:	0b 01                	or     eax,DWORD PTR [rcx]
     45d:	55                   	push   rbp
     45e:	17                   	(bad)
     45f:	00 00                	add    BYTE PTR [rax],al
     461:	21 48 01             	and    DWORD PTR [rax+0x1],ecx
     464:	7d 01                	jge    467 <__abi_tag+0xeb>
     466:	7f 13                	jg     47b <__abi_tag+0xff>
     468:	01 13                	add    DWORD PTR [rbx],edx
     46a:	00 00                	add    BYTE PTR [rax],al
     46c:	22 13                	and    dl,BYTE PTR [rbx]
     46e:	01 0b                	add    DWORD PTR [rbx],ecx
     470:	0b 3a                	or     edi,DWORD PTR [rdx]
     472:	21 07                	and    DWORD PTR [rdi],eax
     474:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     476:	39 21                	cmp    DWORD PTR [rcx],esp
     478:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     47b:	01 13                	add    DWORD PTR [rbx],edx
     47d:	00 00                	add    BYTE PTR [rax],al
     47f:	23 0d 00 03 08 3a    	and    ecx,DWORD PTR [rip+0x3a080300]        # 3a080785 <_end+0x3a07a76d>
     485:	21 07                	and    DWORD PTR [rdi],eax
     487:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     489:	39 0b                	cmp    DWORD PTR [rbx],ecx
     48b:	49 13 38             	adc    rdi,QWORD PTR [r8]
     48e:	0b 00                	or     eax,DWORD PTR [rax]
     490:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     493:	01 3f                	add    DWORD PTR [rdi],edi
     495:	19 03                	sbb    DWORD PTR [rbx],eax
     497:	0e                   	(bad)
     498:	3a 21                	cmp    ah,BYTE PTR [rcx]
     49a:	07                   	(bad)
     49b:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d25da <_end+0x3c0cc5c2>
     4a1:	19 01                	sbb    DWORD PTR [rcx],eax
     4a3:	13 00                	adc    eax,DWORD PTR [rax]
     4a5:	00 25 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],ah        # e0304df <_end+0xe02a4c7>
     4ab:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     4af:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b0:	19 00                	sbb    DWORD PTR [rax],eax
     4b2:	00 26                	add    BYTE PTR [rsi],ah
     4b4:	34 00                	xor    al,0x0
     4b6:	31 13                	xor    DWORD PTR [rbx],edx
     4b8:	00 00                	add    BYTE PTR [rax],al
     4ba:	27                   	(bad)
     4bb:	0b 01                	or     eax,DWORD PTR [rcx]
     4bd:	31 13                	xor    DWORD PTR [rbx],edx
     4bf:	55                   	push   rbp
     4c0:	17                   	(bad)
     4c1:	01 13                	add    DWORD PTR [rbx],edx
     4c3:	00 00                	add    BYTE PTR [rax],al
     4c5:	28 05 00 31 13 00    	sub    BYTE PTR [rip+0x133100],al        # 1335cb <_end+0x12d5b3>
     4cb:	00 29                	add    BYTE PTR [rcx],ch
     4cd:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     4d0:	19 03                	sbb    DWORD PTR [rbx],eax
     4d2:	0e                   	(bad)
     4d3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4d5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4d7:	39 21                	cmp    DWORD PTR [rcx],esp
     4d9:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     4dc:	20 21                	and    BYTE PTR [rcx],ah
     4de:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     4e1:	01 13                	add    DWORD PTR [rbx],edx
     4e3:	00 00                	add    BYTE PTR [rax],al
     4e5:	2a 37                	sub    dh,BYTE PTR [rdi]
     4e7:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     4ea:	00 00                	add    BYTE PTR [rax],al
     4ec:	2b 15 01 49 13 01    	sub    edx,DWORD PTR [rip+0x1134901]        # 1134df3 <_end+0x112eddb>
     4f2:	13 00                	adc    eax,DWORD PTR [rax]
     4f4:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
     4f7:	01 3f                	add    DWORD PTR [rdi],edi
     4f9:	19 03                	sbb    DWORD PTR [rbx],eax
     4fb:	08 3a                	or     BYTE PTR [rdx],bh
     4fd:	21 09                	and    DWORD PTR [rcx],ecx
     4ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     501:	39 21                	cmp    DWORD PTR [rcx],esp
     503:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     506:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     50a:	00 00                	add    BYTE PTR [rax],al
     50c:	2d 18 00 00 00       	sub    eax,0x18
     511:	2e 2e 01 3f          	cs cs add DWORD PTR [rdi],edi
     515:	19 03                	sbb    DWORD PTR [rbx],eax
     517:	0e                   	(bad)
     518:	3a 21                	cmp    ah,BYTE PTR [rcx]
     51a:	12 3b                	adc    bh,BYTE PTR [rbx]
     51c:	0b 39                	or     edi,DWORD PTR [rcx]
     51e:	21 06                	and    DWORD PTR [rsi],eax
     520:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     521:	0e                   	(bad)
     522:	3c 19                	cmp    al,0x19
     524:	01 13                	add    DWORD PTR [rbx],edx
     526:	00 00                	add    BYTE PTR [rax],al
     528:	2f                   	(bad)
     529:	0b 01                	or     eax,DWORD PTR [rcx]
     52b:	11 01                	adc    DWORD PTR [rcx],eax
     52d:	12 07                	adc    al,BYTE PTR [rdi]
     52f:	01 13                	add    DWORD PTR [rbx],edx
     531:	00 00                	add    BYTE PTR [rax],al
     533:	30 2e                	xor    BYTE PTR [rsi],ch
     535:	01 03                	add    DWORD PTR [rbx],eax
     537:	0e                   	(bad)
     538:	3a 21                	cmp    ah,BYTE PTR [rcx]
     53a:	01 3b                	add    DWORD PTR [rbx],edi
     53c:	0b 39                	or     edi,DWORD PTR [rcx]
     53e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     541:	20 21                	and    BYTE PTR [rcx],ah
     543:	01 01                	add    DWORD PTR [rcx],eax
     545:	13 00                	adc    eax,DWORD PTR [rax]
     547:	00 31                	add    BYTE PTR [rcx],dh
     549:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     54c:	19 03                	sbb    DWORD PTR [rbx],eax
     54e:	0e                   	(bad)
     54f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     551:	01 3b                	add    DWORD PTR [rbx],edi
     553:	0b 39                	or     edi,DWORD PTR [rcx]
     555:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     558:	49 13 11             	adc    rdx,QWORD PTR [r9]
     55b:	01 12                	add    DWORD PTR [rdx],edx
     55d:	07                   	(bad)
     55e:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     562:	01 13                	add    DWORD PTR [rbx],edx
     564:	00 00                	add    BYTE PTR [rax],al
     566:	32 2e                	xor    ch,BYTE PTR [rsi]
     568:	01 3f                	add    DWORD PTR [rdi],edi
     56a:	19 03                	sbb    DWORD PTR [rbx],eax
     56c:	0e                   	(bad)
     56d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     56f:	01 3b                	add    DWORD PTR [rbx],edi
     571:	0b 39                	or     edi,DWORD PTR [rcx]
     573:	21 0a                	and    DWORD PTR [rdx],ecx
     575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     576:	0e                   	(bad)
     577:	49 13 11             	adc    rdx,QWORD PTR [r9]
     57a:	01 12                	add    DWORD PTR [rdx],edx
     57c:	07                   	(bad)
     57d:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
     582:	13 00                	adc    eax,DWORD PTR [rax]
     584:	00 33                	add    BYTE PTR [rbx],dh
     586:	0b 01                	or     eax,DWORD PTR [rcx]
     588:	31 13                	xor    DWORD PTR [rbx],edx
     58a:	11 01                	adc    DWORD PTR [rcx],eax
     58c:	12 07                	adc    al,BYTE PTR [rdi]
     58e:	00 00                	add    BYTE PTR [rax],al
     590:	34 1d                	xor    al,0x1d
     592:	01 31                	add    DWORD PTR [rcx],esi
     594:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     597:	b8 42 0b 55 17       	mov    eax,0x17550b42
     59c:	58                   	pop    rax
     59d:	21 01                	and    DWORD PTR [rcx],eax
     59f:	59                   	pop    rcx
     5a0:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     5a3:	00 00                	add    BYTE PTR [rax],al
     5a5:	35 2e 01 3f 19       	xor    eax,0x193f012e
     5aa:	03 0e                	add    ecx,DWORD PTR [rsi]
     5ac:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5ae:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5b0:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5b3:	0e                   	(bad)
     5b4:	49 13 20             	adc    rsp,QWORD PTR [r8]
     5b7:	0b 01                	or     eax,DWORD PTR [rcx]
     5b9:	13 00                	adc    eax,DWORD PTR [rax]
     5bb:	00 36                	add    BYTE PTR [rsi],dh
     5bd:	05 00 03 08 3a       	add    eax,0x3a080300
     5c2:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
     5c5:	21 c9                	and    ecx,ecx
     5c7:	06                   	(bad)
     5c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5ca:	49 13 00             	adc    rax,QWORD PTR [r8]
     5cd:	00 37                	add    BYTE PTR [rdi],dh
     5cf:	05 00 03 08 3a       	add    eax,0x3a080300
     5d4:	21 02                	and    DWORD PTR [rdx],eax
     5d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5d8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5da:	49 13 00             	adc    rax,QWORD PTR [r8]
     5dd:	00 38                	add    BYTE PTR [rax],bh
     5df:	2e 01 31             	cs add DWORD PTR [rcx],esi
     5e2:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     5e5:	11 01                	adc    DWORD PTR [rcx],eax
     5e7:	12 07                	adc    al,BYTE PTR [rdi]
     5e9:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     5ed:	01 13                	add    DWORD PTR [rbx],edx
     5ef:	00 00                	add    BYTE PTR [rax],al
     5f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5f3:	01 31                	add    DWORD PTR [rcx],esi
     5f5:	13 11                	adc    edx,DWORD PTR [rcx]
     5f7:	01 12                	add    DWORD PTR [rdx],edx
     5f9:	07                   	(bad)
     5fa:	01 13                	add    DWORD PTR [rbx],edx
     5fc:	00 00                	add    BYTE PTR [rax],al
     5fe:	3a 36                	cmp    dh,BYTE PTR [rsi]
     600:	00 02                	add    BYTE PTR [rdx],al
     602:	18 00                	sbb    BYTE PTR [rax],al
     604:	00 3b                	add    BYTE PTR [rbx],bh
     606:	11 01                	adc    DWORD PTR [rcx],eax
     608:	25 0e 13 0b 03       	and    eax,0x30b130e
     60d:	1f                   	(bad)
     60e:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     610:	11 01                	adc    DWORD PTR [rcx],eax
     612:	12 07                	adc    al,BYTE PTR [rdi]
     614:	10 17                	adc    BYTE PTR [rdi],dl
     616:	00 00                	add    BYTE PTR [rax],al
     618:	3c 24                	cmp    al,0x24
     61a:	00 0b                	add    BYTE PTR [rbx],cl
     61c:	0b 3e                	or     edi,DWORD PTR [rsi]
     61e:	0b 03                	or     eax,DWORD PTR [rbx]
     620:	08 00                	or     BYTE PTR [rax],al
     622:	00 3d 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],bh        # b0b0637 <_end+0xb0aa61f>
     628:	00 00                	add    BYTE PTR [rax],al
     62a:	3e 16                	ds (bad)
     62c:	00 03                	add    BYTE PTR [rbx],al
     62e:	0e                   	(bad)
     62f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     631:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491170 <_end+0x1348b158>
     637:	00 00                	add    BYTE PTR [rax],al
     639:	3f                   	(bad)
     63a:	26 00 00             	es add BYTE PTR [rax],al
     63d:	00 40 39             	add    BYTE PTR [rax+0x39],al
     640:	01 03                	add    DWORD PTR [rbx],eax
     642:	08 3a                	or     BYTE PTR [rdx],bh
     644:	0b 3b                	or     edi,DWORD PTR [rbx]
     646:	05 39 0b 01 13       	add    eax,0x13010b39
     64b:	00 00                	add    BYTE PTR [rax],al
     64d:	41 08 00             	or     BYTE PTR [r8],al
     650:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     652:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 13181191 <_end+0x1317b179>
     658:	00 00                	add    BYTE PTR [rax],al
     65a:	42 15 00 00 00 43    	rex.X adc eax,0x43000000
     660:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     663:	19 03                	sbb    DWORD PTR [rbx],eax
     665:	0e                   	(bad)
     666:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     668:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e11a7 <_end+0xe6db18f>
     66e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     672:	01 13                	add    DWORD PTR [rbx],edx
     674:	00 00                	add    BYTE PTR [rax],al
     676:	44                   	rex.R
     677:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     67a:	19 03                	sbb    DWORD PTR [rbx],eax
     67c:	08 3a                	or     BYTE PTR [rdx],bh
     67e:	0b 3b                	or     edi,DWORD PTR [rbx]
     680:	05 39 0b 49 13       	add    eax,0x13490b39
     685:	3c 19                	cmp    al,0x19
     687:	01 13                	add    DWORD PTR [rbx],edx
     689:	00 00                	add    BYTE PTR [rax],al
     68b:	45                   	rex.RB
     68c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     68f:	19 03                	sbb    DWORD PTR [rbx],eax
     691:	0e                   	(bad)
     692:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     694:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18711d3 <_end+0x186b1bb>
     69a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     69d:	01 13                	add    DWORD PTR [rbx],edx
     69f:	00 00                	add    BYTE PTR [rax],al
     6a1:	46                   	rex.RX
     6a2:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6a5:	19 03                	sbb    DWORD PTR [rbx],eax
     6a7:	0e                   	(bad)
     6a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6aa:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134911e9 <_end+0x1348b1d1>
     6b0:	3c 19                	cmp    al,0x19
     6b2:	00 00                	add    BYTE PTR [rax],al
     6b4:	47 39 01             	rex.RXB cmp DWORD PTR [r9],r8d
     6b7:	03 0e                	add    ecx,DWORD PTR [rsi]
     6b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6bb:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130111fa <_end+0x1300b1e2>
     6c1:	00 00                	add    BYTE PTR [rax],al
     6c3:	48                   	rex.W
     6c4:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6c7:	19 03                	sbb    DWORD PTR [rbx],eax
     6c9:	0e                   	(bad)
     6ca:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6cc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6ce:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6d1:	0e                   	(bad)
     6d2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     6d6:	00 00                	add    BYTE PTR [rax],al
     6d8:	49                   	rex.WB
     6d9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6dc:	19 03                	sbb    DWORD PTR [rbx],eax
     6de:	0e                   	(bad)
     6df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6e3:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6e5:	87 01                	xchg   DWORD PTR [rcx],eax
     6e7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     6ea:	01 13                	add    DWORD PTR [rbx],edx
     6ec:	00 00                	add    BYTE PTR [rax],al
     6ee:	4a                   	rex.WX
     6ef:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6f2:	19 03                	sbb    DWORD PTR [rbx],eax
     6f4:	0e                   	(bad)
     6f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6f7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6f9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6fc:	0e                   	(bad)
     6fd:	11 01                	adc    DWORD PTR [rcx],eax
     6ff:	12 07                	adc    al,BYTE PTR [rdi]
     701:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     705:	01 13                	add    DWORD PTR [rbx],edx
     707:	00 00                	add    BYTE PTR [rax],al
     709:	4b                   	rex.WXB
     70a:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     70e:	82                   	(bad)
     70f:	01 19                	add    DWORD PTR [rcx],ebx
     711:	7f 13                	jg     726 <__abi_tag+0x3aa>
     713:	00 00                	add    BYTE PTR [rax],al
     715:	4c 1d 01 31 13 52    	rex.WR sbb rax,0x52133101
     71b:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     721:	12 07                	adc    al,BYTE PTR [rdi]
     723:	58                   	pop    rax
     724:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     727:	57                   	push   rdi
     728:	0b 00                	or     eax,DWORD PTR [rax]
     72a:	00 4d 05             	add    BYTE PTR [rbp+0x5],cl
     72d:	00 31                	add    BYTE PTR [rcx],dh
     72f:	13 02                	adc    eax,DWORD PTR [rdx]
     731:	18 00                	sbb    BYTE PTR [rax],al
     733:	00 4e 2e             	add    BYTE PTR [rsi+0x2e],cl
     736:	01 3f                	add    DWORD PTR [rdi],edi
     738:	19 03                	sbb    DWORD PTR [rbx],eax
     73a:	0e                   	(bad)
     73b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     73d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     73f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     741:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     742:	0e                   	(bad)
     743:	20 0b                	and    BYTE PTR [rbx],cl
     745:	01 13                	add    DWORD PTR [rbx],edx
     747:	00 00                	add    BYTE PTR [rax],al
     749:	4f 1d 01 31 13 55    	rex.WRXB sbb rax,0x55133101
     74f:	17                   	(bad)
     750:	58                   	pop    rax
     751:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     754:	57                   	push   rdi
     755:	0b 00                	or     eax,DWORD PTR [rax]
     757:	00 50 2e             	add    BYTE PTR [rax+0x2e],dl
     75a:	01 3f                	add    DWORD PTR [rdi],edi
     75c:	19 03                	sbb    DWORD PTR [rbx],eax
     75e:	0e                   	(bad)
     75f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     761:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e12a0 <_end+0xe6db288>
     767:	49 13 20             	adc    rsp,QWORD PTR [r8]
     76a:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     76d:	01 13                	add    DWORD PTR [rbx],edx
     76f:	00 00                	add    BYTE PTR [rax],al
     771:	51                   	push   rcx
     772:	05 00 31 13 1c       	add    eax,0x1c133100
     777:	0b 00                	or     eax,DWORD PTR [rax]
     779:	00 52 48             	add    BYTE PTR [rdx+0x48],dl
     77c:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     77f:	82                   	(bad)
     780:	01 19                	add    DWORD PTR [rcx],ebx
     782:	7f 13                	jg     797 <__abi_tag+0x41b>
     784:	00 00                	add    BYTE PTR [rax],al
     786:	00 01                	add    BYTE PTR [rcx],al
     788:	08 00                	or     BYTE PTR [rax],al
     78a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     78c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     78e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     790:	18 13                	sbb    BYTE PTR [rbx],dl
     792:	00 00                	add    BYTE PTR [rax],al
     794:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 13509a <_end+0x12f082>
     79a:	00 03                	add    BYTE PTR [rbx],al
     79c:	34 00                	xor    al,0x0
     79e:	03 0e                	add    ecx,DWORD PTR [rsi]
     7a0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7a2:	01 3b                	add    DWORD PTR [rbx],edi
     7a4:	0b 39                	or     edi,DWORD PTR [rcx]
     7a6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7a9:	02 17                	add    dl,BYTE PTR [rdi]
     7ab:	b7 42                	mov    bh,0x42
     7ad:	17                   	(bad)
     7ae:	00 00                	add    BYTE PTR [rax],al
     7b0:	04 24                	add    al,0x24
     7b2:	00 0b                	add    BYTE PTR [rbx],cl
     7b4:	0b 3e                	or     edi,DWORD PTR [rsi]
     7b6:	0b 03                	or     eax,DWORD PTR [rbx]
     7b8:	0e                   	(bad)
     7b9:	00 00                	add    BYTE PTR [rax],al
     7bb:	05 05 00 31 13       	add    eax,0x13310005
     7c0:	02 17                	add    dl,BYTE PTR [rdi]
     7c2:	b7 42                	mov    bh,0x42
     7c4:	17                   	(bad)
     7c5:	00 00                	add    BYTE PTR [rax],al
     7c7:	06                   	(bad)
     7c8:	16                   	(bad)
     7c9:	00 03                	add    BYTE PTR [rbx],al
     7cb:	0e                   	(bad)
     7cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7ce:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7d0:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7d2:	49 13 00             	adc    rax,QWORD PTR [r8]
     7d5:	00 07                	add    BYTE PTR [rdi],al
     7d7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7da:	19 03                	sbb    DWORD PTR [rbx],eax
     7dc:	0e                   	(bad)
     7dd:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7df:	07                   	(bad)
     7e0:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349131f <_end+0x1348b307>
     7e6:	3c 19                	cmp    al,0x19
     7e8:	01 13                	add    DWORD PTR [rbx],edx
     7ea:	00 00                	add    BYTE PTR [rax],al
     7ec:	08 0f                	or     BYTE PTR [rdi],cl
     7ee:	00 0b                	add    BYTE PTR [rbx],cl
     7f0:	21 08                	and    DWORD PTR [rax],ecx
     7f2:	49 13 00             	adc    rax,QWORD PTR [r8]
     7f5:	00 09                	add    BYTE PTR [rcx],cl
     7f7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7fa:	19 03                	sbb    DWORD PTR [rbx],eax
     7fc:	0e                   	(bad)
     7fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     801:	39 0b                	cmp    DWORD PTR [rbx],ecx
     803:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     807:	01 13                	add    DWORD PTR [rbx],edx
     809:	00 00                	add    BYTE PTR [rax],al
     80b:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     80e:	03 08                	add    ecx,DWORD PTR [rax]
     810:	3a 21                	cmp    ah,BYTE PTR [rcx]
     812:	01 3b                	add    DWORD PTR [rbx],edi
     814:	0b 39                	or     edi,DWORD PTR [rcx]
     816:	21 0e                	and    DWORD PTR [rsi],ecx
     818:	49 13 02             	adc    rax,QWORD PTR [r10]
     81b:	17                   	(bad)
     81c:	b7 42                	mov    bh,0x42
     81e:	17                   	(bad)
     81f:	00 00                	add    BYTE PTR [rax],al
     821:	0b 2e                	or     ebp,DWORD PTR [rsi]
     823:	01 3f                	add    DWORD PTR [rdi],edi
     825:	19 03                	sbb    DWORD PTR [rbx],eax
     827:	08 3a                	or     BYTE PTR [rdx],bh
     829:	21 09                	and    DWORD PTR [rcx],ecx
     82b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     82d:	39 21                	cmp    DWORD PTR [rcx],esp
     82f:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     832:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     836:	01 13                	add    DWORD PTR [rbx],edx
     838:	00 00                	add    BYTE PTR [rax],al
     83a:	0c 2e                	or     al,0x2e
     83c:	01 3f                	add    DWORD PTR [rdi],edi
     83e:	19 03                	sbb    DWORD PTR [rbx],eax
     840:	0e                   	(bad)
     841:	3a 21                	cmp    ah,BYTE PTR [rcx]
     843:	01 3b                	add    DWORD PTR [rbx],edi
     845:	0b 39                	or     edi,DWORD PTR [rcx]
     847:	21 0a                	and    DWORD PTR [rdx],ecx
     849:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     84a:	0e                   	(bad)
     84b:	49 13 11             	adc    rdx,QWORD PTR [r9]
     84e:	01 12                	add    DWORD PTR [rdx],edx
     850:	07                   	(bad)
     851:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     855:	01 13                	add    DWORD PTR [rbx],edx
     857:	00 00                	add    BYTE PTR [rax],al
     859:	0d 05 00 03 0e       	or     eax,0xe030005
     85e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     860:	01 3b                	add    DWORD PTR [rbx],edi
     862:	0b 39                	or     edi,DWORD PTR [rcx]
     864:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     867:	02 17                	add    dl,BYTE PTR [rdi]
     869:	b7 42                	mov    bh,0x42
     86b:	17                   	(bad)
     86c:	00 00                	add    BYTE PTR [rax],al
     86e:	0e                   	(bad)
     86f:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     874:	0b 3b                	or     edi,DWORD PTR [rbx]
     876:	0b 39                	or     edi,DWORD PTR [rcx]
     878:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     87b:	38 0b                	cmp    BYTE PTR [rbx],cl
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	0f 0b                	ud2
     881:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     884:	00 00                	add    BYTE PTR [rax],al
     886:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     889:	31 13                	xor    DWORD PTR [rbx],edx
     88b:	02 17                	add    dl,BYTE PTR [rdi]
     88d:	b7 42                	mov    bh,0x42
     88f:	17                   	(bad)
     890:	00 00                	add    BYTE PTR [rax],al
     892:	11 2e                	adc    DWORD PTR [rsi],ebp
     894:	01 3f                	add    DWORD PTR [rdi],edi
     896:	19 03                	sbb    DWORD PTR [rbx],eax
     898:	0e                   	(bad)
     899:	3a 21                	cmp    ah,BYTE PTR [rcx]
     89b:	07                   	(bad)
     89c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     89e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8a1:	0e                   	(bad)
     8a2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     8a6:	01 13                	add    DWORD PTR [rbx],edx
     8a8:	00 00                	add    BYTE PTR [rax],al
     8aa:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     8ad:	03 0e                	add    ecx,DWORD PTR [rsi]
     8af:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8b1:	01 3b                	add    DWORD PTR [rbx],edi
     8b3:	0b 39                	or     edi,DWORD PTR [rcx]
     8b5:	21 0e                	and    DWORD PTR [rsi],ecx
     8b7:	49 13 00             	adc    rax,QWORD PTR [r8]
     8ba:	00 13                	add    BYTE PTR [rbx],dl
     8bc:	34 00                	xor    al,0x0
     8be:	03 0e                	add    ecx,DWORD PTR [rsi]
     8c0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8c2:	01 3b                	add    DWORD PTR [rbx],edi
     8c4:	0b 39                	or     edi,DWORD PTR [rcx]
     8c6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8c9:	1c 0b                	sbb    al,0xb
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	14 1d                	adc    al,0x1d
     8cf:	01 31                	add    DWORD PTR [rcx],esi
     8d1:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     8d4:	b8 42 0b 55 17       	mov    eax,0x17550b42
     8d9:	58                   	pop    rax
     8da:	21 01                	and    DWORD PTR [rcx],eax
     8dc:	59                   	pop    rcx
     8dd:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8e0:	01 13                	add    DWORD PTR [rbx],edx
     8e2:	00 00                	add    BYTE PTR [rax],al
     8e4:	15 1d 01 31 13       	adc    eax,0x1331011d
     8e9:	52                   	push   rdx
     8ea:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     8f0:	58                   	pop    rax
     8f1:	21 01                	and    DWORD PTR [rcx],eax
     8f3:	59                   	pop    rcx
     8f4:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8f7:	00 00                	add    BYTE PTR [rax],al
     8f9:	16                   	(bad)
     8fa:	05 00 03 08 3a       	add    eax,0x3a080300
     8ff:	21 02                	and    DWORD PTR [rdx],eax
     901:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491440 <_end+0x1348b428>
     907:	00 00                	add    BYTE PTR [rax],al
     909:	17                   	(bad)
     90a:	13 01                	adc    eax,DWORD PTR [rcx]
     90c:	0b 0b                	or     ecx,DWORD PTR [rbx]
     90e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     910:	07                   	(bad)
     911:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     913:	39 21                	cmp    DWORD PTR [rcx],esp
     915:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     918:	01 13                	add    DWORD PTR [rbx],edx
     91a:	00 00                	add    BYTE PTR [rax],al
     91c:	18 0d 00 03 08 3a    	sbb    BYTE PTR [rip+0x3a080300],cl        # 3a080c22 <_end+0x3a07ac0a>
     922:	21 07                	and    DWORD PTR [rdi],eax
     924:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     926:	39 0b                	cmp    DWORD PTR [rbx],ecx
     928:	49 13 38             	adc    rdi,QWORD PTR [r8]
     92b:	0b 00                	or     eax,DWORD PTR [rax]
     92d:	00 19                	add    BYTE PTR [rcx],bl
     92f:	05 00 03 08 3a       	add    eax,0x3a080300
     934:	21 01                	and    DWORD PTR [rcx],eax
     936:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     938:	39 0b                	cmp    DWORD PTR [rbx],ecx
     93a:	49 13 00             	adc    rax,QWORD PTR [r8]
     93d:	00 1a                	add    BYTE PTR [rdx],bl
     93f:	34 00                	xor    al,0x0
     941:	03 08                	add    ecx,DWORD PTR [rax]
     943:	3a 21                	cmp    ah,BYTE PTR [rcx]
     945:	01 3b                	add    DWORD PTR [rbx],edi
     947:	0b 39                	or     edi,DWORD PTR [rcx]
     949:	21 0e                	and    DWORD PTR [rsi],ecx
     94b:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     94f:	00 00                	add    BYTE PTR [rax],al
     951:	1b 26                	sbb    esp,DWORD PTR [rsi]
     953:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     956:	00 00                	add    BYTE PTR [rax],al
     958:	1c 2e                	sbb    al,0x2e
     95a:	01 3f                	add    DWORD PTR [rdi],edi
     95c:	19 03                	sbb    DWORD PTR [rbx],eax
     95e:	08 3a                	or     BYTE PTR [rdx],bh
     960:	21 08                	and    DWORD PTR [rax],ecx
     962:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     964:	39 21                	cmp    DWORD PTR [rcx],esp
     966:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     969:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     96d:	00 00                	add    BYTE PTR [rax],al
     96f:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     974:	03 0e                	add    ecx,DWORD PTR [rsi]
     976:	3a 21                	cmp    ah,BYTE PTR [rcx]
     978:	07                   	(bad)
     979:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2ab8 <_end+0x3c0ccaa0>
     97f:	19 01                	sbb    DWORD PTR [rcx],eax
     981:	13 00                	adc    eax,DWORD PTR [rax]
     983:	00 1e                	add    BYTE PTR [rsi],bl
     985:	2e 01 03             	cs add DWORD PTR [rbx],eax
     988:	0e                   	(bad)
     989:	3a 21                	cmp    ah,BYTE PTR [rcx]
     98b:	01 3b                	add    DWORD PTR [rbx],edi
     98d:	0b 39                	or     edi,DWORD PTR [rcx]
     98f:	21 11                	and    DWORD PTR [rcx],edx
     991:	49 13 20             	adc    rsp,QWORD PTR [r8]
     994:	21 01                	and    DWORD PTR [rcx],eax
     996:	01 13                	add    DWORD PTR [rbx],edx
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	1f                   	(bad)
     99b:	34 00                	xor    al,0x0
     99d:	03 08                	add    ecx,DWORD PTR [rax]
     99f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9a1:	01 3b                	add    DWORD PTR [rbx],edi
     9a3:	0b 39                	or     edi,DWORD PTR [rcx]
     9a5:	21 0e                	and    DWORD PTR [rsi],ecx
     9a7:	49 13 00             	adc    rax,QWORD PTR [r8]
     9aa:	00 20                	add    BYTE PTR [rax],ah
     9ac:	0b 01                	or     eax,DWORD PTR [rcx]
     9ae:	55                   	push   rbp
     9af:	17                   	(bad)
     9b0:	01 13                	add    DWORD PTR [rbx],edx
     9b2:	00 00                	add    BYTE PTR [rax],al
     9b4:	21 48 00             	and    DWORD PTR [rax+0x0],ecx
     9b7:	7d 01                	jge    9ba <__abi_tag+0x63e>
     9b9:	83 01 18             	add    DWORD PTR [rcx],0x18
     9bc:	00 00                	add    BYTE PTR [rax],al
     9be:	22 11                	and    dl,BYTE PTR [rcx]
     9c0:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1cd4 <_end+0x30abcbc>
     9c6:	1f                   	(bad)
     9c7:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     9c9:	11 01                	adc    DWORD PTR [rcx],eax
     9cb:	12 07                	adc    al,BYTE PTR [rdi]
     9cd:	10 17                	adc    BYTE PTR [rdi],dl
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
     9d4:	0b 0b                	or     ecx,DWORD PTR [rbx]
     9d6:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     9d9:	08 00                	or     BYTE PTR [rax],al
     9db:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
     9de:	00 0b                	add    BYTE PTR [rbx],cl
     9e0:	0b 00                	or     eax,DWORD PTR [rax]
     9e2:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0309fe <_end+0xe02a9e6>
     9e8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9ea:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491529 <_end+0x1348b511>
     9f0:	00 00                	add    BYTE PTR [rax],al
     9f2:	26 15 01 49 13 01    	es adc eax,0x1134901
     9f8:	13 00                	adc    eax,DWORD PTR [rax]
     9fa:	00 27                	add    BYTE PTR [rdi],ah
     9fc:	26 00 00             	es add BYTE PTR [rax],al
     9ff:	00 28                	add    BYTE PTR [rax],ch
     a01:	39 01                	cmp    DWORD PTR [rcx],eax
     a03:	03 08                	add    ecx,DWORD PTR [rax]
     a05:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a07:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011546 <_end+0x1300b52e>
     a0d:	00 00                	add    BYTE PTR [rax],al
     a0f:	29 08                	sub    DWORD PTR [rax],ecx
     a11:	00 3a                	add    BYTE PTR [rdx],bh
     a13:	0b 3b                	or     edi,DWORD PTR [rbx]
     a15:	05 39 0b 18 13       	add    eax,0x13180b39
     a1a:	00 00                	add    BYTE PTR [rax],al
     a1c:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b000a22 <_end+0x2affaa0a>
     a22:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     a25:	19 03                	sbb    DWORD PTR [rbx],eax
     a27:	0e                   	(bad)
     a28:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a2a:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1569 <_end+0xe6db551>
     a30:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a34:	01 13                	add    DWORD PTR [rbx],edx
     a36:	00 00                	add    BYTE PTR [rax],al
     a38:	2c 2e                	sub    al,0x2e
     a3a:	01 3f                	add    DWORD PTR [rdi],edi
     a3c:	19 03                	sbb    DWORD PTR [rbx],eax
     a3e:	08 3a                	or     BYTE PTR [rdx],bh
     a40:	0b 3b                	or     edi,DWORD PTR [rbx]
     a42:	05 39 0b 49 13       	add    eax,0x13490b39
     a47:	3c 19                	cmp    al,0x19
     a49:	01 13                	add    DWORD PTR [rbx],edx
     a4b:	00 00                	add    BYTE PTR [rax],al
     a4d:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     a52:	03 0e                	add    ecx,DWORD PTR [rsi]
     a54:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a56:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871595 <_end+0x186b57d>
     a5c:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     a5f:	01 13                	add    DWORD PTR [rbx],edx
     a61:	00 00                	add    BYTE PTR [rax],al
     a63:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
     a67:	19 03                	sbb    DWORD PTR [rbx],eax
     a69:	0e                   	(bad)
     a6a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a6c:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134915ab <_end+0x1348b593>
     a72:	3c 19                	cmp    al,0x19
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	2f                   	(bad)
     a77:	39 01                	cmp    DWORD PTR [rcx],eax
     a79:	03 0e                	add    ecx,DWORD PTR [rsi]
     a7b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a7d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130115bc <_end+0x1300b5a4>
     a83:	00 00                	add    BYTE PTR [rax],al
     a85:	30 13                	xor    BYTE PTR [rbx],dl
     a87:	01 03                	add    DWORD PTR [rbx],eax
     a89:	0e                   	(bad)
     a8a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a8c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a8e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a90:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a92:	01 13                	add    DWORD PTR [rbx],edx
     a94:	00 00                	add    BYTE PTR [rax],al
     a96:	31 0b                	xor    DWORD PTR [rbx],ecx
     a98:	01 00                	add    DWORD PTR [rax],eax
     a9a:	00 32                	add    BYTE PTR [rdx],dh
     a9c:	34 00                	xor    al,0x0
     a9e:	03 0e                	add    ecx,DWORD PTR [rsi]
     aa0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     aa2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     aa4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     aa6:	49 13 1c 05 00 00 33 	adc    rbx,QWORD PTR [rax*1+0x34330000]
     aad:	34 
     aae:	00 03                	add    BYTE PTR [rbx],al
     ab0:	08 3a                	or     BYTE PTR [rdx],bh
     ab2:	0b 3b                	or     edi,DWORD PTR [rbx]
     ab4:	0b 39                	or     edi,DWORD PTR [rcx]
     ab6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ab9:	1c 07                	sbb    al,0x7
     abb:	00 00                	add    BYTE PTR [rax],al
     abd:	34 34                	xor    al,0x34
     abf:	00 31                	add    BYTE PTR [rcx],dh
     ac1:	13 00                	adc    eax,DWORD PTR [rax]
     ac3:	00 35 0b 01 31 13    	add    BYTE PTR [rip+0x1331010b],dh        # 13310bd4 <_end+0x1330abbc>
     ac9:	55                   	push   rbp
     aca:	17                   	(bad)
     acb:	01 13                	add    DWORD PTR [rbx],edx
     acd:	00 00                	add    BYTE PTR [rax],al
     acf:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     ad3:	19 03                	sbb    DWORD PTR [rbx],eax
     ad5:	0e                   	(bad)
     ad6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ad8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1617 <_end+0xe6db5ff>
     ade:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ae1:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     ae4:	01 13                	add    DWORD PTR [rbx],edx
     ae6:	00 00                	add    BYTE PTR [rax],al
     ae8:	37                   	(bad)
     ae9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     aec:	19 03                	sbb    DWORD PTR [rbx],eax
     aee:	0e                   	(bad)
     aef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     af1:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1630 <_end+0xe6db618>
     af7:	49 13 20             	adc    rsp,QWORD PTR [r8]
     afa:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     afd:	00 00                	add    BYTE PTR [rax],al
     aff:	00 01                	add    BYTE PTR [rcx],al
     b01:	05 00 49 13 00       	add    eax,0x134900
     b06:	00 02                	add    BYTE PTR [rdx],al
     b08:	08 00                	or     BYTE PTR [rax],al
     b0a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b0c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b0e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b10:	18 13                	sbb    BYTE PTR [rbx],dl
     b12:	00 00                	add    BYTE PTR [rax],al
     b14:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     b17:	02 18                	add    bl,BYTE PTR [rax]
     b19:	7e 18                	jle    b33 <__abi_tag+0x7b7>
     b1b:	00 00                	add    BYTE PTR [rax],al
     b1d:	04 05                	add    al,0x5
     b1f:	00 31                	add    BYTE PTR [rcx],dh
     b21:	13 02                	adc    eax,DWORD PTR [rdx]
     b23:	17                   	(bad)
     b24:	b7 42                	mov    bh,0x42
     b26:	17                   	(bad)
     b27:	00 00                	add    BYTE PTR [rax],al
     b29:	05 48 01 7d 01       	add    eax,0x17d0148
     b2e:	7f 13                	jg     b43 <__abi_tag+0x7c7>
     b30:	00 00                	add    BYTE PTR [rax],al
     b32:	06                   	(bad)
     b33:	24 00                	and    al,0x0
     b35:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b37:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     b3a:	0e                   	(bad)
     b3b:	00 00                	add    BYTE PTR [rax],al
     b3d:	07                   	(bad)
     b3e:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     b43:	0b 3b                	or     edi,DWORD PTR [rbx]
     b45:	0b 39                	or     edi,DWORD PTR [rcx]
     b47:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b4a:	38 0b                	cmp    BYTE PTR [rbx],cl
     b4c:	00 00                	add    BYTE PTR [rax],al
     b4e:	08 1d 01 31 13 52    	or     BYTE PTR [rip+0x52133101],bl        # 52133c55 <_end+0x5212dc3d>
     b54:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     b5a:	12 07                	adc    al,BYTE PTR [rdi]
     b5c:	58                   	pop    rax
     b5d:	21 01                	and    DWORD PTR [rcx],eax
     b5f:	59                   	pop    rcx
     b60:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     b63:	01 13                	add    DWORD PTR [rbx],edx
     b65:	00 00                	add    BYTE PTR [rax],al
     b67:	09 2e                	or     DWORD PTR [rsi],ebp
     b69:	01 3f                	add    DWORD PTR [rdi],edi
     b6b:	19 03                	sbb    DWORD PTR [rbx],eax
     b6d:	0e                   	(bad)
     b6e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     b70:	05 3b 05 39 0b       	add    eax,0xb39053b
     b75:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     b79:	01 13                	add    DWORD PTR [rbx],edx
     b7b:	00 00                	add    BYTE PTR [rax],al
     b7d:	0a 0f                	or     cl,BYTE PTR [rdi]
     b7f:	00 0b                	add    BYTE PTR [rbx],cl
     b81:	21 08                	and    DWORD PTR [rax],ecx
     b83:	49 13 00             	adc    rax,QWORD PTR [r8]
     b86:	00 0b                	add    BYTE PTR [rbx],cl
     b88:	16                   	(bad)
     b89:	00 03                	add    BYTE PTR [rbx],al
     b8b:	0e                   	(bad)
     b8c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b8e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b90:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b92:	49 13 00             	adc    rax,QWORD PTR [r8]
     b95:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
     b98:	01 3f                	add    DWORD PTR [rdi],edi
     b9a:	19 03                	sbb    DWORD PTR [rbx],eax
     b9c:	0e                   	(bad)
     b9d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b9f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ba1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ba3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ba7:	01 13                	add    DWORD PTR [rbx],edx
     ba9:	00 00                	add    BYTE PTR [rax],al
     bab:	0d 05 00 03 0e       	or     eax,0xe030005
     bb0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bb2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bb4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bb6:	49 13 00             	adc    rax,QWORD PTR [r8]
     bb9:	00 0e                	add    BYTE PTR [rsi],cl
     bbb:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     bbf:	00 00                	add    BYTE PTR [rax],al
     bc1:	0f 34                	sysenter
     bc3:	00 03                	add    BYTE PTR [rbx],al
     bc5:	08 3a                	or     BYTE PTR [rdx],bh
     bc7:	21 01                	and    DWORD PTR [rcx],eax
     bc9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bcb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bcd:	49 13 02             	adc    rax,QWORD PTR [r10]
     bd0:	17                   	(bad)
     bd1:	b7 42                	mov    bh,0x42
     bd3:	17                   	(bad)
     bd4:	00 00                	add    BYTE PTR [rax],al
     bd6:	10 2e                	adc    BYTE PTR [rsi],ch
     bd8:	01 3f                	add    DWORD PTR [rdi],edi
     bda:	19 03                	sbb    DWORD PTR [rbx],eax
     bdc:	08 3a                	or     BYTE PTR [rdx],bh
     bde:	21 08                	and    DWORD PTR [rax],ecx
     be0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     be2:	39 21                	cmp    DWORD PTR [rcx],esp
     be4:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     be7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     beb:	01 13                	add    DWORD PTR [rbx],edx
     bed:	00 00                	add    BYTE PTR [rax],al
     bef:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
     bf2:	31 13                	xor    DWORD PTR [rbx],edx
     bf4:	02 17                	add    dl,BYTE PTR [rdi]
     bf6:	b7 42                	mov    bh,0x42
     bf8:	17                   	(bad)
     bf9:	00 00                	add    BYTE PTR [rax],al
     bfb:	12 05 00 03 0e 3a    	adc    al,BYTE PTR [rip+0x3a0e0300]        # 3a0e0f01 <_end+0x3a0daee9>
     c01:	21 01                	and    DWORD PTR [rcx],eax
     c03:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c05:	39 0b                	cmp    DWORD PTR [rbx],ecx
     c07:	49 13 02             	adc    rax,QWORD PTR [r10]
     c0a:	17                   	(bad)
     c0b:	b7 42                	mov    bh,0x42
     c0d:	17                   	(bad)
     c0e:	00 00                	add    BYTE PTR [rax],al
     c10:	13 0b                	adc    ecx,DWORD PTR [rbx]
     c12:	01 11                	add    DWORD PTR [rcx],edx
     c14:	01 12                	add    DWORD PTR [rdx],edx
     c16:	07                   	(bad)
     c17:	01 13                	add    DWORD PTR [rbx],edx
     c19:	00 00                	add    BYTE PTR [rax],al
     c1b:	14 01                	adc    al,0x1
     c1d:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     c20:	01 13                	add    DWORD PTR [rbx],edx
     c22:	00 00                	add    BYTE PTR [rax],al
     c24:	15 21 00 49 13       	adc    eax,0x13490021
     c29:	2f                   	(bad)
     c2a:	0b 00                	or     eax,DWORD PTR [rax]
     c2c:	00 16                	add    BYTE PTR [rsi],dl
     c2e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c31:	19 03                	sbb    DWORD PTR [rbx],eax
     c33:	0e                   	(bad)
     c34:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c36:	05 3b 0b 39 0b       	add    eax,0xb390b3b
     c3b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c3c:	0e                   	(bad)
     c3d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c41:	01 13                	add    DWORD PTR [rbx],edx
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	17                   	(bad)
     c46:	34 00                	xor    al,0x0
     c48:	03 0e                	add    ecx,DWORD PTR [rsi]
     c4a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c4c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c4e:	39 21                	cmp    DWORD PTR [rcx],esp
     c50:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c53:	1c 0b                	sbb    al,0xb
     c55:	00 00                	add    BYTE PTR [rax],al
     c57:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
     c5a:	03 0e                	add    ecx,DWORD PTR [rsi]
     c5c:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     c60:	6c                   	ins    BYTE PTR es:[rdi],dx
     c61:	19 02                	sbb    DWORD PTR [rdx],eax
     c63:	18 00                	sbb    BYTE PTR [rax],al
     c65:	00 19                	add    BYTE PTR [rcx],bl
     c67:	1d 01 31 13 52       	sbb    eax,0x52133101
     c6c:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     c72:	58                   	pop    rax
     c73:	21 01                	and    DWORD PTR [rcx],eax
     c75:	59                   	pop    rcx
     c76:	0b 57 21             	or     edx,DWORD PTR [rdi+0x21]
     c79:	0f 00 00             	sldt   WORD PTR [rax]
     c7c:	1a 1d 01 31 13 52    	sbb    bl,BYTE PTR [rip+0x52133101]        # 52133d83 <_end+0x5212dd6b>
     c82:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     c88:	58                   	pop    rax
     c89:	21 01                	and    DWORD PTR [rcx],eax
     c8b:	59                   	pop    rcx
     c8c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     c8f:	01 13                	add    DWORD PTR [rbx],edx
     c91:	00 00                	add    BYTE PTR [rax],al
     c93:	1b 34 00             	sbb    esi,DWORD PTR [rax+rax*1]
     c96:	03 0e                	add    ecx,DWORD PTR [rsi]
     c98:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c9a:	01 3b                	add    DWORD PTR [rbx],edi
     c9c:	0b 39                	or     edi,DWORD PTR [rcx]
     c9e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ca1:	02 17                	add    dl,BYTE PTR [rdi]
     ca3:	b7 42                	mov    bh,0x42
     ca5:	17                   	(bad)
     ca6:	00 00                	add    BYTE PTR [rax],al
     ca8:	1c 13                	sbb    al,0x13
     caa:	01 0b                	add    DWORD PTR [rbx],ecx
     cac:	0b 3a                	or     edi,DWORD PTR [rdx]
     cae:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 213917ef <_end+0x2138b7d7>
     cb4:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     cb7:	01 13                	add    DWORD PTR [rbx],edx
     cb9:	00 00                	add    BYTE PTR [rax],al
     cbb:	1d 0d 00 03 08       	sbb    eax,0x803000d
     cc0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cc2:	05 3b 0b 39 0b       	add    eax,0xb390b3b
     cc7:	49 13 38             	adc    rdi,QWORD PTR [r8]
     cca:	0b 00                	or     eax,DWORD PTR [rax]
     ccc:	00 1e                	add    BYTE PTR [rsi],bl
     cce:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     cd1:	19 03                	sbb    DWORD PTR [rbx],eax
     cd3:	0e                   	(bad)
     cd4:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cd6:	05 3b 05 39 21       	add    eax,0x2139053b
     cdb:	0d 3c 19 01 13       	or     eax,0x1301193c
     ce0:	00 00                	add    BYTE PTR [rax],al
     ce2:	1f                   	(bad)
     ce3:	13 01                	adc    eax,DWORD PTR [rcx]
     ce5:	03 0e                	add    ecx,DWORD PTR [rsi]
     ce7:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ce9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ceb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ced:	39 21                	cmp    DWORD PTR [rcx],esp
     cef:	10 01                	adc    BYTE PTR [rcx],al
     cf1:	13 00                	adc    eax,DWORD PTR [rax]
     cf3:	00 20                	add    BYTE PTR [rax],ah
     cf5:	1d 01 31 13 52       	sbb    eax,0x52133101
     cfa:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     d00:	12 07                	adc    al,BYTE PTR [rdi]
     d02:	58                   	pop    rax
     d03:	21 01                	and    DWORD PTR [rcx],eax
     d05:	59                   	pop    rcx
     d06:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     d09:	00 00                	add    BYTE PTR [rax],al
     d0b:	21 2e                	and    DWORD PTR [rsi],ebp
     d0d:	01 3f                	add    DWORD PTR [rdi],edi
     d0f:	19 03                	sbb    DWORD PTR [rbx],eax
     d11:	0e                   	(bad)
     d12:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d14:	01 3b                	add    DWORD PTR [rbx],edi
     d16:	0b 39                	or     edi,DWORD PTR [rcx]
     d18:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     d1b:	49 13 11             	adc    rdx,QWORD PTR [r9]
     d1e:	01 12                	add    DWORD PTR [rdx],edx
     d20:	07                   	(bad)
     d21:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     d25:	01 13                	add    DWORD PTR [rbx],edx
     d27:	00 00                	add    BYTE PTR [rax],al
     d29:	22 2e                	and    ch,BYTE PTR [rsi]
     d2b:	00 3f                	add    BYTE PTR [rdi],bh
     d2d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     d30:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d31:	0e                   	(bad)
     d32:	03 0e                	add    ecx,DWORD PTR [rsi]
     d34:	00 00                	add    BYTE PTR [rax],al
     d36:	23 2e                	and    ebp,DWORD PTR [rsi]
     d38:	01 3f                	add    DWORD PTR [rdi],edi
     d3a:	19 03                	sbb    DWORD PTR [rbx],eax
     d3c:	08 3a                	or     BYTE PTR [rdx],bh
     d3e:	21 07                	and    DWORD PTR [rdi],eax
     d40:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d42:	39 21                	cmp    DWORD PTR [rcx],esp
     d44:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     d47:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     d4b:	00 00                	add    BYTE PTR [rax],al
     d4d:	24 18                	and    al,0x18
     d4f:	00 00                	add    BYTE PTR [rax],al
     d51:	00 25 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],ah        # 193f0e85 <_end+0x193eae6d>
     d57:	03 0e                	add    ecx,DWORD PTR [rsi]
     d59:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d5b:	01 3b                	add    DWORD PTR [rbx],edi
     d5d:	0b 39                	or     edi,DWORD PTR [rcx]
     d5f:	21 06                	and    DWORD PTR [rsi],eax
     d61:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d62:	0e                   	(bad)
     d63:	11 01                	adc    DWORD PTR [rcx],eax
     d65:	12 07                	adc    al,BYTE PTR [rdi]
     d67:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     d6b:	01 13                	add    DWORD PTR [rbx],edx
     d6d:	00 00                	add    BYTE PTR [rax],al
     d6f:	26 34 00             	es xor al,0x0
     d72:	03 08                	add    ecx,DWORD PTR [rax]
     d74:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d76:	01 3b                	add    DWORD PTR [rbx],edi
     d78:	0b 39                	or     edi,DWORD PTR [rcx]
     d7a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d7d:	00 00                	add    BYTE PTR [rax],al
     d7f:	27                   	(bad)
     d80:	0b 01                	or     eax,DWORD PTR [rcx]
     d82:	55                   	push   rbp
     d83:	17                   	(bad)
     d84:	01 13                	add    DWORD PTR [rbx],edx
     d86:	00 00                	add    BYTE PTR [rax],al
     d88:	28 2e                	sub    BYTE PTR [rsi],ch
     d8a:	01 3f                	add    DWORD PTR [rdi],edi
     d8c:	19 03                	sbb    DWORD PTR [rbx],eax
     d8e:	0e                   	(bad)
     d8f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d91:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d93:	39 21                	cmp    DWORD PTR [rcx],esp
     d95:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     d98:	20 21                	and    BYTE PTR [rcx],ah
     d9a:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     d9d:	01 13                	add    DWORD PTR [rbx],edx
     d9f:	00 00                	add    BYTE PTR [rax],al
     da1:	29 36                	sub    DWORD PTR [rsi],esi
     da3:	00 02                	add    BYTE PTR [rdx],al
     da5:	18 00                	sbb    BYTE PTR [rax],al
     da7:	00 2a                	add    BYTE PTR [rdx],ch
     da9:	11 01                	adc    DWORD PTR [rcx],eax
     dab:	25 0e 13 0b 03       	and    eax,0x30b130e
     db0:	1f                   	(bad)
     db1:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     db3:	11 01                	adc    DWORD PTR [rcx],eax
     db5:	12 07                	adc    al,BYTE PTR [rdi]
     db7:	10 17                	adc    BYTE PTR [rdi],dl
     db9:	00 00                	add    BYTE PTR [rax],al
     dbb:	2b 24 00             	sub    esp,DWORD PTR [rax+rax*1]
     dbe:	0b 0b                	or     ecx,DWORD PTR [rbx]
     dc0:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     dc3:	08 00                	or     BYTE PTR [rax],al
     dc5:	00 2c 37             	add    BYTE PTR [rdi+rsi*1],ch
     dc8:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     dcb:	00 00                	add    BYTE PTR [rax],al
     dcd:	2d 0f 00 0b 0b       	sub    eax,0xb0b000f
     dd2:	00 00                	add    BYTE PTR [rax],al
     dd4:	2e 16                	cs (bad)
     dd6:	00 03                	add    BYTE PTR [rbx],al
     dd8:	0e                   	(bad)
     dd9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ddb:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349191a <_end+0x1348b902>
     de1:	00 00                	add    BYTE PTR [rax],al
     de3:	2f                   	(bad)
     de4:	15 01 49 13 01       	adc    eax,0x1134901
     de9:	13 00                	adc    eax,DWORD PTR [rax]
     deb:	00 30                	add    BYTE PTR [rax],dh
     ded:	26 00 00             	es add BYTE PTR [rax],al
     df0:	00 31                	add    BYTE PTR [rcx],dh
     df2:	39 01                	cmp    DWORD PTR [rcx],eax
     df4:	03 08                	add    ecx,DWORD PTR [rax]
     df6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     df8:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011937 <_end+0x1300b91f>
     dfe:	00 00                	add    BYTE PTR [rax],al
     e00:	32 08                	xor    cl,BYTE PTR [rax]
     e02:	00 3a                	add    BYTE PTR [rdx],bh
     e04:	0b 3b                	or     edi,DWORD PTR [rbx]
     e06:	05 39 0b 18 13       	add    eax,0x13180b39
     e0b:	00 00                	add    BYTE PTR [rax],al
     e0d:	33 15 00 00 00 34    	xor    edx,DWORD PTR [rip+0x34000000]        # 34000e13 <_end+0x33ffadfb>
     e13:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     e16:	19 03                	sbb    DWORD PTR [rbx],eax
     e18:	0e                   	(bad)
     e19:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e1b:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e195a <_end+0xe6db942>
     e21:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     e25:	01 13                	add    DWORD PTR [rbx],edx
     e27:	00 00                	add    BYTE PTR [rax],al
     e29:	35 2e 01 3f 19       	xor    eax,0x193f012e
     e2e:	03 08                	add    ecx,DWORD PTR [rax]
     e30:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e32:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491971 <_end+0x1348b959>
     e38:	3c 19                	cmp    al,0x19
     e3a:	01 13                	add    DWORD PTR [rbx],edx
     e3c:	00 00                	add    BYTE PTR [rax],al
     e3e:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     e42:	19 03                	sbb    DWORD PTR [rbx],eax
     e44:	0e                   	(bad)
     e45:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e47:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871986 <_end+0x186b96e>
     e4d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e50:	01 13                	add    DWORD PTR [rbx],edx
     e52:	00 00                	add    BYTE PTR [rax],al
     e54:	37                   	(bad)
     e55:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     e58:	19 03                	sbb    DWORD PTR [rbx],eax
     e5a:	0e                   	(bad)
     e5b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e5d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349199c <_end+0x1348b984>
     e63:	3c 19                	cmp    al,0x19
     e65:	00 00                	add    BYTE PTR [rax],al
     e67:	38 39                	cmp    BYTE PTR [rcx],bh
     e69:	01 03                	add    DWORD PTR [rbx],eax
     e6b:	0e                   	(bad)
     e6c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e6e:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130119ad <_end+0x1300b995>
     e74:	00 00                	add    BYTE PTR [rax],al
     e76:	39 2e                	cmp    DWORD PTR [rsi],ebp
     e78:	01 3f                	add    DWORD PTR [rdi],edi
     e7a:	19 03                	sbb    DWORD PTR [rbx],eax
     e7c:	0e                   	(bad)
     e7d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e7f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e81:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e83:	87 01                	xchg   DWORD PTR [rcx],eax
     e85:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e88:	01 13                	add    DWORD PTR [rbx],edx
     e8a:	00 00                	add    BYTE PTR [rax],al
     e8c:	3a 48 01             	cmp    cl,BYTE PTR [rax+0x1]
     e8f:	7d 01                	jge    e92 <__abi_tag+0xb16>
     e91:	82                   	(bad)
     e92:	01 19                	add    DWORD PTR [rcx],ebx
     e94:	7f 13                	jg     ea9 <__abi_tag+0xb2d>
     e96:	00 00                	add    BYTE PTR [rax],al
     e98:	3b 48 00             	cmp    ecx,DWORD PTR [rax+0x0]
     e9b:	7d 01                	jge    e9e <__abi_tag+0xb22>
     e9d:	7f 13                	jg     eb2 <__abi_tag+0xb36>
     e9f:	00 00                	add    BYTE PTR [rax],al
     ea1:	3c 2e                	cmp    al,0x2e
     ea3:	01 03                	add    DWORD PTR [rbx],eax
     ea5:	0e                   	(bad)
     ea6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ea8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     eaa:	39 0b                	cmp    DWORD PTR [rbx],ecx
     eac:	49 13 20             	adc    rsp,QWORD PTR [r8]
     eaf:	0b 01                	or     eax,DWORD PTR [rcx]
     eb1:	13 00                	adc    eax,DWORD PTR [rax]
     eb3:	00 3d 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],bh        # e030eed <_end+0xe02aed5>
     eb9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ebb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ebd:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ebf:	49 13 00             	adc    rax,QWORD PTR [r8]
     ec2:	00 3e                	add    BYTE PTR [rsi],bh
     ec4:	2e 01 03             	cs add DWORD PTR [rbx],eax
     ec7:	0e                   	(bad)
     ec8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     eca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ecc:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ece:	20 0b                	and    BYTE PTR [rbx],cl
     ed0:	01 13                	add    DWORD PTR [rbx],edx
     ed2:	00 00                	add    BYTE PTR [rax],al
     ed4:	3f                   	(bad)
     ed5:	0b 01                	or     eax,DWORD PTR [rcx]
     ed7:	00 00                	add    BYTE PTR [rax],al
     ed9:	40                   	rex
     eda:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     edd:	19 03                	sbb    DWORD PTR [rbx],eax
     edf:	0e                   	(bad)
     ee0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ee2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ee4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ee7:	0e                   	(bad)
     ee8:	49 13 20             	adc    rsp,QWORD PTR [r8]
     eeb:	0b 01                	or     eax,DWORD PTR [rcx]
     eed:	13 00                	adc    eax,DWORD PTR [rax]
     eef:	00 41 34             	add    BYTE PTR [rcx+0x34],al
     ef2:	00 03                	add    BYTE PTR [rbx],al
     ef4:	0e                   	(bad)
     ef5:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     ef9:	6c                   	ins    BYTE PTR es:[rdi],dx
     efa:	19 00                	sbb    DWORD PTR [rax],eax
     efc:	00 42 0b             	add    BYTE PTR [rdx+0xb],al
     eff:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	43 0b 01             	rex.XB or eax,DWORD PTR [r9]
     f07:	31 13                	xor    DWORD PTR [rbx],edx
     f09:	11 01                	adc    DWORD PTR [rcx],eax
     f0b:	12 07                	adc    al,BYTE PTR [rdi]
     f0d:	01 13                	add    DWORD PTR [rbx],edx
     f0f:	00 00                	add    BYTE PTR [rax],al
     f11:	44                   	rex.R
     f12:	2e 01 31             	cs add DWORD PTR [rcx],esi
     f15:	13 11                	adc    edx,DWORD PTR [rcx]
     f17:	01 12                	add    DWORD PTR [rdx],edx
     f19:	07                   	(bad)
     f1a:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f1e:	01 13                	add    DWORD PTR [rbx],edx
     f20:	00 00                	add    BYTE PTR [rax],al
     f22:	45 34 00             	rex.RB xor al,0x0
     f25:	31 13                	xor    DWORD PTR [rbx],edx
     f27:	00 00                	add    BYTE PTR [rax],al
     f29:	46 05 00 31 13 00    	rex.RX add eax,0x133100
     f2f:	00 47 2e             	add    BYTE PTR [rdi+0x2e],al
     f32:	01 31                	add    DWORD PTR [rcx],esi
     f34:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     f37:	11 01                	adc    DWORD PTR [rcx],eax
     f39:	12 07                	adc    al,BYTE PTR [rdi]
     f3b:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f3f:	01 13                	add    DWORD PTR [rbx],edx
     f41:	00 00                	add    BYTE PTR [rax],al
     f43:	48                   	rex.W
     f44:	49 00 80 01 13 7e 18 	rex.WB add BYTE PTR [r8+0x187e1301],al
     f4b:	00 00                	add    BYTE PTR [rax],al
     f4d:	00 01                	add    BYTE PTR [rcx],al
     f4f:	05 00 49 13 00       	add    eax,0x134900
     f54:	00 02                	add    BYTE PTR [rdx],al
     f56:	08 00                	or     BYTE PTR [rax],al
     f58:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f5a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f5c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f5e:	18 13                	sbb    BYTE PTR [rbx],dl
     f60:	00 00                	add    BYTE PTR [rax],al
     f62:	03 0d 00 03 0e 3a    	add    ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e1268 <_end+0x3a0db250>
     f68:	0b 3b                	or     edi,DWORD PTR [rbx]
     f6a:	0b 39                	or     edi,DWORD PTR [rcx]
     f6c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f6f:	38 0b                	cmp    BYTE PTR [rbx],cl
     f71:	00 00                	add    BYTE PTR [rax],al
     f73:	04 16                	add    al,0x16
     f75:	00 03                	add    BYTE PTR [rbx],al
     f77:	0e                   	(bad)
     f78:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f7a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f7c:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f7e:	49 13 00             	adc    rax,QWORD PTR [r8]
     f81:	00 05 49 00 02 18    	add    BYTE PTR [rip+0x18020049],al        # 18020fd0 <_end+0x1801afb8>
     f87:	7e 18                	jle    fa1 <__abi_tag+0xc25>
     f89:	00 00                	add    BYTE PTR [rax],al
     f8b:	06                   	(bad)
     f8c:	24 00                	and    al,0x0
     f8e:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f90:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     f93:	0e                   	(bad)
     f94:	00 00                	add    BYTE PTR [rax],al
     f96:	07                   	(bad)
     f97:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f9a:	19 03                	sbb    DWORD PTR [rbx],eax
     f9c:	0e                   	(bad)
     f9d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f9f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491ade <_end+0x1348bac6>
     fa5:	3c 19                	cmp    al,0x19
     fa7:	01 13                	add    DWORD PTR [rbx],edx
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	08 2e                	or     BYTE PTR [rsi],ch
     fad:	01 3f                	add    DWORD PTR [rdi],edi
     faf:	19 03                	sbb    DWORD PTR [rbx],eax
     fb1:	0e                   	(bad)
     fb2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fb4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fb6:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fb8:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fbc:	01 13                	add    DWORD PTR [rbx],edx
     fbe:	00 00                	add    BYTE PTR [rax],al
     fc0:	09 0f                	or     DWORD PTR [rdi],ecx
     fc2:	00 0b                	add    BYTE PTR [rbx],cl
     fc4:	21 08                	and    DWORD PTR [rax],ecx
     fc6:	49 13 00             	adc    rax,QWORD PTR [r8]
     fc9:	00 0a                	add    BYTE PTR [rdx],cl
     fcb:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     fce:	19 03                	sbb    DWORD PTR [rbx],eax
     fd0:	08 3a                	or     BYTE PTR [rdx],bh
     fd2:	21 0b                	and    DWORD PTR [rbx],ecx
     fd4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fd6:	39 21                	cmp    DWORD PTR [rcx],esp
     fd8:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     fdb:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fdf:	01 13                	add    DWORD PTR [rbx],edx
     fe1:	00 00                	add    BYTE PTR [rax],al
     fe3:	0b 2e                	or     ebp,DWORD PTR [rsi]
     fe5:	01 3f                	add    DWORD PTR [rdi],edi
     fe7:	19 03                	sbb    DWORD PTR [rbx],eax
     fe9:	0e                   	(bad)
     fea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fec:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fee:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ff0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ff1:	0e                   	(bad)
     ff2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ff6:	01 13                	add    DWORD PTR [rbx],edx
     ff8:	00 00                	add    BYTE PTR [rax],al
     ffa:	0c 05                	or     al,0x5
     ffc:	00 31                	add    BYTE PTR [rcx],dh
     ffe:	13 02                	adc    eax,DWORD PTR [rdx]
    1000:	17                   	(bad)
    1001:	b7 42                	mov    bh,0x42
    1003:	17                   	(bad)
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	0d 34 00 03 0e       	or     eax,0xe030034
    100b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    100d:	01 3b                	add    DWORD PTR [rbx],edi
    100f:	0b 39                	or     edi,DWORD PTR [rcx]
    1011:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1014:	02 17                	add    dl,BYTE PTR [rdi]
    1016:	b7 42                	mov    bh,0x42
    1018:	17                   	(bad)
    1019:	00 00                	add    BYTE PTR [rax],al
    101b:	0e                   	(bad)
    101c:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1021:	0b 3b                	or     edi,DWORD PTR [rbx]
    1023:	0b 39                	or     edi,DWORD PTR [rcx]
    1025:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1028:	00 00                	add    BYTE PTR [rax],al
    102a:	0f 26                	(bad)
    102c:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    102f:	00 00                	add    BYTE PTR [rax],al
    1031:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e1337 <_end+0x3a0db31f>
    1037:	21 01                	and    DWORD PTR [rcx],eax
    1039:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    103b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    103d:	49 13 02             	adc    rax,QWORD PTR [r10]
    1040:	17                   	(bad)
    1041:	b7 42                	mov    bh,0x42
    1043:	17                   	(bad)
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	11 48 01             	adc    DWORD PTR [rax+0x1],ecx
    1049:	7d 01                	jge    104c <rand@plt+0xc>
    104b:	7f 13                	jg     1060 <__strncpy_chk@plt>
    104d:	00 00                	add    BYTE PTR [rax],al
    104f:	12 48 01             	adc    cl,BYTE PTR [rax+0x1]
    1052:	7d 01                	jge    1055 <strchr@plt+0x5>
    1054:	7f 13                	jg     1069 <__strncpy_chk@plt+0x9>
    1056:	01 13                	add    DWORD PTR [rbx],edx
    1058:	00 00                	add    BYTE PTR [rax],al
    105a:	13 13                	adc    edx,DWORD PTR [rbx]
    105c:	01 0b                	add    DWORD PTR [rbx],ecx
    105e:	0b 3a                	or     edi,DWORD PTR [rdx]
    1060:	21 06                	and    DWORD PTR [rsi],eax
    1062:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1064:	39 21                	cmp    DWORD PTR [rcx],esp
    1066:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    1069:	01 13                	add    DWORD PTR [rbx],edx
    106b:	00 00                	add    BYTE PTR [rax],al
    106d:	14 0d                	adc    al,0xd
    106f:	00 03                	add    BYTE PTR [rbx],al
    1071:	08 3a                	or     BYTE PTR [rdx],bh
    1073:	21 06                	and    DWORD PTR [rsi],eax
    1075:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1077:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1079:	49 13 38             	adc    rdi,QWORD PTR [r8]
    107c:	0b 00                	or     eax,DWORD PTR [rax]
    107e:	00 15 01 01 49 13    	add    BYTE PTR [rip+0x13490101],dl        # 13491185 <_end+0x1348b16d>
    1084:	01 13                	add    DWORD PTR [rbx],edx
    1086:	00 00                	add    BYTE PTR [rax],al
    1088:	16                   	(bad)
    1089:	21 00                	and    DWORD PTR [rax],eax
    108b:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    108e:	0b 00                	or     eax,DWORD PTR [rax]
    1090:	00 17                	add    BYTE PTR [rdi],dl
    1092:	13 01                	adc    eax,DWORD PTR [rcx]
    1094:	03 0e                	add    ecx,DWORD PTR [rsi]
    1096:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1098:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    109a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    109c:	39 21                	cmp    DWORD PTR [rcx],esp
    109e:	08 01                	or     BYTE PTR [rcx],al
    10a0:	13 00                	adc    eax,DWORD PTR [rax]
    10a2:	00 18                	add    BYTE PTR [rax],bl
    10a4:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10a7:	19 03                	sbb    DWORD PTR [rbx],eax
    10a9:	08 3a                	or     BYTE PTR [rdx],bh
    10ab:	21 0a                	and    DWORD PTR [rdx],ecx
    10ad:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10af:	39 21                	cmp    DWORD PTR [rcx],esp
    10b1:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    10b4:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    10b8:	00 00                	add    BYTE PTR [rax],al
    10ba:	19 2e                	sbb    DWORD PTR [rsi],ebp
    10bc:	01 3f                	add    DWORD PTR [rdi],edi
    10be:	19 03                	sbb    DWORD PTR [rbx],eax
    10c0:	0e                   	(bad)
    10c1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10c3:	06                   	(bad)
    10c4:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3203 <_end+0x3c0cd1eb>
    10ca:	19 01                	sbb    DWORD PTR [rcx],eax
    10cc:	13 00                	adc    eax,DWORD PTR [rax]
    10ce:	00 1a                	add    BYTE PTR [rdx],bl
    10d0:	18 00                	sbb    BYTE PTR [rax],al
    10d2:	00 00                	add    BYTE PTR [rax],al
    10d4:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    10d6:	00 3f                	add    BYTE PTR [rdi],bh
    10d8:	19 03                	sbb    DWORD PTR [rbx],eax
    10da:	0e                   	(bad)
    10db:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10dd:	02 3b                	add    bh,BYTE PTR [rbx]
    10df:	0b 39                	or     edi,DWORD PTR [rcx]
    10e1:	21 01                	and    DWORD PTR [rcx],eax
    10e3:	3c 19                	cmp    al,0x19
    10e5:	00 00                	add    BYTE PTR [rax],al
    10e7:	1c 2e                	sbb    al,0x2e
    10e9:	01 3f                	add    DWORD PTR [rdi],edi
    10eb:	19 03                	sbb    DWORD PTR [rbx],eax
    10ed:	0e                   	(bad)
    10ee:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10f0:	01 3b                	add    DWORD PTR [rbx],edi
    10f2:	0b 39                	or     edi,DWORD PTR [rcx]
    10f4:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    10f7:	49 13 11             	adc    rdx,QWORD PTR [r9]
    10fa:	01 12                	add    DWORD PTR [rdx],edx
    10fc:	07                   	(bad)
    10fd:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1101:	01 13                	add    DWORD PTR [rbx],edx
    1103:	00 00                	add    BYTE PTR [rax],al
    1105:	1d 34 00 03 0e       	sbb    eax,0xe030034
    110a:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    110e:	6c                   	ins    BYTE PTR es:[rdi],dx
    110f:	19 02                	sbb    DWORD PTR [rdx],eax
    1111:	18 00                	sbb    BYTE PTR [rax],al
    1113:	00 1e                	add    BYTE PTR [rsi],bl
    1115:	1d 01 31 13 52       	sbb    eax,0x52133101
    111a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
    1120:	58                   	pop    rax
    1121:	21 01                	and    DWORD PTR [rcx],eax
    1123:	59                   	pop    rcx
    1124:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1127:	01 13                	add    DWORD PTR [rbx],edx
    1129:	00 00                	add    BYTE PTR [rax],al
    112b:	1f                   	(bad)
    112c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    112f:	19 03                	sbb    DWORD PTR [rbx],eax
    1131:	0e                   	(bad)
    1132:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1134:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1136:	39 21                	cmp    DWORD PTR [rcx],esp
    1138:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    113b:	20 21                	and    BYTE PTR [rcx],ah
    113d:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
    1140:	01 13                	add    DWORD PTR [rbx],edx
    1142:	00 00                	add    BYTE PTR [rax],al
    1144:	20 05 00 03 08 3a    	and    BYTE PTR [rip+0x3a080300],al        # 3a08144a <_end+0x3a07b432>
    114a:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    114d:	0b 39                	or     edi,DWORD PTR [rcx]
    114f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1152:	00 00                	add    BYTE PTR [rax],al
    1154:	21 2e                	and    DWORD PTR [rsi],ebp
    1156:	00 3f                	add    BYTE PTR [rdi],bh
    1158:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    115b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115c:	0e                   	(bad)
    115d:	03 0e                	add    ecx,DWORD PTR [rsi]
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	22 11                	and    dl,BYTE PTR [rcx]
    1163:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2477 <_end+0x30ac45f>
    1169:	1f                   	(bad)
    116a:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    116c:	11 01                	adc    DWORD PTR [rcx],eax
    116e:	12 07                	adc    al,BYTE PTR [rdi]
    1170:	10 17                	adc    BYTE PTR [rdi],dl
    1172:	00 00                	add    BYTE PTR [rax],al
    1174:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
    1177:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1179:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    117c:	08 00                	or     BYTE PTR [rax],al
    117e:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    1181:	00 0b                	add    BYTE PTR [rbx],cl
    1183:	0b 00                	or     eax,DWORD PTR [rax]
    1185:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0311a1 <_end+0xe02b189>
    118b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    118d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491ccc <_end+0x1348bcb4>
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	26 15 01 49 13 01    	es adc eax,0x1134901
    119b:	13 00                	adc    eax,DWORD PTR [rax]
    119d:	00 27                	add    BYTE PTR [rdi],ah
    119f:	26 00 00             	es add BYTE PTR [rax],al
    11a2:	00 28                	add    BYTE PTR [rax],ch
    11a4:	39 01                	cmp    DWORD PTR [rcx],eax
    11a6:	03 08                	add    ecx,DWORD PTR [rax]
    11a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11aa:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011ce9 <_end+0x1300bcd1>
    11b0:	00 00                	add    BYTE PTR [rax],al
    11b2:	29 08                	sub    DWORD PTR [rax],ecx
    11b4:	00 3a                	add    BYTE PTR [rdx],bh
    11b6:	0b 3b                	or     edi,DWORD PTR [rbx]
    11b8:	05 39 0b 18 13       	add    eax,0x13180b39
    11bd:	00 00                	add    BYTE PTR [rax],al
    11bf:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b0011c5 <_end+0x2affb1ad>
    11c5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    11c8:	19 03                	sbb    DWORD PTR [rbx],eax
    11ca:	0e                   	(bad)
    11cb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11cd:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1d0c <_end+0xe6dbcf4>
    11d3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    11d7:	01 13                	add    DWORD PTR [rbx],edx
    11d9:	00 00                	add    BYTE PTR [rax],al
    11db:	2c 2e                	sub    al,0x2e
    11dd:	01 3f                	add    DWORD PTR [rdi],edi
    11df:	19 03                	sbb    DWORD PTR [rbx],eax
    11e1:	08 3a                	or     BYTE PTR [rdx],bh
    11e3:	0b 3b                	or     edi,DWORD PTR [rbx]
    11e5:	05 39 0b 49 13       	add    eax,0x13490b39
    11ea:	3c 19                	cmp    al,0x19
    11ec:	01 13                	add    DWORD PTR [rbx],edx
    11ee:	00 00                	add    BYTE PTR [rax],al
    11f0:	2d 2e 01 3f 19       	sub    eax,0x193f012e
    11f5:	03 0e                	add    ecx,DWORD PTR [rsi]
    11f7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11f9:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871d38 <_end+0x186bd20>
    11ff:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1202:	01 13                	add    DWORD PTR [rbx],edx
    1204:	00 00                	add    BYTE PTR [rax],al
    1206:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
    120a:	19 03                	sbb    DWORD PTR [rbx],eax
    120c:	0e                   	(bad)
    120d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    120f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491d4e <_end+0x1348bd36>
    1215:	3c 19                	cmp    al,0x19
    1217:	00 00                	add    BYTE PTR [rax],al
    1219:	2f                   	(bad)
    121a:	39 01                	cmp    DWORD PTR [rcx],eax
    121c:	03 0e                	add    ecx,DWORD PTR [rsi]
    121e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1220:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011d5f <_end+0x1300bd47>
    1226:	00 00                	add    BYTE PTR [rax],al
    1228:	30 2e                	xor    BYTE PTR [rsi],ch
    122a:	01 3f                	add    DWORD PTR [rdi],edi
    122c:	19 03                	sbb    DWORD PTR [rbx],eax
    122e:	0e                   	(bad)
    122f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1231:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1233:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1235:	87 01                	xchg   DWORD PTR [rcx],eax
    1237:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    123a:	01 13                	add    DWORD PTR [rbx],edx
    123c:	00 00                	add    BYTE PTR [rax],al
    123e:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    1241:	03 0e                	add    ecx,DWORD PTR [rsi]
    1243:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1245:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1247:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1249:	49 13 02             	adc    rax,QWORD PTR [r10]
    124c:	18 00                	sbb    BYTE PTR [rax],al
    124e:	00 32                	add    BYTE PTR [rdx],dh
    1250:	34 00                	xor    al,0x0
    1252:	03 0e                	add    ecx,DWORD PTR [rsi]
    1254:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1256:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1258:	39 0b                	cmp    DWORD PTR [rbx],ecx
    125a:	49 13 00             	adc    rax,QWORD PTR [r8]
    125d:	00 33                	add    BYTE PTR [rbx],dh
    125f:	1d 01 31 13 52       	sbb    eax,0x52133101
    1264:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    126a:	12 07                	adc    al,BYTE PTR [rdi]
    126c:	58                   	pop    rax
    126d:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1270:	57                   	push   rdi
    1271:	0b 01                	or     eax,DWORD PTR [rcx]
    1273:	13 00                	adc    eax,DWORD PTR [rax]
    1275:	00 34 48             	add    BYTE PTR [rax+rcx*2],dh
    1278:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    127b:	83 01 18             	add    DWORD PTR [rcx],0x18
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	35 48 00 7d 01       	xor    eax,0x17d0048
    1285:	7f 13                	jg     129a <register_tm_clones+0x2a>
    1287:	00 00                	add    BYTE PTR [rax],al
    1289:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
    128d:	19 03                	sbb    DWORD PTR [rbx],eax
    128f:	0e                   	(bad)
    1290:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1292:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1294:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1296:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1297:	0e                   	(bad)
    1298:	49 13 20             	adc    rsp,QWORD PTR [r8]
    129b:	0b 01                	or     eax,DWORD PTR [rcx]
    129d:	13 00                	adc    eax,DWORD PTR [rax]
    129f:	00 00                	add    BYTE PTR [rax],al
    12a1:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 135ba7 <_end+0x12fb8f>
    12a7:	00 02                	add    BYTE PTR [rdx],al
    12a9:	08 00                	or     BYTE PTR [rax],al
    12ab:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12ad:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12af:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12b1:	18 13                	sbb    BYTE PTR [rbx],dl
    12b3:	00 00                	add    BYTE PTR [rax],al
    12b5:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
    12b8:	02 18                	add    bl,BYTE PTR [rax]
    12ba:	7e 18                	jle    12d4 <__do_global_dtors_aux+0x24>
    12bc:	00 00                	add    BYTE PTR [rax],al
    12be:	04 2e                	add    al,0x2e
    12c0:	01 3f                	add    DWORD PTR [rdi],edi
    12c2:	19 03                	sbb    DWORD PTR [rbx],eax
    12c4:	0e                   	(bad)
    12c5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12c7:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1e06 <_end+0xe6dbdee>
    12cd:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    12d1:	01 13                	add    DWORD PTR [rbx],edx
    12d3:	00 00                	add    BYTE PTR [rax],al
    12d5:	05 05 00 31 13       	add    eax,0x13310005
    12da:	02 17                	add    dl,BYTE PTR [rdi]
    12dc:	b7 42                	mov    bh,0x42
    12de:	17                   	(bad)
    12df:	00 00                	add    BYTE PTR [rax],al
    12e1:	06                   	(bad)
    12e2:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    12e7:	0b 3b                	or     edi,DWORD PTR [rbx]
    12e9:	0b 39                	or     edi,DWORD PTR [rcx]
    12eb:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    12ee:	38 0b                	cmp    BYTE PTR [rbx],cl
    12f0:	00 00                	add    BYTE PTR [rax],al
    12f2:	07                   	(bad)
    12f3:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    12f7:	7f 13                	jg     130c <_Z16buildStringArrayPcj+0xc>
    12f9:	00 00                	add    BYTE PTR [rax],al
    12fb:	08 16                	or     BYTE PTR [rsi],dl
    12fd:	00 03                	add    BYTE PTR [rbx],al
    12ff:	0e                   	(bad)
    1300:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1302:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1304:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1306:	49 13 00             	adc    rax,QWORD PTR [r8]
    1309:	00 09                	add    BYTE PTR [rcx],cl
    130b:	1d 01 31 13 52       	sbb    eax,0x52133101
    1310:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1316:	12 07                	adc    al,BYTE PTR [rdi]
    1318:	58                   	pop    rax
    1319:	21 01                	and    DWORD PTR [rcx],eax
    131b:	59                   	pop    rcx
    131c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    131f:	01 13                	add    DWORD PTR [rbx],edx
    1321:	00 00                	add    BYTE PTR [rax],al
    1323:	0a 48 01             	or     cl,BYTE PTR [rax+0x1]
    1326:	7d 01                	jge    1329 <_Z16buildStringArrayPcj+0x29>
    1328:	7f 13                	jg     133d <_Z16buildStringArrayPcj+0x3d>
    132a:	01 13                	add    DWORD PTR [rbx],edx
    132c:	00 00                	add    BYTE PTR [rax],al
    132e:	0b 05 00 31 13 00    	or     eax,DWORD PTR [rip+0x133100]        # 134434 <_end+0x12e41c>
    1334:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    1337:	01 3f                	add    DWORD PTR [rdi],edi
    1339:	19 03                	sbb    DWORD PTR [rbx],eax
    133b:	0e                   	(bad)
    133c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    133e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1340:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1342:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1346:	01 13                	add    DWORD PTR [rbx],edx
    1348:	00 00                	add    BYTE PTR [rax],al
    134a:	0d 0f 00 0b 21       	or     eax,0x210b000f
    134f:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1352:	00 00                	add    BYTE PTR [rax],al
    1354:	0e                   	(bad)
    1355:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1358:	19 03                	sbb    DWORD PTR [rbx],eax
    135a:	0e                   	(bad)
    135b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    135d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491e9c <_end+0x1348be84>
    1363:	3c 19                	cmp    al,0x19
    1365:	01 13                	add    DWORD PTR [rbx],edx
    1367:	00 00                	add    BYTE PTR [rax],al
    1369:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    136c:	3f                   	(bad)
    136d:	19 03                	sbb    DWORD PTR [rbx],eax
    136f:	0e                   	(bad)
    1370:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1372:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1374:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1376:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1377:	0e                   	(bad)
    1378:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    137c:	01 13                	add    DWORD PTR [rbx],edx
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	10 05 00 49 13 34    	adc    BYTE PTR [rip+0x34134900],al        # 34135c86 <_end+0x3412fc6e>
    1386:	19 00                	sbb    DWORD PTR [rax],eax
    1388:	00 11                	add    BYTE PTR [rcx],dl
    138a:	2f                   	(bad)
    138b:	00 03                	add    BYTE PTR [rbx],al
    138d:	0e                   	(bad)
    138e:	49 13 00             	adc    rax,QWORD PTR [r8]
    1391:	00 12                	add    BYTE PTR [rdx],dl
    1393:	24 00                	and    al,0x0
    1395:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1397:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    139a:	0e                   	(bad)
    139b:	00 00                	add    BYTE PTR [rax],al
    139d:	13 26                	adc    esp,DWORD PTR [rsi]
    139f:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    13a2:	00 00                	add    BYTE PTR [rax],al
    13a4:	14 2e                	adc    al,0x2e
    13a6:	01 3f                	add    DWORD PTR [rdi],edi
    13a8:	19 03                	sbb    DWORD PTR [rbx],eax
    13aa:	0e                   	(bad)
    13ab:	3a 21                	cmp    ah,BYTE PTR [rcx]
    13ad:	04 3b                	add    al,0x3b
    13af:	05 39 21 02 6e       	add    eax,0x6e022139
    13b4:	0e                   	(bad)
    13b5:	49 13 32             	adc    rsi,QWORD PTR [r10]
    13b8:	21 01                	and    DWORD PTR [rcx],eax
    13ba:	3c 19                	cmp    al,0x19
    13bc:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    13bf:	13 00                	adc    eax,DWORD PTR [rax]
    13c1:	00 15 34 00 31 13    	add    BYTE PTR [rip+0x13310034],dl        # 133113fb <_end+0x1330b3e3>
    13c7:	02 17                	add    dl,BYTE PTR [rdi]
    13c9:	b7 42                	mov    bh,0x42
    13cb:	17                   	(bad)
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	16                   	(bad)
    13cf:	0b 01                	or     eax,DWORD PTR [rcx]
    13d1:	11 01                	adc    DWORD PTR [rcx],eax
    13d3:	12 07                	adc    al,BYTE PTR [rdi]
    13d5:	01 13                	add    DWORD PTR [rbx],edx
    13d7:	00 00                	add    BYTE PTR [rax],al
    13d9:	17                   	(bad)
    13da:	34 00                	xor    al,0x0
    13dc:	03 0e                	add    ecx,DWORD PTR [rsi]
    13de:	3a 21                	cmp    ah,BYTE PTR [rcx]
    13e0:	01 3b                	add    DWORD PTR [rbx],edi
    13e2:	0b 39                	or     edi,DWORD PTR [rcx]
    13e4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13e7:	00 00                	add    BYTE PTR [rax],al
    13e9:	18 08                	sbb    BYTE PTR [rax],cl
    13eb:	00 3a                	add    BYTE PTR [rdx],bh
    13ed:	0b 3b                	or     edi,DWORD PTR [rbx]
    13ef:	05 39 0b 18 13       	add    eax,0x13180b39
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	19 1d 01 31 13 52    	sbb    DWORD PTR [rip+0x52133101],ebx        # 521344fd <_end+0x5212e4e5>
    13fc:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1402:	12 07                	adc    al,BYTE PTR [rdi]
    1404:	58                   	pop    rax
    1405:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1408:	57                   	push   rdi
    1409:	0b 00                	or     eax,DWORD PTR [rax]
    140b:	00 1a                	add    BYTE PTR [rdx],bl
    140d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1410:	19 03                	sbb    DWORD PTR [rbx],eax
    1412:	08 3a                	or     BYTE PTR [rdx],bh
    1414:	0b 3b                	or     edi,DWORD PTR [rbx]
    1416:	0b 39                	or     edi,DWORD PTR [rcx]
    1418:	21 03                	and    DWORD PTR [rbx],eax
    141a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    141b:	0e                   	(bad)
    141c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1420:	01 13                	add    DWORD PTR [rbx],edx
    1422:	00 00                	add    BYTE PTR [rax],al
    1424:	1b 13                	sbb    edx,DWORD PTR [rbx]
    1426:	01 03                	add    DWORD PTR [rbx],eax
    1428:	0e                   	(bad)
    1429:	0b 0b                	or     ecx,DWORD PTR [rbx]
    142b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    142d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    142f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1431:	01 13                	add    DWORD PTR [rbx],edx
    1433:	00 00                	add    BYTE PTR [rax],al
    1435:	1c 1d                	sbb    al,0x1d
    1437:	01 31                	add    DWORD PTR [rcx],esi
    1439:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    143c:	b8 42 05 55 17       	mov    eax,0x17550542
    1441:	58                   	pop    rax
    1442:	21 01                	and    DWORD PTR [rcx],eax
    1444:	59                   	pop    rcx
    1445:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1448:	01 13                	add    DWORD PTR [rbx],edx
    144a:	00 00                	add    BYTE PTR [rax],al
    144c:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
    1451:	03 08                	add    ecx,DWORD PTR [rax]
    1453:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1455:	03 3b                	add    edi,DWORD PTR [rbx]
    1457:	05 39 21 03 6e       	add    eax,0x6e032139
    145c:	0e                   	(bad)
    145d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1461:	01 13                	add    DWORD PTR [rbx],edx
    1463:	00 00                	add    BYTE PTR [rax],al
    1465:	1e                   	(bad)
    1466:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    146b:	0b 3b                	or     edi,DWORD PTR [rbx]
    146d:	0b 39                	or     edi,DWORD PTR [rcx]
    146f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1472:	00 00                	add    BYTE PTR [rax],al
    1474:	1f                   	(bad)
    1475:	34 00                	xor    al,0x0
    1477:	03 0e                	add    ecx,DWORD PTR [rsi]
    1479:	3a 21                	cmp    ah,BYTE PTR [rcx]
    147b:	01 3b                	add    DWORD PTR [rbx],edi
    147d:	0b 39                	or     edi,DWORD PTR [rcx]
    147f:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1482:	02 17                	add    dl,BYTE PTR [rdi]
    1484:	b7 42                	mov    bh,0x42
    1486:	17                   	(bad)
    1487:	00 00                	add    BYTE PTR [rax],al
    1489:	20 48 00             	and    BYTE PTR [rax+0x0],cl
    148c:	7d 01                	jge    148f <_Z11hashMapCtorPFj8string_tEj+0x5f>
    148e:	7f 13                	jg     14a3 <_Z11hashMapCtorPFj8string_tEj+0x73>
    1490:	00 00                	add    BYTE PTR [rax],al
    1492:	21 18                	and    DWORD PTR [rax],ebx
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 22                	add    BYTE PTR [rdx],ah
    1498:	10 00                	adc    BYTE PTR [rax],al
    149a:	0b 21                	or     esp,DWORD PTR [rcx]
    149c:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    149f:	00 00                	add    BYTE PTR [rax],al
    14a1:	23 05 00 03 0e 3a    	and    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e17a7 <_end+0x3a0db78f>
    14a7:	21 01                	and    DWORD PTR [rcx],eax
    14a9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14ab:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14ad:	49 13 02             	adc    rax,QWORD PTR [r10]
    14b0:	17                   	(bad)
    14b1:	b7 42                	mov    bh,0x42
    14b3:	17                   	(bad)
    14b4:	00 00                	add    BYTE PTR [rax],al
    14b6:	24 36                	and    al,0x36
    14b8:	00 02                	add    BYTE PTR [rdx],al
    14ba:	18 00                	sbb    BYTE PTR [rax],al
    14bc:	00 25 01 01 49 13    	add    BYTE PTR [rip+0x13490101],ah        # 134915c3 <_end+0x1348b5ab>
    14c2:	01 13                	add    DWORD PTR [rbx],edx
    14c4:	00 00                	add    BYTE PTR [rax],al
    14c6:	26 21 00             	es and DWORD PTR [rax],eax
    14c9:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    14cc:	0b 00                	or     eax,DWORD PTR [rax]
    14ce:	00 27                	add    BYTE PTR [rdi],ah
    14d0:	48 00 7d 01          	rex.W add BYTE PTR [rbp+0x1],dil
    14d4:	83 01 18             	add    DWORD PTR [rcx],0x18
    14d7:	00 00                	add    BYTE PTR [rax],al
    14d9:	28 2e                	sub    BYTE PTR [rsi],ch
    14db:	01 3f                	add    DWORD PTR [rdi],edi
    14dd:	19 03                	sbb    DWORD PTR [rbx],eax
    14df:	0e                   	(bad)
    14e0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14e2:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3621 <_end+0x3c0cd609>
    14e8:	19 01                	sbb    DWORD PTR [rcx],eax
    14ea:	13 00                	adc    eax,DWORD PTR [rax]
    14ec:	00 29                	add    BYTE PTR [rcx],ch
    14ee:	34 00                	xor    al,0x0
    14f0:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    14f3:	00 2a                	add    BYTE PTR [rdx],ch
    14f5:	34 00                	xor    al,0x0
    14f7:	03 08                	add    ecx,DWORD PTR [rax]
    14f9:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14fb:	01 3b                	add    DWORD PTR [rbx],edi
    14fd:	0b 39                	or     edi,DWORD PTR [rcx]
    14ff:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1502:	02 17                	add    dl,BYTE PTR [rdi]
    1504:	b7 42                	mov    bh,0x42
    1506:	17                   	(bad)
    1507:	00 00                	add    BYTE PTR [rax],al
    1509:	2b 2e                	sub    ebp,DWORD PTR [rsi]
    150b:	01 3f                	add    DWORD PTR [rdi],edi
    150d:	19 03                	sbb    DWORD PTR [rbx],eax
    150f:	0e                   	(bad)
    1510:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1512:	04 3b                	add    al,0x3b
    1514:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1519:	32 21                	xor    ah,BYTE PTR [rcx]
    151b:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    151e:	8b 01                	mov    eax,DWORD PTR [rcx]
    1520:	21 01                	and    DWORD PTR [rcx],eax
    1522:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1525:	13 00                	adc    eax,DWORD PTR [rax]
    1527:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
    152a:	00 3f                	add    BYTE PTR [rdi],bh
    152c:	19 03                	sbb    DWORD PTR [rbx],eax
    152e:	08 3a                	or     BYTE PTR [rdx],bh
    1530:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1533:	05 39 21 02 6e       	add    eax,0x6e022139
    1538:	0e                   	(bad)
    1539:	49 13 32             	adc    rsi,QWORD PTR [r10]
    153c:	21 01                	and    DWORD PTR [rcx],eax
    153e:	3c 19                	cmp    al,0x19
    1540:	00 00                	add    BYTE PTR [rax],al
    1542:	2d 05 00 03 0e       	sub    eax,0xe030005
    1547:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1549:	04 3b                	add    al,0x3b
    154b:	05 39 0b 49 13       	add    eax,0x13490b39
    1550:	00 00                	add    BYTE PTR [rax],al
    1552:	2e 0b 01             	cs or  eax,DWORD PTR [rcx]
    1555:	55                   	push   rbp
    1556:	17                   	(bad)
    1557:	00 00                	add    BYTE PTR [rax],al
    1559:	2f                   	(bad)
    155a:	30 00                	xor    BYTE PTR [rax],al
    155c:	03 0e                	add    ecx,DWORD PTR [rsi]
    155e:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
    1562:	00 00                	add    BYTE PTR [rax],al
    1564:	30 2e                	xor    BYTE PTR [rsi],ch
    1566:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1569:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    156c:	0b 01                	or     eax,DWORD PTR [rcx]
    156e:	13 00                	adc    eax,DWORD PTR [rax]
    1570:	00 31                	add    BYTE PTR [rcx],dh
    1572:	05 00 03 0e 49       	add    eax,0x490e0300
    1577:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    157a:	00 00                	add    BYTE PTR [rax],al
    157c:	32 2e                	xor    ch,BYTE PTR [rsi]
    157e:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1581:	20 21                	and    BYTE PTR [rcx],ah
    1583:	03 01                	add    eax,DWORD PTR [rcx]
    1585:	13 00                	adc    eax,DWORD PTR [rax]
    1587:	00 33                	add    BYTE PTR [rbx],dh
    1589:	39 01                	cmp    DWORD PTR [rcx],eax
    158b:	03 0e                	add    ecx,DWORD PTR [rsi]
    158d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    158f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1591:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1593:	01 13                	add    DWORD PTR [rbx],edx
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	34 34                	xor    al,0x34
    1599:	00 03                	add    BYTE PTR [rbx],al
    159b:	0e                   	(bad)
    159c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    159e:	10 3b                	adc    BYTE PTR [rbx],bh
    15a0:	21 b2 02 39 21 14    	and    DWORD PTR [rdx+0x14213902],esi
    15a6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15aa:	1c 21                	sbb    al,0x21
    15ac:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    15b0:	00 35 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],dh        # b0b16c9 <_end+0xb0ab6b1>
    15b6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15b8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15ba:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15bd:	0e                   	(bad)
    15be:	01 13                	add    DWORD PTR [rbx],edx
    15c0:	00 00                	add    BYTE PTR [rax],al
    15c2:	36 0d 00 03 0e 3a    	ss or  eax,0x3a0e0300
    15c8:	21 1c 3b             	and    DWORD PTR [rbx+rdi*1],ebx
    15cb:	21 00                	and    DWORD PTR [rax],eax
    15cd:	49 13 38             	adc    rdi,QWORD PTR [r8]
    15d0:	0b 00                	or     eax,DWORD PTR [rax]
    15d2:	00 37                	add    BYTE PTR [rdi],dh
    15d4:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    15d7:	19 03                	sbb    DWORD PTR [rbx],eax
    15d9:	0e                   	(bad)
    15da:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15dc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15de:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15e0:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15e4:	00 00                	add    BYTE PTR [rax],al
    15e6:	38 34 00             	cmp    BYTE PTR [rax+rax*1],dh
    15e9:	03 0e                	add    ecx,DWORD PTR [rsi]
    15eb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15ed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15ef:	39 21                	cmp    DWORD PTR [rcx],esp
    15f1:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15f4:	1c 0b                	sbb    al,0xb
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	39 1d 01 31 13 52    	cmp    DWORD PTR [rip+0x52133101],ebx        # 521346ff <_end+0x5212e6e7>
    15fe:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    1604:	58                   	pop    rax
    1605:	21 01                	and    DWORD PTR [rcx],eax
    1607:	59                   	pop    rcx
    1608:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    160f:	01 31                	add    DWORD PTR [rcx],esi
    1611:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    1614:	01 13                	add    DWORD PTR [rbx],edx
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	3b 34 00             	cmp    esi,DWORD PTR [rax+rax*1]
    161b:	31 13                	xor    DWORD PTR [rbx],edx
    161d:	00 00                	add    BYTE PTR [rax],al
    161f:	3c 2e                	cmp    al,0x2e
    1621:	00 3f                	add    BYTE PTR [rdi],bh
    1623:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1626:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1627:	0e                   	(bad)
    1628:	03 0e                	add    ecx,DWORD PTR [rsi]
    162a:	00 00                	add    BYTE PTR [rax],al
    162c:	3d 39 00 03 0e       	cmp    eax,0xe030039
    1631:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1633:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1635:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1637:	00 00                	add    BYTE PTR [rax],al
    1639:	3e 34 00             	ds xor al,0x0
    163c:	03 0e                	add    ecx,DWORD PTR [rsi]
    163e:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1640:	0e                   	(bad)
    1641:	3b 21                	cmp    esp,DWORD PTR [rcx]
    1643:	30 39                	xor    BYTE PTR [rcx],bh
    1645:	21 14 49             	and    DWORD PTR [rcx+rcx*2],edx
    1648:	13 3c 19             	adc    edi,DWORD PTR [rcx+rbx*1]
    164b:	1c 21                	sbb    al,0x21
    164d:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    1651:	00 3f                	add    BYTE PTR [rdi],bh
    1653:	02 01                	add    al,BYTE PTR [rcx]
    1655:	03 0e                	add    ecx,DWORD PTR [rsi]
    1657:	0b 21                	or     esp,DWORD PTR [rcx]
    1659:	08 3a                	or     BYTE PTR [rdx],bh
    165b:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    165e:	05 39 21 0d 01       	add    eax,0x10d2139
    1663:	13 00                	adc    eax,DWORD PTR [rax]
    1665:	00 40 0d             	add    BYTE PTR [rax+0xd],al
    1668:	00 03                	add    BYTE PTR [rbx],al
    166a:	08 3a                	or     BYTE PTR [rdx],bh
    166c:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    166f:	05 39 0b 49 13       	add    eax,0x13490b39
    1674:	38 21                	cmp    BYTE PTR [rcx],ah
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	00 41 2e             	add    BYTE PTR [rcx+0x2e],al
    167b:	01 3f                	add    DWORD PTR [rdi],edi
    167d:	19 03                	sbb    DWORD PTR [rbx],eax
    167f:	0e                   	(bad)
    1680:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1682:	04 3b                	add    al,0x3b
    1684:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1689:	32 21                	xor    ah,BYTE PTR [rcx]
    168b:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    168e:	63 19                	movsxd ebx,DWORD PTR [rcx]
    1690:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1693:	13 00                	adc    eax,DWORD PTR [rax]
    1695:	00 42 16             	add    BYTE PTR [rdx+0x16],al
    1698:	00 03                	add    BYTE PTR [rbx],al
    169a:	0e                   	(bad)
    169b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    169d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134921dc <_end+0x1348c1c4>
    16a3:	00 00                	add    BYTE PTR [rax],al
    16a5:	43 2f                	rex.XB (bad)
    16a7:	00 03                	add    BYTE PTR [rbx],al
    16a9:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    16ac:	00 00                	add    BYTE PTR [rax],al
    16ae:	44 13 01             	adc    r8d,DWORD PTR [rcx]
    16b1:	03 0e                	add    ecx,DWORD PTR [rsi]
    16b3:	0b 21                	or     esp,DWORD PTR [rcx]
    16b5:	01 3a                	add    DWORD PTR [rdx],edi
    16b7:	21 10                	and    DWORD PTR [rax],edx
    16b9:	3b 21                	cmp    esp,DWORD PTR [rcx]
    16bb:	8a 02                	mov    al,BYTE PTR [rdx]
    16bd:	39 21                	cmp    DWORD PTR [rcx],esp
    16bf:	0c 01                	or     al,0x1
    16c1:	13 00                	adc    eax,DWORD PTR [rax]
    16c3:	00 45 34             	add    BYTE PTR [rbp+0x34],al
    16c6:	00 03                	add    BYTE PTR [rbx],al
    16c8:	08 3a                	or     BYTE PTR [rdx],bh
    16ca:	21 10                	and    DWORD PTR [rax],edx
    16cc:	3b 21                	cmp    esp,DWORD PTR [rcx]
    16ce:	91                   	xchg   ecx,eax
    16cf:	02 39                	add    bh,BYTE PTR [rcx]
    16d1:	21 21                	and    DWORD PTR [rcx],esp
    16d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d4:	0e                   	(bad)
    16d5:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    16d8:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    16db:	1c 21                	sbb    al,0x21
    16dd:	01 6c 19 20          	add    DWORD PTR [rcx+rbx*1+0x20],ebp
    16e1:	21 01                	and    DWORD PTR [rcx],eax
    16e3:	00 00                	add    BYTE PTR [rax],al
    16e5:	46 0d 00 03 08 3a    	rex.RX or eax,0x3a080300
    16eb:	21 16                	and    DWORD PTR [rsi],edx
    16ed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16ef:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16f1:	49 13 38             	adc    rdi,QWORD PTR [r8]
    16f4:	0b 00                	or     eax,DWORD PTR [rax]
    16f6:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    16f9:	00 03                	add    BYTE PTR [rbx],al
    16fb:	0e                   	(bad)
    16fc:	3c 19                	cmp    al,0x19
    16fe:	00 00                	add    BYTE PTR [rax],al
    1700:	48 0b 01             	or     rax,QWORD PTR [rcx]
    1703:	00 00                	add    BYTE PTR [rax],al
    1705:	49 34 00             	rex.WB xor al,0x0
    1708:	03 08                	add    ecx,DWORD PTR [rax]
    170a:	3a 21                	cmp    ah,BYTE PTR [rcx]
    170c:	01 3b                	add    DWORD PTR [rbx],edi
    170e:	0b 39                	or     edi,DWORD PTR [rcx]
    1710:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1713:	00 00                	add    BYTE PTR [rax],al
    1715:	4a                   	rex.WX
    1716:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1719:	19 03                	sbb    DWORD PTR [rbx],eax
    171b:	0e                   	(bad)
    171c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    171e:	01 3b                	add    DWORD PTR [rbx],edi
    1720:	0b 39                	or     edi,DWORD PTR [rcx]
    1722:	21 06                	and    DWORD PTR [rsi],eax
    1724:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1725:	0e                   	(bad)
    1726:	11 01                	adc    DWORD PTR [rcx],eax
    1728:	12 07                	adc    al,BYTE PTR [rdi]
    172a:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    172e:	01 13                	add    DWORD PTR [rbx],edx
    1730:	00 00                	add    BYTE PTR [rax],al
    1732:	4b 34 00             	rex.WXB xor al,0x0
    1735:	03 0e                	add    ecx,DWORD PTR [rsi]
    1737:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    173b:	6c                   	ins    BYTE PTR es:[rdi],dx
    173c:	19 02                	sbb    DWORD PTR [rdx],eax
    173e:	18 00                	sbb    BYTE PTR [rax],al
    1740:	00 4c 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],cl
    1744:	03 0e                	add    ecx,DWORD PTR [rsi]
    1746:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1748:	01 3b                	add    DWORD PTR [rbx],edi
    174a:	0b 39                	or     edi,DWORD PTR [rcx]
    174c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    174f:	02 18                	add    bl,BYTE PTR [rax]
    1751:	00 00                	add    BYTE PTR [rax],al
    1753:	4d 0b 01             	or     r8,QWORD PTR [r9]
    1756:	31 13                	xor    DWORD PTR [rbx],edx
    1758:	55                   	push   rbp
    1759:	17                   	(bad)
    175a:	00 00                	add    BYTE PTR [rax],al
    175c:	4e                   	rex.WRX
    175d:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1760:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1763:	11 01                	adc    DWORD PTR [rcx],eax
    1765:	12 07                	adc    al,BYTE PTR [rdi]
    1767:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    176b:	01 13                	add    DWORD PTR [rbx],edx
    176d:	00 00                	add    BYTE PTR [rax],al
    176f:	4f 39 00             	rex.WRXB cmp QWORD PTR [r8],r8
    1772:	03 0e                	add    ecx,DWORD PTR [rsi]
    1774:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1776:	05 3b 05 39 21       	add    eax,0x2139053b
    177b:	0d 00 00 50 39       	or     eax,0x39500000
    1780:	00 03                	add    BYTE PTR [rbx],al
    1782:	0e                   	(bad)
    1783:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1785:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 18922c4 <_end+0x188c2ac>
    178b:	19 00                	sbb    DWORD PTR [rax],eax
    178d:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
    1790:	01 3f                	add    DWORD PTR [rdi],edi
    1792:	19 03                	sbb    DWORD PTR [rbx],eax
    1794:	0e                   	(bad)
    1795:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1797:	04 3b                	add    al,0x3b
    1799:	21 c9                	and    ecx,ecx
    179b:	04 39                	add    al,0x39
    179d:	21 0c 6e             	and    DWORD PTR [rsi+rbp*2],ecx
    17a0:	0e                   	(bad)
    17a1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17a4:	21 01                	and    DWORD PTR [rcx],eax
    17a6:	3c 19                	cmp    al,0x19
    17a8:	8b 01                	mov    eax,DWORD PTR [rcx]
    17aa:	21 01                	and    DWORD PTR [rcx],eax
    17ac:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    17af:	13 00                	adc    eax,DWORD PTR [rax]
    17b1:	00 52 16             	add    BYTE PTR [rdx+0x16],dl
    17b4:	00 03                	add    BYTE PTR [rbx],al
    17b6:	08 3a                	or     BYTE PTR [rdx],bh
    17b8:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    17bb:	21 b0 04 39 21 08    	and    DWORD PTR [rax+0x8213904],esi
    17c1:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17c4:	21 01                	and    DWORD PTR [rcx],eax
    17c6:	00 00                	add    BYTE PTR [rax],al
    17c8:	53                   	push   rbx
    17c9:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    17cc:	19 03                	sbb    DWORD PTR [rbx],eax
    17ce:	0e                   	(bad)
    17cf:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17d1:	04 3b                	add    al,0x3b
    17d3:	21 a1 05 39 21 02    	and    DWORD PTR [rcx+0x2213905],esp
    17d9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17da:	0e                   	(bad)
    17db:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17de:	21 01                	and    DWORD PTR [rcx],eax
    17e0:	3c 19                	cmp    al,0x19
    17e2:	00 00                	add    BYTE PTR [rax],al
    17e4:	54                   	push   rsp
    17e5:	34 00                	xor    al,0x0
    17e7:	03 08                	add    ecx,DWORD PTR [rax]
    17e9:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17eb:	10 3b                	adc    BYTE PTR [rbx],bh
    17ed:	21 94 02 39 21 21 6e 	and    DWORD PTR [rdx+rax*1+0x6e212139],edx
    17f4:	0e                   	(bad)
    17f5:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    17f8:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    17fb:	1c 06                	sbb    al,0x6
    17fd:	6c                   	ins    BYTE PTR es:[rdi],dx
    17fe:	19 20                	sbb    DWORD PTR [rax],esp
    1800:	21 01                	and    DWORD PTR [rcx],eax
    1802:	00 00                	add    BYTE PTR [rax],al
    1804:	55                   	push   rbp
    1805:	30 00                	xor    BYTE PTR [rax],al
    1807:	03 0e                	add    ecx,DWORD PTR [rsi]
    1809:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    180d:	00 00                	add    BYTE PTR [rax],al
    180f:	56                   	push   rsi
    1810:	2f                   	(bad)
    1811:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1814:	00 00                	add    BYTE PTR [rax],al
    1816:	57                   	push   rdi
    1817:	37                   	(bad)
    1818:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    181b:	00 00                	add    BYTE PTR [rax],al
    181d:	58                   	pop    rax
    181e:	15 01 49 13 01       	adc    eax,0x1134901
    1823:	13 00                	adc    eax,DWORD PTR [rax]
    1825:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
    1828:	00 03                	add    BYTE PTR [rbx],al
    182a:	0e                   	(bad)
    182b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    182d:	1d 3b 0b 39 0b       	sbb    eax,0xb390b3b
    1832:	49 13 00             	adc    rax,QWORD PTR [r8]
    1835:	00 5a 2e             	add    BYTE PTR [rdx+0x2e],bl
    1838:	00 3f                	add    BYTE PTR [rdi],bh
    183a:	19 03                	sbb    DWORD PTR [rbx],eax
    183c:	0e                   	(bad)
    183d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    183f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349237e <_end+0x1348c366>
    1845:	3c 19                	cmp    al,0x19
    1847:	00 00                	add    BYTE PTR [rax],al
    1849:	5b                   	pop    rbx
    184a:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    184f:	21 15 3b 05 39 0b    	and    DWORD PTR [rip+0xb39053b],edx        # b391d90 <_end+0xb38bd78>
    1855:	49 13 88 01 0b 38 0b 	adc    rcx,QWORD PTR [r8+0xb380b01]
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	5c                   	pop    rsp
    185f:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1862:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1865:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1868:	13 00                	adc    eax,DWORD PTR [rax]
    186a:	00 5d 05             	add    BYTE PTR [rbp+0x5],bl
    186d:	00 03                	add    BYTE PTR [rbx],al
    186f:	08 3a                	or     BYTE PTR [rdx],bh
    1871:	0b 3b                	or     edi,DWORD PTR [rbx]
    1873:	05 39 0b 49 13       	add    eax,0x13490b39
    1878:	00 00                	add    BYTE PTR [rax],al
    187a:	5e                   	pop    rsi
    187b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    187e:	19 03                	sbb    DWORD PTR [rbx],eax
    1880:	0e                   	(bad)
    1881:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1883:	01 3b                	add    DWORD PTR [rbx],edi
    1885:	0b 39                	or     edi,DWORD PTR [rcx]
    1887:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    188a:	49 13 20             	adc    rsp,QWORD PTR [r8]
    188d:	21 01                	and    DWORD PTR [rcx],eax
    188f:	01 13                	add    DWORD PTR [rbx],edx
    1891:	00 00                	add    BYTE PTR [rax],al
    1893:	5f                   	pop    rdi
    1894:	34 00                	xor    al,0x0
    1896:	03 0e                	add    ecx,DWORD PTR [rsi]
    1898:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    189c:	6c                   	ins    BYTE PTR es:[rdi],dx
    189d:	19 00                	sbb    DWORD PTR [rax],eax
    189f:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    18a2:	01 31                	add    DWORD PTR [rcx],esi
    18a4:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    18a7:	b8 42 05 55 17       	mov    eax,0x17550542
    18ac:	58                   	pop    rax
    18ad:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    18b0:	05 57 0b 00 00       	add    eax,0xb57
    18b5:	61                   	(bad)
    18b6:	1d 01 31 13 52       	sbb    eax,0x52133101
    18bb:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    18c1:	12 07                	adc    al,BYTE PTR [rdi]
    18c3:	58                   	pop    rax
    18c4:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    18c7:	21 f7                	and    edi,esi
    18c9:	08 57 0b             	or     BYTE PTR [rdi+0xb],dl
    18cc:	01 13                	add    DWORD PTR [rbx],edx
    18ce:	00 00                	add    BYTE PTR [rax],al
    18d0:	62 0b 01 55 17       	(bad)
    18d5:	01 13                	add    DWORD PTR [rbx],edx
    18d7:	00 00                	add    BYTE PTR [rax],al
    18d9:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    18db:	01 3f                	add    DWORD PTR [rdi],edi
    18dd:	19 03                	sbb    DWORD PTR [rbx],eax
    18df:	0e                   	(bad)
    18e0:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18e2:	02 3b                	add    bh,BYTE PTR [rbx]
    18e4:	0b 39                	or     edi,DWORD PTR [rcx]
    18e6:	21 01                	and    DWORD PTR [rcx],eax
    18e8:	49 13 20             	adc    rsp,QWORD PTR [r8]
    18eb:	21 03                	and    DWORD PTR [rbx],eax
    18ed:	34 19                	xor    al,0x19
    18ef:	01 13                	add    DWORD PTR [rbx],edx
    18f1:	00 00                	add    BYTE PTR [rax],al
    18f3:	64 48 00 7d 01       	rex.W add BYTE PTR fs:[rbp+0x1],dil
    18f8:	82                   	(bad)
    18f9:	01 19                	add    DWORD PTR [rcx],ebx
    18fb:	7f 13                	jg     1910 <_Z11hashMapDtorP7HashMap+0x20>
    18fd:	00 00                	add    BYTE PTR [rax],al
    18ff:	65 05 00 31 13 1c    	gs add eax,0x1c133100
    1905:	21 00                	and    DWORD PTR [rax],eax
    1907:	00 00                	add    BYTE PTR [rax],al
    1909:	66 11 01             	adc    WORD PTR [rcx],ax
    190c:	25 0e 13 0b 03       	and    eax,0x30b130e
    1911:	1f                   	(bad)
    1912:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1914:	11 01                	adc    DWORD PTR [rcx],eax
    1916:	12 07                	adc    al,BYTE PTR [rdi]
    1918:	10 17                	adc    BYTE PTR [rdi],dl
    191a:	00 00                	add    BYTE PTR [rax],al
    191c:	67 39 01             	cmp    DWORD PTR [ecx],eax
    191f:	03 08                	add    ecx,DWORD PTR [rax]
    1921:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1923:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012462 <_end+0x1300c44a>
    1929:	00 00                	add    BYTE PTR [rax],al
    192b:	68 39 00 03 08       	push   0x8030039
    1930:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1932:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1934:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1936:	00 00                	add    BYTE PTR [rax],al
    1938:	69 39 01 03 08 3a    	imul   edi,DWORD PTR [rcx],0x3a080301
    193e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1940:	05 39 0b 89 01       	add    eax,0x1890b39
    1945:	19 01                	sbb    DWORD PTR [rcx],eax
    1947:	13 00                	adc    eax,DWORD PTR [rax]
    1949:	00 6a 13             	add    BYTE PTR [rdx+0x13],ch
    194c:	01 03                	add    DWORD PTR [rbx],eax
    194e:	0e                   	(bad)
    194f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1951:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1953:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # 2492 <_Z8readFilePKcPm+0x62>
    1959:	6b 34 00 03          	imul   esi,DWORD PTR [rax+rax*1],0x3
    195d:	0e                   	(bad)
    195e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1960:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e249f <_end+0xe6dc487>
    1966:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    1969:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    196c:	1c 0b                	sbb    al,0xb
    196e:	6c                   	ins    BYTE PTR es:[rdi],dx
    196f:	19 20                	sbb    DWORD PTR [rax],esp
    1971:	0b 00                	or     eax,DWORD PTR [rax]
    1973:	00 6c 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],ch
    1977:	3f                   	(bad)
    1978:	19 03                	sbb    DWORD PTR [rbx],eax
    197a:	08 3a                	or     BYTE PTR [rdx],bh
    197c:	0b 3b                	or     edi,DWORD PTR [rbx]
    197e:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1983:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1987:	00 00                	add    BYTE PTR [rax],al
    1989:	6d                   	ins    DWORD PTR es:[rdi],dx
    198a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    198d:	19 03                	sbb    DWORD PTR [rbx],eax
    198f:	0e                   	(bad)
    1990:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1992:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e24d1 <_end+0xe6dc4b9>
    1998:	32 0b                	xor    cl,BYTE PTR [rbx]
    199a:	3c 19                	cmp    al,0x19
    199c:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    199f:	13 00                	adc    eax,DWORD PTR [rax]
    19a1:	00 6e 16             	add    BYTE PTR [rsi+0x16],ch
    19a4:	00 03                	add    BYTE PTR [rbx],al
    19a6:	0e                   	(bad)
    19a7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19a9:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134924e8 <_end+0x1348c4d0>
    19af:	32 0b                	xor    cl,BYTE PTR [rbx]
    19b1:	00 00                	add    BYTE PTR [rax],al
    19b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19b4:	3a 00                	cmp    al,BYTE PTR [rax]
    19b6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19b8:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 131824f7 <_end+0x1317c4df>
    19be:	00 00                	add    BYTE PTR [rax],al
    19c0:	70 2e                	jo     19f0 <_Z17hashMapDebugPrintP7HashMap+0x90>
    19c2:	01 3f                	add    DWORD PTR [rdi],edi
    19c4:	19 03                	sbb    DWORD PTR [rbx],eax
    19c6:	0e                   	(bad)
    19c7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19c9:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2508 <_end+0xe6dc4f0>
    19cf:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    19d3:	00 00                	add    BYTE PTR [rax],al
    19d5:	71 87                	jno    195e <_Z11hashMapDtorP7HashMap+0x6e>
    19d7:	82                   	(bad)
    19d8:	01 01                	add    DWORD PTR [rcx],eax
    19da:	03 08                	add    ecx,DWORD PTR [rax]
    19dc:	00 00                	add    BYTE PTR [rax],al
    19de:	72 34                	jb     1a14 <_Z17hashMapDebugPrintP7HashMap+0xb4>
    19e0:	00 03                	add    BYTE PTR [rbx],al
    19e2:	08 3a                	or     BYTE PTR [rdx],bh
    19e4:	0b 3b                	or     edi,DWORD PTR [rbx]
    19e6:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    19eb:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    19ee:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    19f1:	1c 05                	sbb    al,0x5
    19f3:	6c                   	ins    BYTE PTR es:[rdi],dx
    19f4:	19 20                	sbb    DWORD PTR [rax],esp
    19f6:	0b 00                	or     eax,DWORD PTR [rax]
    19f8:	00 73 30             	add    BYTE PTR [rbx+0x30],dh
    19fb:	00 03                	add    BYTE PTR [rbx],al
    19fd:	0e                   	(bad)
    19fe:	49 13 1c 05 00 00 74 	adc    rbx,QWORD PTR [rax*1+0x39740000]
    1a05:	39 
    1a06:	01 03                	add    DWORD PTR [rbx],eax
    1a08:	0e                   	(bad)
    1a09:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a0b:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 189254a <_end+0x188c532>
    1a11:	19 01                	sbb    DWORD PTR [rcx],eax
    1a13:	13 00                	adc    eax,DWORD PTR [rax]
    1a15:	00 75 39             	add    BYTE PTR [rbp+0x39],dh
    1a18:	01 03                	add    DWORD PTR [rbx],eax
    1a1a:	0e                   	(bad)
    1a1b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a1d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301255c <_end+0x1300c544>
    1a23:	00 00                	add    BYTE PTR [rax],al
    1a25:	76 24                	jbe    1a4b <_Z15crc32HashString8string_t+0x2b>
    1a27:	00 0b                	add    BYTE PTR [rbx],cl
    1a29:	0b 3e                	or     edi,DWORD PTR [rsi]
    1a2b:	0b 03                	or     eax,DWORD PTR [rbx]
    1a2d:	08 00                	or     BYTE PTR [rax],al
    1a2f:	00 77 0f             	add    BYTE PTR [rdi+0xf],dh
    1a32:	00 0b                	add    BYTE PTR [rbx],cl
    1a34:	0b 00                	or     eax,DWORD PTR [rax]
    1a36:	00 78 26             	add    BYTE PTR [rax+0x26],bh
    1a39:	00 00                	add    BYTE PTR [rax],al
    1a3b:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    1a3e:	00 3a                	add    BYTE PTR [rdx],bh
    1a40:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a42:	0b 39                	or     edi,DWORD PTR [rcx]
    1a44:	0b 18                	or     ebx,DWORD PTR [rax]
    1a46:	13 00                	adc    eax,DWORD PTR [rax]
    1a48:	00 7a 13             	add    BYTE PTR [rdx+0x13],bh
    1a4b:	01 03                	add    DWORD PTR [rbx],eax
    1a4d:	0e                   	(bad)
    1a4e:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1a50:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a52:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a54:	01 13                	add    DWORD PTR [rbx],edx
    1a56:	00 00                	add    BYTE PTR [rax],al
    1a58:	7b 17                	jnp    1a71 <_Z15crc32HashString8string_t+0x51>
    1a5a:	01 0b                	add    DWORD PTR [rbx],ecx
    1a5c:	0b 3a                	or     edi,DWORD PTR [rdx]
    1a5e:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a60:	0b 39                	or     edi,DWORD PTR [rcx]
    1a62:	0b 01                	or     eax,DWORD PTR [rcx]
    1a64:	13 00                	adc    eax,DWORD PTR [rax]
    1a66:	00 7c 16 00          	add    BYTE PTR [rsi+rdx*1+0x0],bh
    1a6a:	03 0e                	add    ecx,DWORD PTR [rsi]
    1a6c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a6e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a70:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a72:	00 00                	add    BYTE PTR [rax],al
    1a74:	7d 15                	jge    1a8b <_Z15crc32HashString8string_t+0x6b>
    1a76:	00 00                	add    BYTE PTR [rax],al
    1a78:	00 7e 2e             	add    BYTE PTR [rsi+0x2e],bh
    1a7b:	01 3f                	add    DWORD PTR [rdi],edi
    1a7d:	19 03                	sbb    DWORD PTR [rbx],eax
    1a7f:	08 3a                	or     BYTE PTR [rdx],bh
    1a81:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a83:	05 39 0b 49 13       	add    eax,0x13490b39
    1a88:	3c 19                	cmp    al,0x19
    1a8a:	01 13                	add    DWORD PTR [rbx],edx
    1a8c:	00 00                	add    BYTE PTR [rax],al
    1a8e:	7f 2e                	jg     1abe <_Z15crc32HashString8string_t+0x9e>
    1a90:	01 3f                	add    DWORD PTR [rdi],edi
    1a92:	19 03                	sbb    DWORD PTR [rbx],eax
    1a94:	0e                   	(bad)
    1a95:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a97:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18725d6 <_end+0x186c5be>
    1a9d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1aa0:	01 13                	add    DWORD PTR [rbx],edx
    1aa2:	00 00                	add    BYTE PTR [rax],al
    1aa4:	80 01 13             	add    BYTE PTR [rcx],0x13
    1aa7:	01 0b                	add    DWORD PTR [rbx],ecx
    1aa9:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
    1aaf:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25ee <_end+0xe6dc5d6>
    1ab5:	01 13                	add    DWORD PTR [rbx],edx
    1ab7:	00 00                	add    BYTE PTR [rax],al
    1ab9:	81 01 16 00 03 0e    	add    DWORD PTR [rcx],0xe030016
    1abf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ac1:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492600 <_end+0x1348c5e8>
    1ac7:	88 01                	mov    BYTE PTR [rcx],al
    1ac9:	0b 00                	or     eax,DWORD PTR [rax]
    1acb:	00 82 01 13 01 03    	add    BYTE PTR [rdx+0x3011301],al
    1ad1:	08 0b                	or     BYTE PTR [rbx],cl
    1ad3:	0b 3a                	or     edi,DWORD PTR [rdx]
    1ad5:	0b 3b                	or     edi,DWORD PTR [rbx]
    1ad7:	0b 39                	or     edi,DWORD PTR [rcx]
    1ad9:	0b 01                	or     eax,DWORD PTR [rcx]
    1adb:	13 00                	adc    eax,DWORD PTR [rax]
    1add:	00 83 01 39 01 03    	add    BYTE PTR [rbx+0x3013901],al
    1ae3:	0e                   	(bad)
    1ae4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ae6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ae8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1aea:	00 00                	add    BYTE PTR [rax],al
    1aec:	84 01                	test   BYTE PTR [rcx],al
    1aee:	39 00                	cmp    DWORD PTR [rax],eax
    1af0:	03 08                	add    ecx,DWORD PTR [rax]
    1af2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1af4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1af6:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1af8:	89 01                	mov    DWORD PTR [rcx],eax
    1afa:	19 00                	sbb    DWORD PTR [rax],eax
    1afc:	00 85 01 34 00 03    	add    BYTE PTR [rbp+0x3003401],al
    1b02:	0e                   	(bad)
    1b03:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b05:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b07:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b09:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1b0d:	00 00                	add    BYTE PTR [rax],al
    1b0f:	86 01                	xchg   BYTE PTR [rcx],al
    1b11:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b14:	19 03                	sbb    DWORD PTR [rbx],eax
    1b16:	0e                   	(bad)
    1b17:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b19:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b1b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b1e:	0e                   	(bad)
    1b1f:	3c 19                	cmp    al,0x19
    1b21:	01 13                	add    DWORD PTR [rbx],edx
    1b23:	00 00                	add    BYTE PTR [rax],al
    1b25:	87 01                	xchg   DWORD PTR [rcx],eax
    1b27:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b2a:	19 03                	sbb    DWORD PTR [rbx],eax
    1b2c:	0e                   	(bad)
    1b2d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b2f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b31:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b33:	87 01                	xchg   DWORD PTR [rcx],eax
    1b35:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1b38:	01 13                	add    DWORD PTR [rbx],edx
    1b3a:	00 00                	add    BYTE PTR [rax],al
    1b3c:	88 01                	mov    BYTE PTR [rcx],al
    1b3e:	05 00 03 08 3a       	add    eax,0x3a080300
    1b43:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b45:	0b 39                	or     edi,DWORD PTR [rcx]
    1b47:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1b4a:	00 00                	add    BYTE PTR [rax],al
    1b4c:	89 01                	mov    DWORD PTR [rcx],eax
    1b4e:	0b 00                	or     eax,DWORD PTR [rax]
    1b50:	00 00                	add    BYTE PTR [rax],al
    1b52:	8a 01                	mov    al,BYTE PTR [rcx]
    1b54:	1d 01 31 13 52       	sbb    eax,0x52133101
    1b59:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1b5f:	12 07                	adc    al,BYTE PTR [rdi]
    1b61:	58                   	pop    rax
    1b62:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    1b65:	57                   	push   rdi
    1b66:	0b 00                	or     eax,DWORD PTR [rax]
    1b68:	00 8b 01 48 01 7d    	add    BYTE PTR [rbx+0x7d014801],cl
    1b6e:	01 82 01 19 7f 13    	add    DWORD PTR [rdx+0x137f1901],eax
    1b74:	01 13                	add    DWORD PTR [rbx],edx
    1b76:	00 00                	add    BYTE PTR [rax],al
    1b78:	8c 01                	mov    WORD PTR [rcx],es
    1b7a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b7d:	19 03                	sbb    DWORD PTR [rbx],eax
    1b7f:	0e                   	(bad)
    1b80:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b82:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b84:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b86:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b87:	0e                   	(bad)
    1b88:	20 0b                	and    BYTE PTR [rbx],cl
    1b8a:	01 13                	add    DWORD PTR [rbx],edx
    1b8c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	e3 00                	jrcxz  2 <__abi_tag-0x37a>
       2:	00 00                	add    BYTE PTR [rax],al
       4:	05 00 08 00 8b       	add    eax,0x8b000800
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 01                	add    BYTE PTR [rcx],al
       d:	01 01                	add    DWORD PTR [rcx],eax
       f:	fb                   	sti
      10:	0e                   	(bad)
      11:	0d 00 01 01 01       	or     eax,0x1010100
      16:	01 00                	add    DWORD PTR [rax],eax
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	01 00                	add    DWORD PTR [rax],eax
      1c:	00 01                	add    BYTE PTR [rcx],al
      1e:	01 01                	add    DWORD PTR [rcx],eax
      20:	1f                   	(bad)
      21:	09 00                	or     DWORD PTR [rax],eax
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 2f                	add    BYTE PTR [rdi],ch
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 41 00             	add    BYTE PTR [rcx+0x0],al
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
      31:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
      34:	00 00                	add    BYTE PTR [rax],al
      36:	9a                   	(bad)
      37:	00 00                	add    BYTE PTR [rax],al
      39:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	00 dd                	add    ch,bl
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 02                	add    BYTE PTR [rdx],al
      47:	01 1f                	add    DWORD PTR [rdi],ebx
      49:	02 0f                	add    cl,BYTE PTR [rdi]
      4b:	0f 26                	(bad)
      4d:	00 00                	add    BYTE PTR [rax],al
      4f:	00 01                	add    BYTE PTR [rcx],al
      51:	26 00 00             	es add BYTE PTR [rax],al
      54:	00 01                	add    BYTE PTR [rcx],al
      56:	07                   	(bad)
      57:	01 00                	add    DWORD PTR [rax],eax
      59:	00 02                	add    BYTE PTR [rdx],al
      5b:	10 01                	adc    BYTE PTR [rcx],al
      5d:	00 00                	add    BYTE PTR [rax],al
      5f:	03 19                	add    ebx,DWORD PTR [rcx]
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
      66:	01 00                	add    DWORD PTR [rax],eax
      68:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 197 <__abi_tag-0x1e5>
      6e:	06                   	(bad)
      6f:	33 01                	xor    eax,DWORD PTR [rcx]
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 42                	add    al,0x42
      75:	01 00                	add    DWORD PTR [rax],eax
      77:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7a:	01 00                	add    DWORD PTR [rax],eax
      7c:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7f:	01 00                	add    DWORD PTR [rax],eax
      81:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1da <__abi_tag-0x1a2>
      87:	04 62                	add    al,0x62
      89:	01 00                	add    DWORD PTR [rax],eax
      8b:	00 07                	add    BYTE PTR [rdi],al
      8d:	6d                   	ins    DWORD PTR es:[rdi],dx
      8e:	01 00                	add    DWORD PTR [rax],eax
      90:	00 07                	add    BYTE PTR [rdi],al
      92:	75 01                	jne    95 <__abi_tag-0x2e7>
      94:	00 00                	add    BYTE PTR [rax],al
      96:	08 05 21 00 09 02    	or     BYTE PTR [rip+0x2090021],al        # 20900bd <_end+0x208a0a5>
      9c:	e0 11                	loopne af <__abi_tag-0x2cd>
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	00 00                	add    BYTE PTR [rax],al
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	18 06                	sbb    BYTE PTR [rsi],al
      a6:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b06b1 <_end+0x54aa699>
      ac:	21 06                	and    DWORD PTR [rsi],eax
      ae:	11 04 02             	adc    DWORD PTR [rdx+rax*1],eax
      b1:	05 17 03 dc 03       	add    eax,0x3dc0317
      b6:	20 4a 04             	and    BYTE PTR [rdx+0x4],cl
      b9:	01 05 0c 03 a5 7c    	add    DWORD PTR [rip+0x7ca5030c],eax        # 7ca503cb <_end+0x7ca4a3b3>
      bf:	58                   	pop    rax
      c0:	04 02                	add    al,0x2
      c2:	05 01 06 03 d9       	add    eax,0xd9030601
      c7:	03 4a 05             	add    ecx,DWORD PTR [rdx+0x5]
      ca:	03 14 05 17 06 01 2e 	add    edx,DWORD PTR [rax*1+0x2e010617]
      d1:	58                   	pop    rax
      d2:	04 01                	add    al,0x1
      d4:	05 0c 00 02 04       	add    eax,0x402000c
      d9:	01 03                	add    DWORD PTR [rbx],eax
      db:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
      dc:	7c 01                	jl     df <__abi_tag-0x29d>
      de:	05 01 08 13 02       	add    eax,0x2130801
      e3:	04 00                	add    al,0x0
      e5:	01 01                	add    DWORD PTR [rcx],eax
      e7:	c5 07 00             	(bad)
      ea:	00 05 00 08 00 ae    	add    BYTE PTR [rip+0xffffffffae000800],al        # ffffffffae0008f0 <_end+0xffffffffadffa8d8>
      f0:	00 00                	add    BYTE PTR [rax],al
      f2:	00 01                	add    BYTE PTR [rcx],al
      f4:	01 01                	add    DWORD PTR [rcx],eax
      f6:	fb                   	sti
      f7:	0e                   	(bad)
      f8:	0d 00 01 01 01       	or     eax,0x1010100
      fd:	01 00                	add    DWORD PTR [rax],eax
      ff:	00 00                	add    BYTE PTR [rax],al
     101:	01 00                	add    DWORD PTR [rax],eax
     103:	00 01                	add    BYTE PTR [rcx],al
     105:	01 01                	add    DWORD PTR [rcx],eax
     107:	1f                   	(bad)
     108:	09 00                	or     DWORD PTR [rax],eax
     10a:	00 00                	add    BYTE PTR [rax],al
     10c:	00 2f                	add    BYTE PTR [rdi],ch
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     113:	00 00                	add    BYTE PTR [rax],al
     115:	77 00                	ja     117 <__abi_tag-0x265>
     117:	00 00                	add    BYTE PTR [rax],al
     119:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     11c:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     122:	00 00                	add    BYTE PTR [rax],al
     124:	00 c7                	add    bh,al
     126:	00 00                	add    BYTE PTR [rax],al
     128:	00 dd                	add    ch,bl
     12a:	00 00                	add    BYTE PTR [rax],al
     12c:	00 02                	add    BYTE PTR [rdx],al
     12e:	01 1f                	add    DWORD PTR [rdi],ebx
     130:	02 0f                	add    cl,BYTE PTR [rdi]
     132:	16                   	(bad)
     133:	93                   	xchg   ebx,eax
     134:	01 00                	add    DWORD PTR [rax],eax
     136:	00 01                	add    BYTE PTR [rcx],al
     138:	93                   	xchg   ebx,eax
     139:	01 00                	add    DWORD PTR [rax],eax
     13b:	00 01                	add    BYTE PTR [rcx],al
     13d:	a0 01 00 00 02 a9 01 	movabs al,ds:0x1a902000001
     144:	00 00 
     146:	03 bc 01 00 00 04 c8 	add    edi,DWORD PTR [rcx+rax*1-0x37fc0000]
     14d:	01 00                	add    DWORD PTR [rax],eax
     14f:	00 03                	add    BYTE PTR [rbx],al
     151:	10 01                	adc    BYTE PTR [rcx],al
     153:	00 00                	add    BYTE PTR [rax],al
     155:	04 07                	add    al,0x7
     157:	01 00                	add    DWORD PTR [rax],eax
     159:	00 02                	add    BYTE PTR [rdx],al
     15b:	19 01                	sbb    DWORD PTR [rcx],eax
     15d:	00 00                	add    BYTE PTR [rax],al
     15f:	03 21                	add    esp,DWORD PTR [rcx]
     161:	01 00                	add    DWORD PTR [rax],eax
     163:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 292 <__abi_tag-0xea>
     169:	06                   	(bad)
     16a:	33 01                	xor    eax,DWORD PTR [rcx]
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     171:	00 00                	add    BYTE PTR [rax],al
     173:	03 07                	add    eax,DWORD PTR [rdi]
     175:	01 00                	add    DWORD PTR [rax],eax
     177:	00 03                	add    BYTE PTR [rbx],al
     179:	07                   	(bad)
     17a:	01 00                	add    DWORD PTR [rax],eax
     17c:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 2d5 <__abi_tag-0xa7>
     182:	03 d1                	add    edx,ecx
     184:	01 00                	add    DWORD PTR [rax],eax
     186:	00 07                	add    BYTE PTR [rdi],al
     188:	62 01 00 00 07       	(bad)
     18d:	dc 01                	fadd   QWORD PTR [rcx]
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	07                   	(bad)
     192:	e3 01                	jrcxz  195 <__abi_tag-0x1e7>
     194:	00 00                	add    BYTE PTR [rax],al
     196:	03 f1                	add    esi,ecx
     198:	01 00                	add    DWORD PTR [rax],eax
     19a:	00 02                	add    BYTE PTR [rdx],al
     19c:	75 01                	jne    19f <__abi_tag-0x1dd>
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	08 05 37 00 09 02    	or     BYTE PTR [rip+0x2090037],al        # 20901dd <_end+0x208a1c5>
     1a6:	00 13                	add    BYTE PTR [rbx],dl
     1a8:	00 00                	add    BYTE PTR [rax],al
     1aa:	00 00                	add    BYTE PTR [rax],al
     1ac:	00 00                	add    BYTE PTR [rax],al
     1ae:	03 13                	add    edx,DWORD PTR [rbx]
     1b0:	01 06                	add    DWORD PTR [rsi],eax
     1b2:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b07bd <_end+0x54aa7a5>
     1b8:	37                   	(bad)
     1b9:	06                   	(bad)
     1ba:	11 05 05 d7 06 bc    	adc    DWORD PTR [rip+0xffffffffbc06d705],eax        # ffffffffbc06d8c5 <_end+0xffffffffbc0678ad>
     1c0:	05 2f 06 01 05       	add    eax,0x501062f
     1c5:	52                   	push   rdx
     1c6:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     1c7:	05 2f 3b 3c 05       	add    eax,0x53c3b2f
     1cc:	52                   	push   rdx
     1cd:	59                   	pop    rcx
     1ce:	05 32 3c 05 2f       	add    eax,0x2f053c32
     1d3:	81 05 05 06 3d 05 32 	add    DWORD PTR [rip+0x53d0605],0x58010632        # 53d07e2 <_end+0x53ca7ca>
     1da:	06 01 58 
     1dd:	05 05 06 3d 13       	add    eax,0x133d0605
     1e2:	14 05                	adc    al,0x5
     1e4:	1c 00                	sbb    al,0x0
     1e6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     1e9:	01 05 09 08 59 14    	add    DWORD PTR [rip+0x14590809],eax        # 145909f8 <_end+0x1458a9e0>
     1ef:	04 02                	add    al,0x2
     1f1:	05 01 03 ca 01       	add    eax,0x1ca0301
     1f6:	01 05 03 14 05 1b    	add    DWORD PTR [rip+0x1b051403],eax        # 1b0515ff <_end+0x1b04b5e7>
     1fc:	06                   	(bad)
     1fd:	01 c8                	add    eax,ecx
     1ff:	04 01                	add    al,0x1
     201:	05 09 06 03 b5       	add    eax,0xb5030609
     206:	7e 01                	jle    209 <__abi_tag-0x173>
     208:	05 23 06 40 05       	add    eax,0x5400623
     20d:	0d 46 05 09 06       	or     eax,0x6090546
     212:	4c 04 03             	rex.WR add al,0x3
     215:	05 22 00 02 04       	add    eax,0x4020022
     21a:	01 06                	add    DWORD PTR [rsi],eax
     21c:	03 3d 01 04 01 05    	add    edi,DWORD PTR [rip+0x5010401]        # 5010623 <_end+0x500a60b>
     222:	10 03                	adc    BYTE PTR [rbx],al
     224:	45 3c 04             	rex.RB cmp al,0x4
     227:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 402024f <_end+0x401a237>
     22d:	01 03                	add    DWORD PTR [rbx],eax
     22f:	3b 4a 04             	cmp    ecx,DWORD PTR [rdx+0x4]
     232:	01 05 17 03 43 58    	add    DWORD PTR [rip+0x58430317],eax        # 5843054f <_end+0x5842a537>
     238:	04 03                	add    al,0x3
     23a:	05 22 00 02 04       	add    eax,0x4020022
     23f:	01 03                	add    DWORD PTR [rbx],eax
     241:	3d 3c 04 01 05       	cmp    eax,0x501043c
     246:	17                   	(bad)
     247:	03 43 74             	add    eax,DWORD PTR [rbx+0x74]
     24a:	05 09 06 3e 04       	add    eax,0x43e0609
     24f:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 4020277 <_end+0x401a25f>
     255:	01 06                	add    DWORD PTR [rsi],eax
     257:	03 3b                	add    edi,DWORD PTR [rbx]
     259:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     25c:	05 10 03 45 74       	add    eax,0x74450310
     261:	04 03                	add    al,0x3
     263:	05 01 06 03 38       	add    eax,0x38030601
     268:	3c 05                	cmp    al,0x5
     26a:	03 15 05 22 00 02    	add    edx,DWORD PTR [rip+0x2002205]        # 2002475 <_end+0x1ffc45d>
     270:	04 01                	add    al,0x1
     272:	06                   	(bad)
     273:	01 00                	add    DWORD PTR [rax],eax
     275:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     278:	c8 04 01 05          	enter  0x104,0x5
     27c:	09 06                	or     DWORD PTR [rsi],eax
     27e:	03 46 01             	add    eax,DWORD PTR [rsi+0x1]
     281:	05 26 06 01 04       	add    eax,0x4010626
     286:	03 05 01 06 03 14    	add    eax,DWORD PTR [rip+0x14030601]        # 1403088d <_end+0x1402a875>
     28c:	d6                   	(bad)
     28d:	05 03 14 04 01       	add    eax,0x1041403
     292:	05 0f 06 03 6a       	add    eax,0x6a03060f
     297:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     29a:	05 21 00 02 04       	add    eax,0x4020021
     29f:	01 03                	add    DWORD PTR [rbx],eax
     2a1:	16                   	(bad)
     2a2:	58                   	pop    rax
     2a3:	04 01                	add    al,0x1
     2a5:	05 0f 03 6a 9e       	add    eax,0x9e6a030f
     2aa:	04 03                	add    al,0x3
     2ac:	05 21 00 02 04       	add    eax,0x4020021
     2b1:	01 03                	add    DWORD PTR [rbx],eax
     2b3:	16                   	(bad)
     2b4:	3c 04                	cmp    al,0x4
     2b6:	01 05 26 03 6a 58    	add    DWORD PTR [rip+0x586a0326],eax        # 586a05e2 <_end+0x5869a5ca>
     2bc:	04 03                	add    al,0x3
     2be:	05 21 00 02 04       	add    eax,0x4020021
     2c3:	01 03                	add    DWORD PTR [rbx],eax
     2c5:	16                   	(bad)
     2c6:	3c 00                	cmp    al,0x0
     2c8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2cb:	58                   	pop    rax
     2cc:	04 01                	add    al,0x1
     2ce:	05 09 06 03 6c       	add    eax,0x6c030609
     2d3:	01 05 20 06 01 4b    	add    DWORD PTR [rip+0x4b010620],eax        # 4b0108f9 <_end+0x4b00a8e1>
     2d9:	57                   	push   rdi
     2da:	05 09 06 59 05       	add    eax,0x5590609
     2df:	05 00 02 04 03       	add    eax,0x3040200
     2e4:	03 74 01 05          	add    esi,DWORD PTR [rcx+rax*1+0x5]
     2e8:	1c 00                	sbb    al,0x0
     2ea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2ed:	01 00                	add    DWORD PTR [rax],eax
     2ef:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2f2:	06                   	(bad)
     2f3:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     2f6:	04 01                	add    al,0x1
     2f8:	ac                   	lods   al,BYTE PTR ds:[rsi]
     2f9:	05 01 03 10 01       	add    eax,0x1100301
     2fe:	90                   	nop
     2ff:	4a                   	rex.WX
     300:	2e 05 05 00 02 04    	cs add eax,0x4020005
     306:	01 03                	add    DWORD PTR [rbx],eax
     308:	69 3c 00 02 04 01 08 	imul   edi,DWORD PTR [rax+rax*1],0x8010402
     30f:	2e 00 02             	cs add BYTE PTR [rdx],al
     312:	04 01                	add    al,0x1
     314:	74 05                	je     31b <__abi_tag-0x61>
     316:	39 06                	cmp    DWORD PTR [rsi],eax
     318:	03 19                	add    ebx,DWORD PTR [rcx]
     31a:	08 20                	or     BYTE PTR [rax],ah
     31c:	06                   	(bad)
     31d:	01 08                	add    DWORD PTR [rax],ecx
     31f:	ba 05 05 06 f3       	mov    edx,0xf3060505
     324:	05 2e 06 15 05       	add    eax,0x515062e
     329:	05 06 4c 05 22       	add    eax,0x22054c06
     32e:	06                   	(bad)
     32f:	01 05 0d 53 05 2e    	add    DWORD PTR [rip+0x2e05530d],eax        # 2e055642 <_end+0x2e04f62a>
     335:	77 05                	ja     33c <__abi_tag-0x40>
     337:	22 4c 3c 05          	and    cl,BYTE PTR [rsp+rdi*1+0x5]
     33b:	13 00                	adc    eax,DWORD PTR [rax]
     33d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     340:	58                   	pop    rax
     341:	05 05 06 4c 05       	add    eax,0x54c0605
     346:	1c 00                	sbb    al,0x0
     348:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     34b:	01 05 09 08 2f 05    	add    DWORD PTR [rip+0x52f0809],eax        # 52f0b5a <_end+0x52eab42>
     351:	24 06                	and    al,0x6
     353:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020375 <_end+0x401a35d>
     359:	01 3b                	add    DWORD PTR [rbx],edi
     35b:	05 24 4b 05 05       	add    eax,0x5054b24
     360:	00 02                	add    BYTE PTR [rdx],al
     362:	04 03                	add    al,0x3
     364:	06                   	(bad)
     365:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     368:	1c 00                	sbb    al,0x0
     36a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     36d:	01 05 01 06 5d 08    	add    DWORD PTR [rip+0x85d0601],eax        # 85d0974 <_end+0x85ca95c>
     373:	90                   	nop
     374:	66 05 3a 06          	add    ax,0x63a
     378:	bc 06 01 08 82       	mov    esp,0x82080106
     37d:	05 05 06 f3 e6       	add    eax,0xe6f30605
     382:	05 23 06 01 3c       	add    eax,0x3c010623
     387:	3c 05                	cmp    al,0x5
     389:	0e                   	(bad)
     38a:	83 05 24 30 05 23 39 	add    DWORD PTR [rip+0x23053024],0x39        # 230533b5 <_end+0x2304d39d>
     391:	05 05 06 2f 05       	add    eax,0x52f0605
     396:	0e                   	(bad)
     397:	06                   	(bad)
     398:	01 05 36 76 05 0e    	add    DWORD PTR [rip+0xe057636],eax        # e0579d4 <_end+0xe0519bc>
     39e:	2c 05                	sub    al,0x5
     3a0:	05 06 4c 05 34       	add    eax,0x34054c06
     3a5:	06                   	(bad)
     3a6:	01 05 24 4a 08 4a    	add    DWORD PTR [rip+0x4a084a24],eax        # 4a084dd0 <_end+0x4a07edb8>
     3ac:	05 05 06 ae 05       	add    eax,0x5ae0605
     3b1:	2a 06                	sub    al,BYTE PTR [rsi]
     3b3:	59                   	pop    rcx
     3b4:	05 05 06 76 05       	add    eax,0x5760605
     3b9:	01 06                	add    DWORD PTR [rsi],eax
     3bb:	a2 08 ac 20 2e 2e 58 	movabs ds:0x905582e2e20ac08,al
     3c2:	05 09 
     3c4:	06                   	(bad)
     3c5:	03 7a 66             	add    edi,DWORD PTR [rdx+0x66]
     3c8:	05 36 06 01 58       	add    eax,0x58010636
     3cd:	05 4a f2 05 4f       	add    eax,0x4f05f24a
     3d2:	82                   	(bad)
     3d3:	05 05 4c 05 1e       	add    eax,0x1e054c05
     3d8:	80 05 05 06 76 05 44 	add    BYTE PTR [rip+0x5760605],0x44        # 57609e4 <_end+0x575a9cc>
     3df:	06                   	(bad)
     3e0:	03 df                	add    ebx,edi
     3e2:	00 2e                	add    BYTE PTR [rsi],ch
     3e4:	05 26 58 05 22       	add    eax,0x22055826
     3e9:	03 8d 7f 58 05 09    	add    ecx,DWORD PTR [rbp+0x905587f]
     3ef:	06                   	(bad)
     3f0:	03 15 ac 05 10 03    	add    edx,DWORD PTR [rip+0x31005ac]        # 31009a2 <_end+0x30fa98a>
     3f6:	db 00                	fild   DWORD PTR [rax]
     3f8:	01 05 05 13 14 05    	add    DWORD PTR [rip+0x5141305],eax        # 5141703 <_end+0x513b6eb>
     3fe:	26 06                	es (bad)
     400:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     403:	22 03                	and    al,BYTE PTR [rbx]
     405:	8d 7f 58             	lea    edi,[rdi+0x58]
     408:	05 26 03 f3 00       	add    eax,0xf30326
     40d:	3c 05                	cmp    al,0x5
     40f:	09 06                	or     DWORD PTR [rsi],eax
     411:	03 87 7f 58 05 05    	add    eax,DWORD PTR [rdi+0x505587f]
     417:	13 17                	adc    edx,DWORD PTR [rdi]
     419:	05 26 06 03 f3       	add    eax,0xf3030626
     41e:	00 01                	add    BYTE PTR [rcx],al
     420:	05 22 03 8d 7f       	add    eax,0x7f8d0322
     425:	3c 05                	cmp    al,0x5
     427:	1c 00                	sbb    al,0x0
     429:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     42c:	5a                   	pop    rdx
     42d:	05 22 d4 05 05       	add    eax,0x505d422
     432:	06                   	(bad)
     433:	3e 05 1c 00 02 04    	ds add eax,0x402001c
     439:	01 01                	add    DWORD PTR [rcx],eax
     43b:	00 02                	add    BYTE PTR [rdx],al
     43d:	04 01                	add    al,0x1
     43f:	06                   	(bad)
     440:	d6                   	(bad)
     441:	05 09 06 08 13       	add    eax,0x13080609
     446:	05 24 06 01 05       	add    eax,0x5010624
     44b:	1c 00                	sbb    al,0x0
     44d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     450:	57                   	push   rdi
     451:	05 24 4b 05 05       	add    eax,0x5054b24
     456:	00 02                	add    BYTE PTR [rdx],al
     458:	04 03                	add    al,0x3
     45a:	06                   	(bad)
     45b:	08 8f 05 1c 00 02    	or     BYTE PTR [rdi+0x2001c05],cl
     461:	04 01                	add    al,0x1
     463:	01 05 27 00 02 04    	add    DWORD PTR [rip+0x4020027],eax        # 4020490 <_end+0x401a478>
     469:	01 06                	add    DWORD PTR [rsi],eax
     46b:	03 f4                	add    esi,esp
     46d:	00 58 05             	add    BYTE PTR [rax+0x5],bl
     470:	28 56 05             	sub    BYTE PTR [rsi+0x5],dl
     473:	05 06 03 92 7f       	add    eax,0x7f920306
     478:	74 06                	je     480 <__abi_tag+0x104>
     47a:	01 06                	add    DWORD PTR [rsi],eax
     47c:	03 ee                	add    ebp,esi
     47e:	00 01                	add    BYTE PTR [rcx],al
     480:	05 34 06 01 05       	add    eax,0x5010634
     485:	13 03                	adc    eax,DWORD PTR [rbx]
     487:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     488:	82                   	(bad)
     489:	05 34 03 11 74       	add    eax,0x74110334
     48e:	05 05 06 68 05       	add    eax,0x5680605
     493:	1c 00                	sbb    al,0x0
     495:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     498:	01 05 09 08 67 05    	add    DWORD PTR [rip+0x5670809],eax        # 5670ca7 <_end+0x566ac8f>
     49e:	33 06                	xor    eax,DWORD PTR [rsi]
     4a0:	08 12                	or     BYTE PTR [rdx],dl
     4a2:	05 12 4a 05 09       	add    eax,0x9054a12
     4a7:	06                   	(bad)
     4a8:	30 05 19 01 05 0d    	xor    BYTE PTR [rip+0xd050119],al        # d0505c7 <_end+0xd04a5af>
     4ae:	91                   	xchg   ecx,eax
     4af:	05 44 06 01 05       	add    eax,0x5010644
     4b4:	36 03 71 4a          	ss add esi,DWORD PTR [rcx+0x4a]
     4b8:	05 44 03 0f 2e       	add    eax,0x2e0f0344
     4bd:	3c 05                	cmp    al,0x5
     4bf:	14 3c                	adc    al,0x3c
     4c1:	05 0d 06 59 06       	add    eax,0x659060d
     4c6:	01 05 0e 03 6e 4a    	add    DWORD PTR [rip+0x4a6e030e],eax        # 4a6e07da <_end+0x4a6da7c2>
     4cc:	4a 58                	rex.WX pop rax
     4ce:	05 11 06 0f 05       	add    eax,0x50f0611
     4d3:	05 13 14 14 05       	add    eax,0x5141413
     4d8:	36 06                	ss (bad)
     4da:	01 05 34 2e 05 24    	add    DWORD PTR [rip+0x24052e34],eax        # 24053314 <_end+0x2404d2fc>
     4e0:	4a 9e                	rex.WX sahf
     4e2:	05 05 06 5a 06       	add    eax,0x65a0605
     4e7:	01 05 0d 06 03 10    	add    DWORD PTR [rip+0x1003060d],eax        # 10030afa <_end+0x1002aae2>
     4ed:	01 05 22 06 01 05    	add    DWORD PTR [rip+0x5010622],eax        # 5010b15 <_end+0x500aafd>
     4f3:	2e 4a 05 22 4a 05 16 	cs rex.WX add rax,0x16054a22
     4fa:	3c 4a                	cmp    al,0x4a
     4fc:	05 19 06 0e 05       	add    eax,0x50e0619
     501:	27                   	(bad)
     502:	00 02                	add    BYTE PTR [rdx],al
     504:	04 01                	add    al,0x1
     506:	06                   	(bad)
     507:	47 05 05 00 02 04    	rex.RXB add eax,0x4020005
     50d:	02 06                	add    al,BYTE PTR [rsi]
     50f:	58                   	pop    rax
     510:	05 1c 00 02 04       	add    eax,0x402001c
     515:	01 01                	add    DWORD PTR [rcx],eax
     517:	00 02                	add    BYTE PTR [rdx],al
     519:	04 01                	add    al,0x1
     51b:	06                   	(bad)
     51c:	66 00 02             	data16 add BYTE PTR [rdx],al
     51f:	04 01                	add    al,0x1
     521:	9e                   	sahf
     522:	00 02                	add    BYTE PTR [rdx],al
     524:	04 01                	add    al,0x1
     526:	06                   	(bad)
     527:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
     52a:	00 02                	add    BYTE PTR [rdx],al
     52c:	04 01                	add    al,0x1
     52e:	06                   	(bad)
     52f:	c8 05 13 16          	enter  0x1305,0x16
     533:	05 09 06 47 05       	add    eax,0x5470609
     538:	11 06                	adc    DWORD PTR [rsi],eax
     53a:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 402055c <_end+0x401a544>
     540:	01 57 05             	add    DWORD PTR [rdi+0x5],edx
     543:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
     546:	05 00 02 04 03       	add    eax,0x3040200
     54b:	06                   	(bad)
     54c:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 402056e <_end+0x401a556>
     552:	01 01                	add    DWORD PTR [rcx],eax
     554:	00 02                	add    BYTE PTR [rdx],al
     556:	04 01                	add    al,0x1
     558:	06                   	(bad)
     559:	ac                   	lods   al,BYTE PTR ds:[rsi]
     55a:	05 05 06 16 05       	add    eax,0x5160605
     55f:	09 06                	or     DWORD PTR [rsi],eax
     561:	01 05 05 06 03 20    	add    DWORD PTR [rip+0x20030605],eax        # 20030b6c <_end+0x2002ab54>
     567:	58                   	pop    rax
     568:	06                   	(bad)
     569:	01 05 1a 03 92 7f    	add    DWORD PTR [rip+0x7f92031a],eax        # 7f920889 <_end+0x7f91a871>
     56f:	01 05 05 06 08 84    	add    DWORD PTR [rip+0xffffffff84080605],eax        # ffffffff84080b7a <_end+0xffffffff8407ab62>
     575:	05 1a 06 10 05       	add    eax,0x510061a
     57a:	0c 76                	or     al,0x76
     57c:	05 05 00 02 04       	add    eax,0x4020005
     581:	01 03                	add    DWORD PTR [rbx],eax
     583:	73 58                	jae    5dd <__abi_tag+0x261>
     585:	00 02                	add    BYTE PTR [rdx],al
     587:	04 01                	add    al,0x1
     589:	ba 00 02 04 01       	mov    edx,0x1040200
     58e:	74 00                	je     590 <__abi_tag+0x214>
     590:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     593:	74 05                	je     59a <__abi_tag+0x21e>
     595:	01 03                	add    DWORD PTR [rbx],eax
     597:	0e                   	(bad)
     598:	58                   	pop    rax
     599:	05 3a 06 d8 06       	add    eax,0x6d8063a
     59e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0ba9 <_end+0x54aab91>
     5a4:	3a 06                	cmp    al,BYTE PTR [rsi]
     5a6:	11 05 05 9f 06 e6    	adc    DWORD PTR [rip+0xffffffffe6069f05],eax        # ffffffffe606a4b1 <_end+0xffffffffe6064499>
     5ac:	05 23 06 01 3c       	add    eax,0x3c010623
     5b1:	3c 05                	cmp    al,0x5
     5b3:	0e                   	(bad)
     5b4:	67 05 14 30 05 23    	addr32 add eax,0x23053014
     5ba:	39 05 05 06 2f 05    	cmp    DWORD PTR [rip+0x52f0605],eax        # 52f0bc5 <_end+0x52eabad>
     5c0:	0e                   	(bad)
     5c1:	06                   	(bad)
     5c2:	01 05 24 76 05 0e    	add    DWORD PTR [rip+0xe057624],eax        # e057bec <_end+0xe051bd4>
     5c8:	48 05 05 06 3e 05    	add    rax,0x53e0605
     5ce:	14 06                	adc    al,0x6
     5d0:	01 3c 08             	add    DWORD PTR [rax+rcx*1],edi
     5d3:	3c 3c                	cmp    al,0x3c
     5d5:	05 05 00 02 04       	add    eax,0x4020005
     5da:	01 58 06             	add    DWORD PTR [rax+0x6],ebx
     5dd:	4c 05 32 06 01 05    	rex.WR add rax,0x5010632
     5e3:	01 08                	add    DWORD PTR [rax],ecx
     5e5:	15 05 46 39 05       	adc    eax,0x5394605
     5ea:	4b 82                	rex.WXB (bad)
     5ec:	05 1a 4a 05 05       	add    eax,0x5054a1a
     5f1:	06                   	(bad)
     5f2:	5a                   	pop    rdx
     5f3:	05 01 06 13 58       	add    eax,0x58130601
     5f8:	3c 2e                	cmp    al,0x2e
     5fa:	05 37 00 02 04       	add    eax,0x4020037
     5ff:	01 06                	add    DWORD PTR [rsi],eax
     601:	7d 05                	jge    608 <__abi_tag+0x28c>
     603:	47 00 02             	rex.RXB add BYTE PTR [r10],r8b
     606:	04 01                	add    al,0x1
     608:	06                   	(bad)
     609:	01 05 01 4f 58 82    	add    DWORD PTR [rip+0xffffffff82584f01],eax        # ffffffff82585510 <_end+0xffffffff8257f4f8>
     60f:	05 05 00 02 04       	add    eax,0x4020005
     614:	01 03                	add    DWORD PTR [rbx],eax
     616:	76 20                	jbe    638 <__abi_tag+0x2bc>
     618:	00 02                	add    BYTE PTR [rdx],al
     61a:	04 01                	add    al,0x1
     61c:	ba 00 02 04 01       	mov    edx,0x1040200
     621:	74 00                	je     623 <__abi_tag+0x2a7>
     623:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     626:	74 05                	je     62d <__abi_tag+0x2b1>
     628:	39 06                	cmp    DWORD PTR [rsi],eax
     62a:	03 0c ba             	add    ecx,DWORD PTR [rdx+rdi*4]
     62d:	06                   	(bad)
     62e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0c39 <_end+0x54aac21>
     634:	39 06                	cmp    DWORD PTR [rsi],eax
     636:	11 05 05 4b 05 09    	adc    DWORD PTR [rip+0x9054b05],eax        # 9055141 <_end+0x904f129>
     63c:	06                   	(bad)
     63d:	03 10                	add    edx,DWORD PTR [rax]
     63f:	82                   	(bad)
     640:	13 13                	adc    edx,DWORD PTR [rbx]
     642:	14 13                	adc    al,0x13
     644:	13 13                	adc    edx,DWORD PTR [rbx]
     646:	15 04 04 05 01       	adc    eax,0x1050404
     64b:	03 d3                	add    edx,ebx
     64d:	05 01 05 03 14       	add    eax,0x14030501
     652:	05 21 06 01 08       	add    eax,0x8010621
     657:	2e 04 01             	cs add al,0x1
     65a:	05 09 06 03 ac       	add    eax,0xac030609
     65f:	7a 01                	jp     662 <__abi_tag+0x2e6>
     661:	04 04                	add    al,0x4
     663:	05 01 03 d2 05       	add    eax,0x5d20301
     668:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a71 <_end+0x2104ba59>
     66e:	06                   	(bad)
     66f:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     673:	05 09 06 03 ad       	add    eax,0xad030609
     678:	7a 01                	jp     67b <__abi_tag+0x2ff>
     67a:	04 04                	add    al,0x4
     67c:	05 01 03 d1 05       	add    eax,0x5d10301
     681:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a8a <_end+0x2104ba72>
     687:	06                   	(bad)
     688:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     68c:	05 09 06 03 ae       	add    eax,0xae030609
     691:	7a 01                	jp     694 <__abi_tag+0x318>
     693:	04 04                	add    al,0x4
     695:	05 01 03 d0 05       	add    eax,0x5d00301
     69a:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041aa3 <_end+0x103ba8b>
     6a0:	05 17 06 03 b0       	add    eax,0xb0030617
     6a5:	7a 01                	jp     6a8 <__abi_tag+0x32c>
     6a7:	04 04                	add    al,0x4
     6a9:	05 21 03 d0 05       	add    eax,0x5d00321
     6ae:	3c 74                	cmp    al,0x74
     6b0:	04 01                	add    al,0x1
     6b2:	05 09 06 03 b0       	add    eax,0xb0030609
     6b7:	7a 01                	jp     6ba <__abi_tag+0x33e>
     6b9:	05 0d 1a 05 05       	add    eax,0x5051a0d
     6be:	18 05 1f 06 03 72    	sbb    BYTE PTR [rip+0x7203061f],al        # 72030ce3 <_end+0x7202accb>
     6c4:	01 05 0f 3c 05 41    	add    DWORD PTR [rip+0x41053c0f],eax        # 410542d9 <_end+0x4104e2c1>
     6ca:	36 3c 05             	ss cmp al,0x5
     6cd:	32 42 05             	xor    al,BYTE PTR [rdx+0x5]
     6d0:	40                   	rex
     6d1:	2e 05 21 4a 74 05    	cs add eax,0x5744a21
     6d7:	05 06 84 05 01       	add    eax,0x1058406
     6dc:	06                   	(bad)
     6dd:	5b                   	pop    rbx
     6de:	05 05 00 02 04       	add    eax,0x4020005
     6e3:	01 03                	add    DWORD PTR [rbx],eax
     6e5:	4e 58                	rex.WRX pop rax
     6e7:	00 02                	add    BYTE PTR [rdx],al
     6e9:	04 01                	add    al,0x1
     6eb:	ba 00 02 04 01       	mov    edx,0x1040200
     6f0:	74 00                	je     6f2 <__abi_tag+0x376>
     6f2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     6f5:	74 05                	je     6fc <__abi_tag+0x380>
     6f7:	23 06                	and    eax,DWORD PTR [rsi]
     6f9:	03 34 08             	add    esi,DWORD PTR [rax+rcx*1]
     6fc:	12 06                	adc    al,BYTE PTR [rsi]
     6fe:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0d09 <_end+0x54aacf1>
     704:	23 06                	and    eax,DWORD PTR [rsi]
     706:	11 05 05 67 05 1c    	adc    DWORD PTR [rip+0x1c056705],eax        # 1c056e11 <_end+0x1c050df9>
     70c:	00 02                	add    BYTE PTR [rdx],al
     70e:	04 01                	add    al,0x1
     710:	5a                   	pop    rdx
     711:	00 02                	add    BYTE PTR [rdx],al
     713:	04 01                	add    al,0x1
     715:	06                   	(bad)
     716:	66 05 09 ad          	add    ax,0xad09
     71a:	05 11 06 01 05       	add    eax,0x5010611
     71f:	1c 00                	sbb    al,0x0
     721:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     724:	81 05 11 4b 05 05 00 	add    DWORD PTR [rip+0x5054b11],0x3040200        # 505523f <_end+0x504f227>
     72b:	02 04 03 
     72e:	06                   	(bad)
     72f:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 4020751 <_end+0x401a739>
     735:	01 01                	add    DWORD PTR [rcx],eax
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	04 01                	add    al,0x1
     73b:	06                   	(bad)
     73c:	58                   	pop    rax
     73d:	05 05 06 16 05       	add    eax,0x5160605
     742:	09 06                	or     DWORD PTR [rsi],eax
     744:	01 05 01 4b 05 09    	add    DWORD PTR [rip+0x9054b01],eax        # 905524b <_end+0x904f233>
     74a:	65 05 06 06 03 79    	gs add eax,0x79030606
     750:	58                   	pop    rax
     751:	05 05 00 02 04       	add    eax,0x4020005
     756:	01 06                	add    DWORD PTR [rsi],eax
     758:	13 00                	adc    eax,DWORD PTR [rax]
     75a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     75d:	08 90 05 29 06 03    	or     BYTE PTR [rax+0x3062905],dl
     763:	29 c8                	sub    eax,ecx
     765:	06                   	(bad)
     766:	01 05 05 06 4b 04    	add    DWORD PTR [rip+0x44b0605],eax        # 44b0d71 <_end+0x44aad59>
     76c:	05 05 01 03 99       	add    eax,0x99030105
     771:	7f 01                	jg     774 <__abi_tag+0x3f8>
     773:	05 03 14 04 01       	add    eax,0x1041403
     778:	05 29 06 03 e4       	add    eax,0xe4030629
     77d:	00 01                	add    BYTE PTR [rcx],al
     77f:	04 05                	add    al,0x5
     781:	05 17 03 9c 7f       	add    eax,0x7f9c0317
     786:	2e 04 01             	cs add al,0x1
     789:	05 29 03 e4 00       	add    eax,0xe40329
     78e:	74 04                	je     794 <__abi_tag+0x418>
     790:	05 05 17 03 9c       	add    eax,0x9c031705
     795:	7f 66                	jg     7fd <__abi_tag+0x481>
     797:	3c 04                	cmp    al,0x4
     799:	01 05 29 03 e4 00    	add    DWORD PTR [rip+0xe40329],eax        # e40ac8 <_end+0xe3aab0>
     79f:	01 04 05 05 17 03 9c 	add    DWORD PTR [rax*1-0x63fce8fb],eax
     7a6:	7f 58                	jg     800 <__abi_tag+0x484>
     7a8:	58                   	pop    rax
     7a9:	04 01                	add    al,0x1
     7ab:	05 05 06 03 e7       	add    eax,0xe7030605
     7b0:	00 01                	add    BYTE PTR [rcx],al
     7b2:	97                   	xchg   edi,eax
     7b3:	04 05                	add    al,0x5
     7b5:	05 01 03 90 7f       	add    eax,0x7f900301
     7ba:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051bc3 <_end+0x1704bbab>
     7c0:	06                   	(bad)
     7c1:	01 08                	add    DWORD PTR [rax],ecx
     7c3:	58                   	pop    rax
     7c4:	04 01                	add    al,0x1
     7c6:	05 05 06 03 ef       	add    eax,0xef030605
     7cb:	00 01                	add    BYTE PTR [rcx],al
     7cd:	04 05                	add    al,0x5
     7cf:	05 01 03 8f 7f       	add    eax,0x7f8f0301
     7d4:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041bdd <_end+0x103bbc5>
     7da:	05 0b 06 03 ef       	add    eax,0xef03060b
     7df:	00 01                	add    BYTE PTR [rcx],al
     7e1:	04 05                	add    al,0x5
     7e3:	05 17 03 91 7f       	add    eax,0x7f910317
     7e8:	4a 04 01             	rex.WX add al,0x1
     7eb:	05 0b 03 ef 00       	add    eax,0xef030b
     7f0:	08 12                	or     BYTE PTR [rdx],dl
     7f2:	04 05                	add    al,0x5
     7f4:	05 17 03 91 7f       	add    eax,0x7f910317
     7f9:	58                   	pop    rax
     7fa:	58                   	pop    rax
     7fb:	04 01                	add    al,0x1
     7fd:	05 05 06 03 f1       	add    eax,0xf1030605
     802:	00 01                	add    BYTE PTR [rcx],al
     804:	05 1c 00 02 04       	add    eax,0x402001c
     809:	01 01                	add    DWORD PTR [rcx],eax
     80b:	05 09 08 21 04       	add    eax,0x4210809
     810:	05 05 01 03 8c       	add    eax,0x8c030105
     815:	7f 01                	jg     818 <__abi_tag+0x49c>
     817:	05 03 14 05 17       	add    eax,0x17051403
     81c:	06                   	(bad)
     81d:	01 08                	add    DWORD PTR [rax],ecx
     81f:	12 04 01             	adc    al,BYTE PTR [rcx+rax*1]
     822:	05 09 06 03 f3       	add    eax,0xf3030609
     827:	00 01                	add    BYTE PTR [rcx],al
     829:	05 13 06 01 05       	add    eax,0x5010613
     82e:	1c 00                	sbb    al,0x0
     830:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     833:	80 05 13 4c 05 05 00 	add    BYTE PTR [rip+0x5054c13],0x0        # 505544d <_end+0x504f435>
     83a:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     83d:	06                   	(bad)
     83e:	8e 05 1c 00 02 04    	mov    es,WORD PTR [rip+0x402001c]        # 4020860 <_end+0x401a848>
     844:	01 01                	add    DWORD PTR [rcx],eax
     846:	00 02                	add    BYTE PTR [rdx],al
     848:	04 01                	add    al,0x1
     84a:	06                   	(bad)
     84b:	58                   	pop    rax
     84c:	05 05 06 16 04       	add    eax,0x4160605
     851:	05 05 01 03 89       	add    eax,0x89030105
     856:	7f 01                	jg     859 <__abi_tag+0x4dd>
     858:	05 03 14 04 01       	add    eax,0x1041403
     85d:	05 01 06 03 f6       	add    eax,0xf6030601
     862:	00 01                	add    BYTE PTR [rcx],al
     864:	04 05                	add    al,0x5
     866:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     86b:	4a 04 01             	rex.WX add al,0x1
     86e:	05 01 03 f6 00       	add    eax,0xf60301
     873:	3c 2e                	cmp    al,0x2e
     875:	04 05                	add    al,0x5
     877:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     87c:	4a 82                	rex.WX (bad)
     87e:	04 01                	add    al,0x1
     880:	05 09 06 03 e8       	add    eax,0xe8030609
     885:	00 01                	add    BYTE PTR [rcx],al
     887:	04 05                	add    al,0x5
     889:	05 01 03 96 7f       	add    eax,0x7f960301
     88e:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051c97 <_end+0x1704bc7f>
     894:	06                   	(bad)
     895:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
     89b:	06                   	(bad)
     89c:	03 e9                	add    ebp,ecx
     89e:	00 01                	add    BYTE PTR [rcx],al
     8a0:	04 05                	add    al,0x5
     8a2:	05 01 03 95 7f       	add    eax,0x7f950301
     8a7:	01 05 03 14 02 02    	add    DWORD PTR [rip+0x2021403],eax        # 2021cb0 <_end+0x201bc98>
     8ad:	00 01                	add    BYTE PTR [rcx],al
     8af:	01 f8                	add    eax,edi
     8b1:	06                   	(bad)
     8b2:	00 00                	add    BYTE PTR [rax],al
     8b4:	05 00 08 00 90       	add    eax,0x90000800
     8b9:	00 00                	add    BYTE PTR [rax],al
     8bb:	00 01                	add    BYTE PTR [rcx],al
     8bd:	01 01                	add    DWORD PTR [rcx],eax
     8bf:	fb                   	sti
     8c0:	0e                   	(bad)
     8c1:	0d 00 01 01 01       	or     eax,0x1010100
     8c6:	01 00                	add    DWORD PTR [rax],eax
     8c8:	00 00                	add    BYTE PTR [rax],al
     8ca:	01 00                	add    DWORD PTR [rax],eax
     8cc:	00 01                	add    BYTE PTR [rcx],al
     8ce:	01 01                	add    DWORD PTR [rcx],eax
     8d0:	1f                   	(bad)
     8d1:	09 00                	or     DWORD PTR [rax],eax
     8d3:	00 00                	add    BYTE PTR [rax],al
     8d5:	00 2f                	add    BYTE PTR [rdi],ch
     8d7:	00 00                	add    BYTE PTR [rax],al
     8d9:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
     8dc:	00 00                	add    BYTE PTR [rax],al
     8de:	77 00                	ja     8e0 <__abi_tag+0x564>
     8e0:	00 00                	add    BYTE PTR [rax],al
     8e2:	41 00 00             	add    BYTE PTR [r8],al
     8e5:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     8eb:	00 00                	add    BYTE PTR [rax],al
     8ed:	00 c7                	add    bh,al
     8ef:	00 00                	add    BYTE PTR [rax],al
     8f1:	00 dd                	add    ch,bl
     8f3:	00 00                	add    BYTE PTR [rax],al
     8f5:	00 02                	add    BYTE PTR [rdx],al
     8f7:	01 1f                	add    DWORD PTR [rdi],ebx
     8f9:	02 0f                	add    cl,BYTE PTR [rdi]
     8fb:	10 0c 02             	adc    BYTE PTR [rdx+rax*1],cl
     8fe:	00 00                	add    BYTE PTR [rax],al
     900:	01 0c 02             	add    DWORD PTR [rdx+rax*1],ecx
     903:	00 00                	add    BYTE PTR [rax],al
     905:	01 bc 01 00 00 02 19 	add    DWORD PTR [rcx+rax*1+0x19020000],edi
     90c:	01 00                	add    DWORD PTR [rax],eax
     90e:	00 03                	add    BYTE PTR [rbx],al
     910:	1b 02                	sbb    eax,DWORD PTR [rdx]
     912:	00 00                	add    BYTE PTR [rax],al
     914:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
     917:	00 00                	add    BYTE PTR [rax],al
     919:	03 10                	add    edx,DWORD PTR [rax]
     91b:	01 00                	add    DWORD PTR [rax],eax
     91d:	00 02                	add    BYTE PTR [rdx],al
     91f:	07                   	(bad)
     920:	01 00                	add    DWORD PTR [rax],eax
     922:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     925:	01 00                	add    DWORD PTR [rax],eax
     927:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # a56 <__abi_tag+0x6da>
     92d:	06                   	(bad)
     92e:	33 01                	xor    eax,DWORD PTR [rcx]
     930:	00 00                	add    BYTE PTR [rax],al
     932:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     935:	00 00                	add    BYTE PTR [rax],al
     937:	03 07                	add    eax,DWORD PTR [rdi]
     939:	01 00                	add    DWORD PTR [rax],eax
     93b:	00 03                	add    BYTE PTR [rbx],al
     93d:	07                   	(bad)
     93e:	01 00                	add    DWORD PTR [rax],eax
     940:	00 05 d1 01 00 00    	add    BYTE PTR [rip+0x1d1],al        # b17 <__abi_tag+0x79b>
     946:	07                   	(bad)
     947:	75 01                	jne    94a <__abi_tag+0x5ce>
     949:	00 00                	add    BYTE PTR [rax],al
     94b:	08 05 2a 00 09 02    	or     BYTE PTR [rip+0x209002a],al        # 209097b <_end+0x208a963>
     951:	20 1a                	and    BYTE PTR [rdx],bl
     953:	00 00                	add    BYTE PTR [rax],al
     955:	00 00                	add    BYTE PTR [rax],al
     957:	00 00                	add    BYTE PTR [rax],al
     959:	03 0a                	add    ecx,DWORD PTR [rdx]
     95b:	01 06                	add    DWORD PTR [rsi],eax
     95d:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b0f68 <_end+0x134aaf50>
     963:	13 13                	adc    edx,DWORD PTR [rbx]
     965:	13 05 22 06 01 05    	adc    eax,DWORD PTR [rip+0x5010622]        # 5010f8d <_end+0x500af75>
     96b:	05 06 4c 05 17       	add    eax,0x17054c06
     970:	00 02                	add    BYTE PTR [rdx],al
     972:	04 01                	add    al,0x1
     974:	01 00                	add    DWORD PTR [rax],eax
     976:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     979:	06                   	(bad)
     97a:	ba 05 2a 03 79       	mov    edx,0x79032a05
     97f:	01 05 0e 4b 05 27    	add    DWORD PTR [rip+0x27054b0e],eax        # 27055493 <_end+0x2704f47b>
     985:	03 a6 01 66 05 19    	add    esp,DWORD PTR [rsi+0x19056601]
     98b:	c7 05 20 e5 d6 05 09 	mov    DWORD PTR [rip+0x5d6e520],0xe1030609        # 5d6eeb5 <_end+0x5d68e9d>
     992:	06 03 e1 
     995:	7e 01                	jle    998 <__abi_tag+0x61c>
     997:	05 0f 06 01 05       	add    eax,0x501060f
     99c:	09 06                	or     DWORD PTR [rsi],eax
     99e:	3d 05 11 03 94       	cmp    eax,0x94031105
     9a3:	01 01                	add    DWORD PTR [rcx],eax
     9a5:	05 05 13 05 11       	add    eax,0x11051305
     9aa:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
     9ad:	05 05 13 05 3b       	add    eax,0x3b051305
     9b2:	06                   	(bad)
     9b3:	01 05 1f 3c 2e 05    	add    DWORD PTR [rip+0x52e3c1f],eax        # 52e45d8 <_end+0x52de5c0>
     9b9:	3b 66 05             	cmp    esp,DWORD PTR [rsi+0x5]
     9bc:	09 58 05             	or     DWORD PTR [rax+0x5],ebx
     9bf:	05 06 2f 05 1f       	add    eax,0x1f052f06
     9c4:	06                   	(bad)
     9c5:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f053806 <_end+0x1f04d7ee>
     9cb:	3c 05                	cmp    al,0x5
     9cd:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     9d4:	66 05 05 06          	add    ax,0x605
     9d8:	2f                   	(bad)
     9d9:	05 1f 06 01 05       	add    eax,0x501061f
     9de:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     9e0:	3c 05                	cmp    al,0x5
     9e2:	1f                   	(bad)
     9e3:	2e 3c 05             	cs cmp al,0x5
     9e6:	0e                   	(bad)
     9e7:	03 0f                	add    ecx,DWORD PTR [rdi]
     9e9:	01 05 1f 03 71 2e    	add    DWORD PTR [rip+0x2e71031f],eax        # 2e710d0e <_end+0x2e70acf6>
     9ef:	05 3b 66 05 09       	add    eax,0x905663b
     9f4:	66 05 05 06          	add    ax,0x605
     9f8:	2f                   	(bad)
     9f9:	13 30                	adc    esi,DWORD PTR [rax]
     9fb:	06                   	(bad)
     9fc:	01 06                	add    DWORD PTR [rsi],eax
     9fe:	17                   	(bad)
     9ff:	14 05                	adc    al,0x5
     a01:	2b 06                	sub    eax,DWORD PTR [rsi]
     a03:	01 05 0e 66 05 05    	add    DWORD PTR [rip+0x505660e],eax        # 5057017 <_end+0x5050fff>
     a09:	06                   	(bad)
     a0a:	4c 14 05             	rex.WR adc al,0x5
     a0d:	17                   	(bad)
     a0e:	00 02                	add    BYTE PTR [rdx],al
     a10:	04 01                	add    al,0x1
     a12:	01 05 09 83 05 19    	add    DWORD PTR [rip+0x19058309],eax        # 19058d21 <_end+0x19052d09>
     a18:	06                   	(bad)
     a19:	01 05 09 82 05 0d    	add    DWORD PTR [rip+0xd058209],eax        # d058c28 <_end+0xd052c10>
     a1f:	06                   	(bad)
     a20:	59                   	pop    rcx
     a21:	05 27 06 01 05       	add    eax,0x5010627
     a26:	20 3c 05 27 3c 05 20 	and    BYTE PTR [rax*1+0x20053c27],bh
     a2d:	2e 05 11 3c 05 05    	cs add eax,0x5053c11
     a33:	00 02                	add    BYTE PTR [rdx],al
     a35:	04 02                	add    al,0x2
     a37:	06                   	(bad)
     a38:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 4020a55 <_end+0x401aa3d>
     a3e:	01 3c 00             	add    DWORD PTR [rax+rax*1],edi
     a41:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a44:	06                   	(bad)
     a45:	58                   	pop    rax
     a46:	05 05 06 18 05       	add    eax,0x5180605
     a4b:	11 03                	adc    DWORD PTR [rbx],eax
     a4d:	68 01 05 05 13       	push   0x13050501
     a52:	05 3b 06 01 05       	add    eax,0x501063b
     a57:	1f                   	(bad)
     a58:	3c 2e                	cmp    al,0x2e
     a5a:	05 17 00 02 04       	add    eax,0x4020017
     a5f:	01 03                	add    DWORD PTR [rbx],eax
     a61:	f3 7e 01             	repz jle a65 <__abi_tag+0x6e9>
     a64:	05 1f 03 8d 01       	add    eax,0x18d031f
     a69:	4a 05 3b 66 05 09    	rex.WX add rax,0x905663b
     a6f:	58                   	pop    rax
     a70:	05 05 06 2f 05       	add    eax,0x52f0605
     a75:	1f                   	(bad)
     a76:	06                   	(bad)
     a77:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f0538b8 <_end+0x1f04d8a0>
     a7d:	3c 05                	cmp    al,0x5
     a7f:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     a86:	66 05 05 06          	add    ax,0x605
     a8a:	2f                   	(bad)
     a8b:	05 1f 06 01 05       	add    eax,0x501061f
     a90:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     a92:	05 1f 3c 05 3b       	add    eax,0x3b053c1f
     a97:	3c 05                	cmp    al,0x5
     a99:	1f                   	(bad)
     a9a:	58                   	pop    rax
     a9b:	05 09 66 05 05       	add    eax,0x5056609
     aa0:	06                   	(bad)
     aa1:	2f                   	(bad)
     aa2:	13 30                	adc    esi,DWORD PTR [rax]
     aa4:	06                   	(bad)
     aa5:	01 06                	add    DWORD PTR [rsi],eax
     aa7:	03 13                	add    edx,DWORD PTR [rbx]
     aa9:	01 06                	add    DWORD PTR [rsi],eax
     aab:	01 05 0e 00 02 04    	add    DWORD PTR [rip+0x402000e],eax        # 4020abf <_end+0x401aaa7>
     ab1:	01 03                	add    DWORD PTR [rbx],eax
     ab3:	dc 7e 01             	fdivr  QWORD PTR [rsi+0x1]
     ab6:	05 05 00 02 04       	add    eax,0x4020005
     abb:	03 06                	add    eax,DWORD PTR [rsi]
     abd:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 4020ada <_end+0x401aac2>
     ac3:	01 01                	add    DWORD PTR [rcx],eax
     ac5:	05 01 06 96 58       	add    eax,0x58960601
     aca:	05 2e 06 a0 06       	add    eax,0x6a0062e
     acf:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b10da <_end+0x134ab0c2>
     ad5:	13 13                	adc    edx,DWORD PTR [rbx]
     ad7:	05 22 06 01 05       	add    eax,0x5010622
     adc:	05 06 4c 05 17       	add    eax,0x17054c06
     ae1:	00 02                	add    BYTE PTR [rdx],al
     ae3:	04 01                	add    al,0x1
     ae5:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     ae8:	05 21 06 03 a4       	add    eax,0xa4030621
     aed:	06                   	(bad)
     aee:	82                   	(bad)
     aef:	82                   	(bad)
     af0:	ba 04 01 05 0e       	mov    edx,0xe050104
     af5:	03 d7                	add    edx,edi
     af7:	79 01                	jns    afa <__abi_tag+0x77e>
     af9:	05 09 06 c0 13       	add    eax,0x13c00609
     afe:	04 02                	add    al,0x2
     b00:	05 01 03 a0 06       	add    eax,0x6a00301
     b05:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f0e <_end+0x2104bef6>
     b0b:	06                   	(bad)
     b0c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     b0f:	05 17 00 02 04       	add    eax,0x4020017
     b14:	01 03                	add    DWORD PTR [rbx],eax
     b16:	dc 79 2e             	fdivr  QWORD PTR [rcx+0x2e]
     b19:	04 02                	add    al,0x2
     b1b:	05 21 03 a4 06       	add    eax,0x6a40321
     b20:	4a                   	rex.WX
     b21:	66 04 01             	data16 add al,0x1
     b24:	05 0e 00 02 04       	add    eax,0x402000e
     b29:	01 03                	add    DWORD PTR [rbx],eax
     b2b:	de 79 01             	fidivr WORD PTR [rcx+0x1]
     b2e:	05 05 00 02 04       	add    eax,0x4020005
     b33:	03 06                	add    eax,DWORD PTR [rsi]
     b35:	2c 05                	sub    al,0x5
     b37:	17                   	(bad)
     b38:	00 02                	add    BYTE PTR [rdx],al
     b3a:	04 01                	add    al,0x1
     b3c:	01 00                	add    DWORD PTR [rax],eax
     b3e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     b41:	06                   	(bad)
     b42:	9e                   	sahf
     b43:	05 0e 0d 05 05       	add    eax,0x5050d0e
     b48:	06                   	(bad)
     b49:	03 0a                	add    ecx,DWORD PTR [rdx]
     b4b:	2e 05 01 06 13 05    	cs add eax,0x5130601
     b51:	34 06                	xor    al,0x6
     b53:	68 06 01 05 05       	push   0x5050106
     b58:	06                   	(bad)
     b59:	4b 13 13             	rex.WXB adc rdx,QWORD PTR [r11]
     b5c:	14 13                	adc    al,0x13
     b5e:	13 13                	adc    edx,DWORD PTR [rbx]
     b60:	15 04 02 05 01       	adc    eax,0x1050204
     b65:	03 96 06 01 05 03    	add    edx,DWORD PTR [rsi+0x3050106]
     b6b:	14 05                	adc    al,0x5
     b6d:	21 06                	and    DWORD PTR [rsi],eax
     b6f:	01 90 82 04 01 05    	add    DWORD PTR [rax+0x5010482],edx
     b75:	05 06 03 e9 79       	add    eax,0x79e90306
     b7a:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     b7d:	05 01 03 95 06       	add    eax,0x6950301
     b82:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f8b <_end+0x2104bf73>
     b88:	06                   	(bad)
     b89:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     b8d:	05 05 06 03 ea       	add    eax,0xea030605
     b92:	79 01                	jns    b95 <__abi_tag+0x819>
     b94:	04 02                	add    al,0x2
     b96:	05 01 03 94 06       	add    eax,0x6940301
     b9b:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051fa4 <_end+0x2104bf8c>
     ba1:	06                   	(bad)
     ba2:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     ba6:	05 05 06 03 eb       	add    eax,0xeb030605
     bab:	79 01                	jns    bae <__abi_tag+0x832>
     bad:	04 02                	add    al,0x2
     baf:	05 01 03 93 06       	add    eax,0x6930301
     bb4:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041fbd <_end+0x103bfa5>
     bba:	05 13 06 03 ed       	add    eax,0xed030613
     bbf:	79 01                	jns    bc2 <__abi_tag+0x846>
     bc1:	04 02                	add    al,0x2
     bc3:	05 21 03 93 06       	add    eax,0x6930321
     bc8:	2e 74 04             	cs je  bcf <__abi_tag+0x853>
     bcb:	01 05 05 06 03 ed    	add    DWORD PTR [rip+0xffffffffed030605],eax        # ffffffffed0311d6 <_end+0xffffffffed02b1be>
     bd1:	79 01                	jns    bd4 <__abi_tag+0x858>
     bd3:	14 05                	adc    al,0x5
     bd5:	1b 06                	sbb    eax,DWORD PTR [rsi]
     bd7:	10 05 0b 2e 05 01    	adc    BYTE PTR [rip+0x1052e0b],al        # 10539e8 <_end+0x104d9d0>
     bdd:	31 05 2c 06 f4 06    	xor    DWORD PTR [rip+0x6f4062c],eax        # 6f4120f <_end+0x6f3b1f7>
     be3:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b11ee <_end+0x134ab1d6>
     be9:	13 13                	adc    edx,DWORD PTR [rbx]
     beb:	05 0e 06 01 05       	add    eax,0x501060e
     bf0:	14 4b                	adc    al,0x4b
     bf2:	05 0e 3b 05 05       	add    eax,0x5053b0e
     bf7:	06                   	(bad)
     bf8:	2f                   	(bad)
     bf9:	14 13                	adc    al,0x13
     bfb:	14 05                	adc    al,0x5
     bfd:	13 01                	adc    eax,DWORD PTR [rcx]
     bff:	05 0e 06 b7 05       	add    eax,0x5b7060e
     c04:	09 06                	or     DWORD PTR [rsi],eax
     c06:	e9 13 13 13 14       	jmp    14131f1e <_end+0x1412bf06>
     c0b:	05 11 06 01 05       	add    eax,0x5010611
     c10:	09 06                	or     DWORD PTR [rsi],eax
     c12:	75 05                	jne    c19 <__abi_tag+0x89d>
     c14:	0e                   	(bad)
     c15:	06                   	(bad)
     c16:	18 47 05             	sbb    BYTE PTR [rdi+0x5],al
     c19:	1c 63                	sbb    al,0x63
     c1b:	05 11 66 05 09       	add    eax,0x9056611
     c20:	06                   	(bad)
     c21:	3d 14 13 05 11       	cmp    eax,0x11051314
     c26:	06                   	(bad)
     c27:	0f 05                	syscall
     c29:	0e                   	(bad)
     c2a:	69 05 09 06 30 13 05 	imul   eax,DWORD PTR [rip+0x13300609],0x71031305        # 1330123d <_end+0x132fb225>
     c31:	13 03 71 
     c34:	01 06                	add    DWORD PTR [rsi],eax
     c36:	58                   	pop    rax
     c37:	2e 05 05 06 03 12    	cs add eax,0x12030605
     c3d:	3c 05                	cmp    al,0x5
     c3f:	06                   	(bad)
     c40:	03 09                	add    ecx,DWORD PTR [rcx]
     c42:	e4 05                	in     al,0x5
     c44:	05 14 05 12 06       	add    eax,0x6120514
     c49:	01 05 0a 58 05 05    	add    DWORD PTR [rip+0x505580a],eax        # 5056459 <_end+0x5050441>
     c4f:	06                   	(bad)
     c50:	2f                   	(bad)
     c51:	05 0a 06 01 05       	add    eax,0x501060a
     c56:	05 06 67 05 12       	add    eax,0x12056706
     c5b:	06                   	(bad)
     c5c:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a1267 <_end+0x559b24f>
     c62:	0a 06                	or     al,BYTE PTR [rsi]
     c64:	10 05 01 31 05 09    	adc    BYTE PTR [rip+0x9053101],al        # 9053d6b <_end+0x904dd53>
     c6a:	06                   	(bad)
     c6b:	03 72 90             	add    esi,DWORD PTR [rdx-0x70]
     c6e:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 501128d <_end+0x500b275>
     c74:	0e                   	(bad)
     c75:	74 05                	je     c7c <__abi_tag+0x900>
     c77:	09 06                	or     DWORD PTR [rsi],eax
     c79:	2f                   	(bad)
     c7a:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 5011299 <_end+0x500b281>
     c80:	0e                   	(bad)
     c81:	74 05                	je     c88 <__abi_tag+0x90c>
     c83:	09 06                	or     DWORD PTR [rsi],eax
     c85:	2f                   	(bad)
     c86:	13 05 17 06 01 05    	adc    eax,DWORD PTR [rip+0x5010617]        # 50112a3 <_end+0x500b28b>
     c8c:	0e                   	(bad)
     c8d:	3c 05                	cmp    al,0x5
     c8f:	09 06                	or     DWORD PTR [rsi],eax
     c91:	2f                   	(bad)
     c92:	05 0e 06 01 66       	add    eax,0x6601060e
     c97:	03 63 3c             	add    esp,DWORD PTR [rbx+0x3c]
     c9a:	05 28 06 03 27       	add    eax,0x27030628
     c9f:	f2 06                	repnz (bad)
     ca1:	01 82 05 05 06 3d    	add    DWORD PTR [rdx+0x3d060505],eax
     ca7:	13 13                	adc    edx,DWORD PTR [rbx]
     ca9:	14 05                	adc    al,0x5
     cab:	16                   	(bad)
     cac:	00 02                	add    BYTE PTR [rdx],al
     cae:	04 01                	add    al,0x1
     cb0:	01 05 2b 00 02 04    	add    DWORD PTR [rip+0x402002b],eax        # 4020ce1 <_end+0x401acc9>
     cb6:	01 06                	add    DWORD PTR [rsi],eax
     cb8:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020cd4 <_end+0x401acbc>
     cbe:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     cc1:	09 06                	or     DWORD PTR [rsi],eax
     cc3:	02 31                	add    dh,BYTE PTR [rcx]
     cc5:	13 13                	adc    edx,DWORD PTR [rbx]
     cc7:	05 0e 06 01 05       	add    eax,0x501060e
     ccc:	05 00 02 04 02       	add    eax,0x2040200
     cd1:	06                   	(bad)
     cd2:	48 05 16 00 02 04    	add    rax,0x4020016
     cd8:	01 01                	add    DWORD PTR [rcx],eax
     cda:	05 09 02 3d 13       	add    eax,0x133d0209
     cdf:	13 05 2e 06 11 05    	adc    eax,DWORD PTR [rip+0x511062e]        # 5111313 <_end+0x510b2fb>
     ce5:	0e                   	(bad)
     ce6:	3d 05 05 00 02       	cmp    eax,0x2000505
     ceb:	04 02                	add    al,0x2
     ced:	06                   	(bad)
     cee:	48 05 3a 00 02 04    	add    rax,0x402003a
     cf4:	02 06                	add    al,BYTE PTR [rsi]
     cf6:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d12 <_end+0x401acfa>
     cfc:	01 06                	add    DWORD PTR [rsi],eax
     cfe:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d04:	2e 06                	cs (bad)
     d06:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a1a <_end+0x504ea02>
     d0c:	00 02                	add    BYTE PTR [rdx],al
     d0e:	04 02                	add    al,0x2
     d10:	06                   	(bad)
     d11:	48 05 3a 00 02 04    	add    rax,0x402003a
     d17:	02 06                	add    al,BYTE PTR [rsi]
     d19:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d35 <_end+0x401ad1d>
     d1f:	01 06                	add    DWORD PTR [rsi],eax
     d21:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d27:	2e 06                	cs (bad)
     d29:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a3d <_end+0x504ea25>
     d2f:	00 02                	add    BYTE PTR [rdx],al
     d31:	04 02                	add    al,0x2
     d33:	06                   	(bad)
     d34:	48 05 3a 00 02 04    	add    rax,0x402003a
     d3a:	02 06                	add    al,BYTE PTR [rsi]
     d3c:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d58 <_end+0x401ad40>
     d42:	01 06                	add    DWORD PTR [rsi],eax
     d44:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d4a:	2e 06                	cs (bad)
     d4c:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a60 <_end+0x504ea48>
     d52:	00 02                	add    BYTE PTR [rdx],al
     d54:	04 02                	add    al,0x2
     d56:	06                   	(bad)
     d57:	48 05 3a 00 02 04    	add    rax,0x402003a
     d5d:	02 06                	add    al,BYTE PTR [rsi]
     d5f:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d7b <_end+0x401ad63>
     d65:	01 06                	add    DWORD PTR [rsi],eax
     d67:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d6d:	2e 06                	cs (bad)
     d6f:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a83 <_end+0x504ea6b>
     d75:	00 02                	add    BYTE PTR [rdx],al
     d77:	04 02                	add    al,0x2
     d79:	06                   	(bad)
     d7a:	48 05 3a 00 02 04    	add    rax,0x402003a
     d80:	02 06                	add    al,BYTE PTR [rsi]
     d82:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d9e <_end+0x401ad86>
     d88:	01 06                	add    DWORD PTR [rsi],eax
     d8a:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d90:	2e 06                	cs (bad)
     d92:	11 05 3a 00 02 04    	adc    DWORD PTR [rip+0x402003a],eax        # 4020dd2 <_end+0x401adba>
     d98:	02 3b                	add    bh,BYTE PTR [rbx]
     d9a:	05 0e 3e 05 05       	add    eax,0x5053e0e
     d9f:	00 02                	add    BYTE PTR [rdx],al
     da1:	04 02                	add    al,0x2
     da3:	06                   	(bad)
     da4:	48 05 16 00 02 04    	add    rax,0x4020016
     daa:	01 01                	add    DWORD PTR [rcx],eax
     dac:	05 09 59 13 05       	add    eax,0x5135909
     db1:	2e 06                	cs (bad)
     db3:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054ac7 <_end+0x504eaaf>
     db9:	00 02                	add    BYTE PTR [rdx],al
     dbb:	04 02                	add    al,0x2
     dbd:	06                   	(bad)
     dbe:	3a 05 16 00 02 04    	cmp    al,BYTE PTR [rip+0x4020016]        # 4020dda <_end+0x401adc2>
     dc4:	01 01                	add    DWORD PTR [rcx],eax
     dc6:	00 02                	add    BYTE PTR [rdx],al
     dc8:	04 01                	add    al,0x1
     dca:	06                   	(bad)
     dcb:	01 05 1d 00 02 04    	add    DWORD PTR [rip+0x402001d],eax        # 4020dee <_end+0x401add6>
     dd1:	01 42 05             	add    DWORD PTR [rdx+0x5],eax
     dd4:	1f                   	(bad)
     dd5:	00 02                	add    BYTE PTR [rdx],al
     dd7:	04 01                	add    al,0x1
     dd9:	06                   	(bad)
     dda:	2e 05 24 06 15 05    	cs add eax,0x5150624
     de0:	1f                   	(bad)
     de1:	00 02                	add    BYTE PTR [rdx],al
     de3:	04 01                	add    al,0x1
     de5:	71 00                	jno    de7 <__abi_tag+0xa6b>
     de7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     dea:	74 05                	je     df1 <__abi_tag+0xa75>
     dec:	0b 11                	or     edx,DWORD PTR [rcx]
     dee:	05 09 06 76 05       	add    eax,0x5760609
     df3:	2e 06                	cs (bad)
     df5:	01 05 17 4a 05 1f    	add    DWORD PTR [rip+0x1f054a17],eax        # 1f055812 <_end+0x1f04f7fa>
     dfb:	00 02                	add    BYTE PTR [rdx],al
     dfd:	04 01                	add    al,0x1
     dff:	3b 05 0f 4b 05 05    	cmp    eax,DWORD PTR [rip+0x5054b0f]        # 5055914 <_end+0x504f8fc>
     e05:	00 02                	add    BYTE PTR [rdx],al
     e07:	04 03                	add    al,0x3
     e09:	06                   	(bad)
     e0a:	2d 05 1f 00 02       	sub    eax,0x2001f05
     e0f:	04 01                	add    al,0x1
     e11:	01 00                	add    DWORD PTR [rax],eax
     e13:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e16:	06                   	(bad)
     e17:	58                   	pop    rax
     e18:	05 09 06 16 05       	add    eax,0x5160609
     e1d:	05 00 02 04 03       	add    eax,0x3040200
     e22:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e53 <_end+0x401ae3b>
     e28:	01 01                	add    DWORD PTR [rcx],eax
     e2a:	05 09 67 05 05       	add    eax,0x5056709
     e2f:	00 02                	add    BYTE PTR [rdx],al
     e31:	04 03                	add    al,0x3
     e33:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e64 <_end+0x401ae4c>
     e39:	01 01                	add    DWORD PTR [rcx],eax
     e3b:	05 09 67 05 05       	add    eax,0x5056709
     e40:	00 02                	add    BYTE PTR [rdx],al
     e42:	04 03                	add    al,0x3
     e44:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e75 <_end+0x401ae5d>
     e4a:	01 01                	add    DWORD PTR [rcx],eax
     e4c:	05 0f 06 13 58       	add    eax,0x5813060f
     e51:	74 05                	je     e58 <__abi_tag+0xadc>
     e53:	05 06 14 14 05       	add    eax,0x5141406
     e58:	1a 00                	sbb    al,BYTE PTR [rax]
     e5a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e5d:	06                   	(bad)
     e5e:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053f65 <_end+0xf04df4d>
     e64:	45 3c 05             	rex.RB cmp al,0x5
     e67:	05 06 14 14 05       	add    eax,0x5141406
     e6c:	1a 00                	sbb    al,BYTE PTR [rax]
     e6e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e71:	06                   	(bad)
     e72:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053f79 <_end+0xf04df61>
     e78:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     e79:	3c 05                	cmp    al,0x5
     e7b:	05 06 14 14 05       	add    eax,0x5141406
     e80:	1a 00                	sbb    al,BYTE PTR [rax]
     e82:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e85:	06                   	(bad)
     e86:	10 05 01 31 05 0b    	adc    BYTE PTR [rip+0xb053101],al        # b053f8d <_end+0xb04df75>
     e8c:	03 76 ac             	add    esi,DWORD PTR [rsi-0x54]
     e8f:	05 16 00 02 04       	add    eax,0x4020016
     e94:	01 7d 05             	add    DWORD PTR [rbp+0x5],edi
     e97:	09 2c 05 0e 2c 4a 3c 	or     DWORD PTR [rax*1+0x3c4a2c0e],ebp
     e9e:	05 09 30 05 0e       	add    eax,0xe053009
     ea3:	2c 05                	sub    al,0x5
     ea5:	2c 06                	sub    al,0x6
     ea7:	03 15 90 06 01 05    	add    edx,DWORD PTR [rip+0x5010690]        # 501153d <_end+0x500b525>
     ead:	05 06 4b 13 13       	add    eax,0x13134b06
     eb2:	14 05                	adc    al,0x5
     eb4:	17                   	(bad)
     eb5:	00 02                	add    BYTE PTR [rdx],al
     eb7:	04 01                	add    al,0x1
     eb9:	01 00                	add    DWORD PTR [rax],eax
     ebb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     ebe:	06                   	(bad)
     ebf:	90                   	nop
     ec0:	05 0e 0f 2d 05       	add    eax,0x52d0f0e
     ec5:	0b 5e 05             	or     ebx,DWORD PTR [rsi+0x5]
     ec8:	09 06                	or     DWORD PTR [rsi],eax
     eca:	ba 05 21 06 01       	mov    edx,0x1062105
     ecf:	05 17 00 02 04       	add    eax,0x4020017
     ed4:	01 3a                	add    DWORD PTR [rdx],edi
     ed6:	05 10 4c 2e 05       	add    eax,0x52e4c10
     edb:	0b 3c 05 10 08 21 05 	or     edi,DWORD PTR [rax*1+0x5210810]
     ee2:	0b 2d 05 09 06 2f    	or     ebp,DWORD PTR [rip+0x2f060905]        # 2f0617ed <_end+0x2f05b7d5>
     ee8:	05 10 06 01 05       	add    eax,0x5010610
     eed:	0b 58 05             	or     ebx,DWORD PTR [rax+0x5]
     ef0:	05 00 02 04 03       	add    eax,0x3040200
     ef5:	06                   	(bad)
     ef6:	08 39                	or     BYTE PTR [rcx],bh
     ef8:	05 17 00 02 04       	add    eax,0x4020017
     efd:	01 01                	add    DWORD PTR [rcx],eax
     eff:	05 0f 06 5e 05       	add    eax,0x55e060f
     f04:	18 3c 05 17 00 02 04 	sbb    BYTE PTR [rax*1+0x4020017],bh
     f0b:	01 03                	add    DWORD PTR [rbx],eax
     f0d:	7a c8                	jp     ed7 <__abi_tag+0xb5b>
     f0f:	05 05 06 5e 05       	add    eax,0x55e0605
     f14:	01 06                	add    DWORD PTR [rsi],eax
     f16:	13 05 28 06 ae 06    	adc    eax,DWORD PTR [rip+0x6ae0628]        # 6ae1544 <_end+0x6adb52c>
     f1c:	01 82 05 05 06 2f    	add    DWORD PTR [rdx+0x2f060505],eax
     f22:	13 13                	adc    edx,DWORD PTR [rbx]
     f24:	05 17 00 02 04       	add    eax,0x4020017
     f29:	01 01                	add    DWORD PTR [rcx],eax
     f2b:	00 02                	add    BYTE PTR [rdx],al
     f2d:	04 01                	add    al,0x1
     f2f:	06                   	(bad)
     f30:	74 05                	je     f37 <__abi_tag+0xbbb>
     f32:	0e                   	(bad)
     f33:	10 05 09 06 77 05    	adc    BYTE PTR [rip+0x5770609],al        # 5771542 <_end+0x576b52a>
     f39:	2d 06 01 05 16       	sub    eax,0x16050106
     f3e:	3c 05                	cmp    al,0x5
     f40:	0e                   	(bad)
     f41:	3c 05                	cmp    al,0x5
     f43:	09 06                	or     DWORD PTR [rsi],eax
     f45:	30 06                	xor    BYTE PTR [rsi],al
     f47:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     f4d:	04 01                	add    al,0x1
     f4f:	06                   	(bad)
     f50:	2e 05 34 00 02 04    	cs add eax,0x4020034
     f56:	01 06                	add    DWORD PTR [rsi],eax
     f58:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020f75 <_end+0x401af5d>
     f5e:	01 2b                	add    DWORD PTR [rbx],ebp
     f60:	05 11 4f 05 34       	add    eax,0x34054f11
     f65:	00 02                	add    BYTE PTR [rdx],al
     f67:	04 01                	add    al,0x1
     f69:	2c 05                	sub    al,0x5
     f6b:	2c 00                	sub    al,0x0
     f6d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f70:	3c 05                	cmp    al,0x5
     f72:	09 06                	or     DWORD PTR [rsi],eax
     f74:	30 05 0e 06 01 05    	xor    BYTE PTR [rip+0x501060e],al        # 5011588 <_end+0x500b570>
     f7a:	05 00 02 04 02       	add    eax,0x2040200
     f7f:	06                   	(bad)
     f80:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020f9d <_end+0x401af85>
     f86:	01 01                	add    DWORD PTR [rcx],eax
     f88:	05 09 79 05 05       	add    eax,0x5057909
     f8d:	00 02                	add    BYTE PTR [rdx],al
     f8f:	04 02                	add    al,0x2
     f91:	0d 05 17 00 02       	or     eax,0x2001705
     f96:	04 01                	add    al,0x1
     f98:	01 00                	add    DWORD PTR [rax],eax
     f9a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f9d:	06                   	(bad)
     f9e:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     fa1:	04 01                	add    al,0x1
     fa3:	58                   	pop    rax
     fa4:	05 01 1a 02 01       	add    eax,0x1021a01
     fa9:	00 01                	add    BYTE PTR [rcx],al
     fab:	01 ff                	add    edi,edi
     fad:	07                   	(bad)
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	05 00 08 00 a4       	add    eax,0xa4000800
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 01                	add    BYTE PTR [rcx],al
     fb9:	01 01                	add    DWORD PTR [rcx],eax
     fbb:	fb                   	sti
     fbc:	0e                   	(bad)
     fbd:	0d 00 01 01 01       	or     eax,0x1010100
     fc2:	01 00                	add    DWORD PTR [rax],eax
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	01 00                	add    DWORD PTR [rax],eax
     fc8:	00 01                	add    BYTE PTR [rcx],al
     fca:	01 01                	add    DWORD PTR [rcx],eax
     fcc:	1f                   	(bad)
     fcd:	09 00                	or     DWORD PTR [rax],eax
     fcf:	00 00                	add    BYTE PTR [rax],al
     fd1:	00 2f                	add    BYTE PTR [rdi],ch
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     fd8:	00 00                	add    BYTE PTR [rax],al
     fda:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     fdd:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     fe0:	00 00                	add    BYTE PTR [rax],al
     fe2:	9a                   	(bad)
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 dd                	add    ch,bl
     fef:	00 00                	add    BYTE PTR [rax],al
     ff1:	00 02                	add    BYTE PTR [rdx],al
     ff3:	01 1f                	add    DWORD PTR [rdi],ebx
     ff5:	02 0f                	add    cl,BYTE PTR [rdi]
     ff7:	14 3b                	adc    al,0x3b
     ff9:	02 00                	add    al,BYTE PTR [rax]
     ffb:	00 01                	add    BYTE PTR [rcx],al
     ffd:	3b 02                	cmp    eax,DWORD PTR [rdx]
     fff:	00 00                	add    BYTE PTR [rax],al
    1001:	01 a9 01 00 00 02    	add    DWORD PTR [rcx+0x2000001],ebp
    1007:	c8 01 00 00          	enter  0x1,0x0
    100b:	02 10                	add    dl,BYTE PTR [rax]
    100d:	01 00                	add    DWORD PTR [rax],eax
    100f:	00 03                	add    BYTE PTR [rbx],al
    1011:	07                   	(bad)
    1012:	01 00                	add    DWORD PTR [rax],eax
    1014:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1017:	01 00                	add    DWORD PTR [rax],eax
    1019:	00 02                	add    BYTE PTR [rdx],al
    101b:	21 01                	and    DWORD PTR [rcx],eax
    101d:	00 00                	add    BYTE PTR [rax],al
    101f:	05 29 01 00 00       	add    eax,0x129
    1024:	06                   	(bad)
    1025:	33 01                	xor    eax,DWORD PTR [rcx]
    1027:	00 00                	add    BYTE PTR [rax],al
    1029:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	02 07                	add    al,BYTE PTR [rdi]
    1030:	01 00                	add    DWORD PTR [rax],eax
    1032:	00 02                	add    BYTE PTR [rdx],al
    1034:	07                   	(bad)
    1035:	01 00                	add    DWORD PTR [rax],eax
    1037:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1190 <sqrtf@plt>
    103d:	02 d1                	add    dl,cl
    103f:	01 00                	add    DWORD PTR [rax],eax
    1041:	00 07                	add    BYTE PTR [rdi],al
    1043:	62 01 00 00 07       	(bad)
    1048:	dc 01                	fadd   QWORD PTR [rcx]
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	07                   	(bad)
    104d:	e3 01                	jrcxz  1050 <strchr@plt>
    104f:	00 00                	add    BYTE PTR [rax],al
    1051:	02 f1                	add    dh,cl
    1053:	01 00                	add    DWORD PTR [rax],eax
    1055:	00 04 75 01 00 00 08 	add    BYTE PTR [rsi*2+0x8000001],al
    105c:	05 05 00 09 02       	add    eax,0x2090005
    1061:	c0 1e 00             	rcr    BYTE PTR [rsi],0x0
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	00 03                	add    BYTE PTR [rbx],al
    106a:	d2 00                	rol    BYTE PTR [rax],cl
    106c:	01 00                	add    DWORD PTR [rax],eax
    106e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1071:	06                   	(bad)
    1072:	2f                   	(bad)
    1073:	08 8f 00 02 04 01    	or     BYTE PTR [rdi+0x1040200],cl
    1079:	4b 05 10 06 03 b9    	rex.WXB add rax,0xffffffffb9030610
    107f:	7f f2                	jg     1073 <__assert_fail@plt+0x3>
    1081:	06                   	(bad)
    1082:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b168d <_end+0x134ab675>
    1088:	05 10 06 10 05       	add    eax,0x5100610
    108d:	28 22                	sub    BYTE PTR [rdx],ah
    108f:	05 10 56 05 28       	add    eax,0x28055610
    1094:	3e 58                	ds pop rax
    1096:	05 25 5f 05 13       	add    eax,0x13055f25
    109b:	72 05                	jb     10a2 <aligned_alloc@plt+0x2>
    109d:	0a 03                	or     al,BYTE PTR [rbx]
    109f:	7a 9e                	jp     103f <__printf_chk@plt+0xf>
    10a1:	05 15 00 02 04       	add    eax,0x4020015
    10a6:	01 83 05 05 06 3d    	add    DWORD PTR [rbx+0x3d060505],eax
    10ac:	13 05 25 06 17 05    	adc    eax,DWORD PTR [rip+0x5170625]        # 51716d7 <_end+0x516b6bf>
    10b2:	21 03                	and    DWORD PTR [rbx],eax
    10b4:	7a ac                	jp     1062 <__strncpy_chk@plt+0x2>
    10b6:	05 05 06 76 14       	add    eax,0x14760605
    10bb:	13 05 1c 00 02 04    	adc    eax,DWORD PTR [rip+0x402001c]        # 40210dd <_end+0x401b0c5>
    10c1:	01 01                	add    DWORD PTR [rcx],eax
    10c3:	05 09 13 13 05       	add    eax,0x5131309
    10c8:	05 00 02 04 03       	add    eax,0x3040200
    10cd:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40210ef <_end+0x401b0d7>
    10d3:	01 01                	add    DWORD PTR [rcx],eax
    10d5:	05 09 13 13 05       	add    eax,0x5131309
    10da:	25 06 11 05 05       	and    eax,0x5051106
    10df:	00 02                	add    BYTE PTR [rdx],al
    10e1:	04 03                	add    al,0x3
    10e3:	06                   	(bad)
    10e4:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    10ea:	01 01                	add    DWORD PTR [rcx],eax
    10ec:	05 09 13 13 05       	add    eax,0x5131309
    10f1:	25 06 11 05 13       	and    eax,0x13051106
    10f6:	72 05                	jb     10fd <fopen@plt+0xd>
    10f8:	25 4c 05 05 00       	and    eax,0x5054c
    10fd:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1100:	06                   	(bad)
    1101:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1107:	01 01                	add    DWORD PTR [rcx],eax
    1109:	05 05 17 05 01       	add    eax,0x1051705
    110e:	06                   	(bad)
    110f:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
    1112:	2a 06                	sub    al,BYTE PTR [rsi]
    1114:	4c 06                	rex.WR (bad)
    1116:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1721 <_end+0x54ab709>
    111c:	2a 06                	sub    al,BYTE PTR [rsi]
    111e:	11 05 05 4b 06 bc    	adc    DWORD PTR [rip+0xffffffffbc064b05],eax        # ffffffffbc065c29 <_end+0xffffffffbc05fc11>
    1124:	03 33                	add    esi,DWORD PTR [rbx]
    1126:	01 13                	add    DWORD PTR [rbx],edx
    1128:	14 05                	adc    al,0x5
    112a:	1a 06                	sbb    al,BYTE PTR [rsi]
    112c:	01 05 0e 3c 05 05    	add    DWORD PTR [rip+0x5053c0e],eax        # 5054d40 <_end+0x504ed28>
    1132:	06                   	(bad)
    1133:	30 05 10 01 05 09    	xor    BYTE PTR [rip+0x9050110],al        # 9051249 <_end+0x904b231>
    1139:	e7 05                	out    0x5,eax
    113b:	0d 06 01 05 10       	or     eax,0x10050106
    1140:	06                   	(bad)
    1141:	2b 05 09 83 05 33    	sub    eax,DWORD PTR [rip+0x33058309]        # 33059450 <_end+0x33053438>
    1147:	06                   	(bad)
    1148:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c053f84 <_end+0xc04df6c>
    114e:	06                   	(bad)
    114f:	03 16                	add    edx,DWORD PTR [rsi]
    1151:	82                   	(bad)
    1152:	05 05 14 14 06       	add    eax,0x6141405
    1157:	4a 06                	rex.WX (bad)
    1159:	03 0b                	add    ecx,DWORD PTR [rbx]
    115b:	08 20                	or     BYTE PTR [rax],ah
    115d:	06                   	(bad)
    115e:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 402116d <_end+0x401b155>
    1164:	01 03                	add    DWORD PTR [rbx],eax
    1166:	5b                   	pop    rbx
    1167:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 40211b1 <_end+0x401b199>
    116d:	01 06                	add    DWORD PTR [rsi],eax
    116f:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1172:	04 01                	add    al,0x1
    1174:	06                   	(bad)
    1175:	01 05 05 06 03 49    	add    DWORD PTR [rip+0x49030605],eax        # 49031780 <_end+0x4902b768>
    117b:	01 05 22 06 03 11    	add    DWORD PTR [rip+0x11030622],eax        # 110317a3 <_end+0x1102b78b>
    1181:	01 05 0f 68 05 05    	add    DWORD PTR [rip+0x505680f],eax        # 5057996 <_end+0x505197e>
    1187:	06                   	(bad)
    1188:	3a 05 22 06 01 05    	cmp    al,BYTE PTR [rip+0x5010622]        # 50117b0 <_end+0x500b798>
    118e:	05 06 3e 05 2b       	add    eax,0x2b053e06
    1193:	00 02                	add    BYTE PTR [rdx],al
    1195:	04 01                	add    al,0x1
    1197:	90                   	nop
    1198:	05 0d 03 2c 01       	add    eax,0x12c030d
    119d:	05 05 13 05 15       	add    eax,0x15051305
    11a2:	06                   	(bad)
    11a3:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 58317ae <_end+0x582b796>
    11a9:	2a 06                	sub    al,BYTE PTR [rsi]
    11ab:	01 74 05 48          	add    DWORD PTR [rbp+rax*1+0x48],esi
    11af:	59                   	pop    rcx
    11b0:	04 02                	add    al,0x2
    11b2:	05 21 00 02 04       	add    eax,0x4020021
    11b7:	01 03                	add    DWORD PTR [rbx],eax
    11b9:	57                   	push   rdi
    11ba:	3c 04                	cmp    al,0x4
    11bc:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 40211d8 <_end+0x401b1c0>
    11c2:	01 03                	add    DWORD PTR [rbx],eax
    11c4:	28 3c 05 05 06 4b 05 	sub    BYTE PTR [rax*1+0x54b0605],bh
    11cb:	48 06                	rex.W (bad)
    11cd:	01 05 0b 2e 04 02    	add    DWORD PTR [rip+0x2042e0b],eax        # 2043fde <_end+0x203dfc6>
    11d3:	05 01 06 03 55       	add    eax,0x55030601
    11d8:	4a 05 03 14 05 21    	rex.WX add rax,0x21051403
    11de:	00 02                	add    BYTE PTR [rdx],al
    11e0:	04 01                	add    al,0x1
    11e2:	06                   	(bad)
    11e3:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    11e6:	05 1d 03 29 3c       	add    eax,0x3c29031d
    11eb:	04 02                	add    al,0x2
    11ed:	05 21 00 02 04       	add    eax,0x4020021
    11f2:	01 03                	add    DWORD PTR [rbx],eax
    11f4:	57                   	push   rdi
    11f5:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    11f8:	04 01                	add    al,0x1
    11fa:	d6                   	(bad)
    11fb:	04 01                	add    al,0x1
    11fd:	05 05 06 03 2a       	add    eax,0x2a030605
    1202:	01 05 13 06 01 05    	add    DWORD PTR [rip+0x5010613],eax        # 501181b <_end+0x500b803>
    1208:	29 00                	sub    DWORD PTR [rax],eax
    120a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    120d:	06                   	(bad)
    120e:	3c 05                	cmp    al,0x5
    1210:	31 00                	xor    DWORD PTR [rax],eax
    1212:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1215:	06                   	(bad)
    1216:	01 05 29 00 02 04    	add    DWORD PTR [rip+0x4020029],eax        # 4021245 <_end+0x401b22d>
    121c:	01 3c 05 0f 83 05 09 	add    DWORD PTR [rax*1+0x905830f],edi
    1223:	06                   	(bad)
    1224:	d6                   	(bad)
    1225:	05 2a 06 2e 05       	add    eax,0x52e062a
    122a:	29 00                	sub    DWORD PTR [rax],eax
    122c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    122f:	3b 05 26 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b26]        # 9055d5b <_end+0x904fd43>
    1235:	06                   	(bad)
    1236:	3d 05 26 06 01       	cmp    eax,0x1062605
    123b:	05 05 00 02 04       	add    eax,0x4020005
    1240:	03 06                	add    eax,DWORD PTR [rsi]
    1242:	3a 05 29 00 02 04    	cmp    al,BYTE PTR [rip+0x4020029]        # 4021271 <_end+0x401b259>
    1248:	01 01                	add    DWORD PTR [rcx],eax
    124a:	05 22 06 03 52       	add    eax,0x52030622
    124f:	4a 05 05 06 4a 05    	rex.WX add rax,0x54a0605
    1255:	01 06                	add    DWORD PTR [rsi],eax
    1257:	13 2e                	adc    ebp,DWORD PTR [rsi]
    1259:	05 05 06 03 6a       	add    eax,0x6a030605
    125e:	74 05                	je     1265 <deregister_tm_clones+0x25>
    1260:	09 13                	or     DWORD PTR [rbx],edx
    1262:	05 18 06 01 05       	add    eax,0x5010618
    1267:	09 06                	or     DWORD PTR [rsi],eax
    1269:	67 05 2e 06 01 4a    	addr32 add eax,0x4a01062e
    126f:	05 30 4a 05 18       	add    eax,0x18054a30
    1274:	2e 05 09 06 3e 05    	cs add eax,0x53e0609
    127a:	27                   	(bad)
    127b:	06                   	(bad)
    127c:	01 05 09 06 4b 05    	add    DWORD PTR [rip+0x54b0609],eax        # 54b188b <_end+0x54ab873>
    1282:	12 06                	adc    al,BYTE PTR [rsi]
    1284:	13 05 27 3b 05 09    	adc    eax,DWORD PTR [rip+0x9053b27]        # 9054db1 <_end+0x904ed99>
    128a:	06                   	(bad)
    128b:	75 14                	jne    12a1 <register_tm_clones+0x31>
    128d:	05 28 06 13 05       	add    eax,0x5130628
    1292:	31 3f                	xor    DWORD PTR [rdi],edi
    1294:	05 27 03 78 4a       	add    eax,0x4a780327
    1299:	05 28 4e 05 09       	add    eax,0x9054e28
    129e:	06                   	(bad)
    129f:	67 14 05             	addr32 adc al,0x5
    12a2:	31 06                	xor    DWORD PTR [rsi],eax
    12a4:	01 05 09 06 4b 05    	add    DWORD PTR [rip+0x54b0609],eax        # 54b18b3 <_end+0x54ab89b>
    12aa:	31 06                	xor    DWORD PTR [rsi],eax
    12ac:	01 05 09 06 4c 06    	add    DWORD PTR [rip+0x64c0609],eax        # 64c18bb <_end+0x64bb8a3>
    12b2:	58                   	pop    rax
    12b3:	05 05 06 15 05       	add    eax,0x5150605
    12b8:	1e                   	(bad)
    12b9:	06                   	(bad)
    12ba:	0f 05                	syscall
    12bc:	22 4d 05             	and    cl,BYTE PTR [rbp+0x5]
    12bf:	05 06 3e 92 05       	add    eax,0x5923e06
    12c4:	01 06                	add    DWORD PTR [rsi],eax
    12c6:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
    12c9:	22 3b                	and    bh,BYTE PTR [rbx]
    12cb:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    12d1:	01 03                	add    DWORD PTR [rbx],eax
    12d3:	67 66 00 02          	data16 add BYTE PTR [edx],al
    12d7:	04 01                	add    al,0x1
    12d9:	ba 00 02 04 01       	mov    edx,0x1040200
    12de:	74 00                	je     12e0 <__do_global_dtors_aux+0x30>
    12e0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    12e3:	74 05                	je     12ea <__do_global_dtors_aux+0x3a>
    12e5:	29 06                	sub    DWORD PTR [rsi],eax
    12e7:	03 1c 66             	add    ebx,DWORD PTR [rsi+riz*2]
    12ea:	06                   	(bad)
    12eb:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b18f6 <_end+0x54ab8de>
    12f1:	1a 06                	sbb    al,BYTE PTR [rsi]
    12f3:	03 1b                	add    ebx,DWORD PTR [rbx]
    12f5:	90                   	nop
    12f6:	05 05 06 03 67       	add    eax,0x67030605
    12fb:	66 03 16             	add    dx,WORD PTR [rsi]
    12fe:	01 13                	add    DWORD PTR [rbx],edx
    1300:	14 05                	adc    al,0x5
    1302:	0e                   	(bad)
    1303:	06                   	(bad)
    1304:	01 05 09 06 cb 05    	add    DWORD PTR [rip+0x5cb0609],eax        # 5cb1913 <_end+0x5cab8fb>
    130a:	33 06                	xor    eax,DWORD PTR [rsi]
    130c:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c054148 <_end+0xc04e130>
    1312:	06                   	(bad)
    1313:	03 16                	add    edx,DWORD PTR [rsi]
    1315:	74 05                	je     131c <_Z16buildStringArrayPcj+0x1c>
    1317:	05 14 14 03 0b       	add    eax,0xb031414
    131c:	08 58 06             	or     BYTE PTR [rax+0x6],bl
    131f:	01 05 0e 03 47 2e    	add    DWORD PTR [rip+0x2e47030e],eax        # 2e471633 <_end+0x2e46b61b>
    1325:	05 09 00 02 04       	add    eax,0x4020009
    132a:	01 03                	add    DWORD PTR [rbx],eax
    132c:	14 2e                	adc    al,0x2e
    132e:	05 05 06 49 05       	add    eax,0x5490605
    1333:	10 01                	adc    BYTE PTR [rcx],al
    1335:	06                   	(bad)
    1336:	4a 05 05 06 03 67    	rex.WX add rax,0x67030605
    133c:	01 05 1a 00 02 04    	add    DWORD PTR [rip+0x402001a],eax        # 402135c <_end+0x401b344>
    1342:	01 06                	add    DWORD PTR [rsi],eax
    1344:	01 05 01 03 12 2e    	add    DWORD PTR [rip+0x2e120301],eax        # 2e12164b <_end+0x2e11b633>
    134a:	05 44 00 02 04       	add    eax,0x4020044
    134f:	01 06                	add    DWORD PTR [rsi],eax
    1351:	44 00 02             	add    BYTE PTR [rdx],r8b
    1354:	04 01                	add    al,0x1
    1356:	06                   	(bad)
    1357:	01 05 05 06 03 66    	add    DWORD PTR [rip+0x66030605],eax        # 66031962 <_end+0x6602b94a>
    135d:	01 14 05 0e 06 15 05 	add    DWORD PTR [rax*1+0x515060e],edx
    1364:	24 43                	and    al,0x43
    1366:	05 25 03 76 66       	add    eax,0x66760325
    136b:	05 05 06 75 05       	add    eax,0x5750605
    1370:	27                   	(bad)
    1371:	06                   	(bad)
    1372:	01 05 05 06 84 05    	add    DWORD PTR [rip+0x5840605],eax        # 584197d <_end+0x583b965>
    1378:	0e                   	(bad)
    1379:	06                   	(bad)
    137a:	01 05 05 06 3d 14    	add    DWORD PTR [rip+0x143d0605],eax        # 143d1985 <_end+0x143cb96d>
    1380:	05 29 06 01 05       	add    eax,0x5010629
    1385:	24 4e                	and    al,0x4e
    1387:	05 29 62 05 05       	add    eax,0x5056229
    138c:	06                   	(bad)
    138d:	4b 05 29 06 01 05    	rex.WXB add rax,0x5010629
    1393:	05 06 92 13 05       	add    eax,0x5139206
    1398:	24 06                	and    al,0x6
    139a:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b19a5 <_end+0x54ab98d>
    13a0:	14 06                	adc    al,0x6
    13a2:	01 05 05 06 4c 05    	add    DWORD PTR [rip+0x54c0605],eax        # 54c19ad <_end+0x54bb995>
    13a8:	1a 06                	sbb    al,BYTE PTR [rsi]
    13aa:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a19b5 <_end+0x559b99d>
    13b0:	0c 06                	or     al,0x6
    13b2:	01 05 29 03 6a 20    	add    DWORD PTR [rip+0x206a0329],eax        # 206a16e1 <_end+0x2069b6c9>
    13b8:	05 05 00 02 04       	add    eax,0x4020005
    13bd:	01 21                	add    DWORD PTR [rcx],esp
    13bf:	00 02                	add    BYTE PTR [rdx],al
    13c1:	04 01                	add    al,0x1
    13c3:	ba 00 02 04 01       	mov    edx,0x1040200
    13c8:	74 00                	je     13ca <_Z16buildStringArrayPcj+0xca>
    13ca:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    13cd:	74 05                	je     13d4 <_Z16buildStringArrayPcj+0xd4>
    13cf:	2b 06                	sub    eax,DWORD PTR [rsi]
    13d1:	03 18                	add    ebx,DWORD PTR [rax]
    13d3:	58                   	pop    rax
    13d4:	06                   	(bad)
    13d5:	01 05 05 06 4b 5a    	add    DWORD PTR [rip+0x5a4b0605],eax        # 5a4b19e0 <_end+0x5a4ab9c8>
    13db:	05 1a 06 01 05       	add    eax,0x501061a
    13e0:	0e                   	(bad)
    13e1:	3c 05                	cmp    al,0x5
    13e3:	05 06 30 05 10       	add    eax,0x10053006
    13e8:	01 05 09 a1 05 0d    	add    DWORD PTR [rip+0xd05a109],eax        # d05b4f7 <_end+0xd0554df>
    13ee:	06                   	(bad)
    13ef:	01 05 10 06 2b 05    	add    DWORD PTR [rip+0x52b0610],eax        # 52b1a05 <_end+0x52ab9ed>
    13f5:	09 4b 05             	or     DWORD PTR [rbx+0x5],ecx
    13f8:	33 06                	xor    eax,DWORD PTR [rsi]
    13fa:	01 05 36 2e 05 0c    	add    DWORD PTR [rip+0xc052e36],eax        # c054236 <_end+0xc04e21e>
    1400:	06                   	(bad)
    1401:	03 16                	add    edx,DWORD PTR [rsi]
    1403:	74 05                	je     140a <_Z16buildStringArrayPcj+0x10a>
    1405:	05 14 14 03 0b       	add    eax,0xb031414
    140a:	08 58 06             	or     BYTE PTR [rax+0x6],bl
    140d:	01 05 09 00 02 04    	add    DWORD PTR [rip+0x4020009],eax        # 402141c <_end+0x401b404>
    1413:	01 03                	add    DWORD PTR [rbx],eax
    1415:	5b                   	pop    rbx
    1416:	01 05 01 50 74 05    	add    DWORD PTR [rip+0x5745001],eax        # 574641d <_end+0x5740405>
    141c:	0c 1f                	or     al,0x1f
    141e:	05 01 2f 05 2b       	add    eax,0x2b052f01
    1423:	03 74 20 66          	add    esi,DWORD PTR [rax+riz*1+0x66]
    1427:	05 1a 06 00 09       	add    eax,0x900061a
    142c:	02 c0                	add    al,al
    142e:	21 00                	and    DWORD PTR [rax],eax
    1430:	00 00                	add    BYTE PTR [rax],al
    1432:	00 00                	add    BYTE PTR [rax],al
    1434:	00 03                	add    BYTE PTR [rbx],al
    1436:	3a 01                	cmp    al,BYTE PTR [rcx]
    1438:	06                   	(bad)
    1439:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1a44 <_end+0x54aba2c>
    143f:	1a 06                	sbb    al,BYTE PTR [rsi]
    1441:	11 05 05 21 06 84    	adc    DWORD PTR [rip+0xffffffff84062105],eax        # ffffffff8406354c <_end+0xffffffff8405d534>
    1447:	05 09 06 01 3c       	add    eax,0x3c010609
    144c:	05 05 06 5a 13       	add    eax,0x135a0605
    1451:	05 14 06 01 05       	add    eax,0x5010614
    1456:	01 83 20 05 05 00    	add    DWORD PTR [rbx+0x50520],eax
    145c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    145f:	03 7a 20             	add    edi,DWORD PTR [rdx+0x20]
    1462:	00 02                	add    BYTE PTR [rdx],al
    1464:	04 01                	add    al,0x1
    1466:	08 90 05 1c 06 7c    	or     BYTE PTR [rax+0x7c061c05],dl
    146c:	06                   	(bad)
    146d:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1a78 <_end+0x54aba60>
    1473:	1c 06                	sbb    al,0x6
    1475:	11 05 05 4b 04 03    	adc    DWORD PTR [rip+0x3044b05],eax        # 3045f80 <_end+0x303ff68>
    147b:	05 17 03 bf 7f       	add    eax,0x7fbf0317
    1480:	90                   	nop
    1481:	04 01                	add    al,0x1
    1483:	05 05 06 03 c3       	add    eax,0xc3030605
    1488:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
    148b:	03 05 01 03 bb 7f    	add    eax,DWORD PTR [rip+0x7fbb0301]        # 7fbb1792 <_end+0x7fbab77a>
    1491:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705289a <_end+0x1704c882>
    1497:	06                   	(bad)
    1498:	01 d6                	add    esi,edx
    149a:	58                   	pop    rax
    149b:	04 01                	add    al,0x1
    149d:	05 05 06 03 c4       	add    eax,0xc4030605
    14a2:	00 01                	add    BYTE PTR [rcx],al
    14a4:	04 03                	add    al,0x3
    14a6:	05 01 03 ba 7f       	add    eax,0x7fba0301
    14ab:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528b4 <_end+0x1704c89c>
    14b1:	06                   	(bad)
    14b2:	01 08                	add    DWORD PTR [rax],ecx
    14b4:	58                   	pop    rax
    14b5:	04 01                	add    al,0x1
    14b7:	05 05 06 03 c5       	add    eax,0xc5030605
    14bc:	00 01                	add    BYTE PTR [rcx],al
    14be:	04 03                	add    al,0x3
    14c0:	05 01 03 b9 7f       	add    eax,0x7fb90301
    14c5:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528ce <_end+0x1704c8b6>
    14cb:	06                   	(bad)
    14cc:	01 08                	add    DWORD PTR [rax],ecx
    14ce:	58                   	pop    rax
    14cf:	04 01                	add    al,0x1
    14d1:	05 05 06 03 c6       	add    eax,0xc6030605
    14d6:	00 01                	add    BYTE PTR [rcx],al
    14d8:	04 03                	add    al,0x3
    14da:	05 01 03 b8 7f       	add    eax,0x7fb80301
    14df:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528e8 <_end+0x1704c8d0>
    14e5:	06                   	(bad)
    14e6:	01 08                	add    DWORD PTR [rax],ecx
    14e8:	2e 04 01             	cs add al,0x1
    14eb:	05 05 06 03 c7       	add    eax,0xc7030605
    14f0:	00 01                	add    BYTE PTR [rcx],al
    14f2:	05 17 00 02 04       	add    eax,0x4020017
    14f7:	01 01                	add    DWORD PTR [rcx],eax
    14f9:	05 0e 06 74 05       	add    eax,0x574060e
    14fe:	09 06                	or     DWORD PTR [rsi],eax
    1500:	f3 04 03             	repz add al,0x3
    1503:	05 01 03 b6 7f       	add    eax,0x7fb60301
    1508:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052911 <_end+0x1704c8f9>
    150e:	06                   	(bad)
    150f:	01 08                	add    DWORD PTR [rax],ecx
    1511:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    1514:	05 05 00 02 04       	add    eax,0x4020005
    1519:	03 06                	add    eax,DWORD PTR [rsi]
    151b:	03 c7                	add    eax,edi
    151d:	00 01                	add    BYTE PTR [rcx],al
    151f:	05 17 00 02 04       	add    eax,0x4020017
    1524:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
    1527:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    152a:	06                   	(bad)
    152b:	66 05 05 06          	add    ax,0x605
    152f:	15 04 03 05 01       	adc    eax,0x1050304
    1534:	03 b4 7f 01 05 03 14 	add    esi,DWORD PTR [rdi+rdi*2+0x14030501]
    153b:	05 17 06 01 9e       	add    eax,0x9e010617
    1540:	04 01                	add    al,0x1
    1542:	05 05 06 03 cb       	add    eax,0xcb030605
    1547:	00 01                	add    BYTE PTR [rcx],al
    1549:	04 03                	add    al,0x3
    154b:	05 01 03 b3 7f       	add    eax,0x7fb30301
    1550:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052959 <_end+0x1704c941>
    1556:	06                   	(bad)
    1557:	01 08                	add    DWORD PTR [rax],ecx
    1559:	2e 04 01             	cs add al,0x1
    155c:	05 05 06 03 cc       	add    eax,0xcc030605
    1561:	00 01                	add    BYTE PTR [rcx],al
    1563:	05 17 00 02 04       	add    eax,0x4020017
    1568:	01 01                	add    DWORD PTR [rcx],eax
    156a:	05 09 08 67 04       	add    eax,0x4670809
    156f:	03 05 01 03 b1 7f    	add    eax,DWORD PTR [rip+0x7fb10301]        # 7fb11876 <_end+0x7fb0b85e>
    1575:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 104297e <_end+0x103c966>
    157b:	05 0f 06 03 cd       	add    eax,0xcd03060f
    1580:	00 01                	add    BYTE PTR [rcx],al
    1582:	04 03                	add    al,0x3
    1584:	05 17 03 b3 7f       	add    eax,0x7fb30317
    1589:	3c 04                	cmp    al,0x4
    158b:	01 00                	add    DWORD PTR [rax],eax
    158d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1590:	03 cc                	add    ecx,esp
    1592:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    1598:	04 03                	add    al,0x3
    159a:	05 17 03 b3 7f       	add    eax,0x7fb30317
    159f:	3c 90                	cmp    al,0x90
    15a1:	04 01                	add    al,0x1
    15a3:	05 05 00 02 04       	add    eax,0x4020005
    15a8:	03 06                	add    eax,DWORD PTR [rsi]
    15aa:	03 cc                	add    ecx,esp
    15ac:	00 01                	add    BYTE PTR [rcx],al
    15ae:	05 17 00 02 04       	add    eax,0x4020017
    15b3:	01 01                	add    DWORD PTR [rcx],eax
    15b5:	00 02                	add    BYTE PTR [rdx],al
    15b7:	04 01                	add    al,0x1
    15b9:	06                   	(bad)
    15ba:	66 05 05 06          	add    ax,0x605
    15be:	15 04 03 05 01       	adc    eax,0x1050304
    15c3:	03 af 7f 01 05 03    	add    ebp,DWORD PTR [rdi+0x305017f]
    15c9:	14 05                	adc    al,0x5
    15cb:	17                   	(bad)
    15cc:	06                   	(bad)
    15cd:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    15d3:	06                   	(bad)
    15d4:	03 d0                	add    edx,eax
    15d6:	00 01                	add    BYTE PTR [rcx],al
    15d8:	04 03                	add    al,0x3
    15da:	05 01 03 ae 7f       	add    eax,0x7fae0301
    15df:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170529e8 <_end+0x1704c9d0>
    15e5:	06                   	(bad)
    15e6:	01 08                	add    DWORD PTR [rax],ecx
    15e8:	2e 04 01             	cs add al,0x1
    15eb:	05 05 06 03 d1       	add    eax,0xd1030605
    15f0:	00 01                	add    BYTE PTR [rcx],al
    15f2:	05 17 00 02 04       	add    eax,0x4020017
    15f7:	01 01                	add    DWORD PTR [rcx],eax
    15f9:	05 09 08 59 04       	add    eax,0x4590809
    15fe:	03 05 01 03 ac 7f    	add    eax,DWORD PTR [rip+0x7fac0301]        # 7fac1905 <_end+0x7fabb8ed>
    1604:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042a0d <_end+0x103c9f5>
    160a:	05 0f 06 03 d2       	add    eax,0xd203060f
    160f:	00 01                	add    BYTE PTR [rcx],al
    1611:	04 03                	add    al,0x3
    1613:	05 17 03 ae 7f       	add    eax,0x7fae0317
    1618:	3c 04                	cmp    al,0x4
    161a:	01 00                	add    DWORD PTR [rax],eax
    161c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    161f:	03 d1                	add    edx,ecx
    1621:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    1627:	04 03                	add    al,0x3
    1629:	05 17 03 ae 7f       	add    eax,0x7fae0317
    162e:	3c 9e                	cmp    al,0x9e
    1630:	04 01                	add    al,0x1
    1632:	05 05 00 02 04       	add    eax,0x4020005
    1637:	03 06                	add    eax,DWORD PTR [rsi]
    1639:	03 d1                	add    edx,ecx
    163b:	00 01                	add    BYTE PTR [rcx],al
    163d:	05 17 00 02 04       	add    eax,0x4020017
    1642:	01 01                	add    DWORD PTR [rcx],eax
    1644:	00 02                	add    BYTE PTR [rdx],al
    1646:	04 01                	add    al,0x1
    1648:	06                   	(bad)
    1649:	66 05 05 06          	add    ax,0x605
    164d:	15 04 03 05 01       	adc    eax,0x1050304
    1652:	03 aa 7f 01 05 03    	add    ebp,DWORD PTR [rdx+0x305017f]
    1658:	14 05                	adc    al,0x5
    165a:	17                   	(bad)
    165b:	06                   	(bad)
    165c:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    1662:	06                   	(bad)
    1663:	03 d5                	add    edx,ebp
    1665:	00 01                	add    BYTE PTR [rcx],al
    1667:	04 03                	add    al,0x3
    1669:	05 01 03 a9 7f       	add    eax,0x7fa90301
    166e:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052a77 <_end+0x1704ca5f>
    1674:	06                   	(bad)
    1675:	01 08                	add    DWORD PTR [rax],ecx
    1677:	2e 04 01             	cs add al,0x1
    167a:	05 05 06 03 d6       	add    eax,0xd6030605
    167f:	00 01                	add    BYTE PTR [rcx],al
    1681:	05 17 00 02 04       	add    eax,0x4020017
    1686:	01 01                	add    DWORD PTR [rcx],eax
    1688:	05 09 08 4b 04       	add    eax,0x44b0809
    168d:	03 05 01 03 a7 7f    	add    eax,DWORD PTR [rip+0x7fa70301]        # 7fa71994 <_end+0x7fa6b97c>
    1693:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042a9c <_end+0x103ca84>
    1699:	05 0f 06 03 d7       	add    eax,0xd703060f
    169e:	00 01                	add    BYTE PTR [rcx],al
    16a0:	04 03                	add    al,0x3
    16a2:	05 17 03 a9 7f       	add    eax,0x7fa90317
    16a7:	3c 04                	cmp    al,0x4
    16a9:	01 00                	add    DWORD PTR [rax],eax
    16ab:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    16ae:	03 d6                	add    edx,esi
    16b0:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    16b6:	04 03                	add    al,0x3
    16b8:	05 17 03 a9 7f       	add    eax,0x7fa90317
    16bd:	3c 9e                	cmp    al,0x9e
    16bf:	04 01                	add    al,0x1
    16c1:	05 05 00 02 04       	add    eax,0x4020005
    16c6:	03 06                	add    eax,DWORD PTR [rsi]
    16c8:	03 d6                	add    edx,esi
    16ca:	00 01                	add    BYTE PTR [rcx],al
    16cc:	05 17 00 02 04       	add    eax,0x4020017
    16d1:	01 01                	add    DWORD PTR [rcx],eax
    16d3:	00 02                	add    BYTE PTR [rdx],al
    16d5:	04 01                	add    al,0x1
    16d7:	06                   	(bad)
    16d8:	66 05 05 06          	add    ax,0x605
    16dc:	15 04 03 05 01       	adc    eax,0x1050304
    16e1:	03 a5 7f 01 05 03    	add    esp,DWORD PTR [rbp+0x305017f]
    16e7:	14 05                	adc    al,0x5
    16e9:	17                   	(bad)
    16ea:	06                   	(bad)
    16eb:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    16f1:	06                   	(bad)
    16f2:	03 da                	add    ebx,edx
    16f4:	00 01                	add    BYTE PTR [rcx],al
    16f6:	04 03                	add    al,0x3
    16f8:	05 01 03 a4 7f       	add    eax,0x7fa40301
    16fd:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052b06 <_end+0x1704caee>
    1703:	06                   	(bad)
    1704:	01 ba 04 01 05 05    	add    DWORD PTR [rdx+0x5050104],edi
    170a:	06                   	(bad)
    170b:	03 db                	add    ebx,ebx
    170d:	00 01                	add    BYTE PTR [rcx],al
    170f:	05 17 00 02 04       	add    eax,0x4020017
    1714:	01 01                	add    DWORD PTR [rcx],eax
    1716:	05 09 08 3d 04       	add    eax,0x43d0809
    171b:	03 05 01 03 a2 7f    	add    eax,DWORD PTR [rip+0x7fa20301]        # 7fa21a22 <_end+0x7fa1ba0a>
    1721:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b2a <_end+0x103cb12>
    1727:	05 0f 06 03 dc       	add    eax,0xdc03060f
    172c:	00 01                	add    BYTE PTR [rcx],al
    172e:	04 03                	add    al,0x3
    1730:	05 17 03 a4 7f       	add    eax,0x7fa40317
    1735:	3c 04                	cmp    al,0x4
    1737:	01 00                	add    DWORD PTR [rax],eax
    1739:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    173c:	03 db                	add    ebx,ebx
    173e:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    1744:	04 03                	add    al,0x3
    1746:	05 17 03 a4 7f       	add    eax,0x7fa40317
    174b:	3c ac                	cmp    al,0xac
    174d:	04 01                	add    al,0x1
    174f:	05 05 00 02 04       	add    eax,0x4020005
    1754:	03 06                	add    eax,DWORD PTR [rsi]
    1756:	03 db                	add    ebx,ebx
    1758:	00 01                	add    BYTE PTR [rcx],al
    175a:	05 17 00 02 04       	add    eax,0x4020017
    175f:	01 01                	add    DWORD PTR [rcx],eax
    1761:	00 02                	add    BYTE PTR [rdx],al
    1763:	04 01                	add    al,0x1
    1765:	06                   	(bad)
    1766:	58                   	pop    rax
    1767:	05 05 06 15 04       	add    eax,0x4150605
    176c:	03 05 01 03 a0 7f    	add    eax,DWORD PTR [rip+0x7fa00301]        # 7fa01a73 <_end+0x7f9fba5b>
    1772:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b7b <_end+0x103cb63>
    1778:	05 01 06 03 df       	add    eax,0xdf030601
    177d:	00 01                	add    BYTE PTR [rcx],al
    177f:	04 03                	add    al,0x3
    1781:	05 17 03 a1 7f       	add    eax,0x7fa10317
    1786:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    1789:	05 01 03 df 00       	add    eax,0xdf0301
    178e:	58                   	pop    rax
    178f:	04 03                	add    al,0x3
    1791:	05 17 03 a1 7f       	add    eax,0x7fa10317
    1796:	3c 58                	cmp    al,0x58
    1798:	04 01                	add    al,0x1
    179a:	05 05 00 02 04       	add    eax,0x4020005
    179f:	01 03                	add    DWORD PTR [rbx],eax
    17a1:	c1 00 01             	rol    DWORD PTR [rax],0x1
    17a4:	00 02                	add    BYTE PTR [rdx],al
    17a6:	04 01                	add    al,0x1
    17a8:	08 90 02 05 00 01    	or     BYTE PTR [rax+0x1000502],dl
    17ae:	01 ff                	add    edi,edi
    17b0:	01 00                	add    DWORD PTR [rax],eax
    17b2:	00 05 00 08 00 b7    	add    BYTE PTR [rip+0xffffffffb7000800],al        # ffffffffb7001fb8 <_end+0xffffffffb6ffbfa0>
    17b8:	00 00                	add    BYTE PTR [rax],al
    17ba:	00 01                	add    BYTE PTR [rcx],al
    17bc:	01 01                	add    DWORD PTR [rcx],eax
    17be:	fb                   	sti
    17bf:	0e                   	(bad)
    17c0:	0d 00 01 01 01       	or     eax,0x1010100
    17c5:	01 00                	add    DWORD PTR [rax],eax
    17c7:	00 00                	add    BYTE PTR [rax],al
    17c9:	01 00                	add    DWORD PTR [rax],eax
    17cb:	00 01                	add    BYTE PTR [rcx],al
    17cd:	01 01                	add    DWORD PTR [rcx],eax
    17cf:	1f                   	(bad)
    17d0:	0a 00                	or     al,BYTE PTR [rax]
    17d2:	00 00                	add    BYTE PTR [rax],al
    17d4:	00 2f                	add    BYTE PTR [rdi],ch
    17d6:	00 00                	add    BYTE PTR [rax],al
    17d8:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    17db:	00 00                	add    BYTE PTR [rax],al
    17dd:	41 00 00             	add    BYTE PTR [r8],al
    17e0:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	60                   	(bad)
    17e6:	02 00                	add    al,BYTE PTR [rax]
    17e8:	00 82 02 00 00 9a    	add    BYTE PTR [rdx-0x65fffffe],al
    17ee:	00 00                	add    BYTE PTR [rax],al
    17f0:	00 ae 00 00 00 dd    	add    BYTE PTR [rsi-0x23000000],ch
    17f6:	00 00                	add    BYTE PTR [rax],al
    17f8:	00 02                	add    BYTE PTR [rdx],al
    17fa:	01 1f                	add    DWORD PTR [rdi],ebx
    17fc:	02 0f                	add    cl,BYTE PTR [rdi]
    17fe:	17                   	(bad)
    17ff:	56                   	push   rsi
    1800:	02 00                	add    al,BYTE PTR [rax]
    1802:	00 01                	add    BYTE PTR [rcx],al
    1804:	56                   	push   rsi
    1805:	02 00                	add    al,BYTE PTR [rax]
    1807:	00 01                	add    BYTE PTR [rcx],al
    1809:	ab                   	stos   DWORD PTR es:[rdi],eax
    180a:	02 00                	add    al,BYTE PTR [rax]
    180c:	00 02                	add    BYTE PTR [rdx],al
    180e:	b4 02                	mov    ah,0x2
    1810:	00 00                	add    BYTE PTR [rax],al
    1812:	02 a0 01 00 00 03    	add    ah,BYTE PTR [rax+0x3000001]
    1818:	10 01                	adc    BYTE PTR [rcx],al
    181a:	00 00                	add    BYTE PTR [rax],al
    181c:	04 07                	add    al,0x7
    181e:	01 00                	add    DWORD PTR [rax],eax
    1820:	00 03                	add    BYTE PTR [rbx],al
    1822:	19 01                	sbb    DWORD PTR [rcx],eax
    1824:	00 00                	add    BYTE PTR [rax],al
    1826:	02 19                	add    bl,BYTE PTR [rcx]
    1828:	01 00                	add    DWORD PTR [rax],eax
    182a:	00 05 bd 02 00 00    	add    BYTE PTR [rip+0x2bd],al        # 1aed <_Z15crc32HashString8string_t+0xcd>
    1830:	06                   	(bad)
    1831:	21 01                	and    DWORD PTR [rcx],eax
    1833:	00 00                	add    BYTE PTR [rax],al
    1835:	07                   	(bad)
    1836:	29 01                	sub    DWORD PTR [rcx],eax
    1838:	00 00                	add    BYTE PTR [rax],al
    183a:	08 33                	or     BYTE PTR [rbx],dh
    183c:	01 00                	add    DWORD PTR [rax],eax
    183e:	00 02                	add    BYTE PTR [rdx],al
    1840:	42 01 00             	rex.X add DWORD PTR [rax],eax
    1843:	00 02                	add    BYTE PTR [rdx],al
    1845:	07                   	(bad)
    1846:	01 00                	add    DWORD PTR [rax],eax
    1848:	00 02                	add    BYTE PTR [rdx],al
    184a:	07                   	(bad)
    184b:	01 00                	add    DWORD PTR [rax],eax
    184d:	00 07                	add    BYTE PTR [rdi],al
    184f:	cf                   	iret
    1850:	02 00                	add    al,BYTE PTR [rax]
    1852:	00 02                	add    BYTE PTR [rdx],al
    1854:	53                   	push   rbx
    1855:	01 00                	add    DWORD PTR [rax],eax
    1857:	00 02                	add    BYTE PTR [rdx],al
    1859:	dd 02                	fld    QWORD PTR [rdx]
    185b:	00 00                	add    BYTE PTR [rax],al
    185d:	02 b4 02 00 00 03 d6 	add    dh,BYTE PTR [rdx+rax*1-0x29fd0000]
    1864:	02 00                	add    al,BYTE PTR [rax]
    1866:	00 05 f1 01 00 00    	add    BYTE PTR [rip+0x1f1],al        # 1a5d <_Z15crc32HashString8string_t+0x3d>
    186c:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    186f:	00 00                	add    BYTE PTR [rax],al
    1871:	09 05 33 00 09 02    	or     DWORD PTR [rip+0x2090033],eax        # 20918aa <_end+0x208b892>
    1877:	30 24 00             	xor    BYTE PTR [rax+rax*1],ah
    187a:	00 00                	add    BYTE PTR [rax],al
    187c:	00 00                	add    BYTE PTR [rax],al
    187e:	00 03                	add    BYTE PTR [rbx],al
    1880:	0a 01                	or     al,BYTE PTR [rcx]
    1882:	06                   	(bad)
    1883:	01 08                	add    DWORD PTR [rax],ecx
    1885:	3c 05                	cmp    al,0x5
    1887:	05 06 08 2f 05       	add    eax,0x52f0806
    188c:	11 06                	adc    DWORD PTR [rsi],eax
    188e:	92                   	xchg   edx,eax
    188f:	05 05 06 74 05       	add    eax,0x5740605
    1894:	0e                   	(bad)
    1895:	06                   	(bad)
    1896:	13 3c 05 11 3b 05 05 	adc    edi,DWORD PTR [rax*1+0x5053b11]
    189d:	06                   	(bad)
    189e:	08 e5                	or     ch,ah
    18a0:	05 0e 06 01 05       	add    eax,0x501060e
    18a5:	05 00 02 04 01       	add    eax,0x1040200
    18aa:	82                   	(bad)
    18ab:	06                   	(bad)
    18ac:	5a                   	pop    rdx
    18ad:	05 0c 06 01 05       	add    eax,0x501060c
    18b2:	05 06 59 04 02       	add    eax,0x2045906
    18b7:	05 1b 06 03 23       	add    eax,0x2303061b
    18bc:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    18bf:	05 0b 03 5d 74       	add    eax,0x745d030b
    18c4:	05 05 06 4c 04       	add    eax,0x44c0605
    18c9:	02 05 01 03 15 01    	add    al,BYTE PTR [rip+0x1150301]        # 1151bd0 <_end+0x114bbb8>
    18cf:	05 03 14 15 05       	add    eax,0x5151403
    18d4:	07                   	(bad)
    18d5:	14 17                	adc    al,0x17
    18d7:	05 1b 06 01 82       	add    eax,0x8201061b
    18dc:	04 01                	add    al,0x1
    18de:	05 05 06 03 60       	add    eax,0x60030605
    18e3:	01 5a 05             	add    DWORD PTR [rdx+0x5],ebx
    18e6:	1f                   	(bad)
    18e7:	06                   	(bad)
    18e8:	01 c8                	add    eax,ecx
    18ea:	05 05 06 3d 5a       	add    eax,0x5a3d0605
    18ef:	04 03                	add    al,0x3
    18f1:	05 01 01 05 03       	add    eax,0x3050101
    18f6:	14 05                	adc    al,0x5
    18f8:	0a 00                	or     al,BYTE PTR [rax]
    18fa:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    18fd:	06                   	(bad)
    18fe:	01 00                	add    DWORD PTR [rax],eax
    1900:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1903:	d6                   	(bad)
    1904:	04 01                	add    al,0x1
    1906:	05 05 06 01 05       	add    eax,0x5010605
    190b:	0a 06                	or     al,BYTE PTR [rsi]
    190d:	01 05 01 85 05 34    	add    DWORD PTR [rip+0x34058501],eax        # 34059e14 <_end+0x34053dfc>
    1913:	00 02                	add    BYTE PTR [rdx],al
    1915:	04 01                	add    al,0x1
    1917:	03 70 02             	add    esi,DWORD PTR [rax+0x2]
    191a:	2e 01 00             	cs add DWORD PTR [rax],eax
    191d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1920:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1926:	01 2b                	add    DWORD PTR [rbx],ebp
    1928:	00 02                	add    BYTE PTR [rdx],al
    192a:	04 01                	add    al,0x1
    192c:	08 2e                	or     BYTE PTR [rsi],ch
    192e:	00 02                	add    BYTE PTR [rdx],al
    1930:	04 01                	add    al,0x1
    1932:	74 05                	je     1939 <_Z11hashMapDtorP7HashMap+0x49>
    1934:	01 03                	add    DWORD PTR [rbx],eax
    1936:	13 58 05             	adc    ebx,DWORD PTR [rax+0x5]
    1939:	32 06                	xor    al,BYTE PTR [rsi]
    193b:	ca 06 01             	retf   0x106
    193e:	05 05 06 4b 05       	add    eax,0x54b0605
    1943:	32 06                	xor    al,BYTE PTR [rsi]
    1945:	11 05 05 4b 05 1b    	adc    DWORD PTR [rip+0x1b054b05],eax        # 1b056450 <_end+0x1b050438>
    194b:	06                   	(bad)
    194c:	b1 05                	mov    cl,0x5
    194e:	0e                   	(bad)
    194f:	06                   	(bad)
    1950:	10 05 1b 30 05 09    	adc    BYTE PTR [rip+0x905301b],al        # 9054971 <_end+0x904e959>
    1956:	06                   	(bad)
    1957:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1958:	04 04                	add    al,0x4
    195a:	05 1b 06 03 c3       	add    eax,0xc303061b
    195f:	01 01                	add    DWORD PTR [rcx],eax
    1961:	04 01                	add    al,0x1
    1963:	05 0e 03 bd 7e       	add    eax,0x7ebd030e
    1968:	58                   	pop    rax
    1969:	05 09 06 3d 04       	add    eax,0x43d0609
    196e:	04 05                	add    al,0x5
    1970:	01 03                	add    DWORD PTR [rbx],eax
    1972:	c0 01 01             	rol    BYTE PTR [rcx],0x1
    1975:	05 03 14 05 1b       	add    eax,0x1b051403
    197a:	06                   	(bad)
    197b:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    197e:	01 05 13 00 02 04    	add    DWORD PTR [rip+0x4020013],eax        # 4021997 <_end+0x401b97f>
    1984:	01 03                	add    DWORD PTR [rbx],eax
    1986:	be 7e 01 05 1b       	mov    esi,0x1b05017e
    198b:	06                   	(bad)
    198c:	48 05 14 06 01 05    	add    rax,0x5010614
    1992:	1b 66 05             	sbb    esp,DWORD PTR [rsi+0x5]
    1995:	01 5e 4a             	add    DWORD PTR [rsi+0x4a],ebx
    1998:	2e 05 05 00 02 04    	cs add eax,0x4020005
    199e:	01 03                	add    DWORD PTR [rbx],eax
    19a0:	75 20                	jne    19c2 <_Z17hashMapDebugPrintP7HashMap+0x62>
    19a2:	00 02                	add    BYTE PTR [rdx],al
    19a4:	04 01                	add    al,0x1
    19a6:	08 2e                	or     BYTE PTR [rsi],ch
    19a8:	00 02                	add    BYTE PTR [rdx],al
    19aa:	04 01                	add    al,0x1
    19ac:	74 02                	je     19b0 <_Z17hashMapDebugPrintP7HashMap+0x50>
    19ae:	05 00 01 01 38       	add    eax,0x38010100
    19b3:	16                   	(bad)
    19b4:	00 00                	add    BYTE PTR [rax],al
    19b6:	05 00 08 00 82       	add    eax,0x82000800
    19bb:	01 00                	add    DWORD PTR [rax],eax
    19bd:	00 01                	add    BYTE PTR [rcx],al
    19bf:	01 01                	add    DWORD PTR [rcx],eax
    19c1:	fb                   	sti
    19c2:	0e                   	(bad)
    19c3:	0d 00 01 01 01       	or     eax,0x1010100
    19c8:	01 00                	add    DWORD PTR [rax],eax
    19ca:	00 00                	add    BYTE PTR [rax],al
    19cc:	01 00                	add    DWORD PTR [rax],eax
    19ce:	00 01                	add    BYTE PTR [rcx],al
    19d0:	01 01                	add    DWORD PTR [rcx],eax
    19d2:	1f                   	(bad)
    19d3:	0c 00                	or     al,0x0
    19d5:	00 00                	add    BYTE PTR [rax],al
    19d7:	00 2f                	add    BYTE PTR [rdi],ch
    19d9:	00 00                	add    BYTE PTR [rax],al
    19db:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    19de:	00 00                	add    BYTE PTR [rax],al
    19e0:	9a                   	(bad)
    19e1:	00 00                	add    BYTE PTR [rax],al
    19e3:	00 ae 00 00 00 07    	add    BYTE PTR [rsi+0x7000000],ch
    19e9:	03 00                	add    eax,DWORD PTR [rax]
    19eb:	00 dd                	add    ch,bl
    19ed:	00 00                	add    BYTE PTR [rax],al
    19ef:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    19f2:	00 00                	add    BYTE PTR [rax],al
    19f4:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    19f7:	00 82 02 00 00 21    	add    BYTE PTR [rdx+0x21000002],al
    19fd:	03 00                	add    eax,DWORD PTR [rax]
    19ff:	00 c7                	add    bh,al
    1a01:	00 00                	add    BYTE PTR [rax],al
    1a03:	00 02                	add    BYTE PTR [rdx],al
    1a05:	01 1f                	add    DWORD PTR [rdi],ebx
    1a07:	02 0f                	add    cl,BYTE PTR [rdi]
    1a09:	3e fd                	ds std
    1a0b:	02 00                	add    al,BYTE PTR [rax]
    1a0d:	00 01                	add    BYTE PTR [rcx],al
    1a0f:	fd                   	std
    1a10:	02 00                	add    al,BYTE PTR [rax]
    1a12:	00 01                	add    BYTE PTR [rcx],al
    1a14:	c8 01 00 00          	enter  0x1,0x0
    1a18:	02 3a                	add    bh,BYTE PTR [rdx]
    1a1a:	03 00                	add    eax,DWORD PTR [rax]
    1a1c:	00 03                	add    BYTE PTR [rbx],al
    1a1e:	40 03 00             	rex add eax,DWORD PTR [rax]
    1a21:	00 04 49             	add    BYTE PTR [rcx+rcx*2],al
    1a24:	03 00                	add    eax,DWORD PTR [rax]
    1a26:	00 03                	add    BYTE PTR [rbx],al
    1a28:	55                   	push   rbp
    1a29:	03 00                	add    eax,DWORD PTR [rax]
    1a2b:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 1b5a <_Z19_mm_crc32HashString8string_t+0x1a>
    1a31:	04 21                	add    al,0x21
    1a33:	01 00                	add    DWORD PTR [rax],eax
    1a35:	00 03                	add    BYTE PTR [rbx],al
    1a37:	5d                   	pop    rbp
    1a38:	03 00                	add    eax,DWORD PTR [rax]
    1a3a:	00 03                	add    BYTE PTR [rbx],al
    1a3c:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    1a3f:	00 03                	add    BYTE PTR [rbx],al
    1a41:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a42:	03 00                	add    eax,DWORD PTR [rax]
    1a44:	00 03                	add    BYTE PTR [rbx],al
    1a46:	73 03                	jae    1a4b <_Z15crc32HashString8string_t+0x2b>
    1a48:	00 00                	add    BYTE PTR [rax],al
    1a4a:	03 7b 03             	add    edi,DWORD PTR [rbx+0x3]
    1a4d:	00 00                	add    BYTE PTR [rax],al
    1a4f:	03 83 03 00 00 04    	add    eax,DWORD PTR [rbx+0x4000003]
    1a55:	8e 03                	mov    es,WORD PTR [rbx]
    1a57:	00 00                	add    BYTE PTR [rax],al
    1a59:	03 94 03 00 00 03 75 	add    edx,DWORD PTR [rbx+rax*1+0x75030000]
    1a60:	01 00                	add    DWORD PTR [rax],eax
    1a62:	00 06                	add    BYTE PTR [rsi],al
    1a64:	9a                   	(bad)
    1a65:	03 00                	add    eax,DWORD PTR [rax]
    1a67:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1a6a:	01 00                	add    DWORD PTR [rax],eax
    1a6c:	00 02                	add    BYTE PTR [rdx],al
    1a6e:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a6f:	03 00                	add    eax,DWORD PTR [rax]
    1a71:	00 07                	add    BYTE PTR [rdi],al
    1a73:	10 01                	adc    BYTE PTR [rcx],al
    1a75:	00 00                	add    BYTE PTR [rax],al
    1a77:	08 07                	or     BYTE PTR [rdi],al
    1a79:	01 00                	add    DWORD PTR [rax],eax
    1a7b:	00 07                	add    BYTE PTR [rdi],al
    1a7d:	b2 03                	mov    dl,0x3
    1a7f:	00 00                	add    BYTE PTR [rax],al
    1a81:	09 bc 03 00 00 09 1b 	or     DWORD PTR [rbx+rax*1+0x1b090000],edi
    1a88:	02 00                	add    al,BYTE PTR [rax]
    1a8a:	00 02                	add    BYTE PTR [rdx],al
    1a8c:	bd 02 00 00 09       	mov    ebp,0x9000002
    1a91:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a92:	03 00                	add    eax,DWORD PTR [rax]
    1a94:	00 03                	add    BYTE PTR [rbx],al
    1a96:	c5 03 00             	(bad)
    1a99:	00 00                	add    BYTE PTR [rax],al
    1a9b:	d0 03                	rol    BYTE PTR [rbx],1
    1a9d:	00 00                	add    BYTE PTR [rax],al
    1a9f:	09 de                	or     esi,ebx
    1aa1:	03 00                	add    eax,DWORD PTR [rax]
    1aa3:	00 09                	add    BYTE PTR [rcx],cl
    1aa5:	e9 03 00 00 09       	jmp    9001aad <_end+0x8ffba95>
    1aaa:	f2 03 00             	repnz add eax,DWORD PTR [rax]
    1aad:	00 09                	add    BYTE PTR [rcx],cl
    1aaf:	eb 03                	jmp    1ab4 <_Z15crc32HashString8string_t+0x94>
    1ab1:	00 00                	add    BYTE PTR [rax],al
    1ab3:	09 00                	or     DWORD PTR [rax],eax
    1ab5:	04 00                	add    al,0x0
    1ab7:	00 07                	add    BYTE PTR [rdi],al
    1ab9:	53                   	push   rbx
    1aba:	01 00                	add    DWORD PTR [rax],eax
    1abc:	00 02                	add    BYTE PTR [rdx],al
    1abe:	08 04 00             	or     BYTE PTR [rax+rax*1],al
    1ac1:	00 02                	add    BYTE PTR [rdx],al
    1ac3:	17                   	(bad)
    1ac4:	04 00                	add    al,0x0
    1ac6:	00 07                	add    BYTE PTR [rdi],al
    1ac8:	33 01                	xor    eax,DWORD PTR [rcx]
    1aca:	00 00                	add    BYTE PTR [rax],al
    1acc:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    1acf:	00 00                	add    BYTE PTR [rax],al
    1ad1:	02 07                	add    al,BYTE PTR [rdi]
    1ad3:	01 00                	add    DWORD PTR [rax],eax
    1ad5:	00 02                	add    BYTE PTR [rdx],al
    1ad7:	07                   	(bad)
    1ad8:	01 00                	add    DWORD PTR [rax],eax
    1ada:	00 03                	add    BYTE PTR [rbx],al
    1adc:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    1adf:	00 09                	add    BYTE PTR [rcx],cl
    1ae1:	d2 03                	rol    BYTE PTR [rbx],cl
    1ae3:	00 00                	add    BYTE PTR [rax],al
    1ae5:	09 29                	or     DWORD PTR [rcx],ebp
    1ae7:	04 00                	add    al,0x0
    1ae9:	00 07                	add    BYTE PTR [rdi],al
    1aeb:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
    1aee:	00 02                	add    BYTE PTR [rdx],al
    1af0:	3a 04 00             	cmp    al,BYTE PTR [rax+rax*1]
    1af3:	00 09                	add    BYTE PTR [rcx],cl
    1af5:	46 04 00             	rex.RX add al,0x0
    1af8:	00 07                	add    BYTE PTR [rdi],al
    1afa:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1afd:	00 02                	add    BYTE PTR [rdx],al
    1aff:	4f 04 00             	rex.WRXB add al,0x0
    1b02:	00 0a                	add    BYTE PTR [rdx],cl
    1b04:	60                   	(bad)
    1b05:	04 00                	add    al,0x0
    1b07:	00 07                	add    BYTE PTR [rdi],al
    1b09:	d1 01                	rol    DWORD PTR [rcx],1
    1b0b:	00 00                	add    BYTE PTR [rax],al
    1b0d:	0b 62 01             	or     esp,DWORD PTR [rdx+0x1]
    1b10:	00 00                	add    BYTE PTR [rax],al
    1b12:	0b dc                	or     ebx,esp
    1b14:	01 00                	add    DWORD PTR [rax],eax
    1b16:	00 0b                	add    BYTE PTR [rbx],cl
    1b18:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b19:	01 00                	add    DWORD PTR [rax],eax
    1b1b:	00 0b                	add    BYTE PTR [rbx],cl
    1b1d:	e3 01                	jrcxz  1b20 <_Z15crc32HashString8string_t+0x100>
    1b1f:	00 00                	add    BYTE PTR [rax],al
    1b21:	02 67 04             	add    ah,BYTE PTR [rdi+0x4]
    1b24:	00 00                	add    BYTE PTR [rax],al
    1b26:	0b a0 01 00 00 07    	or     esp,DWORD PTR [rax+0x7000001]
    1b2c:	74 04                	je     1b32 <_Z15crc32HashString8string_t+0x112>
    1b2e:	00 00                	add    BYTE PTR [rax],al
    1b30:	0b f1                	or     esi,ecx
    1b32:	01 00                	add    DWORD PTR [rax],eax
    1b34:	00 07                	add    BYTE PTR [rdi],al
    1b36:	7c 04                	jl     1b3c <_Z15crc32HashString8string_t+0x11c>
    1b38:	00 00                	add    BYTE PTR [rax],al
    1b3a:	04 8e                	add    al,0x8e
    1b3c:	04 00                	add    al,0x0
    1b3e:	00 03                	add    BYTE PTR [rbx],al
    1b40:	05 46 00 09 02       	add    eax,0x2090046
    1b45:	b0 25                	mov    al,0x25
    1b47:	00 00                	add    BYTE PTR [rax],al
    1b49:	00 00                	add    BYTE PTR [rax],al
    1b4b:	00 00                	add    BYTE PTR [rax],al
    1b4d:	03 c2                	add    eax,edx
    1b4f:	00 01                	add    BYTE PTR [rcx],al
    1b51:	06                   	(bad)
    1b52:	01 02                	add    DWORD PTR [rdx],eax
    1b54:	24 12                	and    al,0x12
    1b56:	05 05 06 e5 05       	add    eax,0x5e50605
    1b5b:	22 06                	and    al,BYTE PTR [rsi]
    1b5d:	92                   	xchg   edx,eax
    1b5e:	9e                   	sahf
    1b5f:	05 05 06 3c 05       	add    eax,0x53c0605
    1b64:	22 06                	and    al,BYTE PTR [rsi]
    1b66:	01 82 05 17 00 02    	add    DWORD PTR [rdx+0x2001705],eax
    1b6c:	04 01                	add    al,0x1
    1b6e:	06                   	(bad)
    1b6f:	5a                   	pop    rdx
    1b70:	00 02                	add    BYTE PTR [rdx],al
    1b72:	04 01                	add    al,0x1
    1b74:	06                   	(bad)
    1b75:	82                   	(bad)
    1b76:	05 09 06 9f 05       	add    eax,0x59f0609
    1b7b:	1a 06                	sbb    al,BYTE PTR [rsi]
    1b7d:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021b9a <_end+0x401bb82>
    1b83:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1b89:	05 00 02 04 02       	add    eax,0x2040200
    1b8e:	06                   	(bad)
    1b8f:	57                   	push   rdi
    1b90:	05 17 00 02 04       	add    eax,0x4020017
    1b95:	01 01                	add    DWORD PTR [rcx],eax
    1b97:	00 02                	add    BYTE PTR [rdx],al
    1b99:	04 01                	add    al,0x1
    1b9b:	06                   	(bad)
    1b9c:	58                   	pop    rax
    1b9d:	05 05 06 16 14       	add    eax,0x14160605
    1ba2:	04 02                	add    al,0x2
    1ba4:	05 01 11 05 03       	add    eax,0x3051101
    1ba9:	14 05                	adc    al,0x5
    1bab:	18 06                	sbb    BYTE PTR [rsi],al
    1bad:	01 08                	add    DWORD PTR [rax],ecx
    1baf:	82                   	(bad)
    1bb0:	04 01                	add    al,0x1
    1bb2:	05 1c 00 02 04       	add    eax,0x402001c
    1bb7:	01 06                	add    DWORD PTR [rsi],eax
    1bb9:	13 05 0b 06 70 05    	adc    eax,DWORD PTR [rip+0x570060b]        # 57021ca <_end+0x56fc1b2>
    1bbf:	1c 00                	sbb    al,0x0
    1bc1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1bc4:	4e 05 2d 4b 66 05    	rex.WRX add rax,0x5664b2d
    1bca:	0b 0d 08 20 04 02    	or     ecx,DWORD PTR [rip+0x2042008]        # 2043bd8 <_end+0x203dbc0>
    1bd0:	05 18 4d 08 58       	add    eax,0x58084d18
    1bd5:	04 01                	add    al,0x1
    1bd7:	05 09 06 14 04       	add    eax,0x4140609
    1bdc:	02 05 01 0e 05 03    	add    al,BYTE PTR [rip+0x3050e01]        # 30529e3 <_end+0x304c9cb>
    1be2:	14 04                	adc    al,0x4
    1be4:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021c06 <_end+0x401bbee>
    1bea:	01 06                	add    DWORD PTR [rsi],eax
    1bec:	13 04 02             	adc    eax,DWORD PTR [rdx+rax*1]
    1bef:	05 18 49 ba 04       	add    eax,0x4ba4918
    1bf4:	01 05 09 06 15 05    	add    DWORD PTR [rip+0x5150609],eax        # 5152203 <_end+0x514c1eb>
    1bfa:	26 06                	es (bad)
    1bfc:	01 05 1b 4a 05 26    	add    DWORD PTR [rip+0x26054a1b],eax        # 2605661d <_end+0x26050605>
    1c02:	00 02                	add    BYTE PTR [rdx],al
    1c04:	04 01                	add    al,0x1
    1c06:	08 2c 05 1b 3e 05 05 	or     BYTE PTR [rax*1+0x5053e1b],ch
    1c0d:	00 02                	add    BYTE PTR [rdx],al
    1c0f:	04 02                	add    al,0x2
    1c11:	06                   	(bad)
    1c12:	48 05 1c 00 02 04    	add    rax,0x402001c
    1c18:	01 01                	add    DWORD PTR [rcx],eax
    1c1a:	05 17 06 4f 05       	add    eax,0x54f0617
    1c1f:	05 06 58 05 17       	add    eax,0x17055806
    1c24:	06                   	(bad)
    1c25:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c2230 <_end+0x44bc218>
    1c2b:	02 05 01 0f 05 03    	add    al,BYTE PTR [rip+0x3050f01]        # 3052b32 <_end+0x304cb1a>
    1c31:	14 05                	adc    al,0x5
    1c33:	17                   	(bad)
    1c34:	06                   	(bad)
    1c35:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1c38:	05 0b 08 13 04       	add    eax,0x413080b
    1c3d:	02 05 17 8f 58 04    	add    al,BYTE PTR [rip+0x4588f17]        # 458ab5a <_end+0x4584b42>
    1c43:	01 05 05 06 14 05    	add    DWORD PTR [rip+0x5140605],eax        # 514224e <_end+0x513c236>
    1c49:	07                   	(bad)
    1c4a:	03 dc                	add    ebx,esp
    1c4c:	00 01                	add    BYTE PTR [rcx],al
    1c4e:	05 05 13 05 1c       	add    eax,0x1c051305
    1c53:	00 02                	add    BYTE PTR [rdx],al
    1c55:	04 01                	add    al,0x1
    1c57:	15 05 27 00 02       	adc    eax,0x2002705
    1c5c:	04 01                	add    al,0x1
    1c5e:	06                   	(bad)
    1c5f:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021c81 <_end+0x401bc69>
    1c65:	01 3c 05 23 ad 05 0b 	add    DWORD PTR [rax*1+0xb05ad23],edi
    1c6c:	08 9c 05 12 08 22 05 	or     BYTE PTR [rbp+rax*1+0x5220812],bl
    1c73:	26 d7                	xlat   BYTE PTR ds:[rbx]
    1c75:	05 09 06 08 9d       	add    eax,0x9d080609
    1c7a:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5112292 <_end+0x510c27a>
    1c80:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    1c87:	02 23                	add    ah,BYTE PTR [rbx]
    1c89:	12 c8                	adc    cl,al
    1c8b:	05 1c 02 2c 12       	add    eax,0x122c021c
    1c90:	c8 05 05 00          	enter  0x505,0x0
    1c94:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1c97:	06                   	(bad)
    1c98:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021cba <_end+0x401bca2>
    1c9e:	01 01                	add    DWORD PTR [rcx],eax
    1ca0:	00 02                	add    BYTE PTR [rdx],al
    1ca2:	04 01                	add    al,0x1
    1ca4:	06                   	(bad)
    1ca5:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    1cab:	13 05 26 06 01 f2    	adc    eax,DWORD PTR [rip+0xfffffffff2010626]        # fffffffff20122d7 <_end+0xfffffffff200c2bf>
    1cb1:	05 12 81 05 26       	add    eax,0x26058112
    1cb6:	d7                   	xlat   BYTE PTR ds:[rbx]
    1cb7:	05 12 57 05 26       	add    eax,0x26055712
    1cbc:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    1cbf:	31 02                	xor    DWORD PTR [rdx],eax
    1cc1:	27                   	(bad)
    1cc2:	12 05 1c 08 4a c8    	adc    al,BYTE PTR [rip+0xffffffffc84a081c]        # ffffffffc84a24e4 <_end+0xffffffffc849c4cc>
    1cc8:	05 05 00 02 04       	add    eax,0x4020005
    1ccd:	03 06                	add    eax,DWORD PTR [rsi]
    1ccf:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021cf1 <_end+0x401bcd9>
    1cd5:	01 01                	add    DWORD PTR [rcx],eax
    1cd7:	05 09 2f 13 05       	add    eax,0x5132f09
    1cdc:	29 06                	sub    DWORD PTR [rsi],eax
    1cde:	11 05 26 2f 05 12    	adc    DWORD PTR [rip+0x12052f26],eax        # 12054c0a <_end+0x1204ebf2>
    1ce4:	49 05 26 4b 05 05    	rex.WB add rax,0x5054b26
    1cea:	00 02                	add    BYTE PTR [rdx],al
    1cec:	04 03                	add    al,0x3
    1cee:	8e 05 26 3e 05 31    	mov    es,WORD PTR [rip+0x31053e26]        # 31055b1a <_end+0x3104fb02>
    1cf4:	4a 05 1c 4a 4a 05    	rex.WX add rax,0x54a4a1c
    1cfa:	05 00 02 04 03       	add    eax,0x3040200
    1cff:	06                   	(bad)
    1d00:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d22 <_end+0x401bd0a>
    1d06:	01 01                	add    DWORD PTR [rcx],eax
    1d08:	05 09 4b 13 05       	add    eax,0x5134b09
    1d0d:	12 06                	adc    al,BYTE PTR [rsi]
    1d0f:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    1d12:	05 00 02 04 03       	add    eax,0x3040200
    1d17:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31055b43 <_end+0x3104fb2b>
    1d1d:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1d21:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1d27:	03 06                	add    eax,DWORD PTR [rsi]
    1d29:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d4b <_end+0x401bd33>
    1d2f:	01 01                	add    DWORD PTR [rcx],eax
    1d31:	05 09 4b 13 05       	add    eax,0x5134b09
    1d36:	12 06                	adc    al,BYTE PTR [rsi]
    1d38:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31056864 <_end+0x3105084c>
    1d3e:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1d42:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1d48:	03 06                	add    eax,DWORD PTR [rsi]
    1d4a:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d6c <_end+0x401bd54>
    1d50:	01 01                	add    DWORD PTR [rcx],eax
    1d52:	00 02                	add    BYTE PTR [rdx],al
    1d54:	04 01                	add    al,0x1
    1d56:	06                   	(bad)
    1d57:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5162362 <_end+0x515c34a>
    1d5d:	1e                   	(bad)
    1d5e:	06                   	(bad)
    1d5f:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1d62:	05 03 06 03 fa       	add    eax,0xfa030603
    1d67:	01 c8                	add    eax,ecx
    1d69:	05 05 13 05 1b       	add    eax,0x1b051305
    1d6e:	06                   	(bad)
    1d6f:	9e                   	sahf
    1d70:	4a 04 01             	rex.WX add al,0x1
    1d73:	05 05 06 03 87       	add    eax,0x87030605
    1d78:	7e 01                	jle    1d7b <_Z13sumHashString8string_t+0xfb>
    1d7a:	06                   	(bad)
    1d7b:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1d7e:	05 01 06 03 96       	add    eax,0x96030601
    1d83:	7f 01                	jg     1d86 <_Z13sumHashString8string_t+0x106>
    1d85:	05 03 14 05 17       	add    eax,0x17051403
    1d8a:	06                   	(bad)
    1d8b:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1d8e:	05 0b 00 02 04       	add    eax,0x402000b
    1d93:	01 08                	add    DWORD PTR [rax],ecx
    1d95:	14 04                	adc    al,0x4
    1d97:	02 05 17 48 58 04    	add    al,BYTE PTR [rip+0x4584817]        # 45865b4 <_end+0x458059c>
    1d9d:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 51623a8 <_end+0x515c390>
    1da3:	10 06                	adc    BYTE PTR [rsi],al
    1da5:	01 05 01 83 08 3c    	add    DWORD PTR [rip+0x3c088301],eax        # 3c08a0ac <_end+0x3c084094>
    1dab:	66 2e 05 05 06       	cs add ax,0x605
    1db0:	03 e1                	add    esp,ecx
    1db2:	00 08                	add    BYTE PTR [rax],cl
    1db4:	12 05 1e 06 01 04    	adc    al,BYTE PTR [rip+0x401061e]        # 40123d8 <_end+0x400c3c0>
    1dba:	03 05 03 06 03 fa    	add    eax,DWORD PTR [rip+0xfffffffffa030603]        # fffffffffa0323c3 <_end+0xfffffffffa02c3ab>
    1dc0:	01 82 05 05 13 06    	add    DWORD PTR [rdx+0x6130505],eax
    1dc6:	82                   	(bad)
    1dc7:	3c 2e                	cmp    al,0x2e
    1dc9:	04 01                	add    al,0x1
    1dcb:	05 0b 03 80 7e       	add    eax,0x7e80030b
    1dd0:	01 05 13 4b 74 04    	add    DWORD PTR [rip+0x4744b13],eax        # 47468e9 <_end+0x47408d1>
    1dd6:	03 05 1b 03 ff 01    	add    eax,DWORD PTR [rip+0x1ff031b]        # 1ff20f7 <_end+0x1fec0df>
    1ddc:	01 90 66 04 01 05    	add    DWORD PTR [rax+0x5010466],edx
    1de2:	05 00 02 04 01       	add    eax,0x1040200
    1de7:	03 8d 7d 01 00 02    	add    ecx,DWORD PTR [rbp+0x200017d]
    1ded:	04 01                	add    al,0x1
    1def:	ba 00 02 04 01       	mov    edx,0x1040200
    1df4:	74 00                	je     1df6 <_Z17adler32HashString8string_t+0x6>
    1df6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1df9:	74 05                	je     1e00 <_Z17adler32HashString8string_t+0x10>
    1dfb:	01 03                	add    DWORD PTR [rbx],eax
    1dfd:	17                   	(bad)
    1dfe:	58                   	pop    rax
    1dff:	05 5c 06 08 22       	add    eax,0x2208065c
    1e04:	06                   	(bad)
    1e05:	01 02                	add    DWORD PTR [rdx],eax
    1e07:	24 12                	and    al,0x12
    1e09:	05 05 06 08 91       	add    eax,0x91080605
    1e0e:	05 0a 06 bb 05       	add    eax,0x5bb060a
    1e13:	22 5a 74             	and    bl,BYTE PTR [rdx+0x74]
    1e16:	3c 05                	cmp    al,0x5
    1e18:	05 06 3a 05 0a       	add    eax,0xa053a06
    1e1d:	06                   	(bad)
    1e1e:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a2429 <_end+0x559c411>
    1e24:	22 06                	and    al,BYTE PTR [rsi]
    1e26:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021e43 <_end+0x401be2b>
    1e2c:	01 06                	add    DWORD PTR [rsi],eax
    1e2e:	f3 00 02             	repz add BYTE PTR [rdx],al
    1e31:	04 01                	add    al,0x1
    1e33:	06                   	(bad)
    1e34:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e37:	04 01                	add    al,0x1
    1e39:	3c 05                	cmp    al,0x5
    1e3b:	09 06                	or     DWORD PTR [rsi],eax
    1e3d:	75 05                	jne    1e44 <_Z17adler32HashString8string_t+0x54>
    1e3f:	1a 06                	sbb    al,BYTE PTR [rsi]
    1e41:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021e5e <_end+0x401be46>
    1e47:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1e4d:	05 00 02 04 02       	add    eax,0x2040200
    1e52:	06                   	(bad)
    1e53:	57                   	push   rdi
    1e54:	05 17 00 02 04       	add    eax,0x4020017
    1e59:	01 01                	add    DWORD PTR [rcx],eax
    1e5b:	00 02                	add    BYTE PTR [rdx],al
    1e5d:	04 01                	add    al,0x1
    1e5f:	06                   	(bad)
    1e60:	58                   	pop    rax
    1e61:	05 05 06 16 05       	add    eax,0x5160605
    1e66:	2e 06                	cs (bad)
    1e68:	01 05 30 e5 05 2e    	add    DWORD PTR [rip+0x2e05e530],eax        # 2e06039e <_end+0x2e05a386>
    1e6e:	57                   	push   rdi
    1e6f:	05 05 06 75 05       	add    eax,0x5750605
    1e74:	30 06                	xor    BYTE PTR [rsi],al
    1e76:	01 3c 3c             	add    DWORD PTR [rsp+rdi*1],edi
    1e79:	05 05 06 08 67       	add    eax,0x67080605
    1e7e:	14 05                	adc    al,0x5
    1e80:	17                   	(bad)
    1e81:	00 02                	add    BYTE PTR [rdx],al
    1e83:	04 01                	add    al,0x1
    1e85:	01 05 09 03 17 74    	add    DWORD PTR [rip+0x74170309],eax        # 74172194 <_end+0x7416c17c>
    1e8b:	05 1e 06 01 05       	add    eax,0x501061e
    1e90:	21 00                	and    DWORD PTR [rax],eax
    1e92:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e95:	58                   	pop    rax
    1e96:	05 17 00 02 04       	add    eax,0x4020017
    1e9b:	01 03                	add    DWORD PTR [rbx],eax
    1e9d:	69 2e 05 21 00 02    	imul   ebp,DWORD PTR [rsi],0x2002105
    1ea3:	04 01                	add    al,0x1
    1ea5:	03 17                	add    edx,DWORD PTR [rdi]
    1ea7:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    1ead:	01 3c 05 05 00 02 04 	add    DWORD PTR [rax*1+0x4020005],edi
    1eb4:	03 06                	add    eax,DWORD PTR [rsi]
    1eb6:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
    1eb9:	05 17 00 02 04       	add    eax,0x4020017
    1ebe:	01 01                	add    DWORD PTR [rcx],eax
    1ec0:	00 02                	add    BYTE PTR [rdx],al
    1ec2:	04 01                	add    al,0x1
    1ec4:	06                   	(bad)
    1ec5:	58                   	pop    rax
    1ec6:	00 02                	add    BYTE PTR [rdx],al
    1ec8:	04 01                	add    al,0x1
    1eca:	06                   	(bad)
    1ecb:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    1ece:	04 04                	add    al,0x4
    1ed0:	05 26 00 02 04       	add    eax,0x4020026
    1ed5:	01 06                	add    DWORD PTR [rsi],eax
    1ed7:	03 ce                	add    ecx,esi
    1ed9:	00 08                	add    BYTE PTR [rax],cl
    1edb:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ede:	04 01                	add    al,0x1
    1ee0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1ee1:	04 01                	add    al,0x1
    1ee3:	05 09 06 03 b3       	add    eax,0xb3030609
    1ee8:	7f 01                	jg     1eeb <_Z13searchElementP4List8string_t.part.0+0x2b>
    1eea:	05 34 06 01 05       	add    eax,0x5010634
    1eef:	09 06                	or     DWORD PTR [rsi],eax
    1ef1:	ca 05 1b             	retf   0x1b05
    1ef4:	00 02                	add    BYTE PTR [rdx],al
    1ef6:	04 01                	add    al,0x1
    1ef8:	01 05 0d 2f 05 4e    	add    DWORD PTR [rip+0x4e052f0d],eax        # 4e054e0b <_end+0x4e04edf3>
    1efe:	06                   	(bad)
    1eff:	01 05 21 3c 05 1b    	add    DWORD PTR [rip+0x1b053c21],eax        # 1b055b26 <_end+0x1b04fb0e>
    1f05:	00 02                	add    BYTE PTR [rdx],al
    1f07:	04 01                	add    al,0x1
    1f09:	3b 05 21 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b21]        # 9056a30 <_end+0x9050a18>
    1f0f:	00 02                	add    BYTE PTR [rdx],al
    1f11:	04 02                	add    al,0x2
    1f13:	06                   	(bad)
    1f14:	08 2d 05 1b 00 02    	or     BYTE PTR [rip+0x2001b05],ch        # 2003a1f <_end+0x1ffda07>
    1f1a:	04 01                	add    al,0x1
    1f1c:	01 05 09 5c 05 32    	add    DWORD PTR [rip+0x32055c09],eax        # 32057b2b <_end+0x32051b13>
    1f22:	06                   	(bad)
    1f23:	01 05 09 06 59 04    	add    DWORD PTR [rip+0x4590609],eax        # 4592532 <_end+0x458c51a>
    1f29:	04 05                	add    al,0x5
    1f2b:	07                   	(bad)
    1f2c:	03 e7                	add    esp,edi
    1f2e:	07                   	(bad)
    1f2f:	01 05 02 03 c0 7e    	add    DWORD PTR [rip+0x7ec00302],eax        # 7ec02237 <_end+0x7ebfc21f>
    1f35:	01 06                	add    DWORD PTR [rsi],eax
    1f37:	01 06                	add    DWORD PTR [rsi],eax
    1f39:	01 06                	add    DWORD PTR [rsi],eax
    1f3b:	01 05 07 06 03 91    	add    DWORD PTR [rip+0xffffffff91030607],eax        # ffffffff91032548 <_end+0xffffffff9102c530>
    1f41:	7e 01                	jle    1f44 <_Z8listCtorv+0x54>
    1f43:	05 17 03 f7 7e       	add    eax,0x7ef70317
    1f48:	01 06                	add    DWORD PTR [rsi],eax
    1f4a:	01 05 07 06 03 d4    	add    DWORD PTR [rip+0xffffffffd4030607],eax        # ffffffffd4032557 <_end+0xffffffffd402c53f>
    1f50:	7d 01                	jge    1f53 <_Z12pushListElemP4List8string_t+0x3>
    1f52:	05 04 03 bf 7f       	add    eax,0x7fbf0304
    1f57:	01 05 17 03 ed 02    	add    DWORD PTR [rip+0x2ed0317],eax        # 2ed2274 <_end+0x2ecc25c>
    1f5d:	01 06                	add    DWORD PTR [rsi],eax
    1f5f:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1f62:	05 09 06 03 d3       	add    eax,0xd3030609
    1f67:	7c 01                	jl     1f6a <_Z12pushListElemP4List8string_t+0x1a>
    1f69:	04 04                	add    al,0x4
    1f6b:	05 22 00 02 04       	add    eax,0x4020022
    1f70:	02 06                	add    al,BYTE PTR [rsi]
    1f72:	03 bc 04 01 00 02 04 	add    edi,DWORD PTR [rsp+rax*1+0x4020001]
    1f79:	02 4a 04             	add    cl,BYTE PTR [rdx+0x4]
    1f7c:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021fa0 <_end+0x401bf88>
    1f82:	01 03                	add    DWORD PTR [rbx],eax
    1f84:	c4                   	(bad)
    1f85:	7b 01                	jnp    1f88 <_Z12pushListElemP4List8string_t+0x38>
    1f87:	05 17 00 02 04       	add    eax,0x4020017
    1f8c:	01 03                	add    DWORD PTR [rbx],eax
    1f8e:	76 4a                	jbe    1fda <_Z12pushListElemP4List8string_t+0x8a>
    1f90:	04 04                	add    al,0x4
    1f92:	05 22 00 02 04       	add    eax,0x4020022
    1f97:	02 03                	add    al,BYTE PTR [rbx]
    1f99:	c6 04 4a 00          	mov    BYTE PTR [rdx+rcx*2],0x0
    1f9d:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1fa0:	3c 00                	cmp    al,0x0
    1fa2:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1fa5:	3c 05                	cmp    al,0x5
    1fa7:	26 00 02             	es add BYTE PTR [rdx],al
    1faa:	04 01                	add    al,0x1
    1fac:	03 88 7c 01 04 01    	add    ecx,DWORD PTR [rax+0x104017c]
    1fb2:	05 17 00 02 04       	add    eax,0x4020017
    1fb7:	01 03                	add    DWORD PTR [rbx],eax
    1fb9:	b2 7f                	mov    dl,0x7f
    1fbb:	08 12                	or     BYTE PTR [rdx],dl
    1fbd:	04 04                	add    al,0x4
    1fbf:	05 26 00 02 04       	add    eax,0x4020026
    1fc4:	01 03                	add    DWORD PTR [rbx],eax
    1fc6:	ce                   	(bad)
    1fc7:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    1fca:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021fee <_end+0x401bfd6>
    1fd0:	01 03                	add    DWORD PTR [rbx],eax
    1fd2:	bc 7f 74 00 02       	mov    esp,0x200747f
    1fd7:	04 01                	add    al,0x1
    1fd9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1fda:	05 05 00 02 04       	add    eax,0x4020005
    1fdf:	02 06                	add    al,BYTE PTR [rsi]
    1fe1:	03 76 01             	add    esi,DWORD PTR [rsi+0x1]
    1fe4:	05 17 00 02 04       	add    eax,0x4020017
    1fe9:	01 01                	add    DWORD PTR [rcx],eax
    1feb:	05 10 06 03 0d       	add    eax,0xd030610
    1ff0:	ba 04 02 05 18       	mov    edx,0x18050204
    1ff5:	03 bc 7f 9e 04 01 05 	add    edi,DWORD PTR [rdi+rdi*2+0x501049e]
    1ffc:	05 06 03 c4 00       	add    eax,0xc40306
    2001:	74 05                	je     2008 <_Z12pushListElemP4List8string_t+0xb8>
    2003:	10 06                	adc    BYTE PTR [rsi],al
    2005:	01 05 05 06 5a 14    	add    DWORD PTR [rip+0x145a0605],eax        # 145a2610 <_end+0x1459c5f8>
    200b:	04 02                	add    al,0x2
    200d:	05 01 03 b6 7f       	add    eax,0x7fb60301
    2012:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 1805341b <_end+0x1804d403>
    2018:	06                   	(bad)
    2019:	01 08                	add    DWORD PTR [rax],ecx
    201b:	e4 04                	in     al,0x4
    201d:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 402203f <_end+0x401c027>
    2023:	01 06                	add    DWORD PTR [rsi],eax
    2025:	03 c9                	add    ecx,ecx
    2027:	00 01                	add    BYTE PTR [rcx],al
    2029:	00 02                	add    BYTE PTR [rdx],al
    202b:	04 01                	add    al,0x1
    202d:	06                   	(bad)
    202e:	82                   	(bad)
    202f:	05 0c 0f 05 10       	add    eax,0x10050f0c
    2034:	be 04 02 05 18       	mov    esi,0x18050204
    2039:	03 b6 7f 66 08 74    	add    esi,DWORD PTR [rsi+0x7408667f]
    203f:	04 01                	add    al,0x1
    2041:	05 09 06 03 ca       	add    eax,0xca030609
    2046:	00 01                	add    BYTE PTR [rcx],al
    2048:	04 02                	add    al,0x2
    204a:	05 01 03 b4 7f       	add    eax,0x7fb40301
    204f:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1043458 <_end+0x103d440>
    2055:	05 1c 00 02 04       	add    eax,0x402001c
    205a:	01 06                	add    DWORD PTR [rsi],eax
    205c:	03 c9                	add    ecx,ecx
    205e:	00 01                	add    BYTE PTR [rcx],al
    2060:	04 02                	add    al,0x2
    2062:	05 18 03 b7 7f       	add    eax,0x7fb70318
    2067:	4a 9e                	rex.WX sahf
    2069:	04 01                	add    al,0x1
    206b:	05 09 06 03 cb       	add    eax,0xcb030609
    2070:	00 01                	add    BYTE PTR [rcx],al
    2072:	05 16 06 01 05       	add    eax,0x5010616
    2077:	05 00 02 04 02       	add    eax,0x2040200
    207c:	06                   	(bad)
    207d:	d4                   	(bad)
    207e:	05 1c 00 02 04       	add    eax,0x402001c
    2083:	01 01                	add    DWORD PTR [rcx],eax
    2085:	05 12 06 5d 05       	add    eax,0x55d0612
    208a:	05 06 ac 05 12       	add    eax,0x1205ac06
    208f:	06                   	(bad)
    2090:	01 05 05 06 c9 05    	add    DWORD PTR [rip+0x5c90605],eax        # 5c9269b <_end+0x5c8c683>
    2096:	08 03                	or     BYTE PTR [rbx],al
    2098:	0a 01                	or     al,BYTE PTR [rcx]
    209a:	05 05 13 06 e4       	add    eax,0xe4061305
    209f:	05 0c 5a 74 05       	add    eax,0x5745a0c
    20a4:	09 06                	or     DWORD PTR [rsi],eax
    20a6:	76 05                	jbe    20ad <_Z12pushListElemP4List8string_t+0x15d>
    20a8:	2e 06                	cs (bad)
    20aa:	01 05 39 c8 82 05    	add    DWORD PTR [rip+0x582c839],eax        # 582e8e9 <_end+0x58288d1>
    20b0:	1c d6                	sbb    al,0xd6
    20b2:	05 05 00 02 04       	add    eax,0x4020005
    20b7:	03 06                	add    eax,DWORD PTR [rsi]
    20b9:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    20be:	04 01                	add    al,0x1
    20c0:	01 00                	add    DWORD PTR [rax],eax
    20c2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    20c5:	06                   	(bad)
    20c6:	08 58 05             	or     BYTE PTR [rax+0x5],bl
    20c9:	09 06                	or     DWORD PTR [rsi],eax
    20cb:	9f                   	lahf
    20cc:	05 2c 06 01 05       	add    eax,0x501062c
    20d1:	2e 66 05 2c 4a       	cs add ax,0x4a2c
    20d6:	05 2e 58 05 39       	add    eax,0x3905582e
    20db:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    20e1:	00 02                	add    BYTE PTR [rdx],al
    20e3:	04 03                	add    al,0x3
    20e5:	06                   	(bad)
    20e6:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 402210c <_end+0x401c0f4>
    20ed:	01 05 09 
    20f0:	9f                   	lahf
    20f1:	05 2e 06 01 05       	add    eax,0x501062e
    20f6:	39 c8                	cmp    eax,ecx
    20f8:	05 1c 4a 05 05       	add    eax,0x5054a1c
    20fd:	00 02                	add    BYTE PTR [rdx],al
    20ff:	04 03                	add    al,0x3
    2101:	06                   	(bad)
    2102:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    2108:	01 01                	add    DWORD PTR [rcx],eax
    210a:	00 02                	add    BYTE PTR [rdx],al
    210c:	04 01                	add    al,0x1
    210e:	06                   	(bad)
    210f:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 515271a <_end+0x514c702>
    2115:	1e                   	(bad)
    2116:	06                   	(bad)
    2117:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e056b3c <_end+0x1e050b24>
    211d:	4a 04 03             	rex.WX add al,0x3
    2120:	05 03 06 03 87       	add    eax,0x87030603
    2125:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    212b:	1b 06                	sbb    eax,DWORD PTR [rsi]
    212d:	d6                   	(bad)
    212e:	4a 04 01             	rex.WX add al,0x1
    2131:	05 18 00 02 04       	add    eax,0x4020018
    2136:	01 03                	add    DWORD PTR [rbx],eax
    2138:	f8                   	clc
    2139:	7d 01                	jge    213c <_Z11popListElemP4List8string_t+0x8c>
    213b:	04 02                	add    al,0x2
    213d:	05 17 03 a7 7f       	add    eax,0x7fa70317
    2142:	4a 04 01             	rex.WX add al,0x1
    2145:	05 18 00 02 04       	add    eax,0x4020018
    214a:	01 03                	add    DWORD PTR [rbx],eax
    214c:	d9 00                	fld    DWORD PTR [rax]
    214e:	74 05                	je     2155 <_Z11popListElemP4List8string_t+0xa5>
    2150:	05 06 5a 06 01       	add    eax,0x1065a06
    2155:	06                   	(bad)
    2156:	03 6f 01             	add    ebp,DWORD PTR [rdi+0x1]
    2159:	04 02                	add    al,0x2
    215b:	05 01 03 b4 7f       	add    eax,0x7fb40301
    2160:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17053569 <_end+0x1704d551>
    2166:	06                   	(bad)
    2167:	01 08                	add    DWORD PTR [rax],ecx
    2169:	74 04                	je     216f <_Z13searchElementP4List8string_t+0xf>
    216b:	01 05 05 06 03 cb    	add    DWORD PTR [rip+0xffffffffcb030605],eax        # ffffffffcb032776 <_end+0xffffffffcb02c75e>
    2171:	00 01                	add    BYTE PTR [rcx],al
    2173:	04 02                	add    al,0x2
    2175:	05 01 03 b3 7f       	add    eax,0x7fb30301
    217a:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17053583 <_end+0x1704d56b>
    2180:	06                   	(bad)
    2181:	01 08                	add    DWORD PTR [rax],ecx
    2183:	9e                   	sahf
    2184:	04 01                	add    al,0x1
    2186:	05 05 06 03 cc       	add    eax,0xcc030605
    218b:	00 01                	add    BYTE PTR [rcx],al
    218d:	04 02                	add    al,0x2
    218f:	05 01 03 b2 7f       	add    eax,0x7fb20301
    2194:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 104359d <_end+0x103d585>
    219a:	05 39 06 03 cc       	add    eax,0xcc030639
    219f:	00 01                	add    BYTE PTR [rcx],al
    21a1:	04 02                	add    al,0x2
    21a3:	05 17 03 b4 7f       	add    eax,0x7fb40317
    21a8:	9e                   	sahf
    21a9:	04 01                	add    al,0x1
    21ab:	05 39 03 cc 00       	add    eax,0xcc0339
    21b0:	08 12                	or     BYTE PTR [rdx],dl
    21b2:	05 0b 4a 04 02       	add    eax,0x2044a0b
    21b7:	05 17 03 b4 7f       	add    eax,0x7fb40317
    21bc:	82                   	(bad)
    21bd:	58                   	pop    rax
    21be:	04 01                	add    al,0x1
    21c0:	05 05 06 03 ce       	add    eax,0xce030605
    21c5:	00 01                	add    BYTE PTR [rcx],al
    21c7:	05 09 06 01 05       	add    eax,0x5010609
    21cc:	05 06 91 05 09       	add    eax,0x9059106
    21d1:	06                   	(bad)
    21d2:	01 05 01 08 67 58    	add    DWORD PTR [rip+0x58670801],eax        # 586729d9 <_end+0x5866c9c1>
    21d8:	4a 58                	rex.WX pop rax
    21da:	05 09 65 58 05       	add    eax,0x5586509
    21df:	05 06 03 6e 82       	add    eax,0x826e0306
    21e4:	05 10 06 01 05       	add    eax,0x5010610
    21e9:	05 06 84 14 04       	add    eax,0x4148406
    21ee:	02 05 01 03 b6 7f    	add    al,BYTE PTR [rip+0x7fb60301]        # 7fb624f5 <_end+0x7fb5c4dd>
    21f4:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 180535fd <_end+0x1804d5e5>
    21fa:	06                   	(bad)
    21fb:	01 08                	add    DWORD PTR [rax],ecx
    21fd:	ba 04 01 05 1c       	mov    edx,0x1c050104
    2202:	00 02                	add    BYTE PTR [rdx],al
    2204:	04 01                	add    al,0x1
    2206:	06                   	(bad)
    2207:	03 c9                	add    ecx,ecx
    2209:	00 01                	add    BYTE PTR [rcx],al
    220b:	05 05 17 05 12       	add    eax,0x12051705
    2210:	06                   	(bad)
    2211:	01 05 05 03 0c 4a    	add    DWORD PTR [rip+0x4a0c0305],eax        # 4a0c251c <_end+0x4a0bc504>
    2217:	05 12 03 74 58       	add    eax,0x58740312
    221c:	05 05 06 4b 05       	add    eax,0x54b0605
    2221:	08 03                	or     BYTE PTR [rbx],al
    2223:	0a 01                	or     al,BYTE PTR [rcx]
    2225:	05 05 13 34 05       	add    eax,0x5341305
    222a:	1e                   	(bad)
    222b:	06                   	(bad)
    222c:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    222f:	05 03 06 03 87       	add    eax,0x87030603
    2234:	02 82 05 05 13 06    	add    al,BYTE PTR [rdx+0x6130505]
    223a:	58                   	pop    rax
    223b:	04 01                	add    al,0x1
    223d:	05 0c 03 f4 7d       	add    eax,0x7df4030c
    2242:	01 05 13 4b 74 05    	add    DWORD PTR [rip+0x5744b13],eax        # 5746d5b <_end+0x5740d43>
    2248:	08 06                	or     BYTE PTR [rsi],al
    224a:	0e                   	(bad)
    224b:	05 05 00 02 04       	add    eax,0x4020005
    2250:	01 06                	add    DWORD PTR [rsi],eax
    2252:	13 00                	adc    eax,DWORD PTR [rax]
    2254:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2257:	08 d6                	or     dh,dl
    2259:	00 02                	add    BYTE PTR [rdx],al
    225b:	04 01                	add    al,0x1
    225d:	03 b5 7f 01 00 02    	add    esi,DWORD PTR [rbp+0x200017f]
    2263:	04 01                	add    al,0x1
    2265:	ba 00 02 04 01       	mov    edx,0x1040200
    226a:	74 00                	je     226c <_Z10debugPrintP4List+0x6c>
    226c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    226f:	74 05                	je     2276 <_Z10debugPrintP4List+0x76>
    2271:	09 03                	or     DWORD PTR [rbx],eax
    2273:	c7 00 58 58 04 03    	mov    DWORD PTR [rax],0x3045858
    2279:	05 1b 03 92 02       	add    eax,0x292031b
    227e:	58                   	pop    rax
    227f:	58                   	pop    rax
    2280:	04 01                	add    al,0x1
    2282:	05 5b 06 03 fc       	add    eax,0xfc03065b
    2287:	7c 08                	jl     2291 <_Z10debugPrintP4List+0x91>
    2289:	3c 06                	cmp    al,0x6
    228b:	01 05 05 06 03 0b    	add    DWORD PTR [rip+0xb030605],eax        # b032896 <_end+0xb02c87e>
    2291:	4a 05 5b 06 03 75    	rex.WX add rax,0x7503065b
    2297:	01 05 1e 03 0b 2e    	add    DWORD PTR [rip+0x2e0b031e],eax        # 2e0b25bb <_end+0x2e0ac5a3>
    229d:	05 5b 03 75 74       	add    eax,0x7475035b
    22a2:	82                   	(bad)
    22a3:	58                   	pop    rax
    22a4:	74 05                	je     22ab <_Z10debugPrintP4List+0xab>
    22a6:	1e                   	(bad)
    22a7:	03 0b                	add    ecx,DWORD PTR [rbx]
    22a9:	20 05 13 59 05 1e    	and    BYTE PTR [rip+0x1e055913],al        # 1e057bc2 <_end+0x1e051baa>
    22af:	8f 05 05 06 3d 05    	pop    QWORD PTR [rip+0x53d0605]        # 53d28ba <_end+0x53cc8a2>
    22b5:	13 06                	adc    eax,DWORD PTR [rsi]
    22b7:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad28c2 <_end+0x5acc8aa>
    22bd:	0b 06                	or     eax,DWORD PTR [rsi]
    22bf:	01 05 01 3d 20 20    	add    DWORD PTR [rip+0x20203d01],eax        # 20205fc6 <_end+0x201fffae>
    22c5:	2e 2e 05 0b 2d 58 05 	cs cs add eax,0x5582d0b
    22cc:	50                   	push   rax
    22cd:	06                   	(bad)
    22ce:	00 09                	add    BYTE PTR [rcx],cl
    22d0:	02 c0                	add    al,al
    22d2:	2e 00 00             	cs add BYTE PTR [rax],al
    22d5:	00 00                	add    BYTE PTR [rax],al
    22d7:	00 00                	add    BYTE PTR [rax],al
    22d9:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    22dc:	06                   	(bad)
    22dd:	01 08                	add    DWORD PTR [rax],ecx
    22df:	20 05 05 06 f3 bb    	and    BYTE PTR [rip+0xffffffffbbf30605],al        # ffffffffbbf328ea <_end+0xffffffffbbf2c8d2>
    22e5:	05 1a 06 93 74       	add    eax,0x7493061a
    22ea:	05 05 06 3b 05       	add    eax,0x53b0605
    22ef:	1a 06                	sbb    al,BYTE PTR [rsi]
    22f1:	13 05 0c 57 05 05    	adc    eax,DWORD PTR [rip+0x505570c]        # 5057a03 <_end+0x50519eb>
    22f7:	06                   	(bad)
    22f8:	91                   	xchg   ecx,eax
    22f9:	05 1a 06 01 05       	add    eax,0x501061a
    22fe:	20 5a 05             	and    BYTE PTR [rdx+0x5],bl
    2301:	1a 80 05 05 06 76    	sbb    al,BYTE PTR [rax+0x76060505]
    2307:	05 20 06 01 05       	add    eax,0x5010620
    230c:	39 5a 05             	cmp    DWORD PTR [rdx+0x5],ebx
    230f:	20 3a                	and    BYTE PTR [rdx],bh
    2311:	05 05 06 3e 05       	add    eax,0x53e0605
    2316:	39 06                	cmp    DWORD PTR [rsi],eax
    2318:	01 05 0f 85 05 39    	add    DWORD PTR [rip+0x3905850f],eax        # 3905a82d <_end+0x39054815>
    231e:	9b                   	fwait
    231f:	05 05 06 3f 05       	add    eax,0x53f0605
    2324:	0f 06                	clts
    2326:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022331 <_end+0x401c319>
    232c:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    232f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2332:	82                   	(bad)
    2333:	05 3f 00 02 04       	add    eax,0x402003f
    2338:	02 06                	add    al,BYTE PTR [rsi]
    233a:	01 05 05 13 05 0f    	add    DWORD PTR [rip+0xf051305],eax        # f053645 <_end+0xf04d62d>
    2340:	06                   	(bad)
    2341:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 402234c <_end+0x401c334>
    2347:	01 08                	add    DWORD PTR [rax],ecx
    2349:	20 05 43 00 02 04    	and    BYTE PTR [rip+0x4020043],al        # 4022392 <_end+0x401c37a>
    234f:	02 06                	add    al,BYTE PTR [rsi]
    2351:	82                   	(bad)
    2352:	05 05 13 05 0f       	add    eax,0xf051305
    2357:	06                   	(bad)
    2358:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022363 <_end+0x401c34b>
    235e:	01 e4                	add    esp,esp
    2360:	05 41 00 02 04       	add    eax,0x4020041
    2365:	02 06                	add    al,BYTE PTR [rsi]
    2367:	82                   	(bad)
    2368:	05 05 13 05 0f       	add    eax,0xf051305
    236d:	06                   	(bad)
    236e:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022379 <_end+0x401c361>
    2374:	01 e4                	add    esp,esp
    2376:	05 3d 00 02 04       	add    eax,0x402003d
    237b:	02 06                	add    al,BYTE PTR [rsi]
    237d:	82                   	(bad)
    237e:	05 05 13 05 0f       	add    eax,0xf051305
    2383:	06                   	(bad)
    2384:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 402238f <_end+0x401c377>
    238a:	01 e4                	add    esp,esp
    238c:	05 41 00 02 04       	add    eax,0x4020041
    2391:	02 06                	add    al,BYTE PTR [rsi]
    2393:	82                   	(bad)
    2394:	05 05 13 05 0f       	add    eax,0xf051305
    2399:	06                   	(bad)
    239a:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223a5 <_end+0x401c38d>
    23a0:	01 e4                	add    esp,esp
    23a2:	05 3d 00 02 04       	add    eax,0x402003d
    23a7:	02 06                	add    al,BYTE PTR [rsi]
    23a9:	82                   	(bad)
    23aa:	05 05 13 05 0f       	add    eax,0xf051305
    23af:	06                   	(bad)
    23b0:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223bb <_end+0x401c3a3>
    23b6:	01 e4                	add    esp,esp
    23b8:	05 49 00 02 04       	add    eax,0x4020049
    23bd:	02 06                	add    al,BYTE PTR [rsi]
    23bf:	82                   	(bad)
    23c0:	05 05 13 05 0f       	add    eax,0xf051305
    23c5:	06                   	(bad)
    23c6:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223d1 <_end+0x401c3b9>
    23cc:	01 e4                	add    esp,esp
    23ce:	00 02                	add    BYTE PTR [rdx],al
    23d0:	04 01                	add    al,0x1
    23d2:	82                   	(bad)
    23d3:	06                   	(bad)
    23d4:	03 0a                	add    ecx,DWORD PTR [rdx]
    23d6:	01 05 09 06 01 05    	add    DWORD PTR [rip+0x5010609],eax        # 50129e5 <_end+0x500c9cd>
    23dc:	05 06 91 05 09       	add    eax,0x9059106
    23e1:	06                   	(bad)
    23e2:	01 05 05 06 91 05    	add    DWORD PTR [rip+0x5910605],eax        # 59129ed <_end+0x590c9d5>
    23e8:	09 06                	or     DWORD PTR [rsi],eax
    23ea:	01 05 01 83 08 e4    	add    DWORD PTR [rip+0xffffffffe4088301],eax        # ffffffffe408a6f1 <_end+0xffffffffe40846d9>
    23f0:	05 34 00 02 04       	add    eax,0x4020034
    23f5:	01 06                	add    DWORD PTR [rsi],eax
    23f7:	03 6c 9e 04          	add    ebp,DWORD PTR [rsi+rbx*4+0x4]
    23fb:	02 05 01 03 37 01    	add    al,BYTE PTR [rip+0x1370301]        # 1372702 <_end+0x136c6ea>
    2401:	05 03 14 05 17       	add    eax,0x17051403
    2406:	06                   	(bad)
    2407:	01 e4                	add    esp,esp
    2409:	04 01                	add    al,0x1
    240b:	05 34 00 02 04       	add    eax,0x4020034
    2410:	03 06                	add    eax,DWORD PTR [rsi]
    2412:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    2415:	04 02                	add    al,0x2
    2417:	05 01 03 37 01       	add    eax,0x1370301
    241c:	05 03 14 05 17       	add    eax,0x17051403
    2421:	06                   	(bad)
    2422:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2428:	00 02                	add    BYTE PTR [rdx],al
    242a:	04 04                	add    al,0x4
    242c:	06                   	(bad)
    242d:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    2430:	04 02                	add    al,0x2
    2432:	05 01 03 37 01       	add    eax,0x1370301
    2437:	05 03 14 05 17       	add    eax,0x17051403
    243c:	06                   	(bad)
    243d:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2443:	00 02                	add    BYTE PTR [rdx],al
    2445:	04 05                	add    al,0x5
    2447:	06                   	(bad)
    2448:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    244b:	00 02                	add    BYTE PTR [rdx],al
    244d:	04 05                	add    al,0x5
    244f:	01 05 06 03 16 01    	add    DWORD PTR [rip+0x1160306],eax        # 116275b <_end+0x115c743>
    2455:	05 05 03 0b 01       	add    eax,0x10b0305
    245a:	05 1e 06 01 05       	add    eax,0x501061e
    245f:	13 08                	adc    ecx,DWORD PTR [rax]
    2461:	2f                   	(bad)
    2462:	05 1e f1 05 05       	add    eax,0x505f11e
    2467:	06                   	(bad)
    2468:	3d 05 13 06 01       	cmp    eax,0x1061305
    246d:	05 05 06 83 05       	add    eax,0x5830605
    2472:	0b 06                	or     eax,DWORD PTR [rsi]
    2474:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    247a:	04 06                	add    al,0x6
    247c:	06                   	(bad)
    247d:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
    2480:	04 02                	add    al,0x2
    2482:	05 01 03 37 01       	add    eax,0x1370301
    2487:	05 03 14 05 17       	add    eax,0x17051403
    248c:	06                   	(bad)
    248d:	01 ba e4 04 01 05    	add    DWORD PTR [rdx+0x50104e4],edi
    2493:	09 06                	or     DWORD PTR [rsi],eax
    2495:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2498:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    249b:	05 01 03 2f 01       	add    eax,0x12f0301
    24a0:	05 03 14 05 17       	add    eax,0x17051403
    24a5:	06                   	(bad)
    24a6:	01 e4                	add    esp,esp
    24a8:	04 01                	add    al,0x1
    24aa:	05 09 00 02 04       	add    eax,0x4020009
    24af:	01 06                	add    DWORD PTR [rsi],eax
    24b1:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24b4:	04 02                	add    al,0x2
    24b6:	05 01 03 2f 01       	add    eax,0x12f0301
    24bb:	05 03 14 05 17       	add    eax,0x17051403
    24c0:	06                   	(bad)
    24c1:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    24c7:	00 02                	add    BYTE PTR [rdx],al
    24c9:	04 02                	add    al,0x2
    24cb:	06                   	(bad)
    24cc:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24cf:	04 02                	add    al,0x2
    24d1:	05 01 03 2f 01       	add    eax,0x12f0301
    24d6:	05 03 14 05 17       	add    eax,0x17051403
    24db:	06                   	(bad)
    24dc:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    24e2:	00 02                	add    BYTE PTR [rdx],al
    24e4:	04 03                	add    al,0x3
    24e6:	06                   	(bad)
    24e7:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24ea:	00 02                	add    BYTE PTR [rdx],al
    24ec:	04 03                	add    al,0x3
    24ee:	01 05 06 03 0e 01    	add    DWORD PTR [rip+0x10e0306],eax        # 10e27fa <_end+0x10dc7e2>
    24f4:	05 05 03 0b 01       	add    eax,0x10b0305
    24f9:	05 1e 06 3c 05       	add    eax,0x53c061e
    24fe:	13 08                	adc    ecx,DWORD PTR [rax]
    2500:	75 05                	jne    2507 <_Z8readFilePKcPm+0xd7>
    2502:	1e                   	(bad)
    2503:	f1                   	int1
    2504:	05 05 06 3d 05       	add    eax,0x53d0605
    2509:	13 06                	adc    eax,DWORD PTR [rsi]
    250b:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832b16 <_end+0x582cafe>
    2511:	0b 06                	or     eax,DWORD PTR [rsi]
    2513:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2516:	05 17 03 16 3c       	add    eax,0x3c160317
    251b:	74 04                	je     2521 <_Z8readFilePKcPm+0xf1>
    251d:	01 05 0b 03 6a 01    	add    DWORD PTR [rip+0x16a030b],eax        # 16a282e <_end+0x169c816>
    2523:	58                   	pop    rax
    2524:	05 09 00 02 04       	add    eax,0x4020009
    2529:	04 06                	add    al,0x6
    252b:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    252e:	04 02                	add    al,0x2
    2530:	05 01 03 2f 01       	add    eax,0x12f0301
    2535:	05 03 14 05 17       	add    eax,0x17051403
    253a:	06                   	(bad)
    253b:	01 82 04 01 05 14    	add    DWORD PTR [rdx+0x14050104],eax
    2541:	06                   	(bad)
    2542:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2545:	05 09 13 01 04       	add    eax,0x4011309
    254a:	02 05 01 03 2e 01    	add    al,BYTE PTR [rip+0x12e0301]        # 12e2851 <_end+0x12dc839>
    2550:	05 03 14 05 17       	add    eax,0x17051403
    2555:	06                   	(bad)
    2556:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    255c:	00 02                	add    BYTE PTR [rdx],al
    255e:	04 01                	add    al,0x1
    2560:	06                   	(bad)
    2561:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2564:	04 02                	add    al,0x2
    2566:	05 01 03 2e 01       	add    eax,0x12e0301
    256b:	05 03 14 05 17       	add    eax,0x17051403
    2570:	06                   	(bad)
    2571:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2577:	00 02                	add    BYTE PTR [rdx],al
    2579:	04 02                	add    al,0x2
    257b:	06                   	(bad)
    257c:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    257f:	04 02                	add    al,0x2
    2581:	05 01 03 2e 01       	add    eax,0x12e0301
    2586:	05 03 14 05 17       	add    eax,0x17051403
    258b:	06                   	(bad)
    258c:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2592:	00 02                	add    BYTE PTR [rdx],al
    2594:	04 03                	add    al,0x3
    2596:	06                   	(bad)
    2597:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    259a:	00 02                	add    BYTE PTR [rdx],al
    259c:	04 03                	add    al,0x3
    259e:	01 00                	add    DWORD PTR [rax],eax
    25a0:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    25a3:	06                   	(bad)
    25a4:	01 05 06 06 03 0d    	add    DWORD PTR [rip+0xd030606],eax        # d032bb0 <_end+0xd02cb98>
    25aa:	58                   	pop    rax
    25ab:	05 05 03 0b 01       	add    eax,0x10b0305
    25b0:	05 1e 06 01 05       	add    eax,0x501061e
    25b5:	13 08                	adc    ecx,DWORD PTR [rax]
    25b7:	2f                   	(bad)
    25b8:	05 1e f1 05 05       	add    eax,0x505f11e
    25bd:	06                   	(bad)
    25be:	3d 05 13 06 01       	cmp    eax,0x1061305
    25c3:	05 05 06 83 05       	add    eax,0x5830605
    25c8:	0b 06                	or     eax,DWORD PTR [rsi]
    25ca:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    25d0:	04 04                	add    al,0x4
    25d2:	06                   	(bad)
    25d3:	03 66 01             	add    esp,DWORD PTR [rsi+0x1]
    25d6:	04 02                	add    al,0x2
    25d8:	05 01 03 2e 01       	add    eax,0x12e0301
    25dd:	05 03 14 05 17       	add    eax,0x17051403
    25e2:	06                   	(bad)
    25e3:	01 82 04 01 05 18    	add    DWORD PTR [rdx+0x18050104],eax
    25e9:	06                   	(bad)
    25ea:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    25ed:	05 09 13 01 04       	add    eax,0x4011309
    25f2:	02 05 01 03 2d 01    	add    al,BYTE PTR [rip+0x12d0301]        # 12d28f9 <_end+0x12cc8e1>
    25f8:	05 03 14 05 17       	add    eax,0x17051403
    25fd:	06                   	(bad)
    25fe:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2604:	00 02                	add    BYTE PTR [rdx],al
    2606:	04 01                	add    al,0x1
    2608:	06                   	(bad)
    2609:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    260c:	04 02                	add    al,0x2
    260e:	05 01 03 2d 01       	add    eax,0x12d0301
    2613:	05 03 14 05 17       	add    eax,0x17051403
    2618:	06                   	(bad)
    2619:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    261f:	00 02                	add    BYTE PTR [rdx],al
    2621:	04 02                	add    al,0x2
    2623:	06                   	(bad)
    2624:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2627:	04 02                	add    al,0x2
    2629:	05 01 03 2d 01       	add    eax,0x12d0301
    262e:	05 03 14 05 17       	add    eax,0x17051403
    2633:	06                   	(bad)
    2634:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    263a:	00 02                	add    BYTE PTR [rdx],al
    263c:	04 03                	add    al,0x3
    263e:	06                   	(bad)
    263f:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2642:	00 02                	add    BYTE PTR [rdx],al
    2644:	04 03                	add    al,0x3
    2646:	01 05 06 03 0c 01    	add    DWORD PTR [rip+0x10c0306],eax        # 10c2952 <_end+0x10bc93a>
    264c:	05 05 03 0b 01       	add    eax,0x10b0305
    2651:	05 1e 06 01 05       	add    eax,0x501061e
    2656:	13 08                	adc    ecx,DWORD PTR [rax]
    2658:	2f                   	(bad)
    2659:	05 1e f1 05 05       	add    eax,0x505f11e
    265e:	06                   	(bad)
    265f:	3d 05 13 06 01       	cmp    eax,0x1061305
    2664:	05 05 06 83 05       	add    eax,0x5830605
    2669:	0b 06                	or     eax,DWORD PTR [rsi]
    266b:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2671:	04 04                	add    al,0x4
    2673:	06                   	(bad)
    2674:	03 67 01             	add    esp,DWORD PTR [rdi+0x1]
    2677:	04 02                	add    al,0x2
    2679:	05 01 03 2d 01       	add    eax,0x12d0301
    267e:	05 03 14 05 17       	add    eax,0x17051403
    2683:	06                   	(bad)
    2684:	01 82 04 01 05 1e    	add    DWORD PTR [rdx+0x1e050104],eax
    268a:	06                   	(bad)
    268b:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    268e:	05 09 13 01 04       	add    eax,0x4011309
    2693:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c299a <_end+0x12bc982>
    2699:	05 03 14 05 17       	add    eax,0x17051403
    269e:	06                   	(bad)
    269f:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    26a5:	00 02                	add    BYTE PTR [rdx],al
    26a7:	04 01                	add    al,0x1
    26a9:	06                   	(bad)
    26aa:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26ad:	04 02                	add    al,0x2
    26af:	05 01 03 2c 01       	add    eax,0x12c0301
    26b4:	05 03 14 05 17       	add    eax,0x17051403
    26b9:	06                   	(bad)
    26ba:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    26c0:	00 02                	add    BYTE PTR [rdx],al
    26c2:	04 02                	add    al,0x2
    26c4:	06                   	(bad)
    26c5:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26c8:	04 02                	add    al,0x2
    26ca:	05 01 03 2c 01       	add    eax,0x12c0301
    26cf:	05 03 14 05 17       	add    eax,0x17051403
    26d4:	06                   	(bad)
    26d5:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    26db:	00 02                	add    BYTE PTR [rdx],al
    26dd:	04 03                	add    al,0x3
    26df:	06                   	(bad)
    26e0:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26e3:	00 02                	add    BYTE PTR [rdx],al
    26e5:	04 03                	add    al,0x3
    26e7:	01 05 06 03 0b 01    	add    DWORD PTR [rip+0x10b0306],eax        # 10b29f3 <_end+0x10ac9db>
    26ed:	05 05 03 0b 01       	add    eax,0x10b0305
    26f2:	05 1e 06 01 05       	add    eax,0x501061e
    26f7:	13 08                	adc    ecx,DWORD PTR [rax]
    26f9:	2f                   	(bad)
    26fa:	05 1e f1 05 05       	add    eax,0x505f11e
    26ff:	06                   	(bad)
    2700:	3d 05 13 06 01       	cmp    eax,0x1061305
    2705:	05 05 06 83 05       	add    eax,0x5830605
    270a:	0b 06                	or     eax,DWORD PTR [rsi]
    270c:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2712:	04 04                	add    al,0x4
    2714:	06                   	(bad)
    2715:	03 68 01             	add    ebp,DWORD PTR [rax+0x1]
    2718:	04 02                	add    al,0x2
    271a:	05 01 03 2c 01       	add    eax,0x12c0301
    271f:	05 03 14 05 17       	add    eax,0x17051403
    2724:	06                   	(bad)
    2725:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    272b:	06                   	(bad)
    272c:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    272f:	05 09 13 01 04       	add    eax,0x4011309
    2734:	02 05 01 03 2b 01    	add    al,BYTE PTR [rip+0x12b0301]        # 12b2a3b <_end+0x12aca23>
    273a:	05 03 14 05 17       	add    eax,0x17051403
    273f:	06                   	(bad)
    2740:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2746:	00 02                	add    BYTE PTR [rdx],al
    2748:	04 01                	add    al,0x1
    274a:	06                   	(bad)
    274b:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    274e:	04 02                	add    al,0x2
    2750:	05 01 03 2b 01       	add    eax,0x12b0301
    2755:	05 03 14 05 17       	add    eax,0x17051403
    275a:	06                   	(bad)
    275b:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2761:	00 02                	add    BYTE PTR [rdx],al
    2763:	04 02                	add    al,0x2
    2765:	06                   	(bad)
    2766:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2769:	04 02                	add    al,0x2
    276b:	05 01 03 2b 01       	add    eax,0x12b0301
    2770:	05 03 14 05 17       	add    eax,0x17051403
    2775:	06                   	(bad)
    2776:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    277c:	00 02                	add    BYTE PTR [rdx],al
    277e:	04 03                	add    al,0x3
    2780:	06                   	(bad)
    2781:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2784:	00 02                	add    BYTE PTR [rdx],al
    2786:	04 03                	add    al,0x3
    2788:	01 05 06 03 0a 01    	add    DWORD PTR [rip+0x10a0306],eax        # 10a2a94 <_end+0x109ca7c>
    278e:	05 05 03 0b 01       	add    eax,0x10b0305
    2793:	05 1e 06 01 05       	add    eax,0x501061e
    2798:	13 08                	adc    ecx,DWORD PTR [rax]
    279a:	2f                   	(bad)
    279b:	05 1e f1 05 05       	add    eax,0x505f11e
    27a0:	06                   	(bad)
    27a1:	3d 05 13 06 01       	cmp    eax,0x1061305
    27a6:	05 05 06 83 05       	add    eax,0x5830605
    27ab:	0b 06                	or     eax,DWORD PTR [rsi]
    27ad:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    27b3:	04 04                	add    al,0x4
    27b5:	06                   	(bad)
    27b6:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    27b9:	04 02                	add    al,0x2
    27bb:	05 01 03 2b 01       	add    eax,0x12b0301
    27c0:	05 03 14 05 17       	add    eax,0x17051403
    27c5:	06                   	(bad)
    27c6:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    27cc:	06                   	(bad)
    27cd:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    27d0:	05 09 13 01 04       	add    eax,0x4011309
    27d5:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2adc <_end+0x129cac4>
    27db:	05 03 14 05 17       	add    eax,0x17051403
    27e0:	06                   	(bad)
    27e1:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    27e7:	00 02                	add    BYTE PTR [rdx],al
    27e9:	04 01                	add    al,0x1
    27eb:	06                   	(bad)
    27ec:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    27f0:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2af7 <_end+0x129cadf>
    27f6:	05 03 14 05 17       	add    eax,0x17051403
    27fb:	06                   	(bad)
    27fc:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2802:	00 02                	add    BYTE PTR [rdx],al
    2804:	04 02                	add    al,0x2
    2806:	06                   	(bad)
    2807:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    280b:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2b12 <_end+0x129cafa>
    2811:	05 03 14 05 17       	add    eax,0x17051403
    2816:	06                   	(bad)
    2817:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    281d:	00 02                	add    BYTE PTR [rdx],al
    281f:	04 03                	add    al,0x3
    2821:	06                   	(bad)
    2822:	03 54 01 00          	add    edx,DWORD PTR [rcx+rax*1+0x0]
    2826:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2829:	01 05 06 03 09 01    	add    DWORD PTR [rip+0x1090306],eax        # 1092b35 <_end+0x108cb1d>
    282f:	05 05 03 0b 01       	add    eax,0x10b0305
    2834:	05 1e 06 01 05       	add    eax,0x501061e
    2839:	13 08                	adc    ecx,DWORD PTR [rax]
    283b:	2f                   	(bad)
    283c:	05 1e f1 05 05       	add    eax,0x505f11e
    2841:	06                   	(bad)
    2842:	3d 05 13 06 01       	cmp    eax,0x1061305
    2847:	05 05 06 83 05       	add    eax,0x5830605
    284c:	0b 06                	or     eax,DWORD PTR [rsi]
    284e:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2854:	04 04                	add    al,0x4
    2856:	06                   	(bad)
    2857:	03 6a 01             	add    ebp,DWORD PTR [rdx+0x1]
    285a:	04 02                	add    al,0x2
    285c:	05 01 03 2a 01       	add    eax,0x12a0301
    2861:	05 03 14 05 17       	add    eax,0x17051403
    2866:	06                   	(bad)
    2867:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    286d:	06                   	(bad)
    286e:	03 54 01 05          	add    edx,DWORD PTR [rcx+rax*1+0x5]
    2872:	09 13                	or     DWORD PTR [rbx],edx
    2874:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2877:	05 01 03 29 01       	add    eax,0x1290301
    287c:	05 03 14 05 17       	add    eax,0x17051403
    2881:	06                   	(bad)
    2882:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2888:	00 02                	add    BYTE PTR [rdx],al
    288a:	04 01                	add    al,0x1
    288c:	06                   	(bad)
    288d:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2890:	04 02                	add    al,0x2
    2892:	05 01 03 29 01       	add    eax,0x1290301
    2897:	05 03 14 05 17       	add    eax,0x17051403
    289c:	06                   	(bad)
    289d:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    28a3:	00 02                	add    BYTE PTR [rdx],al
    28a5:	04 02                	add    al,0x2
    28a7:	06                   	(bad)
    28a8:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    28ab:	04 02                	add    al,0x2
    28ad:	05 01 03 29 01       	add    eax,0x1290301
    28b2:	05 03 14 05 17       	add    eax,0x17051403
    28b7:	06                   	(bad)
    28b8:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    28be:	00 02                	add    BYTE PTR [rdx],al
    28c0:	04 03                	add    al,0x3
    28c2:	06                   	(bad)
    28c3:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    28c6:	00 02                	add    BYTE PTR [rdx],al
    28c8:	04 03                	add    al,0x3
    28ca:	01 05 06 1a 05 05    	add    DWORD PTR [rip+0x5051a06],eax        # 50542d6 <_end+0x504e2be>
    28d0:	03 0b                	add    ecx,DWORD PTR [rbx]
    28d2:	01 05 1e 06 01 05    	add    DWORD PTR [rip+0x501061e],eax        # 5012ef6 <_end+0x500cede>
    28d8:	13 08                	adc    ecx,DWORD PTR [rax]
    28da:	2f                   	(bad)
    28db:	05 1e f1 05 05       	add    eax,0x505f11e
    28e0:	06                   	(bad)
    28e1:	3d 05 13 06 01       	cmp    eax,0x1061305
    28e6:	05 05 06 83 05       	add    eax,0x5830605
    28eb:	0b 06                	or     eax,DWORD PTR [rsi]
    28ed:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    28f3:	04 04                	add    al,0x4
    28f5:	06                   	(bad)
    28f6:	03 6b 01             	add    ebp,DWORD PTR [rbx+0x1]
    28f9:	04 02                	add    al,0x2
    28fb:	05 01 03 29 01       	add    eax,0x1290301
    2900:	05 03 14 05 17       	add    eax,0x17051403
    2905:	06                   	(bad)
    2906:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    290c:	06                   	(bad)
    290d:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2910:	06                   	(bad)
    2911:	74 05                	je     2918 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x368>
    2913:	34 00                	xor    al,0x0
    2915:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2918:	06                   	(bad)
    2919:	03 78 01             	add    edi,DWORD PTR [rax+0x1]
    291c:	04 02                	add    al,0x2
    291e:	05 01 03 31 01       	add    eax,0x1310301
    2923:	05 03 14 05 17       	add    eax,0x17051403
    2928:	06                   	(bad)
    2929:	01 e4                	add    esp,esp
    292b:	04 01                	add    al,0x1
    292d:	05 34 00 02 04       	add    eax,0x4020034
    2932:	03 06                	add    eax,DWORD PTR [rsi]
    2934:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    2937:	04 02                	add    al,0x2
    2939:	05 01 03 31 01       	add    eax,0x1310301
    293e:	05 03 14 05 17       	add    eax,0x17051403
    2943:	06                   	(bad)
    2944:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    294a:	00 02                	add    BYTE PTR [rdx],al
    294c:	04 04                	add    al,0x4
    294e:	06                   	(bad)
    294f:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    2952:	04 02                	add    al,0x2
    2954:	05 01 03 31 01       	add    eax,0x1310301
    2959:	05 03 14 05 17       	add    eax,0x17051403
    295e:	06                   	(bad)
    295f:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2965:	00 02                	add    BYTE PTR [rdx],al
    2967:	04 05                	add    al,0x5
    2969:	06                   	(bad)
    296a:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    296d:	00 02                	add    BYTE PTR [rdx],al
    296f:	04 05                	add    al,0x5
    2971:	01 05 06 03 10 01    	add    DWORD PTR [rip+0x1100306],eax        # 1102c7d <_end+0x10fcc65>
    2977:	05 05 03 0b 01       	add    eax,0x10b0305
    297c:	05 1e 06 01 05       	add    eax,0x501061e
    2981:	13 08                	adc    ecx,DWORD PTR [rax]
    2983:	2f                   	(bad)
    2984:	05 1e f1 05 05       	add    eax,0x505f11e
    2989:	06                   	(bad)
    298a:	3d 05 13 06 01       	cmp    eax,0x1061305
    298f:	05 05 06 9f 05       	add    eax,0x59f0605
    2994:	0b 06                	or     eax,DWORD PTR [rsi]
    2996:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    299c:	04 06                	add    al,0x6
    299e:	06                   	(bad)
    299f:	03 63 01             	add    esp,DWORD PTR [rbx+0x1]
    29a2:	04 02                	add    al,0x2
    29a4:	05 01 03 31 01       	add    eax,0x1310301
    29a9:	05 03 14 05 17       	add    eax,0x17051403
    29ae:	06                   	(bad)
    29af:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    29b5:	34 00                	xor    al,0x0
    29b7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29ba:	06                   	(bad)
    29bb:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29bf:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322cc6 <_end+0x131ccae>
    29c5:	05 03 14 05 17       	add    eax,0x17051403
    29ca:	06                   	(bad)
    29cb:	01 e4                	add    esp,esp
    29cd:	04 01                	add    al,0x1
    29cf:	05 34 00 02 04       	add    eax,0x4020034
    29d4:	03 06                	add    eax,DWORD PTR [rsi]
    29d6:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29da:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322ce1 <_end+0x131ccc9>
    29e0:	05 03 14 05 17       	add    eax,0x17051403
    29e5:	06                   	(bad)
    29e6:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    29ec:	00 02                	add    BYTE PTR [rdx],al
    29ee:	04 04                	add    al,0x4
    29f0:	06                   	(bad)
    29f1:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29f5:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322cfc <_end+0x131cce4>
    29fb:	05 03 14 05 17       	add    eax,0x17051403
    2a00:	06                   	(bad)
    2a01:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a07:	00 02                	add    BYTE PTR [rdx],al
    2a09:	04 05                	add    al,0x5
    2a0b:	06                   	(bad)
    2a0c:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    2a10:	02 04 05 01 05 06 03 	add    al,BYTE PTR [rax*1+0x3060501]
    2a17:	11 01                	adc    DWORD PTR [rcx],eax
    2a19:	05 05 03 0b 01       	add    eax,0x10b0305
    2a1e:	05 1e 06 01 05       	add    eax,0x501061e
    2a23:	13 08                	adc    ecx,DWORD PTR [rax]
    2a25:	2f                   	(bad)
    2a26:	05 1e f1 05 05       	add    eax,0x505f11e
    2a2b:	06                   	(bad)
    2a2c:	3d 05 13 06 01       	cmp    eax,0x1061305
    2a31:	05 05 06 9f 05       	add    eax,0x59f0605
    2a36:	0b 06                	or     eax,DWORD PTR [rsi]
    2a38:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2a3e:	04 06                	add    al,0x6
    2a40:	06                   	(bad)
    2a41:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
    2a44:	04 02                	add    al,0x2
    2a46:	05 01 03 32 01       	add    eax,0x1320301
    2a4b:	05 03 14 05 17       	add    eax,0x17051403
    2a50:	06                   	(bad)
    2a51:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2a57:	34 00                	xor    al,0x0
    2a59:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2a5c:	06                   	(bad)
    2a5d:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a60:	04 02                	add    al,0x2
    2a62:	05 01 03 33 01       	add    eax,0x1330301
    2a67:	05 03 14 05 17       	add    eax,0x17051403
    2a6c:	06                   	(bad)
    2a6d:	01 e4                	add    esp,esp
    2a6f:	04 01                	add    al,0x1
    2a71:	05 34 00 02 04       	add    eax,0x4020034
    2a76:	03 06                	add    eax,DWORD PTR [rsi]
    2a78:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a7b:	04 02                	add    al,0x2
    2a7d:	05 01 03 33 01       	add    eax,0x1330301
    2a82:	05 03 14 05 17       	add    eax,0x17051403
    2a87:	06                   	(bad)
    2a88:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a8e:	00 02                	add    BYTE PTR [rdx],al
    2a90:	04 04                	add    al,0x4
    2a92:	06                   	(bad)
    2a93:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a96:	04 02                	add    al,0x2
    2a98:	05 01 03 33 01       	add    eax,0x1330301
    2a9d:	05 03 14 05 17       	add    eax,0x17051403
    2aa2:	06                   	(bad)
    2aa3:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2aa9:	00 02                	add    BYTE PTR [rdx],al
    2aab:	04 05                	add    al,0x5
    2aad:	06                   	(bad)
    2aae:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2ab1:	00 02                	add    BYTE PTR [rdx],al
    2ab3:	04 05                	add    al,0x5
    2ab5:	01 05 06 03 12 01    	add    DWORD PTR [rip+0x1120306],eax        # 1122dc1 <_end+0x111cda9>
    2abb:	05 05 03 0b 01       	add    eax,0x10b0305
    2ac0:	05 1e 06 01 05       	add    eax,0x501061e
    2ac5:	13 08                	adc    ecx,DWORD PTR [rax]
    2ac7:	2f                   	(bad)
    2ac8:	05 1e f1 05 05       	add    eax,0x505f11e
    2acd:	06                   	(bad)
    2ace:	3d 05 13 06 01       	cmp    eax,0x1061305
    2ad3:	05 05 06 9f 05       	add    eax,0x59f0605
    2ad8:	0b 06                	or     eax,DWORD PTR [rsi]
    2ada:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2ae0:	04 06                	add    al,0x6
    2ae2:	06                   	(bad)
    2ae3:	03 61 01             	add    esp,DWORD PTR [rcx+0x1]
    2ae6:	04 02                	add    al,0x2
    2ae8:	05 01 03 33 01       	add    eax,0x1330301
    2aed:	05 03 14 05 17       	add    eax,0x17051403
    2af2:	06                   	(bad)
    2af3:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2af9:	34 00                	xor    al,0x0
    2afb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2afe:	06                   	(bad)
    2aff:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b02:	04 02                	add    al,0x2
    2b04:	05 01 03 34 01       	add    eax,0x1340301
    2b09:	05 03 14 05 17       	add    eax,0x17051403
    2b0e:	06                   	(bad)
    2b0f:	01 e4                	add    esp,esp
    2b11:	04 01                	add    al,0x1
    2b13:	05 34 00 02 04       	add    eax,0x4020034
    2b18:	03 06                	add    eax,DWORD PTR [rsi]
    2b1a:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b1d:	04 02                	add    al,0x2
    2b1f:	05 01 03 34 01       	add    eax,0x1340301
    2b24:	05 03 14 05 17       	add    eax,0x17051403
    2b29:	06                   	(bad)
    2b2a:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b30:	00 02                	add    BYTE PTR [rdx],al
    2b32:	04 04                	add    al,0x4
    2b34:	06                   	(bad)
    2b35:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b38:	04 02                	add    al,0x2
    2b3a:	05 01 03 34 01       	add    eax,0x1340301
    2b3f:	05 03 14 05 17       	add    eax,0x17051403
    2b44:	06                   	(bad)
    2b45:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b4b:	00 02                	add    BYTE PTR [rdx],al
    2b4d:	04 05                	add    al,0x5
    2b4f:	06                   	(bad)
    2b50:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b53:	00 02                	add    BYTE PTR [rdx],al
    2b55:	04 05                	add    al,0x5
    2b57:	01 05 06 03 13 01    	add    DWORD PTR [rip+0x1130306],eax        # 1132e63 <_end+0x112ce4b>
    2b5d:	05 05 03 0b 01       	add    eax,0x10b0305
    2b62:	05 1e 06 01 05       	add    eax,0x501061e
    2b67:	13 08                	adc    ecx,DWORD PTR [rax]
    2b69:	2f                   	(bad)
    2b6a:	05 1e f1 05 05       	add    eax,0x505f11e
    2b6f:	06                   	(bad)
    2b70:	3d 05 13 06 01       	cmp    eax,0x1061305
    2b75:	05 05 06 9f 05       	add    eax,0x59f0605
    2b7a:	0b 06                	or     eax,DWORD PTR [rsi]
    2b7c:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2b82:	04 06                	add    al,0x6
    2b84:	06                   	(bad)
    2b85:	03 60 01             	add    esp,DWORD PTR [rax+0x1]
    2b88:	04 02                	add    al,0x2
    2b8a:	05 01 03 34 01       	add    eax,0x1340301
    2b8f:	05 03 14 05 17       	add    eax,0x17051403
    2b94:	06                   	(bad)
    2b95:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2b9b:	34 00                	xor    al,0x0
    2b9d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2ba0:	06                   	(bad)
    2ba1:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2ba4:	04 02                	add    al,0x2
    2ba6:	05 01 03 35 01       	add    eax,0x1350301
    2bab:	05 03 14 05 17       	add    eax,0x17051403
    2bb0:	06                   	(bad)
    2bb1:	01 e4                	add    esp,esp
    2bb3:	04 01                	add    al,0x1
    2bb5:	05 34 00 02 04       	add    eax,0x4020034
    2bba:	03 06                	add    eax,DWORD PTR [rsi]
    2bbc:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2bbf:	04 02                	add    al,0x2
    2bc1:	05 01 03 35 01       	add    eax,0x1350301
    2bc6:	05 03 14 05 17       	add    eax,0x17051403
    2bcb:	06                   	(bad)
    2bcc:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2bd2:	00 02                	add    BYTE PTR [rdx],al
    2bd4:	04 04                	add    al,0x4
    2bd6:	06                   	(bad)
    2bd7:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2bda:	04 02                	add    al,0x2
    2bdc:	05 01 03 35 01       	add    eax,0x1350301
    2be1:	05 03 14 05 17       	add    eax,0x17051403
    2be6:	06                   	(bad)
    2be7:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2bed:	00 02                	add    BYTE PTR [rdx],al
    2bef:	04 05                	add    al,0x5
    2bf1:	06                   	(bad)
    2bf2:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2bf5:	00 02                	add    BYTE PTR [rdx],al
    2bf7:	04 05                	add    al,0x5
    2bf9:	01 05 06 03 14 01    	add    DWORD PTR [rip+0x1140306],eax        # 1142f05 <_end+0x113ceed>
    2bff:	05 05 03 0b 01       	add    eax,0x10b0305
    2c04:	05 1e 06 01 05       	add    eax,0x501061e
    2c09:	13 08                	adc    ecx,DWORD PTR [rax]
    2c0b:	2f                   	(bad)
    2c0c:	05 1e f1 05 05       	add    eax,0x505f11e
    2c11:	06                   	(bad)
    2c12:	3d 05 13 06 01       	cmp    eax,0x1061305
    2c17:	05 05 06 9f 05       	add    eax,0x59f0605
    2c1c:	0b 06                	or     eax,DWORD PTR [rsi]
    2c1e:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2c24:	04 06                	add    al,0x6
    2c26:	06                   	(bad)
    2c27:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    2c2a:	04 02                	add    al,0x2
    2c2c:	05 01 03 35 01       	add    eax,0x1350301
    2c31:	05 03 14 05 17       	add    eax,0x17051403
    2c36:	06                   	(bad)
    2c37:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2c3d:	34 00                	xor    al,0x0
    2c3f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2c42:	06                   	(bad)
    2c43:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c46:	04 02                	add    al,0x2
    2c48:	05 01 03 36 01       	add    eax,0x1360301
    2c4d:	05 03 14 05 17       	add    eax,0x17051403
    2c52:	06                   	(bad)
    2c53:	01 e4                	add    esp,esp
    2c55:	04 01                	add    al,0x1
    2c57:	05 34 00 02 04       	add    eax,0x4020034
    2c5c:	03 06                	add    eax,DWORD PTR [rsi]
    2c5e:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c61:	04 02                	add    al,0x2
    2c63:	05 01 03 36 01       	add    eax,0x1360301
    2c68:	05 03 14 05 17       	add    eax,0x17051403
    2c6d:	06                   	(bad)
    2c6e:	01 82 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],eax
    2c74:	00 02                	add    BYTE PTR [rdx],al
    2c76:	04 04                	add    al,0x4
    2c78:	06                   	(bad)
    2c79:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c7c:	04 02                	add    al,0x2
    2c7e:	05 01 03 36 01       	add    eax,0x1360301
    2c83:	05 03 14 05 17       	add    eax,0x17051403
    2c88:	06                   	(bad)
    2c89:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2c8f:	00 02                	add    BYTE PTR [rdx],al
    2c91:	04 05                	add    al,0x5
    2c93:	06                   	(bad)
    2c94:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c97:	00 02                	add    BYTE PTR [rdx],al
    2c99:	04 05                	add    al,0x5
    2c9b:	01 05 06 03 15 01    	add    DWORD PTR [rip+0x1150306],eax        # 1152fa7 <_end+0x114cf8f>
    2ca1:	05 05 03 0b 01       	add    eax,0x10b0305
    2ca6:	05 1e 06 01 05       	add    eax,0x501061e
    2cab:	13 08                	adc    ecx,DWORD PTR [rax]
    2cad:	2f                   	(bad)
    2cae:	05 1e f1 05 05       	add    eax,0x505f11e
    2cb3:	06                   	(bad)
    2cb4:	3d 05 13 06 01       	cmp    eax,0x1061305
    2cb9:	05 05 06 9f 05       	add    eax,0x59f0605
    2cbe:	0b 06                	or     eax,DWORD PTR [rsi]
    2cc0:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2cc6:	04 06                	add    al,0x6
    2cc8:	06                   	(bad)
    2cc9:	03 5e 01             	add    ebx,DWORD PTR [rsi+0x1]
    2ccc:	04 02                	add    al,0x2
    2cce:	05 01 03 36 01       	add    eax,0x1360301
    2cd3:	05 03 14 05 17       	add    eax,0x17051403
    2cd8:	06                   	(bad)
    2cd9:	01 ba 58 04 01 05    	add    DWORD PTR [rdx+0x5010458],edi
    2cdf:	01 03                	add    DWORD PTR [rbx],eax
    2ce1:	5b                   	pop    rbx
    2ce2:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022ced <_end+0x401ccd5>
    2ce8:	01 03                	add    DWORD PTR [rbx],eax
    2cea:	62                   	(bad)
    2ceb:	58                   	pop    rax
    2cec:	00 02                	add    BYTE PTR [rdx],al
    2cee:	04 01                	add    al,0x1
    2cf0:	ba 00 02 04 01       	mov    edx,0x1040200
    2cf5:	74 00                	je     2cf7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e7>
    2cf7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cfa:	74 00                	je     2cfc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ec>
    2cfc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cff:	57                   	push   rdi
    2d00:	00 02                	add    BYTE PTR [rdx],al
    2d02:	04 01                	add    al,0x1
    2d04:	ba 00 02 04 01       	mov    edx,0x1040200
    2d09:	74 00                	je     2d0b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2fb>
    2d0b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d0e:	74 05                	je     2d15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x305>
    2d10:	52                   	push   rdx
    2d11:	06                   	(bad)
    2d12:	03 96 01 ba 06 01    	add    edx,DWORD PTR [rsi+0x106ba01]
    2d18:	05 05 06 4b 05       	add    eax,0x54b0605
    2d1d:	52                   	push   rdx
    2d1e:	06                   	(bad)
    2d1f:	11 05 05 08 67 05    	adc    DWORD PTR [rip+0x5670805],eax        # 567352a <_end+0x566d512>
    2d25:	1c 00                	sbb    al,0x0
    2d27:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d2a:	06                   	(bad)
    2d2b:	af                   	scas   eax,DWORD PTR es:[rdi]
    2d2c:	00 02                	add    BYTE PTR [rdx],al
    2d2e:	04 01                	add    al,0x1
    2d30:	06                   	(bad)
    2d31:	08 ba 05 0c 57 4a    	or     BYTE PTR [rdx+0x4a570c05],bh
    2d37:	05 09 06 08 3e       	add    eax,0x3e080609
    2d3c:	05 2e 06 01 05       	add    eax,0x501062e
    2d41:	39 ba 82 05 1c d6    	cmp    DWORD PTR [rdx-0x29e3fa7e],edi
    2d47:	05 05 00 02 04       	add    eax,0x4020005
    2d4c:	03 06                	add    eax,DWORD PTR [rsi]
    2d4e:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    2d53:	04 01                	add    al,0x1
    2d55:	01 00                	add    DWORD PTR [rax],eax
    2d57:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d5a:	06                   	(bad)
    2d5b:	08 20                	or     BYTE PTR [rax],ah
    2d5d:	05 09 06 91 05       	add    eax,0x5910609
    2d62:	2c 06                	sub    al,0x6
    2d64:	01 05 2e 2e 05 2c    	add    DWORD PTR [rip+0x2c052e2e],eax        # 2c055b98 <_end+0x2c04fb80>
    2d6a:	4a 05 2e 58 05 39    	rex.WX add rax,0x3905582e
    2d70:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    2d76:	00 02                	add    BYTE PTR [rdx],al
    2d78:	04 03                	add    al,0x3
    2d7a:	06                   	(bad)
    2d7b:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022da1 <_end+0x401cd89>
    2d82:	01 05 09 
    2d85:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2d86:	05 2e 06 01 05       	add    eax,0x501062e
    2d8b:	39 90 05 1c 4a 05    	cmp    DWORD PTR [rax+0x54a1c05],edx
    2d91:	05 00 02 04 03       	add    eax,0x3040200
    2d96:	06                   	(bad)
    2d97:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    2d9d:	01 01                	add    DWORD PTR [rcx],eax
    2d9f:	00 02                	add    BYTE PTR [rdx],al
    2da1:	04 01                	add    al,0x1
    2da3:	06                   	(bad)
    2da4:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 51533af <_end+0x514d397>
    2daa:	1e                   	(bad)
    2dab:	06                   	(bad)
    2dac:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e0577d1 <_end+0x1e0517b9>
    2db2:	4a 04 03             	rex.WX add al,0x3
    2db5:	05 03 06 03 87       	add    eax,0x87030603
    2dba:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    2dc0:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2dc2:	9e                   	sahf
    2dc3:	4a 04 01             	rex.WX add al,0x1
    2dc6:	05 05 06 03 fa       	add    eax,0xfa030605
    2dcb:	7d 01                	jge    2dce <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3be>
    2dcd:	05 01 06 13 05       	add    eax,0x5130601
    2dd2:	18 00                	sbb    BYTE PTR [rax],al
    2dd4:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2dd7:	47 05 01 4d c8 05    	rex.RXB add eax,0x5c84d01
    2ddd:	05 06 7f 05 1e       	add    eax,0x1e057f06
    2de2:	06                   	(bad)
    2de3:	01 4a 04             	add    DWORD PTR [rdx+0x4],ecx
    2de6:	03 05 03 06 03 87    	add    eax,DWORD PTR [rip+0xffffffff87030603]        # ffffffff870333ef <_end+0xffffffff8702d3d7>
    2dec:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    2def:	05 13 06 2e 04       	add    eax,0x42e0613
    2df4:	01 05 13 03 f5 7d    	add    DWORD PTR [rip+0x7df50313],eax        # 7df5310d <_end+0x7df4d0f5>
    2dfa:	01 05 0c 2d 4a 04    	add    DWORD PTR [rip+0x44a2d0c],eax        # 44a5b0c <_end+0x449faf4>
    2e00:	03 05 1b 03 8c 02    	add    eax,DWORD PTR [rip+0x28c031b]        # 28c3121 <_end+0x28bd109>
    2e06:	58                   	pop    rax
    2e07:	58                   	pop    rax
    2e08:	2e 04 01             	cs add al,0x1
    2e0b:	05 08 06 03 f1       	add    eax,0xf1030608
    2e10:	7d 01                	jge    2e13 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x403>
    2e12:	05 05 00 02 04       	add    eax,0x4020005
    2e17:	01 06                	add    DWORD PTR [rsi],eax
    2e19:	13 00                	adc    eax,DWORD PTR [rax]
    2e1b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e1e:	08 2e                	or     BYTE PTR [rsi],ch
    2e20:	00 02                	add    BYTE PTR [rdx],al
    2e22:	04 01                	add    al,0x1
    2e24:	74 00                	je     2e26 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x416>
    2e26:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e29:	58                   	pop    rax
    2e2a:	05 43 06 00 09       	add    eax,0x9000643
    2e2f:	02 d0                	add    dl,al
    2e31:	37                   	(bad)
    2e32:	00 00                	add    BYTE PTR [rax],al
    2e34:	00 00                	add    BYTE PTR [rax],al
    2e36:	00 00                	add    BYTE PTR [rax],al
    2e38:	03 0b                	add    ecx,DWORD PTR [rbx]
    2e3a:	01 06                	add    DWORD PTR [rsi],eax
    2e3c:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b3447 <_end+0x54ad42f>
    2e42:	43 06                	rex.XB (bad)
    2e44:	11 05 05 08 83 05    	adc    DWORD PTR [rip+0x5830805],eax        # 583364f <_end+0x582d637>
    2e4a:	1c 00                	sbb    al,0x0
    2e4c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e4f:	06                   	(bad)
    2e50:	93                   	xchg   ebx,eax
    2e51:	05 27 00 02 04       	add    eax,0x4020027
    2e56:	01 06                	add    DWORD PTR [rsi],eax
    2e58:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022e7a <_end+0x401ce62>
    2e5e:	01 3c 05 23 ad 3c 05 	add    DWORD PTR [rax*1+0x53cad23],edi
    2e65:	0b 08                	or     ecx,DWORD PTR [rax]
    2e67:	8e 05 12 08 30 05    	mov    es,WORD PTR [rip+0x5300812]        # 530367f <_end+0x52fd667>
    2e6d:	26 d7                	xlat   BYTE PTR ds:[rbx]
    2e6f:	05 09 06 08 c7       	add    eax,0xc7080609
    2e74:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 511348c <_end+0x510d474>
    2e7a:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    2e81:	02 23                	add    ah,BYTE PTR [rbx]
    2e83:	12 c8                	adc    cl,al
    2e85:	05 1c 02 2e 12       	add    eax,0x122e021c
    2e8a:	c8 05 05 00          	enter  0x505,0x0
    2e8e:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2e91:	06                   	(bad)
    2e92:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022eb4 <_end+0x401ce9c>
    2e98:	01 01                	add    DWORD PTR [rcx],eax
    2e9a:	00 02                	add    BYTE PTR [rdx],al
    2e9c:	04 01                	add    al,0x1
    2e9e:	06                   	(bad)
    2e9f:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    2ea5:	13 05 26 06 01 05    	adc    eax,DWORD PTR [rip+0x5010626]        # 50134d1 <_end+0x500d4b9>
    2eab:	12 e3                	adc    ah,bl
    2ead:	05 26 08 c9 05       	add    eax,0x5c90826
    2eb2:	31 02                	xor    DWORD PTR [rdx],eax
    2eb4:	3a 12                	cmp    dl,BYTE PTR [rdx]
    2eb6:	05 1c 08 4a c8       	add    eax,0xc84a081c
    2ebb:	05 05 00 02 04       	add    eax,0x4020005
    2ec0:	03 06                	add    eax,DWORD PTR [rsi]
    2ec2:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022ee4 <_end+0x401cecc>
    2ec8:	01 01                	add    DWORD PTR [rcx],eax
    2eca:	05 09 2f 13 05       	add    eax,0x5132f09
    2ecf:	29 06                	sub    DWORD PTR [rsi],eax
    2ed1:	11 05 12 2e 05 26    	adc    DWORD PTR [rip+0x26052e12],eax        # 26055ce9 <_end+0x2604fcd1>
    2ed7:	4b 05 05 00 02 04    	rex.WXB add rax,0x4020005
    2edd:	03 8e 05 26 3e 05    	add    ecx,DWORD PTR [rsi+0x53e2605]
    2ee3:	31 4a 05             	xor    DWORD PTR [rdx+0x5],ecx
    2ee6:	1c 4a                	sbb    al,0x4a
    2ee8:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2eee:	03 06                	add    eax,DWORD PTR [rsi]
    2ef0:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f12 <_end+0x401cefa>
    2ef6:	01 01                	add    DWORD PTR [rcx],eax
    2ef8:	05 09 4b 13 05       	add    eax,0x5134b09
    2efd:	12 06                	adc    al,BYTE PTR [rsi]
    2eff:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    2f02:	05 00 02 04 03       	add    eax,0x3040200
    2f07:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31056d33 <_end+0x31050d1b>
    2f0d:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f11:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f17:	03 06                	add    eax,DWORD PTR [rsi]
    2f19:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f3b <_end+0x401cf23>
    2f1f:	01 01                	add    DWORD PTR [rcx],eax
    2f21:	05 09 4b 13 05       	add    eax,0x5134b09
    2f26:	12 06                	adc    al,BYTE PTR [rsi]
    2f28:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31057a54 <_end+0x31051a3c>
    2f2e:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f32:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f38:	03 06                	add    eax,DWORD PTR [rsi]
    2f3a:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f5c <_end+0x401cf44>
    2f40:	01 01                	add    DWORD PTR [rcx],eax
    2f42:	00 02                	add    BYTE PTR [rdx],al
    2f44:	04 01                	add    al,0x1
    2f46:	06                   	(bad)
    2f47:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5163552 <_end+0x515d53a>
    2f4d:	1e                   	(bad)
    2f4e:	06                   	(bad)
    2f4f:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2f52:	05 03 06 03 fa       	add    eax,0xfa030603
    2f57:	01 c8                	add    eax,ecx
    2f59:	05 05 13 04 01       	add    eax,0x1041305
    2f5e:	05 01 06 03 88       	add    eax,0x88030601
    2f63:	7e 74                	jle    2fd9 <_Z7testAllPKcjS0_+0x119>
    2f65:	04 03                	add    al,0x3
    2f67:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2f6c:	4a 04 01             	rex.WX add al,0x1
    2f6f:	05 01 03 88 7e       	add    eax,0x7e880301
    2f74:	58                   	pop    rax
    2f75:	05 05 06 e1 05       	add    eax,0x5e10605
    2f7a:	1e                   	(bad)
    2f7b:	06                   	(bad)
    2f7c:	01 05 01 5b 05 1e    	add    DWORD PTR [rip+0x1e055b01],eax        # 1e058a83 <_end+0x1e052a6b>
    2f82:	47 04 03             	rex.RXB add al,0x3
    2f85:	05 03 06 03 fa       	add    eax,0xfa030603
    2f8a:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2f8d:	05 13 04 01 05       	add    eax,0x5010413
    2f92:	01 06                	add    DWORD PTR [rsi],eax
    2f94:	03 88 7e 01 04 03    	add    ecx,DWORD PTR [rax+0x304017e]
    2f9a:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2f9f:	74 58                	je     2ff9 <_Z7testAllPKcjS0_+0x139>
    2fa1:	04 01                	add    al,0x1
    2fa3:	05 01 03 88 7e       	add    eax,0x7e880301
    2fa8:	01 66 3c             	add    DWORD PTR [rsi+0x3c],esp
    2fab:	05 13 03 79 2e       	add    eax,0x2e790313
    2fb0:	05 0b 2d 05 01       	add    eax,0x1052d0b
    2fb5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2fb6:	04 03                	add    al,0x3
    2fb8:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2fbd:	4a 04 01             	rex.WX add al,0x1
    2fc0:	05 01 03 88 7e       	add    eax,0x7e880301
    2fc5:	4a 04 03             	rex.WX add al,0x3
    2fc8:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2fcd:	74 58                	je     3027 <_Z7testAllPKcjS0_+0x167>
    2fcf:	04 01                	add    al,0x1
    2fd1:	05 07 06 03 fd       	add    eax,0xfd030607
    2fd6:	7d 01                	jge    2fd9 <_Z7testAllPKcjS0_+0x119>
    2fd8:	05 05 00 02 04       	add    eax,0x4020005
    2fdd:	01 06                	add    DWORD PTR [rsi],eax
    2fdf:	13 00                	adc    eax,DWORD PTR [rax]
    2fe1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2fe4:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
    2fea:	58                   	pop    rax
    2feb:	00 01                	add    BYTE PTR [rcx],al
    2fed:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
       3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       4:	61                   	(bad)
       5:	74 31                	je     38 <__abi_tag-0x344>
       7:	36 00 36             	ss add BYTE PTR [rsi],dh
       a:	6c                   	ins    BYTE PTR es:[rdi],dx
       b:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
      12:	5a 
      13:	53                   	push   rbx
      14:	74 33                	je     49 <__abi_tag-0x333>
      16:	61                   	(bad)
      17:	62 73 6c 00 5f       	(bad)
      1c:	5a                   	pop    rdx
      1d:	53                   	push   rbx
      1e:	74 33                	je     53 <__abi_tag-0x329>
      20:	61                   	(bad)
      21:	62 73 6e 00 71       	(bad)
      26:	73 6f                	jae    97 <__abi_tag-0x2e5>
      28:	72 74                	jb     9e <__abi_tag-0x2de>
      2a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      2d:	72 74                	jb     a3 <__abi_tag-0x2d9>
      2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      30:	6c                   	ins    BYTE PTR es:[rdi],dx
      31:	64 00 61 74          	add    BYTE PTR fs:[rcx+0x74],ah
      35:	5f                   	pop    rdi
      36:	71 75                	jno    ad <__abi_tag-0x2cf>
      38:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
      3f:	74 00                	je     41 <__abi_tag-0x33b>
      41:	5f                   	pop    rdi
      42:	5a                   	pop    rdx
      43:	53                   	push   rbx
      44:	74 33                	je     79 <__abi_tag-0x303>
      46:	61                   	(bad)
      47:	62 73 78 00 5f       	(bad)
      4c:	5f                   	pop    rdi
      4d:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      54:	73 74                	jae    ca <__abi_tag-0x2b2>
      56:	72 74                	jb     cc <__abi_tag-0x2b0>
      58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      59:	6c                   	ins    BYTE PTR es:[rdi],dx
      5a:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
      5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5e:	72 74                	jb     d4 <__abi_tag-0x2a8>
      60:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
      63:	74 00                	je     65 <__abi_tag-0x317>
      65:	62 73 65 61 72       	(bad)
      6a:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
      6d:	61                   	(bad)
      6e:	74 65                	je     d5 <__abi_tag-0x2a7>
      70:	78 69                	js     db <__abi_tag-0x2a1>
      72:	74 00                	je     74 <__abi_tag-0x308>
      74:	5f                   	pop    rdi
      75:	5a                   	pop    rdx
      76:	53                   	push   rbx
      77:	74 33                	je     ac <__abi_tag-0x2d0>
      79:	64 69 76 6c 6c 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x6c],0x5f5f006c
      80:	5f 
      81:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      88:	73 74                	jae    fe <__abi_tag-0x27e>
      8a:	72 74                	jb     100 <__abi_tag-0x27c>
      8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      8d:	6c                   	ins    BYTE PTR es:[rdi],dx
      8e:	6c                   	ins    BYTE PTR es:[rdi],dx
      8f:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
      92:	41 52                	push   r10
      94:	43                   	rex.XB
      95:	48 5f                	rex.W pop rdi
      97:	45                   	rex.RB
      98:	4c                   	rex.WR
      99:	45                   	rex.RB
      9a:	4d 53                	rex.WRB push r11
      9c:	5f                   	pop    rdi
      9d:	41                   	rex.B
      9e:	4d                   	rex.WRB
      9f:	4f 55                	rex.WRXB push r13
      a1:	4e 54                	rex.WRX push rsp
      a3:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
      a6:	69 6e 00 5f 5f 75 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69755f5f
      ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ae:	74 33                	je     e3 <__abi_tag-0x299>
      b0:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
      b3:	00 37                	add    BYTE PTR [rdi],dh
      b5:	6c                   	ins    BYTE PTR es:[rdi],dx
      b6:	6c                   	ins    BYTE PTR es:[rdi],dx
      b7:	64 69 76 5f 74 00 67 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x65670074
      be:	65 
      bf:	74 65                	je     126 <__abi_tag-0x256>
      c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      c2:	76 00                	jbe    c4 <__abi_tag-0x2b8>
      c4:	59                   	pop    rcx
      c5:	4d                   	rex.WRB
      c6:	4d 5f                	rex.WRB pop r15
      c8:	42 59                	rex.X pop rcx
      ca:	54                   	push   rsp
      cb:	45 53                	rex.RB push r11
      cd:	5f                   	pop    rdi
      ce:	53                   	push   rbx
      cf:	49 5a                	rex.WB pop r10
      d1:	45 00 66 6c          	add    BYTE PTR [r14+0x6c],r12b
      d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d6:	61                   	(bad)
      d7:	74 00                	je     d9 <__abi_tag-0x2a3>
      d9:	6d                   	ins    DWORD PTR es:[rdi],dx
      da:	62                   	(bad)
      db:	74 6f                	je     14c <__abi_tag-0x230>
      dd:	77 63                	ja     142 <__abi_tag-0x23a>
      df:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
      e3:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      e8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
      ec:	74 00                	je     ee <__abi_tag-0x28e>
      ee:	6c                   	ins    BYTE PTR es:[rdi],dx
      ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      f1:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      f6:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
      fa:	73 69                	jae    165 <__abi_tag-0x217>
      fc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      fe:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     103:	74 00                	je     105 <__abi_tag-0x277>
     105:	73 74                	jae    17b <__abi_tag-0x201>
     107:	72 74                	jb     17d <__abi_tag-0x1ff>
     109:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     10a:	64 00 74 65 73       	add    BYTE PTR fs:[rbp+riz*2+0x73],dh
     10f:	74 41                	je     152 <__abi_tag-0x22a>
     111:	6c                   	ins    BYTE PTR es:[rdi],dx
     112:	6c                   	ins    BYTE PTR es:[rdi],dx
     113:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     116:	55                   	push   rbp
     117:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
     11a:	2b 31                	sub    esi,DWORD PTR [rcx]
     11c:	37                   	(bad)
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	33 2e                	xor    ebp,DWORD PTR [rsi]
     121:	33 2e                	xor    ebp,DWORD PTR [rsi]
     123:	30 20                	xor    BYTE PTR [rax],ah
     125:	2d 6d 73 73 65       	sub    eax,0x6573736d
     12a:	34 2e                	xor    al,0x2e
     12c:	32 20                	xor    ah,BYTE PTR [rax]
     12e:	2d 6d 61 76 78       	sub    eax,0x7876616d
     133:	32 20                	xor    ah,BYTE PTR [rax]
     135:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     13a:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     140:	72 69                	jb     1ab <__abi_tag-0x1d1>
     142:	63 20                	movsxd esp,DWORD PTR [rax]
     144:	2d 6d 61 72 63       	sub    eax,0x6372616d
     149:	68 3d 78 38 36       	push   0x3638783d
     14e:	2d 36 34 20 2d       	sub    eax,0x2d203436
     153:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d2034a9 <_end+0x2d1fd491>
     15a:	66 61                	data16 (bad)
     15c:	73 79                	jae    1d7 <__abi_tag-0x1a5>
     15e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     15f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     163:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     164:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     165:	75 73                	jne    1da <__abi_tag-0x1a2>
     167:	2d 75 6e 77 69       	sub    eax,0x69776e75
     16c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     16d:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
     173:	65 73 20             	gs jae 196 <__abi_tag-0x1e6>
     176:	2d 66 73 74 61       	sub    eax,0x61747366
     17b:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     17e:	70 72                	jo     1f2 <__abi_tag-0x18a>
     180:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     181:	74 65                	je     1e8 <__abi_tag-0x194>
     183:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     187:	2d 73 74 72 6f       	sub    eax,0x6f727473
     18c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     18d:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617474fa <_end+0x617414e2>
     194:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     197:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
     19b:	68 2d 70 72 6f       	push   0x6f72702d
     1a0:	74 65                	je     207 <__abi_tag-0x175>
     1a2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1a7:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666513 <_end+0x2d6604fb>
     1ad:	70 72                	jo     221 <__abi_tag-0x15b>
     1af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1b0:	74 65                	je     217 <__abi_tag-0x165>
     1b2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1b7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     1ba:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     1be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1c0:	75 5f                	jne    221 <__abi_tag-0x15b>
     1c2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1c5:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
     1c9:	45 78 78             	rex.RB js 244 <__abi_tag-0x138>
     1cc:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d0:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
     1d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d5:	69 00 61 72 67 76    	imul   eax,DWORD PTR [rax],0x76677261
     1db:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     1e3:	73 74                	jae    259 <__abi_tag-0x123>
     1e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1e6:	6d                   	ins    DWORD PTR es:[rdi],dx
     1e7:	62 73 00 5f 5f       	(bad)
     1ec:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     1f3:	6c                   	ins    BYTE PTR es:[rdi],dx
     1f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1f6:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     1fb:	62 6c 65             	(bad)
     1fe:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     201:	73 69                	jae    26c <__abi_tag-0x110>
     203:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     205:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     20a:	61                   	(bad)
     20b:	72 00                	jb     20d <__abi_tag-0x16f>
     20d:	61                   	(bad)
     20e:	72 67                	jb     277 <__abi_tag-0x105>
     210:	63 00                	movsxd eax,DWORD PTR [rax]
     212:	5f                   	pop    rdi
     213:	5f                   	pop    rdi
     214:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     216:	75 5f                	jne    277 <__abi_tag-0x105>
     218:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     21b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     21e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     225:	73 74                	jae    29b <__abi_tag-0xe1>
     227:	72 74                	jb     29d <__abi_tag-0xdf>
     229:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     22a:	75 6c                	jne    298 <__abi_tag-0xe4>
     22c:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     22f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     230:	6c                   	ins    BYTE PTR es:[rdi],dx
     231:	6c                   	ins    BYTE PTR es:[rdi],dx
     232:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     235:	6c                   	ins    BYTE PTR es:[rdi],dx
     236:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     238:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     23b:	73 74                	jae    2b1 <__abi_tag-0xcb>
     23d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     23e:	77 63                	ja     2a3 <__abi_tag-0xd9>
     240:	73 00                	jae    242 <__abi_tag-0x13a>
     242:	77 63                	ja     2a7 <__abi_tag-0xd5>
     244:	74 6f                	je     2b5 <__abi_tag-0xc7>
     246:	6d                   	ins    DWORD PTR es:[rdi],dx
     247:	62                   	(bad)
     248:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
     24b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24c:	74 00                	je     24e <__abi_tag-0x12e>
     24e:	73 68                	jae    2b8 <__abi_tag-0xc4>
     250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     251:	72 74                	jb     2c7 <__abi_tag-0xb5>
     253:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     256:	73 69                	jae    2c1 <__abi_tag-0xbb>
     258:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     25a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     25f:	74 00                	je     261 <__abi_tag-0x11b>
     261:	77 63                	ja     2c6 <__abi_tag-0xb6>
     263:	68 61 72 5f 74       	push   0x745f7261
     268:	00 4c 4f 41          	add    BYTE PTR [rdi+rcx*2+0x41],cl
     26c:	44 5f                	rex.R pop rdi
     26e:	46                   	rex.RX
     26f:	41                   	rex.B
     270:	43 54                	rex.XB push r12
     272:	4f 52                	rex.WRXB push r10
     274:	00 42 41             	add    BYTE PTR [rdx+0x41],al
     277:	53                   	push   rbx
     278:	45 5f                	rex.RB pop r15
     27a:	48                   	rex.W
     27b:	41 53                	push   r11
     27d:	48 5f                	rex.W pop rdi
     27f:	4d                   	rex.WRB
     280:	41 50                	push   r8
     282:	5f                   	pop    rdi
     283:	43                   	rex.XB
     284:	41 50                	push   r8
     286:	41                   	rex.B
     287:	43                   	rex.XB
     288:	49 54                	rex.WB push r12
     28a:	59                   	pop    rcx
     28b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     28e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     291:	61                   	(bad)
     292:	74 31                	je     2c5 <__abi_tag-0xb7>
     294:	32 38                	xor    bh,BYTE PTR [rax]
     296:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     299:	72 74                	jb     30f <__abi_tag-0x6d>
     29b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     29c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     2a0:	37                   	(bad)
     2a1:	74 65                	je     308 <__abi_tag-0x74>
     2a3:	73 74                	jae    319 <__abi_tag-0x63>
     2a5:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     2a7:	6c                   	ins    BYTE PTR es:[rdi],dx
     2a8:	50                   	push   rax
     2a9:	4b 63 6a 53          	rex.WXB movsxd rbp,DWORD PTR [r10+0x53]
     2ad:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
     2b0:	5f                   	pop    rdi
     2b1:	5f                   	pop    rdi
     2b2:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     2b9:	73 74                	jae    32f <__abi_tag-0x4d>
     2bb:	72 74                	jb     331 <__abi_tag-0x4b>
     2bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2be:	75 6c                	jne    32c <__abi_tag-0x50>
     2c0:	6c                   	ins    BYTE PTR es:[rdi],dx
     2c1:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
     2c5:	69 76 00 5f 5f 62 66 	imul   esi,DWORD PTR [rsi+0x0],0x66625f5f
     2cc:	31 36                	xor    DWORD PTR [rsi],esi
     2ce:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     2d4:	70 61                	jo     337 <__abi_tag-0x45>
     2d6:	72 5f                	jb     337 <__abi_tag-0x45>
     2d8:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
     2da:	5f                   	pop    rdi
     2db:	74 00                	je     2dd <__abi_tag-0x9f>
     2dd:	35 64 69 76 5f       	xor    eax,0x5f766964
     2e2:	74 00                	je     2e4 <__abi_tag-0x98>
     2e4:	5f                   	pop    rdi
     2e5:	5f                   	pop    rdi
     2e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2e7:	70 74                	jo     35d <__abi_tag-0x1f>
     2e9:	72 00                	jb     2eb <__abi_tag-0x91>
     2eb:	73 72                	jae    35f <__abi_tag-0x1d>
     2ed:	61                   	(bad)
     2ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2ef:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     2f3:	53                   	push   rbx
     2f4:	74 33                	je     329 <__abi_tag-0x53>
     2f6:	61                   	(bad)
     2f7:	62 73 64 00 5f       	(bad)
     2fc:	5a                   	pop    rdx
     2fd:	53                   	push   rbx
     2fe:	74 33                	je     333 <__abi_tag-0x49>
     300:	61                   	(bad)
     301:	62 73 65 00 5f       	(bad)
     306:	5a                   	pop    rdx
     307:	53                   	push   rbx
     308:	74 33                	je     33d <__abi_tag-0x3f>
     30a:	61                   	(bad)
     30b:	62 73 66 00 5f       	(bad)
     310:	5a                   	pop    rdx
     311:	53                   	push   rbx
     312:	74 33                	je     347 <__abi_tag-0x35>
     314:	61                   	(bad)
     315:	62 73 67 00 63       	(bad)
     31a:	61                   	(bad)
     31b:	70 61                	jo     37e <__abi_tag+0x2>
     31d:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
     320:	79 00                	jns    322 <__abi_tag-0x5a>
     322:	5f                   	pop    rdi
     323:	5a                   	pop    rdx
     324:	31 33                	xor    DWORD PTR [rbx],esi
     326:	5f                   	pop    rdi
     327:	6d                   	ins    DWORD PTR es:[rdi],dx
     328:	6d                   	ins    DWORD PTR es:[rdi],dx
     329:	5f                   	pop    rdi
     32a:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     32d:	33 32                	xor    esi,DWORD PTR [rdx]
     32f:	5f                   	pop    rdi
     330:	75 36                	jne    368 <__abi_tag-0x14>
     332:	34 79                	xor    al,0x79
     334:	79 00                	jns    336 <__abi_tag-0x46>
     336:	64 61                	fs (bad)
     338:	74 61                	je     39b <__abi_tag+0x1f>
     33a:	5f                   	pop    rdi
     33b:	74 00                	je     33d <__abi_tag-0x3f>
     33d:	5f                   	pop    rdi
     33e:	5a                   	pop    rdx
     33f:	31 30                	xor    DWORD PTR [rax],esi
     341:	64 65 62 75 67 50 72 	(bad)
     348:	69 6e 74 50 34 4c 69 	imul   ebp,DWORD PTR [rsi+0x74],0x694c3450
     34f:	73 74                	jae    3c5 <__abi_tag+0x49>
     351:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     354:	73 68                	jae    3be <__abi_tag+0x42>
     356:	4d 61                	rex.WRB (bad)
     358:	70 43                	jo     39d <__abi_tag+0x21>
     35a:	74 6f                	je     3cb <__abi_tag+0x4f>
     35c:	72 00                	jb     35e <__abi_tag-0x1e>
     35e:	77 6f                	ja     3cf <__abi_tag+0x53>
     360:	72 64                	jb     3c6 <__abi_tag+0x4a>
     362:	5f                   	pop    rdi
     363:	62 65 67 69 6e       	(bad)
     368:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     36b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     36d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     36f:	74 73                	je     3e4 <__abi_tag+0x68>
     371:	5f                   	pop    rdi
     372:	61                   	(bad)
     373:	6d                   	ins    DWORD PTR es:[rdi],dx
     374:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     375:	75 6e                	jne    3e5 <__abi_tag+0x69>
     377:	74 00                	je     379 <__abi_tag-0x3>
     379:	5f                   	pop    rdi
     37a:	5f                   	pop    rdi
     37b:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     37e:	5f                   	pop    rdi
     37f:	5a                   	pop    rdx
     380:	31 36                	xor    DWORD PTR [rsi],esi
     382:	62 75 69 6c 64       	(bad)
     387:	53                   	push   rbx
     388:	74 72                	je     3fc <__abi_tag+0x80>
     38a:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     391:	79 50                	jns    3e3 <__abi_tag+0x67>
     393:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
     396:	61                   	(bad)
     397:	6c                   	ins    BYTE PTR es:[rdi],dx
     398:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
     39f:	65 78 74             	gs js  416 <__abi_tag+0x9a>
     3a2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     3a5:	72 69                	jb     410 <__abi_tag+0x94>
     3a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a8:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     3ac:	73 72                	jae    420 <__abi_tag+0xa4>
     3ae:	63 00                	movsxd eax,DWORD PTR [rax]
     3b0:	66 72 65             	data16 jb 418 <__abi_tag+0x9c>
     3b3:	65 00 68 61          	add    BYTE PTR gs:[rax+0x61],ch
     3b7:	73 68                	jae    421 <__abi_tag+0xa5>
     3b9:	31 00                	xor    DWORD PTR [rax],eax
     3bb:	68 61 73 68 32       	push   0x32687361
     3c0:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3c3:	73 68                	jae    42d <__abi_tag+0xb1>
     3c5:	33 00                	xor    eax,DWORD PTR [rax]
     3c7:	68 61 73 68 34       	push   0x34687361
     3cc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3cf:	50                   	push   rax
     3d0:	52                   	push   rdx
     3d1:	45 54                	rex.RB push r12
     3d3:	54                   	push   rsp
     3d4:	59                   	pop    rcx
     3d5:	5f                   	pop    rdi
     3d6:	46 55                	rex.RX push rbp
     3d8:	4e                   	rex.WRX
     3d9:	43 54                	rex.XB push r12
     3db:	49                   	rex.WB
     3dc:	4f                   	rex.WRXB
     3dd:	4e 5f                	rex.WRX pop rdi
     3df:	5f                   	pop    rdi
     3e0:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3e3:	73 68                	jae    44d <__abi_tag+0xd1>
     3e5:	4d 61                	rex.WRB (bad)
     3e7:	70 41                	jo     42a <__abi_tag+0xae>
     3e9:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     3ed:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     3ef:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     3f1:	74 00                	je     3f3 <__abi_tag+0x77>
     3f3:	5f                   	pop    rdi
     3f4:	5f                   	pop    rdi
     3f5:	62 75 69 6c 74       	(bad)
     3fa:	69 6e 5f 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x73747570
     401:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     404:	70 72                	jo     478 <__abi_tag+0xfc>
     406:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
     40d:	6b 00 70             	imul   eax,DWORD PTR [rax],0x70
     410:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     411:	70 4c                	jo     45f <__abi_tag+0xe3>
     413:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     41a:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     41d:	73 68                	jae    487 <__abi_tag+0x10b>
     41f:	5f                   	pop    rdi
     420:	66 75 6e             	data16 jne 491 <__abi_tag+0x115>
     423:	63 00                	movsxd eax,DWORD PTR [rax]
     425:	5f                   	pop    rdi
     426:	5a                   	pop    rdx
     427:	31 37                	xor    DWORD PTR [rdi],esi
     429:	68 61 73 68 4d       	push   0x4d687361
     42e:	61                   	(bad)
     42f:	70 44                	jo     475 <__abi_tag+0xf9>
     431:	65 62 75 67 50 72    	(bad)
     437:	69 6e 74 50 37 48 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61483750
     43e:	73 68                	jae    4a8 <__abi_tag+0x12c>
     440:	4d 61                	rex.WRB (bad)
     442:	70 00                	jo     444 <__abi_tag+0xc8>
     444:	73 75                	jae    4bb <__abi_tag+0x13f>
     446:	70 70                	jo     4b8 <__abi_tag+0x13c>
     448:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     449:	73 65                	jae    4b0 <__abi_tag+0x134>
     44b:	64 5f                	fs pop rdi
     44d:	69 6e 64 65 78 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007865
     454:	5a                   	pop    rdx
     455:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     459:	74 44                	je     49f <__abi_tag+0x123>
     45b:	74 6f                	je     4cc <__abi_tag+0x150>
     45d:	72 50                	jb     4af <__abi_tag+0x133>
     45f:	34 4c                	xor    al,0x4c
     461:	69 73 74 00 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c6500
     468:	6d                   	ins    DWORD PTR es:[rdi],dx
     469:	5f                   	pop    rdi
     46a:	69 6e 78 00 5f 5f 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c5f5f00
     471:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     473:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     476:	72 6e                	jb     4e6 <__abi_tag+0x16a>
     478:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     47b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     47e:	31 31                	xor    DWORD PTR [rcx],esi
     480:	68 61 73 68 4d       	push   0x4d687361
     485:	61                   	(bad)
     486:	70 44                	jo     4cc <__abi_tag+0x150>
     488:	74 6f                	je     4f9 <__abi_tag+0x17d>
     48a:	72 50                	jb     4dc <__abi_tag+0x160>
     48c:	37                   	(bad)
     48d:	48 61                	rex.W (bad)
     48f:	73 68                	jae    4f9 <__abi_tag+0x17d>
     491:	4d 61                	rex.WRB (bad)
     493:	70 00                	jo     495 <__abi_tag+0x119>
     495:	70 72                	jo     509 <__abi_tag+0x18d>
     497:	65 76 5f             	gs jbe 4f9 <__abi_tag+0x17d>
     49a:	69 6e 78 00 6c 69 73 	imul   ebp,DWORD PTR [rsi+0x78],0x73696c00
     4a1:	74 44                	je     4e7 <__abi_tag+0x16b>
     4a3:	74 6f                	je     514 <__abi_tag+0x198>
     4a5:	72 00                	jb     4a7 <__abi_tag+0x12b>
     4a7:	5f                   	pop    rdi
     4a8:	5f                   	pop    rdi
     4a9:	62 75 69 6c 74       	(bad)
     4ae:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     4b5:	6d                   	ins    DWORD PTR es:[rdi],dx
     4b6:	73 65                	jae    51d <__abi_tag+0x1a1>
     4b8:	74 5f                	je     519 <__abi_tag+0x19d>
     4ba:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     4bd:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     4c1:	65 73 00             	gs jae 4c4 <__abi_tag+0x148>
     4c4:	5f                   	pop    rdi
     4c5:	5f                   	pop    rdi
     4c6:	62 75 69 6c 74       	(bad)
     4cb:	69 6e 5f 5f 5f 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74735f5f
     4d2:	72 6e                	jb     542 <__abi_tag+0x1c6>
     4d4:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     4d7:	5f                   	pop    rdi
     4d8:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     4db:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
     4de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4df:	6c                   	ins    BYTE PTR es:[rdi],dx
     4e0:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
     4e3:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
     4ea:	6c                   	ins    BYTE PTR es:[rdi],dx
     4eb:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4ed:	63 00                	movsxd eax,DWORD PTR [rax]
     4ef:	6c                   	ins    BYTE PTR es:[rdi],dx
     4f0:	69 73 74 73 00 6c 69 	imul   esi,DWORD PTR [rbx+0x74],0x696c0073
     4f7:	73 74                	jae    56d <__abi_tag+0x1f1>
     4f9:	43 74 6f             	rex.XB je 56b <__abi_tag+0x1ef>
     4fc:	72 00                	jb     4fe <__abi_tag+0x182>
     4fe:	5f                   	pop    rdi
     4ff:	5a                   	pop    rdx
     500:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     504:	74 43                	je     549 <__abi_tag+0x1cd>
     506:	74 6f                	je     577 <__abi_tag+0x1fb>
     508:	72 76                	jb     580 <__abi_tag+0x204>
     50a:	00 64 65 62          	add    BYTE PTR [rbp+riz*2+0x62],ah
     50e:	75 67                	jne    577 <__abi_tag+0x1fb>
     510:	50                   	push   rax
     511:	72 69                	jb     57c <__abi_tag+0x200>
     513:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     514:	74 00                	je     516 <__abi_tag+0x19a>
     516:	5f                   	pop    rdi
     517:	5a                   	pop    rdx
     518:	31 33                	xor    DWORD PTR [rbx],esi
     51a:	73 65                	jae    581 <__abi_tag+0x205>
     51c:	61                   	(bad)
     51d:	72 63                	jb     582 <__abi_tag+0x206>
     51f:	68 45 6c 65 6d       	push   0x6d656c45
     524:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     526:	74 50                	je     578 <__abi_tag+0x1fc>
     528:	34 4c                	xor    al,0x4c
     52a:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     531:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     538:	5f                   	pop    rdi
     539:	64 65 73 74          	fs gs jae 5b1 <__abi_tag+0x235>
     53d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     540:	73 68                	jae    5aa <__abi_tag+0x22e>
     542:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     549:	6d 
     54a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     54d:	62 75 69 6c 74       	(bad)
     552:	69 6e 5f 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63727473
     559:	68 72 00 68 61       	push   0x61680072
     55e:	73 68                	jae    5c8 <__abi_tag+0x24c>
     560:	4d 61                	rex.WRB (bad)
     562:	70 44                	jo     5a8 <__abi_tag+0x22c>
     564:	65 62 75 67 50 72    	(bad)
     56a:	69 6e 74 00 74 61 69 	imul   ebp,DWORD PTR [rsi+0x74],0x69617400
     571:	6c                   	ins    BYTE PTR es:[rdi],dx
     572:	5f                   	pop    rdi
     573:	69 6e 78 00 73 65 61 	imul   ebp,DWORD PTR [rsi+0x78],0x61657300
     57a:	72 63                	jb     5df <__abi_tag+0x263>
     57c:	68 45 6c 65 6d       	push   0x6d656c45
     581:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     583:	74 00                	je     585 <__abi_tag+0x209>
     585:	5f                   	pop    rdi
     586:	5f                   	pop    rdi
     587:	75 69                	jne    5f2 <__abi_tag+0x276>
     589:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     58a:	74 36                	je     5c2 <__abi_tag+0x246>
     58c:	34 5f                	xor    al,0x5f
     58e:	74 00                	je     590 <__abi_tag+0x214>
     590:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     591:	65 77 5f             	gs ja  5f3 <__abi_tag+0x277>
     594:	68 61 73 68 4d       	push   0x4d687361
     599:	61                   	(bad)
     59a:	70 00                	jo     59c <__abi_tag+0x220>
     59c:	72 65                	jb     603 <__abi_tag+0x287>
     59e:	68 61 73 68 41       	push   0x41687361
     5a3:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     5a7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     5a9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ab:	74 00                	je     5ad <__abi_tag+0x231>
     5ad:	5f                   	pop    rdi
     5ae:	5f                   	pop    rdi
     5af:	61                   	(bad)
     5b0:	73 73                	jae    625 <__abi_tag+0x2a9>
     5b2:	65 72 74             	gs jb  629 <__abi_tag+0x2ad>
     5b5:	5f                   	pop    rdi
     5b6:	66 61                	data16 (bad)
     5b8:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     5bf:	4d 
     5c0:	61                   	(bad)
     5c1:	70 53                	jo     616 <__abi_tag+0x29a>
     5c3:	65 61                	gs (bad)
     5c5:	72 63                	jb     62a <__abi_tag+0x2ae>
     5c7:	68 45 6c 65 6d       	push   0x6d656c45
     5cc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ce:	74 00                	je     5d0 <__abi_tag+0x254>
     5d0:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     5d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5d4:	74 65                	je     63b <__abi_tag+0x2bf>
     5d6:	72 00                	jb     5d8 <__abi_tag+0x25c>
     5d8:	6c                   	ins    BYTE PTR es:[rdi],dx
     5d9:	69 73 74 5f 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c655f
     5e0:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e1:	73 00                	jae    5e3 <__abi_tag+0x267>
     5e3:	72 65                	jb     64a <__abi_tag+0x2ce>
     5e5:	68 61 73 68 00       	push   0x687361
     5ea:	6c                   	ins    BYTE PTR es:[rdi],dx
     5eb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ed:	67 74 68             	addr32 je 658 <__abi_tag+0x2dc>
     5f0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5f3:	73 74                	jae    669 <__abi_tag+0x2ed>
     5f5:	61                   	(bad)
     5f6:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     5f9:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     5fc:	5f                   	pop    rdi
     5fd:	66 61                	data16 (bad)
     5ff:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     606:	4d 
     607:	61                   	(bad)
     608:	70 50                	jo     65a <__abi_tag+0x2de>
     60a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     60b:	70 45                	jo     652 <__abi_tag+0x2d6>
     60d:	6c                   	ins    BYTE PTR es:[rdi],dx
     60e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     610:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     612:	74 00                	je     614 <__abi_tag+0x298>
     614:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     615:	65 78 74             	gs js  68c <__abi_tag+0x310>
     618:	5f                   	pop    rdi
     619:	69 6e 78 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x78],0x315a5f00
     620:	31 68 61             	xor    DWORD PTR [rax+0x61],ebp
     623:	73 68                	jae    68d <__abi_tag+0x311>
     625:	4d 61                	rex.WRB (bad)
     627:	70 43                	jo     66c <__abi_tag+0x2f0>
     629:	74 6f                	je     69a <__abi_tag+0x31e>
     62b:	72 50                	jb     67d <__abi_tag+0x301>
     62d:	46 6a 38             	rex.RX push 0x38
     630:	73 74                	jae    6a6 <__abi_tag+0x32a>
     632:	72 69                	jb     69d <__abi_tag+0x321>
     634:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     635:	67 5f                	addr32 pop rdi
     637:	74 45                	je     67e <__abi_tag+0x302>
     639:	6a 00                	push   0x0
     63b:	5f                   	pop    rdi
     63c:	5f                   	pop    rdi
     63d:	66 6d                	ins    WORD PTR es:[rdi],dx
     63f:	74 00                	je     641 <__abi_tag+0x2c5>
     641:	62 75 69 6c 64       	(bad)
     646:	53                   	push   rbx
     647:	74 72                	je     6bb <__abi_tag+0x33f>
     649:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     650:	79 00                	jns    652 <__abi_tag+0x2d6>
     652:	5f                   	pop    rdi
     653:	5a                   	pop    rdx
     654:	31 31                	xor    DWORD PTR [rcx],esi
     656:	70 6f                	jo     6c7 <__abi_tag+0x34b>
     658:	70 4c                	jo     6a6 <__abi_tag+0x32a>
     65a:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     661:	50                   	push   rax
     662:	34 4c                	xor    al,0x4c
     664:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     66b:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     672:	5a                   	pop    rdx
     673:	31 32                	xor    DWORD PTR [rdx],esi
     675:	70 75                	jo     6ec <__abi_tag+0x370>
     677:	73 68                	jae    6e1 <__abi_tag+0x365>
     679:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     680:	6d 
     681:	50                   	push   rax
     682:	34 4c                	xor    al,0x4c
     684:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     68b:	69 6e 67 5f 74 00 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6300745f
     692:	61                   	(bad)
     693:	6c                   	ins    BYTE PTR es:[rdi],dx
     694:	6c                   	ins    BYTE PTR es:[rdi],dx
     695:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     696:	63 00                	movsxd eax,DWORD PTR [rax]
     698:	5f                   	pop    rdi
     699:	5a                   	pop    rdx
     69a:	32 30                	xor    dh,BYTE PTR [rax]
     69c:	68 61 73 68 4d       	push   0x4d687361
     6a1:	61                   	(bad)
     6a2:	70 53                	jo     6f7 <__abi_tag+0x37b>
     6a4:	65 61                	gs (bad)
     6a6:	72 63                	jb     70b <__abi_tag+0x38f>
     6a8:	68 45 6c 65 6d       	push   0x6d656c45
     6ad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6af:	74 50                	je     701 <__abi_tag+0x385>
     6b1:	37                   	(bad)
     6b2:	48 61                	rex.W (bad)
     6b4:	73 68                	jae    71e <__abi_tag+0x3a2>
     6b6:	4d 61                	rex.WRB (bad)
     6b8:	70 38                	jo     6f2 <__abi_tag+0x376>
     6ba:	73 74                	jae    730 <__abi_tag+0x3b4>
     6bc:	72 69                	jb     727 <__abi_tag+0x3ab>
     6be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6bf:	67 5f                	addr32 pop rdi
     6c1:	74 00                	je     6c3 <__abi_tag+0x347>
     6c3:	73 74                	jae    739 <__abi_tag+0x3bd>
     6c5:	72 69                	jb     730 <__abi_tag+0x3b4>
     6c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6c8:	67 5f                	addr32 pop rdi
     6ca:	61                   	(bad)
     6cb:	72 72                	jb     73f <__abi_tag+0x3c3>
     6cd:	61                   	(bad)
     6ce:	79 00                	jns    6d0 <__abi_tag+0x354>
     6d0:	5f                   	pop    rdi
     6d1:	5a                   	pop    rdx
     6d2:	31 37                	xor    DWORD PTR [rdi],esi
     6d4:	68 61 73 68 4d       	push   0x4d687361
     6d9:	61                   	(bad)
     6da:	70 41                	jo     71d <__abi_tag+0x3a1>
     6dc:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     6e0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6e2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6e4:	74 50                	je     736 <__abi_tag+0x3ba>
     6e6:	37                   	(bad)
     6e7:	48 61                	rex.W (bad)
     6e9:	73 68                	jae    753 <__abi_tag+0x3d7>
     6eb:	4d 61                	rex.WRB (bad)
     6ed:	70 38                	jo     727 <__abi_tag+0x3ab>
     6ef:	73 74                	jae    765 <__abi_tag+0x3e9>
     6f1:	72 69                	jb     75c <__abi_tag+0x3e0>
     6f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6f4:	67 5f                	addr32 pop rdi
     6f6:	74 00                	je     6f8 <__abi_tag+0x37c>
     6f8:	4c                   	rex.WR
     6f9:	49 53                	rex.WB push r11
     6fb:	54                   	push   rsp
     6fc:	5f                   	pop    rdi
     6fd:	42                   	rex.X
     6fe:	41 53                	push   r11
     700:	45 5f                	rex.RB pop r15
     702:	43                   	rex.XB
     703:	41 50                	push   r8
     705:	41                   	rex.B
     706:	43                   	rex.XB
     707:	49 54                	rex.WB push r12
     709:	59                   	pop    rcx
     70a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     70d:	31 37                	xor    DWORD PTR [rdi],esi
     70f:	68 61 73 68 4d       	push   0x4d687361
     714:	61                   	(bad)
     715:	70 50                	jo     767 <__abi_tag+0x3eb>
     717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     718:	70 45                	jo     75f <__abi_tag+0x3e3>
     71a:	6c                   	ins    BYTE PTR es:[rdi],dx
     71b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     71d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     71f:	74 50                	je     771 <__abi_tag+0x3f5>
     721:	37                   	(bad)
     722:	48 61                	rex.W (bad)
     724:	73 68                	jae    78e <__abi_tag+0x412>
     726:	4d 61                	rex.WRB (bad)
     728:	70 38                	jo     762 <__abi_tag+0x3e6>
     72a:	73 74                	jae    7a0 <__abi_tag+0x424>
     72c:	72 69                	jb     797 <__abi_tag+0x41b>
     72e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     72f:	67 5f                	addr32 pop rdi
     731:	74 00                	je     733 <__abi_tag+0x3b7>
     733:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     736:	72 73                	jb     7ab <__abi_tag+0x42f>
     738:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     73b:	73 68                	jae    7a5 <__abi_tag+0x429>
     73d:	4d 61                	rex.WRB (bad)
     73f:	70 44                	jo     785 <__abi_tag+0x409>
     741:	74 6f                	je     7b2 <__abi_tag+0x436>
     743:	72 00                	jb     745 <__abi_tag+0x3c9>
     745:	6c                   	ins    BYTE PTR es:[rdi],dx
     746:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     747:	61                   	(bad)
     748:	64 5f                	fs pop rdi
     74a:	66 61                	data16 (bad)
     74c:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     750:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     753:	6d                   	ins    DWORD PTR es:[rdi],dx
     754:	5f                   	pop    rdi
     755:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     758:	33 32                	xor    esi,DWORD PTR [rdx]
     75a:	5f                   	pop    rdi
     75b:	75 36                	jne    793 <__abi_tag+0x417>
     75d:	34 00                	xor    al,0x0
     75f:	68 61 73 68 5f       	push   0x5f687361
     764:	74 00                	je     766 <__abi_tag+0x3ea>
     766:	5f                   	pop    rdi
     767:	5f                   	pop    rdi
     768:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
     76f:	75 6e                	jne    7df <__abi_tag+0x463>
     771:	73 69                	jae    7dc <__abi_tag+0x460>
     773:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     775:	65 64 00 73 75       	gs add BYTE PTR fs:[rbx+0x75],dh
     77a:	6d                   	ins    DWORD PTR es:[rdi],dx
     77b:	48 61                	rex.W (bad)
     77d:	73 68                	jae    7e7 <__abi_tag+0x46b>
     77f:	53                   	push   rbx
     780:	74 72                	je     7f4 <__abi_tag+0x478>
     782:	69 6e 67 00 74 6d 70 	imul   ebp,DWORD PTR [rsi+0x67],0x706d7400
     789:	32 00                	xor    al,BYTE PTR [rax]
     78b:	74 6d                	je     7fa <__abi_tag+0x47e>
     78d:	70 31                	jo     7c0 <__abi_tag+0x444>
     78f:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
     792:	74 73                	je     807 <__abi_tag+0x48b>
     794:	52                   	push   rdx
     795:	65 76 65             	gs jbe 7fd <__abi_tag+0x481>
     798:	72 73                	jb     80d <__abi_tag+0x491>
     79a:	65 00 70 6f          	add    BYTE PTR gs:[rax+0x6f],dh
     79e:	6c                   	ins    BYTE PTR es:[rdi],dx
     79f:	79 6e                	jns    80f <__abi_tag+0x493>
     7a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7a2:	6d                   	ins    DWORD PTR es:[rdi],dx
     7a3:	69 61 6c 00 73 68 69 	imul   esp,DWORD PTR [rcx+0x6c],0x69687300
     7aa:	66 74 00             	data16 je 7ad <__abi_tag+0x431>
     7ad:	5f                   	pop    rdi
     7ae:	5a                   	pop    rdx
     7af:	31 33                	xor    DWORD PTR [rbx],esi
     7b1:	73 75                	jae    828 <__abi_tag+0x4ac>
     7b3:	6d                   	ins    DWORD PTR es:[rdi],dx
     7b4:	48 61                	rex.W (bad)
     7b6:	73 68                	jae    820 <__abi_tag+0x4a4>
     7b8:	53                   	push   rbx
     7b9:	74 72                	je     82d <__abi_tag+0x4b1>
     7bb:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     7c2:	69 6e 67 5f 74 00 72 	imul   ebp,DWORD PTR [rsi+0x67],0x7200745f
     7c9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7cb:	61                   	(bad)
     7cc:	69 6e 64 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007265
     7d3:	5a                   	pop    rdx
     7d4:	31 33                	xor    DWORD PTR [rbx],esi
     7d6:	5f                   	pop    rdi
     7d7:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d8:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d9:	5f                   	pop    rdi
     7da:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7dd:	33 32                	xor    esi,DWORD PTR [rdx]
     7df:	5f                   	pop    rdi
     7e0:	75 33                	jne    815 <__abi_tag+0x499>
     7e2:	32 6a 6a             	xor    ch,BYTE PTR [rdx+0x6a]
     7e5:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
     7e8:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     7ed:	32 35 5f 6d 6d 5f    	xor    dh,BYTE PTR [rip+0x5f6d6d5f]        # 5f6d7552 <_end+0x5f6d153a>
     7f3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7f6:	33 32                	xor    esi,DWORD PTR [rdx]
     7f8:	55                   	push   rbp
     7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fa:	72 6f                	jb     86b <__abi_tag+0x4ef>
     7fc:	6c                   	ins    BYTE PTR es:[rdi],dx
     7fd:	6c                   	ins    BYTE PTR es:[rdi],dx
     7fe:	48 61                	rex.W (bad)
     800:	73 68                	jae    86a <__abi_tag+0x4ee>
     802:	53                   	push   rbx
     803:	74 72                	je     877 <__abi_tag+0x4fb>
     805:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     80c:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     813:	6d                   	ins    DWORD PTR es:[rdi],dx
     814:	6d                   	ins    DWORD PTR es:[rdi],dx
     815:	5f                   	pop    rdi
     816:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     819:	33 32                	xor    esi,DWORD PTR [rdx]
     81b:	55                   	push   rbp
     81c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81d:	72 6f                	jb     88e <__abi_tag+0x512>
     81f:	6c                   	ins    BYTE PTR es:[rdi],dx
     820:	6c                   	ins    BYTE PTR es:[rdi],dx
     821:	48 61                	rex.W (bad)
     823:	73 68                	jae    88d <__abi_tag+0x511>
     825:	53                   	push   rbx
     826:	74 72                	je     89a <__abi_tag+0x51e>
     828:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     82f:	35 63 72 63 33       	xor    eax,0x33637263
     834:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     837:	73 68                	jae    8a1 <__abi_tag+0x525>
     839:	53                   	push   rbx
     83a:	74 72                	je     8ae <__abi_tag+0x532>
     83c:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     843:	69 6e 67 5f 74 00 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6100745f
     84a:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     84c:	65 72 33             	gs jb  882 <__abi_tag+0x506>
     84f:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     852:	73 68                	jae    8bc <__abi_tag+0x540>
     854:	53                   	push   rbx
     855:	74 72                	je     8c9 <__abi_tag+0x54d>
     857:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     85e:	33 65 6c             	xor    esp,DWORD PTR [rbp+0x6c]
     861:	66 48 61             	data16 rex.W (bad)
     864:	73 68                	jae    8ce <__abi_tag+0x552>
     866:	53                   	push   rbx
     867:	74 72                	je     8db <__abi_tag+0x55f>
     869:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     870:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     877:	5a                   	pop    rdx
     878:	31 37                	xor    DWORD PTR [rdi],esi
     87a:	61                   	(bad)
     87b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     87d:	65 72 33             	gs jb  8b3 <__abi_tag+0x537>
     880:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     883:	73 68                	jae    8ed <__abi_tag+0x571>
     885:	53                   	push   rbx
     886:	74 72                	je     8fa <__abi_tag+0x57e>
     888:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     88f:	69 6e 67 5f 74 00 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d00745f
     896:	75 72                	jne    90a <__abi_tag+0x58e>
     898:	6d                   	ins    DWORD PTR es:[rdi],dx
     899:	75 72                	jne    90d <__abi_tag+0x591>
     89b:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     89e:	73 68                	jae    908 <__abi_tag+0x58c>
     8a0:	53                   	push   rbx
     8a1:	74 72                	je     915 <__abi_tag+0x599>
     8a3:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8aa:	5f                   	pop    rdi
     8ab:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8ae:	33 32                	xor    esi,DWORD PTR [rdx]
     8b0:	5f                   	pop    rdi
     8b1:	75 33                	jne    8e6 <__abi_tag+0x56a>
     8b3:	32 00                	xor    al,BYTE PTR [rax]
     8b5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     8b7:	66 48 61             	data16 rex.W (bad)
     8ba:	73 68                	jae    924 <__abi_tag+0x5a8>
     8bc:	53                   	push   rbx
     8bd:	74 72                	je     931 <__abi_tag+0x5b5>
     8bf:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8c6:	5f                   	pop    rdi
     8c7:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8ca:	33 32                	xor    esi,DWORD PTR [rdx]
     8cc:	48 61                	rex.W (bad)
     8ce:	73 68                	jae    938 <__abi_tag+0x5bc>
     8d0:	53                   	push   rbx
     8d1:	74 72                	je     945 <__abi_tag+0x5c9>
     8d3:	69 6e 67 00 6d 6f 64 	imul   ebp,DWORD PTR [rsi+0x67],0x646f6d00
     8da:	5f                   	pop    rdi
     8db:	61                   	(bad)
     8dc:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8de:	65 72 00             	gs jb  8e1 <__abi_tag+0x565>
     8e1:	78 6f                	js     952 <__abi_tag+0x5d6>
     8e3:	72 5f                	jb     944 <__abi_tag+0x5c8>
     8e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8e6:	75 6d                	jne    955 <__abi_tag+0x5d9>
     8e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8eb:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
     8f2:	00 68 69             	add    BYTE PTR [rax+0x69],ch
     8f5:	67 68 00 5f 5a 31    	addr32 push 0x315a5f00
     8fb:	37                   	(bad)
     8fc:	6d                   	ins    DWORD PTR es:[rdi],dx
     8fd:	75 72                	jne    971 <__abi_tag+0x5f5>
     8ff:	6d                   	ins    DWORD PTR es:[rdi],dx
     900:	75 72                	jne    974 <__abi_tag+0x5f8>
     902:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     905:	73 68                	jae    96f <__abi_tag+0x5f3>
     907:	53                   	push   rbx
     908:	74 72                	je     97c <__abi_tag+0x600>
     90a:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     911:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     918:	5a                   	pop    rdx
     919:	31 39                	xor    DWORD PTR [rcx],edi
     91b:	5f                   	pop    rdi
     91c:	6d                   	ins    DWORD PTR es:[rdi],dx
     91d:	6d                   	ins    DWORD PTR es:[rdi],dx
     91e:	5f                   	pop    rdi
     91f:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     922:	33 32                	xor    esi,DWORD PTR [rdx]
     924:	48 61                	rex.W (bad)
     926:	73 68                	jae    990 <__abi_tag+0x614>
     928:	53                   	push   rbx
     929:	74 72                	je     99d <__abi_tag+0x621>
     92b:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     932:	69 6e 67 5f 74 00 72 	imul   ebp,DWORD PTR [rsi+0x67],0x7200745f
     939:	65 73 75             	gs jae 9b1 <__abi_tag+0x635>
     93c:	6c                   	ins    BYTE PTR es:[rdi],dx
     93d:	74 00                	je     93f <__abi_tag+0x5c3>
     93f:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     942:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     949:	6d 
     94a:	73 00                	jae    94c <__abi_tag+0x5d0>
     94c:	72 65                	jb     9b3 <__abi_tag+0x637>
     94e:	73 69                	jae    9b9 <__abi_tag+0x63d>
     950:	7a 65                	jp     9b7 <__abi_tag+0x63b>
     952:	55                   	push   rbp
     953:	70 00                	jo     955 <__abi_tag+0x5d9>
     955:	5f                   	pop    rdi
     956:	5f                   	pop    rdi
     957:	62 75 69 6c 74       	(bad)
     95c:	69 6e 5f 70 75 74 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63747570
     963:	68 61 72 00 6f       	push   0x6f007261
     968:	6c                   	ins    BYTE PTR es:[rdi],dx
     969:	64 5f                	fs pop rdi
     96b:	6c                   	ins    BYTE PTR es:[rdi],dx
     96c:	61                   	(bad)
     96d:	73 74                	jae    9e3 <__abi_tag+0x667>
     96f:	5f                   	pop    rdi
     970:	69 6e 78 00 64 61 74 	imul   ebp,DWORD PTR [rsi+0x78],0x74616400
     977:	61                   	(bad)
     978:	31 00                	xor    DWORD PTR [rax],eax
     97a:	64 61                	fs (bad)
     97c:	74 61                	je     9df <__abi_tag+0x663>
     97e:	32 00                	xor    al,BYTE PTR [rax]
     980:	72 65                	jb     9e7 <__abi_tag+0x66b>
     982:	61                   	(bad)
     983:	6c                   	ins    BYTE PTR es:[rdi],dx
     984:	6c                   	ins    BYTE PTR es:[rdi],dx
     985:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     986:	63 00                	movsxd eax,DWORD PTR [rax]
     988:	5f                   	pop    rdi
     989:	5f                   	pop    rdi
     98a:	67 69 64 5f 74 00 73 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x5f747300
     991:	74 5f 
     993:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     997:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     99a:	72 65                	jb     a01 <__abi_tag+0x685>
     99c:	61                   	(bad)
     99d:	64 5f                	fs pop rdi
     99f:	61                   	(bad)
     9a0:	6c                   	ins    BYTE PTR es:[rdi],dx
     9a1:	69 61 73 00 5f 5f 70 	imul   esp,DWORD PTR [rcx+0x73],0x705f5f00
     9a8:	61                   	(bad)
     9a9:	74 68                	je     a13 <__abi_tag+0x697>
     9ab:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     9ae:	31 30                	xor    DWORD PTR [rax],esi
     9b0:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     9b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9b4:	74 4c                	je     a02 <__abi_tag+0x686>
     9b6:	69 6e 65 73 50 63 6d 	imul   ebp,DWORD PTR [rsi+0x65],0x6d635073
     9bd:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     9c0:	61                   	(bad)
     9c1:	64 46 69 6c 65 00 5f 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x72385a5f
     9c8:	5a 38 72 
     9cb:	65 61                	gs (bad)
     9cd:	64 46 69 6c 65 50 4b 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x50],0x6d50634b
     9d4:	63 50 6d 
     9d7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9db:	70 65                	jo     a42 <__abi_tag+0x6c6>
     9dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9de:	5f                   	pop    rdi
     9df:	74 6f                	je     a50 <__abi_tag+0x6d4>
     9e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9e2:	5f                   	pop    rdi
     9e3:	6d                   	ins    DWORD PTR es:[rdi],dx
     9e4:	61                   	(bad)
     9e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9e6:	79 5f                	jns    a47 <__abi_tag+0x6cb>
     9e8:	61                   	(bad)
     9e9:	72 67                	jb     a52 <__abi_tag+0x6d6>
     9eb:	73 00                	jae    9ed <__abi_tag+0x671>
     9ed:	5f                   	pop    rdi
     9ee:	5f                   	pop    rdi
     9ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9f0:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     9f2:	61                   	(bad)
     9f3:	67 00 73 74          	add    BYTE PTR [ebx+0x74],dh
     9f7:	5f                   	pop    rdi
     9f8:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
     9ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a00:	64 65 5f             	fs gs pop rdi
     a03:	74 00                	je     a05 <__abi_tag+0x689>
     a05:	5f                   	pop    rdi
     a06:	5f                   	pop    rdi
     a07:	62 6c 6b             	(bad)  {k3}
     a0a:	63 6e 74             	movsxd ebp,DWORD PTR [rsi+0x74]
     a0d:	5f                   	pop    rdi
     a0e:	74 00                	je     a10 <__abi_tag+0x694>
     a10:	5f                   	pop    rdi
     a11:	5f                   	pop    rdi
     a12:	73 73                	jae    a87 <__abi_tag+0x70b>
     a14:	69 7a 65 5f 74 00 64 	imul   edi,DWORD PTR [rdx+0x65],0x6400745f
     a1b:	75 6d                	jne    a8a <__abi_tag+0x70e>
     a1d:	6d                   	ins    DWORD PTR es:[rdi],dx
     a1e:	79 00                	jns    a20 <__abi_tag+0x6a4>
     a20:	73 74                	jae    a96 <__abi_tag+0x71a>
     a22:	5f                   	pop    rdi
     a23:	62 6c 6f             	(bad)  {k3}
     a26:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     a29:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a2c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a2d:	62 79 74 65 73       	(bad)
     a32:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     a35:	5f                   	pop    rdi
     a36:	75 69                	jne    aa1 <__abi_tag+0x725>
     a38:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     a3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a3d:	70 65                	jo     aa4 <__abi_tag+0x728>
     a3f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a40:	5f                   	pop    rdi
     a41:	6d                   	ins    DWORD PTR es:[rdi],dx
     a42:	69 73 73 69 6e 67 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
     a49:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a4b:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
     a50:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a51:	6c                   	ins    BYTE PTR es:[rdi],dx
     a52:	69 6e 6b 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f00745f
     a59:	5f                   	pop    rdi
     a5a:	72 65                	jb     ac1 <__abi_tag+0x745>
     a5c:	61                   	(bad)
     a5d:	64 5f                	fs pop rdi
     a5f:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     a62:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     a65:	75 6e                	jne    ad5 <__abi_tag+0x759>
     a67:	74 4c                	je     ab5 <__abi_tag+0x739>
     a69:	69 6e 65 73 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0073
     a70:	66 64 00 73 74       	data16 add BYTE PTR fs:[rbx+0x74],dh
     a75:	5f                   	pop    rdi
     a76:	73 69                	jae    ae1 <__abi_tag+0x765>
     a78:	7a 65                	jp     adf <__abi_tag+0x763>
     a7a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a7d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a7e:	70 65                	jo     ae5 <__abi_tag+0x769>
     a80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a81:	5f                   	pop    rdi
     a82:	32 00                	xor    al,BYTE PTR [rax]
     a84:	73 74                	jae    afa <__abi_tag+0x77e>
     a86:	5f                   	pop    rdi
     a87:	6d                   	ins    DWORD PTR es:[rdi],dx
     a88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a89:	64 65 00 73 74       	fs add BYTE PTR gs:[rbx+0x74],dh
     a8e:	5f                   	pop    rdi
     a8f:	61                   	(bad)
     a90:	74 69                	je     afb <__abi_tag+0x77f>
     a92:	6d                   	ins    DWORD PTR es:[rdi],dx
     a93:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
     a97:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a98:	73 65                	jae    aff <__abi_tag+0x783>
     a9a:	63 00                	movsxd eax,DWORD PTR [rax]
     a9c:	5f                   	pop    rdi
     a9d:	5f                   	pop    rdi
     a9e:	64 65 76 5f          	fs gs jbe b01 <__abi_tag+0x785>
     aa2:	74 00                	je     aa4 <__abi_tag+0x728>
     aa4:	74 76                	je     b1c <__abi_tag+0x7a0>
     aa6:	5f                   	pop    rdi
     aa7:	73 65                	jae    b0e <__abi_tag+0x792>
     aa9:	63 00                	movsxd eax,DWORD PTR [rax]
     aab:	5f                   	pop    rdi
     aac:	5f                   	pop    rdi
     aad:	73 79                	jae    b28 <__abi_tag+0x7ac>
     aaf:	73 63                	jae    b14 <__abi_tag+0x798>
     ab1:	61                   	(bad)
     ab2:	6c                   	ins    BYTE PTR es:[rdi],dx
     ab3:	6c                   	ins    BYTE PTR es:[rdi],dx
     ab4:	5f                   	pop    rdi
     ab5:	73 6c                	jae    b23 <__abi_tag+0x7a7>
     ab7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ab8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ab9:	67 5f                	addr32 pop rdi
     abb:	74 00                	je     abd <__abi_tag+0x741>
     abd:	66 69 6c 65 5f 73 74 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7473
     ac4:	61                   	(bad)
     ac5:	74 00                	je     ac7 <__abi_tag+0x74b>
     ac7:	5f                   	pop    rdi
     ac8:	5f                   	pop    rdi
     ac9:	62                   	(bad)
     aca:	6c                   	ins    BYTE PTR es:[rdi],dx
     acb:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     acf:	65 5f                	gs pop rdi
     ad1:	74 00                	je     ad3 <__abi_tag+0x757>
     ad3:	5f                   	pop    rdi
     ad4:	5f                   	pop    rdi
     ad5:	62 75 66 00 5f 5f 70 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xe0]
     adc:	61                   	(bad)
     add:	64 30 00             	xor    BYTE PTR fs:[rax],al
     ae0:	5f                   	pop    rdi
     ae1:	5f                   	pop    rdi
     ae2:	67 6c                	ins    BYTE PTR es:[edi],dx
     ae4:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
     aeb:	65 72 76             	gs jb  b64 <__abi_tag+0x7e8>
     aee:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
     af3:	5f                   	pop    rdi
     af4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     af5:	6c                   	ins    BYTE PTR es:[rdi],dx
     af6:	69 6e 6b 00 73 74 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f747300
     afd:	62                   	(bad)
     afe:	6c                   	ins    BYTE PTR es:[rdi],dx
     aff:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b03:	65 00 74 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
     b08:	65 73 70             	gs jae b7b <__abi_tag+0x7ff>
     b0b:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
     b0e:	5f                   	pop    rdi
     b0f:	5f                   	pop    rdi
     b10:	69 6e 6f 5f 74 00 66 	imul   ebp,DWORD PTR [rsi+0x6f],0x6600745f
     b17:	69 6c 65 5f 64 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
     b1e:	63 
     b1f:	72 00                	jb     b21 <__abi_tag+0x7a5>
     b21:	73 74                	jae    b97 <__abi_tag+0x81b>
     b23:	5f                   	pop    rdi
     b24:	72 64                	jb     b8a <__abi_tag+0x80e>
     b26:	65 76 00             	gs jbe b29 <__abi_tag+0x7ad>
     b29:	5f                   	pop    rdi
     b2a:	5f                   	pop    rdi
     b2b:	75 69                	jne    b96 <__abi_tag+0x81a>
     b2d:	64 5f                	fs pop rdi
     b2f:	74 00                	je     b31 <__abi_tag+0x7b5>
     b31:	73 74                	jae    ba7 <__abi_tag+0x82b>
     b33:	5f                   	pop    rdi
     b34:	67 69 64 00 5f 5f 74 	imul   esp,DWORD PTR [eax+eax*1+0x5f],0x6d69745f
     b3b:	69 6d 
     b3d:	65 5f                	gs pop rdi
     b3f:	74 00                	je     b41 <__abi_tag+0x7c5>
     b41:	5f                   	pop    rdi
     b42:	5f                   	pop    rdi
     b43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b44:	66 66 5f             	data16 pop di
     b47:	74 00                	je     b49 <__abi_tag+0x7cd>
     b49:	73 74                	jae    bbf <__abi_tag+0x843>
     b4b:	5f                   	pop    rdi
     b4c:	64 65 76 00          	fs gs jbe b50 <__abi_tag+0x7d4>
     b50:	5f                   	pop    rdi
     b51:	5f                   	pop    rdi
     b52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b53:	70 65                	jo     bba <__abi_tag+0x83e>
     b55:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b56:	5f                   	pop    rdi
     b57:	61                   	(bad)
     b58:	6c                   	ins    BYTE PTR es:[rdi],dx
     b59:	69 61 73 00 6e 65 77 	imul   esp,DWORD PTR [rcx+0x73],0x77656e00
     b60:	5f                   	pop    rdi
     b61:	74 65                	je     bc8 <__abi_tag+0x84c>
     b63:	78 74                	js     bd9 <__abi_tag+0x85d>
     b65:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     b68:	5f                   	pop    rdi
     b69:	6d                   	ins    DWORD PTR es:[rdi],dx
     b6a:	74 69                	je     bd5 <__abi_tag+0x859>
     b6c:	6d                   	ins    DWORD PTR es:[rdi],dx
     b6d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b70:	72 65                	jb     bd7 <__abi_tag+0x85b>
     b72:	61                   	(bad)
     b73:	64 5f                	fs pop rdi
     b75:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     b78:	5f                   	pop    rdi
     b79:	77 61                	ja     bdc <__abi_tag+0x860>
     b7b:	72 6e                	jb     beb <__abi_tag+0x86f>
     b7d:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
     b80:	6c                   	ins    BYTE PTR es:[rdi],dx
     b81:	65 5f                	gs pop rdi
     b83:	73 69                	jae    bee <__abi_tag+0x872>
     b85:	7a 65                	jp     bec <__abi_tag+0x870>
     b87:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
     b8a:	69 6d 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rbp+0x0],0x74535a5f
     b91:	34 66                	xor    al,0x66
     b93:	6d                   	ins    DWORD PTR es:[rdi],dx
     b94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b95:	64 65 65 00 5f 5a    	fs gs add BYTE PTR gs:[rdi+0x5a],bl
     b9b:	4e 53                	rex.WRX push rbx
     b9d:	74 36                	je     bd5 <__abi_tag+0x859>
     b9f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ba2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ba3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ba4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ba5:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     ba9:	61                   	(bad)
     baa:	74 69                	je     c15 <__abi_tag+0x899>
     bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bae:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     bb0:	53                   	push   rbx
     bb1:	74 35                	je     be8 <__abi_tag+0x86c>
     bb3:	72 61                	jb     c16 <__abi_tag+0x89a>
     bb5:	74 69                	je     c20 <__abi_tag+0x8a4>
     bb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb8:	49                   	rex.WB
     bb9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     bbb:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     bbe:	6c                   	ins    BYTE PTR es:[rdi],dx
     bbf:	31 30                	xor    DWORD PTR [rax],esi
     bc1:	30 30                	xor    BYTE PTR [rax],dh
     bc3:	30 30                	xor    BYTE PTR [rax],dh
     bc5:	30 30                	xor    BYTE PTR [rax],dh
     bc7:	30 30                	xor    BYTE PTR [rax],dh
     bc9:	45                   	rex.RB
     bca:	45                   	rex.RB
     bcb:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     bcd:	6d                   	ins    DWORD PTR es:[rdi],dx
     bce:	45 76 00             	rex.RB jbe bd1 <__abi_tag+0x855>
     bd1:	66 67 65 74 63       	data16 addr32 gs je c39 <__abi_tag+0x8bd>
     bd6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     bd9:	53                   	push   rbx
     bda:	74 36                	je     c12 <__abi_tag+0x896>
     bdc:	73 63                	jae    c41 <__abi_tag+0x8c5>
     bde:	61                   	(bad)
     bdf:	6c                   	ins    BYTE PTR es:[rdi],dx
     be0:	62 6e 66 69 00       	(bad)
     be5:	5f                   	pop    rdi
     be6:	5a                   	pop    rdx
     be7:	53                   	push   rbx
     be8:	74 37                	je     c21 <__abi_tag+0x8a5>
     bea:	73 69                	jae    c55 <__abi_tag+0x8d9>
     bec:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     bee:	62 69 74 64 00       	(bad)
     bf3:	5f                   	pop    rdi
     bf4:	5a                   	pop    rdx
     bf5:	53                   	push   rbx
     bf6:	74 37                	je     c2f <__abi_tag+0x8b3>
     bf8:	73 69                	jae    c63 <__abi_tag+0x8e7>
     bfa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     bfc:	62 69 74 66 00       	(bad)
     c01:	5f                   	pop    rdi
     c02:	5a                   	pop    rdx
     c03:	4e 53                	rex.WRX push rbx
     c05:	74 36                	je     c3d <__abi_tag+0x8c1>
     c07:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c0a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c0c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c0d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c11:	61                   	(bad)
     c12:	74 69                	je     c7d <__abi_tag+0x901>
     c14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c15:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c16:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c18:	53                   	push   rbx
     c19:	74 35                	je     c50 <__abi_tag+0x8d4>
     c1b:	72 61                	jb     c7e <__abi_tag+0x902>
     c1d:	74 69                	je     c88 <__abi_tag+0x90c>
     c1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c20:	49                   	rex.WB
     c21:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c23:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c26:	6c                   	ins    BYTE PTR es:[rdi],dx
     c27:	31 30                	xor    DWORD PTR [rax],esi
     c29:	30 30                	xor    BYTE PTR [rax],dh
     c2b:	30 30                	xor    BYTE PTR [rax],dh
     c2d:	30 30                	xor    BYTE PTR [rax],dh
     c2f:	30 30                	xor    BYTE PTR [rax],dh
     c31:	45                   	rex.RB
     c32:	45                   	rex.RB
     c33:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
     c37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c38:	45 76 00             	rex.RB jbe c3b <__abi_tag+0x8bf>
     c3b:	66 67 65 74 73       	data16 addr32 gs je cb3 <__abi_tag+0x937>
     c40:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     c44:	68 6f 75 72 00       	push   0x72756f
     c49:	5f                   	pop    rdi
     c4a:	5f                   	pop    rdi
     c4b:	76 61                	jbe    cae <__abi_tag+0x932>
     c4d:	6c                   	ins    BYTE PTR es:[rdi],dx
     c4e:	75 65                	jne    cb5 <__abi_tag+0x939>
     c50:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
     c53:	6c                   	ins    BYTE PTR es:[rdi],dx
     c54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c55:	61                   	(bad)
     c56:	74 36                	je     c8e <__abi_tag+0x912>
     c58:	34 78                	xor    al,0x78
     c5a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c5d:	53                   	push   rbx
     c5e:	74 34                	je     c94 <__abi_tag+0x918>
     c60:	66 6d                	ins    WORD PTR es:[rdi],dx
     c62:	69 6e 66 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f0066
     c69:	53                   	push   rbx
     c6a:	74 35                	je     ca1 <__abi_tag+0x925>
     c6c:	6c                   	ins    BYTE PTR es:[rdi],dx
     c6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c6e:	67 31 30             	xor    DWORD PTR [eax],esi
     c71:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     c75:	53                   	push   rbx
     c76:	74 35                	je     cad <__abi_tag+0x931>
     c78:	6c                   	ins    BYTE PTR es:[rdi],dx
     c79:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c7a:	67 31 30             	xor    DWORD PTR [eax],esi
     c7d:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     c81:	4e 53                	rex.WRX push rbx
     c83:	74 36                	je     cbb <__abi_tag+0x93f>
     c85:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c88:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c8a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c8b:	31 30                	xor    DWORD PTR [rax],esi
     c8d:	74 69                	je     cf8 <__abi_tag+0x97c>
     c8f:	6d                   	ins    DWORD PTR es:[rdi],dx
     c90:	65 5f                	gs pop rdi
     c92:	70 6f                	jo     d03 <__abi_tag+0x987>
     c94:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     c9b:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     c9e:	32 31                	xor    dh,BYTE PTR [rcx]
     ca0:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     ca3:	65 61                	gs (bad)
     ca5:	64 79 5f             	fs jns d07 <__abi_tag+0x98b>
     ca8:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     cac:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     cb0:	5f                   	pop    rdi
     cb1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     cb5:	61                   	(bad)
     cb6:	74 69                	je     d21 <__abi_tag+0x9a5>
     cb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cba:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     cbc:	53                   	push   rbx
     cbd:	74 35                	je     cf4 <__abi_tag+0x978>
     cbf:	72 61                	jb     d22 <__abi_tag+0x9a6>
     cc1:	74 69                	je     d2c <__abi_tag+0x9b0>
     cc3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc4:	49                   	rex.WB
     cc5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     cc7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     cca:	6c                   	ins    BYTE PTR es:[rdi],dx
     ccb:	31 30                	xor    DWORD PTR [rax],esi
     ccd:	30 30                	xor    BYTE PTR [rax],dh
     ccf:	30 30                	xor    BYTE PTR [rax],dh
     cd1:	30 30                	xor    BYTE PTR [rax],dh
     cd3:	30 30                	xor    BYTE PTR [rax],dh
     cd5:	45                   	rex.RB
     cd6:	45                   	rex.RB
     cd7:	45                   	rex.RB
     cd8:	45                   	rex.RB
     cd9:	45                   	rex.RB
     cda:	43 34 45             	rex.XB xor al,0x45
     cdd:	52                   	push   rdx
     cde:	4b 53                	rex.WXB push r11
     ce0:	36 5f                	ss pop rdi
     ce2:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     ce5:	72 6f                	jb     d56 <__abi_tag+0x9da>
     ce7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ce8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ce9:	5f                   	pop    rdi
     cea:	6c                   	ins    BYTE PTR es:[rdi],dx
     ceb:	69 74 65 72 61 6c 73 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x736c61
     cf2:	00 
     cf3:	69 6e 64 65 78 5f 61 	imul   ebp,DWORD PTR [rsi+0x64],0x615f7865
     cfa:	72 72                	jb     d6e <__abi_tag+0x9f2>
     cfc:	61                   	(bad)
     cfd:	79 00                	jns    cff <__abi_tag+0x983>
     cff:	74 65                	je     d66 <__abi_tag+0x9ea>
     d01:	73 74                	jae    d77 <__abi_tag+0x9fb>
     d03:	5f                   	pop    rdi
     d04:	64 61                	fs (bad)
     d06:	74 61                	je     d69 <__abi_tag+0x9ed>
     d08:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d0b:	4e 53                	rex.WRX push rbx
     d0d:	74 36                	je     d45 <__abi_tag+0x9c9>
     d0f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     d12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d15:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d19:	61                   	(bad)
     d1a:	74 69                	je     d85 <__abi_tag+0xa09>
     d1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d20:	53                   	push   rbx
     d21:	74 35                	je     d58 <__abi_tag+0x9dc>
     d23:	72 61                	jb     d86 <__abi_tag+0xa0a>
     d25:	74 69                	je     d90 <__abi_tag+0xa14>
     d27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d28:	49                   	rex.WB
     d29:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d2b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d2e:	6c                   	ins    BYTE PTR es:[rdi],dx
     d2f:	31 30                	xor    DWORD PTR [rax],esi
     d31:	30 30                	xor    BYTE PTR [rax],dh
     d33:	30 30                	xor    BYTE PTR [rax],dh
     d35:	30 30                	xor    BYTE PTR [rax],dh
     d37:	30 30                	xor    BYTE PTR [rax],dh
     d39:	45                   	rex.RB
     d3a:	45                   	rex.RB
     d3b:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     d3d:	4c                   	rex.WR
     d3e:	45 52                	rex.RB push r10
     d40:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
     d42:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     d45:	6d                   	ins    DWORD PTR es:[rdi],dx
     d46:	5f                   	pop    rdi
     d47:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
     d4e:	5f                   	pop    rdi
     d4f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     d51:	61                   	(bad)
     d52:	62                   	(bad)
     d53:	6c                   	ins    BYTE PTR es:[rdi],dx
     d54:	65 5f                	gs pop rdi
     d56:	69 66 5f 69 73 5f 64 	imul   esp,DWORD PTR [rsi+0x5f],0x645f7369
     d5d:	75 72                	jne    dd1 <__abi_tag+0xa55>
     d5f:	61                   	(bad)
     d60:	74 69                	je     dcb <__abi_tag+0xa4f>
     d62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d64:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
     d68:	65 5f                	gs pop rdi
     d6a:	70 6f                	jo     ddb <__abi_tag+0xa5f>
     d6c:	69 6e 74 00 7e 64 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75647e00
     d73:	72 61                	jb     dd6 <__abi_tag+0xa5a>
     d75:	74 69                	je     de0 <__abi_tag+0xa64>
     d77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d79:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
     d7c:	75 74                	jne    df2 <__abi_tag+0xa76>
     d7e:	77 73                	ja     df3 <__abi_tag+0xa77>
     d80:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     d83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d84:	74 5f                	je     de5 <__abi_tag+0xa69>
     d86:	66 61                	data16 (bad)
     d88:	73 74                	jae    dfe <__abi_tag+0xa82>
     d8a:	36 34 5f             	ss xor al,0x5f
     d8d:	74 00                	je     d8f <__abi_tag+0xa13>
     d8f:	5f                   	pop    rdi
     d90:	5f                   	pop    rdi
     d91:	75 69                	jne    dfc <__abi_tag+0xa80>
     d93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d94:	74 5f                	je     df5 <__abi_tag+0xa79>
     d96:	6c                   	ins    BYTE PTR es:[rdi],dx
     d97:	65 61                	gs (bad)
     d99:	73 74                	jae    e0f <__abi_tag+0xa93>
     d9b:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
     d9e:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     da1:	4f 5f                	rex.WRXB pop r15
     da3:	73 61                	jae    e06 <__abi_tag+0xa8a>
     da5:	76 65                	jbe    e0c <__abi_tag+0xa90>
     da7:	5f                   	pop    rdi
     da8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     daa:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     dae:	4e 53                	rex.WRX push rbx
     db0:	74 36                	je     de8 <__abi_tag+0xa6c>
     db2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     db5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     db6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     db7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     db8:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     dbc:	61                   	(bad)
     dbd:	74 69                	je     e28 <__abi_tag+0xaac>
     dbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dc1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     dc3:	53                   	push   rbx
     dc4:	74 35                	je     dfb <__abi_tag+0xa7f>
     dc6:	72 61                	jb     e29 <__abi_tag+0xaad>
     dc8:	74 69                	je     e33 <__abi_tag+0xab7>
     dca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dcb:	49                   	rex.WB
     dcc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     dce:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     dd1:	6c                   	ins    BYTE PTR es:[rdi],dx
     dd2:	31 30                	xor    DWORD PTR [rax],esi
     dd4:	30 30                	xor    BYTE PTR [rax],dh
     dd6:	30 30                	xor    BYTE PTR [rax],dh
     dd8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
     ddb:	45 70 4c             	rex.RB jo e2a <__abi_tag+0xaae>
     dde:	45 52                	rex.RB push r10
     de0:	4b 53                	rex.WXB push r11
     de2:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     de5:	73 71                	jae    e58 <__abi_tag+0xadc>
     de7:	72 74                	jb     e5d <__abi_tag+0xae1>
     de9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     dec:	53                   	push   rbx
     ded:	74 33                	je     e22 <__abi_tag+0xaa6>
     def:	65 78 70             	gs js  e62 <__abi_tag+0xae6>
     df2:	65 00 61 73          	add    BYTE PTR gs:[rcx+0x73],ah
     df6:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     dfa:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     dfe:	53                   	push   rbx
     dff:	74 39                	je     e3a <__abi_tag+0xabe>
     e01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e02:	65 78 74             	gs js  e79 <__abi_tag+0xafd>
     e05:	61                   	(bad)
     e06:	66 74 65             	data16 je e6e <__abi_tag+0xaf2>
     e09:	72 65                	jb     e70 <__abi_tag+0xaf4>
     e0b:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
     e0f:	73 63                	jae    e74 <__abi_tag+0xaf8>
     e11:	73 70                	jae    e83 <__abi_tag+0xb07>
     e13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e14:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     e17:	5f                   	pop    rdi
     e18:	67 63 64 00 66       	movsxd esp,DWORD PTR [eax+eax*1+0x66]
     e1d:	6d                   	ins    DWORD PTR es:[rdi],dx
     e1e:	69 6e 00 6c 6f 63 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61636f6c
     e25:	6c                   	ins    BYTE PTR es:[rdi],dx
     e26:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
     e2a:	76 00                	jbe    e2c <__abi_tag+0xab0>
     e2c:	5f                   	pop    rdi
     e2d:	5a                   	pop    rdx
     e2e:	53                   	push   rbx
     e2f:	74 36                	je     e67 <__abi_tag+0xaeb>
     e31:	6c                   	ins    BYTE PTR es:[rdi],dx
     e32:	67 61                	addr32 (bad)
     e34:	6d                   	ins    DWORD PTR es:[rdi],dx
     e35:	6d                   	ins    DWORD PTR es:[rdi],dx
     e36:	61                   	(bad)
     e37:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e3b:	53                   	push   rbx
     e3c:	74 36                	je     e74 <__abi_tag+0xaf8>
     e3e:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3f:	67 61                	addr32 (bad)
     e41:	6d                   	ins    DWORD PTR es:[rdi],dx
     e42:	6d                   	ins    DWORD PTR es:[rdi],dx
     e43:	61                   	(bad)
     e44:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
     e48:	61                   	(bad)
     e49:	72 63                	jb     eae <__abi_tag+0xb32>
     e4b:	68 5f 66 69 6c       	push   0x6c69665f
     e50:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e52:	61                   	(bad)
     e53:	6d                   	ins    DWORD PTR es:[rdi],dx
     e54:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e58:	4e 53                	rex.WRX push rbx
     e5a:	74 36                	je     e92 <__abi_tag+0xb16>
     e5c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     e5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e62:	31 30                	xor    DWORD PTR [rax],esi
     e64:	74 69                	je     ecf <__abi_tag+0xb53>
     e66:	6d                   	ins    DWORD PTR es:[rdi],dx
     e67:	65 5f                	gs pop rdi
     e69:	70 6f                	jo     eda <__abi_tag+0xb5e>
     e6b:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     e72:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     e75:	32 31                	xor    dh,BYTE PTR [rcx]
     e77:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     e7a:	65 61                	gs (bad)
     e7c:	64 79 5f             	fs jns ede <__abi_tag+0xb62>
     e7f:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     e83:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     e87:	5f                   	pop    rdi
     e88:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     e8c:	61                   	(bad)
     e8d:	74 69                	je     ef8 <__abi_tag+0xb7c>
     e8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e91:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     e93:	53                   	push   rbx
     e94:	74 35                	je     ecb <__abi_tag+0xb4f>
     e96:	72 61                	jb     ef9 <__abi_tag+0xb7d>
     e98:	74 69                	je     f03 <__abi_tag+0xb87>
     e9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e9b:	49                   	rex.WB
     e9c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     e9e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ea1:	6c                   	ins    BYTE PTR es:[rdi],dx
     ea2:	31 30                	xor    DWORD PTR [rax],esi
     ea4:	30 30                	xor    BYTE PTR [rax],dh
     ea6:	30 30                	xor    BYTE PTR [rax],dh
     ea8:	30 30                	xor    BYTE PTR [rax],dh
     eaa:	30 30                	xor    BYTE PTR [rax],dh
     eac:	45                   	rex.RB
     ead:	45                   	rex.RB
     eae:	45                   	rex.RB
     eaf:	45                   	rex.RB
     eb0:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     eb2:	49                   	rex.WB
     eb3:	45 52                	rex.RB push r10
     eb5:	4b 53                	rex.WXB push r11
     eb7:	36 5f                	ss pop rdi
     eb9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ebc:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     ec3:	77 63                	ja     f28 <__abi_tag+0xbac>
     ec5:	73 74                	jae    f3b <__abi_tag+0xbbf>
     ec7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ec8:	75 6c                	jne    f36 <__abi_tag+0xbba>
     eca:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     ecd:	4e 53                	rex.WRX push rbx
     ecf:	74 36                	je     f07 <__abi_tag+0xb8b>
     ed1:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ed4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ed5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ed6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ed7:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     edb:	61                   	(bad)
     edc:	74 69                	je     f47 <__abi_tag+0xbcb>
     ede:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     edf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ee0:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     ee2:	53                   	push   rbx
     ee3:	74 35                	je     f1a <__abi_tag+0xb9e>
     ee5:	72 61                	jb     f48 <__abi_tag+0xbcc>
     ee7:	74 69                	je     f52 <__abi_tag+0xbd6>
     ee9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     eea:	49                   	rex.WB
     eeb:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     eed:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ef0:	6c                   	ins    BYTE PTR es:[rdi],dx
     ef1:	31 30                	xor    DWORD PTR [rax],esi
     ef3:	30 30                	xor    BYTE PTR [rax],dh
     ef5:	30 30                	xor    BYTE PTR [rax],dh
     ef7:	30 30                	xor    BYTE PTR [rax],dh
     ef9:	30 30                	xor    BYTE PTR [rax],dh
     efb:	45                   	rex.RB
     efc:	45                   	rex.RB
     efd:	45                   	rex.RB
     efe:	43 31 49 6c          	rex.XB xor DWORD PTR [r9+0x6c],ecx
     f02:	76 45                	jbe    f49 <__abi_tag+0xbcd>
     f04:	45 52                	rex.RB push r10
     f06:	4b 54                	rex.WXB push r12
     f08:	5f                   	pop    rdi
     f09:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     f0c:	4f 5f                	rex.WRXB pop r15
     f0e:	77 72                	ja     f82 <__abi_tag+0xc06>
     f10:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
     f17:	65 
     f18:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
     f1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f1d:	61                   	(bad)
     f1e:	6d                   	ins    DWORD PTR es:[rdi],dx
     f1f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f22:	53                   	push   rbx
     f23:	74 31                	je     f56 <__abi_tag+0xbda>
     f25:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
     f28:	78 74                	js     f9e <__abi_tag+0xc22>
     f2a:	74 6f                	je     f9b <__abi_tag+0xc1f>
     f2c:	77 61                	ja     f8f <__abi_tag+0xc13>
     f2e:	72 64                	jb     f94 <__abi_tag+0xc18>
     f30:	66 65 00 5f 5f       	data16 add BYTE PTR gs:[rdi+0x5f],bl
     f35:	6c                   	ins    BYTE PTR es:[rdi],dx
     f36:	68 73 00 5f 6c       	push   0x6c5f0073
     f3b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f3c:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     f3f:	69 73 75 6e 6f 72 64 	imul   esi,DWORD PTR [rbx+0x75],0x64726f6e
     f46:	65 72 65             	gs jb  fae <__abi_tag+0xc32>
     f49:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     f4d:	74 5f                	je     fae <__abi_tag+0xc32>
     f4f:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     f52:	72 5f                	jb     fb3 <__abi_tag+0xc37>
     f54:	73 79                	jae    fcf <__abi_tag+0xc53>
     f56:	6d                   	ins    DWORD PTR es:[rdi],dx
     f57:	62 6f 6c 00 5f       	(bad)
     f5c:	5a                   	pop    rdx
     f5d:	53                   	push   rbx
     f5e:	74 33                	je     f93 <__abi_tag+0xc17>
     f60:	66 6d                	ins    WORD PTR es:[rdi],dx
     f62:	61                   	(bad)
     f63:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
     f69:	4e 53                	rex.WRX push rbx
     f6b:	74 36                	je     fa3 <__abi_tag+0xc27>
     f6d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     f70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f72:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f73:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     f77:	61                   	(bad)
     f78:	74 69                	je     fe3 <__abi_tag+0xc67>
     f7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f7c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     f7e:	53                   	push   rbx
     f7f:	74 35                	je     fb6 <__abi_tag+0xc3a>
     f81:	72 61                	jb     fe4 <__abi_tag+0xc68>
     f83:	74 69                	je     fee <__abi_tag+0xc72>
     f85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f86:	49                   	rex.WB
     f87:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f89:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f8c:	6c                   	ins    BYTE PTR es:[rdi],dx
     f8d:	31 30                	xor    DWORD PTR [rax],esi
     f8f:	30 30                	xor    BYTE PTR [rax],dh
     f91:	30 30                	xor    BYTE PTR [rax],dh
     f93:	30 30                	xor    BYTE PTR [rax],dh
     f95:	30 30                	xor    BYTE PTR [rax],dh
     f97:	45                   	rex.RB
     f98:	45                   	rex.RB
     f99:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     f9b:	49                   	rex.WB
     f9c:	45 52                	rex.RB push r10
     f9e:	4b 53                	rex.WXB push r11
     fa0:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     fa3:	5f                   	pop    rdi
     fa4:	5a                   	pop    rdx
     fa5:	4e 53                	rex.WRX push rbx
     fa7:	74 36                	je     fdf <__abi_tag+0xc63>
     fa9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     fac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     faf:	31 30                	xor    DWORD PTR [rax],esi
     fb1:	74 69                	je     101c <_init+0x1c>
     fb3:	6d                   	ins    DWORD PTR es:[rdi],dx
     fb4:	65 5f                	gs pop rdi
     fb6:	70 6f                	jo     1027 <_init+0x27>
     fb8:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     fbf:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     fc2:	32 31                	xor    dh,BYTE PTR [rcx]
     fc4:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     fc7:	65 61                	gs (bad)
     fc9:	64 79 5f             	fs jns 102b <_init+0x2b>
     fcc:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     fd0:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     fd4:	5f                   	pop    rdi
     fd5:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     fd9:	61                   	(bad)
     fda:	74 69                	je     1045 <rand@plt+0x5>
     fdc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fdd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fde:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     fe0:	53                   	push   rbx
     fe1:	74 35                	je     1018 <_init+0x18>
     fe3:	72 61                	jb     1046 <rand@plt+0x6>
     fe5:	74 69                	je     1050 <strchr@plt>
     fe7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fe8:	49                   	rex.WB
     fe9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     feb:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     fee:	6c                   	ins    BYTE PTR es:[rdi],dx
     fef:	31 30                	xor    DWORD PTR [rax],esi
     ff1:	30 30                	xor    BYTE PTR [rax],dh
     ff3:	30 30                	xor    BYTE PTR [rax],dh
     ff5:	30 30                	xor    BYTE PTR [rax],dh
     ff7:	30 30                	xor    BYTE PTR [rax],dh
     ff9:	45                   	rex.RB
     ffa:	45                   	rex.RB
     ffb:	45                   	rex.RB
     ffc:	45                   	rex.RB
     ffd:	45                   	rex.RB
     ffe:	43 34 45             	rex.XB xor al,0x45
    1001:	76 00                	jbe    1003 <_init+0x3>
    1003:	5f                   	pop    rdi
    1004:	5a                   	pop    rdx
    1005:	53                   	push   rbx
    1006:	74 36                	je     103e <__printf_chk@plt+0xe>
    1008:	73 63                	jae    106d <__strncpy_chk@plt+0xd>
    100a:	61                   	(bad)
    100b:	6c                   	ins    BYTE PTR es:[rdi],dx
    100c:	62 6e 65 69 00       	(bad)
    1011:	64 69 66 66 74 69 6d 	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
    1018:	65 
    1019:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
    101c:	65 72 61             	gs jb  1080 <calloc@plt>
    101f:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    1024:	53                   	push   rbx
    1025:	74 34                	je     105b <strchr@plt+0xb>
    1027:	74 61                	je     108a <calloc@plt+0xa>
    1029:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    102a:	68 65 00 5f 5a       	push   0x5a5f0065
    102f:	53                   	push   rbx
    1030:	74 34                	je     1066 <__strncpy_chk@plt+0x6>
    1032:	74 61                	je     1095 <open@plt+0x5>
    1034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1035:	68 66 00 5f 49       	push   0x495f0066
    103a:	4f 5f                	rex.WRXB pop r15
    103c:	62 75 66 5f 65       	(bad)
    1041:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1042:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
    1046:	4f 5f                	rex.WRXB pop r15
    1048:	73 61                	jae    10ab <aligned_alloc@plt+0xb>
    104a:	76 65                	jbe    10b1 <stat@plt+0x1>
    104c:	5f                   	pop    rdi
    104d:	62 61 73 65 00       	(bad)
    1052:	6d                   	ins    DWORD PTR es:[rdi],dx
    1053:	62 72 74 6f 77       	(bad)
    1058:	63 00                	movsxd eax,DWORD PTR [rax]
    105a:	5f                   	pop    rdi
    105b:	5a                   	pop    rdx
    105c:	53                   	push   rbx
    105d:	74 35                	je     1094 <open@plt+0x4>
    105f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1060:	72 69                	jb     10cb <srand@plt+0xb>
    1062:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1063:	74 66                	je     10cb <srand@plt+0xb>
    1065:	00 31                	add    BYTE PTR [rcx],dh
    1067:	31 6d 61             	xor    DWORD PTR [rbp+0x61],ebp
    106a:	78 5f                	js     10cb <srand@plt+0xb>
    106c:	61                   	(bad)
    106d:	6c                   	ins    BYTE PTR es:[rdi],dx
    106e:	69 67 6e 5f 74 00 77 	imul   esp,DWORD PTR [rdi+0x6e],0x7700745f
    1075:	63 73 78             	movsxd esi,DWORD PTR [rbx+0x78]
    1078:	66 72 6d             	data16 jb 10e8 <__stack_chk_fail@plt+0x8>
    107b:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    107e:	74 5f                	je     10df <fclose@plt+0xf>
    1080:	66 72 61             	data16 jb 10e4 <__stack_chk_fail@plt+0x4>
    1083:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    1086:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    108d:	5a                   	pop    rdx
    108e:	53                   	push   rbx
    108f:	74 39                	je     10ca <srand@plt+0xa>
    1091:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1092:	65 78 74             	gs js  1109 <free@plt+0x9>
    1095:	61                   	(bad)
    1096:	66 74 65             	data16 je 10fe <fopen@plt+0xe>
    1099:	72 66                	jb     1101 <free@plt+0x1>
    109b:	66 00 66 67          	data16 add BYTE PTR [rsi+0x67],ah
    109f:	65 74 70             	gs je  1112 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x2>
    10a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10a3:	73 00                	jae    10a5 <aligned_alloc@plt+0x5>
    10a5:	5f                   	pop    rdi
    10a6:	5f                   	pop    rdi
    10a7:	70 6f                	jo     1118 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x8>
    10a9:	73 00                	jae    10ab <aligned_alloc@plt+0xb>
    10ab:	5f                   	pop    rdi
    10ac:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    10af:	69 6e 00 73 74 65 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61657473
    10b6:	64 79 5f             	fs jns 1118 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x8>
    10b9:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    10bd:	6b 00 77             	imul   eax,DWORD PTR [rax],0x77
    10c0:	63 73 63             	movsxd esi,DWORD PTR [rbx+0x63]
    10c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    10c6:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    10c9:	65 61                	gs (bad)
    10cb:	72 65                	jb     1132 <putchar@plt+0x2>
    10cd:	72 72                	jb     1141 <strcmp@plt+0x1>
    10cf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    10d2:	53                   	push   rbx
    10d3:	74 31                	je     1106 <free@plt+0x6>
    10d5:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    10d8:	75 6e                	jne    1148 <strcmp@plt+0x8>
    10da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10db:	72 64                	jb     1141 <strcmp@plt+0x1>
    10dd:	65 72 65             	gs jb  1145 <strcmp@plt+0x5>
    10e0:	64 64 64 00 5f 63    	fs fs add BYTE PTR fs:[rdi+0x63],bl
    10e6:	75 72                	jne    115a <read@plt+0xa>
    10e8:	5f                   	pop    rdi
    10e9:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    10ec:	75 6d                	jne    115b <read@plt+0xb>
    10ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10ef:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    10f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10f3:	74 5f                	je     1154 <read@plt+0x4>
    10f5:	66 61                	data16 (bad)
    10f7:	73 74                	jae    116d <puts@plt+0xd>
    10f9:	33 32                	xor    esi,DWORD PTR [rdx]
    10fb:	5f                   	pop    rdi
    10fc:	74 00                	je     10fe <fopen@plt+0xe>
    10fe:	5f                   	pop    rdi
    10ff:	5a                   	pop    rdx
    1100:	4e 53                	rex.WRX push rbx
    1102:	74 36                	je     113a <putchar@plt+0xa>
    1104:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1107:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1108:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1109:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    110a:	31 30                	xor    DWORD PTR [rax],esi
    110c:	74 69                	je     1177 <realloc@plt+0x7>
    110e:	6d                   	ins    DWORD PTR es:[rdi],dx
    110f:	65 5f                	gs pop rdi
    1111:	70 6f                	jo     1182 <__fprintf_chk@plt+0x2>
    1113:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    111a:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    111d:	32 31                	xor    dh,BYTE PTR [rcx]
    111f:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1122:	65 61                	gs (bad)
    1124:	64 79 5f             	fs jns 1186 <__fprintf_chk@plt+0x6>
    1127:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    112b:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    112f:	5f                   	pop    rdi
    1130:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1134:	61                   	(bad)
    1135:	74 69                	je     11a0 <fwrite@plt>
    1137:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1138:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1139:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    113b:	53                   	push   rbx
    113c:	74 35                	je     1173 <realloc@plt+0x3>
    113e:	72 61                	jb     11a1 <fwrite@plt+0x1>
    1140:	74 69                	je     11ab <fwrite@plt+0xb>
    1142:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1143:	49                   	rex.WB
    1144:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1146:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1149:	6c                   	ins    BYTE PTR es:[rdi],dx
    114a:	31 30                	xor    DWORD PTR [rax],esi
    114c:	30 30                	xor    BYTE PTR [rax],dh
    114e:	30 30                	xor    BYTE PTR [rax],dh
    1150:	30 30                	xor    BYTE PTR [rax],dh
    1152:	30 30                	xor    BYTE PTR [rax],dh
    1154:	45                   	rex.RB
    1155:	45                   	rex.RB
    1156:	45                   	rex.RB
    1157:	45                   	rex.RB
    1158:	45 70 4c             	rex.RB jo 11a7 <fwrite@plt+0x7>
    115b:	45 52                	rex.RB push r10
    115d:	4b 53                	rex.WXB push r11
    115f:	36 5f                	ss pop rdi
    1161:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1164:	4e 53                	rex.WRX push rbx
    1166:	74 36                	je     119e <sqrtf@plt+0xe>
    1168:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    116b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    116c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    116d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    116e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1172:	61                   	(bad)
    1173:	74 69                	je     11de <__cxa_finalize@plt+0xe>
    1175:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1176:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1177:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1179:	53                   	push   rbx
    117a:	74 35                	je     11b1 <close@plt+0x1>
    117c:	72 61                	jb     11df <__cxa_finalize@plt+0xf>
    117e:	74 69                	je     11e9 <main+0x9>
    1180:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1181:	49                   	rex.WB
    1182:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1184:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1187:	6c                   	ins    BYTE PTR es:[rdi],dx
    1188:	31 30                	xor    DWORD PTR [rax],esi
    118a:	30 30                	xor    BYTE PTR [rax],dh
    118c:	30 30                	xor    BYTE PTR [rax],dh
    118e:	30 30                	xor    BYTE PTR [rax],dh
    1190:	30 30                	xor    BYTE PTR [rax],dh
    1192:	45                   	rex.RB
    1193:	45                   	rex.RB
    1194:	45 70 70             	rex.RB jo 1207 <main+0x27>
    1197:	45 69 00 6c 64 65 78 	imul   r8d,DWORD PTR [r8],0x7865646c
    119e:	70 00                	jo     11a0 <fwrite@plt>
    11a0:	70 6f                	jo     1211 <_start+0x1>
    11a2:	73 69                	jae    120d <main+0x2d>
    11a4:	74 69                	je     120f <main+0x2f>
    11a6:	76 65                	jbe    120d <main+0x2d>
    11a8:	5f                   	pop    rdi
    11a9:	73 69                	jae    1214 <_start+0x4>
    11ab:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    11ad:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    11b0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    11b2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11b5:	53                   	push   rbx
    11b6:	74 35                	je     11ed <main+0xd>
    11b8:	6c                   	ins    BYTE PTR es:[rdi],dx
    11b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11ba:	67 31 70 65          	xor    DWORD PTR [eax+0x65],esi
    11be:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11c1:	75 69                	jne    122c <_start+0x1c>
    11c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11c4:	74 38                	je     11fe <main+0x1e>
    11c6:	5f                   	pop    rdi
    11c7:	74 00                	je     11c9 <__isoc23_strtol@plt+0x9>
    11c9:	5f                   	pop    rdi
    11ca:	5a                   	pop    rdx
    11cb:	4e 53                	rex.WRX push rbx
    11cd:	74 36                	je     1205 <main+0x25>
    11cf:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    11d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11d5:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    11d9:	61                   	(bad)
    11da:	74 69                	je     1245 <deregister_tm_clones+0x5>
    11dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11de:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11e0:	53                   	push   rbx
    11e1:	74 35                	je     1218 <_start+0x8>
    11e3:	72 61                	jb     1246 <deregister_tm_clones+0x6>
    11e5:	74 69                	je     1250 <deregister_tm_clones+0x10>
    11e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e8:	49                   	rex.WB
    11e9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11eb:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11ee:	6c                   	ins    BYTE PTR es:[rdi],dx
    11ef:	31 30                	xor    DWORD PTR [rax],esi
    11f1:	30 30                	xor    BYTE PTR [rax],dh
    11f3:	30 30                	xor    BYTE PTR [rax],dh
    11f5:	30 30                	xor    BYTE PTR [rax],dh
    11f7:	30 30                	xor    BYTE PTR [rax],dh
    11f9:	45                   	rex.RB
    11fa:	45                   	rex.RB
    11fb:	45 70 70             	rex.RB jo 126e <deregister_tm_clones+0x2e>
    11fe:	45 76 00             	rex.RB jbe 1201 <main+0x21>
    1201:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1202:	65 78 74             	gs js  1279 <register_tm_clones+0x9>
    1205:	74 6f                	je     1276 <register_tm_clones+0x6>
    1207:	77 61                	ja     126a <deregister_tm_clones+0x2a>
    1209:	72 64                	jb     126f <deregister_tm_clones+0x2f>
    120b:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    120e:	61                   	(bad)
    120f:	62                   	(bad)
    1210:	6c                   	ins    BYTE PTR es:[rdi],dx
    1211:	65 5f                	gs pop rdi
    1213:	69 66 3c 74 72 75 65 	imul   esp,DWORD PTR [rsi+0x3c],0x65757274
    121a:	2c 20                	sub    al,0x20
    121c:	73 74                	jae    1292 <register_tm_clones+0x22>
    121e:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1221:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1224:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1225:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1226:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1227:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1229:	64 75 72             	fs jne 129e <register_tm_clones+0x2e>
    122c:	61                   	(bad)
    122d:	74 69                	je     1298 <register_tm_clones+0x28>
    122f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1230:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1231:	3c 6c                	cmp    al,0x6c
    1233:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1234:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1235:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1239:	74 2c                	je     1267 <deregister_tm_clones+0x27>
    123b:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    123e:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1241:	72 61                	jb     12a4 <register_tm_clones+0x34>
    1243:	74 69                	je     12ae <register_tm_clones+0x3e>
    1245:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1246:	3c 31                	cmp    al,0x31
    1248:	2c 20                	sub    al,0x20
    124a:	31 30                	xor    DWORD PTR [rax],esi
    124c:	30 30                	xor    BYTE PTR [rax],dh
    124e:	30 30                	xor    BYTE PTR [rax],dh
    1250:	30 3e                	xor    BYTE PTR [rsi],bh
    1252:	20 3e                	and    BYTE PTR [rsi],bh
    1254:	20 3e                	and    BYTE PTR [rsi],bh
    1256:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
    1259:	66 5f                	pop    di
    125b:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
    1262:	5f                   	pop    rdi
    1263:	77 63                	ja     12c8 <__do_global_dtors_aux+0x18>
    1265:	68 00 77 63 73       	push   0x73637700
    126a:	72 63                	jb     12cf <__do_global_dtors_aux+0x1f>
    126c:	68 72 00 6d 6f       	push   0x6f6d0072
    1271:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1272:	5f                   	pop    rdi
    1273:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    1278:	61                   	(bad)
    1279:	6c                   	ins    BYTE PTR es:[rdi],dx
    127a:	5f                   	pop    rdi
    127b:	70 6f                	jo     12ec <__do_global_dtors_aux+0x3c>
    127d:	69 6e 74 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535a5f00
    1284:	74 35                	je     12bb <__do_global_dtors_aux+0xb>
    1286:	68 79 70 6f 74       	push   0x746f7079
    128b:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    1290:	4e 53                	rex.WRX push rbx
    1292:	74 36                	je     12ca <__do_global_dtors_aux+0x1a>
    1294:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1297:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1298:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1299:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    129a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    129e:	61                   	(bad)
    129f:	74 69                	je     130a <_Z16buildStringArrayPcj+0xa>
    12a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a3:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12a5:	53                   	push   rbx
    12a6:	74 35                	je     12dd <__do_global_dtors_aux+0x2d>
    12a8:	72 61                	jb     130b <_Z16buildStringArrayPcj+0xb>
    12aa:	74 69                	je     1315 <_Z16buildStringArrayPcj+0x15>
    12ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ad:	49                   	rex.WB
    12ae:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12b0:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12b3:	6c                   	ins    BYTE PTR es:[rdi],dx
    12b4:	31 30                	xor    DWORD PTR [rax],esi
    12b6:	30 30                	xor    BYTE PTR [rax],dh
    12b8:	30 30                	xor    BYTE PTR [rax],dh
    12ba:	30 30                	xor    BYTE PTR [rax],dh
    12bc:	30 30                	xor    BYTE PTR [rax],dh
    12be:	45                   	rex.RB
    12bf:	45                   	rex.RB
    12c0:	45                   	rex.RB
    12c1:	44 34 45             	rex.R xor al,0x45
    12c4:	76 00                	jbe    12c6 <__do_global_dtors_aux+0x16>
    12c6:	5f                   	pop    rdi
    12c7:	5a                   	pop    rdx
    12c8:	4e 53                	rex.WRX push rbx
    12ca:	74 36                	je     1302 <_Z16buildStringArrayPcj+0x2>
    12cc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    12cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12d2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    12d6:	61                   	(bad)
    12d7:	74 69                	je     1342 <_Z16buildStringArrayPcj+0x42>
    12d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12db:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12dd:	53                   	push   rbx
    12de:	74 35                	je     1315 <_Z16buildStringArrayPcj+0x15>
    12e0:	72 61                	jb     1343 <_Z16buildStringArrayPcj+0x43>
    12e2:	74 69                	je     134d <_Z16buildStringArrayPcj+0x4d>
    12e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e5:	49                   	rex.WB
    12e6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12e8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    12ec:	31 30                	xor    DWORD PTR [rax],esi
    12ee:	30 30                	xor    BYTE PTR [rax],dh
    12f0:	30 30                	xor    BYTE PTR [rax],dh
    12f2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    12f5:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    12f7:	6d                   	ins    DWORD PTR es:[rdi],dx
    12f8:	45 69 00 74 6d 5f 69 	imul   r8d,DWORD PTR [r8],0x695f6d74
    12ff:	73 64                	jae    1365 <_Z16buildStringArrayPcj+0x65>
    1301:	73 74                	jae    1377 <_Z16buildStringArrayPcj+0x77>
    1303:	00 76 77             	add    BYTE PTR [rsi+0x77],dh
    1306:	70 72                	jo     137a <_Z16buildStringArrayPcj+0x7a>
    1308:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
    130f:	66 70 72             	data16 jo 1384 <_Z16buildStringArrayPcj+0x84>
    1312:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    1319:	6b 00 63             	imul   eax,DWORD PTR [rax],0x63
    131c:	68 72 6f 6e 6f       	push   0x6f6e6f72
    1321:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
    1325:	74 00                	je     1327 <_Z16buildStringArrayPcj+0x27>
    1327:	5f                   	pop    rdi
    1328:	49                   	rex.WB
    1329:	4f 5f                	rex.WRXB pop r15
    132b:	6d                   	ins    DWORD PTR es:[rdi],dx
    132c:	61                   	(bad)
    132d:	72 6b                	jb     139a <_Z16buildStringArrayPcj+0x9a>
    132f:	65 72 00             	gs jb  1332 <_Z16buildStringArrayPcj+0x32>
    1332:	69 6e 74 5f 6e 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f6e5f
    1339:	73 5f                	jae    139a <_Z16buildStringArrayPcj+0x9a>
    133b:	70 72                	jo     13af <_Z16buildStringArrayPcj+0xaf>
    133d:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    1341:	65 73 00             	gs jae 1344 <_Z16buildStringArrayPcj+0x44>
    1344:	77 63                	ja     13a9 <_Z16buildStringArrayPcj+0xa9>
    1346:	73 63                	jae    13ab <_Z16buildStringArrayPcj+0xab>
    1348:	68 72 00 74 79       	push   0x79740072
    134d:	70 65                	jo     13b4 <_Z16buildStringArrayPcj+0xb4>
    134f:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    1352:	6c                   	ins    BYTE PTR es:[rdi],dx
    1353:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1355:	61                   	(bad)
    1356:	6d                   	ins    DWORD PTR es:[rdi],dx
    1357:	65 73 00             	gs jae 135a <_Z16buildStringArrayPcj+0x5a>
    135a:	5f                   	pop    rdi
    135b:	5a                   	pop    rdx
    135c:	53                   	push   rbx
    135d:	74 34                	je     1393 <_Z16buildStringArrayPcj+0x93>
    135f:	66 64 69 6d 65 65 00 	imul   bp,WORD PTR fs:[rbp+0x65],0x65
    1366:	65 78 65             	gs js  13ce <_Z16buildStringArrayPcj+0xce>
    1369:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
    136c:	69 6f 6e 00 5f 5a 53 	imul   ebp,DWORD PTR [rdi+0x6e],0x535a5f00
    1373:	74 35                	je     13aa <_Z16buildStringArrayPcj+0xaa>
    1375:	68 79 70 6f 74       	push   0x746f7079
    137a:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    137f:	4e 53                	rex.WRX push rbx
    1381:	74 35                	je     13b8 <_Z16buildStringArrayPcj+0xb8>
    1383:	72 61                	jb     13e6 <_Z16buildStringArrayPcj+0xe6>
    1385:	74 69                	je     13f0 <_Z16buildStringArrayPcj+0xf0>
    1387:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1388:	49                   	rex.WB
    1389:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    138b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    138e:	6c                   	ins    BYTE PTR es:[rdi],dx
    138f:	31 30                	xor    DWORD PTR [rax],esi
    1391:	30 30                	xor    BYTE PTR [rax],dh
    1393:	45                   	rex.RB
    1394:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    1399:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    139d:	4e                   	rex.WRX
    139e:	4b 53                	rex.WXB push r11
    13a0:	74 36                	je     13d8 <_Z16buildStringArrayPcj+0xd8>
    13a2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    13a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13a8:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    13ac:	61                   	(bad)
    13ad:	74 69                	je     1418 <_Z16buildStringArrayPcj+0x118>
    13af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13b1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    13b3:	53                   	push   rbx
    13b4:	74 35                	je     13eb <_Z16buildStringArrayPcj+0xeb>
    13b6:	72 61                	jb     1419 <_Z16buildStringArrayPcj+0x119>
    13b8:	74 69                	je     1423 <_Z16buildStringArrayPcj+0x123>
    13ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13bb:	49                   	rex.WB
    13bc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    13be:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    13c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    13c2:	31 30                	xor    DWORD PTR [rax],esi
    13c4:	30 30                	xor    BYTE PTR [rax],dh
    13c6:	30 30                	xor    BYTE PTR [rax],dh
    13c8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    13cb:	45 70 73             	rex.RB jo 1441 <_Z11hashMapCtorPFj8string_tEj+0x11>
    13ce:	45 76 00             	rex.RB jbe 13d1 <_Z16buildStringArrayPcj+0xd1>
    13d1:	74 65                	je     1438 <_Z11hashMapCtorPFj8string_tEj+0x8>
    13d3:	73 74                	jae    1449 <_Z11hashMapCtorPFj8string_tEj+0x19>
    13d5:	53                   	push   rbx
    13d6:	65 61                	gs (bad)
    13d8:	72 63                	jb     143d <_Z11hashMapCtorPFj8string_tEj+0xd>
    13da:	68 54 69 6d 65       	push   0x656d6954
    13df:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    13e2:	53                   	push   rbx
    13e3:	74 35                	je     141a <_Z16buildStringArrayPcj+0x11a>
    13e5:	68 79 70 6f 74       	push   0x746f7079
    13ea:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
    13f0:	53                   	push   rbx
    13f1:	74 39                	je     142c <_Z16buildStringArrayPcj+0x12c>
    13f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13f4:	65 61                	gs (bad)
    13f6:	72 62                	jb     145a <_Z11hashMapCtorPFj8string_tEj+0x2a>
    13f8:	79 69                	jns    1463 <_Z11hashMapCtorPFj8string_tEj+0x33>
    13fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13fb:	74 65                	je     1462 <_Z11hashMapCtorPFj8string_tEj+0x32>
    13fd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1400:	53                   	push   rbx
    1401:	74 31                	je     1434 <_Z11hashMapCtorPFj8string_tEj+0x4>
    1403:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1406:	6c                   	ins    BYTE PTR es:[rdi],dx
    1407:	65 73 73             	gs jae 147d <_Z11hashMapCtorPFj8string_tEj+0x4d>
    140a:	65 71 75             	gs jno 1482 <_Z11hashMapCtorPFj8string_tEj+0x52>
    140d:	61                   	(bad)
    140e:	6c                   	ins    BYTE PTR es:[rdi],dx
    140f:	64 64 00 5f 5a       	fs add BYTE PTR fs:[rdi+0x5a],bl
    1414:	53                   	push   rbx
    1415:	74 34                	je     144b <_Z11hashMapCtorPFj8string_tEj+0x1b>
    1417:	66 61                	data16 (bad)
    1419:	62 73 66 00 64       	(bad)
    141e:	75 72                	jne    1492 <_Z11hashMapCtorPFj8string_tEj+0x62>
    1420:	61                   	(bad)
    1421:	74 69                	je     148c <_Z11hashMapCtorPFj8string_tEj+0x5c>
    1423:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1424:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1425:	3c 6c                	cmp    al,0x6c
    1427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1428:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1429:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    142d:	74 2c                	je     145b <_Z11hashMapCtorPFj8string_tEj+0x2b>
    142f:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1432:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1435:	72 61                	jb     1498 <_Z11hashMapCtorPFj8string_tEj+0x68>
    1437:	74 69                	je     14a2 <_Z11hashMapCtorPFj8string_tEj+0x72>
    1439:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    143a:	3c 31                	cmp    al,0x31
    143c:	2c 20                	sub    al,0x20
    143e:	31 30                	xor    DWORD PTR [rax],esi
    1440:	30 30                	xor    BYTE PTR [rax],dh
    1442:	30 30                	xor    BYTE PTR [rax],dh
    1444:	30 3e                	xor    BYTE PTR [rsi],bh
    1446:	20 3e                	and    BYTE PTR [rsi],bh
    1448:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    144b:	61                   	(bad)
    144c:	72 62                	jb     14b0 <_Z11hashMapCtorPFj8string_tEj+0x80>
    144e:	79 69                	jns    14b9 <_Z11hashMapCtorPFj8string_tEj+0x89>
    1450:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1451:	74 00                	je     1453 <_Z11hashMapCtorPFj8string_tEj+0x23>
    1453:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1454:	70 65                	jo     14bb <_Z11hashMapCtorPFj8string_tEj+0x8b>
    1456:	72 61                	jb     14b9 <_Z11hashMapCtorPFj8string_tEj+0x89>
    1458:	74 6f                	je     14c9 <_Z11hashMapCtorPFj8string_tEj+0x99>
    145a:	72 2b                	jb     1487 <_Z11hashMapCtorPFj8string_tEj+0x57>
    145c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    145f:	53                   	push   rbx
    1460:	74 34                	je     1496 <_Z11hashMapCtorPFj8string_tEj+0x66>
    1462:	61                   	(bad)
    1463:	74 61                	je     14c6 <_Z11hashMapCtorPFj8string_tEj+0x96>
    1465:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1466:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    146a:	53                   	push   rbx
    146b:	74 34                	je     14a1 <_Z11hashMapCtorPFj8string_tEj+0x71>
    146d:	61                   	(bad)
    146e:	74 61                	je     14d1 <_Z11hashMapCtorPFj8string_tEj+0xa1>
    1470:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1471:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    1475:	4f 5f                	rex.WRXB pop r15
    1477:	46                   	rex.RX
    1478:	49                   	rex.WB
    1479:	4c                   	rex.WR
    147a:	45 00 6d 6f          	add    BYTE PTR [r13+0x6f],r13b
    147e:	64 66 00 5f 5a       	data16 add BYTE PTR fs:[rdi+0x5a],bl
    1483:	53                   	push   rbx
    1484:	74 31                	je     14b7 <_Z11hashMapCtorPFj8string_tEj+0x87>
    1486:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1489:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    148d:	73 69                	jae    14f8 <_Z17hashMapAddElementP7HashMap8string_t+0x18>
    148f:	66 79 64             	data16 jns 14f6 <_Z17hashMapAddElementP7HashMap8string_t+0x16>
    1492:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1495:	53                   	push   rbx
    1496:	74 31                	je     14c9 <_Z11hashMapCtorPFj8string_tEj+0x99>
    1498:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    149b:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    149f:	73 69                	jae    150a <_Z17hashMapAddElementP7HashMap8string_t+0x2a>
    14a1:	66 79 65             	data16 jns 1509 <_Z17hashMapAddElementP7HashMap8string_t+0x29>
    14a4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14a7:	53                   	push   rbx
    14a8:	74 31                	je     14db <_Z11hashMapCtorPFj8string_tEj+0xab>
    14aa:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    14ad:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    14b1:	73 69                	jae    151c <_Z17hashMapAddElementP7HashMap8string_t+0x3c>
    14b3:	66 79 66             	data16 jns 151c <_Z17hashMapAddElementP7HashMap8string_t+0x3c>
    14b6:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    14b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    14ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14bb:	76 65                	jbe    1522 <_Z17hashMapAddElementP7HashMap8string_t+0x42>
    14bd:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    14c0:	4f 5f                	rex.WRXB pop r15
    14c2:	77 69                	ja     152d <_Z17hashMapAddElementP7HashMap8string_t+0x4d>
    14c4:	64 65 5f             	fs gs pop rdi
    14c7:	64 61                	fs (bad)
    14c9:	74 61                	je     152c <_Z17hashMapAddElementP7HashMap8string_t+0x4c>
    14cb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14ce:	53                   	push   rbx
    14cf:	74 34                	je     1505 <_Z17hashMapAddElementP7HashMap8string_t+0x25>
    14d1:	66 64 69 6d 66 66 00 	imul   bp,WORD PTR fs:[rbp+0x66],0x66
    14d8:	5f                   	pop    rdi
    14d9:	5a                   	pop    rdx
    14da:	53                   	push   rbx
    14db:	74 34                	je     1511 <_Z17hashMapAddElementP7HashMap8string_t+0x31>
    14dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    14de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14df:	67 32 65 00          	xor    ah,BYTE PTR [ebp+0x0]
    14e3:	5f                   	pop    rdi
    14e4:	5a                   	pop    rdx
    14e5:	53                   	push   rbx
    14e6:	74 34                	je     151c <_Z17hashMapAddElementP7HashMap8string_t+0x3c>
    14e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    14e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14ea:	67 32 66 00          	xor    ah,BYTE PTR [esi+0x0]
    14ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14ef:	70 65                	jo     1556 <_Z17hashMapAddElementP7HashMap8string_t+0x76>
    14f1:	72 61                	jb     1554 <_Z17hashMapAddElementP7HashMap8string_t+0x74>
    14f3:	74 6f                	je     1564 <_Z17hashMapAddElementP7HashMap8string_t+0x84>
    14f5:	72 3d                	jb     1534 <_Z17hashMapAddElementP7HashMap8string_t+0x54>
    14f7:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    14fa:	65 74 77             	gs je  1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    14fd:	63 00                	movsxd eax,DWORD PTR [rax]
    14ff:	69 73 69 6e 66 00 66 	imul   esi,DWORD PTR [rbx+0x69],0x6600666e
    1506:	70 63                	jo     156b <_Z17hashMapAddElementP7HashMap8string_t+0x8b>
    1508:	6c                   	ins    BYTE PTR es:[rdi],dx
    1509:	61                   	(bad)
    150a:	73 73                	jae    157f <_Z17hashMapAddElementP7HashMap8string_t+0x9f>
    150c:	69 66 79 00 67 65 74 	imul   esp,DWORD PTR [rsi+0x79],0x74656700
    1513:	77 63                	ja     1578 <_Z17hashMapAddElementP7HashMap8string_t+0x98>
    1515:	68 61 72 00 5f       	push   0x5f007261
    151a:	5a                   	pop    rdx
    151b:	53                   	push   rbx
    151c:	74 34                	je     1552 <_Z17hashMapAddElementP7HashMap8string_t+0x72>
    151e:	65 72 66             	gs jb  1587 <_Z17hashMapAddElementP7HashMap8string_t+0xa7>
    1521:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1524:	5f                   	pop    rdi
    1525:	5a                   	pop    rdx
    1526:	53                   	push   rbx
    1527:	74 34                	je     155d <_Z17hashMapAddElementP7HashMap8string_t+0x7d>
    1529:	65 72 66             	gs jb  1592 <_Z17hashMapAddElementP7HashMap8string_t+0xb2>
    152c:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    152f:	66 67 65 74 77       	data16 addr32 gs je 15ab <_Z17hashMapAddElementP7HashMap8string_t+0xcb>
    1534:	73 00                	jae    1536 <_Z17hashMapAddElementP7HashMap8string_t+0x56>
    1536:	5f                   	pop    rdi
    1537:	5f                   	pop    rdi
    1538:	75 69                	jne    15a3 <_Z17hashMapAddElementP7HashMap8string_t+0xc3>
    153a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    153b:	74 5f                	je     159c <_Z17hashMapAddElementP7HashMap8string_t+0xbc>
    153d:	6c                   	ins    BYTE PTR es:[rdi],dx
    153e:	65 61                	gs (bad)
    1540:	73 74                	jae    15b6 <_Z17hashMapAddElementP7HashMap8string_t+0xd6>
    1542:	31 36                	xor    DWORD PTR [rsi],esi
    1544:	5f                   	pop    rdi
    1545:	74 00                	je     1547 <_Z17hashMapAddElementP7HashMap8string_t+0x67>
    1547:	5f                   	pop    rdi
    1548:	5a                   	pop    rdx
    1549:	4e 53                	rex.WRX push rbx
    154b:	74 35                	je     1582 <_Z17hashMapAddElementP7HashMap8string_t+0xa2>
    154d:	72 61                	jb     15b0 <_Z17hashMapAddElementP7HashMap8string_t+0xd0>
    154f:	74 69                	je     15ba <_Z17hashMapAddElementP7HashMap8string_t+0xda>
    1551:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1552:	49                   	rex.WB
    1553:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1555:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1558:	6c                   	ins    BYTE PTR es:[rdi],dx
    1559:	31 30                	xor    DWORD PTR [rax],esi
    155b:	30 30                	xor    BYTE PTR [rax],dh
    155d:	30 30                	xor    BYTE PTR [rax],dh
    155f:	30 30                	xor    BYTE PTR [rax],dh
    1561:	30 30                	xor    BYTE PTR [rax],dh
    1563:	45                   	rex.RB
    1564:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    1569:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    156d:	53                   	push   rbx
    156e:	74 34                	je     15a4 <_Z17hashMapAddElementP7HashMap8string_t+0xc4>
    1570:	6d                   	ins    DWORD PTR es:[rdi],dx
    1571:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1572:	64 66 65 50          	fs gs push ax
    1576:	65 00 66 63          	add    BYTE PTR gs:[rsi+0x63],ah
    157a:	6c                   	ins    BYTE PTR es:[rdi],dx
    157b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    157c:	73 65                	jae    15e3 <_Z17hashMapAddElementP7HashMap8string_t+0x103>
    157e:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1581:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1583:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1586:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    1589:	70 79                	jo     1604 <_Z17hashMapAddElementP7HashMap8string_t+0x124>
    158b:	73 69                	jae    15f6 <_Z17hashMapAddElementP7HashMap8string_t+0x116>
    158d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    158f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1592:	53                   	push   rbx
    1593:	74 33                	je     15c8 <_Z17hashMapAddElementP7HashMap8string_t+0xe8>
    1595:	74 61                	je     15f8 <_Z17hashMapAddElementP7HashMap8string_t+0x118>
    1597:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1598:	66 00 5f 6d          	data16 add BYTE PTR [rdi+0x6d],bl
    159c:	6d                   	ins    DWORD PTR es:[rdi],dx
    159d:	5f                   	pop    rdi
    159e:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    15a1:	33 32                	xor    esi,DWORD PTR [rdx]
    15a3:	5f                   	pop    rdi
    15a4:	66 69 6c 65 73 00 69 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6900
    15ab:	73 6c                	jae    1619 <_Z17hashMapAddElementP7HashMap8string_t+0x139>
    15ad:	65 73 73             	gs jae 1623 <_Z17hashMapAddElementP7HashMap8string_t+0x143>
    15b0:	65 71 75             	gs jno 1628 <_Z17hashMapAddElementP7HashMap8string_t+0x148>
    15b3:	61                   	(bad)
    15b4:	6c                   	ins    BYTE PTR es:[rdi],dx
    15b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    15b8:	53                   	push   rbx
    15b9:	74 38                	je     15f3 <_Z17hashMapAddElementP7HashMap8string_t+0x113>
    15bb:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    15c3:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    15c7:	53                   	push   rbx
    15c8:	74 38                	je     1602 <_Z17hashMapAddElementP7HashMap8string_t+0x122>
    15ca:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    15d2:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    15d6:	53                   	push   rbx
    15d7:	74 38                	je     1611 <_Z17hashMapAddElementP7HashMap8string_t+0x131>
    15d9:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15e0:	6c                   	ins    BYTE PTR es:[rdi],dx
    15e1:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    15e5:	4e 53                	rex.WRX push rbx
    15e7:	74 36                	je     161f <_Z17hashMapAddElementP7HashMap8string_t+0x13f>
    15e9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    15ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15ef:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    15f3:	61                   	(bad)
    15f4:	74 69                	je     165f <_Z17hashMapAddElementP7HashMap8string_t+0x17f>
    15f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15f8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    15fa:	53                   	push   rbx
    15fb:	74 35                	je     1632 <_Z17hashMapAddElementP7HashMap8string_t+0x152>
    15fd:	72 61                	jb     1660 <_Z17hashMapAddElementP7HashMap8string_t+0x180>
    15ff:	74 69                	je     166a <_Z17hashMapAddElementP7HashMap8string_t+0x18a>
    1601:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1602:	49                   	rex.WB
    1603:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1605:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1608:	6c                   	ins    BYTE PTR es:[rdi],dx
    1609:	31 30                	xor    DWORD PTR [rax],esi
    160b:	30 30                	xor    BYTE PTR [rax],dh
    160d:	30 30                	xor    BYTE PTR [rax],dh
    160f:	30 30                	xor    BYTE PTR [rax],dh
    1611:	30 30                	xor    BYTE PTR [rax],dh
    1613:	45                   	rex.RB
    1614:	45                   	rex.RB
    1615:	45 34 7a             	rex.RB xor al,0x7a
    1618:	65 72 6f             	gs jb  168a <_Z17hashMapAddElementP7HashMap8string_t+0x1aa>
    161b:	45 76 00             	rex.RB jbe 161e <_Z17hashMapAddElementP7HashMap8string_t+0x13e>
    161e:	73 74                	jae    1694 <_Z17hashMapAddElementP7HashMap8string_t+0x1b4>
    1620:	61                   	(bad)
    1621:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1622:	64 61                	fs (bad)
    1624:	72 74                	jb     169a <_Z17hashMapAddElementP7HashMap8string_t+0x1ba>
    1626:	5f                   	pop    rdi
    1627:	64 65 76 69          	fs gs jbe 1694 <_Z17hashMapAddElementP7HashMap8string_t+0x1b4>
    162b:	61                   	(bad)
    162c:	74 69                	je     1697 <_Z17hashMapAddElementP7HashMap8string_t+0x1b7>
    162e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    162f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1630:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
    1633:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1634:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    1638:	73 63                	jae    169d <_Z17hashMapAddElementP7HashMap8string_t+0x1bd>
    163a:	6d                   	ins    DWORD PTR es:[rdi],dx
    163b:	70 00                	jo     163d <_Z17hashMapAddElementP7HashMap8string_t+0x15d>
    163d:	5f                   	pop    rdi
    163e:	5f                   	pop    rdi
    163f:	72 65                	jb     16a6 <_Z17hashMapAddElementP7HashMap8string_t+0x1c6>
    1641:	70 00                	jo     1643 <_Z17hashMapAddElementP7HashMap8string_t+0x163>
    1643:	77 63                	ja     16a8 <_Z17hashMapAddElementP7HashMap8string_t+0x1c8>
    1645:	73 70                	jae    16b7 <_Z17hashMapAddElementP7HashMap8string_t+0x1d7>
    1647:	62 72 6b 00 5f       	(bad)
    164c:	5a                   	pop    rdx
    164d:	4e 53                	rex.WRX push rbx
    164f:	74 36                	je     1687 <_Z17hashMapAddElementP7HashMap8string_t+0x1a7>
    1651:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1654:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1655:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1656:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1657:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    165b:	61                   	(bad)
    165c:	74 69                	je     16c7 <_Z17hashMapAddElementP7HashMap8string_t+0x1e7>
    165e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    165f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1660:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1662:	53                   	push   rbx
    1663:	74 35                	je     169a <_Z17hashMapAddElementP7HashMap8string_t+0x1ba>
    1665:	72 61                	jb     16c8 <_Z17hashMapAddElementP7HashMap8string_t+0x1e8>
    1667:	74 69                	je     16d2 <_Z17hashMapAddElementP7HashMap8string_t+0x1f2>
    1669:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    166a:	49                   	rex.WB
    166b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    166d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1670:	6c                   	ins    BYTE PTR es:[rdi],dx
    1671:	31 30                	xor    DWORD PTR [rax],esi
    1673:	30 30                	xor    BYTE PTR [rax],dh
    1675:	30 30                	xor    BYTE PTR [rax],dh
    1677:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    167a:	45                   	rex.RB
    167b:	43 32 49 6c          	rex.XB xor cl,BYTE PTR [r9+0x6c]
    167f:	76 45                	jbe    16c6 <_Z17hashMapAddElementP7HashMap8string_t+0x1e6>
    1681:	45 52                	rex.RB push r10
    1683:	4b 54                	rex.WXB push r12
    1685:	5f                   	pop    rdi
    1686:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1689:	53                   	push   rbx
    168a:	74 36                	je     16c2 <_Z17hashMapAddElementP7HashMap8string_t+0x1e2>
    168c:	72 65                	jb     16f3 <_Z17hashMapAddElementP7HashMap8string_t+0x213>
    168e:	6d                   	ins    DWORD PTR es:[rdi],dx
    168f:	71 75                	jno    1706 <_Z17hashMapAddElementP7HashMap8string_t+0x226>
    1691:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1692:	65 65 50             	gs gs push rax
    1695:	69 00 5f 5a 4e 53    	imul   eax,DWORD PTR [rax],0x534e5a5f
    169b:	74 36                	je     16d3 <_Z17hashMapAddElementP7HashMap8string_t+0x1f3>
    169d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16a3:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16a7:	61                   	(bad)
    16a8:	74 69                	je     1713 <_Z17hashMapAddElementP7HashMap8string_t+0x233>
    16aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16ac:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    16ae:	53                   	push   rbx
    16af:	74 35                	je     16e6 <_Z17hashMapAddElementP7HashMap8string_t+0x206>
    16b1:	72 61                	jb     1714 <_Z17hashMapAddElementP7HashMap8string_t+0x234>
    16b3:	74 69                	je     171e <_Z17hashMapAddElementP7HashMap8string_t+0x23e>
    16b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16b6:	49                   	rex.WB
    16b7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    16b9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    16bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    16bd:	31 30                	xor    DWORD PTR [rax],esi
    16bf:	30 30                	xor    BYTE PTR [rax],dh
    16c1:	30 30                	xor    BYTE PTR [rax],dh
    16c3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    16c6:	45 70 70             	rex.RB jo 1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    16c9:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    16d0:	39 6e 65             	cmp    DWORD PTR [rsi+0x65],ebp
    16d3:	61                   	(bad)
    16d4:	72 62                	jb     1738 <_Z17hashMapAddElementP7HashMap8string_t+0x258>
    16d6:	79 69                	jns    1741 <_Z17hashMapAddElementP7HashMap8string_t+0x261>
    16d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d9:	74 66                	je     1741 <_Z17hashMapAddElementP7HashMap8string_t+0x261>
    16db:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16de:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    16e5:	77 73                	ja     175a <_Z17hashMapAddElementP7HashMap8string_t+0x27a>
    16e7:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    16ea:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    16ee:	4e                   	rex.WRX
    16ef:	4b 53                	rex.WXB push r11
    16f1:	74 36                	je     1729 <_Z17hashMapAddElementP7HashMap8string_t+0x249>
    16f3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16f9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16fd:	61                   	(bad)
    16fe:	74 69                	je     1769 <_Z17hashMapAddElementP7HashMap8string_t+0x289>
    1700:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1701:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1702:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1704:	53                   	push   rbx
    1705:	74 35                	je     173c <_Z17hashMapAddElementP7HashMap8string_t+0x25c>
    1707:	72 61                	jb     176a <_Z17hashMapAddElementP7HashMap8string_t+0x28a>
    1709:	74 69                	je     1774 <_Z17hashMapAddElementP7HashMap8string_t+0x294>
    170b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    170c:	49                   	rex.WB
    170d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    170f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1712:	6c                   	ins    BYTE PTR es:[rdi],dx
    1713:	31 30                	xor    DWORD PTR [rax],esi
    1715:	30 30                	xor    BYTE PTR [rax],dh
    1717:	30 30                	xor    BYTE PTR [rax],dh
    1719:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    171c:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1722:	74 45                	je     1769 <_Z17hashMapAddElementP7HashMap8string_t+0x289>
    1724:	76 00                	jbe    1726 <_Z17hashMapAddElementP7HashMap8string_t+0x246>
    1726:	67 70 5f             	addr32 jo 1788 <_Z17hashMapAddElementP7HashMap8string_t+0x2a8>
    1729:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    172a:	66 66 73 65          	data16 data16 jae 1793 <_Z17hashMapPopElementP7HashMap8string_t+0x3>
    172e:	74 00                	je     1730 <_Z17hashMapAddElementP7HashMap8string_t+0x250>
    1730:	5f                   	pop    rdi
    1731:	5f                   	pop    rdi
    1732:	72 68                	jb     179c <_Z17hashMapPopElementP7HashMap8string_t+0xc>
    1734:	73 00                	jae    1736 <_Z17hashMapAddElementP7HashMap8string_t+0x256>
    1736:	77 63                	ja     179b <_Z17hashMapPopElementP7HashMap8string_t+0xb>
    1738:	73 6e                	jae    17a8 <_Z17hashMapPopElementP7HashMap8string_t+0x18>
    173a:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    173d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1740:	53                   	push   rbx
    1741:	74 34                	je     1777 <_Z17hashMapAddElementP7HashMap8string_t+0x297>
    1743:	73 69                	jae    17ae <_Z17hashMapPopElementP7HashMap8string_t+0x1e>
    1745:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1746:	68 66 00 5f 49       	push   0x495f0066
    174b:	4f 5f                	rex.WRXB pop r15
    174d:	6c                   	ins    BYTE PTR es:[rdi],dx
    174e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    174f:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    1752:	74 00                	je     1754 <_Z17hashMapAddElementP7HashMap8string_t+0x274>
    1754:	5f                   	pop    rdi
    1755:	5f                   	pop    rdi
    1756:	75 69                	jne    17c1 <_Z17hashMapPopElementP7HashMap8string_t+0x31>
    1758:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1759:	74 31                	je     178c <_Z17hashMapAddElementP7HashMap8string_t+0x2ac>
    175b:	36 5f                	ss pop rdi
    175d:	74 00                	je     175f <_Z17hashMapAddElementP7HashMap8string_t+0x27f>
    175f:	77 6d                	ja     17ce <_Z17hashMapPopElementP7HashMap8string_t+0x3e>
    1761:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1763:	6d                   	ins    DWORD PTR es:[rdi],dx
    1764:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1765:	76 65                	jbe    17cc <_Z17hashMapPopElementP7HashMap8string_t+0x3c>
    1767:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    176a:	53                   	push   rbx
    176b:	74 36                	je     17a3 <_Z17hashMapPopElementP7HashMap8string_t+0x13>
    176d:	6c                   	ins    BYTE PTR es:[rdi],dx
    176e:	72 6f                	jb     17df <_Z17hashMapPopElementP7HashMap8string_t+0x4f>
    1770:	75 6e                	jne    17e0 <_Z17hashMapPopElementP7HashMap8string_t+0x50>
    1772:	64 66 00 6c 6f 67    	data16 add BYTE PTR fs:[rdi+rbp*2+0x67],ch
    1778:	31 30                	xor    DWORD PTR [rax],esi
    177a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    177d:	4e 53                	rex.WRX push rbx
    177f:	74 36                	je     17b7 <_Z17hashMapPopElementP7HashMap8string_t+0x27>
    1781:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1784:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1785:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1786:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1787:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    178a:	32 31                	xor    dh,BYTE PTR [rcx]
    178c:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    178f:	65 61                	gs (bad)
    1791:	64 79 5f             	fs jns 17f3 <_Z17hashMapPopElementP7HashMap8string_t+0x63>
    1794:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1798:	6b 39 69             	imul   edi,DWORD PTR [rcx],0x69
    179b:	73 5f                	jae    17fc <_Z17hashMapPopElementP7HashMap8string_t+0x6c>
    179d:	73 74                	jae    1813 <_Z17hashMapPopElementP7HashMap8string_t+0x83>
    179f:	65 61                	gs (bad)
    17a1:	64 79 45             	fs jns 17e9 <_Z17hashMapPopElementP7HashMap8string_t+0x59>
    17a4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17a7:	4e 53                	rex.WRX push rbx
    17a9:	74 36                	je     17e1 <_Z17hashMapPopElementP7HashMap8string_t+0x51>
    17ab:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    17ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17b1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    17b5:	61                   	(bad)
    17b6:	74 69                	je     1821 <_Z17hashMapPopElementP7HashMap8string_t+0x91>
    17b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17ba:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    17bc:	53                   	push   rbx
    17bd:	74 35                	je     17f4 <_Z17hashMapPopElementP7HashMap8string_t+0x64>
    17bf:	72 61                	jb     1822 <_Z17hashMapPopElementP7HashMap8string_t+0x92>
    17c1:	74 69                	je     182c <_Z17hashMapPopElementP7HashMap8string_t+0x9c>
    17c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17c4:	49                   	rex.WB
    17c5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    17c7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    17ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    17cb:	31 30                	xor    DWORD PTR [rax],esi
    17cd:	30 30                	xor    BYTE PTR [rax],dh
    17cf:	30 30                	xor    BYTE PTR [rax],dh
    17d1:	30 30                	xor    BYTE PTR [rax],dh
    17d3:	30 30                	xor    BYTE PTR [rax],dh
    17d5:	45                   	rex.RB
    17d6:	45                   	rex.RB
    17d7:	45                   	rex.RB
    17d8:	43 34 45             	rex.XB xor al,0x45
    17db:	76 00                	jbe    17dd <_Z17hashMapPopElementP7HashMap8string_t+0x4d>
    17dd:	5f                   	pop    rdi
    17de:	6d                   	ins    DWORD PTR es:[rdi],dx
    17df:	6d                   	ins    DWORD PTR es:[rdi],dx
    17e0:	5f                   	pop    rdi
    17e1:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    17e4:	33 32                	xor    esi,DWORD PTR [rdx]
    17e6:	55                   	push   rbp
    17e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17e8:	72 6f                	jb     1859 <_Z17hashMapPopElementP7HashMap8string_t+0xc9>
    17ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    17eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    17ec:	5f                   	pop    rdi
    17ed:	66 69 6c 65 73 00 77 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7700
    17f4:	6d                   	ins    DWORD PTR es:[rdi],dx
    17f5:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    17f7:	73 65                	jae    185e <_Z17hashMapPopElementP7HashMap8string_t+0xce>
    17f9:	74 00                	je     17fb <_Z17hashMapPopElementP7HashMap8string_t+0x6b>
    17fb:	74 6d                	je     186a <_Z20hashMapSearchElementP7HashMap8string_t+0xa>
    17fd:	5f                   	pop    rdi
    17fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    17ff:	69 6e 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74535a5f
    1806:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    1809:	70 79                	jo     1884 <_Z20hashMapSearchElementP7HashMap8string_t+0x24>
    180b:	73 69                	jae    1876 <_Z20hashMapSearchElementP7HashMap8string_t+0x16>
    180d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    180f:	65 65 00 5f 49       	gs add BYTE PTR gs:[rdi+0x49],bl
    1814:	4f 5f                	rex.WRXB pop r15
    1816:	72 65                	jb     187d <_Z20hashMapSearchElementP7HashMap8string_t+0x1d>
    1818:	61                   	(bad)
    1819:	64 5f                	fs pop rdi
    181b:	70 74                	jo     1891 <_Z20hashMapSearchElementP7HashMap8string_t+0x31>
    181d:	72 00                	jb     181f <_Z17hashMapPopElementP7HashMap8string_t+0x8f>
    181f:	5f                   	pop    rdi
    1820:	5a                   	pop    rdx
    1821:	53                   	push   rbx
    1822:	74 38                	je     185c <_Z17hashMapPopElementP7HashMap8string_t+0xcc>
    1824:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1827:	79 73                	jns    189c <_Z20hashMapSearchElementP7HashMap8string_t+0x3c>
    1829:	69 67 6e 66 66 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f006666
    1830:	5a                   	pop    rdx
    1831:	53                   	push   rbx
    1832:	74 35                	je     1869 <_Z20hashMapSearchElementP7HashMap8string_t+0x9>
    1834:	69 73 69 6e 66 66 00 	imul   esi,DWORD PTR [rbx+0x69],0x66666e
    183b:	6d                   	ins    DWORD PTR es:[rdi],dx
    183c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    183d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    183e:	5f                   	pop    rdi
    183f:	74 68                	je     18a9 <_Z20hashMapSearchElementP7HashMap8string_t+0x49>
    1841:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1842:	75 73                	jne    18b7 <_Z20hashMapSearchElementP7HashMap8string_t+0x57>
    1844:	61                   	(bad)
    1845:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1846:	64 73 5f             	fs jae 18a8 <_Z20hashMapSearchElementP7HashMap8string_t+0x48>
    1849:	73 65                	jae    18b0 <_Z20hashMapSearchElementP7HashMap8string_t+0x50>
    184b:	70 00                	jo     184d <_Z17hashMapPopElementP7HashMap8string_t+0xbd>
    184d:	69 73 6c 65 73 73 67 	imul   esi,DWORD PTR [rbx+0x6c],0x67737365
    1854:	72 65                	jb     18bb <_Z20hashMapSearchElementP7HashMap8string_t+0x5b>
    1856:	61                   	(bad)
    1857:	74 65                	je     18be <_Z20hashMapSearchElementP7HashMap8string_t+0x5e>
    1859:	72 00                	jb     185b <_Z17hashMapPopElementP7HashMap8string_t+0xcb>
    185b:	75 6e                	jne    18cb <_Z20hashMapSearchElementP7HashMap8string_t+0x6b>
    185d:	67 65 74 77          	addr32 gs je 18d8 <_Z20hashMapSearchElementP7HashMap8string_t+0x78>
    1861:	63 00                	movsxd eax,DWORD PTR [rax]
    1863:	66 70 5f             	data16 jo 18c5 <_Z20hashMapSearchElementP7HashMap8string_t+0x65>
    1866:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1867:	66 66 73 65          	data16 data16 jae 18d0 <_Z20hashMapSearchElementP7HashMap8string_t+0x70>
    186b:	74 00                	je     186d <_Z20hashMapSearchElementP7HashMap8string_t+0xd>
    186d:	66 74 65             	data16 je 18d5 <_Z20hashMapSearchElementP7HashMap8string_t+0x75>
    1870:	6c                   	ins    BYTE PTR es:[rdi],dx
    1871:	6c                   	ins    BYTE PTR es:[rdi],dx
    1872:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1875:	53                   	push   rbx
    1876:	74 34                	je     18ac <_Z20hashMapSearchElementP7HashMap8string_t+0x4c>
    1878:	61                   	(bad)
    1879:	73 69                	jae    18e4 <_Z20hashMapSearchElementP7HashMap8string_t+0x84>
    187b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    187c:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1880:	53                   	push   rbx
    1881:	74 34                	je     18b7 <_Z20hashMapSearchElementP7HashMap8string_t+0x57>
    1883:	61                   	(bad)
    1884:	73 69                	jae    18ef <_Z20hashMapSearchElementP7HashMap8string_t+0x8f>
    1886:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1887:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    188b:	53                   	push   rbx
    188c:	74 33                	je     18c1 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    188e:	66 6d                	ins    WORD PTR es:[rdi],dx
    1890:	61                   	(bad)
    1891:	66 66 66 00 5f 5a    	data16 data16 data16 add BYTE PTR [rdi+0x5a],bl
    1897:	4e 53                	rex.WRX push rbx
    1899:	74 36                	je     18d1 <_Z20hashMapSearchElementP7HashMap8string_t+0x71>
    189b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    189e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    189f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18a1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    18a5:	61                   	(bad)
    18a6:	74 69                	je     1911 <_Z11hashMapDtorP7HashMap+0x21>
    18a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18aa:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    18ac:	53                   	push   rbx
    18ad:	74 35                	je     18e4 <_Z20hashMapSearchElementP7HashMap8string_t+0x84>
    18af:	72 61                	jb     1912 <_Z11hashMapDtorP7HashMap+0x22>
    18b1:	74 69                	je     191c <_Z11hashMapDtorP7HashMap+0x2c>
    18b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18b4:	49                   	rex.WB
    18b5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    18b7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    18ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    18bb:	31 30                	xor    DWORD PTR [rax],esi
    18bd:	30 30                	xor    BYTE PTR [rax],dh
    18bf:	30 30                	xor    BYTE PTR [rax],dh
    18c1:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    18c4:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    18c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    18c7:	45 76 00             	rex.RB jbe 18ca <_Z20hashMapSearchElementP7HashMap8string_t+0x6a>
    18ca:	6d                   	ins    DWORD PTR es:[rdi],dx
    18cb:	62 72 6c 65 6e       	(bad)
    18d0:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    18d3:	72 63                	jb     1938 <_Z11hashMapDtorP7HashMap+0x48>
    18d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d6:	70 00                	jo     18d8 <_Z20hashMapSearchElementP7HashMap8string_t+0x78>
    18d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18d9:	70 65                	jo     1940 <_Z11hashMapDtorP7HashMap+0x50>
    18db:	72 61                	jb     193e <_Z11hashMapDtorP7HashMap+0x4e>
    18dd:	74 6f                	je     194e <_Z11hashMapDtorP7HashMap+0x5e>
    18df:	72 2d                	jb     190e <_Z11hashMapDtorP7HashMap+0x1e>
    18e1:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    18e4:	67 61                	addr32 (bad)
    18e6:	74 69                	je     1951 <_Z11hashMapDtorP7HashMap+0x61>
    18e8:	76 65                	jbe    194f <_Z11hashMapDtorP7HashMap+0x5f>
    18ea:	5f                   	pop    rdi
    18eb:	73 69                	jae    1956 <_Z11hashMapDtorP7HashMap+0x66>
    18ed:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    18ef:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    18f3:	31 70 00             	xor    DWORD PTR [rax+0x0],esi
    18f6:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    18fd:	65 72 00             	gs jb  1900 <_Z11hashMapDtorP7HashMap+0x10>
    1900:	5f                   	pop    rdi
    1901:	52                   	push   rdx
    1902:	65 70 31             	gs jo  1936 <_Z11hashMapDtorP7HashMap+0x46>
    1905:	00 5f 52             	add    BYTE PTR [rdi+0x52],bl
    1908:	65 70 32             	gs jo  193d <_Z11hashMapDtorP7HashMap+0x4d>
    190b:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    190e:	74 5f                	je     196f <_Z17hashMapDebugPrintP7HashMap+0xf>
    1910:	70 5f                	jo     1971 <_Z17hashMapDebugPrintP7HashMap+0x11>
    1912:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    1915:	70 72                	jo     1989 <_Z17hashMapDebugPrintP7HashMap+0x29>
    1917:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    191b:	65 73 00             	gs jae 191e <_Z11hashMapDtorP7HashMap+0x2e>
    191e:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1920:	61                   	(bad)
    1921:	70 73                	jo     1996 <_Z17hashMapDebugPrintP7HashMap+0x36>
    1923:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    1928:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    192f:	5f                   	pop    rdi
    1930:	74 6f                	je     19a1 <_Z17hashMapDebugPrintP7HashMap+0x41>
    1932:	5f                   	pop    rdi
    1933:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1936:	72 73                	jb     19ab <_Z17hashMapDebugPrintP7HashMap+0x4b>
    1938:	5f                   	pop    rdi
    1939:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    1940:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1942:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    1947:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    194e:	76 73                	jbe    19c3 <_Z17hashMapDebugPrintP7HashMap+0x63>
    1950:	77 73                	ja     19c5 <_Z17hashMapDebugPrintP7HashMap+0x65>
    1952:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1955:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1959:	53                   	push   rbx
    195a:	74 31                	je     198d <_Z17hashMapDebugPrintP7HashMap+0x2d>
    195c:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    195f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1960:	65 73 73             	gs jae 19d6 <_Z17hashMapDebugPrintP7HashMap+0x76>
    1963:	67 72 65             	addr32 jb 19cb <_Z17hashMapDebugPrintP7HashMap+0x6b>
    1966:	61                   	(bad)
    1967:	74 65                	je     19ce <_Z17hashMapDebugPrintP7HashMap+0x6e>
    1969:	72 64                	jb     19cf <_Z17hashMapDebugPrintP7HashMap+0x6f>
    196b:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
    196f:	61                   	(bad)
    1970:	72 6b                	jb     19dd <_Z17hashMapDebugPrintP7HashMap+0x7d>
    1972:	65 72 73             	gs jb  19e8 <_Z17hashMapDebugPrintP7HashMap+0x88>
    1975:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1978:	53                   	push   rbx
    1979:	74 35                	je     19b0 <_Z17hashMapDebugPrintP7HashMap+0x50>
    197b:	65 78 70             	gs js  19ee <_Z17hashMapDebugPrintP7HashMap+0x8e>
    197e:	6d                   	ins    DWORD PTR es:[rdi],dx
    197f:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    1982:	5f                   	pop    rdi
    1983:	5a                   	pop    rdx
    1984:	53                   	push   rbx
    1985:	74 35                	je     19bc <_Z17hashMapDebugPrintP7HashMap+0x5c>
    1987:	65 78 70             	gs js  19fa <_Z17hashMapDebugPrintP7HashMap+0x9a>
    198a:	6d                   	ins    DWORD PTR es:[rdi],dx
    198b:	31 66 00             	xor    DWORD PTR [rsi+0x0],esp
    198e:	74 6d                	je     19fd <_Z17hashMapDebugPrintP7HashMap+0x9d>
    1990:	5f                   	pop    rdi
    1991:	6d                   	ins    DWORD PTR es:[rdi],dx
    1992:	64 61                	fs (bad)
    1994:	79 00                	jns    1996 <_Z17hashMapDebugPrintP7HashMap+0x36>
    1996:	5f                   	pop    rdi
    1997:	5a                   	pop    rdx
    1998:	53                   	push   rbx
    1999:	74 33                	je     19ce <_Z17hashMapDebugPrintP7HashMap+0x6e>
    199b:	73 69                	jae    1a06 <_Z17hashMapDebugPrintP7HashMap+0xa6>
    199d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    199e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    19a2:	53                   	push   rbx
    19a3:	74 33                	je     19d8 <_Z17hashMapDebugPrintP7HashMap+0x78>
    19a5:	73 69                	jae    1a10 <_Z17hashMapDebugPrintP7HashMap+0xb0>
    19a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19a8:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    19ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    19ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19ae:	61                   	(bad)
    19af:	74 33                	je     19e4 <_Z17hashMapDebugPrintP7HashMap+0x84>
    19b1:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    19b4:	5f                   	pop    rdi
    19b5:	47 5f                	rex.RXB pop r15
    19b7:	66 70 6f             	data16 jo 1a29 <_Z15crc32HashString8string_t+0x9>
    19ba:	73 5f                	jae    1a1b <_Z17hashMapDebugPrintP7HashMap+0xbb>
    19bc:	74 00                	je     19be <_Z17hashMapDebugPrintP7HashMap+0x5e>
    19be:	5f                   	pop    rdi
    19bf:	5f                   	pop    rdi
    19c0:	75 69                	jne    1a2b <_Z15crc32HashString8string_t+0xb>
    19c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19c3:	74 5f                	je     1a24 <_Z15crc32HashString8string_t+0x4>
    19c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    19c6:	65 61                	gs (bad)
    19c8:	73 74                	jae    1a3e <_Z15crc32HashString8string_t+0x1e>
    19ca:	36 34 5f             	ss xor al,0x5f
    19cd:	74 00                	je     19cf <_Z17hashMapDebugPrintP7HashMap+0x6f>
    19cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    19d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19d1:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    19d4:	74 69                	je     1a3f <_Z15crc32HashString8string_t+0x1f>
    19d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    19d7:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    19db:	73 63                	jae    1a40 <_Z15crc32HashString8string_t+0x20>
    19dd:	70 79                	jo     1a58 <_Z15crc32HashString8string_t+0x38>
    19df:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19e2:	53                   	push   rbx
    19e3:	74 37                	je     1a1c <_Z17hashMapDebugPrintP7HashMap+0xbc>
    19e5:	73 63                	jae    1a4a <_Z15crc32HashString8string_t+0x2a>
    19e7:	61                   	(bad)
    19e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    19e9:	62 6c 6e             	(bad)  {k5}
    19ec:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    19ee:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    19f1:	77 70                	ja     1a63 <_Z15crc32HashString8string_t+0x43>
    19f3:	72 69                	jb     1a5e <_Z15crc32HashString8string_t+0x3e>
    19f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19f6:	74 66                	je     1a5e <_Z15crc32HashString8string_t+0x3e>
    19f8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19fb:	4e 53                	rex.WRX push rbx
    19fd:	74 36                	je     1a35 <_Z15crc32HashString8string_t+0x15>
    19ff:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1a02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a03:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a04:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a05:	31 33                	xor    DWORD PTR [rbx],esi
    1a07:	64 75 72             	fs jne 1a7c <_Z15crc32HashString8string_t+0x5c>
    1a0a:	61                   	(bad)
    1a0b:	74 69                	je     1a76 <_Z15crc32HashString8string_t+0x56>
    1a0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a0f:	5f                   	pop    rdi
    1a10:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    1a13:	74 49                	je     1a5e <_Z15crc32HashString8string_t+0x3e>
    1a15:	4e 53                	rex.WRX push rbx
    1a17:	5f                   	pop    rdi
    1a18:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1a1c:	61                   	(bad)
    1a1d:	74 69                	je     1a88 <_Z15crc32HashString8string_t+0x68>
    1a1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a20:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a21:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1a23:	53                   	push   rbx
    1a24:	74 35                	je     1a5b <_Z15crc32HashString8string_t+0x3b>
    1a26:	72 61                	jb     1a89 <_Z15crc32HashString8string_t+0x69>
    1a28:	74 69                	je     1a93 <_Z15crc32HashString8string_t+0x73>
    1a2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a2b:	49                   	rex.WB
    1a2c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a2e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a31:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a32:	31 30                	xor    DWORD PTR [rax],esi
    1a34:	30 30                	xor    BYTE PTR [rax],dh
    1a36:	30 30                	xor    BYTE PTR [rax],dh
    1a38:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1a3b:	45                   	rex.RB
    1a3c:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1a3e:	53                   	push   rbx
    1a3f:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    1a42:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a44:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a47:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a48:	31 30                	xor    DWORD PTR [rax],esi
    1a4a:	30 30                	xor    BYTE PTR [rax],dh
    1a4c:	30 30                	xor    BYTE PTR [rax],dh
    1a4e:	30 30                	xor    BYTE PTR [rax],dh
    1a50:	30 30                	xor    BYTE PTR [rax],dh
    1a52:	45                   	rex.RB
    1a53:	45                   	rex.RB
    1a54:	45                   	rex.RB
    1a55:	45                   	rex.RB
    1a56:	4e 53                	rex.WRX push rbx
    1a58:	74 39                	je     1a93 <_Z15crc32HashString8string_t+0x73>
    1a5a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1a5c:	61                   	(bad)
    1a5d:	62                   	(bad)
    1a5e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a5f:	65 5f                	gs pop rdi
    1a61:	69 66 49 58 73 72 4e 	imul   esp,DWORD PTR [rsi+0x49],0x4e727358
    1a68:	53                   	push   rbx
    1a69:	5f                   	pop    rdi
    1a6a:	31 33                	xor    DWORD PTR [rbx],esi
    1a6c:	5f                   	pop    rdi
    1a6d:	5f                   	pop    rdi
    1a6e:	69 73 5f 64 75 72 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61727564
    1a75:	74 69                	je     1ae0 <_Z15crc32HashString8string_t+0xc0>
    1a77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a79:	49 54                	rex.WB push r12
    1a7b:	5f                   	pop    rdi
    1a7c:	45                   	rex.RB
    1a7d:	45 35 76 61 6c 75    	rex.RB xor eax,0x756c6176
    1a83:	65 45 53             	gs rex.RB push r11
    1a86:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    1a89:	34 74                	xor    al,0x74
    1a8b:	79 70                	jns    1afd <_Z15crc32HashString8string_t+0xdd>
    1a8d:	65 45 52             	gs rex.RB push r10
    1a90:	4b                   	rex.WXB
    1a91:	4e 53                	rex.WRX push rbx
    1a93:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    1a96:	54                   	push   rsp
    1a97:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    1a9a:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    1a9d:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1aa1:	53                   	push   rbx
    1aa2:	74 33                	je     1ad7 <_Z15crc32HashString8string_t+0xb7>
    1aa4:	65 78 70             	gs js  1b17 <_Z15crc32HashString8string_t+0xf7>
    1aa7:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1aab:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ab2:	76 66                	jbe    1b1a <_Z15crc32HashString8string_t+0xfa>
    1ab4:	77 73                	ja     1b29 <_Z15crc32HashString8string_t+0x109>
    1ab6:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1ab9:	66 00 64 61 74       	data16 add BYTE PTR [rcx+riz*2+0x74],ah
    1abe:	61                   	(bad)
    1abf:	5f                   	pop    rdi
    1ac0:	61                   	(bad)
    1ac1:	72 72                	jb     1b35 <_Z15crc32HashString8string_t+0x115>
    1ac3:	61                   	(bad)
    1ac4:	79 00                	jns    1ac6 <_Z15crc32HashString8string_t+0xa6>
    1ac6:	5f                   	pop    rdi
    1ac7:	5a                   	pop    rdx
    1ac8:	53                   	push   rbx
    1ac9:	74 34                	je     1aff <_Z15crc32HashString8string_t+0xdf>
    1acb:	66 6d                	ins    WORD PTR es:[rdi],dx
    1acd:	61                   	(bad)
    1ace:	78 65                	js     1b35 <_Z15crc32HashString8string_t+0x115>
    1ad0:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1ad4:	4e 53                	rex.WRX push rbx
    1ad6:	74 36                	je     1b0e <_Z15crc32HashString8string_t+0xee>
    1ad8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1adb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1adc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1add:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ade:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1ae2:	61                   	(bad)
    1ae3:	74 69                	je     1b4e <_Z19_mm_crc32HashString8string_t+0xe>
    1ae5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ae7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1ae9:	53                   	push   rbx
    1aea:	74 35                	je     1b21 <_Z15crc32HashString8string_t+0x101>
    1aec:	72 61                	jb     1b4f <_Z19_mm_crc32HashString8string_t+0xf>
    1aee:	74 69                	je     1b59 <_Z19_mm_crc32HashString8string_t+0x19>
    1af0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1af1:	49                   	rex.WB
    1af2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1af4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1af7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1af8:	31 30                	xor    DWORD PTR [rax],esi
    1afa:	30 30                	xor    BYTE PTR [rax],dh
    1afc:	30 30                	xor    BYTE PTR [rax],dh
    1afe:	30 30                	xor    BYTE PTR [rax],dh
    1b00:	30 30                	xor    BYTE PTR [rax],dh
    1b02:	45                   	rex.RB
    1b03:	45                   	rex.RB
    1b04:	45                   	rex.RB
    1b05:	43 34 45             	rex.XB xor al,0x45
    1b08:	52                   	push   rdx
    1b09:	4b 53                	rex.WXB push r11
    1b0b:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1b0e:	5f                   	pop    rdi
    1b0f:	5a                   	pop    rdx
    1b10:	4e                   	rex.WRX
    1b11:	4b 53                	rex.WXB push r11
    1b13:	74 36                	je     1b4b <_Z19_mm_crc32HashString8string_t+0xb>
    1b15:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b18:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b19:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b1b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b1f:	61                   	(bad)
    1b20:	74 69                	je     1b8b <_Z19_mm_crc32HashString8string_t+0x4b>
    1b22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b24:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b26:	53                   	push   rbx
    1b27:	74 35                	je     1b5e <_Z19_mm_crc32HashString8string_t+0x1e>
    1b29:	72 61                	jb     1b8c <_Z19_mm_crc32HashString8string_t+0x4c>
    1b2b:	74 69                	je     1b96 <_Z25_mm_crc32UnrollHashString8string_t+0x6>
    1b2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b2e:	49                   	rex.WB
    1b2f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b31:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b34:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b35:	31 30                	xor    DWORD PTR [rax],esi
    1b37:	30 30                	xor    BYTE PTR [rax],dh
    1b39:	30 30                	xor    BYTE PTR [rax],dh
    1b3b:	30 30                	xor    BYTE PTR [rax],dh
    1b3d:	30 30                	xor    BYTE PTR [rax],dh
    1b3f:	45                   	rex.RB
    1b40:	45                   	rex.RB
    1b41:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1b47:	74 45                	je     1b8e <_Z19_mm_crc32HashString8string_t+0x4e>
    1b49:	76 00                	jbe    1b4b <_Z19_mm_crc32HashString8string_t+0xb>
    1b4b:	5f                   	pop    rdi
    1b4c:	5a                   	pop    rdx
    1b4d:	53                   	push   rbx
    1b4e:	74 31                	je     1b81 <_Z19_mm_crc32HashString8string_t+0x41>
    1b50:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1b53:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b54:	65 73 73             	gs jae 1bca <_Z25_mm_crc32UnrollHashString8string_t+0x3a>
    1b57:	67 72 65             	addr32 jb 1bbf <_Z25_mm_crc32UnrollHashString8string_t+0x2f>
    1b5a:	61                   	(bad)
    1b5b:	74 65                	je     1bc2 <_Z25_mm_crc32UnrollHashString8string_t+0x32>
    1b5d:	72 65                	jb     1bc4 <_Z25_mm_crc32UnrollHashString8string_t+0x34>
    1b5f:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
    1b63:	69 64 65 00 69 73 5f 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x735f7369
    1b6a:	73 
    1b6b:	74 65                	je     1bd2 <_Z17murmur2HashString8string_t+0x2>
    1b6d:	61                   	(bad)
    1b6e:	64 79 00             	fs jns 1b71 <_Z19_mm_crc32HashString8string_t+0x31>
    1b71:	74 67                	je     1bda <_Z17murmur2HashString8string_t+0xa>
    1b73:	61                   	(bad)
    1b74:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b75:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b76:	61                   	(bad)
    1b77:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1b7a:	53                   	push   rbx
    1b7b:	74 37                	je     1bb4 <_Z25_mm_crc32UnrollHashString8string_t+0x24>
    1b7d:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b7e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b7f:	72 6f                	jb     1bf0 <_Z17murmur2HashString8string_t+0x20>
    1b81:	75 6e                	jne    1bf1 <_Z17murmur2HashString8string_t+0x21>
    1b83:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1b88:	53                   	push   rbx
    1b89:	74 37                	je     1bc2 <_Z25_mm_crc32UnrollHashString8string_t+0x32>
    1b8b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b8d:	72 6f                	jb     1bfe <_Z17murmur2HashString8string_t+0x2e>
    1b8f:	75 6e                	jne    1bff <_Z17murmur2HashString8string_t+0x2f>
    1b91:	64 66 00 74 6d 5f    	data16 add BYTE PTR fs:[rbp+rbp*2+0x5f],dh
    1b97:	73 65                	jae    1bfe <_Z17murmur2HashString8string_t+0x2e>
    1b99:	63 00                	movsxd eax,DWORD PTR [rax]
    1b9b:	5f                   	pop    rdi
    1b9c:	5f                   	pop    rdi
    1b9d:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ba4:	77 63                	ja     1c09 <_Z17murmur2HashString8string_t+0x39>
    1ba6:	73 74                	jae    1c1c <_Z17murmur2HashString8string_t+0x4c>
    1ba8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ba9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1baa:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bad:	53                   	push   rbx
    1bae:	74 37                	je     1be7 <_Z17murmur2HashString8string_t+0x17>
    1bb0:	73 63                	jae    1c15 <_Z17murmur2HashString8string_t+0x45>
    1bb2:	61                   	(bad)
    1bb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bb4:	62 6c 6e             	(bad)  {k6}
    1bb7:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1bb9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bbc:	53                   	push   rbx
    1bbd:	74 39                	je     1bf8 <_Z17murmur2HashString8string_t+0x28>
    1bbf:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1bc6:	65 72 64             	gs jb  1c2d <_Z17murmur2HashString8string_t+0x5d>
    1bc9:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1bcd:	70 73                	jo     1c42 <_Z17murmur2HashString8string_t+0x72>
    1bcf:	74 6c                	je     1c3d <_Z17murmur2HashString8string_t+0x6d>
    1bd1:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    1bd4:	73 6e                	jae    1c44 <_Z17murmur2HashString8string_t+0x74>
    1bd6:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1bd9:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    1bdc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bde:	72 00                	jb     1be0 <_Z17murmur2HashString8string_t+0x10>
    1be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be1:	70 65                	jo     1c48 <_Z17murmur2HashString8string_t+0x78>
    1be3:	72 61                	jb     1c46 <_Z17murmur2HashString8string_t+0x76>
    1be5:	74 6f                	je     1c56 <_Z17murmur2HashString8string_t+0x86>
    1be7:	72 2d                	jb     1c16 <_Z17murmur2HashString8string_t+0x46>
    1be9:	3c 73                	cmp    al,0x73
    1beb:	74 64                	je     1c51 <_Z17murmur2HashString8string_t+0x81>
    1bed:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bef:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1bf2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1bf4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf5:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bf7:	5f                   	pop    rdi
    1bf8:	56                   	push   rsi
    1bf9:	32 3a                	xor    bh,BYTE PTR [rdx]
    1bfb:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    1bfe:	65 61                	gs (bad)
    1c00:	64 79 5f             	fs jns 1c62 <_Z17murmur2HashString8string_t+0x92>
    1c03:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1c07:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    1c0b:	74 64                	je     1c71 <_Z17murmur2HashString8string_t+0xa1>
    1c0d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c0f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c15:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c17:	64 75 72             	fs jne 1c8c <_Z13sumHashString8string_t+0xc>
    1c1a:	61                   	(bad)
    1c1b:	74 69                	je     1c86 <_Z13sumHashString8string_t+0x6>
    1c1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c1f:	3c 6c                	cmp    al,0x6c
    1c21:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c23:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c27:	74 2c                	je     1c55 <_Z17murmur2HashString8string_t+0x85>
    1c29:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c2c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c2f:	72 61                	jb     1c92 <_Z13sumHashString8string_t+0x12>
    1c31:	74 69                	je     1c9c <_Z13sumHashString8string_t+0x1c>
    1c33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c34:	3c 31                	cmp    al,0x31
    1c36:	2c 20                	sub    al,0x20
    1c38:	31 30                	xor    DWORD PTR [rax],esi
    1c3a:	30 30                	xor    BYTE PTR [rax],dh
    1c3c:	30 30                	xor    BYTE PTR [rax],dh
    1c3e:	30 30                	xor    BYTE PTR [rax],dh
    1c40:	30 30                	xor    BYTE PTR [rax],dh
    1c42:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c45:	2c 20                	sub    al,0x20
    1c47:	73 74                	jae    1cbd <_Z13sumHashString8string_t+0x3d>
    1c49:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c4c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c4f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c50:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c52:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c54:	64 75 72             	fs jne 1cc9 <_Z13sumHashString8string_t+0x49>
    1c57:	61                   	(bad)
    1c58:	74 69                	je     1cc3 <_Z13sumHashString8string_t+0x43>
    1c5a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c5c:	3c 6c                	cmp    al,0x6c
    1c5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c60:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c64:	74 2c                	je     1c92 <_Z13sumHashString8string_t+0x12>
    1c66:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c69:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c6c:	72 61                	jb     1ccf <_Z13sumHashString8string_t+0x4f>
    1c6e:	74 69                	je     1cd9 <_Z13sumHashString8string_t+0x59>
    1c70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c71:	3c 31                	cmp    al,0x31
    1c73:	2c 20                	sub    al,0x20
    1c75:	31 30                	xor    DWORD PTR [rax],esi
    1c77:	30 30                	xor    BYTE PTR [rax],dh
    1c79:	30 30                	xor    BYTE PTR [rax],dh
    1c7b:	30 30                	xor    BYTE PTR [rax],dh
    1c7d:	30 30                	xor    BYTE PTR [rax],dh
    1c7f:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c82:	20 3e                	and    BYTE PTR [rsi],bh
    1c84:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1c88:	32 00                	xor    al,BYTE PTR [rax]
    1c8a:	70 75                	jo     1d01 <_Z13sumHashString8string_t+0x81>
    1c8c:	74 77                	je     1d05 <_Z13sumHashString8string_t+0x85>
    1c8e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1c91:	72 00                	jb     1c93 <_Z13sumHashString8string_t+0x13>
    1c93:	5f                   	pop    rdi
    1c94:	5f                   	pop    rdi
    1c95:	62 75 69 6c 74       	(bad)
    1c9a:	69 6e 5f 73 71 72 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74727173
    1ca1:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1ca5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ca6:	61                   	(bad)
    1ca7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ca8:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1cab:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1cad:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1cb0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1cb3:	53                   	push   rbx
    1cb4:	74 31                	je     1ce7 <_Z13sumHashString8string_t+0x67>
    1cb6:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1cb9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cba:	65 73 73             	gs jae 1d30 <_Z13sumHashString8string_t+0xb0>
    1cbd:	67 72 65             	addr32 jb 1d25 <_Z13sumHashString8string_t+0xa5>
    1cc0:	61                   	(bad)
    1cc1:	74 65                	je     1d28 <_Z13sumHashString8string_t+0xa8>
    1cc3:	72 66                	jb     1d2b <_Z13sumHashString8string_t+0xab>
    1cc5:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1cc9:	53                   	push   rbx
    1cca:	74 35                	je     1d01 <_Z13sumHashString8string_t+0x81>
    1ccc:	66 72 65             	data16 jb 1d34 <_Z13sumHashString8string_t+0xb4>
    1ccf:	78 70                	js     1d41 <_Z13sumHashString8string_t+0xc1>
    1cd1:	65 50                	gs push rax
    1cd3:	69 00 66 61 62 73    	imul   eax,DWORD PTR [rax],0x73626166
    1cd9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cdc:	62 75 69 6c 74       	(bad)
    1ce1:	69 6e 5f 66 77 72 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69727766
    1ce8:	74 65                	je     1d4f <_Z13sumHashString8string_t+0xcf>
    1cea:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1ced:	53                   	push   rbx
    1cee:	74 35                	je     1d25 <_Z13sumHashString8string_t+0xa5>
    1cf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cf1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cf2:	67 31 70 66          	xor    DWORD PTR [eax+0x66],esi
    1cf6:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    1cf9:	74 69                	je     1d64 <_Z13sumHashString8string_t+0xe4>
    1cfb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cfc:	3c 31                	cmp    al,0x31
    1cfe:	2c 20                	sub    al,0x20
    1d00:	31 30                	xor    DWORD PTR [rax],esi
    1d02:	30 30                	xor    BYTE PTR [rax],dh
    1d04:	30 30                	xor    BYTE PTR [rax],dh
    1d06:	30 3e                	xor    BYTE PTR [rsi],bh
    1d08:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d0b:	53                   	push   rbx
    1d0c:	74 39                	je     1d47 <_Z13sumHashString8string_t+0xc7>
    1d0e:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1d15:	65 72 65             	gs jb  1d7d <_Z13sumHashString8string_t+0xfd>
    1d18:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1d1c:	4e                   	rex.WRX
    1d1d:	4b 53                	rex.WXB push r11
    1d1f:	74 36                	je     1d57 <_Z13sumHashString8string_t+0xd7>
    1d21:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1d24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d27:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1d2b:	61                   	(bad)
    1d2c:	74 69                	je     1d97 <_Z13sumHashString8string_t+0x117>
    1d2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d30:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1d32:	53                   	push   rbx
    1d33:	74 35                	je     1d6a <_Z13sumHashString8string_t+0xea>
    1d35:	72 61                	jb     1d98 <_Z13sumHashString8string_t+0x118>
    1d37:	74 69                	je     1da2 <_Z13sumHashString8string_t+0x122>
    1d39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d3a:	49                   	rex.WB
    1d3b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d3d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d40:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d41:	31 30                	xor    DWORD PTR [rax],esi
    1d43:	30 30                	xor    BYTE PTR [rax],dh
    1d45:	30 30                	xor    BYTE PTR [rax],dh
    1d47:	30 30                	xor    BYTE PTR [rax],dh
    1d49:	30 30                	xor    BYTE PTR [rax],dh
    1d4b:	45                   	rex.RB
    1d4c:	45                   	rex.RB
    1d4d:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1d4f:	67 45 76 00          	addr32 rex.RB jbe 1d53 <_Z13sumHashString8string_t+0xd3>
    1d53:	5f                   	pop    rdi
    1d54:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1d56:	61                   	(bad)
    1d57:	67 73 32             	addr32 jae 1d8c <_Z13sumHashString8string_t+0x10c>
    1d5a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d5d:	4e 53                	rex.WRX push rbx
    1d5f:	74 35                	je     1d96 <_Z13sumHashString8string_t+0x116>
    1d61:	72 61                	jb     1dc4 <_Z13sumHashString8string_t+0x144>
    1d63:	74 69                	je     1dce <_Z13sumHashString8string_t+0x14e>
    1d65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d66:	49                   	rex.WB
    1d67:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d69:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d6c:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d6d:	31 30                	xor    DWORD PTR [rax],esi
    1d6f:	30 30                	xor    BYTE PTR [rax],dh
    1d71:	45                   	rex.RB
    1d72:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    1d76:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d77:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1d7b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1d7d:	75 5f                	jne    1dde <_Z13sumHashString8string_t+0x15e>
    1d7f:	64 65 62 75 67 00 5f 	(bad)
    1d86:	5f                   	pop    rdi
    1d87:	75 69                	jne    1df2 <_Z17adler32HashString8string_t+0x2>
    1d89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d8a:	74 5f                	je     1deb <_Z13sumHashString8string_t+0x16b>
    1d8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d8d:	65 61                	gs (bad)
    1d8f:	73 74                	jae    1e05 <_Z17adler32HashString8string_t+0x15>
    1d91:	33 32                	xor    esi,DWORD PTR [rdx]
    1d93:	5f                   	pop    rdi
    1d94:	74 00                	je     1d96 <_Z13sumHashString8string_t+0x116>
    1d96:	5f                   	pop    rdi
    1d97:	5a                   	pop    rdx
    1d98:	53                   	push   rbx
    1d99:	74 34                	je     1dcf <_Z13sumHashString8string_t+0x14f>
    1d9b:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1d9e:	74 65                	je     1e05 <_Z17adler32HashString8string_t+0x15>
    1da0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1da3:	53                   	push   rbx
    1da4:	74 34                	je     1dda <_Z13sumHashString8string_t+0x15a>
    1da6:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1da9:	74 66                	je     1e11 <_Z17adler32HashString8string_t+0x21>
    1dab:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1dae:	4f 5f                	rex.WRXB pop r15
    1db0:	72 65                	jb     1e17 <_Z17adler32HashString8string_t+0x27>
    1db2:	61                   	(bad)
    1db3:	64 5f                	fs pop rdi
    1db5:	62 61 73 65 00       	(bad)
    1dba:	5f                   	pop    rdi
    1dbb:	5f                   	pop    rdi
    1dbc:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1dc3:	77 63                	ja     1e28 <_Z17adler32HashString8string_t+0x38>
    1dc5:	73 74                	jae    1e3b <_Z17adler32HashString8string_t+0x4b>
    1dc7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dc9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dca:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    1dcd:	72 6d                	jb     1e3c <_Z17adler32HashString8string_t+0x4c>
    1dcf:	75 72                	jne    1e43 <_Z17adler32HashString8string_t+0x53>
    1dd1:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    1dd4:	69 6c 65 73 00 5f 5a 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x535a5f00
    1ddb:	53 
    1ddc:	74 34                	je     1e12 <_Z17adler32HashString8string_t+0x22>
    1dde:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ddf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1de0:	64 66 66 50          	fs data16 push ax
    1de4:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1de8:	67 72 65             	addr32 jb 1e50 <_Z17adler32HashString8string_t+0x60>
    1deb:	61                   	(bad)
    1dec:	74 65                	je     1e53 <_Z17adler32HashString8string_t+0x63>
    1dee:	72 65                	jb     1e55 <_Z17adler32HashString8string_t+0x65>
    1df0:	71 75                	jno    1e67 <_Z17adler32HashString8string_t+0x77>
    1df2:	61                   	(bad)
    1df3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1df4:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1df7:	67 5f                	addr32 pop rdi
    1df9:	73 61                	jae    1e5c <_Z17adler32HashString8string_t+0x6c>
    1dfb:	76 65                	jbe    1e62 <_Z17adler32HashString8string_t+0x72>
    1dfd:	5f                   	pop    rdi
    1dfe:	61                   	(bad)
    1dff:	72 65                	jb     1e66 <_Z17adler32HashString8string_t+0x76>
    1e01:	61                   	(bad)
    1e02:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1e05:	53                   	push   rbx
    1e06:	74 35                	je     1e3d <_Z17adler32HashString8string_t+0x4d>
    1e08:	72 6f                	jb     1e79 <_Z13elfHashString8string_t+0x9>
    1e0a:	75 6e                	jne    1e7a <_Z13elfHashString8string_t+0xa>
    1e0c:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1e11:	53                   	push   rbx
    1e12:	74 35                	je     1e49 <_Z17adler32HashString8string_t+0x59>
    1e14:	72 6f                	jb     1e85 <_Z13elfHashString8string_t+0x15>
    1e16:	75 6e                	jne    1e86 <_Z13elfHashString8string_t+0x16>
    1e18:	64 66 00 74 68 69    	data16 add BYTE PTR fs:[rax+rbp*2+0x69],dh
    1e1e:	73 00                	jae    1e20 <_Z17adler32HashString8string_t+0x30>
    1e20:	5f                   	pop    rdi
    1e21:	5a                   	pop    rdx
    1e22:	4e 53                	rex.WRX push rbx
    1e24:	74 35                	je     1e5b <_Z17adler32HashString8string_t+0x6b>
    1e26:	72 61                	jb     1e89 <_Z13elfHashString8string_t+0x19>
    1e28:	74 69                	je     1e93 <_Z13elfHashString8string_t+0x23>
    1e2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e2b:	49                   	rex.WB
    1e2c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e2e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e31:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e32:	31 30                	xor    DWORD PTR [rax],esi
    1e34:	30 30                	xor    BYTE PTR [rax],dh
    1e36:	30 30                	xor    BYTE PTR [rax],dh
    1e38:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e3b:	33 64 65 6e          	xor    esp,DWORD PTR [rbp+riz*2+0x6e]
    1e3f:	45 00 5f 75          	add    BYTE PTR [r15+0x75],r11b
    1e43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e44:	75 73                	jne    1eb9 <_Z13elfHashString8string_t+0x49>
    1e46:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    1e4a:	5f                   	pop    rdi
    1e4b:	5a                   	pop    rdx
    1e4c:	4e 53                	rex.WRX push rbx
    1e4e:	74 36                	je     1e86 <_Z13elfHashString8string_t+0x16>
    1e50:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e56:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e5a:	61                   	(bad)
    1e5b:	74 69                	je     1ec6 <_Z13searchElementP4List8string_t.part.0+0x6>
    1e5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e5f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1e61:	53                   	push   rbx
    1e62:	74 35                	je     1e99 <_Z13elfHashString8string_t+0x29>
    1e64:	72 61                	jb     1ec7 <_Z13searchElementP4List8string_t.part.0+0x7>
    1e66:	74 69                	je     1ed1 <_Z13searchElementP4List8string_t.part.0+0x11>
    1e68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e69:	49                   	rex.WB
    1e6a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e6c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e6f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e70:	31 30                	xor    DWORD PTR [rax],esi
    1e72:	30 30                	xor    BYTE PTR [rax],dh
    1e74:	30 30                	xor    BYTE PTR [rax],dh
    1e76:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e79:	45 70 70             	rex.RB jo 1eec <_Z13searchElementP4List8string_t.part.0+0x2c>
    1e7c:	45 76 00             	rex.RB jbe 1e7f <_Z13elfHashString8string_t+0xf>
    1e7f:	74 6d                	je     1eee <_Z13searchElementP4List8string_t.part.0+0x2e>
    1e81:	5f                   	pop    rdi
    1e82:	67 6d                	ins    DWORD PTR es:[edi],dx
    1e84:	74 6f                	je     1ef5 <_Z8listCtorv+0x5>
    1e86:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1e8b:	4e 53                	rex.WRX push rbx
    1e8d:	74 36                	je     1ec5 <_Z13searchElementP4List8string_t.part.0+0x5>
    1e8f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e95:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e99:	61                   	(bad)
    1e9a:	74 69                	je     1f05 <_Z8listCtorv+0x15>
    1e9c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e9e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1ea0:	53                   	push   rbx
    1ea1:	74 35                	je     1ed8 <_Z13searchElementP4List8string_t.part.0+0x18>
    1ea3:	72 61                	jb     1f06 <_Z8listCtorv+0x16>
    1ea5:	74 69                	je     1f10 <_Z8listCtorv+0x20>
    1ea7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ea8:	49                   	rex.WB
    1ea9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1eab:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1eae:	6c                   	ins    BYTE PTR es:[rdi],dx
    1eaf:	31 30                	xor    DWORD PTR [rax],esi
    1eb1:	30 30                	xor    BYTE PTR [rax],dh
    1eb3:	30 30                	xor    BYTE PTR [rax],dh
    1eb5:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1eb8:	45                   	rex.RB
    1eb9:	43 34 45             	rex.XB xor al,0x45
    1ebc:	76 00                	jbe    1ebe <_Z13elfHashString8string_t+0x4e>
    1ebe:	65 72 66             	gs jb  1f27 <_Z8listCtorv+0x37>
    1ec1:	63 00                	movsxd eax,DWORD PTR [rax]
    1ec3:	74 65                	je     1f2a <_Z8listCtorv+0x3a>
    1ec5:	73 74                	jae    1f3b <_Z8listCtorv+0x4b>
    1ec7:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    1ec9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1eca:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ecb:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    1ed2:	75 69                	jne    1f3d <_Z8listCtorv+0x4d>
    1ed4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ed5:	74 70                	je     1f47 <_Z8listCtorv+0x57>
    1ed7:	74 72                	je     1f4b <_Z8listCtorv+0x5b>
    1ed9:	5f                   	pop    rdi
    1eda:	74 00                	je     1edc <_Z13searchElementP4List8string_t.part.0+0x1c>
    1edc:	5f                   	pop    rdi
    1edd:	5a                   	pop    rdx
    1ede:	53                   	push   rbx
    1edf:	74 34                	je     1f15 <_Z8listCtorv+0x25>
    1ee1:	73 69                	jae    1f4c <_Z8listCtorv+0x5c>
    1ee3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee4:	68 65 00 61 73       	push   0x73610065
    1ee9:	69 6e 68 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x68],0x535a5f00
    1ef0:	74 36                	je     1f28 <_Z8listCtorv+0x38>
    1ef2:	74 67                	je     1f5b <_Z12pushListElemP4List8string_t+0xb>
    1ef4:	61                   	(bad)
    1ef5:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ef6:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ef7:	61                   	(bad)
    1ef8:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1efc:	53                   	push   rbx
    1efd:	74 36                	je     1f35 <_Z8listCtorv+0x45>
    1eff:	74 67                	je     1f68 <_Z12pushListElemP4List8string_t+0x18>
    1f01:	61                   	(bad)
    1f02:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f03:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f04:	61                   	(bad)
    1f05:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1f09:	4e 53                	rex.WRX push rbx
    1f0b:	74 36                	je     1f43 <_Z8listCtorv+0x53>
    1f0d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f13:	31 30                	xor    DWORD PTR [rax],esi
    1f15:	74 69                	je     1f80 <_Z12pushListElemP4List8string_t+0x30>
    1f17:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f18:	65 5f                	gs pop rdi
    1f1a:	70 6f                	jo     1f8b <_Z12pushListElemP4List8string_t+0x3b>
    1f1c:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1f23:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1f26:	32 31                	xor    dh,BYTE PTR [rcx]
    1f28:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1f2b:	65 61                	gs (bad)
    1f2d:	64 79 5f             	fs jns 1f8f <_Z12pushListElemP4List8string_t+0x3f>
    1f30:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1f34:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1f38:	5f                   	pop    rdi
    1f39:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f3d:	61                   	(bad)
    1f3e:	74 69                	je     1fa9 <_Z12pushListElemP4List8string_t+0x59>
    1f40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f42:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f44:	53                   	push   rbx
    1f45:	74 35                	je     1f7c <_Z12pushListElemP4List8string_t+0x2c>
    1f47:	72 61                	jb     1faa <_Z12pushListElemP4List8string_t+0x5a>
    1f49:	74 69                	je     1fb4 <_Z12pushListElemP4List8string_t+0x64>
    1f4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f4c:	49                   	rex.WB
    1f4d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f4f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f52:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f53:	31 30                	xor    DWORD PTR [rax],esi
    1f55:	30 30                	xor    BYTE PTR [rax],dh
    1f57:	30 30                	xor    BYTE PTR [rax],dh
    1f59:	30 30                	xor    BYTE PTR [rax],dh
    1f5b:	30 30                	xor    BYTE PTR [rax],dh
    1f5d:	45                   	rex.RB
    1f5e:	45                   	rex.RB
    1f5f:	45                   	rex.RB
    1f60:	45                   	rex.RB
    1f61:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    1f65:	78 45                	js     1fac <_Z12pushListElemP4List8string_t+0x5c>
    1f67:	76 00                	jbe    1f69 <_Z12pushListElemP4List8string_t+0x19>
    1f69:	5f                   	pop    rdi
    1f6a:	5a                   	pop    rdx
    1f6b:	53                   	push   rbx
    1f6c:	74 35                	je     1fa3 <_Z12pushListElemP4List8string_t+0x53>
    1f6e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f6f:	64 65 78 70          	fs gs js 1fe3 <_Z12pushListElemP4List8string_t+0x93>
    1f73:	66 69 00 5f 5a       	imul   ax,WORD PTR [rax],0x5a5f
    1f78:	4e 53                	rex.WRX push rbx
    1f7a:	74 36                	je     1fb2 <_Z12pushListElemP4List8string_t+0x62>
    1f7c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f7f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f82:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f86:	61                   	(bad)
    1f87:	74 69                	je     1ff2 <_Z12pushListElemP4List8string_t+0xa2>
    1f89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f8a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f8b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f8d:	53                   	push   rbx
    1f8e:	74 35                	je     1fc5 <_Z12pushListElemP4List8string_t+0x75>
    1f90:	72 61                	jb     1ff3 <_Z12pushListElemP4List8string_t+0xa3>
    1f92:	74 69                	je     1ffd <_Z12pushListElemP4List8string_t+0xad>
    1f94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f95:	49                   	rex.WB
    1f96:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f98:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f9b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f9c:	31 30                	xor    DWORD PTR [rax],esi
    1f9e:	30 30                	xor    BYTE PTR [rax],dh
    1fa0:	30 30                	xor    BYTE PTR [rax],dh
    1fa2:	30 30                	xor    BYTE PTR [rax],dh
    1fa4:	30 30                	xor    BYTE PTR [rax],dh
    1fa6:	45                   	rex.RB
    1fa7:	45                   	rex.RB
    1fa8:	45 70 4c             	rex.RB jo 1ff7 <_Z12pushListElemP4List8string_t+0xa7>
    1fab:	45 52                	rex.RB push r10
    1fad:	4b 53                	rex.WXB push r11
    1faf:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1fb2:	5f                   	pop    rdi
    1fb3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb4:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fb5:	64 5f                	fs pop rdi
    1fb7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb8:	66 66 73 65          	data16 data16 jae 2021 <_Z12pushListElemP4List8string_t+0xd1>
    1fbc:	74 00                	je     1fbe <_Z12pushListElemP4List8string_t+0x6e>
    1fbe:	66 73 65             	data16 jae 2026 <_Z12pushListElemP4List8string_t+0xd6>
    1fc1:	74 70                	je     2033 <_Z12pushListElemP4List8string_t+0xe3>
    1fc3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fc4:	73 00                	jae    1fc6 <_Z12pushListElemP4List8string_t+0x76>
    1fc6:	72 61                	jb     2029 <_Z12pushListElemP4List8string_t+0xd9>
    1fc8:	74 69                	je     2033 <_Z12pushListElemP4List8string_t+0xe3>
    1fca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fcb:	3c 31                	cmp    al,0x31
    1fcd:	2c 20                	sub    al,0x20
    1fcf:	31 30                	xor    DWORD PTR [rax],esi
    1fd1:	30 30                	xor    BYTE PTR [rax],dh
    1fd3:	30 30                	xor    BYTE PTR [rax],dh
    1fd5:	30 30                	xor    BYTE PTR [rax],dh
    1fd7:	30 30                	xor    BYTE PTR [rax],dh
    1fd9:	3e 00 69 6e          	ds add BYTE PTR [rcx+0x6e],ch
    1fdd:	74 5f                	je     203e <_Z12pushListElemP4List8string_t+0xee>
    1fdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fe0:	5f                   	pop    rdi
    1fe1:	73 65                	jae    2048 <_Z12pushListElemP4List8string_t+0xf8>
    1fe3:	70 5f                	jo     2044 <_Z12pushListElemP4List8string_t+0xf4>
    1fe5:	62 79 5f 73 70       	(bad)
    1fea:	61                   	(bad)
    1feb:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1fee:	5f                   	pop    rdi
    1fef:	5a                   	pop    rdx
    1ff0:	4e 53                	rex.WRX push rbx
    1ff2:	74 35                	je     2029 <_Z12pushListElemP4List8string_t+0xd9>
    1ff4:	72 61                	jb     2057 <_Z12pushListElemP4List8string_t+0x107>
    1ff6:	74 69                	je     2061 <_Z12pushListElemP4List8string_t+0x111>
    1ff8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ff9:	49                   	rex.WB
    1ffa:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1ffc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1fff:	6c                   	ins    BYTE PTR es:[rdi],dx
    2000:	31 30                	xor    DWORD PTR [rax],esi
    2002:	30 30                	xor    BYTE PTR [rax],dh
    2004:	30 30                	xor    BYTE PTR [rax],dh
    2006:	30 30                	xor    BYTE PTR [rax],dh
    2008:	30 30                	xor    BYTE PTR [rax],dh
    200a:	45                   	rex.RB
    200b:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    200f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2010:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    2014:	53                   	push   rbx
    2015:	74 35                	je     204c <_Z12pushListElemP4List8string_t+0xfc>
    2017:	69 73 6e 61 6e 64 00 	imul   esi,DWORD PTR [rbx+0x6e],0x646e61
    201e:	5f                   	pop    rdi
    201f:	5a                   	pop    rdx
    2020:	53                   	push   rbx
    2021:	74 35                	je     2058 <_Z12pushListElemP4List8string_t+0x108>
    2023:	69 73 6e 61 6e 65 00 	imul   esi,DWORD PTR [rbx+0x6e],0x656e61
    202a:	5f                   	pop    rdi
    202b:	5a                   	pop    rdx
    202c:	53                   	push   rbx
    202d:	74 35                	je     2064 <_Z12pushListElemP4List8string_t+0x114>
    202f:	69 73 6e 61 6e 66 00 	imul   esi,DWORD PTR [rbx+0x6e],0x666e61
    2036:	5f                   	pop    rdi
    2037:	5f                   	pop    rdi
    2038:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    203f:	73 77                	jae    20b8 <_Z11popListElemP4List8string_t+0x8>
    2041:	73 63                	jae    20a6 <_Z12pushListElemP4List8string_t+0x156>
    2043:	61                   	(bad)
    2044:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2045:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    2049:	4e 53                	rex.WRX push rbx
    204b:	74 36                	je     2083 <_Z12pushListElemP4List8string_t+0x133>
    204d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2050:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2051:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2052:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2053:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2057:	61                   	(bad)
    2058:	74 69                	je     20c3 <_Z11popListElemP4List8string_t+0x13>
    205a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    205b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    205c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    205e:	53                   	push   rbx
    205f:	74 35                	je     2096 <_Z12pushListElemP4List8string_t+0x146>
    2061:	72 61                	jb     20c4 <_Z11popListElemP4List8string_t+0x14>
    2063:	74 69                	je     20ce <_Z11popListElemP4List8string_t+0x1e>
    2065:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2066:	49                   	rex.WB
    2067:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2069:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    206c:	6c                   	ins    BYTE PTR es:[rdi],dx
    206d:	31 30                	xor    DWORD PTR [rax],esi
    206f:	30 30                	xor    BYTE PTR [rax],dh
    2071:	30 30                	xor    BYTE PTR [rax],dh
    2073:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2076:	45 34 7a             	rex.RB xor al,0x7a
    2079:	65 72 6f             	gs jb  20eb <_Z11popListElemP4List8string_t+0x3b>
    207c:	45 76 00             	rex.RB jbe 207f <_Z12pushListElemP4List8string_t+0x12f>
    207f:	5f                   	pop    rdi
    2080:	5a                   	pop    rdx
    2081:	4e 53                	rex.WRX push rbx
    2083:	74 36                	je     20bb <_Z11popListElemP4List8string_t+0xb>
    2085:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2088:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2089:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    208a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    208f:	61                   	(bad)
    2090:	74 69                	je     20fb <_Z11popListElemP4List8string_t+0x4b>
    2092:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2093:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2094:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2096:	53                   	push   rbx
    2097:	74 35                	je     20ce <_Z11popListElemP4List8string_t+0x1e>
    2099:	72 61                	jb     20fc <_Z11popListElemP4List8string_t+0x4c>
    209b:	74 69                	je     2106 <_Z11popListElemP4List8string_t+0x56>
    209d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    209e:	49                   	rex.WB
    209f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    20a1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    20a4:	6c                   	ins    BYTE PTR es:[rdi],dx
    20a5:	31 30                	xor    DWORD PTR [rax],esi
    20a7:	30 30                	xor    BYTE PTR [rax],dh
    20a9:	30 30                	xor    BYTE PTR [rax],dh
    20ab:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    20ae:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    20b0:	4c                   	rex.WR
    20b1:	45 52                	rex.RB push r10
    20b3:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    20b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    20b8:	4e 53                	rex.WRX push rbx
    20ba:	74 36                	je     20f2 <_Z11popListElemP4List8string_t+0x42>
    20bc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    20bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c2:	31 30                	xor    DWORD PTR [rax],esi
    20c4:	74 69                	je     212f <_Z11popListElemP4List8string_t+0x7f>
    20c6:	6d                   	ins    DWORD PTR es:[rdi],dx
    20c7:	65 5f                	gs pop rdi
    20c9:	70 6f                	jo     213a <_Z11popListElemP4List8string_t+0x8a>
    20cb:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    20d2:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    20d5:	32 31                	xor    dh,BYTE PTR [rcx]
    20d7:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    20da:	65 61                	gs (bad)
    20dc:	64 79 5f             	fs jns 213e <_Z11popListElemP4List8string_t+0x8e>
    20df:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    20e3:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    20e7:	5f                   	pop    rdi
    20e8:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    20ec:	61                   	(bad)
    20ed:	74 69                	je     2158 <_Z11popListElemP4List8string_t+0xa8>
    20ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    20f3:	53                   	push   rbx
    20f4:	74 35                	je     212b <_Z11popListElemP4List8string_t+0x7b>
    20f6:	72 61                	jb     2159 <_Z11popListElemP4List8string_t+0xa9>
    20f8:	74 69                	je     2163 <_Z13searchElementP4List8string_t+0x3>
    20fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fb:	49                   	rex.WB
    20fc:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    20fe:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2101:	6c                   	ins    BYTE PTR es:[rdi],dx
    2102:	31 30                	xor    DWORD PTR [rax],esi
    2104:	30 30                	xor    BYTE PTR [rax],dh
    2106:	30 30                	xor    BYTE PTR [rax],dh
    2108:	30 30                	xor    BYTE PTR [rax],dh
    210a:	30 30                	xor    BYTE PTR [rax],dh
    210c:	45                   	rex.RB
    210d:	45                   	rex.RB
    210e:	45                   	rex.RB
    210f:	45                   	rex.RB
    2110:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    2114:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2115:	45 76 00             	rex.RB jbe 2118 <_Z11popListElemP4List8string_t+0x68>
    2118:	5f                   	pop    rdi
    2119:	5f                   	pop    rdi
    211a:	63 64 00 5f          	movsxd esp,DWORD PTR [rax+rax*1+0x5f]
    211e:	5a                   	pop    rdx
    211f:	53                   	push   rbx
    2120:	74 35                	je     2157 <_Z11popListElemP4List8string_t+0xa7>
    2122:	74 72                	je     2196 <_Z13searchElementP4List8string_t+0x36>
    2124:	75 6e                	jne    2194 <_Z13searchElementP4List8string_t+0x34>
    2126:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2129:	5f                   	pop    rdi
    212a:	5a                   	pop    rdx
    212b:	53                   	push   rbx
    212c:	74 35                	je     2163 <_Z13searchElementP4List8string_t+0x3>
    212e:	74 72                	je     21a2 <_Z13searchElementP4List8string_t+0x42>
    2130:	75 6e                	jne    21a0 <_Z13searchElementP4List8string_t+0x40>
    2132:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    2135:	5f                   	pop    rdi
    2136:	5a                   	pop    rdx
    2137:	53                   	push   rbx
    2138:	74 34                	je     216e <_Z13searchElementP4List8string_t+0xe>
    213a:	66 6d                	ins    WORD PTR es:[rdi],dx
    213c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    213d:	64 66 66 00 77 6d    	data16 data16 add BYTE PTR fs:[rdi+0x6d],dh
    2143:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2145:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    2148:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    214b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2152:	66 77 73             	data16 ja 21c8 <_Z8listDtorP4List+0x8>
    2155:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    2158:	66 00 74 6d 5f       	data16 add BYTE PTR [rbp+rbp*2+0x5f],dh
    215d:	6d                   	ins    DWORD PTR es:[rdi],dx
    215e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    215f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2160:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2163:	64 5f                	fs pop rdi
    2165:	64 65 76 69          	fs gs jbe 21d2 <_Z8listDtorP4List+0x12>
    2169:	61                   	(bad)
    216a:	74 69                	je     21d5 <_Z8listDtorP4List+0x15>
    216c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    216d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    216e:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
    2171:	72 65                	jb     21d8 <_Z8listDtorP4List+0x18>
    2173:	65 72 65             	gs jb  21db <_Z8listDtorP4List+0x1b>
    2176:	73 5f                	jae    21d7 <_Z8listDtorP4List+0x17>
    2178:	6c                   	ins    BYTE PTR es:[rdi],dx
    2179:	69 73 74 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+0x74],0x4e5a5f00
    2180:	53                   	push   rbx
    2181:	74 36                	je     21b9 <_Z13searchElementP4List8string_t+0x59>
    2183:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2186:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2189:	6d                   	ins    DWORD PTR es:[rdi],dx
    218a:	69 49 6c 53 74 35 72 	imul   ecx,DWORD PTR [rcx+0x6c],0x72357453
    2191:	61                   	(bad)
    2192:	74 69                	je     21fd <_Z8listDtorP4List+0x3d>
    2194:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2195:	49                   	rex.WB
    2196:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2198:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    219b:	6c                   	ins    BYTE PTR es:[rdi],dx
    219c:	31 30                	xor    DWORD PTR [rax],esi
    219e:	30 30                	xor    BYTE PTR [rax],dh
    21a0:	30 30                	xor    BYTE PTR [rax],dh
    21a2:	30 30                	xor    BYTE PTR [rax],dh
    21a4:	30 30                	xor    BYTE PTR [rax],dh
    21a6:	45                   	rex.RB
    21a7:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    21a9:	53                   	push   rbx
    21aa:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21ad:	45                   	rex.RB
    21ae:	4e 53                	rex.WRX push rbx
    21b0:	74 31                	je     21e3 <_Z8listDtorP4List+0x23>
    21b2:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    21b5:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b6:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21b9:	5f                   	pop    rdi
    21ba:	74 79                	je     2235 <_Z10debugPrintP4List+0x35>
    21bc:	70 65                	jo     2223 <_Z10debugPrintP4List+0x23>
    21be:	49                   	rex.WB
    21bf:	4a                   	rex.WX
    21c0:	4e 53                	rex.WRX push rbx
    21c2:	5f                   	pop    rdi
    21c3:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    21c7:	61                   	(bad)
    21c8:	74 69                	je     2233 <_Z10debugPrintP4List+0x33>
    21ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21cb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21cc:	49 54                	rex.WB push r12
    21ce:	5f                   	pop    rdi
    21cf:	54                   	push   rsp
    21d0:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    21d3:	45                   	rex.RB
    21d4:	4e 53                	rex.WRX push rbx
    21d6:	34 5f                	xor    al,0x5f
    21d8:	49 54                	rex.WB push r12
    21da:	31 5f 54             	xor    DWORD PTR [rdi+0x54],ebx
    21dd:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21e0:	45                   	rex.RB
    21e1:	45                   	rex.RB
    21e2:	45 34 74             	rex.RB xor al,0x74
    21e5:	79 70                	jns    2257 <_Z10debugPrintP4List+0x57>
    21e7:	65 45 52             	gs rex.RB push r10
    21ea:	4b 53                	rex.WXB push r11
    21ec:	37                   	(bad)
    21ed:	5f                   	pop    rdi
    21ee:	52                   	push   rdx
    21ef:	4b 53                	rex.WXB push r11
    21f1:	41 5f                	pop    r15
    21f3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    21f6:	4e 53                	rex.WRX push rbx
    21f8:	74 36                	je     2230 <_Z10debugPrintP4List+0x30>
    21fa:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    21fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2200:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2204:	61                   	(bad)
    2205:	74 69                	je     2270 <_Z10debugPrintP4List+0x70>
    2207:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2208:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2209:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    220b:	53                   	push   rbx
    220c:	74 35                	je     2243 <_Z10debugPrintP4List+0x43>
    220e:	72 61                	jb     2271 <_Z10debugPrintP4List+0x71>
    2210:	74 69                	je     227b <_Z10debugPrintP4List+0x7b>
    2212:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2213:	49                   	rex.WB
    2214:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2216:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2219:	6c                   	ins    BYTE PTR es:[rdi],dx
    221a:	31 30                	xor    DWORD PTR [rax],esi
    221c:	30 30                	xor    BYTE PTR [rax],dh
    221e:	30 30                	xor    BYTE PTR [rax],dh
    2220:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2223:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    2227:	78 45                	js     226e <_Z10debugPrintP4List+0x6e>
    2229:	76 00                	jbe    222b <_Z10debugPrintP4List+0x2b>
    222b:	5f                   	pop    rdi
    222c:	49                   	rex.WB
    222d:	4f 5f                	rex.WRXB pop r15
    222f:	77 72                	ja     22a3 <_Z10debugPrintP4List+0xa3>
    2231:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    2238:	00 
    2239:	5f                   	pop    rdi
    223a:	54                   	push   rsp
    223b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    223c:	44 75 72             	rex.R jne 22b1 <_Z10debugPrintP4List+0xb1>
    223f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2242:	4e 53                	rex.WRX push rbx
    2244:	74 36                	je     227c <_Z10debugPrintP4List+0x7c>
    2246:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2249:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    224b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2250:	61                   	(bad)
    2251:	74 69                	je     22bc <_Z10debugPrintP4List+0xbc>
    2253:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2254:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2255:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2257:	53                   	push   rbx
    2258:	74 35                	je     228f <_Z10debugPrintP4List+0x8f>
    225a:	72 61                	jb     22bd <_Z10debugPrintP4List+0xbd>
    225c:	74 69                	je     22c7 <_Z10debugPrintP4List+0xc7>
    225e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    225f:	49                   	rex.WB
    2260:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2262:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2265:	6c                   	ins    BYTE PTR es:[rdi],dx
    2266:	31 30                	xor    DWORD PTR [rax],esi
    2268:	30 30                	xor    BYTE PTR [rax],dh
    226a:	30 30                	xor    BYTE PTR [rax],dh
    226c:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    226f:	45 61                	rex.RB (bad)
    2271:	53                   	push   rbx
    2272:	45 52                	rex.RB push r10
    2274:	4b 53                	rex.WXB push r11
    2276:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    2279:	5f                   	pop    rdi
    227a:	5a                   	pop    rdx
    227b:	53                   	push   rbx
    227c:	74 34                	je     22b2 <_Z10debugPrintP4List+0xb2>
    227e:	73 71                	jae    22f1 <_Z10debugPrintP4List+0xf1>
    2280:	72 74                	jb     22f6 <_Z10debugPrintP4List+0xf6>
    2282:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2286:	53                   	push   rbx
    2287:	74 34                	je     22bd <_Z10debugPrintP4List+0xbd>
    2289:	73 71                	jae    22fc <_Z10debugPrintP4List+0xfc>
    228b:	72 74                	jb     2301 <_Z10debugPrintP4List+0x101>
    228d:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    2291:	74 6f                	je     2302 <_Z10debugPrintP4List+0x102>
    2293:	62                   	(bad)
    2294:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2297:	65 72 69             	gs jb  2303 <_Z10debugPrintP4List+0x103>
    229a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229b:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    229e:	61                   	(bad)
    229f:	76 65                	jbe    2306 <_Z10debugPrintP4List+0x106>
    22a1:	72 61                	jb     2304 <_Z10debugPrintP4List+0x104>
    22a3:	67 65 5f             	addr32 gs pop rdi
    22a6:	74 69                	je     2311 <_Z10debugPrintP4List+0x111>
    22a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    22a9:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
    22ad:	61                   	(bad)
    22ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22af:	64 61                	fs (bad)
    22b1:	72 74                	jb     2327 <_Z10debugPrintP4List+0x127>
    22b3:	44                   	rex.R
    22b4:	65 76 69             	gs jbe 2320 <_Z10debugPrintP4List+0x120>
    22b7:	61                   	(bad)
    22b8:	74 69                	je     2323 <_Z10debugPrintP4List+0x123>
    22ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22bc:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    22be:	6c                   	ins    BYTE PTR es:[rdi],dx
    22bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    22c0:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    22c7:	5f                   	pop    rdi
    22c8:	44 75 72             	rex.R jne 233d <_Z10debugPrintP4List+0x13d>
    22cb:	31 00                	xor    DWORD PTR [rax],eax
    22cd:	5f                   	pop    rdi
    22ce:	44 75 72             	rex.R jne 2343 <_Z10debugPrintP4List+0x143>
    22d1:	32 00                	xor    al,BYTE PTR [rax]
    22d3:	73 65                	jae    233a <_Z10debugPrintP4List+0x13a>
    22d5:	61                   	(bad)
    22d6:	72 63                	jb     233b <_Z10debugPrintP4List+0x13b>
    22d8:	68 5f 74 69 6d       	push   0x6d69745f
    22dd:	65 5f                	gs pop rdi
    22df:	61                   	(bad)
    22e0:	72 72                	jb     2354 <_Z10debugPrintP4List+0x154>
    22e2:	61                   	(bad)
    22e3:	79 00                	jns    22e5 <_Z10debugPrintP4List+0xe5>
    22e5:	5f                   	pop    rdi
    22e6:	5f                   	pop    rdi
    22e7:	74 6f                	je     2358 <_Z10debugPrintP4List+0x158>
    22e9:	5f                   	pop    rdi
    22ea:	72 65                	jb     2351 <_Z10debugPrintP4List+0x151>
    22ec:	70 00                	jo     22ee <_Z10debugPrintP4List+0xee>
    22ee:	76 66                	jbe    2356 <_Z10debugPrintP4List+0x156>
    22f0:	77 70                	ja     2362 <_Z10debugPrintP4List+0x162>
    22f2:	72 69                	jb     235d <_Z10debugPrintP4List+0x15d>
    22f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22f5:	74 66                	je     235d <_Z10debugPrintP4List+0x15d>
    22f7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22fa:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    2301:	74 00                	je     2303 <_Z10debugPrintP4List+0x103>
    2303:	5f                   	pop    rdi
    2304:	49                   	rex.WB
    2305:	4f 5f                	rex.WRXB pop r15
    2307:	62 75 66 5f 62       	(bad)
    230c:	61                   	(bad)
    230d:	73 65                	jae    2374 <_Z10debugPrintP4List+0x174>
    230f:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    2313:	62                   	(bad)
    2314:	6c                   	ins    BYTE PTR es:[rdi],dx
    2315:	65 5f                	gs pop rdi
    2317:	74 00                	je     2319 <_Z10debugPrintP4List+0x119>
    2319:	6c                   	ins    BYTE PTR es:[rdi],dx
    231a:	6c                   	ins    BYTE PTR es:[rdi],dx
    231b:	72 6f                	jb     238c <_Z10debugPrintP4List+0x18c>
    231d:	75 6e                	jne    238d <_Z10debugPrintP4List+0x18d>
    231f:	64 00 70 65          	add    BYTE PTR fs:[rax+0x65],dh
    2323:	72 72                	jb     2397 <_Z10debugPrintP4List+0x197>
    2325:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2326:	72 00                	jb     2328 <_Z10debugPrintP4List+0x128>
    2328:	74 65                	je     238f <_Z10debugPrintP4List+0x18f>
    232a:	73 74                	jae    23a0 <_Z10debugPrintP4List+0x1a0>
    232c:	5f                   	pop    rdi
    232d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    232e:	61                   	(bad)
    232f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2330:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    2334:	73 73                	jae    23a9 <_Z10debugPrintP4List+0x1a9>
    2336:	70 6e                	jo     23a6 <_Z10debugPrintP4List+0x1a6>
    2338:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    233b:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    2340:	5f                   	pop    rdi
    2341:	70 61                	jo     23a4 <_Z10debugPrintP4List+0x1a4>
    2343:	64 35 00 73 65 74    	fs xor eax,0x74657300
    2349:	76 62                	jbe    23ad <_Z10debugPrintP4List+0x1ad>
    234b:	75 66                	jne    23b3 <_Z10debugPrintP4List+0x1b3>
    234d:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2350:	65 72 69             	gs jb  23bc <_Z10debugPrintP4List+0x1bc>
    2353:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2354:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    2358:	6d                   	ins    DWORD PTR es:[rdi],dx
    2359:	71 75                	jno    23d0 <_Z10debugPrintP4List+0x1d0>
    235b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    235c:	00 6d 6b             	add    BYTE PTR [rbp+0x6b],ch
    235f:	74 69                	je     23ca <_Z10debugPrintP4List+0x1ca>
    2361:	6d                   	ins    DWORD PTR es:[rdi],dx
    2362:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2366:	53                   	push   rbx
    2367:	74 35                	je     239e <_Z10debugPrintP4List+0x19e>
    2369:	61                   	(bad)
    236a:	74 61                	je     23cd <_Z10debugPrintP4List+0x1cd>
    236c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    236d:	32 65 65             	xor    ah,BYTE PTR [rbp+0x65]
    2370:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2373:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    2376:	65 73 74             	gs jae 23ed <_Z10debugPrintP4List+0x1ed>
    2379:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    237b:	6c                   	ins    BYTE PTR es:[rdi],dx
    237c:	6c                   	ins    BYTE PTR es:[rdi],dx
    237d:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2384:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    2387:	4f 5f                	rex.WRXB pop r15
    2389:	46                   	rex.RX
    238a:	49                   	rex.WB
    238b:	4c                   	rex.WR
    238c:	45 50                	rex.RB push r8
    238e:	46 6a 38             	rex.RX push 0x38
    2391:	73 74                	jae    2407 <_Z10debugPrintP4List+0x207>
    2393:	72 69                	jb     23fe <_Z10debugPrintP4List+0x1fe>
    2395:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2396:	67 5f                	addr32 pop rdi
    2398:	74 45                	je     23df <_Z10debugPrintP4List+0x1df>
    239a:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    239e:	74 44                	je     23e4 <_Z10debugPrintP4List+0x1e4>
    23a0:	61                   	(bad)
    23a1:	74 61                	je     2404 <_Z10debugPrintP4List+0x204>
    23a3:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    23a7:	65 5f                	gs pop rdi
    23a9:	73 69                	jae    2414 <_Z10debugPrintP4List+0x214>
    23ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23ac:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    23af:	65 70 6f             	gs jo  2421 <_Z10debugPrintP4List+0x221>
    23b2:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    23b5:	7a 65                	jp     241c <_Z10debugPrintP4List+0x21c>
    23b7:	72 6f                	jb     2428 <_Z10debugPrintP4List+0x228>
    23b9:	00 6f 76             	add    BYTE PTR [rdi+0x76],ch
    23bc:	65 72 66             	gs jb  2425 <_Z10debugPrintP4List+0x225>
    23bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    23c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23c1:	77 5f                	ja     2422 <_Z10debugPrintP4List+0x222>
    23c3:	61                   	(bad)
    23c4:	72 67                	jb     242d <_Z10debugPrintP4List+0x22d>
    23c6:	5f                   	pop    rdi
    23c7:	61                   	(bad)
    23c8:	72 65                	jb     242f <_Z10debugPrintP4List+0x22f>
    23ca:	61                   	(bad)
    23cb:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    23ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23cf:	61                   	(bad)
    23d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    23d1:	65 00 5f 66          	add    BYTE PTR gs:[rdi+0x66],bl
    23d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    23d6:	61                   	(bad)
    23d7:	67 73 00             	addr32 jae 23da <_Z10debugPrintP4List+0x1da>
    23da:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    23dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    23de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23e0:	5f                   	pop    rdi
    23e1:	74 79                	je     245c <_Z8readFilePKcPm+0x2c>
    23e3:	70 65                	jo     244a <_Z8readFilePKcPm+0x1a>
    23e5:	3c 73                	cmp    al,0x73
    23e7:	74 64                	je     244d <_Z8readFilePKcPm+0x1d>
    23e9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23eb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    23ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23f1:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23f3:	64 75 72             	fs jne 2468 <_Z8readFilePKcPm+0x38>
    23f6:	61                   	(bad)
    23f7:	74 69                	je     2462 <_Z8readFilePKcPm+0x32>
    23f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23fb:	3c 6c                	cmp    al,0x6c
    23fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23ff:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2403:	74 2c                	je     2431 <_Z8readFilePKcPm+0x1>
    2405:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2408:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    240b:	72 61                	jb     246e <_Z8readFilePKcPm+0x3e>
    240d:	74 69                	je     2478 <_Z8readFilePKcPm+0x48>
    240f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2410:	3c 31                	cmp    al,0x31
    2412:	2c 20                	sub    al,0x20
    2414:	31 30                	xor    DWORD PTR [rax],esi
    2416:	30 30                	xor    BYTE PTR [rax],dh
    2418:	30 30                	xor    BYTE PTR [rax],dh
    241a:	30 30                	xor    BYTE PTR [rax],dh
    241c:	30 30                	xor    BYTE PTR [rax],dh
    241e:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2421:	2c 20                	sub    al,0x20
    2423:	73 74                	jae    2499 <_Z8readFilePKcPm+0x69>
    2425:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2428:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    242b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    242d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242e:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2430:	64 75 72             	fs jne 24a5 <_Z8readFilePKcPm+0x75>
    2433:	61                   	(bad)
    2434:	74 69                	je     249f <_Z8readFilePKcPm+0x6f>
    2436:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2437:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2438:	3c 6c                	cmp    al,0x6c
    243a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    243b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243c:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2440:	74 2c                	je     246e <_Z8readFilePKcPm+0x3e>
    2442:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2445:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2448:	72 61                	jb     24ab <_Z8readFilePKcPm+0x7b>
    244a:	74 69                	je     24b5 <_Z8readFilePKcPm+0x85>
    244c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    244d:	3c 31                	cmp    al,0x31
    244f:	2c 20                	sub    al,0x20
    2451:	31 30                	xor    DWORD PTR [rax],esi
    2453:	30 30                	xor    BYTE PTR [rax],dh
    2455:	30 30                	xor    BYTE PTR [rax],dh
    2457:	30 30                	xor    BYTE PTR [rax],dh
    2459:	30 30                	xor    BYTE PTR [rax],dh
    245b:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    245e:	20 3e                	and    BYTE PTR [rsi],bh
    2460:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2463:	53                   	push   rbx
    2464:	74 35                	je     249b <_Z8readFilePKcPm+0x6b>
    2466:	66 72 65             	data16 jb 24ce <_Z8readFilePKcPm+0x9e>
    2469:	78 70                	js     24db <_Z8readFilePKcPm+0xab>
    246b:	66 50                	push   ax
    246d:	69 00 5f 44 65 6e    	imul   eax,DWORD PTR [rax],0x6e65445f
    2473:	49 73 4f             	rex.WB jae 24c5 <_Z8readFilePKcPm+0x95>
    2476:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2477:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    247b:	53                   	push   rbx
    247c:	74 35                	je     24b3 <_Z8readFilePKcPm+0x83>
    247e:	61                   	(bad)
    247f:	74 61                	je     24e2 <_Z8readFilePKcPm+0xb2>
    2481:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2482:	68 65 00 5f 5a       	push   0x5a5f0065
    2487:	53                   	push   rbx
    2488:	74 35                	je     24bf <_Z8readFilePKcPm+0x8f>
    248a:	61                   	(bad)
    248b:	74 61                	je     24ee <_Z8readFilePKcPm+0xbe>
    248d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    248e:	68 66 00 5f 5a       	push   0x5a5f0066
    2493:	53                   	push   rbx
    2494:	74 34                	je     24ca <_Z8readFilePKcPm+0x9a>
    2496:	61                   	(bad)
    2497:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    249a:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    249e:	53                   	push   rbx
    249f:	74 34                	je     24d5 <_Z8readFilePKcPm+0xa5>
    24a1:	61                   	(bad)
    24a2:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    24a5:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    24a9:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    24ad:	6b 5f 74 00          	imul   ebx,DWORD PTR [rdi+0x74],0x0
    24b1:	5f                   	pop    rdi
    24b2:	5f                   	pop    rdi
    24b3:	6d                   	ins    DWORD PTR es:[rdi],dx
    24b4:	61                   	(bad)
    24b5:	78 5f                	js     2516 <_Z8readFilePKcPm+0xe6>
    24b7:	61                   	(bad)
    24b8:	6c                   	ins    BYTE PTR es:[rdi],dx
    24b9:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
    24c0:	77 63                	ja     2525 <_Z8readFilePKcPm+0xf5>
    24c2:	73 6c                	jae    2530 <_Z8readFilePKcPm+0x100>
    24c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    24c6:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    24c9:	72 74                	jb     253f <_Z8readFilePKcPm+0x10f>
    24cb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    24ce:	53                   	push   rbx
    24cf:	74 37                	je     2508 <_Z8readFilePKcPm+0xd8>
    24d1:	73 69                	jae    253c <_Z8readFilePKcPm+0x10c>
    24d3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    24d5:	62 69 74 65 00       	(bad)
    24da:	67 65 74 63          	addr32 gs je 2541 <_Z10countLinesPcm+0x1>
    24de:	68 61 72 00 5f       	push   0x5f007261
    24e3:	5a                   	pop    rdx
    24e4:	53                   	push   rbx
    24e5:	74 35                	je     251c <_Z8readFilePKcPm+0xec>
    24e7:	61                   	(bad)
    24e8:	74 61                	je     254b <_Z10countLinesPcm+0xb>
    24ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24eb:	32 66 66             	xor    ah,BYTE PTR [rsi+0x66]
    24ee:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24f1:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    24f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24f5:	74 00                	je     24f7 <_Z8readFilePKcPm+0xc7>
    24f7:	5f                   	pop    rdi
    24f8:	5f                   	pop    rdi
    24f9:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2500:	73 74                	jae    2576 <_Z10countLinesPcm+0x36>
    2502:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2505:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2508:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    250f:	76 77                	jbe    2588 <_Z10countLinesPcm+0x48>
    2511:	73 63                	jae    2576 <_Z10countLinesPcm+0x36>
    2513:	61                   	(bad)
    2514:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2515:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
    2519:	61                   	(bad)
    251a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    251b:	68 00 5f 5a 53       	push   0x535a5f00
    2520:	74 31                	je     2553 <_Z10countLinesPcm+0x13>
    2522:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
    2525:	78 74                	js     259b <_Z10countLinesPcm+0x5b>
    2527:	74 6f                	je     2598 <_Z10countLinesPcm+0x58>
    2529:	77 61                	ja     258c <_Z10countLinesPcm+0x4c>
    252b:	72 64                	jb     2591 <_Z10countLinesPcm+0x51>
    252d:	65 65 00 73 63       	gs add BYTE PTR gs:[rbx+0x63],dh
    2532:	61                   	(bad)
    2533:	6c                   	ins    BYTE PTR es:[rdi],dx
    2534:	62 6c 6e             	(bad)
    2537:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    253a:	74 62                	je     259e <_Z10countLinesPcm+0x5e>
    253c:	75 66                	jne    25a4 <_Z10countLinesPcm+0x64>
    253e:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    2541:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2542:	66 00 74 69 6d       	data16 add BYTE PTR [rcx+rbp*2+0x6d],dh
    2547:	65 5f                	gs pop rdi
    2549:	70 6f                	jo     25ba <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa>
    254b:	69 6e 74 3c 73 74 64 	imul   ebp,DWORD PTR [rsi+0x74],0x6474733c
    2552:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2554:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2557:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2558:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2559:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255a:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    255c:	5f                   	pop    rdi
    255d:	56                   	push   rsi
    255e:	32 3a                	xor    bh,BYTE PTR [rdx]
    2560:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    2563:	65 61                	gs (bad)
    2565:	64 79 5f             	fs jns 25c7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x17>
    2568:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    256c:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    2570:	74 64                	je     25d6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x26>
    2572:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2574:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2577:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2578:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2579:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257a:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    257c:	64 75 72             	fs jne 25f1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x41>
    257f:	61                   	(bad)
    2580:	74 69                	je     25eb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b>
    2582:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2583:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2584:	3c 6c                	cmp    al,0x6c
    2586:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2587:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2588:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    258c:	74 2c                	je     25ba <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa>
    258e:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2591:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2594:	72 61                	jb     25f7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x47>
    2596:	74 69                	je     2601 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x51>
    2598:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2599:	3c 31                	cmp    al,0x31
    259b:	2c 20                	sub    al,0x20
    259d:	31 30                	xor    DWORD PTR [rax],esi
    259f:	30 30                	xor    BYTE PTR [rax],dh
    25a1:	30 30                	xor    BYTE PTR [rax],dh
    25a3:	30 30                	xor    BYTE PTR [rax],dh
    25a5:	30 30                	xor    BYTE PTR [rax],dh
    25a7:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    25aa:	20 3e                	and    BYTE PTR [rsi],bh
    25ac:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    25af:	53                   	push   rbx
    25b0:	74 33                	je     25e5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x35>
    25b2:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25b5:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    25b9:	53                   	push   rbx
    25ba:	74 33                	je     25ef <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3f>
    25bc:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25bf:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
    25c3:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c5:	69 73 69 6f 6e 5f 66 	imul   esi,DWORD PTR [rbx+0x69],0x665f6e6f
    25cc:	69 6c 65 6e 61 6d 65 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x656d61
    25d3:	00 
    25d4:	66 69 6c 65 73 79 73 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
    25db:	74 65                	je     2642 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x92>
    25dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    25de:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    25e1:	74 61                	je     2644 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x94>
    25e3:	62                   	(bad)
    25e4:	6c                   	ins    BYTE PTR es:[rdi],dx
    25e5:	65 5f                	gs pop rdi
    25e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25e8:	66 66 73 65          	data16 data16 jae 2651 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa1>
    25ec:	74 00                	je     25ee <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3e>
    25ee:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    25f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25f1:	61                   	(bad)
    25f2:	74 5f                	je     2653 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa3>
    25f4:	74 00                	je     25f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x46>
    25f6:	5f                   	pop    rdi
    25f7:	44 75 72             	rex.R jne 266c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xbc>
    25fa:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    25fd:	65 72 61             	gs jb  2661 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xb1>
    2600:	74 6f                	je     2671 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc1>
    2602:	72 2d                	jb     2631 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x81>
    2604:	3c 6c                	cmp    al,0x6c
    2606:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2607:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2608:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    260c:	74 2c                	je     263a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x8a>
    260e:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2611:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2614:	72 61                	jb     2677 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc7>
    2616:	74 69                	je     2681 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xd1>
    2618:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2619:	3c 31                	cmp    al,0x31
    261b:	2c 20                	sub    al,0x20
    261d:	31 30                	xor    DWORD PTR [rax],esi
    261f:	30 30                	xor    BYTE PTR [rax],dh
    2621:	30 30                	xor    BYTE PTR [rax],dh
    2623:	30 30                	xor    BYTE PTR [rax],dh
    2625:	30 30                	xor    BYTE PTR [rax],dh
    2627:	3e 2c 20             	ds sub al,0x20
    262a:	6c                   	ins    BYTE PTR es:[rdi],dx
    262b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    262c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    262d:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2631:	74 2c                	je     265f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xaf>
    2633:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2636:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2639:	72 61                	jb     269c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xec>
    263b:	74 69                	je     26a6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xf6>
    263d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    263e:	3c 31                	cmp    al,0x31
    2640:	2c 20                	sub    al,0x20
    2642:	31 30                	xor    DWORD PTR [rax],esi
    2644:	30 30                	xor    BYTE PTR [rax],dh
    2646:	30 30                	xor    BYTE PTR [rax],dh
    2648:	30 30                	xor    BYTE PTR [rax],dh
    264a:	30 30                	xor    BYTE PTR [rax],dh
    264c:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    264f:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    2652:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2653:	67 62                	addr32 (bad)
    2655:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2658:	61                   	(bad)
    2659:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    265a:	64 61                	fs (bad)
    265c:	72 74                	jb     26d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x122>
    265e:	44                   	rex.R
    265f:	65 76 69             	gs jbe 26cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x11b>
    2662:	61                   	(bad)
    2663:	74 69                	je     26ce <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x11e>
    2665:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2666:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2667:	54                   	push   rsp
    2668:	69 6d 65 00 5f 5a 53 	imul   ebp,DWORD PTR [rbp+0x65],0x535a5f00
    266f:	74 38                	je     26a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xf9>
    2671:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2678:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    267d:	53                   	push   rbx
    267e:	74 34                	je     26b4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x104>
    2680:	65 78 70             	gs js  26f3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x143>
    2683:	32 65 00             	xor    ah,BYTE PTR [rbp+0x0]
    2686:	5f                   	pop    rdi
    2687:	5a                   	pop    rdx
    2688:	53                   	push   rbx
    2689:	74 34                	je     26bf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x10f>
    268b:	65 78 70             	gs js  26fe <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x14e>
    268e:	32 66 00             	xor    ah,BYTE PTR [rsi+0x0]
    2691:	5f                   	pop    rdi
    2692:	4e 75 6d             	rex.WRX jne 2702 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x152>
    2695:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2698:	77 63                	ja     26fd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x14d>
    269a:	68 62 00 61 74       	push   0x74610062
    269f:	61                   	(bad)
    26a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26a4:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    26ab:	5f                   	pop    rdi
    26ac:	5a                   	pop    rdx
    26ad:	4e 53                	rex.WRX push rbx
    26af:	74 35                	je     26e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x136>
    26b1:	72 61                	jb     2714 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x164>
    26b3:	74 69                	je     271e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x16e>
    26b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26b6:	49                   	rex.WB
    26b7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    26b9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    26bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    26bd:	31 30                	xor    DWORD PTR [rax],esi
    26bf:	30 30                	xor    BYTE PTR [rax],dh
    26c1:	30 30                	xor    BYTE PTR [rax],dh
    26c3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    26c6:	33 6e 75             	xor    ebp,DWORD PTR [rsi+0x75]
    26c9:	6d                   	ins    DWORD PTR es:[rdi],dx
    26ca:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    26ce:	53                   	push   rbx
    26cf:	74 31                	je     2702 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x152>
    26d1:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    26d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    26d5:	65 73 73             	gs jae 274b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19b>
    26d8:	65 71 75             	gs jno 2750 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a0>
    26db:	61                   	(bad)
    26dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    26dd:	65 65 00 64 75 72    	gs add BYTE PTR gs:[rbp+rsi*2+0x72],ah
    26e3:	61                   	(bad)
    26e4:	74 69                	je     274f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19f>
    26e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26e8:	5f                   	pop    rdi
    26e9:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    26ec:	74 3c                	je     272a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x17a>
    26ee:	73 74                	jae    2764 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1b4>
    26f0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26f3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    26f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26f9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    26fb:	64 75 72             	fs jne 2770 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c0>
    26fe:	61                   	(bad)
    26ff:	74 69                	je     276a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ba>
    2701:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2702:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2703:	3c 6c                	cmp    al,0x6c
    2705:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2707:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    270b:	74 2c                	je     2739 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x189>
    270d:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2710:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2713:	72 61                	jb     2776 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c6>
    2715:	74 69                	je     2780 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1d0>
    2717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2718:	3c 31                	cmp    al,0x31
    271a:	2c 20                	sub    al,0x20
    271c:	31 30                	xor    DWORD PTR [rax],esi
    271e:	30 30                	xor    BYTE PTR [rax],dh
    2720:	30 30                	xor    BYTE PTR [rax],dh
    2722:	30 3e                	xor    BYTE PTR [rsi],bh
    2724:	20 3e                	and    BYTE PTR [rsi],bh
    2726:	2c 20                	sub    al,0x20
    2728:	6c                   	ins    BYTE PTR es:[rdi],dx
    2729:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    272a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    272b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    272f:	74 2c                	je     275d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ad>
    2731:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2734:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2737:	72 61                	jb     279a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ea>
    2739:	74 69                	je     27a4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1f4>
    273b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    273c:	3c 31                	cmp    al,0x31
    273e:	2c 20                	sub    al,0x20
    2740:	31 30                	xor    DWORD PTR [rax],esi
    2742:	30 30                	xor    BYTE PTR [rax],dh
    2744:	30 30                	xor    BYTE PTR [rax],dh
    2746:	30 30                	xor    BYTE PTR [rax],dh
    2748:	30 30                	xor    BYTE PTR [rax],dh
    274a:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    274d:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    2750:	73 74                	jae    27c6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x216>
    2752:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2753:	6c                   	ins    BYTE PTR es:[rdi],dx
    2754:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    2758:	74 5f                	je     27b9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x209>
    275a:	70 5f                	jo     27bb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x20b>
    275c:	73 65                	jae    27c3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x213>
    275e:	70 5f                	jo     27bf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x20f>
    2760:	62 79 5f 73 70       	(bad)
    2765:	61                   	(bad)
    2766:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    2769:	5f                   	pop    rdi
    276a:	5a                   	pop    rdx
    276b:	53                   	push   rbx
    276c:	74 38                	je     27a6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1f6>
    276e:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2775:	65 64 00 61 76       	gs add BYTE PTR fs:[rcx+0x76],ah
    277a:	65 72 61             	gs jb  27de <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x22e>
    277d:	67 65 5f             	addr32 gs pop rdi
    2780:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2783:	6c                   	ins    BYTE PTR es:[rdi],dx
    2784:	69 73 69 6f 6e 00 5f 	imul   esi,DWORD PTR [rbx+0x69],0x5f006e6f
    278b:	5a                   	pop    rdx
    278c:	53                   	push   rbx
    278d:	74 38                	je     27c7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x217>
    278f:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2796:	65 66 00 5f 5a       	data16 add BYTE PTR gs:[rdi+0x5a],bl
    279b:	53                   	push   rbx
    279c:	74 31                	je     27cf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x21f>
    279e:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    27a1:	75 6e                	jne    2811 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x261>
    27a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27a4:	72 64                	jb     280a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x25a>
    27a6:	65 72 65             	gs jb  280e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x25e>
    27a9:	64 65 65 00 66 72    	fs gs add BYTE PTR gs:[rsi+0x72],ah
    27af:	65 78 70             	gs js  2822 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x272>
    27b2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    27b5:	4e 53                	rex.WRX push rbx
    27b7:	74 36                	je     27ef <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x23f>
    27b9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    27bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27bf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    27c3:	61                   	(bad)
    27c4:	74 69                	je     282f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x27f>
    27c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27c8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    27ca:	53                   	push   rbx
    27cb:	74 35                	je     2802 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x252>
    27cd:	72 61                	jb     2830 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x280>
    27cf:	74 69                	je     283a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x28a>
    27d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27d2:	49                   	rex.WB
    27d3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    27d5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    27d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    27d9:	31 30                	xor    DWORD PTR [rax],esi
    27db:	30 30                	xor    BYTE PTR [rax],dh
    27dd:	30 30                	xor    BYTE PTR [rax],dh
    27df:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    27e2:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    27e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27e7:	45 76 00             	rex.RB jbe 27ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x23a>
    27ea:	77 63                	ja     284f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29f>
    27ec:	73 73                	jae    2861 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b1>
    27ee:	74 72                	je     2862 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b2>
    27f0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    27f3:	4f 5f                	rex.WRXB pop r15
    27f5:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    27f8:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    27fc:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    27ff:	78 74                	js     2875 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2c5>
    2801:	61                   	(bad)
    2802:	66 74 65             	data16 je 286a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2ba>
    2805:	72 00                	jb     2807 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x257>
    2807:	65 78 70             	gs js  287a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2ca>
    280a:	6d                   	ins    DWORD PTR es:[rdi],dx
    280b:	31 00                	xor    DWORD PTR [rax],eax
    280d:	5f                   	pop    rdi
    280e:	5f                   	pop    rdi
    280f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2810:	61                   	(bad)
    2811:	78 5f                	js     2872 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2c2>
    2813:	61                   	(bad)
    2814:	6c                   	ins    BYTE PTR es:[rdi],dx
    2815:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
    281c:	5f                   	pop    rdi
    281d:	5a                   	pop    rdx
    281e:	4e 53                	rex.WRX push rbx
    2820:	74 36                	je     2858 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2a8>
    2822:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2825:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2826:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2827:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2828:	32 30                	xor    dh,BYTE PTR [rax]
    282a:	5f                   	pop    rdi
    282b:	5f                   	pop    rdi
    282c:	64 75 72             	fs jne 28a1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2f1>
    282f:	61                   	(bad)
    2830:	74 69                	je     289b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2eb>
    2832:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2833:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2834:	5f                   	pop    rdi
    2835:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2838:	74 5f                	je     2899 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2e9>
    283a:	69 6d 70 6c 49 4e 53 	imul   ebp,DWORD PTR [rbp+0x70],0x534e496c
    2841:	5f                   	pop    rdi
    2842:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2846:	61                   	(bad)
    2847:	74 69                	je     28b2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x302>
    2849:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    284a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    284b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    284d:	53                   	push   rbx
    284e:	74 35                	je     2885 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2d5>
    2850:	72 61                	jb     28b3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x303>
    2852:	74 69                	je     28bd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x30d>
    2854:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2855:	49                   	rex.WB
    2856:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2858:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    285b:	6c                   	ins    BYTE PTR es:[rdi],dx
    285c:	31 30                	xor    DWORD PTR [rax],esi
    285e:	30 30                	xor    BYTE PTR [rax],dh
    2860:	30 30                	xor    BYTE PTR [rax],dh
    2862:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2865:	45                   	rex.RB
    2866:	45 53                	rex.RB push r11
    2868:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    286b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    286d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2870:	6c                   	ins    BYTE PTR es:[rdi],dx
    2871:	31 30                	xor    DWORD PTR [rax],esi
    2873:	30 30                	xor    BYTE PTR [rax],dh
    2875:	45                   	rex.RB
    2876:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    2878:	4c 62 31 45 4c 62 30 	rex.WR vpunpckldq zmm14{k4},zmm7,ZMMWORD PTR [rax]
    287f:	45                   	rex.RB
    2880:	45                   	rex.RB
    2881:	36 5f                	ss pop rdi
    2883:	5f                   	pop    rdi
    2884:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2887:	74 49                	je     28d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x322>
    2889:	6c                   	ins    BYTE PTR es:[rdi],dx
    288a:	53                   	push   rbx
    288b:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    288e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2890:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2893:	6c                   	ins    BYTE PTR es:[rdi],dx
    2894:	31 30                	xor    DWORD PTR [rax],esi
    2896:	30 30                	xor    BYTE PTR [rax],dh
    2898:	30 30                	xor    BYTE PTR [rax],dh
    289a:	30 30                	xor    BYTE PTR [rax],dh
    289c:	30 30                	xor    BYTE PTR [rax],dh
    289e:	45                   	rex.RB
    289f:	45                   	rex.RB
    28a0:	45                   	rex.RB
    28a1:	45 53                	rex.RB push r11
    28a3:	34 5f                	xor    al,0x5f
    28a5:	52                   	push   rdx
    28a6:	4b                   	rex.WXB
    28a7:	4e 53                	rex.WRX push rbx
    28a9:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    28ac:	54                   	push   rsp
    28ad:	5f                   	pop    rdi
    28ae:	54                   	push   rsp
    28af:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    28b2:	45 00 5f 43          	add    BYTE PTR [r15+0x43],r11b
    28b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    28b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28b8:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    28bb:	77 63                	ja     2920 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x370>
    28bd:	73 72                	jae    2931 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x381>
    28bf:	74 6f                	je     2930 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x380>
    28c1:	6d                   	ins    DWORD PTR es:[rdi],dx
    28c2:	62 73 00 5f 5f       	(bad)
    28c7:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    28ce:	73 74                	jae    2944 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x394>
    28d0:	31 36                	xor    DWORD PTR [rsi],esi
    28d2:	5f                   	pop    rdi
    28d3:	74 00                	je     28d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x325>
    28d5:	5f                   	pop    rdi
    28d6:	66 72 65             	data16 jb 293e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x38e>
    28d9:	65 72 65             	gs jb  2941 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x391>
    28dc:	73 5f                	jae    293d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x38d>
    28de:	62 75 66 00 74       	(bad)
    28e3:	6d                   	ins    DWORD PTR es:[rdi],dx
    28e4:	5f                   	pop    rdi
    28e5:	77 64                	ja     294b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x39b>
    28e7:	61                   	(bad)
    28e8:	79 00                	jns    28ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x33a>
    28ea:	5f                   	pop    rdi
    28eb:	5a                   	pop    rdx
    28ec:	53                   	push   rbx
    28ed:	74 31                	je     2920 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x370>
    28ef:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    28f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    28f3:	65 73 73             	gs jae 2969 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b9>
    28f6:	65 71 75             	gs jno 296e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3be>
    28f9:	61                   	(bad)
    28fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    28fb:	66 66 00 5f 5f       	data16 data16 add BYTE PTR [rdi+0x5f],bl
    2900:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2903:	74 3c                	je     2941 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x391>
    2905:	6c                   	ins    BYTE PTR es:[rdi],dx
    2906:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2907:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2908:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    290c:	74 2c                	je     293a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x38a>
    290e:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2911:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2914:	72 61                	jb     2977 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3c7>
    2916:	74 69                	je     2981 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d1>
    2918:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2919:	3c 31                	cmp    al,0x31
    291b:	2c 20                	sub    al,0x20
    291d:	31 30                	xor    DWORD PTR [rax],esi
    291f:	30 30                	xor    BYTE PTR [rax],dh
    2921:	30 30                	xor    BYTE PTR [rax],dh
    2923:	30 30                	xor    BYTE PTR [rax],dh
    2925:	30 30                	xor    BYTE PTR [rax],dh
    2927:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    292a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    292d:	53                   	push   rbx
    292e:	74 35                	je     2965 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b5>
    2930:	68 79 70 6f 74       	push   0x746f7079
    2935:	66 66 66 00 74 65 73 	data16 data16 data16 add BYTE PTR [rbp+riz*2+0x73],dh
    293c:	74 5f                	je     299d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ed>
    293e:	61                   	(bad)
    293f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2940:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2941:	75 6e                	jne    29b1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x401>
    2943:	74 00                	je     2945 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x395>
    2945:	6d                   	ins    DWORD PTR es:[rdi],dx
    2946:	62 73 69 6e 69       	(bad)
    294b:	74 00                	je     294d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x39d>
    294d:	61                   	(bad)
    294e:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2951:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    2955:	79 64                	jns    29bb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x40b>
    2957:	61                   	(bad)
    2958:	79 00                	jns    295a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3aa>
    295a:	5f                   	pop    rdi
    295b:	5a                   	pop    rdx
    295c:	53                   	push   rbx
    295d:	74 39                	je     2998 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3e8>
    295f:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    2966:	65 72 66             	gs jb  29cf <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x41f>
    2969:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    296d:	73 74                	jae    29e3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x433>
    296f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2970:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    2974:	73 74                	jae    29ea <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x43a>
    2976:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2977:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    297b:	4e 53                	rex.WRX push rbx
    297d:	74 36                	je     29b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x405>
    297f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2982:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2983:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2984:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2985:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2989:	61                   	(bad)
    298a:	74 69                	je     29f5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x445>
    298c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    298d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    298e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2990:	53                   	push   rbx
    2991:	74 35                	je     29c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x418>
    2993:	72 61                	jb     29f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x446>
    2995:	74 69                	je     2a00 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x450>
    2997:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2998:	49                   	rex.WB
    2999:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    299b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    299e:	6c                   	ins    BYTE PTR es:[rdi],dx
    299f:	31 30                	xor    DWORD PTR [rax],esi
    29a1:	30 30                	xor    BYTE PTR [rax],dh
    29a3:	30 30                	xor    BYTE PTR [rax],dh
    29a5:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    29a8:	45                   	rex.RB
    29a9:	43 34 49             	rex.XB xor al,0x49
    29ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    29ad:	76 45                	jbe    29f4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x444>
    29af:	45 52                	rex.RB push r10
    29b1:	4b 54                	rex.WXB push r12
    29b3:	5f                   	pop    rdi
    29b4:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    29b7:	69 6e 00 77 63 73 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74736377
    29be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29bf:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    29c2:	5f                   	pop    rdi
    29c3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    29c6:	31 31                	xor    DWORD PTR [rcx],esi
    29c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29cb:	66 70 6f             	data16 jo 2a3d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2d>
    29ce:	73 5f                	jae    2a2f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1f>
    29d0:	74 00                	je     29d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x422>
    29d2:	5f                   	pop    rdi
    29d3:	5a                   	pop    rdx
    29d4:	4e 53                	rex.WRX push rbx
    29d6:	74 36                	je     2a0e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x45e>
    29d8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    29db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29dd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29de:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    29e2:	61                   	(bad)
    29e3:	74 69                	je     2a4e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e>
    29e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29e7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    29e9:	53                   	push   rbx
    29ea:	74 35                	je     2a21 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x11>
    29ec:	72 61                	jb     2a4f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f>
    29ee:	74 69                	je     2a59 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x49>
    29f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f1:	49                   	rex.WB
    29f2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    29f4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    29f7:	6c                   	ins    BYTE PTR es:[rdi],dx
    29f8:	31 30                	xor    DWORD PTR [rax],esi
    29fa:	30 30                	xor    BYTE PTR [rax],dh
    29fc:	30 30                	xor    BYTE PTR [rax],dh
    29fe:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a01:	45                   	rex.RB
    2a02:	64 56                	fs push rsi
    2a04:	45 52                	rex.RB push r10
    2a06:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2a08:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2a0b:	65 72 61             	gs jb  2a6f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x5f>
    2a0e:	74 6f                	je     2a7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x6f>
    2a10:	72 2b                	jb     2a3d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2d>
    2a12:	3d 00 5f 5f 46       	cmp    eax,0x465f5f00
    2a17:	49                   	rex.WB
    2a18:	4c                   	rex.WR
    2a19:	45 00 61 63          	add    BYTE PTR [r9+0x63],r12b
    2a1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a1e:	73 68                	jae    2a88 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x78>
    2a20:	00 74 72 75          	add    BYTE PTR [rdx+rsi*2+0x75],dh
    2a24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a25:	63 00                	movsxd eax,DWORD PTR [rax]
    2a27:	5f                   	pop    rdi
    2a28:	5f                   	pop    rdi
    2a29:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    2a30:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2a33:	4f 5f                	rex.WRXB pop r15
    2a35:	62 61 63 6b 75       	(bad)
    2a3a:	70 5f                	jo     2a9b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x8b>
    2a3c:	62 61 73 65 00       	(bad)
    2a41:	73 65                	jae    2aa8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x98>
    2a43:	74 6c                	je     2ab1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa1>
    2a45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a46:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    2a49:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
    2a4d:	68 6f 72 74 62       	push   0x6274726f
    2a52:	75 66                	jne    2aba <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xaa>
    2a54:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    2a57:	74 69                	je     2ac2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xb2>
    2a59:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a5a:	3c 31                	cmp    al,0x31
    2a5c:	2c 20                	sub    al,0x20
    2a5e:	31 30                	xor    DWORD PTR [rax],esi
    2a60:	30 30                	xor    BYTE PTR [rax],dh
    2a62:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    2a66:	4e 53                	rex.WRX push rbx
    2a68:	74 36                	je     2aa0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x90>
    2a6a:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a6d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a6e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a6f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a70:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a74:	61                   	(bad)
    2a75:	74 69                	je     2ae0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd0>
    2a77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a79:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a7b:	53                   	push   rbx
    2a7c:	74 35                	je     2ab3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa3>
    2a7e:	72 61                	jb     2ae1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd1>
    2a80:	74 69                	je     2aeb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xdb>
    2a82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a83:	49                   	rex.WB
    2a84:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a86:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a89:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a8a:	31 30                	xor    DWORD PTR [rax],esi
    2a8c:	30 30                	xor    BYTE PTR [rax],dh
    2a8e:	30 30                	xor    BYTE PTR [rax],dh
    2a90:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a93:	45                   	rex.RB
    2a94:	36 5f                	ss pop rdi
    2a96:	53                   	push   rbx
    2a97:	5f                   	pop    rdi
    2a98:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2a9d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a9e:	00 77 69             	add    BYTE PTR [rdi+0x69],dh
    2aa1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa2:	74 5f                	je     2b03 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf3>
    2aa4:	74 00                	je     2aa6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x96>
    2aa6:	5f                   	pop    rdi
    2aa7:	5a                   	pop    rdx
    2aa8:	4e                   	rex.WRX
    2aa9:	4b 53                	rex.WXB push r11
    2aab:	74 36                	je     2ae3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd3>
    2aad:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2ab0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ab2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab3:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2ab7:	61                   	(bad)
    2ab8:	74 69                	je     2b23 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x113>
    2aba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2abb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2abc:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2abe:	53                   	push   rbx
    2abf:	74 35                	je     2af6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xe6>
    2ac1:	72 61                	jb     2b24 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x114>
    2ac3:	74 69                	je     2b2e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x11e>
    2ac5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ac6:	49                   	rex.WB
    2ac7:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2ac9:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2acc:	6c                   	ins    BYTE PTR es:[rdi],dx
    2acd:	31 30                	xor    DWORD PTR [rax],esi
    2acf:	30 30                	xor    BYTE PTR [rax],dh
    2ad1:	30 30                	xor    BYTE PTR [rax],dh
    2ad3:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2ad6:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    2ad8:	67 45 76 00          	addr32 rex.RB jbe 2adc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xcc>
    2adc:	5f                   	pop    rdi
    2add:	5a                   	pop    rdx
    2ade:	53                   	push   rbx
    2adf:	74 31                	je     2b12 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x102>
    2ae1:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2ae4:	75 6e                	jne    2b54 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x144>
    2ae6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ae7:	72 64                	jb     2b4d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x13d>
    2ae9:	65 72 65             	gs jb  2b51 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x141>
    2aec:	64 66 66 00 74 69 6d 	data16 data16 add BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    2af3:	65 73 70             	gs jae 2b66 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x156>
    2af6:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    2afa:	65 74 00             	gs je  2afd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xed>
    2afd:	5f                   	pop    rdi
    2afe:	5f                   	pop    rdi
    2aff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b00:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    2b05:	74 00                	je     2b07 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf7>
    2b07:	5f                   	pop    rdi
    2b08:	5a                   	pop    rdx
    2b09:	4e 53                	rex.WRX push rbx
    2b0b:	74 36                	je     2b43 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x133>
    2b0d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b12:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b13:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b17:	61                   	(bad)
    2b18:	74 69                	je     2b83 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x173>
    2b1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b1c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b1e:	53                   	push   rbx
    2b1f:	74 35                	je     2b56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x146>
    2b21:	72 61                	jb     2b84 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x174>
    2b23:	74 69                	je     2b8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x17e>
    2b25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b26:	49                   	rex.WB
    2b27:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b29:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b2c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b2d:	31 30                	xor    DWORD PTR [rax],esi
    2b2f:	30 30                	xor    BYTE PTR [rax],dh
    2b31:	30 30                	xor    BYTE PTR [rax],dh
    2b33:	30 30                	xor    BYTE PTR [rax],dh
    2b35:	30 30                	xor    BYTE PTR [rax],dh
    2b37:	45                   	rex.RB
    2b38:	45                   	rex.RB
    2b39:	45                   	rex.RB
    2b3a:	36 5f                	ss pop rdi
    2b3c:	53                   	push   rbx
    2b3d:	5f                   	pop    rdi
    2b3e:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2b43:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b44:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b47:	4e 53                	rex.WRX push rbx
    2b49:	74 36                	je     2b81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x171>
    2b4b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b51:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b55:	61                   	(bad)
    2b56:	74 69                	je     2bc1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b1>
    2b58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b59:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b5a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b5c:	53                   	push   rbx
    2b5d:	74 35                	je     2b94 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x184>
    2b5f:	72 61                	jb     2bc2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b2>
    2b61:	74 69                	je     2bcc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1bc>
    2b63:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b64:	49                   	rex.WB
    2b65:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b67:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b6a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b6b:	31 30                	xor    DWORD PTR [rax],esi
    2b6d:	30 30                	xor    BYTE PTR [rax],dh
    2b6f:	30 30                	xor    BYTE PTR [rax],dh
    2b71:	30 30                	xor    BYTE PTR [rax],dh
    2b73:	30 30                	xor    BYTE PTR [rax],dh
    2b75:	45                   	rex.RB
    2b76:	45                   	rex.RB
    2b77:	45                   	rex.RB
    2b78:	43 34 49             	rex.XB xor al,0x49
    2b7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b7c:	76 45                	jbe    2bc3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b3>
    2b7e:	45 52                	rex.RB push r10
    2b80:	4b 54                	rex.WXB push r12
    2b82:	5f                   	pop    rdi
    2b83:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b86:	53                   	push   rbx
    2b87:	74 34                	je     2bbd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1ad>
    2b89:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b8d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2b91:	53                   	push   rbx
    2b92:	74 34                	je     2bc8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b8>
    2b94:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b97:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b98:	66 00 66 6f          	data16 add BYTE PTR [rsi+0x6f],ah
    2b9c:	70 65                	jo     2c03 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1f3>
    2b9e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b9f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ba2:	53                   	push   rbx
    2ba3:	74 36                	je     2bdb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1cb>
    2ba5:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ba6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ba7:	72 69                	jb     2c12 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x202>
    2ba9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2baa:	74 65                	je     2c11 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x201>
    2bac:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2baf:	61                   	(bad)
    2bb0:	72 63                	jb     2c15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x205>
    2bb2:	68 5f 66 69 6c       	push   0x6c69665f
    2bb7:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2bbb:	73 77                	jae    2c34 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x224>
    2bbd:	61                   	(bad)
    2bbe:	70 70                	jo     2c30 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x220>
    2bc0:	61                   	(bad)
    2bc1:	62                   	(bad)
    2bc2:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc3:	65 5f                	gs pop rdi
    2bc5:	64 65 74 61          	fs gs je 2c2a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x21a>
    2bc9:	69 6c 73 00 5f 5a 53 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x74535a5f
    2bd0:	74 
    2bd1:	33 6c 6f 67          	xor    ebp,DWORD PTR [rdi+rbp*2+0x67]
    2bd5:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2bd9:	53                   	push   rbx
    2bda:	74 33                	je     2c0f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1ff>
    2bdc:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bdd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bde:	67 66 00 63 68       	data16 add BYTE PTR [ebx+0x68],ah
    2be3:	61                   	(bad)
    2be4:	72 33                	jb     2c19 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x209>
    2be6:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    2be9:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2bec:	77 69                	ja     2c57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x247>
    2bee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bef:	64 00 72 61          	add    BYTE PTR fs:[rdx+0x61],dh
    2bf3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf4:	64 5f                	fs pop rdi
    2bf6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf7:	75 6d                	jne    2c66 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x256>
    2bf9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bfc:	53                   	push   rbx
    2bfd:	74 34                	je     2c33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x223>
    2bff:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c00:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c01:	67 62 65 00 5f 5a    	(bad)
    2c07:	53                   	push   rbx
    2c08:	74 34                	je     2c3e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x22e>
    2c0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c0b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c0c:	67 62 66 00 5f 5a    	(bad)
    2c12:	4e 53                	rex.WRX push rbx
    2c14:	74 36                	je     2c4c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x23c>
    2c16:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2c19:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1c:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c1d:	69 49 4e 53 5f 33 5f 	imul   ecx,DWORD PTR [rcx+0x4e],0x5f335f53
    2c24:	56                   	push   rsi
    2c25:	32 31                	xor    dh,BYTE PTR [rcx]
    2c27:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2c2a:	65 61                	gs (bad)
    2c2c:	64 79 5f             	fs jns 2c8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x27e>
    2c2f:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2c33:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2c37:	5f                   	pop    rdi
    2c38:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2c3c:	61                   	(bad)
    2c3d:	74 69                	je     2ca8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x298>
    2c3f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c40:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c41:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2c43:	53                   	push   rbx
    2c44:	74 35                	je     2c7b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x26b>
    2c46:	72 61                	jb     2ca9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x299>
    2c48:	74 69                	je     2cb3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2a3>
    2c4a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c4b:	49                   	rex.WB
    2c4c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2c4e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2c51:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c52:	31 30                	xor    DWORD PTR [rax],esi
    2c54:	30 30                	xor    BYTE PTR [rax],dh
    2c56:	30 30                	xor    BYTE PTR [rax],dh
    2c58:	30 30                	xor    BYTE PTR [rax],dh
    2c5a:	30 30                	xor    BYTE PTR [rax],dh
    2c5c:	45                   	rex.RB
    2c5d:	45                   	rex.RB
    2c5e:	45                   	rex.RB
    2c5f:	45 53                	rex.RB push r11
    2c61:	36 5f                	ss pop rdi
    2c63:	45                   	rex.RB
    2c64:	45                   	rex.RB
    2c65:	4e 53                	rex.WRX push rbx
    2c67:	74 31                	je     2c9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x28a>
    2c69:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2c6c:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c6d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c6e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c70:	5f                   	pop    rdi
    2c71:	74 79                	je     2cec <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2dc>
    2c73:	70 65                	jo     2cda <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ca>
    2c75:	49                   	rex.WB
    2c76:	4a 54                	rex.WX push rsp
    2c78:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    2c7b:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    2c7e:	45 34 74             	rex.RB xor al,0x74
    2c81:	79 70                	jns    2cf3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e3>
    2c83:	65 45 52             	gs rex.RB push r10
    2c86:	4b                   	rex.WXB
    2c87:	4e 53                	rex.WRX push rbx
    2c89:	5f                   	pop    rdi
    2c8a:	31 30                	xor    DWORD PTR [rax],esi
    2c8c:	74 69                	je     2cf7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e7>
    2c8e:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c8f:	65 5f                	gs pop rdi
    2c91:	70 6f                	jo     2d02 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2f2>
    2c93:	69 6e 74 49 54 5f 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535f5449
    2c9a:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    2c9d:	45 52                	rex.RB push r10
    2c9f:	4b                   	rex.WXB
    2ca0:	4e 53                	rex.WRX push rbx
    2ca2:	43 5f                	rex.XB pop r15
    2ca4:	49 53                	rex.WB push r11
    2ca6:	44 5f                	rex.R pop rdi
    2ca8:	53                   	push   rbx
    2ca9:	39 5f 45             	cmp    DWORD PTR [rdi+0x45],ebx
    2cac:	45 00 66 6d          	add    BYTE PTR [r14+0x6d],r12b
    2cb0:	61                   	(bad)
    2cb1:	78 00                	js     2cb3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2a3>
    2cb3:	5f                   	pop    rdi
    2cb4:	5a                   	pop    rdx
    2cb5:	4e                   	rex.WRX
    2cb6:	4b 53                	rex.WXB push r11
    2cb8:	74 36                	je     2cf0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2cba:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2cbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc0:	31 30                	xor    DWORD PTR [rax],esi
    2cc2:	74 69                	je     2d2d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x31d>
    2cc4:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cc5:	65 5f                	gs pop rdi
    2cc7:	70 6f                	jo     2d38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x328>
    2cc9:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2cd0:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2cd3:	32 31                	xor    dh,BYTE PTR [rcx]
    2cd5:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2cd8:	65 61                	gs (bad)
    2cda:	64 79 5f             	fs jns 2d3c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x32c>
    2cdd:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2ce1:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2ce5:	5f                   	pop    rdi
    2ce6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2cea:	61                   	(bad)
    2ceb:	74 69                	je     2d56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x346>
    2ced:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cef:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2cf1:	53                   	push   rbx
    2cf2:	74 35                	je     2d29 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x319>
    2cf4:	72 61                	jb     2d57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x347>
    2cf6:	74 69                	je     2d61 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x351>
    2cf8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf9:	49                   	rex.WB
    2cfa:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2cfc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2cff:	6c                   	ins    BYTE PTR es:[rdi],dx
    2d00:	31 30                	xor    DWORD PTR [rax],esi
    2d02:	30 30                	xor    BYTE PTR [rax],dh
    2d04:	30 30                	xor    BYTE PTR [rax],dh
    2d06:	30 30                	xor    BYTE PTR [rax],dh
    2d08:	30 30                	xor    BYTE PTR [rax],dh
    2d0a:	45                   	rex.RB
    2d0b:	45                   	rex.RB
    2d0c:	45                   	rex.RB
    2d0d:	45                   	rex.RB
    2d0e:	45 31 36             	xor    DWORD PTR [r14],r14d
    2d11:	74 69                	je     2d7c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x36c>
    2d13:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d14:	65 5f                	gs pop rdi
    2d16:	73 69                	jae    2d81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x371>
    2d18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d19:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2d1c:	65 70 6f             	gs jo  2d8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x37e>
    2d1f:	63 68 45             	movsxd ebp,DWORD PTR [rax+0x45]
    2d22:	76 00                	jbe    2d24 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x314>
    2d24:	5f                   	pop    rdi
    2d25:	5a                   	pop    rdx
    2d26:	53                   	push   rbx
    2d27:	74 36                	je     2d5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x34f>
    2d29:	69 73 6c 65 73 73 66 	imul   esi,DWORD PTR [rbx+0x6c],0x66737365
    2d30:	66 00 5f 4e          	data16 add BYTE PTR [rdi+0x4e],bl
    2d34:	75 6d                	jne    2da3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x393>
    2d36:	49 73 4f             	rex.WB jae 2d88 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x378>
    2d39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d3a:	65 00 6c 67 61       	add    BYTE PTR gs:[rdi+riz*2+0x61],ch
    2d3f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d40:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d41:	61                   	(bad)
    2d42:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d45:	53                   	push   rbx
    2d46:	74 36                	je     2d7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x36e>
    2d48:	69 73 6c 65 73 73 64 	imul   esi,DWORD PTR [rbx+0x6c],0x64737365
    2d4f:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2d53:	53                   	push   rbx
    2d54:	74 35                	je     2d8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x37b>
    2d56:	69 73 69 6e 66 64 00 	imul   esi,DWORD PTR [rbx+0x69],0x64666e
    2d5d:	5f                   	pop    rdi
    2d5e:	5a                   	pop    rdx
    2d5f:	53                   	push   rbx
    2d60:	74 35                	je     2d97 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x387>
    2d62:	69 73 69 6e 66 65 00 	imul   esi,DWORD PTR [rbx+0x69],0x65666e
    2d69:	5f                   	pop    rdi
    2d6a:	5a                   	pop    rdx
    2d6b:	53                   	push   rbx
    2d6c:	74 35                	je     2da3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x393>
    2d6e:	61                   	(bad)
    2d6f:	73 69                	jae    2dda <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ca>
    2d71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d72:	68 65 00 5f 5a       	push   0x5a5f0065
    2d77:	53                   	push   rbx
    2d78:	74 35                	je     2daf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x39f>
    2d7a:	61                   	(bad)
    2d7b:	73 69                	jae    2de6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d6>
    2d7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d7e:	68 66 00 77 63       	push   0x63770066
    2d83:	73 66                	jae    2deb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3db>
    2d85:	74 69                	je     2df0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e0>
    2d87:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d88:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2d8c:	53                   	push   rbx
    2d8d:	74 34                	je     2dc3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b3>
    2d8f:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2d92:	68 65 00 5f 5a       	push   0x5a5f0065
    2d97:	53                   	push   rbx
    2d98:	74 34                	je     2dce <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3be>
    2d9a:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2d9d:	68 66 00 66 70       	push   0x70660066
    2da2:	72 69                	jb     2e0d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3fd>
    2da4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2da5:	74 66                	je     2e0d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3fd>
    2da7:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2daa:	65 72 61             	gs jb  2e0e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3fe>
    2dad:	74 6f                	je     2e1e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40e>
    2daf:	72 2a                	jb     2ddb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3cb>
    2db1:	3d 00 75 69 6e       	cmp    eax,0x6e697500
    2db6:	74 5f                	je     2e17 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x407>
    2db8:	66 61                	data16 (bad)
    2dba:	73 74                	jae    2e30 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x420>
    2dbc:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2dbf:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dc2:	69 73 5f 72 61 74 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69746172
    2dc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dca:	5f                   	pop    rdi
    2dcb:	76 00                	jbe    2dcd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3bd>
    2dcd:	66 72 65             	data16 jb 2e35 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x425>
    2dd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dd1:	70 65                	jo     2e38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x428>
    2dd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dd4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dd7:	64 65 62 75 67 00 66 	(bad)
    2dde:	65 72 72             	gs jb  2e53 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x443>
    2de1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2de2:	72 00                	jb     2de4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d4>
    2de4:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2de7:	72 65                	jb     2e4e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43e>
    2de9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dea:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    2ded:	73 79                	jae    2e68 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x458>
    2def:	6d                   	ins    DWORD PTR es:[rdi],dx
    2df0:	62 6f 6c 00 5f       	(bad)
    2df5:	5a                   	pop    rdx
    2df6:	53                   	push   rbx
    2df7:	74 31                	je     2e2a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41a>
    2df9:	34 69                	xor    al,0x69
    2dfb:	73 67                	jae    2e64 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x454>
    2dfd:	72 65                	jb     2e64 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x454>
    2dff:	61                   	(bad)
    2e00:	74 65                	je     2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x457>
    2e02:	72 65                	jb     2e69 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x459>
    2e04:	71 75                	jno    2e7b <_Z4testPFj8string_tE9Filenames8TestDataj+0xb>
    2e06:	61                   	(bad)
    2e07:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e08:	64 64 00 73 63       	fs add BYTE PTR fs:[rbx+0x63],dh
    2e0d:	61                   	(bad)
    2e0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e0f:	62 6e 00 5f 5a       	(bad)
    2e14:	53                   	push   rbx
    2e15:	74 33                	je     2e4a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43a>
    2e17:	65 72 66             	gs jb  2e80 <_Z4testPFj8string_tE9Filenames8TestDataj+0x10>
    2e1a:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e1e:	53                   	push   rbx
    2e1f:	74 33                	je     2e54 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x444>
    2e21:	65 72 66             	gs jb  2e8a <_Z4testPFj8string_tE9Filenames8TestDataj+0x1a>
    2e24:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    2e28:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e2a:	61                   	(bad)
    2e2b:	74 33                	je     2e60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x450>
    2e2d:	32 00                	xor    al,BYTE PTR [rax]
    2e2f:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2e36:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    2e3a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e3b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2e3d:	61                   	(bad)
    2e3e:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e3f:	65 73 00             	gs jae 2e42 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x432>
    2e42:	5f                   	pop    rdi
    2e43:	5f                   	pop    rdi
    2e44:	73 74                	jae    2eba <_Z4testPFj8string_tE9Filenames8TestDataj+0x4a>
    2e46:	61                   	(bad)
    2e47:	74 65                	je     2eae <_Z4testPFj8string_tE9Filenames8TestDataj+0x3e>
    2e49:	00 64 75 72          	add    BYTE PTR [rbp+rsi*2+0x72],ah
    2e4d:	61                   	(bad)
    2e4e:	74 69                	je     2eb9 <_Z4testPFj8string_tE9Filenames8TestDataj+0x49>
    2e50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e51:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e52:	3c 6c                	cmp    al,0x6c
    2e54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e55:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e56:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2e5a:	74 2c                	je     2e88 <_Z4testPFj8string_tE9Filenames8TestDataj+0x18>
    2e5c:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2e5f:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2e62:	72 61                	jb     2ec5 <_Z7testAllPKcjS0_+0x5>
    2e64:	74 69                	je     2ecf <_Z7testAllPKcjS0_+0xf>
    2e66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e67:	3c 31                	cmp    al,0x31
    2e69:	2c 20                	sub    al,0x20
    2e6b:	31 30                	xor    DWORD PTR [rax],esi
    2e6d:	30 30                	xor    BYTE PTR [rax],dh
    2e6f:	30 30                	xor    BYTE PTR [rax],dh
    2e71:	30 30                	xor    BYTE PTR [rax],dh
    2e73:	30 30                	xor    BYTE PTR [rax],dh
    2e75:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2e78:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2e7b:	65 72 61             	gs jb  2edf <_Z7testAllPKcjS0_+0x1f>
    2e7e:	74 6f                	je     2eef <_Z7testAllPKcjS0_+0x2f>
    2e80:	72 2b                	jb     2ead <_Z4testPFj8string_tE9Filenames8TestDataj+0x3d>
    2e82:	2b 00                	sub    eax,DWORD PTR [rax]
    2e84:	5f                   	pop    rdi
    2e85:	5a                   	pop    rdx
    2e86:	53                   	push   rbx
    2e87:	74 36                	je     2ebf <_Z4testPFj8string_tE9Filenames8TestDataj+0x4f>
    2e89:	69 73 6c 65 73 73 65 	imul   esi,DWORD PTR [rbx+0x6c],0x65737365
    2e90:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e94:	53                   	push   rbx
    2e95:	74 34                	je     2ecb <_Z7testAllPKcjS0_+0xb>
    2e97:	72 69                	jb     2f02 <_Z7testAllPKcjS0_+0x42>
    2e99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e9a:	74 65                	je     2f01 <_Z7testAllPKcjS0_+0x41>
    2e9c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2e9f:	53                   	push   rbx
    2ea0:	74 34                	je     2ed6 <_Z7testAllPKcjS0_+0x16>
    2ea2:	72 69                	jb     2f0d <_Z7testAllPKcjS0_+0x4d>
    2ea4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ea5:	74 66                	je     2f0d <_Z7testAllPKcjS0_+0x4d>
    2ea7:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2eaa:	61                   	(bad)
    2eab:	72 74                	jb     2f21 <_Z7testAllPKcjS0_+0x61>
    2ead:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eb0:	73 74                	jae    2f26 <_Z7testAllPKcjS0_+0x66>
    2eb2:	72 65                	jb     2f19 <_Z7testAllPKcjS0_+0x59>
    2eb4:	61                   	(bad)
    2eb5:	6d                   	ins    DWORD PTR es:[rdi],dx
    2eb6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eb9:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2ec0:	73 74                	jae    2f36 <_Z7testAllPKcjS0_+0x76>
    2ec2:	36 34 5f             	ss xor al,0x5f
    2ec5:	74 00                	je     2ec7 <_Z7testAllPKcjS0_+0x7>
    2ec7:	64 75 72             	fs jne 2f3c <_Z7testAllPKcjS0_+0x7c>
    2eca:	61                   	(bad)
    2ecb:	74 69                	je     2f36 <_Z7testAllPKcjS0_+0x76>
    2ecd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ece:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ecf:	3c 6c                	cmp    al,0x6c
    2ed1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ed2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed3:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2ed7:	74 3e                	je     2f17 <_Z7testAllPKcjS0_+0x57>
    2ed9:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    2edc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2edd:	5f                   	pop    rdi
    2ede:	67 72 6f             	addr32 jb 2f50 <_Z7testAllPKcjS0_+0x90>
    2ee1:	75 70                	jne    2f53 <_Z7testAllPKcjS0_+0x93>
    2ee3:	69 6e 67 00 5f 5a 32 	imul   ebp,DWORD PTR [rsi+0x67],0x325a5f00
    2eea:	37                   	(bad)
    2eeb:	73 74                	jae    2f61 <_Z7testAllPKcjS0_+0xa1>
    2eed:	61                   	(bad)
    2eee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2eef:	64 61                	fs (bad)
    2ef1:	72 74                	jb     2f67 <_Z7testAllPKcjS0_+0xa7>
    2ef3:	44                   	rex.R
    2ef4:	65 76 69             	gs jbe 2f60 <_Z7testAllPKcjS0_+0xa0>
    2ef7:	61                   	(bad)
    2ef8:	74 69                	je     2f63 <_Z7testAllPKcjS0_+0xa3>
    2efa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2efb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2efc:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2efe:	6c                   	ins    BYTE PTR es:[rdi],dx
    2eff:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f00:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2f07:	37                   	(bad)
    2f08:	48 61                	rex.W (bad)
    2f0a:	73 68                	jae    2f74 <_Z7testAllPKcjS0_+0xb4>
    2f0c:	4d 61                	rex.WRB (bad)
    2f0e:	70 66                	jo     2f76 <_Z7testAllPKcjS0_+0xb6>
    2f10:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f13:	75 69                	jne    2f7e <_Z7testAllPKcjS0_+0xbe>
    2f15:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f16:	74 6d                	je     2f85 <_Z7testAllPKcjS0_+0xc5>
    2f18:	61                   	(bad)
    2f19:	78 5f                	js     2f7a <_Z7testAllPKcjS0_+0xba>
    2f1b:	74 00                	je     2f1d <_Z7testAllPKcjS0_+0x5d>
    2f1d:	68 79 70 6f 74       	push   0x746f7079
    2f22:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f25:	53                   	push   rbx
    2f26:	74 31                	je     2f59 <_Z7testAllPKcjS0_+0x99>
    2f28:	34 69                	xor    al,0x69
    2f2a:	73 67                	jae    2f93 <_Z7testAllPKcjS0_+0xd3>
    2f2c:	72 65                	jb     2f93 <_Z7testAllPKcjS0_+0xd3>
    2f2e:	61                   	(bad)
    2f2f:	74 65                	je     2f96 <_Z7testAllPKcjS0_+0xd6>
    2f31:	72 65                	jb     2f98 <_Z7testAllPKcjS0_+0xd8>
    2f33:	71 75                	jno    2faa <_Z7testAllPKcjS0_+0xea>
    2f35:	61                   	(bad)
    2f36:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f37:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2f3c:	53                   	push   rbx
    2f3d:	74 35                	je     2f74 <_Z7testAllPKcjS0_+0xb4>
    2f3f:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f43:	72 65                	jb     2faa <_Z7testAllPKcjS0_+0xea>
    2f45:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f48:	53                   	push   rbx
    2f49:	74 35                	je     2f80 <_Z7testAllPKcjS0_+0xc0>
    2f4b:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f4f:	72 66                	jb     2fb7 <_Z7testAllPKcjS0_+0xf7>
    2f51:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f54:	4e                   	rex.WRX
    2f55:	4b 53                	rex.WXB push r11
    2f57:	74 36                	je     2f8f <_Z7testAllPKcjS0_+0xcf>
    2f59:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2f5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f5f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2f63:	61                   	(bad)
    2f64:	74 69                	je     2fcf <_Z7testAllPKcjS0_+0x10f>
    2f66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f67:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f68:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2f6a:	53                   	push   rbx
    2f6b:	74 35                	je     2fa2 <_Z7testAllPKcjS0_+0xe2>
    2f6d:	72 61                	jb     2fd0 <_Z7testAllPKcjS0_+0x110>
    2f6f:	74 69                	je     2fda <_Z7testAllPKcjS0_+0x11a>
    2f71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f72:	49                   	rex.WB
    2f73:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2f75:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2f78:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f79:	31 30                	xor    DWORD PTR [rax],esi
    2f7b:	30 30                	xor    BYTE PTR [rax],dh
    2f7d:	30 30                	xor    BYTE PTR [rax],dh
    2f7f:	30 30                	xor    BYTE PTR [rax],dh
    2f81:	30 30                	xor    BYTE PTR [rax],dh
    2f83:	45                   	rex.RB
    2f84:	45                   	rex.RB
    2f85:	45 70 73             	rex.RB jo 2ffb <_Z7testAllPKcjS0_+0x13b>
    2f88:	45 76 00             	rex.RB jbe 2f8b <_Z7testAllPKcjS0_+0xcb>
    2f8b:	77 63                	ja     2ff0 <_Z7testAllPKcjS0_+0x130>
    2f8d:	73 63                	jae    2ff2 <_Z7testAllPKcjS0_+0x132>
    2f8f:	61                   	(bad)
    2f90:	74 00                	je     2f92 <_Z7testAllPKcjS0_+0xd2>
    2f92:	74 6d                	je     3001 <_Z7testAllPKcjS0_+0x141>
    2f94:	70 66                	jo     2ffc <_Z7testAllPKcjS0_+0x13c>
    2f96:	69 6c 65 00 31 31 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x5f5f3131
    2f9d:	5f 
    2f9e:	6d                   	ins    DWORD PTR es:[rdi],dx
    2f9f:	62 73 74 61 74       	(bad)
    2fa4:	65 5f                	gs pop rdi
    2fa6:	74 00                	je     2fa8 <_Z7testAllPKcjS0_+0xe8>
    2fa8:	69 6e 74 5f 70 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f705f
    2faf:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    2fb6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fb7:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2fba:	65 72 69             	gs jb  3026 <_Z7testAllPKcjS0_+0x166>
    2fbd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fbe:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2fc1:	5f                   	pop    rdi
    2fc2:	5f                   	pop    rdi
    2fc3:	73 77                	jae    303c <_Z7testAllPKcjS0_+0x17c>
    2fc5:	61                   	(bad)
    2fc6:	70 70                	jo     3038 <_Z7testAllPKcjS0_+0x178>
    2fc8:	61                   	(bad)
    2fc9:	62                   	(bad)
    2fca:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fcb:	65 5f                	gs pop rdi
    2fcd:	77 69                	ja     3038 <_Z7testAllPKcjS0_+0x178>
    2fcf:	74 68                	je     3039 <_Z7testAllPKcjS0_+0x179>
    2fd1:	5f                   	pop    rdi
    2fd2:	64 65 74 61          	fs gs je 3037 <_Z7testAllPKcjS0_+0x177>
    2fd6:	69 6c 73 00 74 6d 5f 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x7a5f6d74
    2fdd:	7a 
    2fde:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fdf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fe0:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2fe4:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    2feb:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    2fee:	67 65 74 63          	addr32 gs je 3055 <_Z7testAllPKcjS0_+0x195>
    2ff2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ff5:	4e 53                	rex.WRX push rbx
    2ff7:	74 36                	je     302f <_Z7testAllPKcjS0_+0x16f>
    2ff9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2ffc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ffd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ffe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fff:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3003:	61                   	(bad)
    3004:	74 69                	je     306f <_Z7testAllPKcjS0_+0x1af>
    3006:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3007:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3008:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    300a:	53                   	push   rbx
    300b:	74 35                	je     3042 <_Z7testAllPKcjS0_+0x182>
    300d:	72 61                	jb     3070 <_Z7testAllPKcjS0_+0x1b0>
    300f:	74 69                	je     307a <_Z7testAllPKcjS0_+0x1ba>
    3011:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3012:	49                   	rex.WB
    3013:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3015:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3018:	6c                   	ins    BYTE PTR es:[rdi],dx
    3019:	31 30                	xor    DWORD PTR [rax],esi
    301b:	30 30                	xor    BYTE PTR [rax],dh
    301d:	30 30                	xor    BYTE PTR [rax],dh
    301f:	30 30                	xor    BYTE PTR [rax],dh
    3021:	30 30                	xor    BYTE PTR [rax],dh
    3023:	45                   	rex.RB
    3024:	45                   	rex.RB
    3025:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    3029:	78 45                	js     3070 <_Z7testAllPKcjS0_+0x1b0>
    302b:	76 00                	jbe    302d <_Z7testAllPKcjS0_+0x16d>
    302d:	5f                   	pop    rdi
    302e:	5a                   	pop    rdx
    302f:	53                   	push   rbx
    3030:	74 35                	je     3067 <_Z7testAllPKcjS0_+0x1a7>
    3032:	69 6c 6f 67 62 66 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006662
    3039:	5f 
    303a:	5a                   	pop    rdx
    303b:	53                   	push   rbx
    303c:	74 33                	je     3071 <_Z7testAllPKcjS0_+0x1b1>
    303e:	70 6f                	jo     30af <_Z7testAllPKcjS0_+0x1ef>
    3040:	77 65                	ja     30a7 <_Z7testAllPKcjS0_+0x1e7>
    3042:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    3046:	72 74                	jb     30bc <_Z7testAllPKcjS0_+0x1fc>
    3048:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3049:	6d                   	ins    DWORD PTR es:[rdi],dx
    304a:	62                   	(bad)
    304b:	00 6c 63 6f          	add    BYTE PTR [rbx+riz*2+0x6f],ch
    304f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3050:	76 00                	jbe    3052 <_Z7testAllPKcjS0_+0x192>
    3052:	5f                   	pop    rdi
    3053:	5a                   	pop    rdx
    3054:	53                   	push   rbx
    3055:	74 35                	je     308c <_Z7testAllPKcjS0_+0x1cc>
    3057:	69 6c 6f 67 62 65 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006562
    305e:	5f 
    305f:	5a                   	pop    rdx
    3060:	53                   	push   rbx
    3061:	74 31                	je     3094 <_Z7testAllPKcjS0_+0x1d4>
    3063:	34 69                	xor    al,0x69
    3065:	73 67                	jae    30ce <_Z7testAllPKcjS0_+0x20e>
    3067:	72 65                	jb     30ce <_Z7testAllPKcjS0_+0x20e>
    3069:	61                   	(bad)
    306a:	74 65                	je     30d1 <_Z7testAllPKcjS0_+0x211>
    306c:	72 65                	jb     30d3 <_Z7testAllPKcjS0_+0x213>
    306e:	71 75                	jno    30e5 <_Z7testAllPKcjS0_+0x225>
    3070:	61                   	(bad)
    3071:	6c                   	ins    BYTE PTR es:[rdi],dx
    3072:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    3077:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    307a:	65 73 74             	gs jae 30f1 <_Z7testAllPKcjS0_+0x231>
    307d:	53                   	push   rbx
    307e:	65 61                	gs (bad)
    3080:	72 63                	jb     30e5 <_Z7testAllPKcjS0_+0x225>
    3082:	68 54 69 6d 65       	push   0x656d6954
    3087:	50                   	push   rax
    3088:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    308b:	4f 5f                	rex.WRXB pop r15
    308d:	46                   	rex.RX
    308e:	49                   	rex.WB
    308f:	4c                   	rex.WR
    3090:	45 50                	rex.RB push r8
    3092:	46 6a 38             	rex.RX push 0x38
    3095:	73 74                	jae    310b <_Z7testAllPKcjS0_+0x24b>
    3097:	72 69                	jb     3102 <_Z7testAllPKcjS0_+0x242>
    3099:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    309a:	67 5f                	addr32 pop rdi
    309c:	74 45                	je     30e3 <_Z7testAllPKcjS0_+0x223>
    309e:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    30a2:	74 44                	je     30e8 <_Z7testAllPKcjS0_+0x228>
    30a4:	61                   	(bad)
    30a5:	74 61                	je     3108 <_Z7testAllPKcjS0_+0x248>
    30a7:	6a 00                	push   0x0
    30a9:	5f                   	pop    rdi
    30aa:	49                   	rex.WB
    30ab:	4f 5f                	rex.WRXB pop r15
    30ad:	72 65                	jb     3114 <_Z7testAllPKcjS0_+0x254>
    30af:	61                   	(bad)
    30b0:	64 5f                	fs pop rdi
    30b2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30b4:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    30b8:	53                   	push   rbx
    30b9:	74 35                	je     30f0 <_Z7testAllPKcjS0_+0x230>
    30bb:	6c                   	ins    BYTE PTR es:[rdi],dx
    30bc:	72 69                	jb     3127 <_Z7testAllPKcjS0_+0x267>
    30be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30bf:	74 65                	je     3126 <_Z7testAllPKcjS0_+0x266>
    30c1:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    30c4:	73 6e                	jae    3134 <_Z7testAllPKcjS0_+0x274>
    30c6:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    30c9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    30cc:	53                   	push   rbx
    30cd:	74 39                	je     3108 <_Z7testAllPKcjS0_+0x248>
    30cf:	72 65                	jb     3136 <_Z7testAllPKcjS0_+0x276>
    30d1:	6d                   	ins    DWORD PTR es:[rdi],dx
    30d2:	61                   	(bad)
    30d3:	69 6e 64 65 72 65 65 	imul   ebp,DWORD PTR [rsi+0x64],0x65657265
    30da:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30dd:	65 72 61             	gs jb  3141 <_Z7testAllPKcjS0_+0x281>
    30e0:	74 6f                	je     3151 <_Z7testAllPKcjS0_+0x291>
    30e2:	72 2d                	jb     3111 <_Z7testAllPKcjS0_+0x251>
    30e4:	2d 00 69 6e 74       	sub    eax,0x746e6900
    30e9:	5f                   	pop    rdi
    30ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30eb:	5f                   	pop    rdi
    30ec:	73 69                	jae    3157 <_Z7testAllPKcjS0_+0x297>
    30ee:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    30f0:	5f                   	pop    rdi
    30f1:	70 6f                	jo     3162 <_Z7testAllPKcjS0_+0x2a2>
    30f3:	73 6e                	jae    3163 <_Z7testAllPKcjS0_+0x2a3>
    30f5:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30f8:	65 72 61             	gs jb  315c <_Z7testAllPKcjS0_+0x29c>
    30fb:	74 6f                	je     316c <_Z7testAllPKcjS0_+0x2ac>
    30fd:	72 2d                	jb     312c <_Z7testAllPKcjS0_+0x26c>
    30ff:	3d 00 5f 66 69       	cmp    eax,0x69665f00
    3104:	6c                   	ins    BYTE PTR es:[rdi],dx
    3105:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3107:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3108:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    310b:	6c                   	ins    BYTE PTR es:[rdi],dx
    310c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    310d:	61                   	(bad)
    310e:	74 31                	je     3141 <_Z7testAllPKcjS0_+0x281>
    3110:	32 38                	xor    bh,BYTE PTR [rax]
    3112:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3115:	34 74                	xor    al,0x74
    3117:	65 73 74             	gs jae 318e <_Z7testAllPKcjS0_+0x2ce>
    311a:	50                   	push   rax
    311b:	46 6a 38             	rex.RX push 0x38
    311e:	73 74                	jae    3194 <_Z7testAllPKcjS0_+0x2d4>
    3120:	72 69                	jb     318b <_Z7testAllPKcjS0_+0x2cb>
    3122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3123:	67 5f                	addr32 pop rdi
    3125:	74 45                	je     316c <_Z7testAllPKcjS0_+0x2ac>
    3127:	39 46 69             	cmp    DWORD PTR [rsi+0x69],eax
    312a:	6c                   	ins    BYTE PTR es:[rdi],dx
    312b:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    312d:	61                   	(bad)
    312e:	6d                   	ins    DWORD PTR es:[rdi],dx
    312f:	65 73 38             	gs jae 316a <_Z7testAllPKcjS0_+0x2aa>
    3132:	54                   	push   rsp
    3133:	65 73 74             	gs jae 31aa <_Z7testAllPKcjS0_+0x2ea>
    3136:	44 61                	rex.R (bad)
    3138:	74 61                	je     319b <_Z7testAllPKcjS0_+0x2db>
    313a:	6a 00                	push   0x0
    313c:	75 69                	jne    31a7 <_Z7testAllPKcjS0_+0x2e7>
    313e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    313f:	74 5f                	je     31a0 <_Z7testAllPKcjS0_+0x2e0>
    3141:	66 61                	data16 (bad)
    3143:	73 74                	jae    31b9 <_Z7testAllPKcjS0_+0x2f9>
    3145:	31 36                	xor    DWORD PTR [rsi],esi
    3147:	5f                   	pop    rdi
    3148:	74 00                	je     314a <_Z7testAllPKcjS0_+0x28a>
    314a:	5f                   	pop    rdi
    314b:	5a                   	pop    rdx
    314c:	53                   	push   rbx
    314d:	74 33                	je     3182 <_Z7testAllPKcjS0_+0x2c2>
    314f:	70 6f                	jo     31c0 <_Z7testAllPKcjS0_+0x300>
    3151:	77 66                	ja     31b9 <_Z7testAllPKcjS0_+0x2f9>
    3153:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    3157:	73 72                	jae    31cb <_Z7testAllPKcjS0_+0x30b>
    3159:	74 6f                	je     31ca <_Z7testAllPKcjS0_+0x30a>
    315b:	77 63                	ja     31c0 <_Z7testAllPKcjS0_+0x300>
    315d:	73 00                	jae    315f <_Z7testAllPKcjS0_+0x29f>
    315f:	69 73 6c 65 73 73 00 	imul   esi,DWORD PTR [rbx+0x6c],0x737365
    3166:	5f                   	pop    rdi
    3167:	5f                   	pop    rdi
    3168:	64 75 72             	fs jne 31dd <_Z7testAllPKcjS0_+0x31d>
    316b:	61                   	(bad)
    316c:	74 69                	je     31d7 <_Z7testAllPKcjS0_+0x317>
    316e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    316f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3170:	5f                   	pop    rdi
    3171:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    3174:	74 5f                	je     31d5 <_Z7testAllPKcjS0_+0x315>
    3176:	69 6d 70 6c 3c 73 74 	imul   ebp,DWORD PTR [rbp+0x70],0x74733c6c
    317d:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3180:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3183:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3184:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3185:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3186:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    3188:	64 75 72             	fs jne 31fd <_Z7testAllPKcjS0_+0x33d>
    318b:	61                   	(bad)
    318c:	74 69                	je     31f7 <_Z7testAllPKcjS0_+0x337>
    318e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    318f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3190:	3c 6c                	cmp    al,0x6c
    3192:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3193:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3194:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3198:	74 2c                	je     31c6 <_Z7testAllPKcjS0_+0x306>
    319a:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    319d:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31a0:	72 61                	jb     3203 <_Z7testAllPKcjS0_+0x343>
    31a2:	74 69                	je     320d <_Z7testAllPKcjS0_+0x34d>
    31a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31a5:	3c 31                	cmp    al,0x31
    31a7:	2c 20                	sub    al,0x20
    31a9:	31 30                	xor    DWORD PTR [rax],esi
    31ab:	30 30                	xor    BYTE PTR [rax],dh
    31ad:	30 30                	xor    BYTE PTR [rax],dh
    31af:	30 3e                	xor    BYTE PTR [rsi],bh
    31b1:	20 3e                	and    BYTE PTR [rsi],bh
    31b3:	2c 20                	sub    al,0x20
    31b5:	73 74                	jae    322b <_Z7testAllPKcjS0_+0x36b>
    31b7:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31ba:	72 61                	jb     321d <_Z7testAllPKcjS0_+0x35d>
    31bc:	74 69                	je     3227 <_Z7testAllPKcjS0_+0x367>
    31be:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31bf:	3c 31                	cmp    al,0x31
    31c1:	2c 20                	sub    al,0x20
    31c3:	31 30                	xor    DWORD PTR [rax],esi
    31c5:	30 30                	xor    BYTE PTR [rax],dh
    31c7:	3e 2c 20             	ds sub al,0x20
    31ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    31cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31cd:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    31d1:	74 2c                	je     31ff <_Z7testAllPKcjS0_+0x33f>
    31d3:	20 74 72 75          	and    BYTE PTR [rdx+rsi*2+0x75],dh
    31d7:	65 2c 20             	gs sub al,0x20
    31da:	66 61                	data16 (bad)
    31dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    31dd:	73 65                	jae    3244 <_Z7testAllPKcjS0_+0x384>
    31df:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    31e3:	53                   	push   rbx
    31e4:	74 33                	je     3219 <_Z7testAllPKcjS0_+0x359>
    31e6:	74 61                	je     3249 <_Z7testAllPKcjS0_+0x389>
    31e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31e9:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    31ed:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    31f4:	73 74                	jae    326a <_Z7testAllPKcjS0_+0x3aa>
    31f6:	33 32                	xor    esi,DWORD PTR [rdx]
    31f8:	5f                   	pop    rdi
    31f9:	74 00                	je     31fb <_Z7testAllPKcjS0_+0x33b>
    31fb:	5f                   	pop    rdi
    31fc:	5a                   	pop    rdx
    31fd:	53                   	push   rbx
    31fe:	74 35                	je     3235 <_Z7testAllPKcjS0_+0x375>
    3200:	6c                   	ins    BYTE PTR es:[rdi],dx
    3201:	64 65 78 70          	fs gs js 3275 <_Z7testAllPKcjS0_+0x3b5>
    3205:	65 69 00 63 65 69 6c 	imul   eax,DWORD PTR gs:[rax],0x6c696563
    320c:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    320f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3210:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3211:	61                   	(bad)
    3212:	74 36                	je     324a <_Z7testAllPKcjS0_+0x38a>
    3214:	34 00                	xor    al,0x0
    3216:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3219:	72 31                	jb     324c <_Z7testAllPKcjS0_+0x38c>
    321b:	36 5f                	ss pop rdi
    321d:	74 00                	je     321f <_Z7testAllPKcjS0_+0x35f>
    321f:	66 70 75             	data16 jo 3297 <_Z7testAllPKcjS0_+0x3d7>
    3222:	74 77                	je     329b <_Z7testAllPKcjS0_+0x3db>
    3224:	63 00                	movsxd eax,DWORD PTR [rax]
    3226:	74 6d                	je     3295 <_Z7testAllPKcjS0_+0x3d5>
    3228:	5f                   	pop    rdi
    3229:	79 65                	jns    3290 <_Z7testAllPKcjS0_+0x3d0>
    322b:	61                   	(bad)
    322c:	72 00                	jb     322e <_Z7testAllPKcjS0_+0x36e>
    322e:	5f                   	pop    rdi
    322f:	5a                   	pop    rdx
    3230:	53                   	push   rbx
    3231:	74 39                	je     326c <_Z7testAllPKcjS0_+0x3ac>
    3233:	72 65                	jb     329a <_Z7testAllPKcjS0_+0x3da>
    3235:	6d                   	ins    DWORD PTR es:[rdi],dx
    3236:	61                   	(bad)
    3237:	69 6e 64 65 72 66 66 	imul   ebp,DWORD PTR [rsi+0x64],0x66667265
    323e:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    3241:	61                   	(bad)
    3242:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3243:	32 00                	xor    al,BYTE PTR [rax]
    3245:	67 6d                	ins    DWORD PTR es:[edi],dx
    3247:	74 69                	je     32b2 <_Z7testAllPKcjS0_+0x3f2>
    3249:	6d                   	ins    DWORD PTR es:[rdi],dx
    324a:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    324e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    3255:	77 63                	ja     32ba <_Z7testAllPKcjS0_+0x3fa>
    3257:	73 74                	jae    32cd <_Z7testAllPKcjS0_+0x40d>
    3259:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    325a:	75 6c                	jne    32c8 <_Z7testAllPKcjS0_+0x408>
    325c:	6c                   	ins    BYTE PTR es:[rdi],dx
    325d:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    3260:	65 61                	gs (bad)
    3262:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3266:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3267:	70 73                	jo     32dc <_Z7testAllPKcjS0_+0x41c>
    3269:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    326c:	64 65 74 61          	fs gs je 32d1 <_Z7testAllPKcjS0_+0x411>
    3270:	69 6c 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
    3277:	77 
    3278:	72 69                	jb     32e3 <_Z7testAllPKcjS0_+0x423>
    327a:	74 65                	je     32e1 <_Z7testAllPKcjS0_+0x421>
    327c:	5f                   	pop    rdi
    327d:	70 74                	jo     32f3 <_Z7testAllPKcjS0_+0x433>
    327f:	72 00                	jb     3281 <_Z7testAllPKcjS0_+0x3c1>
    3281:	5f                   	pop    rdi
    3282:	52                   	push   rdx
    3283:	65 70 00             	gs jo  3286 <_Z7testAllPKcjS0_+0x3c6>
    3286:	5f                   	pop    rdi
    3287:	5a                   	pop    rdx
    3288:	4e 53                	rex.WRX push rbx
    328a:	74 36                	je     32c2 <_Z7testAllPKcjS0_+0x402>
    328c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    328f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3290:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3291:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3292:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3296:	61                   	(bad)
    3297:	74 69                	je     3302 <_Z7testAllPKcjS0_+0x442>
    3299:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    329a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    329b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    329d:	53                   	push   rbx
    329e:	74 35                	je     32d5 <_Z7testAllPKcjS0_+0x415>
    32a0:	72 61                	jb     3303 <_Z7testAllPKcjS0_+0x443>
    32a2:	74 69                	je     330d <_Z7testAllPKcjS0_+0x44d>
    32a4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32a5:	49                   	rex.WB
    32a6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32a8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32ab:	6c                   	ins    BYTE PTR es:[rdi],dx
    32ac:	31 30                	xor    DWORD PTR [rax],esi
    32ae:	30 30                	xor    BYTE PTR [rax],dh
    32b0:	30 30                	xor    BYTE PTR [rax],dh
    32b2:	30 30                	xor    BYTE PTR [rax],dh
    32b4:	30 30                	xor    BYTE PTR [rax],dh
    32b6:	45                   	rex.RB
    32b7:	45                   	rex.RB
    32b8:	45 61                	rex.RB (bad)
    32ba:	53                   	push   rbx
    32bb:	45 52                	rex.RB push r10
    32bd:	4b 53                	rex.WXB push r11
    32bf:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32c2:	5f                   	pop    rdi
    32c3:	5a                   	pop    rdx
    32c4:	4e 53                	rex.WRX push rbx
    32c6:	74 36                	je     32fe <_Z7testAllPKcjS0_+0x43e>
    32c8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    32cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32ce:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    32d2:	61                   	(bad)
    32d3:	74 69                	je     333e <_Z7testAllPKcjS0_+0x47e>
    32d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32d7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    32d9:	53                   	push   rbx
    32da:	74 35                	je     3311 <_Z7testAllPKcjS0_+0x451>
    32dc:	72 61                	jb     333f <_Z7testAllPKcjS0_+0x47f>
    32de:	74 69                	je     3349 <_Z7testAllPKcjS0_+0x489>
    32e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32e1:	49                   	rex.WB
    32e2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32e4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    32e8:	31 30                	xor    DWORD PTR [rax],esi
    32ea:	30 30                	xor    BYTE PTR [rax],dh
    32ec:	30 30                	xor    BYTE PTR [rax],dh
    32ee:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    32f1:	45                   	rex.RB
    32f2:	43 34 45             	rex.XB xor al,0x45
    32f5:	52                   	push   rdx
    32f6:	4b 53                	rex.WXB push r11
    32f8:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32fb:	5f                   	pop    rdi
    32fc:	5a                   	pop    rdx
    32fd:	53                   	push   rbx
    32fe:	74 36                	je     3336 <_Z7testAllPKcjS0_+0x476>
    3300:	6c                   	ins    BYTE PTR es:[rdi],dx
    3301:	72 6f                	jb     3372 <_Z7testAllPKcjS0_+0x4b2>
    3303:	75 6e                	jne    3373 <_Z7testAllPKcjS0_+0x4b3>
    3305:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    330a:	53                   	push   rbx
    330b:	74 36                	je     3343 <_Z7testAllPKcjS0_+0x483>
    330d:	6c                   	ins    BYTE PTR es:[rdi],dx
    330e:	6c                   	ins    BYTE PTR es:[rdi],dx
    330f:	72 69                	jb     337a <_Z7testAllPKcjS0_+0x4ba>
    3311:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3312:	74 66                	je     337a <_Z7testAllPKcjS0_+0x4ba>
    3314:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3317:	4e 53                	rex.WRX push rbx
    3319:	74 36                	je     3351 <_Z7testAllPKcjS0_+0x491>
    331b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    331e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    331f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3320:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3321:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    3324:	32 31                	xor    dh,BYTE PTR [rcx]
    3326:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    3329:	65 61                	gs (bad)
    332b:	64 79 5f             	fs jns 338d <_Z7testAllPKcjS0_+0x4cd>
    332e:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    3332:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
    3335:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3336:	77 45                	ja     337d <_Z7testAllPKcjS0_+0x4bd>
    3338:	76 00                	jbe    333a <_Z7testAllPKcjS0_+0x47a>
    333a:	73 69                	jae    33a5 <_Z7testAllPKcjS0_+0x4e5>
    333c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    333e:	62 69 74 00 5f 5a 4e 	vmaxps xmm27,xmm17,XMMWORD PTR [r18+0x4e0]
    3345:	53                   	push   rbx
    3346:	74 36                	je     337e <_Z7testAllPKcjS0_+0x4be>
    3348:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    334b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    334c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    334d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    334e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3352:	61                   	(bad)
    3353:	74 69                	je     33be <_Z7testAllPKcjS0_+0x4fe>
    3355:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3356:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3357:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3359:	53                   	push   rbx
    335a:	74 35                	je     3391 <_Z7testAllPKcjS0_+0x4d1>
    335c:	72 61                	jb     33bf <_Z7testAllPKcjS0_+0x4ff>
    335e:	74 69                	je     33c9 <_Z7testAllPKcjS0_+0x509>
    3360:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3361:	49                   	rex.WB
    3362:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3364:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    3367:	6c                   	ins    BYTE PTR es:[rdi],dx
    3368:	31 30                	xor    DWORD PTR [rax],esi
    336a:	30 30                	xor    BYTE PTR [rax],dh
    336c:	30 30                	xor    BYTE PTR [rax],dh
    336e:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3371:	45                   	rex.RB
    3372:	44 34 45             	rex.R xor al,0x45
    3375:	76 00                	jbe    3377 <_Z7testAllPKcjS0_+0x4b7>
    3377:	5f                   	pop    rdi
    3378:	5a                   	pop    rdx
    3379:	53                   	push   rbx
    337a:	74 34                	je     33b0 <_Z7testAllPKcjS0_+0x4f0>
    337c:	66 61                	data16 (bad)
    337e:	62 73 65 00 5f       	(bad)
    3383:	5a                   	pop    rdx
    3384:	53                   	push   rbx
    3385:	74 35                	je     33bc <_Z7testAllPKcjS0_+0x4fc>
    3387:	68 79 70 6f 74       	push   0x746f7079
    338c:	64 64 64 00 65 78    	fs fs add BYTE PTR fs:[rbp+0x78],ah
    3392:	70 32                	jo     33c6 <_Z7testAllPKcjS0_+0x506>
    3394:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3397:	4e 53                	rex.WRX push rbx
    3399:	74 36                	je     33d1 <_Z7testAllPKcjS0_+0x511>
    339b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    339e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    339f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    33a5:	61                   	(bad)
    33a6:	74 69                	je     3411 <_Z7testAllPKcjS0_+0x551>
    33a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33aa:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    33ac:	53                   	push   rbx
    33ad:	74 35                	je     33e4 <_Z7testAllPKcjS0_+0x524>
    33af:	72 61                	jb     3412 <_Z7testAllPKcjS0_+0x552>
    33b1:	74 69                	je     341c <_Z7testAllPKcjS0_+0x55c>
    33b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33b4:	49                   	rex.WB
    33b5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    33b7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    33ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    33bb:	31 30                	xor    DWORD PTR [rax],esi
    33bd:	30 30                	xor    BYTE PTR [rax],dh
    33bf:	30 30                	xor    BYTE PTR [rax],dh
    33c1:	30 30                	xor    BYTE PTR [rax],dh
    33c3:	30 30                	xor    BYTE PTR [rax],dh
    33c5:	45                   	rex.RB
    33c6:	45                   	rex.RB
    33c7:	45                   	rex.RB
    33c8:	64 56                	fs push rsi
    33ca:	45 52                	rex.RB push r10
    33cc:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    33ce:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    33d1:	65 72 61             	gs jb  3435 <_Z7testAllPKcjS0_+0x575>
    33d4:	74 6f                	je     3445 <_Z7testAllPKcjS0_+0x585>
    33d6:	72 2f                	jb     3407 <_Z7testAllPKcjS0_+0x547>
    33d8:	3d 00 5f 5a 53       	cmp    eax,0x535a5f00
    33dd:	74 36                	je     3415 <_Z7testAllPKcjS0_+0x555>
    33df:	72 65                	jb     3446 <_Z7testAllPKcjS0_+0x586>
    33e1:	6d                   	ins    DWORD PTR es:[rdi],dx
    33e2:	71 75                	jno    3459 <_Z7testAllPKcjS0_+0x599>
    33e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33e5:	66 66 50             	data16 push ax
    33e8:	69 00 61 64 6c 65    	imul   eax,DWORD PTR [rax],0x656c6461
    33ee:	72 33                	jb     3423 <_Z7testAllPKcjS0_+0x563>
    33f0:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    33f3:	69 6c 65 73 00 66 66 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c666600
    33fa:	6c 
    33fb:	75 73                	jne    3470 <_Z7testAllPKcjS0_+0x5b0>
    33fd:	68 00 6c 6c 72       	push   0x726c6c00
    3402:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    3409:	53                   	push   rbx
    340a:	74 36                	je     3442 <_Z7testAllPKcjS0_+0x582>
    340c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    340f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3410:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3411:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3412:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3416:	61                   	(bad)
    3417:	74 69                	je     3482 <_Z7testAllPKcjS0_+0x5c2>
    3419:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    341a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    341b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    341d:	53                   	push   rbx
    341e:	74 35                	je     3455 <_Z7testAllPKcjS0_+0x595>
    3420:	72 61                	jb     3483 <_Z7testAllPKcjS0_+0x5c3>
    3422:	74 69                	je     348d <_Z7testAllPKcjS0_+0x5cd>
    3424:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3425:	49                   	rex.WB
    3426:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3428:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    342b:	6c                   	ins    BYTE PTR es:[rdi],dx
    342c:	31 30                	xor    DWORD PTR [rax],esi
    342e:	30 30                	xor    BYTE PTR [rax],dh
    3430:	30 30                	xor    BYTE PTR [rax],dh
    3432:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3435:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    3437:	49                   	rex.WB
    3438:	45 52                	rex.RB push r10
    343a:	4b 53                	rex.WXB push r11
    343c:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    343f:	5f                   	pop    rdi
    3440:	5a                   	pop    rdx
    3441:	53                   	push   rbx
    3442:	74 34                	je     3478 <_Z7testAllPKcjS0_+0x5b8>
    3444:	66 6d                	ins    WORD PTR es:[rdi],dx
    3446:	69 6e 65 65 00 74 79 	imul   ebp,DWORD PTR [rsi+0x65],0x79740065
    344d:	70 65                	jo     34b4 <_Z7testAllPKcjS0_+0x5f4>
    344f:	64 65 66 20 5f 5f    	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    3455:	76 61                	jbe    34b8 <_Z7testAllPKcjS0_+0x5f8>
    3457:	5f                   	pop    rdi
    3458:	6c                   	ins    BYTE PTR es:[rdi],dx
    3459:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    3460:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3463:	76 61                	jbe    34c6 <_Z7testAllPKcjS0_+0x606>
    3465:	5f                   	pop    rdi
    3466:	6c                   	ins    BYTE PTR es:[rdi],dx
    3467:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    346e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3471:	53                   	push   rbx
    3472:	74 34                	je     34a8 <_Z7testAllPKcjS0_+0x5e8>
    3474:	66 6d                	ins    WORD PTR es:[rdi],dx
    3476:	61                   	(bad)
    3477:	78 66                	js     34df <_Z7testAllPKcjS0_+0x61f>
    3479:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    347d:	32 31                	xor    dh,BYTE PTR [rcx]
    347f:	73 74                	jae    34f5 <_Z7testAllPKcjS0_+0x635>
    3481:	61                   	(bad)
    3482:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3483:	64 61                	fs (bad)
    3485:	72 74                	jb     34fb <_Z7testAllPKcjS0_+0x63b>
    3487:	44                   	rex.R
    3488:	65 76 69             	gs jbe 34f4 <_Z7testAllPKcjS0_+0x634>
    348b:	61                   	(bad)
    348c:	74 69                	je     34f7 <_Z7testAllPKcjS0_+0x637>
    348e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    348f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3490:	54                   	push   rsp
    3491:	69 6d 65 50 64 6a 64 	imul   ebp,DWORD PTR [rbp+0x65],0x646a6450
    3498:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    349b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    349c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    349d:	72 6d                	jb     350c <_Z7testAllPKcjS0_+0x64c>
    349f:	61                   	(bad)
    34a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    34a1:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    34a4:	4e 53                	rex.WRX push rbx
    34a6:	74 36                	je     34de <_Z7testAllPKcjS0_+0x61e>
    34a8:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    34ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34ae:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    34b2:	61                   	(bad)
    34b3:	74 69                	je     351e <_Z7testAllPKcjS0_+0x65e>
    34b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34b7:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    34b9:	53                   	push   rbx
    34ba:	74 35                	je     34f1 <_Z7testAllPKcjS0_+0x631>
    34bc:	72 61                	jb     351f <_Z7testAllPKcjS0_+0x65f>
    34be:	74 69                	je     3529 <_Z7testAllPKcjS0_+0x669>
    34c0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34c1:	49                   	rex.WB
    34c2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    34c4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    34c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    34c8:	31 30                	xor    DWORD PTR [rax],esi
    34ca:	30 30                	xor    BYTE PTR [rax],dh
    34cc:	30 30                	xor    BYTE PTR [rax],dh
    34ce:	30 30                	xor    BYTE PTR [rax],dh
    34d0:	30 30                	xor    BYTE PTR [rax],dh
    34d2:	45                   	rex.RB
    34d3:	45                   	rex.RB
    34d4:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    34d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    34d7:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    34de:	35 61 63 6f 73       	xor    eax,0x736f6361
    34e3:	68 65 00 5f 5a       	push   0x5a5f0065
    34e8:	53                   	push   rbx
    34e9:	74 35                	je     3520 <_Z7testAllPKcjS0_+0x660>
    34eb:	61                   	(bad)
    34ec:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    34ef:	68                   	.byte 0x68
    34f0:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	72 6f                	jb     72 <__abi_tag-0x30a>
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	74 2f                	je     35 <__abi_tag-0x347>
   6:	68 61 73 68 4d       	push   0x4d687361
   b:	61                   	(bad)
   c:	70 2f                	jo     3d <__abi_tag-0x33f>
   e:	62 75 69 6c 64       	(bad)
  13:	00 2f                	add    BYTE PTR [rdi],ch
  15:	72 6f                	jb     86 <__abi_tag-0x2f6>
  17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  18:	74 2f                	je     49 <__abi_tag-0x333>
  1a:	68 61 73 68 4d       	push   0x4d687361
  1f:	61                   	(bad)
  20:	70 2f                	jo     51 <__abi_tag-0x32b>
  22:	73 72                	jae    96 <__abi_tag-0x2e6>
  24:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  26:	6d                   	ins    DWORD PTR es:[rdi],dx
  27:	61                   	(bad)
  28:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  2f:	2f                   	(bad)
  30:	72 6f                	jb     a1 <__abi_tag-0x2db>
  32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  33:	74 2f                	je     64 <__abi_tag-0x318>
  35:	68 61 73 68 4d       	push   0x4d687361
  3a:	61                   	(bad)
  3b:	70 2f                	jo     6c <__abi_tag-0x310>
  3d:	73 72                	jae    b1 <__abi_tag-0x2cb>
  3f:	63 00                	movsxd eax,DWORD PTR [rax]
  41:	2f                   	(bad)
  42:	75 73                	jne    b7 <__abi_tag-0x2c5>
  44:	72 2f                	jb     75 <__abi_tag-0x307>
  46:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4d:	00 2f                	add    BYTE PTR [rdi],ch
  4f:	75 73                	jne    c4 <__abi_tag-0x2b8>
  51:	72 2f                	jb     82 <__abi_tag-0x2fa>
  53:	6c                   	ins    BYTE PTR es:[rdi],dx
  54:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  5b:	78 38                	js     95 <__abi_tag-0x2e7>
  5d:	36 5f                	ss pop rdi
  5f:	36 34 2d             	ss xor al,0x2d
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  6a:	75 2f                	jne    9b <__abi_tag-0x2e1>
  6c:	31 33                	xor    DWORD PTR [rbx],esi
  6e:	2f                   	(bad)
  6f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  76:	00 2f                	add    BYTE PTR [rdi],ch
  78:	75 73                	jne    ed <__abi_tag-0x28f>
  7a:	72 2f                	jb     ab <__abi_tag-0x2d1>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	2f                   	(bad)
  84:	78 38                	js     be <__abi_tag-0x2be>
  86:	36 5f                	ss pop rdi
  88:	36 34 2d             	ss xor al,0x2d
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  93:	75 2f                	jne    c4 <__abi_tag-0x2b8>
  95:	62 69 74 73 00       	(bad)
  9a:	2f                   	(bad)
  9b:	75 73                	jne    110 <__abi_tag-0x26c>
  9d:	72 2f                	jb     ce <__abi_tag-0x2ae>
  9f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a6:	2f                   	(bad)
  a7:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a9:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ab:	31 33                	xor    DWORD PTR [rbx],esi
  ad:	00 2f                	add    BYTE PTR [rdi],ch
  af:	75 73                	jne    124 <__abi_tag-0x258>
  b1:	72 2f                	jb     e2 <__abi_tag-0x29a>
  b3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ba:	2f                   	(bad)
  bb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bf:	31 33                	xor    DWORD PTR [rbx],esi
  c1:	2f                   	(bad)
  c2:	62 69 74 73 00       	(bad)
  c7:	2f                   	(bad)
  c8:	72 6f                	jb     139 <__abi_tag-0x243>
  ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cb:	74 2f                	je     fc <__abi_tag-0x280>
  cd:	68 61 73 68 4d       	push   0x4d687361
  d2:	61                   	(bad)
  d3:	70 2f                	jo     104 <__abi_tag-0x278>
  d5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dc:	00 2f                	add    BYTE PTR [rdi],ch
  de:	75 73                	jne    153 <__abi_tag-0x229>
  e0:	72 2f                	jb     111 <__abi_tag-0x26b>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	78 38                	js     124 <__abi_tag-0x258>
  ec:	36 5f                	ss pop rdi
  ee:	36 34 2d             	ss xor al,0x2d
  f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  f2:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  f9:	75 2f                	jne    12a <__abi_tag-0x252>
  fb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  fd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ff:	31 33                	xor    DWORD PTR [rbx],esi
 101:	2f                   	(bad)
 102:	62 69 74 73 00       	(bad)
 107:	73 74                	jae    17d <__abi_tag-0x1ff>
 109:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 10b:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 112:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 119:	74 
 11a:	79 70                	jns    18c <__abi_tag-0x1f0>
 11c:	65 73 2e             	gs jae 14d <__abi_tag-0x22f>
 11f:	68 00 63 73 74       	push   0x74736300
 124:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 126:	69 62 00 73 74 64 5f 	imul   esp,DWORD PTR [rdx+0x0],0x5f647473
 12d:	61                   	(bad)
 12e:	62 73 2e 68 00       	(bad)
 133:	73 74                	jae    1a9 <__abi_tag-0x1d3>
 135:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 137:	69 62 2d 66 6c 6f 61 	imul   esp,DWORD PTR [rdx+0x2d],0x616f6c66
 13e:	74 2e                	je     16e <__abi_tag-0x20e>
 140:	68 00 73 74 64       	push   0x64747300
 145:	6c                   	ins    BYTE PTR es:[rdi],dx
 146:	69 62 2d 62 73 65 61 	imul   esp,DWORD PTR [rdx+0x2d],0x61657362
 14d:	72 63                	jb     1b2 <__abi_tag-0x1ca>
 14f:	68 2e 68 00 73       	push   0x7300682e
 154:	74 64                	je     1ba <__abi_tag-0x1c2>
 156:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 15d:	74 6e                	je     1cd <__abi_tag-0x1af>
 15f:	2e 68 00 68 61 73    	cs push 0x73616800
 165:	68 5f 6d 61 70       	push   0x70616d5f
 16a:	2e 68 00 74 65 73    	cs push 0x73657400
 170:	74 73                	je     1e5 <__abi_tag-0x197>
 172:	2e 68 00 63 2b 2b    	cs push 0x2b2b6300
 178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 17b:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 181:	2f                   	(bad)
 182:	72 6f                	jb     1f3 <__abi_tag-0x189>
 184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 185:	74 2f                	je     1b6 <__abi_tag-0x1c6>
 187:	68 61 73 68 4d       	push   0x4d687361
 18c:	61                   	(bad)
 18d:	70 2f                	jo     1be <__abi_tag-0x1be>
 18f:	73 72                	jae    203 <__abi_tag-0x179>
 191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 193:	68 61 73 68 5f       	push   0x5f687361
 198:	6d                   	ins    DWORD PTR es:[rdi],dx
 199:	61                   	(bad)
 19a:	70 2e                	jo     1ca <__abi_tag-0x1b2>
 19c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 19f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1a2:	72 69                	jb     20d <__abi_tag-0x16f>
 1a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1a5:	67 2e 68 00 73 74 72 	addr32 cs push 0x72747300
 1ac:	69 6e 67 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f665f
 1b3:	74 69                	je     21e <__abi_tag-0x15e>
 1b5:	66 69 65 64 2e 68    	imul   sp,WORD PTR [rbp+0x64],0x682e
 1bb:	00 73 6d             	add    BYTE PTR [rbx+0x6d],dh
 1be:	6d                   	ins    DWORD PTR es:[rdi],dx
 1bf:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1c6:	68 00 73 74 64       	push   0x64747300
 1cb:	69 6f 32 2e 68 00 73 	imul   ebp,DWORD PTR [rdi+0x32],0x7300682e
 1d2:	74 72                	je     246 <__abi_tag-0x136>
 1d4:	69 6e 67 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x67],0x682e745f
 1db:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 1df:	74 2e                	je     20f <__abi_tag-0x16d>
 1e1:	68 00 73 74 64       	push   0x64747300
 1e6:	69 6f 32 2d 64 65 63 	imul   ebp,DWORD PTR [rdi+0x32],0x6365642d
 1ed:	6c                   	ins    BYTE PTR es:[rdi],dx
 1ee:	2e 68 00 61 73 73    	cs push 0x73736100
 1f4:	65 72 74             	gs jb  26b <__abi_tag-0x111>
 1f7:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 1fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1fe:	74 2f                	je     22f <__abi_tag-0x14d>
 200:	68 61 73 68 4d       	push   0x4d687361
 205:	61                   	(bad)
 206:	70 2f                	jo     237 <__abi_tag-0x145>
 208:	73 72                	jae    27c <__abi_tag-0x100>
 20a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 20c:	68 61 73 68 5f       	push   0x5f687361
 211:	66 75 6e             	data16 jne 282 <__abi_tag-0xfa>
 214:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 217:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 21a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 21d:	64 69 6e 74 2d 69 6e 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x746e692d
 224:	74 
 225:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 226:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 22c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 22d:	74 2f                	je     25e <__abi_tag-0x11e>
 22f:	68 61 73 68 4d       	push   0x4d687361
 234:	61                   	(bad)
 235:	70 2f                	jo     266 <__abi_tag-0x116>
 237:	73 72                	jae    2ab <__abi_tag-0xd1>
 239:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 23b:	6c                   	ins    BYTE PTR es:[rdi],dx
 23c:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
 243:	00 2f                	add    BYTE PTR [rdi],ch
 245:	72 6f                	jb     2b6 <__abi_tag-0xc6>
 247:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 248:	74 2f                	je     279 <__abi_tag-0x103>
 24a:	68 61 73 68 4d       	push   0x4d687361
 24f:	61                   	(bad)
 250:	70 2f                	jo     281 <__abi_tag-0xfb>
 252:	73 72                	jae    2c6 <__abi_tag-0xb6>
 254:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 256:	75 74                	jne    2cc <__abi_tag-0xb0>
 258:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
 25f:	00 
 260:	2f                   	(bad)
 261:	75 73                	jne    2d6 <__abi_tag-0xa6>
 263:	72 2f                	jb     294 <__abi_tag-0xe8>
 265:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 26c:	2f                   	(bad)
 26d:	78 38                	js     2a7 <__abi_tag-0xd5>
 26f:	36 5f                	ss pop rdi
 271:	36 34 2d             	ss xor al,0x2d
 274:	6c                   	ins    BYTE PTR es:[rdi],dx
 275:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 27c:	75 2f                	jne    2ad <__abi_tag-0xcf>
 27e:	73 79                	jae    2f9 <__abi_tag-0x83>
 280:	73 00                	jae    282 <__abi_tag-0xfa>
 282:	2f                   	(bad)
 283:	75 73                	jne    2f8 <__abi_tag-0x84>
 285:	72 2f                	jb     2b6 <__abi_tag-0xc6>
 287:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 28e:	2f                   	(bad)
 28f:	78 38                	js     2c9 <__abi_tag-0xb3>
 291:	36 5f                	ss pop rdi
 293:	36 34 2d             	ss xor al,0x2d
 296:	6c                   	ins    BYTE PTR es:[rdi],dx
 297:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 29e:	75 2f                	jne    2cf <__abi_tag-0xad>
 2a0:	62 69 74 73 2f       	(bad)
 2a5:	74 79                	je     320 <__abi_tag-0x5c>
 2a7:	70 65                	jo     30e <__abi_tag-0x6e>
 2a9:	73 00                	jae    2ab <__abi_tag-0xd1>
 2ab:	66 63 6e 74          	movsxd bp,DWORD PTR [rsi+0x74]
 2af:	6c                   	ins    BYTE PTR es:[rdi],dx
 2b0:	32 2e                	xor    ch,BYTE PTR [rsi]
 2b2:	68 00 75 6e 69       	push   0x696e7500
 2b7:	73 74                	jae    32d <__abi_tag-0x4f>
 2b9:	64 2e 68 00 73 74 72 	fs cs push 0x72747300
 2c0:	75 63                	jne    325 <__abi_tag-0x57>
 2c2:	74 5f                	je     323 <__abi_tag-0x59>
 2c4:	74 69                	je     32f <__abi_tag-0x4d>
 2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
 2c7:	65 73 70             	gs jae 33a <__abi_tag-0x42>
 2ca:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 2cd:	68 00 73 74 72       	push   0x72747300
 2d2:	75 63                	jne    337 <__abi_tag-0x45>
 2d4:	74 5f                	je     335 <__abi_tag-0x47>
 2d6:	73 74                	jae    34c <__abi_tag-0x30>
 2d8:	61                   	(bad)
 2d9:	74 2e                	je     309 <__abi_tag-0x73>
 2db:	68 00 75 6e 69       	push   0x696e7500
 2e0:	73 74                	jae    356 <__abi_tag-0x26>
 2e2:	64 2d 64 65 63 6c    	fs sub eax,0x6c636564
 2e8:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 2ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ef:	74 2f                	je     320 <__abi_tag-0x5c>
 2f1:	68 61 73 68 4d       	push   0x4d687361
 2f6:	61                   	(bad)
 2f7:	70 2f                	jo     328 <__abi_tag-0x54>
 2f9:	73 72                	jae    36d <__abi_tag-0xf>
 2fb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 2fd:	74 65                	je     364 <__abi_tag-0x18>
 2ff:	73 74                	jae    375 <__abi_tag-0x7>
 301:	73 2e                	jae    331 <__abi_tag-0x4b>
 303:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 306:	00 2f                	add    BYTE PTR [rdi],ch
 308:	75 73                	jne    37d <__abi_tag+0x1>
 30a:	72 2f                	jb     33b <__abi_tag-0x41>
 30c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 313:	2f                   	(bad)
 314:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 316:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 318:	31 33                	xor    DWORD PTR [rbx],esi
 31a:	2f                   	(bad)
 31b:	64 65 62 75 67 00 2f 	(bad)
 322:	75 73                	jne    397 <__abi_tag+0x1b>
 324:	72 2f                	jb     355 <__abi_tag-0x27>
 326:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 32d:	2f                   	(bad)
 32e:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 330:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 332:	31 33                	xor    DWORD PTR [rbx],esi
 334:	2f                   	(bad)
 335:	70 73                	jo     3aa <__abi_tag+0x2e>
 337:	74 6c                	je     3a5 <__abi_tag+0x29>
 339:	00 63 6d             	add    BYTE PTR [rbx+0x6d],ah
 33c:	61                   	(bad)
 33d:	74 68                	je     3a7 <__abi_tag+0x2b>
 33f:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
 342:	72 6f                	jb     3b3 <__abi_tag+0x37>
 344:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 346:	2e 68 00 74 79 70    	cs push 0x70797400
 34c:	65 5f                	gs pop rdi
 34e:	74 72                	je     3c2 <__abi_tag+0x46>
 350:	61                   	(bad)
 351:	69 74 73 00 64 65 62 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x75626564
 358:	75 
 359:	67 2e 68 00 63 77 63 	addr32 cs push 0x63776300
 360:	68 61 72 00 63       	push   0x63007261
 365:	6c                   	ins    BYTE PTR es:[rdi],dx
 366:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 367:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 36a:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 36e:	74 64                	je     3d4 <__abi_tag+0x58>
 370:	69 6f 00 63 73 74 64 	imul   ebp,DWORD PTR [rdi+0x0],0x64747363
 377:	64 65 66 00 63 73    	fs data16 add BYTE PTR gs:[rbx+0x73],ah
 37d:	74 64                	je     3e3 <__abi_tag+0x67>
 37f:	69 6e 74 00 63 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61686300
 386:	72 63                	jb     3eb <__abi_tag+0x6f>
 388:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 389:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 38a:	76 2e                	jbe    3ba <__abi_tag+0x3e>
 38c:	68 00 63 74 69       	push   0x69746300
 391:	6d                   	ins    DWORD PTR es:[rdi],dx
 392:	65 00 72 61          	add    BYTE PTR gs:[rdx+0x61],dh
 396:	74 69                	je     401 <__abi_tag+0x85>
 398:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 399:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 39c:	65 64 65 66 69 6e 65 	gs fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 3a3:	64 5f 
 3a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a6:	70 73                	jo     41b <__abi_tag+0x9f>
 3a8:	2e 68 00 6d 61 74    	cs push 0x74616d00
 3ae:	68 2e 68 00 63       	push   0x6300682e
 3b3:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b5:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3b8:	74 2e                	je     3e8 <__abi_tag+0x6c>
 3ba:	68 00 74 69 6d       	push   0x6d697400
 3bf:	65 5f                	gs pop rdi
 3c1:	74 2e                	je     3f1 <__abi_tag+0x75>
 3c3:	68 00 3c 62 75       	push   0x75623c00
 3c8:	69 6c 74 2d 69 6e 3e 	imul   ebp,DWORD PTR [rsp+rsi*2+0x2d],0x3e6e69
 3cf:	00 
 3d0:	5f                   	pop    rdi
 3d1:	5f                   	pop    rdi
 3d2:	6d                   	ins    DWORD PTR es:[rdi],dx
 3d3:	62 73 74 61 74       	(bad)
 3d8:	65 5f                	gs pop rdi
 3da:	74 2e                	je     40a <__abi_tag+0x8e>
 3dc:	68 00 5f 5f 66       	push   0x665f5f00
 3e1:	70 6f                	jo     452 <__abi_tag+0xd6>
 3e3:	73 5f                	jae    444 <__abi_tag+0xc8>
 3e5:	74 2e                	je     415 <__abi_tag+0x99>
 3e7:	68 00 5f 5f 46       	push   0x465f5f00
 3ec:	49                   	rex.WB
 3ed:	4c                   	rex.WR
 3ee:	45                   	rex.RB
 3ef:	2e 68 00 73 74 72    	cs push 0x72747300
 3f5:	75 63                	jne    45a <__abi_tag+0xde>
 3f7:	74 5f                	je     458 <__abi_tag+0xdc>
 3f9:	46                   	rex.RX
 3fa:	49                   	rex.WB
 3fb:	4c                   	rex.WR
 3fc:	45                   	rex.RB
 3fd:	2e 68 00 73 74 64    	cs push 0x64747300
 403:	69 6f 2e 68 00 73 74 	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
 40a:	64 69 6e 74 2d 6c 65 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c2d
 411:	61 
 412:	73 74                	jae    488 <__abi_tag+0x10c>
 414:	2e 68 00 73 74 64    	cs push 0x64747300
 41a:	69 6e 74 2e 68 00 77 	imul   ebp,DWORD PTR [rsi+0x74],0x7700682e
 421:	69 6e 74 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x74],0x682e745f
 428:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 42b:	68 61 72 2e 68       	push   0x682e7261
 430:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 433:	68 61 72 32 2e       	push   0x2e327261
 438:	68 00 73 74 72       	push   0x72747300
 43d:	75 63                	jne    4a2 <__abi_tag+0x126>
 43f:	74 5f                	je     4a0 <__abi_tag+0x124>
 441:	74 6d                	je     4b0 <__abi_tag+0x134>
 443:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 449:	61                   	(bad)
 44a:	6c                   	ins    BYTE PTR es:[rdi],dx
 44b:	65 2e 68 00 65 78 65 	gs cs push 0x65786500
 452:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 455:	69 6f 6e 5f 64 65 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x6665645f
 45c:	73 2e                	jae    48c <__abi_tag+0x110>
 45e:	68 00 74 69 6d       	push   0x6d697400
 463:	65 2e 68 00 68 61 73 	gs cs push 0x73616800
 46a:	68 5f 66 75 6e       	push   0x6e75665f
 46f:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 472:	68 00 75 74 69       	push   0x69747500
 477:	6c                   	ins    BYTE PTR es:[rdi],dx
 478:	73 2e                	jae    4a8 <__abi_tag+0x12c>
 47a:	68 00 6d 65 6d       	push   0x6d656d00
 47f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 480:	72 79                	jb     4fb <__abi_tag+0x17f>
 482:	5f                   	pop    rdi
 483:	72 65                	jb     4ea <__abi_tag+0x16e>
 485:	73 6f                	jae    4f6 <__abi_tag+0x17a>
 487:	75 72                	jne    4fb <__abi_tag+0x17f>
 489:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 48c:	68 00 73 74 72       	push   0x72747300
 491:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
 498:	77 00                	ja     49a <__abi_tag+0x11e>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
       3:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 809 <__abi_tag+0x48d>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 06                	add    BYTE PTR [rsi],al
      11:	e0 11                	loopne 24 <__abi_tag-0x358>
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	04 00                	add    al,0x0
      1b:	09 01                	or     DWORD PTR [rcx],eax
      1d:	55                   	push   rbp
      1e:	04 09                	add    al,0x9
      20:	2e 04 a3             	cs add al,0xa3
      23:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      26:	00 00                	add    BYTE PTR [rax],al
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	00 06                	add    BYTE PTR [rsi],al
      2c:	e0 11                	loopne 3f <__abi_tag-0x33d>
      2e:	00 00                	add    BYTE PTR [rax],al
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	04 00                	add    al,0x0
      36:	14 01                	adc    al,0x1
      38:	54                   	push   rsp
      39:	04 14                	add    al,0x14
      3b:	2e 04 a3             	cs add al,0xa3
      3e:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
      42:	00 00                	add    BYTE PTR [rax],al
      44:	08 f2                	or     dl,dh
      46:	11 00                	adc    DWORD PTR [rax],eax
      48:	00 00                	add    BYTE PTR [rax],al
      4a:	00 00                	add    BYTE PTR [rax],al
      4c:	00 06                	add    BYTE PTR [rsi],al
      4e:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
      51:	ee                   	out    dx,al
      52:	06                   	(bad)
      53:	00 00                	add    BYTE PTR [rax],al
      55:	05 00 08 00 00       	add    eax,0x800
	...
      62:	00 00                	add    BYTE PTR [rax],al
      64:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
      67:	0c f6                	or     al,0xf6
      69:	0c 01                	or     al,0x1
      6b:	55                   	push   rbp
      6c:	04 f6                	add    al,0xf6
      6e:	0c 84                	or     al,0x84
      70:	0e                   	(bad)
      71:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
      74:	84 0e                	test   BYTE PTR [rsi],cl
      76:	8d 0e                	lea    ecx,[rsi]
      78:	04 a3                	add    al,0xa3
      7a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      7d:	04 8d                	add    al,0x8d
      7f:	0e                   	(bad)
      80:	9e                   	sahf
      81:	0e                   	(bad)
      82:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
      85:	02 00                	add    al,BYTE PTR [rax]
      87:	00 00                	add    BYTE PTR [rax],al
      89:	00 01                	add    BYTE PTR [rcx],al
      8b:	04 be                	add    al,0xbe
      8d:	0d ce 0d 02 30       	or     eax,0x30020dce
      92:	9f                   	lahf
      93:	04 ce                	add    al,0xce
      95:	0d ed 0d 01 53       	or     eax,0x53010ded
      9a:	04 ed                	add    al,0xed
      9c:	0d f6 0d 03 73       	or     eax,0x73030df6
      a1:	7f 9f                	jg     42 <__abi_tag-0x33a>
      a3:	00 01                	add    BYTE PTR [rcx],al
      a5:	00 04 ce             	add    BYTE PTR [rsi+rcx*8],al
      a8:	0d e1 0d 0a 03       	or     eax,0x30a0de1
      ad:	87 40 00             	xchg   DWORD PTR [rax+0x0],eax
      b0:	00 00                	add    BYTE PTR [rax],al
      b2:	00 00                	add    BYTE PTR [rax],al
      b4:	00 9f 00 01 00 04    	add    BYTE PTR [rdi+0x4000100],bl
      ba:	e4 0c                	in     al,0xc
      bc:	80 0d 06 a0 ff 21 00 	or     BYTE PTR [rip+0x21ffa006],0x0        # 21ffa0c9 <_end+0x21ff40b1>
      c3:	00 00                	add    BYTE PTR [rax],al
      c5:	00 01                	add    BYTE PTR [rcx],al
      c7:	00 04 89             	add    BYTE PTR [rcx+rcx*4],al
      ca:	0d 9f 0d 0a 03       	or     eax,0x30a0d9f
      cf:	65 40 00 00          	rex add BYTE PTR gs:[rax],al
      d3:	00 00                	add    BYTE PTR [rax],al
      d5:	00 00                	add    BYTE PTR [rax],al
      d7:	9f                   	lahf
      d8:	00 02                	add    BYTE PTR [rdx],al
      da:	00 04 9f             	add    BYTE PTR [rdi+rbx*4],al
      dd:	0d be 0d 0a 03       	or     eax,0x30a0dbe
      e2:	76 40                	jbe    124 <__abi_tag-0x258>
      e4:	00 00                	add    BYTE PTR [rax],al
      e6:	00 00                	add    BYTE PTR [rax],al
      e8:	00 00                	add    BYTE PTR [rax],al
      ea:	9f                   	lahf
      eb:	00 02                	add    BYTE PTR [rdx],al
      ed:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
      f0:	0d 8d 0e 06 a0       	or     eax,0xa0060e8d
      f5:	ff 21                	jmp    QWORD PTR [rcx]
      f7:	00 00                	add    BYTE PTR [rax],al
      f9:	00 00                	add    BYTE PTR [rax],al
      fb:	02 00                	add    al,BYTE PTR [rax]
      fd:	04 8d                	add    al,0x8d
      ff:	0e                   	(bad)
     100:	9c                   	pushf
     101:	0e                   	(bad)
     102:	06                   	(bad)
     103:	a0 28 22 00 00 00 00 	movabs al,ds:0x2228
     10a:	00 00 
     10c:	00 00                	add    BYTE PTR [rax],al
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 00                	add    BYTE PTR [rax],al
     112:	04 e0                	add    al,0xe0
     114:	0a b3 0b 01 55 04    	or     dh,BYTE PTR [rbx+0x455010b]
     11a:	b3 0b                	mov    bl,0xb
     11c:	c5 0b 04             	(bad)
     11f:	a3 01 55 9f 04 c5 0b 	movabs ds:0xbdf0bc5049f5501,eax
     126:	df 0b 
     128:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     12b:	df 0b                	fisttp WORD PTR [rbx]
     12d:	e4 0b                	in     al,0xb
     12f:	04 a3                	add    al,0xa3
     131:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     134:	00 00                	add    BYTE PTR [rax],al
     136:	00 00                	add    BYTE PTR [rax],al
     138:	00 00                	add    BYTE PTR [rax],al
     13a:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
     13d:	0a f0                	or     dh,al
     13f:	0a 06                	or     al,BYTE PTR [rsi]
     141:	54                   	push   rsp
     142:	93                   	xchg   ebx,eax
     143:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     146:	08 04 f0             	or     BYTE PTR [rax+rsi*8],al
     149:	0a ba 0b 06 54 93    	or     bh,BYTE PTR [rdx-0x6cabf9f5]
     14f:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
     152:	08 04 c5 0b d1 0b 06 	or     BYTE PTR [rax*8+0x60bd10b],al
     159:	54                   	push   rsp
     15a:	93                   	xchg   ebx,eax
     15b:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     15e:	08 00                	or     BYTE PTR [rax],al
     160:	01 02                	add    DWORD PTR [rdx],eax
     162:	04 f0                	add    al,0xf0
     164:	0a 9b 0b 02 30 9f    	or     bl,BYTE PTR [rbx-0x60cffdf5]
     16a:	00 02                	add    BYTE PTR [rdx],al
     16c:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     16f:	0a c5                	or     al,ch
     171:	0b 02                	or     eax,DWORD PTR [rdx]
     173:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
     179:	f0 0a c5             	lock or al,ch
     17c:	0b 0a                	or     ecx,DWORD PTR [rdx]
     17e:	9e                   	sahf
     17f:	08 11                	or     BYTE PTR [rcx],dl
     181:	11 11                	adc    DWORD PTR [rcx],edx
     183:	21 11                	and    DWORD PTR [rcx],edx
     185:	12 12                	adc    dl,BYTE PTR [rdx]
     187:	12 00                	adc    al,BYTE PTR [rax]
     189:	04 00                	add    al,0x0
     18b:	00 00                	add    BYTE PTR [rax],al
     18d:	04 f0                	add    al,0xf0
     18f:	0a 83 0b 02 74 00    	or     al,BYTE PTR [rbx+0x74020b]
     195:	04 83                	add    al,0x83
     197:	0b 94 0b 01 50 00 05 	or     edx,DWORD PTR [rbx+rcx*1+0x5005001]
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1a3:	0a 8a 0b 02 74 08    	or     cl,BYTE PTR [rdx+0x874020b]
     1a9:	04 8a                	add    al,0x8a
     1ab:	0b ba 0b 01 59 00    	or     edi,DWORD PTR [rdx+0x59010b]
     1b1:	06                   	(bad)
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1b7:	0a 91 0b 02 74 10    	or     dl,BYTE PTR [rcx+0x1074020b]
     1bd:	04 91                	add    al,0x91
     1bf:	0b ba 0b 01 58 00    	or     edi,DWORD PTR [rdx+0x58010b]
     1c5:	07                   	(bad)
     1c6:	00 00                	add    BYTE PTR [rax],al
     1c8:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1cb:	0a 9b 0b 02 74 18    	or     bl,BYTE PTR [rbx+0x1874020b]
     1d1:	04 9b                	add    al,0x9b
     1d3:	0b a3 0b 01 51 00    	or     esp,DWORD PTR [rbx+0x51010b]
     1d9:	00 00                	add    BYTE PTR [rax],al
     1db:	04 bb                	add    al,0xbb
     1dd:	0b c0                	or     eax,eax
     1df:	0b 01                	or     eax,DWORD PTR [rcx]
     1e1:	50                   	push   rax
     1e2:	00 08                	add    BYTE PTR [rax],cl
     1e4:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1e7:	0a 83 0b 02 74 00    	or     al,BYTE PTR [rbx+0x74020b]
     1ed:	00 08                	add    BYTE PTR [rax],cl
     1ef:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1f2:	0a 83 0b 0a 9e 08    	or     al,BYTE PTR [rbx+0x89e0a0b]
     1f8:	11 11                	adc    DWORD PTR [rcx],edx
     1fa:	11 21                	adc    DWORD PTR [rcx],esp
     1fc:	11 12                	adc    DWORD PTR [rdx],edx
     1fe:	12 12                	adc    dl,BYTE PTR [rdx]
     200:	00 02                	add    BYTE PTR [rdx],al
     202:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
     205:	0b 8a 0b 02 74 08    	or     ecx,DWORD PTR [rdx+0x874020b]
     20b:	00 02                	add    BYTE PTR [rdx],al
     20d:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
     210:	0b 8a 0b 0a 9e 08    	or     ecx,DWORD PTR [rdx+0x89e0a0b]
     216:	11 11                	adc    DWORD PTR [rcx],edx
     218:	11 21                	adc    DWORD PTR [rcx],esp
     21a:	11 12                	adc    DWORD PTR [rdx],edx
     21c:	12 12                	adc    dl,BYTE PTR [rdx]
     21e:	00 02                	add    BYTE PTR [rdx],al
     220:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
     223:	0b 91 0b 02 74 10    	or     edx,DWORD PTR [rcx+0x1074020b]
     229:	00 02                	add    BYTE PTR [rdx],al
     22b:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
     22e:	0b 91 0b 0a 9e 08    	or     edx,DWORD PTR [rcx+0x89e0a0b]
     234:	11 11                	adc    DWORD PTR [rcx],edx
     236:	11 21                	adc    DWORD PTR [rcx],esp
     238:	11 12                	adc    DWORD PTR [rdx],edx
     23a:	12 12                	adc    dl,BYTE PTR [rdx]
     23c:	00 02                	add    BYTE PTR [rdx],al
     23e:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
     241:	0b 9b 0b 02 74 18    	or     ebx,DWORD PTR [rbx+0x1874020b]
     247:	00 02                	add    BYTE PTR [rdx],al
     249:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
     24c:	0b 9b 0b 0a 9e 08    	or     ebx,DWORD PTR [rbx+0x89e0a0b]
     252:	11 11                	adc    DWORD PTR [rcx],edx
     254:	11 21                	adc    DWORD PTR [rcx],esp
     256:	11 12                	adc    DWORD PTR [rdx],edx
     258:	12 12                	adc    dl,BYTE PTR [rdx]
	...
     266:	00 00                	add    BYTE PTR [rax],al
     268:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     26b:	09 b0 09 01 55 04    	or     DWORD PTR [rax+0x4550109],esi
     271:	b0 09                	mov    al,0x9
     273:	9b                   	fwait
     274:	0a 01                	or     al,BYTE PTR [rcx]
     276:	53                   	push   rbx
     277:	04 9b                	add    al,0x9b
     279:	0a a1 0a 04 a3 01    	or     ah,BYTE PTR [rcx+0x1a3040a]
     27f:	55                   	push   rbp
     280:	9f                   	lahf
     281:	04 a1                	add    al,0xa1
     283:	0a b1 0a 01 53 04    	or     dh,BYTE PTR [rcx+0x453010a]
     289:	b1 0a                	mov    cl,0xa
     28b:	ba 0a 04 a3 01       	mov    edx,0x1a3040a
     290:	55                   	push   rbp
     291:	9f                   	lahf
     292:	04 ba                	add    al,0xba
     294:	0a d4                	or     dl,ah
     296:	0a 01                	or     al,BYTE PTR [rcx]
     298:	55                   	push   rbp
     299:	04 d4                	add    al,0xd4
     29b:	0a d9                	or     bl,cl
     29d:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
     2a0:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
     2ab:	00 00                	add    BYTE PTR [rax],al
     2ad:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     2b0:	09 ad 09 06 54 93    	or     DWORD PTR [rbp-0x6cabf9f7],ebp
     2b6:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2b9:	08 04 ad 09 b3 09 06 	or     BYTE PTR [rbp*4+0x609b309],al
     2c0:	54                   	push   rsp
     2c1:	93                   	xchg   ebx,eax
     2c2:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     2c5:	08 04 b3             	or     BYTE PTR [rbx+rsi*4],al
     2c8:	09 e5                	or     ebp,esp
     2ca:	09 06                	or     DWORD PTR [rsi],eax
     2cc:	5d                   	pop    rbp
     2cd:	93                   	xchg   ebx,eax
     2ce:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     2d1:	08 04 e5 09 e8 09 06 	or     BYTE PTR [riz*8+0x609e809],al
     2d8:	5d                   	pop    rbp
     2d9:	93                   	xchg   ebx,eax
     2da:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2dd:	08 04 ba             	or     BYTE PTR [rdx+rdi*4],al
     2e0:	0a c6                	or     al,dh
     2e2:	0a 06                	or     al,BYTE PTR [rsi]
     2e4:	54                   	push   rsp
     2e5:	93                   	xchg   ebx,eax
     2e6:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2e9:	08 00                	or     BYTE PTR [rax],al
     2eb:	00 00                	add    BYTE PTR [rax],al
     2ed:	00 00                	add    BYTE PTR [rax],al
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	04 ce                	add    al,0xce
     2f3:	09 d1                	or     ecx,edx
     2f5:	09 01                	or     DWORD PTR [rcx],eax
     2f7:	50                   	push   rax
     2f8:	04 d1                	add    al,0xd1
     2fa:	09 9e 0a 01 5c 04    	or     DWORD PTR [rsi+0x45c010a],ebx
     300:	a1 0a ac 0a 01 5c 00 	movabs eax,ds:0x5c010aac0a
     307:	00 00 
	...
     315:	04 e0                	add    al,0xe0
     317:	03 9b 04 01 55 04    	add    ebx,DWORD PTR [rbx+0x4550104]
     31d:	9b                   	fwait
     31e:	04 93                	add    al,0x93
     320:	05 01 5c 04 93       	add    eax,0x93045c01
     325:	05 9b 05 04 a3       	add    eax,0xa304059b
     32a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     32d:	04 9b                	add    al,0x9b
     32f:	05 e3 08 01 5c       	add    eax,0x5c0108e3
     334:	04 e3                	add    al,0xe3
     336:	08 fd                	or     ch,bh
     338:	08 01                	or     BYTE PTR [rcx],al
     33a:	55                   	push   rbp
     33b:	04 fd                	add    al,0xfd
     33d:	08 82 09 04 a3 01    	or     BYTE PTR [rdx+0x1a30409],al
     343:	55                   	push   rbp
     344:	9f                   	lahf
     345:	04 82                	add    al,0x82
     347:	09 87 09 01 5c 00    	or     DWORD PTR [rdi+0x5c0109],eax
	...
     359:	04 e0                	add    al,0xe0
     35b:	03 98 04 06 54 93    	add    ebx,DWORD PTR [rax-0x6cabf9fc]
     361:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     364:	08 04 98             	or     BYTE PTR [rax+rbx*4],al
     367:	04 9e                	add    al,0x9e
     369:	04 06                	add    al,0x6
     36b:	54                   	push   rsp
     36c:	93                   	xchg   ebx,eax
     36d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     370:	08 04 9e             	or     BYTE PTR [rsi+rbx*4],al
     373:	04 91                	add    al,0x91
     375:	05 06 5d 93 08       	add    eax,0x8935d06
     37a:	53                   	push   rbx
     37b:	93                   	xchg   ebx,eax
     37c:	08 04 9b             	or     BYTE PTR [rbx+rbx*4],al
     37f:	05 eb 05 06 5d       	add    eax,0x5d0605eb
     384:	93                   	xchg   ebx,eax
     385:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     388:	08 04 e3             	or     BYTE PTR [rbx+riz*8],al
     38b:	08 ef                	or     bh,ch
     38d:	08 06                	or     BYTE PTR [rsi],al
     38f:	54                   	push   rsp
     390:	93                   	xchg   ebx,eax
     391:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     394:	08 04 82             	or     BYTE PTR [rdx+rax*4],al
     397:	09 87 09 06 5d 93    	or     DWORD PTR [rdi-0x6ca2f9f7],eax
     39d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     3a0:	08 00                	or     BYTE PTR [rax],al
	...
     3ae:	04 ba                	add    al,0xba
     3b0:	04 be                	add    al,0xbe
     3b2:	04 01                	add    al,0x1
     3b4:	51                   	push   rcx
     3b5:	04 be                	add    al,0xbe
     3b7:	04 90                	add    al,0x90
     3b9:	05 02 77 14 04       	add    eax,0x4147702
     3be:	90                   	nop
     3bf:	05 9a 05 08 76       	add    eax,0x7608059a
     3c4:	58                   	pop    rax
     3c5:	09 e0                	or     eax,esp
     3c7:	1a 08                	sbb    cl,BYTE PTR [rax]
     3c9:	4c 1c 04             	rex.WR sbb al,0x4
     3cc:	9a                   	(bad)
     3cd:	05 9b 05 08 77       	add    eax,0x7708059b
     3d2:	50                   	push   rax
     3d3:	09 e0                	or     eax,esp
     3d5:	1a 08                	sbb    cl,BYTE PTR [rax]
     3d7:	4c 1c 04             	rex.WR sbb al,0x4
     3da:	9b                   	fwait
     3db:	05 e3 08 02 77       	add    eax,0x770208e3
     3e0:	14 04                	adc    al,0x4
     3e2:	82                   	(bad)
     3e3:	09 87 09 02 77 14    	or     DWORD PTR [rdi+0x14770209],eax
     3e9:	00 00                	add    BYTE PTR [rax],al
     3eb:	00 00                	add    BYTE PTR [rax],al
     3ed:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     3f0:	04 f4                	add    al,0xf4
     3f2:	04 01                	add    al,0x1
     3f4:	50                   	push   rax
     3f5:	04 9b                	add    al,0x9b
     3f7:	05 a5 05 01 50       	add    eax,0x500105a5
     3fc:	00 01                	add    BYTE PTR [rcx],al
     3fe:	01 04 e7             	add    DWORD PTR [rdi+riz*8],eax
     401:	05 be 08 01 5c       	add    eax,0x5c0108be
     406:	00 00                	add    BYTE PTR [rax],al
     408:	00 00                	add    BYTE PTR [rax],al
     40a:	01 04 f8             	add    DWORD PTR [rax+rdi*8],eax
     40d:	05 9f 06 01 5d       	add    eax,0x5d01069f
     412:	04 9f                	add    al,0x9f
     414:	06                   	(bad)
     415:	e4 06                	in     al,0x6
     417:	01 53 00             	add    DWORD PTR [rbx+0x0],edx
     41a:	00 00                	add    BYTE PTR [rax],al
     41c:	00 01                	add    BYTE PTR [rcx],al
     41e:	04 f8                	add    al,0xf8
     420:	05 ff 05 01 50       	add    eax,0x500105ff
     425:	04 ff                	add    al,0xff
     427:	05 e4 06 02 77       	add    eax,0x770206e4
     42c:	08 00                	or     BYTE PTR [rax],al
     42e:	01 00                	add    DWORD PTR [rax],eax
     430:	04 91                	add    al,0x91
     432:	06                   	(bad)
     433:	a9 06 02 30 9f       	test   eax,0x9f300206
     438:	00 01                	add    BYTE PTR [rcx],al
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	01 01                	add    DWORD PTR [rcx],eax
     43e:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
     441:	06                   	(bad)
     442:	8b 07                	mov    eax,DWORD PTR [rdi]
     444:	02 30                	add    dh,BYTE PTR [rax]
     446:	9f                   	lahf
     447:	04 8b                	add    al,0x8b
     449:	07                   	(bad)
     44a:	fb                   	sti
     44b:	07                   	(bad)
     44c:	02 77 18             	add    dh,BYTE PTR [rdi+0x18]
     44f:	04 fb                	add    al,0xfb
     451:	07                   	(bad)
     452:	81 08 07 77 18 94    	or     DWORD PTR [rax],0x94187707
     458:	04 23                	add    al,0x23
     45a:	01 9f 00 00 00 00    	add    DWORD PTR [rdi+0x0],ebx
     460:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
     463:	07                   	(bad)
     464:	b4 07                	mov    ah,0x7
     466:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     469:	f2 07                	repnz (bad)
     46b:	95                   	xchg   ebp,eax
     46c:	08 01                	or     BYTE PTR [rcx],al
     46e:	52                   	push   rdx
     46f:	00 00                	add    BYTE PTR [rax],al
     471:	00 00                	add    BYTE PTR [rax],al
     473:	00 00                	add    BYTE PTR [rax],al
     475:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
     478:	07                   	(bad)
     479:	c1 07 06             	rol    DWORD PTR [rdi],0x6
     47c:	70 10                	jo     48e <__abi_tag+0x112>
     47e:	93                   	xchg   ebx,eax
     47f:	08 93 08 04 c1 07    	or     BYTE PTR [rbx+0x7c10408],dl
     485:	c9                   	leave
     486:	07                   	(bad)
     487:	0c 70                	or     al,0x70
     489:	10 93 08 70 18 93    	adc    BYTE PTR [rbx-0x6ce78ff8],dl
     48f:	04 70                	add    al,0x70
     491:	1c 93                	sbb    al,0x93
     493:	04 04                	add    al,0x4
     495:	c9                   	leave
     496:	07                   	(bad)
     497:	e2 07                	loop   4a0 <__abi_tag+0x124>
     499:	05 54 93 08 93       	add    eax,0x93089354
     49e:	08 00                	or     BYTE PTR [rax],al
     4a0:	04 00                	add    al,0x0
     4a2:	00 00                	add    BYTE PTR [rax],al
     4a4:	04 ce                	add    al,0xce
     4a6:	07                   	(bad)
     4a7:	d0 07                	rol    BYTE PTR [rdi],1
     4a9:	06                   	(bad)
     4aa:	70 00                	jo     4ac <__abi_tag+0x130>
     4ac:	73 00                	jae    4ae <__abi_tag+0x132>
     4ae:	1d 9f 04 d0 07       	sbb    eax,0x7d0049f
     4b3:	e2 07                	loop   4bc <__abi_tag+0x140>
     4b5:	06                   	(bad)
     4b6:	81 00 73 00 1d 9f    	add    DWORD PTR [rax],0x9f1d0073
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	00 00                	add    BYTE PTR [rax],al
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	01 04 8b             	add    DWORD PTR [rbx+rcx*4],eax
     4c5:	08 95 08 02 30 9f    	or     BYTE PTR [rbp-0x60cffdf8],dl
     4cb:	04 9c                	add    al,0x9c
     4cd:	08 a5 08 01 5d 04    	or     BYTE PTR [rbp+0x45d0108],ah
     4d3:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     4d4:	08 ae 08 03 7d 7f    	or     BYTE PTR [rsi+0x7f7d0308],ch
     4da:	9f                   	lahf
	...
     4e7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     4ea:	2f                   	(bad)
     4eb:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     4ee:	2f                   	(bad)
     4ef:	6d                   	ins    DWORD PTR es:[rdi],dx
     4f0:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
     4f3:	6d                   	ins    DWORD PTR es:[rdi],dx
     4f4:	78 01                	js     4f7 <__abi_tag+0x17b>
     4f6:	50                   	push   rax
     4f7:	04 78                	add    al,0x78
     4f9:	fb                   	sti
     4fa:	01 01                	add    DWORD PTR [rcx],eax
     4fc:	56                   	push   rsi
     4fd:	04 84                	add    al,0x84
     4ff:	02 9e 02 01 55 04    	add    bl,BYTE PTR [rsi+0x4550102]
     505:	9e                   	sahf
     506:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     50c:	55                   	push   rbp
     50d:	9f                   	lahf
	...
     516:	00 00                	add    BYTE PTR [rax],al
     518:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     51b:	29 01                	sub    DWORD PTR [rcx],eax
     51d:	54                   	push   rsp
     51e:	04 29                	add    al,0x29
     520:	5f                   	pop    rdi
     521:	01 5c 04 5f          	add    DWORD PTR [rsp+rax*1+0x5f],ebx
     525:	84 02                	test   BYTE PTR [rdx],al
     527:	04 a3                	add    al,0xa3
     529:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
     52d:	84 02                	test   BYTE PTR [rdx],al
     52f:	97                   	xchg   edi,eax
     530:	02 01                	add    al,BYTE PTR [rcx]
     532:	54                   	push   rsp
     533:	04 97                	add    al,0x97
     535:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     53b:	54                   	push   rsp
     53c:	9f                   	lahf
     53d:	00 00                	add    BYTE PTR [rax],al
     53f:	00 00                	add    BYTE PTR [rax],al
     541:	00 00                	add    BYTE PTR [rax],al
     543:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
     546:	46 01 50 04          	rex.RX add DWORD PTR [rax+0x4],r10d
     54a:	46 ff 01             	rex.RX inc DWORD PTR [rcx]
     54d:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
     550:	ff 01                	inc    DWORD PTR [rcx]
     552:	84 02                	test   BYTE PTR [rdx],al
     554:	01 50 00             	add    DWORD PTR [rax+0x0],edx
     557:	00 00                	add    BYTE PTR [rax],al
     559:	00 00                	add    BYTE PTR [rax],al
     55b:	04 4a                	add    al,0x4a
     55d:	5f                   	pop    rdi
     55e:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     561:	5f                   	pop    rdi
     562:	81 02 01 5e 00 01    	add    DWORD PTR [rdx],0x1005e01
     568:	00 01                	add    BYTE PTR [rcx],al
     56a:	00 00                	add    BYTE PTR [rax],al
     56c:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     56f:	5f                   	pop    rdi
     570:	02 30                	add    dh,BYTE PTR [rax]
     572:	9f                   	lahf
     573:	04 5f                	add    al,0x5f
     575:	78 01                	js     578 <__abi_tag+0x1fc>
     577:	56                   	push   rsi
     578:	04 78                	add    al,0x78
     57a:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     57b:	01 01                	add    DWORD PTR [rcx],eax
     57d:	54                   	push   rsp
     57e:	00 02                	add    BYTE PTR [rdx],al
     580:	00 00                	add    BYTE PTR [rax],al
     582:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     585:	5f                   	pop    rdi
     586:	02 30                	add    dh,BYTE PTR [rax]
     588:	9f                   	lahf
     589:	04 91                	add    al,0x91
     58b:	01 f2                	add    edx,esi
     58d:	01 01                	add    DWORD PTR [rcx],eax
     58f:	5c                   	pop    rsp
     590:	00 03                	add    BYTE PTR [rbx],al
     592:	00 00                	add    BYTE PTR [rax],al
     594:	02 02                	add    al,BYTE PTR [rdx]
     596:	00 00                	add    BYTE PTR [rax],al
     598:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     59b:	5f                   	pop    rdi
     59c:	02 30                	add    dh,BYTE PTR [rax]
     59e:	9f                   	lahf
     59f:	04 5f                	add    al,0x5f
     5a1:	e3 01                	jrcxz  5a4 <__abi_tag+0x228>
     5a3:	05 7f 00 34 25       	add    eax,0x2534007f
     5a8:	9f                   	lahf
     5a9:	04 e3                	add    al,0xe3
     5ab:	01 e7                	add    edi,esp
     5ad:	01 07                	add    DWORD PTR [rdi],eax
     5af:	7f 00                	jg     5b1 <__abi_tag+0x235>
     5b1:	34 25                	xor    al,0x25
     5b3:	23 01                	and    eax,DWORD PTR [rcx]
     5b5:	9f                   	lahf
     5b6:	04 e7                	add    al,0xe7
     5b8:	01 f2                	add    edx,esi
     5ba:	01 07                	add    DWORD PTR [rdi],eax
     5bc:	7f 70                	jg     62e <__abi_tag+0x2b2>
     5be:	34 25                	xor    al,0x25
     5c0:	23 01                	and    eax,DWORD PTR [rcx]
     5c2:	9f                   	lahf
     5c3:	00 02                	add    BYTE PTR [rdx],al
     5c5:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     5c8:	6d                   	ins    DWORD PTR es:[rdi],dx
     5c9:	02 3a                	add    bh,BYTE PTR [rdx]
     5cb:	9f                   	lahf
     5cc:	00 02                	add    BYTE PTR [rdx],al
     5ce:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     5d1:	6d                   	ins    DWORD PTR es:[rdi],dx
     5d2:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
     5d5:	00 00                	add    BYTE PTR [rax],al
     5d7:	00 00                	add    BYTE PTR [rax],al
     5d9:	04 9b                	add    al,0x9b
     5db:	01 a7 01 01 51 04    	add    DWORD PTR [rdi+0x4510101],esp
     5e1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     5e2:	01 a8 01 03 91 a8    	add    DWORD PTR [rax-0x576efcff],ebp
     5e8:	7f 00                	jg     5ea <__abi_tag+0x26e>
     5ea:	01 00                	add    DWORD PTR [rax],eax
     5ec:	04 91                	add    al,0x91
     5ee:	01 a7 01 01 54 00    	add    DWORD PTR [rdi+0x540101],esp
     5f4:	01 00                	add    DWORD PTR [rax],eax
     5f6:	00 00                	add    BYTE PTR [rax],al
     5f8:	04 91                	add    al,0x91
     5fa:	01 a7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esp
     600:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     601:	01 a8 01 03 91 a0    	add    DWORD PTR [rax-0x5f6efcff],ebp
     607:	7f 00                	jg     609 <__abi_tag+0x28d>
     609:	00 00                	add    BYTE PTR [rax],al
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 00                	add    BYTE PTR [rax],al
     60f:	04 b6                	add    al,0xb6
     611:	01 c8                	add    eax,ecx
     613:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     616:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     61a:	0c ff                	or     al,0xff
     61c:	ff                   	(bad)
     61d:	ff                   	(bad)
     61e:	ff 1a                	call   FWORD PTR [rdx]
     620:	9f                   	lahf
     621:	04 c8                	add    al,0xc8
     623:	01 d4                	add    esp,edx
     625:	01 01                	add    DWORD PTR [rcx],eax
     627:	51                   	push   rcx
     628:	04 d4                	add    al,0xd4
     62a:	01 d5                	add    ebp,edx
     62c:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     62f:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     633:	0c ff                	or     al,0xff
     635:	ff                   	(bad)
     636:	ff                   	(bad)
     637:	ff 1a                	call   FWORD PTR [rdx]
     639:	9f                   	lahf
     63a:	00 00                	add    BYTE PTR [rax],al
     63c:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     63f:	01 d5                	add    ebp,edx
     641:	01 02                	add    DWORD PTR [rdx],eax
     643:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     649:	00 00                	add    BYTE PTR [rax],al
     64b:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     64e:	01 d0                	add    eax,edx
     650:	01 06                	add    DWORD PTR [rsi],eax
     652:	7e 00                	jle    654 <__abi_tag+0x2d8>
     654:	75 00                	jne    656 <__abi_tag+0x2da>
     656:	22 9f 04 d0 01 d4    	and    bl,BYTE PTR [rdi-0x2bfe2ffc]
     65c:	01 01                	add    DWORD PTR [rcx],eax
     65e:	55                   	push   rbp
     65f:	04 d4                	add    al,0xd4
     661:	01 d5                	add    ebp,edx
     663:	01 0d 7e 00 91 a8    	add    DWORD PTR [rip+0xffffffffa891007e],ecx        # ffffffffa89106e7 <_end+0xffffffffa890a6cf>
     669:	7f 06                	jg     671 <__abi_tag+0x2f5>
     66b:	22 91 b0 7f 06 22    	and    dl,BYTE PTR [rcx+0x22067fb0]
     671:	9f                   	lahf
	...
     67a:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     67d:	02 e6                	add    ah,dh
     67f:	02 01                	add    al,BYTE PTR [rcx]
     681:	54                   	push   rsp
     682:	04 e6                	add    al,0xe6
     684:	02 f4                	add    dh,ah
     686:	02 02                	add    al,BYTE PTR [rdx]
     688:	75 10                	jne    69a <__abi_tag+0x31e>
     68a:	04 f4                	add    al,0xf4
     68c:	02 f8                	add    bh,al
     68e:	02 02                	add    al,BYTE PTR [rdx]
     690:	7c 10                	jl     6a2 <__abi_tag+0x326>
     692:	04 f8                	add    al,0xf8
     694:	02 d9                	add    bl,cl
     696:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     699:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
     69d:	00 00                	add    BYTE PTR [rax],al
     69f:	00 00                	add    BYTE PTR [rax],al
     6a1:	00 00                	add    BYTE PTR [rax],al
     6a3:	04 b0                	add    al,0xb0
     6a5:	02 f8                	add    bh,al
     6a7:	02 01                	add    al,BYTE PTR [rcx]
     6a9:	51                   	push   rcx
     6aa:	04 f8                	add    al,0xf8
     6ac:	02 90 03 01 5e 04    	add    dl,BYTE PTR [rax+0x45e0103]
     6b2:	90                   	nop
     6b3:	03 d9                	add    ebx,ecx
     6b5:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     6b8:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
	...
     6c3:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     6c6:	02 f4                	add    dh,ah
     6c8:	02 02                	add    al,BYTE PTR [rdx]
     6ca:	75 00                	jne    6cc <__abi_tag+0x350>
     6cc:	04 f4                	add    al,0xf4
     6ce:	02 ce                	add    cl,dh
     6d0:	03 02                	add    eax,DWORD PTR [rdx]
     6d2:	7c 00                	jl     6d4 <__abi_tag+0x358>
     6d4:	04 ce                	add    al,0xce
     6d6:	03 d4                	add    edx,esp
     6d8:	03 02                	add    eax,DWORD PTR [rdx]
     6da:	70 00                	jo     6dc <__abi_tag+0x360>
     6dc:	04 d4                	add    al,0xd4
     6de:	03 d9                	add    ebx,ecx
     6e0:	03 02                	add    eax,DWORD PTR [rdx]
     6e2:	7c 00                	jl     6e4 <__abi_tag+0x368>
     6e4:	00 01                	add    BYTE PTR [rcx],al
     6e6:	00 04 fd 02 90 03 02 	add    BYTE PTR [rdi*8+0x2039002],al
     6ed:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     6f3:	00 00                	add    BYTE PTR [rax],al
     6f5:	00 00                	add    BYTE PTR [rax],al
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     6fc:	0b 8b 0c 01 55 04    	or     ecx,DWORD PTR [rbx+0x455010c]
     702:	8b 0c b4             	mov    ecx,DWORD PTR [rsp+rsi*4]
     705:	0c 01                	or     al,0x1
     707:	56                   	push   rsi
     708:	04 b4                	add    al,0xb4
     70a:	0c b9                	or     al,0xb9
     70c:	0c 04                	or     al,0x4
     70e:	a3 01 55 9f 04 b9 0c 	movabs ds:0xcd30cb9049f5501,eax
     715:	d3 0c 
     717:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     71a:	d3 0c d8             	ror    DWORD PTR [rax+rbx*8],cl
     71d:	0c 04                	or     al,0x4
     71f:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
     726:	00 00 
     728:	00 01                	add    BYTE PTR [rcx],al
     72a:	04 85                	add    al,0x85
     72c:	0c 8b                	or     al,0x8b
     72e:	0c 02                	or     al,0x2
     730:	30 9f 04 8b 0c 9c    	xor    BYTE PTR [rdi-0x63f374fc],bl
     736:	0c 01                	or     al,0x1
     738:	53                   	push   rbx
     739:	04 9c                	add    al,0x9c
     73b:	0c a5                	or     al,0xa5
     73d:	0c 03                	or     al,0x3
     73f:	73 7f                	jae    7c0 <__abi_tag+0x444>
     741:	9f                   	lahf
     742:	00 f0                	add    al,dh
     744:	0c 00                	or     al,0x0
     746:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # f4c <__abi_tag+0xbd0>
     74c:	00 00                	add    BYTE PTR [rax],al
     74e:	00 00                	add    BYTE PTR [rax],al
     750:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     753:	08 d8                	or     al,bl
     755:	08 06                	or     BYTE PTR [rsi],al
     757:	55                   	push   rbp
     758:	93                   	xchg   ebx,eax
     759:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     75d:	00 01                	add    BYTE PTR [rcx],al
     75f:	00 00                	add    BYTE PTR [rax],al
     761:	00 00                	add    BYTE PTR [rax],al
     763:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
     766:	08 e3                	or     bl,ah
     768:	08 02                	or     BYTE PTR [rdx],al
     76a:	30 9f 04 e3 08 ee    	xor    BYTE PTR [rdi-0x11f71cfc],bl
     770:	08 01                	or     BYTE PTR [rcx],al
     772:	50                   	push   rax
     773:	04 f0                	add    al,0xf0
     775:	08 99 09 01 50 00    	or     BYTE PTR [rcx+0x500109],bl
     77b:	02 00                	add    al,BYTE PTR [rax]
     77d:	01 00                	add    DWORD PTR [rax],eax
	...
     787:	04 da                	add    al,0xda
     789:	08 e3                	or     bl,ah
     78b:	08 02                	or     BYTE PTR [rdx],al
     78d:	30 9f 04 f0 08 f8    	xor    BYTE PTR [rdi-0x7f70ffc],bl
     793:	08 08                	or     BYTE PTR [rax],cl
     795:	70 00                	jo     797 <__abi_tag+0x41b>
     797:	40                   	rex
     798:	48 24 1f             	rex.W and al,0x1f
     79b:	1a 9f 04 f8 08 82    	sbb    bl,BYTE PTR [rdi-0x7df707fc]
     7a1:	09 01                	or     DWORD PTR [rcx],eax
     7a3:	51                   	push   rcx
     7a4:	04 82                	add    al,0x82
     7a6:	09 85 09 01 52 04    	or     DWORD PTR [rbp+0x4520109],eax
     7ac:	85 09                	test   DWORD PTR [rcx],ecx
     7ae:	8f 09 04 71          	(bad)
     7b2:	00 20                	add    BYTE PTR [rax],ah
     7b4:	9f                   	lahf
     7b5:	04 8f                	add    al,0x8f
     7b7:	09 99 09 01 51 00    	or     DWORD PTR [rcx+0x510109],ebx
     7bd:	03 00                	add    eax,DWORD PTR [rax]
     7bf:	04 da                	add    al,0xda
     7c1:	08 e3                	or     bl,ah
     7c3:	08 02                	or     BYTE PTR [rdx],al
     7c5:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     7cb:	d0 07                	rol    BYTE PTR [rdi],1
     7cd:	d4                   	(bad)
     7ce:	07                   	(bad)
     7cf:	06                   	(bad)
     7d0:	55                   	push   rbp
     7d1:	93                   	xchg   ebx,eax
     7d2:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     7d6:	00 01                	add    BYTE PTR [rcx],al
     7d8:	00 00                	add    BYTE PTR [rax],al
     7da:	00 00                	add    BYTE PTR [rax],al
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     7e1:	07                   	(bad)
     7e2:	ea                   	(bad)
     7e3:	07                   	(bad)
     7e4:	02 31                	add    dh,BYTE PTR [rcx]
     7e6:	9f                   	lahf
     7e7:	04 ea                	add    al,0xea
     7e9:	07                   	(bad)
     7ea:	f9                   	stc
     7eb:	07                   	(bad)
     7ec:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     7ef:	92                   	xchg   edx,eax
     7f0:	08 b6 08 01 51 04    	or     BYTE PTR [rsi+0x4510108],dh
     7f6:	b6 08                	mov    dh,0x8
     7f8:	c6                   	(bad)
     7f9:	08 02                	or     BYTE PTR [rdx],al
     7fb:	31 9f 00 02 00 00    	xor    DWORD PTR [rdi+0x200],ebx
     801:	00 00                	add    BYTE PTR [rax],al
     803:	00 00                	add    BYTE PTR [rax],al
     805:	00 00                	add    BYTE PTR [rax],al
     807:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     80a:	07                   	(bad)
     80b:	ea                   	(bad)
     80c:	07                   	(bad)
     80d:	02 30                	add    dh,BYTE PTR [rax]
     80f:	9f                   	lahf
     810:	04 ea                	add    al,0xea
     812:	07                   	(bad)
     813:	90                   	nop
     814:	08 01                	or     BYTE PTR [rcx],al
     816:	50                   	push   rax
     817:	04 ab                	add    al,0xab
     819:	08 b3 08 01 50 04    	or     BYTE PTR [rbx+0x4500108],dh
     81f:	b3 08                	mov    bl,0x8
     821:	b6 08                	mov    dh,0x8
     823:	06                   	(bad)
     824:	72 00                	jb     826 <__abi_tag+0x4aa>
     826:	79 00                	jns    828 <__abi_tag+0x4ac>
     828:	1c 9f                	sbb    al,0x9f
     82a:	04 b6                	add    al,0xb6
     82c:	08 c6                	or     dh,al
     82e:	08 02                	or     BYTE PTR [rdx],al
     830:	30 9f 00 04 00 00    	xor    BYTE PTR [rdi+0x400],bl
     836:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     839:	07                   	(bad)
     83a:	ea                   	(bad)
     83b:	07                   	(bad)
     83c:	02 30                	add    dh,BYTE PTR [rax]
     83e:	9f                   	lahf
     83f:	04 b6                	add    al,0xb6
     841:	08 c6                	or     dh,al
     843:	08 02                	or     BYTE PTR [rdx],al
     845:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     84b:	e0 04                	loopne 851 <__abi_tag+0x4d5>
     84d:	e8 04 06 55 93       	call   ffffffff93550e56 <_end+0xffffffff9354ae3e>
     852:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     856:	00 01                	add    BYTE PTR [rcx],al
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	02 02                	add    al,BYTE PTR [rdx]
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	00 02                	add    BYTE PTR [rdx],al
     860:	00 00                	add    BYTE PTR [rax],al
     862:	00 02                	add    BYTE PTR [rdx],al
     864:	00 00                	add    BYTE PTR [rax],al
     866:	00 00                	add    BYTE PTR [rax],al
     868:	00 00                	add    BYTE PTR [rax],al
     86a:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     86d:	04 9f                	add    al,0x9f
     86f:	05 02 30 9f 04       	add    eax,0x49f3002
     874:	e1 05                	loope  87b <__abi_tag+0x4ff>
     876:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     879:	50                   	push   rax
     87a:	04 8a                	add    al,0x8a
     87c:	07                   	(bad)
     87d:	8c 07                	mov    WORD PTR [rdi],es
     87f:	06                   	(bad)
     880:	70 00                	jo     882 <__abi_tag+0x506>
     882:	72 00                	jb     884 <__abi_tag+0x508>
     884:	22 9f 04 8c 07 8d    	and    bl,BYTE PTR [rdi-0x72f873fc]
     88a:	07                   	(bad)
     88b:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     88e:	93                   	xchg   ebx,eax
     88f:	07                   	(bad)
     890:	95                   	xchg   ebp,eax
     891:	07                   	(bad)
     892:	06                   	(bad)
     893:	70 00                	jo     895 <__abi_tag+0x519>
     895:	72 00                	jb     897 <__abi_tag+0x51b>
     897:	22 9f 04 95 07 96    	and    bl,BYTE PTR [rdi-0x69f86afc]
     89d:	07                   	(bad)
     89e:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     8a1:	a3 07 a5 07 06 70 00 	movabs ds:0x7200700607a507,eax
     8a8:	72 00 
     8aa:	22 9f 04 a5 07 a6    	and    bl,BYTE PTR [rdi-0x59f85afc]
     8b0:	07                   	(bad)
     8b1:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     8b4:	b4 07                	mov    ah,0x7
     8b6:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     8b9:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     8bf:	07                   	(bad)
     8c0:	02 30                	add    dh,BYTE PTR [rax]
     8c2:	9f                   	lahf
     8c3:	00 02                	add    BYTE PTR [rdx],al
     8c5:	00 01                	add    BYTE PTR [rcx],al
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	01 01                	add    DWORD PTR [rcx],eax
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	01 01                	add    DWORD PTR [rcx],eax
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	01 01                	add    DWORD PTR [rcx],eax
     8d3:	00 00                	add    BYTE PTR [rax],al
     8d5:	01 01                	add    DWORD PTR [rcx],eax
     8d7:	01 01                	add    DWORD PTR [rcx],eax
     8d9:	02 00                	add    al,BYTE PTR [rax]
     8db:	00 00                	add    BYTE PTR [rax],al
     8dd:	00 00                	add    BYTE PTR [rax],al
     8df:	02 02                	add    al,BYTE PTR [rdx]
     8e1:	01 01                	add    DWORD PTR [rcx],eax
     8e3:	01 01                	add    DWORD PTR [rcx],eax
	...
     8ed:	00 00                	add    BYTE PTR [rax],al
     8ef:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     8f2:	04 9f                	add    al,0x9f
     8f4:	05 02 30 9f 04       	add    eax,0x49f3002
     8f9:	f1                   	int1
     8fa:	05 fc 05 0b 7a       	add    eax,0x7a0b05fc
     8ff:	00 08                	add    BYTE PTR [rax],cl
     901:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     904:	20 26                	and    BYTE PTR [rsi],ah
     906:	75 00                	jne    908 <__abi_tag+0x58c>
     908:	22 04 fc             	and    al,BYTE PTR [rsp+rdi*8]
     90b:	05 81 06 0b 72       	add    eax,0x720b0681
     910:	04 08                	add    al,0x8
     912:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     915:	20 26                	and    BYTE PTR [rsi],ah
     917:	75 00                	jne    919 <__abi_tag+0x59d>
     919:	22 04 81             	and    al,BYTE PTR [rcx+rax*4]
     91c:	06                   	(bad)
     91d:	8c 06                	mov    WORD PTR [rsi],es
     91f:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     922:	08 20                	or     BYTE PTR [rax],ah
     924:	24 08                	and    al,0x8
     926:	20 26                	and    BYTE PTR [rsi],ah
     928:	75 00                	jne    92a <__abi_tag+0x5ae>
     92a:	22 04 8c             	and    al,BYTE PTR [rsp+rcx*4]
     92d:	06                   	(bad)
     92e:	91                   	xchg   ecx,eax
     92f:	06                   	(bad)
     930:	0b 72 08             	or     esi,DWORD PTR [rdx+0x8]
     933:	08 20                	or     BYTE PTR [rax],ah
     935:	24 08                	and    al,0x8
     937:	20 26                	and    BYTE PTR [rsi],ah
     939:	75 00                	jne    93b <__abi_tag+0x5bf>
     93b:	22 04 91             	and    al,BYTE PTR [rcx+rdx*4]
     93e:	06                   	(bad)
     93f:	9c                   	pushf
     940:	06                   	(bad)
     941:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     944:	08 20                	or     BYTE PTR [rax],ah
     946:	24 08                	and    al,0x8
     948:	20 26                	and    BYTE PTR [rsi],ah
     94a:	75 00                	jne    94c <__abi_tag+0x5d0>
     94c:	22 04 9c             	and    al,BYTE PTR [rsp+rbx*4]
     94f:	06                   	(bad)
     950:	a1 06 0b 72 0c 08 20 	movabs eax,ds:0x82420080c720b06
     957:	24 08 
     959:	20 26                	and    BYTE PTR [rsi],ah
     95b:	75 00                	jne    95d <__abi_tag+0x5e1>
     95d:	22 04 a1             	and    al,BYTE PTR [rcx+riz*4]
     960:	06                   	(bad)
     961:	ac                   	lods   al,BYTE PTR ds:[rsi]
     962:	06                   	(bad)
     963:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     966:	08 20                	or     BYTE PTR [rax],ah
     968:	24 08                	and    al,0x8
     96a:	20 26                	and    BYTE PTR [rsi],ah
     96c:	75 00                	jne    96e <__abi_tag+0x5f2>
     96e:	22 04 ac             	and    al,BYTE PTR [rsp+rbp*4]
     971:	06                   	(bad)
     972:	b1 06                	mov    cl,0x6
     974:	0b 72 10             	or     esi,DWORD PTR [rdx+0x10]
     977:	08 20                	or     BYTE PTR [rax],ah
     979:	24 08                	and    al,0x8
     97b:	20 26                	and    BYTE PTR [rsi],ah
     97d:	75 00                	jne    97f <__abi_tag+0x603>
     97f:	22 04 b1             	and    al,BYTE PTR [rcx+rsi*4]
     982:	06                   	(bad)
     983:	c0 06 0b             	rol    BYTE PTR [rsi],0xb
     986:	7a 00                	jp     988 <__abi_tag+0x60c>
     988:	08 20                	or     BYTE PTR [rax],ah
     98a:	24 08                	and    al,0x8
     98c:	20 26                	and    BYTE PTR [rsi],ah
     98e:	75 00                	jne    990 <__abi_tag+0x614>
     990:	22 04 c0             	and    al,BYTE PTR [rax+rax*8]
     993:	06                   	(bad)
     994:	c6 06 0b             	mov    BYTE PTR [rsi],0xb
     997:	72 00                	jb     999 <__abi_tag+0x61d>
     999:	08 20                	or     BYTE PTR [rax],ah
     99b:	24 08                	and    al,0x8
     99d:	20 26                	and    BYTE PTR [rsi],ah
     99f:	75 00                	jne    9a1 <__abi_tag+0x625>
     9a1:	22 04 cb             	and    al,BYTE PTR [rbx+rcx*8]
     9a4:	06                   	(bad)
     9a5:	db 06                	fild   DWORD PTR [rsi]
     9a7:	02 30                	add    dh,BYTE PTR [rax]
     9a9:	9f                   	lahf
     9aa:	04 db                	add    al,0xdb
     9ac:	06                   	(bad)
     9ad:	e7 06                	out    0x6,eax
     9af:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9b2:	ed                   	in     eax,dx
     9b3:	06                   	(bad)
     9b4:	f2 06                	repnz (bad)
     9b6:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9b9:	f2 06                	repnz (bad)
     9bb:	f8                   	clc
     9bc:	06                   	(bad)
     9bd:	05 72 00 38 24       	add    eax,0x24380072
     9c2:	9f                   	lahf
     9c3:	04 f8                	add    al,0xf8
     9c5:	06                   	(bad)
     9c6:	fe 06                	inc    BYTE PTR [rsi]
     9c8:	05 72 00 40 24       	add    eax,0x24400072
     9cd:	9f                   	lahf
     9ce:	04 fe                	add    al,0xfe
     9d0:	06                   	(bad)
     9d1:	83 07 05             	add    DWORD PTR [rdi],0x5
     9d4:	72 00                	jb     9d6 <__abi_tag+0x65a>
     9d6:	48 24 9f             	rex.W and al,0x9f
     9d9:	04 83                	add    al,0x83
     9db:	07                   	(bad)
     9dc:	8a 07                	mov    al,BYTE PTR [rdi]
     9de:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9e1:	8d 07                	lea    eax,[rdi]
     9e3:	93                   	xchg   ebx,eax
     9e4:	07                   	(bad)
     9e5:	05 72 00 38 24       	add    eax,0x24380072
     9ea:	9f                   	lahf
     9eb:	04 96                	add    al,0x96
     9ed:	07                   	(bad)
     9ee:	a3 07 05 72 00 40 24 	movabs ds:0x49f244000720507,eax
     9f5:	9f 04 
     9f7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     9f8:	07                   	(bad)
     9f9:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     9fc:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     a02:	07                   	(bad)
     a03:	02 30                	add    dh,BYTE PTR [rax]
     a05:	9f                   	lahf
     a06:	00 03                	add    BYTE PTR [rbx],al
     a08:	00 00                	add    BYTE PTR [rax],al
     a0a:	01 01                	add    DWORD PTR [rcx],eax
     a0c:	01 00                	add    DWORD PTR [rax],eax
     a0e:	00 00                	add    BYTE PTR [rax],al
     a10:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     a13:	04 9f                	add    al,0x9f
     a15:	05 02 30 9f 04       	add    eax,0x49f3002
     a1a:	ec                   	in     al,dx
     a1b:	05 bb 06 01 5a       	add    eax,0x5a0106bb
     a20:	04 bb                	add    al,0xbb
     a22:	06                   	(bad)
     a23:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     a26:	52                   	push   rdx
     a27:	04 b4                	add    al,0xb4
     a29:	07                   	(bad)
     a2a:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     a2d:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     a33:	07                   	(bad)
     a34:	02 30                	add    dh,BYTE PTR [rax]
     a36:	9f                   	lahf
     a37:	00 00                	add    BYTE PTR [rax],al
     a39:	00 00                	add    BYTE PTR [rax],al
     a3b:	01 00                	add    DWORD PTR [rax],eax
     a3d:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
     a40:	06                   	(bad)
     a41:	eb 06                	jmp    a49 <__abi_tag+0x6cd>
     a43:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     a46:	eb 06                	jmp    a4e <__abi_tag+0x6d2>
     a48:	ed                   	in     eax,dx
     a49:	06                   	(bad)
     a4a:	03 71 7f             	add    esi,DWORD PTR [rcx+0x7f]
     a4d:	9f                   	lahf
     a4e:	04 a6                	add    al,0xa6
     a50:	07                   	(bad)
     a51:	b4 07                	mov    ah,0x7
     a53:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     a56:	00 03                	add    BYTE PTR [rbx],al
     a58:	03 02                	add    eax,DWORD PTR [rdx]
     a5a:	02 02                	add    al,BYTE PTR [rdx]
     a5c:	02 00                	add    al,BYTE PTR [rax]
     a5e:	00 00                	add    BYTE PTR [rax],al
     a60:	00 00                	add    BYTE PTR [rax],al
     a62:	04 f2                	add    al,0xf2
     a64:	06                   	(bad)
     a65:	f2 06                	repnz (bad)
     a67:	05 34 79 00 1c       	add    eax,0x1c007934
     a6c:	9f                   	lahf
     a6d:	04 f2                	add    al,0xf2
     a6f:	06                   	(bad)
     a70:	f8                   	clc
     a71:	06                   	(bad)
     a72:	05 33 79 00 1c       	add    eax,0x1c007933
     a77:	9f                   	lahf
     a78:	04 f8                	add    al,0xf8
     a7a:	06                   	(bad)
     a7b:	fe 06                	inc    BYTE PTR [rsi]
     a7d:	05 32 79 00 1c       	add    eax,0x1c007932
     a82:	9f                   	lahf
     a83:	04 fe                	add    al,0xfe
     a85:	06                   	(bad)
     a86:	8a 07                	mov    al,BYTE PTR [rdi]
     a88:	05 31 79 00 1c       	add    eax,0x1c007931
     a8d:	9f                   	lahf
     a8e:	04 8d                	add    al,0x8d
     a90:	07                   	(bad)
     a91:	93                   	xchg   ebx,eax
     a92:	07                   	(bad)
     a93:	05 33 79 00 1c       	add    eax,0x1c007933
     a98:	9f                   	lahf
     a99:	04 96                	add    al,0x96
     a9b:	07                   	(bad)
     a9c:	a3 07 05 32 79 00 1c 	movabs ds:0x9f1c0079320507,eax
     aa3:	9f 00 
     aa5:	00 00                	add    BYTE PTR [rax],al
     aa7:	04 b0                	add    al,0xb0
     aa9:	03 b8 03 06 55 93    	add    edi,DWORD PTR [rax-0x6caaf9fd]
     aaf:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
	...
     abb:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     ac2:	50                   	push   rax
     ac3:	04 c9                	add    al,0xc9
     ac5:	03 ff                	add    edi,edi
     ac7:	03 01                	add    eax,DWORD PTR [rcx]
     ac9:	54                   	push   rsp
     aca:	04 ff                	add    al,0xff
     acc:	03 84 04 05 74 00 33 	add    eax,DWORD PTR [rsp+rax*1+0x33007405]
     ad3:	1a 9f 04 cf 04 d4    	sbb    bl,BYTE PTR [rdi-0x2bfb30fc]
     ad9:	04 01                	add    al,0x1
     adb:	50                   	push   rax
     adc:	00 01                	add    BYTE PTR [rcx],al
     ade:	00 00                	add    BYTE PTR [rax],al
     ae0:	01 01                	add    DWORD PTR [rcx],eax
     ae2:	00 04 bd 03 e3 03 01 	add    BYTE PTR [rdi*4+0x103e303],al
     ae9:	52                   	push   rdx
     aea:	04 e3                	add    al,0xe3
     aec:	03 fa                	add    edi,edx
     aee:	03 03                	add    eax,DWORD PTR [rbx]
     af0:	72 7c                	jb     b6e <__abi_tag+0x7f2>
     af2:	9f                   	lahf
     af3:	04 fa                	add    al,0xfa
     af5:	03 d4                	add    edx,esp
     af7:	04 01                	add    al,0x1
     af9:	52                   	push   rdx
     afa:	00 02                	add    BYTE PTR [rdx],al
     afc:	00 00                	add    BYTE PTR [rax],al
     afe:	00 00                	add    BYTE PTR [rax],al
     b00:	00 02                	add    BYTE PTR [rdx],al
	...
     b0a:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     b11:	50                   	push   rax
     b12:	04 c9                	add    al,0xc9
     b14:	03 d5                	add    edx,ebp
     b16:	03 01                	add    eax,DWORD PTR [rcx]
     b18:	54                   	push   rsp
     b19:	04 d5                	add    al,0xd5
     b1b:	03 e9                	add    ebp,ecx
     b1d:	03 01                	add    eax,DWORD PTR [rcx]
     b1f:	51                   	push   rcx
     b20:	04 f2                	add    al,0xf2
     b22:	03 a5 04 01 51 04    	add    esp,DWORD PTR [rbp+0x4510104]
     b28:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     b29:	04 a7                	add    al,0xa7
     b2b:	04 06                	add    al,0x6
     b2d:	70 00                	jo     b2f <__abi_tag+0x7b3>
     b2f:	71 00                	jno    b31 <__abi_tag+0x7b5>
     b31:	27                   	(bad)
     b32:	9f                   	lahf
     b33:	04 a7                	add    al,0xa7
     b35:	04 a8                	add    al,0xa8
     b37:	04 01                	add    al,0x1
     b39:	50                   	push   rax
     b3a:	04 a8                	add    al,0xa8
     b3c:	04 cf                	add    al,0xcf
     b3e:	04 01                	add    al,0x1
     b40:	51                   	push   rcx
     b41:	04 cf                	add    al,0xcf
     b43:	04 d4                	add    al,0xd4
     b45:	04 01                	add    al,0x1
     b47:	50                   	push   rax
     b48:	00 03                	add    BYTE PTR [rbx],al
     b4a:	00 01                	add    BYTE PTR [rcx],al
     b4c:	02 02                	add    al,BYTE PTR [rdx]
     b4e:	03 03                	add    eax,DWORD PTR [rbx]
     b50:	04 04                	add    al,0x4
     b52:	00 00                	add    BYTE PTR [rax],al
     b54:	00 00                	add    BYTE PTR [rax],al
     b56:	01 01                	add    DWORD PTR [rcx],eax
     b58:	00 00                	add    BYTE PTR [rax],al
     b5a:	00 00                	add    BYTE PTR [rax],al
     b5c:	00 00                	add    BYTE PTR [rax],al
     b5e:	00 04 bd 03 d5 03 02 	add    BYTE PTR [rdi*4+0x203d503],al
     b65:	30 9f 04 d5 03 d5    	xor    BYTE PTR [rdi-0x2afc2afc],bl
     b6b:	03 08                	add    ecx,DWORD PTR [rax]
     b6d:	72 00                	jb     b6f <__abi_tag+0x7f3>
     b6f:	94                   	xchg   esp,eax
     b70:	01 08                	add    DWORD PTR [rax],ecx
     b72:	ff 1a                	call   FWORD PTR [rdx]
     b74:	9f                   	lahf
     b75:	04 d5                	add    al,0xd5
     b77:	03 d5                	add    edx,ebp
     b79:	03 12                	add    edx,DWORD PTR [rdx]
     b7b:	72 01                	jb     b7e <__abi_tag+0x802>
     b7d:	94                   	xchg   esp,eax
     b7e:	01 08                	add    DWORD PTR [rax],ecx
     b80:	ff 1a                	call   FWORD PTR [rdx]
     b82:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     b85:	00 94 01 08 ff 1a 21 	add    BYTE PTR [rcx+rax*1+0x211aff08],dl
     b8c:	9f                   	lahf
     b8d:	04 d5                	add    al,0xd5
     b8f:	03 d5                	add    edx,ebp
     b91:	03 1c 72             	add    ebx,DWORD PTR [rdx+rsi*2]
     b94:	01 94 01 08 ff 1a 38 	add    DWORD PTR [rcx+rax*1+0x381aff08],edx
     b9b:	24 72                	and    al,0x72
     b9d:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     ba4:	24 21                	and    al,0x21
     ba6:	72 00                	jb     ba8 <__abi_tag+0x82c>
     ba8:	94                   	xchg   esp,eax
     ba9:	01 08                	add    DWORD PTR [rax],ecx
     bab:	ff 1a                	call   FWORD PTR [rdx]
     bad:	21 9f 04 d5 03 df    	and    DWORD PTR [rdi-0x20fc2afc],ebx
     bb3:	03 26                	add    esp,DWORD PTR [rsi]
     bb5:	72 01                	jb     bb8 <__abi_tag+0x83c>
     bb7:	94                   	xchg   esp,eax
     bb8:	01 08                	add    DWORD PTR [rax],ecx
     bba:	ff 1a                	call   FWORD PTR [rdx]
     bbc:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     bbf:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     bc6:	24 21                	and    al,0x21
     bc8:	72 03                	jb     bcd <__abi_tag+0x851>
     bca:	94                   	xchg   esp,eax
     bcb:	01 08                	add    DWORD PTR [rax],ecx
     bcd:	ff 1a                	call   FWORD PTR [rdx]
     bcf:	48 24 21             	rex.W and al,0x21
     bd2:	72 00                	jb     bd4 <__abi_tag+0x858>
     bd4:	94                   	xchg   esp,eax
     bd5:	01 08                	add    DWORD PTR [rax],ecx
     bd7:	ff 1a                	call   FWORD PTR [rdx]
     bd9:	21 9f 04 df 03 f2    	and    DWORD PTR [rdi-0xdfc20fc],ebx
     bdf:	03 01                	add    eax,DWORD PTR [rcx]
     be1:	58                   	pop    rax
     be2:	04 f2                	add    al,0xf2
     be4:	03 f2                	add    esi,edx
     be6:	03 01                	add    eax,DWORD PTR [rcx]
     be8:	50                   	push   rax
     be9:	04 f2                	add    al,0xf2
     beb:	03 f8                	add    edi,eax
     bed:	03 09                	add    ecx,DWORD PTR [rcx]
     bef:	70 00                	jo     bf1 <__abi_tag+0x875>
     bf1:	0c 95                	or     al,0x95
     bf3:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e67c9 <_end+0xffffffff9f1e07b1>
     bf8:	04 f8                	add    al,0xf8
     bfa:	03 81 04 01 50 04    	add    eax,DWORD PTR [rcx+0x4500104]
     c00:	81 04 84 04 0e 78 00 	add    DWORD PTR [rsp+rax*4],0x780e04
     c07:	48 25 78 00 27 0c    	and    rax,0xc270078
     c0d:	95                   	xchg   ebp,eax
     c0e:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e67e4 <_end+0xffffffff9f1e07cc>
     c13:	04 cf                	add    al,0xcf
     c15:	04 d4                	add    al,0xd4
     c17:	04 02                	add    al,0x2
     c19:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     c1f:	f0 02 fd             	lock add bh,ch
     c22:	02 06                	add    al,BYTE PTR [rsi]
     c24:	55                   	push   rbp
     c25:	93                   	xchg   ebx,eax
     c26:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     c2a:	00 01                	add    BYTE PTR [rcx],al
     c2c:	02 04 f4             	add    al,BYTE PTR [rsp+rsi*8]
     c2f:	02 9c 03 02 30 9f 00 	add    bl,BYTE PTR [rbx+rax*1+0x9f3002]
     c36:	04 00                	add    al,0x0
     c38:	00 00                	add    BYTE PTR [rax],al
     c3a:	04 f4                	add    al,0xf4
     c3c:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     c42:	04 85                	add    al,0x85
     c44:	03 95 03 01 50 00    	add    edx,DWORD PTR [rbp+0x500103]
     c4a:	05 00 00 00 04       	add    eax,0x4000000
     c4f:	f4                   	hlt
     c50:	02 8c 03 02 75 08 04 	add    cl,BYTE PTR [rbx+rax*1+0x4087502]
     c57:	8c 03                	mov    WORD PTR [rbx],es
     c59:	a1 03 01 54 00 06 00 	movabs eax,ds:0x600540103
     c60:	00 00 
     c62:	04 f4                	add    al,0xf4
     c64:	02 93 03 02 75 10    	add    dl,BYTE PTR [rbx+0x10750203]
     c6a:	04 93                	add    al,0x93
     c6c:	03 a1 03 01 52 00    	add    esp,DWORD PTR [rcx+0x520103]
     c72:	07                   	(bad)
     c73:	00 00                	add    BYTE PTR [rax],al
     c75:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     c78:	02 9c 03 02 75 18 04 	add    bl,BYTE PTR [rbx+rax*1+0x4187502]
     c7f:	9c                   	pushf
     c80:	03 a1 03 01 51 00    	add    esp,DWORD PTR [rcx+0x510103]
     c86:	08 00                	or     BYTE PTR [rax],al
     c88:	04 f4                	add    al,0xf4
     c8a:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     c90:	00 08                	add    BYTE PTR [rax],cl
     c92:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     c95:	02 85 03 0a 9e 08    	add    al,BYTE PTR [rbp+0x89e0a03]
     c9b:	11 11                	adc    DWORD PTR [rcx],edx
     c9d:	11 21                	adc    DWORD PTR [rcx],esp
     c9f:	11 12                	adc    DWORD PTR [rdx],edx
     ca1:	12 12                	adc    dl,BYTE PTR [rdx]
     ca3:	00 02                	add    BYTE PTR [rdx],al
     ca5:	00 04 85 03 8c 03 02 	add    BYTE PTR [rax*4+0x2038c03],al
     cac:	75 08                	jne    cb6 <__abi_tag+0x93a>
     cae:	00 02                	add    BYTE PTR [rdx],al
     cb0:	00 04 85 03 8c 03 0a 	add    BYTE PTR [rax*4+0xa038c03],al
     cb7:	9e                   	sahf
     cb8:	08 11                	or     BYTE PTR [rcx],dl
     cba:	11 11                	adc    DWORD PTR [rcx],edx
     cbc:	21 11                	and    DWORD PTR [rcx],edx
     cbe:	12 12                	adc    dl,BYTE PTR [rdx]
     cc0:	12 00                	adc    al,BYTE PTR [rax]
     cc2:	02 00                	add    al,BYTE PTR [rax]
     cc4:	04 8c                	add    al,0x8c
     cc6:	03 93 03 02 75 10    	add    edx,DWORD PTR [rbx+0x10750203]
     ccc:	00 02                	add    BYTE PTR [rdx],al
     cce:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
     cd1:	03 93 03 0a 9e 08    	add    edx,DWORD PTR [rbx+0x89e0a03]
     cd7:	11 11                	adc    DWORD PTR [rcx],edx
     cd9:	11 21                	adc    DWORD PTR [rcx],esp
     cdb:	11 12                	adc    DWORD PTR [rdx],edx
     cdd:	12 12                	adc    dl,BYTE PTR [rdx]
     cdf:	00 02                	add    BYTE PTR [rdx],al
     ce1:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
     ce4:	03 9c 03 02 75 18 00 	add    ebx,DWORD PTR [rbx+rax*1+0x187502]
     ceb:	02 00                	add    al,BYTE PTR [rax]
     ced:	04 93                	add    al,0x93
     cef:	03 9c 03 0a 9e 08 11 	add    ebx,DWORD PTR [rbx+rax*1+0x11089e0a]
     cf6:	11 11                	adc    DWORD PTR [rcx],edx
     cf8:	21 11                	and    DWORD PTR [rcx],edx
     cfa:	12 12                	adc    dl,BYTE PTR [rdx]
     cfc:	12 00                	adc    al,BYTE PTR [rax]
     cfe:	00 00                	add    BYTE PTR [rax],al
     d00:	04 a0                	add    al,0xa0
     d02:	02 a8 02 06 55 93    	add    ch,BYTE PTR [rax-0x6caaf9fe]
     d08:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     d0c:	00 01                	add    BYTE PTR [rcx],al
     d0e:	00 00                	add    BYTE PTR [rax],al
     d10:	00 00                	add    BYTE PTR [rax],al
     d12:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     d15:	02 c6                	add    al,dh
     d17:	02 02                	add    al,BYTE PTR [rdx]
     d19:	30 9f 04 c6 02 e4    	xor    BYTE PTR [rdi-0x1bfd39fc],bl
     d1f:	02 01                	add    al,BYTE PTR [rcx]
     d21:	50                   	push   rax
     d22:	04 e4                	add    al,0xe4
     d24:	02 eb                	add    ch,bl
     d26:	02 02                	add    al,BYTE PTR [rdx]
     d28:	30 9f 00 02 00 01    	xor    BYTE PTR [rdi+0x1000200],bl
     d2e:	00 00                	add    BYTE PTR [rax],al
     d30:	00 00                	add    BYTE PTR [rax],al
     d32:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     d35:	02 c6                	add    al,dh
     d37:	02 02                	add    al,BYTE PTR [rdx]
     d39:	30 9f 04 c6 02 d6    	xor    BYTE PTR [rdi-0x29fd39fc],bl
     d3f:	02 02                	add    al,BYTE PTR [rdx]
     d41:	75 00                	jne    d43 <__abi_tag+0x9c7>
     d43:	04 d6                	add    al,0xd6
     d45:	02 e4                	add    ah,ah
     d47:	02 02                	add    al,BYTE PTR [rdx]
     d49:	75 7c                	jne    dc7 <__abi_tag+0xa4b>
     d4b:	04 e4                	add    al,0xe4
     d4d:	02 eb                	add    ch,bl
     d4f:	02 02                	add    al,BYTE PTR [rdx]
     d51:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     d57:	00 00                	add    BYTE PTR [rax],al
     d59:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     d5c:	02 b0 02 01 54 04    	add    dh,BYTE PTR [rax+0x4540102]
     d62:	b0 02                	mov    al,0x2
     d64:	b8 02 03 74 02       	mov    eax,0x2740302
     d69:	9f                   	lahf
     d6a:	04 e4                	add    al,0xe4
     d6c:	02 eb                	add    ch,bl
     d6e:	02 01                	add    al,BYTE PTR [rcx]
     d70:	54                   	push   rsp
     d71:	00 01                	add    BYTE PTR [rcx],al
     d73:	00 00                	add    BYTE PTR [rax],al
     d75:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     d78:	02 c6                	add    al,dh
     d7a:	02 02                	add    al,BYTE PTR [rdx]
     d7c:	30 9f 04 e4 02 eb    	xor    BYTE PTR [rdi-0x14fd1bfc],bl
     d82:	02 02                	add    al,BYTE PTR [rdx]
     d84:	30 9f 00 02 00 00    	xor    BYTE PTR [rdi+0x200],bl
     d8a:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     d8d:	02 d6                	add    dl,dh
     d8f:	02 02                	add    al,BYTE PTR [rdx]
     d91:	75 00                	jne    d93 <__abi_tag+0xa17>
     d93:	04 d6                	add    al,0xd6
     d95:	02 dc                	add    bl,ah
     d97:	02 02                	add    al,BYTE PTR [rdx]
     d99:	75 7c                	jne    e17 <__abi_tag+0xa9b>
     d9b:	00 02                	add    BYTE PTR [rdx],al
     d9d:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     da0:	02 dc                	add    bl,ah
     da2:	02 06                	add    al,BYTE PTR [rsi]
     da4:	0c 11                	or     al,0x11
     da6:	11 11                	adc    DWORD PTR [rcx],edx
     da8:	11 9f 00 00 00 04    	adc    DWORD PTR [rdi+0x4000000],ebx
     dae:	00 08                	add    BYTE PTR [rax],cl
     db0:	06                   	(bad)
     db1:	55                   	push   rbp
     db2:	93                   	xchg   ebx,eax
     db3:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     db7:	00 01                	add    BYTE PTR [rcx],al
     db9:	00 00                	add    BYTE PTR [rax],al
     dbb:	00 00                	add    BYTE PTR [rax],al
     dbd:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     dc0:	44 02 30             	add    r14b,BYTE PTR [rax]
     dc3:	9f                   	lahf
     dc4:	04 44                	add    al,0x44
     dc6:	96                   	xchg   esi,eax
     dc7:	02 01                	add    al,BYTE PTR [rcx]
     dc9:	5a                   	pop    rdx
     dca:	04 96                	add    al,0x96
     dcc:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     dd2:	00 02                	add    BYTE PTR [rdx],al
	...
     ddc:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     ddf:	44 02 30             	add    r14b,BYTE PTR [rax]
     de2:	9f                   	lahf
     de3:	04 4b                	add    al,0x4b
     de5:	50                   	push   rax
     de6:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     de9:	50                   	push   rax
     dea:	cc                   	int3
     deb:	01 02                	add    DWORD PTR [rdx],eax
     ded:	79 00                	jns    def <__abi_tag+0xa73>
     def:	04 cc                	add    al,0xcc
     df1:	01 96 02 02 79 7c    	add    DWORD PTR [rsi+0x7c790202],edx
     df7:	04 96                	add    al,0x96
     df9:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     dff:	00 00                	add    BYTE PTR [rax],al
     e01:	00 00                	add    BYTE PTR [rax],al
     e03:	00 00                	add    BYTE PTR [rax],al
     e05:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
     e08:	14 01                	adc    al,0x1
     e0a:	54                   	push   rsp
     e0b:	04 14                	add    al,0x14
     e0d:	1e                   	(bad)
     e0e:	03 74 02 9f          	add    esi,DWORD PTR [rdx+rax*1-0x61]
     e12:	04 96                	add    al,0x96
     e14:	02 99 02 01 54 00    	add    bl,BYTE PTR [rcx+0x540102]
     e1a:	01 00                	add    DWORD PTR [rax],eax
     e1c:	00 00                	add    BYTE PTR [rax],al
     e1e:	04 08                	add    al,0x8
     e20:	44 02 30             	add    r14b,BYTE PTR [rax]
     e23:	9f                   	lahf
     e24:	04 96                	add    al,0x96
     e26:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     e2c:	00 02                	add    BYTE PTR [rdx],al
     e2e:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     e31:	85 02                	test   DWORD PTR [rdx],eax
     e33:	06                   	(bad)
     e34:	0c 11                	or     al,0x11
     e36:	11 11                	adc    DWORD PTR [rcx],edx
     e38:	11 9f 00 01 00 00    	adc    DWORD PTR [rdi+0x100],ebx
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     e43:	50                   	push   rax
     e44:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     e47:	50                   	push   rax
     e48:	cc                   	int3
     e49:	01 02                	add    DWORD PTR [rdx],eax
     e4b:	79 00                	jns    e4d <__abi_tag+0xad1>
     e4d:	04 cc                	add    al,0xcc
     e4f:	01 85 02 02 79 7c    	add    DWORD PTR [rbp+0x7c790202],eax
     e55:	00 01                	add    BYTE PTR [rcx],al
     e57:	00 00                	add    BYTE PTR [rax],al
     e59:	00 00                	add    BYTE PTR [rax],al
     e5b:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
     e5e:	01 98 01 ce 01 79    	add    DWORD PTR [rax+0x7901ce01],ebx
     e64:	00 94 04 31 24 11 aa 	add    BYTE PTR [rsp+rax*1-0x55eedbcf],dl
     e6b:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e70:	79 00                	jns    e72 <__abi_tag+0xaf6>
     e72:	94                   	xchg   esp,eax
     e73:	04 31                	add    al,0x31
     e75:	25 0c 55 55 55       	and    eax,0x5555550c
     e7a:	55                   	push   rbp
     e7b:	1a 21                	sbb    ah,BYTE PTR [rcx]
     e7d:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     e80:	cc                   	int3
     e81:	99                   	cdq
     e82:	b3 e6                	mov    bl,0xe6
     e84:	7c 1a                	jl     ea0 <__abi_tag+0xb24>
     e86:	79 00                	jns    e88 <__abi_tag+0xb0c>
     e88:	94                   	xchg   esp,eax
     e89:	04 31                	add    al,0x31
     e8b:	24 11                	and    al,0x11
     e8d:	aa                   	stos   BYTE PTR es:[rdi],al
     e8e:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e93:	79 00                	jns    e95 <__abi_tag+0xb19>
     e95:	94                   	xchg   esp,eax
     e96:	04 31                	add    al,0x31
     e98:	25 0c 55 55 55       	and    eax,0x5555550c
     e9d:	55                   	push   rbp
     e9e:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ea0:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333341b2 <_end+0x3332e19a>
     ea6:	33 1a                	xor    ebx,DWORD PTR [rdx]
     ea8:	21 34 24             	and    DWORD PTR [rsp],esi
     eab:	11 f0                	adc    eax,esi
     ead:	e1 c3                	loope  e72 <__abi_tag+0xaf6>
     eaf:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     eb2:	72 00                	jb     eb4 <__abi_tag+0xb38>
     eb4:	21 38                	and    DWORD PTR [rax],edi
     eb6:	25 0c ff 00 ff       	and    eax,0xff00ff0c
     ebb:	00 1a                	add    BYTE PTR [rdx],bl
     ebd:	79 00                	jns    ebf <__abi_tag+0xb43>
     ebf:	94                   	xchg   esp,eax
     ec0:	04 31                	add    al,0x31
     ec2:	24 11                	and    al,0x11
     ec4:	aa                   	stos   BYTE PTR es:[rdi],al
     ec5:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     eca:	79 00                	jns    ecc <__abi_tag+0xb50>
     ecc:	94                   	xchg   esp,eax
     ecd:	04 31                	add    al,0x31
     ecf:	25 0c 55 55 55       	and    eax,0x5555550c
     ed4:	55                   	push   rbp
     ed5:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ed7:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     eda:	cc                   	int3
     edb:	99                   	cdq
     edc:	b3 e6                	mov    bl,0xe6
     ede:	7c 1a                	jl     efa <__abi_tag+0xb7e>
     ee0:	79 00                	jns    ee2 <__abi_tag+0xb66>
     ee2:	94                   	xchg   esp,eax
     ee3:	04 31                	add    al,0x31
     ee5:	24 11                	and    al,0x11
     ee7:	aa                   	stos   BYTE PTR es:[rdi],al
     ee8:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     eed:	79 00                	jns    eef <__abi_tag+0xb73>
     eef:	94                   	xchg   esp,eax
     ef0:	04 31                	add    al,0x31
     ef2:	25 0c 55 55 55       	and    eax,0x5555550c
     ef7:	55                   	push   rbp
     ef8:	1a 21                	sbb    ah,BYTE PTR [rcx]
     efa:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333420c <_end+0x3332e1f4>
     f00:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f02:	21 34 24             	and    DWORD PTR [rsp],esi
     f05:	11 f0                	adc    eax,esi
     f07:	e1 c3                	loope  ecc <__abi_tag+0xb50>
     f09:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     f0c:	72 00                	jb     f0e <__abi_tag+0xb92>
     f0e:	21 38                	and    DWORD PTR [rax],edi
     f10:	24 11                	and    al,0x11
     f12:	80 fe 83             	cmp    dh,0x83
     f15:	78 1a                	js     f31 <__abi_tag+0xbb5>
     f17:	21 40 14             	and    DWORD PTR [rax+0x14],eax
     f1a:	14 24                	adc    al,0x24
     f1c:	0c ff                	or     al,0xff
     f1e:	ff                   	(bad)
     f1f:	ff                   	(bad)
     f20:	ff 1a                	call   FWORD PTR [rdx]
     f22:	17                   	(bad)
     f23:	16                   	(bad)
     f24:	0c ff                	or     al,0xff
     f26:	ff                   	(bad)
     f27:	ff                   	(bad)
     f28:	ff 1a                	call   FWORD PTR [rdx]
     f2a:	16                   	(bad)
     f2b:	1f                   	(bad)
     f2c:	23 20                	and    esp,DWORD PTR [rax]
     f2e:	25 21 9f 04 98       	and    eax,0x98049f21
     f33:	01 cc                	add    esp,ecx
     f35:	01 e6                	add    esi,esp
     f37:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
     f3a:	94                   	xchg   esp,eax
     f3b:	04 31                	add    al,0x31
     f3d:	24 11                	and    al,0x11
     f3f:	aa                   	stos   BYTE PTR es:[rdi],al
     f40:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f45:	79 00                	jns    f47 <__abi_tag+0xbcb>
     f47:	94                   	xchg   esp,eax
     f48:	04 31                	add    al,0x31
     f4a:	25 0c 55 55 55       	and    eax,0x5555550c
     f4f:	55                   	push   rbp
     f50:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f52:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     f55:	cc                   	int3
     f56:	99                   	cdq
     f57:	b3 e6                	mov    bl,0xe6
     f59:	7c 1a                	jl     f75 <__abi_tag+0xbf9>
     f5b:	79 00                	jns    f5d <__abi_tag+0xbe1>
     f5d:	94                   	xchg   esp,eax
     f5e:	04 31                	add    al,0x31
     f60:	24 11                	and    al,0x11
     f62:	aa                   	stos   BYTE PTR es:[rdi],al
     f63:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f68:	79 00                	jns    f6a <__abi_tag+0xbee>
     f6a:	94                   	xchg   esp,eax
     f6b:	04 31                	add    al,0x31
     f6d:	25 0c 55 55 55       	and    eax,0x5555550c
     f72:	55                   	push   rbp
     f73:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f75:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334287 <_end+0x3332e26f>
     f7b:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f7d:	21 34 24             	and    DWORD PTR [rsp],esi
     f80:	11 f0                	adc    eax,esi
     f82:	e1 c3                	loope  f47 <__abi_tag+0xbcb>
     f84:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     f87:	79 00                	jns    f89 <__abi_tag+0xc0d>
     f89:	94                   	xchg   esp,eax
     f8a:	04 31                	add    al,0x31
     f8c:	24 11                	and    al,0x11
     f8e:	aa                   	stos   BYTE PTR es:[rdi],al
     f8f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f94:	79 00                	jns    f96 <__abi_tag+0xc1a>
     f96:	94                   	xchg   esp,eax
     f97:	04 31                	add    al,0x31
     f99:	25 0c 55 55 55       	and    eax,0x5555550c
     f9e:	55                   	push   rbp
     f9f:	1a 21                	sbb    ah,BYTE PTR [rcx]
     fa1:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     fa4:	cc                   	int3
     fa5:	99                   	cdq
     fa6:	b3 e6                	mov    bl,0xe6
     fa8:	7c 1a                	jl     fc4 <__abi_tag+0xc48>
     faa:	79 00                	jns    fac <__abi_tag+0xc30>
     fac:	94                   	xchg   esp,eax
     fad:	04 31                	add    al,0x31
     faf:	24 11                	and    al,0x11
     fb1:	aa                   	stos   BYTE PTR es:[rdi],al
     fb2:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     fb7:	79 00                	jns    fb9 <__abi_tag+0xc3d>
     fb9:	94                   	xchg   esp,eax
     fba:	04 31                	add    al,0x31
     fbc:	25 0c 55 55 55       	and    eax,0x5555550c
     fc1:	55                   	push   rbp
     fc2:	1a 21                	sbb    ah,BYTE PTR [rcx]
     fc4:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333342d6 <_end+0x3332e2be>
     fca:	33 1a                	xor    ebx,DWORD PTR [rdx]
     fcc:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
     fd3:	0f 1a 21             	bndldx (bad),[rcx]
     fd6:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff010ee8 <_end+0xffffffffff00aed0>
     fdc:	00 1a                	add    BYTE PTR [rdx],bl
     fde:	79 00                	jns    fe0 <__abi_tag+0xc64>
     fe0:	94                   	xchg   esp,eax
     fe1:	04 31                	add    al,0x31
     fe3:	24 11                	and    al,0x11
     fe5:	aa                   	stos   BYTE PTR es:[rdi],al
     fe6:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     feb:	79 00                	jns    fed <__abi_tag+0xc71>
     fed:	94                   	xchg   esp,eax
     fee:	04 31                	add    al,0x31
     ff0:	25 0c 55 55 55       	and    eax,0x5555550c
     ff5:	55                   	push   rbp
     ff6:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ff8:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     ffb:	cc                   	int3
     ffc:	99                   	cdq
     ffd:	b3 e6                	mov    bl,0xe6
     fff:	7c 1a                	jl     101b <_init+0x1b>
    1001:	79 00                	jns    1003 <_init+0x3>
    1003:	94                   	xchg   esp,eax
    1004:	04 31                	add    al,0x31
    1006:	24 11                	and    al,0x11
    1008:	aa                   	stos   BYTE PTR es:[rdi],al
    1009:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    100e:	79 00                	jns    1010 <_init+0x10>
    1010:	94                   	xchg   esp,eax
    1011:	04 31                	add    al,0x31
    1013:	25 0c 55 55 55       	and    eax,0x5555550c
    1018:	55                   	push   rbp
    1019:	1a 21                	sbb    ah,BYTE PTR [rcx]
    101b:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333432d <_end+0x3332e315>
    1021:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1023:	21 34 24             	and    DWORD PTR [rsp],esi
    1026:	11 f0                	adc    eax,esi
    1028:	e1 c3                	loope  fed <__abi_tag+0xc71>
    102a:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    102d:	79 00                	jns    102f <_init+0x2f>
    102f:	94                   	xchg   esp,eax
    1030:	04 31                	add    al,0x31
    1032:	24 11                	and    al,0x11
    1034:	aa                   	stos   BYTE PTR es:[rdi],al
    1035:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    103a:	79 00                	jns    103c <__printf_chk@plt+0xc>
    103c:	94                   	xchg   esp,eax
    103d:	04 31                	add    al,0x31
    103f:	25 0c 55 55 55       	and    eax,0x5555550c
    1044:	55                   	push   rbp
    1045:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1047:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    104a:	cc                   	int3
    104b:	99                   	cdq
    104c:	b3 e6                	mov    bl,0xe6
    104e:	7c 1a                	jl     106a <__strncpy_chk@plt+0xa>
    1050:	79 00                	jns    1052 <strchr@plt+0x2>
    1052:	94                   	xchg   esp,eax
    1053:	04 31                	add    al,0x31
    1055:	24 11                	and    al,0x11
    1057:	aa                   	stos   BYTE PTR es:[rdi],al
    1058:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    105d:	79 00                	jns    105f <strchr@plt+0xf>
    105f:	94                   	xchg   esp,eax
    1060:	04 31                	add    al,0x31
    1062:	25 0c 55 55 55       	and    eax,0x5555550c
    1067:	55                   	push   rbp
    1068:	1a 21                	sbb    ah,BYTE PTR [rcx]
    106a:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333437c <_end+0x3332e364>
    1070:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1072:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    1079:	0f 1a 21             	bndldx (bad),[rcx]
    107c:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    107f:	80 fe 83             	cmp    dh,0x83
    1082:	78 1a                	js     109e <open@plt+0xe>
    1084:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    1087:	14 24                	adc    al,0x24
    1089:	0c ff                	or     al,0xff
    108b:	ff                   	(bad)
    108c:	ff                   	(bad)
    108d:	ff 1a                	call   FWORD PTR [rdx]
    108f:	17                   	(bad)
    1090:	16                   	(bad)
    1091:	0c ff                	or     al,0xff
    1093:	ff                   	(bad)
    1094:	ff                   	(bad)
    1095:	ff 1a                	call   FWORD PTR [rdx]
    1097:	16                   	(bad)
    1098:	1f                   	(bad)
    1099:	23 20                	and    esp,DWORD PTR [rax]
    109b:	25 21 9f 04 cc       	and    eax,0xcc049f21
    10a0:	01 85 02 e6 02 79    	add    DWORD PTR [rbp+0x7902e602],eax
    10a6:	7c 94                	jl     103c <__printf_chk@plt+0xc>
    10a8:	04 31                	add    al,0x31
    10aa:	24 11                	and    al,0x11
    10ac:	aa                   	stos   BYTE PTR es:[rdi],al
    10ad:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10b2:	79 7c                	jns    1130 <putchar@plt>
    10b4:	94                   	xchg   esp,eax
    10b5:	04 31                	add    al,0x31
    10b7:	25 0c 55 55 55       	and    eax,0x5555550c
    10bc:	55                   	push   rbp
    10bd:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10bf:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    10c2:	cc                   	int3
    10c3:	99                   	cdq
    10c4:	b3 e6                	mov    bl,0xe6
    10c6:	7c 1a                	jl     10e2 <__stack_chk_fail@plt+0x2>
    10c8:	79 7c                	jns    1146 <strcmp@plt+0x6>
    10ca:	94                   	xchg   esp,eax
    10cb:	04 31                	add    al,0x31
    10cd:	24 11                	and    al,0x11
    10cf:	aa                   	stos   BYTE PTR es:[rdi],al
    10d0:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10d5:	79 7c                	jns    1153 <read@plt+0x3>
    10d7:	94                   	xchg   esp,eax
    10d8:	04 31                	add    al,0x31
    10da:	25 0c 55 55 55       	and    eax,0x5555550c
    10df:	55                   	push   rbp
    10e0:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10e2:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333343f4 <_end+0x3332e3dc>
    10e8:	33 1a                	xor    ebx,DWORD PTR [rdx]
    10ea:	21 34 24             	and    DWORD PTR [rsp],esi
    10ed:	11 f0                	adc    eax,esi
    10ef:	e1 c3                	loope  10b4 <stat@plt+0x4>
    10f1:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    10f4:	79 7c                	jns    1172 <realloc@plt+0x2>
    10f6:	94                   	xchg   esp,eax
    10f7:	04 31                	add    al,0x31
    10f9:	24 11                	and    al,0x11
    10fb:	aa                   	stos   BYTE PTR es:[rdi],al
    10fc:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1101:	79 7c                	jns    117f <realloc@plt+0xf>
    1103:	94                   	xchg   esp,eax
    1104:	04 31                	add    al,0x31
    1106:	25 0c 55 55 55       	and    eax,0x5555550c
    110b:	55                   	push   rbp
    110c:	1a 21                	sbb    ah,BYTE PTR [rcx]
    110e:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1111:	cc                   	int3
    1112:	99                   	cdq
    1113:	b3 e6                	mov    bl,0xe6
    1115:	7c 1a                	jl     1131 <putchar@plt+0x1>
    1117:	79 7c                	jns    1195 <sqrtf@plt+0x5>
    1119:	94                   	xchg   esp,eax
    111a:	04 31                	add    al,0x31
    111c:	24 11                	and    al,0x11
    111e:	aa                   	stos   BYTE PTR es:[rdi],al
    111f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1124:	79 7c                	jns    11a2 <fwrite@plt+0x2>
    1126:	94                   	xchg   esp,eax
    1127:	04 31                	add    al,0x31
    1129:	25 0c 55 55 55       	and    eax,0x5555550c
    112e:	55                   	push   rbp
    112f:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1131:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334443 <_end+0x3332e42b>
    1137:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1139:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    1140:	0f 1a 21             	bndldx (bad),[rcx]
    1143:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff011055 <_end+0xffffffffff00b03d>
    1149:	00 1a                	add    BYTE PTR [rdx],bl
    114b:	79 7c                	jns    11c9 <__isoc23_strtol@plt+0x9>
    114d:	94                   	xchg   esp,eax
    114e:	04 31                	add    al,0x31
    1150:	24 11                	and    al,0x11
    1152:	aa                   	stos   BYTE PTR es:[rdi],al
    1153:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1158:	79 7c                	jns    11d6 <__cxa_finalize@plt+0x6>
    115a:	94                   	xchg   esp,eax
    115b:	04 31                	add    al,0x31
    115d:	25 0c 55 55 55       	and    eax,0x5555550c
    1162:	55                   	push   rbp
    1163:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1165:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1168:	cc                   	int3
    1169:	99                   	cdq
    116a:	b3 e6                	mov    bl,0xe6
    116c:	7c 1a                	jl     1188 <__fprintf_chk@plt+0x8>
    116e:	79 7c                	jns    11ec <main+0xc>
    1170:	94                   	xchg   esp,eax
    1171:	04 31                	add    al,0x31
    1173:	24 11                	and    al,0x11
    1175:	aa                   	stos   BYTE PTR es:[rdi],al
    1176:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    117b:	79 7c                	jns    11f9 <main+0x19>
    117d:	94                   	xchg   esp,eax
    117e:	04 31                	add    al,0x31
    1180:	25 0c 55 55 55       	and    eax,0x5555550c
    1185:	55                   	push   rbp
    1186:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1188:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333449a <_end+0x3332e482>
    118e:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1190:	21 34 24             	and    DWORD PTR [rsp],esi
    1193:	11 f0                	adc    eax,esi
    1195:	e1 c3                	loope  115a <read@plt+0xa>
    1197:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    119a:	79 7c                	jns    1218 <_start+0x8>
    119c:	94                   	xchg   esp,eax
    119d:	04 31                	add    al,0x31
    119f:	24 11                	and    al,0x11
    11a1:	aa                   	stos   BYTE PTR es:[rdi],al
    11a2:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11a7:	79 7c                	jns    1225 <_start+0x15>
    11a9:	94                   	xchg   esp,eax
    11aa:	04 31                	add    al,0x31
    11ac:	25 0c 55 55 55       	and    eax,0x5555550c
    11b1:	55                   	push   rbp
    11b2:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11b4:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    11b7:	cc                   	int3
    11b8:	99                   	cdq
    11b9:	b3 e6                	mov    bl,0xe6
    11bb:	7c 1a                	jl     11d7 <__cxa_finalize@plt+0x7>
    11bd:	79 7c                	jns    123b <_start+0x2b>
    11bf:	94                   	xchg   esp,eax
    11c0:	04 31                	add    al,0x31
    11c2:	24 11                	and    al,0x11
    11c4:	aa                   	stos   BYTE PTR es:[rdi],al
    11c5:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11ca:	79 7c                	jns    1248 <deregister_tm_clones+0x8>
    11cc:	94                   	xchg   esp,eax
    11cd:	04 31                	add    al,0x31
    11cf:	25 0c 55 55 55       	and    eax,0x5555550c
    11d4:	55                   	push   rbp
    11d5:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11d7:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333344e9 <_end+0x3332e4d1>
    11dd:	33 1a                	xor    ebx,DWORD PTR [rdx]
    11df:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    11e6:	0f 1a 21             	bndldx (bad),[rcx]
    11e9:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    11ec:	80 fe 83             	cmp    dh,0x83
    11ef:	78 1a                	js     120b <main+0x2b>
    11f1:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    11f4:	14 24                	adc    al,0x24
    11f6:	0c ff                	or     al,0xff
    11f8:	ff                   	(bad)
    11f9:	ff                   	(bad)
    11fa:	ff 1a                	call   FWORD PTR [rdx]
    11fc:	17                   	(bad)
    11fd:	16                   	(bad)
    11fe:	0c ff                	or     al,0xff
    1200:	ff                   	(bad)
    1201:	ff                   	(bad)
    1202:	ff 1a                	call   FWORD PTR [rdx]
    1204:	16                   	(bad)
    1205:	1f                   	(bad)
    1206:	23 20                	and    esp,DWORD PTR [rax]
    1208:	25 21 9f 00 03       	and    eax,0x3009f21
    120d:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
    1210:	01 85 02 06 9e 04    	add    DWORD PTR [rbp+0x49e0602],eax
    1216:	88 88 88 88 00 00    	mov    BYTE PTR [rax+0x8888],cl
    121c:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    121f:	01 c8                	add    eax,ecx
    1221:	01 01                	add    DWORD PTR [rcx],eax
    1223:	51                   	push   rcx
    1224:	00 01                	add    BYTE PTR [rcx],al
    1226:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1229:	01 96 02 07 10 c1    	add    DWORD PTR [rsi-0x3eeff8fe],edx
    122f:	de f1                	fdivrp st(1),st
    1231:	f6 11                	not    BYTE PTR [rcx]
    1233:	9f                   	lahf
    1234:	00 02                	add    BYTE PTR [rdx],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    123b:	01 98 01 02 30 9f    	add    DWORD PTR [rax-0x60cffdff],ebx
    1241:	04 98                	add    al,0x98
    1243:	01 c6                	add    esi,eax
    1245:	01 01                	add    DWORD PTR [rcx],eax
    1247:	50                   	push   rax
    1248:	00 03                	add    BYTE PTR [rbx],al
	...
    125a:	01 01                	add    DWORD PTR [rcx],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	01 04 4b             	add    DWORD PTR [rbx+rcx*2],eax
    1261:	50                   	push   rax
    1262:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    1265:	50                   	push   rax
    1266:	5d                   	pop    rbp
    1267:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
    126a:	04 5d                	add    al,0x5d
    126c:	62 01 50 04 62       	(bad)
    1271:	65 01 51 04          	add    DWORD PTR gs:[rcx+0x4],edx
    1275:	65 72 1b             	gs jb  1293 <register_tm_clones+0x23>
    1278:	79 00                	jns    127a <register_tm_clones+0xa>
    127a:	94                   	xchg   esp,eax
    127b:	04 31                	add    al,0x31
    127d:	24 11                	and    al,0x11
    127f:	aa                   	stos   BYTE PTR es:[rdi],al
    1280:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1285:	79 00                	jns    1287 <register_tm_clones+0x17>
    1287:	94                   	xchg   esp,eax
    1288:	04 31                	add    al,0x31
    128a:	25 0c 55 55 55       	and    eax,0x5555550c
    128f:	55                   	push   rbp
    1290:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1292:	9f                   	lahf
    1293:	04 72                	add    al,0x72
    1295:	77 01                	ja     1298 <register_tm_clones+0x28>
    1297:	50                   	push   rax
    1298:	04 77                	add    al,0x77
    129a:	7c 01                	jl     129d <register_tm_clones+0x2d>
    129c:	52                   	push   rdx
    129d:	04 7c                	add    al,0x7c
    129f:	8c 01                	mov    WORD PTR [rcx],es
    12a1:	47 79 00             	rex.RXB jns 12a4 <register_tm_clones+0x34>
    12a4:	94                   	xchg   esp,eax
    12a5:	04 31                	add    al,0x31
    12a7:	24 11                	and    al,0x11
    12a9:	aa                   	stos   BYTE PTR es:[rdi],al
    12aa:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12af:	79 00                	jns    12b1 <__do_global_dtors_aux+0x1>
    12b1:	94                   	xchg   esp,eax
    12b2:	04 31                	add    al,0x31
    12b4:	25 0c 55 55 55       	and    eax,0x5555550c
    12b9:	55                   	push   rbp
    12ba:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12bc:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    12bf:	cc                   	int3
    12c0:	99                   	cdq
    12c1:	b3 e6                	mov    bl,0xe6
    12c3:	7c 1a                	jl     12df <__do_global_dtors_aux+0x2f>
    12c5:	79 00                	jns    12c7 <__do_global_dtors_aux+0x17>
    12c7:	94                   	xchg   esp,eax
    12c8:	04 31                	add    al,0x31
    12ca:	24 11                	and    al,0x11
    12cc:	aa                   	stos   BYTE PTR es:[rdi],al
    12cd:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12d2:	79 00                	jns    12d4 <__do_global_dtors_aux+0x24>
    12d4:	94                   	xchg   esp,eax
    12d5:	04 31                	add    al,0x31
    12d7:	25 0c 55 55 55       	and    eax,0x5555550c
    12dc:	55                   	push   rbp
    12dd:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12df:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333345f1 <_end+0x3332e5d9>
    12e5:	33 1a                	xor    ebx,DWORD PTR [rdx]
    12e7:	21 9f 04 8c 01 8c    	and    DWORD PTR [rdi-0x73fe73fc],ebx
    12ed:	01 01                	add    DWORD PTR [rcx],eax
    12ef:	51                   	push   rcx
    12f0:	04 8c                	add    al,0x8c
    12f2:	01 8e 01 16 71 00    	add    DWORD PTR [rsi+0x711601],ecx
    12f8:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff01120a <_end+0xffffffffff00b1f2>
    12fe:	00 1a                	add    BYTE PTR [rdx],bl
    1300:	71 00                	jno    1302 <_Z16buildStringArrayPcj+0x2>
    1302:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    1305:	80 fe 83             	cmp    dh,0x83
    1308:	78 1a                	js     1324 <_Z16buildStringArrayPcj+0x24>
    130a:	21 9f 04 8e 01 8e    	and    DWORD PTR [rdi-0x71fe71fc],ebx
    1310:	01 ce                	add    esi,ecx
    1312:	01 79 00             	add    DWORD PTR [rcx+0x0],edi
    1315:	94                   	xchg   esp,eax
    1316:	04 31                	add    al,0x31
    1318:	24 11                	and    al,0x11
    131a:	aa                   	stos   BYTE PTR es:[rdi],al
    131b:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1320:	79 00                	jns    1322 <_Z16buildStringArrayPcj+0x22>
    1322:	94                   	xchg   esp,eax
    1323:	04 31                	add    al,0x31
    1325:	25 0c 55 55 55       	and    eax,0x5555550c
    132a:	55                   	push   rbp
    132b:	1a 21                	sbb    ah,BYTE PTR [rcx]
    132d:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1330:	cc                   	int3
    1331:	99                   	cdq
    1332:	b3 e6                	mov    bl,0xe6
    1334:	7c 1a                	jl     1350 <_Z16buildStringArrayPcj+0x50>
    1336:	79 00                	jns    1338 <_Z16buildStringArrayPcj+0x38>
    1338:	94                   	xchg   esp,eax
    1339:	04 31                	add    al,0x31
    133b:	24 11                	and    al,0x11
    133d:	aa                   	stos   BYTE PTR es:[rdi],al
    133e:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1343:	79 00                	jns    1345 <_Z16buildStringArrayPcj+0x45>
    1345:	94                   	xchg   esp,eax
    1346:	04 31                	add    al,0x31
    1348:	25 0c 55 55 55       	and    eax,0x5555550c
    134d:	55                   	push   rbp
    134e:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1350:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334662 <_end+0x3332e64a>
    1356:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1358:	21 34 24             	and    DWORD PTR [rsp],esi
    135b:	11 f0                	adc    eax,esi
    135d:	e1 c3                	loope  1322 <_Z16buildStringArrayPcj+0x22>
    135f:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    1362:	72 00                	jb     1364 <_Z16buildStringArrayPcj+0x64>
    1364:	21 38                	and    DWORD PTR [rax],edi
    1366:	25 0c ff 00 ff       	and    eax,0xff00ff0c
    136b:	00 1a                	add    BYTE PTR [rdx],bl
    136d:	79 00                	jns    136f <_Z16buildStringArrayPcj+0x6f>
    136f:	94                   	xchg   esp,eax
    1370:	04 31                	add    al,0x31
    1372:	24 11                	and    al,0x11
    1374:	aa                   	stos   BYTE PTR es:[rdi],al
    1375:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    137a:	79 00                	jns    137c <_Z16buildStringArrayPcj+0x7c>
    137c:	94                   	xchg   esp,eax
    137d:	04 31                	add    al,0x31
    137f:	25 0c 55 55 55       	and    eax,0x5555550c
    1384:	55                   	push   rbp
    1385:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1387:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    138a:	cc                   	int3
    138b:	99                   	cdq
    138c:	b3 e6                	mov    bl,0xe6
    138e:	7c 1a                	jl     13aa <_Z16buildStringArrayPcj+0xaa>
    1390:	79 00                	jns    1392 <_Z16buildStringArrayPcj+0x92>
    1392:	94                   	xchg   esp,eax
    1393:	04 31                	add    al,0x31
    1395:	24 11                	and    al,0x11
    1397:	aa                   	stos   BYTE PTR es:[rdi],al
    1398:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    139d:	79 00                	jns    139f <_Z16buildStringArrayPcj+0x9f>
    139f:	94                   	xchg   esp,eax
    13a0:	04 31                	add    al,0x31
    13a2:	25 0c 55 55 55       	and    eax,0x5555550c
    13a7:	55                   	push   rbp
    13a8:	1a 21                	sbb    ah,BYTE PTR [rcx]
    13aa:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333346bc <_end+0x3332e6a4>
    13b0:	33 1a                	xor    ebx,DWORD PTR [rdx]
    13b2:	21 34 24             	and    DWORD PTR [rsp],esi
    13b5:	11 f0                	adc    eax,esi
    13b7:	e1 c3                	loope  137c <_Z16buildStringArrayPcj+0x7c>
    13b9:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    13bc:	72 00                	jb     13be <_Z16buildStringArrayPcj+0xbe>
    13be:	21 38                	and    DWORD PTR [rax],edi
    13c0:	24 11                	and    al,0x11
    13c2:	80 fe 83             	cmp    dh,0x83
    13c5:	78 1a                	js     13e1 <_Z16buildStringArrayPcj+0xe1>
    13c7:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    13ca:	14 24                	adc    al,0x24
    13cc:	0c ff                	or     al,0xff
    13ce:	ff                   	(bad)
    13cf:	ff                   	(bad)
    13d0:	ff 1a                	call   FWORD PTR [rdx]
    13d2:	17                   	(bad)
    13d3:	16                   	(bad)
    13d4:	0c ff                	or     al,0xff
    13d6:	ff                   	(bad)
    13d7:	ff                   	(bad)
    13d8:	ff 1a                	call   FWORD PTR [rdx]
    13da:	16                   	(bad)
    13db:	1f                   	(bad)
    13dc:	23 20                	and    esp,DWORD PTR [rax]
    13de:	25 21 9f 00 02       	and    eax,0x2009f21
	...
    13eb:	00 00                	add    BYTE PTR [rax],al
    13ed:	01 01                	add    DWORD PTR [rcx],eax
    13ef:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    13f2:	01 c8                	add    eax,ecx
    13f4:	01 01                	add    DWORD PTR [rcx],eax
    13f6:	51                   	push   rcx
    13f7:	04 d9                	add    al,0xd9
    13f9:	01 de                	add    esi,ebx
    13fb:	01 01                	add    DWORD PTR [rcx],eax
    13fd:	50                   	push   rax
    13fe:	04 de                	add    al,0xde
    1400:	01 e1                	add    ecx,esp
    1402:	01 01                	add    DWORD PTR [rcx],eax
    1404:	51                   	push   rcx
    1405:	04 ee                	add    al,0xee
    1407:	01 f3                	add    ebx,esi
    1409:	01 01                	add    DWORD PTR [rcx],eax
    140b:	50                   	push   rax
    140c:	04 f3                	add    al,0xf3
    140e:	01 f6                	add    esi,esi
    1410:	01 01                	add    DWORD PTR [rcx],eax
    1412:	51                   	push   rcx
    1413:	04 83                	add    al,0x83
    1415:	02 83 02 01 50 04    	add    al,BYTE PTR [rbx+0x4500102]
    141b:	83 02 85             	add    DWORD PTR [rdx],0xffffff85
    141e:	02 16                	add    dl,BYTE PTR [rsi]
    1420:	70 00                	jo     1422 <_Z16buildStringArrayPcj+0x122>
    1422:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff011334 <_end+0xffffffffff00b31c>
    1428:	00 1a                	add    BYTE PTR [rdx],bl
    142a:	70 00                	jo     142c <_Z16buildStringArrayPcj+0x12c>
    142c:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    142f:	80 fe 83             	cmp    dh,0x83
    1432:	78 1a                	js     144e <_Z11hashMapCtorPFj8string_tEj+0x1e>
    1434:	21 9f 00 e2 05 00    	and    DWORD PTR [rdi+0x5e200],ebx
    143a:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 1c40 <_Z17murmur2HashString8string_t+0x70>
	...
    144c:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    144f:	06                   	(bad)
    1450:	e5 06                	in     eax,0x6
    1452:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1455:	e5 06                	in     eax,0x6
    1457:	b7 0a                	mov    bh,0xa
    1459:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    145c:	b7 0a                	mov    bh,0xa
    145e:	c4                   	(bad)
    145f:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
    1462:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1465:	04 c4                	add    al,0xc4
    1467:	0a de                	or     bl,dh
    1469:	0a 01                	or     al,BYTE PTR [rcx]
    146b:	55                   	push   rbp
    146c:	04 de                	add    al,0xde
    146e:	0a e3                	or     ah,bl
    1470:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
    1473:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1476:	00 02                	add    BYTE PTR [rdx],al
    1478:	00 00                	add    BYTE PTR [rax],al
    147a:	00 04 a9             	add    BYTE PTR [rcx+rbp*4],al
    147d:	07                   	(bad)
    147e:	ba 07 02 30 9f       	mov    edx,0x9f300207
    1483:	04 ba                	add    al,0xba
    1485:	07                   	(bad)
    1486:	dc 07                	fadd   QWORD PTR [rdi]
    1488:	01 5c 00 01          	add    DWORD PTR [rax+rax*1+0x1],ebx
    148c:	00 04 ba             	add    BYTE PTR [rdx+rdi*4],al
    148f:	07                   	(bad)
    1490:	d2 07                	rol    BYTE PTR [rdi],cl
    1492:	0a 03                	or     al,BYTE PTR [rbx]
    1494:	19 41 00             	sbb    DWORD PTR [rcx+0x0],eax
    1497:	00 00                	add    BYTE PTR [rax],al
    1499:	00 00                	add    BYTE PTR [rax],al
    149b:	00 9f 00 02 00 00    	add    BYTE PTR [rdi+0x200],bl
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 00                	add    BYTE PTR [rax],al
    14a5:	02 04 f9             	add    al,BYTE PTR [rcx+rdi*8]
    14a8:	07                   	(bad)
    14a9:	8a 08                	mov    cl,BYTE PTR [rax]
    14ab:	02 30                	add    dh,BYTE PTR [rax]
    14ad:	9f                   	lahf
    14ae:	04 8a                	add    al,0x8a
    14b0:	08 9f 08 01 5c 04    	or     BYTE PTR [rdi+0x45c0108],bl
    14b6:	9f                   	lahf
    14b7:	08 a3 08 01 50 04    	or     BYTE PTR [rbx+0x4500108],ah
    14bd:	a3 08 af 08 03 7c 7f 	movabs ds:0x9f7f7c0308af08,eax
    14c4:	9f 00 
    14c6:	01 00                	add    DWORD PTR [rax],eax
    14c8:	04 8a                	add    al,0x8a
    14ca:	08 af 08 0a 03 19    	or     BYTE PTR [rdi+0x19030a08],ch
    14d0:	41 00 00             	add    BYTE PTR [r8],al
    14d3:	00 00                	add    BYTE PTR [rax],al
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	9f                   	lahf
    14d8:	00 02                	add    BYTE PTR [rdx],al
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	02 04 d2             	add    al,BYTE PTR [rdx+rdx*8]
    14e3:	08 e3                	or     bl,ah
    14e5:	08 02                	or     BYTE PTR [rdx],al
    14e7:	30 9f 04 e3 08 f7    	xor    BYTE PTR [rdi-0x8f71cfc],bl
    14ed:	08 01                	or     BYTE PTR [rcx],al
    14ef:	5c                   	pop    rsp
    14f0:	04 f7                	add    al,0xf7
    14f2:	08 fb                	or     bl,bh
    14f4:	08 01                	or     BYTE PTR [rcx],al
    14f6:	50                   	push   rax
    14f7:	04 fb                	add    al,0xfb
    14f9:	08 88 09 03 7c 7f    	or     BYTE PTR [rax+0x7f7c0309],cl
    14ff:	9f                   	lahf
    1500:	00 01                	add    BYTE PTR [rcx],al
    1502:	00 04 e3             	add    BYTE PTR [rbx+riz*8],al
    1505:	08 88 09 0a 03 19    	or     BYTE PTR [rax+0x19030a09],cl
    150b:	41 00 00             	add    BYTE PTR [r8],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	00 00                	add    BYTE PTR [rax],al
    1512:	9f                   	lahf
    1513:	00 02                	add    BYTE PTR [rdx],al
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	02 04 ab             	add    al,BYTE PTR [rbx+rbp*4]
    151e:	09 bc 09 02 30 9f 04 	or     DWORD PTR [rcx+rcx*1+0x49f3002],edi
    1525:	bc 09 cf 09 01       	mov    esp,0x109cf09
    152a:	5c                   	pop    rsp
    152b:	04 cf                	add    al,0xcf
    152d:	09 d3                	or     ebx,edx
    152f:	09 01                	or     DWORD PTR [rcx],eax
    1531:	50                   	push   rax
    1532:	04 d3                	add    al,0xd3
    1534:	09 e0                	or     eax,esp
    1536:	09 03                	or     DWORD PTR [rbx],eax
    1538:	7c 7f                	jl     15b9 <_Z17hashMapAddElementP7HashMap8string_t+0xd9>
    153a:	9f                   	lahf
    153b:	00 01                	add    BYTE PTR [rcx],al
    153d:	00 04 bc             	add    BYTE PTR [rsp+rdi*4],al
    1540:	09 e0                	or     eax,esp
    1542:	09 0a                	or     DWORD PTR [rdx],ecx
    1544:	03 19                	add    ebx,DWORD PTR [rcx]
    1546:	41 00 00             	add    BYTE PTR [r8],al
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	9f                   	lahf
    154e:	00 02                	add    BYTE PTR [rdx],al
    1550:	00 00                	add    BYTE PTR [rax],al
    1552:	00 00                	add    BYTE PTR [rax],al
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	02 04 fc             	add    al,BYTE PTR [rsp+rdi*8]
    1559:	09 8c 0a 02 30 9f 04 	or     DWORD PTR [rdx+rcx*1+0x49f3002],ecx
    1560:	8c 0a                	mov    WORD PTR [rdx],cs
    1562:	9f                   	lahf
    1563:	0a 01                	or     al,BYTE PTR [rcx]
    1565:	56                   	push   rsi
    1566:	04 9f                	add    al,0x9f
    1568:	0a a3 0a 01 50 04    	or     ah,BYTE PTR [rbx+0x450010a]
    156e:	a3 0a b1 0a 03 76 7f 	movabs ds:0x9f7f76030ab10a,eax
    1575:	9f 00 
    1577:	01 00                	add    DWORD PTR [rax],eax
    1579:	04 8c                	add    al,0x8c
    157b:	0a b1 0a 0a 03 43    	or     dh,BYTE PTR [rcx+0x43030a0a]
    1581:	41 00 00             	add    BYTE PTR [r8],al
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	9f                   	lahf
    1589:	00 01                	add    BYTE PTR [rcx],al
    158b:	00 04 d7             	add    BYTE PTR [rdi+rdx*8],al
    158e:	06                   	(bad)
    158f:	ea                   	(bad)
    1590:	06                   	(bad)
    1591:	0a 03                	or     al,BYTE PTR [rbx]
    1593:	e4 40                	in     al,0x40
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 00                	add    BYTE PTR [rax],al
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	9f                   	lahf
    159c:	00 02                	add    BYTE PTR [rdx],al
    159e:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
    15a1:	06                   	(bad)
    15a2:	80 07 0a             	add    BYTE PTR [rdi],0xa
    15a5:	03 f2                	add    esi,edx
    15a7:	40 00 00             	rex add BYTE PTR [rax],al
    15aa:	00 00                	add    BYTE PTR [rax],al
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	9f                   	lahf
    15af:	00 02                	add    BYTE PTR [rdx],al
    15b1:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    15b4:	07                   	(bad)
    15b5:	96                   	xchg   esi,eax
    15b6:	07                   	(bad)
    15b7:	0a 03                	or     al,BYTE PTR [rbx]
    15b9:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    15c6:	96                   	xchg   esi,eax
    15c7:	07                   	(bad)
    15c8:	a9 07 0a 03 0e       	test   eax,0xe030a07
    15cd:	41 00 00             	add    BYTE PTR [r8],al
    15d0:	00 00                	add    BYTE PTR [rax],al
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	9f                   	lahf
    15d5:	00 02                	add    BYTE PTR [rdx],al
    15d7:	00 04 dc             	add    BYTE PTR [rsp+rbx*8],al
    15da:	07                   	(bad)
    15db:	e6 07                	out    0x7,al
    15dd:	06                   	(bad)
    15de:	a0 65 48 00 00 00 00 	movabs al,ds:0x2000000004865
    15e5:	02 00 
    15e7:	04 e6                	add    al,0xe6
    15e9:	07                   	(bad)
    15ea:	f9                   	stc
    15eb:	07                   	(bad)
    15ec:	0a 03                	or     al,BYTE PTR [rbx]
    15ee:	1d 41 00 00 00       	sbb    eax,0x41
    15f3:	00 00                	add    BYTE PTR [rax],al
    15f5:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    15fb:	b5 08                	mov    ch,0x8
    15fd:	bf 08 06 a0 65       	mov    edi,0x65a00608
    1602:	48 00 00             	rex.W add BYTE PTR [rax],al
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	02 00                	add    al,BYTE PTR [rax]
    1609:	04 bf                	add    al,0xbf
    160b:	08 d2                	or     dl,dl
    160d:	08 0a                	or     BYTE PTR [rdx],cl
    160f:	03 28                	add    ebp,DWORD PTR [rax]
    1611:	41 00 00             	add    BYTE PTR [r8],al
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	9f                   	lahf
    1619:	00 02                	add    BYTE PTR [rdx],al
    161b:	00 04 8e             	add    BYTE PTR [rsi+rcx*4],al
    161e:	09 98 09 06 a0 65    	or     DWORD PTR [rax+0x65a00609],ebx
    1624:	48 00 00             	rex.W add BYTE PTR [rax],al
    1627:	00 00                	add    BYTE PTR [rax],al
    1629:	02 00                	add    al,BYTE PTR [rax]
    162b:	04 98                	add    al,0x98
    162d:	09 ab 09 0a 03 33    	or     DWORD PTR [rbx+0x33030a09],ebp
    1633:	41 00 00             	add    BYTE PTR [r8],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	00 00                	add    BYTE PTR [rax],al
    163a:	9f                   	lahf
    163b:	00 02                	add    BYTE PTR [rdx],al
    163d:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
    1640:	09 f0                	or     eax,esi
    1642:	09 06                	or     DWORD PTR [rsi],eax
    1644:	a0 65 48 00 00 00 00 	movabs al,ds:0x2000000004865
    164b:	02 00 
    164d:	04 f0                	add    al,0xf0
    164f:	09 fc                	or     esp,edi
    1651:	09 06                	or     DWORD PTR [rsi],eax
    1653:	a0 74 48 00 00 00 00 	movabs al,ds:0x2000000004874
    165a:	02 00 
    165c:	04 b6                	add    al,0xb6
    165e:	0a c4                	or     al,ah
    1660:	0a 06                	or     al,BYTE PTR [rsi]
    1662:	a0 65 48 00 00 00 00 	movabs al,ds:0x4865
    1669:	00 00 
	...
    1673:	04 80                	add    al,0x80
    1675:	06                   	(bad)
    1676:	90                   	nop
    1677:	06                   	(bad)
    1678:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    167b:	90                   	nop
    167c:	06                   	(bad)
    167d:	9e                   	sahf
    167e:	06                   	(bad)
    167f:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1682:	9e                   	sahf
    1683:	06                   	(bad)
    1684:	9f                   	lahf
    1685:	06                   	(bad)
    1686:	04 a3                	add    al,0xa3
    1688:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    168b:	04 9f                	add    al,0x9f
    168d:	06                   	(bad)
    168e:	b9 06 01 55 04       	mov    ecx,0x4550106
    1693:	b9 06 be 06 04       	mov    ecx,0x406be06
    1698:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    169f:	00 00 
    16a1:	00 00                	add    BYTE PTR [rax],al
    16a3:	00 00                	add    BYTE PTR [rax],al
    16a5:	04 f0                	add    al,0xf0
    16a7:	03 88 04 01 55 04    	add    ecx,DWORD PTR [rax+0x4550104]
    16ad:	88 04 80             	mov    BYTE PTR [rax+rax*4],al
    16b0:	05 01 59 04 80       	add    eax,0x80045901
    16b5:	05 9b 05 01 55       	add    eax,0x5501059b
    16ba:	04 9b                	add    al,0x9b
    16bc:	05 a0 05 04 a3       	add    eax,0xa30405a0
    16c1:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	00 00                	add    BYTE PTR [rax],al
    16c8:	00 00                	add    BYTE PTR [rax],al
    16ca:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    16cd:	03 92 04 06 54 93    	add    edx,DWORD PTR [rdx-0x6cabf9fc]
    16d3:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    16d6:	08 04 b7             	or     BYTE PTR [rdi+rsi*4],al
    16d9:	04 be                	add    al,0xbe
    16db:	04 06                	add    al,0x6
    16dd:	54                   	push   rsp
    16de:	93                   	xchg   ebx,eax
    16df:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    16e2:	08 04 80             	or     BYTE PTR [rax+rax*4],al
    16e5:	05 8d 05 06 54       	add    eax,0x5406058d
    16ea:	93                   	xchg   ebx,eax
    16eb:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    16ee:	08 00                	or     BYTE PTR [rax],al
    16f0:	00 00                	add    BYTE PTR [rax],al
    16f2:	01 00                	add    DWORD PTR [rax],eax
    16f4:	04 bb                	add    al,0xbb
    16f6:	04 be                	add    al,0xbe
    16f8:	04 02                	add    al,0x2
    16fa:	30 9f 04 be 04 80    	xor    BYTE PTR [rdi-0x7ffb41fc],bl
    1700:	05 01 50 00 00       	add    eax,0x5001
    1705:	00 00                	add    BYTE PTR [rax],al
    1707:	00 04 db             	add    BYTE PTR [rbx+rbx*8],al
    170a:	04 df                	add    al,0xdf
    170c:	04 01                	add    al,0x1
    170e:	54                   	push   rsp
    170f:	04 df                	add    al,0xdf
    1711:	04 80                	add    al,0x80
    1713:	05 01 55 00 01       	add    eax,0x1005501
    1718:	00 04 db             	add    BYTE PTR [rbx+rbx*8],al
    171b:	04 e9                	add    al,0xe9
    171d:	04 02                	add    al,0x2
    171f:	71 00                	jno    1721 <_Z17hashMapAddElementP7HashMap8string_t+0x241>
    1721:	00 01                	add    BYTE PTR [rcx],al
    1723:	00 00                	add    BYTE PTR [rax],al
    1725:	01 04 83             	add    DWORD PTR [rbx+rax*4],eax
    1728:	04 bb                	add    al,0xbb
    172a:	04 05                	add    al,0x5
    172c:	54                   	push   rsp
    172d:	93                   	xchg   ebx,eax
    172e:	08 93 08 04 be 04    	or     BYTE PTR [rbx+0x4be0408],dl
    1734:	be 04 05 54 93       	mov    esi,0x93540504
    1739:	08 93 08 00 01 00    	or     BYTE PTR [rbx+0x10008],dl
    173f:	00 00                	add    BYTE PTR [rax],al
    1741:	00 01                	add    BYTE PTR [rcx],al
    1743:	04 83                	add    al,0x83
    1745:	04 88                	add    al,0x88
    1747:	04 01                	add    al,0x1
    1749:	55                   	push   rbp
    174a:	04 88                	add    al,0x88
    174c:	04 bb                	add    al,0xbb
    174e:	04 01                	add    al,0x1
    1750:	59                   	pop    rcx
    1751:	04 be                	add    al,0xbe
    1753:	04 be                	add    al,0xbe
    1755:	04 01                	add    al,0x1
    1757:	59                   	pop    rcx
	...
    1760:	01 04 88             	add    DWORD PTR [rax+rcx*4],eax
    1763:	04 b3                	add    al,0xb3
    1765:	04 01                	add    al,0x1
    1767:	52                   	push   rdx
    1768:	04 b3                	add    al,0xb3
    176a:	04 b7                	add    al,0xb7
    176c:	04 01                	add    al,0x1
    176e:	50                   	push   rax
    176f:	04 b7                	add    al,0xb7
    1771:	04 bb                	add    al,0xbb
    1773:	04 01                	add    al,0x1
    1775:	52                   	push   rdx
    1776:	04 be                	add    al,0xbe
    1778:	04 be                	add    al,0xbe
    177a:	04 01                	add    al,0x1
    177c:	50                   	push   rax
    177d:	00 00                	add    BYTE PTR [rax],al
    177f:	01 04 99             	add    DWORD PTR [rcx+rbx*4],eax
    1782:	04 af                	add    al,0xaf
    1784:	04 03                	add    al,0x3
    1786:	71 10                	jno    1798 <_Z17hashMapPopElementP7HashMap8string_t+0x8>
    1788:	9f                   	lahf
    1789:	00 00                	add    BYTE PTR [rax],al
    178b:	01 04 99             	add    DWORD PTR [rcx+rbx*4],eax
    178e:	04 af                	add    al,0xaf
    1790:	04 06                	add    al,0x6
    1792:	a0 98 43 00 00 00 00 	movabs al,ds:0x2000000004398
    1799:	02 00 
    179b:	00 01                	add    BYTE PTR [rcx],al
    179d:	04 99                	add    al,0x99
    179f:	04 af                	add    al,0xaf
    17a1:	04 02                	add    al,0x2
    17a3:	30 9f 04 af 04 af    	xor    BYTE PTR [rdi-0x50fb50fc],bl
    17a9:	04 01                	add    al,0x1
    17ab:	55                   	push   rbp
	...
    17bc:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    17bf:	01 a7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esp
    17c5:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    17c6:	01 e9                	add    ecx,ebp
    17c8:	02 01                	add    al,BYTE PTR [rcx]
    17ca:	56                   	push   rsi
    17cb:	04 e9                	add    al,0xe9
    17cd:	02 ee                	add    ch,dh
    17cf:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    17d2:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    17d5:	04 ee                	add    al,0xee
    17d7:	02 c3                	add    al,bl
    17d9:	03 01                	add    eax,DWORD PTR [rcx]
    17db:	56                   	push   rsi
    17dc:	04 c3                	add    al,0xc3
    17de:	03 c6                	add    eax,esi
    17e0:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
    17e3:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    17e6:	04 c6                	add    al,0xc6
    17e8:	03 d0                	add    edx,eax
    17ea:	03 01                	add    eax,DWORD PTR [rcx]
    17ec:	56                   	push   rsi
    17ed:	04 d0                	add    al,0xd0
    17ef:	03 ea                	add    ebp,edx
    17f1:	03 01                	add    eax,DWORD PTR [rcx]
    17f3:	55                   	push   rbp
    17f4:	04 ea                	add    al,0xea
    17f6:	03 ef                	add    ebp,edi
    17f8:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
    17fb:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    17fe:	00 00                	add    BYTE PTR [rax],al
    1800:	00 00                	add    BYTE PTR [rax],al
    1802:	00 00                	add    BYTE PTR [rax],al
    1804:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1807:	01 ec                	add    esp,ebp
    1809:	01 06                	add    DWORD PTR [rsi],eax
    180b:	54                   	push   rsp
    180c:	93                   	xchg   ebx,eax
    180d:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1810:	08 04 ee             	or     BYTE PTR [rsi+rbp*8],al
    1813:	02 8a 03 06 54 93    	add    cl,BYTE PTR [rdx-0x6cabf9fd]
    1819:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    181c:	08 04 d0             	or     BYTE PTR [rax+rdx*8],al
    181f:	03 dc                	add    ebx,esp
    1821:	03 06                	add    eax,DWORD PTR [rsi]
    1823:	54                   	push   rsp
    1824:	93                   	xchg   ebx,eax
    1825:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1828:	08 00                	or     BYTE PTR [rax],al
    182a:	00 00                	add    BYTE PTR [rax],al
    182c:	00 00                	add    BYTE PTR [rax],al
    182e:	00 00                	add    BYTE PTR [rax],al
    1830:	04 ee                	add    al,0xee
    1832:	02 f6                	add    dh,dh
    1834:	02 02                	add    al,BYTE PTR [rdx]
    1836:	30 9f 04 f6 02 fa    	xor    BYTE PTR [rdi-0x5fd09fc],bl
    183c:	02 01                	add    al,BYTE PTR [rcx]
    183e:	53                   	push   rbx
    183f:	04 fa                	add    al,0xfa
    1841:	02 af 03 01 58 00    	add    ch,BYTE PTR [rdi+0x580103]
    1847:	01 00                	add    DWORD PTR [rax],eax
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	04 91                	add    al,0x91
    184d:	03 98 03 01 51 04    	add    ebx,DWORD PTR [rax+0x4510103]
    1853:	98                   	cwde
    1854:	03 a6 03 02 72 04    	add    esp,DWORD PTR [rsi+0x4720203]
    185a:	00 01                	add    BYTE PTR [rcx],al
    185c:	01 04 a4             	add    DWORD PTR [rsp+riz*4],eax
    185f:	01 e6                	add    esi,esp
    1861:	01 05 54 93 08 93    	add    DWORD PTR [rip+0xffffffff93089354],eax        # ffffffff9308abbb <_end+0xffffffff93084ba3>
    1867:	08 00                	or     BYTE PTR [rax],al
    1869:	01 00                	add    DWORD PTR [rax],eax
    186b:	00 01                	add    BYTE PTR [rcx],al
    186d:	04 a4                	add    al,0xa4
    186f:	01 a7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esp
    1875:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1876:	01 e6                	add    esi,esp
    1878:	01 01                	add    DWORD PTR [rcx],eax
    187a:	56                   	push   rsi
    187b:	00 00                	add    BYTE PTR [rax],al
    187d:	00 01                	add    BYTE PTR [rcx],al
    187f:	00 00                	add    BYTE PTR [rax],al
    1881:	00 04 a9             	add    BYTE PTR [rcx+rbp*4],al
    1884:	01 b2 01 01 50 04    	add    DWORD PTR [rdx+0x4500101],esi
    188a:	b2 01                	mov    dl,0x1
    188c:	c2 01 02             	ret    0x201
    188f:	72 00                	jb     1891 <_Z20hashMapSearchElementP7HashMap8string_t+0x31>
    1891:	04 c2                	add    al,0xc2
    1893:	01 d0                	add    eax,edx
    1895:	01 01                	add    DWORD PTR [rcx],eax
    1897:	50                   	push   rax
    1898:	00 00                	add    BYTE PTR [rax],al
    189a:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
    189d:	01 e2                	add    edx,esp
    189f:	01 03                	add    DWORD PTR [rbx],eax
    18a1:	72 10                	jb     18b3 <_Z20hashMapSearchElementP7HashMap8string_t+0x53>
    18a3:	9f                   	lahf
    18a4:	00 00                	add    BYTE PTR [rax],al
    18a6:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
    18a9:	01 e2                	add    edx,esp
    18ab:	01 06                	add    DWORD PTR [rsi],eax
    18ad:	a0 11 45 00 00 00 00 	movabs al,ds:0x2000000004511
    18b4:	02 00 
    18b6:	00 01                	add    BYTE PTR [rcx],al
    18b8:	04 cc                	add    al,0xcc
    18ba:	01 e2                	add    edx,esp
    18bc:	01 02                	add    DWORD PTR [rdx],eax
    18be:	30 9f 04 e2 01 e2    	xor    BYTE PTR [rdi-0x1dfe1dfc],bl
    18c4:	01 01                	add    DWORD PTR [rcx],eax
    18c6:	50                   	push   rax
    18c7:	00 01                	add    BYTE PTR [rcx],al
    18c9:	00 00                	add    BYTE PTR [rax],al
    18cb:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
    18ce:	01 e7                	add    edi,esp
    18d0:	02 01                	add    al,BYTE PTR [rcx]
    18d2:	56                   	push   rsi
    18d3:	04 c6                	add    al,0xc6
    18d5:	03 d0                	add    edx,eax
    18d7:	03 01                	add    eax,DWORD PTR [rcx]
    18d9:	56                   	push   rsi
    18da:	00 00                	add    BYTE PTR [rax],al
    18dc:	00 04 9f             	add    BYTE PTR [rdi+rbx*4],al
    18df:	02 b3 02 01 51 00    	add    dh,BYTE PTR [rbx+0x510102]
    18e5:	00 00                	add    BYTE PTR [rax],al
    18e7:	04 9f                	add    al,0x9f
    18e9:	02 b4 02 02 30 9f 00 	add    dh,BYTE PTR [rdx+rax*1+0x9f3002]
    18f0:	00 00                	add    BYTE PTR [rax],al
    18f2:	00 00                	add    BYTE PTR [rax],al
    18f4:	04 9f                	add    al,0x9f
    18f6:	02 a6 02 06 70 00    	add    ah,BYTE PTR [rsi+0x700602]
    18fc:	71 00                	jno    18fe <_Z11hashMapDtorP7HashMap+0xe>
    18fe:	22 9f 04 a6 02 b3    	and    bl,BYTE PTR [rdi-0x4cfd59fc]
    1904:	02 01                	add    al,BYTE PTR [rcx]
    1906:	55                   	push   rbp
    1907:	00 00                	add    BYTE PTR [rax],al
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	01 01                	add    DWORD PTR [rcx],eax
    190d:	00 00                	add    BYTE PTR [rax],al
    190f:	00 00                	add    BYTE PTR [rax],al
    1911:	00 04 b7             	add    BYTE PTR [rdi+rsi*4],al
    1914:	02 d5                	add    dl,ch
    1916:	02 01                	add    al,BYTE PTR [rcx]
    1918:	50                   	push   rax
    1919:	04 d5                	add    al,0xd5
    191b:	02 df                	add    bl,bh
    191d:	02 01                	add    al,BYTE PTR [rcx]
    191f:	52                   	push   rdx
    1920:	04 df                	add    al,0xdf
    1922:	02 e7                	add    ah,bh
    1924:	02 01                	add    al,BYTE PTR [rcx]
    1926:	50                   	push   rax
    1927:	04 c6                	add    al,0xc6
    1929:	03 ca                	add    ecx,edx
    192b:	03 01                	add    eax,DWORD PTR [rcx]
    192d:	50                   	push   rax
    192e:	04 ca                	add    al,0xca
    1930:	03 d0                	add    edx,eax
    1932:	03 02                	add    eax,DWORD PTR [rdx]
    1934:	76 08                	jbe    193e <_Z11hashMapDtorP7HashMap+0x4e>
    1936:	00 00                	add    BYTE PTR [rax],al
    1938:	00 00                	add    BYTE PTR [rax],al
    193a:	00 00                	add    BYTE PTR [rax],al
    193c:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    193f:	42 02 75 00          	rex.X add sil,BYTE PTR [rbp+0x0]
    1943:	04 42                	add    al,0x42
    1945:	8c 01                	mov    WORD PTR [rcx],es
    1947:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    194a:	04 8c                	add    al,0x8c
    194c:	01 8d 01 02 70 00    	add    DWORD PTR [rbp+0x700201],ecx
    1952:	00 03                	add    BYTE PTR [rbx],al
    1954:	07                   	(bad)
    1955:	07                   	(bad)
    1956:	01 01                	add    DWORD PTR [rcx],eax
    1958:	01 01                	add    DWORD PTR [rcx],eax
    195a:	00 04 75 75 02 31 9f 	add    BYTE PTR [rsi*2-0x60cefd8b],al
    1961:	04 75                	add    al,0x75
    1963:	79 02                	jns    1967 <_Z17hashMapDebugPrintP7HashMap+0x7>
    1965:	32 9f 04 79 88 01    	xor    bl,BYTE PTR [rdi+0x1887904]
    196b:	02 33                	add    dh,BYTE PTR [rbx]
    196d:	9f                   	lahf
    196e:	04 88                	add    al,0x88
    1970:	01 8d 01 02 34 9f    	add    DWORD PTR [rbp-0x60cbfdff],ecx
    1976:	00 00                	add    BYTE PTR [rax],al
    1978:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    197b:	25 06 fa 0f 11       	and    eax,0x110ffa06
    1980:	00 00                	add    BYTE PTR [rax],al
    1982:	9f                   	lahf
	...
    198b:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    198e:	05 ac 05 01 55       	add    eax,0x550105ac
    1993:	04 ac                	add    al,0xac
    1995:	05 ec 05 04 a3       	add    eax,0xa30405ec
    199a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    199d:	04 ec                	add    al,0xec
    199f:	05 f1 05 01 55       	add    eax,0x550105f1
    19a4:	04 f1                	add    al,0xf1
    19a6:	05 f2 05 04 a3       	add    eax,0xa30405f2
    19ab:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    19ae:	00 00                	add    BYTE PTR [rax],al
    19b0:	00 00                	add    BYTE PTR [rax],al
    19b2:	00 00                	add    BYTE PTR [rax],al
    19b4:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    19b7:	05 b4 05 06 54       	add    eax,0x540605b4
    19bc:	93                   	xchg   ebx,eax
    19bd:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19c0:	08 04 be             	or     BYTE PTR [rsi+rdi*4],al
    19c3:	05 c0 05 06 54       	add    eax,0x540605c0
    19c8:	93                   	xchg   ebx,eax
    19c9:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19cc:	08 04 e9             	or     BYTE PTR [rcx+rbp*8],al
    19cf:	05 f1 05 06 54       	add    eax,0x540605f1
    19d4:	93                   	xchg   ebx,eax
    19d5:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19d8:	08 00                	or     BYTE PTR [rax],al
    19da:	00 00                	add    BYTE PTR [rax],al
    19dc:	00 00                	add    BYTE PTR [rax],al
    19de:	04 ae                	add    al,0xae
    19e0:	05 eb 05 01 50       	add    eax,0x500105eb
    19e5:	04 eb                	add    al,0xeb
    19e7:	05 ec 05 02 75       	add    eax,0x750205ec
    19ec:	00 00                	add    BYTE PTR [rax],al
    19ee:	00 01                	add    BYTE PTR [rcx],al
    19f0:	04 c7                	add    al,0xc7
    19f2:	05 dd 05 03 71       	add    eax,0x710305dd
    19f7:	10 9f 00 00 01 04    	adc    BYTE PTR [rdi+0x4010000],bl
    19fd:	c7 05 dd 05 06 a0 b3 	mov    DWORD PTR [rip+0xffffffffa00605dd],0x42b3        # ffffffffa0061fe4 <_end+0xffffffffa005bfcc>
    1a04:	42 00 00 
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	02 00                	add    al,BYTE PTR [rax]
    1a0b:	00 01                	add    BYTE PTR [rcx],al
    1a0d:	04 c7                	add    al,0xc7
    1a0f:	05 dd 05 02 30       	add    eax,0x300205dd
    1a14:	9f                   	lahf
    1a15:	04 dd                	add    al,0xdd
    1a17:	05 dd 05 01 52       	add    eax,0x520105dd
    1a1c:	00 8c 01 00 00 05 00 	add    BYTE PTR [rcx+rax*1+0x50000],cl
    1a23:	08 00                	or     BYTE PTR [rax],al
	...
    1a31:	00 00                	add    BYTE PTR [rax],al
    1a33:	04 90                	add    al,0x90
    1a35:	02 aa 02 01 55 04    	add    ch,BYTE PTR [rdx+0x4550102]
    1a3b:	aa                   	stos   BYTE PTR es:[rdi],al
    1a3c:	02 d0                	add    dl,al
    1a3e:	02 01                	add    al,BYTE PTR [rcx]
    1a40:	56                   	push   rsi
    1a41:	04 d0                	add    al,0xd0
    1a43:	02 d3                	add    dl,bl
    1a45:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a48:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1a4b:	04 d3                	add    al,0xd3
    1a4d:	02 ed                	add    ch,ch
    1a4f:	02 01                	add    al,BYTE PTR [rcx]
    1a51:	55                   	push   rbp
    1a52:	04 ed                	add    al,0xed
    1a54:	02 f2                	add    dh,dl
    1a56:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a59:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    1a64:	00 00                	add    BYTE PTR [rax],al
    1a66:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1a69:	02 aa 02 01 54 04    	add    ch,BYTE PTR [rdx+0x4540102]
    1a6f:	aa                   	stos   BYTE PTR es:[rdi],al
    1a70:	02 d2                	add    dl,dl
    1a72:	02 01                	add    al,BYTE PTR [rcx]
    1a74:	5c                   	pop    rsp
    1a75:	04 d2                	add    al,0xd2
    1a77:	02 d3                	add    dl,bl
    1a79:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a7c:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1a80:	d3 02                	rol    DWORD PTR [rdx],cl
    1a82:	e6 02                	out    0x2,al
    1a84:	01 54 04 e6          	add    DWORD PTR [rsp+rax*1-0x1a],edx
    1a88:	02 f2                	add    dh,dl
    1a8a:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a8d:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    1a91:	00 00                	add    BYTE PTR [rax],al
    1a93:	00 00                	add    BYTE PTR [rax],al
    1a95:	04 a3                	add    al,0xa3
    1a97:	02 bc 02 01 55 04 c1 	add    bh,BYTE PTR [rdx+rax*1-0x3efbaaff]
    1a9e:	02 d3                	add    dl,bl
    1aa0:	02 01                	add    al,BYTE PTR [rcx]
    1aa2:	55                   	push   rbp
    1aa3:	00 00                	add    BYTE PTR [rax],al
    1aa5:	00 00                	add    BYTE PTR [rax],al
    1aa7:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    1aaa:	02 aa 02 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfe]
    1ab0:	04 aa                	add    al,0xaa
    1ab2:	02 cc                	add    cl,ah
    1ab4:	02 01                	add    al,BYTE PTR [rcx]
    1ab6:	53                   	push   rbx
    1ab7:	00 01                	add    BYTE PTR [rcx],al
    1ab9:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1abc:	02 bd 02 02 3a 9f    	add    bh,BYTE PTR [rbp-0x60c5fdfe]
    1ac2:	00 01                	add    BYTE PTR [rcx],al
    1ac4:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1ac7:	02 bc 02 01 55 00 00 	add    bh,BYTE PTR [rdx+rax*1+0x5501]
	...
    1ada:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1add:	64 01 55 04          	add    DWORD PTR fs:[rbp+0x4],edx
    1ae1:	64 97                	fs xchg edi,eax
    1ae3:	01 01                	add    DWORD PTR [rcx],eax
    1ae5:	53                   	push   rbx
    1ae6:	04 97                	add    al,0x97
    1ae8:	01 d6                	add    esi,edx
    1aea:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1aed:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1af0:	04 d6                	add    al,0xd6
    1af2:	01 e2                	add    edx,esp
    1af4:	01 01                	add    DWORD PTR [rcx],eax
    1af6:	53                   	push   rbx
    1af7:	04 e2                	add    al,0xe2
    1af9:	01 e4                	add    esp,esp
    1afb:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1afe:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1b01:	04 e4                	add    al,0xe4
    1b03:	01 fe                	add    esi,edi
    1b05:	01 01                	add    DWORD PTR [rcx],eax
    1b07:	55                   	push   rbp
    1b08:	04 fe                	add    al,0xfe
    1b0a:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1b10:	55                   	push   rbp
    1b11:	9f                   	lahf
	...
    1b1a:	00 00                	add    BYTE PTR [rax],al
    1b1c:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1b1f:	3a 01                	cmp    al,BYTE PTR [rcx]
    1b21:	54                   	push   rsp
    1b22:	04 3a                	add    al,0x3a
    1b24:	82                   	(bad)
    1b25:	01 01                	add    DWORD PTR [rcx],eax
    1b27:	5c                   	pop    rsp
    1b28:	04 82                	add    al,0x82
    1b2a:	01 e4                	add    esp,esp
    1b2c:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1b2f:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1b33:	e4 01                	in     al,0x1
    1b35:	f7 01 01 54 04 f7    	test   DWORD PTR [rcx],0xf7045401
    1b3b:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1b41:	54                   	push   rsp
    1b42:	9f                   	lahf
    1b43:	00 00                	add    BYTE PTR [rax],al
    1b45:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1b48:	b2 01                	mov    dl,0x1
    1b4a:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    1b4d:	00 00                	add    BYTE PTR [rax],al
    1b4f:	00 00                	add    BYTE PTR [rax],al
    1b51:	04 82                	add    al,0x82
    1b53:	01 93 01 01 50 04    	add    DWORD PTR [rbx+0x4500101],edx
    1b59:	93                   	xchg   ebx,eax
    1b5a:	01 b2 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],esi
    1b60:	00 00                	add    BYTE PTR [rax],al
    1b62:	00 00                	add    BYTE PTR [rax],al
    1b64:	04 97                	add    al,0x97
    1b66:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1b6c:	a9 01 b2 01 01       	test   eax,0x101b201
    1b71:	53                   	push   rbx
    1b72:	00 01                	add    BYTE PTR [rcx],al
    1b74:	00 04 7a             	add    BYTE PTR [rdx+rdi*2],al
    1b77:	82                   	(bad)
    1b78:	01 02                	add    DWORD PTR [rdx],eax
    1b7a:	30 9f 00 01 00 04    	xor    BYTE PTR [rdi+0x4000100],bl
    1b80:	7a 82                	jp     1b04 <_Z15crc32HashString8string_t+0xe4>
    1b82:	01 01                	add    DWORD PTR [rcx],eax
    1b84:	53                   	push   rbx
    1b85:	00 01                	add    BYTE PTR [rcx],al
    1b87:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1b8a:	01 aa 01 01 5d 00    	add    DWORD PTR [rdx+0x5d0101],ebp
    1b90:	01 00                	add    DWORD PTR [rax],eax
    1b92:	00 00                	add    BYTE PTR [rax],al
    1b94:	04 9c                	add    al,0x9c
    1b96:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1b9c:	a9 01 aa 01 01       	test   eax,0x101aa01
    1ba1:	53                   	push   rbx
    1ba2:	00 01                	add    BYTE PTR [rcx],al
    1ba4:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1ba7:	01 aa 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],ebp
    1bad:	dd 12                	fst    QWORD PTR [rdx]
    1baf:	00 00                	add    BYTE PTR [rax],al
    1bb1:	05 00 08 00 00       	add    eax,0x800
	...
    1bc2:	00 00                	add    BYTE PTR [rax],al
    1bc4:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1bc7:	08 af 09 01 55 04    	or     BYTE PTR [rdi+0x4550109],ch
    1bcd:	af                   	scas   eax,DWORD PTR es:[rdi]
    1bce:	09 80 10 03 76 f8    	or     DWORD PTR [rax-0x789fcf0],eax
    1bd4:	7e 04                	jle    1bda <_Z17murmur2HashString8string_t+0xa>
    1bd6:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1bd9:	10 08                	adc    BYTE PTR [rax],cl
    1bdb:	91                   	xchg   ecx,eax
    1bdc:	70 09                	jo     1be7 <_Z17murmur2HashString8string_t+0x17>
    1bde:	e0 1a                	loopne 1bfa <_Z17murmur2HashString8string_t+0x2a>
    1be0:	08 98 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],bl
    1be6:	fe                   	(bad)
    1be7:	10 03                	adc    BYTE PTR [rbx],al
    1be9:	76 f8                	jbe    1be3 <_Z17murmur2HashString8string_t+0x13>
    1beb:	7e 04                	jle    1bf1 <_Z17murmur2HashString8string_t+0x21>
    1bed:	fe                   	(bad)
    1bee:	10 98 11 01 55 04    	adc    BYTE PTR [rax+0x4550111],bl
    1bf4:	98                   	cwde
    1bf5:	11 b6 11 03 76 f8    	adc    DWORD PTR [rsi-0x789fcef],esi
    1bfb:	7e 00                	jle    1bfd <_Z17murmur2HashString8string_t+0x2d>
	...
    1c05:	00 00                	add    BYTE PTR [rax],al
    1c07:	04 e0                	add    al,0xe0
    1c09:	08 c0                	or     al,al
    1c0b:	09 01                	or     DWORD PTR [rcx],eax
    1c0d:	54                   	push   rsp
    1c0e:	04 c0                	add    al,0xc0
    1c10:	09 da                	or     edx,ebx
    1c12:	09 01                	or     DWORD PTR [rcx],eax
    1c14:	5f                   	pop    rdi
    1c15:	04 da                	add    al,0xda
    1c17:	09 fe                	or     esi,edi
    1c19:	10 04 a3             	adc    BYTE PTR [rbx+riz*4],al
    1c1c:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1c20:	fe                   	(bad)
    1c21:	10 91 11 01 54 04    	adc    BYTE PTR [rcx+0x4540111],dl
    1c27:	91                   	xchg   ecx,eax
    1c28:	11 b6 11 04 a3 01    	adc    DWORD PTR [rsi+0x1a30411],esi
    1c2e:	54                   	push   rsp
    1c2f:	9f                   	lahf
	...
    1c38:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1c3b:	08 b6 09 06 51 93    	or     BYTE PTR [rsi-0x6caef9f7],dh
    1c41:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1c44:	08 04 b9             	or     BYTE PTR [rcx+rdi*4],al
    1c47:	09 d7                	or     edi,edx
    1c49:	09 06                	or     DWORD PTR [rsi],eax
    1c4b:	5d                   	pop    rbp
    1c4c:	93                   	xchg   ebx,eax
    1c4d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1c50:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
    1c53:	09 9a 0a 06 5d 93    	or     DWORD PTR [rdx-0x6ca2f9f6],ebx
    1c59:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1c5c:	08 04 fe             	or     BYTE PTR [rsi+rdi*8],al
    1c5f:	10 8a 11 06 51 93    	adc    BYTE PTR [rdx-0x6caef9ef],cl
    1c65:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1c68:	08 00                	or     BYTE PTR [rax],al
	...
    1c76:	04 e0                	add    al,0xe0
    1c78:	08 c0                	or     al,al
    1c7a:	09 01                	or     DWORD PTR [rcx],eax
    1c7c:	58                   	pop    rax
    1c7d:	04 c0                	add    al,0xc0
    1c7f:	09 80 10 03 76 8c    	or     DWORD PTR [rax-0x7389fcf0],eax
    1c85:	7f 04                	jg     1c8b <_Z13sumHashString8string_t+0xb>
    1c87:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1c8a:	10 08                	adc    BYTE PTR [rax],cl
    1c8c:	91                   	xchg   ecx,eax
    1c8d:	70 09                	jo     1c98 <_Z13sumHashString8string_t+0x18>
    1c8f:	e0 1a                	loopne 1cab <_Z13sumHashString8string_t+0x2b>
    1c91:	08 84 1c 04 8b 10 fe 	or     BYTE PTR [rsp+rbx*1-0x1ef74fc],al
    1c98:	10 03                	adc    BYTE PTR [rbx],al
    1c9a:	76 8c                	jbe    1c28 <_Z17murmur2HashString8string_t+0x58>
    1c9c:	7f 04                	jg     1ca2 <_Z13sumHashString8string_t+0x22>
    1c9e:	fe                   	(bad)
    1c9f:	10 9c 11 01 58 04 9c 	adc    BYTE PTR [rcx+rdx*1-0x63fba7ff],bl
    1ca6:	11 b6 11 03 76 8c    	adc    DWORD PTR [rsi-0x7389fcef],esi
    1cac:	7f 00                	jg     1cae <_Z13sumHashString8string_t+0x2e>
	...
    1cba:	04 94                	add    al,0x94
    1cbc:	0a 97 0a 01 50 04    	or     dl,BYTE PTR [rdi+0x450010a]
    1cc2:	97                   	xchg   edi,eax
    1cc3:	0a b1 0a 01 5f 04    	or     dh,BYTE PTR [rcx+0x45f010a]
    1cc9:	b1 0a                	mov    cl,0xa
    1ccb:	80 10 03             	adc    BYTE PTR [rax],0x3
    1cce:	76 98                	jbe    1c68 <_Z17murmur2HashString8string_t+0x98>
    1cd0:	7f 04                	jg     1cd6 <_Z13sumHashString8string_t+0x56>
    1cd2:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1cd5:	10 08                	adc    BYTE PTR [rax],cl
    1cd7:	91                   	xchg   ecx,eax
    1cd8:	70 09                	jo     1ce3 <_Z13sumHashString8string_t+0x63>
    1cda:	e0 1a                	loopne 1cf6 <_Z13sumHashString8string_t+0x76>
    1cdc:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    1cdf:	04 8b                	add    al,0x8b
    1ce1:	10 fe                	adc    dh,bh
    1ce3:	10 03                	adc    BYTE PTR [rbx],al
    1ce5:	76 98                	jbe    1c7f <_Z17murmur2HashString8string_t+0xaf>
    1ce7:	7f 04                	jg     1ced <_Z13sumHashString8string_t+0x6d>
    1ce9:	9d                   	popf
    1cea:	11 b6 11 03 76 98    	adc    DWORD PTR [rsi-0x6789fcef],esi
    1cf0:	7f 00                	jg     1cf2 <_Z13sumHashString8string_t+0x72>
	...
    1cfa:	00 00                	add    BYTE PTR [rax],al
    1cfc:	04 b1                	add    al,0xb1
    1cfe:	0a b1 0a 01 50 04    	or     dh,BYTE PTR [rcx+0x450010a]
    1d04:	b1 0a                	mov    cl,0xa
    1d06:	80 10 03             	adc    BYTE PTR [rax],0x3
    1d09:	76 90                	jbe    1c9b <_Z13sumHashString8string_t+0x1b>
    1d0b:	7f 04                	jg     1d11 <_Z13sumHashString8string_t+0x91>
    1d0d:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1d10:	10 08                	adc    BYTE PTR [rax],cl
    1d12:	91                   	xchg   ecx,eax
    1d13:	70 09                	jo     1d1e <_Z13sumHashString8string_t+0x9e>
    1d15:	e0 1a                	loopne 1d31 <_Z13sumHashString8string_t+0xb1>
    1d17:	08 80 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],al
    1d1d:	fe                   	(bad)
    1d1e:	10 03                	adc    BYTE PTR [rbx],al
    1d20:	76 90                	jbe    1cb2 <_Z13sumHashString8string_t+0x32>
    1d22:	7f 04                	jg     1d28 <_Z13sumHashString8string_t+0xa8>
    1d24:	9d                   	popf
    1d25:	11 b6 11 03 76 90    	adc    DWORD PTR [rsi-0x6f89fcef],esi
    1d2b:	7f 00                	jg     1d2d <_Z13sumHashString8string_t+0xad>
    1d2d:	01 00                	add    DWORD PTR [rax],eax
    1d2f:	00 00                	add    BYTE PTR [rax],al
    1d31:	04 b1                	add    al,0xb1
    1d33:	0a fe                	or     bh,dh
    1d35:	10 06                	adc    BYTE PTR [rsi],al
    1d37:	0c 73                	or     al,0x73
    1d39:	99                   	cdq
    1d3a:	0f 00 9f 04 9d 11 b6 	ltr    WORD PTR [rdi-0x49ee62fc]
    1d41:	11 06                	adc    DWORD PTR [rsi],eax
    1d43:	0c 73                	or     al,0x73
    1d45:	99                   	cdq
    1d46:	0f 00 9f 00 01 00 00 	ltr    WORD PTR [rdi+0x100]
	...
    1d55:	00 01                	add    BYTE PTR [rcx],al
	...
    1d5f:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1d62:	0c b6                	or     al,0xb6
    1d64:	0c 0a                	or     al,0xa
    1d66:	9e                   	sahf
    1d67:	08 00                	or     BYTE PTR [rax],al
    1d69:	00 00                	add    BYTE PTR [rax],al
    1d6b:	00 00                	add    BYTE PTR [rax],al
    1d6d:	00 00                	add    BYTE PTR [rax],al
    1d6f:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1d72:	0c e1                	or     al,0xe1
    1d74:	0c 01                	or     al,0x1
    1d76:	63 04 e1             	movsxd eax,DWORD PTR [rcx+riz*8]
    1d79:	0c f0                	or     al,0xf0
    1d7b:	0c 03                	or     al,0x3
    1d7d:	76 a0                	jbe    1d1f <_Z13sumHashString8string_t+0x9f>
    1d7f:	7f 04                	jg     1d85 <_Z13sumHashString8string_t+0x105>
    1d81:	f0 0c 8d             	lock or al,0x8d
    1d84:	0d 01 63 04 8d       	or     eax,0x8d046301
    1d89:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1d8e:	04 8b                	add    al,0x8b
    1d90:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1d96:	9b                   	fwait
    1d97:	10 c5                	adc    ch,al
    1d99:	10 0a                	adc    BYTE PTR [rdx],cl
    1d9b:	9e                   	sahf
    1d9c:	08 00                	or     BYTE PTR [rax],al
    1d9e:	00 00                	add    BYTE PTR [rax],al
    1da0:	00 00                	add    BYTE PTR [rax],al
    1da2:	00 00                	add    BYTE PTR [rax],al
    1da4:	00 04 c5 10 fd 10 01 	add    BYTE PTR [rax*8+0x110fd10],al
    1dab:	66 04 fd             	data16 add al,0xfd
    1dae:	10 fe                	adc    dh,bh
    1db0:	10 0e                	adc    BYTE PTR [rsi],cl
    1db2:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1db3:	2e 08 00             	cs or  BYTE PTR [rax],al
    1db6:	00 00                	add    BYTE PTR [rax],al
    1db8:	00 00                	add    BYTE PTR [rax],al
    1dba:	00 00                	add    BYTE PTR [rax],al
    1dbc:	00 12                	add    BYTE PTR [rdx],dl
    1dbe:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1dc4:	11 01                	adc    DWORD PTR [rcx],eax
    1dc6:	66 04 ab             	data16 add al,0xab
    1dc9:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1dcf:	7f 00                	jg     1dd1 <_Z13sumHashString8string_t+0x151>
    1dd1:	01 00                	add    DWORD PTR [rax],eax
    1dd3:	00 00                	add    BYTE PTR [rax],al
    1dd5:	04 f3                	add    al,0xf3
    1dd7:	0e                   	(bad)
    1dd8:	f7 0f 01 53 04 9d    	test   DWORD PTR [rdi],0x9d045301
    1dde:	11 a2 11 01 53 00    	adc    DWORD PTR [rdx+0x530111],esp
    1de4:	00 00                	add    BYTE PTR [rax],al
    1de6:	04 d1                	add    al,0xd1
    1de8:	09 e1                	or     ecx,esp
    1dea:	09 02                	or     DWORD PTR [rdx],eax
    1dec:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1df2:	b1 0a                	mov    cl,0xa
    1df4:	b1 0a                	mov    cl,0xa
    1df6:	02 30                	add    dh,BYTE PTR [rax]
    1df8:	9f                   	lahf
    1df9:	00 00                	add    BYTE PTR [rax],al
    1dfb:	00 00                	add    BYTE PTR [rax],al
    1dfd:	00 00                	add    BYTE PTR [rax],al
    1dff:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
    1e02:	0a f1                	or     dh,cl
    1e04:	0a 02                	or     al,BYTE PTR [rdx]
    1e06:	30 9f 04 93 10 d4    	xor    BYTE PTR [rdi-0x2bef6cfc],bl
    1e0c:	10 02                	adc    BYTE PTR [rdx],al
    1e0e:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1e14:	10 02                	adc    BYTE PTR [rdx],al
    1e16:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1e1c:	b3 0b                	mov    bl,0xb
    1e1e:	b9 0b 02 52 f0       	mov    ecx,0xf052020b
    1e23:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1e26:	04 a7                	add    al,0xa7
    1e28:	0b b6 0b 0e 70 00    	or     esi,DWORD PTR [rsi+0x700e0b]
    1e2e:	76 a8                	jbe    1dd8 <_Z13sumHashString8string_t+0x158>
    1e30:	7f 06                	jg     1e38 <_Z17adler32HashString8string_t+0x48>
    1e32:	1c 0a                	sbb    al,0xa
    1e34:	e8 03 1b 9f 93       	call   ffffffff939f393c <_end+0xffffffff939ed924>
    1e39:	08 00                	or     BYTE PTR [rax],al
    1e3b:	01 00                	add    DWORD PTR [rax],eax
    1e3d:	04 fe                	add    al,0xfe
    1e3f:	0a fe                	or     bh,dh
    1e41:	0a 02                	or     al,BYTE PTR [rdx]
    1e43:	30 9f 00 01 08 04    	xor    BYTE PTR [rdi+0x4080100],bl
    1e49:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1e4a:	0b a7 0b 06 a0 0f    	or     esp,DWORD PTR [rdi+0xfa0060b]
    1e50:	9f                   	lahf
    1e51:	00 00                	add    BYTE PTR [rax],al
    1e53:	00 00                	add    BYTE PTR [rax],al
    1e55:	01 08                	add    DWORD PTR [rax],ecx
    1e57:	04 a7                	add    al,0xa7
    1e59:	0b a7 0b 06 a0 22    	or     esp,DWORD PTR [rdi+0x22a0060b]
    1e5f:	9f                   	lahf
    1e60:	00 00                	add    BYTE PTR [rax],al
    1e62:	00 00                	add    BYTE PTR [rax],al
    1e64:	02 03                	add    al,BYTE PTR [rbx]
    1e66:	04 a7                	add    al,0xa7
    1e68:	0b a7 0b 06 a0 0f    	or     esp,DWORD PTR [rdi+0xfa0060b]
    1e6e:	9f                   	lahf
    1e6f:	00 00                	add    BYTE PTR [rax],al
    1e71:	00 00                	add    BYTE PTR [rax],al
    1e73:	03 05 04 a7 0b a7    	add    eax,DWORD PTR [rip+0xffffffffa70ba704]        # ffffffffa70bc57d <_end+0xffffffffa70b6565>
    1e79:	0b 06                	or     eax,DWORD PTR [rsi]
    1e7b:	a0 22 9f 00 00 00 00 	movabs al,ds:0x9f22
    1e82:	00 00 
    1e84:	00 00                	add    BYTE PTR [rax],al
    1e86:	00 00                	add    BYTE PTR [rax],al
    1e88:	00 00                	add    BYTE PTR [rax],al
    1e8a:	04 a2                	add    al,0xa2
    1e8c:	0c b6                	or     al,0xb6
    1e8e:	0c 02                	or     al,0x2
    1e90:	30 9f 04 d4 0c e1    	xor    BYTE PTR [rdi-0x1ef32bfc],bl
    1e96:	0c 01                	or     al,0x1
    1e98:	52                   	push   rdx
    1e99:	04 b8                	add    al,0xb8
    1e9b:	10 d4                	adc    ah,dl
    1e9d:	10 02                	adc    BYTE PTR [rdx],al
    1e9f:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1ea5:	10 02                	adc    BYTE PTR [rdx],al
    1ea7:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1ead:	d4                   	(bad)
    1eae:	0c e2                	or     al,0xe2
    1eb0:	0c 0a                	or     al,0xa
    1eb2:	03 04 42             	add    eax,DWORD PTR [rdx+rax*2]
    1eb5:	00 00                	add    BYTE PTR [rax],al
    1eb7:	00 00                	add    BYTE PTR [rax],al
    1eb9:	00 00                	add    BYTE PTR [rax],al
    1ebb:	9f                   	lahf
    1ebc:	00 02                	add    BYTE PTR [rdx],al
    1ebe:	00 00                	add    BYTE PTR [rax],al
    1ec0:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1ec3:	0c e1                	or     al,0xe1
    1ec5:	0c 01                	or     al,0x1
    1ec7:	55                   	push   rbp
    1ec8:	04 e1                	add    al,0xe1
    1eca:	0c e2                	or     al,0xe2
    1ecc:	0c 03                	or     al,0x3
    1ece:	76 f8                	jbe    1ec8 <_Z13searchElementP4List8string_t.part.0+0x8>
    1ed0:	7e 00                	jle    1ed2 <_Z13searchElementP4List8string_t.part.0+0x12>
    1ed2:	02 00                	add    al,BYTE PTR [rax]
    1ed4:	02 00                	add    al,BYTE PTR [rax]
    1ed6:	04 82                	add    al,0x82
    1ed8:	0c a2                	or     al,0xa2
    1eda:	0c 0a                	or     al,0xa
    1edc:	03 e5                	add    esp,ebp
    1ede:	41 00 00             	add    BYTE PTR [r8],al
    1ee1:	00 00                	add    BYTE PTR [rax],al
    1ee3:	00 00                	add    BYTE PTR [rax],al
    1ee5:	9f                   	lahf
    1ee6:	04 9b                	add    al,0x9b
    1ee8:	10 b8 10 0a 03 e5    	adc    BYTE PTR [rax-0x1afcf5f0],bh
    1eee:	41 00 00             	add    BYTE PTR [r8],al
    1ef1:	00 00                	add    BYTE PTR [rax],al
    1ef3:	00 00                	add    BYTE PTR [rax],al
    1ef5:	9f                   	lahf
    1ef6:	00 02                	add    BYTE PTR [rdx],al
    1ef8:	00 02                	add    BYTE PTR [rdx],al
    1efa:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1efd:	0c a2                	or     al,0xa2
    1eff:	0c 03                	or     al,0x3
    1f01:	76 f8                	jbe    1efb <_Z8listCtorv+0xb>
    1f03:	7e 04                	jle    1f09 <_Z8listCtorv+0x19>
    1f05:	9b                   	fwait
    1f06:	10 b8 10 03 76 f8    	adc    BYTE PTR [rax-0x789fcf0],bh
    1f0c:	7e 00                	jle    1f0e <_Z8listCtorv+0x1e>
    1f0e:	01 00                	add    DWORD PTR [rax],eax
    1f10:	00 00                	add    BYTE PTR [rax],al
    1f12:	01 00                	add    DWORD PTR [rax],eax
    1f14:	00 00                	add    BYTE PTR [rax],al
    1f16:	00 00                	add    BYTE PTR [rax],al
    1f18:	00 00                	add    BYTE PTR [rax],al
    1f1a:	04 8d                	add    al,0x8d
    1f1c:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1f21:	04 8b                	add    al,0x8b
    1f23:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1f29:	c5 10 fd             	(bad)
    1f2c:	10 01                	adc    BYTE PTR [rcx],al
    1f2e:	66 04 fd             	data16 add al,0xfd
    1f31:	10 fe                	adc    dh,bh
    1f33:	10 0e                	adc    BYTE PTR [rsi],cl
    1f35:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1f36:	2e 08 00             	cs or  BYTE PTR [rax],al
    1f39:	00 00                	add    BYTE PTR [rax],al
    1f3b:	00 00                	add    BYTE PTR [rax],al
    1f3d:	00 00                	add    BYTE PTR [rax],al
    1f3f:	00 12                	add    BYTE PTR [rdx],dl
    1f41:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1f47:	11 01                	adc    DWORD PTR [rcx],eax
    1f49:	66 04 ab             	data16 add al,0xab
    1f4c:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1f52:	7f 00                	jg     1f54 <_Z12pushListElemP4List8string_t+0x4>
    1f54:	01 00                	add    DWORD PTR [rax],eax
    1f56:	00 00                	add    BYTE PTR [rax],al
    1f58:	00 00                	add    BYTE PTR [rax],al
    1f5a:	00 00                	add    BYTE PTR [rax],al
    1f5c:	01 00                	add    DWORD PTR [rax],eax
    1f5e:	00 00                	add    BYTE PTR [rax],al
    1f60:	00 00                	add    BYTE PTR [rax],al
    1f62:	00 00                	add    BYTE PTR [rax],al
    1f64:	04 8d                	add    al,0x8d
    1f66:	0d 9c 0d 01 52       	or     eax,0x52010d9c
    1f6b:	04 9c                	add    al,0x9c
    1f6d:	0d a8 0d 01 50       	or     eax,0x50010da8
    1f72:	04 a8                	add    al,0xa8
    1f74:	0d df 0e 03 76       	or     eax,0x76030edf
    1f79:	8c 7f 04             	mov    WORD PTR [rdi+0x4],?
    1f7c:	8b 10                	mov    edx,DWORD PTR [rax]
    1f7e:	93                   	xchg   ebx,eax
    1f7f:	10 03                	adc    BYTE PTR [rbx],al
    1f81:	76 8c                	jbe    1f0f <_Z8listCtorv+0x1f>
    1f83:	7f 04                	jg     1f89 <_Z12pushListElemP4List8string_t+0x39>
    1f85:	c5 10 d4             	(bad)
    1f88:	10 02                	adc    BYTE PTR [rdx],al
    1f8a:	30 9f 04 d4 10 df    	xor    BYTE PTR [rdi-0x20ef2bfc],bl
    1f90:	10 01                	adc    BYTE PTR [rcx],al
    1f92:	52                   	push   rdx
    1f93:	04 df                	add    al,0xdf
    1f95:	10 fe                	adc    dh,bh
    1f97:	10 02                	adc    BYTE PTR [rdx],al
    1f99:	30 9f 04 a2 11 b6    	xor    BYTE PTR [rdi-0x49ee5dfc],bl
    1f9f:	11 03                	adc    DWORD PTR [rbx],eax
    1fa1:	76 8c                	jbe    1f2f <_Z8listCtorv+0x3f>
    1fa3:	7f 00                	jg     1fa5 <_Z12pushListElemP4List8string_t+0x55>
    1fa5:	01 00                	add    DWORD PTR [rax],eax
    1fa7:	00 00                	add    BYTE PTR [rax],al
    1fa9:	01 00                	add    DWORD PTR [rax],eax
    1fab:	00 00                	add    BYTE PTR [rax],al
    1fad:	04 8d                	add    al,0x8d
    1faf:	0d df 0e 03 76       	or     eax,0x76030edf
    1fb4:	90                   	nop
    1fb5:	7f 04                	jg     1fbb <_Z12pushListElemP4List8string_t+0x6b>
    1fb7:	8b 10                	mov    edx,DWORD PTR [rax]
    1fb9:	93                   	xchg   ebx,eax
    1fba:	10 01                	adc    BYTE PTR [rcx],al
    1fbc:	52                   	push   rdx
    1fbd:	04 c5                	add    al,0xc5
    1fbf:	10 fe                	adc    dh,bh
    1fc1:	10 03                	adc    BYTE PTR [rbx],al
    1fc3:	76 90                	jbe    1f55 <_Z12pushListElemP4List8string_t+0x5>
    1fc5:	7f 04                	jg     1fcb <_Z12pushListElemP4List8string_t+0x7b>
    1fc7:	a2 11 b6 11 03 76 90 	movabs ds:0x7f90760311b611,al
    1fce:	7f 00 
    1fd0:	00 00                	add    BYTE PTR [rax],al
    1fd2:	00 00                	add    BYTE PTR [rax],al
    1fd4:	00 00                	add    BYTE PTR [rax],al
    1fd6:	00 02                	add    BYTE PTR [rdx],al
    1fd8:	00 01                	add    BYTE PTR [rcx],al
    1fda:	00 00                	add    BYTE PTR [rax],al
    1fdc:	04 af                	add    al,0xaf
    1fde:	0d c4 0d 01 61       	or     eax,0x61010dc4
    1fe3:	04 de                	add    al,0xde
    1fe5:	0d f4 0d 01 61       	or     eax,0x61010df4
    1fea:	04 fe                	add    al,0xfe
    1fec:	0d 99 0e 01 61       	or     eax,0x61010e99
    1ff1:	04 a1                	add    al,0xa1
    1ff3:	0e                   	(bad)
    1ff4:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    1ff7:	61                   	(bad)
    1ff8:	04 f3                	add    al,0xf3
    1ffa:	0e                   	(bad)
    1ffb:	f3 0e                	repz (bad)
    1ffd:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    2000:	8b 10                	mov    edx,DWORD PTR [rax]
    2002:	93                   	xchg   ebx,eax
    2003:	10 01                	adc    BYTE PTR [rcx],al
    2005:	61                   	(bad)
    2006:	00 00                	add    BYTE PTR [rax],al
    2008:	00 00                	add    BYTE PTR [rax],al
    200a:	00 00                	add    BYTE PTR [rax],al
    200c:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    200f:	0e                   	(bad)
    2010:	e3 0e                	jrcxz  2020 <_Z12pushListElemP4List8string_t+0xd0>
    2012:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    2015:	cf                   	iret
    2016:	10 d4                	adc    ah,dl
    2018:	10 01                	adc    BYTE PTR [rcx],al
    201a:	61                   	(bad)
    201b:	04 a2                	add    al,0xa2
    201d:	11 ab 11 01 61 00    	adc    DWORD PTR [rbx+0x610111],ebp
    2023:	02 00                	add    al,BYTE PTR [rax]
    2025:	04 df                	add    al,0xdf
    2027:	10 fe                	adc    dh,bh
    2029:	10 02                	adc    BYTE PTR [rdx],al
    202b:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    2031:	f3 0e                	repz (bad)
    2033:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    2035:	0a 03                	or     al,BYTE PTR [rbx]
    2037:	0d 42 00 00 00       	or     eax,0x42
    203c:	00 00                	add    BYTE PTR [rax],al
    203e:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    2044:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    2046:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2047:	0f 0a                	(bad)
    2049:	03 2b                	add    ebp,DWORD PTR [rbx]
    204b:	42 00 00             	rex.X add BYTE PTR [rax],al
    204e:	00 00                	add    BYTE PTR [rax],al
    2050:	00 00                	add    BYTE PTR [rax],al
    2052:	9f                   	lahf
    2053:	00 02                	add    BYTE PTR [rdx],al
    2055:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    2058:	0f d2 0f             	psrld  mm1,QWORD PTR [rdi]
    205b:	0a 03                	or     al,BYTE PTR [rbx]
    205d:	49                   	rex.WB
    205e:	42 00 00             	rex.X add BYTE PTR [rax],al
    2061:	00 00                	add    BYTE PTR [rax],al
    2063:	00 00                	add    BYTE PTR [rax],al
    2065:	9f                   	lahf
	...
    2072:	00 00                	add    BYTE PTR [rax],al
    2074:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    2077:	51                   	push   rcx
    2078:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    207b:	51                   	push   rcx
    207c:	ed                   	in     eax,dx
    207d:	07                   	(bad)
    207e:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
    2081:	ed                   	in     eax,dx
    2082:	07                   	(bad)
    2083:	f7 07 04 a3 01 55    	test   DWORD PTR [rdi],0x5501a304
    2089:	9f                   	lahf
    208a:	04 f7                	add    al,0xf7
    208c:	07                   	(bad)
    208d:	af                   	scas   eax,DWORD PTR es:[rdi]
    208e:	08 01                	or     BYTE PTR [rcx],al
    2090:	5d                   	pop    rbp
    2091:	04 af                	add    al,0xaf
    2093:	08 c9                	or     cl,cl
    2095:	08 01                	or     BYTE PTR [rcx],al
    2097:	55                   	push   rbp
    2098:	04 c9                	add    al,0xc9
    209a:	08 ce                	or     dh,cl
    209c:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    209f:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    20a2:	04 ce                	add    al,0xce
    20a4:	08 d3                	or     bl,dl
    20a6:	08 01                	or     BYTE PTR [rcx],al
    20a8:	5d                   	pop    rbp
	...
    20b1:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    20b4:	55                   	push   rbp
    20b5:	01 54 04 55          	add    DWORD PTR [rsp+rax*1+0x55],edx
    20b9:	af                   	scas   eax,DWORD PTR es:[rdi]
    20ba:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    20bd:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    20c1:	af                   	scas   eax,DWORD PTR es:[rdi]
    20c2:	08 c2                	or     dl,al
    20c4:	08 01                	or     BYTE PTR [rcx],al
    20c6:	54                   	push   rsp
    20c7:	04 c2                	add    al,0xc2
    20c9:	08 d3                	or     bl,dl
    20cb:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    20ce:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    20e2:	04 00                	add    al,0x0
    20e4:	46 06                	rex.RX (bad)
    20e6:	51                   	push   rcx
    20e7:	93                   	xchg   ebx,eax
    20e8:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    20eb:	08 04 49             	or     BYTE PTR [rcx+rcx*2],al
    20ee:	5e                   	pop    rsi
    20ef:	06                   	(bad)
    20f0:	53                   	push   rbx
    20f1:	93                   	xchg   ebx,eax
    20f2:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    20f5:	08 04 80             	or     BYTE PTR [rax+rax*4],al
    20f8:	01 ae 01 06 53 93    	add    DWORD PTR [rsi-0x6cacf9ff],ebp
    20fe:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2101:	08 04 91             	or     BYTE PTR [rcx+rdx*4],al
    2104:	02 bc 05 06 53 93 08 	add    bh,BYTE PTR [rbp+rax*1+0x8935306]
    210b:	5e                   	pop    rsi
    210c:	93                   	xchg   ebx,eax
    210d:	08 04 b7             	or     BYTE PTR [rdi+rsi*4],al
    2110:	06                   	(bad)
    2111:	e7 07                	out    0x7,eax
    2113:	06                   	(bad)
    2114:	53                   	push   rbx
    2115:	93                   	xchg   ebx,eax
    2116:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2119:	08 04 f7             	or     BYTE PTR [rdi+rsi*8],al
    211c:	07                   	(bad)
    211d:	af                   	scas   eax,DWORD PTR es:[rdi]
    211e:	08 06                	or     BYTE PTR [rsi],al
    2120:	53                   	push   rbx
    2121:	93                   	xchg   ebx,eax
    2122:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2125:	08 04 af             	or     BYTE PTR [rdi+rbp*4],al
    2128:	08 bb 08 06 51 93    	or     BYTE PTR [rbx-0x6caef9f8],bh
    212e:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    2131:	08 04 ce             	or     BYTE PTR [rsi+rcx*8],al
    2134:	08 d3                	or     bl,dl
    2136:	08 06                	or     BYTE PTR [rsi],al
    2138:	53                   	push   rbx
    2139:	93                   	xchg   ebx,eax
    213a:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    213d:	08 00                	or     BYTE PTR [rax],al
    213f:	02 00                	add    al,BYTE PTR [rax]
	...
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	04 80                	add    al,0x80
    2151:	01 b9 01 06 9e 04    	add    DWORD PTR [rcx+0x49e0601],edi
    2157:	00 00                	add    BYTE PTR [rax],al
    2159:	00 00                	add    BYTE PTR [rax],al
    215b:	04 da                	add    al,0xda
    215d:	01 e9                	add    ecx,ebp
    215f:	01 01                	add    DWORD PTR [rcx],eax
    2161:	63 04 e9             	movsxd eax,DWORD PTR [rcx+rbp*8]
    2164:	01 88 02 03 76 90    	add    DWORD PTR [rax-0x6f89fcfe],ecx
    216a:	7f 04                	jg     2170 <_Z13searchElementP4List8string_t+0x10>
    216c:	88 02                	mov    BYTE PTR [rdx],al
    216e:	91                   	xchg   ecx,eax
    216f:	02 01                	add    al,BYTE PTR [rcx]
    2171:	63 04 95 02 b3 02 01 	movsxd eax,DWORD PTR [rdx*4+0x102b302]
    2178:	63 04 b3             	movsxd eax,DWORD PTR [rbx+rsi*4]
    217b:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    2181:	7f 04                	jg     2187 <_Z13searchElementP4List8string_t+0x27>
    2183:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    2189:	90                   	nop
    218a:	7f 04                	jg     2190 <_Z13searchElementP4List8string_t+0x30>
    218c:	95                   	xchg   ebp,eax
    218d:	08 a0 08 03 76 90    	or     BYTE PTR [rax-0x6f89fcf8],ah
    2193:	7f 00                	jg     2195 <_Z13searchElementP4List8string_t+0x35>
    2195:	00 00                	add    BYTE PTR [rax],al
    2197:	04 56                	add    al,0x56
    2199:	65 02 30             	add    dh,BYTE PTR gs:[rax]
    219c:	9f                   	lahf
    219d:	00 00                	add    BYTE PTR [rax],al
    219f:	00 00                	add    BYTE PTR [rax],al
    21a1:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
    21a4:	01 b9 01 02 30 9f    	add    DWORD PTR [rcx-0x60cffdff],edi
    21aa:	04 da                	add    al,0xda
    21ac:	01 e9                	add    ecx,ebp
    21ae:	01 01                	add    DWORD PTR [rcx],eax
    21b0:	52                   	push   rdx
    21b1:	00 02                	add    BYTE PTR [rdx],al
    21b3:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    21b6:	01 ea                	add    edx,ebp
    21b8:	01 0a                	add    DWORD PTR [rdx],ecx
    21ba:	03 aa 41 00 00 00    	add    ebp,DWORD PTR [rdx+0x41]
    21c0:	00 00                	add    BYTE PTR [rax],al
    21c2:	00 9f 00 02 00 00    	add    BYTE PTR [rdi+0x200],bl
    21c8:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    21cb:	01 e9                	add    ecx,ebp
    21cd:	01 01                	add    DWORD PTR [rcx],eax
    21cf:	55                   	push   rbp
    21d0:	04 e9                	add    al,0xe9
    21d2:	01 ea                	add    edx,ebp
    21d4:	01 01                	add    DWORD PTR [rcx],eax
    21d6:	5d                   	pop    rbp
    21d7:	00 03                	add    BYTE PTR [rbx],al
    21d9:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    21dc:	01 99 01 0a 03 90    	add    DWORD PTR [rcx-0x6ffcf5ff],ebx
    21e2:	41 00 00             	add    BYTE PTR [r8],al
    21e5:	00 00                	add    BYTE PTR [rax],al
    21e7:	00 00                	add    BYTE PTR [rax],al
    21e9:	9f                   	lahf
    21ea:	00 03                	add    BYTE PTR [rbx],al
    21ec:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    21ef:	01 99 01 01 5d 00    	add    DWORD PTR [rcx+0x5d0101],ebx
    21f5:	01 00                	add    DWORD PTR [rax],eax
    21f7:	04 95                	add    al,0x95
    21f9:	02 b4 02 0a 03 b1 41 	add    dh,BYTE PTR [rdx+rax*1+0x41b1030a]
    2200:	00 00                	add    BYTE PTR [rax],al
    2202:	00 00                	add    BYTE PTR [rax],al
    2204:	00 00                	add    BYTE PTR [rax],al
    2206:	9f                   	lahf
    2207:	00 02                	add    BYTE PTR [rdx],al
    2209:	00 00                	add    BYTE PTR [rax],al
    220b:	00 00                	add    BYTE PTR [rax],al
    220d:	00 00                	add    BYTE PTR [rax],al
    220f:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    2212:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    2218:	7f 04                	jg     221e <_Z10debugPrintP4List+0x1e>
    221a:	92                   	xchg   edx,eax
    221b:	03 ad 07 01 63 04    	add    ebp,DWORD PTR [rbp+0x4630107]
    2221:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    2227:	90                   	nop
    2228:	7f 04                	jg     222e <_Z10debugPrintP4List+0x2e>
    222a:	8a 08                	mov    cl,BYTE PTR [rax]
    222c:	a8 08                	test   al,0x8
    222e:	01 63 00             	add    DWORD PTR [rbx+0x0],esp
    2231:	02 02                	add    al,BYTE PTR [rdx]
    2233:	00 00                	add    BYTE PTR [rax],al
    2235:	04 b4                	add    al,0xb4
    2237:	02 b1 07 04 76 b0    	add    dh,BYTE PTR [rcx-0x4f89fbf9]
    223d:	7f 9f                	jg     21de <_Z8listDtorP4List+0x1e>
    223f:	04 f7                	add    al,0xf7
    2241:	07                   	(bad)
    2242:	af                   	scas   eax,DWORD PTR es:[rdi]
    2243:	08 04 76             	or     BYTE PTR [rsi+rsi*2],al
    2246:	b0 7f                	mov    al,0x7f
    2248:	9f                   	lahf
    2249:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    2258:	04 b4                	add    al,0xb4
    225a:	02 92 03 06 9e 04    	add    dl,BYTE PTR [rdx+0x49e0603]
    2260:	00 00                	add    BYTE PTR [rax],al
    2262:	00 00                	add    BYTE PTR [rax],al
    2264:	04 92                	add    al,0x92
    2266:	03 c8                	add    ecx,eax
    2268:	04 01                	add    al,0x1
    226a:	68 04 81 05 9c       	push   0xffffffff9c058104
    226f:	05 01 68 04 ac       	add    eax,0xac046801
    2274:	05 a3 07 01 68       	add    eax,0x680107a3
    2279:	04 f7                	add    al,0xf7
    227b:	07                   	(bad)
    227c:	8a 08                	mov    cl,BYTE PTR [rax]
    227e:	06                   	(bad)
    227f:	9e                   	sahf
    2280:	04 00                	add    al,0x0
    2282:	00 00                	add    BYTE PTR [rax],al
    2284:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
    2287:	08 95 08 01 68 04    	or     BYTE PTR [rbp+0x4680108],dl
    228d:	95                   	xchg   ebp,eax
    228e:	08 a0 08 06 9e 04    	or     BYTE PTR [rax+0x49e0608],ah
    2294:	00 00                	add    BYTE PTR [rax],al
    2296:	00 00                	add    BYTE PTR [rax],al
    2298:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    229b:	02 00                	add    al,BYTE PTR [rax]
    229d:	00 00                	add    BYTE PTR [rax],al
    229f:	02 00                	add    al,BYTE PTR [rax]
    22a1:	00 00                	add    BYTE PTR [rax],al
    22a3:	00 00                	add    BYTE PTR [rax],al
    22a5:	04 b4                	add    al,0xb4
    22a7:	02 92 03 02 30 9f    	add    dl,BYTE PTR [rdx-0x60cffdfd]
    22ad:	04 d9                	add    al,0xd9
    22af:	06                   	(bad)
    22b0:	e1 06                	loope  22b8 <_Z10debugPrintP4List+0xb8>
    22b2:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    22b5:	e1 06                	loope  22bd <_Z10debugPrintP4List+0xbd>
    22b7:	e4 06                	in     al,0x6
    22b9:	03 70 01             	add    esi,DWORD PTR [rax+0x1]
    22bc:	9f                   	lahf
    22bd:	04 f9                	add    al,0xf9
    22bf:	06                   	(bad)
    22c0:	81 07 01 50 04 f7    	add    DWORD PTR [rdi],0xf7045001
    22c6:	07                   	(bad)
    22c7:	8a 08                	mov    cl,BYTE PTR [rax]
    22c9:	02 30                	add    dh,BYTE PTR [rax]
    22cb:	9f                   	lahf
    22cc:	04 95                	add    al,0x95
    22ce:	08 a0 08 02 30 9f    	or     BYTE PTR [rax-0x60cffdf8],ah
    22d4:	00 01                	add    BYTE PTR [rcx],al
    22d6:	00 00                	add    BYTE PTR [rax],al
    22d8:	00 01                	add    BYTE PTR [rcx],al
    22da:	00 04 dd 06 e1 06 0f 	add    BYTE PTR [rbx*8+0xf06e106],al
    22e1:	71 00                	jno    22e3 <_Z10debugPrintP4List+0xe3>
    22e3:	0c ff                	or     al,0xff
    22e5:	ff                   	(bad)
    22e6:	ff                   	(bad)
    22e7:	ff 1a                	call   FWORD PTR [rdx]
    22e9:	48 1e                	rex.W (bad)
    22eb:	75 00                	jne    22ed <_Z10debugPrintP4List+0xed>
    22ed:	22 23                	and    ah,BYTE PTR [rbx]
    22ef:	10 04 e1             	adc    BYTE PTR [rcx+riz*8],al
    22f2:	06                   	(bad)
    22f3:	e4 06                	in     al,0x6
    22f5:	0f 70 01 0c          	pshufw mm0,QWORD PTR [rcx],0xc
    22f9:	ff                   	(bad)
    22fa:	ff                   	(bad)
    22fb:	ff                   	(bad)
    22fc:	ff 1a                	call   FWORD PTR [rdx]
    22fe:	48 1e                	rex.W (bad)
    2300:	75 00                	jne    2302 <_Z10debugPrintP4List+0x102>
    2302:	22 23                	and    ah,BYTE PTR [rbx]
    2304:	10 04 fd 06 81 07 0f 	adc    BYTE PTR [rdi*8+0xf078106],al
    230b:	70 00                	jo     230d <_Z10debugPrintP4List+0x10d>
    230d:	0c ff                	or     al,0xff
    230f:	ff                   	(bad)
    2310:	ff                   	(bad)
    2311:	ff 1a                	call   FWORD PTR [rdx]
    2313:	48 1e                	rex.W (bad)
    2315:	75 00                	jne    2317 <_Z10debugPrintP4List+0x117>
    2317:	22 23                	and    ah,BYTE PTR [rbx]
    2319:	10 00                	adc    BYTE PTR [rax],al
    231b:	00 00                	add    BYTE PTR [rax],al
    231d:	00 00                	add    BYTE PTR [rax],al
    231f:	00 00                	add    BYTE PTR [rax],al
    2321:	04 a3                	add    al,0xa3
    2323:	07                   	(bad)
    2324:	b1 07                	mov    cl,0x7
    2326:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    2329:	88 08                	mov    BYTE PTR [rax],cl
    232b:	8a 08                	mov    cl,BYTE PTR [rax]
    232d:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    2330:	a0 08 a8 08 01 68 00 	movabs al,ds:0x200680108a808
    2337:	02 00 
    2339:	04 b1                	add    al,0xb1
    233b:	07                   	(bad)
    233c:	cb                   	retf
    233d:	07                   	(bad)
    233e:	0a 03                	or     al,BYTE PTR [rbx]
    2340:	cb                   	retf
    2341:	41 00 00             	add    BYTE PTR [r8],al
    2344:	00 00                	add    BYTE PTR [rax],al
    2346:	00 00                	add    BYTE PTR [rax],al
    2348:	9f                   	lahf
	...
    2355:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    2358:	12 ce                	adc    cl,dh
    235a:	12 01                	adc    al,BYTE PTR [rcx]
    235c:	55                   	push   rbp
    235d:	04 ce                	add    al,0xce
    235f:	12 fb                	adc    bh,bl
    2361:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    2364:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2367:	04 fb                	add    al,0xfb
    2369:	20 95 21 01 55 04    	and    BYTE PTR [rbp+0x4550121],dl
    236f:	95                   	xchg   ebp,eax
    2370:	21 9a 21 04 a3 01    	and    DWORD PTR [rdx+0x1a30421],ebx
    2376:	55                   	push   rbp
    2377:	9f                   	lahf
    2378:	04 9a                	add    al,0x9a
    237a:	21 b4 21 01 55 04 b4 	and    DWORD PTR [rcx+riz*1-0x4bfbaaff],esi
    2381:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    2387:	55                   	push   rbp
    2388:	9f                   	lahf
	...
    2399:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    239c:	12 d6                	adc    dl,dh
    239e:	12 01                	adc    al,BYTE PTR [rcx]
    23a0:	54                   	push   rsp
    23a1:	04 d6                	add    al,0xd6
    23a3:	12 fe                	adc    bh,dh
    23a5:	14 01                	adc    al,0x1
    23a7:	5e                   	pop    rsi
    23a8:	04 fe                	add    al,0xfe
    23aa:	14 81                	adc    al,0x81
    23ac:	15 04 a3 01 54       	adc    eax,0x5401a304
    23b1:	9f                   	lahf
    23b2:	04 81                	add    al,0x81
    23b4:	15 fb 20 01 5e       	adc    eax,0x5e0120fb
    23b9:	04 fb                	add    al,0xfb
    23bb:	20 8e 21 01 54 04    	and    BYTE PTR [rsi+0x4540121],cl
    23c1:	8e 21                	mov    fs,WORD PTR [rcx]
    23c3:	9a                   	(bad)
    23c4:	21 04 a3             	and    DWORD PTR [rbx+riz*4],eax
    23c7:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    23cb:	9a                   	(bad)
    23cc:	21 ad 21 01 54 04    	and    DWORD PTR [rbp+0x4540121],ebp
    23d2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    23d3:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    23d9:	54                   	push   rsp
    23da:	9f                   	lahf
	...
    23ef:	00 00                	add    BYTE PTR [rax],al
    23f1:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    23f4:	12 e3                	adc    ah,bl
    23f6:	12 01                	adc    al,BYTE PTR [rcx]
    23f8:	51                   	push   rcx
    23f9:	04 e3                	add    al,0xe3
    23fb:	12 c4                	adc    al,ah
    23fd:	14 01                	adc    al,0x1
    23ff:	53                   	push   rbx
    2400:	04 c4                	add    al,0xc4
    2402:	14 81                	adc    al,0x81
    2404:	15 04 a3 01 51       	adc    eax,0x5101a304
    2409:	9f                   	lahf
    240a:	04 81                	add    al,0x81
    240c:	15 d5 16 01 53       	adc    eax,0x530116d5
    2411:	04 d5                	add    al,0xd5
    2413:	16                   	(bad)
    2414:	ae                   	scas   al,BYTE PTR es:[rdi]
    2415:	1b 04 a3             	sbb    eax,DWORD PTR [rbx+riz*4]
    2418:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    241b:	04 ae                	add    al,0xae
    241d:	1b f6                	sbb    esi,esi
    241f:	20 01                	and    BYTE PTR [rcx],al
    2421:	53                   	push   rbx
    2422:	04 f6                	add    al,0xf6
    2424:	20 fb                	and    bl,bh
    2426:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    2429:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    242c:	04 fb                	add    al,0xfb
    242e:	20 87 21 01 51 04    	and    BYTE PTR [rdi+0x4510121],al
    2434:	87 21                	xchg   DWORD PTR [rcx],esp
    2436:	9a                   	(bad)
    2437:	21 01                	and    DWORD PTR [rcx],eax
    2439:	53                   	push   rbx
    243a:	04 9a                	add    al,0x9a
    243c:	21 a6 21 01 51 04    	and    DWORD PTR [rsi+0x4510121],esp
    2442:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2443:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    2449:	51                   	push   rcx
    244a:	9f                   	lahf
	...
    2453:	00 00                	add    BYTE PTR [rax],al
    2455:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2458:	12 f7                	adc    dh,bh
    245a:	12 01                	adc    al,BYTE PTR [rcx]
    245c:	50                   	push   rax
    245d:	04 f7                	add    al,0xf7
    245f:	12 a0 13 01 5f 04    	adc    ah,BYTE PTR [rax+0x45f0113]
    2465:	a0 13 81 15 03 91 a0 	movabs al,ds:0x47fa09103158113
    246c:	7f 04 
    246e:	81 15 d5 15 01 5f 04 	adc    DWORD PTR [rip+0x5f0115d5],0xfb15d504        # 5f013a4d <_end+0x5f00da35>
    2475:	d5 15 fb 
    2478:	20 03                	and    BYTE PTR [rbx],al
    247a:	91                   	xchg   ecx,eax
    247b:	a0 7f 00 00 00 00 00 	movabs al,ds:0x7f
    2482:	00 00 
    2484:	00 00                	add    BYTE PTR [rax],al
    2486:	04 fe                	add    al,0xfe
    2488:	12 c4                	adc    al,ah
    248a:	14 01                	adc    al,0x1
    248c:	5c                   	pop    rsp
    248d:	04 81                	add    al,0x81
    248f:	15 95 17 01 5c       	adc    eax,0x5c011795
    2494:	04 95                	add    al,0x95
    2496:	17                   	(bad)
    2497:	ae                   	scas   al,BYTE PTR es:[rdi]
    2498:	1b 03                	sbb    eax,DWORD PTR [rbx]
    249a:	91                   	xchg   ecx,eax
    249b:	a8 7f                	test   al,0x7f
    249d:	04 ae                	add    al,0xae
    249f:	1b f6                	sbb    esi,esi
    24a1:	20 01                	and    BYTE PTR [rcx],al
    24a3:	5c                   	pop    rsp
	...
    24b8:	03 03                	add    eax,DWORD PTR [rbx]
    24ba:	00 00                	add    BYTE PTR [rax],al
    24bc:	00 00                	add    BYTE PTR [rax],al
    24be:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    24c1:	13 97 13 08 50 93    	adc    edx,DWORD PTR [rdi-0x6caff7ed]
    24c7:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24cb:	93                   	xchg   ebx,eax
    24cc:	04 04                	add    al,0x4
    24ce:	97                   	xchg   edi,eax
    24cf:	13 c4                	adc    eax,esp
    24d1:	14 08                	adc    al,0x8
    24d3:	56                   	push   rsi
    24d4:	93                   	xchg   ebx,eax
    24d5:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24d9:	93                   	xchg   ebx,eax
    24da:	04 04                	add    al,0x4
    24dc:	c4                   	(bad)
    24dd:	14 de                	adc    al,0xde
    24df:	14 05                	adc    al,0x5
    24e1:	56                   	push   rsi
    24e2:	93                   	xchg   ebx,eax
    24e3:	08 93 08 04 81 15    	or     BYTE PTR [rbx+0x15810408],dl
    24e9:	f6 15 08 56 93 08    	not    BYTE PTR [rip+0x8935608]        # 8937af7 <_end+0x8931adf>
    24ef:	5c                   	pop    rsp
    24f0:	93                   	xchg   ebx,eax
    24f1:	04 93                	add    al,0x93
    24f3:	04 04                	add    al,0x4
    24f5:	f6 15 95 17 08 56    	not    BYTE PTR [rip+0x56081795]        # 56083c90 <_end+0x5607dc78>
    24fb:	93                   	xchg   ebx,eax
    24fc:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2500:	93                   	xchg   ebx,eax
    2501:	04 04                	add    al,0x4
    2503:	95                   	xchg   ebp,eax
    2504:	17                   	(bad)
    2505:	ae                   	scas   al,BYTE PTR es:[rdi]
    2506:	1b 0a                	sbb    ecx,DWORD PTR [rdx]
    2508:	56                   	push   rsi
    2509:	93                   	xchg   ebx,eax
    250a:	08 91 a8 7f 93 04    	or     BYTE PTR [rcx+0x4937fa8],dl
    2510:	93                   	xchg   ebx,eax
    2511:	04 04                	add    al,0x4
    2513:	ae                   	scas   al,BYTE PTR es:[rdi]
    2514:	1b a2 1c 08 56 93    	sbb    esp,DWORD PTR [rdx-0x6ca9f7e4]
    251a:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    251e:	93                   	xchg   ebx,eax
    251f:	04 04                	add    al,0x4
    2521:	a2 1c 9a 1d 08 56 93 	movabs ds:0x5c089356081d9a1c,al
    2528:	08 5c 
    252a:	93                   	xchg   ebx,eax
    252b:	04 93                	add    al,0x93
    252d:	04 04                	add    al,0x4
    252f:	9a                   	(bad)
    2530:	1d 92 1e 08 56       	sbb    eax,0x56081e92
    2535:	93                   	xchg   ebx,eax
    2536:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    253a:	93                   	xchg   ebx,eax
    253b:	04 04                	add    al,0x4
    253d:	92                   	xchg   edx,eax
    253e:	1e                   	(bad)
    253f:	bf 1e 07 93 08       	mov    edi,0x893071e
    2544:	5c                   	pop    rsp
    2545:	93                   	xchg   ebx,eax
    2546:	04 93                	add    al,0x93
    2548:	04 04                	add    al,0x4
    254a:	bf 1e 8a 1f 08       	mov    edi,0x81f8a1e
    254f:	56                   	push   rsi
    2550:	93                   	xchg   ebx,eax
    2551:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2555:	93                   	xchg   ebx,eax
    2556:	04 04                	add    al,0x4
    2558:	8a 1f                	mov    bl,BYTE PTR [rdi]
    255a:	82                   	(bad)
    255b:	20 08                	and    BYTE PTR [rax],cl
    255d:	56                   	push   rsi
    255e:	93                   	xchg   ebx,eax
    255f:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2563:	93                   	xchg   ebx,eax
    2564:	04 04                	add    al,0x4
    2566:	82                   	(bad)
    2567:	20 f6                	and    dh,dh
    2569:	20 08                	and    BYTE PTR [rax],cl
    256b:	56                   	push   rsi
    256c:	93                   	xchg   ebx,eax
    256d:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2571:	93                   	xchg   ebx,eax
    2572:	04 00                	add    al,0x0
    2574:	01 00                	add    DWORD PTR [rax],eax
    2576:	04 81                	add    al,0x81
    2578:	15 97 15 06 a0       	adc    eax,0xa0061597
    257d:	b1 cc                	mov    cl,0xcc
    257f:	00 00                	add    BYTE PTR [rax],al
    2581:	00 00                	add    BYTE PTR [rax],al
    2583:	02 00                	add    al,BYTE PTR [rax]
    2585:	04 97                	add    al,0x97
    2587:	15 a3 15 06 a0       	adc    eax,0xa00615a3
    258c:	df cc                	(bad)
    258e:	00 00                	add    BYTE PTR [rax],al
    2590:	00 00                	add    BYTE PTR [rax],al
    2592:	02 00                	add    al,BYTE PTR [rax]
    2594:	04 a3                	add    al,0xa3
    2596:	15 af 15 06 a0       	adc    eax,0xa00615af
    259b:	ea                   	(bad)
    259c:	cc                   	int3
    259d:	00 00                	add    BYTE PTR [rax],al
    259f:	00 00                	add    BYTE PTR [rax],al
    25a1:	03 00                	add    eax,DWORD PTR [rax]
    25a3:	04 af                	add    al,0xaf
    25a5:	15 e5 15 01 5e       	adc    eax,0x5e0115e5
    25aa:	00 00                	add    BYTE PTR [rax],al
    25ac:	00 00                	add    BYTE PTR [rax],al
    25ae:	00 04 d5 15 dc 15 01 	add    BYTE PTR [rdx*8+0x115dc15],al
    25b5:	50                   	push   rax
    25b6:	04 dc                	add    al,0xdc
    25b8:	15 f6 15 01 5f       	adc    eax,0x5f0115f6
    25bd:	00 02                	add    BYTE PTR [rdx],al
    25bf:	00 04 e5 15 f1 15 06 	add    BYTE PTR [riz*8+0x615f115],al
    25c6:	a0 0e cd 00 00 00 00 	movabs al,ds:0x200000000cd0e
    25cd:	02 00 
    25cf:	04 82                	add    al,0x82
    25d1:	20 97 20 06 a0 b1    	and    BYTE PTR [rdi-0x4e5ff9e0],dl
    25d7:	cc                   	int3
    25d8:	00 00                	add    BYTE PTR [rax],al
    25da:	00 00                	add    BYTE PTR [rax],al
    25dc:	02 00                	add    al,BYTE PTR [rax]
    25de:	04 97                	add    al,0x97
    25e0:	20 9f 20 06 a0 32    	and    BYTE PTR [rdi+0x32a00620],bl
    25e6:	cd 00                	int    0x0
    25e8:	00 00                	add    BYTE PTR [rax],al
    25ea:	00 02                	add    BYTE PTR [rdx],al
    25ec:	00 04 9f             	add    BYTE PTR [rdi+rbx*4],al
    25ef:	20 ab 20 06 a0 ea    	and    BYTE PTR [rbx-0x155ff9e0],ch
    25f5:	cc                   	int3
    25f6:	00 00                	add    BYTE PTR [rax],al
    25f8:	00 00                	add    BYTE PTR [rax],al
    25fa:	03 00                	add    eax,DWORD PTR [rax]
    25fc:	04 ab                	add    al,0xab
    25fe:	20 e5                	and    ch,ah
    2600:	20 01                	and    BYTE PTR [rcx],al
    2602:	5e                   	pop    rsi
    2603:	00 00                	add    BYTE PTR [rax],al
    2605:	00 00                	add    BYTE PTR [rax],al
    2607:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    260a:	20 da                	and    dl,bl
    260c:	20 01                	and    BYTE PTR [rcx],al
    260e:	50                   	push   rax
    260f:	04 da                	add    al,0xda
    2611:	20 f6                	and    dh,dh
    2613:	20 03                	and    BYTE PTR [rbx],al
    2615:	91                   	xchg   ecx,eax
    2616:	a8 7f                	test   al,0x7f
    2618:	00 02                	add    BYTE PTR [rdx],al
    261a:	00 04 e5 20 f1 20 06 	add    BYTE PTR [riz*8+0x620f120],al
    2621:	a0 0e cd 00 00 00 00 	movabs al,ds:0x200000000cd0e
    2628:	02 00 
    262a:	04 8a                	add    al,0x8a
    262c:	1f                   	(bad)
    262d:	9f                   	lahf
    262e:	1f                   	(bad)
    262f:	06                   	(bad)
    2630:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    2637:	02 00 
    2639:	04 9f                	add    al,0x9f
    263b:	1f                   	(bad)
    263c:	ab                   	stos   DWORD PTR es:[rdi],eax
    263d:	1f                   	(bad)
    263e:	06                   	(bad)
    263f:	a0 41 cd 00 00 00 00 	movabs al,ds:0x200000000cd41
    2646:	02 00 
    2648:	04 ab                	add    al,0xab
    264a:	1f                   	(bad)
    264b:	b7 1f                	mov    bh,0x1f
    264d:	06                   	(bad)
    264e:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    2655:	03 00 
    2657:	04 b7                	add    al,0xb7
    2659:	1f                   	(bad)
    265a:	f1                   	int1
    265b:	1f                   	(bad)
    265c:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    265f:	00 00                	add    BYTE PTR [rax],al
    2661:	00 00                	add    BYTE PTR [rax],al
    2663:	04 dd                	add    al,0xdd
    2665:	1f                   	(bad)
    2666:	e6 1f                	out    0x1f,al
    2668:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    266b:	e6 1f                	out    0x1f,al
    266d:	82                   	(bad)
    266e:	20 03                	and    BYTE PTR [rbx],al
    2670:	91                   	xchg   ecx,eax
    2671:	a8 7f                	test   al,0x7f
    2673:	00 02                	add    BYTE PTR [rdx],al
    2675:	00 04 f1             	add    BYTE PTR [rcx+rsi*8],al
    2678:	1f                   	(bad)
    2679:	fd                   	std
    267a:	1f                   	(bad)
    267b:	06                   	(bad)
    267c:	a0 0e cd 00 00 00 00 	movabs al,ds:0x200000000cd0e
    2683:	02 00 
    2685:	04 92                	add    al,0x92
    2687:	1e                   	(bad)
    2688:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2689:	1e                   	(bad)
    268a:	06                   	(bad)
    268b:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    2692:	02 00 
    2694:	04 a7                	add    al,0xa7
    2696:	1e                   	(bad)
    2697:	b3 1e                	mov    bl,0x1e
    2699:	06                   	(bad)
    269a:	a0 4e cd 00 00 00 00 	movabs al,ds:0x200000000cd4e
    26a1:	02 00 
    26a3:	04 b3                	add    al,0xb3
    26a5:	1e                   	(bad)
    26a6:	bf 1e 06 a0 ea       	mov    edi,0xeaa0061e
    26ab:	cc                   	int3
    26ac:	00 00                	add    BYTE PTR [rax],al
    26ae:	00 00                	add    BYTE PTR [rax],al
    26b0:	03 00                	add    eax,DWORD PTR [rax]
    26b2:	04 bf                	add    al,0xbf
    26b4:	1e                   	(bad)
    26b5:	f9                   	stc
    26b6:	1e                   	(bad)
    26b7:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    26ba:	00 00                	add    BYTE PTR [rax],al
    26bc:	00 00                	add    BYTE PTR [rax],al
    26be:	04 e5                	add    al,0xe5
    26c0:	1e                   	(bad)
    26c1:	ee                   	out    dx,al
    26c2:	1e                   	(bad)
    26c3:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    26c6:	ee                   	out    dx,al
    26c7:	1e                   	(bad)
    26c8:	8a 1f                	mov    bl,BYTE PTR [rdi]
    26ca:	03 91 a8 7f 00 02    	add    edx,DWORD PTR [rcx+0x2007fa8]
    26d0:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
    26d3:	1e                   	(bad)
    26d4:	85 1f                	test   DWORD PTR [rdi],ebx
    26d6:	06                   	(bad)
    26d7:	a0 0e cd 00 00 00 00 	movabs al,ds:0x200000000cd0e
    26de:	02 00 
    26e0:	04 9a                	add    al,0x9a
    26e2:	1d af 1d 06 a0       	sbb    eax,0xa0061daf
    26e7:	b1 cc                	mov    cl,0xcc
    26e9:	00 00                	add    BYTE PTR [rax],al
    26eb:	00 00                	add    BYTE PTR [rax],al
    26ed:	02 00                	add    al,BYTE PTR [rax]
    26ef:	04 af                	add    al,0xaf
    26f1:	1d bb 1d 06 a0       	sbb    eax,0xa0061dbb
    26f6:	57                   	push   rdi
    26f7:	cd 00                	int    0x0
    26f9:	00 00                	add    BYTE PTR [rax],al
    26fb:	00 02                	add    BYTE PTR [rdx],al
    26fd:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
    2700:	1d c7 1d 06 a0       	sbb    eax,0xa0061dc7
    2705:	ea                   	(bad)
    2706:	cc                   	int3
    2707:	00 00                	add    BYTE PTR [rax],al
    2709:	00 00                	add    BYTE PTR [rax],al
    270b:	03 00                	add    eax,DWORD PTR [rax]
    270d:	04 c7                	add    al,0xc7
    270f:	1d 81 1e 01 5e       	sbb    eax,0x5e011e81
    2714:	00 00                	add    BYTE PTR [rax],al
    2716:	00 00                	add    BYTE PTR [rax],al
    2718:	00 04 ed 1d f6 1d 01 	add    BYTE PTR [rbp*8+0x11df61d],al
    271f:	50                   	push   rax
    2720:	04 f6                	add    al,0xf6
    2722:	1d 92 1e 03 91       	sbb    eax,0x91031e92
    2727:	a8 7f                	test   al,0x7f
    2729:	00 02                	add    BYTE PTR [rdx],al
    272b:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
    272e:	1e                   	(bad)
    272f:	8d 1e                	lea    ebx,[rsi]
    2731:	06                   	(bad)
    2732:	a0 0e cd 00 00 00 00 	movabs al,ds:0x200000000cd0e
    2739:	02 00 
    273b:	04 a2                	add    al,0xa2
    273d:	1c b7                	sbb    al,0xb7
    273f:	1c 06                	sbb    al,0x6
    2741:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    2748:	02 00 
    274a:	04 b7                	add    al,0xb7
    274c:	1c c3                	sbb    al,0xc3
    274e:	1c 06                	sbb    al,0x6
    2750:	a0 64 cd 00 00 00 00 	movabs al,ds:0x200000000cd64
    2757:	02 00 
    2759:	04 c3                	add    al,0xc3
    275b:	1c cf                	sbb    al,0xcf
    275d:	1c 06                	sbb    al,0x6
    275f:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    2766:	03 00 
    2768:	04 cf                	add    al,0xcf
    276a:	1c 89                	sbb    al,0x89
    276c:	1d 01 5e 00 00       	sbb    eax,0x5e01
    2771:	00 00                	add    BYTE PTR [rax],al
    2773:	00 04 f5 1c fe 1c 01 	add    BYTE PTR [rsi*8+0x11cfe1c],al
    277a:	50                   	push   rax
    277b:	04 fe                	add    al,0xfe
    277d:	1c 9a                	sbb    al,0x9a
    277f:	1d 03 91 a8 7f       	sbb    eax,0x7fa89103
    2784:	00 02                	add    BYTE PTR [rdx],al
    2786:	00 04 89             	add    BYTE PTR [rcx+rcx*4],al
    2789:	1d 95 1d 06 a0       	sbb    eax,0xa0061d95
    278e:	0e                   	(bad)
    278f:	cd 00                	int    0x0
    2791:	00 00                	add    BYTE PTR [rax],al
    2793:	00 02                	add    BYTE PTR [rdx],al
    2795:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
    2798:	1b bf 1b 06 a0 b1    	sbb    edi,DWORD PTR [rdi-0x4e5ff9e5]
    279e:	cc                   	int3
    279f:	00 00                	add    BYTE PTR [rax],al
    27a1:	00 00                	add    BYTE PTR [rax],al
    27a3:	02 00                	add    al,BYTE PTR [rax]
    27a5:	04 bf                	add    al,0xbf
    27a7:	1b cb                	sbb    ecx,ebx
    27a9:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27ab:	a0 6d cd 00 00 00 00 	movabs al,ds:0x200000000cd6d
    27b2:	02 00 
    27b4:	04 cb                	add    al,0xcb
    27b6:	1b d7                	sbb    edx,edi
    27b8:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27ba:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    27c1:	03 00 
    27c3:	04 d7                	add    al,0xd7
    27c5:	1b 91 1c 01 5e 00    	sbb    edx,DWORD PTR [rcx+0x5e011c]
    27cb:	00 00                	add    BYTE PTR [rax],al
    27cd:	00 00                	add    BYTE PTR [rax],al
    27cf:	04 fd                	add    al,0xfd
    27d1:	1b 86 1c 01 50 04    	sbb    eax,DWORD PTR [rsi+0x450011c]
    27d7:	86 1c a2             	xchg   BYTE PTR [rdx+riz*4],bl
    27da:	1c 03                	sbb    al,0x3
    27dc:	91                   	xchg   ecx,eax
    27dd:	a8 7f                	test   al,0x7f
    27df:	00 02                	add    BYTE PTR [rdx],al
    27e1:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    27e4:	1c 9d                	sbb    al,0x9d
    27e6:	1c 06                	sbb    al,0x6
    27e8:	a0 0e cd 00 00 00 00 	movabs al,ds:0x300000000cd0e
    27ef:	03 00 
    27f1:	04 f6                	add    al,0xf6
    27f3:	15 8f 16 06 a0       	adc    eax,0xa006168f
    27f8:	b1 cc                	mov    cl,0xcc
    27fa:	00 00                	add    BYTE PTR [rax],al
    27fc:	00 00                	add    BYTE PTR [rax],al
    27fe:	02 00                	add    al,BYTE PTR [rax]
    2800:	04 8f                	add    al,0x8f
    2802:	16                   	(bad)
    2803:	9b                   	fwait
    2804:	16                   	(bad)
    2805:	06                   	(bad)
    2806:	a0 df cc 00 00 00 00 	movabs al,ds:0x200000000ccdf
    280d:	02 00 
    280f:	04 9b                	add    al,0x9b
    2811:	16                   	(bad)
    2812:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2813:	16                   	(bad)
    2814:	06                   	(bad)
    2815:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    281c:	03 00 
    281e:	04 a7                	add    al,0xa7
    2820:	16                   	(bad)
    2821:	ec                   	in     al,dx
    2822:	16                   	(bad)
    2823:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2826:	00 00                	add    BYTE PTR [rax],al
    2828:	00 00                	add    BYTE PTR [rax],al
    282a:	00 00                	add    BYTE PTR [rax],al
    282c:	04 d5                	add    al,0xd5
    282e:	16                   	(bad)
    282f:	dc 16                	fcom   QWORD PTR [rsi]
    2831:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    2834:	dc 16                	fcom   QWORD PTR [rsi]
    2836:	e7 16                	out    0x16,eax
    2838:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    283b:	e7 16                	out    0x16,eax
    283d:	eb 16                	jmp    2855 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2a5>
    283f:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
    2842:	02 00                	add    al,BYTE PTR [rax]
    2844:	04 ec                	add    al,0xec
    2846:	16                   	(bad)
    2847:	f4                   	hlt
    2848:	16                   	(bad)
    2849:	06                   	(bad)
    284a:	a0 0e cd 00 00 00 00 	movabs al,ds:0x400000000cd0e
    2851:	04 00 
    2853:	04 f4                	add    al,0xf4
    2855:	16                   	(bad)
    2856:	fc                   	cld
    2857:	16                   	(bad)
    2858:	06                   	(bad)
    2859:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    2860:	02 00 
    2862:	04 fc                	add    al,0xfc
    2864:	16                   	(bad)
    2865:	84 17                	test   BYTE PTR [rdi],dl
    2867:	06                   	(bad)
    2868:	a0 32 cd 00 00 00 00 	movabs al,ds:0x200000000cd32
    286f:	02 00 
    2871:	04 84                	add    al,0x84
    2873:	17                   	(bad)
    2874:	90                   	nop
    2875:	17                   	(bad)
    2876:	06                   	(bad)
    2877:	a0 ea cc 00 00 00 00 	movabs al,ds:0xccea
    287e:	00 00 
    2880:	04 95                	add    al,0x95
    2882:	17                   	(bad)
    2883:	cb                   	retf
    2884:	17                   	(bad)
    2885:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2888:	00 00                	add    BYTE PTR [rax],al
    288a:	00 00                	add    BYTE PTR [rax],al
    288c:	04 bb                	add    al,0xbb
    288e:	17                   	(bad)
    288f:	c2 17 01             	ret    0x117
    2892:	50                   	push   rax
    2893:	04 c2                	add    al,0xc2
    2895:	17                   	(bad)
    2896:	99                   	cdq
    2897:	18 01                	sbb    BYTE PTR [rcx],al
    2899:	5d                   	pop    rbp
    289a:	00 02                	add    BYTE PTR [rdx],al
    289c:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    289f:	17                   	(bad)
    28a0:	d3 17                	rcl    DWORD PTR [rdi],cl
    28a2:	06                   	(bad)
    28a3:	a0 0e cd 00 00 00 00 	movabs al,ds:0x400000000cd0e
    28aa:	04 00 
    28ac:	04 d3                	add    al,0xd3
    28ae:	17                   	(bad)
    28af:	db 17                	fist   DWORD PTR [rdi]
    28b1:	06                   	(bad)
    28b2:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    28b9:	02 00 
    28bb:	04 db                	add    al,0xdb
    28bd:	17                   	(bad)
    28be:	e7 17                	out    0x17,eax
    28c0:	06                   	(bad)
    28c1:	a0 6d cd 00 00 00 00 	movabs al,ds:0x200000000cd6d
    28c8:	02 00 
    28ca:	04 e7                	add    al,0xe7
    28cc:	17                   	(bad)
    28cd:	f3 17                	repz (bad)
    28cf:	06                   	(bad)
    28d0:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    28d7:	03 00 
    28d9:	04 f3                	add    al,0xf3
    28db:	17                   	(bad)
    28dc:	a9 18 01 5e 00       	test   eax,0x5e0118
    28e1:	00 00                	add    BYTE PTR [rax],al
    28e3:	00 00                	add    BYTE PTR [rax],al
    28e5:	04 99                	add    al,0x99
    28e7:	18 a0 18 01 50 04    	sbb    BYTE PTR [rax+0x4500118],ah
    28ed:	a0 18 f7 18 01 5d 00 	movabs al,ds:0x2005d0118f718
    28f4:	02 00 
    28f6:	04 a9                	add    al,0xa9
    28f8:	18 b1 18 06 a0 0e    	sbb    BYTE PTR [rcx+0xea00618],dh
    28fe:	cd 00                	int    0x0
    2900:	00 00                	add    BYTE PTR [rax],al
    2902:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    2905:	04 b1                	add    al,0xb1
    2907:	18 b9 18 06 a0 b1    	sbb    BYTE PTR [rcx-0x4e5ff9e8],bh
    290d:	cc                   	int3
    290e:	00 00                	add    BYTE PTR [rax],al
    2910:	00 00                	add    BYTE PTR [rax],al
    2912:	02 00                	add    al,BYTE PTR [rax]
    2914:	04 b9                	add    al,0xb9
    2916:	18 c5                	sbb    ch,al
    2918:	18 06                	sbb    BYTE PTR [rsi],al
    291a:	a0 41 cd 00 00 00 00 	movabs al,ds:0x200000000cd41
    2921:	02 00 
    2923:	04 c5                	add    al,0xc5
    2925:	18 d1                	sbb    cl,dl
    2927:	18 06                	sbb    BYTE PTR [rsi],al
    2929:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    2930:	03 00 
    2932:	04 d1                	add    al,0xd1
    2934:	18 87 19 01 5e 00    	sbb    BYTE PTR [rdi+0x5e0119],al
    293a:	00 00                	add    BYTE PTR [rax],al
    293c:	00 00                	add    BYTE PTR [rax],al
    293e:	04 f7                	add    al,0xf7
    2940:	18 fe                	sbb    dh,bh
    2942:	18 01                	sbb    BYTE PTR [rcx],al
    2944:	50                   	push   rax
    2945:	04 fe                	add    al,0xfe
    2947:	18 d5                	sbb    ch,dl
    2949:	19 01                	sbb    DWORD PTR [rcx],eax
    294b:	5d                   	pop    rbp
    294c:	00 02                	add    BYTE PTR [rdx],al
    294e:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    2951:	19 8f 19 06 a0 0e    	sbb    DWORD PTR [rdi+0xea00619],ecx
    2957:	cd 00                	int    0x0
    2959:	00 00                	add    BYTE PTR [rax],al
    295b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    295e:	04 8f                	add    al,0x8f
    2960:	19 97 19 06 a0 b1    	sbb    DWORD PTR [rdi-0x4e5ff9e7],edx
    2966:	cc                   	int3
    2967:	00 00                	add    BYTE PTR [rax],al
    2969:	00 00                	add    BYTE PTR [rax],al
    296b:	02 00                	add    al,BYTE PTR [rax]
    296d:	04 97                	add    al,0x97
    296f:	19 a3 19 06 a0 4e    	sbb    DWORD PTR [rbx+0x4ea00619],esp
    2975:	cd 00                	int    0x0
    2977:	00 00                	add    BYTE PTR [rax],al
    2979:	00 02                	add    BYTE PTR [rdx],al
    297b:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    297e:	19 af 19 06 a0 ea    	sbb    DWORD PTR [rdi-0x155ff9e7],ebp
    2984:	cc                   	int3
    2985:	00 00                	add    BYTE PTR [rax],al
    2987:	00 00                	add    BYTE PTR [rax],al
    2989:	03 00                	add    eax,DWORD PTR [rax]
    298b:	04 af                	add    al,0xaf
    298d:	19 e5                	sbb    ebp,esp
    298f:	19 01                	sbb    DWORD PTR [rcx],eax
    2991:	5e                   	pop    rsi
    2992:	00 00                	add    BYTE PTR [rax],al
    2994:	00 00                	add    BYTE PTR [rax],al
    2996:	00 04 d5 19 dc 19 01 	add    BYTE PTR [rdx*8+0x119dc19],al
    299d:	50                   	push   rax
    299e:	04 dc                	add    al,0xdc
    29a0:	19 b3 1a 01 5d 00    	sbb    DWORD PTR [rbx+0x5d011a],esi
    29a6:	02 00                	add    al,BYTE PTR [rax]
    29a8:	04 e5                	add    al,0xe5
    29aa:	19 ed                	sbb    ebp,ebp
    29ac:	19 06                	sbb    DWORD PTR [rsi],eax
    29ae:	a0 0e cd 00 00 00 00 	movabs al,ds:0x400000000cd0e
    29b5:	04 00 
    29b7:	04 ed                	add    al,0xed
    29b9:	19 f5                	sbb    ebp,esi
    29bb:	19 06                	sbb    DWORD PTR [rsi],eax
    29bd:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    29c4:	02 00 
    29c6:	04 f5                	add    al,0xf5
    29c8:	19 81 1a 06 a0 57    	sbb    DWORD PTR [rcx+0x57a0061a],eax
    29ce:	cd 00                	int    0x0
    29d0:	00 00                	add    BYTE PTR [rax],al
    29d2:	00 02                	add    BYTE PTR [rdx],al
    29d4:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
    29d7:	1a 8d 1a 06 a0 ea    	sbb    cl,BYTE PTR [rbp-0x155ff9e6]
    29dd:	cc                   	int3
    29de:	00 00                	add    BYTE PTR [rax],al
    29e0:	00 00                	add    BYTE PTR [rax],al
    29e2:	03 00                	add    eax,DWORD PTR [rax]
    29e4:	04 8d                	add    al,0x8d
    29e6:	1a c3                	sbb    al,bl
    29e8:	1a 01                	sbb    al,BYTE PTR [rcx]
    29ea:	5e                   	pop    rsi
    29eb:	00 00                	add    BYTE PTR [rax],al
    29ed:	00 00                	add    BYTE PTR [rax],al
    29ef:	00 04 b3             	add    BYTE PTR [rbx+rsi*4],al
    29f2:	1a ba 1a 01 50 04    	sbb    bh,BYTE PTR [rdx+0x450011a]
    29f8:	ba 1a 91 1b 01       	mov    edx,0x11b911a
    29fd:	5d                   	pop    rbp
    29fe:	00 02                	add    BYTE PTR [rdx],al
    2a00:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    2a03:	1a cb                	sbb    cl,bl
    2a05:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a07:	a0 0e cd 00 00 00 00 	movabs al,ds:0x400000000cd0e
    2a0e:	04 00 
    2a10:	04 cb                	add    al,0xcb
    2a12:	1a d3                	sbb    dl,bl
    2a14:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a16:	a0 b1 cc 00 00 00 00 	movabs al,ds:0x200000000ccb1
    2a1d:	02 00 
    2a1f:	04 d3                	add    al,0xd3
    2a21:	1a df                	sbb    bl,bh
    2a23:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a25:	a0 64 cd 00 00 00 00 	movabs al,ds:0x200000000cd64
    2a2c:	02 00 
    2a2e:	04 df                	add    al,0xdf
    2a30:	1a eb                	sbb    ch,bl
    2a32:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a34:	a0 ea cc 00 00 00 00 	movabs al,ds:0x300000000ccea
    2a3b:	03 00 
    2a3d:	04 eb                	add    al,0xeb
    2a3f:	1a a1 1b 01 5e 00    	sbb    ah,BYTE PTR [rcx+0x5e011b]
    2a45:	00 00                	add    BYTE PTR [rax],al
    2a47:	00 00                	add    BYTE PTR [rax],al
    2a49:	04 91                	add    al,0x91
    2a4b:	1b 98 1b 01 50 04    	sbb    ebx,DWORD PTR [rax+0x450011b]
    2a51:	98                   	cwde
    2a52:	1b ae 1b 01 5d 00    	sbb    ebp,DWORD PTR [rsi+0x5d011b]
    2a58:	02 00                	add    al,BYTE PTR [rax]
    2a5a:	04 a1                	add    al,0xa1
    2a5c:	1b a9 1b 06 a0 0e    	sbb    ebp,DWORD PTR [rcx+0xea0061b]
    2a62:	cd 00                	int    0x0
	...
    2a6c:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2a6f:	11 e1                	adc    ecx,esp
    2a71:	11 01                	adc    DWORD PTR [rcx],eax
    2a73:	55                   	push   rbp
    2a74:	04 e1                	add    al,0xe1
    2a76:	11 83 12 01 56 04    	adc    DWORD PTR [rbx+0x4560112],eax
    2a7c:	83 12 8e             	adc    DWORD PTR [rdx],0xffffff8e
    2a7f:	12 04 a3             	adc    al,BYTE PTR [rbx+riz*4]
    2a82:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2a85:	00 00                	add    BYTE PTR [rax],al
    2a87:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2a8a:	11 cd                	adc    ebp,ecx
    2a8c:	11 06                	adc    DWORD PTR [rsi],eax
    2a8e:	54                   	push   rsp
    2a8f:	93                   	xchg   ebx,eax
    2a90:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    2a93:	08 00                	or     BYTE PTR [rax],al
    2a95:	00 00                	add    BYTE PTR [rax],al
    2a97:	00 00                	add    BYTE PTR [rax],al
    2a99:	00 00                	add    BYTE PTR [rax],al
    2a9b:	04 c0                	add    al,0xc0
    2a9d:	11 d5                	adc    ebp,edx
    2a9f:	11 06                	adc    DWORD PTR [rsi],eax
    2aa1:	52                   	push   rdx
    2aa2:	93                   	xchg   ebx,eax
    2aa3:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2aa6:	08 04 d5 11 da 11 06 	or     BYTE PTR [rdx*8+0x611da11],al
    2aad:	5d                   	pop    rbp
    2aae:	93                   	xchg   ebx,eax
    2aaf:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2ab2:	08 04 da             	or     BYTE PTR [rdx+rbx*8],al
    2ab5:	11 85 12 06 5d 93    	adc    DWORD PTR [rbp-0x6ca2f9ee],eax
    2abb:	08 5c 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],bl
    2abf:	00 00                	add    BYTE PTR [rax],al
    2ac1:	00 00                	add    BYTE PTR [rax],al
    2ac3:	00 00                	add    BYTE PTR [rax],al
    2ac5:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2ac8:	11 e6                	adc    esi,esp
    2aca:	11 01                	adc    DWORD PTR [rcx],eax
    2acc:	59                   	pop    rcx
    2acd:	04 e6                	add    al,0xe6
    2acf:	11 89 12 01 5e 04    	adc    DWORD PTR [rcx+0x45e0112],ecx
    2ad5:	89 12                	mov    DWORD PTR [rdx],edx
    2ad7:	8e 12                	mov    ss,WORD PTR [rdx]
    2ad9:	04 a3                	add    al,0xa3
    2adb:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    2ade:	00 00                	add    BYTE PTR [rax],al
    2ae0:	00 00                	add    BYTE PTR [rax],al
    2ae2:	00 00                	add    BYTE PTR [rax],al
    2ae4:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2ae7:	11 fd                	adc    ebp,edi
    2ae9:	11 01                	adc    DWORD PTR [rcx],eax
    2aeb:	50                   	push   rax
    2aec:	04 fd                	add    al,0xfd
    2aee:	11 82 12 01 53 04    	adc    DWORD PTR [rdx+0x4530112],eax
    2af4:	82                   	(bad)
    2af5:	12 8d 12 01 55 00    	adc    cl,BYTE PTR [rbp+0x550112]
	...
    2b0b:	00 00                	add    BYTE PTR [rax],al
    2b0d:	04 c0                	add    al,0xc0
    2b0f:	21 99 22 01 55 04    	and    DWORD PTR [rcx+0x4550122],ebx
    2b15:	99                   	cdq
    2b16:	22 bf 23 01 51 04    	and    bh,BYTE PTR [rdi+0x4510123]
    2b1c:	bf 23 d1 23 04       	mov    edi,0x423d123
    2b21:	a3 01 55 9f 04 d1 23 	movabs ds:0x23dd23d1049f5501,eax
    2b28:	dd 23 
    2b2a:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    2b2d:	dd 23                	frstor [rbx]
    2b2f:	ea                   	(bad)
    2b30:	23 01                	and    eax,DWORD PTR [rcx]
    2b32:	55                   	push   rbp
    2b33:	04 ea                	add    al,0xea
    2b35:	23 f9                	and    edi,ecx
    2b37:	23 01                	and    eax,DWORD PTR [rcx]
    2b39:	51                   	push   rcx
    2b3a:	04 f9                	add    al,0xf9
    2b3c:	23 fc                	and    edi,esp
    2b3e:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2b41:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2b44:	04 fc                	add    al,0xfc
    2b46:	23 96 24 01 55 04    	and    edx,DWORD PTR [rsi+0x4550124]
    2b4c:	96                   	xchg   esi,eax
    2b4d:	24 9b                	and    al,0x9b
    2b4f:	24 04                	and    al,0x4
    2b51:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    2b58:	00 00 
	...
    2b66:	04 c0                	add    al,0xc0
    2b68:	21 83 22 01 54 04    	and    DWORD PTR [rbx+0x4540122],eax
    2b6e:	83 22 c3             	and    DWORD PTR [rdx],0xffffffc3
    2b71:	23 01                	and    eax,DWORD PTR [rcx]
    2b73:	52                   	push   rdx
    2b74:	04 c3                	add    al,0xc3
    2b76:	23 dd                	and    ebx,ebp
    2b78:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2b7b:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2b7f:	dd 23                	frstor [rbx]
    2b81:	f5                   	cmc
    2b82:	23 01                	and    eax,DWORD PTR [rcx]
    2b84:	54                   	push   rsp
    2b85:	04 f5                	add    al,0xf5
    2b87:	23 f9                	and    edi,ecx
    2b89:	23 01                	and    eax,DWORD PTR [rcx]
    2b8b:	52                   	push   rdx
    2b8c:	04 f9                	add    al,0xf9
    2b8e:	23 fc                	and    edi,esp
    2b90:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2b93:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2b97:	fc                   	cld
    2b98:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2b9e:	8f                   	(bad)
    2b9f:	24 9b                	and    al,0x9b
    2ba1:	24 04                	and    al,0x4
    2ba3:	a3 01 54 9f 00 00 00 	movabs ds:0x9f5401,eax
    2baa:	00 00 
	...
    2bbc:	00 00                	add    BYTE PTR [rax],al
    2bbe:	04 c0                	add    al,0xc0
    2bc0:	21 8c 22 01 61 04 8c 	and    DWORD PTR [rdx+riz*1-0x73fb9eff],ecx
    2bc7:	22 bf 23 01 64 04    	and    bh,BYTE PTR [rdi+0x4640123]
    2bcd:	bf 23 d1 23 06       	mov    edi,0x623d123
    2bd2:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23d1049f2e11a503,eax
    2bd9:	d1 23 
    2bdb:	dd 23                	frstor [rbx]
    2bdd:	01 64 04 dd          	add    DWORD PTR [rsp+rax*1-0x23],esp
    2be1:	23 e4                	and    esp,esp
    2be3:	23 01                	and    eax,DWORD PTR [rcx]
    2be5:	61                   	(bad)
    2be6:	04 e4                	add    al,0xe4
    2be8:	23 ea                	and    ebp,edx
    2bea:	23 06                	and    eax,DWORD PTR [rsi]
    2bec:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23ea049f2e11a503,eax
    2bf3:	ea 23 
    2bf5:	f0 23 01             	lock and eax,DWORD PTR [rcx]
    2bf8:	61                   	(bad)
    2bf9:	04 f0                	add    al,0xf0
    2bfb:	23 f9                	and    edi,ecx
    2bfd:	23 01                	and    eax,DWORD PTR [rcx]
    2bff:	64 04 f9             	fs add al,0xf9
    2c02:	23 fc                	and    edi,esp
    2c04:	23 06                	and    eax,DWORD PTR [rsi]
    2c06:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23fc049f2e11a503,eax
    2c0d:	fc 23 
    2c0f:	9a                   	(bad)
    2c10:	24 01                	and    al,0x1
    2c12:	61                   	(bad)
    2c13:	04 9a                	add    al,0x9a
    2c15:	24 9b                	and    al,0x9b
    2c17:	24 06                	and    al,0x6
    2c19:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2c20:	00 00 
	...
    2c2e:	00 00                	add    BYTE PTR [rax],al
    2c30:	04 e6                	add    al,0xe6
    2c32:	21 99 22 0a 9e 08    	and    DWORD PTR [rcx+0x89e0a22],ebx
	...
    2c40:	04 99                	add    al,0x99
    2c42:	22 b4 22 01 61 04 ce 	and    dh,BYTE PTR [rdx+riz*1-0x31fb9eff]
    2c49:	22 e0                	and    ah,al
    2c4b:	22 01                	and    al,BYTE PTR [rcx]
    2c4d:	61                   	(bad)
    2c4e:	04 e9                	add    al,0xe9
    2c50:	22 80 23 01 61 04    	and    al,BYTE PTR [rax+0x4610123]
    2c56:	88 23                	mov    BYTE PTR [rbx],ah
    2c58:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2c59:	23 01                	and    eax,DWORD PTR [rcx]
    2c5b:	61                   	(bad)
    2c5c:	04 c3                	add    al,0xc3
    2c5e:	23 cb                	and    ecx,ebx
    2c60:	23 06                	and    eax,DWORD PTR [rsi]
    2c62:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2c63:	11 35 a8 2e 9f 04    	adc    DWORD PTR [rip+0x49f2ea8],esi        # 49f5b11 <_end+0x49efaf9>
    2c69:	cb                   	retf
    2c6a:	23 dd                	and    ebx,ebp
    2c6c:	23 01                	and    eax,DWORD PTR [rcx]
    2c6e:	61                   	(bad)
    2c6f:	04 dd                	add    al,0xdd
    2c71:	23 f5                	and    esi,ebp
    2c73:	23 0a                	and    ecx,DWORD PTR [rdx]
    2c75:	9e                   	sahf
    2c76:	08 00                	or     BYTE PTR [rax],al
	...
    2c84:	04 e6                	add    al,0xe6
    2c86:	21 99 22 02 30 9f    	and    DWORD PTR [rcx-0x60cffdde],ebx
    2c8c:	04 dd                	add    al,0xdd
    2c8e:	23 f5                	and    esi,ebp
    2c90:	23 02                	and    eax,DWORD PTR [rdx]
    2c92:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    2c98:	00 00                	add    BYTE PTR [rax],al
    2c9a:	00 04 b5 23 c3 23 01 	add    BYTE PTR [rsi*4+0x123c323],al
    2ca1:	61                   	(bad)
    2ca2:	04 e8                	add    al,0xe8
    2ca4:	23 ea                	and    ebp,edx
    2ca6:	23 01                	and    eax,DWORD PTR [rcx]
    2ca8:	61                   	(bad)
    2ca9:	04 f5                	add    al,0xf5
    2cab:	23 f9                	and    edi,ecx
    2cad:	23 01                	and    eax,DWORD PTR [rcx]
    2caf:	61                   	(bad)
    2cb0:	00 02                	add    BYTE PTR [rdx],al
    2cb2:	00 00                	add    BYTE PTR [rax],al
    2cb4:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    2cb7:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2cbd:	8f                   	(bad)
    2cbe:	24 9b                	and    al,0x9b
    2cc0:	24 04                	and    al,0x4
    2cc2:	a3 01 54 9f 00 02 00 	movabs ds:0x2009f5401,eax
    2cc9:	00 00 
    2ccb:	04 fc                	add    al,0xfc
    2ccd:	23 9a 24 01 61 04    	and    ebx,DWORD PTR [rdx+0x4610124]
    2cd3:	9a                   	(bad)
    2cd4:	24 9b                	and    al,0x9b
    2cd6:	24 06                	and    al,0x6
    2cd8:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2cdf:	00 00 
	...
    2ce9:	00 00                	add    BYTE PTR [rax],al
    2ceb:	04 a0                	add    al,0xa0
    2ced:	24 d7                	and    al,0xd7
    2cef:	24 01                	and    al,0x1
    2cf1:	55                   	push   rbp
    2cf2:	04 d7                	add    al,0xd7
    2cf4:	24 d1                	and    al,0xd1
    2cf6:	29 04 a3             	sub    DWORD PTR [rbx+riz*4],eax
    2cf9:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2cfc:	04 d1                	add    al,0xd1
    2cfe:	29 f3                	sub    ebx,esi
    2d00:	29 01                	sub    DWORD PTR [rcx],eax
    2d02:	55                   	push   rbp
    2d03:	04 f3                	add    al,0xf3
    2d05:	29 9d 2a 04 a3 01    	sub    DWORD PTR [rbp+0x1a3042a],ebx
    2d0b:	55                   	push   rbp
    2d0c:	9f                   	lahf
    2d0d:	04 9d                	add    al,0x9d
    2d0f:	2a b7 2a 01 55 04    	sub    dh,BYTE PTR [rdi+0x455012a]
    2d15:	b7 2a                	mov    bh,0x2a
    2d17:	bc 2a 04 a3 01       	mov    esp,0x1a3042a
    2d1c:	55                   	push   rbp
    2d1d:	9f                   	lahf
	...
    2d32:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2d35:	24 a7                	and    al,0xa7
    2d37:	25 01 61 04 a7       	and    eax,0xa7046101
    2d3c:	25 d1 29 01 65       	and    eax,0x650129d1
    2d41:	04 d1                	add    al,0xd1
    2d43:	29 f2                	sub    edx,esi
    2d45:	29 01                	sub    DWORD PTR [rcx],eax
    2d47:	61                   	(bad)
    2d48:	04 f2                	add    al,0xf2
    2d4a:	29 f3                	sub    ebx,esi
    2d4c:	29 06                	sub    DWORD PTR [rsi],eax
    2d4e:	a3 03 a5 11 35 9f 04 	movabs ds:0x29f3049f3511a503,eax
    2d55:	f3 29 
    2d57:	fd                   	std
    2d58:	29 01                	sub    DWORD PTR [rcx],eax
    2d5a:	65 04 fd             	gs add al,0xfd
    2d5d:	29 89 2a 01 61 04    	sub    DWORD PTR [rcx+0x461012a],ecx
    2d63:	89 2a                	mov    DWORD PTR [rdx],ebp
    2d65:	9c                   	pushf
    2d66:	2a 01                	sub    al,BYTE PTR [rcx]
    2d68:	65 04 9c             	gs add al,0x9c
    2d6b:	2a 9d 2a 06 a3 03    	sub    bl,BYTE PTR [rbp+0x3a3062a]
    2d71:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2d72:	11 35 9f 04 9d 2a    	adc    DWORD PTR [rip+0x2a9d049f],esi        # 2a9d3217 <_end+0x2a9cd1ff>
    2d78:	bb 2a 01 61 04       	mov    ebx,0x461012a
    2d7d:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2d82:	a3 03 a5 11 35 9f 00 	movabs ds:0x9f3511a503,eax
    2d89:	00 00 
	...
    2d97:	04 c6                	add    al,0xc6
    2d99:	24 a7                	and    al,0xa7
    2d9b:	25 06 9e 04 00       	and    eax,0x49e06
    2da0:	00 00                	add    BYTE PTR [rax],al
    2da2:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    2da5:	25 e0 26 01 69       	and    eax,0x690126e0
    2daa:	04 9b                	add    al,0x9b
    2dac:	27                   	(bad)
    2dad:	b6 27                	mov    dh,0x27
    2daf:	01 69 04             	add    DWORD PTR [rcx+0x4],ebp
    2db2:	c6                   	(bad)
    2db3:	27                   	(bad)
    2db4:	b9 29 01 69 04       	mov    ecx,0x4690129
    2db9:	d1 29                	shr    DWORD PTR [rcx],1
    2dbb:	f3 29 06             	repz sub DWORD PTR [rsi],eax
    2dbe:	9e                   	sahf
    2dbf:	04 00                	add    al,0x0
    2dc1:	00 00                	add    BYTE PTR [rax],al
    2dc3:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2dc6:	29 fd                	sub    ebp,edi
    2dc8:	29 01                	sub    DWORD PTR [rcx],eax
    2dca:	69 04 fd 29 89 2a 06 	imul   eax,DWORD PTR [rdi*8+0x62a8929],0x49e
    2dd1:	9e 04 00 00 
    2dd5:	00 00                	add    BYTE PTR [rax],al
    2dd7:	00 00                	add    BYTE PTR [rax],al
    2dd9:	00 02                	add    BYTE PTR [rdx],al
    2ddb:	00 00                	add    BYTE PTR [rax],al
    2ddd:	00 02                	add    BYTE PTR [rdx],al
    2ddf:	00 00                	add    BYTE PTR [rax],al
    2de1:	00 00                	add    BYTE PTR [rax],al
    2de3:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
    2de6:	24 a7                	and    al,0xa7
    2de8:	25 02 30 9f 04       	and    eax,0x49f3002
    2ded:	ef                   	out    dx,eax
    2dee:	28 f7                	sub    bh,dh
    2df0:	28 01                	sub    BYTE PTR [rcx],al
    2df2:	51                   	push   rcx
    2df3:	04 f7                	add    al,0xf7
    2df5:	28 fa                	sub    dl,bh
    2df7:	28 03                	sub    BYTE PTR [rbx],al
    2df9:	70 01                	jo     2dfc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ec>
    2dfb:	9f                   	lahf
    2dfc:	04 8f                	add    al,0x8f
    2dfe:	29 97 29 01 50 04    	sub    DWORD PTR [rdi+0x4500129],edx
    2e04:	d1 29                	shr    DWORD PTR [rcx],1
    2e06:	f3 29 02             	repz sub DWORD PTR [rdx],eax
    2e09:	30 9f 04 fd 29 89    	xor    BYTE PTR [rdi-0x76d602fc],bl
    2e0f:	2a 02                	sub    al,BYTE PTR [rdx]
    2e11:	30 9f 00 01 00 00    	xor    BYTE PTR [rdi+0x100],bl
    2e17:	00 01                	add    BYTE PTR [rcx],al
    2e19:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2e1c:	28 f7                	sub    bh,dh
    2e1e:	28 0f                	sub    BYTE PTR [rdi],cl
    2e20:	71 00                	jno    2e22 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x412>
    2e22:	0c ff                	or     al,0xff
    2e24:	ff                   	(bad)
    2e25:	ff                   	(bad)
    2e26:	ff 1a                	call   FWORD PTR [rdx]
    2e28:	48 1e                	rex.W (bad)
    2e2a:	75 00                	jne    2e2c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41c>
    2e2c:	22 23                	and    ah,BYTE PTR [rbx]
    2e2e:	10 04 f7             	adc    BYTE PTR [rdi+rsi*8],al
    2e31:	28 fa                	sub    dl,bh
    2e33:	28 0f                	sub    BYTE PTR [rdi],cl
    2e35:	70 01                	jo     2e38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x428>
    2e37:	0c ff                	or     al,0xff
    2e39:	ff                   	(bad)
    2e3a:	ff                   	(bad)
    2e3b:	ff 1a                	call   FWORD PTR [rdx]
    2e3d:	48 1e                	rex.W (bad)
    2e3f:	75 00                	jne    2e41 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x431>
    2e41:	22 23                	and    ah,BYTE PTR [rbx]
    2e43:	10 04 93             	adc    BYTE PTR [rbx+rdx*4],al
    2e46:	29 97 29 0f 70 00    	sub    DWORD PTR [rdi+0x700f29],edx
    2e4c:	0c ff                	or     al,0xff
    2e4e:	ff                   	(bad)
    2e4f:	ff                   	(bad)
    2e50:	ff 1a                	call   FWORD PTR [rdx]
    2e52:	48 1e                	rex.W (bad)
    2e54:	75 00                	jne    2e56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x446>
    2e56:	22 23                	and    ah,BYTE PTR [rbx]
    2e58:	10 00                	adc    BYTE PTR [rax],al
    2e5a:	00 00                	add    BYTE PTR [rax],al
    2e5c:	00 00                	add    BYTE PTR [rax],al
    2e5e:	00 00                	add    BYTE PTR [rax],al
    2e60:	04 b9                	add    al,0xb9
    2e62:	29 d1                	sub    ecx,edx
    2e64:	29 01                	sub    DWORD PTR [rcx],eax
    2e66:	69 04 e6 29 f3 29 01 	imul   eax,DWORD PTR [rsi+riz*8],0x129f329
    2e6d:	69 04 89 2a 9c 2a 01 	imul   eax,DWORD PTR [rcx+rcx*4],0x12a9c2a
    2e74:	69 00 02 00 00 00    	imul   eax,DWORD PTR [rax],0x2
    2e7a:	04 9d                	add    al,0x9d
    2e7c:	2a bb 2a 01 61 04    	sub    bh,BYTE PTR [rbx+0x461012a]
    2e82:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2e87:	a3                   	.byte 0xa3
    2e88:	03 a5 11 35 9f 00    	add    esp,DWORD PTR [rbp+0x9f3511]

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	23 00                	and    eax,DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 00       	add    eax,0x800
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 e5 11 00 00    	add    BYTE PTR [rip+0x11e5],al        # 11f6 <main+0x16>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	04 00                	add    al,0x0
  17:	09 04 0d 14 00 07 e0 	or     DWORD PTR [rcx*1-0x1ff8ffec],eax
  1e:	11 00                	adc    DWORD PTR [rax],eax
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 2e                	add    BYTE PTR [rsi],ch
  26:	00 01                	add    BYTE PTR [rcx],al
  28:	01 00                	add    DWORD PTR [rax],eax
  2a:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 830 <__abi_tag+0x4b4>
  30:	00 00                	add    BYTE PTR [rax],al
  32:	00 04 78             	add    BYTE PTR [rax+rdi*2],al
  35:	7b 04                	jnp    3b <__abi_tag-0x341>
  37:	7f 84                	jg     ffffffffffffffbd <_end+0xffffffffffff9fa5>
  39:	01 04 87             	add    DWORD PTR [rdi+rax*4],eax
  3c:	01 8e 01 04 91 01    	add    DWORD PTR [rsi+0x1910401],ecx
  42:	98                   	cwde
  43:	01 04 9b             	add    DWORD PTR [rbx+rbx*4],eax
  46:	01 a8 01 00 04 b6    	add    DWORD PTR [rax-0x49fbffff],ebp
  4c:	01 b6 01 04 bb 01    	add    DWORD PTR [rsi+0x1bb0401],esi
  52:	c5 01 04             	(bad)
  55:	c8 01 cd 01          	enter  0xcd01,0x1
  59:	04 d0                	add    al,0xd0
  5b:	01 d5                	add    ebp,edx
  5d:	01 00                	add    DWORD PTR [rax],eax
  5f:	04 d2                	add    al,0xd2
  61:	05 e7 05 04 e7       	add    eax,0xe70405e7
  66:	05 be 08 00 04       	add    eax,0x40008be
  6b:	dc 05 e7 05 04 f0    	fadd   QWORD PTR [rip+0xfffffffff00405e7]        # fffffffff0040658 <_end+0xfffffffff003a640>
  71:	05 f3 05 04 f8       	add    eax,0xf80405f3
  76:	05 f8 05 04 fb       	add    eax,0xfb0405f8
  7b:	05 d8 06 04 e4       	add    eax,0xe40406d8
  80:	06                   	(bad)
  81:	e4 06                	in     al,0x6
  83:	00 04 80             	add    BYTE PTR [rax+rax*4],al
  86:	06                   	(bad)
  87:	8e 06                	mov    es,WORD PTR [rsi]
  89:	04 91                	add    al,0x91
  8b:	06                   	(bad)
  8c:	d8 06                	fadd   DWORD PTR [rsi]
  8e:	00 04 d8             	add    BYTE PTR [rax+rbx*8],al
  91:	06                   	(bad)
  92:	dd 06                	fld    QWORD PTR [rsi]
  94:	04 f9                	add    al,0xf9
  96:	06                   	(bad)
  97:	8b 08                	mov    ecx,DWORD PTR [rax]
  99:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  9c:	07                   	(bad)
  9d:	b6 07                	mov    dh,0x7
  9f:	04 c5                	add    al,0xc5
  a1:	07                   	(bad)
  a2:	e3 07                	jrcxz  ab <__abi_tag-0x2d1>
  a4:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  a7:	07                   	(bad)
  a8:	b6 07                	mov    dh,0x7
  aa:	04 c5                	add    al,0xc5
  ac:	07                   	(bad)
  ad:	ce                   	(bad)
  ae:	07                   	(bad)
  af:	04 ce                	add    al,0xce
  b1:	07                   	(bad)
  b2:	e3 07                	jrcxz  bb <__abi_tag-0x2c1>
  b4:	00 04 ec             	add    BYTE PTR [rsp+rbp*8],al
  b7:	06                   	(bad)
  b8:	f3 06                	repz (bad)
  ba:	04 8b                	add    al,0x8b
  bc:	08 be 08 00 04 8b    	or     BYTE PTR [rsi-0x74fbfff8],bh
  c2:	08 98 08 04 9c 08    	or     BYTE PTR [rax+0x89c0408],bl
  c8:	b9 08 00 04 f0       	mov    ecx,0xf0040008
  cd:	0a f7                	or     dh,bh
  cf:	0a 04 fd 0a 83 0b 00 	or     al,BYTE PTR [rdi*8+0xb830a]
  d6:	04 f7                	add    al,0xf7
  d8:	0a fa                	or     bh,dl
  da:	0a 04 83             	or     al,BYTE PTR [rbx+rax*4]
  dd:	0b 8a 0b 00 04 fa    	or     ecx,DWORD PTR [rdx-0x5fbfff5]
  e3:	0a fd                	or     bh,ch
  e5:	0a 04 8a             	or     al,BYTE PTR [rdx+rcx*4]
  e8:	0b 91 0b 00 04 91    	or     edx,DWORD PTR [rcx-0x6efbfff5]
  ee:	0b 91 0b 04 94 0b    	or     edx,DWORD PTR [rcx+0xb94040b]
  f4:	9b                   	fwait
  f5:	0b 00                	or     eax,DWORD PTR [rax]
  f7:	04 e4                	add    al,0xe4
  f9:	0c e4                	or     al,0xe4
  fb:	0c 04                	or     al,0x4
  fd:	e6 0c                	out    0xc,al
  ff:	ed                   	in     eax,dx
 100:	0c 04                	or     al,0x4
 102:	f3 0c f6             	repz or al,0xf6
 105:	0c 04                	or     al,0x4
 107:	fb                   	sti
 108:	0c 80                	or     al,0x80
 10a:	0d 00 04 9f 0d       	or     eax,0xd9f0400
 10f:	9f                   	lahf
 110:	0d 04 a3 0d b4       	or     eax,0xb40da304
 115:	0d 04 b9 0d be       	or     eax,0xbe0db904
 11a:	0d 00 04 fb 0d       	or     eax,0xdfb0400
 11f:	fb                   	sti
 120:	0d 04 ff 0d 82       	or     eax,0x820dff04
 125:	0e                   	(bad)
 126:	04 88                	add    al,0x88
 128:	0e                   	(bad)
 129:	90                   	nop
 12a:	0e                   	(bad)
 12b:	00 c3                	add    bl,al
 12d:	00 00                	add    BYTE PTR [rax],al
 12f:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 935 <__abi_tag+0x5b9>
 135:	00 00                	add    BYTE PTR [rax],al
 137:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
 13a:	14 04                	adc    al,0x4
 13c:	1e                   	(bad)
 13d:	91                   	xchg   ecx,eax
 13e:	02 00                	add    al,BYTE PTR [rax]
 140:	04 1e                	add    al,0x1e
 142:	48 04 4b             	rex.W add al,0x4b
 145:	c8 01 04 cc          	enter  0x401,0xcc
 149:	01 85 02 00 04 1e    	add    DWORD PTR [rbp+0x1e040002],eax
 14f:	48 04 7c             	rex.W add al,0x7c
 152:	7e 04                	jle    158 <__abi_tag-0x224>
 154:	98                   	cwde
 155:	01 c3                	add    ebx,eax
 157:	01 00                	add    DWORD PTR [rax],eax
 159:	04 4b                	add    al,0x4b
 15b:	7c 04                	jl     161 <__abi_tag-0x21b>
 15d:	7e 8e                	jle    ed <__abi_tag-0x28f>
 15f:	01 00                	add    DWORD PTR [rax],eax
 161:	04 c3                	add    al,0xc3
 163:	01 c8                	add    eax,ecx
 165:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
 168:	01 85 02 00 04 a8    	add    DWORD PTR [rbp-0x57fbfffe],eax
 16e:	02 c4                	add    al,ah
 170:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 173:	02 e8                	add    ch,al
 175:	02 00                	add    al,BYTE PTR [rax]
 177:	04 b0                	add    al,0xb0
 179:	02 c4                	add    al,ah
 17b:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 17e:	02 d2                	add    dl,dl
 180:	02 04 d6             	add    al,BYTE PTR [rsi+rdx*8]
 183:	02 dc                	add    bl,ah
 185:	02 00                	add    al,BYTE PTR [rax]
 187:	04 f4                	add    al,0xf4
 189:	02 fb                	add    bh,bl
 18b:	02 04 ff             	add    al,BYTE PTR [rdi+rdi*8]
 18e:	02 85 03 00 04 fb    	add    al,BYTE PTR [rbp-0x4fbfffd]
 194:	02 fd                	add    bh,ch
 196:	02 04 85 03 8c 03 00 	add    al,BYTE PTR [rax*4+0x38c03]
 19d:	04 fd                	add    al,0xfd
 19f:	02 ff                	add    bh,bh
 1a1:	02 04 8c             	add    al,BYTE PTR [rsp+rcx*4]
 1a4:	03 93 03 00 04 93    	add    edx,DWORD PTR [rbx-0x6cfbfffd]
 1aa:	03 93 03 04 95 03    	add    edx,DWORD PTR [rbx+0x3950403]
 1b0:	9c                   	pushf
 1b1:	03 00                	add    eax,DWORD PTR [rax]
 1b3:	04 c9                	add    al,0xc9
 1b5:	06                   	(bad)
 1b6:	cb                   	retf
 1b7:	06                   	(bad)
 1b8:	04 d2                	add    al,0xd2
 1ba:	06                   	(bad)
 1bb:	d9 06                	fld    DWORD PTR [rsi]
 1bd:	04 e0                	add    al,0xe0
 1bf:	06                   	(bad)
 1c0:	f2 06                	repnz (bad)
 1c2:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
 1c5:	06                   	(bad)
 1c6:	d2 06                	rol    BYTE PTR [rsi],cl
 1c8:	04 f2                	add    al,0xf2
 1ca:	06                   	(bad)
 1cb:	8a 07                	mov    al,BYTE PTR [rdi]
 1cd:	04 90                	add    al,0x90
 1cf:	07                   	(bad)
 1d0:	93                   	xchg   ebx,eax
 1d1:	07                   	(bad)
 1d2:	04 a0                	add    al,0xa0
 1d4:	07                   	(bad)
 1d5:	a3 07 00 04 d4 07 dd 	movabs ds:0x407dd07d4040007,eax
 1dc:	07 04 
 1de:	e4 07                	in     al,0x7
 1e0:	b0 08                	mov    al,0x8
 1e2:	04 c0                	add    al,0xc0
 1e4:	08 c5                	or     ch,al
 1e6:	08 00                	or     BYTE PTR [rax],al
 1e8:	04 da                	add    al,0xda
 1ea:	08 e1                	or     cl,ah
 1ec:	08 04 e8             	or     BYTE PTR [rax+rbp*8],al
 1ef:	08 99 09 00 a3 00    	or     BYTE PTR [rcx+0xa30009],bl
 1f5:	00 00                	add    BYTE PTR [rax],al
 1f7:	05 00 08 00 00       	add    eax,0x800
 1fc:	00 00                	add    BYTE PTR [rax],al
 1fe:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
 201:	4e 04 63             	rex.WRX add al,0x63
 204:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 205:	04 75                	add    al,0x75
 207:	80 01 04             	add    BYTE PTR [rcx],0x4
 20a:	84 01                	test   BYTE PTR [rcx],al
 20c:	88 01                	mov    BYTE PTR [rcx],al
 20e:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
 211:	02 95 02 04 9f 02    	add    dl,BYTE PTR [rbp+0x29f0402]
 217:	a2 02 04 a6 02 b4 02 	movabs ds:0x40002b402a60402,al
 21e:	00 04 
 220:	f0 02 aa 03 04 af 03 	lock add ch,BYTE PTR [rdx+0x3af0403]
 227:	b3 03                	mov    bl,0x3
 229:	00 04 fd 03 83 04 04 	add    BYTE PTR [rdi*8+0x4048303],al
 230:	83 04 b1 04          	add    DWORD PTR [rcx+rsi*4],0x4
 234:	04 b3                	add    al,0xb3
 236:	04 bb                	add    al,0xbb
 238:	04 04                	add    al,0x4
 23a:	c0 04 c0 04          	rol    BYTE PTR [rax+rax*8],0x4
 23e:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
 241:	06                   	(bad)
 242:	d7                   	xlat   BYTE PTR ds:[rbx]
 243:	06                   	(bad)
 244:	04 d7                	add    al,0xd7
 246:	06                   	(bad)
 247:	ea                   	(bad)
 248:	06                   	(bad)
 249:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
 24c:	08 90 08 04 93 08    	or     BYTE PTR [rax+0x8930408],dl
 252:	9b                   	fwait
 253:	08 04 a6             	or     BYTE PTR [rsi+riz*4],al
 256:	08 af 08 00 04 e8    	or     BYTE PTR [rdi-0x17fbfff8],ch
 25c:	08 e8                	or     al,ch
 25e:	08 04 eb             	or     BYTE PTR [rbx+rbp*8],al
 261:	08 f3                	or     bl,dh
 263:	08 04 fe             	or     BYTE PTR [rsi+rdi*8],al
 266:	08 88 09 00 04 c0    	or     BYTE PTR [rax-0x3ffbfff7],cl
 26c:	09 c0                	or     eax,eax
 26e:	09 04 c3             	or     DWORD PTR [rbx+rax*8],eax
 271:	09 cb                	or     ebx,ecx
 273:	09 04 d6             	or     DWORD PTR [rsi+rdx*8],eax
 276:	09 e0                	or     eax,esp
 278:	09 00                	or     DWORD PTR [rax],eax
 27a:	04 90                	add    al,0x90
 27c:	0a 90 0a 04 93 0a    	or     dl,BYTE PTR [rax+0xa93040a]
 282:	9b                   	fwait
 283:	0a 04 a6             	or     al,BYTE PTR [rsi+riz*4]
 286:	0a b1 0a 00 04 b6    	or     dh,BYTE PTR [rcx-0x49fbfff6]
 28c:	0a b6 0a 04 b7 0a    	or     dh,BYTE PTR [rsi+0xab7040a]
 292:	bc 0a 04 bf 0a       	mov    esp,0xabf040a
 297:	c4                   	(bad)
 298:	0a 00                	or     al,BYTE PTR [rax]
 29a:	1b 00                	sbb    eax,DWORD PTR [rax]
 29c:	00 00                	add    BYTE PTR [rax],al
 29e:	05 00 08 00 00       	add    eax,0x800
 2a3:	00 00                	add    BYTE PTR [rax],al
 2a5:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
 2a8:	76 04                	jbe    2ae <__abi_tag-0xce>
 2aa:	7a 82                	jp     22e <__abi_tag-0x14e>
 2ac:	01 00                	add    DWORD PTR [rax],eax
 2ae:	04 b0                	add    al,0xb0
 2b0:	02 b5 02 04 b8 02    	add    dh,BYTE PTR [rbp+0x2b80402]
 2b6:	bd 02 00 e5 01       	mov    ebp,0x1e50002
 2bb:	00 00                	add    BYTE PTR [rax],al
 2bd:	05 00 08 00 00       	add    eax,0x800
 2c2:	00 00                	add    BYTE PTR [rax],al
 2c4:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
 2c7:	01 a0 01 04 a4 01    	add    DWORD PTR [rax+0x1a40401],esp
 2cd:	ae                   	scas   al,BYTE PTR es:[rdi]
 2ce:	01 04 c4             	add    DWORD PTR [rsp+rax*8],eax
 2d1:	01 8c 02 00 04 c4 01 	add    DWORD PTR [rdx+rax*1+0x1c40400],ecx
 2d8:	da 01                	fiadd  DWORD PTR [rcx]
 2da:	04 da                	add    al,0xda
 2dc:	01 da                	add    edx,ebx
 2de:	01 04 de             	add    DWORD PTR [rsi+rbx*8],eax
 2e1:	01 ea                	add    edx,ebp
 2e3:	01 00                	add    DWORD PTR [rax],eax
 2e5:	04 95                	add    al,0x95
 2e7:	02 a6 02 04 af 02    	add    ah,BYTE PTR [rsi+0x2af0402]
 2ed:	b4 02                	mov    ah,0x2
 2ef:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
 2f2:	02 b1 07 04 80 08    	add    dh,BYTE PTR [rcx+0x8800407]
 2f8:	af                   	scas   eax,DWORD PTR es:[rdi]
 2f9:	08 00                	or     BYTE PTR [rax],al
 2fb:	04 b4                	add    al,0xb4
 2fd:	02 dd                	add    bl,ch
 2ff:	02 04 ef             	add    al,BYTE PTR [rdi+rbp*8]
 302:	02 96 07 04 99 08    	add    dl,BYTE PTR [rsi+0x8990407]
 308:	a0 08 00 04 c2 02 dd 	movabs al,ds:0x402dd02c2040008
 30f:	02 04 
 311:	ef                   	out    dx,eax
 312:	02 81 05 04 ac 05    	add    al,BYTE PTR [rcx+0x5ac0405]
 318:	b5 06                	mov    ch,0x6
 31a:	04 b7                	add    al,0xb7
 31c:	06                   	(bad)
 31d:	ca 06 04             	retf   0x406
 320:	cd 06                	int    0x6
 322:	d9 06                	fld    DWORD PTR [rsi]
 324:	04 dd                	add    al,0xdd
 326:	06                   	(bad)
 327:	e1 06                	loope  32f <__abi_tag-0x4d>
 329:	04 e4                	add    al,0xe4
 32b:	06                   	(bad)
 32c:	f9                   	stc
 32d:	06                   	(bad)
 32e:	04 fd                	add    al,0xfd
 330:	06                   	(bad)
 331:	96                   	xchg   esi,eax
 332:	07                   	(bad)
 333:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
 336:	07                   	(bad)
 337:	b1 07                	mov    cl,0x7
 339:	04 88                	add    al,0x88
 33b:	08 95 08 04 a0 08    	or     BYTE PTR [rbp+0x8a00408],dl
 341:	af                   	scas   eax,DWORD PTR es:[rdi]
 342:	08 00                	or     BYTE PTR [rax],al
 344:	04 b1                	add    al,0xb1
 346:	07                   	(bad)
 347:	c2 07 04             	ret    0x407
 34a:	c6 07 cb             	mov    BYTE PTR [rdi],0xcb
 34d:	07                   	(bad)
 34e:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 351:	0a af 0b 04 b3 0b    	or     ch,BYTE PTR [rdi+0xbb3040b]
 357:	ca 0b 04             	retf   0x40b
 35a:	ce                   	(bad)
 35b:	0b e0                	or     esp,eax
 35d:	0b 00                	or     eax,DWORD PTR [rax]
 35f:	04 e6                	add    al,0xe6
 361:	0a f1                	or     dh,cl
 363:	0a 04 a7             	or     al,BYTE PTR [rdi+riz*4]
 366:	0b a7 0b 04 b9 0b    	or     esp,DWORD PTR [rdi+0xbb9040b]
 36c:	ca 0b 04             	retf   0x40b
 36f:	ce                   	(bad)
 370:	0b d5                	or     edx,ebp
 372:	0b 00                	or     eax,DWORD PTR [rax]
 374:	04 a7                	add    al,0xa7
 376:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 37c:	ab                   	stos   DWORD PTR es:[rdi],eax
 37d:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 380:	0b b9 0b 00 04 a7    	or     edi,DWORD PTR [rcx-0x58fbfff5]
 386:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 38c:	ab                   	stos   DWORD PTR es:[rdi],eax
 38d:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 390:	0b b9 0b 00 04 f6    	or     edi,DWORD PTR [rcx-0x9fbfff5]
 396:	0b fd                	or     edi,ebp
 398:	0b 04 82             	or     eax,DWORD PTR [rdx+rax*4]
 39b:	0c a2                	or     al,0xa2
 39d:	0c 04                	or     al,0x4
 39f:	9b                   	fwait
 3a0:	10 b8 10 00 04 a2    	adc    BYTE PTR [rax-0x5dfbfff0],bh
 3a6:	0c aa                	or     al,0xaa
 3a8:	0c 04                	or     al,0x4
 3aa:	b6 0c                	mov    dh,0xc
 3ac:	f5                   	cmc
 3ad:	0c 04                	or     al,0x4
 3af:	b8 10 b8 10 00       	mov    eax,0x10b810
 3b4:	04 bc                	add    al,0xbc
 3b6:	0c d4                	or     al,0xd4
 3b8:	0c 04                	or     al,0x4
 3ba:	d4                   	(bad)
 3bb:	0c d4                	or     al,0xd4
 3bd:	0c 04                	or     al,0x4
 3bf:	d8 0c e2             	fmul   DWORD PTR [rdx+riz*8]
 3c2:	0c 00                	or     al,0x0
 3c4:	04 8d                	add    al,0x8d
 3c6:	0d e7 0e 04 ee       	or     eax,0xee040ee7
 3cb:	0e                   	(bad)
 3cc:	f3 0e                	repz (bad)
 3ce:	04 bc                	add    al,0xbc
 3d0:	10 c1                	adc    cl,al
 3d2:	10 04 c5 10 fe 10 04 	adc    BYTE PTR [rax*8+0x410fe10],al
 3d9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3da:	11 b6 11 00 04 af    	adc    DWORD PTR [rsi-0x50fbffef],esi
 3e0:	0d c0 0e 04 d8       	or     eax,0xd8040ec0
 3e5:	10 df                	adc    bh,bl
 3e7:	10 00                	adc    BYTE PTR [rax],al
 3e9:	04 d1                	add    al,0xd1
 3eb:	0e                   	(bad)
 3ec:	e3 0e                	jrcxz  3fc <__abi_tag+0x80>
 3ee:	04 cf                	add    al,0xcf
 3f0:	10 d4                	adc    ah,dl
 3f2:	10 04 a7             	adc    BYTE PTR [rdi+riz*4],al
 3f5:	11 b6 11 00 04 e7    	adc    DWORD PTR [rsi-0x18fbffef],esi
 3fb:	0e                   	(bad)
 3fc:	ee                   	out    dx,al
 3fd:	0e                   	(bad)
 3fe:	04 f3                	add    al,0xf3
 400:	0e                   	(bad)
 401:	8b 0f                	mov    ecx,DWORD PTR [rdi]
 403:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
 406:	0f                   	xsha1  (bad)
 407:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 408:	0f 04                	(bad)
 40a:	b0 0f                	mov    al,0xf
 40c:	c1 0f 04             	ror    DWORD PTR [rdi],0x4
 40f:	cd 0f                	int    0xf
 411:	d2 0f                	ror    BYTE PTR [rdi],cl
 413:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
 416:	16                   	(bad)
 417:	e0 16                	loopne 42f <__abi_tag+0xb3>
 419:	04 e7                	add    al,0xe7
 41b:	16                   	(bad)
 41c:	ec                   	in     al,dx
 41d:	16                   	(bad)
 41e:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
 421:	16                   	(bad)
 422:	e7 16                	out    0x16,eax
 424:	04 ec                	add    al,0xec
 426:	16                   	(bad)
 427:	f4                   	hlt
 428:	16                   	(bad)
 429:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 42c:	21 88 22 04 a0 22    	and    DWORD PTR [rax+0x22a00422],ecx
 432:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 433:	23 04 ea             	and    eax,DWORD PTR [rdx+rbp*8]
 436:	23 ec                	and    ebp,esp
 438:	23 00                	and    eax,DWORD PTR [rax]
 43a:	04 b5                	add    al,0xb5
 43c:	23 c3                	and    eax,ebx
 43e:	23 04 e8             	and    eax,DWORD PTR [rax+rbp*8]
 441:	23 ea                	and    ebp,edx
 443:	23 04 f5 23 fc 23 00 	and    eax,DWORD PTR [rsi*8+0x23fc23]
 44a:	04 c6                	add    al,0xc6
 44c:	24 f1                	and    al,0xf1
 44e:	24 04                	and    al,0x4
 450:	84 25 ac 29 04 fd    	test   BYTE PTR [rip+0xfffffffffd0429ac],ah        # fffffffffd042e02 <_end+0xfffffffffd03cdea>
 456:	29 ff                	sub    edi,edi
 458:	29 00                	sub    DWORD PTR [rax],eax
 45a:	04 d4                	add    al,0xd4
 45c:	24 f1                	and    al,0xf1
 45e:	24 04                	and    al,0x4
 460:	84 25 9b 27 04 c6    	test   BYTE PTR [rip+0xffffffffc604279b],ah        # ffffffffc6042c01 <_end+0xffffffffc603cbe9>
 466:	27                   	(bad)
 467:	cf                   	iret
 468:	28 04 d1             	sub    BYTE PTR [rcx+rdx*8],al
 46b:	28 e0                	sub    al,ah
 46d:	28 04 e3             	sub    BYTE PTR [rbx+riz*8],al
 470:	28 ef                	sub    bh,ch
 472:	28 04 f3             	sub    BYTE PTR [rbx+rsi*8],al
 475:	28 f7                	sub    bh,dh
 477:	28 04 fa             	sub    BYTE PTR [rdx+rdi*8],al
 47a:	28 8f 29 04 93 29    	sub    BYTE PTR [rdi+0x29930429],cl
 480:	ac                   	lods   al,BYTE PTR ds:[rsi]
 481:	29 00                	sub    DWORD PTR [rax],eax
 483:	04 b9                	add    al,0xb9
 485:	29 c0                	sub    eax,eax
 487:	29 04 c4             	sub    DWORD PTR [rsp+rax*8],eax
 48a:	29 c9                	sub    ecx,ecx
 48c:	29 04 e6             	sub    DWORD PTR [rsi+riz*8],eax
 48f:	29 e6                	sub    esi,esp
 491:	29 04 ed 29 f2 29 04 	sub    DWORD PTR [rbp*8+0x429f229],eax
 498:	8d 2a                	lea    ebp,[rdx]
 49a:	91                   	xchg   ecx,eax
 49b:	2a 04 98             	sub    al,BYTE PTR [rax+rbx*4]
 49e:	2a                   	.byte 0x2a
 49f:	9d                   	popf
 4a0:	2a 00                	sub    al,BYTE PTR [rax]

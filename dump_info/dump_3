
build/main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 a0 0e 17 3d 68    	add    BYTE PTR [rax+0x683d170e],ah
 36d:	b4 ff                	mov    ah,0xff
 36f:	98                   	cwde
 370:	8d 68 85             	lea    ebp,[rax-0x7b]
 373:	bb 86 88 47 0d       	mov    ebx,0xd478886
 378:	78 2b                	js     3a5 <__abi_tag+0x29>
 37a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 37b:	c1                   	.byte 0xc1

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	1f                   	(bad)
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 06                	add    BYTE PTR [rsi],al
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 1f                	add    BYTE PTR [rdi],bl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	87 00                	xchg   DWORD PTR [rax],eax
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	21 01                	and    DWORD PTR [rcx],eax
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	35 01 00 00 12       	xor    eax,0x12000001
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 bf 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],bh
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	12 00                	adc    al,BYTE PTR [rax]
	...
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	b5 00                	mov    ch,0x0
 472:	00 00                	add    BYTE PTR [rax],al
 474:	12 00                	adc    al,BYTE PTR [rax]
	...
 486:	00 00                	add    BYTE PTR [rax],al
 488:	12 01                	adc    al,BYTE PTR [rcx]
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	12 00                	adc    al,BYTE PTR [rax]
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f3 00 00             	repz add BYTE PTR [rax],al
 4a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 20                	add    BYTE PTR [rax],ah
 4d1:	01 00                	add    DWORD PTR [rax],eax
 4d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 43 01             	add    BYTE PTR [rbx+0x1],al
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	76 00                	jbe    502 <__abi_tag+0x186>
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	b4 00                	mov    ah,0x0
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	12 00                	adc    al,BYTE PTR [rax]
	...
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	94                   	xchg   esp,eax
 531:	00 00                	add    BYTE PTR [rax],al
 533:	00 12                	add    BYTE PTR [rdx],dl
	...
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 54a:	00 00                	add    BYTE PTR [rax],al
 54c:	12 00                	adc    al,BYTE PTR [rax]
	...
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	05 01 00 00 12       	add    eax,0x12000001
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 ac 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],ch
	...
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	51                   	push   rcx
 591:	01 00                	add    DWORD PTR [rax],eax
 593:	00 12                	add    BYTE PTR [rdx],dl
	...
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 ba 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],bh
	...
 5bd:	00 00                	add    BYTE PTR [rax],al
 5bf:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	dd 00                	fld    QWORD PTR [rax]
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	e5 00                	in     eax,0x0
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	10 00                	adc    BYTE PTR [rax],al
 60a:	00 00                	add    BYTE PTR [rax],al
 60c:	20 00                	and    BYTE PTR [rax],al
	...
 61e:	00 00                	add    BYTE PTR [rax],al
 620:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
 623:	00 12                	add    BYTE PTR [rdx],dl
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 01                	add    BYTE PTR [rcx],al
 639:	00 00                	add    BYTE PTR [rax],al
 63b:	00 20                	add    BYTE PTR [rax],ah
	...
 64d:	00 00                	add    BYTE PTR [rax],al
 64f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 652:	00 00                	add    BYTE PTR [rax],al
 654:	20 00                	and    BYTE PTR [rax],al
	...
 666:	00 00                	add    BYTE PTR [rax],al
 668:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
 66b:	00 12                	add    BYTE PTR [rdx],dl
	...
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 cd                	add    ch,cl
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	00 12                	add    BYTE PTR [rdx],dl
	...
 6ad:	00 00                	add    BYTE PTR [rax],al
 6af:	00 26                	add    BYTE PTR [rsi],ah
 6b1:	01 00                	add    DWORD PTR [rax],eax
 6b3:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

00000000000006c8 <.dynstr>:
 6c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 6cb:	67 6d                	ins    DWORD PTR es:[edi],dx
 6cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6cf:	5f                   	pop    rdi
 6d0:	73 74                	jae    746 <__abi_tag+0x3ca>
 6d2:	61                   	(bad)
 6d3:	72 74                	jb     749 <__abi_tag+0x3cd>
 6d5:	5f                   	pop    rdi
 6d6:	5f                   	pop    rdi
 6d7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6da:	54                   	push   rsp
 6db:	4d 5f                	rex.WRB pop r15
 6dd:	64 65 72 65          	fs gs jb 746 <__abi_tag+0x3ca>
 6e1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6e8:	4d 
 6e9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6ed:	65 54                	gs push rsp
 6ef:	61                   	(bad)
 6f0:	62 6c 65             	(bad)
 6f3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6f6:	54                   	push   rsp
 6f7:	4d 5f                	rex.WRB pop r15
 6f9:	72 65                	jb     760 <__abi_tag+0x3e4>
 6fb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 702:	4d 
 703:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 705:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 707:	65 54                	gs push rsp
 709:	61                   	(bad)
 70a:	62 6c 65             	(bad)
 70d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 710:	4e 53                	rex.WRX push rbx
 712:	74 36                	je     74a <__abi_tag+0x3ce>
 714:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 718:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 719:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 71a:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
 71d:	32 31                	xor    dh,BYTE PTR [rcx]
 71f:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
 722:	65 61                	gs (bad)
 724:	64 79 5f             	fs jns 786 <__abi_tag+0x40a>
 727:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
 72b:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
 72e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 72f:	77 45                	ja     776 <__abi_tag+0x3fa>
 731:	76 00                	jbe    733 <__abi_tag+0x3b7>
 733:	73 71                	jae    7a6 <__abi_tag+0x42a>
 735:	72 74                	jb     7ab <__abi_tag+0x42f>
 737:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 73b:	74 73                	je     7b0 <__abi_tag+0x434>
 73d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 740:	73 74                	jae    7b6 <__abi_tag+0x43a>
 742:	61                   	(bad)
 743:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 746:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 749:	5f                   	pop    rdi
 74a:	66 61                	data16 (bad)
 74c:	69 6c 00 5f 5f 70 72 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6972705f
 753:	69 
 754:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 755:	74 66                	je     7bd <__abi_tag+0x441>
 757:	5f                   	pop    rdi
 758:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 75b:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
 75e:	65 65 00 5f 5f       	gs add BYTE PTR gs:[rdi+0x5f],bl
 763:	61                   	(bad)
 764:	73 73                	jae    7d9 <__abi_tag+0x45d>
 766:	65 72 74             	gs jb  7dd <__abi_tag+0x461>
 769:	5f                   	pop    rdi
 76a:	66 61                	data16 (bad)
 76c:	69 6c 00 73 74 61 74 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x746174
 773:	00 
 774:	70 75                	jo     7eb <__abi_tag+0x46f>
 776:	74 63                	je     7db <__abi_tag+0x45f>
 778:	68 61 72 00 66       	push   0x66007261
 77d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 77e:	70 65                	jo     7e5 <__abi_tag+0x469>
 780:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 781:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 784:	61                   	(bad)
 785:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 789:	73 74                	jae    7ff <__abi_tag+0x483>
 78b:	72 6e                	jb     7fb <__abi_tag+0x47f>
 78d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 790:	5f                   	pop    rdi
 791:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 794:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 797:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
 79e:	73 74                	jae    814 <__abi_tag+0x498>
 7a0:	72 74                	jb     816 <__abi_tag+0x49a>
 7a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7a3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a4:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 7a7:	61                   	(bad)
 7a8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 7aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7ab:	63 00                	movsxd eax,DWORD PTR [rax]
 7ad:	5f                   	pop    rdi
 7ae:	5f                   	pop    rdi
 7af:	66 70 72             	data16 jo 824 <__abi_tag+0x4a8>
 7b2:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
 7b9:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
 7bc:	5f                   	pop    rdi
 7bd:	6c                   	ins    BYTE PTR es:[rdi],dx
 7be:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 7c5:	72 74                	jb     83b <__abi_tag+0x4bf>
 7c7:	5f                   	pop    rdi
 7c8:	6d                   	ins    DWORD PTR es:[rdi],dx
 7c9:	61                   	(bad)
 7ca:	69 6e 00 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x0],0x656d5f5f
 7d1:	6d                   	ins    DWORD PTR es:[rdi],dx
 7d2:	73 65                	jae    839 <__abi_tag+0x4bd>
 7d4:	74 5f                	je     835 <__abi_tag+0x4b9>
 7d6:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7d9:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
 7dc:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
 7e3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e4:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7e6:	63 00                	movsxd eax,DWORD PTR [rax]
 7e8:	73 72                	jae    85c <__abi_tag+0x4e0>
 7ea:	61                   	(bad)
 7eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7ec:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 7f0:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 7f3:	5f                   	pop    rdi
 7f4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 7fa:	7a 65                	jp     861 <__abi_tag+0x4e5>
 7fc:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7ff:	72 63                	jb     864 <__abi_tag+0x4e8>
 801:	68 72 00 63 61       	push   0x61630072
 806:	6c                   	ins    BYTE PTR es:[rdi],dx
 807:	6c                   	ins    BYTE PTR es:[rdi],dx
 808:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 809:	63 00                	movsxd eax,DWORD PTR [rax]
 80b:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 810:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
 814:	72 69                	jb     87f <__abi_tag+0x503>
 816:	74 65                	je     87d <__abi_tag+0x501>
 818:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 81b:	72 63                	jb     880 <__abi_tag+0x504>
 81d:	6d                   	ins    DWORD PTR es:[rdi],dx
 81e:	70 00                	jo     820 <__abi_tag+0x4a4>
 820:	6c                   	ins    BYTE PTR es:[rdi],dx
 821:	69 62 73 74 64 63 2b 	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
 828:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 82a:	73 6f                	jae    89b <__abi_tag+0x51f>
 82c:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 832:	6d                   	ins    DWORD PTR es:[rdi],dx
 833:	2e 73 6f             	cs jae 8a5 <__abi_tag+0x529>
 836:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 83c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 83e:	73 6f                	jae    8af <__abi_tag+0x533>
 840:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 845:	49                   	rex.WB
 846:	42                   	rex.X
 847:	43 5f                	rex.XB pop r15
 849:	32 2e                	xor    ch,BYTE PTR [rsi]
 84b:	32 2e                	xor    ch,BYTE PTR [rsi]
 84d:	35 00 47 4c 49       	xor    eax,0x494c4700
 852:	42                   	rex.X
 853:	43 58                	rex.XB pop r8
 855:	58                   	pop    rax
 856:	5f                   	pop    rdi
 857:	33 2e                	xor    ebp,DWORD PTR [rsi]
 859:	34 2e                	xor    al,0x2e
 85b:	31 39                	xor    DWORD PTR [rcx],edi
 85d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 860:	49                   	rex.WB
 861:	42                   	rex.X
 862:	43 5f                	rex.XB pop r15
 864:	32 2e                	xor    ch,BYTE PTR [rsi]
 866:	33 38                	xor    edi,DWORD PTR [rax]
 868:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 86b:	49                   	rex.WB
 86c:	42                   	rex.X
 86d:	43 5f                	rex.XB pop r15
 86f:	32 2e                	xor    ch,BYTE PTR [rsi]
 871:	34 00                	xor    al,0x0
 873:	47                   	rex.RXB
 874:	4c                   	rex.WR
 875:	49                   	rex.WB
 876:	42                   	rex.X
 877:	43 5f                	rex.XB pop r15
 879:	32 2e                	xor    ch,BYTE PTR [rsi]
 87b:	33 33                	xor    esi,DWORD PTR [rbx]
 87d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 880:	49                   	rex.WB
 881:	42                   	rex.X
 882:	43 5f                	rex.XB pop r15
 884:	32 2e                	xor    ch,BYTE PTR [rsi]
 886:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 889:	47                   	rex.RXB
 88a:	4c                   	rex.WR
 88b:	49                   	rex.WB
 88c:	42                   	rex.X
 88d:	43 5f                	rex.XB pop r15
 88f:	32 2e                	xor    ch,BYTE PTR [rsi]
 891:	31 36                	xor    DWORD PTR [rsi],esi
 893:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 896:	49                   	rex.WB
 897:	42                   	rex.X
 898:	43 5f                	rex.XB pop r15
 89a:	32 2e                	xor    ch,BYTE PTR [rsi]
 89c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 89e:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

00000000000008a0 <.gnu.version>:
 8a0:	00 00                	add    BYTE PTR [rax],al
 8a2:	02 00                	add    al,BYTE PTR [rax]
 8a4:	03 00                	add    eax,DWORD PTR [rax]
 8a6:	03 00                	add    eax,DWORD PTR [rax]
 8a8:	02 00                	add    al,BYTE PTR [rax]
 8aa:	03 00                	add    eax,DWORD PTR [rax]
 8ac:	03 00                	add    eax,DWORD PTR [rax]
 8ae:	03 00                	add    eax,DWORD PTR [rax]
 8b0:	04 00                	add    al,0x0
 8b2:	05 00 06 00 03       	add    eax,0x3000600
 8b7:	00 03                	add    BYTE PTR [rbx],al
 8b9:	00 07                	add    BYTE PTR [rdi],al
 8bb:	00 03                	add    BYTE PTR [rbx],al
 8bd:	00 03                	add    BYTE PTR [rbx],al
 8bf:	00 08                	add    BYTE PTR [rax],cl
 8c1:	00 02                	add    BYTE PTR [rdx],al
 8c3:	00 03                	add    BYTE PTR [rbx],al
 8c5:	00 03                	add    BYTE PTR [rbx],al
 8c7:	00 03                	add    BYTE PTR [rbx],al
 8c9:	00 03                	add    BYTE PTR [rbx],al
 8cb:	00 03                	add    BYTE PTR [rbx],al
 8cd:	00 02                	add    BYTE PTR [rdx],al
 8cf:	00 01                	add    BYTE PTR [rcx],al
 8d1:	00 09                	add    BYTE PTR [rcx],cl
 8d3:	00 01                	add    BYTE PTR [rcx],al
 8d5:	00 01                	add    BYTE PTR [rcx],al
 8d7:	00 03                	add    BYTE PTR [rbx],al
 8d9:	00 03                	add    BYTE PTR [rbx],al
 8db:	00 0a                	add    BYTE PTR [rdx],cl
 8dd:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

00000000000008e0 <.gnu.version_r>:
 8e0:	01 00                	add    DWORD PTR [rax],eax
 8e2:	01 00                	add    DWORD PTR [rax],eax
 8e4:	67 01 00             	add    DWORD PTR [eax],eax
 8e7:	00 10                	add    BYTE PTR [rax],dl
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 20                	add    BYTE PTR [rax],ah
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 8f2:	69 09 00 00 09 00    	imul   ecx,DWORD PTR [rcx],0x90000
 8f8:	7b 01                	jnp    8fb <__abi_tag+0x57f>
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	01 00                	add    DWORD PTR [rax],eax
 902:	01 00                	add    DWORD PTR [rax],eax
 904:	58                   	pop    rax
 905:	01 00                	add    DWORD PTR [rax],eax
 907:	00 10                	add    BYTE PTR [rax],dl
 909:	00 00                	add    BYTE PTR [rax],al
 90b:	00 20                	add    BYTE PTR [rax],ah
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 69 f8             	add    BYTE PTR [rcx-0x8],ch
 912:	97                   	xchg   edi,eax
 913:	02 00                	add    al,BYTE PTR [rax]
 915:	00 08                	add    BYTE PTR [rax],cl
 917:	00 87 01 00 00 00    	add    BYTE PTR [rdi+0x1],al
 91d:	00 00                	add    BYTE PTR [rax],al
 91f:	00 01                	add    BYTE PTR [rcx],al
 921:	00 07                	add    BYTE PTR [rdi],al
 923:	00 71 01             	add    BYTE PTR [rcx+0x1],dh
 926:	00 00                	add    BYTE PTR [rax],al
 928:	10 00                	adc    BYTE PTR [rax],al
 92a:	00 00                	add    BYTE PTR [rax],al
 92c:	00 00                	add    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	b8 91 96 06 00       	mov    eax,0x69691
 935:	00 0a                	add    BYTE PTR [rdx],cl
 937:	00 96 01 00 00 10    	add    BYTE PTR [rsi+0x10000001],dl
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 942:	69 0d 00 00 07 00 a1 	imul   ecx,DWORD PTR [rip+0x70000],0x1a1        # 7094c <_end+0x6a934>
 949:	01 00 00 
 94c:	10 00                	adc    BYTE PTR [rax],al
 94e:	00 00                	add    BYTE PTR [rax],al
 950:	b3 91                	mov    bl,0x91
 952:	96                   	xchg   esi,eax
 953:	06                   	(bad)
 954:	00 00                	add    BYTE PTR [rax],al
 956:	06                   	(bad)
 957:	00 ab 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],ch
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 966:	05 00 b6 01 00       	add    eax,0x1b600
 96b:	00 10                	add    BYTE PTR [rax],dl
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 96 91 96 06 00    	add    BYTE PTR [rsi+0x69691],dl
 975:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 978:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 97b:	00 10                	add    BYTE PTR [rax],dl
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 982:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 988:	7b 01                	jnp    98b <__abi_tag+0x60f>
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	10 00                	adc    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	74 19                	je     9ab <__abi_tag+0x62f>
 992:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 998:	cc                   	int3
 999:	01 00                	add    DWORD PTR [rax],eax
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000009a0 <.rela.dyn>:
 9a0:	d0 5c 00 00          	rcr    BYTE PTR [rax+rax*1+0x0],1
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	08 00                	or     BYTE PTR [rax],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	f0 12 00             	lock adc al,BYTE PTR [rax]
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 d8                	add    al,bl
 9b9:	5c                   	pop    rsp
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	00 00                	add    BYTE PTR [rax],al
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	08 00                	or     BYTE PTR [rax],al
 9c2:	00 00                	add    BYTE PTR [rax],al
 9c4:	00 00                	add    BYTE PTR [rax],al
 9c6:	00 00                	add    BYTE PTR [rax],al
 9c8:	b0 12                	mov    al,0x12
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	00 00                	add    BYTE PTR [rax],al
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	08 60 00             	or     BYTE PTR [rax+0x0],ah
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 08                	add    BYTE PTR [rax],cl
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 00                	add    BYTE PTR [rax],al
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 08                	add    BYTE PTR [rax],cl
 9e1:	60                   	(bad)
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	d8 5f 00             	fcomp  DWORD PTR [rdi+0x0]
 9eb:	00 00                	add    BYTE PTR [rax],al
 9ed:	00 00                	add    BYTE PTR [rax],al
 9ef:	00 06                	add    BYTE PTR [rsi],al
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 1f                	add    BYTE PTR [rdi],bl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 e0                	add    al,ah
 a01:	5f                   	pop    rdi
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	06                   	(bad)
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 09                	add    BYTE PTR [rcx],cl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 e8                	add    al,ch
 a19:	5f                   	pop    rdi
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	06                   	(bad)
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 18                	add    BYTE PTR [rax],bl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 f0                	add    al,dh
 a31:	5f                   	pop    rdi
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	06                   	(bad)
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 1a                	add    BYTE PTR [rdx],bl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 f8                	add    al,bh
 a49:	5f                   	pop    rdi
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	06                   	(bad)
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 1b                	add    BYTE PTR [rbx],bl
	...

Disassembly of section .rela.plt:

0000000000000a60 <.rela.plt>:
 a60:	08 5f 00             	or     BYTE PTR [rdi+0x0],bl
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 07                	add    BYTE PTR [rdi],al
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 01                	add    BYTE PTR [rcx],al
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 10                	add    BYTE PTR [rax],dl
 a79:	5f                   	pop    rdi
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	00 00                	add    BYTE PTR [rax],al
 a80:	07                   	(bad)
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 02                	add    BYTE PTR [rdx],al
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 18                	add    BYTE PTR [rax],bl
 a91:	5f                   	pop    rdi
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	07                   	(bad)
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 03                	add    BYTE PTR [rbx],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 20                	add    BYTE PTR [rax],ah
 aa9:	5f                   	pop    rdi
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	00 00                	add    BYTE PTR [rax],al
 aae:	00 00                	add    BYTE PTR [rax],al
 ab0:	07                   	(bad)
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	28 5f 00             	sub    BYTE PTR [rdi+0x0],bl
 ac3:	00 00                	add    BYTE PTR [rax],al
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 07                	add    BYTE PTR [rdi],al
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ad1 <__abi_tag+0x755>
 ad1:	00 00                	add    BYTE PTR [rax],al
 ad3:	00 00                	add    BYTE PTR [rax],al
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 30                	add    BYTE PTR [rax],dh
 ad9:	5f                   	pop    rdi
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	07                   	(bad)
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 06                	add    BYTE PTR [rsi],al
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 38                	add    BYTE PTR [rax],bh
 af1:	5f                   	pop    rdi
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 07                	add    BYTE PTR [rdi],al
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	07                   	(bad)
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 08                	add    BYTE PTR [rax],cl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 48 5f             	add    BYTE PTR [rax+0x5f],cl
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	07                   	(bad)
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	60                   	(bad)
 b69:	5f                   	pop    rdi
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	00 00                	add    BYTE PTR [rax],al
 b6e:	00 00                	add    BYTE PTR [rax],al
 b70:	07                   	(bad)
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # b79 <__abi_tag+0x7fd>
 b79:	00 00                	add    BYTE PTR [rax],al
 b7b:	00 00                	add    BYTE PTR [rax],al
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 68 5f             	add    BYTE PTR [rax+0x5f],ch
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	07                   	(bad)
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 b9a:	00 00                	add    BYTE PTR [rax],al
 b9c:	00 00                	add    BYTE PTR [rax],al
 b9e:	00 00                	add    BYTE PTR [rax],al
 ba0:	07                   	(bad)
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 0f                	add    BYTE PTR [rdi],cl
	...
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 78 5f             	add    BYTE PTR [rax+0x5f],bh
 bb2:	00 00                	add    BYTE PTR [rax],al
 bb4:	00 00                	add    BYTE PTR [rax],al
 bb6:	00 00                	add    BYTE PTR [rax],al
 bb8:	07                   	(bad)
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 10                	add    BYTE PTR [rax],dl
	...
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 80 5f 00 00 00    	add    BYTE PTR [rax+0x5f],al
 bcd:	00 00                	add    BYTE PTR [rax],al
 bcf:	00 07                	add    BYTE PTR [rdi],al
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 11                	add    BYTE PTR [rcx],dl
	...
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 88 5f 00 00 00    	add    BYTE PTR [rax+0x5f],cl
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 07                	add    BYTE PTR [rdi],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 12                	add    BYTE PTR [rdx],dl
	...
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 90 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dl
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 07                	add    BYTE PTR [rdi],al
 c01:	00 00                	add    BYTE PTR [rax],al
 c03:	00 13                	add    BYTE PTR [rbx],dl
	...
 c0d:	00 00                	add    BYTE PTR [rax],al
 c0f:	00 98 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bl
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 07                	add    BYTE PTR [rdi],al
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 c26:	00 00                	add    BYTE PTR [rax],al
 c28:	a0 5f 00 00 00 00 00 	movabs al,ds:0x70000000000005f
 c2f:	00 07 
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # c39 <__abi_tag+0x8bd>
 c39:	00 00                	add    BYTE PTR [rax],al
 c3b:	00 00                	add    BYTE PTR [rax],al
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 a8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ch
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 07                	add    BYTE PTR [rdi],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 16                	add    BYTE PTR [rsi],dl
	...
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 b0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dh
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 07                	add    BYTE PTR [rdi],al
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 17                	add    BYTE PTR [rdi],dl
	...
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
 c75:	00 00                	add    BYTE PTR [rax],al
 c77:	00 07                	add    BYTE PTR [rdi],al
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 19                	add    BYTE PTR [rcx],bl
	...
 c85:	00 00                	add    BYTE PTR [rax],al
 c87:	00 c0                	add    al,al
 c89:	5f                   	pop    rdi
 c8a:	00 00                	add    BYTE PTR [rax],al
 c8c:	00 00                	add    BYTE PTR [rax],al
 c8e:	00 00                	add    BYTE PTR [rax],al
 c90:	07                   	(bad)
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c9e:	00 00                	add    BYTE PTR [rax],al
 ca0:	c8 5f 00 00          	enter  0x5f,0x0
 ca4:	00 00                	add    BYTE PTR [rax],al
 ca6:	00 00                	add    BYTE PTR [rax],al
 ca8:	07                   	(bad)
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # cb1 <__abi_tag+0x935>
 cb1:	00 00                	add    BYTE PTR [rax],al
 cb3:	00 00                	add    BYTE PTR [rax],al
 cb5:	00 00                	add    BYTE PTR [rax],al
 cb7:	00 d0                	add    al,dl
 cb9:	5f                   	pop    rdi
 cba:	00 00                	add    BYTE PTR [rax],al
 cbc:	00 00                	add    BYTE PTR [rax],al
 cbe:	00 00                	add    BYTE PTR [rax],al
 cc0:	07                   	(bad)
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	00 1e                	add    BYTE PTR [rsi],bl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 e1 4f 00 00 	mov    rax,QWORD PTR [rip+0x4fe1]        # 5ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__printf_chk@plt-0x10>:
    1020:	ff 35 d2 4e 00 00    	push   QWORD PTR [rip+0x4ed2]        # 5ef8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 d4 4e 00 00    	jmp    QWORD PTR [rip+0x4ed4]        # 5f00 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <__printf_chk@plt>:
    1030:	ff 25 d2 4e 00 00    	jmp    QWORD PTR [rip+0x4ed2]        # 5f08 <__printf_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <rand@plt>:
    1040:	ff 25 ca 4e 00 00    	jmp    QWORD PTR [rip+0x4eca]        # 5f10 <rand@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strchr@plt>:
    1050:	ff 25 c2 4e 00 00    	jmp    QWORD PTR [rip+0x4ec2]        # 5f18 <strchr@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__strncpy_chk@plt>:
    1060:	ff 25 ba 4e 00 00    	jmp    QWORD PTR [rip+0x4eba]        # 5f20 <__strncpy_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 b2 4e 00 00    	jmp    QWORD PTR [rip+0x4eb2]        # 5f28 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <calloc@plt>:
    1080:	ff 25 aa 4e 00 00    	jmp    QWORD PTR [rip+0x4eaa]        # 5f30 <calloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <open@plt>:
    1090:	ff 25 a2 4e 00 00    	jmp    QWORD PTR [rip+0x4ea2]        # 5f38 <open@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 9a 4e 00 00    	jmp    QWORD PTR [rip+0x4e9a]        # 5f40 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <stat@plt>:
    10b0:	ff 25 92 4e 00 00    	jmp    QWORD PTR [rip+0x4e92]        # 5f48 <stat@GLIBC_2.33>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <srand@plt>:
    10c0:	ff 25 8a 4e 00 00    	jmp    QWORD PTR [rip+0x4e8a]        # 5f50 <srand@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fclose@plt>:
    10d0:	ff 25 82 4e 00 00    	jmp    QWORD PTR [rip+0x4e82]        # 5f58 <fclose@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 7a 4e 00 00    	jmp    QWORD PTR [rip+0x4e7a]        # 5f60 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 72 4e 00 00    	jmp    QWORD PTR [rip+0x4e72]        # 5f68 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <free@plt>:
    1100:	ff 25 6a 4e 00 00    	jmp    QWORD PTR [rip+0x4e6a]        # 5f70 <free@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    1110:	ff 25 62 4e 00 00    	jmp    QWORD PTR [rip+0x4e62]        # 5f78 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    1116:	68 0e 00 00 00       	push   0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <__memset_chk@plt>:
    1120:	ff 25 5a 4e 00 00    	jmp    QWORD PTR [rip+0x4e5a]        # 5f80 <__memset_chk@GLIBC_2.3.4>
    1126:	68 0f 00 00 00       	push   0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <putchar@plt>:
    1130:	ff 25 52 4e 00 00    	jmp    QWORD PTR [rip+0x4e52]        # 5f88 <putchar@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <strcmp@plt>:
    1140:	ff 25 4a 4e 00 00    	jmp    QWORD PTR [rip+0x4e4a]        # 5f90 <strcmp@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <read@plt>:
    1150:	ff 25 42 4e 00 00    	jmp    QWORD PTR [rip+0x4e42]        # 5f98 <read@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <puts@plt>:
    1160:	ff 25 3a 4e 00 00    	jmp    QWORD PTR [rip+0x4e3a]        # 5fa0 <puts@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <realloc@plt>:
    1170:	ff 25 32 4e 00 00    	jmp    QWORD PTR [rip+0x4e32]        # 5fa8 <realloc@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <__fprintf_chk@plt>:
    1180:	ff 25 2a 4e 00 00    	jmp    QWORD PTR [rip+0x4e2a]        # 5fb0 <__fprintf_chk@GLIBC_2.3.4>
    1186:	68 15 00 00 00       	push   0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <sqrtf@plt>:
    1190:	ff 25 22 4e 00 00    	jmp    QWORD PTR [rip+0x4e22]        # 5fb8 <sqrtf@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <fwrite@plt>:
    11a0:	ff 25 1a 4e 00 00    	jmp    QWORD PTR [rip+0x4e1a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <close@plt>:
    11b0:	ff 25 12 4e 00 00    	jmp    QWORD PTR [rip+0x4e12]        # 5fc8 <close@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	push   0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011c0 <__isoc23_strtol@plt>:
    11c0:	ff 25 0a 4e 00 00    	jmp    QWORD PTR [rip+0x4e0a]        # 5fd0 <__isoc23_strtol@GLIBC_2.38>
    11c6:	68 19 00 00 00       	push   0x19
    11cb:	e9 50 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011d0 <__cxa_finalize@plt>:
    11d0:	ff 25 02 4e 00 00    	jmp    QWORD PTR [rip+0x4e02]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    11d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011e0 <main>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	53                   	push   rbx
    11e5:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    11e9:	ba 0a 00 00 00       	mov    edx,0xa
    11ee:	48 8b 5e 10          	mov    rbx,QWORD PTR [rsi+0x10]
    11f2:	31 f6                	xor    esi,esi
    11f4:	e8 c7 ff ff ff       	call   11c0 <__isoc23_strtol@plt>
    11f9:	48 89 da             	mov    rdx,rbx
    11fc:	48 8d 3d 11 2e 00 00 	lea    rdi,[rip+0x2e11]        # 4014 <_IO_stdin_used+0x14>
    1203:	89 c6                	mov    esi,eax
    1205:	e8 06 1d 00 00       	call   2f10 <_Z7testAllPKcjS0_>
    120a:	31 c0                	xor    eax,eax
    120c:	5b                   	pop    rbx
    120d:	c3                   	ret
    120e:	66 90                	xchg   ax,ax

0000000000001210 <_start>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	31 ed                	xor    ebp,ebp
    1216:	49 89 d1             	mov    r9,rdx
    1219:	5e                   	pop    rsi
    121a:	48 89 e2             	mov    rdx,rsp
    121d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1221:	50                   	push   rax
    1222:	54                   	push   rsp
    1223:	45 31 c0             	xor    r8d,r8d
    1226:	31 c9                	xor    ecx,ecx
    1228:	48 8d 3d b1 ff ff ff 	lea    rdi,[rip+0xffffffffffffffb1]        # 11e0 <main>
    122f:	ff 15 ab 4d 00 00    	call   QWORD PTR [rip+0x4dab]        # 5fe0 <__libc_start_main@GLIBC_2.34>
    1235:	f4                   	hlt
    1236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    123d:	00 00 00 

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 4d 00 00 	lea    rdi,[rip+0x4dc9]        # 6010 <__TMC_END__>
    1247:	48 8d 05 c2 4d 00 00 	lea    rax,[rip+0x4dc2]        # 6010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 8e 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d8e]        # 5fe8 <_ITM_deregisterTMCloneTable@Base>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 4d 00 00 	lea    rdi,[rip+0x4d99]        # 6010 <__TMC_END__>
    1277:	48 8d 35 92 4d 00 00 	lea    rsi,[rip+0x4d92]        # 6010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 89 f0             	mov    rax,rsi
    1284:	48 c1 ee 3f          	shr    rsi,0x3f
    1288:	48 c1 f8 03          	sar    rax,0x3
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 5d 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d5d]        # 5ff8 <_ITM_registerTMCloneTable@Base>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	80 3d 55 4d 00 00 00 	cmp    BYTE PTR [rip+0x4d55],0x0        # 6010 <__TMC_END__>
    12bb:	75 2b                	jne    12e8 <__do_global_dtors_aux+0x38>
    12bd:	55                   	push   rbp
    12be:	48 83 3d 12 4d 00 00 	cmp    QWORD PTR [rip+0x4d12],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    12c5:	00 
    12c6:	48 89 e5             	mov    rbp,rsp
    12c9:	74 0c                	je     12d7 <__do_global_dtors_aux+0x27>
    12cb:	48 8b 3d 36 4d 00 00 	mov    rdi,QWORD PTR [rip+0x4d36]        # 6008 <__dso_handle>
    12d2:	e8 f9 fe ff ff       	call   11d0 <__cxa_finalize@plt>
    12d7:	e8 64 ff ff ff       	call   1240 <deregister_tm_clones>
    12dc:	c6 05 2d 4d 00 00 01 	mov    BYTE PTR [rip+0x4d2d],0x1        # 6010 <__TMC_END__>
    12e3:	5d                   	pop    rbp
    12e4:	c3                   	ret
    12e5:	0f 1f 00             	nop    DWORD PTR [rax]
    12e8:	c3                   	ret
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	e9 77 ff ff ff       	jmp    1270 <register_tm_clones>
    12f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001300 <_Z16buildStringArrayPcj>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	41 57                	push   r15
    1306:	41 56                	push   r14
    1308:	41 55                	push   r13
    130a:	41 54                	push   r12
    130c:	55                   	push   rbp
    130d:	53                   	push   rbx
    130e:	48 83 ec 28          	sub    rsp,0x28
    1312:	48 85 ff             	test   rdi,rdi
    1315:	0f 84 e9 00 00 00    	je     1404 <_Z16buildStringArrayPcj+0x104>
    131b:	41 89 f4             	mov    r12d,esi
    131e:	41 89 f7             	mov    r15d,esi
    1321:	48 89 fd             	mov    rbp,rdi
    1324:	be 10 00 00 00       	mov    esi,0x10
    1329:	44 89 e3             	mov    ebx,r12d
    132c:	4c 89 ff             	mov    rdi,r15
    132f:	e8 4c fd ff ff       	call   1080 <calloc@plt>
    1334:	c1 e3 05             	shl    ebx,0x5
    1337:	bf 20 00 00 00       	mov    edi,0x20
    133c:	48 89 de             	mov    rsi,rbx
    133f:	49 89 c5             	mov    r13,rax
    1342:	e8 59 fd ff ff       	call   10a0 <aligned_alloc@plt>
    1347:	49 89 c6             	mov    r14,rax
    134a:	45 85 e4             	test   r12d,r12d
    134d:	0f 84 9f 00 00 00    	je     13f2 <_Z16buildStringArrayPcj+0xf2>
    1353:	49 c1 e7 04          	shl    r15,0x4
    1357:	4c 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],r15
    135c:	45 31 ff             	xor    r15d,r15d
    135f:	90                   	nop
    1360:	48 89 ef             	mov    rdi,rbp
    1363:	be 0a 00 00 00       	mov    esi,0xa
    1368:	e8 e3 fc ff ff       	call   1050 <strchr@plt>
    136d:	48 89 ee             	mov    rsi,rbp
    1370:	47 8d 14 3f          	lea    r10d,[r15+r15*1]
    1374:	48 8d 68 01          	lea    rbp,[rax+0x1]
    1378:	4c 89 d1             	mov    rcx,r10
    137b:	4f 8d 0c 16          	lea    r9,[r14+r10*1]
    137f:	4c 89 54 24 10       	mov    QWORD PTR [rsp+0x10],r10
    1384:	49 89 ec             	mov    r12,rbp
    1387:	4c 89 cf             	mov    rdi,r9
    138a:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    138e:	49 29 f4             	sub    r12,rsi
    1391:	4c 39 d3             	cmp    rbx,r10
    1394:	48 0f 43 cb          	cmovae rcx,rbx
    1398:	44 89 e2             	mov    edx,r12d
    139b:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    13a0:	4c 29 d1             	sub    rcx,r10
    13a3:	e8 b8 fc ff ff       	call   1060 <__strncpy_chk@plt>
    13a8:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    13ad:	4c 8b 54 24 10       	mov    r10,QWORD PTR [rsp+0x10]
    13b2:	4a 8d 3c 12          	lea    rdi,[rdx+r10*1]
    13b6:	ba 20 00 00 00       	mov    edx,0x20
    13bb:	48 39 fb             	cmp    rbx,rdi
    13be:	48 89 f9             	mov    rcx,rdi
    13c1:	48 0f 43 cb          	cmovae rcx,rbx
    13c5:	44 29 e2             	sub    edx,r12d
    13c8:	31 f6                	xor    esi,esi
    13ca:	48 29 f9             	sub    rcx,rdi
    13cd:	4c 01 f7             	add    rdi,r14
    13d0:	e8 4b fd ff ff       	call   1120 <__memset_chk@plt>
    13d5:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    13d9:	47 89 64 3d 0c       	mov    DWORD PTR [r13+r15*1+0xc],r12d
    13de:	4f 89 4c 3d 00       	mov    QWORD PTR [r13+r15*1+0x0],r9
    13e3:	49 83 c7 10          	add    r15,0x10
    13e7:	4c 39 7c 24 18       	cmp    QWORD PTR [rsp+0x18],r15
    13ec:	0f 85 6e ff ff ff    	jne    1360 <_Z16buildStringArrayPcj+0x60>
    13f2:	48 83 c4 28          	add    rsp,0x28
    13f6:	4c 89 e8             	mov    rax,r13
    13f9:	5b                   	pop    rbx
    13fa:	5d                   	pop    rbp
    13fb:	41 5c                	pop    r12
    13fd:	41 5d                	pop    r13
    13ff:	41 5e                	pop    r14
    1401:	41 5f                	pop    r15
    1403:	c3                   	ret
    1404:	48 8d 0d dd 2e 00 00 	lea    rcx,[rip+0x2edd]        # 42e8 <_IO_stdin_used+0x2e8>
    140b:	ba 15 00 00 00       	mov    edx,0x15
    1410:	48 8d 35 01 2f 00 00 	lea    rsi,[rip+0x2f01]        # 4318 <_IO_stdin_used+0x318>
    1417:	48 8d 3d ff 2b 00 00 	lea    rdi,[rip+0x2bff]        # 401d <_IO_stdin_used+0x1d>
    141e:	e8 4d fc ff ff       	call   1070 <__assert_fail@plt>
    1423:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    142a:	00 00 00 00 
    142e:	66 90                	xchg   ax,ax

0000000000001430 <_Z11hashMapCtorPFj8string_tEj>:
    1430:	f3 0f 1e fa          	endbr64
    1434:	55                   	push   rbp
    1435:	48 89 e5             	mov    rbp,rsp
    1438:	41 56                	push   r14
    143a:	41 89 d6             	mov    r14d,edx
    143d:	41 55                	push   r13
    143f:	41 54                	push   r12
    1441:	49 89 fc             	mov    r12,rdi
    1444:	53                   	push   rbx
    1445:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    1449:	48 83 ec 40          	sub    rsp,0x40
    144d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1454:	00 00 
    1456:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    145b:	31 c0                	xor    eax,eax
    145d:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    1461:	be 18 00 00 00       	mov    esi,0x18
    1466:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
    146d:	44 89 77 08          	mov    DWORD PTR [rdi+0x8],r14d
    1471:	4c 89 f7             	mov    rdi,r14
    1474:	e8 07 fc ff ff       	call   1080 <calloc@plt>
    1479:	49 89 04 24          	mov    QWORD PTR [r12],rax
    147d:	45 85 f6             	test   r14d,r14d
    1480:	74 32                	je     14b4 <_Z11hashMapCtorPFj8string_tEj+0x84>
    1482:	48 89 c3             	mov    rbx,rax
    1485:	4b 8d 04 76          	lea    rax,[r14+r14*2]
    1489:	49 89 e5             	mov    r13,rsp
    148c:	4c 8d 34 c3          	lea    r14,[rbx+rax*8]
    1490:	4c 89 ef             	mov    rdi,r13
    1493:	48 83 c3 18          	add    rbx,0x18
    1497:	e8 34 0a 00 00       	call   1ed0 <_Z8listCtorv>
    149c:	c5 fa 6f 04 24       	vmovdqu xmm0,XMMWORD PTR [rsp]
    14a1:	c5 fa 7f 43 e8       	vmovdqu XMMWORD PTR [rbx-0x18],xmm0
    14a6:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    14ab:	48 89 43 f8          	mov    QWORD PTR [rbx-0x8],rax
    14af:	4c 39 f3             	cmp    rbx,r14
    14b2:	75 dc                	jne    1490 <_Z11hashMapCtorPFj8string_tEj+0x60>
    14b4:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    14b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    14c0:	00 00 
    14c2:	75 10                	jne    14d4 <_Z11hashMapCtorPFj8string_tEj+0xa4>
    14c4:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    14c8:	4c 89 e0             	mov    rax,r12
    14cb:	5b                   	pop    rbx
    14cc:	41 5c                	pop    r12
    14ce:	41 5d                	pop    r13
    14d0:	41 5e                	pop    r14
    14d2:	5d                   	pop    rbp
    14d3:	c3                   	ret
    14d4:	e8 07 fc ff ff       	call   10e0 <__stack_chk_fail@plt>
    14d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000014e0 <_Z17hashMapAddElementP7HashMap8string_t>:
    14e0:	f3 0f 1e fa          	endbr64
    14e4:	55                   	push   rbp
    14e5:	48 89 e5             	mov    rbp,rsp
    14e8:	41 57                	push   r15
    14ea:	41 56                	push   r14
    14ec:	41 55                	push   r13
    14ee:	41 54                	push   r12
    14f0:	53                   	push   rbx
    14f1:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    14f5:	48 83 ec 60          	sub    rsp,0x60
    14f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1500:	00 00 
    1502:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    1507:	31 c0                	xor    eax,eax
    1509:	48 85 ff             	test   rdi,rdi
    150c:	0f 84 51 02 00 00    	je     1763 <_Z17hashMapAddElementP7HashMap8string_t+0x283>
    1512:	49 89 fc             	mov    r12,rdi
    1515:	48 89 d3             	mov    rbx,rdx
    1518:	48 89 f7             	mov    rdi,rsi
    151b:	49 89 f5             	mov    r13,rsi
    151e:	48 89 d6             	mov    rsi,rdx
    1521:	41 ff 54 24 10       	call   QWORD PTR [r12+0x10]
    1526:	31 d2                	xor    edx,edx
    1528:	4c 89 ee             	mov    rsi,r13
    152b:	89 c1                	mov    ecx,eax
    152d:	89 c8                	mov    eax,ecx
    152f:	41 f7 74 24 08       	div    DWORD PTR [r12+0x8]
    1534:	89 d0                	mov    eax,edx
    1536:	89 54 24 14          	mov    DWORD PTR [rsp+0x14],edx
    153a:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    153e:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    1542:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1546:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    154d:	ff ff ff 
    1550:	48 21 c3             	and    rbx,rax
    1553:	48 89 da             	mov    rdx,rbx
    1556:	48 09 ca             	or     rdx,rcx
    1559:	e8 d2 09 00 00       	call   1f30 <_Z12pushListElemP4List8string_t>
    155e:	83 f8 01             	cmp    eax,0x1
    1561:	74 3d                	je     15a0 <_Z17hashMapAddElementP7HashMap8string_t+0xc0>
    1563:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    156a:	c5 f8 2f 05 96 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a96]        # 4008 <_IO_stdin_used+0x8>
    1571:	00 
    1572:	73 5e                	jae    15d2 <_Z17hashMapAddElementP7HashMap8string_t+0xf2>
    1574:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    1579:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1580:	00 00 
    1582:	0f 85 fa 01 00 00    	jne    1782 <_Z17hashMapAddElementP7HashMap8string_t+0x2a2>
    1588:	8b 44 24 14          	mov    eax,DWORD PTR [rsp+0x14]
    158c:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    1590:	5b                   	pop    rbx
    1591:	41 5c                	pop    r12
    1593:	41 5d                	pop    r13
    1595:	41 5e                	pop    r14
    1597:	41 5f                	pop    r15
    1599:	5d                   	pop    rbp
    159a:	c3                   	ret
    159b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    15a0:	41 8b 44 24 08       	mov    eax,DWORD PTR [r12+0x8]
    15a5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    15a9:	c4 e1 f2 2a c8       	vcvtsi2ss xmm1,xmm1,rax
    15ae:	c4 c1 72 59 44 24 0c 	vmulss xmm0,xmm1,DWORD PTR [r12+0xc]
    15b5:	c5 fa 58 05 47 2a 00 	vaddss xmm0,xmm0,DWORD PTR [rip+0x2a47]        # 4004 <_IO_stdin_used+0x4>
    15bc:	00 
    15bd:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    15c1:	c5 f8 2f 05 3f 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a3f]        # 4008 <_IO_stdin_used+0x8>
    15c8:	00 
    15c9:	c4 c1 7a 11 44 24 0c 	vmovss DWORD PTR [r12+0xc],xmm0
    15d0:	72 a2                	jb     1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    15d2:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    15d7:	49 8b 44 24 10       	mov    rax,QWORD PTR [r12+0x10]
    15dc:	be 18 00 00 00       	mov    esi,0x18
    15e1:	c5 fa 11 44 24 10    	vmovss DWORD PTR [rsp+0x10],xmm0
    15e7:	47 8d 2c 00          	lea    r13d,[r8+r8*1]
    15eb:	44 89 44 24 18       	mov    DWORD PTR [rsp+0x18],r8d
    15f0:	4c 89 ef             	mov    rdi,r13
    15f3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    15f8:	4c 89 eb             	mov    rbx,r13
    15fb:	e8 80 fa ff ff       	call   1080 <calloc@plt>
    1600:	45 85 ed             	test   r13d,r13d
    1603:	44 8b 44 24 18       	mov    r8d,DWORD PTR [rsp+0x18]
    1608:	c5 fa 10 44 24 10    	vmovss xmm0,DWORD PTR [rsp+0x10]
    160e:	49 89 c6             	mov    r14,rax
    1611:	74 51                	je     1664 <_Z17hashMapAddElementP7HashMap8string_t+0x184>
    1613:	4b 8d 54 6d 00       	lea    rdx,[r13+r13*2+0x0]
    1618:	49 89 c7             	mov    r15,rax
    161b:	4c 8d 2c d0          	lea    r13,[rax+rdx*8]
    161f:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
    1624:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    1629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1630:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    1635:	49 83 c7 18          	add    r15,0x18
    1639:	e8 92 08 00 00       	call   1ed0 <_Z8listCtorv>
    163e:	c5 fa 6f 54 24 20    	vmovdqu xmm2,XMMWORD PTR [rsp+0x20]
    1644:	c4 c1 7a 7f 57 e8    	vmovdqu XMMWORD PTR [r15-0x18],xmm2
    164a:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    164f:	49 89 57 f8          	mov    QWORD PTR [r15-0x8],rdx
    1653:	4d 39 fd             	cmp    r13,r15
    1656:	75 d8                	jne    1630 <_Z17hashMapAddElementP7HashMap8string_t+0x150>
    1658:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    165d:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    1664:	c5 fa 59 1d a0 29 00 	vmulss xmm3,xmm0,DWORD PTR [rip+0x29a0]        # 400c <_IO_stdin_used+0xc>
    166b:	00 
    166c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1670:	48 89 fa             	mov    rdx,rdi
    1673:	c5 fa 11 5c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm3
    1679:	45 85 c0             	test   r8d,r8d
    167c:	0f 84 b7 00 00 00    	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1682:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    1689:	00 00 
    168b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1690:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1695:	48 8d 04 40          	lea    rax,[rax+rax*2]
    1699:	4c 8d 2c c5 00 00 00 	lea    r13,[rax*8+0x0]
    16a0:	00 
    16a1:	48 8b 04 c7          	mov    rax,QWORD PTR [rdi+rax*8]
    16a5:	8b 08                	mov    ecx,DWORD PTR [rax]
    16a7:	85 c9                	test   ecx,ecx
    16a9:	74 50                	je     16fb <_Z17hashMapAddElementP7HashMap8string_t+0x21b>
    16ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    16b0:	48 c1 e1 05          	shl    rcx,0x5
    16b4:	31 d2                	xor    edx,edx
    16b6:	48 01 c8             	add    rax,rcx
    16b9:	49 89 cf             	mov    r15,rcx
    16bc:	c5 fa 7e 40 18       	vmovq  xmm0,QWORD PTR [rax+0x18]
    16c1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    16c5:	c5 f9 7e c0          	vmovd  eax,xmm0
    16c9:	c4 e1 f9 7e c7       	vmovq  rdi,xmm0
    16ce:	f7 f3                	div    ebx
    16d0:	48 8d 04 52          	lea    rax,[rdx+rdx*2]
    16d4:	48 89 fa             	mov    rdx,rdi
    16d7:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    16db:	48 89 c7             	mov    rdi,rax
    16de:	e8 4d 08 00 00       	call   1f30 <_Z12pushListElemP4List8string_t>
    16e3:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    16e7:	4a 8b 04 2f          	mov    rax,QWORD PTR [rdi+r13*1]
    16eb:	48 89 fa             	mov    rdx,rdi
    16ee:	42 8b 0c 38          	mov    ecx,DWORD PTR [rax+r15*1]
    16f2:	85 c9                	test   ecx,ecx
    16f4:	75 ba                	jne    16b0 <_Z17hashMapAddElementP7HashMap8string_t+0x1d0>
    16f6:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    16fb:	48 83 44 24 18 01    	add    QWORD PTR [rsp+0x18],0x1
    1701:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1706:	44 39 c0             	cmp    eax,r8d
    1709:	72 85                	jb     1690 <_Z17hashMapAddElementP7HashMap8string_t+0x1b0>
    170b:	45 85 c0             	test   r8d,r8d
    170e:	74 29                	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1710:	45 31 ed             	xor    r13d,r13d
    1713:	eb 07                	jmp    171c <_Z17hashMapAddElementP7HashMap8string_t+0x23c>
    1715:	0f 1f 00             	nop    DWORD PTR [rax]
    1718:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
    171c:	4b 8d 44 6d 00       	lea    rax,[r13+r13*2+0x0]
    1721:	49 83 c5 01          	add    r13,0x1
    1725:	48 8d 3c c2          	lea    rdi,[rdx+rax*8]
    1729:	e8 e2 0a 00 00       	call   2210 <_Z8listDtorP4List>
    172e:	45 3b 6c 24 08       	cmp    r13d,DWORD PTR [r12+0x8]
    1733:	72 e3                	jb     1718 <_Z17hashMapAddElementP7HashMap8string_t+0x238>
    1735:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1739:	e8 c2 f9 ff ff       	call   1100 <free@plt>
    173e:	c5 fa 10 64 24 10    	vmovss xmm4,DWORD PTR [rsp+0x10]
    1744:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1749:	4d 89 34 24          	mov    QWORD PTR [r12],r14
    174d:	41 89 5c 24 08       	mov    DWORD PTR [r12+0x8],ebx
    1752:	49 89 44 24 10       	mov    QWORD PTR [r12+0x10],rax
    1757:	c4 c1 7a 11 64 24 0c 	vmovss DWORD PTR [r12+0xc],xmm4
    175e:	e9 11 fe ff ff       	jmp    1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    1763:	48 8d 0d ce 2b 00 00 	lea    rcx,[rip+0x2bce]        # 4338 <_IO_stdin_used+0x338>
    176a:	ba 3e 00 00 00       	mov    edx,0x3e
    176f:	48 8d 35 a2 2b 00 00 	lea    rsi,[rip+0x2ba2]        # 4318 <_IO_stdin_used+0x318>
    1776:	48 8d 3d a5 28 00 00 	lea    rdi,[rip+0x28a5]        # 4022 <_IO_stdin_used+0x22>
    177d:	e8 ee f8 ff ff       	call   1070 <__assert_fail@plt>
    1782:	e8 59 f9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1787:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    178e:	00 00 

0000000000001790 <_Z17hashMapPopElementP7HashMap8string_t>:
    1790:	f3 0f 1e fa          	endbr64
    1794:	41 55                	push   r13
    1796:	41 54                	push   r12
    1798:	55                   	push   rbp
    1799:	53                   	push   rbx
    179a:	48 83 ec 08          	sub    rsp,0x8
    179e:	48 85 ff             	test   rdi,rdi
    17a1:	0f 84 93 00 00 00    	je     183a <_Z17hashMapPopElementP7HashMap8string_t+0xaa>
    17a7:	48 89 fb             	mov    rbx,rdi
    17aa:	48 89 d5             	mov    rbp,rdx
    17ad:	48 89 f7             	mov    rdi,rsi
    17b0:	49 89 f5             	mov    r13,rsi
    17b3:	48 89 d6             	mov    rsi,rdx
    17b6:	ff 53 10             	call   QWORD PTR [rbx+0x10]
    17b9:	31 d2                	xor    edx,edx
    17bb:	4c 89 ee             	mov    rsi,r13
    17be:	89 c1                	mov    ecx,eax
    17c0:	89 c8                	mov    eax,ecx
    17c2:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    17c5:	89 d0                	mov    eax,edx
    17c7:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    17cb:	49 89 c4             	mov    r12,rax
    17ce:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    17d1:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    17d5:	48 89 ea             	mov    rdx,rbp
    17d8:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    17df:	ff ff ff 
    17e2:	48 21 c2             	and    rdx,rax
    17e5:	48 09 ca             	or     rdx,rcx
    17e8:	e8 c3 08 00 00       	call   20b0 <_Z11popListElemP4List8string_t>
    17ed:	85 c0                	test   eax,eax
    17ef:	74 37                	je     1828 <_Z17hashMapPopElementP7HashMap8string_t+0x98>
    17f1:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    17f4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    17f8:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    17fd:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    1802:	44 89 e0             	mov    eax,r12d
    1805:	c5 f2 5c 0d f7 27 00 	vsubss xmm1,xmm1,DWORD PTR [rip+0x27f7]        # 4004 <_IO_stdin_used+0x4>
    180c:	00 
    180d:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    1811:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    1816:	48 83 c4 08          	add    rsp,0x8
    181a:	5b                   	pop    rbx
    181b:	5d                   	pop    rbp
    181c:	41 5c                	pop    r12
    181e:	41 5d                	pop    r13
    1820:	c3                   	ret
    1821:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1828:	44 8b 63 08          	mov    r12d,DWORD PTR [rbx+0x8]
    182c:	48 83 c4 08          	add    rsp,0x8
    1830:	5b                   	pop    rbx
    1831:	5d                   	pop    rbp
    1832:	44 89 e0             	mov    eax,r12d
    1835:	41 5c                	pop    r12
    1837:	41 5d                	pop    r13
    1839:	c3                   	ret
    183a:	48 8d 0d 27 2b 00 00 	lea    rcx,[rip+0x2b27]        # 4368 <_IO_stdin_used+0x368>
    1841:	ba 4f 00 00 00       	mov    edx,0x4f
    1846:	48 8d 35 cb 2a 00 00 	lea    rsi,[rip+0x2acb]        # 4318 <_IO_stdin_used+0x318>
    184d:	48 8d 3d ce 27 00 00 	lea    rdi,[rip+0x27ce]        # 4022 <_IO_stdin_used+0x22>
    1854:	e8 17 f8 ff ff       	call   1070 <__assert_fail@plt>
    1859:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001860 <_Z20hashMapSearchElementP7HashMap8string_t>:
    1860:	f3 0f 1e fa          	endbr64
    1864:	41 54                	push   r12
    1866:	55                   	push   rbp
    1867:	53                   	push   rbx
    1868:	48 85 ff             	test   rdi,rdi
    186b:	74 37                	je     18a4 <_Z20hashMapSearchElementP7HashMap8string_t+0x44>
    186d:	48 89 fb             	mov    rbx,rdi
    1870:	48 89 d5             	mov    rbp,rdx
    1873:	49 89 f4             	mov    r12,rsi
    1876:	48 89 f7             	mov    rdi,rsi
    1879:	48 89 d6             	mov    rsi,rdx
    187c:	ff 53 10             	call   QWORD PTR [rbx+0x10]
    187f:	31 d2                	xor    edx,edx
    1881:	4c 89 e6             	mov    rsi,r12
    1884:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    1887:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    188a:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    188e:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1892:	48 89 ea             	mov    rdx,rbp
    1895:	e8 f6 08 00 00       	call   2190 <_Z13searchElementP4List8string_t>
    189a:	5b                   	pop    rbx
    189b:	5d                   	pop    rbp
    189c:	85 c0                	test   eax,eax
    189e:	41 5c                	pop    r12
    18a0:	0f 95 c0             	setne  al
    18a3:	c3                   	ret
    18a4:	48 8d 0d ed 2a 00 00 	lea    rcx,[rip+0x2aed]        # 4398 <_IO_stdin_used+0x398>
    18ab:	ba 5c 00 00 00       	mov    edx,0x5c
    18b0:	48 8d 35 61 2a 00 00 	lea    rsi,[rip+0x2a61]        # 4318 <_IO_stdin_used+0x318>
    18b7:	48 8d 3d 64 27 00 00 	lea    rdi,[rip+0x2764]        # 4022 <_IO_stdin_used+0x22>
    18be:	e8 ad f7 ff ff       	call   1070 <__assert_fail@plt>
    18c3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    18ca:	00 00 00 00 
    18ce:	66 90                	xchg   ax,ax

00000000000018d0 <_Z11hashMapDtorP7HashMap>:
    18d0:	f3 0f 1e fa          	endbr64
    18d4:	55                   	push   rbp
    18d5:	53                   	push   rbx
    18d6:	48 83 ec 08          	sub    rsp,0x8
    18da:	48 85 ff             	test   rdi,rdi
    18dd:	74 3a                	je     1919 <_Z11hashMapDtorP7HashMap+0x49>
    18df:	8b 47 08             	mov    eax,DWORD PTR [rdi+0x8]
    18e2:	48 89 fd             	mov    rbp,rdi
    18e5:	31 db                	xor    ebx,ebx
    18e7:	85 c0                	test   eax,eax
    18e9:	74 1f                	je     190a <_Z11hashMapDtorP7HashMap+0x3a>
    18eb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    18f0:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    18f4:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    18f8:	48 83 c3 01          	add    rbx,0x1
    18fc:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1900:	e8 0b 09 00 00       	call   2210 <_Z8listDtorP4List>
    1905:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    1908:	72 e6                	jb     18f0 <_Z11hashMapDtorP7HashMap+0x20>
    190a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    190e:	48 83 c4 08          	add    rsp,0x8
    1912:	5b                   	pop    rbx
    1913:	5d                   	pop    rbp
    1914:	e9 e7 f7 ff ff       	jmp    1100 <free@plt>
    1919:	48 8d 0d 0a 27 00 00 	lea    rcx,[rip+0x270a]        # 402a <_IO_stdin_used+0x2a>
    1920:	ba 91 00 00 00       	mov    edx,0x91
    1925:	48 8d 35 ec 29 00 00 	lea    rsi,[rip+0x29ec]        # 4318 <_IO_stdin_used+0x318>
    192c:	48 8d 3d ef 26 00 00 	lea    rdi,[rip+0x26ef]        # 4022 <_IO_stdin_used+0x22>
    1933:	e8 38 f7 ff ff       	call   1070 <__assert_fail@plt>
    1938:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    193f:	00 

0000000000001940 <_Z17hashMapDebugPrintP7HashMap>:
    1940:	f3 0f 1e fa          	endbr64
    1944:	41 55                	push   r13
    1946:	4c 8d 2d f8 26 00 00 	lea    r13,[rip+0x26f8]        # 4045 <_IO_stdin_used+0x45>
    194d:	41 54                	push   r12
    194f:	55                   	push   rbp
    1950:	48 89 fd             	mov    rbp,rdi
    1953:	4c 89 ef             	mov    rdi,r13
    1956:	53                   	push   rbx
    1957:	48 83 ec 08          	sub    rsp,0x8
    195b:	e8 00 f8 ff ff       	call   1160 <puts@plt>
    1960:	48 85 ed             	test   rbp,rbp
    1963:	0f 84 87 00 00 00    	je     19f0 <_Z17hashMapDebugPrintP7HashMap+0xb0>
    1969:	8b 55 08             	mov    edx,DWORD PTR [rbp+0x8]
    196c:	48 8d 35 f2 26 00 00 	lea    rsi,[rip+0x26f2]        # 4065 <_IO_stdin_used+0x65>
    1973:	bf 02 00 00 00       	mov    edi,0x2
    1978:	31 c0                	xor    eax,eax
    197a:	e8 b1 f6 ff ff       	call   1030 <__printf_chk@plt>
    197f:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    1983:	bf 02 00 00 00       	mov    edi,0x2
    1988:	48 8d 35 e7 26 00 00 	lea    rsi,[rip+0x26e7]        # 4076 <_IO_stdin_used+0x76>
    198f:	b8 01 00 00 00       	mov    eax,0x1
    1994:	c5 fa 5a 45 0c       	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0xc]
    1999:	e8 92 f6 ff ff       	call   1030 <__printf_chk@plt>
    199e:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    19a1:	85 c0                	test   eax,eax
    19a3:	74 36                	je     19db <_Z17hashMapDebugPrintP7HashMap+0x9b>
    19a5:	31 db                	xor    ebx,ebx
    19a7:	4c 8d 25 d9 26 00 00 	lea    r12,[rip+0x26d9]        # 4087 <_IO_stdin_used+0x87>
    19ae:	66 90                	xchg   ax,ax
    19b0:	89 da                	mov    edx,ebx
    19b2:	4c 89 e6             	mov    rsi,r12
    19b5:	bf 02 00 00 00       	mov    edi,0x2
    19ba:	31 c0                	xor    eax,eax
    19bc:	e8 6f f6 ff ff       	call   1030 <__printf_chk@plt>
    19c1:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    19c5:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    19c9:	48 83 c3 01          	add    rbx,0x1
    19cd:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    19d1:	e8 7a 08 00 00       	call   2250 <_Z10debugPrintP4List>
    19d6:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    19d9:	72 d5                	jb     19b0 <_Z17hashMapDebugPrintP7HashMap+0x70>
    19db:	48 83 c4 08          	add    rsp,0x8
    19df:	4c 89 ef             	mov    rdi,r13
    19e2:	5b                   	pop    rbx
    19e3:	5d                   	pop    rbp
    19e4:	41 5c                	pop    r12
    19e6:	41 5d                	pop    r13
    19e8:	e9 73 f7 ff ff       	jmp    1160 <puts@plt>
    19ed:	0f 1f 00             	nop    DWORD PTR [rax]
    19f0:	48 8d 3d 69 26 00 00 	lea    rdi,[rip+0x2669]        # 4060 <_IO_stdin_used+0x60>
    19f7:	e8 64 f7 ff ff       	call   1160 <puts@plt>
    19fc:	eb dd                	jmp    19db <_Z17hashMapDebugPrintP7HashMap+0x9b>
    19fe:	66 90                	xchg   ax,ax

0000000000001a00 <_Z15crc32HashString8string_t>:
    1a00:	f3 0f 1e fa          	endbr64
    1a04:	48 c1 ee 20          	shr    rsi,0x20
    1a08:	83 fe 01             	cmp    esi,0x1
    1a0b:	0f 8e 05 01 00 00    	jle    1b16 <_Z15crc32HashString8string_t+0x116>
    1a11:	83 ee 02             	sub    esi,0x2
    1a14:	53                   	push   rbx
    1a15:	49 89 f9             	mov    r9,rdi
    1a18:	45 31 d2             	xor    r10d,r10d
    1a1b:	c1 ee 02             	shr    esi,0x2
    1a1e:	41 b8 1f 00 00 00    	mov    r8d,0x1f
    1a24:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1a2b:	48 be 00 00 00 00 00 	movabs rsi,0x8000000000000000
    1a32:	00 00 80 
    1a35:	4c 8d 5c 07 04       	lea    r11,[rdi+rax*1+0x4]
    1a3a:	48 bf 41 6f dc 1e 01 	movabs rdi,0x11edc6f41
    1a41:	00 00 00 
    1a44:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1a48:	41 8b 11             	mov    edx,DWORD PTR [r9]
    1a4b:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1a4e:	d1 ea                	shr    edx,1
    1a50:	81 e2 55 55 55 55    	and    edx,0x55555555
    1a56:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1a5b:	09 d0                	or     eax,edx
    1a5d:	89 c2                	mov    edx,eax
    1a5f:	c1 e0 02             	shl    eax,0x2
    1a62:	c1 ea 02             	shr    edx,0x2
    1a65:	25 cc cc cc cc       	and    eax,0xcccccccc
    1a6a:	81 e2 33 33 33 33    	and    edx,0x33333333
    1a70:	09 d0                	or     eax,edx
    1a72:	89 c1                	mov    ecx,eax
    1a74:	c1 e0 04             	shl    eax,0x4
    1a77:	89 c2                	mov    edx,eax
    1a79:	c1 e9 04             	shr    ecx,0x4
    1a7c:	31 c0                	xor    eax,eax
    1a7e:	81 e1 0f 0f 0f 0f    	and    ecx,0xf0f0f0f
    1a84:	81 e2 f0 f0 f0 f0    	and    edx,0xf0f0f0f0
    1a8a:	09 ca                	or     edx,ecx
    1a8c:	0f ca                	bswap  edx
    1a8e:	81 f2 88 88 88 88    	xor    edx,0x88888888
    1a94:	48 c1 e2 20          	shl    rdx,0x20
    1a98:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1a9f:	00 
    1aa0:	48 89 f3             	mov    rbx,rsi
    1aa3:	89 c1                	mov    ecx,eax
    1aa5:	48 d3 eb             	shr    rbx,cl
    1aa8:	48 85 d3             	test   rbx,rdx
    1aab:	74 0e                	je     1abb <_Z15crc32HashString8string_t+0xbb>
    1aad:	44 89 c1             	mov    ecx,r8d
    1ab0:	48 89 fb             	mov    rbx,rdi
    1ab3:	29 c1                	sub    ecx,eax
    1ab5:	48 d3 e3             	shl    rbx,cl
    1ab8:	48 31 da             	xor    rdx,rbx
    1abb:	83 c0 01             	add    eax,0x1
    1abe:	83 f8 20             	cmp    eax,0x20
    1ac1:	75 dd                	jne    1aa0 <_Z15crc32HashString8string_t+0xa0>
    1ac3:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1ac6:	d1 ea                	shr    edx,1
    1ac8:	49 83 c1 04          	add    r9,0x4
    1acc:	81 e2 55 55 55 55    	and    edx,0x55555555
    1ad2:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1ad7:	09 d0                	or     eax,edx
    1ad9:	89 c2                	mov    edx,eax
    1adb:	c1 e0 02             	shl    eax,0x2
    1ade:	c1 ea 02             	shr    edx,0x2
    1ae1:	25 cc cc cc cc       	and    eax,0xcccccccc
    1ae6:	81 e2 33 33 33 33    	and    edx,0x33333333
    1aec:	09 d0                	or     eax,edx
    1aee:	89 c2                	mov    edx,eax
    1af0:	c1 e0 04             	shl    eax,0x4
    1af3:	c1 ea 04             	shr    edx,0x4
    1af6:	25 f0 f0 f0 f0       	and    eax,0xf0f0f0f0
    1afb:	81 e2 0f 0f 0f 0f    	and    edx,0xf0f0f0f
    1b01:	09 d0                	or     eax,edx
    1b03:	0f c8                	bswap  eax
    1b05:	41 01 c2             	add    r10d,eax
    1b08:	4d 39 cb             	cmp    r11,r9
    1b0b:	0f 85 37 ff ff ff    	jne    1a48 <_Z15crc32HashString8string_t+0x48>
    1b11:	44 89 d0             	mov    eax,r10d
    1b14:	5b                   	pop    rbx
    1b15:	c3                   	ret
    1b16:	31 c0                	xor    eax,eax
    1b18:	c3                   	ret
    1b19:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001b20 <_Z19_mm_crc32HashString8string_t>:
    1b20:	f3 0f 1e fa          	endbr64
    1b24:	48 c1 ee 20          	shr    rsi,0x20
    1b28:	83 fe 01             	cmp    esi,0x1
    1b2b:	7e 3b                	jle    1b68 <_Z19_mm_crc32HashString8string_t+0x48>
    1b2d:	83 ee 02             	sub    esi,0x2
    1b30:	b9 11 11 11 11       	mov    ecx,0x11111111
    1b35:	c1 ee 02             	shr    esi,0x2
    1b38:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1b3f:	48 8d 74 07 04       	lea    rsi,[rdi+rax*1+0x4]
    1b44:	31 c0                	xor    eax,eax
    1b46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1b4d:	00 00 00 
    1b50:	89 ca                	mov    edx,ecx
    1b52:	48 83 c7 04          	add    rdi,0x4
    1b56:	f2 0f 38 f1 57 fc    	crc32  edx,DWORD PTR [rdi-0x4]
    1b5c:	01 d0                	add    eax,edx
    1b5e:	48 39 f7             	cmp    rdi,rsi
    1b61:	75 ed                	jne    1b50 <_Z19_mm_crc32HashString8string_t+0x30>
    1b63:	c3                   	ret
    1b64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1b68:	31 c0                	xor    eax,eax
    1b6a:	c3                   	ret
    1b6b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001b70 <_Z25_mm_crc32UnrollHashString8string_t>:
    1b70:	f3 0f 1e fa          	endbr64
    1b74:	ba 11 11 11 21       	mov    edx,0x21111111
    1b79:	89 d0                	mov    eax,edx
    1b7b:	89 d6                	mov    esi,edx
    1b7d:	89 d1                	mov    ecx,edx
    1b7f:	f2 48 0f 38 f1 07    	crc32  rax,QWORD PTR [rdi]
    1b85:	f2 48 0f 38 f1 77 08 	crc32  rsi,QWORD PTR [rdi+0x8]
    1b8c:	f2 48 0f 38 f1 4f 10 	crc32  rcx,QWORD PTR [rdi+0x10]
    1b93:	01 f0                	add    eax,esi
    1b95:	f2 48 0f 38 f1 57 18 	crc32  rdx,QWORD PTR [rdi+0x18]
    1b9c:	01 c8                	add    eax,ecx
    1b9e:	01 d0                	add    eax,edx
    1ba0:	c3                   	ret
    1ba1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1ba8:	00 00 00 00 
    1bac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001bb0 <_Z17murmur2HashString8string_t>:
    1bb0:	f3 0f 1e fa          	endbr64
    1bb4:	48 c1 ee 20          	shr    rsi,0x20
    1bb8:	48 89 f9             	mov    rcx,rdi
    1bbb:	89 f0                	mov    eax,esi
    1bbd:	83 fe 03             	cmp    esi,0x3
    1bc0:	0f 86 8a 00 00 00    	jbe    1c50 <_Z17murmur2HashString8string_t+0xa0>
    1bc6:	8d 46 fc             	lea    eax,[rsi-0x4]
    1bc9:	89 f2                	mov    edx,esi
    1bcb:	c1 e8 02             	shr    eax,0x2
    1bce:	83 c0 01             	add    eax,0x1
    1bd1:	48 8d 3c 87          	lea    rdi,[rdi+rax*4]
    1bd5:	0f 1f 00             	nop    DWORD PTR [rax]
    1bd8:	44 69 01 95 e9 d1 5b 	imul   r8d,DWORD PTR [rcx],0x5bd1e995
    1bdf:	48 83 c1 04          	add    rcx,0x4
    1be3:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1be9:	44 89 c0             	mov    eax,r8d
    1bec:	c1 e8 18             	shr    eax,0x18
    1bef:	44 31 c0             	xor    eax,r8d
    1bf2:	69 c0 95 e9 d1 5b    	imul   eax,eax,0x5bd1e995
    1bf8:	31 c2                	xor    edx,eax
    1bfa:	48 39 cf             	cmp    rdi,rcx
    1bfd:	75 d9                	jne    1bd8 <_Z17murmur2HashString8string_t+0x28>
    1bff:	89 f0                	mov    eax,esi
    1c01:	83 e0 03             	and    eax,0x3
    1c04:	83 f8 02             	cmp    eax,0x2
    1c07:	74 30                	je     1c39 <_Z17murmur2HashString8string_t+0x89>
    1c09:	83 f8 03             	cmp    eax,0x3
    1c0c:	74 22                	je     1c30 <_Z17murmur2HashString8string_t+0x80>
    1c0e:	83 f8 01             	cmp    eax,0x1
    1c11:	74 2f                	je     1c42 <_Z17murmur2HashString8string_t+0x92>
    1c13:	89 d0                	mov    eax,edx
    1c15:	c1 e8 0d             	shr    eax,0xd
    1c18:	31 c2                	xor    edx,eax
    1c1a:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c20:	89 d0                	mov    eax,edx
    1c22:	c1 e8 0f             	shr    eax,0xf
    1c25:	31 d0                	xor    eax,edx
    1c27:	c3                   	ret
    1c28:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1c2f:	00 
    1c30:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
    1c34:	c1 e0 10             	shl    eax,0x10
    1c37:	31 c2                	xor    edx,eax
    1c39:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    1c3d:	c1 e0 08             	shl    eax,0x8
    1c40:	31 c2                	xor    edx,eax
    1c42:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    1c45:	31 c2                	xor    edx,eax
    1c47:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c4d:	eb c4                	jmp    1c13 <_Z17murmur2HashString8string_t+0x63>
    1c4f:	90                   	nop
    1c50:	89 f2                	mov    edx,esi
    1c52:	eb b0                	jmp    1c04 <_Z17murmur2HashString8string_t+0x54>
    1c54:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1c5b:	00 00 00 00 
    1c5f:	90                   	nop

0000000000001c60 <_Z13sumHashString8string_t>:
    1c60:	f3 0f 1e fa          	endbr64
    1c64:	48 c1 ee 20          	shr    rsi,0x20
    1c68:	41 89 f0             	mov    r8d,esi
    1c6b:	44 8d 4e fd          	lea    r9d,[rsi-0x3]
    1c6f:	83 fe 03             	cmp    esi,0x3
    1c72:	0f 8e 40 01 00 00    	jle    1db8 <_Z13sumHashString8string_t+0x158>
    1c78:	8d 46 fc             	lea    eax,[rsi-0x4]
    1c7b:	89 c2                	mov    edx,eax
    1c7d:	c1 ea 02             	shr    edx,0x2
    1c80:	83 c2 01             	add    edx,0x1
    1c83:	83 f8 1b             	cmp    eax,0x1b
    1c86:	0f 86 39 01 00 00    	jbe    1dc5 <_Z13sumHashString8string_t+0x165>
    1c8c:	89 d1                	mov    ecx,edx
    1c8e:	48 89 f8             	mov    rax,rdi
    1c91:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    1c95:	c1 e9 03             	shr    ecx,0x3
    1c98:	48 c1 e1 05          	shl    rcx,0x5
    1c9c:	48 01 f9             	add    rcx,rdi
    1c9f:	90                   	nop
    1ca0:	c5 fd fe 00          	vpaddd ymm0,ymm0,YMMWORD PTR [rax]
    1ca4:	48 83 c0 20          	add    rax,0x20
    1ca8:	48 39 c8             	cmp    rax,rcx
    1cab:	75 f3                	jne    1ca0 <_Z13sumHashString8string_t+0x40>
    1cad:	c4 e3 7d 39 c1 01    	vextracti128 xmm1,ymm0,0x1
    1cb3:	89 d1                	mov    ecx,edx
    1cb5:	c5 f1 fe c0          	vpaddd xmm0,xmm1,xmm0
    1cb9:	83 e1 f8             	and    ecx,0xfffffff8
    1cbc:	c5 f1 73 d8 08       	vpsrldq xmm1,xmm0,0x8
    1cc1:	c1 e1 02             	shl    ecx,0x2
    1cc4:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1cc8:	c5 f1 73 d8 04       	vpsrldq xmm1,xmm0,0x4
    1ccd:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1cd1:	c5 f9 7e c0          	vmovd  eax,xmm0
    1cd5:	f6 c2 07             	test   dl,0x7
    1cd8:	0f 84 e2 00 00 00    	je     1dc0 <_Z13sumHashString8string_t+0x160>
    1cde:	c5 f8 77             	vzeroupper
    1ce1:	4c 63 d1             	movsxd r10,ecx
    1ce4:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1ce8:	44 8d 51 04          	lea    r10d,[rcx+0x4]
    1cec:	45 39 d1             	cmp    r9d,r10d
    1cef:	7e 55                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1cf1:	4d 63 d2             	movsxd r10,r10d
    1cf4:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1cf8:	44 8d 51 08          	lea    r10d,[rcx+0x8]
    1cfc:	45 39 d1             	cmp    r9d,r10d
    1cff:	7e 45                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1d01:	4d 63 d2             	movsxd r10,r10d
    1d04:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d08:	44 8d 51 0c          	lea    r10d,[rcx+0xc]
    1d0c:	45 39 d1             	cmp    r9d,r10d
    1d0f:	7e 35                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1d11:	4d 63 d2             	movsxd r10,r10d
    1d14:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d18:	44 8d 51 10          	lea    r10d,[rcx+0x10]
    1d1c:	45 39 d1             	cmp    r9d,r10d
    1d1f:	7e 25                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1d21:	4d 63 d2             	movsxd r10,r10d
    1d24:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d28:	44 8d 51 14          	lea    r10d,[rcx+0x14]
    1d2c:	45 39 d1             	cmp    r9d,r10d
    1d2f:	7e 15                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1d31:	4d 63 d2             	movsxd r10,r10d
    1d34:	83 c1 18             	add    ecx,0x18
    1d37:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d3b:	41 39 c9             	cmp    r9d,ecx
    1d3e:	7e 06                	jle    1d46 <_Z13sumHashString8string_t+0xe6>
    1d40:	48 63 c9             	movsxd rcx,ecx
    1d43:	03 04 0f             	add    eax,DWORD PTR [rdi+rcx*1]
    1d46:	c1 e2 02             	shl    edx,0x2
    1d49:	89 d1                	mov    ecx,edx
    1d4b:	41 89 f1             	mov    r9d,esi
    1d4e:	41 83 e1 03          	and    r9d,0x3
    1d52:	39 f1                	cmp    ecx,esi
    1d54:	73 5a                	jae    1db0 <_Z13sumHashString8string_t+0x150>
    1d56:	48 63 d2             	movsxd rdx,edx
    1d59:	31 c9                	xor    ecx,ecx
    1d5b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1d60:	0f be 34 17          	movsx  esi,BYTE PTR [rdi+rdx*1]
    1d64:	c1 e1 08             	shl    ecx,0x8
    1d67:	48 83 c2 01          	add    rdx,0x1
    1d6b:	01 f1                	add    ecx,esi
    1d6d:	44 39 c2             	cmp    edx,r8d
    1d70:	72 ee                	jb     1d60 <_Z13sumHashString8string_t+0x100>
    1d72:	41 83 f9 03          	cmp    r9d,0x3
    1d76:	74 18                	je     1d90 <_Z13sumHashString8string_t+0x130>
    1d78:	41 83 f9 02          	cmp    r9d,0x2
    1d7c:	74 22                	je     1da0 <_Z13sumHashString8string_t+0x140>
    1d7e:	31 d2                	xor    edx,edx
    1d80:	c1 e1 18             	shl    ecx,0x18
    1d83:	41 83 f9 01          	cmp    r9d,0x1
    1d87:	0f 45 ca             	cmovne ecx,edx
    1d8a:	01 c8                	add    eax,ecx
    1d8c:	c3                   	ret
    1d8d:	0f 1f 00             	nop    DWORD PTR [rax]
    1d90:	c1 e1 08             	shl    ecx,0x8
    1d93:	01 c8                	add    eax,ecx
    1d95:	c3                   	ret
    1d96:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1d9d:	00 00 00 
    1da0:	c1 e1 10             	shl    ecx,0x10
    1da3:	01 c8                	add    eax,ecx
    1da5:	c3                   	ret
    1da6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1dad:	00 00 00 
    1db0:	31 c9                	xor    ecx,ecx
    1db2:	eb be                	jmp    1d72 <_Z13sumHashString8string_t+0x112>
    1db4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1db8:	31 c9                	xor    ecx,ecx
    1dba:	31 d2                	xor    edx,edx
    1dbc:	31 c0                	xor    eax,eax
    1dbe:	eb 8b                	jmp    1d4b <_Z13sumHashString8string_t+0xeb>
    1dc0:	c5 f8 77             	vzeroupper
    1dc3:	eb 81                	jmp    1d46 <_Z13sumHashString8string_t+0xe6>
    1dc5:	31 c9                	xor    ecx,ecx
    1dc7:	31 c0                	xor    eax,eax
    1dc9:	e9 13 ff ff ff       	jmp    1ce1 <_Z13sumHashString8string_t+0x81>
    1dce:	66 90                	xchg   ax,ax

0000000000001dd0 <_Z17adler32HashString8string_t>:
    1dd0:	f3 0f 1e fa          	endbr64
    1dd4:	48 c1 ee 20          	shr    rsi,0x20
    1dd8:	74 66                	je     1e40 <_Z17adler32HashString8string_t+0x70>
    1dda:	48 01 fe             	add    rsi,rdi
    1ddd:	31 c0                	xor    eax,eax
    1ddf:	ba 01 00 00 00       	mov    edx,0x1
    1de4:	41 b8 71 80 07 80    	mov    r8d,0x80078071
    1dea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1df0:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    1df3:	48 83 c7 01          	add    rdi,0x1
    1df7:	01 ca                	add    edx,ecx
    1df9:	48 89 d1             	mov    rcx,rdx
    1dfc:	49 0f af d0          	imul   rdx,r8
    1e00:	48 c1 ea 2f          	shr    rdx,0x2f
    1e04:	44 69 ca f1 ff 00 00 	imul   r9d,edx,0xfff1
    1e0b:	44 29 c9             	sub    ecx,r9d
    1e0e:	01 c8                	add    eax,ecx
    1e10:	89 ca                	mov    edx,ecx
    1e12:	89 c0                	mov    eax,eax
    1e14:	48 89 c1             	mov    rcx,rax
    1e17:	49 0f af c0          	imul   rax,r8
    1e1b:	48 c1 e8 2f          	shr    rax,0x2f
    1e1f:	44 69 c8 f1 ff 00 00 	imul   r9d,eax,0xfff1
    1e26:	89 c8                	mov    eax,ecx
    1e28:	44 29 c8             	sub    eax,r9d
    1e2b:	48 39 f7             	cmp    rdi,rsi
    1e2e:	75 c0                	jne    1df0 <_Z17adler32HashString8string_t+0x20>
    1e30:	c1 e0 10             	shl    eax,0x10
    1e33:	09 d0                	or     eax,edx
    1e35:	c3                   	ret
    1e36:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e3d:	00 00 00 
    1e40:	b8 01 00 00 00       	mov    eax,0x1
    1e45:	c3                   	ret
    1e46:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e4d:	00 00 00 

0000000000001e50 <_Z13elfHashString8string_t>:
    1e50:	f3 0f 1e fa          	endbr64
    1e54:	48 c1 ee 20          	shr    rsi,0x20
    1e58:	89 f0                	mov    eax,esi
    1e5a:	85 f6                	test   esi,esi
    1e5c:	74 3b                	je     1e99 <_Z13elfHashString8string_t+0x49>
    1e5e:	48 01 fe             	add    rsi,rdi
    1e61:	31 c0                	xor    eax,eax
    1e63:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1e68:	0f be 17             	movsx  edx,BYTE PTR [rdi]
    1e6b:	c1 e0 04             	shl    eax,0x4
    1e6e:	01 d0                	add    eax,edx
    1e70:	89 c2                	mov    edx,eax
    1e72:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e78:	74 16                	je     1e90 <_Z13elfHashString8string_t+0x40>
    1e7a:	89 d1                	mov    ecx,edx
    1e7c:	48 83 c7 01          	add    rdi,0x1
    1e80:	f7 d2                	not    edx
    1e82:	c1 e9 18             	shr    ecx,0x18
    1e85:	31 c8                	xor    eax,ecx
    1e87:	21 d0                	and    eax,edx
    1e89:	48 39 fe             	cmp    rsi,rdi
    1e8c:	75 da                	jne    1e68 <_Z13elfHashString8string_t+0x18>
    1e8e:	c3                   	ret
    1e8f:	90                   	nop
    1e90:	48 83 c7 01          	add    rdi,0x1
    1e94:	48 39 fe             	cmp    rsi,rdi
    1e97:	75 cf                	jne    1e68 <_Z13elfHashString8string_t+0x18>
    1e99:	c3                   	ret
    1e9a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001ea0 <_Z13searchElementP4List8string_t.part.0>:
    1ea0:	50                   	push   rax
    1ea1:	58                   	pop    rax
    1ea2:	48 8d 0d 1f 25 00 00 	lea    rcx,[rip+0x251f]        # 43c8 <_IO_stdin_used+0x3c8>
    1ea9:	ba 54 00 00 00       	mov    edx,0x54
    1eae:	48 8d 35 e3 21 00 00 	lea    rsi,[rip+0x21e3]        # 4098 <_IO_stdin_used+0x98>
    1eb5:	48 8d 3d f7 21 00 00 	lea    rdi,[rip+0x21f7]        # 40b3 <_IO_stdin_used+0xb3>
    1ebc:	48 83 ec 08          	sub    rsp,0x8
    1ec0:	e8 ab f1 ff ff       	call   1070 <__assert_fail@plt>
    1ec5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1ecc:	00 00 00 00 

0000000000001ed0 <_Z8listCtorv>:
    1ed0:	f3 0f 1e fa          	endbr64
    1ed4:	53                   	push   rbx
    1ed5:	be 20 00 00 00       	mov    esi,0x20
    1eda:	48 89 fb             	mov    rbx,rdi
    1edd:	bf 04 00 00 00       	mov    edi,0x4
    1ee2:	e8 99 f1 ff ff       	call   1080 <calloc@plt>
    1ee7:	48 8b 15 e2 27 00 00 	mov    rdx,QWORD PTR [rip+0x27e2]        # 46d0 <_IO_stdin_used+0x6d0>
    1eee:	48 b9 01 00 00 00 04 	movabs rcx,0x400000001
    1ef5:	00 00 00 
    1ef8:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    1eff:	00 
    1f00:	48 89 03             	mov    QWORD PTR [rbx],rax
    1f03:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    1f07:	48 8b 15 ca 27 00 00 	mov    rdx,QWORD PTR [rip+0x27ca]        # 46d8 <_IO_stdin_used+0x6d8>
    1f0e:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    1f15:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
    1f19:	48 8b 15 c0 27 00 00 	mov    rdx,QWORD PTR [rip+0x27c0]        # 46e0 <_IO_stdin_used+0x6e0>
    1f20:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    1f24:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    1f28:	48 89 d8             	mov    rax,rbx
    1f2b:	5b                   	pop    rbx
    1f2c:	c3                   	ret
    1f2d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001f30 <_Z12pushListElemP4List8string_t>:
    1f30:	f3 0f 1e fa          	endbr64
    1f34:	41 55                	push   r13
    1f36:	41 54                	push   r12
    1f38:	55                   	push   rbp
    1f39:	53                   	push   rbx
    1f3a:	48 83 ec 08          	sub    rsp,0x8
    1f3e:	48 85 ff             	test   rdi,rdi
    1f41:	0f 84 3d 01 00 00    	je     2084 <_Z12pushListElemP4List8string_t+0x154>
    1f47:	48 89 fd             	mov    rbp,rdi
    1f4a:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    1f4d:	49 89 f4             	mov    r12,rsi
    1f50:	49 89 d5             	mov    r13,rdx
    1f53:	8b 1f                	mov    ebx,DWORD PTR [rdi]
    1f55:	85 db                	test   ebx,ebx
    1f57:	75 12                	jne    1f6b <_Z12pushListElemP4List8string_t+0x3b>
    1f59:	e9 c2 00 00 00       	jmp    2020 <_Z12pushListElemP4List8string_t+0xf0>
    1f5e:	66 90                	xchg   ax,ax
    1f60:	8b 1c 1f             	mov    ebx,DWORD PTR [rdi+rbx*1]
    1f63:	85 db                	test   ebx,ebx
    1f65:	0f 84 b5 00 00 00    	je     2020 <_Z12pushListElemP4List8string_t+0xf0>
    1f6b:	48 c1 e3 05          	shl    rbx,0x5
    1f6f:	48 8b 74 1f 10       	mov    rsi,QWORD PTR [rdi+rbx*1+0x10]
    1f74:	4c 89 e7             	mov    rdi,r12
    1f77:	e8 c4 1b 00 00       	call   3b40 <my_strcmp>
    1f7c:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    1f80:	85 c0                	test   eax,eax
    1f82:	75 dc                	jne    1f60 <_Z12pushListElemP4List8string_t+0x30>
    1f84:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    1f88:	8b 55 08             	mov    edx,DWORD PTR [rbp+0x8]
    1f8b:	8b 48 08             	mov    ecx,DWORD PTR [rax+0x8]
    1f8e:	83 c1 01             	add    ecx,0x1
    1f91:	89 48 08             	mov    DWORD PTR [rax+0x8],ecx
    1f94:	39 55 0c             	cmp    DWORD PTR [rbp+0xc],edx
    1f97:	0f 85 d0 00 00 00    	jne    206d <_Z12pushListElemP4List8string_t+0x13d>
    1f9d:	44 8d 24 12          	lea    r12d,[rdx+rdx*1]
    1fa1:	44 89 65 0c          	mov    DWORD PTR [rbp+0xc],r12d
    1fa5:	49 c1 e4 05          	shl    r12,0x5
    1fa9:	4c 89 e6             	mov    rsi,r12
    1fac:	e8 bf f1 ff ff       	call   1170 <realloc@plt>
    1fb1:	8b 55 0c             	mov    edx,DWORD PTR [rbp+0xc]
    1fb4:	4c 89 e1             	mov    rcx,r12
    1fb7:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    1fbb:	d1 ea                	shr    edx,1
    1fbd:	48 c1 e2 05          	shl    rdx,0x5
    1fc1:	49 39 d4             	cmp    r12,rdx
    1fc4:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
    1fc8:	48 0f 42 ca          	cmovb  rcx,rdx
    1fcc:	31 f6                	xor    esi,esi
    1fce:	48 29 d1             	sub    rcx,rdx
    1fd1:	e8 4a f1 ff ff       	call   1120 <__memset_chk@plt>
    1fd6:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    1fd9:	8b 75 0c             	mov    esi,DWORD PTR [rbp+0xc]
    1fdc:	39 f0                	cmp    eax,esi
    1fde:	0f 83 96 00 00 00    	jae    207a <_Z12pushListElemP4List8string_t+0x14a>
    1fe4:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    1fe8:	89 c2                	mov    edx,eax
    1fea:	48 c1 e2 05          	shl    rdx,0x5
    1fee:	48 01 fa             	add    rdx,rdi
    1ff1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1ff8:	89 c1                	mov    ecx,eax
    1ffa:	83 c0 01             	add    eax,0x1
    1ffd:	48 83 c2 20          	add    rdx,0x20
    2001:	89 42 e0             	mov    DWORD PTR [rdx-0x20],eax
    2004:	89 4a e4             	mov    DWORD PTR [rdx-0x1c],ecx
    2007:	39 f0                	cmp    eax,esi
    2009:	75 ed                	jne    1ff8 <_Z12pushListElemP4List8string_t+0xc8>
    200b:	8b 4c 1f 08          	mov    ecx,DWORD PTR [rdi+rbx*1+0x8]
    200f:	48 83 c4 08          	add    rsp,0x8
    2013:	5b                   	pop    rbx
    2014:	5d                   	pop    rbp
    2015:	89 c8                	mov    eax,ecx
    2017:	41 5c                	pop    r12
    2019:	41 5d                	pop    r13
    201b:	c3                   	ret
    201c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2020:	8b 5d 08             	mov    ebx,DWORD PTR [rbp+0x8]
    2023:	8b 4f 04             	mov    ecx,DWORD PTR [rdi+0x4]
    2026:	48 89 de             	mov    rsi,rbx
    2029:	48 c1 e3 05          	shl    rbx,0x5
    202d:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    2031:	8b 10                	mov    edx,DWORD PTR [rax]
    2033:	89 55 08             	mov    DWORD PTR [rbp+0x8],edx
    2036:	89 48 04             	mov    DWORD PTR [rax+0x4],ecx
    2039:	48 c1 e1 05          	shl    rcx,0x5
    203d:	c7 40 08 00 00 00 00 	mov    DWORD PTR [rax+0x8],0x0
    2044:	4c 89 60 10          	mov    QWORD PTR [rax+0x10],r12
    2048:	4c 89 68 18          	mov    QWORD PTR [rax+0x18],r13
    204c:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    2052:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
    2055:	89 34 0f             	mov    DWORD PTR [rdi+rcx*1],esi
    2058:	b9 01 00 00 00       	mov    ecx,0x1
    205d:	83 45 10 01          	add    DWORD PTR [rbp+0x10],0x1
    2061:	89 48 08             	mov    DWORD PTR [rax+0x8],ecx
    2064:	39 55 0c             	cmp    DWORD PTR [rbp+0xc],edx
    2067:	0f 84 30 ff ff ff    	je     1f9d <_Z12pushListElemP4List8string_t+0x6d>
    206d:	48 83 c4 08          	add    rsp,0x8
    2071:	89 c8                	mov    eax,ecx
    2073:	5b                   	pop    rbx
    2074:	5d                   	pop    rbp
    2075:	41 5c                	pop    r12
    2077:	41 5d                	pop    r13
    2079:	c3                   	ret
    207a:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    207e:	8b 4c 18 08          	mov    ecx,DWORD PTR [rax+rbx*1+0x8]
    2082:	eb e9                	jmp    206d <_Z12pushListElemP4List8string_t+0x13d>
    2084:	48 8d 0d 65 23 00 00 	lea    rcx,[rip+0x2365]        # 43f0 <_IO_stdin_used+0x3f0>
    208b:	ba 1e 00 00 00       	mov    edx,0x1e
    2090:	48 8d 35 01 20 00 00 	lea    rsi,[rip+0x2001]        # 4098 <_IO_stdin_used+0x98>
    2097:	48 8d 3d 15 20 00 00 	lea    rdi,[rip+0x2015]        # 40b3 <_IO_stdin_used+0xb3>
    209e:	e8 cd ef ff ff       	call   1070 <__assert_fail@plt>
    20a3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    20aa:	00 00 00 00 
    20ae:	66 90                	xchg   ax,ax

00000000000020b0 <_Z11popListElemP4List8string_t>:
    20b0:	f3 0f 1e fa          	endbr64
    20b4:	41 55                	push   r13
    20b6:	41 54                	push   r12
    20b8:	55                   	push   rbp
    20b9:	53                   	push   rbx
    20ba:	48 83 ec 08          	sub    rsp,0x8
    20be:	48 85 ff             	test   rdi,rdi
    20c1:	0f 84 a6 00 00 00    	je     216d <_Z11popListElemP4List8string_t+0xbd>
    20c7:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    20ca:	49 89 fc             	mov    r12,rdi
    20cd:	49 89 f5             	mov    r13,rsi
    20d0:	8b 28                	mov    ebp,DWORD PTR [rax]
    20d2:	85 ed                	test   ebp,ebp
    20d4:	75 15                	jne    20eb <_Z11popListElemP4List8string_t+0x3b>
    20d6:	e9 85 00 00 00       	jmp    2160 <_Z11popListElemP4List8string_t+0xb0>
    20db:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    20e0:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    20e4:	8b 2c 18             	mov    ebp,DWORD PTR [rax+rbx*1]
    20e7:	85 ed                	test   ebp,ebp
    20e9:	74 75                	je     2160 <_Z11popListElemP4List8string_t+0xb0>
    20eb:	89 eb                	mov    ebx,ebp
    20ed:	4c 89 ef             	mov    rdi,r13
    20f0:	48 c1 e3 05          	shl    rbx,0x5
    20f4:	48 8b 74 18 10       	mov    rsi,QWORD PTR [rax+rbx*1+0x10]
    20f9:	e8 42 1a 00 00       	call   3b40 <my_strcmp>
    20fe:	85 c0                	test   eax,eax
    2100:	75 de                	jne    20e0 <_Z11popListElemP4List8string_t+0x30>
    2102:	49 8b 0c 24          	mov    rcx,QWORD PTR [r12]
    2106:	c4 c1 79 6e 4c 24 08 	vmovd  xmm1,DWORD PTR [r12+0x8]
    210d:	89 e8                	mov    eax,ebp
    210f:	48 01 cb             	add    rbx,rcx
    2112:	c4 e3 71 22 c5 01    	vpinsrd xmm0,xmm1,ebp,0x1
    2118:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
    211b:	8b 13                	mov    edx,DWORD PTR [rbx]
    211d:	c7 43 18 00 00 00 00 	mov    DWORD PTR [rbx+0x18],0x0
    2124:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    212b:	00 
    212c:	48 89 f7             	mov    rdi,rsi
    212f:	48 c1 e6 05          	shl    rsi,0x5
    2133:	89 14 31             	mov    DWORD PTR [rcx+rsi*1],edx
    2136:	48 c1 e2 05          	shl    rdx,0x5
    213a:	89 7c 11 04          	mov    DWORD PTR [rcx+rdx*1+0x4],edi
    213e:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    2142:	41 89 6c 24 08       	mov    DWORD PTR [r12+0x8],ebp
    2147:	41 83 6c 24 10 01    	sub    DWORD PTR [r12+0x10],0x1
    214d:	48 83 c4 08          	add    rsp,0x8
    2151:	5b                   	pop    rbx
    2152:	5d                   	pop    rbp
    2153:	41 5c                	pop    r12
    2155:	41 5d                	pop    r13
    2157:	c3                   	ret
    2158:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    215f:	00 
    2160:	48 83 c4 08          	add    rsp,0x8
    2164:	31 c0                	xor    eax,eax
    2166:	5b                   	pop    rbx
    2167:	5d                   	pop    rbp
    2168:	41 5c                	pop    r12
    216a:	41 5d                	pop    r13
    216c:	c3                   	ret
    216d:	48 8d 0d 9c 22 00 00 	lea    rcx,[rip+0x229c]        # 4410 <_IO_stdin_used+0x410>
    2174:	ba 3b 00 00 00       	mov    edx,0x3b
    2179:	48 8d 35 18 1f 00 00 	lea    rsi,[rip+0x1f18]        # 4098 <_IO_stdin_used+0x98>
    2180:	48 8d 3d 2c 1f 00 00 	lea    rdi,[rip+0x1f2c]        # 40b3 <_IO_stdin_used+0xb3>
    2187:	e8 e4 ee ff ff       	call   1070 <__assert_fail@plt>
    218c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002190 <_Z13searchElementP4List8string_t>:
    2190:	f3 0f 1e fa          	endbr64
    2194:	41 55                	push   r13
    2196:	41 54                	push   r12
    2198:	55                   	push   rbp
    2199:	53                   	push   rbx
    219a:	48 83 ec 08          	sub    rsp,0x8
    219e:	48 85 ff             	test   rdi,rdi
    21a1:	74 5a                	je     21fd <_Z13searchElementP4List8string_t+0x6d>
    21a3:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    21a6:	49 89 fc             	mov    r12,rdi
    21a9:	49 89 f5             	mov    r13,rsi
    21ac:	8b 28                	mov    ebp,DWORD PTR [rax]
    21ae:	85 ed                	test   ebp,ebp
    21b0:	75 11                	jne    21c3 <_Z13searchElementP4List8string_t+0x33>
    21b2:	eb 3c                	jmp    21f0 <_Z13searchElementP4List8string_t+0x60>
    21b4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    21b8:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    21bc:	8b 2c 18             	mov    ebp,DWORD PTR [rax+rbx*1]
    21bf:	85 ed                	test   ebp,ebp
    21c1:	74 2d                	je     21f0 <_Z13searchElementP4List8string_t+0x60>
    21c3:	89 eb                	mov    ebx,ebp
    21c5:	4c 89 ef             	mov    rdi,r13
    21c8:	48 c1 e3 05          	shl    rbx,0x5
    21cc:	48 8b 74 18 10       	mov    rsi,QWORD PTR [rax+rbx*1+0x10]
    21d1:	e8 6a 19 00 00       	call   3b40 <my_strcmp>
    21d6:	85 c0                	test   eax,eax
    21d8:	75 de                	jne    21b8 <_Z13searchElementP4List8string_t+0x28>
    21da:	48 83 c4 08          	add    rsp,0x8
    21de:	89 e8                	mov    eax,ebp
    21e0:	5b                   	pop    rbx
    21e1:	5d                   	pop    rbp
    21e2:	41 5c                	pop    r12
    21e4:	41 5d                	pop    r13
    21e6:	c3                   	ret
    21e7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    21ee:	00 00 
    21f0:	48 83 c4 08          	add    rsp,0x8
    21f4:	31 c0                	xor    eax,eax
    21f6:	5b                   	pop    rbx
    21f7:	5d                   	pop    rbp
    21f8:	41 5c                	pop    r12
    21fa:	41 5d                	pop    r13
    21fc:	c3                   	ret
    21fd:	e8 9e fc ff ff       	call   1ea0 <_Z13searchElementP4List8string_t.part.0>
    2202:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2209:	00 00 00 00 
    220d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002210 <_Z8listDtorP4List>:
    2210:	f3 0f 1e fa          	endbr64
    2214:	53                   	push   rbx
    2215:	48 85 ff             	test   rdi,rdi
    2218:	74 15                	je     222f <_Z8listDtorP4List+0x1f>
    221a:	48 89 fb             	mov    rbx,rdi
    221d:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    2220:	e8 db ee ff ff       	call   1100 <free@plt>
    2225:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    222c:	00 
    222d:	5b                   	pop    rbx
    222e:	c3                   	ret
    222f:	48 8d 0d 82 1e 00 00 	lea    rcx,[rip+0x1e82]        # 40b8 <_IO_stdin_used+0xb8>
    2236:	ba 8e 00 00 00       	mov    edx,0x8e
    223b:	48 8d 35 56 1e 00 00 	lea    rsi,[rip+0x1e56]        # 4098 <_IO_stdin_used+0x98>
    2242:	48 8d 3d 6a 1e 00 00 	lea    rdi,[rip+0x1e6a]        # 40b3 <_IO_stdin_used+0xb3>
    2249:	e8 22 ee ff ff       	call   1070 <__assert_fail@plt>
    224e:	66 90                	xchg   ax,ax

0000000000002250 <_Z10debugPrintP4List>:
    2250:	f3 0f 1e fa          	endbr64
    2254:	41 54                	push   r12
    2256:	55                   	push   rbp
    2257:	53                   	push   rbx
    2258:	48 85 ff             	test   rdi,rdi
    225b:	0f 84 f3 01 00 00    	je     2454 <_Z10debugPrintP4List+0x204>
    2261:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
    2264:	48 89 fb             	mov    rbx,rdi
    2267:	48 8d 35 76 1e 00 00 	lea    rsi,[rip+0x1e76]        # 40e4 <_IO_stdin_used+0xe4>
    226e:	31 c0                	xor    eax,eax
    2270:	bf 02 00 00 00       	mov    edi,0x2
    2275:	e8 b6 ed ff ff       	call   1030 <__printf_chk@plt>
    227a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    227d:	bf 02 00 00 00       	mov    edi,0x2
    2282:	31 c0                	xor    eax,eax
    2284:	48 8d 35 67 1e 00 00 	lea    rsi,[rip+0x1e67]        # 40f2 <_IO_stdin_used+0xf2>
    228b:	e8 a0 ed ff ff       	call   1030 <__printf_chk@plt>
    2290:	8b 53 10             	mov    edx,DWORD PTR [rbx+0x10]
    2293:	bf 02 00 00 00       	mov    edi,0x2
    2298:	31 c0                	xor    eax,eax
    229a:	48 8d 35 5f 1e 00 00 	lea    rsi,[rip+0x1e5f]        # 4100 <_IO_stdin_used+0x100>
    22a1:	e8 8a ed ff ff       	call   1030 <__printf_chk@plt>
    22a6:	bf 02 00 00 00       	mov    edi,0x2
    22ab:	48 8d 35 5c 1e 00 00 	lea    rsi,[rip+0x1e5c]        # 410e <_IO_stdin_used+0x10e>
    22b2:	31 c0                	xor    eax,eax
    22b4:	e8 77 ed ff ff       	call   1030 <__printf_chk@plt>
    22b9:	8b 7b 0c             	mov    edi,DWORD PTR [rbx+0xc]
    22bc:	85 ff                	test   edi,edi
    22be:	74 2c                	je     22ec <_Z10debugPrintP4List+0x9c>
    22c0:	45 31 e4             	xor    r12d,r12d
    22c3:	48 8d 2d 4f 1e 00 00 	lea    rbp,[rip+0x1e4f]        # 4119 <_IO_stdin_used+0x119>
    22ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    22d0:	44 89 e2             	mov    edx,r12d
    22d3:	48 89 ee             	mov    rsi,rbp
    22d6:	bf 02 00 00 00       	mov    edi,0x2
    22db:	31 c0                	xor    eax,eax
    22dd:	e8 4e ed ff ff       	call   1030 <__printf_chk@plt>
    22e2:	41 83 c4 01          	add    r12d,0x1
    22e6:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    22ea:	72 e4                	jb     22d0 <_Z10debugPrintP4List+0x80>
    22ec:	bf 0a 00 00 00       	mov    edi,0xa
    22f1:	e8 3a ee ff ff       	call   1130 <putchar@plt>
    22f6:	48 8d 35 20 1e 00 00 	lea    rsi,[rip+0x1e20]        # 411d <_IO_stdin_used+0x11d>
    22fd:	bf 02 00 00 00       	mov    edi,0x2
    2302:	31 c0                	xor    eax,eax
    2304:	e8 27 ed ff ff       	call   1030 <__printf_chk@plt>
    2309:	8b 73 0c             	mov    esi,DWORD PTR [rbx+0xc]
    230c:	85 f6                	test   esi,esi
    230e:	74 35                	je     2345 <_Z10debugPrintP4List+0xf5>
    2310:	45 31 e4             	xor    r12d,r12d
    2313:	48 8d 2d ff 1d 00 00 	lea    rbp,[rip+0x1dff]        # 4119 <_IO_stdin_used+0x119>
    231a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2320:	4c 89 e0             	mov    rax,r12
    2323:	48 89 ee             	mov    rsi,rbp
    2326:	bf 02 00 00 00       	mov    edi,0x2
    232b:	49 83 c4 01          	add    r12,0x1
    232f:	48 c1 e0 05          	shl    rax,0x5
    2333:	48 03 03             	add    rax,QWORD PTR [rbx]
    2336:	8b 10                	mov    edx,DWORD PTR [rax]
    2338:	31 c0                	xor    eax,eax
    233a:	e8 f1 ec ff ff       	call   1030 <__printf_chk@plt>
    233f:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    2343:	72 db                	jb     2320 <_Z10debugPrintP4List+0xd0>
    2345:	bf 0a 00 00 00       	mov    edi,0xa
    234a:	e8 e1 ed ff ff       	call   1130 <putchar@plt>
    234f:	48 8d 35 d2 1d 00 00 	lea    rsi,[rip+0x1dd2]        # 4128 <_IO_stdin_used+0x128>
    2356:	bf 02 00 00 00       	mov    edi,0x2
    235b:	31 c0                	xor    eax,eax
    235d:	e8 ce ec ff ff       	call   1030 <__printf_chk@plt>
    2362:	8b 4b 0c             	mov    ecx,DWORD PTR [rbx+0xc]
    2365:	85 c9                	test   ecx,ecx
    2367:	74 35                	je     239e <_Z10debugPrintP4List+0x14e>
    2369:	45 31 e4             	xor    r12d,r12d
    236c:	48 8d 2d a6 1d 00 00 	lea    rbp,[rip+0x1da6]        # 4119 <_IO_stdin_used+0x119>
    2373:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2378:	4c 89 e0             	mov    rax,r12
    237b:	48 89 ee             	mov    rsi,rbp
    237e:	bf 02 00 00 00       	mov    edi,0x2
    2383:	49 83 c4 01          	add    r12,0x1
    2387:	48 c1 e0 05          	shl    rax,0x5
    238b:	48 03 03             	add    rax,QWORD PTR [rbx]
    238e:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    2391:	31 c0                	xor    eax,eax
    2393:	e8 98 ec ff ff       	call   1030 <__printf_chk@plt>
    2398:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    239c:	72 da                	jb     2378 <_Z10debugPrintP4List+0x128>
    239e:	bf 0a 00 00 00       	mov    edi,0xa
    23a3:	e8 88 ed ff ff       	call   1130 <putchar@plt>
    23a8:	48 8d 35 84 1d 00 00 	lea    rsi,[rip+0x1d84]        # 4133 <_IO_stdin_used+0x133>
    23af:	bf 02 00 00 00       	mov    edi,0x2
    23b4:	31 c0                	xor    eax,eax
    23b6:	e8 75 ec ff ff       	call   1030 <__printf_chk@plt>
    23bb:	8b 53 0c             	mov    edx,DWORD PTR [rbx+0xc]
    23be:	85 d2                	test   edx,edx
    23c0:	74 34                	je     23f6 <_Z10debugPrintP4List+0x1a6>
    23c2:	45 31 e4             	xor    r12d,r12d
    23c5:	48 8d 2d 4d 1d 00 00 	lea    rbp,[rip+0x1d4d]        # 4119 <_IO_stdin_used+0x119>
    23cc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    23d0:	4c 89 e0             	mov    rax,r12
    23d3:	48 89 ee             	mov    rsi,rbp
    23d6:	bf 02 00 00 00       	mov    edi,0x2
    23db:	49 83 c4 01          	add    r12,0x1
    23df:	48 c1 e0 05          	shl    rax,0x5
    23e3:	48 03 03             	add    rax,QWORD PTR [rbx]
    23e6:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    23e9:	31 c0                	xor    eax,eax
    23eb:	e8 40 ec ff ff       	call   1030 <__printf_chk@plt>
    23f0:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    23f4:	72 da                	jb     23d0 <_Z10debugPrintP4List+0x180>
    23f6:	bf 0a 00 00 00       	mov    edi,0xa
    23fb:	e8 30 ed ff ff       	call   1130 <putchar@plt>
    2400:	48 8d 3d 37 1d 00 00 	lea    rdi,[rip+0x1d37]        # 413e <_IO_stdin_used+0x13e>
    2407:	e8 54 ed ff ff       	call   1160 <puts@plt>
    240c:	8b 43 0c             	mov    eax,DWORD PTR [rbx+0xc]
    240f:	85 c0                	test   eax,eax
    2411:	74 33                	je     2446 <_Z10debugPrintP4List+0x1f6>
    2413:	31 ed                	xor    ebp,ebp
    2415:	4c 8d 25 27 1d 00 00 	lea    r12,[rip+0x1d27]        # 4143 <_IO_stdin_used+0x143>
    241c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2420:	48 89 e8             	mov    rax,rbp
    2423:	4c 89 e6             	mov    rsi,r12
    2426:	bf 02 00 00 00       	mov    edi,0x2
    242b:	48 83 c5 01          	add    rbp,0x1
    242f:	48 c1 e0 05          	shl    rax,0x5
    2433:	48 03 03             	add    rax,QWORD PTR [rbx]
    2436:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    243a:	31 c0                	xor    eax,eax
    243c:	e8 ef eb ff ff       	call   1030 <__printf_chk@plt>
    2441:	3b 6b 0c             	cmp    ebp,DWORD PTR [rbx+0xc]
    2444:	72 da                	jb     2420 <_Z10debugPrintP4List+0x1d0>
    2446:	5b                   	pop    rbx
    2447:	bf 0a 00 00 00       	mov    edi,0xa
    244c:	5d                   	pop    rbp
    244d:	41 5c                	pop    r12
    244f:	e9 dc ec ff ff       	jmp    1130 <putchar@plt>
    2454:	48 8d 0d 72 1c 00 00 	lea    rcx,[rip+0x1c72]        # 40cd <_IO_stdin_used+0xcd>
    245b:	ba 97 00 00 00       	mov    edx,0x97
    2460:	48 8d 35 31 1c 00 00 	lea    rsi,[rip+0x1c31]        # 4098 <_IO_stdin_used+0x98>
    2467:	48 8d 3d 45 1c 00 00 	lea    rdi,[rip+0x1c45]        # 40b3 <_IO_stdin_used+0xb3>
    246e:	e8 fd eb ff ff       	call   1070 <__assert_fail@plt>
    2473:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    247a:	00 00 00 
    247d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002480 <_Z8readFilePKcPm>:
    2480:	f3 0f 1e fa          	endbr64
    2484:	55                   	push   rbp
    2485:	48 89 e5             	mov    rbp,rsp
    2488:	41 55                	push   r13
    248a:	41 54                	push   r12
    248c:	53                   	push   rbx
    248d:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    2494:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    249b:	00 00 
    249d:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    24a4:	00 
    24a5:	31 c0                	xor    eax,eax
    24a7:	48 85 ff             	test   rdi,rdi
    24aa:	0f 84 b4 00 00 00    	je     2564 <_Z8readFilePKcPm+0xe4>
    24b0:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    24b4:	49 89 f4             	mov    r12,rsi
    24b7:	48 89 e6             	mov    rsi,rsp
    24ba:	48 89 fb             	mov    rbx,rdi
    24bd:	c5 fe 7f 04 24       	vmovdqu YMMWORD PTR [rsp],ymm0
    24c2:	c5 fe 7f 44 24 20    	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
    24c8:	c5 fe 7f 44 24 40    	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
    24ce:	c5 fe 7f 44 24 60    	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
    24d4:	c5 f9 7f 84 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
    24db:	00 00 
    24dd:	c5 f8 77             	vzeroupper
    24e0:	e8 cb eb ff ff       	call   10b0 <stat@plt>
    24e5:	83 f8 ff             	cmp    eax,0xffffffff
    24e8:	74 76                	je     2560 <_Z8readFilePKcPm+0xe0>
    24ea:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
    24ef:	31 f6                	xor    esi,esi
    24f1:	48 89 df             	mov    rdi,rbx
    24f4:	31 c0                	xor    eax,eax
    24f6:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    24fa:	e8 91 eb ff ff       	call   1090 <open@plt>
    24ff:	41 89 c4             	mov    r12d,eax
    2502:	83 f8 ff             	cmp    eax,0xffffffff
    2505:	74 59                	je     2560 <_Z8readFilePKcPm+0xe0>
    2507:	be 01 00 00 00       	mov    esi,0x1
    250c:	4c 89 ef             	mov    rdi,r13
    250f:	e8 6c eb ff ff       	call   1080 <calloc@plt>
    2514:	48 89 c3             	mov    rbx,rax
    2517:	48 85 c0             	test   rax,rax
    251a:	74 16                	je     2532 <_Z8readFilePKcPm+0xb2>
    251c:	44 89 e7             	mov    edi,r12d
    251f:	4c 89 ea             	mov    rdx,r13
    2522:	48 89 c6             	mov    rsi,rax
    2525:	e8 26 ec ff ff       	call   1150 <read@plt>
    252a:	44 89 e7             	mov    edi,r12d
    252d:	e8 7e ec ff ff       	call   11b0 <close@plt>
    2532:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    2539:	00 
    253a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2541:	00 00 
    2543:	75 3e                	jne    2583 <_Z8readFilePKcPm+0x103>
    2545:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    254c:	48 89 d8             	mov    rax,rbx
    254f:	5b                   	pop    rbx
    2550:	41 5c                	pop    r12
    2552:	41 5d                	pop    r13
    2554:	5d                   	pop    rbp
    2555:	c3                   	ret
    2556:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    255d:	00 00 00 
    2560:	31 db                	xor    ebx,ebx
    2562:	eb ce                	jmp    2532 <_Z8readFilePKcPm+0xb2>
    2564:	48 8d 0d c5 1e 00 00 	lea    rcx,[rip+0x1ec5]        # 4430 <_IO_stdin_used+0x430>
    256b:	ba 0c 00 00 00       	mov    edx,0xc
    2570:	48 8d 35 d3 1b 00 00 	lea    rsi,[rip+0x1bd3]        # 414a <_IO_stdin_used+0x14a>
    2577:	48 8d 3d e8 1b 00 00 	lea    rdi,[rip+0x1be8]        # 4166 <_IO_stdin_used+0x166>
    257e:	e8 ed ea ff ff       	call   1070 <__assert_fail@plt>
    2583:	e8 58 eb ff ff       	call   10e0 <__stack_chk_fail@plt>
    2588:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    258f:	00 

0000000000002590 <_Z10countLinesPcm>:
    2590:	f3 0f 1e fa          	endbr64
    2594:	41 54                	push   r12
    2596:	55                   	push   rbp
    2597:	53                   	push   rbx
    2598:	48 85 ff             	test   rdi,rdi
    259b:	74 36                	je     25d3 <_Z10countLinesPcm+0x43>
    259d:	48 89 fd             	mov    rbp,rdi
    25a0:	49 89 f4             	mov    r12,rsi
    25a3:	31 db                	xor    ebx,ebx
    25a5:	48 85 f6             	test   rsi,rsi
    25a8:	74 22                	je     25cc <_Z10countLinesPcm+0x3c>
    25aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    25b0:	be 0a 00 00 00       	mov    esi,0xa
    25b5:	83 c3 01             	add    ebx,0x1
    25b8:	e8 93 ea ff ff       	call   1050 <strchr@plt>
    25bd:	48 8d 78 01          	lea    rdi,[rax+0x1]
    25c1:	48 89 f8             	mov    rax,rdi
    25c4:	48 29 e8             	sub    rax,rbp
    25c7:	4c 39 e0             	cmp    rax,r12
    25ca:	75 e4                	jne    25b0 <_Z10countLinesPcm+0x20>
    25cc:	89 d8                	mov    eax,ebx
    25ce:	5b                   	pop    rbx
    25cf:	5d                   	pop    rbp
    25d0:	41 5c                	pop    r12
    25d2:	c3                   	ret
    25d3:	48 8d 0d 7e 1e 00 00 	lea    rcx,[rip+0x1e7e]        # 4458 <_IO_stdin_used+0x458>
    25da:	ba 22 00 00 00       	mov    edx,0x22
    25df:	48 8d 35 64 1b 00 00 	lea    rsi,[rip+0x1b64]        # 414a <_IO_stdin_used+0x14a>
    25e6:	48 8d 3d 30 1a 00 00 	lea    rdi,[rip+0x1a30]        # 401d <_IO_stdin_used+0x1d>
    25ed:	e8 7e ea ff ff       	call   1070 <__assert_fail@plt>
    25f2:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    25f9:	00 00 00 
    25fc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002600 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData>:
    2600:	f3 0f 1e fa          	endbr64
    2604:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    2609:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    260d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    2611:	55                   	push   rbp
    2612:	48 89 e5             	mov    rbp,rsp
    2615:	41 57                	push   r15
    2617:	41 56                	push   r14
    2619:	41 55                	push   r13
    261b:	41 54                	push   r12
    261d:	41 52                	push   r10
    261f:	53                   	push   rbx
    2620:	48 83 ec 40          	sub    rsp,0x40
    2624:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    262b:	00 00 
    262d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2631:	31 c0                	xor    eax,eax
    2633:	48 85 ff             	test   rdi,rdi
    2636:	0f 84 f3 03 00 00    	je     2a2f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x42f>
    263c:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2640:	49 89 fd             	mov    r13,rdi
    2643:	48 89 d3             	mov    rbx,rdx
    2646:	49 89 ce             	mov    r14,rcx
    2649:	ba 02 00 00 00       	mov    edx,0x2
    264e:	4c 89 e7             	mov    rdi,r12
    2651:	e8 da ed ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2656:	45 85 f6             	test   r14d,r14d
    2659:	74 25                	je     2680 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x80>
    265b:	45 89 f6             	mov    r14d,r14d
    265e:	49 c1 e6 04          	shl    r14,0x4
    2662:	49 01 de             	add    r14,rbx
    2665:	0f 1f 00             	nop    DWORD PTR [rax]
    2668:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    266b:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    266f:	4c 89 e7             	mov    rdi,r12
    2672:	48 83 c3 10          	add    rbx,0x10
    2676:	e8 65 ee ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    267b:	49 39 de             	cmp    r14,rbx
    267e:	75 e8                	jne    2668 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x68>
    2680:	4c 89 e9             	mov    rcx,r13
    2683:	ba 19 00 00 00       	mov    edx,0x19
    2688:	be 01 00 00 00       	mov    esi,0x1
    268d:	48 8d 3d fc 1a 00 00 	lea    rdi,[rip+0x1afc]        # 4190 <_IO_stdin_used+0x190>
    2694:	e8 07 eb ff ff       	call   11a0 <fwrite@plt>
    2699:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    269c:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    26a0:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    26a4:	85 c0                	test   eax,eax
    26a6:	74 69                	je     2711 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x111>
    26a8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    26ac:	31 db                	xor    ebx,ebx
    26ae:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    26b2:	4c 8d 3d f1 1a 00 00 	lea    r15,[rip+0x1af1]        # 41aa <_IO_stdin_used+0x1aa>
    26b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    26c0:	4c 8d 34 5b          	lea    r14,[rbx+rbx*2]
    26c4:	89 d9                	mov    ecx,ebx
    26c6:	4c 89 fa             	mov    rdx,r15
    26c9:	be 02 00 00 00       	mov    esi,0x2
    26ce:	49 c1 e6 03          	shl    r14,0x3
    26d2:	4c 89 ef             	mov    rdi,r13
    26d5:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    26da:	48 83 c3 01          	add    rbx,0x1
    26de:	46 8b 44 30 10       	mov    r8d,DWORD PTR [rax+r14*1+0x10]
    26e3:	31 c0                	xor    eax,eax
    26e5:	e8 96 ea ff ff       	call   1180 <__fprintf_chk@plt>
    26ea:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    26ee:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    26f2:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    26f7:	42 8b 54 30 10       	mov    edx,DWORD PTR [rax+r14*1+0x10]
    26fc:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2701:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    2704:	c5 ea 58 d0          	vaddss xmm2,xmm2,xmm0
    2708:	39 d3                	cmp    ebx,edx
    270a:	72 b4                	jb     26c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc0>
    270c:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2711:	c5 ea 5e d0          	vdivss xmm2,xmm2,xmm0
    2715:	bf 02 00 00 00       	mov    edi,0x2
    271a:	b8 01 00 00 00       	mov    eax,0x1
    271f:	48 8d 35 8b 1a 00 00 	lea    rsi,[rip+0x1a8b]        # 41b1 <_IO_stdin_used+0x1b1>
    2726:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    272b:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    272f:	e8 fc e8 ff ff       	call   1030 <__printf_chk@plt>
    2734:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    2737:	85 f6                	test   esi,esi
    2739:	0f 84 c1 02 00 00    	je     2a00 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x400>
    273f:	8d 46 ff             	lea    eax,[rsi-0x1]
    2742:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    2746:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    274b:	83 f8 06             	cmp    eax,0x6
    274e:	0f 86 c1 02 00 00    	jbe    2a15 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x415>
    2754:	48 8d 47 10          	lea    rax,[rdi+0x10]
    2758:	c4 e2 7d 18 ea       	vbroadcastss ymm5,xmm2
    275d:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2761:	89 f2                	mov    edx,esi
    2763:	c4 e2 7d 18 25 a4 18 	vbroadcastss ymm4,DWORD PTR [rip+0x18a4]        # 4010 <_IO_stdin_used+0x10>
    276a:	00 00 
    276c:	c1 ea 03             	shr    edx,0x3
    276f:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    2776:	ff ff ff 
    2779:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    277d:	ba ff ff 00 00       	mov    edx,0xffff
    2782:	49 c1 e0 06          	shl    r8,0x6
    2786:	c5 f9 6e da          	vmovd  xmm3,edx
    278a:	49 01 c0             	add    r8,rax
    278d:	c4 e2 7d 58 db       	vpbroadcastd ymm3,xmm3
    2792:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2798:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    279b:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    279e:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    27a2:	48 05 c0 00 00 00    	add    rax,0xc0
    27a8:	c5 fd 7f 75 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm6
    27ad:	48 c1 e2 20          	shl    rdx,0x20
    27b1:	49 09 d1             	or     r9,rdx
    27b4:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    27b8:	4c 89 4d 90          	mov    QWORD PTR [rbp-0x70],r9
    27bc:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    27c3:	48 21 ca             	and    rdx,rcx
    27c6:	4c 09 ca             	or     rdx,r9
    27c9:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    27cd:	89 d2                	mov    edx,edx
    27cf:	49 c1 e1 20          	shl    r9,0x20
    27d3:	4c 09 ca             	or     rdx,r9
    27d6:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    27da:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    27de:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    27e2:	48 21 ca             	and    rdx,rcx
    27e5:	4c 09 ca             	or     rdx,r9
    27e8:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    27ec:	89 d2                	mov    edx,edx
    27ee:	49 c1 e1 20          	shl    r9,0x20
    27f2:	4c 09 ca             	or     rdx,r9
    27f5:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    27f9:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
    27fd:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    2801:	48 21 ca             	and    rdx,rcx
    2804:	4c 09 ca             	or     rdx,r9
    2807:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    280b:	89 d2                	mov    edx,edx
    280d:	49 c1 e1 20          	shl    r9,0x20
    2811:	4c 09 ca             	or     rdx,r9
    2814:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    2818:	c5 fd 6f 75 90       	vmovdqa ymm6,YMMWORD PTR [rbp-0x70]
    281d:	c5 e5 db 45 90       	vpand  ymm0,ymm3,YMMWORD PTR [rbp-0x70]
    2822:	c5 f5 72 d6 10       	vpsrld ymm1,ymm6,0x10
    2827:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    282b:	c5 f4 59 cc          	vmulps ymm1,ymm1,ymm4
    282f:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    2833:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    2837:	c5 fc 5c c5          	vsubps ymm0,ymm0,ymm5
    283b:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    283f:	c5 c2 58 c8          	vaddss xmm1,xmm7,xmm0
    2843:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    2848:	c5 f8 c6 f0 ff       	vshufps xmm6,xmm0,xmm0,0xff
    284d:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2851:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    2855:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    285b:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    285f:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2863:	c5 f8 c6 f0 55       	vshufps xmm6,xmm0,xmm0,0x55
    2868:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    286c:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2870:	c5 f8 15 f0          	vunpckhps xmm6,xmm0,xmm0
    2874:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    2879:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    287d:	c5 f2 58 f8          	vaddss xmm7,xmm1,xmm0
    2881:	49 39 c0             	cmp    r8,rax
    2884:	0f 85 0e ff ff ff    	jne    2798 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x198>
    288a:	89 f0                	mov    eax,esi
    288c:	83 e0 f8             	and    eax,0xfffffff8
    288f:	40 f6 c6 07          	test   sil,0x7
    2893:	0f 84 77 01 00 00    	je     2a10 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x410>
    2899:	c5 f8 77             	vzeroupper
    289c:	89 f1                	mov    ecx,esi
    289e:	29 c1                	sub    ecx,eax
    28a0:	8d 51 ff             	lea    edx,[rcx-0x1]
    28a3:	83 fa 02             	cmp    edx,0x2
    28a6:	0f 86 8b 00 00 00    	jbe    2937 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x337>
    28ac:	c4 e2 79 18 1d 5b 17 	vbroadcastss xmm3,DWORD PTR [rip+0x175b]        # 4010 <_IO_stdin_used+0x10>
    28b3:	00 00 
    28b5:	89 c2                	mov    edx,eax
    28b7:	bb ff ff 00 00       	mov    ebx,0xffff
    28bc:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    28c0:	c5 f9 6e cb          	vmovd  xmm1,ebx
    28c4:	c5 f9 6e 44 d7 10    	vmovd  xmm0,DWORD PTR [rdi+rdx*8+0x10]
    28ca:	c4 e3 79 22 44 d7 28 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x28],0x1
    28d1:	01 
    28d2:	c5 f9 70 c9 00       	vpshufd xmm1,xmm1,0x0
    28d7:	c4 e3 79 22 44 d7 40 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x40],0x2
    28de:	02 
    28df:	c4 e3 79 22 44 d7 58 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x58],0x3
    28e6:	03 
    28e7:	89 ca                	mov    edx,ecx
    28e9:	83 e2 fc             	and    edx,0xfffffffc
    28ec:	c5 f9 db c9          	vpand  xmm1,xmm0,xmm1
    28f0:	c5 f9 72 d0 10       	vpsrld xmm0,xmm0,0x10
    28f5:	01 d0                	add    eax,edx
    28f7:	83 e1 03             	and    ecx,0x3
    28fa:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    28fe:	c5 f8 59 c3          	vmulps xmm0,xmm0,xmm3
    2902:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    2906:	c5 f0 58 c8          	vaddps xmm1,xmm1,xmm0
    290a:	c5 e8 c6 c2 00       	vshufps xmm0,xmm2,xmm2,0x0
    290f:	c5 f0 5c c8          	vsubps xmm1,xmm1,xmm0
    2913:	c5 f0 59 c9          	vmulps xmm1,xmm1,xmm1
    2917:	c5 c2 58 c1          	vaddss xmm0,xmm7,xmm1
    291b:	c5 f0 c6 d9 55       	vshufps xmm3,xmm1,xmm1,0x55
    2920:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    2924:	c5 f0 15 d9          	vunpckhps xmm3,xmm1,xmm1
    2928:	c5 f0 c6 c9 ff       	vshufps xmm1,xmm1,xmm1,0xff
    292d:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    2931:	c5 fa 58 f9          	vaddss xmm7,xmm0,xmm1
    2935:	74 5f                	je     2996 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    2937:	89 c2                	mov    edx,eax
    2939:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    293d:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2941:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2945:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    294a:	8d 50 01             	lea    edx,[rax+0x1]
    294d:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2951:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2955:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2959:	39 f2                	cmp    edx,esi
    295b:	73 39                	jae    2996 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    295d:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2961:	83 c0 02             	add    eax,0x2
    2964:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2968:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    296d:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2971:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2975:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2979:	39 f0                	cmp    eax,esi
    297b:	73 19                	jae    2996 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    297d:	48 8d 04 40          	lea    rax,[rax+rax*2]
    2981:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    2985:	c4 e1 d2 2a c0       	vcvtsi2ss xmm0,xmm5,rax
    298a:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    298e:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2992:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2996:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    299a:	c4 e1 d2 2a c6       	vcvtsi2ss xmm0,xmm5,rsi
    299f:	c5 c2 5e f8          	vdivss xmm7,xmm7,xmm0
    29a3:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    29a7:	c5 f8 2e c7          	vucomiss xmm0,xmm7
    29ab:	77 73                	ja     2a20 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x420>
    29ad:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    29b1:	bf 02 00 00 00       	mov    edi,0x2
    29b6:	48 8d 35 0e 18 00 00 	lea    rsi,[rip+0x180e]        # 41cb <_IO_stdin_used+0x1cb>
    29bd:	b8 01 00 00 00       	mov    eax,0x1
    29c2:	c5 c2 5a c7          	vcvtss2sd xmm0,xmm7,xmm7
    29c6:	e8 65 e6 ff ff       	call   1030 <__printf_chk@plt>
    29cb:	4c 89 e7             	mov    rdi,r12
    29ce:	e8 fd ee ff ff       	call   18d0 <_Z11hashMapDtorP7HashMap>
    29d3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    29d7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    29de:	00 00 
    29e0:	75 6c                	jne    2a4e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x44e>
    29e2:	48 83 c4 40          	add    rsp,0x40
    29e6:	5b                   	pop    rbx
    29e7:	41 5a                	pop    r10
    29e9:	41 5c                	pop    r12
    29eb:	41 5d                	pop    r13
    29ed:	41 5e                	pop    r14
    29ef:	41 5f                	pop    r15
    29f1:	5d                   	pop    rbp
    29f2:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    29f6:	c3                   	ret
    29f7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    29fe:	00 00 
    2a00:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2a04:	c5 c2 5e ff          	vdivss xmm7,xmm7,xmm7
    2a08:	eb a3                	jmp    29ad <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ad>
    2a0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2a10:	c5 f8 77             	vzeroupper
    2a13:	eb 81                	jmp    2996 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    2a15:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2a19:	31 c0                	xor    eax,eax
    2a1b:	e9 7c fe ff ff       	jmp    289c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29c>
    2a20:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    2a24:	e8 67 e7 ff ff       	call   1190 <sqrtf@plt>
    2a29:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    2a2d:	eb 82                	jmp    29b1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b1>
    2a2f:	48 8d 0d 4a 1a 00 00 	lea    rcx,[rip+0x1a4a]        # 4480 <_IO_stdin_used+0x480>
    2a36:	ba 44 00 00 00       	mov    edx,0x44
    2a3b:	48 8d 35 2d 17 00 00 	lea    rsi,[rip+0x172d]        # 416f <_IO_stdin_used+0x16f>
    2a42:	48 8d 3d 42 17 00 00 	lea    rdi,[rip+0x1742]        # 418b <_IO_stdin_used+0x18b>
    2a49:	e8 22 e6 ff ff       	call   1070 <__assert_fail@plt>
    2a4e:	e8 8d e6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2a53:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2a5a:	00 00 00 00 
    2a5e:	66 90                	xchg   ax,ax

0000000000002a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>:
    2a60:	f3 0f 1e fa          	endbr64
    2a64:	41 55                	push   r13
    2a66:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    2a6b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    2a6f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    2a73:	55                   	push   rbp
    2a74:	48 89 e5             	mov    rbp,rsp
    2a77:	41 57                	push   r15
    2a79:	41 56                	push   r14
    2a7b:	41 55                	push   r13
    2a7d:	41 54                	push   r12
    2a7f:	53                   	push   rbx
    2a80:	48 83 ec 68          	sub    rsp,0x68
    2a84:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    2a8b:	44 89 45 8c          	mov    DWORD PTR [rbp-0x74],r8d
    2a8f:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2a96:	00 00 
    2a98:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2a9c:	31 c0                	xor    eax,eax
    2a9e:	48 85 ff             	test   rdi,rdi
    2aa1:	0f 84 d7 03 00 00    	je     2e7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41e>
    2aa7:	49 89 f7             	mov    r15,rsi
    2aaa:	bf 0a 00 00 00       	mov    edi,0xa
    2aaf:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2ab3:	49 89 d5             	mov    r13,rdx
    2ab6:	48 89 cb             	mov    rbx,rcx
    2ab9:	41 89 ce             	mov    r14d,ecx
    2abc:	e8 ff e5 ff ff       	call   10c0 <srand@plt>
    2ac1:	ba 02 00 00 00       	mov    edx,0x2
    2ac6:	4c 89 fe             	mov    rsi,r15
    2ac9:	4c 89 e7             	mov    rdi,r12
    2acc:	e8 5f e9 ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2ad1:	85 db                	test   ebx,ebx
    2ad3:	74 24                	je     2af9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x99>
    2ad5:	89 db                	mov    ebx,ebx
    2ad7:	4d 89 ef             	mov    r15,r13
    2ada:	48 c1 e3 04          	shl    rbx,0x4
    2ade:	4c 01 eb             	add    rbx,r13
    2ae1:	49 8b 37             	mov    rsi,QWORD PTR [r15]
    2ae4:	49 8b 57 08          	mov    rdx,QWORD PTR [r15+0x8]
    2ae8:	4c 89 e7             	mov    rdi,r12
    2aeb:	49 83 c7 10          	add    r15,0x10
    2aef:	e8 ec e9 ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    2af4:	49 39 df             	cmp    r15,rbx
    2af7:	75 e8                	jne    2ae1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x81>
    2af9:	be 04 00 00 00       	mov    esi,0x4
    2afe:	bf 40 42 0f 00       	mov    edi,0xf4240
    2b03:	e8 78 e5 ff ff       	call   1080 <calloc@plt>
    2b08:	be 08 00 00 00       	mov    esi,0x8
    2b0d:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    2b11:	49 89 c7             	mov    r15,rax
    2b14:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2b17:	4c 89 fb             	mov    rbx,r15
    2b1a:	48 89 c7             	mov    rdi,rax
    2b1d:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    2b21:	48 81 c3 00 09 3d 00 	add    rbx,0x3d0900
    2b28:	e8 53 e5 ff ff       	call   1080 <calloc@plt>
    2b2d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    2b31:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2b38:	e8 03 e5 ff ff       	call   1040 <rand@plt>
    2b3d:	31 d2                	xor    edx,edx
    2b3f:	49 83 c7 04          	add    r15,0x4
    2b43:	41 f7 f6             	div    r14d
    2b46:	41 89 57 fc          	mov    DWORD PTR [r15-0x4],edx
    2b4a:	49 39 df             	cmp    r15,rbx
    2b4d:	75 e9                	jne    2b38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd8>
    2b4f:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2b52:	85 c0                	test   eax,eax
    2b54:	0f 84 b9 02 00 00    	je     2e13 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b3>
    2b5a:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2b5e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    2b62:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    2b66:	4c 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r14
    2b6d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    2b71:	e8 9a e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2b76:	4c 8b 7d 98          	mov    r15,QWORD PTR [rbp-0x68]
    2b7a:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    2b7e:	66 90                	xchg   ax,ax
    2b80:	41 8b 07             	mov    eax,DWORD PTR [r15]
    2b83:	4c 89 e7             	mov    rdi,r12
    2b86:	49 83 c7 04          	add    r15,0x4
    2b8a:	48 c1 e0 04          	shl    rax,0x4
    2b8e:	4c 01 e8             	add    rax,r13
    2b91:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    2b94:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    2b98:	e8 c3 ec ff ff       	call   1860 <_Z20hashMapSearchElementP7HashMap8string_t>
    2b9d:	4c 39 fb             	cmp    rbx,r15
    2ba0:	75 de                	jne    2b80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x120>
    2ba2:	e8 69 e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2ba7:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    2bab:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    2baf:	49 83 c6 08          	add    r14,0x8
    2bb3:	48 29 c8             	sub    rax,rcx
    2bb6:	48 89 c1             	mov    rcx,rax
    2bb9:	48 b8 cf f7 53 e3 a5 	movabs rax,0x20c49ba5e353f7cf
    2bc0:	9b c4 20 
    2bc3:	48 f7 e9             	imul   rcx
    2bc6:	48 c1 f9 3f          	sar    rcx,0x3f
    2bca:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    2bce:	48 c1 fa 07          	sar    rdx,0x7
    2bd2:	48 29 ca             	sub    rdx,rcx
    2bd5:	c4 e1 d3 2a c2       	vcvtsi2sd xmm0,xmm5,rdx
    2bda:	c4 c1 7b 11 46 f8    	vmovsd QWORD PTR [r14-0x8],xmm0
    2be0:	49 39 c6             	cmp    r14,rax
    2be3:	75 8c                	jne    2b71 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x111>
    2be5:	4c 8b 85 70 ff ff ff 	mov    r8,QWORD PTR [rbp-0x90]
    2bec:	4c 89 e7             	mov    rdi,r12
    2bef:	48 8d 1d 0e 16 00 00 	lea    rbx,[rip+0x160e]        # 4204 <_IO_stdin_used+0x204>
    2bf6:	45 31 e4             	xor    r12d,r12d
    2bf9:	4c 89 45 a8          	mov    QWORD PTR [rbp-0x58],r8
    2bfd:	e8 ce ec ff ff       	call   18d0 <_Z11hashMapDtorP7HashMap>
    2c02:	ba 13 00 00 00       	mov    edx,0x13
    2c07:	4c 8b bd 78 ff ff ff 	mov    r15,QWORD PTR [rbp-0x88]
    2c0e:	be 01 00 00 00       	mov    esi,0x1
    2c13:	48 8d 3d cb 15 00 00 	lea    rdi,[rip+0x15cb]        # 41e5 <_IO_stdin_used+0x1e5>
    2c1a:	4c 89 f9             	mov    rcx,r15
    2c1d:	e8 7e e5 ff ff       	call   11a0 <fwrite@plt>
    2c22:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
    2c26:	4c 8b 6d 80          	mov    r13,QWORD PTR [rbp-0x80]
    2c2a:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2c2e:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2c32:	4c 89 45 80          	mov    QWORD PTR [rbp-0x80],r8
    2c36:	c4 81 7b 10 04 e6    	vmovsd xmm0,QWORD PTR [r14+r12*8]
    2c3c:	44 89 e1             	mov    ecx,r12d
    2c3f:	48 89 da             	mov    rdx,rbx
    2c42:	4c 89 ff             	mov    rdi,r15
    2c45:	be 02 00 00 00       	mov    esi,0x2
    2c4a:	b8 01 00 00 00       	mov    eax,0x1
    2c4f:	c5 fb 11 55 a0       	vmovsd QWORD PTR [rbp-0x60],xmm2
    2c54:	49 83 c4 01          	add    r12,0x1
    2c58:	c5 fb 11 45 a8       	vmovsd QWORD PTR [rbp-0x58],xmm0
    2c5d:	e8 1e e5 ff ff       	call   1180 <__fprintf_chk@plt>
    2c62:	c5 fb 10 45 a8       	vmovsd xmm0,QWORD PTR [rbp-0x58]
    2c67:	c5 fb 10 55 a0       	vmovsd xmm2,QWORD PTR [rbp-0x60]
    2c6c:	c5 eb 58 d0          	vaddsd xmm2,xmm2,xmm0
    2c70:	4d 39 e5             	cmp    r13,r12
    2c73:	75 c1                	jne    2c36 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d6>
    2c75:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    2c78:	c5 c1 57 ff          	vxorpd xmm7,xmm7,xmm7
    2c7c:	4c 8b 45 80          	mov    r8,QWORD PTR [rbp-0x80]
    2c80:	c5 c3 2a c1          	vcvtsi2sd xmm0,xmm7,ecx
    2c84:	89 c8                	mov    eax,ecx
    2c86:	83 e8 01             	sub    eax,0x1
    2c89:	c5 eb 5e e8          	vdivsd xmm5,xmm2,xmm0
    2c8d:	83 f8 02             	cmp    eax,0x2
    2c90:	0f 86 be 01 00 00    	jbe    2e54 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f4>
    2c96:	89 c8                	mov    eax,ecx
    2c98:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2c9c:	c4 e2 7d 19 e5       	vbroadcastsd ymm4,xmm5
    2ca1:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2ca5:	c1 e8 02             	shr    eax,0x2
    2ca8:	48 c1 e0 05          	shl    rax,0x5
    2cac:	48 01 c8             	add    rax,rcx
    2caf:	c4 c1 7d 10 30       	vmovupd ymm6,YMMWORD PTR [r8]
    2cb4:	49 83 c0 20          	add    r8,0x20
    2cb8:	c5 cd 5c cc          	vsubpd ymm1,ymm6,ymm4
    2cbc:	c5 f5 59 d1          	vmulpd ymm2,ymm1,ymm1
    2cc0:	c5 eb 58 c0          	vaddsd xmm0,xmm2,xmm0
    2cc4:	c5 e9 15 da          	vunpckhpd xmm3,xmm2,xmm2
    2cc8:	c4 e3 7d 19 d1 01    	vextractf128 xmm1,ymm2,0x1
    2cce:	c5 e3 58 d8          	vaddsd xmm3,xmm3,xmm0
    2cd2:	c5 f3 58 c3          	vaddsd xmm0,xmm1,xmm3
    2cd6:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2cda:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2cde:	4c 39 c0             	cmp    rax,r8
    2ce1:	75 cc                	jne    2caf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x24f>
    2ce3:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2ce6:	a8 03                	test   al,0x3
    2ce8:	0f 84 1d 01 00 00    	je     2e0b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ab>
    2cee:	83 e0 fc             	and    eax,0xfffffffc
    2cf1:	c5 f8 77             	vzeroupper
    2cf4:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    2cf7:	29 c2                	sub    edx,eax
    2cf9:	83 fa 01             	cmp    edx,0x1
    2cfc:	74 2d                	je     2d2b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2cb>
    2cfe:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2d02:	89 c1                	mov    ecx,eax
    2d04:	c5 fb 12 dd          	vmovddup xmm3,xmm5
    2d08:	c5 f9 10 0c cf       	vmovupd xmm1,XMMWORD PTR [rdi+rcx*8]
    2d0d:	c5 f1 5c cb          	vsubpd xmm1,xmm1,xmm3
    2d11:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    2d15:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2d19:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2d1d:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2d21:	f6 c2 01             	test   dl,0x1
    2d24:	74 1a                	je     2d40 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2d26:	83 e2 fe             	and    edx,0xfffffffe
    2d29:	01 d0                	add    eax,edx
    2d2b:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2d2f:	c5 fb 10 0c c1       	vmovsd xmm1,QWORD PTR [rcx+rax*8]
    2d34:	c5 f3 5c cd          	vsubsd xmm1,xmm1,xmm5
    2d38:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    2d3c:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2d40:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2d44:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    2d48:	c5 c2 2a 4d 8c       	vcvtsi2ss xmm1,xmm7,DWORD PTR [rbp-0x74]
    2d4d:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    2d51:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2d55:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    2d59:	0f 87 43 01 00 00    	ja     2ea2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x442>
    2d5f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    2d63:	c5 fa 5a f8          	vcvtss2sd xmm7,xmm0,xmm0
    2d67:	48 8d 35 9f 14 00 00 	lea    rsi,[rip+0x149f]        # 420d <_IO_stdin_used+0x20d>
    2d6e:	c4 e1 f9 7e fb       	vmovq  rbx,xmm7
    2d73:	c5 d3 10 c5          	vmovsd xmm0,xmm5,xmm5
    2d77:	bf 02 00 00 00       	mov    edi,0x2
    2d7c:	b8 01 00 00 00       	mov    eax,0x1
    2d81:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2d86:	e8 a5 e2 ff ff       	call   1030 <__printf_chk@plt>
    2d8b:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    2d90:	bf 02 00 00 00       	mov    edi,0x2
    2d95:	48 8d 35 8f 14 00 00 	lea    rsi,[rip+0x148f]        # 422b <_IO_stdin_used+0x22b>
    2d9c:	b8 01 00 00 00       	mov    eax,0x1
    2da1:	e8 8a e2 ff ff       	call   1030 <__printf_chk@plt>
    2da6:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2dab:	c4 e1 f9 6e e3       	vmovq  xmm4,rbx
    2db0:	bf 02 00 00 00       	mov    edi,0x2
    2db5:	48 8d 35 8d 14 00 00 	lea    rsi,[rip+0x148d]        # 4249 <_IO_stdin_used+0x249>
    2dbc:	b8 01 00 00 00       	mov    eax,0x1
    2dc1:	c5 db 5e c5          	vdivsd xmm0,xmm4,xmm5
    2dc5:	c5 fb 59 05 1b 19 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0x191b]        # 46e8 <_IO_stdin_used+0x6e8>
    2dcc:	00 
    2dcd:	e8 5e e2 ff ff       	call   1030 <__printf_chk@plt>
    2dd2:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2dd6:	e8 25 e3 ff ff       	call   1100 <free@plt>
    2ddb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2ddf:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2de6:	00 00 
    2de8:	0f 85 af 00 00 00    	jne    2e9d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43d>
    2dee:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    2df2:	48 83 c4 68          	add    rsp,0x68
    2df6:	5b                   	pop    rbx
    2df7:	41 5c                	pop    r12
    2df9:	41 5d                	pop    r13
    2dfb:	41 5e                	pop    r14
    2dfd:	41 5f                	pop    r15
    2dff:	5d                   	pop    rbp
    2e00:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    2e04:	41 5d                	pop    r13
    2e06:	e9 f5 e2 ff ff       	jmp    1100 <free@plt>
    2e0b:	c5 f8 77             	vzeroupper
    2e0e:	e9 2d ff ff ff       	jmp    2d40 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2e13:	4c 89 e7             	mov    rdi,r12
    2e16:	e8 b5 ea ff ff       	call   18d0 <_Z11hashMapDtorP7HashMap>
    2e1b:	ba 13 00 00 00       	mov    edx,0x13
    2e20:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    2e27:	be 01 00 00 00       	mov    esi,0x1
    2e2c:	48 8d 3d b2 13 00 00 	lea    rdi,[rip+0x13b2]        # 41e5 <_IO_stdin_used+0x1e5>
    2e33:	e8 68 e3 ff ff       	call   11a0 <fwrite@plt>
    2e38:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2e3c:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    2e41:	c5 eb 5e ea          	vdivsd xmm5,xmm2,xmm2
    2e45:	74 18                	je     2e5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ff>
    2e47:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2e4b:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    2e4f:	e9 0b ff ff ff       	jmp    2d5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ff>
    2e54:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2e58:	31 c0                	xor    eax,eax
    2e5a:	e9 95 fe ff ff       	jmp    2cf4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x294>
    2e5f:	48 8d 0d 82 16 00 00 	lea    rcx,[rip+0x1682]        # 44e8 <_IO_stdin_used+0x4e8>
    2e66:	ba a9 00 00 00       	mov    edx,0xa9
    2e6b:	48 8d 35 fd 12 00 00 	lea    rsi,[rip+0x12fd]        # 416f <_IO_stdin_used+0x16f>
    2e72:	48 8d 3d 80 13 00 00 	lea    rdi,[rip+0x1380]        # 41f9 <_IO_stdin_used+0x1f9>
    2e79:	e8 f2 e1 ff ff       	call   1070 <__assert_fail@plt>
    2e7e:	48 8d 0d 2b 16 00 00 	lea    rcx,[rip+0x162b]        # 44b0 <_IO_stdin_used+0x4b0>
    2e85:	ba 5e 00 00 00       	mov    edx,0x5e
    2e8a:	48 8d 35 de 12 00 00 	lea    rsi,[rip+0x12de]        # 416f <_IO_stdin_used+0x16f>
    2e91:	48 8d 3d f3 12 00 00 	lea    rdi,[rip+0x12f3]        # 418b <_IO_stdin_used+0x18b>
    2e98:	e8 d3 e1 ff ff       	call   1070 <__assert_fail@plt>
    2e9d:	e8 3e e2 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2ea2:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2ea7:	e8 e4 e2 ff ff       	call   1190 <sqrtf@plt>
    2eac:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2eb1:	e9 ad fe ff ff       	jmp    2d63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x303>
    2eb6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2ebd:	00 00 00 

0000000000002ec0 <_Z4testPFj8string_tE9Filenames8TestDataj>:
    2ec0:	f3 0f 1e fa          	endbr64
    2ec4:	41 56                	push   r14
    2ec6:	48 8d 35 97 13 00 00 	lea    rsi,[rip+0x1397]        # 4264 <_IO_stdin_used+0x264>
    2ecd:	45 89 ce             	mov    r14d,r9d
    2ed0:	41 55                	push   r13
    2ed2:	49 89 cd             	mov    r13,rcx
    2ed5:	41 54                	push   r12
    2ed7:	4d 89 c4             	mov    r12,r8
    2eda:	55                   	push   rbp
    2edb:	48 89 fd             	mov    rbp,rdi
    2ede:	48 89 d7             	mov    rdi,rdx
    2ee1:	53                   	push   rbx
    2ee2:	e8 09 e2 ff ff       	call   10f0 <fopen@plt>
    2ee7:	45 89 f0             	mov    r8d,r14d
    2eea:	4c 89 ea             	mov    rdx,r13
    2eed:	4c 89 e1             	mov    rcx,r12
    2ef0:	48 89 c3             	mov    rbx,rax
    2ef3:	48 89 ee             	mov    rsi,rbp
    2ef6:	48 89 c7             	mov    rdi,rax
    2ef9:	e8 62 fb ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    2efe:	48 89 df             	mov    rdi,rbx
    2f01:	5b                   	pop    rbx
    2f02:	5d                   	pop    rbp
    2f03:	41 5c                	pop    r12
    2f05:	41 5d                	pop    r13
    2f07:	41 5e                	pop    r14
    2f09:	e9 c2 e1 ff ff       	jmp    10d0 <fclose@plt>
    2f0e:	66 90                	xchg   ax,ax

0000000000002f10 <_Z7testAllPKcjS0_>:
    2f10:	f3 0f 1e fa          	endbr64
    2f14:	41 57                	push   r15
    2f16:	41 56                	push   r14
    2f18:	41 55                	push   r13
    2f1a:	41 54                	push   r12
    2f1c:	55                   	push   rbp
    2f1d:	53                   	push   rbx
    2f1e:	48 83 ec 28          	sub    rsp,0x28
    2f22:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2f29:	00 00 
    2f2b:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2f30:	31 c0                	xor    eax,eax
    2f32:	48 85 ff             	test   rdi,rdi
    2f35:	0f 84 5f 07 00 00    	je     369a <_Z7testAllPKcjS0_+0x78a>
    2f3b:	48 89 d3             	mov    rbx,rdx
    2f3e:	48 85 d2             	test   rdx,rdx
    2f41:	0f 84 34 07 00 00    	je     367b <_Z7testAllPKcjS0_+0x76b>
    2f47:	48 8d 3d c6 10 00 00 	lea    rdi,[rip+0x10c6]        # 4014 <_IO_stdin_used+0x14>
    2f4e:	41 89 f6             	mov    r14d,esi
    2f51:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    2f56:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    2f5d:	00 00 
    2f5f:	e8 1c f5 ff ff       	call   2480 <_Z8readFilePKcPm>
    2f64:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    2f69:	48 89 c7             	mov    rdi,rax
    2f6c:	49 89 c7             	mov    r15,rax
    2f6f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    2f73:	e8 18 f6 ff ff       	call   2590 <_Z10countLinesPcm>
    2f78:	4c 89 ff             	mov    rdi,r15
    2f7b:	41 89 c4             	mov    r12d,eax
    2f7e:	44 89 e6             	mov    esi,r12d
    2f81:	e8 7a e3 ff ff       	call   1300 <_Z16buildStringArrayPcj>
    2f86:	48 8d 35 e7 12 00 00 	lea    rsi,[rip+0x12e7]        # 4274 <_IO_stdin_used+0x274>
    2f8d:	48 89 df             	mov    rdi,rbx
    2f90:	48 89 c5             	mov    rbp,rax
    2f93:	e8 a8 e1 ff ff       	call   1140 <strcmp@plt>
    2f98:	85 c0                	test   eax,eax
    2f9a:	0f 84 e8 00 00 00    	je     3088 <_Z7testAllPKcjS0_+0x178>
    2fa0:	4c 8d 2d c9 12 00 00 	lea    r13,[rip+0x12c9]        # 4270 <_IO_stdin_used+0x270>
    2fa7:	48 89 df             	mov    rdi,rbx
    2faa:	4c 89 ee             	mov    rsi,r13
    2fad:	e8 8e e1 ff ff       	call   1140 <strcmp@plt>
    2fb2:	85 c0                	test   eax,eax
    2fb4:	0f 84 4e 06 00 00    	je     3608 <_Z7testAllPKcjS0_+0x6f8>
    2fba:	48 8d 35 b9 12 00 00 	lea    rsi,[rip+0x12b9]        # 427a <_IO_stdin_used+0x27a>
    2fc1:	48 89 df             	mov    rdi,rbx
    2fc4:	e8 77 e1 ff ff       	call   1140 <strcmp@plt>
    2fc9:	85 c0                	test   eax,eax
    2fcb:	0f 84 bf 05 00 00    	je     3590 <_Z7testAllPKcjS0_+0x680>
    2fd1:	48 8d 35 b2 12 00 00 	lea    rsi,[rip+0x12b2]        # 428a <_IO_stdin_used+0x28a>
    2fd8:	48 89 df             	mov    rdi,rbx
    2fdb:	e8 60 e1 ff ff       	call   1140 <strcmp@plt>
    2fe0:	85 c0                	test   eax,eax
    2fe2:	0f 84 30 05 00 00    	je     3518 <_Z7testAllPKcjS0_+0x608>
    2fe8:	48 8d 35 bc 12 00 00 	lea    rsi,[rip+0x12bc]        # 42ab <_IO_stdin_used+0x2ab>
    2fef:	48 89 df             	mov    rdi,rbx
    2ff2:	e8 49 e1 ff ff       	call   1140 <strcmp@plt>
    2ff7:	85 c0                	test   eax,eax
    2ff9:	0f 84 a1 04 00 00    	je     34a0 <_Z7testAllPKcjS0_+0x590>
    2fff:	48 8d 35 ad 12 00 00 	lea    rsi,[rip+0x12ad]        # 42b3 <_IO_stdin_used+0x2b3>
    3006:	48 89 df             	mov    rdi,rbx
    3009:	e8 32 e1 ff ff       	call   1140 <strcmp@plt>
    300e:	85 c0                	test   eax,eax
    3010:	0f 84 12 04 00 00    	je     3428 <_Z7testAllPKcjS0_+0x518>
    3016:	48 8d 35 b7 12 00 00 	lea    rsi,[rip+0x12b7]        # 42d4 <_IO_stdin_used+0x2d4>
    301d:	48 89 df             	mov    rdi,rbx
    3020:	e8 1b e1 ff ff       	call   1140 <strcmp@plt>
    3025:	85 c0                	test   eax,eax
    3027:	0f 84 83 03 00 00    	je     33b0 <_Z7testAllPKcjS0_+0x4a0>
    302d:	48 8d 35 b0 12 00 00 	lea    rsi,[rip+0x12b0]        # 42e4 <_IO_stdin_used+0x2e4>
    3034:	48 89 df             	mov    rdi,rbx
    3037:	e8 04 e1 ff ff       	call   1140 <strcmp@plt>
    303c:	85 c0                	test   eax,eax
    303e:	0f 84 bc 00 00 00    	je     3100 <_Z7testAllPKcjS0_+0x1f0>
    3044:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    3048:	e8 b3 e0 ff ff       	call   1100 <free@plt>
    304d:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3051:	e8 aa e0 ff ff       	call   1100 <free@plt>
    3056:	48 89 ef             	mov    rdi,rbp
    3059:	e8 a2 e0 ff ff       	call   1100 <free@plt>
    305e:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    3063:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    306a:	00 00 
    306c:	0f 85 04 06 00 00    	jne    3676 <_Z7testAllPKcjS0_+0x766>
    3072:	48 83 c4 28          	add    rsp,0x28
    3076:	5b                   	pop    rbx
    3077:	5d                   	pop    rbp
    3078:	41 5c                	pop    r12
    307a:	41 5d                	pop    r13
    307c:	41 5e                	pop    r14
    307e:	41 5f                	pop    r15
    3080:	c3                   	ret
    3081:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3088:	48 8d 3d c9 14 00 00 	lea    rdi,[rip+0x14c9]        # 4558 <_IO_stdin_used+0x558>
    308f:	45 89 e5             	mov    r13d,r12d
    3092:	e8 c9 e0 ff ff       	call   1160 <puts@plt>
    3097:	48 8d 3d d6 11 00 00 	lea    rdi,[rip+0x11d6]        # 4274 <_IO_stdin_used+0x274>
    309e:	e8 bd e0 ff ff       	call   1160 <puts@plt>
    30a3:	48 8d 3d ce 14 00 00 	lea    rdi,[rip+0x14ce]        # 4578 <_IO_stdin_used+0x578>
    30aa:	e8 b1 e0 ff ff       	call   1160 <puts@plt>
    30af:	48 8d 35 ae 11 00 00 	lea    rsi,[rip+0x11ae]        # 4264 <_IO_stdin_used+0x264>
    30b6:	48 8d 3d db 14 00 00 	lea    rdi,[rip+0x14db]        # 4598 <_IO_stdin_used+0x598>
    30bd:	e8 2e e0 ff ff       	call   10f0 <fopen@plt>
    30c2:	45 89 f0             	mov    r8d,r14d
    30c5:	48 89 ea             	mov    rdx,rbp
    30c8:	4c 89 e9             	mov    rcx,r13
    30cb:	48 8d 35 2e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe92e]        # 1a00 <_Z15crc32HashString8string_t>
    30d2:	49 89 c7             	mov    r15,rax
    30d5:	48 89 c7             	mov    rdi,rax
    30d8:	e8 83 f9 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    30dd:	4c 89 ff             	mov    rdi,r15
    30e0:	e8 eb df ff ff       	call   10d0 <fclose@plt>
    30e5:	48 8d 3d d4 14 00 00 	lea    rdi,[rip+0x14d4]        # 45c0 <_IO_stdin_used+0x5c0>
    30ec:	e8 6f e0 ff ff       	call   1160 <puts@plt>
    30f1:	e9 aa fe ff ff       	jmp    2fa0 <_Z7testAllPKcjS0_+0x90>
    30f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    30fd:	00 00 00 
    3100:	4c 8d 3d 51 14 00 00 	lea    r15,[rip+0x1451]        # 4558 <_IO_stdin_used+0x558>
    3107:	4c 89 ff             	mov    rdi,r15
    310a:	e8 51 e0 ff ff       	call   1160 <puts@plt>
    310f:	48 8d 3d 5e 11 00 00 	lea    rdi,[rip+0x115e]        # 4274 <_IO_stdin_used+0x274>
    3116:	e8 45 e0 ff ff       	call   1160 <puts@plt>
    311b:	48 8d 3d 56 14 00 00 	lea    rdi,[rip+0x1456]        # 4578 <_IO_stdin_used+0x578>
    3122:	e8 39 e0 ff ff       	call   1160 <puts@plt>
    3127:	44 89 e0             	mov    eax,r12d
    312a:	48 8d 35 33 11 00 00 	lea    rsi,[rip+0x1133]        # 4264 <_IO_stdin_used+0x264>
    3131:	48 8d 3d 60 14 00 00 	lea    rdi,[rip+0x1460]        # 4598 <_IO_stdin_used+0x598>
    3138:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    313d:	e8 ae df ff ff       	call   10f0 <fopen@plt>
    3142:	45 89 f0             	mov    r8d,r14d
    3145:	48 89 ea             	mov    rdx,rbp
    3148:	4c 89 e1             	mov    rcx,r12
    314b:	48 8d 35 ae e8 ff ff 	lea    rsi,[rip+0xffffffffffffe8ae]        # 1a00 <_Z15crc32HashString8string_t>
    3152:	48 89 c3             	mov    rbx,rax
    3155:	48 89 c7             	mov    rdi,rax
    3158:	e8 03 f9 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    315d:	48 89 df             	mov    rdi,rbx
    3160:	48 8d 1d 59 14 00 00 	lea    rbx,[rip+0x1459]        # 45c0 <_IO_stdin_used+0x5c0>
    3167:	e8 64 df ff ff       	call   10d0 <fclose@plt>
    316c:	48 89 df             	mov    rdi,rbx
    316f:	e8 ec df ff ff       	call   1160 <puts@plt>
    3174:	4c 89 ff             	mov    rdi,r15
    3177:	e8 e4 df ff ff       	call   1160 <puts@plt>
    317c:	4c 89 ef             	mov    rdi,r13
    317f:	e8 dc df ff ff       	call   1160 <puts@plt>
    3184:	48 8d 3d ed 13 00 00 	lea    rdi,[rip+0x13ed]        # 4578 <_IO_stdin_used+0x578>
    318b:	e8 d0 df ff ff       	call   1160 <puts@plt>
    3190:	4c 8b 64 24 08       	mov    r12,QWORD PTR [rsp+0x8]
    3195:	48 8d 35 c8 10 00 00 	lea    rsi,[rip+0x10c8]        # 4264 <_IO_stdin_used+0x264>
    319c:	48 8d 3d 3d 14 00 00 	lea    rdi,[rip+0x143d]        # 45e0 <_IO_stdin_used+0x5e0>
    31a3:	e8 48 df ff ff       	call   10f0 <fopen@plt>
    31a8:	48 8d 35 71 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe971]        # 1b20 <_Z19_mm_crc32HashString8string_t>
    31af:	45 89 f0             	mov    r8d,r14d
    31b2:	48 89 ea             	mov    rdx,rbp
    31b5:	4c 89 e1             	mov    rcx,r12
    31b8:	49 89 c5             	mov    r13,rax
    31bb:	48 89 c7             	mov    rdi,rax
    31be:	e8 9d f8 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    31c3:	4c 89 ef             	mov    rdi,r13
    31c6:	e8 05 df ff ff       	call   10d0 <fclose@plt>
    31cb:	48 89 df             	mov    rdi,rbx
    31ce:	e8 8d df ff ff       	call   1160 <puts@plt>
    31d3:	4c 89 ff             	mov    rdi,r15
    31d6:	e8 85 df ff ff       	call   1160 <puts@plt>
    31db:	48 8d 3d f2 10 00 00 	lea    rdi,[rip+0x10f2]        # 42d4 <_IO_stdin_used+0x2d4>
    31e2:	e8 79 df ff ff       	call   1160 <puts@plt>
    31e7:	48 8d 3d 8a 13 00 00 	lea    rdi,[rip+0x138a]        # 4578 <_IO_stdin_used+0x578>
    31ee:	e8 6d df ff ff       	call   1160 <puts@plt>
    31f3:	48 8d 35 6a 10 00 00 	lea    rsi,[rip+0x106a]        # 4264 <_IO_stdin_used+0x264>
    31fa:	48 8d 3d 5f 14 00 00 	lea    rdi,[rip+0x145f]        # 4660 <_IO_stdin_used+0x660>
    3201:	e8 ea de ff ff       	call   10f0 <fopen@plt>
    3206:	45 89 f0             	mov    r8d,r14d
    3209:	48 89 ea             	mov    rdx,rbp
    320c:	4c 89 e1             	mov    rcx,r12
    320f:	48 8d 35 5a e9 ff ff 	lea    rsi,[rip+0xffffffffffffe95a]        # 1b70 <_Z25_mm_crc32UnrollHashString8string_t>
    3216:	49 89 c5             	mov    r13,rax
    3219:	48 89 c7             	mov    rdi,rax
    321c:	e8 3f f8 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3221:	4c 89 ef             	mov    rdi,r13
    3224:	e8 a7 de ff ff       	call   10d0 <fclose@plt>
    3229:	48 89 df             	mov    rdi,rbx
    322c:	e8 2f df ff ff       	call   1160 <puts@plt>
    3231:	4c 89 ff             	mov    rdi,r15
    3234:	e8 27 df ff ff       	call   1160 <puts@plt>
    3239:	48 8d 3d 42 10 00 00 	lea    rdi,[rip+0x1042]        # 4282 <_IO_stdin_used+0x282>
    3240:	e8 1b df ff ff       	call   1160 <puts@plt>
    3245:	48 8d 3d 2c 13 00 00 	lea    rdi,[rip+0x132c]        # 4578 <_IO_stdin_used+0x578>
    324c:	e8 0f df ff ff       	call   1160 <puts@plt>
    3251:	48 8d 35 0c 10 00 00 	lea    rsi,[rip+0x100c]        # 4264 <_IO_stdin_used+0x264>
    3258:	48 8d 3d b1 13 00 00 	lea    rdi,[rip+0x13b1]        # 4610 <_IO_stdin_used+0x610>
    325f:	e8 8c de ff ff       	call   10f0 <fopen@plt>
    3264:	45 89 f0             	mov    r8d,r14d
    3267:	48 89 ea             	mov    rdx,rbp
    326a:	4c 89 e1             	mov    rcx,r12
    326d:	48 8d 35 3c e9 ff ff 	lea    rsi,[rip+0xffffffffffffe93c]        # 1bb0 <_Z17murmur2HashString8string_t>
    3274:	49 89 c5             	mov    r13,rax
    3277:	48 89 c7             	mov    rdi,rax
    327a:	e8 e1 f7 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    327f:	4c 89 ef             	mov    rdi,r13
    3282:	e8 49 de ff ff       	call   10d0 <fclose@plt>
    3287:	48 89 df             	mov    rdi,rbx
    328a:	e8 d1 de ff ff       	call   1160 <puts@plt>
    328f:	4c 89 ff             	mov    rdi,r15
    3292:	e8 c9 de ff ff       	call   1160 <puts@plt>
    3297:	48 8d 3d ec 0f 00 00 	lea    rdi,[rip+0xfec]        # 428a <_IO_stdin_used+0x28a>
    329e:	e8 bd de ff ff       	call   1160 <puts@plt>
    32a3:	48 8d 3d ce 12 00 00 	lea    rdi,[rip+0x12ce]        # 4578 <_IO_stdin_used+0x578>
    32aa:	e8 b1 de ff ff       	call   1160 <puts@plt>
    32af:	48 8d 35 ae 0f 00 00 	lea    rsi,[rip+0xfae]        # 4264 <_IO_stdin_used+0x264>
    32b6:	48 8d 3d d1 0f 00 00 	lea    rdi,[rip+0xfd1]        # 428e <_IO_stdin_used+0x28e>
    32bd:	e8 2e de ff ff       	call   10f0 <fopen@plt>
    32c2:	45 89 f0             	mov    r8d,r14d
    32c5:	48 89 ea             	mov    rdx,rbp
    32c8:	4c 89 e1             	mov    rcx,r12
    32cb:	48 8d 35 8e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe98e]        # 1c60 <_Z13sumHashString8string_t>
    32d2:	49 89 c5             	mov    r13,rax
    32d5:	48 89 c7             	mov    rdi,rax
    32d8:	e8 83 f7 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    32dd:	4c 89 ef             	mov    rdi,r13
    32e0:	e8 eb dd ff ff       	call   10d0 <fclose@plt>
    32e5:	48 89 df             	mov    rdi,rbx
    32e8:	e8 73 de ff ff       	call   1160 <puts@plt>
    32ed:	4c 89 ff             	mov    rdi,r15
    32f0:	e8 6b de ff ff       	call   1160 <puts@plt>
    32f5:	48 8d 3d af 0f 00 00 	lea    rdi,[rip+0xfaf]        # 42ab <_IO_stdin_used+0x2ab>
    32fc:	e8 5f de ff ff       	call   1160 <puts@plt>
    3301:	48 8d 3d 70 12 00 00 	lea    rdi,[rip+0x1270]        # 4578 <_IO_stdin_used+0x578>
    3308:	e8 53 de ff ff       	call   1160 <puts@plt>
    330d:	48 8d 35 50 0f 00 00 	lea    rsi,[rip+0xf50]        # 4264 <_IO_stdin_used+0x264>
    3314:	48 8d 3d 1d 13 00 00 	lea    rdi,[rip+0x131d]        # 4638 <_IO_stdin_used+0x638>
    331b:	e8 d0 dd ff ff       	call   10f0 <fopen@plt>
    3320:	45 89 f0             	mov    r8d,r14d
    3323:	48 89 ea             	mov    rdx,rbp
    3326:	4c 89 e1             	mov    rcx,r12
    3329:	48 8d 35 a0 ea ff ff 	lea    rsi,[rip+0xffffffffffffeaa0]        # 1dd0 <_Z17adler32HashString8string_t>
    3330:	49 89 c5             	mov    r13,rax
    3333:	48 89 c7             	mov    rdi,rax
    3336:	e8 25 f7 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    333b:	4c 89 ef             	mov    rdi,r13
    333e:	e8 8d dd ff ff       	call   10d0 <fclose@plt>
    3343:	48 89 df             	mov    rdi,rbx
    3346:	e8 15 de ff ff       	call   1160 <puts@plt>
    334b:	4c 89 ff             	mov    rdi,r15
    334e:	e8 0d de ff ff       	call   1160 <puts@plt>
    3353:	48 8d 3d 59 0f 00 00 	lea    rdi,[rip+0xf59]        # 42b3 <_IO_stdin_used+0x2b3>
    335a:	e8 01 de ff ff       	call   1160 <puts@plt>
    335f:	48 8d 3d 12 12 00 00 	lea    rdi,[rip+0x1212]        # 4578 <_IO_stdin_used+0x578>
    3366:	e8 f5 dd ff ff       	call   1160 <puts@plt>
    336b:	48 8d 35 f2 0e 00 00 	lea    rsi,[rip+0xef2]        # 4264 <_IO_stdin_used+0x264>
    3372:	48 8d 3d 3e 0f 00 00 	lea    rdi,[rip+0xf3e]        # 42b7 <_IO_stdin_used+0x2b7>
    3379:	e8 72 dd ff ff       	call   10f0 <fopen@plt>
    337e:	45 89 f0             	mov    r8d,r14d
    3381:	48 89 ea             	mov    rdx,rbp
    3384:	4c 89 e1             	mov    rcx,r12
    3387:	48 8d 35 c2 ea ff ff 	lea    rsi,[rip+0xffffffffffffeac2]        # 1e50 <_Z13elfHashString8string_t>
    338e:	49 89 c5             	mov    r13,rax
    3391:	48 89 c7             	mov    rdi,rax
    3394:	e8 c7 f6 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3399:	4c 89 ef             	mov    rdi,r13
    339c:	e8 2f dd ff ff       	call   10d0 <fclose@plt>
    33a1:	48 89 df             	mov    rdi,rbx
    33a4:	e8 b7 dd ff ff       	call   1160 <puts@plt>
    33a9:	e9 96 fc ff ff       	jmp    3044 <_Z7testAllPKcjS0_+0x134>
    33ae:	66 90                	xchg   ax,ax
    33b0:	48 8d 3d a1 11 00 00 	lea    rdi,[rip+0x11a1]        # 4558 <_IO_stdin_used+0x558>
    33b7:	45 89 e7             	mov    r15d,r12d
    33ba:	e8 a1 dd ff ff       	call   1160 <puts@plt>
    33bf:	48 8d 3d 0e 0f 00 00 	lea    rdi,[rip+0xf0e]        # 42d4 <_IO_stdin_used+0x2d4>
    33c6:	e8 95 dd ff ff       	call   1160 <puts@plt>
    33cb:	48 8d 3d a6 11 00 00 	lea    rdi,[rip+0x11a6]        # 4578 <_IO_stdin_used+0x578>
    33d2:	e8 89 dd ff ff       	call   1160 <puts@plt>
    33d7:	48 8d 35 86 0e 00 00 	lea    rsi,[rip+0xe86]        # 4264 <_IO_stdin_used+0x264>
    33de:	48 8d 3d 7b 12 00 00 	lea    rdi,[rip+0x127b]        # 4660 <_IO_stdin_used+0x660>
    33e5:	e8 06 dd ff ff       	call   10f0 <fopen@plt>
    33ea:	45 89 f0             	mov    r8d,r14d
    33ed:	48 89 ea             	mov    rdx,rbp
    33f0:	4c 89 f9             	mov    rcx,r15
    33f3:	48 8d 35 76 e7 ff ff 	lea    rsi,[rip+0xffffffffffffe776]        # 1b70 <_Z25_mm_crc32UnrollHashString8string_t>
    33fa:	48 89 c7             	mov    rdi,rax
    33fd:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3402:	e8 59 f6 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3407:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    340c:	e8 bf dc ff ff       	call   10d0 <fclose@plt>
    3411:	48 8d 3d a8 11 00 00 	lea    rdi,[rip+0x11a8]        # 45c0 <_IO_stdin_used+0x5c0>
    3418:	e8 43 dd ff ff       	call   1160 <puts@plt>
    341d:	e9 0b fc ff ff       	jmp    302d <_Z7testAllPKcjS0_+0x11d>
    3422:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3428:	48 8d 3d 29 11 00 00 	lea    rdi,[rip+0x1129]        # 4558 <_IO_stdin_used+0x558>
    342f:	45 89 e7             	mov    r15d,r12d
    3432:	e8 29 dd ff ff       	call   1160 <puts@plt>
    3437:	48 8d 3d 75 0e 00 00 	lea    rdi,[rip+0xe75]        # 42b3 <_IO_stdin_used+0x2b3>
    343e:	e8 1d dd ff ff       	call   1160 <puts@plt>
    3443:	48 8d 3d 2e 11 00 00 	lea    rdi,[rip+0x112e]        # 4578 <_IO_stdin_used+0x578>
    344a:	e8 11 dd ff ff       	call   1160 <puts@plt>
    344f:	48 8d 35 0e 0e 00 00 	lea    rsi,[rip+0xe0e]        # 4264 <_IO_stdin_used+0x264>
    3456:	48 8d 3d 5a 0e 00 00 	lea    rdi,[rip+0xe5a]        # 42b7 <_IO_stdin_used+0x2b7>
    345d:	e8 8e dc ff ff       	call   10f0 <fopen@plt>
    3462:	45 89 f0             	mov    r8d,r14d
    3465:	48 89 ea             	mov    rdx,rbp
    3468:	4c 89 f9             	mov    rcx,r15
    346b:	48 8d 35 de e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9de]        # 1e50 <_Z13elfHashString8string_t>
    3472:	48 89 c7             	mov    rdi,rax
    3475:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    347a:	e8 e1 f5 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    347f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3484:	e8 47 dc ff ff       	call   10d0 <fclose@plt>
    3489:	48 8d 3d 30 11 00 00 	lea    rdi,[rip+0x1130]        # 45c0 <_IO_stdin_used+0x5c0>
    3490:	e8 cb dc ff ff       	call   1160 <puts@plt>
    3495:	e9 7c fb ff ff       	jmp    3016 <_Z7testAllPKcjS0_+0x106>
    349a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    34a0:	48 8d 3d b1 10 00 00 	lea    rdi,[rip+0x10b1]        # 4558 <_IO_stdin_used+0x558>
    34a7:	45 89 e7             	mov    r15d,r12d
    34aa:	e8 b1 dc ff ff       	call   1160 <puts@plt>
    34af:	48 8d 3d f5 0d 00 00 	lea    rdi,[rip+0xdf5]        # 42ab <_IO_stdin_used+0x2ab>
    34b6:	e8 a5 dc ff ff       	call   1160 <puts@plt>
    34bb:	48 8d 3d b6 10 00 00 	lea    rdi,[rip+0x10b6]        # 4578 <_IO_stdin_used+0x578>
    34c2:	e8 99 dc ff ff       	call   1160 <puts@plt>
    34c7:	48 8d 35 96 0d 00 00 	lea    rsi,[rip+0xd96]        # 4264 <_IO_stdin_used+0x264>
    34ce:	48 8d 3d 63 11 00 00 	lea    rdi,[rip+0x1163]        # 4638 <_IO_stdin_used+0x638>
    34d5:	e8 16 dc ff ff       	call   10f0 <fopen@plt>
    34da:	45 89 f0             	mov    r8d,r14d
    34dd:	48 89 ea             	mov    rdx,rbp
    34e0:	4c 89 f9             	mov    rcx,r15
    34e3:	48 8d 35 e6 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe8e6]        # 1dd0 <_Z17adler32HashString8string_t>
    34ea:	48 89 c7             	mov    rdi,rax
    34ed:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    34f2:	e8 69 f5 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    34f7:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    34fc:	e8 cf db ff ff       	call   10d0 <fclose@plt>
    3501:	48 8d 3d b8 10 00 00 	lea    rdi,[rip+0x10b8]        # 45c0 <_IO_stdin_used+0x5c0>
    3508:	e8 53 dc ff ff       	call   1160 <puts@plt>
    350d:	e9 ed fa ff ff       	jmp    2fff <_Z7testAllPKcjS0_+0xef>
    3512:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3518:	48 8d 3d 39 10 00 00 	lea    rdi,[rip+0x1039]        # 4558 <_IO_stdin_used+0x558>
    351f:	45 89 e7             	mov    r15d,r12d
    3522:	e8 39 dc ff ff       	call   1160 <puts@plt>
    3527:	48 8d 3d 5c 0d 00 00 	lea    rdi,[rip+0xd5c]        # 428a <_IO_stdin_used+0x28a>
    352e:	e8 2d dc ff ff       	call   1160 <puts@plt>
    3533:	48 8d 3d 3e 10 00 00 	lea    rdi,[rip+0x103e]        # 4578 <_IO_stdin_used+0x578>
    353a:	e8 21 dc ff ff       	call   1160 <puts@plt>
    353f:	48 8d 35 1e 0d 00 00 	lea    rsi,[rip+0xd1e]        # 4264 <_IO_stdin_used+0x264>
    3546:	48 8d 3d 41 0d 00 00 	lea    rdi,[rip+0xd41]        # 428e <_IO_stdin_used+0x28e>
    354d:	e8 9e db ff ff       	call   10f0 <fopen@plt>
    3552:	45 89 f0             	mov    r8d,r14d
    3555:	48 89 ea             	mov    rdx,rbp
    3558:	4c 89 f9             	mov    rcx,r15
    355b:	48 8d 35 fe e6 ff ff 	lea    rsi,[rip+0xffffffffffffe6fe]        # 1c60 <_Z13sumHashString8string_t>
    3562:	48 89 c7             	mov    rdi,rax
    3565:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    356a:	e8 f1 f4 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    356f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3574:	e8 57 db ff ff       	call   10d0 <fclose@plt>
    3579:	48 8d 3d 40 10 00 00 	lea    rdi,[rip+0x1040]        # 45c0 <_IO_stdin_used+0x5c0>
    3580:	e8 db db ff ff       	call   1160 <puts@plt>
    3585:	e9 5e fa ff ff       	jmp    2fe8 <_Z7testAllPKcjS0_+0xd8>
    358a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3590:	48 8d 3d c1 0f 00 00 	lea    rdi,[rip+0xfc1]        # 4558 <_IO_stdin_used+0x558>
    3597:	45 89 e7             	mov    r15d,r12d
    359a:	e8 c1 db ff ff       	call   1160 <puts@plt>
    359f:	48 8d 3d dc 0c 00 00 	lea    rdi,[rip+0xcdc]        # 4282 <_IO_stdin_used+0x282>
    35a6:	e8 b5 db ff ff       	call   1160 <puts@plt>
    35ab:	48 8d 3d c6 0f 00 00 	lea    rdi,[rip+0xfc6]        # 4578 <_IO_stdin_used+0x578>
    35b2:	e8 a9 db ff ff       	call   1160 <puts@plt>
    35b7:	48 8d 35 a6 0c 00 00 	lea    rsi,[rip+0xca6]        # 4264 <_IO_stdin_used+0x264>
    35be:	48 8d 3d 4b 10 00 00 	lea    rdi,[rip+0x104b]        # 4610 <_IO_stdin_used+0x610>
    35c5:	e8 26 db ff ff       	call   10f0 <fopen@plt>
    35ca:	45 89 f0             	mov    r8d,r14d
    35cd:	48 89 ea             	mov    rdx,rbp
    35d0:	4c 89 f9             	mov    rcx,r15
    35d3:	48 8d 35 d6 e5 ff ff 	lea    rsi,[rip+0xffffffffffffe5d6]        # 1bb0 <_Z17murmur2HashString8string_t>
    35da:	48 89 c7             	mov    rdi,rax
    35dd:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    35e2:	e8 79 f4 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    35e7:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    35ec:	e8 df da ff ff       	call   10d0 <fclose@plt>
    35f1:	48 8d 3d c8 0f 00 00 	lea    rdi,[rip+0xfc8]        # 45c0 <_IO_stdin_used+0x5c0>
    35f8:	e8 63 db ff ff       	call   1160 <puts@plt>
    35fd:	e9 cf f9 ff ff       	jmp    2fd1 <_Z7testAllPKcjS0_+0xc1>
    3602:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3608:	48 8d 3d 49 0f 00 00 	lea    rdi,[rip+0xf49]        # 4558 <_IO_stdin_used+0x558>
    360f:	45 89 e7             	mov    r15d,r12d
    3612:	e8 49 db ff ff       	call   1160 <puts@plt>
    3617:	4c 89 ef             	mov    rdi,r13
    361a:	e8 41 db ff ff       	call   1160 <puts@plt>
    361f:	48 8d 3d 52 0f 00 00 	lea    rdi,[rip+0xf52]        # 4578 <_IO_stdin_used+0x578>
    3626:	e8 35 db ff ff       	call   1160 <puts@plt>
    362b:	48 8d 35 32 0c 00 00 	lea    rsi,[rip+0xc32]        # 4264 <_IO_stdin_used+0x264>
    3632:	48 8d 3d a7 0f 00 00 	lea    rdi,[rip+0xfa7]        # 45e0 <_IO_stdin_used+0x5e0>
    3639:	e8 b2 da ff ff       	call   10f0 <fopen@plt>
    363e:	45 89 f0             	mov    r8d,r14d
    3641:	48 89 ea             	mov    rdx,rbp
    3644:	4c 89 f9             	mov    rcx,r15
    3647:	48 8d 35 d2 e4 ff ff 	lea    rsi,[rip+0xffffffffffffe4d2]        # 1b20 <_Z19_mm_crc32HashString8string_t>
    364e:	48 89 c7             	mov    rdi,rax
    3651:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3656:	e8 05 f4 ff ff       	call   2a60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    365b:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3660:	e8 6b da ff ff       	call   10d0 <fclose@plt>
    3665:	48 8d 3d 54 0f 00 00 	lea    rdi,[rip+0xf54]        # 45c0 <_IO_stdin_used+0x5c0>
    366c:	e8 ef da ff ff       	call   1160 <puts@plt>
    3671:	e9 44 f9 ff ff       	jmp    2fba <_Z7testAllPKcjS0_+0xaa>
    3676:	e8 65 da ff ff       	call   10e0 <__stack_chk_fail@plt>
    367b:	48 8d 0d 9e 0e 00 00 	lea    rcx,[rip+0xe9e]        # 4520 <_IO_stdin_used+0x520>
    3682:	ba 13 00 00 00       	mov    edx,0x13
    3687:	48 8d 35 e1 0a 00 00 	lea    rsi,[rip+0xae1]        # 416f <_IO_stdin_used+0x16f>
    368e:	48 8d 3d d1 0b 00 00 	lea    rdi,[rip+0xbd1]        # 4266 <_IO_stdin_used+0x266>
    3695:	e8 d6 d9 ff ff       	call   1070 <__assert_fail@plt>
    369a:	48 8d 0d 7f 0e 00 00 	lea    rcx,[rip+0xe7f]        # 4520 <_IO_stdin_used+0x520>
    36a1:	ba 12 00 00 00       	mov    edx,0x12
    36a6:	48 8d 35 c2 0a 00 00 	lea    rsi,[rip+0xac2]        # 416f <_IO_stdin_used+0x16f>
    36ad:	48 8d 3d b2 0a 00 00 	lea    rdi,[rip+0xab2]        # 4166 <_IO_stdin_used+0x166>
    36b4:	e8 b7 d9 ff ff       	call   1070 <__assert_fail@plt>
    36b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000036c0 <_Z21standartDeviationTimePdjd>:
    36c0:	f3 0f 1e fa          	endbr64
    36c4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    36c9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    36cd:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    36d1:	55                   	push   rbp
    36d2:	48 89 e5             	mov    rbp,rsp
    36d5:	41 52                	push   r10
    36d7:	48 83 ec 08          	sub    rsp,0x8
    36db:	48 85 ff             	test   rdi,rdi
    36de:	0f 84 18 01 00 00    	je     37fc <_Z21standartDeviationTimePdjd+0x13c>
    36e4:	89 f1                	mov    ecx,esi
    36e6:	85 c9                	test   ecx,ecx
    36e8:	0f 84 f2 00 00 00    	je     37e0 <_Z21standartDeviationTimePdjd+0x120>
    36ee:	8d 41 ff             	lea    eax,[rcx-0x1]
    36f1:	48 89 fa             	mov    rdx,rdi
    36f4:	c5 fb 10 d8          	vmovsd xmm3,xmm0,xmm0
    36f8:	83 f8 02             	cmp    eax,0x2
    36fb:	0f 86 e9 00 00 00    	jbe    37ea <_Z21standartDeviationTimePdjd+0x12a>
    3701:	89 ce                	mov    esi,ecx
    3703:	c4 e2 7d 19 e8       	vbroadcastsd ymm5,xmm0
    3708:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    370c:	48 89 f8             	mov    rax,rdi
    370f:	c1 ee 02             	shr    esi,0x2
    3712:	48 c1 e6 05          	shl    rsi,0x5
    3716:	48 01 fe             	add    rsi,rdi
    3719:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3720:	c5 fd 10 30          	vmovupd ymm6,YMMWORD PTR [rax]
    3724:	48 83 c0 20          	add    rax,0x20
    3728:	c5 cd 5c cd          	vsubpd ymm1,ymm6,ymm5
    372c:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    3730:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3734:	c5 f1 15 d1          	vunpckhpd xmm2,xmm1,xmm1
    3738:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    373e:	c5 fb 58 c2          	vaddsd xmm0,xmm0,xmm2
    3742:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3746:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    374a:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    374e:	48 39 f0             	cmp    rax,rsi
    3751:	75 cd                	jne    3720 <_Z21standartDeviationTimePdjd+0x60>
    3753:	89 c8                	mov    eax,ecx
    3755:	83 e0 fc             	and    eax,0xfffffffc
    3758:	f6 c1 03             	test   cl,0x3
    375b:	74 7b                	je     37d8 <_Z21standartDeviationTimePdjd+0x118>
    375d:	c5 f8 77             	vzeroupper
    3760:	89 ce                	mov    esi,ecx
    3762:	29 c6                	sub    esi,eax
    3764:	83 fe 01             	cmp    esi,0x1
    3767:	74 2a                	je     3793 <_Z21standartDeviationTimePdjd+0xd3>
    3769:	89 c7                	mov    edi,eax
    376b:	c5 fb 12 d3          	vmovddup xmm2,xmm3
    376f:	c5 f9 10 0c fa       	vmovupd xmm1,XMMWORD PTR [rdx+rdi*8]
    3774:	c5 f1 5c ca          	vsubpd xmm1,xmm1,xmm2
    3778:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    377c:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3780:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    3784:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    3788:	40 f6 c6 01          	test   sil,0x1
    378c:	74 16                	je     37a4 <_Z21standartDeviationTimePdjd+0xe4>
    378e:	83 e6 fe             	and    esi,0xfffffffe
    3791:	01 f0                	add    eax,esi
    3793:	c5 fb 10 0c c2       	vmovsd xmm1,QWORD PTR [rdx+rax*8]
    3798:	c5 f3 5c cb          	vsubsd xmm1,xmm1,xmm3
    379c:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    37a0:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    37a4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    37a8:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    37ac:	c4 e1 f2 2a c9       	vcvtsi2ss xmm1,xmm1,rcx
    37b1:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    37b5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    37b9:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    37bd:	77 36                	ja     37f5 <_Z21standartDeviationTimePdjd+0x135>
    37bf:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    37c3:	4c 8b 55 f8          	mov    r10,QWORD PTR [rbp-0x8]
    37c7:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    37cb:	c9                   	leave
    37cc:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    37d0:	c3                   	ret
    37d1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    37d8:	c5 f8 77             	vzeroupper
    37db:	eb c7                	jmp    37a4 <_Z21standartDeviationTimePdjd+0xe4>
    37dd:	0f 1f 00             	nop    DWORD PTR [rax]
    37e0:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    37e4:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    37e8:	eb d5                	jmp    37bf <_Z21standartDeviationTimePdjd+0xff>
    37ea:	31 c0                	xor    eax,eax
    37ec:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    37f0:	e9 6b ff ff ff       	jmp    3760 <_Z21standartDeviationTimePdjd+0xa0>
    37f5:	e8 96 d9 ff ff       	call   1190 <sqrtf@plt>
    37fa:	eb c7                	jmp    37c3 <_Z21standartDeviationTimePdjd+0x103>
    37fc:	48 8d 0d e5 0c 00 00 	lea    rcx,[rip+0xce5]        # 44e8 <_IO_stdin_used+0x4e8>
    3803:	ba a9 00 00 00       	mov    edx,0xa9
    3808:	48 8d 35 60 09 00 00 	lea    rsi,[rip+0x960]        # 416f <_IO_stdin_used+0x16f>
    380f:	48 8d 3d e3 09 00 00 	lea    rdi,[rip+0x9e3]        # 41f9 <_IO_stdin_used+0x1f9>
    3816:	e8 55 d8 ff ff       	call   1070 <__assert_fail@plt>
    381b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003820 <_Z27standartDeviationCollisionsP7HashMapf>:
    3820:	f3 0f 1e fa          	endbr64
    3824:	41 55                	push   r13
    3826:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    382b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    382f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    3833:	55                   	push   rbp
    3834:	48 89 e5             	mov    rbp,rsp
    3837:	41 55                	push   r13
    3839:	48 83 ec 28          	sub    rsp,0x28
    383d:	48 85 ff             	test   rdi,rdi
    3840:	0f 84 d7 02 00 00    	je     3b1d <_Z27standartDeviationCollisionsP7HashMapf+0x2fd>
    3846:	8b 77 08             	mov    esi,DWORD PTR [rdi+0x8]
    3849:	85 f6                	test   esi,esi
    384b:	0f 84 87 02 00 00    	je     3ad8 <_Z27standartDeviationCollisionsP7HashMapf+0x2b8>
    3851:	8d 46 ff             	lea    eax,[rsi-0x1]
    3854:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3857:	c5 f8 28 e0          	vmovaps xmm4,xmm0
    385b:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    385f:	83 f8 06             	cmp    eax,0x6
    3862:	0f 86 95 02 00 00    	jbe    3afd <_Z27standartDeviationCollisionsP7HashMapf+0x2dd>
    3868:	48 8d 47 10          	lea    rax,[rdi+0x10]
    386c:	c4 e2 7d 18 f0       	vbroadcastss ymm6,xmm0
    3871:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3876:	89 f2                	mov    edx,esi
    3878:	c4 e2 7d 18 2d 8f 07 	vbroadcastss ymm5,DWORD PTR [rip+0x78f]        # 4010 <_IO_stdin_used+0x10>
    387f:	00 00 
    3881:	c1 ea 03             	shr    edx,0x3
    3884:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    388b:	ff ff ff 
    388e:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    3892:	ba ff ff 00 00       	mov    edx,0xffff
    3897:	49 c1 e0 06          	shl    r8,0x6
    389b:	c5 f9 6e d2          	vmovd  xmm2,edx
    389f:	49 01 c0             	add    r8,rax
    38a2:	c4 e2 7d 58 d2       	vpbroadcastd ymm2,xmm2
    38a7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    38ae:	00 00 
    38b0:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    38b3:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    38b6:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    38ba:	48 05 c0 00 00 00    	add    rax,0xc0
    38c0:	c5 fd 7f 7d d0       	vmovdqa YMMWORD PTR [rbp-0x30],ymm7
    38c5:	48 c1 e2 20          	shl    rdx,0x20
    38c9:	49 09 d1             	or     r9,rdx
    38cc:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    38d0:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    38d4:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    38db:	48 21 ca             	and    rdx,rcx
    38de:	4c 09 ca             	or     rdx,r9
    38e1:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    38e5:	89 d2                	mov    edx,edx
    38e7:	49 c1 e1 20          	shl    r9,0x20
    38eb:	4c 09 ca             	or     rdx,r9
    38ee:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    38f2:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    38f6:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    38fa:	48 21 ca             	and    rdx,rcx
    38fd:	4c 09 ca             	or     rdx,r9
    3900:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    3904:	89 d2                	mov    edx,edx
    3906:	49 c1 e1 20          	shl    r9,0x20
    390a:	4c 09 ca             	or     rdx,r9
    390d:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    3911:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    3915:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    3919:	48 21 ca             	and    rdx,rcx
    391c:	4c 09 ca             	or     rdx,r9
    391f:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    3923:	89 d2                	mov    edx,edx
    3925:	49 c1 e1 20          	shl    r9,0x20
    3929:	4c 09 ca             	or     rdx,r9
    392c:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    3930:	c5 fd 6f 7d d0       	vmovdqa ymm7,YMMWORD PTR [rbp-0x30]
    3935:	c5 ed db 45 d0       	vpand  ymm0,ymm2,YMMWORD PTR [rbp-0x30]
    393a:	c5 f5 72 d7 10       	vpsrld ymm1,ymm7,0x10
    393f:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    3943:	c5 f4 59 cd          	vmulps ymm1,ymm1,ymm5
    3947:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    394b:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    394f:	c5 fc 5c c6          	vsubps ymm0,ymm0,ymm6
    3953:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    3957:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    395b:	c5 78 c6 c0 55       	vshufps xmm8,xmm0,xmm0,0x55
    3960:	c5 f8 c6 f8 ff       	vshufps xmm7,xmm0,xmm0,0xff
    3965:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    396a:	c5 78 15 c0          	vunpckhps xmm8,xmm0,xmm0
    396e:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    3974:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    3979:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    397d:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    3982:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    3986:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    398a:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    398e:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3993:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    3997:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    399b:	49 39 c0             	cmp    r8,rax
    399e:	0f 85 0c ff ff ff    	jne    38b0 <_Z27standartDeviationCollisionsP7HashMapf+0x90>
    39a4:	89 f0                	mov    eax,esi
    39a6:	83 e0 f8             	and    eax,0xfffffff8
    39a9:	40 f6 c6 07          	test   sil,0x7
    39ad:	0f 84 45 01 00 00    	je     3af8 <_Z27standartDeviationCollisionsP7HashMapf+0x2d8>
    39b3:	c5 f8 77             	vzeroupper
    39b6:	89 f1                	mov    ecx,esi
    39b8:	29 c1                	sub    ecx,eax
    39ba:	8d 51 ff             	lea    edx,[rcx-0x1]
    39bd:	83 fa 02             	cmp    edx,0x2
    39c0:	0f 86 8b 00 00 00    	jbe    3a51 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    39c6:	c4 e2 79 18 15 41 06 	vbroadcastss xmm2,DWORD PTR [rip+0x641]        # 4010 <_IO_stdin_used+0x10>
    39cd:	00 00 
    39cf:	89 c2                	mov    edx,eax
    39d1:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    39d5:	c5 f9 6e 4c d7 10    	vmovd  xmm1,DWORD PTR [rdi+rdx*8+0x10]
    39db:	c4 e3 71 22 4c d7 28 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x28],0x1
    39e2:	01 
    39e3:	c4 e3 71 22 4c d7 40 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x40],0x2
    39ea:	02 
    39eb:	c4 e3 71 22 4c d7 58 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x58],0x3
    39f2:	03 
    39f3:	ba ff ff 00 00       	mov    edx,0xffff
    39f8:	c5 f9 6e c2          	vmovd  xmm0,edx
    39fc:	89 ca                	mov    edx,ecx
    39fe:	c5 f9 70 c0 00       	vpshufd xmm0,xmm0,0x0
    3a03:	83 e2 fc             	and    edx,0xfffffffc
    3a06:	c5 f1 db c0          	vpand  xmm0,xmm1,xmm0
    3a0a:	c5 f1 72 d1 10       	vpsrld xmm1,xmm1,0x10
    3a0f:	01 d0                	add    eax,edx
    3a11:	83 e1 03             	and    ecx,0x3
    3a14:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    3a18:	c5 f0 59 ca          	vmulps xmm1,xmm1,xmm2
    3a1c:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    3a20:	c5 f8 58 c1          	vaddps xmm0,xmm0,xmm1
    3a24:	c5 d8 c6 cc 00       	vshufps xmm1,xmm4,xmm4,0x0
    3a29:	c5 f8 5c c1          	vsubps xmm0,xmm0,xmm1
    3a2d:	c5 f8 59 c0          	vmulps xmm0,xmm0,xmm0
    3a31:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    3a35:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    3a3a:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    3a3e:	c5 f8 15 d0          	vunpckhps xmm2,xmm0,xmm0
    3a42:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3a47:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    3a4b:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    3a4f:	74 5b                	je     3aac <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a51:	89 c2                	mov    edx,eax
    3a53:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a57:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a5b:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3a60:	8d 50 01             	lea    edx,[rax+0x1]
    3a63:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a67:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a6b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a6f:	39 f2                	cmp    edx,esi
    3a71:	73 39                	jae    3aac <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a73:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a77:	83 c0 02             	add    eax,0x2
    3a7a:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a7e:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3a83:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a87:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a8b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a8f:	39 f0                	cmp    eax,esi
    3a91:	73 19                	jae    3aac <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a93:	48 8d 04 40          	lea    rax,[rax+rax*2]
    3a97:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    3a9b:	c4 e1 e2 2a c0       	vcvtsi2ss xmm0,xmm3,rax
    3aa0:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3aa4:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3aa8:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3aac:	c4 e1 e2 2a de       	vcvtsi2ss xmm3,xmm3,rsi
    3ab1:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3ab5:	c5 3a 5e c3          	vdivss xmm8,xmm8,xmm3
    3ab9:	c4 c1 78 2e c0       	vucomiss xmm0,xmm8
    3abe:	77 49                	ja     3b09 <_Z27standartDeviationCollisionsP7HashMapf+0x2e9>
    3ac0:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3ac4:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3ac9:	c9                   	leave
    3aca:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3ace:	41 5d                	pop    r13
    3ad0:	c3                   	ret
    3ad1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3ad8:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3add:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3ae1:	c4 41 3a 5e c0       	vdivss xmm8,xmm8,xmm8
    3ae6:	c9                   	leave
    3ae7:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3aeb:	41 5d                	pop    r13
    3aed:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3af2:	c3                   	ret
    3af3:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3af8:	c5 f8 77             	vzeroupper
    3afb:	eb af                	jmp    3aac <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3afd:	31 c0                	xor    eax,eax
    3aff:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3b04:	e9 ad fe ff ff       	jmp    39b6 <_Z27standartDeviationCollisionsP7HashMapf+0x196>
    3b09:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3b0d:	c5 78 29 c0          	vmovaps xmm0,xmm8
    3b11:	c9                   	leave
    3b12:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3b16:	41 5d                	pop    r13
    3b18:	e9 73 d6 ff ff       	jmp    1190 <sqrtf@plt>
    3b1d:	48 8d 0d 74 0b 00 00 	lea    rcx,[rip+0xb74]        # 4698 <_IO_stdin_used+0x698>
    3b24:	ba b5 00 00 00       	mov    edx,0xb5
    3b29:	48 8d 35 3f 06 00 00 	lea    rsi,[rip+0x63f]        # 416f <_IO_stdin_used+0x16f>
    3b30:	48 8d 3d eb 04 00 00 	lea    rdi,[rip+0x4eb]        # 4022 <_IO_stdin_used+0x22>
    3b37:	e8 34 d5 ff ff       	call   1070 <__assert_fail@plt>
    3b3c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003b40 <my_strcmp>:
    3b40:	c5 fd 6f 07          	vmovdqa ymm0,YMMWORD PTR [rdi]
    3b44:	c5 fd 6f 0e          	vmovdqa ymm1,YMMWORD PTR [rsi]
    3b48:	c4 e2 7d 29 d1       	vpcmpeqq ymm2,ymm0,ymm1
    3b4d:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    3b51:	f7 d0                	not    eax
    3b53:	c3                   	ret

Disassembly of section .fini:

0000000000003b54 <_fini>:
    3b54:	f3 0f 1e fa          	endbr64
    3b58:	48 83 ec 08          	sub    rsp,0x8
    3b5c:	48 83 c4 08          	add    rsp,0x8
    3b60:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    DWORD PTR [rax],eax
    4002:	02 00                	add    al,BYTE PTR [rax]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    4009:	00 70 41             	add    BYTE PTR [rax+0x41],dh
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	00 3f                	add    BYTE PTR [rdi],bh
    4010:	00 00                	add    BYTE PTR [rax],al
    4012:	80 47 62 6f          	add    BYTE PTR [rdi+0x62],0x6f
    4016:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4017:	6b 2e 74             	imul   ebp,DWORD PTR [rsi],0x74
    401a:	78 74                	js     4090 <_IO_stdin_used+0x90>
    401c:	00 74 65 78          	add    BYTE PTR [rbp+riz*2+0x78],dh
    4020:	74 00                	je     4022 <_IO_stdin_used+0x22>
    4022:	68 61 73 68 4d       	push   0x4d687361
    4027:	61                   	(bad)
    4028:	70 00                	jo     402a <_IO_stdin_used+0x2a>
    402a:	76 6f                	jbe    409b <_IO_stdin_used+0x9b>
    402c:	69 64 20 68 61 73 68 	imul   esp,DWORD PTR [rax+riz*1+0x68],0x4d687361
    4033:	4d 
    4034:	61                   	(bad)
    4035:	70 44                	jo     407b <_IO_stdin_used+0x7b>
    4037:	74 6f                	je     40a8 <_IO_stdin_used+0xa8>
    4039:	72 28                	jb     4063 <_IO_stdin_used+0x63>
    403b:	48 61                	rex.W (bad)
    403d:	73 68                	jae    40a7 <_IO_stdin_used+0xa7>
    403f:	4d 61                	rex.WRB (bad)
    4041:	70 2a                	jo     406d <_IO_stdin_used+0x6d>
    4043:	29 00                	sub    DWORD PTR [rax],eax
    4045:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4054:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4059:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    405e:	3d 00 4e 55 4c       	cmp    eax,0x4c554e00
    4063:	4c 00 48 4d          	rex.WR add BYTE PTR [rax+0x4d],r9b
    4067:	20 43 41             	and    BYTE PTR [rbx+0x41],al
    406a:	50                   	push   rax
    406b:	41                   	rex.B
    406c:	43                   	rex.XB
    406d:	49 54                	rex.WB push r12
    406f:	59                   	pop    rcx
    4070:	3a 20                	cmp    ah,BYTE PTR [rax]
    4072:	25 64 0a 00 4c       	and    eax,0x4c000a64
    4077:	4f                   	rex.WRXB
    4078:	41                   	rex.B
    4079:	44 20 46 41          	and    BYTE PTR [rsi+0x41],r8b
    407d:	43 54                	rex.XB push r12
    407f:	4f 52                	rex.WRXB push r10
    4081:	3a 20                	cmp    ah,BYTE PTR [rax]
    4083:	25 66 0a 00 48       	and    eax,0x48000a66
    4088:	41 53                	push   r11
    408a:	48                   	rex.W
    408b:	4d                   	rex.WRB
    408c:	41 50                	push   r8
    408e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    4091:	58                   	pop    rax
    4092:	3a 20                	cmp    ah,BYTE PTR [rax]
    4094:	25 64 0a 00 2f       	and    eax,0x2f000a64
    4099:	72 6f                	jb     410a <_IO_stdin_used+0x10a>
    409b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    409c:	74 2f                	je     40cd <_IO_stdin_used+0xcd>
    409e:	68 61 73 68 4d       	push   0x4d687361
    40a3:	61                   	(bad)
    40a4:	70 2f                	jo     40d5 <_IO_stdin_used+0xd5>
    40a6:	73 72                	jae    411a <_IO_stdin_used+0x11a>
    40a8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    40ab:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
    40b2:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
    40b6:	74 00                	je     40b8 <_IO_stdin_used+0xb8>
    40b8:	76 6f                	jbe    4129 <_IO_stdin_used+0x129>
    40ba:	69 64 20 6c 69 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x44747369
    40c1:	44 
    40c2:	74 6f                	je     4133 <_IO_stdin_used+0x133>
    40c4:	72 28                	jb     40ee <_IO_stdin_used+0xee>
    40c6:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x7600292a
    40cd:	76 
    40ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40cf:	69 64 20 64 65 62 75 	imul   esp,DWORD PTR [rax+riz*1+0x64],0x67756265
    40d6:	67 
    40d7:	50                   	push   rax
    40d8:	72 69                	jb     4143 <_IO_stdin_used+0x143>
    40da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40db:	74 28                	je     4105 <_IO_stdin_used+0x105>
    40dd:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x4300292a
    40e4:	43 
    40e5:	41 50                	push   r8
    40e7:	41                   	rex.B
    40e8:	43                   	rex.XB
    40e9:	49 54                	rex.WB push r12
    40eb:	59                   	pop    rcx
    40ec:	3a 20                	cmp    ah,BYTE PTR [rax]
    40ee:	25 75 0a 00 54       	and    eax,0x54000a75
    40f3:	41                   	rex.B
    40f4:	49                   	rex.WB
    40f5:	4c 5f                	rex.WR pop rdi
    40f7:	49                   	rex.WB
    40f8:	4e 58                	rex.WRX pop rax
    40fa:	3a 20                	cmp    ah,BYTE PTR [rax]
    40fc:	25 75 0a 00 45       	and    eax,0x45000a75
    4101:	4c                   	rex.WR
    4102:	45                   	rex.RB
    4103:	4d 5f                	rex.WRB pop r15
    4105:	41                   	rex.B
    4106:	4d 20 3a             	rex.WRB and BYTE PTR [r10],r15b
    4109:	20 25 75 0a 00 49    	and    BYTE PTR [rip+0x49000a75],ah        # 49004b84 <_end+0x48ffeb6c>
    410f:	4e 58                	rex.WRX pop rax
    4111:	53                   	push   rbx
    4112:	3a 20                	cmp    ah,BYTE PTR [rax]
    4114:	20 20                	and    BYTE PTR [rax],ah
    4116:	20 20                	and    BYTE PTR [rax],ah
    4118:	00 25 75 20 00 4e    	add    BYTE PTR [rip+0x4e002075],ah        # 4e006193 <_end+0x4e00017b>
    411e:	45 58                	rex.RB pop r8
    4120:	54                   	push   rsp
    4121:	3a 20                	cmp    ah,BYTE PTR [rax]
    4123:	20 20                	and    BYTE PTR [rax],ah
    4125:	20 20                	and    BYTE PTR [rax],ah
    4127:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    412a:	45 56                	rex.RB push r14
    412c:	3a 20                	cmp    ah,BYTE PTR [rax]
    412e:	20 20                	and    BYTE PTR [rax],ah
    4130:	20 20                	and    BYTE PTR [rax],ah
    4132:	00 48 41             	add    BYTE PTR [rax+0x41],cl
    4135:	53                   	push   rbx
    4136:	48 3a 20             	rex.W cmp spl,BYTE PTR [rax]
    4139:	20 20                	and    BYTE PTR [rax],ah
    413b:	20 20                	and    BYTE PTR [rax],ah
    413d:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    4140:	52                   	push   rdx
    4141:	3a 00                	cmp    al,BYTE PTR [rax]
    4143:	25 2d 33 32 73       	and    eax,0x7332332d
    4148:	0a 00                	or     al,BYTE PTR [rax]
    414a:	2f                   	(bad)
    414b:	72 6f                	jb     41bc <_IO_stdin_used+0x1bc>
    414d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    414e:	74 2f                	je     417f <_IO_stdin_used+0x17f>
    4150:	68 61 73 68 4d       	push   0x4d687361
    4155:	61                   	(bad)
    4156:	70 2f                	jo     4187 <_IO_stdin_used+0x187>
    4158:	73 72                	jae    41cc <_IO_stdin_used+0x1cc>
    415a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    415c:	75 74                	jne    41d2 <_IO_stdin_used+0x1d2>
    415e:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
    4165:	00 
    4166:	66 69 6c 65 6e 61 6d 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
    416d:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    4170:	72 6f                	jb     41e1 <_IO_stdin_used+0x1e1>
    4172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4173:	74 2f                	je     41a4 <_IO_stdin_used+0x1a4>
    4175:	68 61 73 68 4d       	push   0x4d687361
    417a:	61                   	(bad)
    417b:	70 2f                	jo     41ac <_IO_stdin_used+0x1ac>
    417d:	73 72                	jae    41f1 <_IO_stdin_used+0x1f1>
    417f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    4181:	74 65                	je     41e8 <_IO_stdin_used+0x1e8>
    4183:	73 74                	jae    41f9 <_IO_stdin_used+0x1f9>
    4185:	73 2e                	jae    41b5 <_IO_stdin_used+0x1b5>
    4187:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    418a:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    418d:	6c                   	ins    BYTE PTR es:[rdi],dx
    418e:	65 00 42 75          	add    BYTE PTR gs:[rdx+0x75],al
    4192:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    4195:	74 20                	je     41b7 <_IO_stdin_used+0x1b7>
    4197:	69 6e 64 65 78 2c 42 	imul   ebp,DWORD PTR [rsi+0x64],0x422c7865
    419e:	75 63                	jne    4203 <_IO_stdin_used+0x203>
    41a0:	6b 65 74 20          	imul   esp,DWORD PTR [rbp+0x74],0x20
    41a4:	73 69                	jae    420f <_IO_stdin_used+0x20f>
    41a6:	7a 65                	jp     420d <_IO_stdin_used+0x20d>
    41a8:	0a 00                	or     al,BYTE PTR [rax]
    41aa:	25 75 2c 25 75       	and    eax,0x75252c75
    41af:	0a 00                	or     al,BYTE PTR [rax]
    41b1:	41 56                	push   r14
    41b3:	45 52                	rex.RB push r10
    41b5:	41                   	rex.B
    41b6:	47                   	rex.RXB
    41b7:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    41bb:	4c                   	rex.WR
    41bc:	4c                   	rex.WR
    41bd:	49 53                	rex.WB push r11
    41bf:	49                   	rex.WB
    41c0:	4f                   	rex.WRXB
    41c1:	4e 53                	rex.WRX push rbx
    41c3:	3a 20                	cmp    ah,BYTE PTR [rax]
    41c5:	25 2e 32 66 0a       	and    eax,0xa66322e
    41ca:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    41cd:	41                   	rex.B
    41ce:	4e                   	rex.WRX
    41cf:	44                   	rex.R
    41d0:	41 52                	push   r10
    41d2:	54                   	push   rsp
    41d3:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    41d7:	49                   	rex.WB
    41d8:	41 54                	push   r12
    41da:	49                   	rex.WB
    41db:	4f                   	rex.WRXB
    41dc:	4e 3a 20             	rex.WRX cmp r12b,BYTE PTR [rax]
    41df:	25 2e 32 66 0a       	and    eax,0xa66322e
    41e4:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    41e8:	74 20                	je     420a <_IO_stdin_used+0x20a>
    41ea:	69 6e 64 65 78 2c 54 	imul   ebp,DWORD PTR [rsi+0x64],0x542c7865
    41f1:	69 6d 65 20 6d 73 0a 	imul   ebp,DWORD PTR [rbp+0x65],0xa736d20
    41f8:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    41fc:	65 5f                	gs pop rdi
    41fe:	61                   	(bad)
    41ff:	72 72                	jb     4273 <_IO_stdin_used+0x273>
    4201:	61                   	(bad)
    4202:	79 00                	jns    4204 <_IO_stdin_used+0x204>
    4204:	25 75 2c 25 2e       	and    eax,0x2e252c75
    4209:	32 66 0a             	xor    ah,BYTE PTR [rsi+0xa]
    420c:	00 41 56             	add    BYTE PTR [rcx+0x56],al
    420f:	45 52                	rex.RB push r10
    4211:	41                   	rex.B
    4212:	47                   	rex.RXB
    4213:	45 20 53 45          	and    BYTE PTR [r11+0x45],r10b
    4217:	41 52                	push   r10
    4219:	43                   	rex.XB
    421a:	48 20 54 49 4d       	rex.W and BYTE PTR [rcx+rcx*2+0x4d],dl
    421f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    4222:	25 2e 32 66 20       	and    eax,0x2066322e
    4227:	6d                   	ins    DWORD PTR es:[rdi],dx
    4228:	73 0a                	jae    4234 <_IO_stdin_used+0x234>
    422a:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    422d:	41                   	rex.B
    422e:	4e                   	rex.WRX
    422f:	44                   	rex.R
    4230:	41 52                	push   r10
    4232:	54                   	push   rsp
    4233:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    4237:	49                   	rex.WB
    4238:	41 54                	push   r12
    423a:	49                   	rex.WB
    423b:	4f                   	rex.WRXB
    423c:	4e 20 3a             	rex.WRX and BYTE PTR [rdx],r15b
    423f:	20 25 2e 32 66 20    	and    BYTE PTR [rip+0x2066322e],ah        # 20667473 <_end+0x2066145b>
    4245:	6d                   	ins    DWORD PTR es:[rdi],dx
    4246:	73 0a                	jae    4252 <_IO_stdin_used+0x252>
    4248:	00 50 45             	add    BYTE PTR [rax+0x45],dl
    424b:	52                   	push   rdx
    424c:	43                   	rex.XB
    424d:	45                   	rex.RB
    424e:	4e 54                	rex.WRX push rsp
    4250:	41                   	rex.B
    4251:	47                   	rex.RXB
    4252:	45 20 4f 46          	and    BYTE PTR [r15+0x46],r9b
    4256:	20 45 52             	and    BYTE PTR [rbp+0x52],al
    4259:	52                   	push   rdx
    425a:	4f 52                	rex.WRXB push r10
    425c:	3a 20                	cmp    ah,BYTE PTR [rax]
    425e:	25 2e 32 66 0a       	and    eax,0xa66322e
    4263:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    4266:	74 65                	je     42cd <_IO_stdin_used+0x2cd>
    4268:	73 74                	jae    42de <_IO_stdin_used+0x2de>
    426a:	5f                   	pop    rdi
    426b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    426c:	61                   	(bad)
    426d:	6d                   	ins    DWORD PTR es:[rdi],dx
    426e:	65 00 5f 6d          	add    BYTE PTR gs:[rdi+0x6d],bl
    4272:	6d                   	ins    DWORD PTR es:[rdi],dx
    4273:	5f                   	pop    rdi
    4274:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4277:	33 32                	xor    esi,DWORD PTR [rdx]
    4279:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    427c:	72 6d                	jb     42eb <_IO_stdin_used+0x2eb>
    427e:	75 72                	jne    42f2 <_IO_stdin_used+0x2f2>
    4280:	33 00                	xor    eax,DWORD PTR [rax]
    4282:	6d                   	ins    DWORD PTR es:[rdi],dx
    4283:	75 72                	jne    42f7 <_IO_stdin_used+0x2f7>
    4285:	6d                   	ins    DWORD PTR es:[rdi],dx
    4286:	75 72                	jne    42fa <_IO_stdin_used+0x2fa>
    4288:	32 00                	xor    al,BYTE PTR [rax]
    428a:	73 75                	jae    4301 <_IO_stdin_used+0x301>
    428c:	6d                   	ins    DWORD PTR es:[rdi],dx
    428d:	00 70 6c             	add    BYTE PTR [rax+0x6c],dh
    4290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4291:	74 2f                	je     42c2 <_IO_stdin_used+0x2c2>
    4293:	73 75                	jae    430a <_IO_stdin_used+0x30a>
    4295:	6d                   	ins    DWORD PTR es:[rdi],dx
    4296:	2f                   	(bad)
    4297:	73 75                	jae    430e <_IO_stdin_used+0x30e>
    4299:	6d                   	ins    DWORD PTR es:[rdi],dx
    429a:	5f                   	pop    rdi
    429b:	73 65                	jae    4302 <_IO_stdin_used+0x302>
    429d:	61                   	(bad)
    429e:	72 63                	jb     4303 <_IO_stdin_used+0x303>
    42a0:	68 5f 74 69 6d       	push   0x6d69745f
    42a5:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42aa:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    42ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    42ae:	65 72 33             	gs jb  42e4 <_IO_stdin_used+0x2e4>
    42b1:	32 00                	xor    al,BYTE PTR [rax]
    42b3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42b5:	66 00 70 6c          	data16 add BYTE PTR [rax+0x6c],dh
    42b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42ba:	74 2f                	je     42eb <_IO_stdin_used+0x2eb>
    42bc:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42be:	66 2f                	data16 (bad)
    42c0:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42c2:	66 5f                	pop    di
    42c4:	73 65                	jae    432b <_IO_stdin_used+0x32b>
    42c6:	61                   	(bad)
    42c7:	72 63                	jb     432c <_IO_stdin_used+0x32c>
    42c9:	68 5f 74 69 6d       	push   0x6d69745f
    42ce:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42d3:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    42d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    42d7:	5f                   	pop    rdi
    42d8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    42db:	33 32                	xor    esi,DWORD PTR [rdx]
    42dd:	55                   	push   rbp
    42de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42df:	72 6f                	jb     4350 <_IO_stdin_used+0x350>
    42e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e3:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    42e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e7:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    42ea:	72 69                	jb     4355 <_IO_stdin_used+0x355>
    42ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42ed:	67 5f                	addr32 pop rdi
    42ef:	74 2a                	je     431b <_IO_stdin_used+0x31b>
    42f1:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
    42f4:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
    42fb:	6e 
    42fc:	67 41 72 72          	addr32 rex.B jb 4372 <_IO_stdin_used+0x372>
    4300:	61                   	(bad)
    4301:	79 28                	jns    432b <_IO_stdin_used+0x32b>
    4303:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4306:	72 2a                	jb     4332 <_IO_stdin_used+0x332>
    4308:	2c 20                	sub    al,0x20
    430a:	75 69                	jne    4375 <_IO_stdin_used+0x375>
    430c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    430d:	74 33                	je     4342 <_IO_stdin_used+0x342>
    430f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4312:	29 00                	sub    DWORD PTR [rax],eax
    4314:	00 00                	add    BYTE PTR [rax],al
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	2f                   	(bad)
    4319:	72 6f                	jb     438a <_IO_stdin_used+0x38a>
    431b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    431c:	74 2f                	je     434d <_IO_stdin_used+0x34d>
    431e:	68 61 73 68 4d       	push   0x4d687361
    4323:	61                   	(bad)
    4324:	70 2f                	jo     4355 <_IO_stdin_used+0x355>
    4326:	73 72                	jae    439a <_IO_stdin_used+0x39a>
    4328:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    432a:	68 61 73 68 5f       	push   0x5f687361
    432f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4330:	61                   	(bad)
    4331:	70 2e                	jo     4361 <_IO_stdin_used+0x361>
    4333:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    4336:	00 00                	add    BYTE PTR [rax],al
    4338:	75 69                	jne    43a3 <_IO_stdin_used+0x3a3>
    433a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    433b:	74 33                	je     4370 <_IO_stdin_used+0x370>
    433d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4340:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4343:	73 68                	jae    43ad <_IO_stdin_used+0x3ad>
    4345:	4d 61                	rex.WRB (bad)
    4347:	70 41                	jo     438a <_IO_stdin_used+0x38a>
    4349:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
    434d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    434f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4351:	74 28                	je     437b <_IO_stdin_used+0x37b>
    4353:	48 61                	rex.W (bad)
    4355:	73 68                	jae    43bf <_IO_stdin_used+0x3bf>
    4357:	4d 61                	rex.WRB (bad)
    4359:	70 2a                	jo     4385 <_IO_stdin_used+0x385>
    435b:	2c 20                	sub    al,0x20
    435d:	64 61                	fs (bad)
    435f:	74 61                	je     43c2 <_IO_stdin_used+0x3c2>
    4361:	5f                   	pop    rdi
    4362:	74 29                	je     438d <_IO_stdin_used+0x38d>
    4364:	00 00                	add    BYTE PTR [rax],al
    4366:	00 00                	add    BYTE PTR [rax],al
    4368:	75 69                	jne    43d3 <_IO_stdin_used+0x3d3>
    436a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    436b:	74 33                	je     43a0 <_IO_stdin_used+0x3a0>
    436d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4370:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4373:	73 68                	jae    43dd <_IO_stdin_used+0x3dd>
    4375:	4d 61                	rex.WRB (bad)
    4377:	70 50                	jo     43c9 <_IO_stdin_used+0x3c9>
    4379:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    437a:	70 45                	jo     43c1 <_IO_stdin_used+0x3c1>
    437c:	6c                   	ins    BYTE PTR es:[rdi],dx
    437d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    437f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4381:	74 28                	je     43ab <_IO_stdin_used+0x3ab>
    4383:	48 61                	rex.W (bad)
    4385:	73 68                	jae    43ef <_IO_stdin_used+0x3ef>
    4387:	4d 61                	rex.WRB (bad)
    4389:	70 2a                	jo     43b5 <_IO_stdin_used+0x3b5>
    438b:	2c 20                	sub    al,0x20
    438d:	64 61                	fs (bad)
    438f:	74 61                	je     43f2 <_IO_stdin_used+0x3f2>
    4391:	5f                   	pop    rdi
    4392:	74 29                	je     43bd <_IO_stdin_used+0x3bd>
    4394:	00 00                	add    BYTE PTR [rax],al
    4396:	00 00                	add    BYTE PTR [rax],al
    4398:	62 6f 6f 6c 20       	(bad)
    439d:	68 61 73 68 4d       	push   0x4d687361
    43a2:	61                   	(bad)
    43a3:	70 53                	jo     43f8 <_IO_stdin_used+0x3f8>
    43a5:	65 61                	gs (bad)
    43a7:	72 63                	jb     440c <_IO_stdin_used+0x40c>
    43a9:	68 45 6c 65 6d       	push   0x6d656c45
    43ae:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43b0:	74 28                	je     43da <_IO_stdin_used+0x3da>
    43b2:	48 61                	rex.W (bad)
    43b4:	73 68                	jae    441e <_IO_stdin_used+0x41e>
    43b6:	4d 61                	rex.WRB (bad)
    43b8:	70 2a                	jo     43e4 <_IO_stdin_used+0x3e4>
    43ba:	2c 20                	sub    al,0x20
    43bc:	64 61                	fs (bad)
    43be:	74 61                	je     4421 <_IO_stdin_used+0x421>
    43c0:	5f                   	pop    rdi
    43c1:	74 29                	je     43ec <_IO_stdin_used+0x3ec>
    43c3:	00 00                	add    BYTE PTR [rax],al
    43c5:	00 00                	add    BYTE PTR [rax],al
    43c7:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    43ca:	74 20                	je     43ec <_IO_stdin_used+0x3ec>
    43cc:	73 65                	jae    4433 <_IO_stdin_used+0x433>
    43ce:	61                   	(bad)
    43cf:	72 63                	jb     4434 <_IO_stdin_used+0x434>
    43d1:	68 45 6c 65 6d       	push   0x6d656c45
    43d6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43d8:	74 28                	je     4402 <_IO_stdin_used+0x402>
    43da:	4c 69 73 74 2a 2c 20 	imul   r14,QWORD PTR [rbx+0x74],0x64202c2a
    43e1:	64 
    43e2:	61                   	(bad)
    43e3:	74 61                	je     4446 <_IO_stdin_used+0x446>
    43e5:	5f                   	pop    rdi
    43e6:	74 29                	je     4411 <_IO_stdin_used+0x411>
	...
    43f0:	69 6e 74 20 70 75 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73757020
    43f7:	68 4c 69 73 74       	push   0x7473694c
    43fc:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    43fe:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4400:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4404:	74 2a                	je     4430 <_IO_stdin_used+0x430>
    4406:	2c 20                	sub    al,0x20
    4408:	64 61                	fs (bad)
    440a:	74 61                	je     446d <_IO_stdin_used+0x46d>
    440c:	5f                   	pop    rdi
    440d:	74 29                	je     4438 <_IO_stdin_used+0x438>
    440f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4412:	74 20                	je     4434 <_IO_stdin_used+0x434>
    4414:	70 6f                	jo     4485 <_IO_stdin_used+0x485>
    4416:	70 4c                	jo     4464 <_IO_stdin_used+0x464>
    4418:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
    441f:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4423:	74 2a                	je     444f <_IO_stdin_used+0x44f>
    4425:	2c 20                	sub    al,0x20
    4427:	64 61                	fs (bad)
    4429:	74 61                	je     448c <_IO_stdin_used+0x48c>
    442b:	5f                   	pop    rdi
    442c:	74 29                	je     4457 <_IO_stdin_used+0x457>
    442e:	00 00                	add    BYTE PTR [rax],al
    4430:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4433:	72 2a                	jb     445f <_IO_stdin_used+0x45f>
    4435:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    4438:	61                   	(bad)
    4439:	64 46 69 6c 65 28 63 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x736e6f63
    4440:	6f 6e 73 
    4443:	74 20                	je     4465 <_IO_stdin_used+0x465>
    4445:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4448:	72 2a                	jb     4474 <_IO_stdin_used+0x474>
    444a:	2c 20                	sub    al,0x20
    444c:	73 69                	jae    44b7 <_IO_stdin_used+0x4b7>
    444e:	7a 65                	jp     44b5 <_IO_stdin_used+0x4b5>
    4450:	5f                   	pop    rdi
    4451:	74 2a                	je     447d <_IO_stdin_used+0x47d>
    4453:	29 00                	sub    DWORD PTR [rax],eax
    4455:	00 00                	add    BYTE PTR [rax],al
    4457:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    445a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    445b:	74 33                	je     4490 <_IO_stdin_used+0x490>
    445d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4460:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    4463:	75 6e                	jne    44d3 <_IO_stdin_used+0x4d3>
    4465:	74 4c                	je     44b3 <_IO_stdin_used+0x4b3>
    4467:	69 6e 65 73 28 63 68 	imul   ebp,DWORD PTR [rsi+0x65],0x68632873
    446e:	61                   	(bad)
    446f:	72 2a                	jb     449b <_IO_stdin_used+0x49b>
    4471:	2c 20                	sub    al,0x20
    4473:	73 69                	jae    44de <_IO_stdin_used+0x4de>
    4475:	7a 65                	jp     44dc <_IO_stdin_used+0x4dc>
    4477:	5f                   	pop    rdi
    4478:	74 29                	je     44a3 <_IO_stdin_used+0x4a3>
    447a:	00 00                	add    BYTE PTR [rax],al
    447c:	00 00                	add    BYTE PTR [rax],al
    447e:	00 00                	add    BYTE PTR [rax],al
    4480:	76 6f                	jbe    44f1 <_IO_stdin_used+0x4f1>
    4482:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x43747365
    4489:	43 
    448a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    448b:	6c                   	ins    BYTE PTR es:[rdi],dx
    448c:	6c                   	ins    BYTE PTR es:[rdi],dx
    448d:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    4494:	46                   	rex.RX
    4495:	49                   	rex.WB
    4496:	4c                   	rex.WR
    4497:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    449b:	68 61 73 68 5f       	push   0x5f687361
    44a0:	74 2c                	je     44ce <_IO_stdin_used+0x4ce>
    44a2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44a6:	74 44                	je     44ec <_IO_stdin_used+0x4ec>
    44a8:	61                   	(bad)
    44a9:	74 61                	je     450c <_IO_stdin_used+0x50c>
    44ab:	29 00                	sub    DWORD PTR [rax],eax
    44ad:	00 00                	add    BYTE PTR [rax],al
    44af:	00 76 6f             	add    BYTE PTR [rsi+0x6f],dh
    44b2:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x53747365
    44b9:	53 
    44ba:	65 61                	gs (bad)
    44bc:	72 63                	jb     4521 <_IO_stdin_used+0x521>
    44be:	68 54 69 6d 65       	push   0x656d6954
    44c3:	28 46 49             	sub    BYTE PTR [rsi+0x49],al
    44c6:	4c                   	rex.WR
    44c7:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    44cb:	68 61 73 68 5f       	push   0x5f687361
    44d0:	74 2c                	je     44fe <_IO_stdin_used+0x4fe>
    44d2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44d6:	74 44                	je     451c <_IO_stdin_used+0x51c>
    44d8:	61                   	(bad)
    44d9:	74 61                	je     453c <_IO_stdin_used+0x53c>
    44db:	2c 20                	sub    al,0x20
    44dd:	75 69                	jne    4548 <_IO_stdin_used+0x548>
    44df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44e0:	74 33                	je     4515 <_IO_stdin_used+0x515>
    44e2:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44e5:	29 00                	sub    DWORD PTR [rax],eax
    44e7:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    44eb:	62 6c 65             	(bad)
    44ee:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    44f1:	61                   	(bad)
    44f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44f3:	64 61                	fs (bad)
    44f5:	72 74                	jb     456b <_IO_stdin_used+0x56b>
    44f7:	44                   	rex.R
    44f8:	65 76 69             	gs jbe 4564 <_IO_stdin_used+0x564>
    44fb:	61                   	(bad)
    44fc:	74 69                	je     4567 <_IO_stdin_used+0x567>
    44fe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4500:	54                   	push   rsp
    4501:	69 6d 65 28 64 6f 75 	imul   ebp,DWORD PTR [rbp+0x65],0x756f6428
    4508:	62 6c 65             	(bad)  {k2}
    450b:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    450e:	75 69                	jne    4579 <_IO_stdin_used+0x579>
    4510:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4511:	74 33                	je     4546 <_IO_stdin_used+0x546>
    4513:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4516:	2c 20                	sub    al,0x20
    4518:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    451a:	75 62                	jne    457e <_IO_stdin_used+0x57e>
    451c:	6c                   	ins    BYTE PTR es:[rdi],dx
    451d:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4520:	76 6f                	jbe    4591 <_IO_stdin_used+0x591>
    4522:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x41747365
    4529:	41 
    452a:	6c                   	ins    BYTE PTR es:[rdi],dx
    452b:	6c                   	ins    BYTE PTR es:[rdi],dx
    452c:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    452f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4530:	73 74                	jae    45a6 <_IO_stdin_used+0x5a6>
    4532:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    4535:	61                   	(bad)
    4536:	72 2a                	jb     4562 <_IO_stdin_used+0x562>
    4538:	2c 20                	sub    al,0x20
    453a:	75 69                	jne    45a5 <_IO_stdin_used+0x5a5>
    453c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    453d:	74 33                	je     4572 <_IO_stdin_used+0x572>
    453f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4542:	2c 20                	sub    al,0x20
    4544:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4547:	73 74                	jae    45bd <_IO_stdin_used+0x5bd>
    4549:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    454c:	61                   	(bad)
    454d:	72 2a                	jb     4579 <_IO_stdin_used+0x579>
    454f:	29 00                	sub    DWORD PTR [rax],eax
    4551:	00 00                	add    BYTE PTR [rax],al
    4553:	00 00                	add    BYTE PTR [rax],al
    4555:	00 00                	add    BYTE PTR [rax],al
    4557:	00 0a                	add    BYTE PTR [rdx],cl
    4559:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    455e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4563:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4568:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    456d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4572:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4577:	00 2d 2d 2d 2d 2d    	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2d72aa <_end+0x2d2d1292>
    457d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4582:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4587:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    458c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4591:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4596:	00 00                	add    BYTE PTR [rax],al
    4598:	70 6c                	jo     4606 <_IO_stdin_used+0x606>
    459a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    459b:	74 2f                	je     45cc <_IO_stdin_used+0x5cc>
    459d:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a0:	33 32                	xor    esi,DWORD PTR [rdx]
    45a2:	2f                   	(bad)
    45a3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a6:	33 32                	xor    esi,DWORD PTR [rdx]
    45a8:	5f                   	pop    rdi
    45a9:	73 65                	jae    4610 <_IO_stdin_used+0x610>
    45ab:	61                   	(bad)
    45ac:	72 63                	jb     4611 <_IO_stdin_used+0x611>
    45ae:	68 5f 74 69 6d       	push   0x6d69745f
    45b3:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    45c0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45c5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45ca:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45cf:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d9:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45de:	00 00                	add    BYTE PTR [rax],al
    45e0:	70 6c                	jo     464e <_IO_stdin_used+0x64e>
    45e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45e3:	74 2f                	je     4614 <_IO_stdin_used+0x614>
    45e5:	5f                   	pop    rdi
    45e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e7:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e8:	5f                   	pop    rdi
    45e9:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45ec:	33 32                	xor    esi,DWORD PTR [rdx]
    45ee:	2f                   	(bad)
    45ef:	5f                   	pop    rdi
    45f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f2:	5f                   	pop    rdi
    45f3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45f6:	33 32                	xor    esi,DWORD PTR [rdx]
    45f8:	5f                   	pop    rdi
    45f9:	73 65                	jae    4660 <_IO_stdin_used+0x660>
    45fb:	61                   	(bad)
    45fc:	72 63                	jb     4661 <_IO_stdin_used+0x661>
    45fe:	68 5f 74 69 6d       	push   0x6d69745f
    4603:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    4610:	70 6c                	jo     467e <_IO_stdin_used+0x67e>
    4612:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4613:	74 2f                	je     4644 <_IO_stdin_used+0x644>
    4615:	6d                   	ins    DWORD PTR es:[rdi],dx
    4616:	75 72                	jne    468a <_IO_stdin_used+0x68a>
    4618:	6d                   	ins    DWORD PTR es:[rdi],dx
    4619:	75 72                	jne    468d <_IO_stdin_used+0x68d>
    461b:	32 2f                	xor    ch,BYTE PTR [rdi]
    461d:	6d                   	ins    DWORD PTR es:[rdi],dx
    461e:	75 72                	jne    4692 <_IO_stdin_used+0x692>
    4620:	6d                   	ins    DWORD PTR es:[rdi],dx
    4621:	75 72                	jne    4695 <_IO_stdin_used+0x695>
    4623:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    4626:	65 61                	gs (bad)
    4628:	72 63                	jb     468d <_IO_stdin_used+0x68d>
    462a:	68 5f 74 69 6d       	push   0x6d69745f
    462f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4634:	00 00                	add    BYTE PTR [rax],al
    4636:	00 00                	add    BYTE PTR [rax],al
    4638:	70 6c                	jo     46a6 <_IO_stdin_used+0x6a6>
    463a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    463b:	74 2f                	je     466c <_IO_stdin_used+0x66c>
    463d:	61                   	(bad)
    463e:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4640:	65 72 33             	gs jb  4676 <_IO_stdin_used+0x676>
    4643:	32 2f                	xor    ch,BYTE PTR [rdi]
    4645:	61                   	(bad)
    4646:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4648:	65 72 33             	gs jb  467e <_IO_stdin_used+0x67e>
    464b:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    464e:	65 61                	gs (bad)
    4650:	72 63                	jb     46b5 <_IO_stdin_used+0x6b5>
    4652:	68 5f 74 69 6d       	push   0x6d69745f
    4657:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    465c:	00 00                	add    BYTE PTR [rax],al
    465e:	00 00                	add    BYTE PTR [rax],al
    4660:	70 6c                	jo     46ce <_IO_stdin_used+0x6ce>
    4662:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4663:	74 2f                	je     4694 <_IO_stdin_used+0x694>
    4665:	5f                   	pop    rdi
    4666:	6d                   	ins    DWORD PTR es:[rdi],dx
    4667:	6d                   	ins    DWORD PTR es:[rdi],dx
    4668:	5f                   	pop    rdi
    4669:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    466c:	33 32                	xor    esi,DWORD PTR [rdx]
    466e:	55                   	push   rbp
    466f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4670:	72 6f                	jb     46e1 <_IO_stdin_used+0x6e1>
    4672:	6c                   	ins    BYTE PTR es:[rdi],dx
    4673:	6c                   	ins    BYTE PTR es:[rdi],dx
    4674:	2f                   	(bad)
    4675:	5f                   	pop    rdi
    4676:	6d                   	ins    DWORD PTR es:[rdi],dx
    4677:	6d                   	ins    DWORD PTR es:[rdi],dx
    4678:	5f                   	pop    rdi
    4679:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    467c:	33 32                	xor    esi,DWORD PTR [rdx]
    467e:	55                   	push   rbp
    467f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4680:	72 6f                	jb     46f1 <__GNU_EH_FRAME_HDR+0x1>
    4682:	6c                   	ins    BYTE PTR es:[rdi],dx
    4683:	6c                   	ins    BYTE PTR es:[rdi],dx
    4684:	5f                   	pop    rdi
    4685:	73 65                	jae    46ec <_IO_stdin_used+0x6ec>
    4687:	61                   	(bad)
    4688:	72 63                	jb     46ed <_IO_stdin_used+0x6ed>
    468a:	68 5f 74 69 6d       	push   0x6d69745f
    468f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4694:	00 00                	add    BYTE PTR [rax],al
    4696:	00 00                	add    BYTE PTR [rax],al
    4698:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    469a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    469b:	61                   	(bad)
    469c:	74 20                	je     46be <_IO_stdin_used+0x6be>
    469e:	73 74                	jae    4714 <__GNU_EH_FRAME_HDR+0x24>
    46a0:	61                   	(bad)
    46a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46a2:	64 61                	fs (bad)
    46a4:	72 74                	jb     471a <__GNU_EH_FRAME_HDR+0x2a>
    46a6:	44                   	rex.R
    46a7:	65 76 69             	gs jbe 4713 <__GNU_EH_FRAME_HDR+0x23>
    46aa:	61                   	(bad)
    46ab:	74 69                	je     4716 <__GNU_EH_FRAME_HDR+0x26>
    46ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46af:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    46b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b3:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    46ba:	48 61                	rex.W (bad)
    46bc:	73 68                	jae    4726 <__GNU_EH_FRAME_HDR+0x36>
    46be:	4d 61                	rex.WRB (bad)
    46c0:	70 2a                	jo     46ec <_IO_stdin_used+0x6ec>
    46c2:	2c 20                	sub    al,0x20
    46c4:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    46c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46c7:	61                   	(bad)
    46c8:	74 29                	je     46f3 <__GNU_EH_FRAME_HDR+0x3>
    46ca:	00 00                	add    BYTE PTR [rax],al
    46cc:	00 00                	add    BYTE PTR [rax],al
    46ce:	00 00                	add    BYTE PTR [rax],al
    46d0:	02 00                	add    al,BYTE PTR [rax]
    46d2:	00 00                	add    BYTE PTR [rax],al
    46d4:	01 00                	add    DWORD PTR [rax],eax
    46d6:	00 00                	add    BYTE PTR [rax],al
    46d8:	03 00                	add    eax,DWORD PTR [rax]
    46da:	00 00                	add    BYTE PTR [rax],al
    46dc:	02 00                	add    al,BYTE PTR [rax]
    46de:	00 00                	add    BYTE PTR [rax],al
    46e0:	04 00                	add    al,0x0
    46e2:	00 00                	add    BYTE PTR [rax],al
    46e4:	03 00                	add    eax,DWORD PTR [rax]
	...
    46ee:	59                   	pop    rcx
    46ef:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000000046f0 <__GNU_EH_FRAME_HDR>:
    46f0:	01 1b                	add    DWORD PTR [rbx],ebx
    46f2:	03 3b                	add    edi,DWORD PTR [rbx]
    46f4:	14 01                	adc    al,0x1
    46f6:	00 00                	add    BYTE PTR [rax],al
    46f8:	21 00                	and    DWORD PTR [rax],eax
    46fa:	00 00                	add    BYTE PTR [rax],al
    46fc:	30 c9                	xor    cl,cl
    46fe:	ff                   	(bad)
    46ff:	ff 48 01             	dec    DWORD PTR [rax+0x1]
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	e0 ca                	loopne 46d0 <_IO_stdin_used+0x6d0>
    4706:	ff                   	(bad)
    4707:	ff 70 01             	push   QWORD PTR [rax+0x1]
    470a:	00 00                	add    BYTE PTR [rax],al
    470c:	f0 ca ff ff          	lock retf 0xffff
    4710:	88 01                	mov    BYTE PTR [rcx],al
    4712:	00 00                	add    BYTE PTR [rax],al
    4714:	20 cb                	and    bl,cl
    4716:	ff                   	(bad)
    4717:	ff 30                	push   QWORD PTR [rax]
    4719:	01 00                	add    DWORD PTR [rax],eax
    471b:	00 10                	add    BYTE PTR [rax],dl
    471d:	cc                   	int3
    471e:	ff                   	(bad)
    471f:	ff a8 01 00 00 40    	jmp    FWORD PTR [rax+0x40000001]
    4725:	cd ff                	int    0xff
    4727:	ff f4                	push   rsp
    4729:	01 00                	add    DWORD PTR [rax],eax
    472b:	00 f0                	add    al,dh
    472d:	cd ff                	int    0xff
    472f:	ff 20                	jmp    QWORD PTR [rax]
    4731:	02 00                	add    al,BYTE PTR [rax]
    4733:	00 a0 d0 ff ff 4c    	add    BYTE PTR [rax+0x4cffffd0],ah
    4739:	02 00                	add    al,BYTE PTR [rax]
    473b:	00 70 d1             	add    BYTE PTR [rax-0x2f],dh
    473e:	ff                   	(bad)
    473f:	ff 9c 02 00 00 e0 d1 	call   FWORD PTR [rdx+rax*1-0x2e200000]
    4746:	ff                   	(bad)
    4747:	ff c8                	dec    eax
    4749:	02 00                	add    al,BYTE PTR [rax]
    474b:	00 50 d2             	add    BYTE PTR [rax-0x2e],dl
    474e:	ff                   	(bad)
    474f:	ff f4                	push   rsp
    4751:	02 00                	add    al,BYTE PTR [rax]
    4753:	00 10                	add    BYTE PTR [rax],dl
    4755:	d3 ff                	sar    edi,cl
    4757:	ff 30                	push   QWORD PTR [rax]
    4759:	03 00                	add    eax,DWORD PTR [rax]
    475b:	00 30                	add    BYTE PTR [rax],dh
    475d:	d4                   	(bad)
    475e:	ff                   	(bad)
    475f:	ff 50 03             	call   QWORD PTR [rax+0x3]
    4762:	00 00                	add    BYTE PTR [rax],al
    4764:	80 d4 ff             	adc    ah,0xff
    4767:	ff 64 03 00          	jmp    QWORD PTR [rbx+rax*1+0x0]
    476b:	00 c0                	add    al,al
    476d:	d4                   	(bad)
    476e:	ff                   	(bad)
    476f:	ff                   	(bad)
    4770:	78 03                	js     4775 <__GNU_EH_FRAME_HDR+0x85>
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	70 d5                	jo     474b <__GNU_EH_FRAME_HDR+0x5b>
    4776:	ff                   	(bad)
    4777:	ff 8c 03 00 00 e0 d6 	dec    DWORD PTR [rbx+rax*1-0x29200000]
    477e:	ff                   	(bad)
    477f:	ff a0 03 00 00 60    	jmp    QWORD PTR [rax+0x60000003]
    4785:	d7                   	xlat   BYTE PTR ds:[rbx]
    4786:	ff                   	(bad)
    4787:	ff b4 03 00 00 b0 d7 	push   QWORD PTR [rbx+rax*1-0x28500000]
    478e:	ff                   	(bad)
    478f:	ff c8                	dec    eax
    4791:	03 00                	add    eax,DWORD PTR [rax]
    4793:	00 e0                	add    al,ah
    4795:	d7                   	xlat   BYTE PTR ds:[rbx]
    4796:	ff                   	(bad)
    4797:	ff e4                	jmp    rsp
    4799:	03 00                	add    eax,DWORD PTR [rax]
    479b:	00 40 d8             	add    BYTE PTR [rax-0x28],al
    479e:	ff                   	(bad)
    479f:	ff 00                	inc    DWORD PTR [rax]
    47a1:	04 00                	add    al,0x0
    47a3:	00 c0                	add    al,al
    47a5:	d9 ff                	fcos
    47a7:	ff 50 04             	call   QWORD PTR [rax+0x4]
    47aa:	00 00                	add    BYTE PTR [rax],al
    47ac:	a0 da ff ff a0 04 00 	movabs al,ds:0x20000004a0ffffda
    47b3:	00 20 
    47b5:	db ff                	(bad)
    47b7:	ff f0                	push   rax
    47b9:	04 00                	add    al,0x0
    47bb:	00 60 db             	add    BYTE PTR [rax-0x25],ah
    47be:	ff                   	(bad)
    47bf:	ff 0c 05 00 00 90 dd 	dec    DWORD PTR [rax*1-0x22700000]
    47c6:	ff                   	(bad)
    47c7:	ff 40 05             	inc    DWORD PTR [rax+0x5]
    47ca:	00 00                	add    BYTE PTR [rax],al
    47cc:	a0 de ff ff 68 05 00 	movabs al,ds:0x1000000568ffffde
    47d3:	00 10 
    47d5:	df ff                	(bad)
    47d7:	ff 98 05 00 00 70    	call   FWORD PTR [rax+0x70000005]
    47dd:	e3 ff                	jrcxz  47de <__GNU_EH_FRAME_HDR+0xee>
    47df:	ff e0                	jmp    rax
    47e1:	05 00 00 d0 e7       	add    eax,0xe7d00000
    47e6:	ff                   	(bad)
    47e7:	ff 2c 06             	jmp    FWORD PTR [rsi+rax*1]
    47ea:	00 00                	add    BYTE PTR [rax],al
    47ec:	20 e8                	and    al,ch
    47ee:	ff                   	(bad)
    47ef:	ff 68 06             	jmp    FWORD PTR [rax+0x6]
    47f2:	00 00                	add    BYTE PTR [rax],al
    47f4:	d0 ef                	shr    bh,1
    47f6:	ff                   	(bad)
    47f7:	ff b4 06 00 00 30 f1 	push   QWORD PTR [rsi+rax*1-0xed00000]
    47fe:	ff                   	(bad)
    47ff:	ff e4                	jmp    rsp
    4801:	06                   	(bad)
	...

Disassembly of section .eh_frame:

0000000000004808 <__FRAME_END__-0x620>:
    4808:	14 00                	adc    al,0x0
    480a:	00 00                	add    BYTE PTR [rax],al
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	00 00                	add    BYTE PTR [rax],al
    4810:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    4813:	00 01                	add    BYTE PTR [rcx],al
    4815:	78 10                	js     4827 <__GNU_EH_FRAME_HDR+0x137>
    4817:	01 1b                	add    DWORD PTR [rbx],ebx
    4819:	0c 07                	or     al,0x7
    481b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    4821:	00 00                	add    BYTE PTR [rax],al
    4823:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4826:	00 00                	add    BYTE PTR [rax],al
    4828:	e8 c9 ff ff 26       	call   270047f6 <_end+0x26ffe7de>
    482d:	00 00                	add    BYTE PTR [rax],al
    482f:	00 00                	add    BYTE PTR [rax],al
    4831:	44 07                	rex.R (bad)
    4833:	10 00                	adc    BYTE PTR [rax],al
    4835:	00 00                	add    BYTE PTR [rax],al
    4837:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    483a:	00 00                	add    BYTE PTR [rax],al
    483c:	34 00                	xor    al,0x0
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	e0 c7                	loopne 4809 <__GNU_EH_FRAME_HDR+0x119>
    4842:	ff                   	(bad)
    4843:	ff b0 01 00 00 00    	push   QWORD PTR [rax+0x1]
    4849:	0e                   	(bad)
    484a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    484d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    4850:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    4853:	80 00 3f             	add    BYTE PTR [rax],0x3f
    4856:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    4858:	2a 33                	sub    dh,BYTE PTR [rbx]
    485a:	24 22                	and    al,0x22
    485c:	00 00                	add    BYTE PTR [rax],al
    485e:	00 00                	add    BYTE PTR [rax],al
    4860:	14 00                	adc    al,0x0
    4862:	00 00                	add    BYTE PTR [rax],al
    4864:	5c                   	pop    rsp
    4865:	00 00                	add    BYTE PTR [rax],al
    4867:	00 68 c9             	add    BYTE PTR [rax-0x37],ch
    486a:	ff                   	(bad)
    486b:	ff 08                	dec    DWORD PTR [rax]
	...
    4875:	00 00                	add    BYTE PTR [rax],al
    4877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    487a:	00 00                	add    BYTE PTR [rax],al
    487c:	74 00                	je     487e <__GNU_EH_FRAME_HDR+0x18e>
    487e:	00 00                	add    BYTE PTR [rax],al
    4880:	60                   	(bad)
    4881:	c9                   	leave
    4882:	ff                   	(bad)
    4883:	ff 2e                	jmp    FWORD PTR [rsi]
    4885:	00 00                	add    BYTE PTR [rax],al
    4887:	00 00                	add    BYTE PTR [rax],al
    4889:	45 0e                	rex.RB (bad)
    488b:	10 83 02 68 0e 08    	adc    BYTE PTR [rbx+0x80e6802],al
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 00                	add    BYTE PTR [rax],al
    4895:	00 00                	add    BYTE PTR [rax],al
    4897:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    489a:	00 00                	add    BYTE PTR [rax],al
    489c:	94                   	xchg   esp,eax
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 60 ca             	add    BYTE PTR [rax-0x36],ah
    48a2:	ff                   	(bad)
    48a3:	ff 23                	jmp    QWORD PTR [rbx]
    48a5:	01 00                	add    DWORD PTR [rax],eax
    48a7:	00 00                	add    BYTE PTR [rax],al
    48a9:	46 0e                	rex.RX (bad)
    48ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    48b1:	8e 03                	mov    es,WORD PTR [rbx]
    48b3:	42 0e                	rex.X (bad)
    48b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    48bb:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305702 <_end+0xffffffff862ff6ea>
    48c1:	06                   	(bad)
    48c2:	41 0e                	rex.B (bad)
    48c4:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    48ca:	02 e4                	add    ah,ah
    48cc:	0a 0e                	or     cl,BYTE PTR [rsi]
    48ce:	38 44 0e 30          	cmp    BYTE PTR [rsi+rcx*1+0x30],al
    48d2:	41 0e                	rex.B (bad)
    48d4:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    48d7:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    48da:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    48dd:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    48e0:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48e3:	00 28                	add    BYTE PTR [rax],ch
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	00 e0                	add    al,ah
    48e9:	00 00                	add    BYTE PTR [rax],al
    48eb:	00 44 cb ff          	add    BYTE PTR [rbx+rcx*8-0x1],al
    48ef:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    48f5:	45 0e                	rex.RB (bad)
    48f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    48fd:	42 8e 03             	rex.X mov es,WORD PTR [rbx]
    4900:	47 8d 04 8c          	lea    r8d,[r12+r9*4]
    4904:	05 4c 83 06 02       	add    eax,0x206834c
    4909:	86 0a                	xchg   BYTE PTR [rdx],cl
    490b:	0c 07                	or     al,0x7
    490d:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4910:	28 00                	sub    BYTE PTR [rax],al
    4912:	00 00                	add    BYTE PTR [rax],al
    4914:	0c 01                	or     al,0x1
    4916:	00 00                	add    BYTE PTR [rax],al
    4918:	c8 cb ff ff          	enter  0xffcb,0xff
    491c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    491d:	02 00                	add    al,BYTE PTR [rax]
    491f:	00 00                	add    BYTE PTR [rax],al
    4921:	45 0e                	rex.RB (bad)
    4923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4929:	51                   	push   rcx
    492a:	8f 03                	pop    QWORD PTR [rbx]
    492c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    4933:	07                   	(bad)
    4934:	02 a1 0a 0c 07 08    	add    ah,BYTE PTR [rcx+0x8070c0a]
    493a:	46 0b 4c 00 00       	or     r9d,DWORD PTR [rax+r8*1+0x0]
    493f:	00 38                	add    BYTE PTR [rax],bh
    4941:	01 00                	add    DWORD PTR [rax],eax
    4943:	00 4c ce ff          	add    BYTE PTR [rsi+rcx*8-0x1],cl
    4947:	ff c9                	dec    ecx
    4949:	00 00                	add    BYTE PTR [rax],al
    494b:	00 00                	add    BYTE PTR [rax],al
    494d:	46 0e                	rex.RX (bad)
    494f:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4955:	8c 03                	mov    WORD PTR [rbx],es
    4957:	41 0e                	rex.B (bad)
    4959:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    495f:	83 05 44 0e 30 02 7c 	add    DWORD PTR [rip+0x2300e44],0x7c        # 23057aa <_end+0x22ff792>
    4966:	0a 0e                	or     cl,BYTE PTR [rsi]
    4968:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    496b:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    496e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4971:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4974:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4977:	48 0a 0e             	rex.W or cl,BYTE PTR [rsi]
    497a:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    497d:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4980:	18 45 0e             	sbb    BYTE PTR [rbp+0xe],al
    4983:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4986:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4989:	00 00                	add    BYTE PTR [rax],al
    498b:	00 28                	add    BYTE PTR [rax],ch
    498d:	00 00                	add    BYTE PTR [rax],al
    498f:	00 88 01 00 00 cc    	add    BYTE PTR [rax-0x33ffffff],cl
    4995:	ce                   	(bad)
    4996:	ff                   	(bad)
    4997:	ff 63 00             	jmp    QWORD PTR [rbx+0x0]
    499a:	00 00                	add    BYTE PTR [rax],al
    499c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    499f:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    49a6:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    49a9:	20 83 04 73 0a 0e    	and    BYTE PTR [rbx+0xe0a7304],al
    49af:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49b2:	10 44 0e 08          	adc    BYTE PTR [rsi+rcx*1+0x8],al
    49b6:	44 0b 28             	or     r13d,DWORD PTR [rax]
    49b9:	00 00                	add    BYTE PTR [rax],al
    49bb:	00 b4 01 00 00 10 cf 	add    BYTE PTR [rcx+rax*1-0x30f00000],dh
    49c2:	ff                   	(bad)
    49c3:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    49c6:	00 00                	add    BYTE PTR [rax],al
    49c8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    49cb:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    49d1:	83 03 44             	add    DWORD PTR [rbx],0x44
    49d4:	0e                   	(bad)
    49d5:	20 78 0a             	and    BYTE PTR [rax+0xa],bh
    49d8:	0e                   	(bad)
    49d9:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49dc:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    49df:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    49e2:	00 00                	add    BYTE PTR [rax],al
    49e4:	38 00                	cmp    BYTE PTR [rax],al
    49e6:	00 00                	add    BYTE PTR [rax],al
    49e8:	e0 01                	loopne 49eb <__GNU_EH_FRAME_HDR+0x2fb>
    49ea:	00 00                	add    BYTE PTR [rax],al
    49ec:	54                   	push   rsp
    49ed:	cf                   	iret
    49ee:	ff                   	(bad)
    49ef:	ff                   	(bad)
    49f0:	be 00 00 00 00       	mov    esi,0x0
    49f5:	46 0e                	rex.RX (bad)
    49f7:	10 8d 02 49 0e 18    	adc    BYTE PTR [rbp+0x180e4902],cl
    49fd:	8c 03                	mov    WORD PTR [rbx],es
    49ff:	41 0e                	rex.B (bad)
    4a01:	20 86 04 47 0e 28    	and    BYTE PTR [rsi+0x280e4704],al
    4a07:	83 05 44 0e 30 02 84 	add    DWORD PTR [rip+0x2300e44],0xffffff84        # 2305852 <_end+0x22ff83a>
    4a0e:	0a 0e                	or     cl,BYTE PTR [rsi]
    4a10:	28 44 0e 20          	sub    BYTE PTR [rsi+rcx*1+0x20],al
    4a14:	41 0e                	rex.B (bad)
    4a16:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4a19:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4a1c:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4a1f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4a22:	00 00                	add    BYTE PTR [rax],al
    4a24:	1c 02                	sbb    al,0x2
    4a26:	00 00                	add    BYTE PTR [rax],al
    4a28:	d8 cf                	fmul   st,st(7)
    4a2a:	ff                   	(bad)
    4a2b:	ff 19                	call   FWORD PTR [rcx]
    4a2d:	01 00                	add    DWORD PTR [rax],eax
    4a2f:	00 00                	add    BYTE PTR [rax],al
    4a31:	55                   	push   rbp
    4a32:	0e                   	(bad)
    4a33:	10 83 02 03 00 01    	adc    BYTE PTR [rbx+0x1000302],al
    4a39:	0e                   	(bad)
    4a3a:	08 41 c3             	or     BYTE PTR [rcx-0x3d],al
    4a3d:	00 00                	add    BYTE PTR [rax],al
    4a3f:	00 10                	add    BYTE PTR [rax],dl
    4a41:	00 00                	add    BYTE PTR [rax],al
    4a43:	00 3c 02             	add    BYTE PTR [rdx+rax*1],bh
    4a46:	00 00                	add    BYTE PTR [rax],al
    4a48:	d8 d0                	fcom   st(0)
    4a4a:	ff                   	(bad)
    4a4b:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	00 00                	add    BYTE PTR [rax],al
    4a52:	00 00                	add    BYTE PTR [rax],al
    4a54:	10 00                	adc    BYTE PTR [rax],al
    4a56:	00 00                	add    BYTE PTR [rax],al
    4a58:	50                   	push   rax
    4a59:	02 00                	add    al,BYTE PTR [rax]
    4a5b:	00 14 d1             	add    BYTE PTR [rcx+rdx*8],dl
    4a5e:	ff                   	(bad)
    4a5f:	ff 31                	push   QWORD PTR [rcx]
    4a61:	00 00                	add    BYTE PTR [rax],al
    4a63:	00 00                	add    BYTE PTR [rax],al
    4a65:	00 00                	add    BYTE PTR [rax],al
    4a67:	00 10                	add    BYTE PTR [rax],dl
    4a69:	00 00                	add    BYTE PTR [rax],al
    4a6b:	00 64 02 00          	add    BYTE PTR [rdx+rax*1+0x0],ah
    4a6f:	00 40 d1             	add    BYTE PTR [rax-0x2f],al
    4a72:	ff                   	(bad)
    4a73:	ff a4 00 00 00 00 00 	jmp    QWORD PTR [rax+rax*1+0x0]
    4a7a:	00 00                	add    BYTE PTR [rax],al
    4a7c:	10 00                	adc    BYTE PTR [rax],al
    4a7e:	00 00                	add    BYTE PTR [rax],al
    4a80:	78 02                	js     4a84 <__GNU_EH_FRAME_HDR+0x394>
    4a82:	00 00                	add    BYTE PTR [rax],al
    4a84:	dc d1                	(bad)
    4a86:	ff                   	(bad)
    4a87:	ff 6e 01             	jmp    FWORD PTR [rsi+0x1]
    4a8a:	00 00                	add    BYTE PTR [rax],al
    4a8c:	00 00                	add    BYTE PTR [rax],al
    4a8e:	00 00                	add    BYTE PTR [rax],al
    4a90:	10 00                	adc    BYTE PTR [rax],al
    4a92:	00 00                	add    BYTE PTR [rax],al
    4a94:	8c 02                	mov    WORD PTR [rdx],es
    4a96:	00 00                	add    BYTE PTR [rax],al
    4a98:	38 d3                	cmp    bl,dl
    4a9a:	ff                   	(bad)
    4a9b:	ff 76 00             	push   QWORD PTR [rsi+0x0]
    4a9e:	00 00                	add    BYTE PTR [rax],al
    4aa0:	00 00                	add    BYTE PTR [rax],al
    4aa2:	00 00                	add    BYTE PTR [rax],al
    4aa4:	10 00                	adc    BYTE PTR [rax],al
    4aa6:	00 00                	add    BYTE PTR [rax],al
    4aa8:	a0 02 00 00 a4 d3 ff 	movabs al,ds:0x4affffd3a4000002
    4aaf:	ff 4a 
    4ab1:	00 00                	add    BYTE PTR [rax],al
    4ab3:	00 00                	add    BYTE PTR [rax],al
    4ab5:	00 00                	add    BYTE PTR [rax],al
    4ab7:	00 18                	add    BYTE PTR [rax],bl
    4ab9:	00 00                	add    BYTE PTR [rax],al
    4abb:	00 b4 02 00 00 e0 d3 	add    BYTE PTR [rdx+rax*1-0x2c200000],dh
    4ac2:	ff                   	(bad)
    4ac3:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4ac9 <__GNU_EH_FRAME_HDR+0x3d9>
    4ac9:	41 0e                	rex.B (bad)
    4acb:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4ace:	08 5e 0e             	or     BYTE PTR [rsi+0xe],bl
    4ad1:	10 00                	adc    BYTE PTR [rax],al
    4ad3:	00 18                	add    BYTE PTR [rax],bl
    4ad5:	00 00                	add    BYTE PTR [rax],al
    4ad7:	00 d0                	add    al,dl
    4ad9:	02 00                	add    al,BYTE PTR [rax]
    4adb:	00 f4                	add    ah,dh
    4add:	d3 ff                	sar    edi,cl
    4adf:	ff 5d 00             	call   FWORD PTR [rbp+0x0]
    4ae2:	00 00                	add    BYTE PTR [rax],al
    4ae4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4ae7:	10 83 02 02 57 0e    	adc    BYTE PTR [rbx+0xe570202],al
    4aed:	08 00                	or     BYTE PTR [rax],al
    4aef:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
    4af3:	00 ec                	add    ah,ch
    4af5:	02 00                	add    al,BYTE PTR [rax]
    4af7:	00 38                	add    BYTE PTR [rax],bh
    4af9:	d4                   	(bad)
    4afa:	ff                   	(bad)
    4afb:	ff 73 01             	push   QWORD PTR [rbx+0x1]
    4afe:	00 00                	add    BYTE PTR [rax],al
    4b00:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4b03:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4b09:	8c 03                	mov    WORD PTR [rbx],es
    4b0b:	41 0e                	rex.B (bad)
    4b0d:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4b13:	83 05 44 0e 30 02 d5 	add    DWORD PTR [rip+0x2300e44],0xffffffd5        # 230595e <_end+0x22ff946>
    4b1a:	0a 0e                	or     cl,BYTE PTR [rsi]
    4b1c:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4b1f:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b22:	18 44 0e 10          	sbb    BYTE PTR [rsi+rcx*1+0x10],al
    4b26:	42 0e                	rex.X (bad)
    4b28:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4b2b:	02 51 0a             	add    dl,BYTE PTR [rcx+0xa]
    4b2e:	0e                   	(bad)
    4b2f:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4b32:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b35:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b38:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b3b:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b3e:	00 00                	add    BYTE PTR [rax],al
    4b40:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4b43:	00 3c 03             	add    BYTE PTR [rbx+rax*1],bh
    4b46:	00 00                	add    BYTE PTR [rax],al
    4b48:	68 d5 ff ff dc       	push   0xffffffffdcffffd5
    4b4d:	00 00                	add    BYTE PTR [rax],al
    4b4f:	00 00                	add    BYTE PTR [rax],al
    4b51:	46 0e                	rex.RX (bad)
    4b53:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4b59:	8c 03                	mov    WORD PTR [rbx],es
    4b5b:	41 0e                	rex.B (bad)
    4b5d:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4b63:	83 05 44 0e 30 02 93 	add    DWORD PTR [rip+0x2300e44],0xffffff93        # 23059ae <_end+0x22ff996>
    4b6a:	0a 0e                	or     cl,BYTE PTR [rsi]
    4b6c:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4b6f:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b72:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b75:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b78:	08 49 0b             	or     BYTE PTR [rcx+0xb],cl
    4b7b:	44 0a 0e             	or     r9b,BYTE PTR [rsi]
    4b7e:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4b81:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b84:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b87:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b8a:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b8d:	00 00                	add    BYTE PTR [rax],al
    4b8f:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
    4b93:	00 8c 03 00 00 f8 d5 	add    BYTE PTR [rbx+rax*1-0x2a080000],cl
    4b9a:	ff                   	(bad)
    4b9b:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    4b9e:	00 00                	add    BYTE PTR [rax],al
    4ba0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4ba3:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4ba9:	8c 03                	mov    WORD PTR [rbx],es
    4bab:	41 0e                	rex.B (bad)
    4bad:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4bb3:	83 05 44 0e 30 02 40 	add    DWORD PTR [rip+0x2300e44],0x40        # 23059fe <_end+0x22ff9e6>
    4bba:	0a 0e                	or     cl,BYTE PTR [rsi]
    4bbc:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4bbf:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4bc2:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4bc5:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4bc8:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
    4bcb:	44 0a 0e             	or     r9b,BYTE PTR [rsi]
    4bce:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4bd1:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4bd4:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4bd7:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4bda:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4bdd:	00 00                	add    BYTE PTR [rax],al
    4bdf:	00 18                	add    BYTE PTR [rax],bl
    4be1:	00 00                	add    BYTE PTR [rax],al
    4be3:	00 dc                	add    ah,bl
    4be5:	03 00                	add    eax,DWORD PTR [rax]
    4be7:	00 28                	add    BYTE PTR [rax],ch
    4be9:	d6                   	(bad)
    4bea:	ff                   	(bad)
    4beb:	ff                   	(bad)
    4bec:	3e 00 00             	ds add BYTE PTR [rax],al
    4bef:	00 00                	add    BYTE PTR [rax],al
    4bf1:	45 0e                	rex.RB (bad)
    4bf3:	10 83 02 59 0a 0e    	adc    BYTE PTR [rbx+0xe0a5902],al
    4bf9:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4bfc:	30 00                	xor    BYTE PTR [rax],al
    4bfe:	00 00                	add    BYTE PTR [rax],al
    4c00:	f8                   	clc
    4c01:	03 00                	add    eax,DWORD PTR [rax]
    4c03:	00 4c d6 ff          	add    BYTE PTR [rsi+rdx*8-0x1],cl
    4c07:	ff 23                	jmp    QWORD PTR [rbx]
    4c09:	02 00                	add    al,BYTE PTR [rax]
    4c0b:	00 00                	add    BYTE PTR [rax],al
    4c0d:	46 0e                	rex.RX (bad)
    4c0f:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4c16:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4c19:	20 83 04 03 ef 01    	and    BYTE PTR [rbx+0x1ef0304],al
    4c1f:	0a 0e                	or     cl,BYTE PTR [rsi]
    4c21:	18 46 0e             	sbb    BYTE PTR [rsi+0xe],al
    4c24:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c27:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4c2a:	00 00                	add    BYTE PTR [rax],al
    4c2c:	00 00                	add    BYTE PTR [rax],al
    4c2e:	00 00                	add    BYTE PTR [rax],al
    4c30:	24 00                	and    al,0x0
    4c32:	00 00                	add    BYTE PTR [rax],al
    4c34:	2c 04                	sub    al,0x4
    4c36:	00 00                	add    BYTE PTR [rax],al
    4c38:	48 d8 ff             	rex.W fdivr st,st(7)
    4c3b:	ff 08                	dec    DWORD PTR [rax]
    4c3d:	01 00                	add    DWORD PTR [rax],eax
    4c3f:	00 00                	add    BYTE PTR [rax],al
    4c41:	45 0e                	rex.RB (bad)
    4c43:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4c49:	4c 8d 03             	lea    r8,[rbx]
    4c4c:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    4c4f:	05 02 c1 0a 0c       	add    eax,0xc0ac102
    4c54:	07                   	(bad)
    4c55:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4c58:	2c 00                	sub    al,0x0
    4c5a:	00 00                	add    BYTE PTR [rax],al
    4c5c:	54                   	push   rsp
    4c5d:	04 00                	add    al,0x0
    4c5f:	00 30                	add    BYTE PTR [rax],dh
    4c61:	d9 ff                	fcos
    4c63:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4c66:	00 00                	add    BYTE PTR [rax],al
    4c68:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c6b:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4c72:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4c75:	20 83 04 77 0a 0e    	and    BYTE PTR [rbx+0xe0a7704],al
    4c7b:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4c7e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c81:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4c84:	00 00                	add    BYTE PTR [rax],al
    4c86:	00 00                	add    BYTE PTR [rax],al
    4c88:	44 00 00             	add    BYTE PTR [rax],r8b
    4c8b:	00 84 04 00 00 70 d9 	add    BYTE PTR [rsp+rax*1-0x26900000],al
    4c92:	ff                   	(bad)
    4c93:	ff 53 04             	call   QWORD PTR [rbx+0x4]
    4c96:	00 00                	add    BYTE PTR [rax],al
    4c98:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4c9b:	0a 00                	or     al,BYTE PTR [rax]
    4c9d:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4ca0:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4ca3:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4ca8:	06                   	(bad)
    4ca9:	10 0f                	adc    BYTE PTR [rdi],cl
    4cab:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4cae:	10 0e                	adc    BYTE PTR [rsi],cl
    4cb0:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4cb3:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068c2bb <_end+0x106862a3>
    4cb9:	0c 02                	or     al,0x2
    4cbb:	76 60                	jbe    4d1d <__GNU_EH_FRAME_HDR+0x62d>
    4cbd:	45 10 03             	adc    BYTE PTR [r11],r8b
    4cc0:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    4cc3:	03 c5                	add    eax,ebp
    4cc5:	03 0a                	add    ecx,DWORD PTR [rdx]
    4cc7:	0c 0a                	or     al,0xa
    4cc9:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    4ccc:	07                   	(bad)
    4ccd:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
    4cd0:	48 00 00             	rex.W add BYTE PTR [rax],al
    4cd3:	00 cc                	add    ah,cl
    4cd5:	04 00                	add    al,0x0
    4cd7:	00 88 dd ff ff 56    	add    BYTE PTR [rax+0x56ffffdd],cl
    4cdd:	04 00                	add    al,0x0
    4cdf:	00 00                	add    BYTE PTR [rax],al
    4ce1:	46 0e                	rex.RX (bad)
    4ce3:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4ce9:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4ced:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4cf0:	46 0f 03 76 68       	rex.RX lsl r14d,WORD PTR [rsi+0x68]
    4cf5:	06                   	(bad)
    4cf6:	10 0f                	adc    BYTE PTR [rdi],cl
    4cf8:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4cfb:	10 0e                	adc    BYTE PTR [rsi],cl
    4cfd:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4d00:	47 10 0c 02          	adc    BYTE PTR [r10+r8*1],r9b
    4d04:	76 60                	jbe    4d66 <__GNU_EH_FRAME_HDR+0x676>
    4d06:	10 03                	adc    BYTE PTR [rbx],al
    4d08:	02 76 58             	add    dh,BYTE PTR [rsi+0x58]
    4d0b:	03 77 03             	add    esi,DWORD PTR [rdi+0x3]
    4d0e:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4d15:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d18:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4d1b:	00 38                	add    BYTE PTR [rax],bh
    4d1d:	00 00                	add    BYTE PTR [rax],al
    4d1f:	00 18                	add    BYTE PTR [rax],bl
    4d21:	05 00 00 9c e1       	add    eax,0xe19c0000
    4d26:	ff                   	(bad)
    4d27:	ff 4e 00             	dec    DWORD PTR [rsi+0x0]
    4d2a:	00 00                	add    BYTE PTR [rax],al
    4d2c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4d2f:	10 8e 02 4c 0e 18    	adc    BYTE PTR [rsi+0x180e4c02],cl
    4d35:	8d 03                	lea    eax,[rbx]
    4d37:	45 0e                	rex.RB (bad)
    4d39:	20 8c 04 44 0e 28 86 	and    BYTE PTR [rsp+rax*1-0x79d7f1bc],cl
    4d40:	05 47 0e 30 83       	add    eax,0x83300e47
    4d45:	06                   	(bad)
    4d46:	60                   	(bad)
    4d47:	0e                   	(bad)
    4d48:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4d4b:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4d4e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4d51:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d54:	08 00                	or     BYTE PTR [rax],al
    4d56:	00 00                	add    BYTE PTR [rax],al
    4d58:	48 00 00             	rex.W add BYTE PTR [rax],al
    4d5b:	00 54 05 00          	add    BYTE PTR [rbp+rax*1+0x0],dl
    4d5f:	00 b0 e1 ff ff a9    	add    BYTE PTR [rax-0x5600001f],dh
    4d65:	07                   	(bad)
    4d66:	00 00                	add    BYTE PTR [rax],al
    4d68:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4d6b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4d71:	8e 03                	mov    es,WORD PTR [rbx]
    4d73:	42 0e                	rex.X (bad)
    4d75:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4d7b:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305bc2 <_end+0xffffffff862ffbaa>
    4d81:	06                   	(bad)
    4d82:	41 0e                	rex.B (bad)
    4d84:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    4d8a:	03 54 01 0a          	add    edx,DWORD PTR [rcx+rax*1+0xa]
    4d8e:	0e                   	(bad)
    4d8f:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4d92:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4d95:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4d98:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4d9b:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4d9e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4da1:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4da4:	2c 00                	sub    al,0x0
    4da6:	00 00                	add    BYTE PTR [rax],al
    4da8:	a0 05 00 00 14 e9 ff 	movabs al,ds:0x5bffffe914000005
    4daf:	ff 5b 
    4db1:	01 00                	add    DWORD PTR [rax],eax
    4db3:	00 00                	add    BYTE PTR [rax],al
    4db5:	49 0c 0a             	rex.WB or al,0xa
    4db8:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4dbc:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4dbf:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4dc4:	06                   	(bad)
    4dc5:	02 f0                	add    dh,al
    4dc7:	0a 0c 0a             	or     cl,BYTE PTR [rdx+rcx*1]
    4dca:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4dcd:	07                   	(bad)
    4dce:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4dd1:	00 00                	add    BYTE PTR [rax],al
    4dd3:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    4dd6:	00 00                	add    BYTE PTR [rax],al
    4dd8:	d0 05 00 00 44 ea    	rol    BYTE PTR [rip+0xffffffffea440000],1        # ffffffffea444dde <_end+0xffffffffea43edc6>
    4dde:	ff                   	(bad)
    4ddf:	ff 1c 03             	call   FWORD PTR [rbx+rax*1]
    4de2:	00 00                	add    BYTE PTR [rax],al
    4de4:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4de7:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4ded:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4df1:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4df4:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4df9:	06                   	(bad)
    4dfa:	03 8b 02 0a 0c 0d    	add    ecx,DWORD PTR [rbx+0xd0c0a02]
    4e00:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    4e03:	07                   	(bad)
    4e04:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4e07:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4e0a:	49 0a 0c 0d 00 4a 0c 	rex.WB or cl,BYTE PTR [rcx*1+0x70c4a00]
    4e11:	07 
    4e12:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4e15:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4e18:	55                   	push   rbp
    4e19:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4e20:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4e23:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
	...

0000000000004e28 <__FRAME_END__>:
    4e28:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005cd0 <__frame_dummy_init_array_entry>:
    5cd0:	f0 12 00             	lock adc al,BYTE PTR [rax]
    5cd3:	00 00                	add    BYTE PTR [rax],al
    5cd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005cd8 <__do_global_dtors_aux_fini_array_entry>:
    5cd8:	b0 12                	mov    al,0x12
    5cda:	00 00                	add    BYTE PTR [rax],al
    5cdc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005ce0 <_DYNAMIC>:
    5ce0:	01 00                	add    DWORD PTR [rax],eax
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	00 00                	add    BYTE PTR [rax],al
    5ce6:	00 00                	add    BYTE PTR [rax],al
    5ce8:	58                   	pop    rax
    5ce9:	01 00                	add    DWORD PTR [rax],eax
    5ceb:	00 00                	add    BYTE PTR [rax],al
    5ced:	00 00                	add    BYTE PTR [rax],al
    5cef:	00 01                	add    BYTE PTR [rcx],al
    5cf1:	00 00                	add    BYTE PTR [rax],al
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	00 00                	add    BYTE PTR [rax],al
    5cf7:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    5cfa:	00 00                	add    BYTE PTR [rax],al
    5cfc:	00 00                	add    BYTE PTR [rax],al
    5cfe:	00 00                	add    BYTE PTR [rax],al
    5d00:	01 00                	add    DWORD PTR [rax],eax
    5d02:	00 00                	add    BYTE PTR [rax],al
    5d04:	00 00                	add    BYTE PTR [rax],al
    5d06:	00 00                	add    BYTE PTR [rax],al
    5d08:	71 01                	jno    5d0b <_DYNAMIC+0x2b>
    5d0a:	00 00                	add    BYTE PTR [rax],al
    5d0c:	00 00                	add    BYTE PTR [rax],al
    5d0e:	00 00                	add    BYTE PTR [rax],al
    5d10:	0c 00                	or     al,0x0
    5d12:	00 00                	add    BYTE PTR [rax],al
    5d14:	00 00                	add    BYTE PTR [rax],al
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	00 10                	add    BYTE PTR [rax],dl
    5d1a:	00 00                	add    BYTE PTR [rax],al
    5d1c:	00 00                	add    BYTE PTR [rax],al
    5d1e:	00 00                	add    BYTE PTR [rax],al
    5d20:	0d 00 00 00 00       	or     eax,0x0
    5d25:	00 00                	add    BYTE PTR [rax],al
    5d27:	00 54 3b 00          	add    BYTE PTR [rbx+rdi*1+0x0],dl
    5d2b:	00 00                	add    BYTE PTR [rax],al
    5d2d:	00 00                	add    BYTE PTR [rax],al
    5d2f:	00 19                	add    BYTE PTR [rcx],bl
    5d31:	00 00                	add    BYTE PTR [rax],al
    5d33:	00 00                	add    BYTE PTR [rax],al
    5d35:	00 00                	add    BYTE PTR [rax],al
    5d37:	00 d0                	add    al,dl
    5d39:	5c                   	pop    rsp
    5d3a:	00 00                	add    BYTE PTR [rax],al
    5d3c:	00 00                	add    BYTE PTR [rax],al
    5d3e:	00 00                	add    BYTE PTR [rax],al
    5d40:	1b 00                	sbb    eax,DWORD PTR [rax]
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	00 00                	add    BYTE PTR [rax],al
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	08 00                	or     BYTE PTR [rax],al
    5d4a:	00 00                	add    BYTE PTR [rax],al
    5d4c:	00 00                	add    BYTE PTR [rax],al
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	1a 00                	sbb    al,BYTE PTR [rax]
    5d52:	00 00                	add    BYTE PTR [rax],al
    5d54:	00 00                	add    BYTE PTR [rax],al
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
    5d5c:	00 00                	add    BYTE PTR [rax],al
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	1c 00                	sbb    al,0x0
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
    5d66:	00 00                	add    BYTE PTR [rax],al
    5d68:	08 00                	or     BYTE PTR [rax],al
    5d6a:	00 00                	add    BYTE PTR [rax],al
    5d6c:	00 00                	add    BYTE PTR [rax],al
    5d6e:	00 00                	add    BYTE PTR [rax],al
    5d70:	f5                   	cmc
    5d71:	fe                   	(bad)
    5d72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5d75:	00 00                	add    BYTE PTR [rax],al
    5d77:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d85 <_DYNAMIC+0xa5>
    5d85:	00 00                	add    BYTE PTR [rax],al
    5d87:	00 c8                	add    al,cl
    5d89:	06                   	(bad)
    5d8a:	00 00                	add    BYTE PTR [rax],al
    5d8c:	00 00                	add    BYTE PTR [rax],al
    5d8e:	00 00                	add    BYTE PTR [rax],al
    5d90:	06                   	(bad)
    5d91:	00 00                	add    BYTE PTR [rax],al
    5d93:	00 00                	add    BYTE PTR [rax],al
    5d95:	00 00                	add    BYTE PTR [rax],al
    5d97:	00 c8                	add    al,cl
    5d99:	03 00                	add    eax,DWORD PTR [rax]
    5d9b:	00 00                	add    BYTE PTR [rax],al
    5d9d:	00 00                	add    BYTE PTR [rax],al
    5d9f:	00 0a                	add    BYTE PTR [rdx],cl
    5da1:	00 00                	add    BYTE PTR [rax],al
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 d8                	add    al,bl
    5da9:	01 00                	add    DWORD PTR [rax],eax
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 0b                	add    BYTE PTR [rbx],cl
    5db1:	00 00                	add    BYTE PTR [rax],al
    5db3:	00 00                	add    BYTE PTR [rax],al
    5db5:	00 00                	add    BYTE PTR [rax],al
    5db7:	00 18                	add    BYTE PTR [rax],bl
    5db9:	00 00                	add    BYTE PTR [rax],al
    5dbb:	00 00                	add    BYTE PTR [rax],al
    5dbd:	00 00                	add    BYTE PTR [rax],al
    5dbf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5dc5 <_DYNAMIC+0xe5>
	...
    5dcd:	00 00                	add    BYTE PTR [rax],al
    5dcf:	00 03                	add    BYTE PTR [rbx],al
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	00 00                	add    BYTE PTR [rax],al
    5dd5:	00 00                	add    BYTE PTR [rax],al
    5dd7:	00 f0                	add    al,dh
    5dd9:	5e                   	pop    rsi
    5dda:	00 00                	add    BYTE PTR [rax],al
    5ddc:	00 00                	add    BYTE PTR [rax],al
    5dde:	00 00                	add    BYTE PTR [rax],al
    5de0:	02 00                	add    al,BYTE PTR [rax]
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	70 02                	jo     5dec <_DYNAMIC+0x10c>
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	14 00                	adc    al,0x0
    5df2:	00 00                	add    BYTE PTR [rax],al
    5df4:	00 00                	add    BYTE PTR [rax],al
    5df6:	00 00                	add    BYTE PTR [rax],al
    5df8:	07                   	(bad)
    5df9:	00 00                	add    BYTE PTR [rax],al
    5dfb:	00 00                	add    BYTE PTR [rax],al
    5dfd:	00 00                	add    BYTE PTR [rax],al
    5dff:	00 17                	add    BYTE PTR [rdi],dl
    5e01:	00 00                	add    BYTE PTR [rax],al
    5e03:	00 00                	add    BYTE PTR [rax],al
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 60 0a             	add    BYTE PTR [rax+0xa],ah
    5e0a:	00 00                	add    BYTE PTR [rax],al
    5e0c:	00 00                	add    BYTE PTR [rax],al
    5e0e:	00 00                	add    BYTE PTR [rax],al
    5e10:	07                   	(bad)
    5e11:	00 00                	add    BYTE PTR [rax],al
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	00 00                	add    BYTE PTR [rax],al
    5e17:	00 a0 09 00 00 00    	add    BYTE PTR [rax+0x9],ah
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 08                	add    BYTE PTR [rax],cl
    5e21:	00 00                	add    BYTE PTR [rax],al
    5e23:	00 00                	add    BYTE PTR [rax],al
    5e25:	00 00                	add    BYTE PTR [rax],al
    5e27:	00 c0                	add    al,al
    5e29:	00 00                	add    BYTE PTR [rax],al
    5e2b:	00 00                	add    BYTE PTR [rax],al
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	00 09                	add    BYTE PTR [rcx],cl
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	00 00                	add    BYTE PTR [rax],al
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	00 18                	add    BYTE PTR [rax],bl
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 1e                	add    BYTE PTR [rsi],bl
    5e41:	00 00                	add    BYTE PTR [rax],al
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 08                	add    BYTE PTR [rax],cl
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	00 00                	add    BYTE PTR [rax],al
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 fb                	add    bl,bh
    5e51:	ff                   	(bad)
    5e52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	00 01                	add    BYTE PTR [rcx],al
    5e59:	00 00                	add    BYTE PTR [rax],al
    5e5b:	08 00                	or     BYTE PTR [rax],al
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 fe                	add    dh,bh
    5e61:	ff                   	(bad)
    5e62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e65:	00 00                	add    BYTE PTR [rax],al
    5e67:	00 e0                	add    al,ah
    5e69:	08 00                	or     BYTE PTR [rax],al
    5e6b:	00 00                	add    BYTE PTR [rax],al
    5e6d:	00 00                	add    BYTE PTR [rax],al
    5e6f:	00 ff                	add    bh,bh
    5e71:	ff                   	(bad)
    5e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 03                	add    BYTE PTR [rbx],al
    5e79:	00 00                	add    BYTE PTR [rax],al
    5e7b:	00 00                	add    BYTE PTR [rax],al
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 f0                	add    al,dh
    5e81:	ff                   	(bad)
    5e82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 a0 08 00 00 00    	add    BYTE PTR [rax+0x8],ah
    5e8d:	00 00                	add    BYTE PTR [rax],al
    5e8f:	00 f9                	add    cl,bh
    5e91:	ff                   	(bad)
    5e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000005ef0 <_GLOBAL_OFFSET_TABLE_>:
    5ef0:	e0 5c                	loopne 5f4e <_GLOBAL_OFFSET_TABLE_+0x5e>
	...
    5f06:	00 00                	add    BYTE PTR [rax],al
    5f08:	36 10 00             	ss adc BYTE PTR [rax],al
    5f0b:	00 00                	add    BYTE PTR [rax],al
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    5f12:	00 00                	add    BYTE PTR [rax],al
    5f14:	00 00                	add    BYTE PTR [rax],al
    5f16:	00 00                	add    BYTE PTR [rax],al
    5f18:	56                   	push   rsi
    5f19:	10 00                	adc    BYTE PTR [rax],al
    5f1b:	00 00                	add    BYTE PTR [rax],al
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    5f22:	00 00                	add    BYTE PTR [rax],al
    5f24:	00 00                	add    BYTE PTR [rax],al
    5f26:	00 00                	add    BYTE PTR [rax],al
    5f28:	76 10                	jbe    5f3a <_GLOBAL_OFFSET_TABLE_+0x4a>
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	86 10                	xchg   BYTE PTR [rax],dl
    5f32:	00 00                	add    BYTE PTR [rax],al
    5f34:	00 00                	add    BYTE PTR [rax],al
    5f36:	00 00                	add    BYTE PTR [rax],al
    5f38:	96                   	xchg   esi,eax
    5f39:	10 00                	adc    BYTE PTR [rax],al
    5f3b:	00 00                	add    BYTE PTR [rax],al
    5f3d:	00 00                	add    BYTE PTR [rax],al
    5f3f:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 c6                	add    dh,al
    5f51:	10 00                	adc    BYTE PTR [rax],al
    5f53:	00 00                	add    BYTE PTR [rax],al
    5f55:	00 00                	add    BYTE PTR [rax],al
    5f57:	00 d6                	add    dh,dl
    5f59:	10 00                	adc    BYTE PTR [rax],al
    5f5b:	00 00                	add    BYTE PTR [rax],al
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	00 e6                	add    dh,ah
    5f61:	10 00                	adc    BYTE PTR [rax],al
    5f63:	00 00                	add    BYTE PTR [rax],al
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	00 f6                	add    dh,dh
    5f69:	10 00                	adc    BYTE PTR [rax],al
    5f6b:	00 00                	add    BYTE PTR [rax],al
    5f6d:	00 00                	add    BYTE PTR [rax],al
    5f6f:	00 06                	add    BYTE PTR [rsi],al
    5f71:	11 00                	adc    DWORD PTR [rax],eax
    5f73:	00 00                	add    BYTE PTR [rax],al
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	00 16                	add    BYTE PTR [rsi],dl
    5f79:	11 00                	adc    DWORD PTR [rax],eax
    5f7b:	00 00                	add    BYTE PTR [rax],al
    5f7d:	00 00                	add    BYTE PTR [rax],al
    5f7f:	00 26                	add    BYTE PTR [rsi],ah
    5f81:	11 00                	adc    DWORD PTR [rax],eax
    5f83:	00 00                	add    BYTE PTR [rax],al
    5f85:	00 00                	add    BYTE PTR [rax],al
    5f87:	00 36                	add    BYTE PTR [rsi],dh
    5f89:	11 00                	adc    DWORD PTR [rax],eax
    5f8b:	00 00                	add    BYTE PTR [rax],al
    5f8d:	00 00                	add    BYTE PTR [rax],al
    5f8f:	00 46 11             	add    BYTE PTR [rsi+0x11],al
    5f92:	00 00                	add    BYTE PTR [rax],al
    5f94:	00 00                	add    BYTE PTR [rax],al
    5f96:	00 00                	add    BYTE PTR [rax],al
    5f98:	56                   	push   rsi
    5f99:	11 00                	adc    DWORD PTR [rax],eax
    5f9b:	00 00                	add    BYTE PTR [rax],al
    5f9d:	00 00                	add    BYTE PTR [rax],al
    5f9f:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
    5fa2:	00 00                	add    BYTE PTR [rax],al
    5fa4:	00 00                	add    BYTE PTR [rax],al
    5fa6:	00 00                	add    BYTE PTR [rax],al
    5fa8:	76 11                	jbe    5fbb <_GLOBAL_OFFSET_TABLE_+0xcb>
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	00 00                	add    BYTE PTR [rax],al
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	86 11                	xchg   BYTE PTR [rcx],dl
    5fb2:	00 00                	add    BYTE PTR [rax],al
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	96                   	xchg   esi,eax
    5fb9:	11 00                	adc    DWORD PTR [rax],eax
    5fbb:	00 00                	add    BYTE PTR [rax],al
    5fbd:	00 00                	add    BYTE PTR [rax],al
    5fbf:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
    5fc5:	00 00                	add    BYTE PTR [rax],al
    5fc7:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
    5fcd:	00 00                	add    BYTE PTR [rax],al
    5fcf:	00 c6                	add    dh,al
    5fd1:	11 00                	adc    DWORD PTR [rax],eax
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     BYTE PTR [rax+0x0],ah
    600b:	00 00                	add    BYTE PTR [rax],al
    600d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x304>
   a:	74 75                	je     81 <__abi_tag-0x2fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75621536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2ec>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	e0 11                	loopne 23 <__abi_tag-0x359>
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	2e 00 00             	cs add BYTE PTR [rax],al
	...
  2f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	ec                   	in     al,dx
  37:	08 00                	or     BYTE PTR [rax],al
  39:	00 08                	add    BYTE PTR [rax],cl
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	13 00                	adc    eax,DWORD PTR [rax]
  43:	00 00                	add    BYTE PTR [rax],al
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 fe                	add    dh,bh
  49:	06                   	(bad)
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	ce                   	(bad)
  67:	20 00                	and    BYTE PTR [rax],al
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 00                	add    BYTE PTR [rax],al
  71:	1a 00                	sbb    al,BYTE PTR [rax]
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
	...
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	0f 30                	wrmsr
  98:	00 00                	add    BYTE PTR [rax],al
  9a:	08 00                	or     BYTE PTR [rax],al
  9c:	00 00                	add    BYTE PTR [rax],al
  9e:	00 00                	add    BYTE PTR [rax],al
  a0:	a0 1e 00 00 00 00 00 	movabs al,ds:0xd30000000000001e
  a7:	00 d3 
  a9:	05 00 00 00 00       	add    eax,0x0
	...
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	2c 00                	sub    al,0x0
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	05 47 00 00 08       	add    eax,0x8000047
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 80 24 00 00 00    	add    BYTE PTR [rax+0x24],al
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
	...
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	2c 00                	sub    al,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	af                   	scas   eax,DWORD PTR es:[rdi]
  f7:	55                   	push   rbp
  f8:	00 00                	add    BYTE PTR [rax],al
  fa:	08 00                	or     BYTE PTR [rax],al
  fc:	00 00                	add    BYTE PTR [rax],al
  fe:	00 00                	add    BYTE PTR [rax],al
 100:	00 26                	add    BYTE PTR [rsi],ah
 102:	00 00                	add    BYTE PTR [rax],al
 104:	00 00                	add    BYTE PTR [rax],al
 106:	00 00                	add    BYTE PTR [rax],al
 108:	3c 15                	cmp    al,0x15
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	e8 08 00 00 05       	call   500000d <_end+0x4ff9ff5>
       5:	00 01                	add    BYTE PTR [rcx],al
       7:	08 00                	or     BYTE PTR [rax],al
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 14 14             	add    BYTE PTR [rsp+rdx*1],dl
       e:	01 00                	add    DWORD PTR [rax],eax
      10:	00 21                	add    BYTE PTR [rcx],ah
      12:	14 00                	adc    al,0x0
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	1c 00                	sbb    al,0x0
	...
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	08 d6                	or     dh,dl
      2c:	0a 00                	or     al,BYTE PTR [rax]
      2e:	00 03                	add    BYTE PTR [rbx],al
      30:	d6                   	(bad)
      31:	17                   	(bad)
      32:	36 00 00             	ss add BYTE PTR [rax],al
      35:	00 03                	add    BYTE PTR [rbx],al
      37:	08 07                	or     BYTE PTR [rdi],al
      39:	f3 00 00             	repz add BYTE PTR [rax],al
      3c:	00 03                	add    BYTE PTR [rbx],al
      3e:	04 07                	add    al,0x7
      40:	f8                   	clc
      41:	00 00                	add    BYTE PTR [rax],al
      43:	00 15 08 03 01 08    	add    BYTE PTR [rip+0x8010308],dl        # 8010351 <_end+0x800a339>
      49:	ff 01                	inc    DWORD PTR [rcx]
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	03 02                	add    eax,DWORD PTR [rdx]
      4f:	07                   	(bad)
      50:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
      53:	00 03                	add    BYTE PTR [rbx],al
      55:	01 06                	add    DWORD PTR [rsi],eax
      57:	01 02                	add    DWORD PTR [rdx],eax
      59:	00 00                	add    BYTE PTR [rax],al
      5b:	03 02                	add    eax,DWORD PTR [rdx]
      5d:	05 5b 00 00 00       	add    eax,0x5b
      62:	16                   	(bad)
      63:	04 05                	add    al,0x5
      65:	69 6e 74 00 09 62 00 	imul   ebp,DWORD PTR [rsi+0x74],0x620900
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	08 a9 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],ch
      74:	2a 16                	sub    dl,BYTE PTR [rsi]
      76:	3d 00 00 00 03       	cmp    eax,0x3000000
      7b:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 166 <__abi_tag-0x216>
      81:	05 86 00 00 00       	add    eax,0x86
      86:	03 01                	add    eax,DWORD PTR [rcx]
      88:	06                   	(bad)
      89:	08 02                	or     BYTE PTR [rdx],al
      8b:	00 00                	add    BYTE PTR [rax],al
      8d:	09 86 00 00 00 05    	or     DWORD PTR [rsi+0x5000000],eax
      93:	8d 00                	lea    eax,[rax]
      95:	00 00                	add    BYTE PTR [rax],al
      97:	03 08                	add    ecx,DWORD PTR [rax]
      99:	05 e0 00 00 00       	add    eax,0xe0
      9e:	03 10                	add    edx,DWORD PTR [rax]
      a0:	04 f3                	add    al,0xf3
      a2:	01 00                	add    DWORD PTR [rax],eax
      a4:	00 03                	add    BYTE PTR [rbx],al
      a6:	08 07                	or     BYTE PTR [rdi],al
      a8:	ee                   	out    dx,al
      a9:	00 00                	add    BYTE PTR [rax],al
      ab:	00 03                	add    BYTE PTR [rbx],al
      ad:	04 04                	add    al,0x4
      af:	d3 00                	rol    DWORD PTR [rax],cl
      b1:	00 00                	add    BYTE PTR [rax],al
      b3:	0c 08                	or     al,0x8
      b5:	3c dd                	cmp    al,0xdd
      b7:	02 00                	add    al,BYTE PTR [rax]
      b9:	00 d6                	add    dh,dl
      bb:	00 00                	add    BYTE PTR [rax],al
      bd:	00 0d 49 02 00 00    	add    BYTE PTR [rip+0x249],cl        # 30c <__abi_tag-0x70>
      c3:	3d 09 62 00 00       	cmp    eax,0x6209
      c8:	00 0e                	add    BYTE PTR [rsi],cl
      ca:	72 65                	jb     131 <__abi_tag-0x24b>
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	00 3e                	add    BYTE PTR [rsi],bh
      cf:	09 62 00             	or     DWORD PTR [rdx+0x0],esp
      d2:	00 00                	add    BYTE PTR [rax],al
      d4:	04 00                	add    al,0x0
      d6:	08 de                	or     dh,bl
      d8:	02 00                	add    al,BYTE PTR [rax]
      da:	00 02                	add    BYTE PTR [rdx],al
      dc:	3f                   	(bad)
      dd:	05 b3 00 00 00       	add    eax,0xb3
      e2:	0c 10                	or     al,0x10
      e4:	44 09 00             	or     DWORD PTR [rax],r8d
      e7:	00 00                	add    BYTE PTR [rax],al
      e9:	05 01 00 00 0d       	add    eax,0xd000001
      ee:	49 02 00             	rex.WB add al,BYTE PTR [r8]
      f1:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
      f4:	7a 00                	jp     f6 <__abi_tag-0x286>
      f6:	00 00                	add    BYTE PTR [rax],al
      f8:	0e                   	(bad)
      f9:	72 65                	jb     160 <__abi_tag-0x21c>
      fb:	6d                   	ins    DWORD PTR es:[rdi],dx
      fc:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
      ff:	7a 00                	jp     101 <__abi_tag-0x27b>
     101:	00 00                	add    BYTE PTR [rax],al
     103:	08 00                	or     BYTE PTR [rax],al
     105:	08 0a                	or     BYTE PTR [rdx],cl
     107:	00 00                	add    BYTE PTR [rax],al
     109:	00 02                	add    BYTE PTR [rdx],al
     10b:	47 05 e2 00 00 00    	rex.RXB add eax,0xe2
     111:	0c 10                	or     al,0x10
     113:	4e b4 00             	rex.WRX mov spl,0x0
     116:	00 00                	add    BYTE PTR [rax],al
     118:	34 01                	xor    al,0x1
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	0d 49 02 00 00       	or     eax,0x249
     121:	4f 13 97 00 00 00 0e 	rex.WRXB adc r10,QWORD PTR [r15+0xe000000]
     128:	72 65                	jb     18f <__abi_tag-0x1ed>
     12a:	6d                   	ins    DWORD PTR es:[rdi],dx
     12b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     12e:	97                   	xchg   edi,eax
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 08                	add    BYTE PTR [rax],cl
     133:	00 08                	add    BYTE PTR [rax],cl
     135:	b5 00                	mov    ch,0x0
     137:	00 00                	add    BYTE PTR [rax],al
     139:	02 51 05             	add    dl,BYTE PTR [rcx+0x5]
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	00 00                	add    BYTE PTR [rax],al
     140:	17                   	(bad)
     141:	cf                   	iret
     142:	02 00                	add    al,BYTE PTR [rax]
     144:	00 02                	add    BYTE PTR [rdx],al
     146:	b4 03                	mov    ah,0x3
     148:	0f 4d 01             	cmovge eax,DWORD PTR [rcx]
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	05 52 01 00 00       	add    eax,0x152
     152:	18 62 00             	sbb    BYTE PTR [rdx+0x0],ah
     155:	00 00                	add    BYTE PTR [rax],al
     157:	66 01 00             	add    WORD PTR [rax],ax
     15a:	00 01                	add    BYTE PTR [rcx],al
     15c:	66 01 00             	add    WORD PTR [rax],ax
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	66 01 00             	add    WORD PTR [rax],ax
     164:	00 00                	add    BYTE PTR [rax],al
     166:	05 6b 01 00 00       	add    eax,0x16b
     16b:	19 1a                	sbb    DWORD PTR [rdx],ebx
     16d:	73 74                	jae    1e3 <__abi_tag-0x199>
     16f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
     172:	32 01                	xor    al,BYTE PTR [rcx]
     174:	0b 3c 03             	or     edi,DWORD PTR [rbx+rax*1]
     177:	00 00                	add    BYTE PTR [rax],al
     179:	02 05 83 0b d6 00    	add    al,BYTE PTR [rip+0xd60b83]        # d60d02 <_end+0xd5acea>
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	02 05 84 0b 05 01    	add    al,BYTE PTR [rip+0x1050b84]        # 1050d0b <_end+0x104acf3>
     187:	00 00                	add    BYTE PTR [rax],al
     189:	02 05 8a 0b 3c 03    	add    al,BYTE PTR [rip+0x33c0b8a]        # 33c0d19 <_end+0x33bad01>
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	02 05 8d 0b 58 03    	add    al,BYTE PTR [rip+0x3580b8d]        # 3580d24 <_end+0x357ad0c>
     197:	00 00                	add    BYTE PTR [rax],al
     199:	02 05 90 0b 73 03    	add    al,BYTE PTR [rip+0x3730b90]        # 3730d2f <_end+0x372ad17>
     19f:	00 00                	add    BYTE PTR [rax],al
     1a1:	02 05 91 0b 90 03    	add    al,BYTE PTR [rip+0x3900b91]        # 3900d38 <_end+0x38fad20>
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	02 05 92 0b b0 03    	add    al,BYTE PTR [rip+0x3b00b92]        # 3b00d41 <_end+0x3afad29>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	02 05 93 0b c6 03    	add    al,BYTE PTR [rip+0x3c60b93]        # 3c60d4a <_end+0x3c5ad32>
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	02 05 95 0b f0 03    	add    al,BYTE PTR [rip+0x3f00b95]        # 3f00d54 <_end+0x3efad3c>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	02 05 98 0b 0c 04    	add    al,BYTE PTR [rip+0x40c0b98]        # 40c0d5f <_end+0x40bad47>
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	02 05 9a 0b 22 04    	add    al,BYTE PTR [rip+0x4220b9a]        # 4220d69 <_end+0x421ad51>
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	02 05 9d 0b 3d 04    	add    al,BYTE PTR [rip+0x43d0b9d]        # 43d0d74 <_end+0x43cad5c>
     1d7:	00 00                	add    BYTE PTR [rax],al
     1d9:	02 05 9e 0b 58 04    	add    al,BYTE PTR [rip+0x4580b9e]        # 4580d7d <_end+0x457ad65>
     1df:	00 00                	add    BYTE PTR [rax],al
     1e1:	02 05 9f 0b 89 04    	add    al,BYTE PTR [rip+0x4890b9f]        # 4890d86 <_end+0x488ad6e>
     1e7:	00 00                	add    BYTE PTR [rax],al
     1e9:	02 05 a1 0b a9 04    	add    al,BYTE PTR [rip+0x4a90ba1]        # 4a90d90 <_end+0x4a8ad78>
     1ef:	00 00                	add    BYTE PTR [rax],al
     1f1:	02 05 a4 0b c9 04    	add    al,BYTE PTR [rip+0x4c90ba4]        # 4c90d9b <_end+0x4c8ad83>
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	02 05 a7 0b dc 04    	add    al,BYTE PTR [rip+0x4dc0ba7]        # 4dc0da6 <_end+0x4dbad8e>
     1ff:	00 00                	add    BYTE PTR [rax],al
     201:	02 05 a9 0b e9 04    	add    al,BYTE PTR [rip+0x4e90ba9]        # 4e90db0 <_end+0x4e8ad98>
     207:	00 00                	add    BYTE PTR [rax],al
     209:	02 05 aa 0b fa 04    	add    al,BYTE PTR [rip+0x4fa0baa]        # 4fa0db9 <_end+0x4f9ada1>
     20f:	00 00                	add    BYTE PTR [rax],al
     211:	02 05 ab 0b 1a 05    	add    al,BYTE PTR [rip+0x51a0bab]        # 51a0dc2 <_end+0x519adaa>
     217:	00 00                	add    BYTE PTR [rax],al
     219:	02 05 ac 0b 3d 05    	add    al,BYTE PTR [rip+0x53d0bac]        # 53d0dcb <_end+0x53cadb3>
     21f:	00 00                	add    BYTE PTR [rax],al
     221:	02 05 ad 0b 60 05    	add    al,BYTE PTR [rip+0x5600bad]        # 5600dd4 <_end+0x55fadbc>
     227:	00 00                	add    BYTE PTR [rax],al
     229:	02 05 af 0b 76 05    	add    al,BYTE PTR [rip+0x5760baf]        # 5760dde <_end+0x575adc6>
     22f:	00 00                	add    BYTE PTR [rax],al
     231:	02 05 b0 0b 9b 05    	add    al,BYTE PTR [rip+0x59b0bb0]        # 59b0de7 <_end+0x59aadcf>
     237:	00 00                	add    BYTE PTR [rax],al
     239:	02 05 f4 16 34 01    	add    al,BYTE PTR [rip+0x13416f4]        # 1341933 <_end+0x133b91b>
     23f:	00 00                	add    BYTE PTR [rax],al
     241:	02 05 f9 16 fb 05    	add    al,BYTE PTR [rip+0x5fb16f9]        # 5fb1940 <_end+0x5fab928>
     247:	00 00                	add    BYTE PTR [rax],al
     249:	02 05 fa 16 15 06    	add    al,BYTE PTR [rip+0x61516fa]        # 6151949 <_end+0x614b931>
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	02 05 fc 16 30 06    	add    al,BYTE PTR [rip+0x63016fc]        # 6301953 <_end+0x62fb93b>
     257:	00 00                	add    BYTE PTR [rax],al
     259:	02 05 fd 16 8c 06    	add    al,BYTE PTR [rip+0x68c16fd]        # 68c195c <_end+0x68bb944>
     25f:	00 00                	add    BYTE PTR [rax],al
     261:	02 05 fe 16 46 06    	add    al,BYTE PTR [rip+0x64616fe]        # 6461965 <_end+0x645b94d>
     267:	00 00                	add    BYTE PTR [rax],al
     269:	02 05 ff 16 69 06    	add    al,BYTE PTR [rip+0x66916ff]        # 669196e <_end+0x668b956>
     26f:	00 00                	add    BYTE PTR [rax],al
     271:	1b 05 00 01 16 a7    	sbb    eax,DWORD PTR [rip+0xffffffffa7160100]        # ffffffffa7160377 <_end+0xffffffffa715a35f>
     277:	06                   	(bad)
     278:	00 00                	add    BYTE PTR [rax],al
     27a:	07                   	(bad)
     27b:	61                   	(bad)
     27c:	62 73 00 89 0f       	(bad)
     281:	03 00                	add    eax,DWORD PTR [rax]
     283:	00 ea                	add    dl,ch
     285:	06                   	(bad)
     286:	00 00                	add    BYTE PTR [rax],al
     288:	92                   	xchg   edx,eax
     289:	02 00                	add    al,BYTE PTR [rax]
     28b:	00 01                	add    BYTE PTR [rcx],al
     28d:	ea                   	(bad)
     28e:	06                   	(bad)
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	00 07                	add    BYTE PTR [rdi],al
     293:	61                   	(bad)
     294:	62 73 00 55 1b       	(bad)
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	00 f9                	add    cl,bh
     29d:	06                   	(bad)
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	aa                   	stos   BYTE PTR es:[rdi],al
     2a1:	02 00                	add    al,BYTE PTR [rax]
     2a3:	00 01                	add    BYTE PTR [rcx],al
     2a5:	f9                   	stc
     2a6:	06                   	(bad)
     2a7:	00 00                	add    BYTE PTR [rax],al
     2a9:	00 07                	add    BYTE PTR [rdi],al
     2ab:	61                   	(bad)
     2ac:	62 73 00 4f fb       	(bad)
     2b1:	02 00                	add    al,BYTE PTR [rax]
     2b3:	00 9e 00 00 00 c2    	add    BYTE PTR [rsi-0x3e000000],bl
     2b9:	02 00                	add    al,BYTE PTR [rax]
     2bb:	00 01                	add    BYTE PTR [rcx],al
     2bd:	9e                   	sahf
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	07                   	(bad)
     2c3:	61                   	(bad)
     2c4:	62 73 00 4b 05       	(bad)
     2c9:	03 00                	add    eax,DWORD PTR [rax]
     2cb:	00 ac 00 00 00 da 02 	add    BYTE PTR [rax+rax*1+0x2da0000],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	01 ac 00 00 00 00 07 	add    DWORD PTR [rax+rax*1+0x7000000],ebp
     2db:	61                   	(bad)
     2dc:	62 73 00 47 f1       	(bad)
     2e1:	02 00                	add    al,BYTE PTR [rax]
     2e3:	00 89 03 00 00 f2    	add    BYTE PTR [rcx-0xdfffffd],cl
     2e9:	02 00                	add    al,BYTE PTR [rax]
     2eb:	00 01                	add    BYTE PTR [rcx],al
     2ed:	89 03                	mov    DWORD PTR [rbx],eax
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	00 07                	add    BYTE PTR [rdi],al
     2f3:	61                   	(bad)
     2f4:	62 73 00 3d 41       	(bad)
     2f9:	00 00                	add    BYTE PTR [rax],al
     2fb:	00 97 00 00 00 0a    	add    BYTE PTR [rdi+0xa000000],dl
     301:	03 00                	add    eax,DWORD PTR [rax]
     303:	00 01                	add    BYTE PTR [rcx],al
     305:	97                   	xchg   edi,eax
     306:	00 00                	add    BYTE PTR [rax],al
     308:	00 00                	add    BYTE PTR [rax],al
     30a:	07                   	(bad)
     30b:	61                   	(bad)
     30c:	62 73 00 38 11       	(bad)
     311:	00 00                	add    BYTE PTR [rax],al
     313:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     316:	00 00                	add    BYTE PTR [rax],al
     318:	22 03                	and    al,BYTE PTR [rbx]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 10                	add    BYTE PTR [rax],dl
     323:	64 69 76 00 b5 74 00 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b5
     32a:	00 
     32b:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000332 <_end+0xffa31a>
     331:	7a 00                	jp     333 <__abi_tag-0x49>
     333:	00 00                	add    BYTE PTR [rax],al
     335:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     338:	00 00                	add    BYTE PTR [rax],al
     33a:	00 00                	add    BYTE PTR [rax],al
     33c:	04 6d                	add    al,0x6d
     33e:	00 00                	add    BYTE PTR [rax],al
     340:	00 de                	add    dh,bl
     342:	02 0c 62             	add    cl,BYTE PTR [rdx+riz*2]
     345:	00 00                	add    BYTE PTR [rax],al
     347:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
     34a:	00 00                	add    BYTE PTR [rax],al
     34c:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 05 57 03 00 00    	add    BYTE PTR [rip+0x357],al        # 6ae <__abi_tag+0x332>
     357:	1c 1d                	sbb    al,0x1d
     359:	33 00                	xor    eax,DWORD PTR [rax]
     35b:	00 00                	add    BYTE PTR [rax],al
     35d:	02 e3                	add    ah,bl
     35f:	02 12                	add    dl,BYTE PTR [rdx]
     361:	33 00                	xor    eax,DWORD PTR [rax]
     363:	00 00                	add    BYTE PTR [rax],al
     365:	62                   	(bad)
     366:	00 00                	add    BYTE PTR [rax],al
     368:	00 73 03             	add    BYTE PTR [rbx+0x3],dh
     36b:	00 00                	add    BYTE PTR [rax],al
     36d:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	00 06                	add    BYTE PTR [rsi],al
     374:	cd 01                	int    0x1
     376:	00 00                	add    BYTE PTR [rax],al
     378:	07                   	(bad)
     379:	19 01                	sbb    DWORD PTR [rcx],eax
     37b:	89 03                	mov    DWORD PTR [rbx],eax
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	89 03                	mov    DWORD PTR [rbx],eax
     381:	00 00                	add    BYTE PTR [rax],al
     383:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     389:	03 08                	add    ecx,DWORD PTR [rax]
     38b:	04 f8                	add    al,0xf8
     38d:	01 00                	add    DWORD PTR [rax],eax
     38f:	00 1e                	add    BYTE PTR [rsi],bl
     391:	d2 01                	rol    BYTE PTR [rcx],cl
     393:	00 00                	add    BYTE PTR [rax],al
     395:	02 e1                	add    ah,cl
     397:	01 01                	add    DWORD PTR [rcx],eax
     399:	62                   	(bad)
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	00 03                	add    BYTE PTR [rbx],al
     39e:	b0 03                	mov    al,0x3
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	1f                   	(bad)
     3a3:	e4 02                	in     al,0x2
     3a5:	00 00                	add    BYTE PTR [rax],al
     3a7:	02 e1                	add    ah,cl
     3a9:	01 01                	add    DWORD PTR [rcx],eax
     3ab:	92                   	xchg   edx,eax
     3ac:	00 00                	add    BYTE PTR [rax],al
     3ae:	00 00                	add    BYTE PTR [rax],al
     3b0:	04 dc                	add    al,0xdc
     3b2:	01 00                	add    DWORD PTR [rax],eax
     3b4:	00 e6                	add    dh,ah
     3b6:	01 01                	add    DWORD PTR [rcx],eax
     3b8:	7a 00                	jp     3ba <__abi_tag+0x3e>
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     3bf:	00 01                	add    BYTE PTR [rcx],al
     3c1:	92                   	xchg   edx,eax
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	00 00                	add    BYTE PTR [rax],al
     3c6:	06                   	(bad)
     3c7:	65 00 00             	add    BYTE PTR gs:[rax],al
     3ca:	00 08                	add    BYTE PTR [rax],cl
     3cc:	14 01                	adc    al,0x1
     3ce:	44 00 00             	add    BYTE PTR [rax],r8b
     3d1:	00 f0                	add    al,dh
     3d3:	03 00                	add    eax,DWORD PTR [rax]
     3d5:	00 01                	add    BYTE PTR [rcx],al
     3d7:	66 01 00             	add    WORD PTR [rax],ax
     3da:	00 01                	add    BYTE PTR [rcx],al
     3dc:	66 01 00             	add    WORD PTR [rax],ax
     3df:	00 01                	add    BYTE PTR [rcx],al
     3e1:	2a 00                	sub    al,BYTE PTR [rax]
     3e3:	00 00                	add    BYTE PTR [rax],al
     3e5:	01 2a                	add    DWORD PTR [rdx],ebp
     3e7:	00 00                	add    BYTE PTR [rax],al
     3e9:	00 01                	add    BYTE PTR [rcx],al
     3eb:	40 01 00             	rex add DWORD PTR [rax],eax
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	20 64 69 76          	and    BYTE PTR [rcx+rbp*2+0x76],ah
     3f4:	00 02                	add    BYTE PTR [rdx],al
     3f6:	e0 03                	loopne 3fb <__abi_tag+0x7f>
     3f8:	0e                   	(bad)
     3f9:	d6                   	(bad)
     3fa:	00 00                	add    BYTE PTR [rax],al
     3fc:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     404:	00 00                	add    BYTE PTR [rax],al
     406:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     409:	00 00                	add    BYTE PTR [rax],al
     40b:	00 04 bd 00 00 00 05 	add    BYTE PTR [rdi*4+0x5000000],al
     412:	03 0e                	add    ecx,DWORD PTR [rsi]
     414:	81 00 00 00 22 04    	add    DWORD PTR [rax],0x4220000
     41a:	00 00                	add    BYTE PTR [rax],al
     41c:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     422:	04 c3                	add    al,0xc3
     424:	02 00                	add    al,BYTE PTR [rax]
     426:	00 e2                	add    dl,ah
     428:	03 0f                	add    ecx,DWORD PTR [rdi]
     42a:	05 01 00 00 3d       	add    eax,0x3d000001
     42f:	04 00                	add    al,0x0
     431:	00 01                	add    BYTE PTR [rcx],al
     433:	7a 00                	jp     435 <__abi_tag+0xb9>
     435:	00 00                	add    BYTE PTR [rax],al
     437:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
     43f:	02 00                	add    al,BYTE PTR [rax]
     441:	00 26                	add    BYTE PTR [rsi],ah
     443:	04 0c                	add    al,0xc
     445:	62                   	(bad)
     446:	00 00                	add    BYTE PTR [rax],al
     448:	00 58 04             	add    BYTE PTR [rax+0x4],bl
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     453:	2a 00                	sub    al,BYTE PTR [rax]
     455:	00 00                	add    BYTE PTR [rax],al
     457:	00 06                	add    BYTE PTR [rsi],al
     459:	39 02                	cmp    DWORD PTR [rdx],eax
     45b:	00 00                	add    BYTE PTR [rax],al
     45d:	09 75 01             	or     DWORD PTR [rbp+0x1],esi
     460:	2a 00                	sub    al,BYTE PTR [rax]
     462:	00 00                	add    BYTE PTR [rax],al
     464:	78 04                	js     46a <__abi_tag+0xee>
     466:	00 00                	add    BYTE PTR [rax],al
     468:	01 78 04             	add    DWORD PTR [rax+0x4],edi
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     473:	2a 00                	sub    al,BYTE PTR [rax]
     475:	00 00                	add    BYTE PTR [rax],al
     477:	00 05 7d 04 00 00    	add    BYTE PTR [rip+0x47d],al        # 8fa <__abi_tag+0x57e>
     47d:	03 04 05 61 02 00 00 	add    eax,DWORD PTR [rax*1+0x261]
     484:	09 7d 04             	or     DWORD PTR [rbp+0x4],edi
     487:	00 00                	add    BYTE PTR [rax],al
     489:	04 d9                	add    al,0xd9
     48b:	00 00                	add    BYTE PTR [rax],al
     48d:	00 29                	add    BYTE PTR [rcx],ch
     48f:	04 0c                	add    al,0xc
     491:	62                   	(bad)
     492:	00 00                	add    BYTE PTR [rax],al
     494:	00 a9 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],ch
     49a:	78 04                	js     4a0 <__abi_tag+0x124>
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     4a4:	2a 00                	sub    al,BYTE PTR [rax]
     4a6:	00 00                	add    BYTE PTR [rax],al
     4a8:	00 11                	add    BYTE PTR [rcx],dl
     4aa:	25 00 00 00 ca       	and    eax,0xca000000
     4af:	03 c9                	add    ecx,ecx
     4b1:	04 00                	add    al,0x0
     4b3:	00 01                	add    BYTE PTR [rcx],al
     4b5:	44 00 00             	add    BYTE PTR [rax],r8b
     4b8:	00 01                	add    BYTE PTR [rcx],al
     4ba:	2a 00                	sub    al,BYTE PTR [rax]
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	01 2a                	add    DWORD PTR [rdx],ebp
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	00 01                	add    BYTE PTR [rcx],al
     4c4:	40 01 00             	rex add DWORD PTR [rax],eax
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	21 36                	and    DWORD PTR [rsi],esi
     4cb:	00 00                	add    BYTE PTR [rax],al
     4cd:	00 02                	add    BYTE PTR [rdx],al
     4cf:	fa                   	cli
     4d0:	02 0d dc 04 00 00    	add    cl,BYTE PTR [rip+0x4dc]        # 9b2 <__abi_tag+0x636>
     4d6:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     4d9:	00 00                	add    BYTE PTR [rax],al
     4db:	00 22                	add    BYTE PTR [rdx],ah
     4dd:	ec                   	in     al,dx
     4de:	02 00                	add    al,BYTE PTR [rax]
     4e0:	00 02                	add    BYTE PTR [rdx],al
     4e2:	3d 02 0c 62 00       	cmp    eax,0x620c02
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	11 eb                	adc    ebx,ebp
     4eb:	02 00                	add    al,BYTE PTR [rax]
     4ed:	00 3f                	add    BYTE PTR [rdi],bh
     4ef:	02 fa                	add    bh,dl
     4f1:	04 00                	add    al,0x0
     4f3:	00 01                	add    BYTE PTR [rcx],al
     4f5:	3d 00 00 00 00       	cmp    eax,0x0
     4fa:	06                   	(bad)
     4fb:	05 01 00 00 02       	add    eax,0x2000001
     500:	76 0f                	jbe    511 <__abi_tag+0x195>
     502:	89 03                	mov    DWORD PTR [rbx],eax
     504:	00 00                	add    BYTE PTR [rax],al
     506:	15 05 00 00 01       	adc    eax,0x1000005
     50b:	92                   	xchg   edx,eax
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 01                	add    BYTE PTR [rcx],al
     510:	15 05 00 00 00       	adc    eax,0x5
     515:	05 81 00 00 00       	add    eax,0x81
     51a:	0a 54 00 00          	or     dl,BYTE PTR [rax+rax*1+0x0]
     51e:	00 d7                	add    bh,dl
     520:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     523:	00 00                	add    BYTE PTR [rax],al
     525:	7a 00                	jp     527 <__abi_tag+0x1ab>
     527:	00 00                	add    BYTE PTR [rax],al
     529:	3d 05 00 00 01       	cmp    eax,0x1000005
     52e:	92                   	xchg   edx,eax
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	00 01                	add    BYTE PTR [rcx],al
     533:	15 05 00 00 01       	adc    eax,0x1000005
     538:	62                   	(bad)
     539:	00 00                	add    BYTE PTR [rax],al
     53b:	00 00                	add    BYTE PTR [rax],al
     53d:	0a 25 02 00 00 db    	or     ah,BYTE PTR [rip+0xffffffffdb000002]        # ffffffffdb000545 <_end+0xffffffffdaffa52d>
     543:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
     546:	00 00                	add    BYTE PTR [rax],al
     548:	36 00 00             	ss add BYTE PTR [rax],al
     54b:	00 60 05             	add    BYTE PTR [rax+0x5],ah
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     556:	15 05 00 00 01       	adc    eax,0x1000005
     55b:	62                   	(bad)
     55c:	00 00                	add    BYTE PTR [rax],al
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	04 db                	add    al,0xdb
     562:	25 00 00 9b 03       	and    eax,0x39b0000
     567:	0c 62                	or     al,0x62
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     576:	06                   	(bad)
     577:	e1 01                	loope  57a <__abi_tag+0x1fe>
     579:	00 00                	add    BYTE PTR [rax],al
     57b:	09 8f 01 2a 00 00    	or     DWORD PTR [rdi+0x2a01],ecx
     581:	00 96 05 00 00 01    	add    BYTE PTR [rsi+0x1000005],dl
     587:	81 00 00 00 01 96    	add    DWORD PTR [rax],0x96010000
     58d:	05 00 00 01 2a       	add    eax,0x2a010000
     592:	00 00                	add    BYTE PTR [rax],al
     594:	00 00                	add    BYTE PTR [rax],al
     596:	05 84 04 00 00       	add    eax,0x484
     59b:	06                   	(bad)
     59c:	42 02 00             	rex.X add al,BYTE PTR [rax]
     59f:	00 09                	add    BYTE PTR [rcx],cl
     5a1:	4f 01 62 00          	rex.WRXB add QWORD PTR [r10+0x0],r12
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	b6 05                	mov    dh,0x5
     5a9:	00 00                	add    BYTE PTR [rax],al
     5ab:	01 81 00 00 00 01    	add    DWORD PTR [rcx+0x1000000],eax
     5b1:	7d 04                	jge    5b7 <__abi_tag+0x23b>
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	00 23                	add    BYTE PTR [rbx],ah
     5b7:	12 02                	adc    al,BYTE PTR [rdx]
     5b9:	00 00                	add    BYTE PTR [rax],al
     5bb:	0e                   	(bad)
     5bc:	57                   	push   rdi
     5bd:	01 0b                	add    DWORD PTR [rbx],ecx
     5bf:	15 06 00 00 02       	adc    eax,0x2000006
     5c4:	05 cc 0b 34 01       	add    eax,0x1340bcc
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	02 05 dc 0b 15 06    	add    al,BYTE PTR [rip+0x6150bdc]        # 61511ad <_end+0x614b195>
     5d1:	00 00                	add    BYTE PTR [rax],al
     5d3:	02 05 e7 0b 30 06    	add    al,BYTE PTR [rip+0x6300be7]        # 63011c0 <_end+0x62fb1a8>
     5d9:	00 00                	add    BYTE PTR [rax],al
     5db:	02 05 e8 0b 46 06    	add    al,BYTE PTR [rip+0x6460be8]        # 64611c9 <_end+0x645b1b1>
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	02 05 e9 0b 69 06    	add    al,BYTE PTR [rip+0x6690be9]        # 66911d2 <_end+0x668b1ba>
     5e9:	00 00                	add    BYTE PTR [rax],al
     5eb:	02 05 eb 0b 8c 06    	add    al,BYTE PTR [rip+0x68c0beb]        # 68c11dc <_end+0x68bb1c4>
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	02 05 ec 0b a7 06    	add    al,BYTE PTR [rip+0x6a70bec]        # 6a711e5 <_end+0x6a6b1cd>
     5f9:	00 00                	add    BYTE PTR [rax],al
     5fb:	10 64 69 76          	adc    BYTE PTR [rcx+rbp*2+0x76],ah
     5ff:	00 d9                	add    cl,bl
     601:	b8 01 00 00 34       	mov    eax,0x34000001
     606:	01 00                	add    DWORD PTR [rax],eax
     608:	00 01                	add    BYTE PTR [rcx],al
     60a:	97                   	xchg   edi,eax
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 01                	add    BYTE PTR [rcx],al
     60f:	97                   	xchg   edi,eax
     610:	00 00                	add    BYTE PTR [rax],al
     612:	00 00                	add    BYTE PTR [rax],al
     614:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	00 e6                	add    dh,ah
     61b:	03 1e                	add    ebx,DWORD PTR [rsi]
     61d:	34 01                	xor    al,0x1
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	30 06                	xor    BYTE PTR [rsi],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     62b:	97                   	xchg   edi,eax
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	04 2d                	add    al,0x2d
     632:	02 00                	add    al,BYTE PTR [rax]
     634:	00 ed                	add    ch,ch
     636:	01 01                	add    DWORD PTR [rcx],eax
     638:	97                   	xchg   edi,eax
     639:	00 00                	add    BYTE PTR [rax],al
     63b:	00 46 06             	add    BYTE PTR [rsi+0x6],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     646:	0a 88 00 00 00 ee    	or     cl,BYTE PTR [rax-0x12000000]
     64c:	16                   	(bad)
     64d:	7f 00                	jg     64f <__abi_tag+0x2d3>
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	97                   	xchg   edi,eax
     652:	00 00                	add    BYTE PTR [rax],al
     654:	00 69 06             	add    BYTE PTR [rcx+0x6],ch
     657:	00 00                	add    BYTE PTR [rax],al
     659:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     65f:	15 05 00 00 01       	adc    eax,0x1000005
     664:	62                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	00 00                	add    BYTE PTR [rax],al
     669:	0a b9 02 00 00 f3    	or     bh,BYTE PTR [rcx-0xcfffffe]
     66f:	1f                   	(bad)
     670:	b0 02                	mov    al,0x2
     672:	00 00                	add    BYTE PTR [rax],al
     674:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 8c 06 00 00 01 92 	add    BYTE PTR [rsi+rax*1-0x6dff0000],cl
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	00 01                	add    BYTE PTR [rcx],al
     682:	15 05 00 00 01       	adc    eax,0x1000005
     687:	62                   	(bad)
     688:	00 00                	add    BYTE PTR [rax],al
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	06                   	(bad)
     68d:	97                   	xchg   edi,eax
     68e:	02 00                	add    al,BYTE PTR [rax]
     690:	00 02                	add    BYTE PTR [rdx],al
     692:	7c 0e                	jl     6a2 <__abi_tag+0x326>
     694:	ac                   	lods   al,BYTE PTR ds:[rsi]
     695:	00 00                	add    BYTE PTR [rax],al
     697:	00 a7 06 00 00 01    	add    BYTE PTR [rdi+0x1000006],ah
     69d:	92                   	xchg   edx,eax
     69e:	00 00                	add    BYTE PTR [rax],al
     6a0:	00 01                	add    BYTE PTR [rcx],al
     6a2:	15 05 00 00 00       	adc    eax,0x5
     6a7:	06                   	(bad)
     6a8:	2b 00                	sub    eax,DWORD PTR [rax]
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	02 7f 14             	add    bh,BYTE PTR [rdi+0x14]
     6af:	9e                   	sahf
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 c2                	add    dl,al
     6b4:	06                   	(bad)
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     6bd:	15 05 00 00 00       	adc    eax,0x5
     6c2:	02 0a                	add    cl,BYTE PTR [rdx]
     6c4:	27                   	(bad)
     6c5:	0c 3c                	or     al,0x3c
     6c7:	03 00                	add    eax,DWORD PTR [rax]
     6c9:	00 02                	add    BYTE PTR [rdx],al
     6cb:	0a 2b                	or     ch,BYTE PTR [rbx]
     6cd:	0e                   	(bad)
     6ce:	58                   	pop    rax
     6cf:	03 00                	add    eax,DWORD PTR [rax]
     6d1:	00 02                	add    BYTE PTR [rdx],al
     6d3:	0a 2e                	or     ch,BYTE PTR [rsi]
     6d5:	0e                   	(bad)
     6d6:	c9                   	leave
     6d7:	04 00                	add    al,0x0
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	0a 36                	or     dh,BYTE PTR [rsi]
     6dd:	0c d6                	or     al,0xd6
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 02                	add    BYTE PTR [rdx],al
     6e3:	0a 37                	or     dh,BYTE PTR [rdi]
     6e5:	0c 05                	or     al,0x5
     6e7:	01 00                	add    DWORD PTR [rax],eax
     6e9:	00 03                	add    BYTE PTR [rbx],al
     6eb:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 02                	add    BYTE PTR [rdx],al
     6f2:	0a 39                	or     bh,BYTE PTR [rcx]
     6f4:	0c 7a                	or     al,0x7a
     6f6:	02 00                	add    al,BYTE PTR [rax]
     6f8:	00 03                	add    BYTE PTR [rbx],al
     6fa:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 8ea <__abi_tag+0x56e>
     700:	02 0a                	add    cl,BYTE PTR [rdx]
     702:	39 0c 92             	cmp    DWORD PTR [rdx+rdx*4],ecx
     705:	02 00                	add    al,BYTE PTR [rax]
     707:	00 02                	add    BYTE PTR [rdx],al
     709:	0a 39                	or     bh,BYTE PTR [rcx]
     70b:	0c aa                	or     al,0xaa
     70d:	02 00                	add    al,BYTE PTR [rax]
     70f:	00 02                	add    BYTE PTR [rdx],al
     711:	0a 39                	or     bh,BYTE PTR [rcx]
     713:	0c c2                	or     al,0xc2
     715:	02 00                	add    al,BYTE PTR [rax]
     717:	00 02                	add    BYTE PTR [rdx],al
     719:	0a 39                	or     bh,BYTE PTR [rcx]
     71b:	0c da                	or     al,0xda
     71d:	02 00                	add    al,BYTE PTR [rax]
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	0a 39                	or     bh,BYTE PTR [rcx]
     723:	0c f2                	or     al,0xf2
     725:	02 00                	add    al,BYTE PTR [rax]
     727:	00 02                	add    BYTE PTR [rdx],al
     729:	0a 39                	or     bh,BYTE PTR [rcx]
     72b:	0c 0a                	or     al,0xa
     72d:	03 00                	add    eax,DWORD PTR [rax]
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	0a 3a                	or     bh,BYTE PTR [rdx]
     733:	0c 73                	or     al,0x73
     735:	03 00                	add    eax,DWORD PTR [rax]
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	0a 3b                	or     bh,BYTE PTR [rbx]
     73b:	0c 90                	or     al,0x90
     73d:	03 00                	add    eax,DWORD PTR [rax]
     73f:	00 02                	add    BYTE PTR [rdx],al
     741:	0a 3c 0c             	or     bh,BYTE PTR [rsp+rcx*1]
     744:	b0 03                	mov    al,0x3
     746:	00 00                	add    BYTE PTR [rax],al
     748:	02 0a                	add    cl,BYTE PTR [rdx]
     74a:	3d 0c c6 03 00       	cmp    eax,0x3c60c
     74f:	00 02                	add    BYTE PTR [rdx],al
     751:	0a 3f                	or     bh,BYTE PTR [rdi]
     753:	0c fb                	or     al,0xfb
     755:	05 00 00 02 0a       	add    eax,0xa020000
     75a:	3f                   	(bad)
     75b:	0c 22                	or     al,0x22
     75d:	03 00                	add    eax,DWORD PTR [rax]
     75f:	00 02                	add    BYTE PTR [rdx],al
     761:	0a 3f                	or     bh,BYTE PTR [rdi]
     763:	0c f0                	or     al,0xf0
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	0a 41 0c             	or     al,BYTE PTR [rcx+0xc]
     76c:	0c 04                	or     al,0x4
     76e:	00 00                	add    BYTE PTR [rax],al
     770:	02 0a                	add    cl,BYTE PTR [rdx]
     772:	43 0c 22             	rex.XB or al,0x22
     775:	04 00                	add    al,0x0
     777:	00 02                	add    BYTE PTR [rdx],al
     779:	0a 46 0c             	or     al,BYTE PTR [rsi+0xc]
     77c:	3d 04 00 00 02       	cmp    eax,0x2000004
     781:	0a 47 0c             	or     al,BYTE PTR [rdi+0xc]
     784:	58                   	pop    rax
     785:	04 00                	add    al,0x0
     787:	00 02                	add    BYTE PTR [rdx],al
     789:	0a 48 0c             	or     cl,BYTE PTR [rax+0xc]
     78c:	89 04 00             	mov    DWORD PTR [rax+rax*1],eax
     78f:	00 02                	add    BYTE PTR [rdx],al
     791:	0a 4a 0c             	or     cl,BYTE PTR [rdx+0xc]
     794:	a9 04 00 00 02       	test   eax,0x2000004
     799:	0a 4b 0c             	or     cl,BYTE PTR [rbx+0xc]
     79c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
     79f:	00 02                	add    BYTE PTR [rdx],al
     7a1:	0a 4d 0c             	or     cl,BYTE PTR [rbp+0xc]
     7a4:	e9 04 00 00 02       	jmp    20007ad <_end+0x1ffa795>
     7a9:	0a 4e 0c             	or     cl,BYTE PTR [rsi+0xc]
     7ac:	fa                   	cli
     7ad:	04 00                	add    al,0x0
     7af:	00 02                	add    BYTE PTR [rdx],al
     7b1:	0a 4f 0c             	or     cl,BYTE PTR [rdi+0xc]
     7b4:	1a 05 00 00 02 0a    	sbb    al,BYTE PTR [rip+0xa020000]        # a0207ba <_end+0xa01a7a2>
     7ba:	50                   	push   rax
     7bb:	0c 3d                	or     al,0x3d
     7bd:	05 00 00 02 0a       	add    eax,0xa020000
     7c2:	51                   	push   rcx
     7c3:	0c 60                	or     al,0x60
     7c5:	05 00 00 02 0a       	add    eax,0xa020000
     7ca:	53                   	push   rbx
     7cb:	0c 76                	or     al,0x76
     7cd:	05 00 00 02 0a       	add    eax,0xa020000
     7d2:	54                   	push   rsp
     7d3:	0c 9b                	or     al,0x9b
     7d5:	05 00 00 03 02       	add    eax,0x2030000
     7da:	04 00                	add    al,0x0
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 03                	add    BYTE PTR [rbx],al
     7e0:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 08                	add    BYTE PTR [rax],cl
     7e7:	ab                   	stos   DWORD PTR es:[rdi],eax
     7e8:	00 00                	add    BYTE PTR [rax],al
     7ea:	00 0b                	add    BYTE PTR [rbx],cl
     7ec:	1a 14 6e             	sbb    dl,BYTE PTR [rsi+rbp*2]
     7ef:	00 00                	add    BYTE PTR [rax],al
     7f1:	00 09                	add    BYTE PTR [rcx],cl
     7f3:	e6 07                	out    0x7,al
     7f5:	00 00                	add    BYTE PTR [rax],al
     7f7:	0f 69 02             	punpckhwd mm0,QWORD PTR [rdx]
     7fa:	00 00                	add    BYTE PTR [rax],al
     7fc:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
     7ff:	00 00                	add    BYTE PTR [rax],al
     801:	0f                   	(bad)
     802:	0f 75 02             	pcmpeqw mm0,QWORD PTR [rdx]
     805:	00 00                	add    BYTE PTR [rax],al
     807:	09 69 00             	or     DWORD PTR [rcx+0x0],ebp
     80a:	00 00                	add    BYTE PTR [rax],al
     80c:	02 0f                	add    cl,BYTE PTR [rdi]
     80e:	c4                   	(bad)
     80f:	00 00                	add    BYTE PTR [rax],al
     811:	00 0a                	add    BYTE PTR [rdx],cl
     813:	69 00 00 00 20 24    	imul   eax,DWORD PTR [rax],0x24200000
     819:	90                   	nop
     81a:	00 00                	add    BYTE PTR [rax],al
     81c:	00 0d 06 10 f2 07    	add    BYTE PTR [rip+0x7f21006],cl        # 7f21828 <_end+0x7f1b810>
     822:	00 00                	add    BYTE PTR [rax],al
     824:	40                   	rex
     825:	42 0f 00 25 0c 01 00 	rex.X verr WORD PTR [rip+0x10c]        # 939 <__abi_tag+0x5bd>
     82c:	00 
     82d:	0d 1d 06 9e 02       	or     eax,0x29e061d
     832:	00 00                	add    BYTE PTR [rax],al
     834:	48 08 00             	rex.W or BYTE PTR [rax],al
     837:	00 01                	add    BYTE PTR [rcx],al
     839:	92                   	xchg   edx,eax
     83a:	00 00                	add    BYTE PTR [rax],al
     83c:	00 01                	add    BYTE PTR [rcx],al
     83e:	e6 07                	out    0x7,al
     840:	00 00                	add    BYTE PTR [rax],al
     842:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     848:	26 a4                	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     84a:	00 00                	add    BYTE PTR [rax],al
     84c:	00 01                	add    BYTE PTR [rcx],al
     84e:	07                   	(bad)
     84f:	05 62 00 00 00       	add    eax,0x62
     854:	e0 11                	loopne 867 <__abi_tag+0x4eb>
     856:	00 00                	add    BYTE PTR [rax],al
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	2e 00 00             	cs add BYTE PTR [rax],al
     85f:	00 00                	add    BYTE PTR [rax],al
     861:	00 00                	add    BYTE PTR [rax],al
     863:	00 01                	add    BYTE PTR [rcx],al
     865:	9c                   	pushf
     866:	12 0d 02 00 00 0e    	adc    cl,BYTE PTR [rip+0xe000002]        # e00086e <_end+0xdffa856>
     86c:	62                   	(bad)
     86d:	00 00                	add    BYTE PTR [rax],al
     86f:	00 10                	add    BYTE PTR [rax],dl
     871:	00 00                	add    BYTE PTR [rax],al
     873:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     876:	00 00                	add    BYTE PTR [rax],al
     878:	12 d7                	adc    dl,bh
     87a:	01 00                	add    DWORD PTR [rax],eax
     87c:	00 1a                	add    BYTE PTR [rdx],bl
     87e:	15 05 00 00 2b       	adc    eax,0x2b000005
     883:	00 00                	add    BYTE PTR [rax],al
     885:	00 27                	add    BYTE PTR [rdi],ah
     887:	00 00                	add    BYTE PTR [rax],al
     889:	00 27                	add    BYTE PTR [rdi],ah
     88b:	90                   	nop
     88c:	03 00                	add    eax,DWORD PTR [rax]
     88e:	00 f2                	add    dl,dh
     890:	11 00                	adc    DWORD PTR [rax],eax
     892:	00 00                	add    BYTE PTR [rax],al
     894:	00 00                	add    BYTE PTR [rax],al
     896:	00 00                	add    BYTE PTR [rax],al
     898:	0c 00                	or     al,0x0
     89a:	00 00                	add    BYTE PTR [rax],al
     89c:	01 08                	add    DWORD PTR [rax],ecx
     89e:	1d c9 08 00 00       	sbb    eax,0x8c9
     8a3:	28 a2 03 00 00 44    	sub    BYTE PTR [rdx+0x44000003],ah
     8a9:	00 00                	add    BYTE PTR [rax],al
     8ab:	00 42 00             	add    BYTE PTR [rdx+0x0],al
     8ae:	00 00                	add    BYTE PTR [rax],al
     8b0:	13 f9                	adc    edi,ecx
     8b2:	11 00                	adc    DWORD PTR [rax],eax
     8b4:	00 00                	add    BYTE PTR [rax],al
     8b6:	00 00                	add    BYTE PTR [rax],al
     8b8:	00 1a                	add    BYTE PTR [rdx],bl
     8ba:	05 00 00 0b 01       	add    eax,0x10b0000
     8bf:	54                   	push   rsp
     8c0:	01 30                	add    DWORD PTR [rax],esi
     8c2:	0b 01                	or     eax,DWORD PTR [rcx]
     8c4:	51                   	push   rcx
     8c5:	01 3a                	add    DWORD PTR [rdx],edi
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	13 0a                	adc    ecx,DWORD PTR [rdx]
     8cb:	12 00                	adc    al,BYTE PTR [rax]
     8cd:	00 00                	add    BYTE PTR [rax],al
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	00 28                	add    BYTE PTR [rax],ch
     8d3:	08 00                	or     BYTE PTR [rax],al
     8d5:	00 0b                	add    BYTE PTR [rbx],cl
     8d7:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
     8da:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
     8dd:	00 00                	add    BYTE PTR [rax],al
     8df:	00 00                	add    BYTE PTR [rax],al
     8e1:	00 00                	add    BYTE PTR [rax],al
     8e3:	0b 01                	or     eax,DWORD PTR [rcx]
     8e5:	51                   	push   rcx
     8e6:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
     8e9:	00 00                	add    BYTE PTR [rax],al
     8eb:	00 de                	add    dh,bl
     8ed:	17                   	(bad)
     8ee:	00 00                	add    BYTE PTR [rax],al
     8f0:	05 00 01 08 87       	add    eax,0x87080100
     8f5:	02 00                	add    al,BYTE PTR [rax]
     8f7:	00 39                	add    BYTE PTR [rcx],bh
     8f9:	14 01                	adc    al,0x1
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	21 81 01 00 00 00    	and    DWORD PTR [rcx+0x1],eax
     903:	00 00                	add    BYTE PTR [rax],al
     905:	00 00                	add    BYTE PTR [rax],al
     907:	13 00                	adc    eax,DWORD PTR [rax]
     909:	00 00                	add    BYTE PTR [rax],al
     90b:	00 00                	add    BYTE PTR [rax],al
     90d:	00 fe                	add    dh,bh
     90f:	06                   	(bad)
     910:	00 00                	add    BYTE PTR [rax],al
     912:	00 00                	add    BYTE PTR [rax],al
     914:	00 00                	add    BYTE PTR [rax],al
     916:	e7 00                	out    0x0,eax
     918:	00 00                	add    BYTE PTR [rax],al
     91a:	0a d6                	or     dl,dh
     91c:	0a 00                	or     al,BYTE PTR [rax]
     91e:	00 05 d6 17 3a 00    	add    BYTE PTR [rip+0x3a17d6],al        # 3a20fa <_end+0x39c0e2>
     924:	00 00                	add    BYTE PTR [rax],al
     926:	04 08                	add    al,0x8
     928:	07                   	(bad)
     929:	f3 00 00             	repz add BYTE PTR [rax],al
     92c:	00 22                	add    BYTE PTR [rdx],ah
     92e:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
     935:	00 00                	add    BYTE PTR [rax],al
     937:	00 06                	add    BYTE PTR [rsi],al
     939:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     93c:	00 06                	add    BYTE PTR [rsi],al
     93e:	3d 09 66 00 00       	cmp    eax,0x6609
     943:	00 00                	add    BYTE PTR [rax],al
     945:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     948:	6d                   	ins    DWORD PTR es:[rdi],dx
     949:	00 3e                	add    BYTE PTR [rsi],bh
     94b:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
     94e:	00 00                	add    BYTE PTR [rax],al
     950:	04 00                	add    al,0x0
     952:	3a 04 05 69 6e 74 00 	cmp    al,BYTE PTR [rax*1+0x746e69]
     959:	10 66 00             	adc    BYTE PTR [rsi+0x0],ah
     95c:	00 00                	add    BYTE PTR [rax],al
     95e:	0a de                	or     bl,dh
     960:	02 00                	add    al,BYTE PTR [rax]
     962:	00 06                	add    BYTE PTR [rsi],al
     964:	3f                   	(bad)
     965:	05 41 00 00 00       	add    eax,0x41
     96a:	22 10                	and    dl,BYTE PTR [rax]
     96c:	44 09 00             	or     DWORD PTR [rax],r8d
     96f:	00 00                	add    BYTE PTR [rax],al
     971:	a3 00 00 00 06 49 02 	movabs ds:0x24906000000,eax
     978:	00 00 
     97a:	06                   	(bad)
     97b:	45 0e                	rex.RB (bad)
     97d:	a3 00 00 00 00 23 72 	movabs ds:0x6d65722300000000,eax
     984:	65 6d 
     986:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
     989:	a3 00 00 00 08 00 04 	movabs ds:0x508040008000000,eax
     990:	08 05 
     992:	e5 00                	in     eax,0x0
     994:	00 00                	add    BYTE PTR [rax],al
     996:	0a 0a                	or     cl,BYTE PTR [rdx]
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	00 06                	add    BYTE PTR [rsi],al
     99c:	47 05 7e 00 00 00    	rex.RXB add eax,0x7e
     9a2:	22 10                	and    dl,BYTE PTR [rax]
     9a4:	4e b4 00             	rex.WRX mov spl,0x0
     9a7:	00 00                	add    BYTE PTR [rax],al
     9a9:	db 00                	fild   DWORD PTR [rax]
     9ab:	00 00                	add    BYTE PTR [rax],al
     9ad:	06                   	(bad)
     9ae:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     9b1:	00 06                	add    BYTE PTR [rsi],al
     9b3:	4f 13 db             	rex.WRXB adc r11,r11
     9b6:	00 00                	add    BYTE PTR [rax],al
     9b8:	00 00                	add    BYTE PTR [rax],al
     9ba:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     9bd:	6d                   	ins    DWORD PTR es:[rdi],dx
     9be:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     9c1:	db 00                	fild   DWORD PTR [rax]
     9c3:	00 00                	add    BYTE PTR [rax],al
     9c5:	08 00                	or     BYTE PTR [rax],al
     9c7:	04 08                	add    al,0x8
     9c9:	05 e0 00 00 00       	add    eax,0xe0
     9ce:	0a b5 00 00 00 06    	or     dh,BYTE PTR [rbp+0x6000000]
     9d4:	51                   	push   rcx
     9d5:	05 b6 00 00 00       	add    eax,0xb6
     9da:	04 02                	add    al,0x2
     9dc:	07                   	(bad)
     9dd:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
     9e0:	00 08                	add    BYTE PTR [rax],cl
     9e2:	06                   	(bad)
     9e3:	01 00                	add    DWORD PTR [rax],eax
     9e5:	00 2b                	add    BYTE PTR [rbx],ch
     9e7:	f5                   	cmc
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     9ed:	06                   	(bad)
     9ee:	08 02                	or     BYTE PTR [rdx],al
     9f0:	00 00                	add    BYTE PTR [rax],al
     9f2:	10 ff                	adc    bh,bh
     9f4:	00 00                	add    BYTE PTR [rax],al
     9f6:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     9f9:	08 ff                	or     bh,bh
     9fb:	01 00                	add    DWORD PTR [rax],eax
     9fd:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     a00:	07                   	(bad)
     a01:	f8                   	clc
     a02:	00 00                	add    BYTE PTR [rax],al
     a04:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
     a07:	06                   	(bad)
     a08:	01 02                	add    DWORD PTR [rdx],eax
     a0a:	00 00                	add    BYTE PTR [rax],al
     a0c:	04 02                	add    al,0x2
     a0e:	05 5b 00 00 00       	add    eax,0x5b
     a13:	0a a9 00 00 00 07    	or     ch,BYTE PTR [rcx+0x7000000]
     a19:	2a 16                	sub    dl,BYTE PTR [rsi]
     a1b:	12 01                	adc    al,BYTE PTR [rcx]
     a1d:	00 00                	add    BYTE PTR [rax],al
     a1f:	3b 08                	cmp    ecx,DWORD PTR [rax]
     a21:	08 ff                	or     bh,bh
     a23:	00 00                	add    BYTE PTR [rax],al
     a25:	00 2b                	add    BYTE PTR [rbx],ch
     a27:	35 01 00 00 04       	xor    eax,0x4000001
     a2c:	08 07                	or     BYTE PTR [rdi],al
     a2e:	ee                   	out    dx,al
     a2f:	00 00                	add    BYTE PTR [rax],al
     a31:	00 3c cf             	add    BYTE PTR [rdi+rcx*8],bh
     a34:	02 00                	add    al,BYTE PTR [rax]
     a36:	00 06                	add    BYTE PTR [rsi],al
     a38:	b4 03                	mov    ah,0x3
     a3a:	0f 53 01             	rcpps  xmm0,XMMWORD PTR [rcx]
     a3d:	00 00                	add    BYTE PTR [rax],al
     a3f:	08 58 01             	or     BYTE PTR [rax+0x1],bl
     a42:	00 00                	add    BYTE PTR [rax],al
     a44:	2c 66                	sub    al,0x66
     a46:	00 00                	add    BYTE PTR [rax],al
     a48:	00 6c 01 00          	add    BYTE PTR [rcx+rax*1+0x0],ch
     a4c:	00 01                	add    BYTE PTR [rcx],al
     a4e:	6c                   	ins    BYTE PTR es:[rdi],dx
     a4f:	01 00                	add    DWORD PTR [rax],eax
     a51:	00 01                	add    BYTE PTR [rcx],al
     a53:	6c                   	ins    BYTE PTR es:[rdi],dx
     a54:	01 00                	add    DWORD PTR [rax],eax
     a56:	00 00                	add    BYTE PTR [rax],al
     a58:	08 71 01             	or     BYTE PTR [rcx+0x1],dh
     a5b:	00 00                	add    BYTE PTR [rax],al
     a5d:	3d 3e 73 74 64       	cmp    eax,0x6474733e
     a62:	00 14 32             	add    BYTE PTR [rdx+rsi*1],dl
     a65:	01 0b                	add    DWORD PTR [rbx],ecx
     a67:	42 03 00             	rex.X add eax,DWORD PTR [rax]
     a6a:	00 02                	add    BYTE PTR [rdx],al
     a6c:	08 83 0b 72 00 00    	or     BYTE PTR [rbx+0x720b],al
     a72:	00 02                	add    BYTE PTR [rdx],al
     a74:	08 84 0b aa 00 00 00 	or     BYTE PTR [rbx+rcx*1+0xaa],al
     a7b:	02 08                	add    cl,BYTE PTR [rax]
     a7d:	8a 0b                	mov    cl,BYTE PTR [rbx]
     a7f:	42 03 00             	rex.X add eax,DWORD PTR [rax]
     a82:	00 02                	add    BYTE PTR [rdx],al
     a84:	08 8d 0b 5e 03 00    	or     BYTE PTR [rbp+0x35e0b],cl
     a8a:	00 02                	add    BYTE PTR [rdx],al
     a8c:	08 90 0b 79 03 00    	or     BYTE PTR [rax+0x3790b],dl
     a92:	00 02                	add    BYTE PTR [rdx],al
     a94:	08 91 0b 96 03 00    	or     BYTE PTR [rcx+0x3960b],dl
     a9a:	00 02                	add    BYTE PTR [rdx],al
     a9c:	08 92 0b ac 03 00    	or     BYTE PTR [rdx+0x3ac0b],dl
     aa2:	00 02                	add    BYTE PTR [rdx],al
     aa4:	08 93 0b c2 03 00    	or     BYTE PTR [rbx+0x3c20b],dl
     aaa:	00 02                	add    BYTE PTR [rdx],al
     aac:	08 95 0b ec 03 00    	or     BYTE PTR [rbp+0x3ec0b],dl
     ab2:	00 02                	add    BYTE PTR [rdx],al
     ab4:	08 98 0b 08 04 00    	or     BYTE PTR [rax+0x4080b],bl
     aba:	00 02                	add    BYTE PTR [rdx],al
     abc:	08 9a 0b 1e 04 00    	or     BYTE PTR [rdx+0x41e0b],bl
     ac2:	00 02                	add    BYTE PTR [rdx],al
     ac4:	08 9d 0b 39 04 00    	or     BYTE PTR [rbp+0x4390b],bl
     aca:	00 02                	add    BYTE PTR [rdx],al
     acc:	08 9e 0b 54 04 00    	or     BYTE PTR [rsi+0x4540b],bl
     ad2:	00 02                	add    BYTE PTR [rdx],al
     ad4:	08 9f 0b 85 04 00    	or     BYTE PTR [rdi+0x4850b],bl
     ada:	00 02                	add    BYTE PTR [rdx],al
     adc:	08 a1 0b a5 04 00    	or     BYTE PTR [rcx+0x4a50b],ah
     ae2:	00 02                	add    BYTE PTR [rdx],al
     ae4:	08 a4 0b c5 04 00 00 	or     BYTE PTR [rbx+rcx*1+0x4c5],ah
     aeb:	02 08                	add    cl,BYTE PTR [rax]
     aed:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     aee:	0b d8                	or     ebx,eax
     af0:	04 00                	add    al,0x0
     af2:	00 02                	add    BYTE PTR [rdx],al
     af4:	08 a9 0b e5 04 00    	or     BYTE PTR [rcx+0x4e50b],ch
     afa:	00 02                	add    BYTE PTR [rdx],al
     afc:	08 aa 0b f6 04 00    	or     BYTE PTR [rdx+0x4f60b],ch
     b02:	00 02                	add    BYTE PTR [rdx],al
     b04:	08 ab 0b 16 05 00    	or     BYTE PTR [rbx+0x5160b],ch
     b0a:	00 02                	add    BYTE PTR [rdx],al
     b0c:	08 ac 0b 3a 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x53a],ch
     b13:	02 08                	add    cl,BYTE PTR [rax]
     b15:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b16:	0b 5e 05             	or     ebx,DWORD PTR [rsi+0x5]
     b19:	00 00                	add    BYTE PTR [rax],al
     b1b:	02 08                	add    cl,BYTE PTR [rax]
     b1d:	af                   	scas   eax,DWORD PTR es:[rdi]
     b1e:	0b 74 05 00          	or     esi,DWORD PTR [rbp+rax*1+0x0]
     b22:	00 02                	add    BYTE PTR [rdx],al
     b24:	08 b0 0b 99 05 00    	or     BYTE PTR [rax+0x5990b],dh
     b2a:	00 02                	add    BYTE PTR [rdx],al
     b2c:	08 f4                	or     ah,dh
     b2e:	16                   	(bad)
     b2f:	e2 00                	loop   b31 <__abi_tag+0x7b5>
     b31:	00 00                	add    BYTE PTR [rax],al
     b33:	02 08                	add    cl,BYTE PTR [rax]
     b35:	f9                   	stc
     b36:	16                   	(bad)
     b37:	f9                   	stc
     b38:	05 00 00 02 08       	add    eax,0x8020000
     b3d:	fa                   	cli
     b3e:	16                   	(bad)
     b3f:	13 06                	adc    eax,DWORD PTR [rsi]
     b41:	00 00                	add    BYTE PTR [rax],al
     b43:	02 08                	add    cl,BYTE PTR [rax]
     b45:	fc                   	cld
     b46:	16                   	(bad)
     b47:	2e 06                	cs (bad)
     b49:	00 00                	add    BYTE PTR [rax],al
     b4b:	02 08                	add    cl,BYTE PTR [rax]
     b4d:	fd                   	std
     b4e:	16                   	(bad)
     b4f:	8c 06                	mov    WORD PTR [rsi],es
     b51:	00 00                	add    BYTE PTR [rax],al
     b53:	02 08                	add    cl,BYTE PTR [rax]
     b55:	fe                   	(bad)
     b56:	16                   	(bad)
     b57:	44 06                	rex.R (bad)
     b59:	00 00                	add    BYTE PTR [rax],al
     b5b:	02 08                	add    cl,BYTE PTR [rax]
     b5d:	ff 16                	call   QWORD PTR [rsi]
     b5f:	68 06 00 00 3f       	push   0x3f000006
     b64:	08 00                	or     BYTE PTR [rax],al
     b66:	01 16                	add    DWORD PTR [rsi],edx
     b68:	ae                   	scas   al,BYTE PTR es:[rdi]
     b69:	06                   	(bad)
     b6a:	00 00                	add    BYTE PTR [rax],al
     b6c:	11 61 62             	adc    DWORD PTR [rcx+0x62],esp
     b6f:	73 00                	jae    b71 <__abi_tag+0x7f5>
     b71:	89 0f                	mov    DWORD PTR [rdi],ecx
     b73:	03 00                	add    eax,DWORD PTR [rax]
     b75:	00 f8                	add    al,bh
     b77:	06                   	(bad)
     b78:	00 00                	add    BYTE PTR [rax],al
     b7a:	98                   	cwde
     b7b:	02 00                	add    al,BYTE PTR [rax]
     b7d:	00 01                	add    BYTE PTR [rcx],al
     b7f:	f8                   	clc
     b80:	06                   	(bad)
     b81:	00 00                	add    BYTE PTR [rax],al
     b83:	00 11                	add    BYTE PTR [rcx],dl
     b85:	61                   	(bad)
     b86:	62 73 00 55 1b       	(bad)
     b8b:	00 00                	add    BYTE PTR [rax],al
     b8d:	00 07                	add    BYTE PTR [rdi],al
     b8f:	07                   	(bad)
     b90:	00 00                	add    BYTE PTR [rax],al
     b92:	b0 02                	mov    al,0x2
     b94:	00 00                	add    BYTE PTR [rax],al
     b96:	01 07                	add    DWORD PTR [rdi],eax
     b98:	07                   	(bad)
     b99:	00 00                	add    BYTE PTR [rax],al
     b9b:	00 11                	add    BYTE PTR [rcx],dl
     b9d:	61                   	(bad)
     b9e:	62 73 00 4f fb       	(bad)
     ba3:	02 00                	add    al,BYTE PTR [rax]
     ba5:	00 c9                	add    cl,cl
     ba7:	06                   	(bad)
     ba8:	00 00                	add    BYTE PTR [rax],al
     baa:	c8 02 00 00          	enter  0x2,0x0
     bae:	01 c9                	add    ecx,ecx
     bb0:	06                   	(bad)
     bb1:	00 00                	add    BYTE PTR [rax],al
     bb3:	00 11                	add    BYTE PTR [rcx],dl
     bb5:	61                   	(bad)
     bb6:	62 73 00 4b 05       	(bad)
     bbb:	03 00                	add    eax,DWORD PTR [rax]
     bbd:	00 a7 06 00 00 e0    	add    BYTE PTR [rdi-0x1ffffffa],ah
     bc3:	02 00                	add    al,BYTE PTR [rax]
     bc5:	00 01                	add    BYTE PTR [rcx],al
     bc7:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     bc8:	06                   	(bad)
     bc9:	00 00                	add    BYTE PTR [rax],al
     bcb:	00 11                	add    BYTE PTR [rcx],dl
     bcd:	61                   	(bad)
     bce:	62 73 00 47 f1       	(bad)
     bd3:	02 00                	add    al,BYTE PTR [rax]
     bd5:	00 8f 03 00 00 f8    	add    BYTE PTR [rdi-0x7fffffd],cl
     bdb:	02 00                	add    al,BYTE PTR [rax]
     bdd:	00 01                	add    BYTE PTR [rcx],al
     bdf:	8f 03                	pop    QWORD PTR [rbx]
     be1:	00 00                	add    BYTE PTR [rax],al
     be3:	00 11                	add    BYTE PTR [rcx],dl
     be5:	61                   	(bad)
     be6:	62 73 00 3d 41       	(bad)
     beb:	00 00                	add    BYTE PTR [rax],al
     bed:	00 db                	add    bl,bl
     bef:	00 00                	add    BYTE PTR [rax],al
     bf1:	00 10                	add    BYTE PTR [rax],dl
     bf3:	03 00                	add    eax,DWORD PTR [rax]
     bf5:	00 01                	add    BYTE PTR [rcx],al
     bf7:	db 00                	fild   DWORD PTR [rax]
     bf9:	00 00                	add    BYTE PTR [rax],al
     bfb:	00 11                	add    BYTE PTR [rcx],dl
     bfd:	61                   	(bad)
     bfe:	62 73 00 38 11       	(bad)
     c03:	00 00                	add    BYTE PTR [rax],al
     c05:	00 a3 00 00 00 28    	add    BYTE PTR [rbx+0x28000000],ah
     c0b:	03 00                	add    eax,DWORD PTR [rax]
     c0d:	00 01                	add    BYTE PTR [rcx],al
     c0f:	a3 00 00 00 00 2d 64 	movabs ds:0x7669642d00000000,eax
     c16:	69 76 
     c18:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
     c1e:	aa                   	stos   BYTE PTR es:[rdi],al
     c1f:	00 00                	add    BYTE PTR [rax],al
     c21:	00 01                	add    BYTE PTR [rcx],al
     c23:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     c2a:	00 00 
     c2c:	00 00                	add    BYTE PTR [rax],al
     c2e:	0b 6d 00             	or     ebp,DWORD PTR [rbp+0x0]
     c31:	00 00                	add    BYTE PTR [rax],al
     c33:	de 02                	fiadd  WORD PTR [rdx]
     c35:	0c 66                	or     al,0x66
     c37:	00 00                	add    BYTE PTR [rax],al
     c39:	00 58 03             	add    BYTE PTR [rax+0x3],bl
     c3c:	00 00                	add    BYTE PTR [rax],al
     c3e:	01 58 03             	add    DWORD PTR [rax+0x3],ebx
     c41:	00 00                	add    BYTE PTR [rax],al
     c43:	00 08                	add    BYTE PTR [rax],cl
     c45:	5d                   	pop    rbp
     c46:	03 00                	add    eax,DWORD PTR [rax]
     c48:	00 40 41             	add    BYTE PTR [rax+0x41],al
     c4b:	33 00                	xor    eax,DWORD PTR [rax]
     c4d:	00 00                	add    BYTE PTR [rax],al
     c4f:	06                   	(bad)
     c50:	e3 02                	jrcxz  c54 <__abi_tag+0x8d8>
     c52:	12 33                	adc    dh,BYTE PTR [rbx]
     c54:	00 00                	add    BYTE PTR [rax],al
     c56:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     c59:	00 00                	add    BYTE PTR [rax],al
     c5b:	79 03                	jns    c60 <__abi_tag+0x8e4>
     c5d:	00 00                	add    BYTE PTR [rax],al
     c5f:	01 58 03             	add    DWORD PTR [rax+0x3],ebx
     c62:	00 00                	add    BYTE PTR [rax],al
     c64:	00 0d cd 01 00 00    	add    BYTE PTR [rip+0x1cd],cl        # e37 <__abi_tag+0xabb>
     c6a:	0a 19                	or     bl,BYTE PTR [rcx]
     c6c:	01 8f 03 00 00 8f    	add    DWORD PTR [rdi-0x70fffffd],ecx
     c72:	03 00                	add    eax,DWORD PTR [rax]
     c74:	00 01                	add    BYTE PTR [rcx],al
     c76:	f5                   	cmc
     c77:	00 00                	add    BYTE PTR [rax],al
     c79:	00 00                	add    BYTE PTR [rax],al
     c7b:	04 08                	add    al,0x8
     c7d:	04 f8                	add    al,0xf8
     c7f:	01 00                	add    DWORD PTR [rax],eax
     c81:	00 0b                	add    BYTE PTR [rbx],cl
     c83:	d2 01                	rol    BYTE PTR [rcx],cl
     c85:	00 00                	add    BYTE PTR [rax],al
     c87:	e1 01                	loope  c8a <__abi_tag+0x90e>
     c89:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     c8c:	00 00                	add    BYTE PTR [rax],al
     c8e:	ac                   	lods   al,BYTE PTR ds:[rsi]
     c8f:	03 00                	add    eax,DWORD PTR [rax]
     c91:	00 01                	add    BYTE PTR [rcx],al
     c93:	f5                   	cmc
     c94:	00 00                	add    BYTE PTR [rax],al
     c96:	00 00                	add    BYTE PTR [rax],al
     c98:	0b dc                	or     ebx,esp
     c9a:	01 00                	add    DWORD PTR [rax],eax
     c9c:	00 e6                	add    dh,ah
     c9e:	01 01                	add    DWORD PTR [rcx],eax
     ca0:	a3 00 00 00 c2 03 00 	movabs ds:0x1000003c2000000,eax
     ca7:	00 01 
     ca9:	f5                   	cmc
     caa:	00 00                	add    BYTE PTR [rax],al
     cac:	00 00                	add    BYTE PTR [rax],al
     cae:	0d 65 00 00 00       	or     eax,0x65
     cb3:	0b 14 01             	or     edx,DWORD PTR [rcx+rax*1]
     cb6:	33 01                	xor    eax,DWORD PTR [rcx]
     cb8:	00 00                	add    BYTE PTR [rax],al
     cba:	ec                   	in     al,dx
     cbb:	03 00                	add    eax,DWORD PTR [rax]
     cbd:	00 01                	add    BYTE PTR [rcx],al
     cbf:	6c                   	ins    BYTE PTR es:[rdi],dx
     cc0:	01 00                	add    DWORD PTR [rax],eax
     cc2:	00 01                	add    BYTE PTR [rcx],al
     cc4:	6c                   	ins    BYTE PTR es:[rdi],dx
     cc5:	01 00                	add    DWORD PTR [rax],eax
     cc7:	00 01                	add    BYTE PTR [rcx],al
     cc9:	2e 00 00             	cs add BYTE PTR [rax],al
     ccc:	00 01                	add    BYTE PTR [rcx],al
     cce:	2e 00 00             	cs add BYTE PTR [rax],al
     cd1:	00 01                	add    BYTE PTR [rcx],al
     cd3:	46 01 00             	rex.RX add DWORD PTR [rax],r8d
     cd6:	00 00                	add    BYTE PTR [rax],al
     cd8:	42                   	rex.X
     cd9:	64 69 76 00 06 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e006
     ce0:	0e 
     ce1:	72 00                	jb     ce3 <__abi_tag+0x967>
     ce3:	00 00                	add    BYTE PTR [rax],al
     ce5:	08 04 00             	or     BYTE PTR [rax+rax*1],al
     ce8:	00 01                	add    BYTE PTR [rcx],al
     cea:	66 00 00             	data16 add BYTE PTR [rax],al
     ced:	00 01                	add    BYTE PTR [rcx],al
     cef:	66 00 00             	data16 add BYTE PTR [rax],al
     cf2:	00 00                	add    BYTE PTR [rax],al
     cf4:	0b bd 00 00 00 05    	or     edi,DWORD PTR [rbp+0x5000000]
     cfa:	03 0e                	add    ecx,DWORD PTR [rsi]
     cfc:	35 01 00 00 1e       	xor    eax,0x1e000001
     d01:	04 00                	add    al,0x0
     d03:	00 01                	add    BYTE PTR [rcx],al
     d05:	f5                   	cmc
     d06:	00 00                	add    BYTE PTR [rax],al
     d08:	00 00                	add    BYTE PTR [rax],al
     d0a:	0b c3                	or     eax,ebx
     d0c:	02 00                	add    al,BYTE PTR [rax]
     d0e:	00 e2                	add    dl,ah
     d10:	03 0f                	add    ecx,DWORD PTR [rdi]
     d12:	aa                   	stos   BYTE PTR es:[rdi],al
     d13:	00 00                	add    BYTE PTR [rax],al
     d15:	00 39                	add    BYTE PTR [rcx],bh
     d17:	04 00                	add    al,0x0
     d19:	00 01                	add    BYTE PTR [rcx],al
     d1b:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     d22:	00 00 
     d24:	00 0b                	add    BYTE PTR [rbx],cl
     d26:	33 02                	xor    eax,DWORD PTR [rdx]
     d28:	00 00                	add    BYTE PTR [rax],al
     d2a:	26 04 0c             	es add al,0xc
     d2d:	66 00 00             	data16 add BYTE PTR [rax],al
     d30:	00 54 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dl
     d34:	00 01                	add    BYTE PTR [rcx],al
     d36:	f5                   	cmc
     d37:	00 00                	add    BYTE PTR [rax],al
     d39:	00 01                	add    BYTE PTR [rcx],al
     d3b:	2e 00 00             	cs add BYTE PTR [rax],al
     d3e:	00 00                	add    BYTE PTR [rax],al
     d40:	0d 39 02 00 00       	or     eax,0x239
     d45:	0c 75                	or     al,0x75
     d47:	01 2e                	add    DWORD PTR [rsi],ebp
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
     d4f:	00 01                	add    BYTE PTR [rcx],al
     d51:	74 04                	je     d57 <__abi_tag+0x9db>
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	01 f5                	add    ebp,esi
     d57:	00 00                	add    BYTE PTR [rax],al
     d59:	00 01                	add    BYTE PTR [rcx],al
     d5b:	2e 00 00             	cs add BYTE PTR [rax],al
     d5e:	00 00                	add    BYTE PTR [rax],al
     d60:	08 79 04             	or     BYTE PTR [rcx+0x4],bh
     d63:	00 00                	add    BYTE PTR [rax],al
     d65:	04 04                	add    al,0x4
     d67:	05 61 02 00 00       	add    eax,0x261
     d6c:	10 79 04             	adc    BYTE PTR [rcx+0x4],bh
     d6f:	00 00                	add    BYTE PTR [rax],al
     d71:	0b d9                	or     ebx,ecx
     d73:	00 00                	add    BYTE PTR [rax],al
     d75:	00 29                	add    BYTE PTR [rcx],ch
     d77:	04 0c                	add    al,0xc
     d79:	66 00 00             	data16 add BYTE PTR [rax],al
     d7c:	00 a5 04 00 00 01    	add    BYTE PTR [rbp+0x1000004],ah
     d82:	74 04                	je     d88 <__abi_tag+0xa0c>
     d84:	00 00                	add    BYTE PTR [rax],al
     d86:	01 f5                	add    ebp,esi
     d88:	00 00                	add    BYTE PTR [rax],al
     d8a:	00 01                	add    BYTE PTR [rcx],al
     d8c:	2e 00 00             	cs add BYTE PTR [rax],al
     d8f:	00 00                	add    BYTE PTR [rax],al
     d91:	24 25                	and    al,0x25
     d93:	00 00                	add    BYTE PTR [rax],al
     d95:	00 ca                	add    dl,cl
     d97:	03 c5                	add    eax,ebp
     d99:	04 00                	add    al,0x0
     d9b:	00 01                	add    BYTE PTR [rcx],al
     d9d:	33 01                	xor    eax,DWORD PTR [rcx]
     d9f:	00 00                	add    BYTE PTR [rax],al
     da1:	01 2e                	add    DWORD PTR [rsi],ebp
     da3:	00 00                	add    BYTE PTR [rax],al
     da5:	00 01                	add    BYTE PTR [rcx],al
     da7:	2e 00 00             	cs add BYTE PTR [rax],al
     daa:	00 01                	add    BYTE PTR [rcx],al
     dac:	46 01 00             	rex.RX add DWORD PTR [rax],r8d
     daf:	00 00                	add    BYTE PTR [rax],al
     db1:	43                   	rex.XB
     db2:	36 00 00             	ss add BYTE PTR [rax],al
     db5:	00 06                	add    BYTE PTR [rsi],al
     db7:	fa                   	cli
     db8:	02 0d d8 04 00 00    	add    cl,BYTE PTR [rip+0x4d8]        # 1296 <register_tm_clones+0x26>
     dbe:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     dc1:	00 00                	add    BYTE PTR [rax],al
     dc3:	00 44 ec 02          	add    BYTE PTR [rsp+rbp*8+0x2],al
     dc7:	00 00                	add    BYTE PTR [rax],al
     dc9:	06                   	(bad)
     dca:	3d 02 0c 66 00       	cmp    eax,0x660c02
     dcf:	00 00                	add    BYTE PTR [rax],al
     dd1:	24 eb                	and    al,0xeb
     dd3:	02 00                	add    al,BYTE PTR [rax]
     dd5:	00 3f                	add    BYTE PTR [rdi],bh
     dd7:	02 f6                	add    dh,dh
     dd9:	04 00                	add    al,0x0
     ddb:	00 01                	add    BYTE PTR [rcx],al
     ddd:	12 01                	adc    al,BYTE PTR [rcx]
     ddf:	00 00                	add    BYTE PTR [rax],al
     de1:	00 0d 05 01 00 00    	add    BYTE PTR [rip+0x105],cl        # eec <__abi_tag+0xb70>
     de7:	06                   	(bad)
     de8:	76 0f                	jbe    df9 <__abi_tag+0xa7d>
     dea:	8f 03                	pop    QWORD PTR [rbx]
     dec:	00 00                	add    BYTE PTR [rax],al
     dee:	11 05 00 00 01 f5    	adc    DWORD PTR [rip+0xfffffffff5010000],eax        # fffffffff5010df4 <_end+0xfffffffff500addc>
     df4:	00 00                	add    BYTE PTR [rax],al
     df6:	00 01                	add    BYTE PTR [rcx],al
     df8:	11 05 00 00 00 08    	adc    DWORD PTR [rip+0x8000000],eax        # 8000dfe <_end+0x7ffade6>
     dfe:	35 01 00 00 12       	xor    eax,0x12000001
     e03:	54                   	push   rsp
     e04:	00 00                	add    BYTE PTR [rax],al
     e06:	00 06                	add    BYTE PTR [rsi],al
     e08:	d7                   	xlat   BYTE PTR ds:[rbx]
     e09:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     e0c:	00 00                	add    BYTE PTR [rax],al
     e0e:	a3 00 00 00 3a 05 00 	movabs ds:0x10000053a000000,eax
     e15:	00 01 
     e17:	f5                   	cmc
     e18:	00 00                	add    BYTE PTR [rax],al
     e1a:	00 01                	add    BYTE PTR [rcx],al
     e1c:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66010e22 <_end+0x6600ae0a>
     e22:	00 00                	add    BYTE PTR [rax],al
     e24:	00 00                	add    BYTE PTR [rax],al
     e26:	12 25 02 00 00 06    	adc    ah,BYTE PTR [rip+0x6000002]        # 6000e2e <_end+0x5ffae16>
     e2c:	db 1a                	fistp  DWORD PTR [rdx]
     e2e:	1c 02                	sbb    al,0x2
     e30:	00 00                	add    BYTE PTR [rax],al
     e32:	3a 00                	cmp    al,BYTE PTR [rax]
     e34:	00 00                	add    BYTE PTR [rax],al
     e36:	5e                   	pop    rsi
     e37:	05 00 00 01 f5       	add    eax,0xf5010000
     e3c:	00 00                	add    BYTE PTR [rax],al
     e3e:	00 01                	add    BYTE PTR [rcx],al
     e40:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66010e46 <_end+0x6600ae2e>
     e46:	00 00                	add    BYTE PTR [rax],al
     e48:	00 00                	add    BYTE PTR [rax],al
     e4a:	0b db                	or     ebx,ebx
     e4c:	25 00 00 9b 03       	and    eax,0x39b0000
     e51:	0c 66                	or     al,0x66
     e53:	00 00                	add    BYTE PTR [rax],al
     e55:	00 74 05 00          	add    BYTE PTR [rbp+rax*1+0x0],dh
     e59:	00 01                	add    BYTE PTR [rcx],al
     e5b:	f5                   	cmc
     e5c:	00 00                	add    BYTE PTR [rax],al
     e5e:	00 00                	add    BYTE PTR [rax],al
     e60:	0d e1 01 00 00       	or     eax,0x1e1
     e65:	0c 8f                	or     al,0x8f
     e67:	01 2e                	add    DWORD PTR [rsi],ebp
     e69:	00 00                	add    BYTE PTR [rax],al
     e6b:	00 94 05 00 00 01 35 	add    BYTE PTR [rbp+rax*1+0x35010000],dl
     e72:	01 00                	add    DWORD PTR [rax],eax
     e74:	00 01                	add    BYTE PTR [rcx],al
     e76:	94                   	xchg   esp,eax
     e77:	05 00 00 01 2e       	add    eax,0x2e010000
     e7c:	00 00                	add    BYTE PTR [rax],al
     e7e:	00 00                	add    BYTE PTR [rax],al
     e80:	08 80 04 00 00 0d    	or     BYTE PTR [rax+0xd000004],al
     e86:	42 02 00             	rex.X add al,BYTE PTR [rax]
     e89:	00 0c 4f             	add    BYTE PTR [rdi+rcx*2],cl
     e8c:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     e8f:	00 00                	add    BYTE PTR [rax],al
     e91:	b4 05                	mov    ah,0x5
     e93:	00 00                	add    BYTE PTR [rax],al
     e95:	01 35 01 00 00 01    	add    DWORD PTR [rip+0x1000001],esi        # 1000e9c <_end+0xffae84>
     e9b:	79 04                	jns    ea1 <__abi_tag+0xb25>
     e9d:	00 00                	add    BYTE PTR [rax],al
     e9f:	00 45 12             	add    BYTE PTR [rbp+0x12],al
     ea2:	02 00                	add    al,BYTE PTR [rax]
     ea4:	00 14 57             	add    BYTE PTR [rdi+rdx*2],dl
     ea7:	01 0b                	add    DWORD PTR [rbx],ecx
     ea9:	13 06                	adc    eax,DWORD PTR [rsi]
     eab:	00 00                	add    BYTE PTR [rax],al
     ead:	02 08                	add    cl,BYTE PTR [rax]
     eaf:	cc                   	int3
     eb0:	0b e2                	or     esp,edx
     eb2:	00 00                	add    BYTE PTR [rax],al
     eb4:	00 02                	add    BYTE PTR [rdx],al
     eb6:	08 dc                	or     ah,bl
     eb8:	0b 13                	or     edx,DWORD PTR [rbx]
     eba:	06                   	(bad)
     ebb:	00 00                	add    BYTE PTR [rax],al
     ebd:	02 08                	add    cl,BYTE PTR [rax]
     ebf:	e7 0b                	out    0xb,eax
     ec1:	2e 06                	cs (bad)
     ec3:	00 00                	add    BYTE PTR [rax],al
     ec5:	02 08                	add    cl,BYTE PTR [rax]
     ec7:	e8 0b 44 06 00       	call   652d7 <_end+0x5f2bf>
     ecc:	00 02                	add    BYTE PTR [rdx],al
     ece:	08 e9                	or     cl,ch
     ed0:	0b 68 06             	or     ebp,DWORD PTR [rax+0x6]
     ed3:	00 00                	add    BYTE PTR [rax],al
     ed5:	02 08                	add    cl,BYTE PTR [rax]
     ed7:	eb 0b                	jmp    ee4 <__abi_tag+0xb68>
     ed9:	8c 06                	mov    WORD PTR [rsi],es
     edb:	00 00                	add    BYTE PTR [rax],al
     edd:	02 08                	add    cl,BYTE PTR [rax]
     edf:	ec                   	in     al,dx
     ee0:	0b ae 06 00 00 2d    	or     ebp,DWORD PTR [rsi+0x2d000006]
     ee6:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
     eed:	00 
     eee:	00 e2                	add    dl,ah
     ef0:	00 00                	add    BYTE PTR [rax],al
     ef2:	00 01                	add    BYTE PTR [rcx],al
     ef4:	db 00                	fild   DWORD PTR [rax]
     ef6:	00 00                	add    BYTE PTR [rax],al
     ef8:	01 db                	add    ebx,ebx
     efa:	00 00                	add    BYTE PTR [rax],al
     efc:	00 00                	add    BYTE PTR [rax],al
     efe:	00 0b                	add    BYTE PTR [rbx],cl
     f00:	c2 02 00             	ret    0x2
     f03:	00 e6                	add    dh,ah
     f05:	03 1e                	add    ebx,DWORD PTR [rsi]
     f07:	e2 00                	loop   f09 <__abi_tag+0xb8d>
     f09:	00 00                	add    BYTE PTR [rax],al
     f0b:	2e 06                	cs (bad)
     f0d:	00 00                	add    BYTE PTR [rax],al
     f0f:	01 db                	add    ebx,ebx
     f11:	00 00                	add    BYTE PTR [rax],al
     f13:	00 01                	add    BYTE PTR [rcx],al
     f15:	db 00                	fild   DWORD PTR [rax]
     f17:	00 00                	add    BYTE PTR [rax],al
     f19:	00 0b                	add    BYTE PTR [rbx],cl
     f1b:	2d 02 00 00 ed       	sub    eax,0xed000002
     f20:	01 01                	add    DWORD PTR [rcx],eax
     f22:	db 00                	fild   DWORD PTR [rax]
     f24:	00 00                	add    BYTE PTR [rax],al
     f26:	44 06                	rex.R (bad)
     f28:	00 00                	add    BYTE PTR [rax],al
     f2a:	01 f5                	add    ebp,esi
     f2c:	00 00                	add    BYTE PTR [rax],al
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	12 88 00 00 00 06    	adc    cl,BYTE PTR [rax+0x6000000]
     f36:	ee                   	out    dx,al
     f37:	16                   	(bad)
     f38:	7f 00                	jg     f3a <__abi_tag+0xbbe>
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	db 00                	fild   DWORD PTR [rax]
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	68 06 00 00 01       	push   0x1000006
     f45:	f5                   	cmc
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	00 01                	add    BYTE PTR [rcx],al
     f4a:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66010f50 <_end+0x6600af38>
     f50:	00 00                	add    BYTE PTR [rax],al
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	12 b9 02 00 00 06    	adc    bh,BYTE PTR [rcx+0x6000002]
     f5a:	f3 1f                	repz (bad)
     f5c:	b0 02                	mov    al,0x2
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	3f                   	(bad)
     f61:	01 00                	add    DWORD PTR [rax],eax
     f63:	00 8c 06 00 00 01 f5 	add    BYTE PTR [rsi+rax*1-0xaff0000],cl
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	00 01                	add    BYTE PTR [rcx],al
     f6e:	11 05 00 00 01 66    	adc    DWORD PTR [rip+0x66010000],eax        # 66010f74 <_end+0x6600af5c>
     f74:	00 00                	add    BYTE PTR [rax],al
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	0d 97 02 00 00       	or     eax,0x297
     f7d:	06                   	(bad)
     f7e:	7c 0e                	jl     f8e <__abi_tag+0xc12>
     f80:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     f81:	06                   	(bad)
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     f85:	06                   	(bad)
     f86:	00 00                	add    BYTE PTR [rax],al
     f88:	01 f5                	add    ebp,esi
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	00 01                	add    BYTE PTR [rcx],al
     f8e:	11 05 00 00 00 04    	adc    DWORD PTR [rip+0x4000000],eax        # 4000f94 <_end+0x3ffaf7c>
     f94:	04 04                	add    al,0x4
     f96:	d3 00                	rol    DWORD PTR [rax],cl
     f98:	00 00                	add    BYTE PTR [rax],al
     f9a:	0d 2b 00 00 00       	or     eax,0x2b
     f9f:	06                   	(bad)
     fa0:	7f 14                	jg     fb6 <__abi_tag+0xc3a>
     fa2:	c9                   	leave
     fa3:	06                   	(bad)
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	c9                   	leave
     fa7:	06                   	(bad)
     fa8:	00 00                	add    BYTE PTR [rax],al
     faa:	01 f5                	add    ebp,esi
     fac:	00 00                	add    BYTE PTR [rax],al
     fae:	00 01                	add    BYTE PTR [rcx],al
     fb0:	11 05 00 00 00 04    	adc    DWORD PTR [rip+0x4000000],eax        # 4000fb6 <_end+0x3ffaf9e>
     fb6:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
     fb9:	01 00                	add    DWORD PTR [rax],eax
     fbb:	00 02                	add    BYTE PTR [rdx],al
     fbd:	0d 27 0c 42 03       	or     eax,0x3420c27
     fc2:	00 00                	add    BYTE PTR [rax],al
     fc4:	02 0d 2b 0e 5e 03    	add    cl,BYTE PTR [rip+0x35e0e2b]        # 35e1df5 <_end+0x35dbddd>
     fca:	00 00                	add    BYTE PTR [rax],al
     fcc:	02 0d 2e 0e c5 04    	add    cl,BYTE PTR [rip+0x4c50e2e]        # 4c51e00 <_end+0x4c4bde8>
     fd2:	00 00                	add    BYTE PTR [rax],al
     fd4:	02 0d 36 0c 72 00    	add    cl,BYTE PTR [rip+0x720c36]        # 721c10 <_end+0x71bbf8>
     fda:	00 00                	add    BYTE PTR [rax],al
     fdc:	02 0d 37 0c aa 00    	add    cl,BYTE PTR [rip+0xaa0c37]        # aa1c19 <_end+0xa9bc01>
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 10                	add    al,0x10
     fe6:	04 8c                	add    al,0x8c
     fe8:	02 00                	add    al,BYTE PTR [rax]
     fea:	00 02                	add    BYTE PTR [rdx],al
     fec:	0d 39 0c 80 02       	or     eax,0x2800c39
     ff1:	00 00                	add    BYTE PTR [rax],al
     ff3:	04 10                	add    al,0x10
     ff5:	05 ea 01 00 00       	add    eax,0x1ea
     ffa:	02 0d 39 0c 98 02    	add    cl,BYTE PTR [rip+0x2980c39]        # 2981c39 <_end+0x297bc21>
    1000:	00 00                	add    BYTE PTR [rax],al
    1002:	02 0d 39 0c b0 02    	add    cl,BYTE PTR [rip+0x2b00c39]        # 2b01c41 <_end+0x2afbc29>
    1008:	00 00                	add    BYTE PTR [rax],al
    100a:	02 0d 39 0c c8 02    	add    cl,BYTE PTR [rip+0x2c80c39]        # 2c81c49 <_end+0x2c7bc31>
    1010:	00 00                	add    BYTE PTR [rax],al
    1012:	02 0d 39 0c e0 02    	add    cl,BYTE PTR [rip+0x2e00c39]        # 2e01c51 <_end+0x2dfbc39>
    1018:	00 00                	add    BYTE PTR [rax],al
    101a:	02 0d 39 0c f8 02    	add    cl,BYTE PTR [rip+0x2f80c39]        # 2f81c59 <_end+0x2f7bc41>
    1020:	00 00                	add    BYTE PTR [rax],al
    1022:	02 0d 39 0c 10 03    	add    cl,BYTE PTR [rip+0x3100c39]        # 3101c61 <_end+0x30fbc49>
    1028:	00 00                	add    BYTE PTR [rax],al
    102a:	02 0d 3a 0c 79 03    	add    cl,BYTE PTR [rip+0x3790c3a]        # 3791c6a <_end+0x378bc52>
    1030:	00 00                	add    BYTE PTR [rax],al
    1032:	02 0d 3b 0c 96 03    	add    cl,BYTE PTR [rip+0x3960c3b]        # 3961c73 <_end+0x395bc5b>
    1038:	00 00                	add    BYTE PTR [rax],al
    103a:	02 0d 3c 0c ac 03    	add    cl,BYTE PTR [rip+0x3ac0c3c]        # 3ac1c7c <_end+0x3abbc64>
    1040:	00 00                	add    BYTE PTR [rax],al
    1042:	02 0d 3d 0c c2 03    	add    cl,BYTE PTR [rip+0x3c20c3d]        # 3c21c85 <_end+0x3c1bc6d>
    1048:	00 00                	add    BYTE PTR [rax],al
    104a:	02 0d 3f 0c f9 05    	add    cl,BYTE PTR [rip+0x5f90c3f]        # 5f91c8f <_end+0x5f8bc77>
    1050:	00 00                	add    BYTE PTR [rax],al
    1052:	02 0d 3f 0c 28 03    	add    cl,BYTE PTR [rip+0x3280c3f]        # 3281c97 <_end+0x327bc7f>
    1058:	00 00                	add    BYTE PTR [rax],al
    105a:	02 0d 3f 0c ec 03    	add    cl,BYTE PTR [rip+0x3ec0c3f]        # 3ec1c9f <_end+0x3ebbc87>
    1060:	00 00                	add    BYTE PTR [rax],al
    1062:	02 0d 41 0c 08 04    	add    cl,BYTE PTR [rip+0x4080c41]        # 4081ca9 <_end+0x407bc91>
    1068:	00 00                	add    BYTE PTR [rax],al
    106a:	02 0d 43 0c 1e 04    	add    cl,BYTE PTR [rip+0x41e0c43]        # 41e1cb3 <_end+0x41dbc9b>
    1070:	00 00                	add    BYTE PTR [rax],al
    1072:	02 0d 46 0c 39 04    	add    cl,BYTE PTR [rip+0x4390c46]        # 4391cbe <_end+0x438bca6>
    1078:	00 00                	add    BYTE PTR [rax],al
    107a:	02 0d 47 0c 54 04    	add    cl,BYTE PTR [rip+0x4540c47]        # 4541cc7 <_end+0x453bcaf>
    1080:	00 00                	add    BYTE PTR [rax],al
    1082:	02 0d 48 0c 85 04    	add    cl,BYTE PTR [rip+0x4850c48]        # 4851cd0 <_end+0x484bcb8>
    1088:	00 00                	add    BYTE PTR [rax],al
    108a:	02 0d 4a 0c a5 04    	add    cl,BYTE PTR [rip+0x4a50c4a]        # 4a51cda <_end+0x4a4bcc2>
    1090:	00 00                	add    BYTE PTR [rax],al
    1092:	02 0d 4b 0c d8 04    	add    cl,BYTE PTR [rip+0x4d80c4b]        # 4d81ce3 <_end+0x4d7bccb>
    1098:	00 00                	add    BYTE PTR [rax],al
    109a:	02 0d 4d 0c e5 04    	add    cl,BYTE PTR [rip+0x4e50c4d]        # 4e51ced <_end+0x4e4bcd5>
    10a0:	00 00                	add    BYTE PTR [rax],al
    10a2:	02 0d 4e 0c f6 04    	add    cl,BYTE PTR [rip+0x4f60c4e]        # 4f61cf6 <_end+0x4f5bcde>
    10a8:	00 00                	add    BYTE PTR [rax],al
    10aa:	02 0d 4f 0c 16 05    	add    cl,BYTE PTR [rip+0x5160c4f]        # 5161cff <_end+0x515bce7>
    10b0:	00 00                	add    BYTE PTR [rax],al
    10b2:	02 0d 50 0c 3a 05    	add    cl,BYTE PTR [rip+0x53a0c50]        # 53a1d08 <_end+0x539bcf0>
    10b8:	00 00                	add    BYTE PTR [rax],al
    10ba:	02 0d 51 0c 5e 05    	add    cl,BYTE PTR [rip+0x55e0c51]        # 55e1d11 <_end+0x55dbcf9>
    10c0:	00 00                	add    BYTE PTR [rax],al
    10c2:	02 0d 53 0c 74 05    	add    cl,BYTE PTR [rip+0x5740c53]        # 5741d1b <_end+0x573bd03>
    10c8:	00 00                	add    BYTE PTR [rax],al
    10ca:	02 0d 54 0c 99 05    	add    cl,BYTE PTR [rip+0x5990c54]        # 5991d24 <_end+0x598bd0c>
    10d0:	00 00                	add    BYTE PTR [rax],al
    10d2:	04 10                	add    al,0x10
    10d4:	07                   	(bad)
    10d5:	1b 07                	sbb    eax,DWORD PTR [rdi]
    10d7:	00 00                	add    BYTE PTR [rax],al
    10d9:	04 02                	add    al,0x2
    10db:	04 00                	add    al,0x0
    10dd:	00 00                	add    BYTE PTR [rax],al
    10df:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    10e2:	04 c8                	add    al,0xc8
    10e4:	02 00                	add    al,BYTE PTR [rax]
    10e6:	00 0a                	add    BYTE PTR [rdx],cl
    10e8:	ab                   	stos   DWORD PTR es:[rdi],eax
    10e9:	00 00                	add    BYTE PTR [rax],al
    10eb:	00 0e                	add    BYTE PTR [rsi],cl
    10ed:	1a 14 27             	sbb    dl,BYTE PTR [rdi+riz*1]
    10f0:	01 00                	add    DWORD PTR [rax],eax
    10f2:	00 1a                	add    BYTE PTR [rdx],bl
    10f4:	21 08                	and    DWORD PTR [rax],ecx
    10f6:	00 00                	add    BYTE PTR [rax],al
    10f8:	10 0f                	adc    BYTE PTR [rdi],cl
    10fa:	07                   	(bad)
    10fb:	3b 08                	cmp    ecx,DWORD PTR [rax]
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	06                   	(bad)
    1100:	8f 03                	pop    QWORD PTR [rbx]
    1102:	00 00                	add    BYTE PTR [rax],al
    1104:	0f 08                	invd
    1106:	0b 35 01 00 00 00    	or     esi,DWORD PTR [rip+0x1]        # 110d <free@plt+0xd>
    110c:	06                   	(bad)
    110d:	ae                   	scas   al,BYTE PTR es:[rdi]
    110e:	05 00 00 0f 09       	add    eax,0x90f0000
    1113:	0e                   	(bad)
    1114:	fb                   	sti
    1115:	07                   	(bad)
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	08 06                	or     BYTE PTR [rsi],al
    111a:	b3 05                	mov    bl,0x5
    111c:	00 00                	add    BYTE PTR [rax],al
    111e:	0f 0a                	(bad)
    1120:	0e                   	(bad)
    1121:	fb                   	sti
    1122:	07                   	(bad)
    1123:	00 00                	add    BYTE PTR [rax],al
    1125:	0c 00                	or     al,0x0
    1127:	0a 21                	or     ah,BYTE PTR [rcx]
    1129:	08 00                	or     BYTE PTR [rax],al
    112b:	00 0f                	add    BYTE PTR [rdi],cl
    112d:	0b 03                	or     eax,DWORD PTR [rbx]
    112f:	07                   	(bad)
    1130:	08 00                	or     BYTE PTR [rax],al
    1132:	00 1b                	add    BYTE PTR [rbx],bl
    1134:	69 02 00 00 10 08    	imul   eax,DWORD PTR [rdx],0x8100000
    113a:	6d                   	ins    DWORD PTR es:[rdi],dx
    113b:	00 00                	add    BYTE PTR [rax],al
    113d:	00 0f                	add    BYTE PTR [rdi],cl
    113f:	1b 75 02             	sbb    esi,DWORD PTR [rbp+0x2]
    1142:	00 00                	add    BYTE PTR [rax],al
    1144:	10 09                	adc    BYTE PTR [rcx],cl
    1146:	6d                   	ins    DWORD PTR es:[rdi],dx
    1147:	00 00                	add    BYTE PTR [rax],al
    1149:	00 02                	add    BYTE PTR [rdx],al
    114b:	1b c4                	sbb    eax,esp
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	00 10                	add    BYTE PTR [rax],dl
    1151:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    1154:	00 00                	add    BYTE PTR [rax],al
    1156:	20 0a                	and    BYTE PTR [rdx],cl
    1158:	22 03                	and    al,BYTE PTR [rbx]
    115a:	00 00                	add    BYTE PTR [rax],al
    115c:	10 0c 12             	adc    BYTE PTR [rdx+rdx*1],cl
    115f:	3b 08                	cmp    ecx,DWORD PTR [rax]
    1161:	00 00                	add    BYTE PTR [rax],al
    1163:	0a 14 07             	or     dl,BYTE PTR [rdi+rax*1]
    1166:	00 00                	add    BYTE PTR [rax],al
    1168:	10 0d 14 83 08 00    	adc    BYTE PTR [rip+0x88314],cl        # 89482 <_end+0x8346a>
    116e:	00 08                	add    BYTE PTR [rax],cl
    1170:	88 08                	mov    BYTE PTR [rax],cl
    1172:	00 00                	add    BYTE PTR [rax],al
    1174:	2c fb                	sub    al,0xfb
    1176:	07                   	(bad)
    1177:	00 00                	add    BYTE PTR [rax],al
    1179:	97                   	xchg   edi,eax
    117a:	08 00                	or     BYTE PTR [rax],al
    117c:	00 01                	add    BYTE PTR [rcx],al
    117e:	6b 08 00             	imul   ecx,DWORD PTR [rax],0x0
    1181:	00 00                	add    BYTE PTR [rax],al
    1183:	1a 07                	sbb    al,BYTE PTR [rdi]
    1185:	05 00 00 20 10       	add    eax,0x10200000
    118a:	0f d8 08             	psubusb mm1,QWORD PTR [rax]
    118d:	00 00                	add    BYTE PTR [rax],al
    118f:	06                   	(bad)
    1190:	dd 05 00 00 10 10    	fld    QWORD PTR [rip+0x10100000]        # 10101196 <_end+0x100fb17e>
    1196:	0e                   	(bad)
    1197:	fb                   	sti
    1198:	07                   	(bad)
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	00 06                	add    BYTE PTR [rsi],al
    119d:	5a                   	pop    rdx
    119e:	04 00                	add    al,0x0
    11a0:	00 10                	add    BYTE PTR [rax],dl
    11a2:	11 0e                	adc    DWORD PTR [rsi],ecx
    11a4:	fb                   	sti
    11a5:	07                   	(bad)
    11a6:	00 00                	add    BYTE PTR [rax],al
    11a8:	04 06                	add    al,0x6
    11aa:	99                   	cdq
    11ab:	05 00 00 10 13       	add    eax,0x13100000
    11b0:	0e                   	(bad)
    11b1:	fb                   	sti
    11b2:	07                   	(bad)
    11b3:	00 00                	add    BYTE PTR [rax],al
    11b5:	08 06                	or     BYTE PTR [rsi],al
    11b7:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    11ba:	00 10                	add    BYTE PTR [rax],dl
    11bc:	15 0c 6b 08 00       	adc    eax,0x86b0c
    11c1:	00 10                	add    BYTE PTR [rax],dl
    11c3:	00 0a                	add    BYTE PTR [rdx],cl
    11c5:	07                   	(bad)
    11c6:	05 00 00 10 16       	add    eax,0x16100000
    11cb:	03 97 08 00 00 1a    	add    edx,DWORD PTR [rdi+0x1a000008]
    11d1:	ae                   	scas   al,BYTE PTR es:[rdi]
    11d2:	03 00                	add    eax,DWORD PTR [rax]
    11d4:	00 18                	add    BYTE PTR [rax],bl
    11d6:	10 18                	adc    BYTE PTR [rax],bl
    11d8:	25 09 00 00 06       	and    eax,0x6000009
    11dd:	a1 05 00 00 10 19 0f 	movabs eax,ds:0x9250f1910000005
    11e4:	25 09 
    11e6:	00 00                	add    BYTE PTR [rax],al
    11e8:	00 06                	add    BYTE PTR [rsi],al
    11ea:	33 05 00 00 10 1a    	xor    eax,DWORD PTR [rip+0x1a100000]        # 1a1011f0 <_end+0x1a0fb1d8>
    11f0:	0e                   	(bad)
    11f1:	fb                   	sti
    11f2:	07                   	(bad)
    11f3:	00 00                	add    BYTE PTR [rax],al
    11f5:	08 06                	or     BYTE PTR [rsi],al
    11f7:	19 03                	sbb    DWORD PTR [rbx],eax
    11f9:	00 00                	add    BYTE PTR [rax],al
    11fb:	10 1b                	adc    BYTE PTR [rbx],bl
    11fd:	0e                   	(bad)
    11fe:	fb                   	sti
    11ff:	07                   	(bad)
    1200:	00 00                	add    BYTE PTR [rax],al
    1202:	0c 06                	or     al,0x6
    1204:	55                   	push   rbp
    1205:	03 00                	add    eax,DWORD PTR [rax]
    1207:	00 10                	add    BYTE PTR [rax],dl
    1209:	1c 0e                	sbb    al,0xe
    120b:	fb                   	sti
    120c:	07                   	(bad)
    120d:	00 00                	add    BYTE PTR [rax],al
    120f:	10 00                	adc    BYTE PTR [rax],al
    1211:	08 d8                	or     al,bl
    1213:	08 00                	or     BYTE PTR [rax],al
    1215:	00 0a                	add    BYTE PTR [rdx],cl
    1217:	ae                   	scas   al,BYTE PTR es:[rdi]
    1218:	03 00                	add    eax,DWORD PTR [rax]
    121a:	00 10                	add    BYTE PTR [rax],dl
    121c:	1d 03 e4 08 00       	sbb    eax,0x8e403
    1221:	00 1a                	add    BYTE PTR [rdx],bl
    1223:	52                   	push   rdx
    1224:	04 00                	add    al,0x0
    1226:	00 18                	add    BYTE PTR [rax],bl
    1228:	10 1f                	adc    BYTE PTR [rdi],bl
    122a:	77 09                	ja     1235 <_start+0x25>
    122c:	00 00                	add    BYTE PTR [rax],al
    122e:	06                   	(bad)
    122f:	b4 04                	mov    ah,0x4
    1231:	00 00                	add    BYTE PTR [rax],al
    1233:	10 20                	adc    BYTE PTR [rax],ah
    1235:	0b 77 09             	or     esi,DWORD PTR [rdi+0x9]
    1238:	00 00                	add    BYTE PTR [rax],al
    123a:	00 06                	add    BYTE PTR [rsi],al
    123c:	19 03                	sbb    DWORD PTR [rbx],eax
    123e:	00 00                	add    BYTE PTR [rax],al
    1240:	10 21                	adc    BYTE PTR [rcx],ah
    1242:	0e                   	(bad)
    1243:	fb                   	sti
    1244:	07                   	(bad)
    1245:	00 00                	add    BYTE PTR [rax],al
    1247:	08 06                	or     BYTE PTR [rsi],al
    1249:	08 07                	or     BYTE PTR [rdi],al
    124b:	00 00                	add    BYTE PTR [rax],al
    124d:	10 22                	adc    BYTE PTR [rdx],ah
    124f:	0b a7 06 00 00 0c    	or     esp,DWORD PTR [rdi+0xc000006]
    1255:	06                   	(bad)
    1256:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    1259:	00 10                	add    BYTE PTR [rax],dl
    125b:	23 0c 77             	and    ecx,DWORD PTR [rdi+rsi*2]
    125e:	08 00                	or     BYTE PTR [rax],al
    1260:	00 10                	add    BYTE PTR [rax],dl
    1262:	00 08                	add    BYTE PTR [rax],cl
    1264:	2a 09                	sub    cl,BYTE PTR [rcx]
    1266:	00 00                	add    BYTE PTR [rax],al
    1268:	0a 52 04             	or     dl,BYTE PTR [rdx+0x4]
    126b:	00 00                	add    BYTE PTR [rax],al
    126d:	10 24 03             	adc    BYTE PTR [rbx+rax*1],ah
    1270:	36 09 00             	ss or  DWORD PTR [rax],eax
    1273:	00 1b                	add    BYTE PTR [rbx],bl
    1275:	c1 06 00             	rol    DWORD PTR [rsi],0x0
    1278:	00 11                	add    BYTE PTR [rcx],dl
    127a:	06                   	(bad)
    127b:	6d                   	ins    DWORD PTR es:[rdi],dx
    127c:	00 00                	add    BYTE PTR [rax],al
    127e:	00 04 0d e8 03 00 00 	add    BYTE PTR [rcx*1+0x3e8],al
    1285:	12 34 0c             	adc    dh,BYTE PTR [rsp+rcx*1]
    1288:	66 00 00             	data16 add BYTE PTR [rax],al
    128b:	00 b0 09 00 00 01    	add    BYTE PTR [rax+0x1000009],dh
    1291:	66 00 00             	data16 add BYTE PTR [rax],al
    1294:	00 01                	add    BYTE PTR [rcx],al
    1296:	f5                   	cmc
    1297:	00 00                	add    BYTE PTR [rax],al
    1299:	00 2e                	add    BYTE PTR [rsi],ch
    129b:	00 2f                	add    BYTE PTR [rdi],ch
    129d:	d0 04 00             	rol    BYTE PTR [rax+rax*1],1
    12a0:	00 0e                	add    BYTE PTR [rsi],cl
    12a2:	29 03                	sub    DWORD PTR [rbx],eax
    12a4:	00 00                	add    BYTE PTR [rax],al
    12a6:	c4                   	(bad)
    12a7:	09 00                	or     DWORD PTR [rax],eax
    12a9:	00 01                	add    BYTE PTR [rcx],al
    12ab:	77 09                	ja     12b6 <__do_global_dtors_aux+0x6>
    12ad:	00 00                	add    BYTE PTR [rax],al
    12af:	00 24 9c             	add    BYTE PTR [rsp+rbx*4],ah
    12b2:	03 00                	add    eax,DWORD PTR [rax]
    12b4:	00 af 02 d5 09 00    	add    BYTE PTR [rdi+0x9d502],ch
    12ba:	00 01                	add    BYTE PTR [rcx],al
    12bc:	33 01                	xor    eax,DWORD PTR [rcx]
    12be:	00 00                	add    BYTE PTR [rax],al
    12c0:	00 2f                	add    BYTE PTR [rdi],ch
    12c2:	63 04 00             	movsxd eax,DWORD PTR [rax+rax*1]
    12c5:	00 0c a1             	add    BYTE PTR [rcx+riz*4],cl
    12c8:	03 00                	add    eax,DWORD PTR [rax]
    12ca:	00 e9                	add    cl,ch
    12cc:	09 00                	or     DWORD PTR [rax],eax
    12ce:	00 01                	add    BYTE PTR [rcx],al
    12d0:	77 09                	ja     12db <__do_global_dtors_aux+0x2b>
    12d2:	00 00                	add    BYTE PTR [rax],al
    12d4:	00 12                	add    BYTE PTR [rdx],dl
    12d6:	3c 05                	cmp    al,0x5
    12d8:	00 00                	add    BYTE PTR [rax],al
    12da:	11 0b                	adc    DWORD PTR [rbx],ecx
    12dc:	05 db 04 00 00       	add    eax,0x4db
    12e1:	66 00 00             	data16 add BYTE PTR [rax],al
    12e4:	00 08                	add    BYTE PTR [rax],cl
    12e6:	0a 00                	or     al,BYTE PTR [rax]
    12e8:	00 01                	add    BYTE PTR [rcx],al
    12ea:	77 09                	ja     12f5 <frame_dummy+0x5>
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	01 6b 08             	add    DWORD PTR [rbx+0x8],ebp
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	00 12                	add    BYTE PTR [rdx],dl
    12f5:	f5                   	cmc
    12f6:	03 00                	add    eax,DWORD PTR [rax]
    12f8:	00 11                	add    BYTE PTR [rcx],dl
    12fa:	0a 05 1b 06 00 00    	or     al,BYTE PTR [rip+0x61b]        # 191b <_Z11hashMapDtorP7HashMap+0x4b>
    1300:	66 00 00             	data16 add BYTE PTR [rax],al
    1303:	00 27                	add    BYTE PTR [rdi],ah
    1305:	0a 00                	or     al,BYTE PTR [rax]
    1307:	00 01                	add    BYTE PTR [rcx],al
    1309:	77 09                	ja     1314 <_Z16buildStringArrayPcj+0x14>
    130b:	00 00                	add    BYTE PTR [rax],al
    130d:	01 6b 08             	add    DWORD PTR [rbx+0x8],ebp
    1310:	00 00                	add    BYTE PTR [rax],al
    1312:	00 12                	add    BYTE PTR [rdx],dl
    1314:	03 05 00 00 11 09    	add    eax,DWORD PTR [rip+0x9110000]        # 911131a <_end+0x910b302>
    131a:	05 3a 06 00 00       	add    eax,0x63a
    131f:	66 00 00             	data16 add BYTE PTR [rax],al
    1322:	00 46 0a             	add    BYTE PTR [rsi+0xa],al
    1325:	00 00                	add    BYTE PTR [rax],al
    1327:	01 77 09             	add    DWORD PTR [rdi+0x9],esi
    132a:	00 00                	add    BYTE PTR [rax],al
    132c:	01 6b 08             	add    DWORD PTR [rbx+0x8],ebp
    132f:	00 00                	add    BYTE PTR [rax],al
    1331:	00 46 ba             	add    BYTE PTR [rsi-0x46],al
    1334:	04 00                	add    al,0x0
    1336:	00 11                	add    BYTE PTR [rcx],dl
    1338:	08 06                	or     BYTE PTR [rsi],al
    133a:	c3                   	ret
    133b:	04 00                	add    al,0x0
    133d:	00 2a                	add    BYTE PTR [rdx],ch
    133f:	09 00                	or     DWORD PTR [rax],eax
    1341:	00 0b                	add    BYTE PTR [rbx],cl
    1343:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1344:	04 00                	add    al,0x0
    1346:	00 d4                	add    ah,dl
    1348:	02 0e                	add    cl,BYTE PTR [rsi]
    134a:	33 01                	xor    eax,DWORD PTR [rcx]
    134c:	00 00                	add    BYTE PTR [rax],al
    134e:	71 0a                	jno    135a <_Z16buildStringArrayPcj+0x5a>
    1350:	00 00                	add    BYTE PTR [rax],al
    1352:	01 2e                	add    DWORD PTR [rsi],ebp
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 01                	add    BYTE PTR [rcx],al
    1358:	2e 00 00             	cs add BYTE PTR [rax],al
    135b:	00 00                	add    BYTE PTR [rax],al
    135d:	0b 5a 06             	or     ebx,DWORD PTR [rdx+0x6]
    1360:	00 00                	add    BYTE PTR [rax],al
    1362:	a3 02 0e 33 01 00 00 	movabs ds:0xa8c000001330e02,eax
    1369:	8c 0a 
    136b:	00 00                	add    BYTE PTR [rax],al
    136d:	01 2e                	add    DWORD PTR [rsi],ebp
    136f:	00 00                	add    BYTE PTR [rax],al
    1371:	00 01                	add    BYTE PTR [rcx],al
    1373:	2e 00 00             	cs add BYTE PTR [rax],al
    1376:	00 00                	add    BYTE PTR [rax],al
    1378:	47 76 05             	rex.RXB jbe 1380 <_Z16buildStringArrayPcj+0x80>
    137b:	00 00                	add    BYTE PTR [rax],al
    137d:	13 45 0d             	adc    eax,DWORD PTR [rbp+0xd]
    1380:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1381:	0a 00                	or     al,BYTE PTR [rax]
    1383:	00 01                	add    BYTE PTR [rcx],al
    1385:	f5                   	cmc
    1386:	00 00                	add    BYTE PTR [rax],al
    1388:	00 01                	add    BYTE PTR [rcx],al
    138a:	f5                   	cmc
    138b:	00 00                	add    BYTE PTR [rax],al
    138d:	00 01                	add    BYTE PTR [rcx],al
    138f:	12 01                	adc    al,BYTE PTR [rcx]
    1391:	00 00                	add    BYTE PTR [rax],al
    1393:	01 f5                	add    ebp,esi
    1395:	00 00                	add    BYTE PTR [rax],al
    1397:	00 00                	add    BYTE PTR [rax],al
    1399:	48 21 05 00 00 01 ba 	and    QWORD PTR [rip+0xffffffffba010000],rax        # ffffffffba0113a0 <_end+0xffffffffba00b388>
    13a0:	06                   	(bad)
    13a1:	0b 04 00             	or     eax,DWORD PTR [rax+rax*1]
    13a4:	00 40 19             	add    BYTE PTR [rax+0x19],al
    13a7:	00 00                	add    BYTE PTR [rax],al
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	00 00                	add    BYTE PTR [rax],al
    13ad:	be 00 00 00 00       	mov    esi,0x0
    13b2:	00 00                	add    BYTE PTR [rax],al
    13b4:	00 01                	add    BYTE PTR [rcx],al
    13b6:	9c                   	pushf
    13b7:	f6 0c 00 00          	test   BYTE PTR [rax+rax*1],0x0
    13bb:	0e                   	(bad)
    13bc:	5d                   	pop    rbp
    13bd:	05 00 00 ba 21       	add    eax,0x21ba0000
    13c2:	f6 0c 00 00          	test   BYTE PTR [rax+rax*1],0x0
    13c6:	65 00 00             	add    BYTE PTR gs:[rax],al
    13c9:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    13cc:	00 00                	add    BYTE PTR [rax],al
    13ce:	30 9e 19 00 00 00    	xor    BYTE PTR [rsi+0x19],bl
    13d4:	00 00                	add    BYTE PTR [rax],al
    13d6:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 13dc <_Z16buildStringArrayPcj+0xdc>
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 67 0b             	add    BYTE PTR [rdi+0xb],ah
    13e1:	00 00                	add    BYTE PTR [rax],al
    13e3:	15 69 00 c7 13       	adc    eax,0x13c70069
    13e8:	fb                   	sti
    13e9:	07                   	(bad)
    13ea:	00 00                	add    BYTE PTR [rax],al
    13ec:	8b 00                	mov    eax,DWORD PTR [rax]
    13ee:	00 00                	add    BYTE PTR [rax],al
    13f0:	85 00                	test   DWORD PTR [rax],eax
    13f2:	00 00                	add    BYTE PTR [rax],al
    13f4:	16                   	(bad)
    13f5:	0e                   	(bad)
    13f6:	16                   	(bad)
    13f7:	00 00                	add    BYTE PTR [rax],al
    13f9:	b0 19                	mov    al,0x19
    13fb:	00 00                	add    BYTE PTR [rax],al
    13fd:	00 00                	add    BYTE PTR [rax],al
    13ff:	00 00                	add    BYTE PTR [rax],al
    1401:	01 b0 19 00 00 00    	add    DWORD PTR [rax+0x19],esi
    1407:	00 00                	add    BYTE PTR [rax],al
    1409:	00 11                	add    BYTE PTR [rcx],dl
    140b:	00 00                	add    BYTE PTR [rax],al
    140d:	00 00                	add    BYTE PTR [rax],al
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	00 c8                	add    al,cl
    1413:	0f 59 0b             	mulps  xmm1,XMMWORD PTR [rbx]
    1416:	00 00                	add    BYTE PTR [rax],al
    1418:	05 1d 16 00 00       	add    eax,0x161d
    141d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	00 a4 00 00 00 07 c1 	add    BYTE PTR [rax+rax*1-0x3ef90000],ah
    1427:	19 00                	sbb    DWORD PTR [rax],eax
    1429:	00 00                	add    BYTE PTR [rax],al
    142b:	00 00                	add    BYTE PTR [rax],al
    142d:	00 94 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],dl
    1434:	55                   	push   rbp
    1435:	01 32                	add    DWORD PTR [rdx],esi
    1437:	03 01                	add    eax,DWORD PTR [rcx]
    1439:	54                   	push   rsp
    143a:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    143e:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1441:	73 00                	jae    1443 <_Z11hashMapCtorPFj8string_tEj+0x13>
    1443:	00 00                	add    BYTE PTR [rax],al
    1445:	0c d6                	or     al,0xd6
    1447:	19 00                	sbb    DWORD PTR [rax],eax
    1449:	00 00                	add    BYTE PTR [rax],al
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	00 b0 09 00 00 00    	add    BYTE PTR [rax+0x9],dh
    1453:	13 0e                	adc    ecx,DWORD PTR [rsi]
    1455:	16                   	(bad)
    1456:	00 00                	add    BYTE PTR [rax],al
    1458:	44 19 00             	sbb    DWORD PTR [rax],r8d
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	00 00                	add    BYTE PTR [rax],al
    145f:	00 01                	add    BYTE PTR [rcx],al
    1461:	cb                   	retf
    1462:	00 00                	add    BYTE PTR [rax],al
    1464:	00 bb 0b a1 0b 00    	add    BYTE PTR [rbx+0xba10b],bh
    146a:	00 05 1d 16 00 00    	add    BYTE PTR [rip+0x161d],al        # 2a8d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2d>
    1470:	b9 00 00 00 b7       	mov    ecx,0xb7000000
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 07                	add    BYTE PTR [rdi],al
    1479:	60                   	(bad)
    147a:	19 00                	sbb    DWORD PTR [rax],eax
    147c:	00 00                	add    BYTE PTR [rax],al
    147e:	00 00                	add    BYTE PTR [rax],al
    1480:	00 aa 17 00 00 03    	add    BYTE PTR [rdx+0x3000017],ch
    1486:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1489:	7d 00                	jge    148b <_Z11hashMapCtorPFj8string_tEj+0x5b>
    148b:	00 00                	add    BYTE PTR [rax],al
    148d:	16                   	(bad)
    148e:	0e                   	(bad)
    148f:	16                   	(bad)
    1490:	00 00                	add    BYTE PTR [rax],al
    1492:	69 19 00 00 00 00    	imul   ebx,DWORD PTR [rcx],0x0
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	01 69 19             	add    DWORD PTR [rcx+0x19],ebp
    149d:	00 00                	add    BYTE PTR [rax],al
    149f:	00 00                	add    BYTE PTR [rax],al
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	16                   	(bad)
    14a4:	00 00                	add    BYTE PTR [rax],al
    14a6:	00 00                	add    BYTE PTR [rax],al
    14a8:	00 00                	add    BYTE PTR [rax],al
    14aa:	00 c4                	add    ah,al
    14ac:	0b f3                	or     esi,ebx
    14ae:	0b 00                	or     eax,DWORD PTR [rax]
    14b0:	00 05 1d 16 00 00    	add    BYTE PTR [rip+0x161d],al        # 2ad3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x73>
    14b6:	c8 00 00 00          	enter  0x0,0x0
    14ba:	c6 00 00             	mov    BYTE PTR [rax],0x0
    14bd:	00 07                	add    BYTE PTR [rdi],al
    14bf:	7f 19                	jg     14da <_Z11hashMapCtorPFj8string_tEj+0xaa>
    14c1:	00 00                	add    BYTE PTR [rax],al
    14c3:	00 00                	add    BYTE PTR [rax],al
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	94                   	xchg   esp,eax
    14c8:	09 00                	or     DWORD PTR [rax],eax
    14ca:	00 03                	add    BYTE PTR [rbx],al
    14cc:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    14cf:	32 03                	xor    al,BYTE PTR [rbx]
    14d1:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    14d5:	65 40 00 00          	rex add BYTE PTR gs:[rax],al
    14d9:	00 00                	add    BYTE PTR [rax],al
    14db:	00 00                	add    BYTE PTR [rax],al
    14dd:	00 00                	add    BYTE PTR [rax],al
    14df:	13 0e                	adc    ecx,DWORD PTR [rsi]
    14e1:	16                   	(bad)
    14e2:	00 00                	add    BYTE PTR [rax],al
    14e4:	7f 19                	jg     14ff <_Z17hashMapAddElementP7HashMap8string_t+0x1f>
    14e6:	00 00                	add    BYTE PTR [rax],al
    14e8:	00 00                	add    BYTE PTR [rax],al
    14ea:	00 00                	add    BYTE PTR [rax],al
    14ec:	02 e0                	add    ah,al
    14ee:	00 00                	add    BYTE PTR [rax],al
    14f0:	00 c5                	add    ch,al
    14f2:	0b 39                	or     edi,DWORD PTR [rcx]
    14f4:	0c 00                	or     al,0x0
    14f6:	00 05 1d 16 00 00    	add    BYTE PTR [rip+0x161d],al        # 2b19 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xb9>
    14fc:	db 00                	fild   DWORD PTR [rax]
    14fe:	00 00                	add    BYTE PTR [rax],al
    1500:	d9 00                	fld    DWORD PTR [rax]
    1502:	00 00                	add    BYTE PTR [rax],al
    1504:	07                   	(bad)
    1505:	9e                   	sahf
    1506:	19 00                	sbb    DWORD PTR [rax],eax
    1508:	00 00                	add    BYTE PTR [rax],al
    150a:	00 00                	add    BYTE PTR [rax],al
    150c:	00 94 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],dl
    1513:	55                   	push   rbp
    1514:	01 32                	add    DWORD PTR [rdx],esi
    1516:	03 01                	add    eax,DWORD PTR [rcx]
    1518:	54                   	push   rsp
    1519:	09 03                	or     DWORD PTR [rbx],eax
    151b:	76 40                	jbe    155d <_Z17hashMapAddElementP7HashMap8string_t+0x7d>
	...
    1525:	13 0e                	adc    ecx,DWORD PTR [rsi]
    1527:	16                   	(bad)
    1528:	00 00                	add    BYTE PTR [rax],al
    152a:	db 19                	fistp  DWORD PTR [rcx]
    152c:	00 00                	add    BYTE PTR [rax],al
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	00 00                	add    BYTE PTR [rax],al
    1532:	02 f0                	add    dh,al
    1534:	00 00                	add    BYTE PTR [rax],al
    1536:	00 cb                	add    bl,cl
    1538:	0b 7a 0c             	or     edi,DWORD PTR [rdx+0xc]
    153b:	00 00                	add    BYTE PTR [rax],al
    153d:	05 1d 16 00 00       	add    eax,0x161d
    1542:	ee                   	out    dx,al
    1543:	00 00                	add    BYTE PTR [rax],al
    1545:	00 ec                	add    ah,ch
    1547:	00 00                	add    BYTE PTR [rax],al
    1549:	00 49 ed             	add    BYTE PTR [rcx-0x13],cl
    154c:	19 00                	sbb    DWORD PTR [rax],eax
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	00 00                	add    BYTE PTR [rax],al
    1552:	00 aa 17 00 00 03    	add    BYTE PTR [rdx+0x3000017],ch
    1558:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    155b:	03 45 40             	add    eax,DWORD PTR [rbp+0x40]
	...
    1566:	16                   	(bad)
    1567:	0e                   	(bad)
    1568:	16                   	(bad)
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	f0 19 00             	lock sbb DWORD PTR [rax],eax
    156e:	00 00                	add    BYTE PTR [rax],al
    1570:	00 00                	add    BYTE PTR [rax],al
    1572:	00 02                	add    BYTE PTR [rdx],al
    1574:	f0 19 00             	lock sbb DWORD PTR [rax],eax
    1577:	00 00                	add    BYTE PTR [rax],al
    1579:	00 00                	add    BYTE PTR [rax],al
    157b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    157e:	00 00                	add    BYTE PTR [rax],al
    1580:	00 00                	add    BYTE PTR [rax],al
    1582:	00 00                	add    BYTE PTR [rax],al
    1584:	be 0f c7 0c 00       	mov    esi,0xcc70f
    1589:	00 05 1d 16 00 00    	add    BYTE PTR [rip+0x161d],al        # 2bac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x14c>
    158f:	fd                   	std
    1590:	00 00                	add    BYTE PTR [rax],al
    1592:	00 fb                	add    bl,bh
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	00 07                	add    BYTE PTR [rdi],al
    1598:	fc                   	cld
    1599:	19 00                	sbb    DWORD PTR [rax],eax
    159b:	00 00                	add    BYTE PTR [rax],al
    159d:	00 00                	add    BYTE PTR [rax],al
    159f:	00 aa 17 00 00 03    	add    BYTE PTR [rdx+0x3000017],ch
    15a5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    15a8:	03 60 40             	add    esp,DWORD PTR [rax+0x40]
	...
    15b3:	4a 0e                	rex.WX (bad)
    15b5:	16                   	(bad)
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	fc                   	cld
    15b9:	19 00                	sbb    DWORD PTR [rax],eax
    15bb:	00 00                	add    BYTE PTR [rax],al
    15bd:	00 00                	add    BYTE PTR [rax],al
    15bf:	00 02                	add    BYTE PTR [rdx],al
    15c1:	fc                   	cld
    15c2:	19 00                	sbb    DWORD PTR [rax],eax
    15c4:	00 00                	add    BYTE PTR [rax],al
    15c6:	00 00                	add    BYTE PTR [rax],al
    15c8:	00 02                	add    BYTE PTR [rdx],al
    15ca:	00 00                	add    BYTE PTR [rax],al
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	00 01                	add    BYTE PTR [rcx],al
    15d2:	bf 0f 4b 1d 16       	mov    edi,0x161d4b0f
    15d7:	00 00                	add    BYTE PTR [rax],al
    15d9:	06                   	(bad)
    15da:	a0 76 20 00 00 00 00 	movabs al,ds:0x800000000002076
    15e1:	00 08 
    15e3:	7c 09                	jl     15ee <_Z17hashMapAddElementP7HashMap8string_t+0x10e>
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	31 ac 05 00 00 a4 10 	xor    DWORD PTR [rbp+rax*1+0x10a40000],ebp
    15ee:	7c 09                	jl     15f9 <_Z17hashMapAddElementP7HashMap8string_t+0x119>
    15f0:	00 00                	add    BYTE PTR [rax],al
    15f2:	50                   	push   rax
    15f3:	0d 00 00 09 5d       	or     eax,0x5d090000
    15f8:	05 00 00 01 a4       	add    eax,0xa4010000
    15fd:	20 f6                	and    dh,dh
    15ff:	0c 00                	or     al,0x0
    1601:	00 25 b3 03 00 00    	add    BYTE PTR [rip+0x3b3],ah        # 19ba <_Z17hashMapDebugPrintP7HashMap+0x7a>
    1607:	60                   	(bad)
    1608:	0d 00 00 17 59       	or     eax,0x59170000
    160d:	05 00 00 a7 0d       	add    eax,0xda70000
    1612:	7c 09                	jl     161d <_Z17hashMapAddElementP7HashMap8string_t+0x13d>
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	18 1c 69             	sbb    BYTE PTR [rcx+rbp*2],bl
    1619:	00 aa 13 fb 07 00    	add    BYTE PTR [rdx+0x7fb13],ch
    161f:	00 18                	add    BYTE PTR [rax],bl
    1621:	17                   	(bad)
    1622:	2a 04 00             	sub    al,BYTE PTR [rax+rax*1]
    1625:	00 ab 12 fb 07 00    	add    BYTE PTR [rbx+0x7fb12],ch
    162b:	00 18                	add    BYTE PTR [rax],bl
    162d:	17                   	(bad)
    162e:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1631:	00 ae 14 6b 08 00    	add    BYTE PTR [rsi+0x86b14],ch
    1637:	00 00                	add    BYTE PTR [rax],al
    1639:	00 00                	add    BYTE PTR [rax],al
    163b:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 1747 <_Z17hashMapAddElementP7HashMap8string_t+0x267>
    1641:	60                   	(bad)
    1642:	0d 00 00 1e 3a       	or     eax,0x3a1e0000
    1647:	00 00                	add    BYTE PTR [rax],al
    1649:	00 18                	add    BYTE PTR [rax],bl
    164b:	00 10                	add    BYTE PTR [rax],dl
    164d:	50                   	push   rax
    164e:	0d 00 00 31 65       	or     eax,0x65310000
    1653:	05 00 00 9a 11       	add    eax,0x119a0000
    1658:	fb                   	sti
    1659:	07                   	(bad)
    165a:	00 00                	add    BYTE PTR [rax],al
    165c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    165d:	0d 00 00 09 5d       	or     eax,0x5d090000
    1662:	05 00 00 01 9a       	add    eax,0x9a010000
    1667:	2b f6                	sub    esi,esi
    1669:	0c 00                	or     al,0x0
    166b:	00 09                	add    BYTE PTR [rcx],cl
    166d:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1670:	00 01                	add    BYTE PTR [rcx],al
    1672:	9a                   	(bad)
    1673:	3b 6b 08             	cmp    ebp,DWORD PTR [rbx+0x8]
    1676:	00 00                	add    BYTE PTR [rax],al
    1678:	25 b3 03 00 00       	and    eax,0x3b3
    167d:	bc 0d 00 00 1c       	mov    esp,0x1c00000d
    1682:	69 6e 78 00 9d 0e fb 	imul   ebp,DWORD PTR [rsi+0x78],0xfb0e9d00
    1689:	07                   	(bad)
    168a:	00 00                	add    BYTE PTR [rax],al
    168c:	17                   	(bad)
    168d:	99                   	cdq
    168e:	05 00 00 9f 0e       	add    eax,0xe9f0000
    1693:	fb                   	sti
    1694:	07                   	(bad)
    1695:	00 00                	add    BYTE PTR [rax],al
    1697:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 17a3 <_Z17hashMapPopElementP7HashMap8string_t+0x13>
    169d:	bc 0d 00 00 1e       	mov    esp,0x1e00000d
    16a2:	3a 00                	cmp    al,BYTE PTR [rax]
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	2b 00                	sub    eax,DWORD PTR [rax]
    16a8:	10 ac 0d 00 00 4c fc 	adc    BYTE PTR [rbp+rcx*1-0x3b40000],ch
    16af:	06                   	(bad)
    16b0:	00 00                	add    BYTE PTR [rax],al
    16b2:	01 90 06 41 04 00    	add    DWORD PTR [rax+0x44106],edx
    16b8:	00 01                	add    BYTE PTR [rcx],al
    16ba:	00 0e                	add    BYTE PTR [rsi],cl
    16bc:	00 00                	add    BYTE PTR [rax],al
    16be:	09 5d 05             	or     DWORD PTR [rbp+0x5],ebx
    16c1:	00 00                	add    BYTE PTR [rax],al
    16c3:	01 90 1b f6 0c 00    	add    DWORD PTR [rax+0xcf61b],edx
    16c9:	00 25 b3 03 00 00    	add    BYTE PTR [rip+0x3b3],ah        # 1a82 <_Z15crc32HashString8string_t+0x82>
    16cf:	10 0e                	adc    BYTE PTR [rsi],cl
    16d1:	00 00                	add    BYTE PTR [rax],al
    16d3:	18 1c 69             	sbb    BYTE PTR [rcx+rbp*2],bl
    16d6:	00 93 13 fb 07 00    	add    BYTE PTR [rbx+0x7fb13],dl
    16dc:	00 0c 05 19 00 00 00 	add    BYTE PTR [rax*1+0x19],cl
    16e3:	00 00                	add    BYTE PTR [rax],al
    16e5:	00 d5                	add    ch,dl
    16e7:	09 00                	or     DWORD PTR [rax],eax
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 17f7 <_Z17hashMapPopElementP7HashMap8string_t+0x67>
    16f1:	10 0e                	adc    BYTE PTR [rsi],cl
    16f3:	00 00                	add    BYTE PTR [rax],al
    16f5:	1e                   	(bad)
    16f6:	3a 00                	cmp    al,BYTE PTR [rax]
    16f8:	00 00                	add    BYTE PTR [rax],al
    16fa:	1a 00                	sbb    al,BYTE PTR [rax]
    16fc:	10 00                	adc    BYTE PTR [rax],al
    16fe:	0e                   	(bad)
    16ff:	00 00                	add    BYTE PTR [rax],al
    1701:	26 84 05 00 00 5b 06 	es test BYTE PTR [rip+0x65b0000],al        # 65b1708 <_end+0x65ab6f0>
    1708:	61                   	(bad)
    1709:	06                   	(bad)
    170a:	00 00                	add    BYTE PTR [rax],al
    170c:	e2 0e                	loop   171c <_Z17hashMapAddElementP7HashMap8string_t+0x23c>
    170e:	00 00                	add    BYTE PTR [rax],al
    1710:	60                   	(bad)
    1711:	18 00                	sbb    BYTE PTR [rax],al
    1713:	00 00                	add    BYTE PTR [rax],al
    1715:	00 00                	add    BYTE PTR [rax],al
    1717:	00 63 00             	add    BYTE PTR [rbx+0x0],ah
    171a:	00 00                	add    BYTE PTR [rax],al
    171c:	00 00                	add    BYTE PTR [rax],al
    171e:	00 00                	add    BYTE PTR [rax],al
    1720:	01 9c e2 0e 00 00 0e 	add    DWORD PTR [rdx+riz*8+0xe00000e],ebx
    1727:	5d                   	pop    rbp
    1728:	05 00 00 5b 24       	add    eax,0x245b0000
    172d:	f6 0c 00 00          	test   BYTE PTR [rax+rax*1],0x0
    1731:	14 01                	adc    al,0x1
    1733:	00 00                	add    BYTE PTR [rax],al
    1735:	0a 01                	or     al,BYTE PTR [rcx]
    1737:	00 00                	add    BYTE PTR [rax],al
    1739:	0e                   	(bad)
    173a:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    173d:	00 5b 34             	add    BYTE PTR [rbx+0x34],bl
    1740:	6b 08 00             	imul   ecx,DWORD PTR [rax],0x0
    1743:	00 46 01             	add    BYTE PTR [rsi+0x1],al
    1746:	00 00                	add    BYTE PTR [rax],al
    1748:	3e 01 00             	ds add DWORD PTR [rax],eax
    174b:	00 1f                	add    BYTE PTR [rdi],bl
    174d:	b3 03                	mov    bl,0x3
    174f:	00 00                	add    BYTE PTR [rax],al
    1751:	bc 0d 00 00 09       	mov    esp,0x900000d
    1756:	03 98 43 00 00 00    	add    ebx,DWORD PTR [rax+0x43]
    175c:	00 00                	add    BYTE PTR [rax],al
    175e:	00 14 4a             	add    BYTE PTR [rdx+rcx*2],dl
    1761:	05 00 00 62 16       	add    eax,0x16620000
    1766:	fb                   	sti
    1767:	07                   	(bad)
    1768:	00 00                	add    BYTE PTR [rax],al
    176a:	79 01                	jns    176d <_Z17hashMapAddElementP7HashMap8string_t+0x28d>
    176c:	00 00                	add    BYTE PTR [rax],al
    176e:	77 01                	ja     1771 <_Z17hashMapAddElementP7HashMap8string_t+0x291>
    1770:	00 00                	add    BYTE PTR [rax],al
    1772:	15 69 6e 78 00       	adc    eax,0x786e69
    1777:	89 0e                	mov    DWORD PTR [rsi],ecx
    1779:	fb                   	sti
    177a:	07                   	(bad)
    177b:	00 00                	add    BYTE PTR [rax],al
    177d:	8a 01                	mov    al,BYTE PTR [rcx]
    177f:	00 00                	add    BYTE PTR [rax],al
    1781:	88 01                	mov    BYTE PTR [rcx],al
    1783:	00 00                	add    BYTE PTR [rax],al
    1785:	0c 9a                	or     al,0x9a
    1787:	18 00                	sbb    BYTE PTR [rax],al
    1789:	00 00                	add    BYTE PTR [rax],al
    178b:	00 00                	add    BYTE PTR [rax],al
    178d:	00 e9                	add    cl,ch
    178f:	09 00                	or     DWORD PTR [rax],eax
    1791:	00 07                	add    BYTE PTR [rdi],al
    1793:	c3                   	ret
    1794:	18 00                	sbb    BYTE PTR [rax],al
    1796:	00 00                	add    BYTE PTR [rax],al
    1798:	00 00                	add    BYTE PTR [rax],al
    179a:	00 8c 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],cl
    17a1:	55                   	push   rbp
    17a2:	09 03                	or     DWORD PTR [rbx],eax
    17a4:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    17a7:	00 00                	add    BYTE PTR [rax],al
    17a9:	00 00                	add    BYTE PTR [rax],al
    17ab:	00 03                	add    BYTE PTR [rbx],al
    17ad:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    17b1:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    17b4:	00 00                	add    BYTE PTR [rax],al
    17b6:	00 00                	add    BYTE PTR [rax],al
    17b8:	00 03                	add    BYTE PTR [rbx],al
    17ba:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    17bd:	08 5c 03 01          	or     BYTE PTR [rbx+rax*1+0x1],bl
    17c1:	52                   	push   rdx
    17c2:	09 03                	or     DWORD PTR [rbx],eax
    17c4:	98                   	cwde
    17c5:	43 00 00             	rex.XB add BYTE PTR [r8],al
    17c8:	00 00                	add    BYTE PTR [rax],al
    17ca:	00 00                	add    BYTE PTR [rax],al
    17cc:	00 00                	add    BYTE PTR [rax],al
    17ce:	04 01                	add    al,0x1
    17d0:	02 a1 04 00 00 26    	add    ah,BYTE PTR [rcx+0x26000004]
    17d6:	cb                   	retf
    17d7:	05 00 00 4e 0a       	add    eax,0xa4e0000
    17dc:	d4                   	(bad)
    17dd:	06                   	(bad)
    17de:	00 00                	add    BYTE PTR [rax],al
    17e0:	fb                   	sti
    17e1:	07                   	(bad)
    17e2:	00 00                	add    BYTE PTR [rax],al
    17e4:	90                   	nop
    17e5:	17                   	(bad)
    17e6:	00 00                	add    BYTE PTR [rax],al
    17e8:	00 00                	add    BYTE PTR [rax],al
    17ea:	00 00                	add    BYTE PTR [rax],al
    17ec:	c9                   	leave
    17ed:	00 00                	add    BYTE PTR [rax],al
    17ef:	00 00                	add    BYTE PTR [rax],al
    17f1:	00 00                	add    BYTE PTR [rax],al
    17f3:	00 01                	add    BYTE PTR [rcx],al
    17f5:	9c                   	pushf
    17f6:	a3 0f 00 00 0e 5d 05 	movabs ds:0x55d0e00000f,eax
    17fd:	00 00 
    17ff:	4e 25 f6 0c 00 00    	rex.WRX and rax,0xcf6
    1805:	a0 01 00 00 92 01 00 	movabs al,ds:0xe00000192000001
    180c:	00 0e 
    180e:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1811:	00 4e 35             	add    BYTE PTR [rsi+0x35],cl
    1814:	6b 08 00             	imul   ecx,DWORD PTR [rax],0x0
    1817:	00 e5                	add    ch,ah
    1819:	01 00                	add    DWORD PTR [rax],eax
    181b:	00 db                	add    bl,bl
    181d:	01 00                	add    DWORD PTR [rax],eax
    181f:	00 1f                	add    BYTE PTR [rdi],bl
    1821:	b3 03                	mov    bl,0x3
    1823:	00 00                	add    BYTE PTR [rax],al
    1825:	b3 0f                	mov    bl,0xf
    1827:	00 00                	add    BYTE PTR [rax],al
    1829:	09 03                	or     DWORD PTR [rbx],eax
    182b:	68 43 00 00 00       	push   0x43
    1830:	00 00                	add    BYTE PTR [rax],al
    1832:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 7886a1 <_end+0x782689>
    1838:	52                   	push   rdx
    1839:	0e                   	(bad)
    183a:	fb                   	sti
    183b:	07                   	(bad)
    183c:	00 00                	add    BYTE PTR [rax],al
    183e:	28 02                	sub    BYTE PTR [rdx],al
    1840:	00 00                	add    BYTE PTR [rax],al
    1842:	22 02                	and    al,BYTE PTR [rdx]
    1844:	00 00                	add    BYTE PTR [rax],al
    1846:	0c ed                	or     al,0xed
    1848:	17                   	(bad)
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	00 00                	add    BYTE PTR [rax],al
    184d:	00 00                	add    BYTE PTR [rax],al
    184f:	08 0a                	or     BYTE PTR [rdx],cl
    1851:	00 00                	add    BYTE PTR [rax],al
    1853:	07                   	(bad)
    1854:	59                   	pop    rcx
    1855:	18 00                	sbb    BYTE PTR [rax],al
    1857:	00 00                	add    BYTE PTR [rax],al
    1859:	00 00                	add    BYTE PTR [rax],al
    185b:	00 8c 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],cl
    1862:	55                   	push   rbp
    1863:	09 03                	or     DWORD PTR [rbx],eax
    1865:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    1868:	00 00                	add    BYTE PTR [rax],al
    186a:	00 00                	add    BYTE PTR [rax],al
    186c:	00 03                	add    BYTE PTR [rbx],al
    186e:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1872:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1875:	00 00                	add    BYTE PTR [rax],al
    1877:	00 00                	add    BYTE PTR [rax],al
    1879:	00 03                	add    BYTE PTR [rbx],al
    187b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    187e:	08 4f 03             	or     BYTE PTR [rdi+0x3],cl
    1881:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    1884:	03 68 43             	add    ebp,DWORD PTR [rax+0x43]
	...
    188f:	1d 06 01 00 00       	sbb    eax,0x106
    1894:	b3 0f                	mov    bl,0xf
    1896:	00 00                	add    BYTE PTR [rax],al
    1898:	1e                   	(bad)
    1899:	3a 00                	cmp    al,BYTE PTR [rax]
    189b:	00 00                	add    BYTE PTR [rax],al
    189d:	2c 00                	sub    al,0x0
    189f:	10 a3 0f 00 00 26    	adc    BYTE PTR [rbx+0x2600000f],ah
    18a5:	c7 03 00 00 3d 0a    	mov    DWORD PTR [rbx],0xa3d0000
    18ab:	99                   	cdq
    18ac:	06                   	(bad)
    18ad:	00 00                	add    BYTE PTR [rax],al
    18af:	fb                   	sti
    18b0:	07                   	(bad)
    18b1:	00 00                	add    BYTE PTR [rax],al
    18b3:	e0 14                	loopne 18c9 <_Z20hashMapSearchElementP7HashMap8string_t+0x69>
    18b5:	00 00                	add    BYTE PTR [rax],al
    18b7:	00 00                	add    BYTE PTR [rax],al
    18b9:	00 00                	add    BYTE PTR [rax],al
    18bb:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    18bc:	02 00                	add    al,BYTE PTR [rax]
    18be:	00 00                	add    BYTE PTR [rax],al
    18c0:	00 00                	add    BYTE PTR [rax],al
    18c2:	00 01                	add    BYTE PTR [rcx],al
    18c4:	9c                   	pushf
    18c5:	40 12 00             	rex adc al,BYTE PTR [rax]
    18c8:	00 0e                	add    BYTE PTR [rsi],cl
    18ca:	5d                   	pop    rbp
    18cb:	05 00 00 3d 25       	add    eax,0x253d0000
    18d0:	f6 0c 00 00          	test   BYTE PTR [rax+rax*1],0x0
    18d4:	4c 02 00             	rex.WR add r8b,BYTE PTR [rax]
    18d7:	00 3e                	add    BYTE PTR [rsi],bh
    18d9:	02 00                	add    al,BYTE PTR [rax]
    18db:	00 0e                	add    BYTE PTR [rsi],cl
    18dd:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    18e0:	00 3d 35 6b 08 00    	add    BYTE PTR [rip+0x86b35],bh        # 8841b <_end+0x82403>
    18e6:	00 90 02 00 00 84    	add    BYTE PTR [rax-0x7bfffffe],dl
    18ec:	02 00                	add    al,BYTE PTR [rax]
    18ee:	00 1f                	add    BYTE PTR [rdi],bl
    18f0:	b3 03                	mov    bl,0x3
    18f2:	00 00                	add    BYTE PTR [rax],al
    18f4:	b3 0f                	mov    bl,0xf
    18f6:	00 00                	add    BYTE PTR [rax],al
    18f8:	09 03                	or     DWORD PTR [rbx],eax
    18fa:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    18fd:	00 00                	add    BYTE PTR [rax],al
    18ff:	00 00                	add    BYTE PTR [rax],al
    1901:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 788770 <_end+0x782758>
    1907:	41 0e                	rex.B (bad)
    1909:	fb                   	sti
    190a:	07                   	(bad)
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	e5 02                	in     eax,0x2
    190f:	00 00                	add    BYTE PTR [rax],al
    1911:	d9 02                	fld    DWORD PTR [rdx]
    1913:	00 00                	add    BYTE PTR [rax],al
    1915:	14 99                	adc    al,0x99
    1917:	05 00 00 43 0e       	add    eax,0xe430000
    191c:	fb                   	sti
    191d:	07                   	(bad)
    191e:	00 00                	add    BYTE PTR [rax],al
    1920:	25 03 00 00 21       	and    eax,0x21000003
    1925:	03 00                	add    eax,DWORD PTR [rax]
    1927:	00 13                	add    BYTE PTR [rbx],dl
    1929:	fb                   	sti
    192a:	0c 00                	or     al,0x0
    192c:	00 e7                	add    bh,ah
    192e:	15 00 00 00 00       	adc    eax,0x0
    1933:	00 00                	add    BYTE PTR [rax],al
    1935:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
    1938:	00 00                	add    BYTE PTR [rax],al
    193a:	49 1a e6             	rex.WB sbb spl,r14b
    193d:	11 00                	adc    DWORD PTR [rax],eax
    193f:	00 05 0a 0d 00 00    	add    BYTE PTR [rip+0xd0a],al        # 264f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x4f>
    1945:	36 03 00             	ss add eax,DWORD PTR [rax]
    1948:	00 34 03             	add    BYTE PTR [rbx+rax*1],dh
    194b:	00 00                	add    BYTE PTR [rax],al
    194d:	20 5f 00             	and    BYTE PTR [rdi+0x0],bl
    1950:	00 00                	add    BYTE PTR [rax],al
    1952:	27                   	(bad)
    1953:	1f                   	(bad)
    1954:	0d 00 00 13 40       	or     eax,0x40130000
    1959:	12 00                	adc    al,BYTE PTR [rax]
    195b:	00 f8                	add    al,bh
    195d:	15 00 00 00 00       	adc    eax,0x0
    1962:	00 00                	add    BYTE PTR [rax],al
    1964:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
    1967:	00 00                	add    BYTE PTR [rax],al
    1969:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    196a:	26 f2 10 00          	es repnz adc BYTE PTR [rax],al
    196e:	00 05 61 12 00 00    	add    BYTE PTR [rip+0x1261],al        # 2bd5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x175>
    1974:	42 03 00             	rex.X add eax,DWORD PTR [rax]
    1977:	00 3e                	add    BYTE PTR [rsi],bh
    1979:	03 00                	add    eax,DWORD PTR [rax]
    197b:	00 05 55 12 00 00    	add    BYTE PTR [rip+0x1255],al        # 2bd6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x176>
    1981:	55                   	push   rbp
    1982:	03 00                	add    eax,DWORD PTR [rax]
    1984:	00 51 03             	add    BYTE PTR [rcx+0x3],dl
    1987:	00 00                	add    BYTE PTR [rax],al
    1989:	20 6a 00             	and    BYTE PTR [rdx+0x0],ch
    198c:	00 00                	add    BYTE PTR [rax],al
    198e:	27                   	(bad)
    198f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1990:	12 00                	adc    al,BYTE PTR [rax]
    1992:	00 28                	add    BYTE PTR [rax],ch
    1994:	78 12                	js     19a8 <_Z17hashMapDebugPrintP7HashMap+0x68>
    1996:	00 00                	add    BYTE PTR [rax],al
    1998:	84 00                	test   BYTE PTR [rax],al
    199a:	00 00                	add    BYTE PTR [rax],al
    199c:	d7                   	xlat   BYTE PTR ds:[rbx]
    199d:	10 00                	adc    BYTE PTR [rax],al
    199f:	00 0f                	add    BYTE PTR [rdi],cl
    19a1:	79 12                	jns    19b5 <_Z17hashMapDebugPrintP7HashMap+0x75>
    19a3:	00 00                	add    BYTE PTR [rax],al
    19a5:	67 03 00             	add    eax,DWORD PTR [eax]
    19a8:	00 65 03             	add    BYTE PTR [rbp+0x3],ah
    19ab:	00 00                	add    BYTE PTR [rax],al
    19ad:	07                   	(bad)
    19ae:	3e 16                	ds (bad)
    19b0:	00 00                	add    BYTE PTR [rax],al
    19b2:	00 00                	add    BYTE PTR [rax],al
    19b4:	00 00                	add    BYTE PTR [rax],al
    19b6:	46 0a 00             	rex.RX or r8b,BYTE PTR [rax]
    19b9:	00 03                	add    BYTE PTR [rbx],al
    19bb:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
    19be:	77 18                	ja     19d8 <_Z17hashMapDebugPrintP7HashMap+0x98>
    19c0:	06                   	(bad)
    19c1:	00 00                	add    BYTE PTR [rax],al
    19c3:	07                   	(bad)
    19c4:	00 16                	add    BYTE PTR [rsi],dl
    19c6:	00 00                	add    BYTE PTR [rax],al
    19c8:	00 00                	add    BYTE PTR [rax],al
    19ca:	00 00                	add    BYTE PTR [rax],al
    19cc:	71 0a                	jno    19d8 <_Z17hashMapDebugPrintP7HashMap+0x98>
    19ce:	00 00                	add    BYTE PTR [rax],al
    19d0:	03 01                	add    eax,DWORD PTR [rcx]
    19d2:	55                   	push   rbp
    19d3:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    19d6:	03 01                	add    eax,DWORD PTR [rcx]
    19d8:	54                   	push   rsp
    19d9:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    19dc:	00 00                	add    BYTE PTR [rax],al
    19de:	28 2a                	sub    BYTE PTR [rdx],ch
    19e0:	0d 00 00 8f 00       	or     eax,0x8f0000
    19e5:	00 00                	add    BYTE PTR [rax],al
    19e7:	97                   	xchg   edi,eax
    19e8:	11 00                	adc    DWORD PTR [rax],eax
    19ea:	00 0f                	add    BYTE PTR [rdi],cl
    19ec:	2b 0d 00 00 76 03    	sub    ecx,DWORD PTR [rip+0x3760000]        # 37619f2 <_end+0x375b9da>
    19f2:	00 00                	add    BYTE PTR [rax],al
    19f4:	70 03                	jo     19f9 <_Z17hashMapDebugPrintP7HashMap+0xb9>
    19f6:	00 00                	add    BYTE PTR [rax],al
    19f8:	32 34 0d 00 00 90 16 	xor    dh,BYTE PTR [rcx*1+0x16900000]
    19ff:	00 00                	add    BYTE PTR [rax],al
    1a01:	00 00                	add    BYTE PTR [rax],al
    1a03:	00 00                	add    BYTE PTR [rax],al
    1a05:	66 00 00             	data16 add BYTE PTR [rax],al
    1a08:	00 00                	add    BYTE PTR [rax],al
    1a0a:	00 00                	add    BYTE PTR [rax],al
    1a0c:	00 0f                	add    BYTE PTR [rdi],cl
    1a0e:	35 0d 00 00 98       	xor    eax,0x9800000d
    1a13:	03 00                	add    eax,DWORD PTR [rax]
    1a15:	00 94 03 00 00 32 40 	add    BYTE PTR [rbx+rax*1+0x40320000],dl
    1a1c:	0d 00 00 b0 16       	or     eax,0x16b00000
    1a21:	00 00                	add    BYTE PTR [rax],al
    1a23:	00 00                	add    BYTE PTR [rax],al
    1a25:	00 00                	add    BYTE PTR [rax],al
    1a27:	42 00 00             	rex.X add BYTE PTR [rax],al
    1a2a:	00 00                	add    BYTE PTR [rax],al
    1a2c:	00 00                	add    BYTE PTR [rax],al
    1a2e:	00 0f                	add    BYTE PTR [rdi],cl
    1a30:	41 0d 00 00 ad 03    	rex.B or eax,0x3ad0000
    1a36:	00 00                	add    BYTE PTR [rax],al
    1a38:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1a39:	03 00                	add    eax,DWORD PTR [rax]
    1a3b:	00 33                	add    BYTE PTR [rbx],dh
    1a3d:	65 0d 00 00 ce 16    	gs or  eax,0x16ce0000
    1a43:	00 00                	add    BYTE PTR [rax],al
    1a45:	00 00                	add    BYTE PTR [rax],al
    1a47:	00 00                	add    BYTE PTR [rax],al
    1a49:	01 9a 00 00 00 af    	add    DWORD PTR [rdx-0x51000000],ebx
    1a4f:	1d 29 80 0d 00       	sbb    eax,0xd8029
    1a54:	00 29                	add    BYTE PTR [rcx],ch
    1a56:	74 0d                	je     1a65 <_Z15crc32HashString8string_t+0x65>
    1a58:	00 00                	add    BYTE PTR [rax],al
    1a5a:	20 a5 00 00 00 0f    	and    BYTE PTR [rbp+0xf000000],ah
    1a60:	95                   	xchg   ebp,eax
    1a61:	0d 00 00 db 03       	or     eax,0x3db0000
    1a66:	00 00                	add    BYTE PTR [rax],al
    1a68:	d7                   	xlat   BYTE PTR ds:[rbx]
    1a69:	03 00                	add    eax,DWORD PTR [rax]
    1a6b:	00 27                	add    BYTE PTR [rdi],ah
    1a6d:	a0 0d 00 00 0c e3 16 	movabs al,ds:0x16e30c00000d
    1a74:	00 00 
    1a76:	00 00                	add    BYTE PTR [rax],al
    1a78:	00 00                	add    BYTE PTR [rax],al
    1a7a:	27                   	(bad)
    1a7b:	0a 00                	or     al,BYTE PTR [rax]
    1a7d:	00 00                	add    BYTE PTR [rax],al
    1a7f:	00 00                	add    BYTE PTR [rax],al
    1a81:	00 00                	add    BYTE PTR [rax],al
    1a83:	4d c1 0d 00 00 b5 00 	rex.WRB ror QWORD PTR [rip+0xb50000],0x0        # b51a8b <_end+0xb4ba73>
    1a8a:	00 
    1a8b:	00 01                	add    BYTE PTR [rcx],al
    1a8d:	b5 10                	mov    ch,0x10
    1a8f:	29 d2                	sub    edx,edx
    1a91:	0d 00 00 20 b5       	or     eax,0xb5200000
    1a96:	00 00                	add    BYTE PTR [rax],al
    1a98:	00 28                	add    BYTE PTR [rax],ch
    1a9a:	e7 0d                	out    0xd,eax
    1a9c:	00 00                	add    BYTE PTR [rax],al
    1a9e:	c0 00 00             	rol    BYTE PTR [rax],0x0
    1aa1:	00 d5                	add    ch,dl
    1aa3:	11 00                	adc    DWORD PTR [rax],eax
    1aa5:	00 0f                	add    BYTE PTR [rdi],cl
    1aa7:	e8 0d 00 00 fa       	call   fffffffffa001ab9 <_end+0xfffffffff9ffbaa1>
    1aac:	03 00                	add    eax,DWORD PTR [rax]
    1aae:	00 f4                	add    ah,dh
    1ab0:	03 00                	add    eax,DWORD PTR [rax]
    1ab2:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    1ab5:	17                   	(bad)
    1ab6:	00 00                	add    BYTE PTR [rax],al
    1ab8:	00 00                	add    BYTE PTR [rax],al
    1aba:	00 00                	add    BYTE PTR [rax],al
    1abc:	d5 09 00 00          	{rex2 0x9} add BYTE PTR [r8],al
    1ac0:	00 0c 3e             	add    BYTE PTR [rsi+rdi*1],cl
    1ac3:	17                   	(bad)
    1ac4:	00 00                	add    BYTE PTR [rax],al
    1ac6:	00 00                	add    BYTE PTR [rax],al
    1ac8:	00 00                	add    BYTE PTR [rax],al
    1aca:	c4                   	(bad)
    1acb:	09 00                	or     DWORD PTR [rax],eax
    1acd:	00 00                	add    BYTE PTR [rax],al
    1acf:	00 00                	add    BYTE PTR [rax],al
    1ad1:	00 0c 5e             	add    BYTE PTR [rsi+rbx*2],cl
    1ad4:	15 00 00 00 00       	adc    eax,0x0
    1ad9:	00 00                	add    BYTE PTR [rax],al
    1adb:	27                   	(bad)
    1adc:	0a 00                	or     al,BYTE PTR [rax]
    1ade:	00 21                	add    BYTE PTR [rcx],ah
    1ae0:	82                   	(bad)
    1ae1:	17                   	(bad)
    1ae2:	00 00                	add    BYTE PTR [rax],al
    1ae4:	00 00                	add    BYTE PTR [rax],al
    1ae6:	00 00                	add    BYTE PTR [rax],al
    1ae8:	8c 0a                	mov    WORD PTR [rdx],cs
    1aea:	00 00                	add    BYTE PTR [rax],al
    1aec:	32 12                	xor    dl,BYTE PTR [rdx]
    1aee:	00 00                	add    BYTE PTR [rax],al
    1af0:	03 01                	add    eax,DWORD PTR [rcx]
    1af2:	55                   	push   rbp
    1af3:	09 03                	or     DWORD PTR [rbx],eax
    1af5:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    1af8:	00 00                	add    BYTE PTR [rax],al
    1afa:	00 00                	add    BYTE PTR [rax],al
    1afc:	00 03                	add    BYTE PTR [rbx],al
    1afe:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1b02:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1b05:	00 00                	add    BYTE PTR [rax],al
    1b07:	00 00                	add    BYTE PTR [rax],al
    1b09:	00 03                	add    BYTE PTR [rbx],al
    1b0b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1b0e:	08 3e                	or     BYTE PTR [rsi],bh
    1b10:	03 01                	add    eax,DWORD PTR [rcx]
    1b12:	52                   	push   rdx
    1b13:	09 03                	or     DWORD PTR [rbx],eax
    1b15:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    1b18:	00 00                	add    BYTE PTR [rax],al
    1b1a:	00 00                	add    BYTE PTR [rax],al
    1b1c:	00 00                	add    BYTE PTR [rax],al
    1b1e:	0c 87                	or     al,0x87
    1b20:	17                   	(bad)
    1b21:	00 00                	add    BYTE PTR [rax],al
    1b23:	00 00                	add    BYTE PTR [rax],al
    1b25:	00 00                	add    BYTE PTR [rax],al
    1b27:	bd 17 00 00 00       	mov    ebp,0x17
    1b2c:	34 3e                	xor    al,0x3e
    1b2e:	03 00                	add    eax,DWORD PTR [rax]
    1b30:	00 01                	add    BYTE PTR [rcx],al
    1b32:	2e 09 e6             	cs or  esi,esp
    1b35:	05 00 00 7c 09       	add    eax,0x97c0000
    1b3a:	00 00                	add    BYTE PTR [rax],al
    1b3c:	01 98 12 00 00 09    	add    DWORD PTR [rax+0x9000012],ebx
    1b42:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    1b45:	00 01                	add    BYTE PTR [rcx],al
    1b47:	2e 1c 77             	cs sbb al,0x77
    1b4a:	08 00                	or     BYTE PTR [rax],al
    1b4c:	00 09                	add    BYTE PTR [rcx],cl
    1b4e:	19 03                	sbb    DWORD PTR [rbx],eax
    1b50:	00 00                	add    BYTE PTR [rax],al
    1b52:	01 2e                	add    DWORD PTR [rsi],ebp
    1b54:	30 fb                	xor    bl,bh
    1b56:	07                   	(bad)
    1b57:	00 00                	add    BYTE PTR [rax],al
    1b59:	17                   	(bad)
    1b5a:	5d                   	pop    rbp
    1b5b:	05 00 00 2f 0d       	add    eax,0xd2f0000
    1b60:	7c 09                	jl     1b6b <_Z19_mm_crc32HashString8string_t+0x4b>
    1b62:	00 00                	add    BYTE PTR [rax],al
    1b64:	18 1c 69             	sbb    BYTE PTR [rcx+rbp*2],bl
    1b67:	00 36                	add    BYTE PTR [rsi],dh
    1b69:	13 fb                	adc    edi,ebx
    1b6b:	07                   	(bad)
    1b6c:	00 00                	add    BYTE PTR [rax],al
    1b6e:	07                   	(bad)
    1b6f:	9c                   	pushf
    1b70:	14 00                	adc    al,0x0
    1b72:	00 00                	add    BYTE PTR [rax],al
    1b74:	00 00                	add    BYTE PTR [rax],al
    1b76:	00 46 0a             	add    BYTE PTR [rsi+0xa],al
    1b79:	00 00                	add    BYTE PTR [rax],al
    1b7b:	03 01                	add    eax,DWORD PTR [rcx]
    1b7d:	55                   	push   rbp
    1b7e:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    1b81:	00 00                	add    BYTE PTR [rax],al
    1b83:	00 4e 0a             	add    BYTE PTR [rsi+0xa],cl
    1b86:	06                   	(bad)
    1b87:	00 00                	add    BYTE PTR [rax],al
    1b89:	01 14 0b             	add    DWORD PTR [rbx+rcx*1],edx
    1b8c:	6a 03                	push   0x3
    1b8e:	00 00                	add    BYTE PTR [rax],al
    1b90:	75 15                	jne    1ba7 <_Z25_mm_crc32UnrollHashString8string_t+0x37>
    1b92:	00 00                	add    BYTE PTR [rax],al
    1b94:	00 13                	add    BYTE PTR [rbx],dl
    1b96:	00 00                	add    BYTE PTR [rax],al
    1b98:	00 00                	add    BYTE PTR [rax],al
    1b9a:	00 00                	add    BYTE PTR [rax],al
    1b9c:	23 01                	and    eax,DWORD PTR [rcx]
    1b9e:	00 00                	add    BYTE PTR [rax],al
    1ba0:	00 00                	add    BYTE PTR [rax],al
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	01 9c 75 15 00 00 0e 	add    DWORD PTR [rbp+rsi*2+0xe000015],ebx
    1bab:	8a 03                	mov    al,BYTE PTR [rbx]
    1bad:	00 00                	add    BYTE PTR [rax],al
    1baf:	14 22                	adc    al,0x22
    1bb1:	35 01 00 00 1f       	xor    eax,0x1f000001
    1bb6:	04 00                	add    al,0x0
    1bb8:	00 13                	add    BYTE PTR [rbx],dl
    1bba:	04 00                	add    al,0x0
    1bbc:	00 0e                	add    BYTE PTR [rsi],cl
    1bbe:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    1bc2:	14 31                	adc    al,0x31
    1bc4:	fb                   	sti
    1bc5:	07                   	(bad)
    1bc6:	00 00                	add    BYTE PTR [rax],al
    1bc8:	50                   	push   rax
    1bc9:	04 00                	add    al,0x0
    1bcb:	00 46 04             	add    BYTE PTR [rsi+0x4],al
    1bce:	00 00                	add    BYTE PTR [rax],al
    1bd0:	1f                   	(bad)
    1bd1:	b3 03                	mov    bl,0x3
    1bd3:	00 00                	add    BYTE PTR [rax],al
    1bd5:	bc 0d 00 00 09       	mov    esp,0x900000d
    1bda:	03 e8                	add    ebp,eax
    1bdc:	42 00 00             	rex.X add BYTE PTR [rax],al
    1bdf:	00 00                	add    BYTE PTR [rax],al
    1be1:	00 00                	add    BYTE PTR [rax],al
    1be3:	14 8c                	adc    al,0x8c
    1be5:	06                   	(bad)
    1be6:	00 00                	add    BYTE PTR [rax],al
    1be8:	17                   	(bad)
    1be9:	0f 75 15 00 00 7b 04 	pcmpeqw mm2,QWORD PTR [rip+0x47b0000]        # 47b1bf0 <_end+0x47abbd8>
    1bf0:	00 00                	add    BYTE PTR [rax],al
    1bf2:	75 04                	jne    1bf8 <_Z17murmur2HashString8string_t+0x48>
    1bf4:	00 00                	add    BYTE PTR [rax],al
    1bf6:	14 82                	adc    al,0x82
    1bf8:	03 00                	add    eax,DWORD PTR [rax]
    1bfa:	00 18                	add    BYTE PTR [rax],bl
    1bfc:	0b 35 01 00 00 92    	or     esi,DWORD PTR [rip+0xffffffff92000001]        # ffffffff92001c03 <_end+0xffffffff91ffbbeb>
    1c02:	04 00                	add    al,0x0
    1c04:	00 8e 04 00 00 14    	add    BYTE PTR [rsi+0x14000004],cl
    1c0a:	4a 03 00             	rex.WX add rax,QWORD PTR [rax]
    1c0d:	00 19                	add    BYTE PTR [rcx],bl
    1c0f:	0b 35 01 00 00 a4    	or     esi,DWORD PTR [rip+0xffffffffa4000001]        # ffffffffa4001c16 <_end+0xffffffffa3ffbbfe>
    1c15:	04 00                	add    al,0x0
    1c17:	00 9e 04 00 00 14    	add    BYTE PTR [rsi+0x14000004],bl
    1c1d:	b3 05                	mov    bl,0x5
    1c1f:	00 00                	add    BYTE PTR [rax],al
    1c21:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    1c23:	fb                   	sti
    1c24:	07                   	(bad)
    1c25:	00 00                	add    BYTE PTR [rax],al
    1c27:	ba 04 00 00 b6       	mov    edx,0xb6000004
    1c2c:	04 00                	add    al,0x0
    1c2e:	00 30                	add    BYTE PTR [rax],dh
    1c30:	4a 13 00             	rex.WX adc rax,QWORD PTR [rax]
    1c33:	00 00                	add    BYTE PTR [rax],al
    1c35:	00 00                	add    BYTE PTR [rax],al
    1c37:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
    1c3d:	00 00                	add    BYTE PTR [rax],al
    1c3f:	00 ff                	add    bh,bh
    1c41:	14 00                	adc    al,0x0
    1c43:	00 15 69 00 1c 13    	add    BYTE PTR [rip+0x131c0069],dl        # 131c1cb2 <_end+0x131bbc9a>
    1c49:	fb                   	sti
    1c4a:	07                   	(bad)
    1c4b:	00 00                	add    BYTE PTR [rax],al
    1c4d:	d0 04 00             	rol    BYTE PTR [rax+rax*1],1
    1c50:	00 c8                	add    al,cl
    1c52:	04 00                	add    al,0x0
    1c54:	00 16                	add    BYTE PTR [rsi],dl
    1c56:	e2 15                	loop   1c6d <_Z13sumHashString8string_t+0xd>
    1c58:	00 00                	add    BYTE PTR [rax],al
    1c5a:	60                   	(bad)
    1c5b:	13 00                	adc    eax,DWORD PTR [rax]
    1c5d:	00 00                	add    BYTE PTR [rax],al
    1c5f:	00 00                	add    BYTE PTR [rax],al
    1c61:	00 02                	add    BYTE PTR [rdx],al
    1c63:	60                   	(bad)
    1c64:	13 00                	adc    eax,DWORD PTR [rax]
    1c66:	00 00                	add    BYTE PTR [rax],al
    1c68:	00 00                	add    BYTE PTR [rax],al
    1c6a:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1c70 <_Z13sumHashString8string_t+0x10>
    1c70:	00 00                	add    BYTE PTR [rax],al
    1c72:	00 1f                	add    BYTE PTR [rdi],bl
    1c74:	17                   	(bad)
    1c75:	c1 13 00             	rcl    DWORD PTR [rbx],0x0
    1c78:	00 05 02 16 00 00    	add    BYTE PTR [rip+0x1602],al        # 3280 <_Z7testAllPKcjS0_+0x370>
    1c7e:	fd                   	std
    1c7f:	04 00                	add    al,0x0
    1c81:	00 fb                	add    bl,bh
    1c83:	04 00                	add    al,0x0
    1c85:	00 05 f7 15 00 00    	add    BYTE PTR [rip+0x15f7],al        # 3282 <_Z7testAllPKcjS0_+0x372>
    1c8b:	06                   	(bad)
    1c8c:	05 00 00 04 05       	add    eax,0x5040000
    1c91:	00 00                	add    BYTE PTR [rax],al
    1c93:	07                   	(bad)
    1c94:	6d                   	ins    DWORD PTR es:[rdi],dx
    1c95:	13 00                	adc    eax,DWORD PTR [rax]
    1c97:	00 00                	add    BYTE PTR [rax],al
    1c99:	00 00                	add    BYTE PTR [rax],al
    1c9b:	00 c6                	add    dh,al
    1c9d:	17                   	(bad)
    1c9e:	00 00                	add    BYTE PTR [rax],al
    1ca0:	03 01                	add    eax,DWORD PTR [rcx]
    1ca2:	55                   	push   rbp
    1ca3:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    1ca6:	03 01                	add    eax,DWORD PTR [rcx]
    1ca8:	54                   	push   rsp
    1ca9:	01 3a                	add    DWORD PTR [rdx],edi
    1cab:	00 00                	add    BYTE PTR [rax],al
    1cad:	13 7a 15             	adc    edi,DWORD PTR [rdx+0x15]
    1cb0:	00 00                	add    BYTE PTR [rax],al
    1cb2:	9b                   	fwait
    1cb3:	13 00                	adc    eax,DWORD PTR [rax]
    1cb5:	00 00                	add    BYTE PTR [rax],al
    1cb7:	00 00                	add    BYTE PTR [rax],al
    1cb9:	00 00                	add    BYTE PTR [rax],al
    1cbb:	33 00                	xor    eax,DWORD PTR [rax]
    1cbd:	00 00                	add    BYTE PTR [rax],al
    1cbf:	24 10                	and    al,0x10
    1cc1:	50                   	push   rax
    1cc2:	14 00                	adc    al,0x0
    1cc4:	00 05 a1 15 00 00    	add    BYTE PTR [rip+0x15a1],al        # 326b <_Z7testAllPKcjS0_+0x35b>
    1cca:	10 05 00 00 0c 05    	adc    BYTE PTR [rip+0x50c0000],al        # 50c1cd0 <_end+0x50bbcb8>
    1cd0:	00 00                	add    BYTE PTR [rax],al
    1cd2:	05 95 15 00 00       	add    eax,0x1595
    1cd7:	23 05 00 00 21 05    	and    eax,DWORD PTR [rip+0x5210000]        # 5211cdd <_end+0x520bcc5>
    1cdd:	00 00                	add    BYTE PTR [rax],al
    1cdf:	05 89 15 00 00       	add    eax,0x1589
    1ce4:	2f                   	(bad)
    1ce5:	05 00 00 2b 05       	add    eax,0x52b0000
    1cea:	00 00                	add    BYTE PTR [rax],al
    1cec:	07                   	(bad)
    1ced:	a8 13                	test   al,0x13
    1cef:	00 00                	add    BYTE PTR [rax],al
    1cf1:	00 00                	add    BYTE PTR [rax],al
    1cf3:	00 00                	add    BYTE PTR [rax],al
    1cf5:	cf                   	iret
    1cf6:	17                   	(bad)
    1cf7:	00 00                	add    BYTE PTR [rax],al
    1cf9:	03 01                	add    eax,DWORD PTR [rcx]
    1cfb:	55                   	push   rbp
    1cfc:	04 91                	add    al,0x91
    1cfe:	a0 7f 06 03 01 51 04 	movabs al,ds:0xa89104510103067f
    1d05:	91 a8 
    1d07:	7f 06                	jg     1d0f <_Z13sumHashString8string_t+0xaf>
    1d09:	03 01                	add    eax,DWORD PTR [rcx]
    1d0b:	52                   	push   rdx
    1d0c:	2d 73 00 91 b0       	sub    eax,0xb0910073
    1d11:	7f 06                	jg     1d19 <_Z13sumHashString8string_t+0xb9>
    1d13:	73 00                	jae    1d15 <_Z13sumHashString8string_t+0xb5>
    1d15:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1d1b:	80 80 80 80 01 91 b0 	add    BYTE PTR [rax-0x6efe7f80],0xb0
    1d22:	7f 06                	jg     1d2a <_Z13sumHashString8string_t+0xca>
    1d24:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1d2a:	80 80 80 80 01 2a 28 	add    BYTE PTR [rax+0x2a018080],0x28
    1d31:	01 00                	add    DWORD PTR [rax],eax
    1d33:	16                   	(bad)
    1d34:	13 91 b0 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fb0]
    1d3a:	00 00                	add    BYTE PTR [rax],al
    1d3c:	33 ae 15 00 00 b6    	xor    ebp,DWORD PTR [rsi-0x49ffffeb]
    1d42:	13 00                	adc    eax,DWORD PTR [rax]
    1d44:	00 00                	add    BYTE PTR [rax],al
    1d46:	00 00                	add    BYTE PTR [rax],al
    1d48:	00 00                	add    BYTE PTR [rax],al
    1d4a:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    1d4d:	00 25 0f 05 d5 15    	add    BYTE PTR [rip+0x15d5050f],ah        # 15d52262 <_end+0x15d4c24a>
    1d53:	00 00                	add    BYTE PTR [rax],al
    1d55:	46 05 00 00 40 05    	rex.RX add eax,0x5400000
    1d5b:	00 00                	add    BYTE PTR [rax],al
    1d5d:	05 c9 15 00 00       	add    eax,0x15c9
    1d62:	74 05                	je     1d69 <_Z13sumHashString8string_t+0x109>
    1d64:	00 00                	add    BYTE PTR [rax],al
    1d66:	72 05                	jb     1d6d <_Z13sumHashString8string_t+0x10d>
    1d68:	00 00                	add    BYTE PTR [rax],al
    1d6a:	05 bd 15 00 00       	add    eax,0x15bd
    1d6f:	83 05 00 00 7d 05 00 	add    DWORD PTR [rip+0x57d0000],0x0        # 57d1d76 <_end+0x57cbd5e>
    1d76:	00 07                	add    BYTE PTR [rdi],al
    1d78:	d5 13 00 00          	{rex2 0x13} add BYTE PTR [r24],al
    1d7c:	00 00                	add    BYTE PTR [rax],al
    1d7e:	00 00                	add    BYTE PTR [rax],al
    1d80:	d8 17                	fcom   DWORD PTR [rdi]
    1d82:	00 00                	add    BYTE PTR [rax],al
    1d84:	03 01                	add    eax,DWORD PTR [rcx]
    1d86:	55                   	push   rbp
    1d87:	0c 7e                	or     al,0x7e
    1d89:	00 91 a8 7f 06 22    	add    BYTE PTR [rcx+0x22067fa8],dl
    1d8f:	91                   	xchg   ecx,eax
    1d90:	b0 7f                	mov    al,0x7f
    1d92:	06                   	(bad)
    1d93:	22 03                	and    al,BYTE PTR [rbx]
    1d95:	01 54 01 30          	add    DWORD PTR [rcx+rax*1+0x30],edx
    1d99:	03 01                	add    eax,DWORD PTR [rcx]
    1d9b:	51                   	push   rcx
    1d9c:	0b 08                	or     ecx,DWORD PTR [rax]
    1d9e:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
    1da2:	0c ff                	or     al,0xff
    1da4:	ff                   	(bad)
    1da5:	ff                   	(bad)
    1da6:	ff 1a                	call   FWORD PTR [rdx]
    1da8:	03 01                	add    eax,DWORD PTR [rcx]
    1daa:	52                   	push   rdx
    1dab:	3c 73                	cmp    al,0x73
    1dad:	00 91 a8 7f 06 91    	add    BYTE PTR [rcx-0x6ef98058],dl
    1db3:	b0 7f                	mov    al,0x7f
    1db5:	06                   	(bad)
    1db6:	22 73 00             	and    dh,BYTE PTR [rbx+0x0]
    1db9:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1dbf:	80 80 80 80 01 91 a8 	add    BYTE PTR [rax-0x6efe7f80],0xa8
    1dc6:	7f 06                	jg     1dce <_Z13sumHashString8string_t+0x16e>
    1dc8:	91                   	xchg   ecx,eax
    1dc9:	b0 7f                	mov    al,0x7f
    1dcb:	06                   	(bad)
    1dcc:	22 23                	and    ah,BYTE PTR [rbx]
    1dce:	80 80 80 80 80 80 80 	add    BYTE PTR [rax-0x7f7f7f80],0x80
    1dd5:	80 80 01 2a 28 01 00 	add    BYTE PTR [rax+0x1282a01],0x0
    1ddc:	16                   	(bad)
    1ddd:	13 91 a8 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fa8]
    1de3:	91                   	xchg   ecx,eax
    1de4:	b0 7f                	mov    al,0x7f
    1de6:	06                   	(bad)
    1de7:	1c 00                	sbb    al,0x0
    1de9:	00 00                	add    BYTE PTR [rax],al
    1deb:	21 34 13             	and    DWORD PTR [rbx+rdx*1],esi
    1dee:	00 00                	add    BYTE PTR [rax],al
    1df0:	00 00                	add    BYTE PTR [rax],al
    1df2:	00 00                	add    BYTE PTR [rax],al
    1df4:	71 0a                	jno    1e00 <_Z17adler32HashString8string_t+0x30>
    1df6:	00 00                	add    BYTE PTR [rax],al
    1df8:	1c 15                	sbb    al,0x15
    1dfa:	00 00                	add    BYTE PTR [rax],al
    1dfc:	03 01                	add    eax,DWORD PTR [rcx]
    1dfe:	55                   	push   rbp
    1dff:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    1e02:	03 01                	add    eax,DWORD PTR [rcx]
    1e04:	54                   	push   rsp
    1e05:	01 40 00             	add    DWORD PTR [rax+0x0],eax
    1e08:	21 47 13             	and    DWORD PTR [rdi+0x13],eax
    1e0b:	00 00                	add    BYTE PTR [rax],al
    1e0d:	00 00                	add    BYTE PTR [rax],al
    1e0f:	00 00                	add    BYTE PTR [rax],al
    1e11:	56                   	push   rsi
    1e12:	0a 00                	or     al,BYTE PTR [rax]
    1e14:	00 3a                	add    BYTE PTR [rdx],bh
    1e16:	15 00 00 03 01       	adc    eax,0x1030000
    1e1b:	55                   	push   rbp
    1e1c:	02 08                	add    cl,BYTE PTR [rax]
    1e1e:	20 03                	and    BYTE PTR [rbx],al
    1e20:	01 54 02 73          	add    DWORD PTR [rdx+rax*1+0x73],edx
    1e24:	00 00                	add    BYTE PTR [rax],al
    1e26:	07                   	(bad)
    1e27:	23 14 00             	and    edx,DWORD PTR [rax+rax*1]
    1e2a:	00 00                	add    BYTE PTR [rax],al
    1e2c:	00 00                	add    BYTE PTR [rax],al
    1e2e:	00 8c 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],cl
    1e35:	55                   	push   rbp
    1e36:	09 03                	or     DWORD PTR [rbx],eax
    1e38:	1d 40 00 00 00       	sbb    eax,0x40
    1e3d:	00 00                	add    BYTE PTR [rax],al
    1e3f:	00 03                	add    BYTE PTR [rbx],al
    1e41:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1e45:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1e48:	00 00                	add    BYTE PTR [rax],al
    1e4a:	00 00                	add    BYTE PTR [rax],al
    1e4c:	00 03                	add    BYTE PTR [rbx],al
    1e4e:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    1e51:	45 03 01             	add    r8d,DWORD PTR [r9]
    1e54:	52                   	push   rdx
    1e55:	09 03                	or     DWORD PTR [rbx],eax
    1e57:	e8 42 00 00 00       	call   1e9e <_Z13elfHashString8string_t+0x4e>
    1e5c:	00 00                	add    BYTE PTR [rax],al
    1e5e:	00 00                	add    BYTE PTR [rax],al
    1e60:	00 08                	add    BYTE PTR [rax],cl
    1e62:	3b 08                	cmp    ecx,DWORD PTR [rax]
    1e64:	00 00                	add    BYTE PTR [rax],al
    1e66:	2a 39                	sub    bh,BYTE PTR [rcx]
    1e68:	04 00                	add    al,0x0
    1e6a:	00 03                	add    BYTE PTR [rbx],al
    1e6c:	5c                   	pop    rsp
    1e6d:	35 01 00 00 ae       	xor    eax,0xae000001
    1e72:	15 00 00 09 fc       	adc    eax,0xfc090000
    1e77:	04 00                	add    al,0x0
    1e79:	00 03                	add    BYTE PTR [rbx],al
    1e7b:	5c                   	pop    rsp
    1e7c:	01 3a                	add    DWORD PTR [rdx],edi
    1e7e:	01 00                	add    DWORD PTR [rax],eax
    1e80:	00 09                	add    BYTE PTR [rcx],cl
    1e82:	96                   	xchg   esi,eax
    1e83:	03 00                	add    eax,DWORD PTR [rax]
    1e85:	00 03                	add    BYTE PTR [rbx],al
    1e87:	5c                   	pop    rsp
    1e88:	01 fa                	add    edx,edi
    1e8a:	00 00                	add    BYTE PTR [rax],al
    1e8c:	00 09                	add    BYTE PTR [rcx],cl
    1e8e:	33 04 00             	xor    eax,DWORD PTR [rax+rax*1]
    1e91:	00 03                	add    BYTE PTR [rbx],al
    1e93:	5c                   	pop    rsp
    1e94:	01 2e                	add    DWORD PTR [rsi],ebp
    1e96:	00 00                	add    BYTE PTR [rax],al
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	2a fe                	sub    bh,dh
    1e9c:	17                   	(bad)
    1e9d:	00 00                	add    BYTE PTR [rax],al
    1e9f:	03 39                	add    edi,DWORD PTR [rcx]
    1ea1:	33 01                	xor    eax,DWORD PTR [rcx]
    1ea3:	00 00                	add    BYTE PTR [rax],al
    1ea5:	e2 15                	loop   1ebc <_Z13searchElementP4List8string_t.part.0+0x1c>
    1ea7:	00 00                	add    BYTE PTR [rax],al
    1ea9:	09 fc                	or     esp,edi
    1eab:	04 00                	add    al,0x0
    1ead:	00 03                	add    BYTE PTR [rbx],al
    1eaf:	39 01                	cmp    DWORD PTR [rcx],eax
    1eb1:	33 01                	xor    eax,DWORD PTR [rcx]
    1eb3:	00 00                	add    BYTE PTR [rax],al
    1eb5:	09 65 03             	or     DWORD PTR [rbp+0x3],esp
    1eb8:	00 00                	add    BYTE PTR [rax],al
    1eba:	03 39                	add    edi,DWORD PTR [rcx]
    1ebc:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    1ebf:	00 00                	add    BYTE PTR [rax],al
    1ec1:	09 33                	or     DWORD PTR [rbx],esi
    1ec3:	04 00                	add    al,0x0
    1ec5:	00 03                	add    BYTE PTR [rbx],al
    1ec7:	39 01                	cmp    DWORD PTR [rcx],eax
    1ec9:	2e 00 00             	cs add BYTE PTR [rax],al
    1ecc:	00 00                	add    BYTE PTR [rax],al
    1ece:	34 1a                	xor    al,0x1a
    1ed0:	05 00 00 02 e9       	add    eax,0xe9020000
    1ed5:	01 1a                	add    DWORD PTR [rdx],ebx
    1ed7:	05 00 00 35 01       	add    eax,0x1350000
    1edc:	00 00                	add    BYTE PTR [rax],al
    1ede:	03 0e                	add    ecx,DWORD PTR [rsi]
    1ee0:	16                   	(bad)
    1ee1:	00 00                	add    BYTE PTR [rax],al
    1ee3:	35 5f 5f 73 00       	xor    eax,0x735f5f
    1ee8:	e9 0f 35 01 00       	jmp    153fc <_end+0xf3e4>
    1eed:	00 35 5f 5f 63 00    	add    BYTE PTR [rip+0x635f5f],dh        # 637e52 <_end+0x631e3a>
    1ef3:	e9 18 66 00 00       	jmp    8510 <_end+0x24f8>
    1ef8:	00 00                	add    BYTE PTR [rax],al
    1efa:	2a a4 2d 00 00 04 54 	sub    ah,BYTE PTR [rbp+rbp*1+0x54040000]
    1f01:	66 00 00             	data16 add BYTE PTR [rax],al
    1f04:	00 2b                	add    BYTE PTR [rbx],ch
    1f06:	16                   	(bad)
    1f07:	00 00                	add    BYTE PTR [rax],al
    1f09:	09 04 06             	or     DWORD PTR [rsi+rax*1],eax
    1f0c:	00 00                	add    BYTE PTR [rax],al
    1f0e:	04 54                	add    al,0x54
    1f10:	20 fa                	and    dl,bh
    1f12:	00 00                	add    BYTE PTR [rax],al
    1f14:	00 2e                	add    BYTE PTR [rsi],ch
    1f16:	00 36                	add    BYTE PTR [rsi],dh
    1f18:	40 12 00             	rex adc al,BYTE PTR [rax]
    1f1b:	00 e6                	add    dh,ah
    1f1d:	05 00 00 30 14       	add    eax,0x14300000
    1f22:	00 00                	add    BYTE PTR [rax],al
    1f24:	00 00                	add    BYTE PTR [rax],al
    1f26:	00 00                	add    BYTE PTR [rax],al
    1f28:	a9 00 00 00 00       	test   eax,0x0
    1f2d:	00 00                	add    BYTE PTR [rax],al
    1f2f:	00 01                	add    BYTE PTR [rcx],al
    1f31:	9c                   	pushf
    1f32:	c3                   	ret
    1f33:	16                   	(bad)
    1f34:	00 00                	add    BYTE PTR [rax],al
    1f36:	05 55 12 00 00       	add    eax,0x1255
    1f3b:	b2 05                	mov    dl,0x5
    1f3d:	00 00                	add    BYTE PTR [rax],al
    1f3f:	aa                   	stos   BYTE PTR es:[rdi],al
    1f40:	05 00 00 05 61       	add    eax,0x61050000
    1f45:	12 00                	adc    al,BYTE PTR [rax]
    1f47:	00 da                	add    dl,bl
    1f49:	05 00 00 d4 05       	add    eax,0x5d40000
    1f4e:	00 00                	add    BYTE PTR [rax],al
    1f50:	0f 6d                	(bad)
    1f52:	12 00                	adc    al,BYTE PTR [rax]
    1f54:	00 fb                	add    bl,bh
    1f56:	05 00 00 f3 05       	add    eax,0x5f30000
    1f5b:	00 00                	add    BYTE PTR [rax],al
    1f5d:	37                   	(bad)
    1f5e:	78 12                	js     1f72 <_Z12pushListElemP4List8string_t+0x42>
    1f60:	00 00                	add    BYTE PTR [rax],al
    1f62:	7d 14                	jge    1f78 <_Z12pushListElemP4List8string_t+0x48>
    1f64:	00 00                	add    BYTE PTR [rax],al
    1f66:	00 00                	add    BYTE PTR [rax],al
    1f68:	00 00                	add    BYTE PTR [rax],al
    1f6a:	37                   	(bad)
    1f6b:	00 00                	add    BYTE PTR [rax],al
    1f6d:	00 00                	add    BYTE PTR [rax],al
    1f6f:	00 00                	add    BYTE PTR [rax],al
    1f71:	00 98 16 00 00 0f    	add    BYTE PTR [rax+0xf000016],bl
    1f77:	79 12                	jns    1f8b <_Z12pushListElemP4List8string_t+0x5b>
    1f79:	00 00                	add    BYTE PTR [rax],al
    1f7b:	1e                   	(bad)
    1f7c:	06                   	(bad)
    1f7d:	00 00                	add    BYTE PTR [rax],al
    1f7f:	1c 06                	sbb    al,0x6
    1f81:	00 00                	add    BYTE PTR [rax],al
    1f83:	00 21                	add    BYTE PTR [rcx],ah
    1f85:	79 14                	jns    1f9b <_Z12pushListElemP4List8string_t+0x6b>
    1f87:	00 00                	add    BYTE PTR [rax],al
    1f89:	00 00                	add    BYTE PTR [rax],al
    1f8b:	00 00                	add    BYTE PTR [rax],al
    1f8d:	71 0a                	jno    1f99 <_Z12pushListElemP4List8string_t+0x69>
    1f8f:	00 00                	add    BYTE PTR [rax],al
    1f91:	b5 16                	mov    ch,0x16
    1f93:	00 00                	add    BYTE PTR [rax],al
    1f95:	03 01                	add    eax,DWORD PTR [rcx]
    1f97:	55                   	push   rbp
    1f98:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    1f9b:	03 01                	add    eax,DWORD PTR [rcx]
    1f9d:	54                   	push   rsp
    1f9e:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    1fa1:	0c d9                	or     al,0xd9
    1fa3:	14 00                	adc    al,0x0
    1fa5:	00 00                	add    BYTE PTR [rax],al
    1fa7:	00 00                	add    BYTE PTR [rax],al
    1fa9:	00 bd 17 00 00 00    	add    BYTE PTR [rbp+0x17],bh
    1faf:	36 c1 0d 00 00 41 04 	ss ror DWORD PTR [rip+0x4410000],0x0        # 4411fb7 <_end+0x440bf9f>
    1fb6:	00 
    1fb7:	00 d0                	add    al,dl
    1fb9:	18 00                	sbb    BYTE PTR [rax],al
    1fbb:	00 00                	add    BYTE PTR [rax],al
    1fbd:	00 00                	add    BYTE PTR [rax],al
    1fbf:	00 68 00             	add    BYTE PTR [rax+0x0],ch
    1fc2:	00 00                	add    BYTE PTR [rax],al
    1fc4:	00 00                	add    BYTE PTR [rax],al
    1fc6:	00 00                	add    BYTE PTR [rax],al
    1fc8:	01 9c 8a 17 00 00 05 	add    DWORD PTR [rdx+rcx*4+0x5000017],ebx
    1fcf:	d2 0d 00 00 31 06    	ror    BYTE PTR [rip+0x6310000],cl        # 6311fd5 <_end+0x630bfbd>
    1fd5:	00 00                	add    BYTE PTR [rax],al
    1fd7:	27                   	(bad)
    1fd8:	06                   	(bad)
    1fd9:	00 00                	add    BYTE PTR [rax],al
    1fdb:	37                   	(bad)
    1fdc:	e7 0d                	out    0xd,eax
    1fde:	00 00                	add    BYTE PTR [rax],al
    1fe0:	df 18                	fistp  WORD PTR [rax]
    1fe2:	00 00                	add    BYTE PTR [rax],al
    1fe4:	00 00                	add    BYTE PTR [rax],al
    1fe6:	00 00                	add    BYTE PTR [rax],al
    1fe8:	2b 00                	sub    eax,DWORD PTR [rax]
    1fea:	00 00                	add    BYTE PTR [rax],al
    1fec:	00 00                	add    BYTE PTR [rax],al
    1fee:	00 00                	add    BYTE PTR [rax],al
    1ff0:	16                   	(bad)
    1ff1:	17                   	(bad)
    1ff2:	00 00                	add    BYTE PTR [rax],al
    1ff4:	0f e8 0d 00 00 61 06 	psubsb mm1,QWORD PTR [rip+0x6610000]        # 6611ffb <_end+0x660bfe3>
    1ffb:	00 00                	add    BYTE PTR [rax],al
    1ffd:	5b                   	pop    rbx
    1ffe:	06                   	(bad)
    1fff:	00 00                	add    BYTE PTR [rax],al
    2001:	00 16                	add    BYTE PTR [rsi],dl
    2003:	c1 0d 00 00 19 19 00 	ror    DWORD PTR [rip+0x19190000],0x0        # 1919200a <_end+0x1918bff2>
    200a:	00 00                	add    BYTE PTR [rax],al
    200c:	00 00                	add    BYTE PTR [rax],al
    200e:	00 00                	add    BYTE PTR [rax],al
    2010:	19 19                	sbb    DWORD PTR [rcx],ebx
    2012:	00 00                	add    BYTE PTR [rax],al
    2014:	00 00                	add    BYTE PTR [rax],al
    2016:	00 00                	add    BYTE PTR [rax],al
    2018:	1f                   	(bad)
    2019:	00 00                	add    BYTE PTR [rax],al
    201b:	00 00                	add    BYTE PTR [rax],al
    201d:	00 00                	add    BYTE PTR [rax],al
    201f:	00 90 06 7c 17 00    	add    BYTE PTR [rax+0x177c06],dl
    2025:	00 4f d2             	add    BYTE PTR [rdi-0x2e],cl
    2028:	0d 00 00 00 07       	or     eax,0x7000000
    202d:	38 19                	cmp    BYTE PTR [rcx],bl
    202f:	00 00                	add    BYTE PTR [rax],al
    2031:	00 00                	add    BYTE PTR [rax],al
    2033:	00 00                	add    BYTE PTR [rax],al
    2035:	8c 0a                	mov    WORD PTR [rdx],cs
    2037:	00 00                	add    BYTE PTR [rax],al
    2039:	03 01                	add    eax,DWORD PTR [rcx]
    203b:	55                   	push   rbp
    203c:	09 03                	or     DWORD PTR [rbx],eax
    203e:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    2041:	00 00                	add    BYTE PTR [rax],al
    2043:	00 00                	add    BYTE PTR [rax],al
    2045:	00 03                	add    BYTE PTR [rbx],al
    2047:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    204b:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    204e:	00 00                	add    BYTE PTR [rax],al
    2050:	00 00                	add    BYTE PTR [rax],al
    2052:	00 03                	add    BYTE PTR [rbx],al
    2054:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    2057:	08 91 03 01 52 09    	or     BYTE PTR [rcx+0x9520103],dl
    205d:	03 2a                	add    ebp,DWORD PTR [rdx]
    205f:	40 00 00             	rex add BYTE PTR [rax],al
    2062:	00 00                	add    BYTE PTR [rax],al
    2064:	00 00                	add    BYTE PTR [rax],al
    2066:	00 00                	add    BYTE PTR [rax],al
    2068:	50                   	push   rax
    2069:	19 19                	sbb    DWORD PTR [rcx],ebx
    206b:	00 00                	add    BYTE PTR [rax],al
    206d:	00 00                	add    BYTE PTR [rax],al
    206f:	00 00                	add    BYTE PTR [rax],al
    2071:	c4                   	(bad)
    2072:	09 00                	or     DWORD PTR [rax],eax
    2074:	00 00                	add    BYTE PTR [rax],al
    2076:	38 1e                	cmp    BYTE PTR [rsi],bl
    2078:	9e                   	sahf
    2079:	1c 3d                	sbb    al,0x3d
    207b:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2080:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2085:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    208a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    208f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2094:	0a 00                	or     al,BYTE PTR [rax]
    2096:	19 e3                	sbb    ebx,esp
    2098:	03 00                	add    eax,DWORD PTR [rax]
    209a:	00 d9                	add    cl,bl
    209c:	03 00                	add    eax,DWORD PTR [rax]
    209e:	00 38                	add    BYTE PTR [rax],bh
    20a0:	08 9e 06 4e 55 4c    	or     BYTE PTR [rsi+0x4c554e06],bl
    20a6:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
    20a9:	19 ba 05 00 00 ba    	sbb    DWORD PTR [rdx-0x45fffffb],edi
    20af:	05 00 00 19 1a       	add    eax,0x1a190000
    20b4:	05 00 00 10 05       	add    eax,0x5100000
    20b9:	00 00                	add    BYTE PTR [rax],al
    20bb:	19 93 04 00 00 89    	sbb    DWORD PTR [rbx-0x76fffffc],edx
    20c1:	04 00                	add    al,0x0
    20c3:	00 19                	add    BYTE PTR [rcx],bl
    20c5:	76 04                	jbe    20cb <_Z11popListElemP4List8string_t+0x1b>
    20c7:	00 00                	add    BYTE PTR [rax],al
    20c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    20ca:	04 00                	add    al,0x0
    20cc:	00 00                	add    BYTE PTR [rax],al
    20ce:	3d 0f 00 00 05       	cmp    eax,0x500000f
    20d3:	00 01                	add    BYTE PTR [rcx],al
    20d5:	08 5a 07             	or     BYTE PTR [rdx+0x7],bl
    20d8:	00 00                	add    BYTE PTR [rax],al
    20da:	22 14 01             	and    dl,BYTE PTR [rcx+rax*1]
    20dd:	00 00                	add    BYTE PTR [rax],al
    20df:	21 ee                	and    esi,ebp
    20e1:	01 00                	add    DWORD PTR [rax],eax
    20e3:	00 00                	add    BYTE PTR [rax],al
    20e5:	00 00                	add    BYTE PTR [rax],al
    20e7:	00 00                	add    BYTE PTR [rax],al
    20e9:	1a 00                	sbb    al,BYTE PTR [rax]
    20eb:	00 00                	add    BYTE PTR [rax],al
    20ed:	00 00                	add    BYTE PTR [rax],al
    20ef:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
    20f5:	00 00                	add    BYTE PTR [rax],al
    20f7:	00 3e                	add    BYTE PTR [rsi],bh
    20f9:	08 00                	or     BYTE PTR [rax],al
    20fb:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    20fe:	08 ff                	or     bh,bh
    2100:	01 00                	add    DWORD PTR [rax],eax
    2102:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    2105:	07                   	(bad)
    2106:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    2109:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    210c:	07                   	(bad)
    210d:	f8                   	clc
    210e:	00 00                	add    BYTE PTR [rax],al
    2110:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2113:	07                   	(bad)
    2114:	f3 00 00             	repz add BYTE PTR [rax],al
    2117:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    211a:	06                   	(bad)
    211b:	01 02                	add    DWORD PTR [rdx],eax
    211d:	00 00                	add    BYTE PTR [rax],al
    211f:	04 02                	add    al,0x2
    2121:	05 5b 00 00 00       	add    eax,0x5b
    2126:	06                   	(bad)
    2127:	d5 08 00 00          	{rex2 0x8} add BYTE PTR [rax],al
    212b:	03 29                	add    ebp,DWORD PTR [rcx]
    212d:	14 64                	adc    al,0x64
    212f:	00 00                	add    BYTE PTR [rax],al
    2131:	00 23                	add    BYTE PTR [rbx],ah
    2133:	04 05                	add    al,0x5
    2135:	69 6e 74 00 06 a9 00 	imul   ebp,DWORD PTR [rsi+0x74],0xa90600
    213c:	00 00                	add    BYTE PTR [rax],al
    213e:	03 2a                	add    ebp,DWORD PTR [rdx]
    2140:	16                   	(bad)
    2141:	3c 00                	cmp    al,0x0
    2143:	00 00                	add    BYTE PTR [rax],al
    2145:	04 08                	add    al,0x8
    2147:	05 e5 00 00 00       	add    eax,0xe5
    214c:	06                   	(bad)
    214d:	96                   	xchg   esi,eax
    214e:	08 00                	or     BYTE PTR [rax],al
    2150:	00 03                	add    BYTE PTR [rbx],al
    2152:	2d 1b 43 00 00       	sub    eax,0x431b
    2157:	00 24 08             	add    BYTE PTR [rax+rcx*1],ah
    215a:	08 91 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],dl
    2160:	01 06                	add    DWORD PTR [rsi],eax
    2162:	08 02                	or     BYTE PTR [rdx],al
    2164:	00 00                	add    BYTE PTR [rax],al
    2166:	1b 91 00 00 00 06    	sbb    edx,DWORD PTR [rcx+0x6000000]
    216c:	d7                   	xlat   BYTE PTR ds:[rbx]
    216d:	08 00                	or     BYTE PTR [rax],al
    216f:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    2172:	13 58 00             	adc    ebx,DWORD PTR [rax+0x0]
    2175:	00 00                	add    BYTE PTR [rax],al
    2177:	06                   	(bad)
    2178:	ab                   	stos   DWORD PTR es:[rdi],eax
    2179:	00 00                	add    BYTE PTR [rax],al
    217b:	00 05 1a 14 6b 00    	add    BYTE PTR [rip+0x6b141a],al        # 6b359b <_end+0x6ad583>
    2181:	00 00                	add    BYTE PTR [rax],al
    2183:	06                   	(bad)
    2184:	98                   	cwde
    2185:	08 00                	or     BYTE PTR [rax],al
    2187:	00 05 1b 14 7e 00    	add    BYTE PTR [rip+0x7e141b],al        # 7e35a8 <_end+0x7dd590>
    218d:	00 00                	add    BYTE PTR [rax],al
    218f:	06                   	(bad)
    2190:	d6                   	(bad)
    2191:	0a 00                	or     al,BYTE PTR [rax]
    2193:	00 06                	add    BYTE PTR [rsi],al
    2195:	d6                   	(bad)
    2196:	17                   	(bad)
    2197:	43 00 00             	rex.XB add BYTE PTR [r8],al
    219a:	00 08                	add    BYTE PTR [rax],cl
    219c:	98                   	cwde
    219d:	00 00                	add    BYTE PTR [rax],al
    219f:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    21a2:	05 e0 00 00 00       	add    eax,0xe0
    21a7:	04 10                	add    al,0x10
    21a9:	04 f3                	add    al,0xf3
    21ab:	01 00                	add    DWORD PTR [rax],eax
    21ad:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    21b0:	07                   	(bad)
    21b1:	ee                   	out    dx,al
    21b2:	00 00                	add    BYTE PTR [rax],al
    21b4:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    21b7:	04 d3                	add    al,0xd3
    21b9:	00 00                	add    BYTE PTR [rax],al
    21bb:	00 17                	add    BYTE PTR [rdi],dl
    21bd:	08 3c dd 02 00 00 13 	or     BYTE PTR [rbx*8+0x13000002],bh
    21c4:	01 00                	add    DWORD PTR [rax],eax
    21c6:	00 0e                	add    BYTE PTR [rsi],cl
    21c8:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    21cb:	00 07                	add    BYTE PTR [rdi],al
    21cd:	3d 09 64 00 00       	cmp    eax,0x6409
    21d2:	00 00                	add    BYTE PTR [rax],al
    21d4:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    21d7:	6d                   	ins    DWORD PTR es:[rdi],dx
    21d8:	00 3e                	add    BYTE PTR [rsi],bh
    21da:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    21de:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    21e1:	06                   	(bad)
    21e2:	de 02                	fiadd  WORD PTR [rdx]
    21e4:	00 00                	add    BYTE PTR [rax],al
    21e6:	07                   	(bad)
    21e7:	3f                   	(bad)
    21e8:	05 ee 00 00 00       	add    eax,0xee
    21ed:	17                   	(bad)
    21ee:	10 44 09 00          	adc    BYTE PTR [rcx+rcx*1+0x0],al
    21f2:	00 00                	add    BYTE PTR [rax],al
    21f4:	44 01 00             	add    DWORD PTR [rax],r8d
    21f7:	00 0e                	add    BYTE PTR [rsi],cl
    21f9:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    21fc:	00 07                	add    BYTE PTR [rdi],al
    21fe:	45 0e                	rex.RB (bad)
    2200:	77 00                	ja     2202 <_Z13searchElementP4List8string_t+0x72>
    2202:	00 00                	add    BYTE PTR [rax],al
    2204:	00 18                	add    BYTE PTR [rax],bl
    2206:	72 65                	jb     226d <_Z10debugPrintP4List+0x1d>
    2208:	6d                   	ins    DWORD PTR es:[rdi],dx
    2209:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    220c:	77 00                	ja     220e <_Z13searchElementP4List8string_t+0x7e>
    220e:	00 00                	add    BYTE PTR [rax],al
    2210:	08 00                	or     BYTE PTR [rax],al
    2212:	06                   	(bad)
    2213:	0a 00                	or     al,BYTE PTR [rax]
    2215:	00 00                	add    BYTE PTR [rax],al
    2217:	07                   	(bad)
    2218:	47 05 1f 01 00 00    	rex.RXB add eax,0x11f
    221e:	17                   	(bad)
    221f:	10 4e b4             	adc    BYTE PTR [rsi-0x4c],cl
    2222:	00 00                	add    BYTE PTR [rax],al
    2224:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    2227:	00 00                	add    BYTE PTR [rax],al
    2229:	0e                   	(bad)
    222a:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    222d:	00 07                	add    BYTE PTR [rdi],al
    222f:	4f 13 d2             	rex.WRXB adc r10,r10
    2232:	00 00                	add    BYTE PTR [rax],al
    2234:	00 00                	add    BYTE PTR [rax],al
    2236:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    2239:	6d                   	ins    DWORD PTR es:[rdi],dx
    223a:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    223d:	d2 00                	rol    BYTE PTR [rax],cl
    223f:	00 00                	add    BYTE PTR [rax],al
    2241:	08 00                	or     BYTE PTR [rax],al
    2243:	06                   	(bad)
    2244:	b5 00                	mov    ch,0x0
    2246:	00 00                	add    BYTE PTR [rax],al
    2248:	07                   	(bad)
    2249:	51                   	push   rcx
    224a:	05 50 01 00 00       	add    eax,0x150
    224f:	25 cf 02 00 00       	and    eax,0x2cf
    2254:	07                   	(bad)
    2255:	b4 03                	mov    ah,0x3
    2257:	0f 8e 01 00 00 08    	jle    800225e <_end+0x7ffc246>
    225d:	93                   	xchg   ebx,eax
    225e:	01 00                	add    DWORD PTR [rax],eax
    2260:	00 26                	add    BYTE PTR [rsi],ah
    2262:	64 00 00             	add    BYTE PTR fs:[rax],al
    2265:	00 a7 01 00 00 02    	add    BYTE PTR [rdi+0x2000001],ah
    226b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    226c:	01 00                	add    DWORD PTR [rax],eax
    226e:	00 02                	add    BYTE PTR [rdx],al
    2270:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2271:	01 00                	add    DWORD PTR [rax],eax
    2273:	00 00                	add    BYTE PTR [rax],al
    2275:	08 ac 01 00 00 27 28 	or     BYTE PTR [rcx+rax*1+0x28270000],ch
    227c:	73 74                	jae    22f2 <_Z10debugPrintP4List+0xa2>
    227e:	64 00 0f             	add    BYTE PTR fs:[rdi],cl
    2281:	32 01                	xor    al,BYTE PTR [rcx]
    2283:	0b 7d 03             	or     edi,DWORD PTR [rbp+0x3]
    2286:	00 00                	add    BYTE PTR [rax],al
    2288:	01 08                	add    DWORD PTR [rax],ecx
    228a:	83 0b 13             	or     DWORD PTR [rbx],0x13
    228d:	01 00                	add    DWORD PTR [rax],eax
    228f:	00 01                	add    BYTE PTR [rcx],al
    2291:	08 84 0b 44 01 00 00 	or     BYTE PTR [rbx+rcx*1+0x144],al
    2298:	01 08                	add    DWORD PTR [rax],ecx
    229a:	8a 0b                	mov    cl,BYTE PTR [rbx]
    229c:	7d 03                	jge    22a1 <_Z10debugPrintP4List+0x51>
    229e:	00 00                	add    BYTE PTR [rax],al
    22a0:	01 08                	add    DWORD PTR [rax],ecx
    22a2:	8d 0b                	lea    ecx,[rbx]
    22a4:	99                   	cdq
    22a5:	03 00                	add    eax,DWORD PTR [rax]
    22a7:	00 01                	add    BYTE PTR [rcx],al
    22a9:	08 90 0b b4 03 00    	or     BYTE PTR [rax+0x3b40b],dl
    22af:	00 01                	add    BYTE PTR [rcx],al
    22b1:	08 91 0b d1 03 00    	or     BYTE PTR [rcx+0x3d10b],dl
    22b7:	00 01                	add    BYTE PTR [rcx],al
    22b9:	08 92 0b e7 03 00    	or     BYTE PTR [rdx+0x3e70b],dl
    22bf:	00 01                	add    BYTE PTR [rcx],al
    22c1:	08 93 0b fd 03 00    	or     BYTE PTR [rbx+0x3fd0b],dl
    22c7:	00 01                	add    BYTE PTR [rcx],al
    22c9:	08 95 0b 27 04 00    	or     BYTE PTR [rbp+0x4270b],dl
    22cf:	00 01                	add    BYTE PTR [rcx],al
    22d1:	08 98 0b 43 04 00    	or     BYTE PTR [rax+0x4430b],bl
    22d7:	00 01                	add    BYTE PTR [rcx],al
    22d9:	08 9a 0b 59 04 00    	or     BYTE PTR [rdx+0x4590b],bl
    22df:	00 01                	add    BYTE PTR [rcx],al
    22e1:	08 9d 0b 74 04 00    	or     BYTE PTR [rbp+0x4740b],bl
    22e7:	00 01                	add    BYTE PTR [rcx],al
    22e9:	08 9e 0b 8f 04 00    	or     BYTE PTR [rsi+0x48f0b],bl
    22ef:	00 01                	add    BYTE PTR [rcx],al
    22f1:	08 9f 0b c0 04 00    	or     BYTE PTR [rdi+0x4c00b],bl
    22f7:	00 01                	add    BYTE PTR [rcx],al
    22f9:	08 a1 0b e0 04 00    	or     BYTE PTR [rcx+0x4e00b],ah
    22ff:	00 01                	add    BYTE PTR [rcx],al
    2301:	08 a4 0b 00 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x500],ah
    2308:	01 08                	add    DWORD PTR [rax],ecx
    230a:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    230b:	0b 13                	or     edx,DWORD PTR [rbx]
    230d:	05 00 00 01 08       	add    eax,0x8010000
    2312:	a9 0b 20 05 00       	test   eax,0x5200b
    2317:	00 01                	add    BYTE PTR [rcx],al
    2319:	08 aa 0b 31 05 00    	or     BYTE PTR [rdx+0x5310b],ch
    231f:	00 01                	add    BYTE PTR [rcx],al
    2321:	08 ab 0b 51 05 00    	or     BYTE PTR [rbx+0x5510b],ch
    2327:	00 01                	add    BYTE PTR [rcx],al
    2329:	08 ac 0b 74 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x574],ch
    2330:	01 08                	add    DWORD PTR [rax],ecx
    2332:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2333:	0b 97 05 00 00 01    	or     edx,DWORD PTR [rdi+0x1000005]
    2339:	08 af 0b ad 05 00    	or     BYTE PTR [rdi+0x5ad0b],ch
    233f:	00 01                	add    BYTE PTR [rcx],al
    2341:	08 b0 0b d2 05 00    	or     BYTE PTR [rax+0x5d20b],dh
    2347:	00 01                	add    BYTE PTR [rcx],al
    2349:	08 f4                	or     ah,dh
    234b:	16                   	(bad)
    234c:	75 01                	jne    234f <_Z10debugPrintP4List+0xff>
    234e:	00 00                	add    BYTE PTR [rax],al
    2350:	01 08                	add    DWORD PTR [rax],ecx
    2352:	f9                   	stc
    2353:	16                   	(bad)
    2354:	32 06                	xor    al,BYTE PTR [rsi]
    2356:	00 00                	add    BYTE PTR [rax],al
    2358:	01 08                	add    DWORD PTR [rax],ecx
    235a:	fa                   	cli
    235b:	16                   	(bad)
    235c:	4c 06                	rex.WR (bad)
    235e:	00 00                	add    BYTE PTR [rax],al
    2360:	01 08                	add    DWORD PTR [rax],ecx
    2362:	fc                   	cld
    2363:	16                   	(bad)
    2364:	67 06                	addr32 (bad)
    2366:	00 00                	add    BYTE PTR [rax],al
    2368:	01 08                	add    DWORD PTR [rax],ecx
    236a:	fd                   	std
    236b:	16                   	(bad)
    236c:	c3                   	ret
    236d:	06                   	(bad)
    236e:	00 00                	add    BYTE PTR [rax],al
    2370:	01 08                	add    DWORD PTR [rax],ecx
    2372:	fe                   	(bad)
    2373:	16                   	(bad)
    2374:	7d 06                	jge    237c <_Z10debugPrintP4List+0x12c>
    2376:	00 00                	add    BYTE PTR [rax],al
    2378:	01 08                	add    DWORD PTR [rax],ecx
    237a:	ff 16                	call   QWORD PTR [rsi]
    237c:	a0 06 00 00 29 08 00 	movabs al,ds:0x1601000829000006
    2383:	01 16 
    2385:	de 06                	fiadd  WORD PTR [rsi]
    2387:	00 00                	add    BYTE PTR [rax],al
    2389:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    238c:	73 00                	jae    238e <_Z10debugPrintP4List+0x13e>
    238e:	89 0f                	mov    DWORD PTR [rdi],ecx
    2390:	03 00                	add    eax,DWORD PTR [rax]
    2392:	00 21                	add    BYTE PTR [rcx],ah
    2394:	07                   	(bad)
    2395:	00 00                	add    BYTE PTR [rax],al
    2397:	d3 02                	rol    DWORD PTR [rdx],cl
    2399:	00 00                	add    BYTE PTR [rax],al
    239b:	02 21                	add    ah,BYTE PTR [rcx]
    239d:	07                   	(bad)
    239e:	00 00                	add    BYTE PTR [rax],al
    23a0:	00 0b                	add    BYTE PTR [rbx],cl
    23a2:	61                   	(bad)
    23a3:	62 73 00 55 1b       	(bad)
    23a8:	00 00                	add    BYTE PTR [rax],al
    23aa:	00 30                	add    BYTE PTR [rax],dh
    23ac:	07                   	(bad)
    23ad:	00 00                	add    BYTE PTR [rax],al
    23af:	eb 02                	jmp    23b3 <_Z10debugPrintP4List+0x163>
    23b1:	00 00                	add    BYTE PTR [rax],al
    23b3:	02 30                	add    dh,BYTE PTR [rax]
    23b5:	07                   	(bad)
    23b6:	00 00                	add    BYTE PTR [rax],al
    23b8:	00 0b                	add    BYTE PTR [rbx],cl
    23ba:	61                   	(bad)
    23bb:	62 73 00 4f fb       	(bad)
    23c0:	02 00                	add    al,BYTE PTR [rax]
    23c2:	00 d9                	add    cl,bl
    23c4:	00 00                	add    BYTE PTR [rax],al
    23c6:	00 03                	add    BYTE PTR [rbx],al
    23c8:	03 00                	add    eax,DWORD PTR [rax]
    23ca:	00 02                	add    BYTE PTR [rdx],al
    23cc:	d9 00                	fld    DWORD PTR [rax]
    23ce:	00 00                	add    BYTE PTR [rax],al
    23d0:	00 0b                	add    BYTE PTR [rbx],cl
    23d2:	61                   	(bad)
    23d3:	62 73 00 4b 05       	(bad)
    23d8:	03 00                	add    eax,DWORD PTR [rax]
    23da:	00 e7                	add    bh,ah
    23dc:	00 00                	add    BYTE PTR [rax],al
    23de:	00 1b                	add    BYTE PTR [rbx],bl
    23e0:	03 00                	add    eax,DWORD PTR [rax]
    23e2:	00 02                	add    BYTE PTR [rdx],al
    23e4:	e7 00                	out    0x0,eax
    23e6:	00 00                	add    BYTE PTR [rax],al
    23e8:	00 0b                	add    BYTE PTR [rbx],cl
    23ea:	61                   	(bad)
    23eb:	62 73 00 47 f1       	(bad)
    23f0:	02 00                	add    al,BYTE PTR [rax]
    23f2:	00 ca                	add    dl,cl
    23f4:	03 00                	add    eax,DWORD PTR [rax]
    23f6:	00 33                	add    BYTE PTR [rbx],dh
    23f8:	03 00                	add    eax,DWORD PTR [rax]
    23fa:	00 02                	add    BYTE PTR [rdx],al
    23fc:	ca 03 00             	retf   0x3
    23ff:	00 00                	add    BYTE PTR [rax],al
    2401:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    2404:	73 00                	jae    2406 <_Z10debugPrintP4List+0x1b6>
    2406:	3d 41 00 00 00       	cmp    eax,0x41
    240b:	d2 00                	rol    BYTE PTR [rax],cl
    240d:	00 00                	add    BYTE PTR [rax],al
    240f:	4b 03 00             	rex.WXB add rax,QWORD PTR [r8]
    2412:	00 02                	add    BYTE PTR [rdx],al
    2414:	d2 00                	rol    BYTE PTR [rax],cl
    2416:	00 00                	add    BYTE PTR [rax],al
    2418:	00 0b                	add    BYTE PTR [rbx],cl
    241a:	61                   	(bad)
    241b:	62 73 00 38 11       	(bad)
    2420:	00 00                	add    BYTE PTR [rax],al
    2422:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    2425:	00 00                	add    BYTE PTR [rax],al
    2427:	63 03                	movsxd eax,DWORD PTR [rbx]
    2429:	00 00                	add    BYTE PTR [rax],al
    242b:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    242e:	00 00                	add    BYTE PTR [rax],al
    2430:	00 1c 64             	add    BYTE PTR [rsp+riz*2],bl
    2433:	69 76 00 b5 74 00 00 	imul   esi,DWORD PTR [rsi+0x0],0x74b5
    243a:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
    243e:	00 02                	add    BYTE PTR [rdx],al
    2440:	77 00                	ja     2442 <_Z10debugPrintP4List+0x1f2>
    2442:	00 00                	add    BYTE PTR [rax],al
    2444:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    2447:	00 00                	add    BYTE PTR [rax],al
    2449:	00 00                	add    BYTE PTR [rax],al
    244b:	07                   	(bad)
    244c:	6d                   	ins    DWORD PTR es:[rdi],dx
    244d:	00 00                	add    BYTE PTR [rax],al
    244f:	00 de                	add    dh,bl
    2451:	02 0c 64             	add    cl,BYTE PTR [rsp+riz*2]
    2454:	00 00                	add    BYTE PTR [rax],al
    2456:	00 93 03 00 00 02    	add    BYTE PTR [rbx+0x2000003],dl
    245c:	93                   	xchg   ebx,eax
    245d:	03 00                	add    eax,DWORD PTR [rax]
    245f:	00 00                	add    BYTE PTR [rax],al
    2461:	08 98 03 00 00 2a    	or     BYTE PTR [rax+0x2a000003],bl
    2467:	2b 33                	sub    esi,DWORD PTR [rbx]
    2469:	00 00                	add    BYTE PTR [rax],al
    246b:	00 07                	add    BYTE PTR [rdi],al
    246d:	e3 02                	jrcxz  2471 <_Z10debugPrintP4List+0x221>
    246f:	12 33                	adc    dh,BYTE PTR [rbx]
    2471:	00 00                	add    BYTE PTR [rax],al
    2473:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
    2477:	00 b4 03 00 00 02 93 	add    BYTE PTR [rbx+rax*1-0x6cfe0000],dh
    247e:	03 00                	add    eax,DWORD PTR [rax]
    2480:	00 00                	add    BYTE PTR [rax],al
    2482:	09 cd                	or     ebp,ecx
    2484:	01 00                	add    DWORD PTR [rax],eax
    2486:	00 0a                	add    BYTE PTR [rdx],cl
    2488:	19 01                	sbb    DWORD PTR [rcx],eax
    248a:	ca 03 00             	retf   0x3
    248d:	00 ca                	add    dl,cl
    248f:	03 00                	add    eax,DWORD PTR [rax]
    2491:	00 02                	add    BYTE PTR [rdx],al
    2493:	cd 00                	int    0x0
    2495:	00 00                	add    BYTE PTR [rax],al
    2497:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    249a:	04 f8                	add    al,0xf8
    249c:	01 00                	add    DWORD PTR [rax],eax
    249e:	00 07                	add    BYTE PTR [rdi],al
    24a0:	d2 01                	rol    BYTE PTR [rcx],cl
    24a2:	00 00                	add    BYTE PTR [rax],al
    24a4:	e1 01                	loope  24a7 <_Z8readFilePKcPm+0x27>
    24a6:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    24aa:	00 e7                	add    bh,ah
    24ac:	03 00                	add    eax,DWORD PTR [rax]
    24ae:	00 02                	add    BYTE PTR [rdx],al
    24b0:	cd 00                	int    0x0
    24b2:	00 00                	add    BYTE PTR [rax],al
    24b4:	00 07                	add    BYTE PTR [rdi],al
    24b6:	dc 01                	fadd   QWORD PTR [rcx]
    24b8:	00 00                	add    BYTE PTR [rax],al
    24ba:	e6 01                	out    0x1,al
    24bc:	01 77 00             	add    DWORD PTR [rdi+0x0],esi
    24bf:	00 00                	add    BYTE PTR [rax],al
    24c1:	fd                   	std
    24c2:	03 00                	add    eax,DWORD PTR [rax]
    24c4:	00 02                	add    BYTE PTR [rdx],al
    24c6:	cd 00                	int    0x0
    24c8:	00 00                	add    BYTE PTR [rax],al
    24ca:	00 09                	add    BYTE PTR [rcx],cl
    24cc:	65 00 00             	add    BYTE PTR gs:[rax],al
    24cf:	00 0b                	add    BYTE PTR [rbx],cl
    24d1:	14 01                	adc    al,0x1
    24d3:	8a 00                	mov    al,BYTE PTR [rax]
    24d5:	00 00                	add    BYTE PTR [rax],al
    24d7:	27                   	(bad)
    24d8:	04 00                	add    al,0x0
    24da:	00 02                	add    BYTE PTR [rdx],al
    24dc:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    24dd:	01 00                	add    DWORD PTR [rax],eax
    24df:	00 02                	add    BYTE PTR [rdx],al
    24e1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    24e2:	01 00                	add    DWORD PTR [rax],eax
    24e4:	00 02                	add    BYTE PTR [rdx],al
    24e6:	c1 00 00             	rol    DWORD PTR [rax],0x0
    24e9:	00 02                	add    BYTE PTR [rdx],al
    24eb:	c1 00 00             	rol    DWORD PTR [rax],0x0
    24ee:	00 02                	add    BYTE PTR [rdx],al
    24f0:	81 01 00 00 00 2c    	add    DWORD PTR [rcx],0x2c000000
    24f6:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
    24fd:	0e 
    24fe:	13 01                	adc    eax,DWORD PTR [rcx]
    2500:	00 00                	add    BYTE PTR [rax],al
    2502:	43 04 00             	rex.XB add al,0x0
    2505:	00 02                	add    BYTE PTR [rdx],al
    2507:	64 00 00             	add    BYTE PTR fs:[rax],al
    250a:	00 02                	add    BYTE PTR [rdx],al
    250c:	64 00 00             	add    BYTE PTR fs:[rax],al
    250f:	00 00                	add    BYTE PTR [rax],al
    2511:	07                   	(bad)
    2512:	bd 00 00 00 05       	mov    ebp,0x5000000
    2517:	03 0e                	add    ecx,DWORD PTR [rsi]
    2519:	8c 00                	mov    WORD PTR [rax],es
    251b:	00 00                	add    BYTE PTR [rax],al
    251d:	59                   	pop    rcx
    251e:	04 00                	add    al,0x0
    2520:	00 02                	add    BYTE PTR [rdx],al
    2522:	cd 00                	int    0x0
    2524:	00 00                	add    BYTE PTR [rax],al
    2526:	00 07                	add    BYTE PTR [rdi],al
    2528:	c3                   	ret
    2529:	02 00                	add    al,BYTE PTR [rax]
    252b:	00 e2                	add    dl,ah
    252d:	03 0f                	add    ecx,DWORD PTR [rdi]
    252f:	44 01 00             	add    DWORD PTR [rax],r8d
    2532:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    2536:	00 02                	add    BYTE PTR [rdx],al
    2538:	77 00                	ja     253a <_Z8readFilePKcPm+0xba>
    253a:	00 00                	add    BYTE PTR [rax],al
    253c:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    253f:	00 00                	add    BYTE PTR [rax],al
    2541:	00 07                	add    BYTE PTR [rdi],al
    2543:	33 02                	xor    eax,DWORD PTR [rdx]
    2545:	00 00                	add    BYTE PTR [rax],al
    2547:	26 04 0c             	es add al,0xc
    254a:	64 00 00             	add    BYTE PTR fs:[rax],al
    254d:	00 8f 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],cl
    2553:	cd 00                	int    0x0
    2555:	00 00                	add    BYTE PTR [rax],al
    2557:	02 c1                	add    al,cl
    2559:	00 00                	add    BYTE PTR [rax],al
    255b:	00 00                	add    BYTE PTR [rax],al
    255d:	09 39                	or     DWORD PTR [rcx],edi
    255f:	02 00                	add    al,BYTE PTR [rax]
    2561:	00 0c 75 01 c1 00 00 	add    BYTE PTR [rsi*2+0xc101],cl
    2568:	00 af 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],ch
    256e:	af                   	scas   eax,DWORD PTR es:[rdi]
    256f:	04 00                	add    al,0x0
    2571:	00 02                	add    BYTE PTR [rdx],al
    2573:	cd 00                	int    0x0
    2575:	00 00                	add    BYTE PTR [rax],al
    2577:	02 c1                	add    al,cl
    2579:	00 00                	add    BYTE PTR [rax],al
    257b:	00 00                	add    BYTE PTR [rax],al
    257d:	08 b4 04 00 00 04 04 	or     BYTE PTR [rsp+rax*1+0x4040000],dh
    2584:	05 61 02 00 00       	add    eax,0x261
    2589:	1b b4 04 00 00 07 d9 	sbb    esi,DWORD PTR [rsp+rax*1-0x26f90000]
    2590:	00 00                	add    BYTE PTR [rax],al
    2592:	00 29                	add    BYTE PTR [rcx],ch
    2594:	04 0c                	add    al,0xc
    2596:	64 00 00             	add    BYTE PTR fs:[rax],al
    2599:	00 e0                	add    al,ah
    259b:	04 00                	add    al,0x0
    259d:	00 02                	add    BYTE PTR [rdx],al
    259f:	af                   	scas   eax,DWORD PTR es:[rdi]
    25a0:	04 00                	add    al,0x0
    25a2:	00 02                	add    BYTE PTR [rdx],al
    25a4:	cd 00                	int    0x0
    25a6:	00 00                	add    BYTE PTR [rax],al
    25a8:	02 c1                	add    al,cl
    25aa:	00 00                	add    BYTE PTR [rax],al
    25ac:	00 00                	add    BYTE PTR [rax],al
    25ae:	1d 25 00 00 00       	sbb    eax,0x25
    25b3:	ca 03 00             	retf   0x3
    25b6:	05 00 00 02 8a       	add    eax,0x8a020000
    25bb:	00 00                	add    BYTE PTR [rax],al
    25bd:	00 02                	add    BYTE PTR [rdx],al
    25bf:	c1 00 00             	rol    DWORD PTR [rax],0x0
    25c2:	00 02                	add    BYTE PTR [rdx],al
    25c4:	c1 00 00             	rol    DWORD PTR [rax],0x0
    25c7:	00 02                	add    BYTE PTR [rdx],al
    25c9:	81 01 00 00 00 2d    	add    DWORD PTR [rcx],0x2d000000
    25cf:	36 00 00             	ss add BYTE PTR [rax],al
    25d2:	00 07                	add    BYTE PTR [rdi],al
    25d4:	fa                   	cli
    25d5:	02 0d 13 05 00 00    	add    cl,BYTE PTR [rip+0x513]        # 2aee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x8e>
    25db:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
    25df:	00 00                	add    BYTE PTR [rax],al
    25e1:	2e ec                	cs in  al,dx
    25e3:	02 00                	add    al,BYTE PTR [rax]
    25e5:	00 07                	add    BYTE PTR [rdi],al
    25e7:	3d 02 0c 64 00       	cmp    eax,0x640c02
    25ec:	00 00                	add    BYTE PTR [rax],al
    25ee:	1d eb 02 00 00       	sbb    eax,0x2eb
    25f3:	3f                   	(bad)
    25f4:	02 31                	add    dh,BYTE PTR [rcx]
    25f6:	05 00 00 02 3c       	add    eax,0x3c020000
    25fb:	00 00                	add    BYTE PTR [rax],al
    25fd:	00 00                	add    BYTE PTR [rax],al
    25ff:	09 05 01 00 00 07    	or     DWORD PTR [rip+0x7000001],eax        # 7002606 <_end+0x6ffc5ee>
    2605:	76 0f                	jbe    2616 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x16>
    2607:	ca 03 00             	retf   0x3
    260a:	00 4c 05 00          	add    BYTE PTR [rbp+rax*1+0x0],cl
    260e:	00 02                	add    BYTE PTR [rdx],al
    2610:	cd 00                	int    0x0
    2612:	00 00                	add    BYTE PTR [rax],al
    2614:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    2618:	00 00                	add    BYTE PTR [rax],al
    261a:	08 8c 00 00 00 11 54 	or     BYTE PTR [rax+rax*1+0x54110000],cl
    2621:	00 00                	add    BYTE PTR [rax],al
    2623:	00 d7                	add    bh,dl
    2625:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    2628:	00 00                	add    BYTE PTR [rax],al
    262a:	77 00                	ja     262c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2c>
    262c:	00 00                	add    BYTE PTR [rax],al
    262e:	74 05                	je     2635 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x35>
    2630:	00 00                	add    BYTE PTR [rax],al
    2632:	02 cd                	add    cl,ch
    2634:	00 00                	add    BYTE PTR [rax],al
    2636:	00 02                	add    BYTE PTR [rdx],al
    2638:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    263e:	00 00                	add    BYTE PTR [rax],al
    2640:	00 00                	add    BYTE PTR [rax],al
    2642:	11 25 02 00 00 db    	adc    DWORD PTR [rip+0xffffffffdb000002],esp        # ffffffffdb00264a <_end+0xffffffffdaffc632>
    2648:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    264b:	00 00                	add    BYTE PTR [rax],al
    264d:	43 00 00             	rex.XB add BYTE PTR [r8],al
    2650:	00 97 05 00 00 02    	add    BYTE PTR [rdi+0x2000005],dl
    2656:	cd 00                	int    0x0
    2658:	00 00                	add    BYTE PTR [rax],al
    265a:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    265e:	00 02                	add    BYTE PTR [rdx],al
    2660:	64 00 00             	add    BYTE PTR fs:[rax],al
    2663:	00 00                	add    BYTE PTR [rax],al
    2665:	07                   	(bad)
    2666:	db 25 00 00 9b 03    	(bad)  [rip+0x39b0000]        # 39b266c <_end+0x39ac654>
    266c:	0c 64                	or     al,0x64
    266e:	00 00                	add    BYTE PTR [rax],al
    2670:	00 ad 05 00 00 02    	add    BYTE PTR [rbp+0x2000005],ch
    2676:	cd 00                	int    0x0
    2678:	00 00                	add    BYTE PTR [rax],al
    267a:	00 09                	add    BYTE PTR [rcx],cl
    267c:	e1 01                	loope  267f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x7f>
    267e:	00 00                	add    BYTE PTR [rax],al
    2680:	0c 8f                	or     al,0x8f
    2682:	01 c1                	add    ecx,eax
    2684:	00 00                	add    BYTE PTR [rax],al
    2686:	00 cd                	add    ch,cl
    2688:	05 00 00 02 8c       	add    eax,0x8c020000
    268d:	00 00                	add    BYTE PTR [rax],al
    268f:	00 02                	add    BYTE PTR [rdx],al
    2691:	cd 05                	int    0x5
    2693:	00 00                	add    BYTE PTR [rax],al
    2695:	02 c1                	add    al,cl
    2697:	00 00                	add    BYTE PTR [rax],al
    2699:	00 00                	add    BYTE PTR [rax],al
    269b:	08 bb 04 00 00 09    	or     BYTE PTR [rbx+0x9000004],bh
    26a1:	42 02 00             	rex.X add al,BYTE PTR [rax]
    26a4:	00 0c 4f             	add    BYTE PTR [rdi+rcx*2],cl
    26a7:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    26ab:	00 ed                	add    ch,ch
    26ad:	05 00 00 02 8c       	add    eax,0x8c020000
    26b2:	00 00                	add    BYTE PTR [rax],al
    26b4:	00 02                	add    BYTE PTR [rdx],al
    26b6:	b4 04                	mov    ah,0x4
    26b8:	00 00                	add    BYTE PTR [rax],al
    26ba:	00 2f                	add    BYTE PTR [rdi],ch
    26bc:	12 02                	adc    al,BYTE PTR [rdx]
    26be:	00 00                	add    BYTE PTR [rax],al
    26c0:	0f 57 01             	xorps  xmm0,XMMWORD PTR [rcx]
    26c3:	0b 4c 06 00          	or     ecx,DWORD PTR [rsi+rax*1+0x0]
    26c7:	00 01                	add    BYTE PTR [rcx],al
    26c9:	08 cc                	or     ah,cl
    26cb:	0b 75 01             	or     esi,DWORD PTR [rbp+0x1]
    26ce:	00 00                	add    BYTE PTR [rax],al
    26d0:	01 08                	add    DWORD PTR [rax],ecx
    26d2:	dc 0b                	fmul   QWORD PTR [rbx]
    26d4:	4c 06                	rex.WR (bad)
    26d6:	00 00                	add    BYTE PTR [rax],al
    26d8:	01 08                	add    DWORD PTR [rax],ecx
    26da:	e7 0b                	out    0xb,eax
    26dc:	67 06                	addr32 (bad)
    26de:	00 00                	add    BYTE PTR [rax],al
    26e0:	01 08                	add    DWORD PTR [rax],ecx
    26e2:	e8 0b 7d 06 00       	call   6a3f2 <_end+0x643da>
    26e7:	00 01                	add    BYTE PTR [rcx],al
    26e9:	08 e9                	or     cl,ch
    26eb:	0b a0 06 00 00 01    	or     esp,DWORD PTR [rax+0x1000006]
    26f1:	08 eb                	or     bl,ch
    26f3:	0b c3                	or     eax,ebx
    26f5:	06                   	(bad)
    26f6:	00 00                	add    BYTE PTR [rax],al
    26f8:	01 08                	add    DWORD PTR [rax],ecx
    26fa:	ec                   	in     al,dx
    26fb:	0b de                	or     ebx,esi
    26fd:	06                   	(bad)
    26fe:	00 00                	add    BYTE PTR [rax],al
    2700:	1c 64                	sbb    al,0x64
    2702:	69 76 00 d9 b8 01 00 	imul   esi,DWORD PTR [rsi+0x0],0x1b8d9
    2709:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    270c:	00 00                	add    BYTE PTR [rax],al
    270e:	02 d2                	add    dl,dl
    2710:	00 00                	add    BYTE PTR [rax],al
    2712:	00 02                	add    BYTE PTR [rdx],al
    2714:	d2 00                	rol    BYTE PTR [rax],cl
    2716:	00 00                	add    BYTE PTR [rax],al
    2718:	00 00                	add    BYTE PTR [rax],al
    271a:	07                   	(bad)
    271b:	c2 02 00             	ret    0x2
    271e:	00 e6                	add    dh,ah
    2720:	03 1e                	add    ebx,DWORD PTR [rsi]
    2722:	75 01                	jne    2725 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x125>
    2724:	00 00                	add    BYTE PTR [rax],al
    2726:	67 06                	addr32 (bad)
    2728:	00 00                	add    BYTE PTR [rax],al
    272a:	02 d2                	add    dl,dl
    272c:	00 00                	add    BYTE PTR [rax],al
    272e:	00 02                	add    BYTE PTR [rdx],al
    2730:	d2 00                	rol    BYTE PTR [rax],cl
    2732:	00 00                	add    BYTE PTR [rax],al
    2734:	00 07                	add    BYTE PTR [rdi],al
    2736:	2d 02 00 00 ed       	sub    eax,0xed000002
    273b:	01 01                	add    DWORD PTR [rcx],eax
    273d:	d2 00                	rol    BYTE PTR [rax],cl
    273f:	00 00                	add    BYTE PTR [rax],al
    2741:	7d 06                	jge    2749 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x149>
    2743:	00 00                	add    BYTE PTR [rax],al
    2745:	02 cd                	add    cl,ch
    2747:	00 00                	add    BYTE PTR [rax],al
    2749:	00 00                	add    BYTE PTR [rax],al
    274b:	11 88 00 00 00 ee    	adc    DWORD PTR [rax-0x12000000],ecx
    2751:	16                   	(bad)
    2752:	7f 00                	jg     2754 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x154>
    2754:	00 00                	add    BYTE PTR [rax],al
    2756:	d2 00                	rol    BYTE PTR [rax],cl
    2758:	00 00                	add    BYTE PTR [rax],al
    275a:	a0 06 00 00 02 cd 00 	movabs al,ds:0xcd02000006
    2761:	00 00 
    2763:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    2767:	00 02                	add    BYTE PTR [rdx],al
    2769:	64 00 00             	add    BYTE PTR fs:[rax],al
    276c:	00 00                	add    BYTE PTR [rax],al
    276e:	11 b9 02 00 00 f3    	adc    DWORD PTR [rcx-0xcfffffe],edi
    2774:	1f                   	(bad)
    2775:	b0 02                	mov    al,0x2
    2777:	00 00                	add    BYTE PTR [rax],al
    2779:	e0 00                	loopne 277b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x17b>
    277b:	00 00                	add    BYTE PTR [rax],al
    277d:	c3                   	ret
    277e:	06                   	(bad)
    277f:	00 00                	add    BYTE PTR [rax],al
    2781:	02 cd                	add    cl,ch
    2783:	00 00                	add    BYTE PTR [rax],al
    2785:	00 02                	add    BYTE PTR [rdx],al
    2787:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    278d:	00 00                	add    BYTE PTR [rax],al
    278f:	00 00                	add    BYTE PTR [rax],al
    2791:	09 97 02 00 00 07    	or     DWORD PTR [rdi+0x7000002],edx
    2797:	7c 0e                	jl     27a7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a7>
    2799:	e7 00                	out    0x0,eax
    279b:	00 00                	add    BYTE PTR [rax],al
    279d:	de 06                	fiadd  WORD PTR [rsi]
    279f:	00 00                	add    BYTE PTR [rax],al
    27a1:	02 cd                	add    cl,ch
    27a3:	00 00                	add    BYTE PTR [rax],al
    27a5:	00 02                	add    BYTE PTR [rdx],al
    27a7:	4c 05 00 00 00 09    	rex.WR add rax,0x9000000
    27ad:	2b 00                	sub    eax,DWORD PTR [rax]
    27af:	00 00                	add    BYTE PTR [rax],al
    27b1:	07                   	(bad)
    27b2:	7f 14                	jg     27c8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c8>
    27b4:	d9 00                	fld    DWORD PTR [rax]
    27b6:	00 00                	add    BYTE PTR [rax],al
    27b8:	f9                   	stc
    27b9:	06                   	(bad)
    27ba:	00 00                	add    BYTE PTR [rax],al
    27bc:	02 cd                	add    cl,ch
    27be:	00 00                	add    BYTE PTR [rax],al
    27c0:	00 02                	add    BYTE PTR [rdx],al
    27c2:	4c 05 00 00 00 01    	rex.WR add rax,0x1000000
    27c8:	0d 27 0c 7d 03       	or     eax,0x37d0c27
    27cd:	00 00                	add    BYTE PTR [rax],al
    27cf:	01 0d 2b 0e 99 03    	add    DWORD PTR [rip+0x3990e2b],ecx        # 3993600 <_end+0x398d5e8>
    27d5:	00 00                	add    BYTE PTR [rax],al
    27d7:	01 0d 2e 0e 00 05    	add    DWORD PTR [rip+0x5000e2e],ecx        # 500360b <_end+0x4ffd5f3>
    27dd:	00 00                	add    BYTE PTR [rax],al
    27df:	01 0d 36 0c 13 01    	add    DWORD PTR [rip+0x1130c36],ecx        # 113341b <_end+0x112d403>
    27e5:	00 00                	add    BYTE PTR [rax],al
    27e7:	01 0d 37 0c 44 01    	add    DWORD PTR [rip+0x1440c37],ecx        # 1443424 <_end+0x143d40c>
    27ed:	00 00                	add    BYTE PTR [rax],al
    27ef:	04 10                	add    al,0x10
    27f1:	04 8c                	add    al,0x8c
    27f3:	02 00                	add    al,BYTE PTR [rax]
    27f5:	00 01                	add    BYTE PTR [rcx],al
    27f7:	0d 39 0c bb 02       	or     eax,0x2bb0c39
    27fc:	00 00                	add    BYTE PTR [rax],al
    27fe:	04 10                	add    al,0x10
    2800:	05 ea 01 00 00       	add    eax,0x1ea
    2805:	01 0d 39 0c d3 02    	add    DWORD PTR [rip+0x2d30c39],ecx        # 2d33444 <_end+0x2d2d42c>
    280b:	00 00                	add    BYTE PTR [rax],al
    280d:	01 0d 39 0c eb 02    	add    DWORD PTR [rip+0x2eb0c39],ecx        # 2eb344c <_end+0x2ead434>
    2813:	00 00                	add    BYTE PTR [rax],al
    2815:	01 0d 39 0c 03 03    	add    DWORD PTR [rip+0x3030c39],ecx        # 3033454 <_end+0x302d43c>
    281b:	00 00                	add    BYTE PTR [rax],al
    281d:	01 0d 39 0c 1b 03    	add    DWORD PTR [rip+0x31b0c39],ecx        # 31b345c <_end+0x31ad444>
    2823:	00 00                	add    BYTE PTR [rax],al
    2825:	01 0d 39 0c 33 03    	add    DWORD PTR [rip+0x3330c39],ecx        # 3333464 <_end+0x332d44c>
    282b:	00 00                	add    BYTE PTR [rax],al
    282d:	01 0d 39 0c 4b 03    	add    DWORD PTR [rip+0x34b0c39],ecx        # 34b346c <_end+0x34ad454>
    2833:	00 00                	add    BYTE PTR [rax],al
    2835:	01 0d 3a 0c b4 03    	add    DWORD PTR [rip+0x3b40c3a],ecx        # 3b43475 <_end+0x3b3d45d>
    283b:	00 00                	add    BYTE PTR [rax],al
    283d:	01 0d 3b 0c d1 03    	add    DWORD PTR [rip+0x3d10c3b],ecx        # 3d1347e <_end+0x3d0d466>
    2843:	00 00                	add    BYTE PTR [rax],al
    2845:	01 0d 3c 0c e7 03    	add    DWORD PTR [rip+0x3e70c3c],ecx        # 3e73487 <_end+0x3e6d46f>
    284b:	00 00                	add    BYTE PTR [rax],al
    284d:	01 0d 3d 0c fd 03    	add    DWORD PTR [rip+0x3fd0c3d],ecx        # 3fd3490 <_end+0x3fcd478>
    2853:	00 00                	add    BYTE PTR [rax],al
    2855:	01 0d 3f 0c 32 06    	add    DWORD PTR [rip+0x6320c3f],ecx        # 632349a <_end+0x631d482>
    285b:	00 00                	add    BYTE PTR [rax],al
    285d:	01 0d 3f 0c 63 03    	add    DWORD PTR [rip+0x3630c3f],ecx        # 36334a2 <_end+0x362d48a>
    2863:	00 00                	add    BYTE PTR [rax],al
    2865:	01 0d 3f 0c 27 04    	add    DWORD PTR [rip+0x4270c3f],ecx        # 42734aa <_end+0x426d492>
    286b:	00 00                	add    BYTE PTR [rax],al
    286d:	01 0d 41 0c 43 04    	add    DWORD PTR [rip+0x4430c41],ecx        # 44334b4 <_end+0x442d49c>
    2873:	00 00                	add    BYTE PTR [rax],al
    2875:	01 0d 43 0c 59 04    	add    DWORD PTR [rip+0x4590c43],ecx        # 45934be <_end+0x458d4a6>
    287b:	00 00                	add    BYTE PTR [rax],al
    287d:	01 0d 46 0c 74 04    	add    DWORD PTR [rip+0x4740c46],ecx        # 47434c9 <_end+0x473d4b1>
    2883:	00 00                	add    BYTE PTR [rax],al
    2885:	01 0d 47 0c 8f 04    	add    DWORD PTR [rip+0x48f0c47],ecx        # 48f34d2 <_end+0x48ed4ba>
    288b:	00 00                	add    BYTE PTR [rax],al
    288d:	01 0d 48 0c c0 04    	add    DWORD PTR [rip+0x4c00c48],ecx        # 4c034db <_end+0x4bfd4c3>
    2893:	00 00                	add    BYTE PTR [rax],al
    2895:	01 0d 4a 0c e0 04    	add    DWORD PTR [rip+0x4e00c4a],ecx        # 4e034e5 <_end+0x4dfd4cd>
    289b:	00 00                	add    BYTE PTR [rax],al
    289d:	01 0d 4b 0c 13 05    	add    DWORD PTR [rip+0x5130c4b],ecx        # 51334ee <_end+0x512d4d6>
    28a3:	00 00                	add    BYTE PTR [rax],al
    28a5:	01 0d 4d 0c 20 05    	add    DWORD PTR [rip+0x5200c4d],ecx        # 52034f8 <_end+0x51fd4e0>
    28ab:	00 00                	add    BYTE PTR [rax],al
    28ad:	01 0d 4e 0c 31 05    	add    DWORD PTR [rip+0x5310c4e],ecx        # 5313501 <_end+0x530d4e9>
    28b3:	00 00                	add    BYTE PTR [rax],al
    28b5:	01 0d 4f 0c 51 05    	add    DWORD PTR [rip+0x5510c4f],ecx        # 551350a <_end+0x550d4f2>
    28bb:	00 00                	add    BYTE PTR [rax],al
    28bd:	01 0d 50 0c 74 05    	add    DWORD PTR [rip+0x5740c50],ecx        # 5743513 <_end+0x573d4fb>
    28c3:	00 00                	add    BYTE PTR [rax],al
    28c5:	01 0d 51 0c 97 05    	add    DWORD PTR [rip+0x5970c51],ecx        # 597351c <_end+0x596d504>
    28cb:	00 00                	add    BYTE PTR [rax],al
    28cd:	01 0d 53 0c ad 05    	add    DWORD PTR [rip+0x5ad0c53],ecx        # 5ad3526 <_end+0x5acd50e>
    28d3:	00 00                	add    BYTE PTR [rax],al
    28d5:	01 0d 54 0c d2 05    	add    DWORD PTR [rip+0x5d20c54],ecx        # 5d2352f <_end+0x5d1d517>
    28db:	00 00                	add    BYTE PTR [rax],al
    28dd:	04 02                	add    al,0x2
    28df:	04 00                	add    al,0x0
    28e1:	00 00                	add    BYTE PTR [rax],al
    28e3:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    28e6:	04 c8                	add    al,0xc8
    28e8:	02 00                	add    al,BYTE PTR [rax]
    28ea:	00 30                	add    BYTE PTR [rax],dh
    28ec:	21 08                	and    DWORD PTR [rax],ecx
    28ee:	00 00                	add    BYTE PTR [rax],al
    28f0:	10 0e                	adc    BYTE PTR [rsi],cl
    28f2:	07                   	(bad)
    28f3:	10 52 08             	adc    BYTE PTR [rdx+0x8],dl
    28f6:	00 00                	add    BYTE PTR [rax],al
    28f8:	0e                   	(bad)
    28f9:	8f 03                	pop    QWORD PTR [rbx]
    28fb:	00 00                	add    BYTE PTR [rax],al
    28fd:	0e                   	(bad)
    28fe:	08 0b                	or     BYTE PTR [rbx],cl
    2900:	8c 00                	mov    WORD PTR [rax],es
    2902:	00 00                	add    BYTE PTR [rax],al
    2904:	00 0e                	add    BYTE PTR [rsi],cl
    2906:	ae                   	scas   al,BYTE PTR es:[rdi]
    2907:	05 00 00 0e 09       	add    eax,0x90e0000
    290c:	0e                   	(bad)
    290d:	a9 00 00 00 08       	test   eax,0x8000000
    2912:	0e                   	(bad)
    2913:	b3 05                	mov    bl,0x5
    2915:	00 00                	add    BYTE PTR [rax],al
    2917:	0e                   	(bad)
    2918:	0a 0e                	or     cl,BYTE PTR [rsi]
    291a:	a9 00 00 00 0c       	test   eax,0xc000000
    291f:	00 06                	add    BYTE PTR [rsi],al
    2921:	21 08                	and    DWORD PTR [rax],ecx
    2923:	00 00                	add    BYTE PTR [rax],al
    2925:	0e                   	(bad)
    2926:	0b 03                	or     eax,DWORD PTR [rbx]
    2928:	1d 08 00 00 1e       	sbb    eax,0x1e000008
    292d:	8c 08                	mov    WORD PTR [rax],cs
    292f:	00 00                	add    BYTE PTR [rax],al
    2931:	a8 a9                	test   al,0xa9
    2933:	00 00                	add    BYTE PTR [rax],al
    2935:	00 bd 08 00 00 19    	add    BYTE PTR [rbp+0x19000008],bh
    293b:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    293e:	00 a8 24 a9 00 00    	add    BYTE PTR [rax+0xa924],ch
    2944:	00 19                	add    BYTE PTR [rcx],bl
    2946:	76 00                	jbe    2948 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x348>
    2948:	a8 32                	test   al,0x32
    294a:	a9 00 00 00 12       	test   eax,0x12000000
    294f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2950:	07                   	(bad)
    2951:	00 00                	add    BYTE PTR [rax],al
    2953:	a9 a9 00 00 00       	test   eax,0xa9
    2958:	12 4f 07             	adc    cl,BYTE PTR [rdi+0x7]
    295b:	00 00                	add    BYTE PTR [rax],al
    295d:	aa                   	stos   BYTE PTR es:[rdi],al
    295e:	a9 00 00 00 1f       	test   eax,0x1f000000
    2963:	74 6d                	je     29d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d2>
    2965:	70 00                	jo     2967 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x367>
    2967:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2968:	b5 00                	mov    ch,0x0
    296a:	00 00                	add    BYTE PTR [rax],al
    296c:	12 7d 07             	adc    bh,BYTE PTR [rbp+0x7]
    296f:	00 00                	add    BYTE PTR [rax],al
    2971:	ae                   	scas   al,BYTE PTR es:[rdi]
    2972:	b5 00                	mov    ch,0x0
    2974:	00 00                	add    BYTE PTR [rax],al
    2976:	12 38                	adc    bh,BYTE PTR [rax]
    2978:	09 00                	or     DWORD PTR [rax],eax
    297a:	00 b6 a9 00 00 00    	add    BYTE PTR [rsi+0xa9],dh
    2980:	31 1f                	xor    DWORD PTR [rdi],ebx
    2982:	69 00 b0 64 00 00    	imul   eax,DWORD PTR [rax],0x64b0
    2988:	00 00                	add    BYTE PTR [rax],al
    298a:	00 1e                	add    BYTE PTR [rsi],bl
    298c:	71 07                	jno    2995 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x395>
    298e:	00 00                	add    BYTE PTR [rax],al
    2990:	9e                   	sahf
    2991:	a9 00 00 00 d7       	test   eax,0xd7000000
    2996:	08 00                	or     BYTE PTR [rax],al
    2998:	00 19                	add    BYTE PTR [rcx],bl
    299a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    299b:	75 6d                	jne    2a0a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x40a>
    299d:	00 9e 26 a9 00 00    	add    BYTE PTR [rsi+0xa926],bl
    29a3:	00 00                	add    BYTE PTR [rax],al
    29a5:	0c a1                	or     al,0xa1
    29a7:	08 00                	or     BYTE PTR [rax],al
    29a9:	00 8f 3c 08 00 00    	add    BYTE PTR [rdi+0x83c],cl
    29af:	a9 00 00 00 50       	test   eax,0x50000000
    29b4:	1e                   	(bad)
    29b5:	00 00                	add    BYTE PTR [rax],al
    29b7:	00 00                	add    BYTE PTR [rax],al
    29b9:	00 00                	add    BYTE PTR [rax],al
    29bb:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    29be:	00 00                	add    BYTE PTR [rax],al
    29c0:	00 00                	add    BYTE PTR [rax],al
    29c2:	00 01                	add    BYTE PTR [rcx],al
    29c4:	9c                   	pushf
    29c5:	4b 09 00             	rex.WXB or QWORD PTR [r8],rax
    29c8:	00 0d 8f 03 00 00    	add    BYTE PTR [rip+0x38f],cl        # 2d5d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2fd>
    29ce:	8f                   	(bad)
    29cf:	21 52 08             	and    DWORD PTR [rdx+0x8],edx
    29d2:	00 00                	add    BYTE PTR [rax],al
    29d4:	88 06                	mov    BYTE PTR [rsi],al
    29d6:	00 00                	add    BYTE PTR [rax],al
    29d8:	86 06                	xchg   BYTE PTR [rsi],al
    29da:	00 00                	add    BYTE PTR [rax],al
    29dc:	03 ae 05 00 00 90    	add    ebp,DWORD PTR [rsi-0x6ffffffb]
    29e2:	0e                   	(bad)
    29e3:	a9 00 00 00 9b       	test   eax,0x9b000000
    29e8:	06                   	(bad)
    29e9:	00 00                	add    BYTE PTR [rax],al
    29eb:	95                   	xchg   ebp,eax
    29ec:	06                   	(bad)
    29ed:	00 00                	add    BYTE PTR [rax],al
    29ef:	03 df                	add    ebx,edi
    29f1:	08 00                	or     BYTE PTR [rax],al
    29f3:	00 91 0e a9 00 00    	add    BYTE PTR [rcx+0xa90e],dl
    29f9:	00 be 06 00 00 b2    	add    BYTE PTR [rsi-0x4dfffffa],bh
    29ff:	06                   	(bad)
    2a00:	00 00                	add    BYTE PTR [rax],al
    2a02:	0f bc 01             	bsf    eax,DWORD PTR [rcx]
    2a05:	00 00                	add    BYTE PTR [rax],al
    2a07:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2a0a:	92                   	xchg   edx,eax
    2a0b:	64 00 00             	add    BYTE PTR fs:[rax],al
    2a0e:	00 f6                	add    dh,dh
    2a10:	06                   	(bad)
    2a11:	00 00                	add    BYTE PTR [rax],al
    2a13:	f4                   	hlt
    2a14:	06                   	(bad)
    2a15:	00 00                	add    BYTE PTR [rax],al
    2a17:	00 00                	add    BYTE PTR [rax],al
    2a19:	0c 2a                	or     al,0x2a
    2a1b:	08 00                	or     BYTE PTR [rax],al
    2a1d:	00 81 57 08 00 00    	add    BYTE PTR [rcx+0x857],al
    2a23:	a9 00 00 00 d0       	test   eax,0xd0000000
    2a28:	1d 00 00 00 00       	sbb    eax,0x0
    2a2d:	00 00                	add    BYTE PTR [rax],al
    2a2f:	76 00                	jbe    2a31 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x431>
    2a31:	00 00                	add    BYTE PTR [rax],al
    2a33:	00 00                	add    BYTE PTR [rax],al
    2a35:	00 00                	add    BYTE PTR [rax],al
    2a37:	01 9c c7 09 00 00 0d 	add    DWORD PTR [rdi+rax*8+0xd000009],ebx
    2a3e:	8f 03                	pop    QWORD PTR [rbx]
    2a40:	00 00                	add    BYTE PTR [rax],al
    2a42:	81 25 52 08 00 00 01 	and    DWORD PTR [rip+0x852],0x701        # 329e <_Z7testAllPKcjS0_+0x38e>
    2a49:	07 00 00 
    2a4c:	ff 06                	inc    DWORD PTR [rsi]
    2a4e:	00 00                	add    BYTE PTR [rax],al
    2a50:	0a 41 00             	or     al,BYTE PTR [rcx+0x0]
    2a53:	82                   	(bad)
    2a54:	a9 00 00 00 16       	test   eax,0x16000000
    2a59:	07                   	(bad)
    2a5a:	00 00                	add    BYTE PTR [rax],al
    2a5c:	0e                   	(bad)
    2a5d:	07                   	(bad)
    2a5e:	00 00                	add    BYTE PTR [rax],al
    2a60:	0a 42 00             	or     al,BYTE PTR [rdx+0x0]
    2a63:	83 a9 00 00 00 3f 07 	sub    DWORD PTR [rcx+0x3f000000],0x7
    2a6a:	00 00                	add    BYTE PTR [rax],al
    2a6c:	35 07 00 00 32       	xor    eax,0x32000007
    2a71:	c3                   	ret
    2a72:	08 00                	or     BYTE PTR [rax],al
    2a74:	00 01                	add    BYTE PTR [rcx],al
    2a76:	84 0e                	test   BYTE PTR [rsi],cl
    2a78:	a9 00 00 00 f1       	test   eax,0xf1000000
    2a7d:	ff 0f                	dec    DWORD PTR [rdi]
    2a7f:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2a80:	01 00                	add    DWORD PTR [rax],eax
    2a82:	00 0a                	add    BYTE PTR [rdx],cl
    2a84:	69 00 86 64 00 00    	imul   eax,DWORD PTR [rax],0x6486
    2a8a:	00 6e 07             	add    BYTE PTR [rsi+0x7],ch
    2a8d:	00 00                	add    BYTE PTR [rax],al
    2a8f:	6a 07                	push   0x7
    2a91:	00 00                	add    BYTE PTR [rax],al
    2a93:	00 00                	add    BYTE PTR [rax],al
    2a95:	0c 41                	or     al,0x41
    2a97:	07                   	(bad)
    2a98:	00 00                	add    BYTE PTR [rax],al
    2a9a:	6b 8e 07 00 00 a9 00 	imul   ecx,DWORD PTR [rsi-0x56fffff9],0x0
    2aa1:	00 00                	add    BYTE PTR [rax],al
    2aa3:	60                   	(bad)
    2aa4:	1c 00                	sbb    al,0x0
    2aa6:	00 00                	add    BYTE PTR [rax],al
    2aa8:	00 00                	add    BYTE PTR [rax],al
    2aaa:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    2aad:	00 00                	add    BYTE PTR [rax],al
    2aaf:	00 00                	add    BYTE PTR [rax],al
    2ab1:	00 00                	add    BYTE PTR [rax],al
    2ab3:	01 9c 82 0a 00 00 0d 	add    DWORD PTR [rdx+rax*4+0xd00000a],ebx
    2aba:	8f 03                	pop    QWORD PTR [rbx]
    2abc:	00 00                	add    BYTE PTR [rax],al
    2abe:	6b 21 52             	imul   esp,DWORD PTR [rcx],0x52
    2ac1:	08 00                	or     BYTE PTR [rax],al
    2ac3:	00 81 07 00 00 7f    	add    BYTE PTR [rcx+0x7f000007],al
    2ac9:	07                   	(bad)
    2aca:	00 00                	add    BYTE PTR [rax],al
    2acc:	03 ae 05 00 00 6c    	add    ebp,DWORD PTR [rsi+0x6c000005]
    2ad2:	0e                   	(bad)
    2ad3:	a9 00 00 00 a2       	test   eax,0xa2000000
    2ad8:	07                   	(bad)
    2ad9:	00 00                	add    BYTE PTR [rax],al
    2adb:	8e 07                	mov    es,WORD PTR [rdi]
    2add:	00 00                	add    BYTE PTR [rax],al
    2adf:	03 24 09             	add    esp,DWORD PTR [rcx+rcx*1]
    2ae2:	00 00                	add    BYTE PTR [rax],al
    2ae4:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ae5:	0e                   	(bad)
    2ae6:	a9 00 00 00 27       	test   eax,0x27000000
    2aeb:	08 00                	or     BYTE PTR [rax],al
    2aed:	00 fb                	add    bl,bh
    2aef:	07                   	(bad)
    2af0:	00 00                	add    BYTE PTR [rax],al
    2af2:	03 a9 07 00 00 6e    	add    ebp,DWORD PTR [rcx+0x6e000007]
    2af8:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2afc:	00 48 09             	add    BYTE PTR [rax+0x9],cl
    2aff:	00 00                	add    BYTE PTR [rax],al
    2b01:	3e 09 00             	ds or  DWORD PTR [rax],eax
    2b04:	00 20                	add    BYTE PTR [rax],ah
    2b06:	87 01                	xchg   DWORD PTR [rcx],eax
    2b08:	00 00                	add    BYTE PTR [rax],al
    2b0a:	51                   	push   rcx
    2b0b:	0a 00                	or     al,BYTE PTR [rax]
    2b0d:	00 0a                	add    BYTE PTR [rdx],cl
    2b0f:	69 00 76 64 00 00    	imul   eax,DWORD PTR [rax],0x6476
    2b15:	00 75 09             	add    BYTE PTR [rbp+0x9],dh
    2b18:	00 00                	add    BYTE PTR [rax],al
    2b1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b1b:	09 00                	or     DWORD PTR [rax],eax
    2b1d:	00 00                	add    BYTE PTR [rax],al
    2b1f:	20 97 01 00 00 6b    	and    BYTE PTR [rdi+0x6b000001],dl
    2b25:	0a 00                	or     al,BYTE PTR [rax]
    2b27:	00 0a                	add    BYTE PTR [rdx],cl
    2b29:	69 00 79 64 00 00    	imul   eax,DWORD PTR [rax],0x6479
    2b2f:	00 99 09 00 00 8d    	add    BYTE PTR [rcx-0x72fffff7],bl
    2b35:	09 00                	or     DWORD PTR [rax],eax
    2b37:	00 00                	add    BYTE PTR [rax],al
    2b39:	21 e1                	and    ecx,esp
    2b3b:	1c 00                	sbb    al,0x0
    2b3d:	00 00                	add    BYTE PTR [rax],al
    2b3f:	00 00                	add    BYTE PTR [rax],al
    2b41:	00 01                	add    BYTE PTR [rcx],al
    2b43:	30 21                	xor    BYTE PTR [rcx],ah
    2b45:	c3                   	ret
    2b46:	1d 00 00 00 00       	sbb    eax,0x0
    2b4b:	00 00                	add    BYTE PTR [rax],al
    2b4d:	01 30                	add    DWORD PTR [rax],esi
    2b4f:	00 0c 76             	add    BYTE PTR [rsi+rsi*2],cl
    2b52:	08 00                	or     BYTE PTR [rax],al
    2b54:	00 3d e4 08 00 00    	add    BYTE PTR [rip+0x8e4],bh        # 343e <_Z7testAllPKcjS0_+0x52e>
    2b5a:	a9 00 00 00 b0       	test   eax,0xb0000000
    2b5f:	1b 00                	sbb    eax,DWORD PTR [rax]
    2b61:	00 00                	add    BYTE PTR [rax],al
    2b63:	00 00                	add    BYTE PTR [rax],al
    2b65:	00 a4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],ah
    2b6c:	00 00                	add    BYTE PTR [rax],al
    2b6e:	01 9c 2c 0b 00 00 0d 	add    DWORD PTR [rsp+rbp*1+0xd00000b],ebx
    2b75:	8f 03                	pop    QWORD PTR [rbx]
    2b77:	00 00                	add    BYTE PTR [rax],al
    2b79:	3d 25 52 08 00       	cmp    eax,0x85225
    2b7e:	00 de                	add    dh,bl
    2b80:	09 00                	or     DWORD PTR [rax],eax
    2b82:	00 dc                	add    ah,bl
    2b84:	09 00                	or     DWORD PTR [rax],eax
    2b86:	00 1a                	add    BYTE PTR [rdx],bl
    2b88:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b89:	75 6d                	jne    2bf8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x198>
    2b8b:	00 3e                	add    BYTE PTR [rsi],bh
    2b8d:	a9 00 00 00 95       	test   eax,0x95000000
    2b92:	e9 d1 5b 13 c7       	jmp    ffffffffc7138768 <_end+0xffffffffc7132750>
    2b97:	07                   	(bad)
    2b98:	00 00                	add    BYTE PTR [rax],al
    2b9a:	3f                   	(bad)
    2b9b:	0e                   	(bad)
    2b9c:	a9 00 00 00 00       	test   eax,0x0
    2ba1:	13 88 07 00 00 40    	adc    ecx,DWORD PTR [rax+0x40000007]
    2ba7:	0e                   	(bad)
    2ba8:	9d                   	popf
    2ba9:	00 00                	add    BYTE PTR [rax],al
    2bab:	00 18                	add    BYTE PTR [rax],bl
    2bad:	03 b3 05 00 00 41    	add    esi,DWORD PTR [rbx+0x41000005]
    2bb3:	0e                   	(bad)
    2bb4:	a9 00 00 00 f3       	test   eax,0xf3000000
    2bb9:	09 00                	or     DWORD PTR [rax],eax
    2bbb:	00 eb                	add    bl,ch
    2bbd:	09 00                	or     DWORD PTR [rax],eax
    2bbf:	00 03                	add    BYTE PTR [rbx],al
    2bc1:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    2bc4:	00 42 14             	add    BYTE PTR [rdx+0x14],al
    2bc7:	2c 0b                	sub    al,0xb
    2bc9:	00 00                	add    BYTE PTR [rax],al
    2bcb:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    2bcd:	00 00                	add    BYTE PTR [rax],al
    2bcf:	14 0a                	adc    al,0xa
    2bd1:	00 00                	add    BYTE PTR [rax],al
    2bd3:	03 ae 05 00 00 44    	add    ebp,DWORD PTR [rsi+0x44000005]
    2bd9:	0e                   	(bad)
    2bda:	a9 00 00 00 42       	test   eax,0x42000000
    2bdf:	0a 00                	or     al,BYTE PTR [rax]
    2be1:	00 32                	add    BYTE PTR [rdx],dh
    2be3:	0a 00                	or     al,BYTE PTR [rax]
    2be5:	00 03                	add    BYTE PTR [rbx],al
    2be7:	cd 08                	int    0x8
    2be9:	00 00                	add    BYTE PTR [rax],al
    2beb:	45 0e                	rex.RB (bad)
    2bed:	a9 00 00 00 96       	test   eax,0x96000000
    2bf2:	0a 00                	or     al,BYTE PTR [rax]
    2bf4:	00 80 0a 00 00 00    	add    BYTE PTR [rax+0xa],al
    2bfa:	08 2e                	or     BYTE PTR [rsi],ch
    2bfc:	00 00                	add    BYTE PTR [rax],al
    2bfe:	00 0c f3             	add    BYTE PTR [rbx+rsi*8],cl
    2c01:	07                   	(bad)
    2c02:	00 00                	add    BYTE PTR [rax],al
    2c04:	28 cc                	sub    ah,cl
    2c06:	07                   	(bad)
    2c07:	00 00                	add    BYTE PTR [rax],al
    2c09:	a9 00 00 00 70       	test   eax,0x70000000
    2c0e:	1b 00                	sbb    eax,DWORD PTR [rax]
    2c10:	00 00                	add    BYTE PTR [rax],al
    2c12:	00 00                	add    BYTE PTR [rax],al
    2c14:	00 31                	add    BYTE PTR [rcx],dh
    2c16:	00 00                	add    BYTE PTR [rax],al
    2c18:	00 00                	add    BYTE PTR [rax],al
    2c1a:	00 00                	add    BYTE PTR [rax],al
    2c1c:	00 01                	add    BYTE PTR [rcx],al
    2c1e:	9c                   	pushf
    2c1f:	b0 0c                	mov    al,0xc
    2c21:	00 00                	add    BYTE PTR [rax],al
    2c23:	0d 8f 03 00 00       	or     eax,0x38f
    2c28:	28 2d 52 08 00 00    	sub    BYTE PTR [rip+0x852],ch        # 3480 <_Z7testAllPKcjS0_+0x570>
    2c2e:	55                   	push   rbp
    2c2f:	0b 00                	or     eax,DWORD PTR [rax]
    2c31:	00 53 0b             	add    BYTE PTR [rbx+0xb],dl
    2c34:	00 00                	add    BYTE PTR [rax],al
    2c36:	03 ae 05 00 00 29    	add    ebp,DWORD PTR [rsi+0x29000005]
    2c3c:	0e                   	(bad)
    2c3d:	a9 00 00 00 64       	test   eax,0x64000000
    2c42:	0b 00                	or     eax,DWORD PTR [rax]
    2c44:	00 62 0b             	add    BYTE PTR [rdx+0xb],ah
    2c47:	00 00                	add    BYTE PTR [rax],al
    2c49:	13 24 09             	adc    esp,DWORD PTR [rcx+rcx*1]
    2c4c:	00 00                	add    BYTE PTR [rax],al
    2c4e:	2a 0e                	sub    cl,BYTE PTR [rsi]
    2c50:	a9 00 00 00 00       	test   eax,0x0
    2c55:	33 63 72             	xor    esp,DWORD PTR [rbx+0x72]
    2c58:	63 00                	movsxd eax,DWORD PTR [rax]
    2c5a:	01 2b                	add    DWORD PTR [rbx],ebp
    2c5c:	0e                   	(bad)
    2c5d:	b5 00                	mov    ch,0x0
    2c5f:	00 00                	add    BYTE PTR [rax],al
    2c61:	11 11                	adc    DWORD PTR [rcx],edx
    2c63:	11 21                	adc    DWORD PTR [rcx],esp
    2c65:	11 12                	adc    DWORD PTR [rdx],edx
    2c67:	12 12                	adc    dl,BYTE PTR [rdx]
    2c69:	03 54 07 00          	add    edx,DWORD PTR [rdi+rax*1+0x0]
    2c6d:	00 2d 0e b5 00 00    	add    BYTE PTR [rip+0xb50e],ch        # e181 <_end+0x8169>
    2c73:	00 71 0b             	add    BYTE PTR [rcx+0xb],dh
    2c76:	00 00                	add    BYTE PTR [rax],al
    2c78:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c79:	0b 00                	or     eax,DWORD PTR [rax]
    2c7b:	00 03                	add    BYTE PTR [rbx],al
    2c7d:	5a                   	pop    rdx
    2c7e:	07                   	(bad)
    2c7f:	00 00                	add    BYTE PTR [rax],al
    2c81:	2e 0e                	cs (bad)
    2c83:	b5 00                	mov    ch,0x0
    2c85:	00 00                	add    BYTE PTR [rax],al
    2c87:	85 0b                	test   DWORD PTR [rbx],ecx
    2c89:	00 00                	add    BYTE PTR [rax],al
    2c8b:	81 0b 00 00 03 60    	or     DWORD PTR [rbx],0x60030000
    2c91:	07                   	(bad)
    2c92:	00 00                	add    BYTE PTR [rax],al
    2c94:	2f                   	(bad)
    2c95:	0e                   	(bad)
    2c96:	b5 00                	mov    ch,0x0
    2c98:	00 00                	add    BYTE PTR [rax],al
    2c9a:	99                   	cdq
    2c9b:	0b 00                	or     eax,DWORD PTR [rax]
    2c9d:	00 95 0b 00 00 03    	add    BYTE PTR [rbp+0x300000b],dl
    2ca3:	66 07                	data16 (bad)
    2ca5:	00 00                	add    BYTE PTR [rax],al
    2ca7:	30 0e                	xor    BYTE PTR [rsi],cl
    2ca9:	b5 00                	mov    ch,0x0
    2cab:	00 00                	add    BYTE PTR [rax],al
    2cad:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2cae:	0b 00                	or     eax,DWORD PTR [rax]
    2cb0:	00 a9 0b 00 00 14    	add    BYTE PTR [rcx+0x1400000b],ch
    2cb6:	e6 0e                	out    0xe,al
    2cb8:	00 00                	add    BYTE PTR [rax],al
    2cba:	74 1b                	je     2cd7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x277>
    2cbc:	00 00                	add    BYTE PTR [rax],al
    2cbe:	00 00                	add    BYTE PTR [rax],al
    2cc0:	00 00                	add    BYTE PTR [rax],al
    2cc2:	08 5b 01             	or     BYTE PTR [rbx+0x1],bl
    2cc5:	00 00                	add    BYTE PTR [rax],al
    2cc7:	33 1a                	xor    ebx,DWORD PTR [rdx]
    2cc9:	1a 0c 00             	sbb    cl,BYTE PTR [rax+rax*1]
    2ccc:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3bda <_fini+0x86>
    2cd2:	bf 0b 00 00 bd       	mov    edi,0xbd00000b
    2cd7:	0b 00                	or     eax,DWORD PTR [rax]
    2cd9:	00 05 fc 0e 00 00    	add    BYTE PTR [rip+0xefc],al        # 3bdb <_fini+0x87>
    2cdf:	ca 0b 00             	retf   0xb
    2ce2:	00 c8                	add    al,cl
    2ce4:	0b 00                	or     eax,DWORD PTR [rax]
    2ce6:	00 00                	add    BYTE PTR [rax],al
    2ce8:	14 e6                	adc    al,0xe6
    2cea:	0e                   	(bad)
    2ceb:	00 00                	add    BYTE PTR [rax],al
    2ced:	85 1b                	test   DWORD PTR [rbx],ebx
    2cef:	00 00                	add    BYTE PTR [rax],al
    2cf1:	00 00                	add    BYTE PTR [rax],al
    2cf3:	00 00                	add    BYTE PTR [rax],al
    2cf5:	02 66 01             	add    ah,BYTE PTR [rsi+0x1]
    2cf8:	00 00                	add    BYTE PTR [rax],al
    2cfa:	34 1a                	xor    al,0x1a
    2cfc:	4d 0c 00             	rex.WRB or al,0x0
    2cff:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3c0d <_fini+0xb9>
    2d05:	dd 0b                	fisttp QWORD PTR [rbx]
    2d07:	00 00                	add    BYTE PTR [rax],al
    2d09:	db 0b                	fisttp DWORD PTR [rbx]
    2d0b:	00 00                	add    BYTE PTR [rax],al
    2d0d:	05 fc 0e 00 00       	add    eax,0xefc
    2d12:	e8 0b 00 00 e6       	call   ffffffffe6002d22 <_end+0xffffffffe5ffcd0a>
    2d17:	0b 00                	or     eax,DWORD PTR [rax]
    2d19:	00 00                	add    BYTE PTR [rax],al
    2d1b:	14 e6                	adc    al,0xe6
    2d1d:	0e                   	(bad)
    2d1e:	00 00                	add    BYTE PTR [rax],al
    2d20:	8c 1b                	mov    WORD PTR [rbx],ds
    2d22:	00 00                	add    BYTE PTR [rax],al
    2d24:	00 00                	add    BYTE PTR [rax],al
    2d26:	00 00                	add    BYTE PTR [rax],al
    2d28:	02 71 01             	add    dh,BYTE PTR [rcx+0x1]
    2d2b:	00 00                	add    BYTE PTR [rax],al
    2d2d:	35 1a 80 0c 00       	xor    eax,0xc801a
    2d32:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3c40 <_fini+0xec>
    2d38:	fb                   	sti
    2d39:	0b 00                	or     eax,DWORD PTR [rax]
    2d3b:	00 f9                	add    cl,bh
    2d3d:	0b 00                	or     eax,DWORD PTR [rax]
    2d3f:	00 05 fc 0e 00 00    	add    BYTE PTR [rip+0xefc],al        # 3c41 <_fini+0xed>
    2d45:	06                   	(bad)
    2d46:	0c 00                	or     al,0x0
    2d48:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    2d4b:	00 00                	add    BYTE PTR [rax],al
    2d4d:	00 15 e6 0e 00 00    	add    BYTE PTR [rip+0xee6],dl        # 3c39 <_fini+0xe5>
    2d53:	93                   	xchg   ebx,eax
    2d54:	1b 00                	sbb    eax,DWORD PTR [rax]
    2d56:	00 00                	add    BYTE PTR [rax],al
    2d58:	00 00                	add    BYTE PTR [rax],al
    2d5a:	00 02                	add    BYTE PTR [rdx],al
    2d5c:	7c 01                	jl     2d5f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ff>
    2d5e:	00 00                	add    BYTE PTR [rax],al
    2d60:	36 1a 05 08 0f 00 00 	ss sbb al,BYTE PTR [rip+0xf08]        # 3c6f <_fini+0x11b>
    2d67:	19 0c 00             	sbb    DWORD PTR [rax+rax*1],ecx
    2d6a:	00 17                	add    BYTE PTR [rdi],dl
    2d6c:	0c 00                	or     al,0x0
    2d6e:	00 05 fc 0e 00 00    	add    BYTE PTR [rip+0xefc],al        # 3c70 <_fini+0x11c>
    2d74:	24 0c                	and    al,0xc
    2d76:	00 00                	add    BYTE PTR [rax],al
    2d78:	22 0c 00             	and    cl,BYTE PTR [rax+rax*1]
    2d7b:	00 00                	add    BYTE PTR [rax],al
    2d7d:	00 0c af             	add    BYTE PTR [rdi+rbp*4],cl
    2d80:	08 00                	or     BYTE PTR [rax],al
    2d82:	00 1a                	add    BYTE PTR [rdx],bl
    2d84:	03 09                	add    ecx,DWORD PTR [rcx]
    2d86:	00 00                	add    BYTE PTR [rax],al
    2d88:	a9 00 00 00 20       	test   eax,0x20000000
    2d8d:	1b 00                	sbb    eax,DWORD PTR [rax]
    2d8f:	00 00                	add    BYTE PTR [rax],al
    2d91:	00 00                	add    BYTE PTR [rax],al
    2d93:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    2d96:	00 00                	add    BYTE PTR [rax],al
    2d98:	00 00                	add    BYTE PTR [rax],al
    2d9a:	00 00                	add    BYTE PTR [rax],al
    2d9c:	01 9c 74 0d 00 00 0d 	add    DWORD PTR [rsp+rsi*2+0xd00000d],ebx
    2da3:	8f 03                	pop    QWORD PTR [rbx]
    2da5:	00 00                	add    BYTE PTR [rax],al
    2da7:	1a 27                	sbb    ah,BYTE PTR [rdi]
    2da9:	52                   	push   rdx
    2daa:	08 00                	or     BYTE PTR [rax],al
    2dac:	00 37                	add    BYTE PTR [rdi],dh
    2dae:	0c 00                	or     al,0x0
    2db0:	00 35 0c 00 00 03    	add    BYTE PTR [rip+0x300000c],dh        # 3002dc2 <_end+0x2ffcdaa>
    2db6:	ae                   	scas   al,BYTE PTR es:[rdi]
    2db7:	05 00 00 1b 0e       	add    eax,0xe1b0000
    2dbc:	a9 00 00 00 4a       	test   eax,0x4a000000
    2dc1:	0c 00                	or     al,0x0
    2dc3:	00 44 0c 00          	add    BYTE PTR [rsp+rcx*1+0x0],al
    2dc7:	00 03                	add    BYTE PTR [rbx],al
    2dc9:	24 09                	and    al,0x9
    2dcb:	00 00                	add    BYTE PTR [rax],al
    2dcd:	1c 0e                	sbb    al,0xe
    2dcf:	a9 00 00 00 6a       	test   eax,0x6a000000
    2dd4:	0c 00                	or     al,0x0
    2dd6:	00 62 0c             	add    BYTE PTR [rdx+0xc],ah
    2dd9:	00 00                	add    BYTE PTR [rax],al
    2ddb:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    2dde:	63 00                	movsxd eax,DWORD PTR [rax]
    2de0:	1d a9 00 00 00       	sbb    eax,0xa9
    2de5:	11 11                	adc    DWORD PTR [rcx],edx
    2de7:	11 11                	adc    DWORD PTR [rcx],edx
    2de9:	03 b3 05 00 00 1e    	add    esi,DWORD PTR [rbx+0x1e000005]
    2def:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2df3:	00 91 0c 00 00 8b    	add    BYTE PTR [rcx-0x74fffff4],dl
    2df9:	0c 00                	or     al,0x0
    2dfb:	00 0f                	add    BYTE PTR [rdi],cl
    2dfd:	40 01 00             	rex add DWORD PTR [rax],eax
    2e00:	00 0a                	add    BYTE PTR [rdx],cl
    2e02:	69 00 20 64 00 00    	imul   eax,DWORD PTR [rax],0x6420
    2e08:	00 ad 0c 00 00 a9    	add    BYTE PTR [rbp-0x56fffff4],ch
    2e0e:	0c 00                	or     al,0x0
    2e10:	00 15 15 0f 00 00    	add    BYTE PTR [rip+0xf15],dl        # 3d2b <_fini+0x1d7>
    2e16:	50                   	push   rax
    2e17:	1b 00                	sbb    eax,DWORD PTR [rax]
    2e19:	00 00                	add    BYTE PTR [rax],al
    2e1b:	00 00                	add    BYTE PTR [rax],al
    2e1d:	00 02                	add    BYTE PTR [rdx],al
    2e1f:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    2e22:	00 22                	add    BYTE PTR [rdx],ah
    2e24:	1e                   	(bad)
    2e25:	05 33 0f 00 00       	add    eax,0xf33
    2e2a:	c2 0c 00             	ret    0xc
    2e2d:	00 be 0c 00 00 05    	add    BYTE PTR [rsi+0x500000c],bh
    2e33:	27                   	(bad)
    2e34:	0f 00 00             	sldt   WORD PTR [rax]
    2e37:	d5 0c 00 00          	{rex2 0xc} add BYTE PTR [rax],r8b
    2e3b:	d3 0c 00             	ror    DWORD PTR [rax+rax*1],cl
    2e3e:	00 00                	add    BYTE PTR [rax],al
    2e40:	00 00                	add    BYTE PTR [rax],al
    2e42:	0c b3                	or     al,0xb3
    2e44:	08 00                	or     BYTE PTR [rax],al
    2e46:	00 0b                	add    BYTE PTR [rbx],cl
    2e48:	0d 08 00 00 a9       	or     eax,0xa9000008
    2e4d:	00 00                	add    BYTE PTR [rax],al
    2e4f:	00 00                	add    BYTE PTR [rax],al
    2e51:	1a 00                	sbb    al,BYTE PTR [rax]
    2e53:	00 00                	add    BYTE PTR [rax],al
    2e55:	00 00                	add    BYTE PTR [rax],al
    2e57:	00 19                	add    BYTE PTR [rcx],bl
    2e59:	01 00                	add    DWORD PTR [rax],eax
    2e5b:	00 00                	add    BYTE PTR [rax],al
    2e5d:	00 00                	add    BYTE PTR [rax],al
    2e5f:	00 01                	add    BYTE PTR [rcx],al
    2e61:	9c                   	pushf
    2e62:	e6 0e                	out    0xe,al
    2e64:	00 00                	add    BYTE PTR [rax],al
    2e66:	0d 8f 03 00 00       	or     eax,0x38f
    2e6b:	0b 23                	or     esp,DWORD PTR [rbx]
    2e6d:	52                   	push   rdx
    2e6e:	08 00                	or     BYTE PTR [rax],al
    2e70:	00 e4                	add    ah,ah
    2e72:	0c 00                	or     al,0x0
    2e74:	00 e2                	add    dl,ah
    2e76:	0c 00                	or     al,0x0
    2e78:	00 03                	add    BYTE PTR [rbx],al
    2e7a:	ae                   	scas   al,BYTE PTR es:[rdi]
    2e7b:	05 00 00 0c 0e       	add    eax,0xe0c0000
    2e80:	a9 00 00 00 f5       	test   eax,0xf5000000
    2e85:	0c 00                	or     al,0x0
    2e87:	00 ef                	add    bh,ch
    2e89:	0c 00                	or     al,0x0
    2e8b:	00 03                	add    BYTE PTR [rbx],al
    2e8d:	24 09                	and    al,0x9
    2e8f:	00 00                	add    BYTE PTR [rax],al
    2e91:	0d 0e a9 00 00       	or     eax,0xa90e
    2e96:	00 14 0d 00 00 0a 0d 	add    BYTE PTR [rcx*1+0xd0a0000],dl
    2e9d:	00 00                	add    BYTE PTR [rax],al
    2e9f:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    2ea2:	63 00                	movsxd eax,DWORD PTR [rax]
    2ea4:	0e                   	(bad)
    2ea5:	a9 00 00 00 11       	test   eax,0x11000000
    2eaa:	11 11                	adc    DWORD PTR [rcx],edx
    2eac:	11 13                	adc    DWORD PTR [rbx],edx
    2eae:	a9 07 00 00 0f       	test   eax,0xf000007
    2eb3:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2eb7:	00 00                	add    BYTE PTR [rax],al
    2eb9:	03 b3 05 00 00 10    	add    esi,DWORD PTR [rbx+0x10000005]
    2ebf:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2ec3:	00 3d 0d 00 00 37    	add    BYTE PTR [rip+0x3700000d],bh        # 37002ed6 <_end+0x36ffcebe>
    2ec9:	0d 00 00 0f 0c       	or     eax,0xc0f0000
    2ece:	01 00                	add    DWORD PTR [rax],eax
    2ed0:	00 0a                	add    BYTE PTR [rdx],cl
    2ed2:	69 00 12 64 00 00    	imul   eax,DWORD PTR [rax],0x6412
    2ed8:	00 55 0d             	add    BYTE PTR [rbp+0xd],dl
    2edb:	00 00                	add    BYTE PTR [rax],al
    2edd:	51                   	push   rcx
    2ede:	0d 00 00 15 5e       	or     eax,0x5e150000
    2ee3:	08 00                	or     BYTE PTR [rax],al
    2ee5:	00 4b 1a             	add    BYTE PTR [rbx+0x1a],cl
    2ee8:	00 00                	add    BYTE PTR [rax],al
    2eea:	00 00                	add    BYTE PTR [rax],al
    2eec:	00 00                	add    BYTE PTR [rax],al
    2eee:	01 14 01             	add    DWORD PTR [rcx+rax*1],edx
    2ef1:	00 00                	add    BYTE PTR [rax],al
    2ef3:	14 1a                	adc    al,0x1a
    2ef5:	05 6c 08 00 00       	add    eax,0x86c
    2efa:	66 0d 00 00          	or     ax,0x0
    2efe:	64 0d 00 00 05 77    	fs or  eax,0x77050000
    2f04:	08 00                	or     BYTE PTR [rax],al
    2f06:	00 78 0d             	add    BYTE PTR [rax+0xd],bh
    2f09:	00 00                	add    BYTE PTR [rax],al
    2f0b:	72 0d                	jb     2f1a <_Z7testAllPKcjS0_+0xa>
    2f0d:	00 00                	add    BYTE PTR [rax],al
    2f0f:	0f 14 01             	unpcklps xmm0,XMMWORD PTR [rcx]
    2f12:	00 00                	add    BYTE PTR [rax],al
    2f14:	10 80 08 00 00 93    	adc    BYTE PTR [rax-0x6cfffff8],al
    2f1a:	0d 00 00 8d 0d       	or     eax,0xd8d0000
    2f1f:	00 00                	add    BYTE PTR [rax],al
    2f21:	10 8a 08 00 00 45    	adc    BYTE PTR [rdx+0x45000008],cl
    2f27:	11 00                	adc    DWORD PTR [rax],eax
    2f29:	00 43 11             	add    BYTE PTR [rbx+0x11],al
    2f2c:	00 00                	add    BYTE PTR [rax],al
    2f2e:	10 94 08 00 00 54 11 	adc    BYTE PTR [rax+rcx*1+0x11540000],dl
    2f35:	00 00                	add    BYTE PTR [rax],al
    2f37:	52                   	push   rdx
    2f38:	11 00                	adc    DWORD PTR [rax],eax
    2f3a:	00 10                	add    BYTE PTR [rax],dl
    2f3c:	9e                   	sahf
    2f3d:	08 00                	or     BYTE PTR [rax],al
    2f3f:	00 5e 11             	add    BYTE PTR [rsi+0x11],bl
    2f42:	00 00                	add    BYTE PTR [rax],al
    2f44:	5c                   	pop    rsp
    2f45:	11 00                	adc    DWORD PTR [rax],eax
    2f47:	00 34 a8             	add    BYTE PTR [rax+rbp*4],dh
    2f4a:	08 00                	or     BYTE PTR [rax],al
    2f4c:	00 35 b2 08 00 00    	add    BYTE PTR [rip+0x8b2],dh        # 3804 <_Z21standartDeviationTimePdjd+0x144>
    2f52:	21 01                	and    DWORD PTR [rcx],eax
    2f54:	00 00                	add    BYTE PTR [rax],al
    2f56:	9a                   	(bad)
    2f57:	0e                   	(bad)
    2f58:	00 00                	add    BYTE PTR [rax],al
    2f5a:	10 b3 08 00 00 70    	adc    BYTE PTR [rbx+0x70000008],dh
    2f60:	11 00                	adc    DWORD PTR [rax],eax
    2f62:	00 6c 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],ch
    2f66:	00 00                	add    BYTE PTR [rax],al
    2f68:	14 bd                	adc    al,0xbd
    2f6a:	08 00                	or     BYTE PTR [rax],al
    2f6c:	00 4b 1a             	add    BYTE PTR [rbx+0x1a],cl
    2f6f:	00 00                	add    BYTE PTR [rax],al
    2f71:	00 00                	add    BYTE PTR [rax],al
    2f73:	00 00                	add    BYTE PTR [rax],al
    2f75:	03 2d 01 00 00 a9    	add    ebp,DWORD PTR [rip+0xffffffffa9000001]        # ffffffffa9002f7c <_end+0xffffffffa8ffcf64>
    2f7b:	20 c0                	and    al,al
    2f7d:	0e                   	(bad)
    2f7e:	00 00                	add    BYTE PTR [rax],al
    2f80:	05 cb 08 00 00       	add    eax,0x8cb
    2f85:	96                   	xchg   esi,eax
    2f86:	11 00                	adc    DWORD PTR [rax],eax
    2f88:	00 80 11 00 00 00    	add    BYTE PTR [rax+0x11],al
    2f8e:	15 bd 08 00 00       	adc    eax,0x8bd
    2f93:	c3                   	ret
    2f94:	1a 00                	sbb    al,BYTE PTR [rax]
    2f96:	00 00                	add    BYTE PTR [rax],al
    2f98:	00 00                	add    BYTE PTR [rax],al
    2f9a:	00 02                	add    BYTE PTR [rdx],al
    2f9c:	35 01 00 00 b6       	xor    eax,0xb6000001
    2fa1:	22 05 cb 08 00 00    	and    al,BYTE PTR [rip+0x8cb]        # 3872 <_Z27standartDeviationCollisionsP7HashMapf+0x52>
    2fa7:	27                   	(bad)
    2fa8:	13 00                	adc    eax,DWORD PTR [rax]
    2faa:	00 19                	add    BYTE PTR [rcx],bl
    2fac:	13 00                	adc    eax,DWORD PTR [rax]
    2fae:	00 00                	add    BYTE PTR [rax],al
    2fb0:	00 00                	add    BYTE PTR [rax],al
    2fb2:	00 00                	add    BYTE PTR [rax],al
    2fb4:	36 2a 09             	ss sub cl,BYTE PTR [rcx]
    2fb7:	00 00                	add    BYTE PTR [rax],al
    2fb9:	02 49 03             	add    cl,BYTE PTR [rcx+0x3]
    2fbc:	01 2d 07 00 00 e0    	add    DWORD PTR [rip+0xffffffffe0000007],ebp        # ffffffffe0002fc9 <_end+0xffffffffdfffcfb1>
    2fc2:	00 00                	add    BYTE PTR [rax],al
    2fc4:	00 03                	add    BYTE PTR [rbx],al
    2fc6:	15 0f 00 00 16       	adc    eax,0x1600000f
    2fcb:	5f                   	pop    rdi
    2fcc:	5f                   	pop    rdi
    2fcd:	43 00 49 03          	rex.XB add BYTE PTR [r9+0x3],cl
    2fd1:	23 e0                	and    esp,eax
    2fd3:	00 00                	add    BYTE PTR [rax],al
    2fd5:	00 16                	add    BYTE PTR [rsi],dl
    2fd7:	5f                   	pop    rdi
    2fd8:	5f                   	pop    rdi
    2fd9:	56                   	push   rsi
    2fda:	00 49 03             	add    BYTE PTR [rcx+0x3],cl
    2fdd:	3b e0                	cmp    esp,eax
    2fdf:	00 00                	add    BYTE PTR [rax],al
    2fe1:	00 00                	add    BYTE PTR [rax],al
    2fe3:	37                   	(bad)
    2fe4:	88 08                	mov    BYTE PTR [rax],cl
    2fe6:	00 00                	add    BYTE PTR [rax],al
    2fe8:	02 42 03             	add    al,BYTE PTR [rdx+0x3]
    2feb:	01 b3 07 00 00 3c    	add    DWORD PTR [rbx+0x3c000007],esi
    2ff1:	00 00                	add    BYTE PTR [rax],al
    2ff3:	00 03                	add    BYTE PTR [rbx],al
    2ff5:	16                   	(bad)
    2ff6:	5f                   	pop    rdi
    2ff7:	5f                   	pop    rdi
    2ff8:	43 00 42 03          	rex.XB add BYTE PTR [r10+0x3],al
    2ffc:	1d 3c 00 00 00       	sbb    eax,0x3c
    3001:	16                   	(bad)
    3002:	5f                   	pop    rdi
    3003:	5f                   	pop    rdi
    3004:	56                   	push   rsi
    3005:	00 42 03             	add    BYTE PTR [rdx+0x3],al
    3008:	2f                   	(bad)
    3009:	3c 00                	cmp    al,0x0
    300b:	00 00                	add    BYTE PTR [rax],al
    300d:	00 00                	add    BYTE PTR [rax],al
    300f:	f2 16                	repnz (bad)
    3011:	00 00                	add    BYTE PTR [rax],al
    3013:	05 00 01 08 d3       	add    eax,0xd3080100
    3018:	0a 00                	or     al,BYTE PTR [rax]
    301a:	00 2c 14             	add    BYTE PTR [rsp+rdx*1],ch
    301d:	01 00                	add    DWORD PTR [rax],eax
    301f:	00 21                	add    BYTE PTR [rcx],ah
    3021:	29 02                	sub    DWORD PTR [rdx],eax
    3023:	00 00                	add    BYTE PTR [rax],al
    3025:	00 00                	add    BYTE PTR [rax],al
    3027:	00 00                	add    BYTE PTR [rax],al
    3029:	a0 1e 00 00 00 00 00 	movabs al,ds:0xd30000000000001e
    3030:	00 d3 
    3032:	05 00 00 00 00       	add    eax,0x0
    3037:	00 00                	add    BYTE PTR [rax],al
    3039:	3a 0f                	cmp    cl,BYTE PTR [rdi]
    303b:	00 00                	add    BYTE PTR [rax],al
    303d:	0b d6                	or     edx,esi
    303f:	0a 00                	or     al,BYTE PTR [rax]
    3041:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    3044:	17                   	(bad)
    3045:	3a 00                	cmp    al,BYTE PTR [rax]
    3047:	00 00                	add    BYTE PTR [rax],al
    3049:	06                   	(bad)
    304a:	08 07                	or     BYTE PTR [rdi],al
    304c:	f3 00 00             	repz add BYTE PTR [rax],al
    304f:	00 1b                	add    BYTE PTR [rbx],bl
    3051:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
    3058:	00 00                	add    BYTE PTR [rax],al
    305a:	00 07                	add    BYTE PTR [rdi],al
    305c:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    305f:	00 05 3d 09 66 00    	add    BYTE PTR [rip+0x66093d],al        # 6639a2 <_end+0x65d98a>
    3065:	00 00                	add    BYTE PTR [rax],al
    3067:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    306a:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    306c:	00 3e                	add    BYTE PTR [rsi],bh
    306e:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    3071:	00 00                	add    BYTE PTR [rax],al
    3073:	04 00                	add    al,0x0
    3075:	2d 04 05 69 6e       	sub    eax,0x6e690504
    307a:	74 00                	je     307c <_Z7testAllPKcjS0_+0x16c>
    307c:	0e                   	(bad)
    307d:	66 00 00             	data16 add BYTE PTR [rax],al
    3080:	00 0b                	add    BYTE PTR [rbx],cl
    3082:	de 02                	fiadd  WORD PTR [rdx]
    3084:	00 00                	add    BYTE PTR [rax],al
    3086:	05 3f 05 41 00       	add    eax,0x41053f
    308b:	00 00                	add    BYTE PTR [rax],al
    308d:	1b 10                	sbb    edx,DWORD PTR [rax]
    308f:	44 09 00             	or     DWORD PTR [rax],r8d
    3092:	00 00                	add    BYTE PTR [rax],al
    3094:	a3 00 00 00 07 49 02 	movabs ds:0x24907000000,eax
    309b:	00 00 
    309d:	05 45 0e a3 00       	add    eax,0xa30e45
    30a2:	00 00                	add    BYTE PTR [rax],al
    30a4:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    30a7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    30a9:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    30ac:	a3 00 00 00 08 00 06 	movabs ds:0x508060008000000,eax
    30b3:	08 05 
    30b5:	e5 00                	in     eax,0x0
    30b7:	00 00                	add    BYTE PTR [rax],al
    30b9:	0b 0a                	or     ecx,DWORD PTR [rdx]
    30bb:	00 00                	add    BYTE PTR [rax],al
    30bd:	00 05 47 05 7e 00    	add    BYTE PTR [rip+0x7e0547],al        # 7e360a <_end+0x7dd5f2>
    30c3:	00 00                	add    BYTE PTR [rax],al
    30c5:	1b 10                	sbb    edx,DWORD PTR [rax]
    30c7:	4e b4 00             	rex.WRX mov spl,0x0
    30ca:	00 00                	add    BYTE PTR [rax],al
    30cc:	db 00                	fild   DWORD PTR [rax]
    30ce:	00 00                	add    BYTE PTR [rax],al
    30d0:	07                   	(bad)
    30d1:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    30d4:	00 05 4f 13 db 00    	add    BYTE PTR [rip+0xdb134f],al        # db4429 <_end+0xdae411>
    30da:	00 00                	add    BYTE PTR [rax],al
    30dc:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    30df:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    30e1:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    30e4:	db 00                	fild   DWORD PTR [rax]
    30e6:	00 00                	add    BYTE PTR [rax],al
    30e8:	08 00                	or     BYTE PTR [rax],al
    30ea:	06                   	(bad)
    30eb:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 31d1 <_Z7testAllPKcjS0_+0x2c1>
    30f1:	0b b5 00 00 00 05    	or     esi,DWORD PTR [rbp+0x5000000]
    30f7:	51                   	push   rcx
    30f8:	05 b6 00 00 00       	add    eax,0xb6
    30fd:	06                   	(bad)
    30fe:	02 07                	add    al,BYTE PTR [rdi]
    3100:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    3103:	00 0a                	add    BYTE PTR [rdx],cl
    3105:	06                   	(bad)
    3106:	01 00                	add    DWORD PTR [rax],eax
    3108:	00 2e                	add    BYTE PTR [rsi],ch
    310a:	f5                   	cmc
    310b:	00 00                	add    BYTE PTR [rax],al
    310d:	00 06                	add    BYTE PTR [rsi],al
    310f:	01 06                	add    DWORD PTR [rsi],eax
    3111:	08 02                	or     BYTE PTR [rdx],al
    3113:	00 00                	add    BYTE PTR [rax],al
    3115:	0e                   	(bad)
    3116:	ff 00                	inc    DWORD PTR [rax]
    3118:	00 00                	add    BYTE PTR [rax],al
    311a:	06                   	(bad)
    311b:	01 08                	add    DWORD PTR [rax],ecx
    311d:	ff 01                	inc    DWORD PTR [rcx]
    311f:	00 00                	add    BYTE PTR [rax],al
    3121:	06                   	(bad)
    3122:	04 07                	add    al,0x7
    3124:	f8                   	clc
    3125:	00 00                	add    BYTE PTR [rax],al
    3127:	00 06                	add    BYTE PTR [rsi],al
    3129:	01 06                	add    DWORD PTR [rsi],eax
    312b:	01 02                	add    DWORD PTR [rdx],eax
    312d:	00 00                	add    BYTE PTR [rax],al
    312f:	06                   	(bad)
    3130:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 3191 <_Z7testAllPKcjS0_+0x281>
    3136:	0b a9 00 00 00 06    	or     ebp,DWORD PTR [rcx+0x6000000]
    313c:	2a 16                	sub    dl,BYTE PTR [rsi]
    313e:	12 01                	adc    al,BYTE PTR [rcx]
    3140:	00 00                	add    BYTE PTR [rax],al
    3142:	2f                   	(bad)
    3143:	08 0a                	or     BYTE PTR [rdx],cl
    3145:	ff 00                	inc    DWORD PTR [rax]
    3147:	00 00                	add    BYTE PTR [rax],al
    3149:	06                   	(bad)
    314a:	08 07                	or     BYTE PTR [rdi],al
    314c:	ee                   	out    dx,al
    314d:	00 00                	add    BYTE PTR [rax],al
    314f:	00 30                	add    BYTE PTR [rax],dh
    3151:	cf                   	iret
    3152:	02 00                	add    al,BYTE PTR [rax]
    3154:	00 05 b4 03 0f 4e    	add    BYTE PTR [rip+0x4e0f03b4],al        # 4e0f350e <_end+0x4e0ed4f6>
    315a:	01 00                	add    DWORD PTR [rax],eax
    315c:	00 0a                	add    BYTE PTR [rdx],cl
    315e:	53                   	push   rbx
    315f:	01 00                	add    DWORD PTR [rax],eax
    3161:	00 31                	add    BYTE PTR [rcx],dh
    3163:	66 00 00             	data16 add BYTE PTR [rax],al
    3166:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    3169:	00 00                	add    BYTE PTR [rax],al
    316b:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    316e:	00 00                	add    BYTE PTR [rax],al
    3170:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    3173:	00 00                	add    BYTE PTR [rax],al
    3175:	00 0a                	add    BYTE PTR [rdx],cl
    3177:	6c                   	ins    BYTE PTR es:[rdi],dx
    3178:	01 00                	add    DWORD PTR [rax],eax
    317a:	00 32                	add    BYTE PTR [rdx],dh
    317c:	33 73 74             	xor    esi,DWORD PTR [rbx+0x74]
    317f:	64 00 13             	add    BYTE PTR fs:[rbx],dl
    3182:	32 01                	xor    al,BYTE PTR [rcx]
    3184:	0b 3d 03 00 00 02    	or     edi,DWORD PTR [rip+0x2000003]        # 200318d <_end+0x1ffd175>
    318a:	07                   	(bad)
    318b:	83 0b 72             	or     DWORD PTR [rbx],0x72
    318e:	00 00                	add    BYTE PTR [rax],al
    3190:	00 02                	add    BYTE PTR [rdx],al
    3192:	07                   	(bad)
    3193:	84 0b                	test   BYTE PTR [rbx],cl
    3195:	aa                   	stos   BYTE PTR es:[rdi],al
    3196:	00 00                	add    BYTE PTR [rax],al
    3198:	00 02                	add    BYTE PTR [rdx],al
    319a:	07                   	(bad)
    319b:	8a 0b                	mov    cl,BYTE PTR [rbx]
    319d:	3d 03 00 00 02       	cmp    eax,0x2000003
    31a2:	07                   	(bad)
    31a3:	8d 0b                	lea    ecx,[rbx]
    31a5:	59                   	pop    rcx
    31a6:	03 00                	add    eax,DWORD PTR [rax]
    31a8:	00 02                	add    BYTE PTR [rdx],al
    31aa:	07                   	(bad)
    31ab:	90                   	nop
    31ac:	0b 74 03 00          	or     esi,DWORD PTR [rbx+rax*1+0x0]
    31b0:	00 02                	add    BYTE PTR [rdx],al
    31b2:	07                   	(bad)
    31b3:	91                   	xchg   ecx,eax
    31b4:	0b 91 03 00 00 02    	or     edx,DWORD PTR [rcx+0x2000003]
    31ba:	07                   	(bad)
    31bb:	92                   	xchg   edx,eax
    31bc:	0b a7 03 00 00 02    	or     esp,DWORD PTR [rdi+0x2000003]
    31c2:	07                   	(bad)
    31c3:	93                   	xchg   ebx,eax
    31c4:	0b bd 03 00 00 02    	or     edi,DWORD PTR [rbp+0x2000003]
    31ca:	07                   	(bad)
    31cb:	95                   	xchg   ebp,eax
    31cc:	0b e7                	or     esp,edi
    31ce:	03 00                	add    eax,DWORD PTR [rax]
    31d0:	00 02                	add    BYTE PTR [rdx],al
    31d2:	07                   	(bad)
    31d3:	98                   	cwde
    31d4:	0b 03                	or     eax,DWORD PTR [rbx]
    31d6:	04 00                	add    al,0x0
    31d8:	00 02                	add    BYTE PTR [rdx],al
    31da:	07                   	(bad)
    31db:	9a                   	(bad)
    31dc:	0b 19                	or     ebx,DWORD PTR [rcx]
    31de:	04 00                	add    al,0x0
    31e0:	00 02                	add    BYTE PTR [rdx],al
    31e2:	07                   	(bad)
    31e3:	9d                   	popf
    31e4:	0b 34 04             	or     esi,DWORD PTR [rsp+rax*1]
    31e7:	00 00                	add    BYTE PTR [rax],al
    31e9:	02 07                	add    al,BYTE PTR [rdi]
    31eb:	9e                   	sahf
    31ec:	0b 4f 04             	or     ecx,DWORD PTR [rdi+0x4]
    31ef:	00 00                	add    BYTE PTR [rax],al
    31f1:	02 07                	add    al,BYTE PTR [rdi]
    31f3:	9f                   	lahf
    31f4:	0b 80 04 00 00 02    	or     eax,DWORD PTR [rax+0x2000004]
    31fa:	07                   	(bad)
    31fb:	a1 0b a0 04 00 00 02 	movabs eax,ds:0xa40702000004a00b
    3202:	07 a4 
    3204:	0b c0                	or     eax,eax
    3206:	04 00                	add    al,0x0
    3208:	00 02                	add    BYTE PTR [rdx],al
    320a:	07                   	(bad)
    320b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    320c:	0b d3                	or     edx,ebx
    320e:	04 00                	add    al,0x0
    3210:	00 02                	add    BYTE PTR [rdx],al
    3212:	07                   	(bad)
    3213:	a9 0b e0 04 00       	test   eax,0x4e00b
    3218:	00 02                	add    BYTE PTR [rdx],al
    321a:	07                   	(bad)
    321b:	aa                   	stos   BYTE PTR es:[rdi],al
    321c:	0b f1                	or     esi,ecx
    321e:	04 00                	add    al,0x0
    3220:	00 02                	add    BYTE PTR [rdx],al
    3222:	07                   	(bad)
    3223:	ab                   	stos   DWORD PTR es:[rdi],eax
    3224:	0b 11                	or     edx,DWORD PTR [rcx]
    3226:	05 00 00 02 07       	add    eax,0x7020000
    322b:	ac                   	lods   al,BYTE PTR ds:[rsi]
    322c:	0b 34 05 00 00 02 07 	or     esi,DWORD PTR [rax*1+0x7020000]
    3233:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3234:	0b 57 05             	or     edx,DWORD PTR [rdi+0x5]
    3237:	00 00                	add    BYTE PTR [rax],al
    3239:	02 07                	add    al,BYTE PTR [rdi]
    323b:	af                   	scas   eax,DWORD PTR es:[rdi]
    323c:	0b 6d 05             	or     ebp,DWORD PTR [rbp+0x5]
    323f:	00 00                	add    BYTE PTR [rax],al
    3241:	02 07                	add    al,BYTE PTR [rdi]
    3243:	b0 0b                	mov    al,0xb
    3245:	92                   	xchg   edx,eax
    3246:	05 00 00 02 07       	add    eax,0x7020000
    324b:	f4                   	hlt
    324c:	16                   	(bad)
    324d:	e2 00                	loop   324f <_Z7testAllPKcjS0_+0x33f>
    324f:	00 00                	add    BYTE PTR [rax],al
    3251:	02 07                	add    al,BYTE PTR [rdi]
    3253:	f9                   	stc
    3254:	16                   	(bad)
    3255:	f2 05 00 00 02 07    	repnz add eax,0x7020000
    325b:	fa                   	cli
    325c:	16                   	(bad)
    325d:	0c 06                	or     al,0x6
    325f:	00 00                	add    BYTE PTR [rax],al
    3261:	02 07                	add    al,BYTE PTR [rdi]
    3263:	fc                   	cld
    3264:	16                   	(bad)
    3265:	27                   	(bad)
    3266:	06                   	(bad)
    3267:	00 00                	add    BYTE PTR [rax],al
    3269:	02 07                	add    al,BYTE PTR [rdi]
    326b:	fd                   	std
    326c:	16                   	(bad)
    326d:	83 06 00             	add    DWORD PTR [rsi],0x0
    3270:	00 02                	add    BYTE PTR [rdx],al
    3272:	07                   	(bad)
    3273:	fe                   	(bad)
    3274:	16                   	(bad)
    3275:	3d 06 00 00 02       	cmp    eax,0x2000006
    327a:	07                   	(bad)
    327b:	ff 16                	call   QWORD PTR [rsi]
    327d:	60                   	(bad)
    327e:	06                   	(bad)
    327f:	00 00                	add    BYTE PTR [rax],al
    3281:	34 07                	xor    al,0x7
    3283:	00 01                	add    BYTE PTR [rcx],al
    3285:	16                   	(bad)
    3286:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3287:	06                   	(bad)
    3288:	00 00                	add    BYTE PTR [rax],al
    328a:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    328d:	73 00                	jae    328f <_Z7testAllPKcjS0_+0x37f>
    328f:	89 0f                	mov    DWORD PTR [rdi],ecx
    3291:	03 00                	add    eax,DWORD PTR [rax]
    3293:	00 ef                	add    bh,ch
    3295:	06                   	(bad)
    3296:	00 00                	add    BYTE PTR [rax],al
    3298:	93                   	xchg   ebx,eax
    3299:	02 00                	add    al,BYTE PTR [rax]
    329b:	00 01                	add    BYTE PTR [rcx],al
    329d:	ef                   	out    dx,eax
    329e:	06                   	(bad)
    329f:	00 00                	add    BYTE PTR [rax],al
    32a1:	00 10                	add    BYTE PTR [rax],dl
    32a3:	61                   	(bad)
    32a4:	62 73 00 55 1b       	(bad)
    32a9:	00 00                	add    BYTE PTR [rax],al
    32ab:	00 fe                	add    dh,bh
    32ad:	06                   	(bad)
    32ae:	00 00                	add    BYTE PTR [rax],al
    32b0:	ab                   	stos   DWORD PTR es:[rdi],eax
    32b1:	02 00                	add    al,BYTE PTR [rax]
    32b3:	00 01                	add    BYTE PTR [rcx],al
    32b5:	fe 06                	inc    BYTE PTR [rsi]
    32b7:	00 00                	add    BYTE PTR [rax],al
    32b9:	00 10                	add    BYTE PTR [rax],dl
    32bb:	61                   	(bad)
    32bc:	62 73 00 4f fb       	(bad)
    32c1:	02 00                	add    al,BYTE PTR [rax]
    32c3:	00 c0                	add    al,al
    32c5:	06                   	(bad)
    32c6:	00 00                	add    BYTE PTR [rax],al
    32c8:	c3                   	ret
    32c9:	02 00                	add    al,BYTE PTR [rax]
    32cb:	00 01                	add    BYTE PTR [rcx],al
    32cd:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    32d0:	00 00                	add    BYTE PTR [rax],al
    32d2:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    32d5:	73 00                	jae    32d7 <_Z7testAllPKcjS0_+0x3c7>
    32d7:	4b 05 03 00 00 9e    	rex.WXB add rax,0xffffffff9e000003
    32dd:	06                   	(bad)
    32de:	00 00                	add    BYTE PTR [rax],al
    32e0:	db 02                	fild   DWORD PTR [rdx]
    32e2:	00 00                	add    BYTE PTR [rax],al
    32e4:	01 9e 06 00 00 00    	add    DWORD PTR [rsi+0x6],ebx
    32ea:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    32ed:	73 00                	jae    32ef <_Z7testAllPKcjS0_+0x3df>
    32ef:	47 f1                	rex.RXB int1
    32f1:	02 00                	add    al,BYTE PTR [rax]
    32f3:	00 8a 03 00 00 f3    	add    BYTE PTR [rdx-0xcfffffd],cl
    32f9:	02 00                	add    al,BYTE PTR [rax]
    32fb:	00 01                	add    BYTE PTR [rcx],al
    32fd:	8a 03                	mov    al,BYTE PTR [rbx]
    32ff:	00 00                	add    BYTE PTR [rax],al
    3301:	00 10                	add    BYTE PTR [rax],dl
    3303:	61                   	(bad)
    3304:	62 73 00 3d 41       	(bad)
    3309:	00 00                	add    BYTE PTR [rax],al
    330b:	00 db                	add    bl,bl
    330d:	00 00                	add    BYTE PTR [rax],al
    330f:	00 0b                	add    BYTE PTR [rbx],cl
    3311:	03 00                	add    eax,DWORD PTR [rax]
    3313:	00 01                	add    BYTE PTR [rcx],al
    3315:	db 00                	fild   DWORD PTR [rax]
    3317:	00 00                	add    BYTE PTR [rax],al
    3319:	00 10                	add    BYTE PTR [rax],dl
    331b:	61                   	(bad)
    331c:	62 73 00 38 11       	(bad)
    3321:	00 00                	add    BYTE PTR [rax],al
    3323:	00 a3 00 00 00 23    	add    BYTE PTR [rbx+0x23000000],ah
    3329:	03 00                	add    eax,DWORD PTR [rax]
    332b:	00 01                	add    BYTE PTR [rcx],al
    332d:	a3 00 00 00 00 22 64 	movabs ds:0x7669642200000000,eax
    3334:	69 76 
    3336:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    333c:	aa                   	stos   BYTE PTR es:[rdi],al
    333d:	00 00                	add    BYTE PTR [rax],al
    333f:	00 01                	add    BYTE PTR [rcx],al
    3341:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    3348:	00 00 
    334a:	00 00                	add    BYTE PTR [rax],al
    334c:	08 6d 00             	or     BYTE PTR [rbp+0x0],ch
    334f:	00 00                	add    BYTE PTR [rax],al
    3351:	de 02                	fiadd  WORD PTR [rdx]
    3353:	0c 66                	or     al,0x66
    3355:	00 00                	add    BYTE PTR [rax],al
    3357:	00 53 03             	add    BYTE PTR [rbx+0x3],dl
    335a:	00 00                	add    BYTE PTR [rax],al
    335c:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    335f:	00 00                	add    BYTE PTR [rax],al
    3361:	00 0a                	add    BYTE PTR [rdx],cl
    3363:	58                   	pop    rax
    3364:	03 00                	add    eax,DWORD PTR [rax]
    3366:	00 35 36 33 00 00    	add    BYTE PTR [rip+0x3336],dh        # 66a2 <_end+0x68a>
    336c:	00 05 e3 02 12 33    	add    BYTE PTR [rip+0x331202e3],al        # 33123655 <_end+0x3311d63d>
    3372:	00 00                	add    BYTE PTR [rax],al
    3374:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    3377:	00 00                	add    BYTE PTR [rax],al
    3379:	74 03                	je     337e <_Z7testAllPKcjS0_+0x46e>
    337b:	00 00                	add    BYTE PTR [rax],al
    337d:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    3380:	00 00                	add    BYTE PTR [rax],al
    3382:	00 0c cd 01 00 00 09 	add    BYTE PTR [rcx*8+0x9000001],cl
    3389:	19 01                	sbb    DWORD PTR [rcx],eax
    338b:	8a 03                	mov    al,BYTE PTR [rbx]
    338d:	00 00                	add    BYTE PTR [rax],al
    338f:	8a 03                	mov    al,BYTE PTR [rbx]
    3391:	00 00                	add    BYTE PTR [rax],al
    3393:	01 f5                	add    ebp,esi
    3395:	00 00                	add    BYTE PTR [rax],al
    3397:	00 00                	add    BYTE PTR [rax],al
    3399:	06                   	(bad)
    339a:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    339d:	01 00                	add    DWORD PTR [rax],eax
    339f:	00 08                	add    BYTE PTR [rax],cl
    33a1:	d2 01                	rol    BYTE PTR [rcx],cl
    33a3:	00 00                	add    BYTE PTR [rax],al
    33a5:	e1 01                	loope  33a8 <_Z7testAllPKcjS0_+0x498>
    33a7:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    33aa:	00 00                	add    BYTE PTR [rax],al
    33ac:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    33ad:	03 00                	add    eax,DWORD PTR [rax]
    33af:	00 01                	add    BYTE PTR [rcx],al
    33b1:	f5                   	cmc
    33b2:	00 00                	add    BYTE PTR [rax],al
    33b4:	00 00                	add    BYTE PTR [rax],al
    33b6:	08 dc                	or     ah,bl
    33b8:	01 00                	add    DWORD PTR [rax],eax
    33ba:	00 e6                	add    dh,ah
    33bc:	01 01                	add    DWORD PTR [rcx],eax
    33be:	a3 00 00 00 bd 03 00 	movabs ds:0x1000003bd000000,eax
    33c5:	00 01 
    33c7:	f5                   	cmc
    33c8:	00 00                	add    BYTE PTR [rax],al
    33ca:	00 00                	add    BYTE PTR [rax],al
    33cc:	0c 65                	or     al,0x65
    33ce:	00 00                	add    BYTE PTR [rax],al
    33d0:	00 0a                	add    BYTE PTR [rdx],cl
    33d2:	14 01                	adc    al,0x1
    33d4:	33 01                	xor    eax,DWORD PTR [rcx]
    33d6:	00 00                	add    BYTE PTR [rax],al
    33d8:	e7 03                	out    0x3,eax
    33da:	00 00                	add    BYTE PTR [rax],al
    33dc:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    33df:	00 00                	add    BYTE PTR [rax],al
    33e1:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    33e4:	00 00                	add    BYTE PTR [rax],al
    33e6:	01 2e                	add    DWORD PTR [rsi],ebp
    33e8:	00 00                	add    BYTE PTR [rax],al
    33ea:	00 01                	add    BYTE PTR [rcx],al
    33ec:	2e 00 00             	cs add BYTE PTR [rax],al
    33ef:	00 01                	add    BYTE PTR [rcx],al
    33f1:	41 01 00             	add    DWORD PTR [r8],eax
    33f4:	00 00                	add    BYTE PTR [rax],al
    33f6:	37                   	(bad)
    33f7:	64 69 76 00 05 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e005
    33fe:	0e 
    33ff:	72 00                	jb     3401 <_Z7testAllPKcjS0_+0x4f1>
    3401:	00 00                	add    BYTE PTR [rax],al
    3403:	03 04 00             	add    eax,DWORD PTR [rax+rax*1]
    3406:	00 01                	add    BYTE PTR [rcx],al
    3408:	66 00 00             	data16 add BYTE PTR [rax],al
    340b:	00 01                	add    BYTE PTR [rcx],al
    340d:	66 00 00             	data16 add BYTE PTR [rax],al
    3410:	00 00                	add    BYTE PTR [rax],al
    3412:	08 bd 00 00 00 05    	or     BYTE PTR [rbp+0x5000000],bh
    3418:	03 0e                	add    ecx,DWORD PTR [rsi]
    341a:	35 01 00 00 19       	xor    eax,0x19000001
    341f:	04 00                	add    al,0x0
    3421:	00 01                	add    BYTE PTR [rcx],al
    3423:	f5                   	cmc
    3424:	00 00                	add    BYTE PTR [rax],al
    3426:	00 00                	add    BYTE PTR [rax],al
    3428:	08 c3                	or     bl,al
    342a:	02 00                	add    al,BYTE PTR [rax]
    342c:	00 e2                	add    dl,ah
    342e:	03 0f                	add    ecx,DWORD PTR [rdi]
    3430:	aa                   	stos   BYTE PTR es:[rdi],al
    3431:	00 00                	add    BYTE PTR [rax],al
    3433:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    3436:	00 00                	add    BYTE PTR [rax],al
    3438:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
    343e:	a3 00 00 00 00 08 33 	movabs ds:0x2330800000000,eax
    3445:	02 00 
    3447:	00 26                	add    BYTE PTR [rsi],ah
    3449:	04 0c                	add    al,0xc
    344b:	66 00 00             	data16 add BYTE PTR [rax],al
    344e:	00 4f 04             	add    BYTE PTR [rdi+0x4],cl
    3451:	00 00                	add    BYTE PTR [rax],al
    3453:	01 f5                	add    ebp,esi
    3455:	00 00                	add    BYTE PTR [rax],al
    3457:	00 01                	add    BYTE PTR [rcx],al
    3459:	2e 00 00             	cs add BYTE PTR [rax],al
    345c:	00 00                	add    BYTE PTR [rax],al
    345e:	0c 39                	or     al,0x39
    3460:	02 00                	add    al,BYTE PTR [rax]
    3462:	00 0b                	add    BYTE PTR [rbx],cl
    3464:	75 01                	jne    3467 <_Z7testAllPKcjS0_+0x557>
    3466:	2e 00 00             	cs add BYTE PTR [rax],al
    3469:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    346c:	00 00                	add    BYTE PTR [rax],al
    346e:	01 6f 04             	add    DWORD PTR [rdi+0x4],ebp
    3471:	00 00                	add    BYTE PTR [rax],al
    3473:	01 f5                	add    ebp,esi
    3475:	00 00                	add    BYTE PTR [rax],al
    3477:	00 01                	add    BYTE PTR [rcx],al
    3479:	2e 00 00             	cs add BYTE PTR [rax],al
    347c:	00 00                	add    BYTE PTR [rax],al
    347e:	0a 74 04 00          	or     dh,BYTE PTR [rsp+rax*1+0x0]
    3482:	00 06                	add    BYTE PTR [rsi],al
    3484:	04 05                	add    al,0x5
    3486:	61                   	(bad)
    3487:	02 00                	add    al,BYTE PTR [rax]
    3489:	00 0e                	add    BYTE PTR [rsi],cl
    348b:	74 04                	je     3491 <_Z7testAllPKcjS0_+0x581>
    348d:	00 00                	add    BYTE PTR [rax],al
    348f:	08 d9                	or     cl,bl
    3491:	00 00                	add    BYTE PTR [rax],al
    3493:	00 29                	add    BYTE PTR [rcx],ch
    3495:	04 0c                	add    al,0xc
    3497:	66 00 00             	data16 add BYTE PTR [rax],al
    349a:	00 a0 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ah
    34a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34a1:	04 00                	add    al,0x0
    34a3:	00 01                	add    BYTE PTR [rcx],al
    34a5:	f5                   	cmc
    34a6:	00 00                	add    BYTE PTR [rax],al
    34a8:	00 01                	add    BYTE PTR [rcx],al
    34aa:	2e 00 00             	cs add BYTE PTR [rax],al
    34ad:	00 00                	add    BYTE PTR [rax],al
    34af:	1d 25 00 00 00       	sbb    eax,0x25
    34b4:	ca 03 c0             	retf   0xc003
    34b7:	04 00                	add    al,0x0
    34b9:	00 01                	add    BYTE PTR [rcx],al
    34bb:	33 01                	xor    eax,DWORD PTR [rcx]
    34bd:	00 00                	add    BYTE PTR [rax],al
    34bf:	01 2e                	add    DWORD PTR [rsi],ebp
    34c1:	00 00                	add    BYTE PTR [rax],al
    34c3:	00 01                	add    BYTE PTR [rcx],al
    34c5:	2e 00 00             	cs add BYTE PTR [rax],al
    34c8:	00 01                	add    BYTE PTR [rcx],al
    34ca:	41 01 00             	add    DWORD PTR [r8],eax
    34cd:	00 00                	add    BYTE PTR [rax],al
    34cf:	38 36                	cmp    BYTE PTR [rsi],dh
    34d1:	00 00                	add    BYTE PTR [rax],al
    34d3:	00 05 fa 02 0d d3    	add    BYTE PTR [rip+0xffffffffd30d02fa],al        # ffffffffd30d37d3 <_end+0xffffffffd30cd7bb>
    34d9:	04 00                	add    al,0x0
    34db:	00 01                	add    BYTE PTR [rcx],al
    34dd:	66 00 00             	data16 add BYTE PTR [rax],al
    34e0:	00 00                	add    BYTE PTR [rax],al
    34e2:	39 ec                	cmp    esp,ebp
    34e4:	02 00                	add    al,BYTE PTR [rax]
    34e6:	00 05 3d 02 0c 66    	add    BYTE PTR [rip+0x660c023d],al        # 660c3729 <_end+0x660bd711>
    34ec:	00 00                	add    BYTE PTR [rax],al
    34ee:	00 1d eb 02 00 00    	add    BYTE PTR [rip+0x2eb],bl        # 37df <_Z21standartDeviationTimePdjd+0x11f>
    34f4:	3f                   	(bad)
    34f5:	02 f1                	add    dh,cl
    34f7:	04 00                	add    al,0x0
    34f9:	00 01                	add    BYTE PTR [rcx],al
    34fb:	12 01                	adc    al,BYTE PTR [rcx]
    34fd:	00 00                	add    BYTE PTR [rax],al
    34ff:	00 0c 05 01 00 00 05 	add    BYTE PTR [rax*1+0x5000001],cl
    3506:	76 0f                	jbe    3517 <_Z7testAllPKcjS0_+0x607>
    3508:	8a 03                	mov    al,BYTE PTR [rbx]
    350a:	00 00                	add    BYTE PTR [rax],al
    350c:	0c 05                	or     al,0x5
    350e:	00 00                	add    BYTE PTR [rax],al
    3510:	01 f5                	add    ebp,esi
    3512:	00 00                	add    BYTE PTR [rax],al
    3514:	00 01                	add    BYTE PTR [rcx],al
    3516:	0c 05                	or     al,0x5
    3518:	00 00                	add    BYTE PTR [rax],al
    351a:	00 0a                	add    BYTE PTR [rdx],cl
    351c:	35 01 00 00 17       	xor    eax,0x17000001
    3521:	54                   	push   rsp
    3522:	00 00                	add    BYTE PTR [rax],al
    3524:	00 d7                	add    bh,dl
    3526:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    3529:	00 00                	add    BYTE PTR [rax],al
    352b:	a3 00 00 00 34 05 00 	movabs ds:0x100000534000000,eax
    3532:	00 01 
    3534:	f5                   	cmc
    3535:	00 00                	add    BYTE PTR [rax],al
    3537:	00 01                	add    BYTE PTR [rcx],al
    3539:	0c 05                	or     al,0x5
    353b:	00 00                	add    BYTE PTR [rax],al
    353d:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3540:	00 00                	add    BYTE PTR [rax],al
    3542:	00 17                	add    BYTE PTR [rdi],dl
    3544:	25 02 00 00 db       	and    eax,0xdb000002
    3549:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    354c:	00 00                	add    BYTE PTR [rax],al
    354e:	3a 00                	cmp    al,BYTE PTR [rax]
    3550:	00 00                	add    BYTE PTR [rax],al
    3552:	57                   	push   rdi
    3553:	05 00 00 01 f5       	add    eax,0xf5010000
    3558:	00 00                	add    BYTE PTR [rax],al
    355a:	00 01                	add    BYTE PTR [rcx],al
    355c:	0c 05                	or     al,0x5
    355e:	00 00                	add    BYTE PTR [rax],al
    3560:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3563:	00 00                	add    BYTE PTR [rax],al
    3565:	00 08                	add    BYTE PTR [rax],cl
    3567:	db 25 00 00 9b 03    	(bad)  [rip+0x39b0000]        # 39b356d <_end+0x39ad555>
    356d:	0c 66                	or     al,0x66
    356f:	00 00                	add    BYTE PTR [rax],al
    3571:	00 6d 05             	add    BYTE PTR [rbp+0x5],ch
    3574:	00 00                	add    BYTE PTR [rax],al
    3576:	01 f5                	add    ebp,esi
    3578:	00 00                	add    BYTE PTR [rax],al
    357a:	00 00                	add    BYTE PTR [rax],al
    357c:	0c e1                	or     al,0xe1
    357e:	01 00                	add    DWORD PTR [rax],eax
    3580:	00 0b                	add    BYTE PTR [rbx],cl
    3582:	8f 01                	pop    QWORD PTR [rcx]
    3584:	2e 00 00             	cs add BYTE PTR [rax],al
    3587:	00 8d 05 00 00 01    	add    BYTE PTR [rbp+0x1000005],cl
    358d:	35 01 00 00 01       	xor    eax,0x1000001
    3592:	8d 05 00 00 01 2e    	lea    eax,[rip+0x2e010000]        # 2e013598 <_end+0x2e00d580>
    3598:	00 00                	add    BYTE PTR [rax],al
    359a:	00 00                	add    BYTE PTR [rax],al
    359c:	0a 7b 04             	or     bh,BYTE PTR [rbx+0x4]
    359f:	00 00                	add    BYTE PTR [rax],al
    35a1:	0c 42                	or     al,0x42
    35a3:	02 00                	add    al,BYTE PTR [rax]
    35a5:	00 0b                	add    BYTE PTR [rbx],cl
    35a7:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    35ab:	00 00                	add    BYTE PTR [rax],al
    35ad:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    35ae:	05 00 00 01 35       	add    eax,0x35010000
    35b3:	01 00                	add    DWORD PTR [rax],eax
    35b5:	00 01                	add    BYTE PTR [rcx],al
    35b7:	74 04                	je     35bd <_Z7testAllPKcjS0_+0x6ad>
    35b9:	00 00                	add    BYTE PTR [rax],al
    35bb:	00 3a                	add    BYTE PTR [rdx],bh
    35bd:	12 02                	adc    al,BYTE PTR [rdx]
    35bf:	00 00                	add    BYTE PTR [rax],al
    35c1:	13 57 01             	adc    edx,DWORD PTR [rdi+0x1]
    35c4:	0b 0c 06             	or     ecx,DWORD PTR [rsi+rax*1]
    35c7:	00 00                	add    BYTE PTR [rax],al
    35c9:	02 07                	add    al,BYTE PTR [rdi]
    35cb:	cc                   	int3
    35cc:	0b e2                	or     esp,edx
    35ce:	00 00                	add    BYTE PTR [rax],al
    35d0:	00 02                	add    BYTE PTR [rdx],al
    35d2:	07                   	(bad)
    35d3:	dc 0b                	fmul   QWORD PTR [rbx]
    35d5:	0c 06                	or     al,0x6
    35d7:	00 00                	add    BYTE PTR [rax],al
    35d9:	02 07                	add    al,BYTE PTR [rdi]
    35db:	e7 0b                	out    0xb,eax
    35dd:	27                   	(bad)
    35de:	06                   	(bad)
    35df:	00 00                	add    BYTE PTR [rax],al
    35e1:	02 07                	add    al,BYTE PTR [rdi]
    35e3:	e8 0b 3d 06 00       	call   672f3 <_end+0x612db>
    35e8:	00 02                	add    BYTE PTR [rdx],al
    35ea:	07                   	(bad)
    35eb:	e9 0b 60 06 00       	jmp    695fb <_end+0x635e3>
    35f0:	00 02                	add    BYTE PTR [rdx],al
    35f2:	07                   	(bad)
    35f3:	eb 0b                	jmp    3600 <_Z7testAllPKcjS0_+0x6f0>
    35f5:	83 06 00             	add    DWORD PTR [rsi],0x0
    35f8:	00 02                	add    BYTE PTR [rdx],al
    35fa:	07                   	(bad)
    35fb:	ec                   	in     al,dx
    35fc:	0b a5 06 00 00 22    	or     esp,DWORD PTR [rbp+0x22000006]
    3602:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    3609:	00 
    360a:	00 e2                	add    dl,ah
    360c:	00 00                	add    BYTE PTR [rax],al
    360e:	00 01                	add    BYTE PTR [rcx],al
    3610:	db 00                	fild   DWORD PTR [rax]
    3612:	00 00                	add    BYTE PTR [rax],al
    3614:	01 db                	add    ebx,ebx
    3616:	00 00                	add    BYTE PTR [rax],al
    3618:	00 00                	add    BYTE PTR [rax],al
    361a:	00 08                	add    BYTE PTR [rax],cl
    361c:	c2 02 00             	ret    0x2
    361f:	00 e6                	add    dh,ah
    3621:	03 1e                	add    ebx,DWORD PTR [rsi]
    3623:	e2 00                	loop   3625 <_Z7testAllPKcjS0_+0x715>
    3625:	00 00                	add    BYTE PTR [rax],al
    3627:	27                   	(bad)
    3628:	06                   	(bad)
    3629:	00 00                	add    BYTE PTR [rax],al
    362b:	01 db                	add    ebx,ebx
    362d:	00 00                	add    BYTE PTR [rax],al
    362f:	00 01                	add    BYTE PTR [rcx],al
    3631:	db 00                	fild   DWORD PTR [rax]
    3633:	00 00                	add    BYTE PTR [rax],al
    3635:	00 08                	add    BYTE PTR [rax],cl
    3637:	2d 02 00 00 ed       	sub    eax,0xed000002
    363c:	01 01                	add    DWORD PTR [rcx],eax
    363e:	db 00                	fild   DWORD PTR [rax]
    3640:	00 00                	add    BYTE PTR [rax],al
    3642:	3d 06 00 00 01       	cmp    eax,0x1000006
    3647:	f5                   	cmc
    3648:	00 00                	add    BYTE PTR [rax],al
    364a:	00 00                	add    BYTE PTR [rax],al
    364c:	17                   	(bad)
    364d:	88 00                	mov    BYTE PTR [rax],al
    364f:	00 00                	add    BYTE PTR [rax],al
    3651:	ee                   	out    dx,al
    3652:	16                   	(bad)
    3653:	7f 00                	jg     3655 <_Z7testAllPKcjS0_+0x745>
    3655:	00 00                	add    BYTE PTR [rax],al
    3657:	db 00                	fild   DWORD PTR [rax]
    3659:	00 00                	add    BYTE PTR [rax],al
    365b:	60                   	(bad)
    365c:	06                   	(bad)
    365d:	00 00                	add    BYTE PTR [rax],al
    365f:	01 f5                	add    ebp,esi
    3661:	00 00                	add    BYTE PTR [rax],al
    3663:	00 01                	add    BYTE PTR [rcx],al
    3665:	0c 05                	or     al,0x5
    3667:	00 00                	add    BYTE PTR [rax],al
    3669:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    366c:	00 00                	add    BYTE PTR [rax],al
    366e:	00 17                	add    BYTE PTR [rdi],dl
    3670:	b9 02 00 00 f3       	mov    ecx,0xf3000002
    3675:	1f                   	(bad)
    3676:	b0 02                	mov    al,0x2
    3678:	00 00                	add    BYTE PTR [rax],al
    367a:	3a 01                	cmp    al,BYTE PTR [rcx]
    367c:	00 00                	add    BYTE PTR [rax],al
    367e:	83 06 00             	add    DWORD PTR [rsi],0x0
    3681:	00 01                	add    BYTE PTR [rcx],al
    3683:	f5                   	cmc
    3684:	00 00                	add    BYTE PTR [rax],al
    3686:	00 01                	add    BYTE PTR [rcx],al
    3688:	0c 05                	or     al,0x5
    368a:	00 00                	add    BYTE PTR [rax],al
    368c:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    368f:	00 00                	add    BYTE PTR [rax],al
    3691:	00 0c 97             	add    BYTE PTR [rdi+rdx*4],cl
    3694:	02 00                	add    al,BYTE PTR [rax]
    3696:	00 05 7c 0e 9e 06    	add    BYTE PTR [rip+0x69e0e7c],al        # 69e4518 <_end+0x69de500>
    369c:	00 00                	add    BYTE PTR [rax],al
    369e:	9e                   	sahf
    369f:	06                   	(bad)
    36a0:	00 00                	add    BYTE PTR [rax],al
    36a2:	01 f5                	add    ebp,esi
    36a4:	00 00                	add    BYTE PTR [rax],al
    36a6:	00 01                	add    BYTE PTR [rcx],al
    36a8:	0c 05                	or     al,0x5
    36aa:	00 00                	add    BYTE PTR [rax],al
    36ac:	00 06                	add    BYTE PTR [rsi],al
    36ae:	04 04                	add    al,0x4
    36b0:	d3 00                	rol    DWORD PTR [rax],cl
    36b2:	00 00                	add    BYTE PTR [rax],al
    36b4:	0c 2b                	or     al,0x2b
    36b6:	00 00                	add    BYTE PTR [rax],al
    36b8:	00 05 7f 14 c0 06    	add    BYTE PTR [rip+0x6c0147f],al        # 6c04b3d <_end+0x6bfeb25>
    36be:	00 00                	add    BYTE PTR [rax],al
    36c0:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    36c3:	00 01                	add    BYTE PTR [rcx],al
    36c5:	f5                   	cmc
    36c6:	00 00                	add    BYTE PTR [rax],al
    36c8:	00 01                	add    BYTE PTR [rcx],al
    36ca:	0c 05                	or     al,0x5
    36cc:	00 00                	add    BYTE PTR [rax],al
    36ce:	00 06                	add    BYTE PTR [rsi],al
    36d0:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    36d3:	01 00                	add    DWORD PTR [rax],eax
    36d5:	00 02                	add    BYTE PTR [rdx],al
    36d7:	0c 27                	or     al,0x27
    36d9:	0c 3d                	or     al,0x3d
    36db:	03 00                	add    eax,DWORD PTR [rax]
    36dd:	00 02                	add    BYTE PTR [rdx],al
    36df:	0c 2b                	or     al,0x2b
    36e1:	0e                   	(bad)
    36e2:	59                   	pop    rcx
    36e3:	03 00                	add    eax,DWORD PTR [rax]
    36e5:	00 02                	add    BYTE PTR [rdx],al
    36e7:	0c 2e                	or     al,0x2e
    36e9:	0e                   	(bad)
    36ea:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    36ee:	02 0c 36             	add    cl,BYTE PTR [rsi+rsi*1]
    36f1:	0c 72                	or     al,0x72
    36f3:	00 00                	add    BYTE PTR [rax],al
    36f5:	00 02                	add    BYTE PTR [rdx],al
    36f7:	0c 37                	or     al,0x37
    36f9:	0c aa                	or     al,0xaa
    36fb:	00 00                	add    BYTE PTR [rax],al
    36fd:	00 06                	add    BYTE PTR [rsi],al
    36ff:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    3702:	02 00                	add    al,BYTE PTR [rax]
    3704:	00 02                	add    BYTE PTR [rdx],al
    3706:	0c 39                	or     al,0x39
    3708:	0c 7b                	or     al,0x7b
    370a:	02 00                	add    al,BYTE PTR [rax]
    370c:	00 06                	add    BYTE PTR [rsi],al
    370e:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 38fe <_Z27standartDeviationCollisionsP7HashMapf+0xde>
    3714:	02 0c 39             	add    cl,BYTE PTR [rcx+rdi*1]
    3717:	0c 93                	or     al,0x93
    3719:	02 00                	add    al,BYTE PTR [rax]
    371b:	00 02                	add    BYTE PTR [rdx],al
    371d:	0c 39                	or     al,0x39
    371f:	0c ab                	or     al,0xab
    3721:	02 00                	add    al,BYTE PTR [rax]
    3723:	00 02                	add    BYTE PTR [rdx],al
    3725:	0c 39                	or     al,0x39
    3727:	0c c3                	or     al,0xc3
    3729:	02 00                	add    al,BYTE PTR [rax]
    372b:	00 02                	add    BYTE PTR [rdx],al
    372d:	0c 39                	or     al,0x39
    372f:	0c db                	or     al,0xdb
    3731:	02 00                	add    al,BYTE PTR [rax]
    3733:	00 02                	add    BYTE PTR [rdx],al
    3735:	0c 39                	or     al,0x39
    3737:	0c f3                	or     al,0xf3
    3739:	02 00                	add    al,BYTE PTR [rax]
    373b:	00 02                	add    BYTE PTR [rdx],al
    373d:	0c 39                	or     al,0x39
    373f:	0c 0b                	or     al,0xb
    3741:	03 00                	add    eax,DWORD PTR [rax]
    3743:	00 02                	add    BYTE PTR [rdx],al
    3745:	0c 3a                	or     al,0x3a
    3747:	0c 74                	or     al,0x74
    3749:	03 00                	add    eax,DWORD PTR [rax]
    374b:	00 02                	add    BYTE PTR [rdx],al
    374d:	0c 3b                	or     al,0x3b
    374f:	0c 91                	or     al,0x91
    3751:	03 00                	add    eax,DWORD PTR [rax]
    3753:	00 02                	add    BYTE PTR [rdx],al
    3755:	0c 3c                	or     al,0x3c
    3757:	0c a7                	or     al,0xa7
    3759:	03 00                	add    eax,DWORD PTR [rax]
    375b:	00 02                	add    BYTE PTR [rdx],al
    375d:	0c 3d                	or     al,0x3d
    375f:	0c bd                	or     al,0xbd
    3761:	03 00                	add    eax,DWORD PTR [rax]
    3763:	00 02                	add    BYTE PTR [rdx],al
    3765:	0c 3f                	or     al,0x3f
    3767:	0c f2                	or     al,0xf2
    3769:	05 00 00 02 0c       	add    eax,0xc020000
    376e:	3f                   	(bad)
    376f:	0c 23                	or     al,0x23
    3771:	03 00                	add    eax,DWORD PTR [rax]
    3773:	00 02                	add    BYTE PTR [rdx],al
    3775:	0c 3f                	or     al,0x3f
    3777:	0c e7                	or     al,0xe7
    3779:	03 00                	add    eax,DWORD PTR [rax]
    377b:	00 02                	add    BYTE PTR [rdx],al
    377d:	0c 41                	or     al,0x41
    377f:	0c 03                	or     al,0x3
    3781:	04 00                	add    al,0x0
    3783:	00 02                	add    BYTE PTR [rdx],al
    3785:	0c 43                	or     al,0x43
    3787:	0c 19                	or     al,0x19
    3789:	04 00                	add    al,0x0
    378b:	00 02                	add    BYTE PTR [rdx],al
    378d:	0c 46                	or     al,0x46
    378f:	0c 34                	or     al,0x34
    3791:	04 00                	add    al,0x0
    3793:	00 02                	add    BYTE PTR [rdx],al
    3795:	0c 47                	or     al,0x47
    3797:	0c 4f                	or     al,0x4f
    3799:	04 00                	add    al,0x0
    379b:	00 02                	add    BYTE PTR [rdx],al
    379d:	0c 48                	or     al,0x48
    379f:	0c 80                	or     al,0x80
    37a1:	04 00                	add    al,0x0
    37a3:	00 02                	add    BYTE PTR [rdx],al
    37a5:	0c 4a                	or     al,0x4a
    37a7:	0c a0                	or     al,0xa0
    37a9:	04 00                	add    al,0x0
    37ab:	00 02                	add    BYTE PTR [rdx],al
    37ad:	0c 4b                	or     al,0x4b
    37af:	0c d3                	or     al,0xd3
    37b1:	04 00                	add    al,0x0
    37b3:	00 02                	add    BYTE PTR [rdx],al
    37b5:	0c 4d                	or     al,0x4d
    37b7:	0c e0                	or     al,0xe0
    37b9:	04 00                	add    al,0x0
    37bb:	00 02                	add    BYTE PTR [rdx],al
    37bd:	0c 4e                	or     al,0x4e
    37bf:	0c f1                	or     al,0xf1
    37c1:	04 00                	add    al,0x0
    37c3:	00 02                	add    BYTE PTR [rdx],al
    37c5:	0c 4f                	or     al,0x4f
    37c7:	0c 11                	or     al,0x11
    37c9:	05 00 00 02 0c       	add    eax,0xc020000
    37ce:	50                   	push   rax
    37cf:	0c 34                	or     al,0x34
    37d1:	05 00 00 02 0c       	add    eax,0xc020000
    37d6:	51                   	push   rcx
    37d7:	0c 57                	or     al,0x57
    37d9:	05 00 00 02 0c       	add    eax,0xc020000
    37de:	53                   	push   rbx
    37df:	0c 6d                	or     al,0x6d
    37e1:	05 00 00 02 0c       	add    eax,0xc020000
    37e6:	54                   	push   rsp
    37e7:	0c 92                	or     al,0x92
    37e9:	05 00 00 0b ab       	add    eax,0xab0b0000
    37ee:	00 00                	add    BYTE PTR [rax],al
    37f0:	00 0d 1a 14 27 01    	add    BYTE PTR [rip+0x127141a],cl        # 1274c10 <_end+0x126ebf8>
    37f6:	00 00                	add    BYTE PTR [rax],al
    37f8:	06                   	(bad)
    37f9:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    37fc:	00 00                	add    BYTE PTR [rax],al
    37fe:	00 06                	add    BYTE PTR [rsi],al
    3800:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    3803:	02 00                	add    al,BYTE PTR [rax]
    3805:	00 1e                	add    BYTE PTR [rsi],bl
    3807:	21 08                	and    DWORD PTR [rax],ecx
    3809:	00 00                	add    BYTE PTR [rax],al
    380b:	10 0e                	adc    BYTE PTR [rsi],cl
    380d:	07                   	(bad)
    380e:	2b 08                	sub    ecx,DWORD PTR [rax]
    3810:	00 00                	add    BYTE PTR [rax],al
    3812:	07                   	(bad)
    3813:	8f 03                	pop    QWORD PTR [rbx]
    3815:	00 00                	add    BYTE PTR [rax],al
    3817:	0e                   	(bad)
    3818:	08 0b                	or     BYTE PTR [rbx],cl
    381a:	35 01 00 00 00       	xor    eax,0x1
    381f:	07                   	(bad)
    3820:	ae                   	scas   al,BYTE PTR es:[rdi]
    3821:	05 00 00 0e 09       	add    eax,0x90e0000
    3826:	0e                   	(bad)
    3827:	dd 07                	fld    QWORD PTR [rdi]
    3829:	00 00                	add    BYTE PTR [rax],al
    382b:	08 07                	or     BYTE PTR [rdi],al
    382d:	b3 05                	mov    bl,0x5
    382f:	00 00                	add    BYTE PTR [rax],al
    3831:	0e                   	(bad)
    3832:	0a 0e                	or     cl,BYTE PTR [rsi]
    3834:	dd 07                	fld    QWORD PTR [rdi]
    3836:	00 00                	add    BYTE PTR [rax],al
    3838:	0c 00                	or     al,0x0
    383a:	0b 21                	or     esp,DWORD PTR [rcx]
    383c:	08 00                	or     BYTE PTR [rax],al
    383e:	00 0e                	add    BYTE PTR [rsi],cl
    3840:	0b 03                	or     eax,DWORD PTR [rbx]
    3842:	f7 07 00 00 18 69    	test   DWORD PTR [rdi],0x69180000
    3848:	02 00                	add    al,BYTE PTR [rax]
    384a:	00 0f                	add    BYTE PTR [rdi],cl
    384c:	08 6d 00             	or     BYTE PTR [rbp+0x0],ch
    384f:	00 00                	add    BYTE PTR [rax],al
    3851:	0f 18 75 02          	nop    DWORD PTR [rbp+0x2]
    3855:	00 00                	add    BYTE PTR [rax],al
    3857:	0f 09                	wbinvd
    3859:	6d                   	ins    DWORD PTR es:[rdi],dx
    385a:	00 00                	add    BYTE PTR [rax],al
    385c:	00 02                	add    BYTE PTR [rdx],al
    385e:	18 c4                	sbb    ah,al
    3860:	00 00                	add    BYTE PTR [rax],al
    3862:	00 0f                	add    BYTE PTR [rdi],cl
    3864:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    3867:	00 00                	add    BYTE PTR [rax],al
    3869:	20 0b                	and    BYTE PTR [rbx],cl
    386b:	22 03                	and    al,BYTE PTR [rbx]
    386d:	00 00                	add    BYTE PTR [rax],al
    386f:	0f 0c                	(bad)
    3871:	12 2b                	adc    ch,BYTE PTR [rbx]
    3873:	08 00                	or     BYTE PTR [rax],al
    3875:	00 1e                	add    BYTE PTR [rsi],bl
    3877:	07                   	(bad)
    3878:	05 00 00 20 0f       	add    eax,0xf200000
    387d:	0f a8                	push   gs
    387f:	08 00                	or     BYTE PTR [rax],al
    3881:	00 07                	add    BYTE PTR [rdi],al
    3883:	dd 05 00 00 0f 10    	fld    QWORD PTR [rip+0x100f0000]        # 100f3889 <_end+0x100ed871>
    3889:	0e                   	(bad)
    388a:	dd 07                	fld    QWORD PTR [rdi]
    388c:	00 00                	add    BYTE PTR [rax],al
    388e:	00 07                	add    BYTE PTR [rdi],al
    3890:	5a                   	pop    rdx
    3891:	04 00                	add    al,0x0
    3893:	00 0f                	add    BYTE PTR [rdi],cl
    3895:	11 0e                	adc    DWORD PTR [rsi],ecx
    3897:	dd 07                	fld    QWORD PTR [rdi]
    3899:	00 00                	add    BYTE PTR [rax],al
    389b:	04 07                	add    al,0x7
    389d:	99                   	cdq
    389e:	05 00 00 0f 13       	add    eax,0x130f0000
    38a3:	0e                   	(bad)
    38a4:	dd 07                	fld    QWORD PTR [rdi]
    38a6:	00 00                	add    BYTE PTR [rax],al
    38a8:	08 07                	or     BYTE PTR [rdi],al
    38aa:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    38ad:	00 0f                	add    BYTE PTR [rdi],cl
    38af:	15 0c 5b 08 00       	adc    eax,0x85b0c
    38b4:	00 10                	add    BYTE PTR [rax],dl
    38b6:	00 0b                	add    BYTE PTR [rbx],cl
    38b8:	07                   	(bad)
    38b9:	05 00 00 0f 16       	add    eax,0x160f0000
    38be:	03 67 08             	add    esp,DWORD PTR [rdi+0x8]
    38c1:	00 00                	add    BYTE PTR [rax],al
    38c3:	1e                   	(bad)
    38c4:	ae                   	scas   al,BYTE PTR es:[rdi]
    38c5:	03 00                	add    eax,DWORD PTR [rax]
    38c7:	00 18                	add    BYTE PTR [rax],bl
    38c9:	0f 18 f5             	nop    ebp
    38cc:	08 00                	or     BYTE PTR [rax],al
    38ce:	00 07                	add    BYTE PTR [rdi],al
    38d0:	a1 05 00 00 0f 19 0f 	movabs eax,ds:0x8f50f190f000005
    38d7:	f5 08 
    38d9:	00 00                	add    BYTE PTR [rax],al
    38db:	00 07                	add    BYTE PTR [rdi],al
    38dd:	33 05 00 00 0f 1a    	xor    eax,DWORD PTR [rip+0x1a0f0000]        # 1a0f38e3 <_end+0x1a0ed8cb>
    38e3:	0e                   	(bad)
    38e4:	dd 07                	fld    QWORD PTR [rdi]
    38e6:	00 00                	add    BYTE PTR [rax],al
    38e8:	08 07                	or     BYTE PTR [rdi],al
    38ea:	19 03                	sbb    DWORD PTR [rbx],eax
    38ec:	00 00                	add    BYTE PTR [rax],al
    38ee:	0f 1b 0e             	bndstx [rsi],bnd1
    38f1:	dd 07                	fld    QWORD PTR [rdi]
    38f3:	00 00                	add    BYTE PTR [rax],al
    38f5:	0c 07                	or     al,0x7
    38f7:	55                   	push   rbp
    38f8:	03 00                	add    eax,DWORD PTR [rax]
    38fa:	00 0f                	add    BYTE PTR [rdi],cl
    38fc:	1c 0e                	sbb    al,0xe
    38fe:	dd 07                	fld    QWORD PTR [rdi]
    3900:	00 00                	add    BYTE PTR [rax],al
    3902:	10 00                	adc    BYTE PTR [rax],al
    3904:	0a a8 08 00 00 0b    	or     ch,BYTE PTR [rax+0xb000008]
    390a:	ae                   	scas   al,BYTE PTR es:[rdi]
    390b:	03 00                	add    eax,DWORD PTR [rax]
    390d:	00 0f                	add    BYTE PTR [rdi],cl
    390f:	1d 03 b4 08 00       	sbb    eax,0x8b403
    3914:	00 0a                	add    BYTE PTR [rdx],cl
    3916:	fa                   	cli
    3917:	08 00                	or     BYTE PTR [rax],al
    3919:	00 18                	add    BYTE PTR [rax],bl
    391b:	c1 06 00             	rol    DWORD PTR [rsi],0x0
    391e:	00 10                	add    BYTE PTR [rax],dl
    3920:	06                   	(bad)
    3921:	6d                   	ins    DWORD PTR es:[rdi],dx
    3922:	00 00                	add    BYTE PTR [rax],al
    3924:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    3927:	e8 03 00 00 11       	call   1100392f <_end+0x10ffd917>
    392c:	34 0c                	xor    al,0xc
    392e:	66 00 00             	data16 add BYTE PTR [rax],al
    3931:	00 33                	add    BYTE PTR [rbx],dh
    3933:	09 00                	or     DWORD PTR [rax],eax
    3935:	00 01                	add    BYTE PTR [rcx],al
    3937:	66 00 00             	data16 add BYTE PTR [rax],al
    393a:	00 01                	add    BYTE PTR [rcx],al
    393c:	f5                   	cmc
    393d:	00 00                	add    BYTE PTR [rax],al
    393f:	00 23                	add    BYTE PTR [rbx],ah
    3941:	00 1d 9c 03 00 00    	add    BYTE PTR [rip+0x39c],bl        # 3ce3 <_fini+0x18f>
    3947:	af                   	scas   eax,DWORD PTR es:[rdi]
    3948:	02 44 09 00          	add    al,BYTE PTR [rcx+rcx*1+0x0]
    394c:	00 01                	add    BYTE PTR [rcx],al
    394e:	33 01                	xor    eax,DWORD PTR [rcx]
    3950:	00 00                	add    BYTE PTR [rax],al
    3952:	00 0c 7a             	add    BYTE PTR [rdx+rdi*2],cl
    3955:	09 00                	or     DWORD PTR [rax],eax
    3957:	00 01                	add    BYTE PTR [rcx],al
    3959:	6c                   	ins    BYTE PTR es:[rdi],dx
    395a:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    395d:	00 00                	add    BYTE PTR [rax],al
    395f:	5f                   	pop    rdi
    3960:	09 00                	or     DWORD PTR [rax],eax
    3962:	00 01                	add    BYTE PTR [rcx],al
    3964:	f5                   	cmc
    3965:	00 00                	add    BYTE PTR [rax],al
    3967:	00 01                	add    BYTE PTR [rcx],al
    3969:	f5                   	cmc
    396a:	00 00                	add    BYTE PTR [rax],al
    396c:	00 00                	add    BYTE PTR [rax],al
    396e:	08 8a 09 00 00 ab    	or     BYTE PTR [rdx-0x54fffff7],cl
    3974:	02 0e                	add    cl,BYTE PTR [rsi]
    3976:	33 01                	xor    eax,DWORD PTR [rcx]
    3978:	00 00                	add    BYTE PTR [rax],al
    397a:	7a 09                	jp     3985 <_Z27standartDeviationCollisionsP7HashMapf+0x165>
    397c:	00 00                	add    BYTE PTR [rax],al
    397e:	01 33                	add    DWORD PTR [rbx],esi
    3980:	01 00                	add    DWORD PTR [rax],eax
    3982:	00 01                	add    BYTE PTR [rcx],al
    3984:	2e 00 00             	cs add BYTE PTR [rax],al
    3987:	00 00                	add    BYTE PTR [rax],al
    3989:	3b 76 05             	cmp    esi,DWORD PTR [rsi+0x5]
    398c:	00 00                	add    BYTE PTR [rax],al
    398e:	12 45 0d             	adc    al,BYTE PTR [rbp+0xd]
    3991:	9b                   	fwait
    3992:	09 00                	or     DWORD PTR [rax],eax
    3994:	00 01                	add    BYTE PTR [rcx],al
    3996:	f5                   	cmc
    3997:	00 00                	add    BYTE PTR [rax],al
    3999:	00 01                	add    BYTE PTR [rcx],al
    399b:	f5                   	cmc
    399c:	00 00                	add    BYTE PTR [rax],al
    399e:	00 01                	add    BYTE PTR [rcx],al
    39a0:	12 01                	adc    al,BYTE PTR [rcx]
    39a2:	00 00                	add    BYTE PTR [rax],al
    39a4:	01 f5                	add    ebp,esi
    39a6:	00 00                	add    BYTE PTR [rax],al
    39a8:	00 00                	add    BYTE PTR [rax],al
    39aa:	08 5a 06             	or     BYTE PTR [rdx+0x6],bl
    39ad:	00 00                	add    BYTE PTR [rax],al
    39af:	a3 02 0e 33 01 00 00 	movabs ds:0x9b6000001330e02,eax
    39b6:	b6 09 
    39b8:	00 00                	add    BYTE PTR [rax],al
    39ba:	01 2e                	add    DWORD PTR [rsi],ebp
    39bc:	00 00                	add    BYTE PTR [rax],al
    39be:	00 01                	add    BYTE PTR [rcx],al
    39c0:	2e 00 00             	cs add BYTE PTR [rax],al
    39c3:	00 00                	add    BYTE PTR [rax],al
    39c5:	24 d0                	and    al,0xd0
    39c7:	04 00                	add    al,0x0
    39c9:	00 96 29 03 00 00    	add    BYTE PTR [rsi+0x329],dl
    39cf:	50                   	push   rax
    39d0:	22 00                	and    al,BYTE PTR [rax]
    39d2:	00 00                	add    BYTE PTR [rax],al
    39d4:	00 00                	add    BYTE PTR [rax],al
    39d6:	00 23                	add    BYTE PTR [rbx],ah
    39d8:	02 00                	add    al,BYTE PTR [rax]
    39da:	00 00                	add    BYTE PTR [rax],al
    39dc:	00 00                	add    BYTE PTR [rax],al
    39de:	00 01                	add    BYTE PTR [rcx],al
    39e0:	9c                   	pushf
    39e1:	00 10                	add    BYTE PTR [rax],dl
    39e3:	00 00                	add    BYTE PTR [rax],al
    39e5:	11 7b 21             	adc    DWORD PTR [rbx+0x21],edi
    39e8:	00 00                	add    BYTE PTR [rax],al
    39ea:	96                   	xchg   esi,eax
    39eb:	17                   	(bad)
    39ec:	06                   	(bad)
    39ed:	09 00                	or     DWORD PTR [rax],eax
    39ef:	00 84 13 00 00 7a 13 	add    BYTE PTR [rbx+rdx*1+0x137a0000],al
    39f6:	00 00                	add    BYTE PTR [rax],al
    39f8:	19 b3 03 00 00 10    	sbb    DWORD PTR [rbx+0x10000003],esi
    39fe:	10 00                	adc    BYTE PTR [rax],al
    3a00:	00 09                	add    BYTE PTR [rcx],cl
    3a02:	03 cd                	add    ecx,ebp
    3a04:	40 00 00             	rex add BYTE PTR [rax],al
    3a07:	00 00                	add    BYTE PTR [rax],al
    3a09:	00 00                	add    BYTE PTR [rax],al
    3a0b:	13 b9 22 00 00 00    	adc    edi,DWORD PTR [rcx+0x22]
    3a11:	00 00                	add    BYTE PTR [rax],al
    3a13:	00 33                	add    BYTE PTR [rbx],dh
    3a15:	00 00                	add    BYTE PTR [rax],al
    3a17:	00 00                	add    BYTE PTR [rax],al
    3a19:	00 00                	add    BYTE PTR [rax],al
    3a1b:	00 70 0a             	add    BYTE PTR [rax+0xa],dh
    3a1e:	00 00                	add    BYTE PTR [rax],al
    3a20:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3a23:	9d                   	popf
    3a24:	0e                   	(bad)
    3a25:	66 00 00             	data16 add BYTE PTR [rax],al
    3a28:	00 b2 13 00 00 ae    	add    BYTE PTR [rdx-0x51ffffed],dh
    3a2e:	13 00                	adc    eax,DWORD PTR [rax]
    3a30:	00 25 68 15 00 00    	add    BYTE PTR [rip+0x1568],ah        # 4f9e <__FRAME_END__+0x176>
    3a36:	d0 22                	shl    BYTE PTR [rdx],1
    3a38:	00 00                	add    BYTE PTR [rax],al
    3a3a:	00 00                	add    BYTE PTR [rax],al
    3a3c:	00 00                	add    BYTE PTR [rax],al
    3a3e:	01 d0                	add    eax,edx
    3a40:	22 00                	and    al,BYTE PTR [rax]
    3a42:	00 00                	add    BYTE PTR [rax],al
    3a44:	00 00                	add    BYTE PTR [rax],al
    3a46:	00 12                	add    BYTE PTR [rdx],dl
    3a48:	00 00                	add    BYTE PTR [rax],al
    3a4a:	00 00                	add    BYTE PTR [rax],al
    3a4c:	00 00                	add    BYTE PTR [rax],al
    3a4e:	00 9e 0f 04 77 15    	add    BYTE PTR [rsi+0x1577040f],bl
    3a54:	00 00                	add    BYTE PTR [rax],al
    3a56:	c4                   	(bad)
    3a57:	13 00                	adc    eax,DWORD PTR [rax]
    3a59:	00 c2                	add    dl,al
    3a5b:	13 00                	adc    eax,DWORD PTR [rax]
    3a5d:	00 05 e2 22 00 00    	add    BYTE PTR [rip+0x22e2],al        # 5d45 <_DYNAMIC+0x65>
    3a63:	00 00                	add    BYTE PTR [rax],al
    3a65:	00 00                	add    BYTE PTR [rax],al
    3a67:	17                   	(bad)
    3a68:	09 00                	or     DWORD PTR [rax],eax
    3a6a:	00 03                	add    BYTE PTR [rbx],al
    3a6c:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3a6f:	32 03                	xor    al,BYTE PTR [rbx]
    3a71:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3a75:	00 03                	add    BYTE PTR [rbx],al
    3a77:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    3a7a:	7c 00                	jl     3a7c <_Z27standartDeviationCollisionsP7HashMapf+0x25c>
    3a7c:	00 00                	add    BYTE PTR [rax],al
    3a7e:	00 13                	add    BYTE PTR [rbx],dl
    3a80:	09 23                	or     DWORD PTR [rbx],esp
    3a82:	00 00                	add    BYTE PTR [rax],al
    3a84:	00 00                	add    BYTE PTR [rax],al
    3a86:	00 00                	add    BYTE PTR [rax],al
    3a88:	3c 00                	cmp    al,0x0
    3a8a:	00 00                	add    BYTE PTR [rax],al
    3a8c:	00 00                	add    BYTE PTR [rax],al
    3a8e:	00 00                	add    BYTE PTR [rax],al
    3a90:	d2 0a                	ror    BYTE PTR [rdx],cl
    3a92:	00 00                	add    BYTE PTR [rax],al
    3a94:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3a97:	a2 0e 66 00 00 00 dd 	movabs ds:0x13dd000000660e,al
    3a9e:	13 00 
    3aa0:	00 d5                	add    ch,dl
    3aa2:	13 00                	adc    eax,DWORD PTR [rax]
    3aa4:	00 14 68             	add    BYTE PTR [rax+rbp*2],dl
    3aa7:	15 00 00 20 23       	adc    eax,0x23200000
    3aac:	00 00                	add    BYTE PTR [rax],al
    3aae:	00 00                	add    BYTE PTR [rax],al
    3ab0:	00 00                	add    BYTE PTR [rax],al
    3ab2:	01 3f                	add    DWORD PTR [rdi],edi
    3ab4:	02 00                	add    al,BYTE PTR [rax]
    3ab6:	00 a3 0f 04 77 15    	add    BYTE PTR [rbx+0x1577040f],ah
    3abc:	00 00                	add    BYTE PTR [rax],al
    3abe:	ff 13                	call   QWORD PTR [rbx]
    3ac0:	00 00                	add    BYTE PTR [rax],al
    3ac2:	fd                   	std
    3ac3:	13 00                	adc    eax,DWORD PTR [rax]
    3ac5:	00 05 3f 23 00 00    	add    BYTE PTR [rip+0x233f],al        # 5e0a <_DYNAMIC+0x12a>
    3acb:	00 00                	add    BYTE PTR [rax],al
    3acd:	00 00                	add    BYTE PTR [rax],al
    3acf:	17                   	(bad)
    3ad0:	09 00                	or     DWORD PTR [rax],eax
    3ad2:	00 03                	add    BYTE PTR [rbx],al
    3ad4:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3ad7:	32 03                	xor    al,BYTE PTR [rbx]
    3ad9:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3add:	00 00                	add    BYTE PTR [rax],al
    3adf:	00 00                	add    BYTE PTR [rax],al
    3ae1:	13 62 23             	adc    esp,DWORD PTR [rdx+0x23]
    3ae4:	00 00                	add    BYTE PTR [rax],al
    3ae6:	00 00                	add    BYTE PTR [rax],al
    3ae8:	00 00                	add    BYTE PTR [rax],al
    3aea:	3c 00                	cmp    al,0x0
    3aec:	00 00                	add    BYTE PTR [rax],al
    3aee:	00 00                	add    BYTE PTR [rax],al
    3af0:	00 00                	add    BYTE PTR [rax],al
    3af2:	34 0b                	xor    al,0xb
    3af4:	00 00                	add    BYTE PTR [rax],al
    3af6:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3af9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3afa:	0e                   	(bad)
    3afb:	66 00 00             	data16 add BYTE PTR [rax],al
    3afe:	00 18                	add    BYTE PTR [rax],bl
    3b00:	14 00                	adc    al,0x0
    3b02:	00 10                	add    BYTE PTR [rax],dl
    3b04:	14 00                	adc    al,0x0
    3b06:	00 14 68             	add    BYTE PTR [rax+rbp*2],dl
    3b09:	15 00 00 78 23       	adc    eax,0x23780000
    3b0e:	00 00                	add    BYTE PTR [rax],al
    3b10:	00 00                	add    BYTE PTR [rax],al
    3b12:	00 00                	add    BYTE PTR [rax],al
    3b14:	01 4f 02             	add    DWORD PTR [rdi+0x2],ecx
    3b17:	00 00                	add    BYTE PTR [rax],al
    3b19:	a8 0f                	test   al,0xf
    3b1b:	04 77                	add    al,0x77
    3b1d:	15 00 00 3a 14       	adc    eax,0x143a0000
    3b22:	00 00                	add    BYTE PTR [rax],al
    3b24:	38 14 00             	cmp    BYTE PTR [rax+rax*1],dl
    3b27:	00 05 98 23 00 00    	add    BYTE PTR [rip+0x2398],al        # 5ec5 <_DYNAMIC+0x1e5>
    3b2d:	00 00                	add    BYTE PTR [rax],al
    3b2f:	00 00                	add    BYTE PTR [rax],al
    3b31:	17                   	(bad)
    3b32:	09 00                	or     DWORD PTR [rax],eax
    3b34:	00 03                	add    BYTE PTR [rbx],al
    3b36:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3b39:	32 03                	xor    al,BYTE PTR [rbx]
    3b3b:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3b3f:	00 00                	add    BYTE PTR [rax],al
    3b41:	00 00                	add    BYTE PTR [rax],al
    3b43:	13 bb 23 00 00 00    	adc    edi,DWORD PTR [rbx+0x23]
    3b49:	00 00                	add    BYTE PTR [rax],al
    3b4b:	00 3b                	add    BYTE PTR [rbx],bh
    3b4d:	00 00                	add    BYTE PTR [rax],al
    3b4f:	00 00                	add    BYTE PTR [rax],al
    3b51:	00 00                	add    BYTE PTR [rax],al
    3b53:	00 96 0b 00 00 0f    	add    BYTE PTR [rsi+0xf00000b],dl
    3b59:	69 00 ac 0e 66 00    	imul   eax,DWORD PTR [rax],0x660eac
    3b5f:	00 00                	add    BYTE PTR [rax],al
    3b61:	53                   	push   rbx
    3b62:	14 00                	adc    al,0x0
    3b64:	00 4b 14             	add    BYTE PTR [rbx+0x14],cl
    3b67:	00 00                	add    BYTE PTR [rax],al
    3b69:	14 68                	adc    al,0x68
    3b6b:	15 00 00 d0 23       	adc    eax,0x23d00000
    3b70:	00 00                	add    BYTE PTR [rax],al
    3b72:	00 00                	add    BYTE PTR [rax],al
    3b74:	00 00                	add    BYTE PTR [rax],al
    3b76:	01 5f 02             	add    DWORD PTR [rdi+0x2],ebx
    3b79:	00 00                	add    BYTE PTR [rax],al
    3b7b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3b7c:	0f 04                	(bad)
    3b7e:	77 15                	ja     3b95 <_fini+0x41>
    3b80:	00 00                	add    BYTE PTR [rax],al
    3b82:	75 14                	jne    3b98 <_fini+0x44>
    3b84:	00 00                	add    BYTE PTR [rax],al
    3b86:	73 14                	jae    3b9c <_fini+0x48>
    3b88:	00 00                	add    BYTE PTR [rax],al
    3b8a:	05 f0 23 00 00       	add    eax,0x23f0
    3b8f:	00 00                	add    BYTE PTR [rax],al
    3b91:	00 00                	add    BYTE PTR [rax],al
    3b93:	17                   	(bad)
    3b94:	09 00                	or     DWORD PTR [rax],eax
    3b96:	00 03                	add    BYTE PTR [rbx],al
    3b98:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3b9b:	32 03                	xor    al,BYTE PTR [rbx]
    3b9d:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3ba1:	00 00                	add    BYTE PTR [rax],al
    3ba3:	00 00                	add    BYTE PTR [rax],al
    3ba5:	13 0c 24             	adc    ecx,DWORD PTR [rsp]
    3ba8:	00 00                	add    BYTE PTR [rax],al
    3baa:	00 00                	add    BYTE PTR [rax],al
    3bac:	00 00                	add    BYTE PTR [rax],al
    3bae:	3a 00                	cmp    al,BYTE PTR [rax]
    3bb0:	00 00                	add    BYTE PTR [rax],al
    3bb2:	00 00                	add    BYTE PTR [rax],al
    3bb4:	00 00                	add    BYTE PTR [rax],al
    3bb6:	f8                   	clc
    3bb7:	0b 00                	or     eax,DWORD PTR [rax]
    3bb9:	00 0f                	add    BYTE PTR [rdi],cl
    3bbb:	69 00 b1 0e 66 00    	imul   eax,DWORD PTR [rax],0x660eb1
    3bc1:	00 00                	add    BYTE PTR [rax],al
    3bc3:	8e 14 00             	mov    ss,WORD PTR [rax+rax*1]
    3bc6:	00 86 14 00 00 14    	add    BYTE PTR [rsi+0x14000014],al
    3bcc:	68 15 00 00 20       	push   0x20000015
    3bd1:	24 00                	and    al,0x0
    3bd3:	00 00                	add    BYTE PTR [rax],al
    3bd5:	00 00                	add    BYTE PTR [rax],al
    3bd7:	00 01                	add    BYTE PTR [rcx],al
    3bd9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3bda:	02 00                	add    al,BYTE PTR [rax]
    3bdc:	00 b2 0f 04 77 15    	add    BYTE PTR [rdx+0x1577040f],dh
    3be2:	00 00                	add    BYTE PTR [rax],al
    3be4:	b0 14                	mov    al,0x14
    3be6:	00 00                	add    BYTE PTR [rax],al
    3be8:	ae                   	scas   al,BYTE PTR es:[rdi]
    3be9:	14 00                	adc    al,0x0
    3beb:	00 05 41 24 00 00    	add    BYTE PTR [rip+0x2441],al        # 6032 <_end+0x1a>
    3bf1:	00 00                	add    BYTE PTR [rax],al
    3bf3:	00 00                	add    BYTE PTR [rax],al
    3bf5:	17                   	(bad)
    3bf6:	09 00                	or     DWORD PTR [rax],eax
    3bf8:	00 03                	add    BYTE PTR [rbx],al
    3bfa:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3bfd:	32 03                	xor    al,BYTE PTR [rbx]
    3bff:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    3c03:	00 00                	add    BYTE PTR [rax],al
    3c05:	00 00                	add    BYTE PTR [rax],al
    3c07:	12 68 15             	adc    ch,BYTE PTR [rax+0x15]
    3c0a:	00 00                	add    BYTE PTR [rax],al
    3c0c:	67 22 00             	and    al,BYTE PTR [eax]
    3c0f:	00 00                	add    BYTE PTR [rax],al
    3c11:	00 00                	add    BYTE PTR [rax],al
    3c13:	00 01                	add    BYTE PTR [rcx],al
    3c15:	34 02                	xor    al,0x2
    3c17:	00 00                	add    BYTE PTR [rax],al
    3c19:	99                   	cdq
    3c1a:	0b 3e                	or     edi,DWORD PTR [rsi]
    3c1c:	0c 00                	or     al,0x0
    3c1e:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3c21:	15 00 00 c3 14       	adc    eax,0x14c30000
    3c26:	00 00                	add    BYTE PTR [rax],al
    3c28:	c1 14 00 00          	rcl    DWORD PTR [rax+rax*1],0x0
    3c2c:	05 7a 22 00 00       	add    eax,0x227a
    3c31:	00 00                	add    BYTE PTR [rax],al
    3c33:	00 00                	add    BYTE PTR [rax],al
    3c35:	17                   	(bad)
    3c36:	09 00                	or     DWORD PTR [rax],eax
    3c38:	00 03                	add    BYTE PTR [rbx],al
    3c3a:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3c3d:	32 03                	xor    al,BYTE PTR [rbx]
    3c3f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3c43:	e4 40                	in     al,0x40
	...
    3c4d:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3c50:	00 00                	add    BYTE PTR [rax],al
    3c52:	7a 22                	jp     3c76 <_fini+0x122>
    3c54:	00 00                	add    BYTE PTR [rax],al
    3c56:	00 00                	add    BYTE PTR [rax],al
    3c58:	00 00                	add    BYTE PTR [rax],al
    3c5a:	02 7a 22             	add    bh,BYTE PTR [rdx+0x22]
    3c5d:	00 00                	add    BYTE PTR [rax],al
    3c5f:	00 00                	add    BYTE PTR [rax],al
    3c61:	00 00                	add    BYTE PTR [rax],al
    3c63:	16                   	(bad)
    3c64:	00 00                	add    BYTE PTR [rax],al
    3c66:	00 00                	add    BYTE PTR [rax],al
    3c68:	00 00                	add    BYTE PTR [rax],al
    3c6a:	00 9a 0b 90 0c 00    	add    BYTE PTR [rdx+0xc900b],bl
    3c70:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3c73:	15 00 00 d6 14       	adc    eax,0x14d60000
    3c78:	00 00                	add    BYTE PTR [rax],al
    3c7a:	d4                   	(bad)
    3c7b:	14 00                	adc    al,0x0
    3c7d:	00 05 90 22 00 00    	add    BYTE PTR [rip+0x2290],al        # 5f13 <_GLOBAL_OFFSET_TABLE_+0x23>
    3c83:	00 00                	add    BYTE PTR [rax],al
    3c85:	00 00                	add    BYTE PTR [rax],al
    3c87:	17                   	(bad)
    3c88:	09 00                	or     DWORD PTR [rax],eax
    3c8a:	00 03                	add    BYTE PTR [rbx],al
    3c8c:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3c8f:	32 03                	xor    al,BYTE PTR [rbx]
    3c91:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3c95:	f2 40 00 00          	repnz rex add BYTE PTR [rax],al
    3c99:	00 00                	add    BYTE PTR [rax],al
    3c9b:	00 00                	add    BYTE PTR [rax],al
    3c9d:	00 00                	add    BYTE PTR [rax],al
    3c9f:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3ca2:	00 00                	add    BYTE PTR [rax],al
    3ca4:	90                   	nop
    3ca5:	22 00                	and    al,BYTE PTR [rax]
    3ca7:	00 00                	add    BYTE PTR [rax],al
    3ca9:	00 00                	add    BYTE PTR [rax],al
    3cab:	00 02                	add    BYTE PTR [rdx],al
    3cad:	90                   	nop
    3cae:	22 00                	and    al,BYTE PTR [rax]
    3cb0:	00 00                	add    BYTE PTR [rax],al
    3cb2:	00 00                	add    BYTE PTR [rax],al
    3cb4:	00 16                	add    BYTE PTR [rsi],dl
    3cb6:	00 00                	add    BYTE PTR [rax],al
    3cb8:	00 00                	add    BYTE PTR [rax],al
    3cba:	00 00                	add    BYTE PTR [rax],al
    3cbc:	00 9b 0b e2 0c 00    	add    BYTE PTR [rbx+0xce20b],bl
    3cc2:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3cc5:	15 00 00 e9 14       	adc    eax,0x14e90000
    3cca:	00 00                	add    BYTE PTR [rax],al
    3ccc:	e7 14                	out    0x14,eax
    3cce:	00 00                	add    BYTE PTR [rax],al
    3cd0:	05 a6 22 00 00       	add    eax,0x22a6
    3cd5:	00 00                	add    BYTE PTR [rax],al
    3cd7:	00 00                	add    BYTE PTR [rax],al
    3cd9:	17                   	(bad)
    3cda:	09 00                	or     DWORD PTR [rax],eax
    3cdc:	00 03                	add    BYTE PTR [rbx],al
    3cde:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3ce1:	32 03                	xor    al,BYTE PTR [rbx]
    3ce3:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3ce7:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    3cea:	00 00                	add    BYTE PTR [rax],al
    3cec:	00 00                	add    BYTE PTR [rax],al
    3cee:	00 00                	add    BYTE PTR [rax],al
    3cf0:	00 09                	add    BYTE PTR [rcx],cl
    3cf2:	68 15 00 00 a6       	push   0xffffffffa6000015
    3cf7:	22 00                	and    al,BYTE PTR [rax]
    3cf9:	00 00                	add    BYTE PTR [rax],al
    3cfb:	00 00                	add    BYTE PTR [rax],al
    3cfd:	00 02                	add    BYTE PTR [rdx],al
    3cff:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3d00:	22 00                	and    al,BYTE PTR [rax]
    3d02:	00 00                	add    BYTE PTR [rax],al
    3d04:	00 00                	add    BYTE PTR [rax],al
    3d06:	00 13                	add    BYTE PTR [rbx],dl
    3d08:	00 00                	add    BYTE PTR [rax],al
    3d0a:	00 00                	add    BYTE PTR [rax],al
    3d0c:	00 00                	add    BYTE PTR [rax],al
    3d0e:	00 9c 0b 34 0d 00 00 	add    BYTE PTR [rbx+rcx*1+0xd34],bl
    3d15:	04 77                	add    al,0x77
    3d17:	15 00 00 fc 14       	adc    eax,0x14fc0000
    3d1c:	00 00                	add    BYTE PTR [rax],al
    3d1e:	fa                   	cli
    3d1f:	14 00                	adc    al,0x0
    3d21:	00 05 b9 22 00 00    	add    BYTE PTR [rip+0x22b9],al        # 5fe0 <__libc_start_main@GLIBC_2.34>
    3d27:	00 00                	add    BYTE PTR [rax],al
    3d29:	00 00                	add    BYTE PTR [rax],al
    3d2b:	17                   	(bad)
    3d2c:	09 00                	or     DWORD PTR [rax],eax
    3d2e:	00 03                	add    BYTE PTR [rbx],al
    3d30:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3d33:	32 03                	xor    al,BYTE PTR [rbx]
    3d35:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3d39:	0e                   	(bad)
    3d3a:	41 00 00             	add    BYTE PTR [r8],al
    3d3d:	00 00                	add    BYTE PTR [rax],al
    3d3f:	00 00                	add    BYTE PTR [rax],al
    3d41:	00 00                	add    BYTE PTR [rax],al
    3d43:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3d46:	00 00                	add    BYTE PTR [rax],al
    3d48:	ec                   	in     al,dx
    3d49:	22 00                	and    al,BYTE PTR [rax]
    3d4b:	00 00                	add    BYTE PTR [rax],al
    3d4d:	00 00                	add    BYTE PTR [rax],al
    3d4f:	00 02                	add    BYTE PTR [rdx],al
    3d51:	ec                   	in     al,dx
    3d52:	22 00                	and    al,BYTE PTR [rax]
    3d54:	00 00                	add    BYTE PTR [rax],al
    3d56:	00 00                	add    BYTE PTR [rax],al
    3d58:	00 0a                	add    BYTE PTR [rdx],cl
    3d5a:	00 00                	add    BYTE PTR [rax],al
    3d5c:	00 00                	add    BYTE PTR [rax],al
    3d5e:	00 00                	add    BYTE PTR [rax],al
    3d60:	00 a0 0b 79 0d 00    	add    BYTE PTR [rax+0xd790b],ah
    3d66:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3d69:	15 00 00 0f 15       	adc    eax,0x150f0000
    3d6e:	00 00                	add    BYTE PTR [rax],al
    3d70:	0d 15 00 00 05       	or     eax,0x5000015
    3d75:	f6 22                	mul    BYTE PTR [rdx]
    3d77:	00 00                	add    BYTE PTR [rax],al
    3d79:	00 00                	add    BYTE PTR [rax],al
    3d7b:	00 00                	add    BYTE PTR [rax],al
    3d7d:	d0 16                	rcl    BYTE PTR [rsi],1
    3d7f:	00 00                	add    BYTE PTR [rax],al
    3d81:	03 01                	add    eax,DWORD PTR [rcx]
    3d83:	55                   	push   rbp
    3d84:	01 3a                	add    DWORD PTR [rdx],edi
    3d86:	00 00                	add    BYTE PTR [rax],al
    3d88:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3d8b:	00 00                	add    BYTE PTR [rax],al
    3d8d:	f6 22                	mul    BYTE PTR [rdx]
    3d8f:	00 00                	add    BYTE PTR [rax],al
    3d91:	00 00                	add    BYTE PTR [rax],al
    3d93:	00 00                	add    BYTE PTR [rax],al
    3d95:	02 f6                	add    dh,dh
    3d97:	22 00                	and    al,BYTE PTR [rax]
    3d99:	00 00                	add    BYTE PTR [rax],al
    3d9b:	00 00                	add    BYTE PTR [rax],al
    3d9d:	00 13                	add    BYTE PTR [rbx],dl
    3d9f:	00 00                	add    BYTE PTR [rax],al
    3da1:	00 00                	add    BYTE PTR [rax],al
    3da3:	00 00                	add    BYTE PTR [rax],al
    3da5:	00 a1 0b cb 0d 00    	add    BYTE PTR [rcx+0xdcb0b],ah
    3dab:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3dae:	15 00 00 1e 15       	adc    eax,0x151e0000
    3db3:	00 00                	add    BYTE PTR [rax],al
    3db5:	1c 15                	sbb    al,0x15
    3db7:	00 00                	add    BYTE PTR [rax],al
    3db9:	05 09 23 00 00       	add    eax,0x2309
    3dbe:	00 00                	add    BYTE PTR [rax],al
    3dc0:	00 00                	add    BYTE PTR [rax],al
    3dc2:	17                   	(bad)
    3dc3:	09 00                	or     DWORD PTR [rax],eax
    3dc5:	00 03                	add    BYTE PTR [rbx],al
    3dc7:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3dca:	32 03                	xor    al,BYTE PTR [rbx]
    3dcc:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3dd0:	1d 41 00 00 00       	sbb    eax,0x41
    3dd5:	00 00                	add    BYTE PTR [rax],al
    3dd7:	00 00                	add    BYTE PTR [rax],al
    3dd9:	00 09                	add    BYTE PTR [rcx],cl
    3ddb:	68 15 00 00 45       	push   0x45000015
    3de0:	23 00                	and    eax,DWORD PTR [rax]
    3de2:	00 00                	add    BYTE PTR [rax],al
    3de4:	00 00                	add    BYTE PTR [rax],al
    3de6:	00 02                	add    BYTE PTR [rdx],al
    3de8:	45 23 00             	and    r8d,DWORD PTR [r8]
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 0a                	add    BYTE PTR [rdx],cl
    3df1:	00 00                	add    BYTE PTR [rax],al
    3df3:	00 00                	add    BYTE PTR [rax],al
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 a5 0b 10 0e 00    	add    BYTE PTR [rbp+0xe100b],ah
    3dfd:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3e00:	15 00 00 31 15       	adc    eax,0x15310000
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	2f                   	(bad)
    3e08:	15 00 00 05 4f       	adc    eax,0x4f050000
    3e0d:	23 00                	and    eax,DWORD PTR [rax]
    3e0f:	00 00                	add    BYTE PTR [rax],al
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 d0                	add    al,dl
    3e15:	16                   	(bad)
    3e16:	00 00                	add    BYTE PTR [rax],al
    3e18:	03 01                	add    eax,DWORD PTR [rcx]
    3e1a:	55                   	push   rbp
    3e1b:	01 3a                	add    DWORD PTR [rdx],edi
    3e1d:	00 00                	add    BYTE PTR [rax],al
    3e1f:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	4f 23 00             	rex.WRXB and r8,QWORD PTR [r8]
    3e27:	00 00                	add    BYTE PTR [rax],al
    3e29:	00 00                	add    BYTE PTR [rax],al
    3e2b:	00 02                	add    BYTE PTR [rdx],al
    3e2d:	4f 23 00             	rex.WRXB and r8,QWORD PTR [r8]
    3e30:	00 00                	add    BYTE PTR [rax],al
    3e32:	00 00                	add    BYTE PTR [rax],al
    3e34:	00 13                	add    BYTE PTR [rbx],dl
    3e36:	00 00                	add    BYTE PTR [rax],al
    3e38:	00 00                	add    BYTE PTR [rax],al
    3e3a:	00 00                	add    BYTE PTR [rax],al
    3e3c:	00 a6 0b 62 0e 00    	add    BYTE PTR [rsi+0xe620b],ah
    3e42:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3e45:	15 00 00 40 15       	adc    eax,0x15400000
    3e4a:	00 00                	add    BYTE PTR [rax],al
    3e4c:	3e 15 00 00 05 62    	ds adc eax,0x62050000
    3e52:	23 00                	and    eax,DWORD PTR [rax]
    3e54:	00 00                	add    BYTE PTR [rax],al
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	00 17                	add    BYTE PTR [rdi],dl
    3e5a:	09 00                	or     DWORD PTR [rax],eax
    3e5c:	00 03                	add    BYTE PTR [rbx],al
    3e5e:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3e61:	32 03                	xor    al,BYTE PTR [rbx]
    3e63:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3e67:	28 41 00             	sub    BYTE PTR [rcx+0x0],al
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	00 09                	add    BYTE PTR [rcx],cl
    3e72:	68 15 00 00 9e       	push   0xffffffff9e000015
    3e77:	23 00                	and    eax,DWORD PTR [rax]
    3e79:	00 00                	add    BYTE PTR [rax],al
    3e7b:	00 00                	add    BYTE PTR [rax],al
    3e7d:	00 02                	add    BYTE PTR [rdx],al
    3e7f:	9e                   	sahf
    3e80:	23 00                	and    eax,DWORD PTR [rax]
    3e82:	00 00                	add    BYTE PTR [rax],al
    3e84:	00 00                	add    BYTE PTR [rax],al
    3e86:	00 0a                	add    BYTE PTR [rdx],cl
    3e88:	00 00                	add    BYTE PTR [rax],al
    3e8a:	00 00                	add    BYTE PTR [rax],al
    3e8c:	00 00                	add    BYTE PTR [rax],al
    3e8e:	00 aa 0b a7 0e 00    	add    BYTE PTR [rdx+0xea70b],ch
    3e94:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3e97:	15 00 00 53 15       	adc    eax,0x15530000
    3e9c:	00 00                	add    BYTE PTR [rax],al
    3e9e:	51                   	push   rcx
    3e9f:	15 00 00 05 a8       	adc    eax,0xa8050000
    3ea4:	23 00                	and    eax,DWORD PTR [rax]
    3ea6:	00 00                	add    BYTE PTR [rax],al
    3ea8:	00 00                	add    BYTE PTR [rax],al
    3eaa:	00 d0                	add    al,dl
    3eac:	16                   	(bad)
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	03 01                	add    eax,DWORD PTR [rcx]
    3eb1:	55                   	push   rbp
    3eb2:	01 3a                	add    DWORD PTR [rdx],edi
    3eb4:	00 00                	add    BYTE PTR [rax],al
    3eb6:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3eb9:	00 00                	add    BYTE PTR [rax],al
    3ebb:	a8 23                	test   al,0x23
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 00                	add    BYTE PTR [rax],al
    3ec1:	00 00                	add    BYTE PTR [rax],al
    3ec3:	02 a8 23 00 00 00    	add    ch,BYTE PTR [rax+0x23]
    3ec9:	00 00                	add    BYTE PTR [rax],al
    3ecb:	00 13                	add    BYTE PTR [rbx],dl
    3ecd:	00 00                	add    BYTE PTR [rax],al
    3ecf:	00 00                	add    BYTE PTR [rax],al
    3ed1:	00 00                	add    BYTE PTR [rax],al
    3ed3:	00 ab 0b f9 0e 00    	add    BYTE PTR [rbx+0xef90b],ch
    3ed9:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3edc:	15 00 00 62 15       	adc    eax,0x15620000
    3ee1:	00 00                	add    BYTE PTR [rax],al
    3ee3:	60                   	(bad)
    3ee4:	15 00 00 05 bb       	adc    eax,0xbb050000
    3ee9:	23 00                	and    eax,DWORD PTR [rax]
    3eeb:	00 00                	add    BYTE PTR [rax],al
    3eed:	00 00                	add    BYTE PTR [rax],al
    3eef:	00 17                	add    BYTE PTR [rdi],dl
    3ef1:	09 00                	or     DWORD PTR [rax],eax
    3ef3:	00 03                	add    BYTE PTR [rbx],al
    3ef5:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3ef8:	32 03                	xor    al,BYTE PTR [rbx]
    3efa:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3efe:	33 41 00             	xor    eax,DWORD PTR [rcx+0x0]
    3f01:	00 00                	add    BYTE PTR [rax],al
    3f03:	00 00                	add    BYTE PTR [rax],al
    3f05:	00 00                	add    BYTE PTR [rax],al
    3f07:	00 09                	add    BYTE PTR [rcx],cl
    3f09:	68 15 00 00 f6       	push   0xfffffffff6000015
    3f0e:	23 00                	and    eax,DWORD PTR [rax]
    3f10:	00 00                	add    BYTE PTR [rax],al
    3f12:	00 00                	add    BYTE PTR [rax],al
    3f14:	00 02                	add    BYTE PTR [rdx],al
    3f16:	f6 23                	mul    BYTE PTR [rbx]
    3f18:	00 00                	add    BYTE PTR [rax],al
    3f1a:	00 00                	add    BYTE PTR [rax],al
    3f1c:	00 00                	add    BYTE PTR [rax],al
    3f1e:	0a 00                	or     al,BYTE PTR [rax]
    3f20:	00 00                	add    BYTE PTR [rax],al
    3f22:	00 00                	add    BYTE PTR [rax],al
    3f24:	00 00                	add    BYTE PTR [rax],al
    3f26:	af                   	scas   eax,DWORD PTR es:[rdi]
    3f27:	0b 3e                	or     edi,DWORD PTR [rsi]
    3f29:	0f 00 00             	sldt   WORD PTR [rax]
    3f2c:	04 77                	add    al,0x77
    3f2e:	15 00 00 75 15       	adc    eax,0x15750000
    3f33:	00 00                	add    BYTE PTR [rax],al
    3f35:	73 15                	jae    3f4c <_fini+0x3f8>
    3f37:	00 00                	add    BYTE PTR [rax],al
    3f39:	05 00 24 00 00       	add    eax,0x2400
    3f3e:	00 00                	add    BYTE PTR [rax],al
    3f40:	00 00                	add    BYTE PTR [rax],al
    3f42:	d0 16                	rcl    BYTE PTR [rsi],1
    3f44:	00 00                	add    BYTE PTR [rax],al
    3f46:	03 01                	add    eax,DWORD PTR [rcx]
    3f48:	55                   	push   rbp
    3f49:	01 3a                	add    DWORD PTR [rdx],edi
    3f4b:	00 00                	add    BYTE PTR [rax],al
    3f4d:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3f50:	00 00                	add    BYTE PTR [rax],al
    3f52:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 00                	add    BYTE PTR [rax],al
    3f59:	00 02                	add    BYTE PTR [rdx],al
    3f5b:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    3f5e:	00 00                	add    BYTE PTR [rax],al
    3f60:	00 00                	add    BYTE PTR [rax],al
    3f62:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3f65:	00 00                	add    BYTE PTR [rax],al
    3f67:	00 00                	add    BYTE PTR [rax],al
    3f69:	00 00                	add    BYTE PTR [rax],al
    3f6b:	b0 0b                	mov    al,0xb
    3f6d:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    3f6f:	00 00                	add    BYTE PTR [rax],al
    3f71:	04 77                	add    al,0x77
    3f73:	15 00 00 84 15       	adc    eax,0x15840000
    3f78:	00 00                	add    BYTE PTR [rax],al
    3f7a:	82                   	(bad)
    3f7b:	15 00 00 05 0c       	adc    eax,0xc050000
    3f80:	24 00                	and    al,0x0
    3f82:	00 00                	add    BYTE PTR [rax],al
    3f84:	00 00                	add    BYTE PTR [rax],al
    3f86:	00 e3                	add    bl,ah
    3f88:	16                   	(bad)
    3f89:	00 00                	add    BYTE PTR [rax],al
    3f8b:	03 01                	add    eax,DWORD PTR [rcx]
    3f8d:	55                   	push   rbp
    3f8e:	09 03                	or     DWORD PTR [rbx],eax
    3f90:	3e 41 00 00          	ds add BYTE PTR [r8],al
    3f94:	00 00                	add    BYTE PTR [rax],al
    3f96:	00 00                	add    BYTE PTR [rax],al
    3f98:	00 00                	add    BYTE PTR [rax],al
    3f9a:	12 68 15             	adc    ch,BYTE PTR [rax+0x15]
    3f9d:	00 00                	add    BYTE PTR [rax],al
    3f9f:	46 24 00             	rex.RX and al,0x0
    3fa2:	00 00                	add    BYTE PTR [rax],al
    3fa4:	00 00                	add    BYTE PTR [rax],al
    3fa6:	00 02                	add    BYTE PTR [rdx],al
    3fa8:	7f 02                	jg     3fac <_fini+0x458>
    3faa:	00 00                	add    BYTE PTR [rax],al
    3fac:	b4 0b                	mov    ah,0xb
    3fae:	c4                   	(bad)
    3faf:	0f 00 00             	sldt   WORD PTR [rax]
    3fb2:	04 77                	add    al,0x77
    3fb4:	15 00 00 93 15       	adc    eax,0x15930000
    3fb9:	00 00                	add    BYTE PTR [rax],al
    3fbb:	91                   	xchg   ecx,eax
    3fbc:	15 00 00 3c 54       	adc    eax,0x543c0000
    3fc1:	24 00                	and    al,0x0
    3fc3:	00 00                	add    BYTE PTR [rax],al
    3fc5:	00 00                	add    BYTE PTR [rax],al
    3fc7:	00 d0                	add    al,dl
    3fc9:	16                   	(bad)
    3fca:	00 00                	add    BYTE PTR [rax],al
    3fcc:	03 01                	add    eax,DWORD PTR [rcx]
    3fce:	55                   	push   rbp
    3fcf:	01 3a                	add    DWORD PTR [rdx],edi
    3fd1:	00 00                	add    BYTE PTR [rax],al
    3fd3:	05 73 24 00 00       	add    eax,0x2473
    3fd8:	00 00                	add    BYTE PTR [rax],al
    3fda:	00 00                	add    BYTE PTR [rax],al
    3fdc:	7a 09                	jp     3fe7 <_fini+0x493>
    3fde:	00 00                	add    BYTE PTR [rax],al
    3fe0:	03 01                	add    eax,DWORD PTR [rcx]
    3fe2:	55                   	push   rbp
    3fe3:	09 03                	or     DWORD PTR [rbx],eax
    3fe5:	b3 40                	mov    bl,0x40
    3fe7:	00 00                	add    BYTE PTR [rax],al
    3fe9:	00 00                	add    BYTE PTR [rax],al
    3feb:	00 00                	add    BYTE PTR [rax],al
    3fed:	03 01                	add    eax,DWORD PTR [rcx]
    3fef:	54                   	push   rsp
    3ff0:	09 03                	or     DWORD PTR [rbx],eax
    3ff2:	98                   	cwde
    3ff3:	40 00 00             	rex add BYTE PTR [rax],al
    3ff6:	00 00                	add    BYTE PTR [rax],al
    3ff8:	00 00                	add    BYTE PTR [rax],al
    3ffa:	03 01                	add    eax,DWORD PTR [rcx]
    3ffc:	51                   	push   rcx
    3ffd:	02 08                	add    cl,BYTE PTR [rax]
    3fff:	97                   	xchg   edi,eax
    4000:	03 01                	add    eax,DWORD PTR [rcx]
    4002:	52                   	push   rdx
    4003:	09 03                	or     DWORD PTR [rbx],eax
    4005:	cd 40                	int    0x40
	...
    400f:	15 06 01 00 00       	adc    eax,0x106
    4014:	10 10                	adc    BYTE PTR [rax],dl
    4016:	00 00                	add    BYTE PTR [rax],al
    4018:	16                   	(bad)
    4019:	3a 00                	cmp    al,BYTE PTR [rax]
    401b:	00 00                	add    BYTE PTR [rax],al
    401d:	16                   	(bad)
    401e:	00 0e                	add    BYTE PTR [rsi],cl
    4020:	00 10                	add    BYTE PTR [rax],dl
    4022:	00 00                	add    BYTE PTR [rax],al
    4024:	24 63                	and    al,0x63
    4026:	04 00                	add    al,0x0
    4028:	00 8d a1 03 00 00    	add    BYTE PTR [rbp+0x3a1],cl
    402e:	10 22                	adc    BYTE PTR [rdx],ah
    4030:	00 00                	add    BYTE PTR [rax],al
    4032:	00 00                	add    BYTE PTR [rax],al
    4034:	00 00                	add    BYTE PTR [rax],al
    4036:	3e 00 00             	ds add BYTE PTR [rax],al
    4039:	00 00                	add    BYTE PTR [rax],al
    403b:	00 00                	add    BYTE PTR [rax],al
    403d:	00 01                	add    BYTE PTR [rcx],al
    403f:	9c                   	pushf
    4040:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4041:	10 00                	adc    BYTE PTR [rax],al
    4043:	00 11                	add    BYTE PTR [rcx],dl
    4045:	7b 21                	jnp    4068 <_IO_stdin_used+0x68>
    4047:	00 00                	add    BYTE PTR [rax],al
    4049:	8d 15 06 09 00 00    	lea    edx,[rip+0x906]        # 4955 <__GNU_EH_FRAME_HDR+0x265>
    404f:	aa                   	stos   BYTE PTR es:[rdi],al
    4050:	15 00 00 a0 15       	adc    eax,0x15a00000
    4055:	00 00                	add    BYTE PTR [rax],al
    4057:	19 b3 03 00 00 b4    	sbb    DWORD PTR [rbx-0x4bfffffd],esi
    405d:	10 00                	adc    BYTE PTR [rax],al
    405f:	00 09                	add    BYTE PTR [rcx],cl
    4061:	03 b8 40 00 00 00    	add    edi,DWORD PTR [rax+0x40]
    4067:	00 00                	add    BYTE PTR [rax],al
    4069:	00 3d 25 22 00 00    	add    BYTE PTR [rip+0x2225],bh        # 6294 <_end+0x27c>
    406f:	00 00                	add    BYTE PTR [rax],al
    4071:	00 00                	add    BYTE PTR [rax],al
    4073:	33 09                	xor    ecx,DWORD PTR [rcx]
    4075:	00 00                	add    BYTE PTR [rax],al
    4077:	05 4e 22 00 00       	add    eax,0x224e
    407c:	00 00                	add    BYTE PTR [rax],al
    407e:	00 00                	add    BYTE PTR [rax],al
    4080:	7a 09                	jp     408b <_IO_stdin_used+0x8b>
    4082:	00 00                	add    BYTE PTR [rax],al
    4084:	03 01                	add    eax,DWORD PTR [rcx]
    4086:	55                   	push   rbp
    4087:	09 03                	or     DWORD PTR [rbx],eax
    4089:	b3 40                	mov    bl,0x40
    408b:	00 00                	add    BYTE PTR [rax],al
    408d:	00 00                	add    BYTE PTR [rax],al
    408f:	00 00                	add    BYTE PTR [rax],al
    4091:	03 01                	add    eax,DWORD PTR [rcx]
    4093:	54                   	push   rsp
    4094:	09 03                	or     DWORD PTR [rbx],eax
    4096:	98                   	cwde
    4097:	40 00 00             	rex add BYTE PTR [rax],al
    409a:	00 00                	add    BYTE PTR [rax],al
    409c:	00 00                	add    BYTE PTR [rax],al
    409e:	03 01                	add    eax,DWORD PTR [rcx]
    40a0:	51                   	push   rcx
    40a1:	02 08                	add    cl,BYTE PTR [rax]
    40a3:	8e 03                	mov    es,WORD PTR [rbx]
    40a5:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    40a8:	03 b8 40 00 00 00    	add    edi,DWORD PTR [rax+0x40]
    40ae:	00 00                	add    BYTE PTR [rax],al
    40b0:	00 00                	add    BYTE PTR [rax],al
    40b2:	00 15 06 01 00 00    	add    BYTE PTR [rip+0x106],dl        # 41be <_IO_stdin_used+0x1be>
    40b8:	b4 10                	mov    ah,0x10
    40ba:	00 00                	add    BYTE PTR [rax],al
    40bc:	16                   	(bad)
    40bd:	3a 00                	cmp    al,BYTE PTR [rax]
    40bf:	00 00                	add    BYTE PTR [rax],al
    40c1:	14 00                	adc    al,0x0
    40c3:	0e                   	(bad)
    40c4:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    40c5:	10 00                	adc    BYTE PTR [rax],al
    40c7:	00 3e                	add    BYTE PTR [rsi],bh
    40c9:	3f                   	(bad)
    40ca:	09 00                	or     DWORD PTR [rax],eax
    40cc:	00 01                	add    BYTE PTR [rcx],al
    40ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40cf:	0c 66                	or     al,0x66
    40d1:	00 00                	add    BYTE PTR [rax],al
    40d3:	00 01                	add    BYTE PTR [rcx],al
    40d5:	e3 10                	jrcxz  40e7 <_IO_stdin_used+0xe7>
    40d7:	00 00                	add    BYTE PTR [rax],al
    40d9:	0d 74 09 00 00       	or     eax,0x974
    40de:	01 6f 21             	add    DWORD PTR [rdi+0x21],ebp
    40e1:	e3 10                	jrcxz  40f3 <_IO_stdin_used+0xf3>
    40e3:	00 00                	add    BYTE PTR [rax],al
    40e5:	0d 84 09 00 00       	or     eax,0x984
    40ea:	01 6f 30             	add    DWORD PTR [rdi+0x30],ebp
    40ed:	e3 10                	jrcxz  40ff <_IO_stdin_used+0xff>
    40ef:	00 00                	add    BYTE PTR [rax],al
    40f1:	00 0a                	add    BYTE PTR [rdx],cl
    40f3:	5b                   	pop    rbx
    40f4:	08 00                	or     BYTE PTR [rax],al
    40f6:	00 3f                	add    BYTE PTR [rdi],bh
    40f8:	4c 09 00             	or     QWORD PTR [rax],r8
    40fb:	00 01                	add    BYTE PTR [rcx],al
    40fd:	61                   	(bad)
    40fe:	0d 01 0d 11 00       	or     eax,0x110d01
    4103:	00 0d 7b 21 00 00    	add    BYTE PTR [rip+0x217b],cl        # 6284 <_end+0x26c>
    4109:	01 61 1c             	add    DWORD PTR [rcx+0x1c],esp
    410c:	06                   	(bad)
    410d:	09 00                	or     DWORD PTR [rax],eax
    410f:	00 40 26             	add    BYTE PTR [rax+0x26],al
    4112:	69 00 65 13 dd 07    	imul   eax,DWORD PTR [rax],0x7dd1365
    4118:	00 00                	add    BYTE PTR [rax],al
    411a:	00 00                	add    BYTE PTR [rax],al
    411c:	41 3c 05             	rex.B cmp al,0x5
    411f:	00 00                	add    BYTE PTR [rax],al
    4121:	01 53 05             	add    DWORD PTR [rbx+0x5],edx
    4124:	db 04 00             	fild   DWORD PTR [rax+rax*1]
    4127:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    412a:	00 00                	add    BYTE PTR [rax],al
    412c:	01 4f 11             	add    DWORD PTR [rdi+0x11],ecx
    412f:	00 00                	add    BYTE PTR [rax],al
    4131:	0d 7b 21 00 00       	or     eax,0x217b
    4136:	01 53 19             	add    DWORD PTR [rbx+0x19],edx
    4139:	06                   	(bad)
    413a:	09 00                	or     DWORD PTR [rax],eax
    413c:	00 0d d1 14 00 00    	add    BYTE PTR [rip+0x14d1],cl        # 5613 <__FRAME_END__+0x7eb>
    4142:	01 53 26             	add    DWORD PTR [rbx+0x26],edx
    4145:	5b                   	pop    rbx
    4146:	08 00                	or     BYTE PTR [rax],al
    4148:	00 42 b3             	add    BYTE PTR [rdx-0x4d],al
    414b:	03 00                	add    eax,DWORD PTR [rax]
    414d:	00 5f 11             	add    BYTE PTR [rdi+0x11],bl
    4150:	00 00                	add    BYTE PTR [rax],al
    4152:	26 69 6e 78 00 56 0e 	es imul ebp,DWORD PTR [rsi+0x78],0xdd0e5600
    4159:	dd 
    415a:	07                   	(bad)
    415b:	00 00                	add    BYTE PTR [rax],al
    415d:	00 15 06 01 00 00    	add    BYTE PTR [rip+0x106],dl        # 4269 <_IO_stdin_used+0x269>
    4163:	5f                   	pop    rdi
    4164:	11 00                	adc    DWORD PTR [rax],eax
    4166:	00 16                	add    BYTE PTR [rsi],dl
    4168:	3a 00                	cmp    al,BYTE PTR [rax]
    416a:	00 00                	add    BYTE PTR [rax],al
    416c:	20 00                	and    BYTE PTR [rax],al
    416e:	0e                   	(bad)
    416f:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    4172:	00 1f                	add    BYTE PTR [rdi],bl
    4174:	f5                   	cmc
    4175:	03 00                	add    eax,DWORD PTR [rax]
    4177:	00 3a                	add    BYTE PTR [rdx],bh
    4179:	05 1b 06 00 00       	add    eax,0x61b
    417e:	66 00 00             	data16 add BYTE PTR [rax],al
    4181:	00 b0 20 00 00 00    	add    BYTE PTR [rax+0x20],dh
    4187:	00 00                	add    BYTE PTR [rax],al
    4189:	00 dc                	add    ah,bl
    418b:	00 00                	add    BYTE PTR [rax],al
    418d:	00 00                	add    BYTE PTR [rax],al
    418f:	00 00                	add    BYTE PTR [rax],al
    4191:	00 01                	add    BYTE PTR [rcx],al
    4193:	9c                   	pushf
    4194:	c0 12 00             	rcl    BYTE PTR [rdx],0x0
    4197:	00 11                	add    BYTE PTR [rcx],dl
    4199:	7b 21                	jnp    41bc <_IO_stdin_used+0x1bc>
    419b:	00 00                	add    BYTE PTR [rax],al
    419d:	3a 17                	cmp    dl,BYTE PTR [rdi]
    419f:	06                   	(bad)
    41a0:	09 00                	or     DWORD PTR [rax],eax
    41a2:	00 e2                	add    dl,ah
    41a4:	15 00 00 d4 15       	adc    eax,0x15d40000
    41a9:	00 00                	add    BYTE PTR [rax],al
    41ab:	11 d1                	adc    ecx,edx
    41ad:	14 00                	adc    al,0x0
    41af:	00 3a                	add    BYTE PTR [rdx],bh
    41b1:	24 5b                	and    al,0x5b
    41b3:	08 00                	or     BYTE PTR [rax],al
    41b5:	00 27                	add    BYTE PTR [rdi],ah
    41b7:	16                   	(bad)
    41b8:	00 00                	add    BYTE PTR [rax],al
    41ba:	1d 16 00 00 19       	sbb    eax,0x19000016
    41bf:	b3 03                	mov    bl,0x3
    41c1:	00 00                	add    BYTE PTR [rax],al
    41c3:	d0 12                	rcl    BYTE PTR [rdx],1
    41c5:	00 00                	add    BYTE PTR [rax],al
    41c7:	09 03                	or     DWORD PTR [rbx],eax
    41c9:	10 44 00 00          	adc    BYTE PTR [rax+rax*1+0x0],al
    41cd:	00 00                	add    BYTE PTR [rax],al
    41cf:	00 00                	add    BYTE PTR [rax],al
    41d1:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    41d5:	00 3d 0e dd 07 00    	add    BYTE PTR [rip+0x7dd0e],bh        # 81ee9 <_end+0x7bed1>
    41db:	00 6a 16             	add    BYTE PTR [rdx+0x16],ch
    41de:	00 00                	add    BYTE PTR [rax],al
    41e0:	64 16                	fs (bad)
    41e2:	00 00                	add    BYTE PTR [rax],al
    41e4:	20 5a 04             	and    BYTE PTR [rdx+0x4],bl
    41e7:	00 00                	add    BYTE PTR [rax],al
    41e9:	44 0e                	rex.R (bad)
    41eb:	dd 07                	fld    QWORD PTR [rdi]
    41ed:	00 00                	add    BYTE PTR [rax],al
    41ef:	85 16                	test   DWORD PTR [rsi],edx
    41f1:	00 00                	add    BYTE PTR [rax],al
    41f3:	81 16 00 00 20 dd    	adc    DWORD PTR [rsi],0xdd200000
    41f9:	05 00 00 45 0e       	add    eax,0xe450000
    41fe:	dd 07                	fld    QWORD PTR [rdi]
    4200:	00 00                	add    BYTE PTR [rax],al
    4202:	98                   	cwde
    4203:	16                   	(bad)
    4204:	00 00                	add    BYTE PTR [rax],al
    4206:	94                   	xchg   esp,eax
    4207:	16                   	(bad)
    4208:	00 00                	add    BYTE PTR [rax],al
    420a:	12 0d 11 00 00 d0    	adc    cl,BYTE PTR [rip+0xffffffffd0000011]        # ffffffffd0004221 <_end+0xffffffffcfffe209>
    4210:	20 00                	and    BYTE PTR [rax],al
    4212:	00 00                	add    BYTE PTR [rax],al
    4214:	00 00                	add    BYTE PTR [rax],al
    4216:	00 02                	add    BYTE PTR [rdx],al
    4218:	0e                   	(bad)
    4219:	02 00                	add    al,BYTE PTR [rax]
    421b:	00 3d 21 84 12 00    	add    BYTE PTR [rip+0x128421],bh        # 12c642 <_end+0x12662a>
    4221:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    4224:	11 00                	adc    DWORD PTR [rax],eax
    4226:	00 ad 16 00 00 ab    	add    BYTE PTR [rbp-0x54ffffea],ch
    422c:	16                   	(bad)
    422d:	00 00                	add    BYTE PTR [rax],al
    422f:	04 22                	add    al,0x22
    4231:	11 00                	adc    DWORD PTR [rax],eax
    4233:	00 bd 16 00 00 b9    	add    BYTE PTR [rbp-0x46ffffea],bh
    4239:	16                   	(bad)
    423a:	00 00                	add    BYTE PTR [rax],al
    423c:	27                   	(bad)
    423d:	0e                   	(bad)
    423e:	02 00                	add    al,BYTE PTR [rax]
    4240:	00 1a                	add    BYTE PTR [rdx],bl
    4242:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    4245:	00 ce                	add    dh,cl
    4247:	16                   	(bad)
    4248:	00 00                	add    BYTE PTR [rax],al
    424a:	cc                   	int3
    424b:	16                   	(bad)
    424c:	00 00                	add    BYTE PTR [rax],al
    424e:	14 b9                	adc    al,0xb9
    4250:	10 00                	adc    BYTE PTR [rax],al
    4252:	00 f4                	add    ah,dh
    4254:	20 00                	and    BYTE PTR [rax],al
    4256:	00 00                	add    BYTE PTR [rax],al
    4258:	00 00                	add    BYTE PTR [rax],al
    425a:	00 00                	add    BYTE PTR [rax],al
    425c:	1e                   	(bad)
    425d:	02 00                	add    al,BYTE PTR [rax]
    425f:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    4262:	04 d6                	add    al,0xd6
    4264:	10 00                	adc    BYTE PTR [rax],al
    4266:	00 d8                	add    al,bl
    4268:	16                   	(bad)
    4269:	00 00                	add    BYTE PTR [rax],al
    426b:	d6                   	(bad)
    426c:	16                   	(bad)
    426d:	00 00                	add    BYTE PTR [rax],al
    426f:	04 ca                	add    al,0xca
    4271:	10 00                	adc    BYTE PTR [rax],al
    4273:	00 e9                	add    cl,ch
    4275:	16                   	(bad)
    4276:	00 00                	add    BYTE PTR [rax],al
    4278:	e7 16                	out    0x16,eax
    427a:	00 00                	add    BYTE PTR [rax],al
    427c:	05 fe 20 00 00       	add    eax,0x20fe
    4281:	00 00                	add    BYTE PTR [rax],al
    4283:	00 00                	add    BYTE PTR [rax],al
    4285:	44 09 00             	or     DWORD PTR [rax],r8d
    4288:	00 03                	add    BYTE PTR [rbx],al
    428a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    428d:	7d 00                	jge    428f <_IO_stdin_used+0x28f>
    428f:	00 00                	add    BYTE PTR [rax],al
    4291:	00 00                	add    BYTE PTR [rax],al
    4293:	05 8c 21 00 00       	add    eax,0x218c
    4298:	00 00                	add    BYTE PTR [rax],al
    429a:	00 00                	add    BYTE PTR [rax],al
    429c:	7a 09                	jp     42a7 <_IO_stdin_used+0x2a7>
    429e:	00 00                	add    BYTE PTR [rax],al
    42a0:	03 01                	add    eax,DWORD PTR [rcx]
    42a2:	55                   	push   rbp
    42a3:	09 03                	or     DWORD PTR [rbx],eax
    42a5:	b3 40                	mov    bl,0x40
    42a7:	00 00                	add    BYTE PTR [rax],al
    42a9:	00 00                	add    BYTE PTR [rax],al
    42ab:	00 00                	add    BYTE PTR [rax],al
    42ad:	03 01                	add    eax,DWORD PTR [rcx]
    42af:	54                   	push   rsp
    42b0:	09 03                	or     DWORD PTR [rbx],eax
    42b2:	98                   	cwde
    42b3:	40 00 00             	rex add BYTE PTR [rax],al
    42b6:	00 00                	add    BYTE PTR [rax],al
    42b8:	00 00                	add    BYTE PTR [rax],al
    42ba:	03 01                	add    eax,DWORD PTR [rcx]
    42bc:	51                   	push   rcx
    42bd:	02 08                	add    cl,BYTE PTR [rax]
    42bf:	3b 03                	cmp    eax,DWORD PTR [rbx]
    42c1:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    42c4:	03 10                	add    edx,DWORD PTR [rax]
    42c6:	44 00 00             	add    BYTE PTR [rax],r8b
    42c9:	00 00                	add    BYTE PTR [rax],al
    42cb:	00 00                	add    BYTE PTR [rax],al
    42cd:	00 00                	add    BYTE PTR [rax],al
    42cf:	15 06 01 00 00       	adc    eax,0x106
    42d4:	d0 12                	rcl    BYTE PTR [rdx],1
    42d6:	00 00                	add    BYTE PTR [rax],al
    42d8:	16                   	(bad)
    42d9:	3a 00                	cmp    al,BYTE PTR [rax]
    42db:	00 00                	add    BYTE PTR [rax],al
    42dd:	1e                   	(bad)
    42de:	00 0e                	add    BYTE PTR [rsi],cl
    42e0:	c0 12 00             	rcl    BYTE PTR [rdx],0x0
    42e3:	00 1f                	add    BYTE PTR [rdi],bl
    42e5:	03 05 00 00 1d 05    	add    eax,DWORD PTR [rip+0x51d0000]        # 51d42eb <_end+0x51ce2d3>
    42eb:	3a 06                	cmp    al,BYTE PTR [rsi]
    42ed:	00 00                	add    BYTE PTR [rax],al
    42ef:	66 00 00             	data16 add BYTE PTR [rax],al
    42f2:	00 30                	add    BYTE PTR [rax],dh
    42f4:	1f                   	(bad)
    42f5:	00 00                	add    BYTE PTR [rax],al
    42f7:	00 00                	add    BYTE PTR [rax],al
    42f9:	00 00                	add    BYTE PTR [rax],al
    42fb:	73 01                	jae    42fe <_IO_stdin_used+0x2fe>
    42fd:	00 00                	add    BYTE PTR [rax],al
    42ff:	00 00                	add    BYTE PTR [rax],al
    4301:	00 00                	add    BYTE PTR [rax],al
    4303:	01 9c e6 14 00 00 11 	add    DWORD PTR [rsi+riz*8+0x11000014],ebx
    430a:	7b 21                	jnp    432d <_IO_stdin_used+0x32d>
    430c:	00 00                	add    BYTE PTR [rax],al
    430e:	1d 18 06 09 00       	sbb    eax,0x90618
    4313:	00 06                	add    BYTE PTR [rsi],al
    4315:	17                   	(bad)
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	f6 16                	not    BYTE PTR [rsi]
    431a:	00 00                	add    BYTE PTR [rax],al
    431c:	11 d1                	adc    ecx,edx
    431e:	14 00                	adc    al,0x0
    4320:	00 1d 25 5b 08 00    	add    BYTE PTR [rip+0x85b25],bl        # 89e4b <_end+0x83e33>
    4326:	00 52 17             	add    BYTE PTR [rdx+0x17],dl
    4329:	00 00                	add    BYTE PTR [rax],al
    432b:	48 17                	rex.W (bad)
    432d:	00 00                	add    BYTE PTR [rax],al
    432f:	19 b3 03 00 00 f6    	sbb    DWORD PTR [rbx-0x9fffffd],esi
    4335:	14 00                	adc    al,0x0
    4337:	00 09                	add    BYTE PTR [rcx],cl
    4339:	03 f0                	add    esi,eax
    433b:	43 00 00             	rex.XB add BYTE PTR [r8],al
    433e:	00 00                	add    BYTE PTR [rax],al
    4340:	00 00                	add    BYTE PTR [rax],al
    4342:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    4346:	00 20                	add    BYTE PTR [rax],ah
    4348:	0e                   	(bad)
    4349:	dd 07                	fld    QWORD PTR [rdi]
    434b:	00 00                	add    BYTE PTR [rax],al
    434d:	95                   	xchg   ebp,eax
    434e:	17                   	(bad)
    434f:	00 00                	add    BYTE PTR [rax],al
    4351:	8f                   	(bad)
    4352:	17                   	(bad)
    4353:	00 00                	add    BYTE PTR [rax],al
    4355:	28 ee                	sub    dh,ch
    4357:	01 00                	add    DWORD PTR [rax],eax
    4359:	00 5e 13             	add    BYTE PTR [rsi+0x13],bl
    435c:	00 00                	add    BYTE PTR [rax],al
    435e:	43                   	rex.XB
    435f:	67 09 00             	or     DWORD PTR [eax],eax
    4362:	00 01                	add    BYTE PTR [rcx],al
    4364:	28 12                	sub    BYTE PTR [rdx],dl
    4366:	dd 07                	fld    QWORD PTR [rdi]
    4368:	00 00                	add    BYTE PTR [rax],al
    436a:	01 52 00             	add    DWORD PTR [rdx+0x0],edx
    436d:	12 0d 11 00 00 53    	adc    cl,BYTE PTR [rip+0x53000011]        # 53004384 <_end+0x52ffe36c>
    4373:	1f                   	(bad)
    4374:	00 00                	add    BYTE PTR [rax],al
    4376:	00 00                	add    BYTE PTR [rax],al
    4378:	00 00                	add    BYTE PTR [rax],al
    437a:	02 e3                	add    ah,bl
    437c:	01 00                	add    DWORD PTR [rax],eax
    437e:	00 20                	add    BYTE PTR [rax],ah
    4380:	21 eb                	and    ebx,ebp
    4382:	13 00                	adc    eax,DWORD PTR [rax]
    4384:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    4387:	11 00                	adc    DWORD PTR [rax],eax
    4389:	00 ae 17 00 00 ac    	add    BYTE PTR [rsi-0x53ffffe9],ch
    438f:	17                   	(bad)
    4390:	00 00                	add    BYTE PTR [rax],al
    4392:	29 22                	sub    DWORD PTR [rdx],esp
    4394:	11 00                	adc    DWORD PTR [rax],eax
    4396:	00 27                	add    BYTE PTR [rdi],ah
    4398:	e3 01                	jrcxz  439b <_IO_stdin_used+0x39b>
    439a:	00 00                	add    BYTE PTR [rax],al
    439c:	1a 43 11             	sbb    al,BYTE PTR [rbx+0x11]
    439f:	00 00                	add    BYTE PTR [rax],al
    43a1:	c0 17 00             	rcl    BYTE PTR [rdi],0x0
    43a4:	00 ba 17 00 00 25    	add    BYTE PTR [rdx+0x25000017],bh
    43aa:	b9 10 00 00 6f       	mov    ecx,0x6f000010
    43af:	1f                   	(bad)
    43b0:	00 00                	add    BYTE PTR [rax],al
    43b2:	00 00                	add    BYTE PTR [rax],al
    43b4:	00 00                	add    BYTE PTR [rax],al
    43b6:	00 6f 1f             	add    BYTE PTR [rdi+0x1f],ch
    43b9:	00 00                	add    BYTE PTR [rax],al
    43bb:	00 00                	add    BYTE PTR [rax],al
    43bd:	00 00                	add    BYTE PTR [rax],al
    43bf:	0d 00 00 00 00       	or     eax,0x0
    43c4:	00 00                	add    BYTE PTR [rax],al
    43c6:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    43c9:	04 d6                	add    al,0xd6
    43cb:	10 00                	adc    BYTE PTR [rax],al
    43cd:	00 dd                	add    ch,bl
    43cf:	17                   	(bad)
    43d0:	00 00                	add    BYTE PTR [rax],al
    43d2:	db 17                	fist   DWORD PTR [rdi]
    43d4:	00 00                	add    BYTE PTR [rax],al
    43d6:	04 ca                	add    al,0xca
    43d8:	10 00                	adc    BYTE PTR [rax],al
    43da:	00 ee                	add    dh,ch
    43dc:	17                   	(bad)
    43dd:	00 00                	add    BYTE PTR [rax],al
    43df:	ec                   	in     al,dx
    43e0:	17                   	(bad)
    43e1:	00 00                	add    BYTE PTR [rax],al
    43e3:	05 7c 1f 00 00       	add    eax,0x1f7c
    43e8:	00 00                	add    BYTE PTR [rax],al
    43ea:	00 00                	add    BYTE PTR [rax],al
    43ec:	44 09 00             	or     DWORD PTR [rax],r8d
    43ef:	00 03                	add    BYTE PTR [rbx],al
    43f1:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    43f4:	7c 00                	jl     43f6 <_IO_stdin_used+0x3f6>
    43f6:	00 00                	add    BYTE PTR [rax],al
    43f8:	00 00                	add    BYTE PTR [rax],al
    43fa:	09 e8                	or     eax,ebp
    43fc:	10 00                	adc    BYTE PTR [rax],al
    43fe:	00 9d 1f 00 00 00    	add    BYTE PTR [rbp+0x1f],bl
    4404:	00 00                	add    BYTE PTR [rax],al
    4406:	00 01                	add    BYTE PTR [rcx],al
    4408:	9d                   	popf
    4409:	1f                   	(bad)
    440a:	00 00                	add    BYTE PTR [rax],al
    440c:	00 00                	add    BYTE PTR [rax],al
    440e:	00 00                	add    BYTE PTR [rax],al
    4410:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4411:	00 00                	add    BYTE PTR [rax],al
    4413:	00 00                	add    BYTE PTR [rax],al
    4415:	00 00                	add    BYTE PTR [rax],al
    4417:	00 35 33 ab 14 00    	add    BYTE PTR [rip+0x14ab33],dh        # 14ef50 <_end+0x148f38>
    441d:	00 04 f5 10 00 00 ff 	add    BYTE PTR [rsi*8-0xfffff0],al
    4424:	17                   	(bad)
    4425:	00 00                	add    BYTE PTR [rax],al
    4427:	fb                   	sti
    4428:	17                   	(bad)
    4429:	00 00                	add    BYTE PTR [rax],al
    442b:	12 85 15 00 00 c1    	adc    al,BYTE PTR [rbp-0x3effffeb]
    4431:	1f                   	(bad)
    4432:	00 00                	add    BYTE PTR [rax],al
    4434:	00 00                	add    BYTE PTR [rax],al
    4436:	00 00                	add    BYTE PTR [rax],al
    4438:	00 fe                	add    dh,bh
    443a:	01 00                	add    DWORD PTR [rax],eax
    443c:	00 64 0b 6f          	add    BYTE PTR [rbx+rcx*1+0x6f],ah
    4440:	14 00                	adc    al,0x0
    4442:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    4445:	15 00 00 10 18       	adc    eax,0x18100000
    444a:	00 00                	add    BYTE PTR [rax],al
    444c:	0e                   	(bad)
    444d:	18 00                	sbb    BYTE PTR [rax],al
    444f:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    4452:	15 00 00 1a 18       	adc    eax,0x181a0000
    4457:	00 00                	add    BYTE PTR [rax],al
    4459:	18 18                	sbb    BYTE PTR [rax],bl
    445b:	00 00                	add    BYTE PTR [rax],al
    445d:	04 94                	add    al,0x94
    445f:	15 00 00 27 18       	adc    eax,0x18270000
    4464:	00 00                	add    BYTE PTR [rax],al
    4466:	23 18                	and    ebx,DWORD PTR [rax]
    4468:	00 00                	add    BYTE PTR [rax],al
    446a:	05 d6 1f 00 00       	add    eax,0x1fd6
    446f:	00 00                	add    BYTE PTR [rax],al
    4471:	00 00                	add    BYTE PTR [rax],al
    4473:	ec                   	in     al,dx
    4474:	16                   	(bad)
    4475:	00 00                	add    BYTE PTR [rax],al
    4477:	03 01                	add    eax,DWORD PTR [rcx]
    4479:	54                   	push   rsp
    447a:	01 30                	add    DWORD PTR [rax],esi
    447c:	00 00                	add    BYTE PTR [rax],al
    447e:	44 01 11             	add    DWORD PTR [rcx],r10d
    4481:	00 00                	add    BYTE PTR [rax],al
    4483:	d6                   	(bad)
    4484:	1f                   	(bad)
    4485:	00 00                	add    BYTE PTR [rax],al
    4487:	00 00                	add    BYTE PTR [rax],al
    4489:	00 00                	add    BYTE PTR [rax],al
    448b:	35 00 00 00 00       	xor    eax,0x0
    4490:	00 00                	add    BYTE PTR [rax],al
    4492:	00 96 14 00 00 1a    	add    BYTE PTR [rsi+0x1a000014],dl
    4498:	02 11                	add    dl,BYTE PTR [rcx]
    449a:	00 00                	add    BYTE PTR [rax],al
    449c:	45 18 00             	sbb    BYTE PTR [r8],r8b
    449f:	00 3b                	add    BYTE PTR [rbx],bh
    44a1:	18 00                	sbb    BYTE PTR [rax],al
    44a3:	00 00                	add    BYTE PTR [rax],al
    44a5:	05 b1 1f 00 00       	add    eax,0x1fb1
    44aa:	00 00                	add    BYTE PTR [rax],al
    44ac:	00 00                	add    BYTE PTR [rax],al
    44ae:	5f                   	pop    rdi
    44af:	09 00                	or     DWORD PTR [rax],eax
    44b1:	00 03                	add    BYTE PTR [rbx],al
    44b3:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    44b7:	00 00                	add    BYTE PTR [rax],al
    44b9:	00 05 a3 20 00 00    	add    BYTE PTR [rip+0x20a3],al        # 6562 <_end+0x54a>
    44bf:	00 00                	add    BYTE PTR [rax],al
    44c1:	00 00                	add    BYTE PTR [rax],al
    44c3:	7a 09                	jp     44ce <_IO_stdin_used+0x4ce>
    44c5:	00 00                	add    BYTE PTR [rax],al
    44c7:	03 01                	add    eax,DWORD PTR [rcx]
    44c9:	55                   	push   rbp
    44ca:	09 03                	or     DWORD PTR [rbx],eax
    44cc:	b3 40                	mov    bl,0x40
    44ce:	00 00                	add    BYTE PTR [rax],al
    44d0:	00 00                	add    BYTE PTR [rax],al
    44d2:	00 00                	add    BYTE PTR [rax],al
    44d4:	03 01                	add    eax,DWORD PTR [rcx]
    44d6:	54                   	push   rsp
    44d7:	09 03                	or     DWORD PTR [rbx],eax
    44d9:	98                   	cwde
    44da:	40 00 00             	rex add BYTE PTR [rax],al
    44dd:	00 00                	add    BYTE PTR [rax],al
    44df:	00 00                	add    BYTE PTR [rax],al
    44e1:	03 01                	add    eax,DWORD PTR [rcx]
    44e3:	51                   	push   rcx
    44e4:	01 4e 03             	add    DWORD PTR [rsi+0x3],ecx
    44e7:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    44ea:	03 f0                	add    esi,eax
    44ec:	43 00 00             	rex.XB add BYTE PTR [r8],al
    44ef:	00 00                	add    BYTE PTR [rax],al
    44f1:	00 00                	add    BYTE PTR [rax],al
    44f3:	00 00                	add    BYTE PTR [rax],al
    44f5:	15 06 01 00 00       	adc    eax,0x106
    44fa:	f6 14 00             	not    BYTE PTR [rax+rax*1]
    44fd:	00 16                	add    BYTE PTR [rsi],dl
    44ff:	3a 00                	cmp    al,BYTE PTR [rax]
    4501:	00 00                	add    BYTE PTR [rax],al
    4503:	1f                   	(bad)
    4504:	00 0e                	add    BYTE PTR [rsi],cl
    4506:	e6 14                	out    0x14,al
    4508:	00 00                	add    BYTE PTR [rax],al
    450a:	1f                   	(bad)
    450b:	ba 04 00 00 0d       	mov    edx,0xd000004
    4510:	06                   	(bad)
    4511:	c3                   	ret
    4512:	04 00                	add    al,0x0
    4514:	00 fa                	add    dl,bh
    4516:	08 00                	or     BYTE PTR [rax],al
    4518:	00 d0                	add    al,dl
    451a:	1e                   	(bad)
    451b:	00 00                	add    BYTE PTR [rax],al
    451d:	00 00                	add    BYTE PTR [rax],al
    451f:	00 00                	add    BYTE PTR [rax],al
    4521:	5d                   	pop    rbp
    4522:	00 00                	add    BYTE PTR [rax],al
    4524:	00 00                	add    BYTE PTR [rax],al
    4526:	00 00                	add    BYTE PTR [rax],al
    4528:	00 01                	add    BYTE PTR [rcx],al
    452a:	9c                   	pushf
    452b:	68 15 00 00 20       	push   0x20000015
    4530:	7b 21                	jnp    4553 <_IO_stdin_used+0x553>
    4532:	00 00                	add    BYTE PTR [rax],al
    4534:	0e                   	(bad)
    4535:	0a fa                	or     bh,dl
    4537:	08 00                	or     BYTE PTR [rax],al
    4539:	00 70 18             	add    BYTE PTR [rax+0x18],dh
    453c:	00 00                	add    BYTE PTR [rax],al
    453e:	6a 18                	push   0x18
    4540:	00 00                	add    BYTE PTR [rax],al
    4542:	28 d3                	sub    bl,dl
    4544:	01 00                	add    DWORD PTR [rax],eax
    4546:	00 4e 15             	add    BYTE PTR [rsi+0x15],cl
    4549:	00 00                	add    BYTE PTR [rax],al
    454b:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    454e:	15 13 dd 07 00       	adc    eax,0x7dd13
    4553:	00 8e 18 00 00 86    	add    BYTE PTR [rsi-0x79ffffe8],cl
    4559:	18 00                	sbb    BYTE PTR [rax],al
    455b:	00 00                	add    BYTE PTR [rax],al
    455d:	05 e7 1e 00 00       	add    eax,0x1ee7
    4562:	00 00                	add    BYTE PTR [rax],al
    4564:	00 00                	add    BYTE PTR [rax],al
    4566:	9b                   	fwait
    4567:	09 00                	or     DWORD PTR [rax],eax
    4569:	00 03                	add    BYTE PTR [rbx],al
    456b:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    456e:	34 03                	xor    al,0x3
    4570:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
    4574:	20 00                	and    BYTE PTR [rax],al
    4576:	00 2a                	add    BYTE PTR [rdx],ch
    4578:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4579:	2d 00 00 03 54       	sub    eax,0x54030000
    457e:	66 00 00             	data16 add BYTE PTR [rax],al
    4581:	00 85 15 00 00 0d    	add    BYTE PTR [rbp+0xd000015],al
    4587:	04 06                	add    al,0x6
    4589:	00 00                	add    BYTE PTR [rax],al
    458b:	03 54 20 fa          	add    edx,DWORD PTR [rax+riz*1-0x6]
    458f:	00 00                	add    BYTE PTR [rax],al
    4591:	00 23                	add    BYTE PTR [rbx],ah
    4593:	00 2a                	add    BYTE PTR [rdx],ch
    4595:	fe                   	(bad)
    4596:	17                   	(bad)
    4597:	00 00                	add    BYTE PTR [rax],al
    4599:	02 39                	add    bh,BYTE PTR [rcx]
    459b:	33 01                	xor    eax,DWORD PTR [rcx]
    459d:	00 00                	add    BYTE PTR [rax],al
    459f:	b9 15 00 00 0d       	mov    ecx,0xd000015
    45a4:	fc                   	cld
    45a5:	04 00                	add    al,0x0
    45a7:	00 02                	add    BYTE PTR [rdx],al
    45a9:	39 01                	cmp    DWORD PTR [rcx],eax
    45ab:	33 01                	xor    eax,DWORD PTR [rcx]
    45ad:	00 00                	add    BYTE PTR [rax],al
    45af:	0d 65 03 00 00       	or     eax,0x365
    45b4:	02 39                	add    bh,BYTE PTR [rcx]
    45b6:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    45b9:	00 00                	add    BYTE PTR [rax],al
    45bb:	0d 33 04 00 00       	or     eax,0x433
    45c0:	02 39                	add    bh,BYTE PTR [rcx]
    45c2:	01 2e                	add    DWORD PTR [rsi],ebp
    45c4:	00 00                	add    BYTE PTR [rax],al
    45c6:	00 00                	add    BYTE PTR [rax],al
    45c8:	45 0d 11 00 00 a0    	rex.RB or eax,0xa0000011
    45ce:	1e                   	(bad)
    45cf:	00 00                	add    BYTE PTR [rax],al
    45d1:	00 00                	add    BYTE PTR [rax],al
    45d3:	00 00                	add    BYTE PTR [rax],al
    45d5:	25 00 00 00 00       	and    eax,0x0
    45da:	00 00                	add    BYTE PTR [rax],al
    45dc:	00 01                	add    BYTE PTR [rcx],al
    45de:	9c                   	pushf
    45df:	27                   	(bad)
    45e0:	16                   	(bad)
    45e1:	00 00                	add    BYTE PTR [rax],al
    45e3:	46                   	rex.RX
    45e4:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    45e7:	00 29                	add    BYTE PTR [rcx],ch
    45e9:	2e 11 00             	cs adc DWORD PTR [rax],eax
    45ec:	00 04 22             	add    BYTE PTR [rdx+riz*1],al
    45ef:	11 00                	adc    DWORD PTR [rax],eax
    45f1:	00 ac 18 00 00 aa 18 	add    BYTE PTR [rax+rbx*1+0x18aa0000],ch
    45f8:	00 00                	add    BYTE PTR [rax],al
    45fa:	05 c5 1e 00 00       	add    eax,0x1ec5
    45ff:	00 00                	add    BYTE PTR [rax],al
    4601:	00 00                	add    BYTE PTR [rax],al
    4603:	7a 09                	jp     460e <_IO_stdin_used+0x60e>
    4605:	00 00                	add    BYTE PTR [rax],al
    4607:	03 01                	add    eax,DWORD PTR [rcx]
    4609:	55                   	push   rbp
    460a:	09 03                	or     DWORD PTR [rbx],eax
    460c:	b3 40                	mov    bl,0x40
    460e:	00 00                	add    BYTE PTR [rax],al
    4610:	00 00                	add    BYTE PTR [rax],al
    4612:	00 00                	add    BYTE PTR [rax],al
    4614:	03 01                	add    eax,DWORD PTR [rcx]
    4616:	54                   	push   rsp
    4617:	09 03                	or     DWORD PTR [rbx],eax
    4619:	98                   	cwde
    461a:	40 00 00             	rex add BYTE PTR [rax],al
    461d:	00 00                	add    BYTE PTR [rax],al
    461f:	00 00                	add    BYTE PTR [rax],al
    4621:	03 01                	add    eax,DWORD PTR [rcx]
    4623:	51                   	push   rcx
    4624:	02 08                	add    cl,BYTE PTR [rax]
    4626:	54                   	push   rsp
    4627:	03 01                	add    eax,DWORD PTR [rcx]
    4629:	52                   	push   rdx
    462a:	09 03                	or     DWORD PTR [rbx],eax
    462c:	c8 43 00 00          	enter  0x43,0x0
    4630:	00 00                	add    BYTE PTR [rax],al
    4632:	00 00                	add    BYTE PTR [rax],al
    4634:	00 00                	add    BYTE PTR [rax],al
    4636:	47 0d 11 00 00 db    	rex.RXB or eax,0xdb000011
    463c:	04 00                	add    al,0x0
    463e:	00 90 21 00 00 00    	add    BYTE PTR [rax+0x21],dl
    4644:	00 00                	add    BYTE PTR [rax],al
    4646:	00 72 00             	add    BYTE PTR [rdx+0x0],dh
    4649:	00 00                	add    BYTE PTR [rax],al
    464b:	00 00                	add    BYTE PTR [rax],al
    464d:	00 00                	add    BYTE PTR [rax],al
    464f:	01 9c ca 16 00 00 04 	add    DWORD PTR [rdx+rcx*8+0x4000016],ebx
    4656:	22 11                	and    dl,BYTE PTR [rcx]
    4658:	00 00                	add    BYTE PTR [rax],al
    465a:	c5 18 00             	(bad)
    465d:	00 b7 18 00 00 04    	add    BYTE PTR [rdi+0x4000018],dh
    4663:	2e 11 00             	cs adc DWORD PTR [rax],eax
    4666:	00 0a                	add    BYTE PTR [rdx],cl
    4668:	19 00                	sbb    DWORD PTR [rax],eax
    466a:	00 00                	add    BYTE PTR [rax],al
    466c:	19 00                	sbb    DWORD PTR [rax],eax
    466e:	00 1a                	add    BYTE PTR [rdx],bl
    4670:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    4673:	00 4d 19             	add    BYTE PTR [rbp+0x19],cl
    4676:	00 00                	add    BYTE PTR [rax],al
    4678:	47 19 00             	rex.RXB sbb DWORD PTR [r8],r8d
    467b:	00 12                	add    BYTE PTR [rdx],dl
    467d:	b9 10 00 00 cc       	mov    ecx,0xcc000010
    4682:	21 00                	and    DWORD PTR [rax],eax
    4684:	00 00                	add    BYTE PTR [rax],al
    4686:	00 00                	add    BYTE PTR [rax],al
    4688:	00 00                	add    BYTE PTR [rax],al
    468a:	29 02                	sub    DWORD PTR [rdx],eax
    468c:	00 00                	add    BYTE PTR [rax],al
    468e:	59                   	pop    rcx
    468f:	19 b4 16 00 00 04 d6 	sbb    DWORD PTR [rsi+rdx*1-0x29fc0000],esi
    4696:	10 00                	adc    BYTE PTR [rax],al
    4698:	00 65 19             	add    BYTE PTR [rbp+0x19],ah
    469b:	00 00                	add    BYTE PTR [rax],al
    469d:	63 19                	movsxd ebx,DWORD PTR [rcx]
    469f:	00 00                	add    BYTE PTR [rax],al
    46a1:	04 ca                	add    al,0xca
    46a3:	10 00                	adc    BYTE PTR [rax],al
    46a5:	00 76 19             	add    BYTE PTR [rsi+0x19],dh
    46a8:	00 00                	add    BYTE PTR [rax],al
    46aa:	74 19                	je     46c5 <_IO_stdin_used+0x6c5>
    46ac:	00 00                	add    BYTE PTR [rax],al
    46ae:	05 d6 21 00 00       	add    eax,0x21d6
    46b3:	00 00                	add    BYTE PTR [rax],al
    46b5:	00 00                	add    BYTE PTR [rax],al
    46b7:	44 09 00             	or     DWORD PTR [rax],r8d
    46ba:	00 03                	add    BYTE PTR [rbx],al
    46bc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    46bf:	7d 00                	jge    46c1 <_IO_stdin_used+0x6c1>
    46c1:	00 00                	add    BYTE PTR [rax],al
    46c3:	05 02 22 00 00       	add    eax,0x2202
    46c8:	00 00                	add    BYTE PTR [rax],al
    46ca:	00 00                	add    BYTE PTR [rax],al
    46cc:	b9 15 00 00 48       	mov    ecx,0x48000015
    46d1:	22 11                	and    dl,BYTE PTR [rcx]
    46d3:	00 00                	add    BYTE PTR [rax],al
    46d5:	01 30                	add    DWORD PTR [rax],esi
    46d7:	00 00                	add    BYTE PTR [rax],al
    46d9:	2b 04 9e             	sub    eax,DWORD PTR [rsi+rbx*4]
    46dc:	02 0a                	add    cl,BYTE PTR [rdx]
    46de:	00 21                	add    BYTE PTR [rcx],ah
    46e0:	5f                   	pop    rdi
    46e1:	09 00                	or     DWORD PTR [rax],eax
    46e3:	00 55 09             	add    BYTE PTR [rbp+0x9],dl
    46e6:	00 00                	add    BYTE PTR [rax],al
    46e8:	2b 08                	sub    ecx,DWORD PTR [rax]
    46ea:	9e                   	sahf
    46eb:	06                   	(bad)
    46ec:	53                   	push   rbx
    46ed:	54                   	push   rsp
    46ee:	52                   	push   rdx
    46ef:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    46f1:	00 21                	add    BYTE PTR [rcx],ah
    46f3:	e3 03                	jrcxz  46f8 <__GNU_EH_FRAME_HDR+0x8>
    46f5:	00 00                	add    BYTE PTR [rax],al
    46f7:	d9 03                	fld    DWORD PTR [rbx]
    46f9:	00 00                	add    BYTE PTR [rax],al
    46fb:	21 76 04             	and    DWORD PTR [rsi+0x4],esi
    46fe:	00 00                	add    BYTE PTR [rax],al
    4700:	6c                   	ins    BYTE PTR es:[rdi],dx
    4701:	04 00                	add    al,0x0
    4703:	00 00                	add    BYTE PTR [rax],al
    4705:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    4706:	0e                   	(bad)
    4707:	00 00                	add    BYTE PTR [rax],al
    4709:	05 00 01 08 22       	add    eax,0x22080100
    470e:	0f 00 00             	sldt   WORD PTR [rax]
    4711:	22 14 01             	and    dl,BYTE PTR [rcx+rax*1]
    4714:	00 00                	add    BYTE PTR [rax],al
    4716:	21 44 02 00          	and    DWORD PTR [rdx+rax*1+0x0],eax
    471a:	00 00                	add    BYTE PTR [rax],al
    471c:	00 00                	add    BYTE PTR [rax],al
    471e:	00 80 24 00 00 00    	add    BYTE PTR [rax+0x24],al
    4724:	00 00                	add    BYTE PTR [rax],al
    4726:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    4729:	00 00                	add    BYTE PTR [rax],al
    472b:	00 00                	add    BYTE PTR [rax],al
    472d:	00 00                	add    BYTE PTR [rax],al
    472f:	a3 17 00 00 04 d6 0a 	movabs ds:0xad604000017,eax
    4736:	00 00 
    4738:	05 d6 17 3a 00       	add    eax,0x3a17d6
    473d:	00 00                	add    BYTE PTR [rax],al
    473f:	06                   	(bad)
    4740:	08 07                	or     BYTE PTR [rdi],al
    4742:	f3 00 00             	repz add BYTE PTR [rax],al
    4745:	00 13                	add    BYTE PTR [rbx],dl
    4747:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
    474e:	00 00                	add    BYTE PTR [rax],al
    4750:	00 03                	add    BYTE PTR [rbx],al
    4752:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    4755:	00 06                	add    BYTE PTR [rsi],al
    4757:	3d 09 66 00 00       	cmp    eax,0x6609
    475c:	00 00                	add    BYTE PTR [rax],al
    475e:	14 72                	adc    al,0x72
    4760:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4762:	00 3e                	add    BYTE PTR [rsi],bh
    4764:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    4767:	00 00                	add    BYTE PTR [rax],al
    4769:	04 00                	add    al,0x0
    476b:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    4772:	04 de                	add    al,0xde
    4774:	02 00                	add    al,BYTE PTR [rax]
    4776:	00 06                	add    BYTE PTR [rsi],al
    4778:	3f                   	(bad)
    4779:	05 41 00 00 00       	add    eax,0x41
    477e:	13 10                	adc    edx,DWORD PTR [rax]
    4780:	44 09 00             	or     DWORD PTR [rax],r8d
    4783:	00 00                	add    BYTE PTR [rax],al
    4785:	9e                   	sahf
    4786:	00 00                	add    BYTE PTR [rax],al
    4788:	00 03                	add    BYTE PTR [rbx],al
    478a:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    478d:	00 06                	add    BYTE PTR [rsi],al
    478f:	45 0e                	rex.RB (bad)
    4791:	9e                   	sahf
    4792:	00 00                	add    BYTE PTR [rax],al
    4794:	00 00                	add    BYTE PTR [rax],al
    4796:	14 72                	adc    al,0x72
    4798:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    479a:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    479d:	9e                   	sahf
    479e:	00 00                	add    BYTE PTR [rax],al
    47a0:	00 08                	add    BYTE PTR [rax],cl
    47a2:	00 06                	add    BYTE PTR [rsi],al
    47a4:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 488f <__GNU_EH_FRAME_HDR+0x19f>
    47aa:	04 0a                	add    al,0xa
    47ac:	00 00                	add    BYTE PTR [rax],al
    47ae:	00 06                	add    BYTE PTR [rsi],al
    47b0:	47 05 79 00 00 00    	rex.RXB add eax,0x79
    47b6:	13 10                	adc    edx,DWORD PTR [rax]
    47b8:	4e b4 00             	rex.WRX mov spl,0x0
    47bb:	00 00                	add    BYTE PTR [rax],al
    47bd:	d6                   	(bad)
    47be:	00 00                	add    BYTE PTR [rax],al
    47c0:	00 03                	add    BYTE PTR [rbx],al
    47c2:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    47c5:	00 06                	add    BYTE PTR [rsi],al
    47c7:	4f 13 d6             	rex.WRXB adc r10,r14
    47ca:	00 00                	add    BYTE PTR [rax],al
    47cc:	00 00                	add    BYTE PTR [rax],al
    47ce:	14 72                	adc    al,0x72
    47d0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    47d2:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    47d5:	d6                   	(bad)
    47d6:	00 00                	add    BYTE PTR [rax],al
    47d8:	00 08                	add    BYTE PTR [rax],cl
    47da:	00 06                	add    BYTE PTR [rsi],al
    47dc:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 48c2 <__GNU_EH_FRAME_HDR+0x1d2>
    47e2:	04 b5                	add    al,0xb5
    47e4:	00 00                	add    BYTE PTR [rax],al
    47e6:	00 06                	add    BYTE PTR [rsi],al
    47e8:	51                   	push   rcx
    47e9:	05 b1 00 00 00       	add    eax,0xb1
    47ee:	06                   	(bad)
    47ef:	02 07                	add    al,BYTE PTR [rdi]
    47f1:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    47f4:	00 09                	add    BYTE PTR [rcx],cl
    47f6:	fc                   	cld
    47f7:	00 00                	add    BYTE PTR [rax],al
    47f9:	00 06                	add    BYTE PTR [rsi],al
    47fb:	01 06                	add    DWORD PTR [rsi],eax
    47fd:	08 02                	or     BYTE PTR [rdx],al
    47ff:	00 00                	add    BYTE PTR [rax],al
    4801:	0f f5 00             	pmaddwd mm0,QWORD PTR [rax]
    4804:	00 00                	add    BYTE PTR [rax],al
    4806:	06                   	(bad)
    4807:	01 08                	add    DWORD PTR [rax],ecx
    4809:	ff 01                	inc    DWORD PTR [rcx]
    480b:	00 00                	add    BYTE PTR [rax],al
    480d:	06                   	(bad)
    480e:	04 07                	add    al,0x7
    4810:	f8                   	clc
    4811:	00 00                	add    BYTE PTR [rax],al
    4813:	00 06                	add    BYTE PTR [rsi],al
    4815:	01 06                	add    DWORD PTR [rsi],eax
    4817:	01 02                	add    DWORD PTR [rdx],eax
    4819:	00 00                	add    BYTE PTR [rax],al
    481b:	06                   	(bad)
    481c:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 487d <__GNU_EH_FRAME_HDR+0x18d>
    4822:	04 a9                	add    al,0xa9
    4824:	00 00                	add    BYTE PTR [rax],al
    4826:	00 07                	add    BYTE PTR [rdi],al
    4828:	2a 16                	sub    dl,BYTE PTR [rsi]
    482a:	08 01                	or     BYTE PTR [rcx],al
    482c:	00 00                	add    BYTE PTR [rax],al
    482e:	04 a6                	add    al,0xa6
    4830:	0a 00                	or     al,BYTE PTR [rax]
    4832:	00 07                	add    BYTE PTR [rdi],al
    4834:	91                   	xchg   ecx,eax
    4835:	19 3a                	sbb    DWORD PTR [rdx],edi
    4837:	00 00                	add    BYTE PTR [rax],al
    4839:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    483c:	0b 00                	or     eax,DWORD PTR [rax]
    483e:	00 07                	add    BYTE PTR [rdi],al
    4840:	92                   	xchg   edx,eax
    4841:	19 08                	sbb    DWORD PTR [rax],ecx
    4843:	01 00                	add    DWORD PTR [rax],eax
    4845:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    4848:	09 00                	or     DWORD PTR [rax],eax
    484a:	00 07                	add    BYTE PTR [rdi],al
    484c:	93                   	xchg   ebx,eax
    484d:	19 08                	sbb    DWORD PTR [rax],ecx
    484f:	01 00                	add    DWORD PTR [rax],eax
    4851:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
    4854:	0b 00                	or     eax,DWORD PTR [rax]
    4856:	00 07                	add    BYTE PTR [rdi],al
    4858:	94                   	xchg   esp,eax
    4859:	19 3a                	sbb    DWORD PTR [rdx],edi
    485b:	00 00                	add    BYTE PTR [rax],al
    485d:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    4860:	0a 00                	or     al,BYTE PTR [rax]
    4862:	00 07                	add    BYTE PTR [rdi],al
    4864:	96                   	xchg   esi,eax
    4865:	1a 08                	sbb    cl,BYTE PTR [rax]
    4867:	01 00                	add    DWORD PTR [rax],eax
    4869:	00 04 58             	add    BYTE PTR [rax+rbx*2],al
    486c:	0a 00                	or     al,BYTE PTR [rax]
    486e:	00 07                	add    BYTE PTR [rdi],al
    4870:	97                   	xchg   edi,eax
    4871:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    4873:	00 00                	add    BYTE PTR [rax],al
    4875:	00 04 4b             	add    BYTE PTR [rbx+rcx*2],al
    4878:	0b 00                	or     eax,DWORD PTR [rax]
    487a:	00 07                	add    BYTE PTR [rdi],al
    487c:	98                   	cwde
    487d:	19 9e 00 00 00 04    	sbb    DWORD PTR [rsi+0x4000000],ebx
    4883:	42 0b 00             	rex.X or eax,DWORD PTR [rax]
    4886:	00 07                	add    BYTE PTR [rdi],al
    4888:	a0 1a 9e 00 00 00 24 	movabs al,ds:0x408240000009e1a
    488f:	08 04 
    4891:	d1 0a                	ror    DWORD PTR [rdx],1
    4893:	00 00                	add    BYTE PTR [rax],al
    4895:	07                   	(bad)
    4896:	af                   	scas   eax,DWORD PTR es:[rdi]
    4897:	1d 9e 00 00 00       	sbb    eax,0x9e
    489c:	04 0f                	add    al,0xf
    489e:	0a 00                	or     al,BYTE PTR [rax]
    48a0:	00 07                	add    BYTE PTR [rdi],al
    48a2:	b4 1c                	mov    ah,0x1c
    48a4:	9e                   	sahf
    48a5:	00 00                	add    BYTE PTR [rax],al
    48a7:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    48aa:	0a 00                	or     al,BYTE PTR [rax]
    48ac:	00 07                	add    BYTE PTR [rdi],al
    48ae:	c2 1b 9e             	ret    0x9e1b
    48b1:	00 00                	add    BYTE PTR [rax],al
    48b3:	00 04 b5 0a 00 00 07 	add    BYTE PTR [rsi*4+0x700000a],al
    48ba:	c5 21 9e             	(bad)
    48bd:	00 00                	add    BYTE PTR [rax],al
    48bf:	00 09                	add    BYTE PTR [rcx],cl
    48c1:	f5                   	cmc
    48c2:	00 00                	add    BYTE PTR [rax],al
    48c4:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
    48c7:	0a 00                	or     al,BYTE PTR [rax]
    48c9:	00 08                	add    BYTE PTR [rax],cl
    48cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    48cc:	13 a3 01 00 00 17    	adc    esp,DWORD PTR [rbx+0x17000001]
    48d2:	0f 0b                	ud2
    48d4:	00 00                	add    BYTE PTR [rax],al
    48d6:	10 09                	adc    BYTE PTR [rcx],cl
    48d8:	0b f3                	or     esi,ebx
    48da:	01 00                	add    DWORD PTR [rax],eax
    48dc:	00 03                	add    BYTE PTR [rbx],al
    48de:	ae                   	scas   al,BYTE PTR es:[rdi]
    48df:	0a 00                	or     al,BYTE PTR [rax]
    48e1:	00 09                	add    BYTE PTR [rcx],cl
    48e3:	10 0c 7d 01 00 00 00 	adc    BYTE PTR [rdi*2+0x1],cl
    48ea:	03 9e 0a 00 00 09    	add    ebx,DWORD PTR [rsi+0x900000a]
    48f0:	15 15 af 01 00       	adc    eax,0x1af15
    48f5:	00 08                	add    BYTE PTR [rax],cl
    48f7:	00 06                	add    BYTE PTR [rsi],al
    48f9:	08 07                	or     BYTE PTR [rdi],al
    48fb:	ee                   	out    dx,al
    48fc:	00 00                	add    BYTE PTR [rax],al
    48fe:	00 25 cf 02 00 00    	add    BYTE PTR [rip+0x2cf],ah        # 4bd3 <__GNU_EH_FRAME_HDR+0x4e3>
    4904:	06                   	(bad)
    4905:	b4 03                	mov    ah,0x3
    4907:	0f 07                	sysretd
    4909:	02 00                	add    al,BYTE PTR [rax]
    490b:	00 09                	add    BYTE PTR [rcx],cl
    490d:	0c 02                	or     al,0x2
    490f:	00 00                	add    BYTE PTR [rax],al
    4911:	26 66 00 00          	es data16 add BYTE PTR [rax],al
    4915:	00 20                	add    BYTE PTR [rax],ah
    4917:	02 00                	add    al,BYTE PTR [rax]
    4919:	00 01                	add    BYTE PTR [rcx],al
    491b:	20 02                	and    BYTE PTR [rdx],al
    491d:	00 00                	add    BYTE PTR [rax],al
    491f:	01 20                	add    DWORD PTR [rax],esp
    4921:	02 00                	add    al,BYTE PTR [rax]
    4923:	00 00                	add    BYTE PTR [rax],al
    4925:	09 25 02 00 00 27    	or     DWORD PTR [rip+0x27000002],esp        # 2700492d <_end+0x26ffe915>
    492b:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    492e:	64 00 16             	add    BYTE PTR fs:[rsi],dl
    4931:	32 01                	xor    al,BYTE PTR [rcx]
    4933:	0b f6                	or     esi,esi
    4935:	03 00                	add    eax,DWORD PTR [rax]
    4937:	00 02                	add    BYTE PTR [rdx],al
    4939:	0a 83 0b 6d 00 00    	or     al,BYTE PTR [rbx+0x6d0b]
    493f:	00 02                	add    BYTE PTR [rdx],al
    4941:	0a 84 0b a5 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xa5]
    4948:	02 0a                	add    cl,BYTE PTR [rdx]
    494a:	8a 0b                	mov    cl,BYTE PTR [rbx]
    494c:	f6 03 00             	test   BYTE PTR [rbx],0x0
    494f:	00 02                	add    BYTE PTR [rdx],al
    4951:	0a 8d 0b 13 04 00    	or     cl,BYTE PTR [rbp+0x4130b]
    4957:	00 02                	add    BYTE PTR [rdx],al
    4959:	0a 90 0b 2e 04 00    	or     dl,BYTE PTR [rax+0x42e0b]
    495f:	00 02                	add    BYTE PTR [rdx],al
    4961:	0a 91 0b 4b 04 00    	or     dl,BYTE PTR [rcx+0x44b0b]
    4967:	00 02                	add    BYTE PTR [rdx],al
    4969:	0a 92 0b 62 04 00    	or     dl,BYTE PTR [rdx+0x4620b]
    496f:	00 02                	add    BYTE PTR [rdx],al
    4971:	0a 93 0b 79 04 00    	or     dl,BYTE PTR [rbx+0x4790b]
    4977:	00 02                	add    BYTE PTR [rdx],al
    4979:	0a 95 0b a3 04 00    	or     dl,BYTE PTR [rbp+0x4a30b]
    497f:	00 02                	add    BYTE PTR [rdx],al
    4981:	0a 98 0b bf 04 00    	or     bl,BYTE PTR [rax+0x4bf0b]
    4987:	00 02                	add    BYTE PTR [rdx],al
    4989:	0a 9a 0b d6 04 00    	or     bl,BYTE PTR [rdx+0x4d60b]
    498f:	00 02                	add    BYTE PTR [rdx],al
    4991:	0a 9d 0b f2 04 00    	or     bl,BYTE PTR [rbp+0x4f20b]
    4997:	00 02                	add    BYTE PTR [rdx],al
    4999:	0a 9e 0b 0e 05 00    	or     bl,BYTE PTR [rsi+0x50e0b]
    499f:	00 02                	add    BYTE PTR [rdx],al
    49a1:	0a 9f 0b 3f 05 00    	or     bl,BYTE PTR [rdi+0x53f0b]
    49a7:	00 02                	add    BYTE PTR [rdx],al
    49a9:	0a a1 0b 60 05 00    	or     ah,BYTE PTR [rcx+0x5600b]
    49af:	00 02                	add    BYTE PTR [rdx],al
    49b1:	0a a4 0b 80 05 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x580]
    49b8:	02 0a                	add    cl,BYTE PTR [rdx]
    49ba:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    49bb:	0b 93 05 00 00 02    	or     edx,DWORD PTR [rbx+0x2000005]
    49c1:	0a a9 0b a0 05 00    	or     ch,BYTE PTR [rcx+0x5a00b]
    49c7:	00 02                	add    BYTE PTR [rdx],al
    49c9:	0a aa 0b b1 05 00    	or     ch,BYTE PTR [rdx+0x5b10b]
    49cf:	00 02                	add    BYTE PTR [rdx],al
    49d1:	0a ab 0b d1 05 00    	or     ch,BYTE PTR [rbx+0x5d10b]
    49d7:	00 02                	add    BYTE PTR [rdx],al
    49d9:	0a ac 0b f5 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x5f5]
    49e0:	02 0a                	add    cl,BYTE PTR [rdx]
    49e2:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    49e3:	0b 19                	or     ebx,DWORD PTR [rcx]
    49e5:	06                   	(bad)
    49e6:	00 00                	add    BYTE PTR [rax],al
    49e8:	02 0a                	add    cl,BYTE PTR [rdx]
    49ea:	af                   	scas   eax,DWORD PTR es:[rdi]
    49eb:	0b 30                	or     esi,DWORD PTR [rax]
    49ed:	06                   	(bad)
    49ee:	00 00                	add    BYTE PTR [rax],al
    49f0:	02 0a                	add    cl,BYTE PTR [rdx]
    49f2:	b0 0b                	mov    al,0xb
    49f4:	55                   	push   rbp
    49f5:	06                   	(bad)
    49f6:	00 00                	add    BYTE PTR [rax],al
    49f8:	02 0a                	add    cl,BYTE PTR [rdx]
    49fa:	f4                   	hlt
    49fb:	16                   	(bad)
    49fc:	dd 00                	fld    QWORD PTR [rax]
    49fe:	00 00                	add    BYTE PTR [rax],al
    4a00:	02 0a                	add    cl,BYTE PTR [rdx]
    4a02:	f9                   	stc
    4a03:	16                   	(bad)
    4a04:	b5 06                	mov    ch,0x6
    4a06:	00 00                	add    BYTE PTR [rax],al
    4a08:	02 0a                	add    cl,BYTE PTR [rdx]
    4a0a:	fa                   	cli
    4a0b:	16                   	(bad)
    4a0c:	cf                   	iret
    4a0d:	06                   	(bad)
    4a0e:	00 00                	add    BYTE PTR [rax],al
    4a10:	02 0a                	add    cl,BYTE PTR [rdx]
    4a12:	fc                   	cld
    4a13:	16                   	(bad)
    4a14:	eb 06                	jmp    4a1c <__GNU_EH_FRAME_HDR+0x32c>
    4a16:	00 00                	add    BYTE PTR [rax],al
    4a18:	02 0a                	add    cl,BYTE PTR [rdx]
    4a1a:	fd                   	std
    4a1b:	16                   	(bad)
    4a1c:	4a 07                	rex.WX (bad)
    4a1e:	00 00                	add    BYTE PTR [rax],al
    4a20:	02 0a                	add    cl,BYTE PTR [rdx]
    4a22:	fe                   	(bad)
    4a23:	16                   	(bad)
    4a24:	02 07                	add    al,BYTE PTR [rdi]
    4a26:	00 00                	add    BYTE PTR [rax],al
    4a28:	02 0a                	add    cl,BYTE PTR [rdx]
    4a2a:	ff 16                	call   QWORD PTR [rsi]
    4a2c:	26 07                	es (bad)
    4a2e:	00 00                	add    BYTE PTR [rax],al
    4a30:	29 0a                	sub    DWORD PTR [rdx],ecx
    4a32:	00 01                	add    BYTE PTR [rcx],al
    4a34:	16                   	(bad)
    4a35:	6c                   	ins    BYTE PTR es:[rdi],dx
    4a36:	07                   	(bad)
    4a37:	00 00                	add    BYTE PTR [rax],al
    4a39:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4a3c:	73 00                	jae    4a3e <__GNU_EH_FRAME_HDR+0x34e>
    4a3e:	89 0f                	mov    DWORD PTR [rdi],ecx
    4a40:	03 00                	add    eax,DWORD PTR [rax]
    4a42:	00 b6 07 00 00 4c    	add    BYTE PTR [rsi+0x4c000007],dh
    4a48:	03 00                	add    eax,DWORD PTR [rax]
    4a4a:	00 01                	add    BYTE PTR [rcx],al
    4a4c:	b6 07                	mov    dh,0x7
    4a4e:	00 00                	add    BYTE PTR [rax],al
    4a50:	00 0a                	add    BYTE PTR [rdx],cl
    4a52:	61                   	(bad)
    4a53:	62 73 00 55 1b       	(bad)
    4a58:	00 00                	add    BYTE PTR [rax],al
    4a5a:	00 c5                	add    ch,al
    4a5c:	07                   	(bad)
    4a5d:	00 00                	add    BYTE PTR [rax],al
    4a5f:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4a62:	00 01                	add    BYTE PTR [rcx],al
    4a64:	c5 07 00             	(bad)
    4a67:	00 00                	add    BYTE PTR [rax],al
    4a69:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4a6c:	73 00                	jae    4a6e <__GNU_EH_FRAME_HDR+0x37e>
    4a6e:	4f fb                	rex.WRXB sti
    4a70:	02 00                	add    al,BYTE PTR [rax]
    4a72:	00 87 07 00 00 7c    	add    BYTE PTR [rdi+0x7c000007],al
    4a78:	03 00                	add    eax,DWORD PTR [rax]
    4a7a:	00 01                	add    BYTE PTR [rcx],al
    4a7c:	87 07                	xchg   DWORD PTR [rdi],eax
    4a7e:	00 00                	add    BYTE PTR [rax],al
    4a80:	00 0a                	add    BYTE PTR [rdx],cl
    4a82:	61                   	(bad)
    4a83:	62 73 00 4b 05       	(bad)
    4a88:	03 00                	add    eax,DWORD PTR [rax]
    4a8a:	00 65 07             	add    BYTE PTR [rbp+0x7],ah
    4a8d:	00 00                	add    BYTE PTR [rax],al
    4a8f:	94                   	xchg   esp,eax
    4a90:	03 00                	add    eax,DWORD PTR [rax]
    4a92:	00 01                	add    BYTE PTR [rcx],al
    4a94:	65 07                	gs (bad)
    4a96:	00 00                	add    BYTE PTR [rax],al
    4a98:	00 0a                	add    BYTE PTR [rdx],cl
    4a9a:	61                   	(bad)
    4a9b:	62 73 00 47 f1       	(bad)
    4aa0:	02 00                	add    al,BYTE PTR [rax]
    4aa2:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4aa6:	00 ac 03 00 00 01 44 	add    BYTE PTR [rbx+rax*1+0x44010000],ch
    4aad:	04 00                	add    al,0x0
    4aaf:	00 00                	add    BYTE PTR [rax],al
    4ab1:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4ab4:	73 00                	jae    4ab6 <__GNU_EH_FRAME_HDR+0x3c6>
    4ab6:	3d 41 00 00 00       	cmp    eax,0x41
    4abb:	d6                   	(bad)
    4abc:	00 00                	add    BYTE PTR [rax],al
    4abe:	00 c4                	add    ah,al
    4ac0:	03 00                	add    eax,DWORD PTR [rax]
    4ac2:	00 01                	add    BYTE PTR [rcx],al
    4ac4:	d6                   	(bad)
    4ac5:	00 00                	add    BYTE PTR [rax],al
    4ac7:	00 00                	add    BYTE PTR [rax],al
    4ac9:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4acc:	73 00                	jae    4ace <__GNU_EH_FRAME_HDR+0x3de>
    4ace:	38 11                	cmp    BYTE PTR [rcx],dl
    4ad0:	00 00                	add    BYTE PTR [rax],al
    4ad2:	00 9e 00 00 00 dc    	add    BYTE PTR [rsi-0x24000000],bl
    4ad8:	03 00                	add    eax,DWORD PTR [rax]
    4ada:	00 01                	add    BYTE PTR [rcx],al
    4adc:	9e                   	sahf
    4add:	00 00                	add    BYTE PTR [rax],al
    4adf:	00 00                	add    BYTE PTR [rax],al
    4ae1:	18 64 69 76          	sbb    BYTE PTR [rcx+rbp*2+0x76],ah
    4ae5:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    4aeb:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4aec:	00 00                	add    BYTE PTR [rax],al
    4aee:	00 01                	add    BYTE PTR [rcx],al
    4af0:	9e                   	sahf
    4af1:	00 00                	add    BYTE PTR [rax],al
    4af3:	00 01                	add    BYTE PTR [rcx],al
    4af5:	9e                   	sahf
    4af6:	00 00                	add    BYTE PTR [rax],al
    4af8:	00 00                	add    BYTE PTR [rax],al
    4afa:	00 07                	add    BYTE PTR [rdi],al
    4afc:	6d                   	ins    DWORD PTR es:[rdi],dx
    4afd:	00 00                	add    BYTE PTR [rax],al
    4aff:	00 06                	add    BYTE PTR [rsi],al
    4b01:	de 02                	fiadd  WORD PTR [rdx]
    4b03:	0c 66                	or     al,0x66
    4b05:	00 00                	add    BYTE PTR [rax],al
    4b07:	00 0d 04 00 00 01    	add    BYTE PTR [rip+0x1000004],cl        # 1004b11 <_end+0xffeaf9>
    4b0d:	0d 04 00 00 00       	or     eax,0x4
    4b12:	09 12                	or     DWORD PTR [rdx],edx
    4b14:	04 00                	add    al,0x0
    4b16:	00 2a                	add    BYTE PTR [rdx],ch
    4b18:	2b 33                	sub    esi,DWORD PTR [rbx]
    4b1a:	00 00                	add    BYTE PTR [rax],al
    4b1c:	00 06                	add    BYTE PTR [rsi],al
    4b1e:	e3 02                	jrcxz  4b22 <__GNU_EH_FRAME_HDR+0x432>
    4b20:	12 33                	adc    dh,BYTE PTR [rbx]
    4b22:	00 00                	add    BYTE PTR [rax],al
    4b24:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    4b27:	00 00                	add    BYTE PTR [rax],al
    4b29:	2e 04 00             	cs add al,0x0
    4b2c:	00 01                	add    BYTE PTR [rcx],al
    4b2e:	0d 04 00 00 00       	or     eax,0x4
    4b33:	08 cd                	or     ch,cl
    4b35:	01 00                	add    DWORD PTR [rax],eax
    4b37:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    4b3a:	01 44 04 00          	add    DWORD PTR [rsp+rax*1+0x0],eax
    4b3e:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4b42:	00 01                	add    BYTE PTR [rcx],al
    4b44:	f0 00 00             	lock add BYTE PTR [rax],al
    4b47:	00 00                	add    BYTE PTR [rax],al
    4b49:	06                   	(bad)
    4b4a:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    4b4d:	01 00                	add    DWORD PTR [rax],eax
    4b4f:	00 07                	add    BYTE PTR [rdi],al
    4b51:	d2 01                	rol    BYTE PTR [rcx],cl
    4b53:	00 00                	add    BYTE PTR [rax],al
    4b55:	06                   	(bad)
    4b56:	e1 01                	loope  4b59 <__GNU_EH_FRAME_HDR+0x469>
    4b58:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4b5b:	00 00                	add    BYTE PTR [rax],al
    4b5d:	62 04 00             	(bad)
    4b60:	00 01                	add    BYTE PTR [rcx],al
    4b62:	f0 00 00             	lock add BYTE PTR [rax],al
    4b65:	00 00                	add    BYTE PTR [rax],al
    4b67:	07                   	(bad)
    4b68:	dc 01                	fadd   QWORD PTR [rcx]
    4b6a:	00 00                	add    BYTE PTR [rax],al
    4b6c:	06                   	(bad)
    4b6d:	e6 01                	out    0x1,al
    4b6f:	01 9e 00 00 00 79    	add    DWORD PTR [rsi+0x79000000],ebx
    4b75:	04 00                	add    al,0x0
    4b77:	00 01                	add    BYTE PTR [rcx],al
    4b79:	f0 00 00             	lock add BYTE PTR [rax],al
    4b7c:	00 00                	add    BYTE PTR [rax],al
    4b7e:	08 65 00             	or     BYTE PTR [rbp+0x0],ah
    4b81:	00 00                	add    BYTE PTR [rax],al
    4b83:	0d 14 01 89 01       	or     eax,0x1890114
    4b88:	00 00                	add    BYTE PTR [rax],al
    4b8a:	a3 04 00 00 01 20 02 	movabs ds:0x22001000004,eax
    4b91:	00 00 
    4b93:	01 20                	add    DWORD PTR [rax],esp
    4b95:	02 00                	add    al,BYTE PTR [rax]
    4b97:	00 01                	add    BYTE PTR [rcx],al
    4b99:	2e 00 00             	cs add BYTE PTR [rax],al
    4b9c:	00 01                	add    BYTE PTR [rcx],al
    4b9e:	2e 00 00             	cs add BYTE PTR [rax],al
    4ba1:	00 01                	add    BYTE PTR [rcx],al
    4ba3:	fa                   	cli
    4ba4:	01 00                	add    DWORD PTR [rax],eax
    4ba6:	00 00                	add    BYTE PTR [rax],al
    4ba8:	2c 64                	sub    al,0x64
    4baa:	69 76 00 06 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e006
    4bb1:	6d                   	ins    DWORD PTR es:[rdi],dx
    4bb2:	00 00                	add    BYTE PTR [rax],al
    4bb4:	00 bf 04 00 00 01    	add    BYTE PTR [rdi+0x1000004],bh
    4bba:	66 00 00             	data16 add BYTE PTR [rax],al
    4bbd:	00 01                	add    BYTE PTR [rcx],al
    4bbf:	66 00 00             	data16 add BYTE PTR [rax],al
    4bc2:	00 00                	add    BYTE PTR [rax],al
    4bc4:	07                   	(bad)
    4bc5:	bd 00 00 00 06       	mov    ebp,0x6000000
    4bca:	05 03 0e bb 01       	add    eax,0x1bb0e03
    4bcf:	00 00                	add    BYTE PTR [rax],al
    4bd1:	d6                   	(bad)
    4bd2:	04 00                	add    al,0x0
    4bd4:	00 01                	add    BYTE PTR [rcx],al
    4bd6:	f0 00 00             	lock add BYTE PTR [rax],al
    4bd9:	00 00                	add    BYTE PTR [rax],al
    4bdb:	07                   	(bad)
    4bdc:	c3                   	ret
    4bdd:	02 00                	add    al,BYTE PTR [rax]
    4bdf:	00 06                	add    BYTE PTR [rsi],al
    4be1:	e2 03                	loop   4be6 <__GNU_EH_FRAME_HDR+0x4f6>
    4be3:	0f a5 00             	shld   DWORD PTR [rax],eax,cl
    4be6:	00 00                	add    BYTE PTR [rax],al
    4be8:	f2 04 00             	repnz add al,0x0
    4beb:	00 01                	add    BYTE PTR [rcx],al
    4bed:	9e                   	sahf
    4bee:	00 00                	add    BYTE PTR [rax],al
    4bf0:	00 01                	add    BYTE PTR [rcx],al
    4bf2:	9e                   	sahf
    4bf3:	00 00                	add    BYTE PTR [rax],al
    4bf5:	00 00                	add    BYTE PTR [rax],al
    4bf7:	07                   	(bad)
    4bf8:	33 02                	xor    eax,DWORD PTR [rdx]
    4bfa:	00 00                	add    BYTE PTR [rax],al
    4bfc:	06                   	(bad)
    4bfd:	26 04 0c             	es add al,0xc
    4c00:	66 00 00             	data16 add BYTE PTR [rax],al
    4c03:	00 0e                	add    BYTE PTR [rsi],cl
    4c05:	05 00 00 01 f0       	add    eax,0xf0010000
    4c0a:	00 00                	add    BYTE PTR [rax],al
    4c0c:	00 01                	add    BYTE PTR [rcx],al
    4c0e:	2e 00 00             	cs add BYTE PTR [rax],al
    4c11:	00 00                	add    BYTE PTR [rax],al
    4c13:	08 39                	or     BYTE PTR [rcx],bh
    4c15:	02 00                	add    al,BYTE PTR [rax]
    4c17:	00 0e                	add    BYTE PTR [rsi],cl
    4c19:	75 01                	jne    4c1c <__GNU_EH_FRAME_HDR+0x52c>
    4c1b:	2e 00 00             	cs add BYTE PTR [rax],al
    4c1e:	00 2e                	add    BYTE PTR [rsi],ch
    4c20:	05 00 00 01 2e       	add    eax,0x2e010000
    4c25:	05 00 00 01 f0       	add    eax,0xf0010000
    4c2a:	00 00                	add    BYTE PTR [rax],al
    4c2c:	00 01                	add    BYTE PTR [rcx],al
    4c2e:	2e 00 00             	cs add BYTE PTR [rax],al
    4c31:	00 00                	add    BYTE PTR [rax],al
    4c33:	09 33                	or     DWORD PTR [rbx],esi
    4c35:	05 00 00 06 04       	add    eax,0x4060000
    4c3a:	05 61 02 00 00       	add    eax,0x261
    4c3f:	0f 33                	rdpmc
    4c41:	05 00 00 07 d9       	add    eax,0xd9070000
    4c46:	00 00                	add    BYTE PTR [rax],al
    4c48:	00 06                	add    BYTE PTR [rsi],al
    4c4a:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    4c4d:	66 00 00             	data16 add BYTE PTR [rax],al
    4c50:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    4c53:	00 00                	add    BYTE PTR [rax],al
    4c55:	01 2e                	add    DWORD PTR [rsi],ebp
    4c57:	05 00 00 01 f0       	add    eax,0xf0010000
    4c5c:	00 00                	add    BYTE PTR [rax],al
    4c5e:	00 01                	add    BYTE PTR [rcx],al
    4c60:	2e 00 00             	cs add BYTE PTR [rax],al
    4c63:	00 00                	add    BYTE PTR [rax],al
    4c65:	19 25 00 00 00 ca    	sbb    DWORD PTR [rip+0xffffffffca000000],esp        # ffffffffca004c6b <_end+0xffffffffc9ffec53>
    4c6b:	03 80 05 00 00 01    	add    eax,DWORD PTR [rax+0x1000005]
    4c71:	89 01                	mov    DWORD PTR [rcx],eax
    4c73:	00 00                	add    BYTE PTR [rax],al
    4c75:	01 2e                	add    DWORD PTR [rsi],ebp
    4c77:	00 00                	add    BYTE PTR [rax],al
    4c79:	00 01                	add    BYTE PTR [rcx],al
    4c7b:	2e 00 00             	cs add BYTE PTR [rax],al
    4c7e:	00 01                	add    BYTE PTR [rcx],al
    4c80:	fa                   	cli
    4c81:	01 00                	add    DWORD PTR [rax],eax
    4c83:	00 00                	add    BYTE PTR [rax],al
    4c85:	2d 36 00 00 00       	sub    eax,0x36
    4c8a:	06                   	(bad)
    4c8b:	fa                   	cli
    4c8c:	02 0d 93 05 00 00    	add    cl,BYTE PTR [rip+0x593]        # 5225 <__FRAME_END__+0x3fd>
    4c92:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4c95:	00 00                	add    BYTE PTR [rax],al
    4c97:	00 2e                	add    BYTE PTR [rsi],ch
    4c99:	ec                   	in     al,dx
    4c9a:	02 00                	add    al,BYTE PTR [rax]
    4c9c:	00 06                	add    BYTE PTR [rsi],al
    4c9e:	3d 02 0c 66 00       	cmp    eax,0x660c02
    4ca3:	00 00                	add    BYTE PTR [rax],al
    4ca5:	19 eb                	sbb    ebx,ebp
    4ca7:	02 00                	add    al,BYTE PTR [rax]
    4ca9:	00 3f                	add    BYTE PTR [rdi],bh
    4cab:	02 b1 05 00 00 01    	add    dh,BYTE PTR [rcx+0x1000005]
    4cb1:	08 01                	or     BYTE PTR [rcx],al
    4cb3:	00 00                	add    BYTE PTR [rax],al
    4cb5:	00 08                	add    BYTE PTR [rax],cl
    4cb7:	05 01 00 00 06       	add    eax,0x6000001
    4cbc:	76 0f                	jbe    4ccd <__GNU_EH_FRAME_HDR+0x5dd>
    4cbe:	44 04 00             	rex.R add al,0x0
    4cc1:	00 cc                	add    ah,cl
    4cc3:	05 00 00 01 f0       	add    eax,0xf0010000
    4cc8:	00 00                	add    BYTE PTR [rax],al
    4cca:	00 01                	add    BYTE PTR [rcx],al
    4ccc:	cc                   	int3
    4ccd:	05 00 00 00 09       	add    eax,0x9000000
    4cd2:	bb 01 00 00 0b       	mov    ebx,0xb000001
    4cd7:	54                   	push   rsp
    4cd8:	00 00                	add    BYTE PTR [rax],al
    4cda:	00 06                	add    BYTE PTR [rsi],al
    4cdc:	d7                   	xlat   BYTE PTR ds:[rbx]
    4cdd:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    4ce0:	00 00                	add    BYTE PTR [rax],al
    4ce2:	9e                   	sahf
    4ce3:	00 00                	add    BYTE PTR [rax],al
    4ce5:	00 f5                	add    ch,dh
    4ce7:	05 00 00 01 f0       	add    eax,0xf0010000
    4cec:	00 00                	add    BYTE PTR [rax],al
    4cee:	00 01                	add    BYTE PTR [rcx],al
    4cf0:	cc                   	int3
    4cf1:	05 00 00 01 66       	add    eax,0x66010000
    4cf6:	00 00                	add    BYTE PTR [rax],al
    4cf8:	00 00                	add    BYTE PTR [rax],al
    4cfa:	0b 25 02 00 00 06    	or     esp,DWORD PTR [rip+0x6000002]        # 6004d02 <_end+0x5ffecea>
    4d00:	db 1a                	fistp  DWORD PTR [rdx]
    4d02:	1c 02                	sbb    al,0x2
    4d04:	00 00                	add    BYTE PTR [rax],al
    4d06:	3a 00                	cmp    al,BYTE PTR [rax]
    4d08:	00 00                	add    BYTE PTR [rax],al
    4d0a:	19 06                	sbb    DWORD PTR [rsi],eax
    4d0c:	00 00                	add    BYTE PTR [rax],al
    4d0e:	01 f0                	add    eax,esi
    4d10:	00 00                	add    BYTE PTR [rax],al
    4d12:	00 01                	add    BYTE PTR [rcx],al
    4d14:	cc                   	int3
    4d15:	05 00 00 01 66       	add    eax,0x66010000
    4d1a:	00 00                	add    BYTE PTR [rax],al
    4d1c:	00 00                	add    BYTE PTR [rax],al
    4d1e:	07                   	(bad)
    4d1f:	db 25 00 00 06 9b    	(bad)  [rip+0xffffffff9b060000]        # ffffffff9b064d25 <_end+0xffffffff9b05ed0d>
    4d25:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    4d28:	00 00                	add    BYTE PTR [rax],al
    4d2a:	00 30                	add    BYTE PTR [rax],dh
    4d2c:	06                   	(bad)
    4d2d:	00 00                	add    BYTE PTR [rax],al
    4d2f:	01 f0                	add    eax,esi
    4d31:	00 00                	add    BYTE PTR [rax],al
    4d33:	00 00                	add    BYTE PTR [rax],al
    4d35:	08 e1                	or     cl,ah
    4d37:	01 00                	add    DWORD PTR [rax],eax
    4d39:	00 0e                	add    BYTE PTR [rsi],cl
    4d3b:	8f 01                	pop    QWORD PTR [rcx]
    4d3d:	2e 00 00             	cs add BYTE PTR [rax],al
    4d40:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    4d43:	00 00                	add    BYTE PTR [rax],al
    4d45:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4d4b:	50                   	push   rax
    4d4c:	06                   	(bad)
    4d4d:	00 00                	add    BYTE PTR [rax],al
    4d4f:	01 2e                	add    DWORD PTR [rsi],ebp
    4d51:	00 00                	add    BYTE PTR [rax],al
    4d53:	00 00                	add    BYTE PTR [rax],al
    4d55:	09 3a                	or     DWORD PTR [rdx],edi
    4d57:	05 00 00 08 42       	add    eax,0x42080000
    4d5c:	02 00                	add    al,BYTE PTR [rax]
    4d5e:	00 0e                	add    BYTE PTR [rsi],cl
    4d60:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    4d64:	00 00                	add    BYTE PTR [rax],al
    4d66:	70 06                	jo     4d6e <__GNU_EH_FRAME_HDR+0x67e>
    4d68:	00 00                	add    BYTE PTR [rax],al
    4d6a:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4d70:	33 05 00 00 00 2f    	xor    eax,DWORD PTR [rip+0x2f000000]        # 2f004d76 <_end+0x2effed5e>
    4d76:	12 02                	adc    al,BYTE PTR [rdx]
    4d78:	00 00                	add    BYTE PTR [rax],al
    4d7a:	16                   	(bad)
    4d7b:	57                   	push   rdi
    4d7c:	01 0b                	add    DWORD PTR [rbx],ecx
    4d7e:	cf                   	iret
    4d7f:	06                   	(bad)
    4d80:	00 00                	add    BYTE PTR [rax],al
    4d82:	02 0a                	add    cl,BYTE PTR [rdx]
    4d84:	cc                   	int3
    4d85:	0b dd                	or     ebx,ebp
    4d87:	00 00                	add    BYTE PTR [rax],al
    4d89:	00 02                	add    BYTE PTR [rdx],al
    4d8b:	0a dc                	or     bl,ah
    4d8d:	0b cf                	or     ecx,edi
    4d8f:	06                   	(bad)
    4d90:	00 00                	add    BYTE PTR [rax],al
    4d92:	02 0a                	add    cl,BYTE PTR [rdx]
    4d94:	e7 0b                	out    0xb,eax
    4d96:	eb 06                	jmp    4d9e <__GNU_EH_FRAME_HDR+0x6ae>
    4d98:	00 00                	add    BYTE PTR [rax],al
    4d9a:	02 0a                	add    cl,BYTE PTR [rdx]
    4d9c:	e8 0b 02 07 00       	call   74fac <_end+0x6ef94>
    4da1:	00 02                	add    BYTE PTR [rdx],al
    4da3:	0a e9                	or     ch,cl
    4da5:	0b 26                	or     esp,DWORD PTR [rsi]
    4da7:	07                   	(bad)
    4da8:	00 00                	add    BYTE PTR [rax],al
    4daa:	02 0a                	add    cl,BYTE PTR [rdx]
    4dac:	eb 0b                	jmp    4db9 <__GNU_EH_FRAME_HDR+0x6c9>
    4dae:	4a 07                	rex.WX (bad)
    4db0:	00 00                	add    BYTE PTR [rax],al
    4db2:	02 0a                	add    cl,BYTE PTR [rdx]
    4db4:	ec                   	in     al,dx
    4db5:	0b 6c 07 00          	or     ebp,DWORD PTR [rdi+rax*1+0x0]
    4db9:	00 18                	add    BYTE PTR [rax],bl
    4dbb:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    4dc2:	00 
    4dc3:	00 dd                	add    ch,bl
    4dc5:	00 00                	add    BYTE PTR [rax],al
    4dc7:	00 01                	add    BYTE PTR [rcx],al
    4dc9:	d6                   	(bad)
    4dca:	00 00                	add    BYTE PTR [rax],al
    4dcc:	00 01                	add    BYTE PTR [rcx],al
    4dce:	d6                   	(bad)
    4dcf:	00 00                	add    BYTE PTR [rax],al
    4dd1:	00 00                	add    BYTE PTR [rax],al
    4dd3:	00 07                	add    BYTE PTR [rdi],al
    4dd5:	c2 02 00             	ret    0x2
    4dd8:	00 06                	add    BYTE PTR [rsi],al
    4dda:	e6 03                	out    0x3,al
    4ddc:	1e                   	(bad)
    4ddd:	dd 00                	fld    QWORD PTR [rax]
    4ddf:	00 00                	add    BYTE PTR [rax],al
    4de1:	eb 06                	jmp    4de9 <__GNU_EH_FRAME_HDR+0x6f9>
    4de3:	00 00                	add    BYTE PTR [rax],al
    4de5:	01 d6                	add    esi,edx
    4de7:	00 00                	add    BYTE PTR [rax],al
    4de9:	00 01                	add    BYTE PTR [rcx],al
    4deb:	d6                   	(bad)
    4dec:	00 00                	add    BYTE PTR [rax],al
    4dee:	00 00                	add    BYTE PTR [rax],al
    4df0:	07                   	(bad)
    4df1:	2d 02 00 00 06       	sub    eax,0x6000002
    4df6:	ed                   	in     eax,dx
    4df7:	01 01                	add    DWORD PTR [rcx],eax
    4df9:	d6                   	(bad)
    4dfa:	00 00                	add    BYTE PTR [rax],al
    4dfc:	00 02                	add    BYTE PTR [rdx],al
    4dfe:	07                   	(bad)
    4dff:	00 00                	add    BYTE PTR [rax],al
    4e01:	01 f0                	add    eax,esi
    4e03:	00 00                	add    BYTE PTR [rax],al
    4e05:	00 00                	add    BYTE PTR [rax],al
    4e07:	0b 88 00 00 00 06    	or     ecx,DWORD PTR [rax+0x6000000]
    4e0d:	ee                   	out    dx,al
    4e0e:	16                   	(bad)
    4e0f:	7f 00                	jg     4e11 <__GNU_EH_FRAME_HDR+0x721>
    4e11:	00 00                	add    BYTE PTR [rax],al
    4e13:	d6                   	(bad)
    4e14:	00 00                	add    BYTE PTR [rax],al
    4e16:	00 26                	add    BYTE PTR [rsi],ah
    4e18:	07                   	(bad)
    4e19:	00 00                	add    BYTE PTR [rax],al
    4e1b:	01 f0                	add    eax,esi
    4e1d:	00 00                	add    BYTE PTR [rax],al
    4e1f:	00 01                	add    BYTE PTR [rcx],al
    4e21:	cc                   	int3
    4e22:	05 00 00 01 66       	add    eax,0x66010000
    4e27:	00 00                	add    BYTE PTR [rax],al
    4e29:	00 00                	add    BYTE PTR [rax],al
    4e2b:	0b b9 02 00 00 06    	or     edi,DWORD PTR [rcx+0x6000002]
    4e31:	f3 1f                	repz (bad)
    4e33:	b0 02                	mov    al,0x2
    4e35:	00 00                	add    BYTE PTR [rax],al
    4e37:	f3 01 00             	repz add DWORD PTR [rax],eax
    4e3a:	00 4a 07             	add    BYTE PTR [rdx+0x7],cl
    4e3d:	00 00                	add    BYTE PTR [rax],al
    4e3f:	01 f0                	add    eax,esi
    4e41:	00 00                	add    BYTE PTR [rax],al
    4e43:	00 01                	add    BYTE PTR [rcx],al
    4e45:	cc                   	int3
    4e46:	05 00 00 01 66       	add    eax,0x66010000
    4e4b:	00 00                	add    BYTE PTR [rax],al
    4e4d:	00 00                	add    BYTE PTR [rax],al
    4e4f:	08 97 02 00 00 06    	or     BYTE PTR [rdi+0x6000002],dl
    4e55:	7c 0e                	jl     4e65 <__FRAME_END__+0x3d>
    4e57:	65 07                	gs (bad)
    4e59:	00 00                	add    BYTE PTR [rax],al
    4e5b:	65 07                	gs (bad)
    4e5d:	00 00                	add    BYTE PTR [rax],al
    4e5f:	01 f0                	add    eax,esi
    4e61:	00 00                	add    BYTE PTR [rax],al
    4e63:	00 01                	add    BYTE PTR [rcx],al
    4e65:	cc                   	int3
    4e66:	05 00 00 00 06       	add    eax,0x6000000
    4e6b:	04 04                	add    al,0x4
    4e6d:	d3 00                	rol    DWORD PTR [rax],cl
    4e6f:	00 00                	add    BYTE PTR [rax],al
    4e71:	08 2b                	or     BYTE PTR [rbx],ch
    4e73:	00 00                	add    BYTE PTR [rax],al
    4e75:	00 06                	add    BYTE PTR [rsi],al
    4e77:	7f 14                	jg     4e8d <__FRAME_END__+0x65>
    4e79:	87 07                	xchg   DWORD PTR [rdi],eax
    4e7b:	00 00                	add    BYTE PTR [rax],al
    4e7d:	87 07                	xchg   DWORD PTR [rdi],eax
    4e7f:	00 00                	add    BYTE PTR [rax],al
    4e81:	01 f0                	add    eax,esi
    4e83:	00 00                	add    BYTE PTR [rax],al
    4e85:	00 01                	add    BYTE PTR [rcx],al
    4e87:	cc                   	int3
    4e88:	05 00 00 00 06       	add    eax,0x6000000
    4e8d:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    4e90:	01 00                	add    DWORD PTR [rax],eax
    4e92:	00 02                	add    BYTE PTR [rdx],al
    4e94:	0f 27                	(bad)
    4e96:	0c f6                	or     al,0xf6
    4e98:	03 00                	add    eax,DWORD PTR [rax]
    4e9a:	00 02                	add    BYTE PTR [rdx],al
    4e9c:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    4e9f:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    4ea2:	00 02                	add    BYTE PTR [rdx],al
    4ea4:	0f 2e 0e             	ucomiss xmm1,DWORD PTR [rsi]
    4ea7:	80 05 00 00 02 0f 36 	add    BYTE PTR [rip+0xf020000],0x36        # f024eae <_end+0xf01ee96>
    4eae:	0c 6d                	or     al,0x6d
    4eb0:	00 00                	add    BYTE PTR [rax],al
    4eb2:	00 02                	add    BYTE PTR [rdx],al
    4eb4:	0f 37                	getsec
    4eb6:	0c a5                	or     al,0xa5
    4eb8:	00 00                	add    BYTE PTR [rax],al
    4eba:	00 06                	add    BYTE PTR [rsi],al
    4ebc:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    4ebf:	02 00                	add    al,BYTE PTR [rax]
    4ec1:	00 02                	add    BYTE PTR [rdx],al
    4ec3:	0f 39                	(bad)
    4ec5:	0c 34                	or     al,0x34
    4ec7:	03 00                	add    eax,DWORD PTR [rax]
    4ec9:	00 06                	add    BYTE PTR [rsi],al
    4ecb:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 50bb <__FRAME_END__+0x293>
    4ed1:	02 0f                	add    cl,BYTE PTR [rdi]
    4ed3:	39 0c 4c             	cmp    DWORD PTR [rsp+rcx*2],ecx
    4ed6:	03 00                	add    eax,DWORD PTR [rax]
    4ed8:	00 02                	add    BYTE PTR [rdx],al
    4eda:	0f 39                	(bad)
    4edc:	0c 64                	or     al,0x64
    4ede:	03 00                	add    eax,DWORD PTR [rax]
    4ee0:	00 02                	add    BYTE PTR [rdx],al
    4ee2:	0f 39                	(bad)
    4ee4:	0c 7c                	or     al,0x7c
    4ee6:	03 00                	add    eax,DWORD PTR [rax]
    4ee8:	00 02                	add    BYTE PTR [rdx],al
    4eea:	0f 39                	(bad)
    4eec:	0c 94                	or     al,0x94
    4eee:	03 00                	add    eax,DWORD PTR [rax]
    4ef0:	00 02                	add    BYTE PTR [rdx],al
    4ef2:	0f 39                	(bad)
    4ef4:	0c ac                	or     al,0xac
    4ef6:	03 00                	add    eax,DWORD PTR [rax]
    4ef8:	00 02                	add    BYTE PTR [rdx],al
    4efa:	0f 39                	(bad)
    4efc:	0c c4                	or     al,0xc4
    4efe:	03 00                	add    eax,DWORD PTR [rax]
    4f00:	00 02                	add    BYTE PTR [rdx],al
    4f02:	0f 3a 0c             	(bad)
    4f05:	2e 04 00             	cs add al,0x0
    4f08:	00 02                	add    BYTE PTR [rdx],al
    4f0a:	0f 3b                	(bad)
    4f0c:	0c 4b                	or     al,0x4b
    4f0e:	04 00                	add    al,0x0
    4f10:	00 02                	add    BYTE PTR [rdx],al
    4f12:	0f 3c                	(bad)
    4f14:	0c 62                	or     al,0x62
    4f16:	04 00                	add    al,0x0
    4f18:	00 02                	add    BYTE PTR [rdx],al
    4f1a:	0f 3d                	(bad)
    4f1c:	0c 79                	or     al,0x79
    4f1e:	04 00                	add    al,0x0
    4f20:	00 02                	add    BYTE PTR [rdx],al
    4f22:	0f 3f                	(bad)
    4f24:	0c b5                	or     al,0xb5
    4f26:	06                   	(bad)
    4f27:	00 00                	add    BYTE PTR [rax],al
    4f29:	02 0f                	add    cl,BYTE PTR [rdi]
    4f2b:	3f                   	(bad)
    4f2c:	0c dc                	or     al,0xdc
    4f2e:	03 00                	add    eax,DWORD PTR [rax]
    4f30:	00 02                	add    BYTE PTR [rdx],al
    4f32:	0f 3f                	(bad)
    4f34:	0c a3                	or     al,0xa3
    4f36:	04 00                	add    al,0x0
    4f38:	00 02                	add    BYTE PTR [rdx],al
    4f3a:	0f 41 0c bf          	cmovno ecx,DWORD PTR [rdi+rdi*4]
    4f3e:	04 00                	add    al,0x0
    4f40:	00 02                	add    BYTE PTR [rdx],al
    4f42:	0f 43 0c d6          	cmovae ecx,DWORD PTR [rsi+rdx*8]
    4f46:	04 00                	add    al,0x0
    4f48:	00 02                	add    BYTE PTR [rdx],al
    4f4a:	0f 46 0c f2          	cmovbe ecx,DWORD PTR [rdx+rsi*8]
    4f4e:	04 00                	add    al,0x0
    4f50:	00 02                	add    BYTE PTR [rdx],al
    4f52:	0f 47 0c 0e          	cmova  ecx,DWORD PTR [rsi+rcx*1]
    4f56:	05 00 00 02 0f       	add    eax,0xf020000
    4f5b:	48 0c 3f             	rex.W or al,0x3f
    4f5e:	05 00 00 02 0f       	add    eax,0xf020000
    4f63:	4a 0c 60             	rex.WX or al,0x60
    4f66:	05 00 00 02 0f       	add    eax,0xf020000
    4f6b:	4b 0c 93             	rex.WXB or al,0x93
    4f6e:	05 00 00 02 0f       	add    eax,0xf020000
    4f73:	4d 0c a0             	rex.WRB or al,0xa0
    4f76:	05 00 00 02 0f       	add    eax,0xf020000
    4f7b:	4e 0c b1             	rex.WRX or al,0xb1
    4f7e:	05 00 00 02 0f       	add    eax,0xf020000
    4f83:	4f 0c d1             	rex.WRXB or al,0xd1
    4f86:	05 00 00 02 0f       	add    eax,0xf020000
    4f8b:	50                   	push   rax
    4f8c:	0c f5                	or     al,0xf5
    4f8e:	05 00 00 02 0f       	add    eax,0xf020000
    4f93:	51                   	push   rcx
    4f94:	0c 19                	or     al,0x19
    4f96:	06                   	(bad)
    4f97:	00 00                	add    BYTE PTR [rax],al
    4f99:	02 0f                	add    cl,BYTE PTR [rdi]
    4f9b:	53                   	push   rbx
    4f9c:	0c 30                	or     al,0x30
    4f9e:	06                   	(bad)
    4f9f:	00 00                	add    BYTE PTR [rax],al
    4fa1:	02 0f                	add    cl,BYTE PTR [rdi]
    4fa3:	54                   	push   rsp
    4fa4:	0c 55                	or     al,0x55
    4fa6:	06                   	(bad)
    4fa7:	00 00                	add    BYTE PTR [rax],al
    4fa9:	17                   	(bad)
    4faa:	cc                   	int3
    4fab:	0a 00                	or     al,BYTE PTR [rax]
    4fad:	00 90 10 1a 74 09    	add    BYTE PTR [rax+0x9741a10],dl
    4fb3:	00 00                	add    BYTE PTR [rax],al
    4fb5:	03 53 0b             	add    edx,DWORD PTR [rbx+0xb]
    4fb8:	00 00                	add    BYTE PTR [rax],al
    4fba:	10 1f                	adc    BYTE PTR [rdi],bl
    4fbc:	0d 29 01 00 00       	or     eax,0x129
    4fc1:	00 03                	add    BYTE PTR [rbx],al
    4fc3:	ff 09                	dec    DWORD PTR [rcx]
    4fc5:	00 00                	add    BYTE PTR [rax],al
    4fc7:	10 24 0d 4d 01 00 00 	adc    BYTE PTR [rcx*1+0x14d],ah
    4fce:	08 03                	or     BYTE PTR [rbx],al
    4fd0:	fb                   	sti
    4fd1:	0a 00                	or     al,BYTE PTR [rax]
    4fd3:	00 10                	add    BYTE PTR [rax],dl
    4fd5:	2c 0f                	sub    al,0xf
    4fd7:	65 01 00             	add    DWORD PTR gs:[rax],eax
    4fda:	00 10                	add    BYTE PTR [rax],dl
    4fdc:	03 8e 0a 00 00 10    	add    ecx,DWORD PTR [rsi+0x1000000a]
    4fe2:	2d 0e 59 01 00       	sub    eax,0x1590e
    4fe7:	00 18                	add    BYTE PTR [rax],bl
    4fe9:	03 3d 0a 00 00 10    	add    edi,DWORD PTR [rip+0x1000000a]        # 10004ff9 <_end+0xfffefe1>
    4fef:	2f                   	(bad)
    4ff0:	0d 35 01 00 00       	or     eax,0x135
    4ff5:	1c 03                	sbb    al,0x3
    4ff7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    4ff9:	00 00                	add    BYTE PTR [rax],al
    4ffb:	10 30                	adc    BYTE PTR [rax],dh
    4ffd:	0d 41 01 00 00       	or     eax,0x141
    5002:	20 03                	and    BYTE PTR [rbx],al
    5004:	e3 0a                	jrcxz  5010 <__FRAME_END__+0x1e8>
    5006:	00 00                	add    BYTE PTR [rax],al
    5008:	10 32                	adc    BYTE PTR [rdx],dh
    500a:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    500d:	00 00                	add    BYTE PTR [rax],al
    500f:	24 03                	and    al,0x3
    5011:	2b 0b                	sub    ecx,DWORD PTR [rbx]
    5013:	00 00                	add    BYTE PTR [rax],al
    5015:	10 34 0d 29 01 00 00 	adc    BYTE PTR [rcx*1+0x129],dh
    501c:	28 03                	sub    BYTE PTR [rbx],al
    501e:	7d 0a                	jge    502a <__FRAME_END__+0x202>
    5020:	00 00                	add    BYTE PTR [rax],al
    5022:	10 39                	adc    BYTE PTR [rcx],bh
    5024:	0d 71 01 00 00       	or     eax,0x171
    5029:	30 03                	xor    BYTE PTR [rbx],al
    502b:	04 0b                	add    al,0xb
    502d:	00 00                	add    BYTE PTR [rax],al
    502f:	10 3d 11 8b 01 00    	adc    BYTE PTR [rip+0x18b11],bh        # 1db46 <_end+0x17b2e>
    5035:	00 38                	add    BYTE PTR [rax],bh
    5037:	03 2a                	add    ebp,DWORD PTR [rdx]
    5039:	0a 00                	or     al,BYTE PTR [rax]
    503b:	00 10                	add    BYTE PTR [rax],dl
    503d:	3f                   	(bad)
    503e:	10 97 01 00 00 40    	adc    BYTE PTR [rdi+0x40000001],dl
    5044:	03 96 0a 00 00 10    	add    edx,DWORD PTR [rsi+0x1000000a]
    504a:	4a 15 cc 01 00 00    	rex.WX adc rax,0x1cc
    5050:	48 03 70 0b          	add    rsi,QWORD PTR [rax+0xb]
    5054:	00 00                	add    BYTE PTR [rax],al
    5056:	10 4b 15             	adc    BYTE PTR [rbx+0x15],cl
    5059:	cc                   	int3
    505a:	01 00                	add    DWORD PTR [rax],eax
    505c:	00 58 03             	add    BYTE PTR [rax+0x3],bl
    505f:	9a                   	(bad)
    5060:	09 00                	or     DWORD PTR [rax],eax
    5062:	00 10                	add    BYTE PTR [rax],dl
    5064:	4c 15 cc 01 00 00    	rex.WR adc rax,0x1cc
    506a:	68 03 ea 0a 00       	push   0xaea03
    506f:	00 10                	add    BYTE PTR [rax],dl
    5071:	59                   	pop    rcx
    5072:	17                   	(bad)
    5073:	74 09                	je     507e <__FRAME_END__+0x256>
    5075:	00 00                	add    BYTE PTR [rax],al
    5077:	78 00                	js     5079 <__FRAME_END__+0x251>
    5079:	15 af 01 00 00       	adc    eax,0x1af
    507e:	84 09                	test   BYTE PTR [rcx],cl
    5080:	00 00                	add    BYTE PTR [rax],al
    5082:	16                   	(bad)
    5083:	3a 00                	cmp    al,BYTE PTR [rax]
    5085:	00 00                	add    BYTE PTR [rax],al
    5087:	02 00                	add    al,BYTE PTR [rax]
    5089:	06                   	(bad)
    508a:	10 07                	adc    BYTE PTR [rdi],al
    508c:	1b 07                	sbb    eax,DWORD PTR [rdi]
    508e:	00 00                	add    BYTE PTR [rax],al
    5090:	04 ab                	add    al,0xab
    5092:	00 00                	add    BYTE PTR [rax],al
    5094:	00 11                	add    BYTE PTR [rcx],dl
    5096:	1a 14 1d 01 00 00 08 	sbb    dl,BYTE PTR [rbx*1+0x8000001]
    509d:	62 0a 00 00 12       	(bad)
    50a2:	1a 10                	sbb    dl,BYTE PTR [rax]
    50a4:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    50a7:	00 bc 09 00 00 01 66 	add    BYTE PTR [rcx+rcx*1+0x66010000],bh
    50ae:	00 00                	add    BYTE PTR [rax],al
    50b0:	00 01                	add    BYTE PTR [rcx],al
    50b2:	89 01                	mov    DWORD PTR [rcx],eax
    50b4:	00 00                	add    BYTE PTR [rax],al
    50b6:	01 2e                	add    DWORD PTR [rsi],ebp
    50b8:	00 00                	add    BYTE PTR [rax],al
    50ba:	00 01                	add    BYTE PTR [rcx],al
    50bc:	2e 00 00             	cs add BYTE PTR [rax],al
    50bf:	00 00                	add    BYTE PTR [rax],al
    50c1:	0b 78 0b             	or     edi,DWORD PTR [rax+0xb]
    50c4:	00 00                	add    BYTE PTR [rax],al
    50c6:	12 20                	adc    ah,BYTE PTR [rax]
    50c8:	10 62 0a             	adc    BYTE PTR [rdx+0xa],ah
    50cb:	00 00                	add    BYTE PTR [rax],al
    50cd:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    50d0:	00 e5                	add    ch,ah
    50d2:	09 00                	or     DWORD PTR [rax],eax
    50d4:	00 01                	add    BYTE PTR [rcx],al
    50d6:	66 00 00             	data16 add BYTE PTR [rax],al
    50d9:	00 01                	add    BYTE PTR [rcx],al
    50db:	89 01                	mov    DWORD PTR [rcx],eax
    50dd:	00 00                	add    BYTE PTR [rax],al
    50df:	01 2e                	add    DWORD PTR [rsi],ebp
    50e1:	00 00                	add    BYTE PTR [rax],al
    50e3:	00 01                	add    BYTE PTR [rcx],al
    50e5:	2e 00 00             	cs add BYTE PTR [rax],al
    50e8:	00 00                	add    BYTE PTR [rax],al
    50ea:	0b a2 09 00 00 12    	or     esp,DWORD PTR [rdx+0x12000009]
    50f0:	1d 10 62 32 00       	sbb    eax,0x326210
    50f5:	00 c0                	add    al,al
    50f7:	01 00                	add    DWORD PTR [rax],eax
    50f9:	00 09                	add    BYTE PTR [rcx],cl
    50fb:	0a 00                	or     al,BYTE PTR [rax]
    50fd:	00 01                	add    BYTE PTR [rcx],al
    50ff:	66 00 00             	data16 add BYTE PTR [rax],al
    5102:	00 01                	add    BYTE PTR [rcx],al
    5104:	89 01                	mov    DWORD PTR [rcx],eax
    5106:	00 00                	add    BYTE PTR [rax],al
    5108:	01 2e                	add    DWORD PTR [rsi],ebp
    510a:	00 00                	add    BYTE PTR [rax],al
    510c:	00 00                	add    BYTE PTR [rax],al
    510e:	0b 5a 0b             	or     ebx,DWORD PTR [rdx+0xb]
    5111:	00 00                	add    BYTE PTR [rax],al
    5113:	02 1b                	add    bl,BYTE PTR [rbx]
    5115:	0c d3                	or     al,0xd3
    5117:	2d 00 00 66 00       	sub    eax,0x660000
    511c:	00 00                	add    BYTE PTR [rax],al
    511e:	29 0a                	sub    DWORD PTR [rdx],ecx
    5120:	00 00                	add    BYTE PTR [rax],al
    5122:	01 f0                	add    eax,esi
    5124:	00 00                	add    BYTE PTR [rax],al
    5126:	00 01                	add    BYTE PTR [rcx],al
    5128:	66 00 00             	data16 add BYTE PTR [rax],al
    512b:	00 1a                	add    BYTE PTR [rdx],bl
    512d:	00 08                	add    BYTE PTR [rax],cl
    512f:	85 0a                	test   DWORD PTR [rdx],ecx
    5131:	00 00                	add    BYTE PTR [rax],al
    5133:	02 1a                	add    bl,BYTE PTR [rdx]
    5135:	0c 66                	or     al,0x66
    5137:	00 00                	add    BYTE PTR [rax],al
    5139:	00 44 0a 00          	add    BYTE PTR [rdx+rcx*1+0x0],al
    513d:	00 01                	add    BYTE PTR [rcx],al
    513f:	f0 00 00             	lock add BYTE PTR [rax],al
    5142:	00 01                	add    BYTE PTR [rcx],al
    5144:	66 00 00             	data16 add BYTE PTR [rax],al
    5147:	00 00                	add    BYTE PTR [rax],al
    5149:	1b 44 0a 00          	sbb    eax,DWORD PTR [rdx+rcx*1+0x0]
    514d:	00 25 1b e2 09 00    	add    BYTE PTR [rip+0x9e21b],ah        # a336e <_end+0x9d356>
    5153:	00 23                	add    BYTE PTR [rbx],ah
    5155:	07                   	(bad)
    5156:	83 15 00 00 13 66 01 	adc    DWORD PTR [rip+0x66130000],0x1        # 6613515d <_end+0x6612f145>
    515d:	0c 66                	or     al,0x66
    515f:	00 00                	add    BYTE PTR [rax],al
    5161:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    5164:	00 00                	add    BYTE PTR [rax],al
    5166:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    5169:	00 00                	add    BYTE PTR [rax],al
    516b:	00 07                	add    BYTE PTR [rdi],al
    516d:	5a                   	pop    rdx
    516e:	06                   	(bad)
    516f:	00 00                	add    BYTE PTR [rax],al
    5171:	06                   	(bad)
    5172:	a3 02 0e 89 01 00 00 	movabs ds:0xa83000001890e02,eax
    5179:	83 0a 
    517b:	00 00                	add    BYTE PTR [rax],al
    517d:	01 2e                	add    DWORD PTR [rsi],ebp
    517f:	00 00                	add    BYTE PTR [rax],al
    5181:	00 01                	add    BYTE PTR [rcx],al
    5183:	2e 00 00             	cs add BYTE PTR [rax],al
    5186:	00 00                	add    BYTE PTR [rax],al
    5188:	08 cc                	or     ah,cl
    518a:	0a 00                	or     al,BYTE PTR [rax]
    518c:	00 14 cd 0c 66 00 00 	add    BYTE PTR [rcx*8+0x660c],dl
    5193:	00 9e 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bl
    5199:	f0 00 00             	lock add BYTE PTR [rax],al
    519c:	00 01                	add    BYTE PTR [rcx],al
    519e:	9e                   	sahf
    519f:	0a 00                	or     al,BYTE PTR [rax]
    51a1:	00 00                	add    BYTE PTR [rax],al
    51a3:	09 a4 08 00 00 30 76 	or     DWORD PTR [rax+rcx*1+0x76300000],esp
    51aa:	05 00 00 15 45       	add    eax,0x45150000
    51af:	0d c4 0a 00 00       	or     eax,0xac4
    51b4:	01 f0                	add    eax,esi
    51b6:	00 00                	add    BYTE PTR [rax],al
    51b8:	00 01                	add    BYTE PTR [rcx],al
    51ba:	f0 00 00             	lock add BYTE PTR [rax],al
    51bd:	00 01                	add    BYTE PTR [rcx],al
    51bf:	08 01                	or     BYTE PTR [rcx],al
    51c1:	00 00                	add    BYTE PTR [rax],al
    51c3:	01 f0                	add    eax,esi
    51c5:	00 00                	add    BYTE PTR [rax],al
    51c7:	00 00                	add    BYTE PTR [rax],al
    51c9:	1c 6d                	sbb    al,0x6d
    51cb:	0a 00                	or     al,BYTE PTR [rax]
    51cd:	00 21                	add    BYTE PTR [rcx],ah
    51cf:	0a b6 09 00 00 8b    	or     dh,BYTE PTR [rsi-0x74fffff7]
    51d5:	09 00                	or     DWORD PTR [rax],eax
    51d7:	00 90 25 00 00 00    	add    BYTE PTR [rax+0x25],dl
    51dd:	00 00                	add    BYTE PTR [rax],al
    51df:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
    51e2:	00 00                	add    BYTE PTR [rax],al
    51e4:	00 00                	add    BYTE PTR [rax],al
    51e6:	00 00                	add    BYTE PTR [rax],al
    51e8:	01 9c ca 0b 00 00 10 	add    DWORD PTR [rdx+rcx*8+0x1000000b],ebx
    51ef:	8a 03                	mov    al,BYTE PTR [rbx]
    51f1:	00 00                	add    BYTE PTR [rax],al
    51f3:	21 1b                	and    DWORD PTR [rbx],ebx
    51f5:	bb 01 00 00 99       	mov    ebx,0x99000001
    51fa:	19 00                	sbb    DWORD PTR [rax],eax
    51fc:	00 8f 19 00 00 10    	add    BYTE PTR [rdi+0x10000019],cl
    5202:	88 0b                	mov    BYTE PTR [rbx],cl
    5204:	00 00                	add    BYTE PTR [rax],al
    5206:	21 28                	and    DWORD PTR [rax],ebp
    5208:	2e 00 00             	cs add BYTE PTR [rax],al
    520b:	00 cd                	add    ch,cl
    520d:	19 00                	sbb    DWORD PTR [rax],eax
    520f:	00 c3                	add    bl,al
    5211:	19 00                	sbb    DWORD PTR [rax],eax
    5213:	00 1d b3 03 00 00    	add    BYTE PTR [rip+0x3b3],bl        # 55cc <__FRAME_END__+0x7a4>
    5219:	da 0b                	fimul  DWORD PTR [rbx]
    521b:	00 00                	add    BYTE PTR [rax],al
    521d:	09 03                	or     DWORD PTR [rbx],eax
    521f:	58                   	pop    rax
    5220:	44 00 00             	add    BYTE PTR [rax],r8b
    5223:	00 00                	add    BYTE PTR [rax],al
    5225:	00 00                	add    BYTE PTR [rax],al
    5227:	0d 67 0b 00 00       	or     eax,0xb67
    522c:	24 0b                	and    al,0xb
    522e:	bb 01 00 00 fb       	mov    ebx,0xfb000001
    5233:	19 00                	sbb    DWORD PTR [rax],eax
    5235:	00 f7                	add    bh,dh
    5237:	19 00                	sbb    DWORD PTR [rax],eax
    5239:	00 0d 83 04 00 00    	add    BYTE PTR [rip+0x483],cl        # 56c2 <__FRAME_END__+0x89a>
    523f:	25 0e 8b 09 00       	and    eax,0x98b0e
    5244:	00 0e                	add    BYTE PTR [rsi],cl
    5246:	1a 00                	sbb    al,BYTE PTR [rax]
    5248:	00 0a                	add    BYTE PTR [rdx],cl
    524a:	1a 00                	sbb    al,BYTE PTR [rax]
    524c:	00 1e                	add    BYTE PTR [rsi],bl
    524e:	6b 0e 00             	imul   ecx,DWORD PTR [rsi],0x0
    5251:	00 b8 25 00 00 00    	add    BYTE PTR [rax+0x25],bh
    5257:	00 00                	add    BYTE PTR [rax],al
    5259:	00 01                	add    BYTE PTR [rcx],al
    525b:	a3 02 00 00 29 1b 8e 	movabs ds:0xb8e1b29000002,eax
    5262:	0b 00 
    5264:	00 0c 8b             	add    BYTE PTR [rbx+rcx*4],cl
    5267:	0e                   	(bad)
    5268:	00 00                	add    BYTE PTR [rax],al
    526a:	20 1a                	and    BYTE PTR [rdx],bl
    526c:	00 00                	add    BYTE PTR [rax],al
    526e:	1e                   	(bad)
    526f:	1a 00                	sbb    al,BYTE PTR [rax]
    5271:	00 0c 80             	add    BYTE PTR [rax+rax*4],cl
    5274:	0e                   	(bad)
    5275:	00 00                	add    BYTE PTR [rax],al
    5277:	2b 1a                	sub    ebx,DWORD PTR [rdx]
    5279:	00 00                	add    BYTE PTR [rax],al
    527b:	29 1a                	sub    DWORD PTR [rdx],ebx
    527d:	00 00                	add    BYTE PTR [rax],al
    527f:	11 bd 25 00 00 00    	adc    DWORD PTR [rbp+0x25],edi
    5285:	00 00                	add    BYTE PTR [rax],al
    5287:	00 97 0e 00 00 05    	add    BYTE PTR [rdi+0x500000e],dl
    528d:	01 54 01 3a          	add    DWORD PTR [rcx+rax*1+0x3a],edx
    5291:	00 00                	add    BYTE PTR [rax],al
    5293:	11 f2                	adc    edx,esi
    5295:	25 00 00 00 00       	and    eax,0x0
    529a:	00 00                	add    BYTE PTR [rax],al
    529c:	a3 0a 00 00 05 01 55 	movabs ds:0x30955010500000a,eax
    52a3:	09 03 
    52a5:	1d 40 00 00 00       	sbb    eax,0x40
    52aa:	00 00                	add    BYTE PTR [rax],al
    52ac:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a6b3 <_end+0x309469b>
    52b2:	4a                   	rex.WX
    52b3:	41 00 00             	add    BYTE PTR [r8],al
    52b6:	00 00                	add    BYTE PTR [rax],al
    52b8:	00 00                	add    BYTE PTR [rax],al
    52ba:	05 01 51 02 08       	add    eax,0x8025101
    52bf:	22 05 01 52 09 03    	and    al,BYTE PTR [rip+0x3095201]        # 309a4c6 <_end+0x30944ae>
    52c5:	58                   	pop    rax
    52c6:	44 00 00             	add    BYTE PTR [rax],r8b
    52c9:	00 00                	add    BYTE PTR [rax],al
    52cb:	00 00                	add    BYTE PTR [rax],al
    52cd:	00 00                	add    BYTE PTR [rax],al
    52cf:	15 fc 00 00 00       	adc    eax,0xfc
    52d4:	da 0b                	fimul  DWORD PTR [rbx]
    52d6:	00 00                	add    BYTE PTR [rax],al
    52d8:	16                   	(bad)
    52d9:	3a 00                	cmp    al,BYTE PTR [rax]
    52db:	00 00                	add    BYTE PTR [rax],al
    52dd:	22 00                	and    al,BYTE PTR [rax]
    52df:	0f ca                	bswap  edx
    52e1:	0b 00                	or     eax,DWORD PTR [rax]
    52e3:	00 1c c8             	add    BYTE PTR [rax+rcx*8],bl
    52e6:	09 00                	or     DWORD PTR [rax],eax
    52e8:	00 0b                	add    BYTE PTR [rbx],cl
    52ea:	07                   	(bad)
    52eb:	d1 09                	ror    DWORD PTR [rcx],1
    52ed:	00 00                	add    BYTE PTR [rax],al
    52ef:	bb 01 00 00 80       	mov    ebx,0x80000001
    52f4:	24 00                	and    al,0x0
    52f6:	00 00                	add    BYTE PTR [rax],al
    52f8:	00 00                	add    BYTE PTR [rax],al
    52fa:	00 08                	add    BYTE PTR [rax],cl
    52fc:	01 00                	add    DWORD PTR [rax],eax
    52fe:	00 00                	add    BYTE PTR [rax],al
    5300:	00 00                	add    BYTE PTR [rax],al
    5302:	00 01                	add    BYTE PTR [rcx],al
    5304:	9c                   	pushf
    5305:	f4                   	hlt
    5306:	0d 00 00 10 57       	or     eax,0x57100000
    530b:	0e                   	(bad)
    530c:	00 00                	add    BYTE PTR [rax],al
    530e:	0b 1c f0             	or     ebx,DWORD PTR [rax+rsi*8]
    5311:	00 00                	add    BYTE PTR [rax],al
    5313:	00 41 1a             	add    BYTE PTR [rcx+0x1a],al
    5316:	00 00                	add    BYTE PTR [rax],al
    5318:	33 1a                	xor    ebx,DWORD PTR [rdx]
    531a:	00 00                	add    BYTE PTR [rax],al
    531c:	10 8d 0b 00 00 0b    	adc    BYTE PTR [rbp+0xb00000b],cl
    5322:	2e f4                	cs hlt
    5324:	0d 00 00 83 1a       	or     eax,0x1a830000
    5329:	00 00                	add    BYTE PTR [rax],al
    532b:	79 1a                	jns    5347 <__FRAME_END__+0x51f>
    532d:	00 00                	add    BYTE PTR [rax],al
    532f:	1d b3 03 00 00       	sbb    eax,0x3b3
    5334:	09 0e                	or     DWORD PTR [rsi],ecx
    5336:	00 00                	add    BYTE PTR [rax],al
    5338:	09 03                	or     DWORD PTR [rbx],eax
    533a:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    533e:	00 00                	add    BYTE PTR [rax],al
    5340:	00 00                	add    BYTE PTR [rax],al
    5342:	31 c7                	xor    edi,eax
    5344:	0a 00                	or     al,BYTE PTR [rax]
    5346:	00 01                	add    BYTE PTR [rcx],al
    5348:	0e                   	(bad)
    5349:	11 a4 08 00 00 02 77 	adc    DWORD PTR [rax+rcx*1+0x77020000],esp
    5350:	00 0d 88 0b 00 00    	add    BYTE PTR [rip+0xb88],cl        # 5ede <_DYNAMIC+0x1fe>
    5356:	11 0c 2e             	adc    DWORD PTR [rsi+rbp*1],ecx
    5359:	00 00                	add    BYTE PTR [rax],al
    535b:	00 ac 1a 00 00 aa 1a 	add    BYTE PTR [rdx+rbx*1+0x1aaa0000],ch
    5362:	00 00                	add    BYTE PTR [rax],al
    5364:	0d 20 0b 00 00       	or     eax,0xb20
    5369:	14 09                	adc    al,0x9
    536b:	66 00 00             	data16 add BYTE PTR [rax],al
    536e:	00 b7 1a 00 00 b3    	add    BYTE PTR [rdi-0x4cffffe6],dh
    5374:	1a 00                	sbb    al,BYTE PTR [rax]
    5376:	00 0d 8a 03 00 00    	add    BYTE PTR [rip+0x38a],cl        # 5706 <__FRAME_END__+0x8de>
    537c:	17                   	(bad)
    537d:	0b bb 01 00 00 ca    	or     edi,DWORD PTR [rbx-0x35ffffff]
    5383:	1a 00                	sbb    al,BYTE PTR [rax]
    5385:	00 c6                	add    dh,al
    5387:	1a 00                	sbb    al,BYTE PTR [rax]
    5389:	00 32                	add    BYTE PTR [rdx],dh
    538b:	24 0a                	and    al,0xa
    538d:	00 00                	add    BYTE PTR [rax],al
    538f:	01 1a                	add    DWORD PTR [rdx],ebx
    5391:	0d c0 01 00 00       	or     eax,0x1c0
    5396:	1e                   	(bad)
    5397:	0e                   	(bad)
    5398:	0e                   	(bad)
    5399:	00 00                	add    BYTE PTR [rax],al
    539b:	fa                   	cli
    539c:	24 00                	and    al,0x0
    539e:	00 00                	add    BYTE PTR [rax],al
    53a0:	00 00                	add    BYTE PTR [rax],al
    53a2:	00 01                	add    BYTE PTR [rcx],al
    53a4:	9b                   	fwait
    53a5:	02 00                	add    al,BYTE PTR [rax]
    53a7:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    53aa:	dd 0c 00             	fisttp QWORD PTR [rax+rax*1]
    53ad:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    53b0:	0e                   	(bad)
    53b1:	00 00                	add    BYTE PTR [rax],al
    53b3:	db 1a                	fistp  DWORD PTR [rdx]
    53b5:	00 00                	add    BYTE PTR [rax],al
    53b7:	d9 1a                	fstp   DWORD PTR [rdx]
    53b9:	00 00                	add    BYTE PTR [rax],al
    53bb:	0c 1d                	or     al,0x1d
    53bd:	0e                   	(bad)
    53be:	00 00                	add    BYTE PTR [rax],al
    53c0:	e5 1a                	in     eax,0x1a
    53c2:	00 00                	add    BYTE PTR [rax],al
    53c4:	e3 1a                	jrcxz  53e0 <__FRAME_END__+0x5b8>
    53c6:	00 00                	add    BYTE PTR [rax],al
    53c8:	11 ff                	adc    edi,edi
    53ca:	24 00                	and    al,0x0
    53cc:	00 00                	add    BYTE PTR [rax],al
    53ce:	00 00                	add    BYTE PTR [rax],al
    53d0:	00 09                	add    BYTE PTR [rcx],cl
    53d2:	0a 00                	or     al,BYTE PTR [rax]
    53d4:	00 05 01 55 02 73    	add    BYTE PTR [rip+0x73025501],al        # 7302a8db <_end+0x730248c3>
    53da:	00 05 01 54 01 30    	add    BYTE PTR [rip+0x30015401],al        # 3001a7e1 <_end+0x300147c9>
    53e0:	00 00                	add    BYTE PTR [rax],al
    53e2:	33 37                	xor    esi,DWORD PTR [rdi]
    53e4:	0e                   	(bad)
    53e5:	00 00                	add    BYTE PTR [rax],al
    53e7:	1c 25                	sbb    al,0x25
    53e9:	00 00                	add    BYTE PTR [rax],al
    53eb:	00 00                	add    BYTE PTR [rax],al
    53ed:	00 00                	add    BYTE PTR [rax],al
    53ef:	01 1c 25 00 00 00 00 	add    DWORD PTR ds:0x0,ebx
    53f6:	00 00                	add    BYTE PTR [rax],al
    53f8:	0e                   	(bad)
    53f9:	00 00                	add    BYTE PTR [rax],al
    53fb:	00 00                	add    BYTE PTR [rax],al
    53fd:	00 00                	add    BYTE PTR [rax],al
    53ff:	00 01                	add    BYTE PTR [rcx],al
    5401:	1a 19                	sbb    bl,BYTE PTR [rcx]
    5403:	4a 0d 00 00 0c 5e    	rex.WX or rax,0x5e0c0000
    5409:	0e                   	(bad)
    540a:	00 00                	add    BYTE PTR [rax],al
    540c:	ee                   	out    dx,al
    540d:	1a 00                	sbb    al,BYTE PTR [rax]
    540f:	00 ec                	add    ah,ch
    5411:	1a 00                	sbb    al,BYTE PTR [rax]
    5413:	00 0c 52             	add    BYTE PTR [rdx+rdx*2],cl
    5416:	0e                   	(bad)
    5417:	00 00                	add    BYTE PTR [rax],al
    5419:	fa                   	cli
    541a:	1a 00                	sbb    al,BYTE PTR [rax]
    541c:	00 f6                	add    dh,dh
    541e:	1a 00                	sbb    al,BYTE PTR [rax]
    5420:	00 0c 46             	add    BYTE PTR [rsi+rax*2],cl
    5423:	0e                   	(bad)
    5424:	00 00                	add    BYTE PTR [rax],al
    5426:	0b 1b                	or     ebx,DWORD PTR [rbx]
    5428:	00 00                	add    BYTE PTR [rax],al
    542a:	09 1b                	or     DWORD PTR [rbx],ebx
    542c:	00 00                	add    BYTE PTR [rax],al
    542e:	11 2a                	adc    DWORD PTR [rdx],ebp
    5430:	25 00 00 00 00       	and    eax,0x0
    5435:	00 00                	add    BYTE PTR [rax],al
    5437:	e5 09                	in     eax,0x9
    5439:	00 00                	add    BYTE PTR [rax],al
    543b:	05 01 55 02 7c       	add    eax,0x7c025501
    5440:	00 05 01 54 02 73    	add    BYTE PTR [rip+0x73025401],al        # 7302a847 <_end+0x7302482f>
    5446:	00 05 01 51 02 7d    	add    BYTE PTR [rip+0x7d025101],al        # 7d02a54d <_end+0x7d024535>
    544c:	00 00                	add    BYTE PTR [rax],al
    544e:	00 34 e0             	add    BYTE PTR [rax+riz*8],dh
    5451:	24 00                	and    al,0x0
    5453:	00 00                	add    BYTE PTR [rax],al
    5455:	00 00                	add    BYTE PTR [rax],al
    5457:	00 01                	add    BYTE PTR [rcx],al
    5459:	30 12                	xor    BYTE PTR [rdx],dl
    545b:	e5 24                	in     eax,0x24
    545d:	00 00                	add    BYTE PTR [rax],al
    545f:	00 00                	add    BYTE PTR [rax],al
    5461:	00 00                	add    BYTE PTR [rax],al
    5463:	83 0a 00             	or     DWORD PTR [rdx],0x0
    5466:	00 73 0d             	add    BYTE PTR [rbx+0xd],dh
    5469:	00 00                	add    BYTE PTR [rax],al
    546b:	05 01 55 02 73       	add    eax,0x73025501
    5470:	00 05 01 54 02 77    	add    BYTE PTR [rip+0x77025401],al        # 7702a877 <_end+0x7702485f>
    5476:	00 00                	add    BYTE PTR [rax],al
    5478:	12 14 25 00 00 00 00 	adc    dl,BYTE PTR ds:0x0
    547f:	00 00                	add    BYTE PTR [rax],al
    5481:	67 0a 00             	or     al,BYTE PTR [eax]
    5484:	00 90 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],dl
    548a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    548d:	7d 00                	jge    548f <__FRAME_END__+0x667>
    548f:	05 01 54 01 31       	add    eax,0x31015401
    5494:	00 12                	add    BYTE PTR [rdx],dl
    5496:	32 25 00 00 00 00    	xor    ah,BYTE PTR [rip+0x0]        # 549c <__FRAME_END__+0x674>
    549c:	00 00                	add    BYTE PTR [rax],al
    549e:	50                   	push   rax
    549f:	0a 00                	or     al,BYTE PTR [rax]
    54a1:	00 a8 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],ch
    54a7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    54aa:	7c 00                	jl     54ac <__FRAME_END__+0x684>
    54ac:	00 12                	add    BYTE PTR [rdx],dl
    54ae:	83 25 00 00 00 00 00 	and    DWORD PTR [rip+0x0],0x0        # 54b5 <__FRAME_END__+0x68d>
    54b5:	00 a3 0a 00 00 e6    	add    BYTE PTR [rbx-0x19fffff6],ah
    54bb:	0d 00 00 05 01       	or     eax,0x1050000
    54c0:	55                   	push   rbp
    54c1:	09 03                	or     DWORD PTR [rbx],eax
    54c3:	66 41 00 00          	data16 add BYTE PTR [r8],al
    54c7:	00 00                	add    BYTE PTR [rax],al
    54c9:	00 00                	add    BYTE PTR [rax],al
    54cb:	05 01 54 09 03       	add    eax,0x3095401
    54d0:	4a                   	rex.WX
    54d1:	41 00 00             	add    BYTE PTR [r8],al
    54d4:	00 00                	add    BYTE PTR [rax],al
    54d6:	00 00                	add    BYTE PTR [rax],al
    54d8:	05 01 51 01 3c       	add    eax,0x3c015101
    54dd:	05 01 52 09 03       	add    eax,0x3095201
    54e2:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    54e6:	00 00                	add    BYTE PTR [rax],al
    54e8:	00 00                	add    BYTE PTR [rax],al
    54ea:	00 35 88 25 00 00    	add    BYTE PTR [rip+0x2588],dh        # 7a78 <_end+0x1a60>
    54f0:	00 00                	add    BYTE PTR [rax],al
    54f2:	00 00                	add    BYTE PTR [rax],al
    54f4:	a0 0e 00 00 00 09 2e 	movabs al,ds:0x2e090000000e
    54fb:	00 00 
    54fd:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 55ff <__FRAME_END__+0x7d7>
    5503:	09 0e                	or     DWORD PTR [rsi],ecx
    5505:	00 00                	add    BYTE PTR [rax],al
    5507:	16                   	(bad)
    5508:	3a 00                	cmp    al,BYTE PTR [rax]
    550a:	00 00                	add    BYTE PTR [rax],al
    550c:	24 00                	and    al,0x0
    550e:	0f f9 0d 00 00 1f d3 	psubw  mm1,QWORD PTR [rip+0xffffffffd31f0000]        # ffffffffd31f5515 <_end+0xffffffffd31ef4fd>
    5515:	2d 00 00 02 29       	sub    eax,0x29020000
    551a:	66 00 00             	data16 add BYTE PTR [rax],al
    551d:	00 37                	add    BYTE PTR [rdi],dh
    551f:	0e                   	(bad)
    5520:	00 00                	add    BYTE PTR [rax],al
    5522:	0e                   	(bad)
    5523:	af                   	scas   eax,DWORD PTR es:[rdi]
    5524:	09 00                	or     DWORD PTR [rax],eax
    5526:	00 02                	add    BYTE PTR [rdx],al
    5528:	29 13                	sub    DWORD PTR [rbx],edx
    552a:	f0 00 00             	lock add BYTE PTR [rax],al
    552d:	00 0e                	add    BYTE PTR [rsi],cl
    552f:	f7 09 00 00 02 29    	test   DWORD PTR [rcx],0x29020000
    5535:	1f                   	(bad)
    5536:	66 00 00             	data16 add BYTE PTR [rax],al
    5539:	00 1a                	add    BYTE PTR [rdx],bl
    553b:	00 1f                	add    BYTE PTR [rdi],bl
    553d:	62 32 00 00 03       	(bad)
    5542:	1a c0                	sbb    al,al
    5544:	01 00                	add    DWORD PTR [rax],eax
    5546:	00 6b 0e             	add    BYTE PTR [rbx+0xe],ch
    5549:	00 00                	add    BYTE PTR [rax],al
    554b:	0e                   	(bad)
    554c:	78 0a                	js     5558 <__FRAME_END__+0x730>
    554e:	00 00                	add    BYTE PTR [rax],al
    5550:	03 1a                	add    ebx,DWORD PTR [rdx]
    5552:	0b 66 00             	or     esp,DWORD PTR [rsi+0x0]
    5555:	00 00                	add    BYTE PTR [rax],al
    5557:	0e                   	(bad)
    5558:	dd 0a                	fisttp QWORD PTR [rdx]
    555a:	00 00                	add    BYTE PTR [rax],al
    555c:	03 1a                	add    ebx,DWORD PTR [rdx]
    555e:	17                   	(bad)
    555f:	89 01                	mov    DWORD PTR [rcx],eax
    5561:	00 00                	add    BYTE PTR [rax],al
    5563:	0e                   	(bad)
    5564:	34 0a                	xor    al,0xa
    5566:	00 00                	add    BYTE PTR [rax],al
    5568:	03 1a                	add    ebx,DWORD PTR [rdx]
    556a:	25 2e 00 00 00       	and    eax,0x2e
    556f:	00 36                	add    BYTE PTR [rsi],dh
    5571:	1a 05 00 00 04 e9    	sbb    al,BYTE PTR [rip+0xffffffffe9040000]        # ffffffffe9045577 <_end+0xffffffffe903f55f>
    5577:	01 1a                	add    DWORD PTR [rdx],ebx
    5579:	05 00 00 bb 01       	add    eax,0x1bb0000
    557e:	00 00                	add    BYTE PTR [rax],al
    5580:	03 97 0e 00 00 20    	add    edx,DWORD PTR [rdi+0x2000000e]
    5586:	5f                   	pop    rdi
    5587:	5f                   	pop    rdi
    5588:	73 00                	jae    558a <__FRAME_END__+0x762>
    558a:	e9 0f bb 01 00       	jmp    2109e <_end+0x1b086>
    558f:	00 20                	add    BYTE PTR [rax],ah
    5591:	5f                   	pop    rdi
    5592:	5f                   	pop    rdi
    5593:	63 00                	movsxd eax,DWORD PTR [rax]
    5595:	e9 18 66 00 00       	jmp    bbb2 <_end+0x5b9a>
    559a:	00 00                	add    BYTE PTR [rax],al
    559c:	21 1a                	and    DWORD PTR [rdx],ebx
    559e:	05 00 00 10 05       	add    eax,0x5100000
    55a3:	00 00                	add    BYTE PTR [rax],al
    55a5:	21 ba 05 00 00 ba    	and    DWORD PTR [rdx-0x45fffffb],edi
    55ab:	05 00 00 00 44       	add    eax,0x44000000
    55b0:	76 00                	jbe    55b2 <__FRAME_END__+0x78a>
    55b2:	00 05 00 01 08 75    	add    BYTE PTR [rip+0x75080100],al        # 750856b8 <_end+0x7507f6a0>
    55b8:	12 00                	adc    al,BYTE PTR [rax]
    55ba:	00 66 14             	add    BYTE PTR [rsi+0x14],ah
    55bd:	01 00                	add    DWORD PTR [rax],eax
    55bf:	00 21                	add    BYTE PTR [rcx],ah
    55c1:	eb 02                	jmp    55c5 <__FRAME_END__+0x79d>
    55c3:	00 00                	add    BYTE PTR [rax],al
    55c5:	00 00                	add    BYTE PTR [rax],al
    55c7:	00 00                	add    BYTE PTR [rax],al
    55c9:	00 26                	add    BYTE PTR [rsi],ah
    55cb:	00 00                	add    BYTE PTR [rax],al
    55cd:	00 00                	add    BYTE PTR [rax],al
    55cf:	00 00                	add    BYTE PTR [rax],al
    55d1:	3c 15                	cmp    al,0x15
    55d3:	00 00                	add    BYTE PTR [rax],al
    55d5:	00 00                	add    BYTE PTR [rax],al
    55d7:	00 00                	add    BYTE PTR [rax],al
    55d9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    55da:	19 00                	sbb    DWORD PTR [rax],eax
    55dc:	00 12                	add    BYTE PTR [rdx],dl
    55de:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    55e1:	01 00                	add    DWORD PTR [rax],eax
    55e3:	00 12                	add    BYTE PTR [rdx],dl
    55e5:	04 04                	add    al,0x4
    55e7:	d3 00                	rol    DWORD PTR [rax],cl
    55e9:	00 00                	add    BYTE PTR [rax],al
    55eb:	67 73 74             	addr32 jae 5662 <__FRAME_END__+0x83a>
    55ee:	64 00 11             	add    BYTE PTR fs:[rcx],dl
    55f1:	32 01                	xor    al,BYTE PTR [rcx]
    55f3:	0b e3                	or     esp,ebx
    55f5:	20 00                	and    BYTE PTR [rax],al
    55f7:	00 18                	add    BYTE PTR [rax],bl
    55f9:	03 59 07             	add    ebx,DWORD PTR [rcx+0x7]
    55fc:	0b ff                	or     edi,edi
    55fe:	22 00                	and    al,BYTE PTR [rax]
    5600:	00 18                	add    BYTE PTR [rax],bl
    5602:	03 5a 07             	add    ebx,DWORD PTR [rdx+0x7]
    5605:	0b f3                	or     esi,ebx
    5607:	22 00                	and    al,BYTE PTR [rax]
    5609:	00 4f bc             	add    BYTE PTR [rdi-0x44],cl
    560c:	2b 00                	sub    eax,DWORD PTR [rax]
    560e:	00 b0 0a 4f c4 2f    	add    BYTE PTR [rax+0x2fc44f0a],dh
    5614:	00 00                	add    BYTE PTR [rax],al
    5616:	06                   	(bad)
    5617:	0b 3d d8 2d 00 00    	or     edi,DWORD PTR [rip+0x2dd8]        # 83f5 <_end+0x23dd>
    561d:	06                   	(bad)
    561e:	32 0d 1a 61 62 73    	xor    cl,BYTE PTR [rip+0x7362611a]        # 7362b73e <_end+0x73625726>
    5624:	00 07                	add    BYTE PTR [rdi],al
    5626:	89 0f                	mov    DWORD PTR [rdi],ecx
    5628:	03 00                	add    eax,DWORD PTR [rax]
    562a:	00 cb                	add    bl,cl
    562c:	24 00                	and    al,0x0
    562e:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    5634:	cb                   	retf
    5635:	24 00                	and    al,0x0
    5637:	00 00                	add    BYTE PTR [rax],al
    5639:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    563c:	73 00                	jae    563e <__FRAME_END__+0x816>
    563e:	07                   	(bad)
    563f:	55                   	push   rbp
    5640:	1b 00                	sbb    eax,DWORD PTR [rax]
    5642:	00 00                	add    BYTE PTR [rax],al
    5644:	95                   	xchg   ebp,eax
    5645:	24 00                	and    al,0x0
    5647:	00 a3 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],ah
    564d:	95                   	xchg   ebp,eax
    564e:	24 00                	and    al,0x0
    5650:	00 00                	add    BYTE PTR [rax],al
    5652:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5655:	73 00                	jae    5657 <__FRAME_END__+0x82f>
    5657:	07                   	(bad)
    5658:	4f fb                	rex.WRXB sti
    565a:	02 00                	add    al,BYTE PTR [rax]
    565c:	00 c5                	add    ch,al
    565e:	21 00                	and    DWORD PTR [rax],eax
    5660:	00 bc 00 00 00 01 c5 	add    BYTE PTR [rax+rax*1-0x3aff0000],bh
    5667:	21 00                	and    DWORD PTR [rax],eax
    5669:	00 00                	add    BYTE PTR [rax],al
    566b:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    566e:	73 00                	jae    5670 <__FRAME_END__+0x848>
    5670:	07                   	(bad)
    5671:	4b 05 03 00 00 35    	rex.WXB add rax,0x35000003
    5677:	00 00                	add    BYTE PTR [rax],al
    5679:	00 d5                	add    ch,dl
    567b:	00 00                	add    BYTE PTR [rax],al
    567d:	00 01                	add    BYTE PTR [rcx],al
    567f:	35 00 00 00 00       	xor    eax,0x0
    5684:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5687:	73 00                	jae    5689 <__FRAME_END__+0x861>
    5689:	07                   	(bad)
    568a:	47 f1                	rex.RXB int1
    568c:	02 00                	add    al,BYTE PTR [rax]
    568e:	00 2e                	add    BYTE PTR [rsi],ch
    5690:	00 00                	add    BYTE PTR [rax],al
    5692:	00 ee                	add    dh,ch
    5694:	00 00                	add    BYTE PTR [rax],al
    5696:	00 01                	add    BYTE PTR [rcx],al
    5698:	2e 00 00             	cs add BYTE PTR [rax],al
    569b:	00 00                	add    BYTE PTR [rax],al
    569d:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    56a0:	73 00                	jae    56a2 <__FRAME_END__+0x87a>
    56a2:	07                   	(bad)
    56a3:	3d 41 00 00 00       	cmp    eax,0x41
    56a8:	be 21 00 00 07       	mov    esi,0x7000021
    56ad:	01 00                	add    DWORD PTR [rax],eax
    56af:	00 01                	add    BYTE PTR [rcx],al
    56b1:	be 21 00 00 00       	mov    esi,0x21
    56b6:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    56b9:	73 00                	jae    56bb <__FRAME_END__+0x893>
    56bb:	07                   	(bad)
    56bc:	38 11                	cmp    BYTE PTR [rcx],dl
    56be:	00 00                	add    BYTE PTR [rax],al
    56c0:	00 b2 21 00 00 20    	add    BYTE PTR [rdx+0x20000021],dh
    56c6:	01 00                	add    DWORD PTR [rax],eax
    56c8:	00 01                	add    BYTE PTR [rcx],al
    56ca:	b2 21                	mov    dl,0x21
    56cc:	00 00                	add    BYTE PTR [rax],al
    56ce:	00 0f                	add    BYTE PTR [rdi],cl
    56d0:	50                   	push   rax
    56d1:	29 00                	sub    DWORD PTR [rax],eax
    56d3:	00 03                	add    BYTE PTR [rbx],al
    56d5:	5d                   	pop    rbp
    56d6:	03 94 24 00 00 c5 21 	add    edx,DWORD PTR [rsp+0x21c50000]
    56dd:	00 00                	add    BYTE PTR [rax],al
    56df:	3a 01                	cmp    al,BYTE PTR [rcx]
    56e1:	00 00                	add    BYTE PTR [rax],al
    56e3:	01 c5                	add    ebp,eax
    56e5:	21 00                	and    DWORD PTR [rax],eax
    56e7:	00 00                	add    BYTE PTR [rax],al
    56e9:	0f                   	movmskps ebp,(bad)
    56ea:	50                   	push   rax
    56eb:	29 00                	sub    DWORD PTR [rax],eax
    56ed:	00 03                	add    BYTE PTR [rbx],al
    56ef:	59                   	pop    rcx
    56f0:	03 9f 24 00 00 35    	add    ebx,DWORD PTR [rdi+0x35000024]
    56f6:	00 00                	add    BYTE PTR [rax],al
    56f8:	00 54 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dl
    56fc:	00 01                	add    BYTE PTR [rcx],al
    56fe:	35 00 00 00 00       	xor    eax,0x0
    5703:	0f b8                	(bad)
    5705:	29 00                	sub    DWORD PTR [rax],eax
    5707:	00 03                	add    BYTE PTR [rbx],al
    5709:	70 03                	jo     570e <__FRAME_END__+0x8e6>
    570b:	7d 18                	jge    5725 <__FRAME_END__+0x8fd>
    570d:	00 00                	add    BYTE PTR [rax],al
    570f:	c5 21 00             	(bad)
    5712:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    5715:	00 00                	add    BYTE PTR [rax],al
    5717:	01 c5                	add    ebp,eax
    5719:	21 00                	and    DWORD PTR [rax],eax
    571b:	00 00                	add    BYTE PTR [rax],al
    571d:	0f b8                	(bad)
    571f:	29 00                	sub    DWORD PTR [rax],eax
    5721:	00 03                	add    BYTE PTR [rbx],al
    5723:	6c                   	ins    BYTE PTR es:[rdi],dx
    5724:	03 88 18 00 00 35    	add    ecx,DWORD PTR [rax+0x35000018]
    572a:	00 00                	add    BYTE PTR [rax],al
    572c:	00 88 01 00 00 01    	add    BYTE PTR [rax+0x1000001],cl
    5732:	35 00 00 00 00       	xor    eax,0x0
    5737:	0f a0                	push   fs
    5739:	26 00 00             	es add BYTE PTR [rax],al
    573c:	03 83 03 67 14 00    	add    eax,DWORD PTR [rbx+0x146703]
    5742:	00 c5                	add    ch,al
    5744:	21 00                	and    DWORD PTR [rax],eax
    5746:	00 a2 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],ah
    574c:	c5 21 00             	(bad)
    574f:	00 00                	add    BYTE PTR [rax],al
    5751:	0f a0                	push   fs
    5753:	26 00 00             	es add BYTE PTR [rax],al
    5756:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    5759:	72 14                	jb     576f <__FRAME_END__+0x947>
    575b:	00 00                	add    BYTE PTR [rax],al
    575d:	35 00 00 00 bc       	xor    eax,0xbc000000
    5762:	01 00                	add    DWORD PTR [rax],eax
    5764:	00 01                	add    BYTE PTR [rcx],al
    5766:	35 00 00 00 00       	xor    eax,0x0
    576b:	0f 42 32             	cmovb  esi,DWORD PTR [rdx]
    576e:	00 00                	add    BYTE PTR [rax],al
    5770:	03 96 03 67 23 00    	add    edx,DWORD PTR [rsi+0x236703]
    5776:	00 c5                	add    ch,al
    5778:	21 00                	and    DWORD PTR [rax],eax
    577a:	00 db                	add    bl,bl
    577c:	01 00                	add    DWORD PTR [rax],eax
    577e:	00 01                	add    BYTE PTR [rcx],al
    5780:	c5 21 00             	(bad)
    5783:	00 01                	add    BYTE PTR [rcx],al
    5785:	c5 21 00             	(bad)
    5788:	00 00                	add    BYTE PTR [rax],al
    578a:	0f 42 32             	cmovb  esi,DWORD PTR [rdx]
    578d:	00 00                	add    BYTE PTR [rax],al
    578f:	03 92 03 e5 24 00    	add    edx,DWORD PTR [rdx+0x24e503]
    5795:	00 35 00 00 00 fa    	add    BYTE PTR [rip+0xfffffffffa000000],dh        # fffffffffa00579b <_end+0xfffffffff9fff783>
    579b:	01 00                	add    DWORD PTR [rax],eax
    579d:	00 01                	add    BYTE PTR [rcx],al
    579f:	35 00 00 00 01       	xor    eax,0x1000000
    57a4:	35 00 00 00 00       	xor    eax,0x0
    57a9:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    57ac:	73 00                	jae    57ae <__FRAME_END__+0x986>
    57ae:	03 b5 b0 25 00 00    	add    esi,DWORD PTR [rbp+0x25b0]
    57b4:	c5 21 00             	(bad)
    57b7:	00 13                	add    BYTE PTR [rbx],dl
    57b9:	02 00                	add    al,BYTE PTR [rax]
    57bb:	00 01                	add    BYTE PTR [rcx],al
    57bd:	c5 21 00             	(bad)
    57c0:	00 00                	add    BYTE PTR [rax],al
    57c2:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    57c5:	73 00                	jae    57c7 <__FRAME_END__+0x99f>
    57c7:	03 b1 ba 25 00 00    	add    esi,DWORD PTR [rcx+0x25ba]
    57cd:	35 00 00 00 2c       	xor    eax,0x2c000000
    57d2:	02 00                	add    al,BYTE PTR [rax]
    57d4:	00 01                	add    BYTE PTR [rcx],al
    57d6:	35 00 00 00 00       	xor    eax,0x0
    57db:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    57e0:	94                   	xchg   esp,eax
    57e1:	01 99 19 00 00 c5    	add    DWORD PTR [rcx-0x3affffe7],ebx
    57e7:	21 00                	and    DWORD PTR [rax],eax
    57e9:	00 45 02             	add    BYTE PTR [rbp+0x2],al
    57ec:	00 00                	add    BYTE PTR [rax],al
    57ee:	01 c5                	add    ebp,eax
    57f0:	21 00                	and    DWORD PTR [rax],eax
    57f2:	00 00                	add    BYTE PTR [rax],al
    57f4:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    57f9:	90                   	nop
    57fa:	01 a3 19 00 00 35    	add    DWORD PTR [rbx+0x35000019],esp
    5800:	00 00                	add    BYTE PTR [rax],al
    5802:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
    5805:	00 00                	add    BYTE PTR [rax],al
    5807:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 580d <__FRAME_END__+0x9e5>
    580d:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    5812:	cd 01                	int    0x1
    5814:	e4 31                	in     al,0x31
    5816:	00 00                	add    BYTE PTR [rax],al
    5818:	c5 21 00             	(bad)
    581b:	00 77 02             	add    BYTE PTR [rdi+0x2],dh
    581e:	00 00                	add    BYTE PTR [rax],al
    5820:	01 c5                	add    ebp,eax
    5822:	21 00                	and    DWORD PTR [rax],eax
    5824:	00 00                	add    BYTE PTR [rax],al
    5826:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    582b:	c9                   	leave
    582c:	01 9a 15 00 00 35    	add    DWORD PTR [rdx+0x35000015],ebx
    5832:	00 00                	add    BYTE PTR [rax],al
    5834:	00 90 02 00 00 01    	add    BYTE PTR [rax+0x1000002],dl
    583a:	35 00 00 00 00       	xor    eax,0x0
    583f:	0f 1f 2a             	nop    DWORD PTR [rdx]
    5842:	00 00                	add    BYTE PTR [rax],al
    5844:	03 c8                	add    ecx,eax
    5846:	03 8d 2d 00 00 c5    	add    ecx,DWORD PTR [rbp-0x3affffd3]
    584c:	21 00                	and    DWORD PTR [rax],eax
    584e:	00 aa 02 00 00 01    	add    BYTE PTR [rdx+0x1000002],ch
    5854:	c5 21 00             	(bad)
    5857:	00 00                	add    BYTE PTR [rax],al
    5859:	0f 1f 2a             	nop    DWORD PTR [rdx]
    585c:	00 00                	add    BYTE PTR [rax],al
    585e:	03 c4                	add    eax,esp
    5860:	03 98 2d 00 00 35    	add    ebx,DWORD PTR [rax+0x3500002d]
    5866:	00 00                	add    BYTE PTR [rax],al
    5868:	00 c4                	add    ah,al
    586a:	02 00                	add    al,BYTE PTR [rax]
    586c:	00 01                	add    BYTE PTR [rcx],al
    586e:	35 00 00 00 00       	xor    eax,0x0
    5873:	04 eb                	add    al,0xeb
    5875:	1e                   	(bad)
    5876:	00 00                	add    BYTE PTR [rax],al
    5878:	03 a7 01 03 df 1e    	add    esp,DWORD PTR [rdi+0x1edf0301]
    587e:	00 00                	add    BYTE PTR [rax],al
    5880:	c5 21 00             	(bad)
    5883:	00 df                	add    bh,bl
    5885:	02 00                	add    al,BYTE PTR [rax]
    5887:	00 01                	add    BYTE PTR [rcx],al
    5889:	c5 21 00             	(bad)
    588c:	00 00                	add    BYTE PTR [rax],al
    588e:	04 eb                	add    al,0xeb
    5890:	1e                   	(bad)
    5891:	00 00                	add    BYTE PTR [rax],al
    5893:	03 a3 01 03 48 17    	add    esp,DWORD PTR [rbx+0x17480301]
    5899:	00 00                	add    BYTE PTR [rax],al
    589b:	35 00 00 00 fa       	xor    eax,0xfa000000
    58a0:	02 00                	add    al,BYTE PTR [rax]
    58a2:	00 01                	add    BYTE PTR [rcx],al
    58a4:	35 00 00 00 00       	xor    eax,0x0
    58a9:	04 1b                	add    al,0x1b
    58ab:	25 00 00 03 e0       	and    eax,0xe0030000
    58b0:	01 03                	add    DWORD PTR [rbx],eax
    58b2:	2c 10                	sub    al,0x10
    58b4:	00 00                	add    BYTE PTR [rax],al
    58b6:	c5 21 00             	(bad)
    58b9:	00 15 03 00 00 01    	add    BYTE PTR [rip+0x1000003],dl        # 10058c2 <_end+0xfff8aa>
    58bf:	c5 21 00             	(bad)
    58c2:	00 00                	add    BYTE PTR [rax],al
    58c4:	04 1b                	add    al,0x1b
    58c6:	25 00 00 03 dc       	and    eax,0xdc030000
    58cb:	01 03                	add    DWORD PTR [rbx],eax
    58cd:	37                   	(bad)
    58ce:	10 00                	adc    BYTE PTR [rax],al
    58d0:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 300058d6 <_end+0x2ffff8be>
    58d6:	03 00                	add    eax,DWORD PTR [rax]
    58d8:	00 01                	add    BYTE PTR [rcx],al
    58da:	35 00 00 00 00       	xor    eax,0x0
    58df:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    58e2:	70 00                	jo     58e4 <__FRAME_END__+0xabc>
    58e4:	03 db                	add    ebx,ebx
    58e6:	f4                   	hlt
    58e7:	0d 00 00 c5 21       	or     eax,0x21c50000
    58ec:	00 00                	add    BYTE PTR [rax],al
    58ee:	49 03 00             	add    rax,QWORD PTR [r8]
    58f1:	00 01                	add    BYTE PTR [rcx],al
    58f3:	c5 21 00             	(bad)
    58f6:	00 00                	add    BYTE PTR [rax],al
    58f8:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    58fb:	70 00                	jo     58fd <__FRAME_END__+0xad5>
    58fd:	03 d7                	add    edx,edi
    58ff:	a2 1a 00 00 35 00 00 	movabs ds:0x620000003500001a,al
    5906:	00 62 
    5908:	03 00                	add    eax,DWORD PTR [rax]
    590a:	00 01                	add    BYTE PTR [rcx],al
    590c:	35 00 00 00 00       	xor    eax,0x0
    5911:	04 b0                	add    al,0xb0
    5913:	27                   	(bad)
    5914:	00 00                	add    BYTE PTR [rax],al
    5916:	03 20                	add    esp,DWORD PTR [rax]
    5918:	01 03                	add    DWORD PTR [rbx],eax
    591a:	ca 1c 00             	retf   0x1c
    591d:	00 c5                	add    ch,al
    591f:	21 00                	and    DWORD PTR [rax],eax
    5921:	00 82 03 00 00 01    	add    BYTE PTR [rdx+0x1000003],al
    5927:	c5 21 00             	(bad)
    592a:	00 01                	add    BYTE PTR [rcx],al
    592c:	ba 25 00 00 00       	mov    edx,0x25
    5931:	04 b0                	add    al,0xb0
    5933:	27                   	(bad)
    5934:	00 00                	add    BYTE PTR [rax],al
    5936:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    5939:	03 64 24 00          	add    esp,DWORD PTR [rsp+0x0]
    593d:	00 35 00 00 00 a2    	add    BYTE PTR [rip+0xffffffffa2000000],dh        # ffffffffa2005943 <_end+0xffffffffa1fff92b>
    5943:	03 00                	add    eax,DWORD PTR [rax]
    5945:	00 01                	add    BYTE PTR [rcx],al
    5947:	35 00 00 00 01       	xor    eax,0x1000000
    594c:	ba 25 00 00 00       	mov    edx,0x25
    5951:	04 a4                	add    al,0xa4
    5953:	11 00                	adc    DWORD PTR [rax],eax
    5955:	00 03                	add    BYTE PTR [rbx],al
    5957:	33 01                	xor    eax,DWORD PTR [rcx]
    5959:	03 fe                	add    edi,esi
    595b:	31 00                	xor    DWORD PTR [rax],eax
    595d:	00 c5                	add    ch,al
    595f:	21 00                	and    DWORD PTR [rax],eax
    5961:	00 c2                	add    dl,al
    5963:	03 00                	add    eax,DWORD PTR [rax]
    5965:	00 01                	add    BYTE PTR [rcx],al
    5967:	c5 21 00             	(bad)
    596a:	00 01                	add    BYTE PTR [rcx],al
    596c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    596d:	21 00                	and    DWORD PTR [rax],eax
    596f:	00 00                	add    BYTE PTR [rax],al
    5971:	04 a4                	add    al,0xa4
    5973:	11 00                	adc    DWORD PTR [rax],eax
    5975:	00 03                	add    BYTE PTR [rbx],al
    5977:	2f                   	(bad)
    5978:	01 03                	add    DWORD PTR [rbx],eax
    597a:	6c                   	ins    BYTE PTR es:[rdi],dx
    597b:	1f                   	(bad)
    597c:	00 00                	add    BYTE PTR [rax],al
    597e:	35 00 00 00 e2       	xor    eax,0xe2000000
    5983:	03 00                	add    eax,DWORD PTR [rax]
    5985:	00 01                	add    BYTE PTR [rcx],al
    5987:	35 00 00 00 01       	xor    eax,0x1000000
    598c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    598d:	21 00                	and    DWORD PTR [rax],eax
    598f:	00 00                	add    BYTE PTR [rax],al
    5991:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    5996:	46 01 d0             	rex.RX add eax,r10d
    5999:	2b 00                	sub    eax,DWORD PTR [rax]
    599b:	00 c5                	add    ch,al
    599d:	21 00                	and    DWORD PTR [rax],eax
    599f:	00 fb                	add    bl,bh
    59a1:	03 00                	add    eax,DWORD PTR [rax]
    59a3:	00 01                	add    BYTE PTR [rcx],al
    59a5:	c5 21 00             	(bad)
    59a8:	00 00                	add    BYTE PTR [rax],al
    59aa:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    59af:	42 01 da             	rex.X add edx,ebx
    59b2:	2b 00                	sub    eax,DWORD PTR [rax]
    59b4:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 140059ba <_end+0x13fff9a2>
    59ba:	04 00                	add    al,0x0
    59bc:	00 01                	add    BYTE PTR [rcx],al
    59be:	35 00 00 00 00       	xor    eax,0x0
    59c3:	04 7f                	add    al,0x7f
    59c5:	17                   	(bad)
    59c6:	00 00                	add    BYTE PTR [rax],al
    59c8:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    59cb:	03 71 0c             	add    esi,DWORD PTR [rcx+0xc]
    59ce:	00 00                	add    BYTE PTR [rax],al
    59d0:	c5 21 00             	(bad)
    59d3:	00 2f                	add    BYTE PTR [rdi],ch
    59d5:	04 00                	add    al,0x0
    59d7:	00 01                	add    BYTE PTR [rcx],al
    59d9:	c5 21 00             	(bad)
    59dc:	00 00                	add    BYTE PTR [rax],al
    59de:	04 7f                	add    al,0x7f
    59e0:	17                   	(bad)
    59e1:	00 00                	add    BYTE PTR [rax],al
    59e3:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    59e6:	03 7d 0c             	add    edi,DWORD PTR [rbp+0xc]
    59e9:	00 00                	add    BYTE PTR [rax],al
    59eb:	35 00 00 00 4a       	xor    eax,0x4a000000
    59f0:	04 00                	add    al,0x0
    59f2:	00 01                	add    BYTE PTR [rcx],al
    59f4:	35 00 00 00 00       	xor    eax,0x0
    59f9:	04 86                	add    al,0x86
    59fb:	14 00                	adc    al,0x0
    59fd:	00 03                	add    BYTE PTR [rbx],al
    59ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    5a00:	01 03                	add    DWORD PTR [rbx],eax
    5a02:	75 15                	jne    5a19 <__FRAME_END__+0xbf1>
    5a04:	00 00                	add    BYTE PTR [rax],al
    5a06:	c5 21 00             	(bad)
    5a09:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    5a0c:	00 00                	add    BYTE PTR [rax],al
    5a0e:	01 c5                	add    ebp,eax
    5a10:	21 00                	and    DWORD PTR [rax],eax
    5a12:	00 01                	add    BYTE PTR [rcx],al
    5a14:	ff 25 00 00 00 04    	jmp    QWORD PTR [rip+0x4000000]        # 4005a1a <_end+0x3fffa02>
    5a1a:	86 14 00             	xchg   BYTE PTR [rax+rax*1],dl
    5a1d:	00 03                	add    BYTE PTR [rbx],al
    5a1f:	68 01 03 dc 1d       	push   0x1ddc0301
    5a24:	00 00                	add    BYTE PTR [rax],al
    5a26:	35 00 00 00 8a       	xor    eax,0x8a000000
    5a2b:	04 00                	add    al,0x0
    5a2d:	00 01                	add    BYTE PTR [rcx],al
    5a2f:	35 00 00 00 01       	xor    eax,0x1000000
    5a34:	0c 26                	or     al,0x26
    5a36:	00 00                	add    BYTE PTR [rax],al
    5a38:	00 1d 70 6f 77 00    	add    BYTE PTR [rip+0x776f70],bl        # 77c9ae <_end+0x776996>
    5a3e:	78 01                	js     5a41 <__FRAME_END__+0xc19>
    5a40:	3c 30                	cmp    al,0x30
    5a42:	00 00                	add    BYTE PTR [rax],al
    5a44:	c5 21 00             	(bad)
    5a47:	00 a8 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ch
    5a4d:	c5 21 00             	(bad)
    5a50:	00 01                	add    BYTE PTR [rcx],al
    5a52:	c5 21 00             	(bad)
    5a55:	00 00                	add    BYTE PTR [rax],al
    5a57:	1d 70 6f 77 00       	sbb    eax,0x776f70
    5a5c:	74 01                	je     5a5f <__FRAME_END__+0xc37>
    5a5e:	4d 31 00             	xor    QWORD PTR [r8],r8
    5a61:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc6005a67 <_end+0xffffffffc5fffa4f>
    5a67:	04 00                	add    al,0x0
    5a69:	00 01                	add    BYTE PTR [rcx],al
    5a6b:	35 00 00 00 01       	xor    eax,0x1000000
    5a70:	35 00 00 00 00       	xor    eax,0x0
    5a75:	04 ef                	add    al,0xef
    5a77:	0d 00 00 03 ba       	or     eax,0xba030000
    5a7c:	01 03                	add    DWORD PTR [rbx],eax
    5a7e:	7c 22                	jl     5aa2 <__FRAME_END__+0xc7a>
    5a80:	00 00                	add    BYTE PTR [rax],al
    5a82:	c5 21 00             	(bad)
    5a85:	00 e1                	add    cl,ah
    5a87:	04 00                	add    al,0x0
    5a89:	00 01                	add    BYTE PTR [rcx],al
    5a8b:	c5 21 00             	(bad)
    5a8e:	00 00                	add    BYTE PTR [rax],al
    5a90:	04 ef                	add    al,0xef
    5a92:	0d 00 00 03 b6       	or     eax,0xb6030000
    5a97:	01 03                	add    DWORD PTR [rbx],eax
    5a99:	87 22                	xchg   DWORD PTR [rdx],esp
    5a9b:	00 00                	add    BYTE PTR [rax],al
    5a9d:	35 00 00 00 fc       	xor    eax,0xfc000000
    5aa2:	04 00                	add    al,0x0
    5aa4:	00 01                	add    BYTE PTR [rcx],al
    5aa6:	35 00 00 00 00       	xor    eax,0x0
    5aab:	0f 0b                	ud2
    5aad:	32 00                	xor    al,BYTE PTR [rax]
    5aaf:	00 03                	add    BYTE PTR [rbx],al
    5ab1:	a2 03 87 2b 00 00 c5 	movabs ds:0x21c500002b8703,al
    5ab8:	21 00 
    5aba:	00 16                	add    BYTE PTR [rsi],dl
    5abc:	05 00 00 01 c5       	add    eax,0xc5010000
    5ac1:	21 00                	and    DWORD PTR [rax],eax
    5ac3:	00 00                	add    BYTE PTR [rax],al
    5ac5:	0f 0b                	ud2
    5ac7:	32 00                	xor    al,BYTE PTR [rax]
    5ac9:	00 03                	add    BYTE PTR [rbx],al
    5acb:	9e                   	sahf
    5acc:	03 92 2b 00 00 35    	add    edx,DWORD PTR [rdx+0x3500002b]
    5ad2:	00 00                	add    BYTE PTR [rax],al
    5ad4:	00 30                	add    BYTE PTR [rax],dh
    5ad6:	05 00 00 01 35       	add    eax,0x35010000
    5adb:	00 00                	add    BYTE PTR [rax],al
    5add:	00 00                	add    BYTE PTR [rax],al
    5adf:	0f d8 1c 00          	psubusb mm3,QWORD PTR [rax+rax*1]
    5ae3:	00 03                	add    BYTE PTR [rbx],al
    5ae5:	ee                   	out    dx,al
    5ae6:	03 7a 33             	add    edi,DWORD PTR [rdx+0x33]
    5ae9:	00 00                	add    BYTE PTR [rax],al
    5aeb:	c5 21 00             	(bad)
    5aee:	00 4a 05             	add    BYTE PTR [rdx+0x5],cl
    5af1:	00 00                	add    BYTE PTR [rax],al
    5af3:	01 c5                	add    ebp,eax
    5af5:	21 00                	and    DWORD PTR [rax],eax
    5af7:	00 00                	add    BYTE PTR [rax],al
    5af9:	0f d8 1c 00          	psubusb mm3,QWORD PTR [rax+rax*1]
    5afd:	00 03                	add    BYTE PTR [rbx],al
    5aff:	ea                   	(bad)
    5b00:	03 1c 14             	add    ebx,DWORD PTR [rsp+rdx*1]
    5b03:	00 00                	add    BYTE PTR [rax],al
    5b05:	35 00 00 00 64       	xor    eax,0x64000000
    5b0a:	05 00 00 01 35       	add    eax,0x35010000
    5b0f:	00 00                	add    BYTE PTR [rax],al
    5b11:	00 00                	add    BYTE PTR [rax],al
    5b13:	04 dd                	add    al,0xdd
    5b15:	1b 00                	sbb    eax,DWORD PTR [rax]
    5b17:	00 03                	add    BYTE PTR [rbx],al
    5b19:	01 01                	add    DWORD PTR [rcx],eax
    5b1b:	03 3d 2f 00 00 c5    	add    edi,DWORD PTR [rip+0xffffffffc500002f]        # ffffffffc5005b50 <_end+0xffffffffc4fffb38>
    5b21:	21 00                	and    DWORD PTR [rax],eax
    5b23:	00 7f 05             	add    BYTE PTR [rdi+0x5],bh
    5b26:	00 00                	add    BYTE PTR [rax],al
    5b28:	01 c5                	add    ebp,eax
    5b2a:	21 00                	and    DWORD PTR [rax],eax
    5b2c:	00 00                	add    BYTE PTR [rax],al
    5b2e:	0f dd 1b             	paddusw mm3,QWORD PTR [rbx]
    5b31:	00 00                	add    BYTE PTR [rax],al
    5b33:	03 fd                	add    edi,ebp
    5b35:	03 49 2f             	add    ecx,DWORD PTR [rcx+0x2f]
    5b38:	00 00                	add    BYTE PTR [rax],al
    5b3a:	35 00 00 00 99       	xor    eax,0x99000000
    5b3f:	05 00 00 01 35       	add    eax,0x35010000
    5b44:	00 00                	add    BYTE PTR [rax],al
    5b46:	00 00                	add    BYTE PTR [rax],al
    5b48:	04 3b                	add    al,0x3b
    5b4a:	16                   	(bad)
    5b4b:	00 00                	add    BYTE PTR [rax],al
    5b4d:	03 14 01             	add    edx,DWORD PTR [rcx+rax*1]
    5b50:	03 97 0b 00 00 c5    	add    edx,DWORD PTR [rdi-0x3afffff5]
    5b56:	21 00                	and    DWORD PTR [rax],eax
    5b58:	00 b9 05 00 00 01    	add    BYTE PTR [rcx+0x1000005],bh
    5b5e:	c5 21 00             	(bad)
    5b61:	00 01                	add    BYTE PTR [rcx],al
    5b63:	c5 21 00             	(bad)
    5b66:	00 00                	add    BYTE PTR [rax],al
    5b68:	04 3b                	add    al,0x3b
    5b6a:	16                   	(bad)
    5b6b:	00 00                	add    BYTE PTR [rax],al
    5b6d:	03 10                	add    edx,DWORD PTR [rax]
    5b6f:	01 03                	add    DWORD PTR [rbx],eax
    5b71:	38 21                	cmp    BYTE PTR [rcx],ah
    5b73:	00 00                	add    BYTE PTR [rax],al
    5b75:	35 00 00 00 d9       	xor    eax,0xd9000000
    5b7a:	05 00 00 01 35       	add    eax,0x35010000
    5b7f:	00 00                	add    BYTE PTR [rax],al
    5b81:	00 01                	add    BYTE PTR [rcx],al
    5b83:	35 00 00 00 00       	xor    eax,0x0
    5b88:	04 0f                	add    al,0xf
    5b8a:	15 00 00 03 53       	adc    eax,0x53030000
    5b8f:	04 03                	add    al,0x3
    5b91:	9d                   	popf
    5b92:	14 00                	adc    al,0x0
    5b94:	00 a6 21 00 00 f4    	add    BYTE PTR [rsi-0xbffffdf],ah
    5b9a:	05 00 00 01 c5       	add    eax,0xc5010000
    5b9f:	21 00                	and    DWORD PTR [rax],eax
    5ba1:	00 00                	add    BYTE PTR [rax],al
    5ba3:	04 0f                	add    al,0xf
    5ba5:	15 00 00 03 4e       	adc    eax,0x4e030000
    5baa:	04 03                	add    al,0x3
    5bac:	8b 14 00             	mov    edx,DWORD PTR [rax+rax*1]
    5baf:	00 a6 21 00 00 0f    	add    BYTE PTR [rsi+0xf000021],ah
    5bb5:	06                   	(bad)
    5bb6:	00 00                	add    BYTE PTR [rax],al
    5bb8:	01 2e                	add    DWORD PTR [rsi],ebp
    5bba:	00 00                	add    BYTE PTR [rax],al
    5bbc:	00 00                	add    BYTE PTR [rax],al
    5bbe:	04 0f                	add    al,0xf
    5bc0:	15 00 00 03 49       	adc    eax,0x49030000
    5bc5:	04 03                	add    al,0x3
    5bc7:	af                   	scas   eax,DWORD PTR es:[rdi]
    5bc8:	14 00                	adc    al,0x0
    5bca:	00 a6 21 00 00 2a    	add    BYTE PTR [rsi+0x2a000021],ah
    5bd0:	06                   	(bad)
    5bd1:	00 00                	add    BYTE PTR [rax],al
    5bd3:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5bd9 <__FRAME_END__+0xdb1>
    5bd9:	04 32                	add    al,0x32
    5bdb:	2e 00 00             	cs add BYTE PTR [rax],al
    5bde:	03 6a 04             	add    ebp,DWORD PTR [rdx+0x4]
    5be1:	03 6f 26             	add    ebp,DWORD PTR [rdi+0x26]
    5be4:	00 00                	add    BYTE PTR [rax],al
    5be6:	ea                   	(bad)
    5be7:	20 00                	and    BYTE PTR [rax],al
    5be9:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    5bec:	00 00                	add    BYTE PTR [rax],al
    5bee:	01 c5                	add    ebp,eax
    5bf0:	21 00                	and    DWORD PTR [rax],eax
    5bf2:	00 00                	add    BYTE PTR [rax],al
    5bf4:	04 32                	add    al,0x32
    5bf6:	2e 00 00             	cs add BYTE PTR [rax],al
    5bf9:	03 66 04             	add    esp,DWORD PTR [rsi+0x4]
    5bfc:	03 6c 27 00          	add    ebp,DWORD PTR [rdi+riz*1+0x0]
    5c00:	00 ea                	add    dl,ch
    5c02:	20 00                	and    BYTE PTR [rax],al
    5c04:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    5c07:	00 00                	add    BYTE PTR [rax],al
    5c09:	01 2e                	add    DWORD PTR [rsi],ebp
    5c0b:	00 00                	add    BYTE PTR [rax],al
    5c0d:	00 00                	add    BYTE PTR [rax],al
    5c0f:	04 32                	add    al,0x32
    5c11:	2e 00 00             	cs add BYTE PTR [rax],al
    5c14:	03 62 04             	add    esp,DWORD PTR [rdx+0x4]
    5c17:	03 8d 27 00 00 ea    	add    ecx,DWORD PTR [rbp-0x15ffffd9]
    5c1d:	20 00                	and    BYTE PTR [rax],al
    5c1f:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    5c22:	00 00                	add    BYTE PTR [rax],al
    5c24:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5c2a <__FRAME_END__+0xe02>
    5c2a:	04 09                	add    al,0x9
    5c2c:	15 00 00 03 85       	adc    eax,0x85030000
    5c31:	04 03                	add    al,0x3
    5c33:	60                   	(bad)
    5c34:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5c39:	00 00                	add    BYTE PTR [rax],al
    5c3b:	96                   	xchg   esi,eax
    5c3c:	06                   	(bad)
    5c3d:	00 00                	add    BYTE PTR [rax],al
    5c3f:	01 c5                	add    ebp,eax
    5c41:	21 00                	and    DWORD PTR [rax],eax
    5c43:	00 00                	add    BYTE PTR [rax],al
    5c45:	04 09                	add    al,0x9
    5c47:	15 00 00 03 80       	adc    eax,0x80030000
    5c4c:	04 03                	add    al,0x3
    5c4e:	54                   	push   rsp
    5c4f:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5c54:	00 00                	add    BYTE PTR [rax],al
    5c56:	b1 06                	mov    cl,0x6
    5c58:	00 00                	add    BYTE PTR [rax],al
    5c5a:	01 2e                	add    DWORD PTR [rsi],ebp
    5c5c:	00 00                	add    BYTE PTR [rax],al
    5c5e:	00 00                	add    BYTE PTR [rax],al
    5c60:	04 09                	add    al,0x9
    5c62:	15 00 00 03 78       	adc    eax,0x78030000
    5c67:	04 03                	add    al,0x3
    5c69:	39 18                	cmp    DWORD PTR [rax],ebx
    5c6b:	00 00                	add    BYTE PTR [rax],al
    5c6d:	ea                   	(bad)
    5c6e:	20 00                	and    BYTE PTR [rax],al
    5c70:	00 cc                	add    ah,cl
    5c72:	06                   	(bad)
    5c73:	00 00                	add    BYTE PTR [rax],al
    5c75:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5c7b <__FRAME_END__+0xe53>
    5c7b:	04 a6                	add    al,0xa6
    5c7d:	1c 00                	sbb    al,0x0
    5c7f:	00 03                	add    BYTE PTR [rbx],al
    5c81:	a0 04 03 21 20 00 00 	movabs al,ds:0x20ea000020210304
    5c88:	ea 20 
    5c8a:	00 00                	add    BYTE PTR [rax],al
    5c8c:	e7 06                	out    0x6,eax
    5c8e:	00 00                	add    BYTE PTR [rax],al
    5c90:	01 c5                	add    ebp,eax
    5c92:	21 00                	and    DWORD PTR [rax],eax
    5c94:	00 00                	add    BYTE PTR [rax],al
    5c96:	04 a6                	add    al,0xa6
    5c98:	1c 00                	sbb    al,0x0
    5c9a:	00 03                	add    BYTE PTR [rbx],al
    5c9c:	9b                   	fwait
    5c9d:	04 03                	add    al,0x3
    5c9f:	15 20 00 00 ea       	adc    eax,0xea000020
    5ca4:	20 00                	and    BYTE PTR [rax],al
    5ca6:	00 02                	add    BYTE PTR [rdx],al
    5ca8:	07                   	(bad)
    5ca9:	00 00                	add    BYTE PTR [rax],al
    5cab:	01 2e                	add    DWORD PTR [rsi],ebp
    5cad:	00 00                	add    BYTE PTR [rax],al
    5caf:	00 00                	add    BYTE PTR [rax],al
    5cb1:	04 a6                	add    al,0xa6
    5cb3:	1c 00                	sbb    al,0x0
    5cb5:	00 03                	add    BYTE PTR [rbx],al
    5cb7:	93                   	xchg   ebx,eax
    5cb8:	04 03                	add    al,0x3
    5cba:	2d 20 00 00 ea       	sub    eax,0xea000020
    5cbf:	20 00                	and    BYTE PTR [rax],al
    5cc1:	00 1d 07 00 00 01    	add    BYTE PTR [rip+0x1000007],bl        # 1005cce <_end+0xfffcb6>
    5cc7:	35 00 00 00 00       	xor    eax,0x0
    5ccc:	04 9c                	add    al,0x9c
    5cce:	34 00                	xor    al,0x0
    5cd0:	00 03                	add    BYTE PTR [rbx],al
    5cd2:	b6 04                	mov    dh,0x4
    5cd4:	03 cf                	add    ecx,edi
    5cd6:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5cdb:	00 00                	add    BYTE PTR [rax],al
    5cdd:	38 07                	cmp    BYTE PTR [rdi],al
    5cdf:	00 00                	add    BYTE PTR [rax],al
    5ce1:	01 c5                	add    ebp,eax
    5ce3:	21 00                	and    DWORD PTR [rax],eax
    5ce5:	00 00                	add    BYTE PTR [rax],al
    5ce7:	04 9c                	add    al,0x9c
    5ce9:	34 00                	xor    al,0x0
    5ceb:	00 03                	add    BYTE PTR [rbx],al
    5ced:	b2 04                	mov    dl,0x4
    5cef:	03 c0                	add    eax,eax
    5cf1:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5cf6:	00 00                	add    BYTE PTR [rax],al
    5cf8:	53                   	push   rbx
    5cf9:	07                   	(bad)
    5cfa:	00 00                	add    BYTE PTR [rax],al
    5cfc:	01 2e                	add    DWORD PTR [rsi],ebp
    5cfe:	00 00                	add    BYTE PTR [rax],al
    5d00:	00 00                	add    BYTE PTR [rax],al
    5d02:	04 9c                	add    al,0x9c
    5d04:	34 00                	xor    al,0x0
    5d06:	00 03                	add    BYTE PTR [rbx],al
    5d08:	ae                   	scas   al,BYTE PTR es:[rdi]
    5d09:	04 03                	add    al,0x3
    5d0b:	de 15 00 00 ea 20    	ficom  WORD PTR [rip+0x20ea0000]        # 20ea5d11 <_end+0x20e9fcf9>
    5d11:	00 00                	add    BYTE PTR [rax],al
    5d13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5d14:	07                   	(bad)
    5d15:	00 00                	add    BYTE PTR [rax],al
    5d17:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5d1d <_DYNAMIC+0x3d>
    5d1d:	04 3d                	add    al,0x3d
    5d1f:	33 00                	xor    eax,DWORD PTR [rax]
    5d21:	00 03                	add    BYTE PTR [rbx],al
    5d23:	cd 04                	int    0x4
    5d25:	03 cf                	add    ecx,edi
    5d27:	24 00                	and    al,0x0
    5d29:	00 ea                	add    dl,ch
    5d2b:	20 00                	and    BYTE PTR [rax],al
    5d2d:	00 89 07 00 00 01    	add    BYTE PTR [rcx+0x1000007],cl
    5d33:	c5 21 00             	(bad)
    5d36:	00 00                	add    BYTE PTR [rax],al
    5d38:	04 3d                	add    al,0x3d
    5d3a:	33 00                	xor    eax,DWORD PTR [rax]
    5d3c:	00 03                	add    BYTE PTR [rbx],al
    5d3e:	c9                   	leave
    5d3f:	04 03                	add    al,0x3
    5d41:	ef                   	out    dx,eax
    5d42:	0b 00                	or     eax,DWORD PTR [rax]
    5d44:	00 ea                	add    dl,ch
    5d46:	20 00                	and    BYTE PTR [rax],al
    5d48:	00 a4 07 00 00 01 2e 	add    BYTE PTR [rdi+rax*1+0x2e010000],ah
    5d4f:	00 00                	add    BYTE PTR [rax],al
    5d51:	00 00                	add    BYTE PTR [rax],al
    5d53:	04 3d                	add    al,0x3d
    5d55:	33 00                	xor    eax,DWORD PTR [rax]
    5d57:	00 03                	add    BYTE PTR [rbx],al
    5d59:	c5 04 03             	(bad)
    5d5c:	fd                   	std
    5d5d:	0b 00                	or     eax,DWORD PTR [rax]
    5d5f:	00 ea                	add    dl,ch
    5d61:	20 00                	and    BYTE PTR [rax],al
    5d63:	00 bf 07 00 00 01    	add    BYTE PTR [rdi+0x1000007],bh
    5d69:	35 00 00 00 00       	xor    eax,0x0
    5d6e:	04 f9                	add    al,0xf9
    5d70:	18 00                	sbb    BYTE PTR [rax],al
    5d72:	00 03                	add    BYTE PTR [rbx],al
    5d74:	e3 04                	jrcxz  5d7a <_DYNAMIC+0x9a>
    5d76:	03 0c 1d 00 00 ea 20 	add    ecx,DWORD PTR [rbx*1+0x20ea0000]
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	df 07                	fild   WORD PTR [rdi]
    5d81:	00 00                	add    BYTE PTR [rax],al
    5d83:	01 c5                	add    ebp,eax
    5d85:	21 00                	and    DWORD PTR [rax],eax
    5d87:	00 01                	add    BYTE PTR [rcx],al
    5d89:	c5 21 00             	(bad)
    5d8c:	00 00                	add    BYTE PTR [rax],al
    5d8e:	04 f9                	add    al,0xf9
    5d90:	18 00                	sbb    BYTE PTR [rax],al
    5d92:	00 03                	add    BYTE PTR [rbx],al
    5d94:	df 04 03             	fild   WORD PTR [rbx+rax*1]
    5d97:	bd 1b 00 00 ea       	mov    ebp,0xea00001b
    5d9c:	20 00                	and    BYTE PTR [rax],al
    5d9e:	00 ff                	add    bh,bh
    5da0:	07                   	(bad)
    5da1:	00 00                	add    BYTE PTR [rax],al
    5da3:	01 2e                	add    DWORD PTR [rsi],ebp
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 01                	add    BYTE PTR [rcx],al
    5da9:	2e 00 00             	cs add BYTE PTR [rax],al
    5dac:	00 00                	add    BYTE PTR [rax],al
    5dae:	04 f9                	add    al,0xf9
    5db0:	18 00                	sbb    BYTE PTR [rax],al
    5db2:	00 03                	add    BYTE PTR [rbx],al
    5db4:	db 04 03             	fild   DWORD PTR [rbx+rax*1]
    5db7:	5d                   	pop    rbp
    5db8:	29 00                	sub    DWORD PTR [rax],eax
    5dba:	00 ea                	add    dl,ch
    5dbc:	20 00                	and    BYTE PTR [rax],al
    5dbe:	00 1f                	add    BYTE PTR [rdi],bl
    5dc0:	08 00                	or     BYTE PTR [rax],al
    5dc2:	00 01                	add    BYTE PTR [rcx],al
    5dc4:	35 00 00 00 01       	xor    eax,0x1000000
    5dc9:	35 00 00 00 00       	xor    eax,0x0
    5dce:	04 e9                	add    al,0xe9
    5dd0:	1d 00 00 03 fd       	sbb    eax,0xfd030000
    5dd5:	04 03                	add    al,0x3
    5dd7:	26 2f                	es (bad)
    5dd9:	00 00                	add    BYTE PTR [rax],al
    5ddb:	ea                   	(bad)
    5ddc:	20 00                	and    BYTE PTR [rax],al
    5dde:	00 3f                	add    BYTE PTR [rdi],bh
    5de0:	08 00                	or     BYTE PTR [rax],al
    5de2:	00 01                	add    BYTE PTR [rcx],al
    5de4:	c5 21 00             	(bad)
    5de7:	00 01                	add    BYTE PTR [rcx],al
    5de9:	c5 21 00             	(bad)
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	04 e9                	add    al,0xe9
    5df0:	1d 00 00 03 f9       	sbb    eax,0xf9030000
    5df5:	04 03                	add    al,0x3
    5df7:	f7 2d 00 00 ea 20    	imul   DWORD PTR [rip+0x20ea0000]        # 20ea5dfd <_end+0x20e9fde5>
    5dfd:	00 00                	add    BYTE PTR [rax],al
    5dff:	5f                   	pop    rdi
    5e00:	08 00                	or     BYTE PTR [rax],al
    5e02:	00 01                	add    BYTE PTR [rcx],al
    5e04:	2e 00 00             	cs add BYTE PTR [rax],al
    5e07:	00 01                	add    BYTE PTR [rcx],al
    5e09:	2e 00 00             	cs add BYTE PTR [rax],al
    5e0c:	00 00                	add    BYTE PTR [rax],al
    5e0e:	04 e9                	add    al,0xe9
    5e10:	1d 00 00 03 f5       	sbb    eax,0xf5030000
    5e15:	04 03                	add    al,0x3
    5e17:	61                   	(bad)
    5e18:	30 00                	xor    BYTE PTR [rax],al
    5e1a:	00 ea                	add    dl,ch
    5e1c:	20 00                	and    BYTE PTR [rax],al
    5e1e:	00 7f 08             	add    BYTE PTR [rdi+0x8],bh
    5e21:	00 00                	add    BYTE PTR [rax],al
    5e23:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005e29 <_end+0xfffe11>
    5e29:	35 00 00 00 00       	xor    eax,0x0
    5e2e:	04 62                	add    al,0x62
    5e30:	31 00                	xor    DWORD PTR [rax],eax
    5e32:	00 03                	add    BYTE PTR [rbx],al
    5e34:	17                   	(bad)
    5e35:	05 03 87 2e 00       	add    eax,0x2e8703
    5e3a:	00 ea                	add    dl,ch
    5e3c:	20 00                	and    BYTE PTR [rax],al
    5e3e:	00 9f 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bl
    5e44:	c5 21 00             	(bad)
    5e47:	00 01                	add    BYTE PTR [rcx],al
    5e49:	c5 21 00             	(bad)
    5e4c:	00 00                	add    BYTE PTR [rax],al
    5e4e:	04 62                	add    al,0x62
    5e50:	31 00                	xor    DWORD PTR [rax],eax
    5e52:	00 03                	add    BYTE PTR [rbx],al
    5e54:	13 05 03 46 2d 00    	adc    eax,DWORD PTR [rip+0x2d4603]        # 2da45d <_end+0x2d4445>
    5e5a:	00 ea                	add    dl,ch
    5e5c:	20 00                	and    BYTE PTR [rax],al
    5e5e:	00 bf 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bh
    5e64:	2e 00 00             	cs add BYTE PTR [rax],al
    5e67:	00 01                	add    BYTE PTR [rcx],al
    5e69:	2e 00 00             	cs add BYTE PTR [rax],al
    5e6c:	00 00                	add    BYTE PTR [rax],al
    5e6e:	04 62                	add    al,0x62
    5e70:	31 00                	xor    DWORD PTR [rax],eax
    5e72:	00 03                	add    BYTE PTR [rbx],al
    5e74:	0f 05                	syscall
    5e76:	03 27                	add    esp,DWORD PTR [rdi]
    5e78:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	df 08                	fisttp WORD PTR [rax]
    5e81:	00 00                	add    BYTE PTR [rax],al
    5e83:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005e89 <_end+0xfffe71>
    5e89:	35 00 00 00 00       	xor    eax,0x0
    5e8e:	04 b4                	add    al,0xb4
    5e90:	15 00 00 03 31       	adc    eax,0x31030000
    5e95:	05 03 cf 26 00       	add    eax,0x26cf03
    5e9a:	00 ea                	add    dl,ch
    5e9c:	20 00                	and    BYTE PTR [rax],al
    5e9e:	00 ff                	add    bh,bh
    5ea0:	08 00                	or     BYTE PTR [rax],al
    5ea2:	00 01                	add    BYTE PTR [rcx],al
    5ea4:	c5 21 00             	(bad)
    5ea7:	00 01                	add    BYTE PTR [rcx],al
    5ea9:	c5 21 00             	(bad)
    5eac:	00 00                	add    BYTE PTR [rax],al
    5eae:	04 b4                	add    al,0xb4
    5eb0:	15 00 00 03 2d       	adc    eax,0x2d030000
    5eb5:	05 03 08 14 00       	add    eax,0x140803
    5eba:	00 ea                	add    dl,ch
    5ebc:	20 00                	and    BYTE PTR [rax],al
    5ebe:	00 1f                	add    BYTE PTR [rdi],bl
    5ec0:	09 00                	or     DWORD PTR [rax],eax
    5ec2:	00 01                	add    BYTE PTR [rcx],al
    5ec4:	2e 00 00             	cs add BYTE PTR [rax],al
    5ec7:	00 01                	add    BYTE PTR [rcx],al
    5ec9:	2e 00 00             	cs add BYTE PTR [rax],al
    5ecc:	00 00                	add    BYTE PTR [rax],al
    5ece:	04 b4                	add    al,0xb4
    5ed0:	15 00 00 03 29       	adc    eax,0x29030000
    5ed5:	05 03 ed 28 00       	add    eax,0x28ed03
    5eda:	00 ea                	add    dl,ch
    5edc:	20 00                	and    BYTE PTR [rax],al
    5ede:	00 3f                	add    BYTE PTR [rdi],bh
    5ee0:	09 00                	or     DWORD PTR [rax],eax
    5ee2:	00 01                	add    BYTE PTR [rcx],al
    5ee4:	35 00 00 00 01       	xor    eax,0x1000000
    5ee9:	35 00 00 00 00       	xor    eax,0x0
    5eee:	04 57                	add    al,0x57
    5ef0:	18 00                	sbb    BYTE PTR [rax],al
    5ef2:	00 03                	add    BYTE PTR [rbx],al
    5ef4:	4b 05 03 4e 1b 00    	rex.WXB add rax,0x1b4e03
    5efa:	00 ea                	add    dl,ch
    5efc:	20 00                	and    BYTE PTR [rax],al
    5efe:	00 5f 09             	add    BYTE PTR [rdi+0x9],bl
    5f01:	00 00                	add    BYTE PTR [rax],al
    5f03:	01 c5                	add    ebp,eax
    5f05:	21 00                	and    DWORD PTR [rax],eax
    5f07:	00 01                	add    BYTE PTR [rcx],al
    5f09:	c5 21 00             	(bad)
    5f0c:	00 00                	add    BYTE PTR [rax],al
    5f0e:	04 57                	add    al,0x57
    5f10:	18 00                	sbb    BYTE PTR [rax],al
    5f12:	00 03                	add    BYTE PTR [rbx],al
    5f14:	47 05 03 5a 19 00    	rex.RXB add eax,0x195a03
    5f1a:	00 ea                	add    dl,ch
    5f1c:	20 00                	and    BYTE PTR [rax],al
    5f1e:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    5f21:	00 00                	add    BYTE PTR [rax],al
    5f23:	01 2e                	add    DWORD PTR [rsi],ebp
    5f25:	00 00                	add    BYTE PTR [rax],al
    5f27:	00 01                	add    BYTE PTR [rcx],al
    5f29:	2e 00 00             	cs add BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	04 57                	add    al,0x57
    5f30:	18 00                	sbb    BYTE PTR [rax],al
    5f32:	00 03                	add    BYTE PTR [rbx],al
    5f34:	43 05 03 b4 1c 00    	rex.XB add eax,0x1cb403
    5f3a:	00 ea                	add    dl,ch
    5f3c:	20 00                	and    BYTE PTR [rax],al
    5f3e:	00 9f 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bl
    5f44:	35 00 00 00 01       	xor    eax,0x1000000
    5f49:	35 00 00 00 00       	xor    eax,0x0
    5f4e:	04 49                	add    al,0x49
    5f50:	0f 00 00             	sldt   WORD PTR [rax]
    5f53:	03 65 05             	add    esp,DWORD PTR [rbp+0x5]
    5f56:	03 9c 27 00 00 ea 20 	add    ebx,DWORD PTR [rdi+riz*1+0x20ea0000]
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	bf 09 00 00 01       	mov    edi,0x1000009
    5f64:	c5 21 00             	(bad)
    5f67:	00 01                	add    BYTE PTR [rcx],al
    5f69:	c5 21 00             	(bad)
    5f6c:	00 00                	add    BYTE PTR [rax],al
    5f6e:	04 49                	add    al,0x49
    5f70:	0f 00 00             	sldt   WORD PTR [rax]
    5f73:	03 61 05             	add    esp,DWORD PTR [rcx+0x5]
    5f76:	03 da                	add    ebx,edx
    5f78:	10 00                	adc    BYTE PTR [rax],al
    5f7a:	00 ea                	add    dl,ch
    5f7c:	20 00                	and    BYTE PTR [rax],al
    5f7e:	00 df                	add    bh,bl
    5f80:	09 00                	or     DWORD PTR [rax],eax
    5f82:	00 01                	add    BYTE PTR [rcx],al
    5f84:	2e 00 00             	cs add BYTE PTR [rax],al
    5f87:	00 01                	add    BYTE PTR [rcx],al
    5f89:	2e 00 00             	cs add BYTE PTR [rax],al
    5f8c:	00 00                	add    BYTE PTR [rax],al
    5f8e:	04 49                	add    al,0x49
    5f90:	0f 00 00             	sldt   WORD PTR [rax]
    5f93:	03 5d 05             	add    ebx,DWORD PTR [rbp+0x5]
    5f96:	03 df                	add    ebx,edi
    5f98:	2a 00                	sub    al,BYTE PTR [rax]
    5f9a:	00 ea                	add    dl,ch
    5f9c:	20 00                	and    BYTE PTR [rax],al
    5f9e:	00 ff                	add    bh,bh
    5fa0:	09 00                	or     DWORD PTR [rax],eax
    5fa2:	00 01                	add    BYTE PTR [rcx],al
    5fa4:	35 00 00 00 01       	xor    eax,0x1000000
    5fa9:	35 00 00 00 00       	xor    eax,0x0
    5fae:	04 1e                	add    al,0x1e
    5fb0:	2a 00                	sub    al,BYTE PTR [rax]
    5fb2:	00 03                	add    BYTE PTR [rbx],al
    5fb4:	f2 07                	repnz (bad)
    5fb6:	03 dd                	add    ebx,ebp
    5fb8:	34 00                	xor    al,0x0
    5fba:	00 c5                	add    ch,al
    5fbc:	21 00                	and    DWORD PTR [rax],eax
    5fbe:	00 1a                	add    BYTE PTR [rdx],bl
    5fc0:	0a 00                	or     al,BYTE PTR [rax]
    5fc2:	00 01                	add    BYTE PTR [rcx],al
    5fc4:	c5 21 00             	(bad)
    5fc7:	00 00                	add    BYTE PTR [rax],al
    5fc9:	04 1e                	add    al,0x1e
    5fcb:	2a 00                	sub    al,BYTE PTR [rax]
    5fcd:	00 03                	add    BYTE PTR [rbx],al
    5fcf:	ee                   	out    dx,al
    5fd0:	07                   	(bad)
    5fd1:	03 e9                	add    ebp,ecx
    5fd3:	34 00                	xor    al,0x0
    5fd5:	00 35 00 00 00 35    	add    BYTE PTR [rip+0x35000000],dh        # 35005fdb <_end+0x34ffffc3>
    5fdb:	0a 00                	or     al,BYTE PTR [rax]
    5fdd:	00 01                	add    BYTE PTR [rcx],al
    5fdf:	35 00 00 00 00       	xor    eax,0x0
    5fe4:	04 ea                	add    al,0xea
    5fe6:	1e                   	(bad)
    5fe7:	00 00                	add    BYTE PTR [rax],al
    5fe9:	03 04 08             	add    eax,DWORD PTR [rax+rcx*1]
    5fec:	03 6c 2d 00          	add    ebp,DWORD PTR [rbp+rbp*1+0x0]
    5ff0:	00 c5                	add    ch,al
    5ff2:	21 00                	and    DWORD PTR [rax],eax
    5ff4:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    5ff7:	00 00                	add    BYTE PTR [rax],al
    5ff9:	01 c5                	add    ebp,eax
    5ffb:	21 00                	and    DWORD PTR [rax],eax
    5ffd:	00 00                	add    BYTE PTR [rax],al
    5fff:	04 ea                	add    al,0xea
    6001:	1e                   	(bad)
    6002:	00 00                	add    BYTE PTR [rax],al
    6004:	03 00                	add    eax,DWORD PTR [rax]
    6006:	08 03                	or     BYTE PTR [rbx],al
    6008:	78 2d                	js     6037 <_end+0x1f>
    600a:	00 00                	add    BYTE PTR [rax],al
    600c:	35 00 00 00 6b       	xor    eax,0x6b000000
    6011:	0a 00                	or     al,BYTE PTR [rax]
    6013:	00 01                	add    BYTE PTR [rcx],al
    6015:	35 00 00 00 00       	xor    eax,0x0
    601a:	04 1a                	add    al,0x1a
    601c:	25 00 00 03 16       	and    eax,0x16030000
    6021:	08 03                	or     BYTE PTR [rbx],al
    6023:	7c 24                	jl     6049 <_end+0x31>
    6025:	00 00                	add    BYTE PTR [rax],al
    6027:	c5 21 00             	(bad)
    602a:	00 86 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],al
    6030:	c5 21 00             	(bad)
    6033:	00 00                	add    BYTE PTR [rax],al
    6035:	04 1a                	add    al,0x1a
    6037:	25 00 00 03 12       	and    eax,0x12030000
    603c:	08 03                	or     BYTE PTR [rbx],al
    603e:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    6041:	00 35 00 00 00 a1    	add    BYTE PTR [rip+0xffffffffa1000000],dh        # ffffffffa1006047 <_end+0xffffffffa100002f>
    6047:	0a 00                	or     al,BYTE PTR [rax]
    6049:	00 01                	add    BYTE PTR [rcx],al
    604b:	35 00 00 00 00       	xor    eax,0x0
    6050:	04 ca                	add    al,0xca
    6052:	24 00                	and    al,0x0
    6054:	00 03                	add    BYTE PTR [rbx],al
    6056:	28 08                	sub    BYTE PTR [rax],cl
    6058:	03 99 1d 00 00 c5    	add    ebx,DWORD PTR [rcx-0x3affffe3]
    605e:	21 00                	and    DWORD PTR [rax],eax
    6060:	00 bc 0a 00 00 01 c5 	add    BYTE PTR [rdx+rcx*1-0x3aff0000],bh
    6067:	21 00                	and    DWORD PTR [rax],eax
    6069:	00 00                	add    BYTE PTR [rax],al
    606b:	04 ca                	add    al,0xca
    606d:	24 00                	and    al,0x0
    606f:	00 03                	add    BYTE PTR [rbx],al
    6071:	24 08                	and    al,0x8
    6073:	03 a4 1d 00 00 35 00 	add    esp,DWORD PTR [rbp+rbx*1+0x350000]
    607a:	00 00                	add    BYTE PTR [rax],al
    607c:	d7                   	xlat   BYTE PTR ds:[rbx]
    607d:	0a 00                	or     al,BYTE PTR [rax]
    607f:	00 01                	add    BYTE PTR [rcx],al
    6081:	35 00 00 00 00       	xor    eax,0x0
    6086:	04 91                	add    al,0x91
    6088:	15 00 00 03 3a       	adc    eax,0x3a030000
    608d:	08 03                	or     BYTE PTR [rbx],al
    608f:	0c 18                	or     al,0x18
    6091:	00 00                	add    BYTE PTR [rax],al
    6093:	c5 21 00             	(bad)
    6096:	00 f7                	add    bh,dh
    6098:	0a 00                	or     al,BYTE PTR [rax]
    609a:	00 01                	add    BYTE PTR [rcx],al
    609c:	c5 21 00             	(bad)
    609f:	00 01                	add    BYTE PTR [rcx],al
    60a1:	c5 21 00             	(bad)
    60a4:	00 00                	add    BYTE PTR [rax],al
    60a6:	04 91                	add    al,0x91
    60a8:	15 00 00 03 36       	adc    eax,0x36030000
    60ad:	08 03                	or     BYTE PTR [rbx],al
    60af:	29 18                	sub    DWORD PTR [rax],ebx
    60b1:	00 00                	add    BYTE PTR [rax],al
    60b3:	35 00 00 00 17       	xor    eax,0x17000000
    60b8:	0b 00                	or     eax,DWORD PTR [rax]
    60ba:	00 01                	add    BYTE PTR [rcx],al
    60bc:	35 00 00 00 01       	xor    eax,0x1000000
    60c1:	35 00 00 00 00       	xor    eax,0x0
    60c6:	1d 65 72 66 00       	sbb    eax,0x667265
    60cb:	44 08 15 2e 00 00 c5 	or     BYTE PTR [rip+0xffffffffc500002e],r10b        # ffffffffc5006100 <_end+0xffffffffc50000e8>
    60d2:	21 00                	and    DWORD PTR [rax],eax
    60d4:	00 30                	add    BYTE PTR [rax],dh
    60d6:	0b 00                	or     eax,DWORD PTR [rax]
    60d8:	00 01                	add    BYTE PTR [rcx],al
    60da:	c5 21 00             	(bad)
    60dd:	00 00                	add    BYTE PTR [rax],al
    60df:	1d 65 72 66 00       	sbb    eax,0x667265
    60e4:	40 08 1f             	rex or BYTE PTR [rdi],bl
    60e7:	2e 00 00             	cs add BYTE PTR [rax],al
    60ea:	35 00 00 00 49       	xor    eax,0x49000000
    60ef:	0b 00                	or     eax,DWORD PTR [rax]
    60f1:	00 01                	add    BYTE PTR [rcx],al
    60f3:	35 00 00 00 00       	xor    eax,0x0
    60f8:	04 c1                	add    al,0xc1
    60fa:	1e                   	(bad)
    60fb:	00 00                	add    BYTE PTR [rax],al
    60fd:	03 56 08             	add    edx,DWORD PTR [rsi+0x8]
    6100:	03 23                	add    esp,DWORD PTR [rbx]
    6102:	15 00 00 c5 21       	adc    eax,0x21c50000
    6107:	00 00                	add    BYTE PTR [rax],al
    6109:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    610c:	00 01                	add    BYTE PTR [rcx],al
    610e:	c5 21 00             	(bad)
    6111:	00 00                	add    BYTE PTR [rax],al
    6113:	04 c1                	add    al,0xc1
    6115:	1e                   	(bad)
    6116:	00 00                	add    BYTE PTR [rax],al
    6118:	03 52 08             	add    edx,DWORD PTR [rdx+0x8]
    611b:	03 2e                	add    ebp,DWORD PTR [rsi]
    611d:	15 00 00 35 00       	adc    eax,0x350000
    6122:	00 00                	add    BYTE PTR [rax],al
    6124:	7f 0b                	jg     6131 <_end+0x119>
    6126:	00 00                	add    BYTE PTR [rax],al
    6128:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 612e <_end+0x116>
    612e:	04 93                	add    al,0x93
    6130:	33 00                	xor    eax,DWORD PTR [rax]
    6132:	00 03                	add    BYTE PTR [rbx],al
    6134:	68 08 03 7e 26       	push   0x267e0308
    6139:	00 00                	add    BYTE PTR [rax],al
    613b:	c5 21 00             	(bad)
    613e:	00 9a 0b 00 00 01    	add    BYTE PTR [rdx+0x100000b],bl
    6144:	c5 21 00             	(bad)
    6147:	00 00                	add    BYTE PTR [rax],al
    6149:	04 93                	add    al,0x93
    614b:	33 00                	xor    eax,DWORD PTR [rax]
    614d:	00 03                	add    BYTE PTR [rbx],al
    614f:	64 08 03             	or     BYTE PTR fs:[rbx],al
    6152:	89 26                	mov    DWORD PTR [rsi],esp
    6154:	00 00                	add    BYTE PTR [rax],al
    6156:	35 00 00 00 b5       	xor    eax,0xb5000000
    615b:	0b 00                	or     eax,DWORD PTR [rax]
    615d:	00 01                	add    BYTE PTR [rcx],al
    615f:	35 00 00 00 00       	xor    eax,0x0
    6164:	04 0a                	add    al,0xa
    6166:	28 00                	sub    BYTE PTR [rax],al
    6168:	00 03                	add    BYTE PTR [rbx],al
    616a:	7a 08                	jp     6174 <_end+0x15c>
    616c:	03 79 19             	add    edi,DWORD PTR [rcx+0x19]
    616f:	00 00                	add    BYTE PTR [rax],al
    6171:	c5 21 00             	(bad)
    6174:	00 d0                	add    al,dl
    6176:	0b 00                	or     eax,DWORD PTR [rax]
    6178:	00 01                	add    BYTE PTR [rcx],al
    617a:	c5 21 00             	(bad)
    617d:	00 00                	add    BYTE PTR [rax],al
    617f:	04 0a                	add    al,0xa
    6181:	28 00                	sub    BYTE PTR [rax],al
    6183:	00 03                	add    BYTE PTR [rbx],al
    6185:	76 08                	jbe    618f <_end+0x177>
    6187:	03 85 19 00 00 35    	add    eax,DWORD PTR [rbp+0x35000019]
    618d:	00 00                	add    BYTE PTR [rax],al
    618f:	00 eb                	add    bl,ch
    6191:	0b 00                	or     eax,DWORD PTR [rax]
    6193:	00 01                	add    BYTE PTR [rcx],al
    6195:	35 00 00 00 00       	xor    eax,0x0
    619a:	04 92                	add    al,0x92
    619c:	0b 00                	or     eax,DWORD PTR [rax]
    619e:	00 03                	add    BYTE PTR [rbx],al
    61a0:	8c 08                	mov    WORD PTR [rax],cs
    61a2:	03 64 13 00          	add    esp,DWORD PTR [rbx+rdx*1+0x0]
    61a6:	00 c5                	add    ch,al
    61a8:	21 00                	and    DWORD PTR [rax],eax
    61aa:	00 0b                	add    BYTE PTR [rbx],cl
    61ac:	0c 00                	or     al,0x0
    61ae:	00 01                	add    BYTE PTR [rcx],al
    61b0:	c5 21 00             	(bad)
    61b3:	00 01                	add    BYTE PTR [rcx],al
    61b5:	c5 21 00             	(bad)
    61b8:	00 00                	add    BYTE PTR [rax],al
    61ba:	04 92                	add    al,0x92
    61bc:	0b 00                	or     eax,DWORD PTR [rax]
    61be:	00 03                	add    BYTE PTR [rbx],al
    61c0:	88 08                	mov    BYTE PTR [rax],cl
    61c2:	03 d6                	add    edx,esi
    61c4:	14 00                	adc    al,0x0
    61c6:	00 35 00 00 00 2b    	add    BYTE PTR [rip+0x2b000000],dh        # 2b0061cc <_end+0x2b0001b4>
    61cc:	0c 00                	or     al,0x0
    61ce:	00 01                	add    BYTE PTR [rcx],al
    61d0:	35 00 00 00 01       	xor    eax,0x1000000
    61d5:	35 00 00 00 00       	xor    eax,0x0
    61da:	1d 66 6d 61 00       	sbb    eax,0x616d66
    61df:	96                   	xchg   esi,eax
    61e0:	08 65 0f             	or     BYTE PTR [rbp+0xf],ah
    61e3:	00 00                	add    BYTE PTR [rax],al
    61e5:	c5 21 00             	(bad)
    61e8:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    61eb:	00 00                	add    BYTE PTR [rax],al
    61ed:	01 c5                	add    ebp,eax
    61ef:	21 00                	and    DWORD PTR [rax],eax
    61f1:	00 01                	add    BYTE PTR [rcx],al
    61f3:	c5 21 00             	(bad)
    61f6:	00 01                	add    BYTE PTR [rcx],al
    61f8:	c5 21 00             	(bad)
    61fb:	00 00                	add    BYTE PTR [rax],al
    61fd:	1d 66 6d 61 00       	sbb    eax,0x616d66
    6202:	92                   	xchg   edx,eax
    6203:	08 93 18 00 00 35    	or     BYTE PTR [rbx+0x35000018],dl
    6209:	00 00                	add    BYTE PTR [rax],al
    620b:	00 71 0c             	add    BYTE PTR [rcx+0xc],dh
    620e:	00 00                	add    BYTE PTR [rax],al
    6210:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1006216 <_end+0x10001fe>
    6216:	35 00 00 00 01       	xor    eax,0x1000000
    621b:	35 00 00 00 00       	xor    eax,0x0
    6220:	04 b1                	add    al,0xb1
    6222:	2c 00                	sub    al,0x0
    6224:	00 03                	add    BYTE PTR [rbx],al
    6226:	a0 08 03 c9 1a 00 00 	movabs al,ds:0x21c500001ac90308
    622d:	c5 21 
    622f:	00 00                	add    BYTE PTR [rax],al
    6231:	91                   	xchg   ecx,eax
    6232:	0c 00                	or     al,0x0
    6234:	00 01                	add    BYTE PTR [rcx],al
    6236:	c5 21 00             	(bad)
    6239:	00 01                	add    BYTE PTR [rcx],al
    623b:	c5 21 00             	(bad)
    623e:	00 00                	add    BYTE PTR [rax],al
    6240:	04 b1                	add    al,0xb1
    6242:	2c 00                	sub    al,0x0
    6244:	00 03                	add    BYTE PTR [rbx],al
    6246:	9c                   	pushf
    6247:	08 03                	or     BYTE PTR [rbx],al
    6249:	72 34                	jb     627f <_end+0x267>
    624b:	00 00                	add    BYTE PTR [rax],al
    624d:	35 00 00 00 b1       	xor    eax,0xb1000000
    6252:	0c 00                	or     al,0x0
    6254:	00 01                	add    BYTE PTR [rcx],al
    6256:	35 00 00 00 01       	xor    eax,0x1000000
    625b:	35 00 00 00 00       	xor    eax,0x0
    6260:	04 26                	add    al,0x26
    6262:	0e                   	(bad)
    6263:	00 00                	add    BYTE PTR [rax],al
    6265:	03 aa 08 03 42 34    	add    ebp,DWORD PTR [rdx+0x34420308]
    626b:	00 00                	add    BYTE PTR [rax],al
    626d:	c5 21 00             	(bad)
    6270:	00 d1                	add    cl,dl
    6272:	0c 00                	or     al,0x0
    6274:	00 01                	add    BYTE PTR [rcx],al
    6276:	c5 21 00             	(bad)
    6279:	00 01                	add    BYTE PTR [rcx],al
    627b:	c5 21 00             	(bad)
    627e:	00 00                	add    BYTE PTR [rax],al
    6280:	04 26                	add    al,0x26
    6282:	0e                   	(bad)
    6283:	00 00                	add    BYTE PTR [rax],al
    6285:	03 a6 08 03 65 0c    	add    esp,DWORD PTR [rsi+0xc650308]
    628b:	00 00                	add    BYTE PTR [rax],al
    628d:	35 00 00 00 f1       	xor    eax,0xf1000000
    6292:	0c 00                	or     al,0x0
    6294:	00 01                	add    BYTE PTR [rcx],al
    6296:	35 00 00 00 01       	xor    eax,0x1000000
    629b:	35 00 00 00 00       	xor    eax,0x0
    62a0:	04 20                	add    al,0x20
    62a2:	2f                   	(bad)
    62a3:	00 00                	add    BYTE PTR [rax],al
    62a5:	03 f6                	add    esi,esi
    62a7:	0d 03 ea 13 00       	or     eax,0x13ea03
    62ac:	00 c5                	add    ch,al
    62ae:	21 00                	and    DWORD PTR [rax],eax
    62b0:	00 16                	add    BYTE PTR [rsi],dl
    62b2:	0d 00 00 01 c5       	or     eax,0xc5010000
    62b7:	21 00                	and    DWORD PTR [rax],eax
    62b9:	00 01                	add    BYTE PTR [rcx],al
    62bb:	c5 21 00             	(bad)
    62be:	00 01                	add    BYTE PTR [rcx],al
    62c0:	c5 21 00             	(bad)
    62c3:	00 00                	add    BYTE PTR [rax],al
    62c5:	04 20                	add    al,0x20
    62c7:	2f                   	(bad)
    62c8:	00 00                	add    BYTE PTR [rax],al
    62ca:	03 f2                	add    esi,edx
    62cc:	0d 03 85 33 00       	or     eax,0x338503
    62d1:	00 2e                	add    BYTE PTR [rsi],ch
    62d3:	00 00                	add    BYTE PTR [rax],al
    62d5:	00 3b                	add    BYTE PTR [rbx],bh
    62d7:	0d 00 00 01 2e       	or     eax,0x2e010000
    62dc:	00 00                	add    BYTE PTR [rax],al
    62de:	00 01                	add    BYTE PTR [rcx],al
    62e0:	2e 00 00             	cs add BYTE PTR [rax],al
    62e3:	00 01                	add    BYTE PTR [rcx],al
    62e5:	2e 00 00             	cs add BYTE PTR [rax],al
    62e8:	00 00                	add    BYTE PTR [rax],al
    62ea:	04 20                	add    al,0x20
    62ec:	2f                   	(bad)
    62ed:	00 00                	add    BYTE PTR [rax],al
    62ef:	03 ee                	add    ebp,esi
    62f1:	0d 03 2e 29 00       	or     eax,0x292e03
    62f6:	00 35 00 00 00 60    	add    BYTE PTR [rip+0x60000000],dh        # 600062fc <_end+0x600002e4>
    62fc:	0d 00 00 01 35       	or     eax,0x35010000
    6301:	00 00                	add    BYTE PTR [rax],al
    6303:	00 01                	add    BYTE PTR [rcx],al
    6305:	35 00 00 00 01       	xor    eax,0x1000000
    630a:	35 00 00 00 00       	xor    eax,0x0
    630f:	04 20                	add    al,0x20
    6311:	2f                   	(bad)
    6312:	00 00                	add    BYTE PTR [rax],al
    6314:	03 b4 08 03 8b 12 00 	add    esi,DWORD PTR [rax+rcx*1+0x128b03]
    631b:	00 c5                	add    ch,al
    631d:	21 00                	and    DWORD PTR [rax],eax
    631f:	00 80 0d 00 00 01    	add    BYTE PTR [rax+0x100000d],al
    6325:	c5 21 00             	(bad)
    6328:	00 01                	add    BYTE PTR [rcx],al
    632a:	c5 21 00             	(bad)
    632d:	00 00                	add    BYTE PTR [rax],al
    632f:	04 20                	add    al,0x20
    6331:	2f                   	(bad)
    6332:	00 00                	add    BYTE PTR [rax],al
    6334:	03 b0 08 03 7a 13    	add    esi,DWORD PTR [rax+0x137a0308]
    633a:	00 00                	add    BYTE PTR [rax],al
    633c:	35 00 00 00 a0       	xor    eax,0xa0000000
    6341:	0d 00 00 01 35       	or     eax,0x35010000
    6346:	00 00                	add    BYTE PTR [rax],al
    6348:	00 01                	add    BYTE PTR [rcx],al
    634a:	35 00 00 00 00       	xor    eax,0x0
    634f:	04 53                	add    al,0x53
    6351:	26 00 00             	es add BYTE PTR [rax],al
    6354:	03 be 08 03 55 30    	add    edi,DWORD PTR [rsi+0x30550308]
    635a:	00 00                	add    BYTE PTR [rax],al
    635c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    635d:	21 00                	and    DWORD PTR [rax],eax
    635f:	00 bb 0d 00 00 01    	add    BYTE PTR [rbx+0x100000d],bh
    6365:	c5 21 00             	(bad)
    6368:	00 00                	add    BYTE PTR [rax],al
    636a:	04 53                	add    al,0x53
    636c:	26 00 00             	es add BYTE PTR [rax],al
    636f:	03 ba 08 03 30 30    	add    edi,DWORD PTR [rdx+0x30300308]
    6375:	00 00                	add    BYTE PTR [rax],al
    6377:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6378:	21 00                	and    DWORD PTR [rax],eax
    637a:	00 d6                	add    dh,dl
    637c:	0d 00 00 01 35       	or     eax,0x35010000
    6381:	00 00                	add    BYTE PTR [rax],al
    6383:	00 00                	add    BYTE PTR [rax],al
    6385:	04 3f                	add    al,0x3f
    6387:	2d 00 00 03 d1       	sub    eax,0xd1030000
    638c:	08 03                	or     BYTE PTR [rbx],al
    638e:	36 0e                	ss (bad)
    6390:	00 00                	add    BYTE PTR [rax],al
    6392:	c5 21 00             	(bad)
    6395:	00 f1                	add    cl,dh
    6397:	0d 00 00 01 c5       	or     eax,0xc5010000
    639c:	21 00                	and    DWORD PTR [rax],eax
    639e:	00 00                	add    BYTE PTR [rax],al
    63a0:	04 3f                	add    al,0x3f
    63a2:	2d 00 00 03 cd       	sub    eax,0xcd030000
    63a7:	08 03                	or     BYTE PTR [rbx],al
    63a9:	43 0e                	rex.XB (bad)
    63ab:	00 00                	add    BYTE PTR [rax],al
    63ad:	35 00 00 00 0c       	xor    eax,0xc000000
    63b2:	0e                   	(bad)
    63b3:	00 00                	add    BYTE PTR [rax],al
    63b5:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 63bb <_end+0x3a3>
    63bb:	04 02                	add    al,0x2
    63bd:	34 00                	xor    al,0x0
    63bf:	00 03                	add    BYTE PTR [rbx],al
    63c1:	e3 08                	jrcxz  63cb <_end+0x3b3>
    63c3:	03 a3 2b 00 00 be    	add    esp,DWORD PTR [rbx-0x41ffffd5]
    63c9:	21 00                	and    DWORD PTR [rax],eax
    63cb:	00 27                	add    BYTE PTR [rdi],ah
    63cd:	0e                   	(bad)
    63ce:	00 00                	add    BYTE PTR [rax],al
    63d0:	01 c5                	add    ebp,eax
    63d2:	21 00                	and    DWORD PTR [rax],eax
    63d4:	00 00                	add    BYTE PTR [rax],al
    63d6:	04 02                	add    al,0x2
    63d8:	34 00                	xor    al,0x0
    63da:	00 03                	add    BYTE PTR [rbx],al
    63dc:	df 08                	fisttp WORD PTR [rax]
    63de:	03 0b                	add    ecx,DWORD PTR [rbx]
    63e0:	33 00                	xor    eax,DWORD PTR [rax]
    63e2:	00 be 21 00 00 42    	add    BYTE PTR [rsi+0x42000021],bh
    63e8:	0e                   	(bad)
    63e9:	00 00                	add    BYTE PTR [rax],al
    63eb:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 63f1 <_end+0x3d9>
    63f1:	04 1c                	add    al,0x1c
    63f3:	23 00                	and    eax,DWORD PTR [rax]
    63f5:	00 03                	add    BYTE PTR [rbx],al
    63f7:	f5                   	cmc
    63f8:	08 03                	or     BYTE PTR [rbx],al
    63fa:	7b 1b                	jnp    6417 <_end+0x3ff>
    63fc:	00 00                	add    BYTE PTR [rax],al
    63fe:	be 21 00 00 5d       	mov    esi,0x5d000021
    6403:	0e                   	(bad)
    6404:	00 00                	add    BYTE PTR [rax],al
    6406:	01 c5                	add    ebp,eax
    6408:	21 00                	and    DWORD PTR [rax],eax
    640a:	00 00                	add    BYTE PTR [rax],al
    640c:	04 1c                	add    al,0x1c
    640e:	23 00                	and    eax,DWORD PTR [rax]
    6410:	00 03                	add    BYTE PTR [rbx],al
    6412:	f1                   	int1
    6413:	08 03                	or     BYTE PTR [rbx],al
    6415:	89 1b                	mov    DWORD PTR [rbx],ebx
    6417:	00 00                	add    BYTE PTR [rax],al
    6419:	be 21 00 00 78       	mov    esi,0x78000021
    641e:	0e                   	(bad)
    641f:	00 00                	add    BYTE PTR [rax],al
    6421:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6427 <_end+0x40f>
    6427:	04 f3                	add    al,0xf3
    6429:	18 00                	sbb    BYTE PTR [rax],al
    642b:	00 03                	add    BYTE PTR [rbx],al
    642d:	07                   	(bad)
    642e:	09 03                	or     DWORD PTR [rbx],eax
    6430:	bd 11 00 00 c5       	mov    ebp,0xc5000011
    6435:	21 00                	and    DWORD PTR [rax],eax
    6437:	00 93 0e 00 00 01    	add    BYTE PTR [rbx+0x100000e],dl
    643d:	c5 21 00             	(bad)
    6440:	00 00                	add    BYTE PTR [rax],al
    6442:	04 f3                	add    al,0xf3
    6444:	18 00                	sbb    BYTE PTR [rax],al
    6446:	00 03                	add    BYTE PTR [rbx],al
    6448:	03 09                	add    ecx,DWORD PTR [rcx]
    644a:	03 ee                	add    ebp,esi
    644c:	1c 00                	sbb    al,0x0
    644e:	00 35 00 00 00 ae    	add    BYTE PTR [rip+0xffffffffae000000],dh        # ffffffffae006454 <_end+0xffffffffae00043c>
    6454:	0e                   	(bad)
    6455:	00 00                	add    BYTE PTR [rax],al
    6457:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 645d <_end+0x445>
    645d:	04 88                	add    al,0x88
    645f:	1c 00                	sbb    al,0x0
    6461:	00 03                	add    BYTE PTR [rbx],al
    6463:	1a 09                	sbb    cl,BYTE PTR [rcx]
    6465:	03 e2                	add    esp,edx
    6467:	14 00                	adc    al,0x0
    6469:	00 c5                	add    ch,al
    646b:	21 00                	and    DWORD PTR [rax],eax
    646d:	00 c9                	add    cl,cl
    646f:	0e                   	(bad)
    6470:	00 00                	add    BYTE PTR [rax],al
    6472:	01 c5                	add    ebp,eax
    6474:	21 00                	and    DWORD PTR [rax],eax
    6476:	00 00                	add    BYTE PTR [rax],al
    6478:	04 88                	add    al,0x88
    647a:	1c 00                	sbb    al,0x0
    647c:	00 03                	add    BYTE PTR [rbx],al
    647e:	16                   	(bad)
    647f:	09 03                	or     DWORD PTR [rbx],eax
    6481:	ed                   	in     eax,dx
    6482:	14 00                	adc    al,0x0
    6484:	00 35 00 00 00 e4    	add    BYTE PTR [rip+0xffffffffe4000000],dh        # ffffffffe400648a <_end+0xffffffffe4000472>
    648a:	0e                   	(bad)
    648b:	00 00                	add    BYTE PTR [rax],al
    648d:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6493 <_end+0x47b>
    6493:	04 54                	add    al,0x54
    6495:	26 00 00             	es add BYTE PTR [rax],al
    6498:	03 2c 09             	add    ebp,DWORD PTR [rcx+rcx*1]
    649b:	03 fd                	add    edi,ebp
    649d:	2b 00                	sub    eax,DWORD PTR [rax]
    649f:	00 c5                	add    ch,al
    64a1:	21 00                	and    DWORD PTR [rax],eax
    64a3:	00 ff                	add    bh,bh
    64a5:	0e                   	(bad)
    64a6:	00 00                	add    BYTE PTR [rax],al
    64a8:	01 c5                	add    ebp,eax
    64aa:	21 00                	and    DWORD PTR [rax],eax
    64ac:	00 00                	add    BYTE PTR [rax],al
    64ae:	04 54                	add    al,0x54
    64b0:	26 00 00             	es add BYTE PTR [rax],al
    64b3:	03 28                	add    ebp,DWORD PTR [rax]
    64b5:	09 03                	or     DWORD PTR [rbx],eax
    64b7:	08 2c 00             	or     BYTE PTR [rax+rax*1],ch
    64ba:	00 35 00 00 00 1a    	add    BYTE PTR [rip+0x1a000000],dh        # 1a0064c0 <_end+0x1a0004a8>
    64c0:	0f 00 00             	sldt   WORD PTR [rax]
    64c3:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 64c9 <_end+0x4b1>
    64c9:	04 03                	add    al,0x3
    64cb:	34 00                	xor    al,0x0
    64cd:	00 03                	add    BYTE PTR [rbx],al
    64cf:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    64d2:	b9 30 00 00 b2       	mov    ecx,0xb2000030
    64d7:	21 00                	and    DWORD PTR [rax],eax
    64d9:	00 35 0f 00 00 01    	add    BYTE PTR [rip+0x100000f],dh        # 10064ee <_end+0x10004d6>
    64df:	c5 21 00             	(bad)
    64e2:	00 00                	add    BYTE PTR [rax],al
    64e4:	04 03                	add    al,0x3
    64e6:	34 00                	xor    al,0x0
    64e8:	00 03                	add    BYTE PTR [rbx],al
    64ea:	3a 09                	cmp    cl,BYTE PTR [rcx]
    64ec:	03 64 10 00          	add    esp,DWORD PTR [rax+rdx*1+0x0]
    64f0:	00 b2 21 00 00 50    	add    BYTE PTR [rdx+0x50000021],dh
    64f6:	0f 00 00             	sldt   WORD PTR [rax]
    64f9:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 64ff <_end+0x4e7>
    64ff:	04 1d                	add    al,0x1d
    6501:	23 00                	and    eax,DWORD PTR [rax]
    6503:	00 03                	add    BYTE PTR [rbx],al
    6505:	50                   	push   rax
    6506:	09 03                	or     DWORD PTR [rbx],eax
    6508:	fe                   	(bad)
    6509:	32 00                	xor    al,BYTE PTR [rax]
    650b:	00 b2 21 00 00 6b    	add    BYTE PTR [rdx+0x6b000021],dh
    6511:	0f 00 00             	sldt   WORD PTR [rax]
    6514:	01 c5                	add    ebp,eax
    6516:	21 00                	and    DWORD PTR [rax],eax
    6518:	00 00                	add    BYTE PTR [rax],al
    651a:	04 1d                	add    al,0x1d
    651c:	23 00                	and    eax,DWORD PTR [rax]
    651e:	00 03                	add    BYTE PTR [rbx],al
    6520:	4c 09 03             	or     QWORD PTR [rbx],r8
    6523:	72 17                	jb     653c <_end+0x524>
    6525:	00 00                	add    BYTE PTR [rax],al
    6527:	b2 21                	mov    dl,0x21
    6529:	00 00                	add    BYTE PTR [rax],al
    652b:	86 0f                	xchg   BYTE PTR [rdi],cl
    652d:	00 00                	add    BYTE PTR [rax],al
    652f:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6535 <_end+0x51d>
    6535:	04 53                	add    al,0x53
    6537:	14 00                	adc    al,0x0
    6539:	00 03                	add    BYTE PTR [rbx],al
    653b:	62 09 03 f8 13       	(bad)
    6540:	00 00                	add    BYTE PTR [rax],al
    6542:	c5 21 00             	(bad)
    6545:	00 a1 0f 00 00 01    	add    BYTE PTR [rcx+0x100000f],ah
    654b:	c5 21 00             	(bad)
    654e:	00 00                	add    BYTE PTR [rax],al
    6550:	04 53                	add    al,0x53
    6552:	14 00                	adc    al,0x0
    6554:	00 03                	add    BYTE PTR [rbx],al
    6556:	5e                   	pop    rsi
    6557:	09 03                	or     DWORD PTR [rbx],eax
    6559:	d6                   	(bad)
    655a:	16                   	(bad)
    655b:	00 00                	add    BYTE PTR [rax],al
    655d:	35 00 00 00 bc       	xor    eax,0xbc000000
    6562:	0f 00 00             	sldt   WORD PTR [rax]
    6565:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 656b <_end+0x553>
    656b:	04 00                	add    al,0x0
    656d:	28 00                	sub    BYTE PTR [rax],al
    656f:	00 03                	add    BYTE PTR [rbx],al
    6571:	74 09                	je     657c <_end+0x564>
    6573:	03 06                	add    eax,DWORD PTR [rsi]
    6575:	0e                   	(bad)
    6576:	00 00                	add    BYTE PTR [rax],al
    6578:	c5 21 00             	(bad)
    657b:	00 dc                	add    ah,bl
    657d:	0f 00 00             	sldt   WORD PTR [rax]
    6580:	01 c5                	add    ebp,eax
    6582:	21 00                	and    DWORD PTR [rax],eax
    6584:	00 01                	add    BYTE PTR [rcx],al
    6586:	c5 21 00             	(bad)
    6589:	00 00                	add    BYTE PTR [rax],al
    658b:	04 00                	add    al,0x0
    658d:	28 00                	sub    BYTE PTR [rax],al
    658f:	00 03                	add    BYTE PTR [rbx],al
    6591:	70 09                	jo     659c <_end+0x584>
    6593:	03 96 10 00 00 35    	add    edx,DWORD PTR [rsi+0x35000010]
    6599:	00 00                	add    BYTE PTR [rax],al
    659b:	00 fc                	add    ah,bh
    659d:	0f 00 00             	sldt   WORD PTR [rax]
    65a0:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 10065a6 <_end+0x100058e>
    65a6:	35 00 00 00 00       	xor    eax,0x0
    65ab:	04 0b                	add    al,0xb
    65ad:	12 00                	adc    al,BYTE PTR [rax]
    65af:	00 03                	add    BYTE PTR [rbx],al
    65b1:	7e 09                	jle    65bc <_end+0x5a4>
    65b3:	03 20                	add    esp,DWORD PTR [rax]
    65b5:	25 00 00 c5 21       	and    eax,0x21c50000
    65ba:	00 00                	add    BYTE PTR [rax],al
    65bc:	1c 10                	sbb    al,0x10
    65be:	00 00                	add    BYTE PTR [rax],al
    65c0:	01 c5                	add    ebp,eax
    65c2:	21 00                	and    DWORD PTR [rax],eax
    65c4:	00 01                	add    BYTE PTR [rcx],al
    65c6:	c5 21 00             	(bad)
    65c9:	00 00                	add    BYTE PTR [rax],al
    65cb:	04 0b                	add    al,0xb
    65cd:	12 00                	adc    al,BYTE PTR [rax]
    65cf:	00 03                	add    BYTE PTR [rbx],al
    65d1:	7a 09                	jp     65dc <_end+0x5c4>
    65d3:	03 2a                	add    ebp,DWORD PTR [rdx]
    65d5:	0f 00 00             	sldt   WORD PTR [rax]
    65d8:	35 00 00 00 3c       	xor    eax,0x3c000000
    65dd:	10 00                	adc    BYTE PTR [rax],al
    65df:	00 01                	add    BYTE PTR [rcx],al
    65e1:	35 00 00 00 01       	xor    eax,0x1000000
    65e6:	c5 21 00             	(bad)
    65e9:	00 00                	add    BYTE PTR [rax],al
    65eb:	04 a9                	add    al,0xa9
    65ed:	07                   	(bad)
    65ee:	00 00                	add    BYTE PTR [rax],al
    65f0:	03 90 09 03 cd 30    	add    edx,DWORD PTR [rax+0x30cd0309]
    65f6:	00 00                	add    BYTE PTR [rax],al
    65f8:	c5 21 00             	(bad)
    65fb:	00 5c 10 00          	add    BYTE PTR [rax+rdx*1+0x0],bl
    65ff:	00 01                	add    BYTE PTR [rcx],al
    6601:	c5 21 00             	(bad)
    6604:	00 01                	add    BYTE PTR [rcx],al
    6606:	c5 21 00             	(bad)
    6609:	00 00                	add    BYTE PTR [rax],al
    660b:	04 a9                	add    al,0xa9
    660d:	07                   	(bad)
    660e:	00 00                	add    BYTE PTR [rax],al
    6610:	03 8c 09 03 31 32 00 	add    ecx,DWORD PTR [rcx+rcx*1+0x323103]
    6617:	00 35 00 00 00 7c    	add    BYTE PTR [rip+0x7c000000],dh        # 7c00661d <_end+0x7c000605>
    661d:	10 00                	adc    BYTE PTR [rax],al
    661f:	00 01                	add    BYTE PTR [rcx],al
    6621:	35 00 00 00 01       	xor    eax,0x1000000
    6626:	35 00 00 00 00       	xor    eax,0x0
    662b:	04 59                	add    al,0x59
    662d:	23 00                	and    eax,DWORD PTR [rax]
    662f:	00 03                	add    BYTE PTR [rbx],al
    6631:	9a                   	(bad)
    6632:	09 03                	or     DWORD PTR [rbx],eax
    6634:	91                   	xchg   ecx,eax
    6635:	16                   	(bad)
    6636:	00 00                	add    BYTE PTR [rax],al
    6638:	c5 21 00             	(bad)
    663b:	00 a1 10 00 00 01    	add    BYTE PTR [rcx+0x1000010],ah
    6641:	c5 21 00             	(bad)
    6644:	00 01                	add    BYTE PTR [rcx],al
    6646:	c5 21 00             	(bad)
    6649:	00 01                	add    BYTE PTR [rcx],al
    664b:	ba 25 00 00 00       	mov    edx,0x25
    6650:	04 59                	add    al,0x59
    6652:	23 00                	and    eax,DWORD PTR [rax]
    6654:	00 03                	add    BYTE PTR [rbx],al
    6656:	96                   	xchg   esi,eax
    6657:	09 03                	or     DWORD PTR [rbx],eax
    6659:	dd 33                	fnsave [rbx]
    665b:	00 00                	add    BYTE PTR [rax],al
    665d:	35 00 00 00 c6       	xor    eax,0xc6000000
    6662:	10 00                	adc    BYTE PTR [rax],al
    6664:	00 01                	add    BYTE PTR [rcx],al
    6666:	35 00 00 00 01       	xor    eax,0x1000000
    666b:	35 00 00 00 01       	xor    eax,0x1000000
    6670:	ba 25 00 00 00       	mov    edx,0x25
    6675:	04 2e                	add    al,0x2e
    6677:	05 00 00 03 a4       	add    eax,0xa4030000
    667c:	09 03                	or     DWORD PTR [rbx],eax
    667e:	95                   	xchg   ebp,eax
    667f:	2e 00 00             	cs add BYTE PTR [rax],al
    6682:	c5 21 00             	(bad)
    6685:	00 e1                	add    cl,ah
    6687:	10 00                	adc    BYTE PTR [rax],al
    6689:	00 01                	add    BYTE PTR [rcx],al
    668b:	c5 21 00             	(bad)
    668e:	00 00                	add    BYTE PTR [rax],al
    6690:	04 2e                	add    al,0x2e
    6692:	05 00 00 03 a0       	add    eax,0xa0030000
    6697:	09 03                	or     DWORD PTR [rbx],eax
    6699:	a0 2e 00 00 35 00 00 	movabs al,ds:0xfc0000003500002e
    66a0:	00 fc 
    66a2:	10 00                	adc    BYTE PTR [rax],al
    66a4:	00 01                	add    BYTE PTR [rcx],al
    66a6:	35 00 00 00 00       	xor    eax,0x0
    66ab:	04 1e                	add    al,0x1e
    66ad:	23 00                	and    eax,DWORD PTR [rax]
    66af:	00 03                	add    BYTE PTR [rbx],al
    66b1:	b6 09                	mov    dh,0x9
    66b3:	03 06                	add    eax,DWORD PTR [rsi]
    66b5:	1e                   	(bad)
    66b6:	00 00                	add    BYTE PTR [rax],al
    66b8:	c5 21 00             	(bad)
    66bb:	00 17                	add    BYTE PTR [rdi],dl
    66bd:	11 00                	adc    DWORD PTR [rax],eax
    66bf:	00 01                	add    BYTE PTR [rcx],al
    66c1:	c5 21 00             	(bad)
    66c4:	00 00                	add    BYTE PTR [rax],al
    66c6:	04 1e                	add    al,0x1e
    66c8:	23 00                	and    eax,DWORD PTR [rax]
    66ca:	00 03                	add    BYTE PTR [rbx],al
    66cc:	b2 09                	mov    dl,0x9
    66ce:	03 12                	add    edx,DWORD PTR [rdx]
    66d0:	1e                   	(bad)
    66d1:	00 00                	add    BYTE PTR [rax],al
    66d3:	35 00 00 00 32       	xor    eax,0x32000000
    66d8:	11 00                	adc    DWORD PTR [rax],eax
    66da:	00 01                	add    BYTE PTR [rcx],al
    66dc:	35 00 00 00 00       	xor    eax,0x0
    66e1:	04 33                	add    al,0x33
    66e3:	25 00 00 03 c8       	and    eax,0xc8030000
    66e8:	09 03                	or     DWORD PTR [rbx],eax
    66ea:	e3 19                	jrcxz  6705 <_end+0x6ed>
    66ec:	00 00                	add    BYTE PTR [rax],al
    66ee:	c5 21 00             	(bad)
    66f1:	00 52 11             	add    BYTE PTR [rdx+0x11],dl
    66f4:	00 00                	add    BYTE PTR [rax],al
    66f6:	01 c5                	add    ebp,eax
    66f8:	21 00                	and    DWORD PTR [rax],eax
    66fa:	00 01                	add    BYTE PTR [rcx],al
    66fc:	b2 21                	mov    dl,0x21
    66fe:	00 00                	add    BYTE PTR [rax],al
    6700:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    6703:	25 00 00 03 c4       	and    eax,0xc4030000
    6708:	09 03                	or     DWORD PTR [rbx],eax
    670a:	ae                   	scas   al,BYTE PTR es:[rdi]
    670b:	1b 00                	sbb    eax,DWORD PTR [rax]
    670d:	00 35 00 00 00 72    	add    BYTE PTR [rip+0x72000000],dh        # 72006713 <_end+0x720006fb>
    6713:	11 00                	adc    DWORD PTR [rax],eax
    6715:	00 01                	add    BYTE PTR [rcx],al
    6717:	35 00 00 00 01       	xor    eax,0x1000000
    671c:	b2 21                	mov    dl,0x21
    671e:	00 00                	add    BYTE PTR [rax],al
    6720:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    6723:	2e 00 00             	cs add BYTE PTR [rax],al
    6726:	03 da                	add    ebx,edx
    6728:	09 03                	or     DWORD PTR [rbx],eax
    672a:	0d 10 00 00 c5       	or     eax,0xc5000010
    672f:	21 00                	and    DWORD PTR [rax],eax
    6731:	00 92 11 00 00 01    	add    BYTE PTR [rdx+0x1000011],dl
    6737:	c5 21 00             	(bad)
    673a:	00 01                	add    BYTE PTR [rcx],al
    673c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    673d:	21 00                	and    DWORD PTR [rax],eax
    673f:	00 00                	add    BYTE PTR [rax],al
    6741:	04 0e                	add    al,0xe
    6743:	2e 00 00             	cs add BYTE PTR [rax],al
    6746:	03 d6                	add    edx,esi
    6748:	09 03                	or     DWORD PTR [rbx],eax
    674a:	e1 0b                	loope  6757 <_end+0x73f>
    674c:	00 00                	add    BYTE PTR [rax],al
    674e:	35 00 00 00 b2       	xor    eax,0xb2000000
    6753:	11 00                	adc    DWORD PTR [rax],eax
    6755:	00 01                	add    BYTE PTR [rcx],al
    6757:	35 00 00 00 01       	xor    eax,0x1000000
    675c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    675d:	21 00                	and    DWORD PTR [rax],eax
    675f:	00 00                	add    BYTE PTR [rax],al
    6761:	04 74                	add    al,0x74
    6763:	1b 00                	sbb    eax,DWORD PTR [rax]
    6765:	00 03                	add    BYTE PTR [rbx],al
    6767:	ec                   	in     al,dx
    6768:	09 03                	or     DWORD PTR [rbx],eax
    676a:	f0 1e                	lock (bad)
    676c:	00 00                	add    BYTE PTR [rax],al
    676e:	c5 21 00             	(bad)
    6771:	00 cd                	add    ch,cl
    6773:	11 00                	adc    DWORD PTR [rax],eax
    6775:	00 01                	add    BYTE PTR [rcx],al
    6777:	c5 21 00             	(bad)
    677a:	00 00                	add    BYTE PTR [rax],al
    677c:	04 74                	add    al,0x74
    677e:	1b 00                	sbb    eax,DWORD PTR [rax]
    6780:	00 03                	add    BYTE PTR [rbx],al
    6782:	e8 09 03 fd 1e       	call   1efd6a90 <_end+0x1efd0a78>
    6787:	00 00                	add    BYTE PTR [rax],al
    6789:	35 00 00 00 e8       	xor    eax,0xe8000000
    678e:	11 00                	adc    DWORD PTR [rax],eax
    6790:	00 01                	add    BYTE PTR [rcx],al
    6792:	35 00 00 00 00       	xor    eax,0x0
    6797:	04 24                	add    al,0x24
    6799:	2a 00                	sub    al,BYTE PTR [rax]
    679b:	00 03                	add    BYTE PTR [rbx],al
    679d:	fe 09                	dec    BYTE PTR [rcx]
    679f:	03 20                	add    esp,DWORD PTR [rax]
    67a1:	21 00                	and    DWORD PTR [rax],eax
    67a3:	00 c5                	add    ch,al
    67a5:	21 00                	and    DWORD PTR [rax],eax
    67a7:	00 03                	add    BYTE PTR [rbx],al
    67a9:	12 00                	adc    al,BYTE PTR [rax]
    67ab:	00 01                	add    BYTE PTR [rcx],al
    67ad:	c5 21 00             	(bad)
    67b0:	00 00                	add    BYTE PTR [rax],al
    67b2:	04 24                	add    al,0x24
    67b4:	2a 00                	sub    al,BYTE PTR [rax]
    67b6:	00 03                	add    BYTE PTR [rbx],al
    67b8:	fa                   	cli
    67b9:	09 03                	or     DWORD PTR [rbx],eax
    67bb:	2c 21                	sub    al,0x21
    67bd:	00 00                	add    BYTE PTR [rax],al
    67bf:	35 00 00 00 1e       	xor    eax,0x1e000000
    67c4:	12 00                	adc    al,BYTE PTR [rax]
    67c6:	00 01                	add    BYTE PTR [rcx],al
    67c8:	35 00 00 00 00       	xor    eax,0x0
    67cd:	02 08                	add    cl,BYTE PTR [rax]
    67cf:	83 0b 61             	or     DWORD PTR [rbx],0x61
    67d2:	23 00                	and    eax,DWORD PTR [rax]
    67d4:	00 02                	add    BYTE PTR [rdx],al
    67d6:	08 84 0b 94 23 00 00 	or     BYTE PTR [rbx+rcx*1+0x2394],al
    67dd:	02 08                	add    cl,BYTE PTR [rax]
    67df:	8a 0b                	mov    cl,BYTE PTR [rbx]
    67e1:	c2 2d 00             	ret    0x2d
    67e4:	00 02                	add    BYTE PTR [rdx],al
    67e6:	08 8d 0b df 2d 00    	or     BYTE PTR [rbp+0x2ddf0b],cl
    67ec:	00 02                	add    BYTE PTR [rdx],al
    67ee:	08 90 0b fa 2d 00    	or     BYTE PTR [rax+0x2dfa0b],dl
    67f4:	00 02                	add    BYTE PTR [rdx],al
    67f6:	08 91 0b 10 2e 00    	or     BYTE PTR [rcx+0x2e100b],dl
    67fc:	00 02                	add    BYTE PTR [rdx],al
    67fe:	08 92 0b 27 2e 00    	or     BYTE PTR [rdx+0x2e270b],dl
    6804:	00 02                	add    BYTE PTR [rdx],al
    6806:	08 93 0b 3e 2e 00    	or     BYTE PTR [rbx+0x2e3e0b],dl
    680c:	00 02                	add    BYTE PTR [rdx],al
    680e:	08 95 0b 68 2e 00    	or     BYTE PTR [rbp+0x2e680b],dl
    6814:	00 02                	add    BYTE PTR [rdx],al
    6816:	08 98 0b 84 2e 00    	or     BYTE PTR [rax+0x2e840b],bl
    681c:	00 02                	add    BYTE PTR [rdx],al
    681e:	08 9a 0b 9b 2e 00    	or     BYTE PTR [rdx+0x2e9b0b],bl
    6824:	00 02                	add    BYTE PTR [rdx],al
    6826:	08 9d 0b b7 2e 00    	or     BYTE PTR [rbp+0x2eb70b],bl
    682c:	00 02                	add    BYTE PTR [rdx],al
    682e:	08 9e 0b d3 2e 00    	or     BYTE PTR [rsi+0x2ed30b],bl
    6834:	00 02                	add    BYTE PTR [rdx],al
    6836:	08 9f 0b f8 2e 00    	or     BYTE PTR [rdi+0x2ef80b],bl
    683c:	00 02                	add    BYTE PTR [rdx],al
    683e:	08 a1 0b 19 2f 00    	or     BYTE PTR [rcx+0x2f190b],ah
    6844:	00 02                	add    BYTE PTR [rdx],al
    6846:	08 a4 0b 3a 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2f3a],ah
    684d:	02 08                	add    cl,BYTE PTR [rax]
    684f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    6850:	0b 4d 2f             	or     ecx,DWORD PTR [rbp+0x2f]
    6853:	00 00                	add    BYTE PTR [rax],al
    6855:	02 08                	add    cl,BYTE PTR [rax]
    6857:	a9 0b 5a 2f 00       	test   eax,0x2f5a0b
    685c:	00 02                	add    BYTE PTR [rdx],al
    685e:	08 aa 0b 6c 2f 00    	or     BYTE PTR [rdx+0x2f6c0b],ch
    6864:	00 02                	add    BYTE PTR [rdx],al
    6866:	08 ab 0b 8c 2f 00    	or     BYTE PTR [rbx+0x2f8c0b],ch
    686c:	00 02                	add    BYTE PTR [rdx],al
    686e:	08 ac 0b b0 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2fb0],ch
    6875:	02 08                	add    cl,BYTE PTR [rax]
    6877:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6878:	0b d4                	or     edx,esp
    687a:	2f                   	(bad)
    687b:	00 00                	add    BYTE PTR [rax],al
    687d:	02 08                	add    cl,BYTE PTR [rax]
    687f:	af                   	scas   eax,DWORD PTR es:[rdi]
    6880:	0b eb                	or     ebp,ebx
    6882:	2f                   	(bad)
    6883:	00 00                	add    BYTE PTR [rax],al
    6885:	02 08                	add    cl,BYTE PTR [rax]
    6887:	b0 0b                	mov    al,0xb
    6889:	10 30                	adc    BYTE PTR [rax],dh
    688b:	00 00                	add    BYTE PTR [rax],al
    688d:	02 08                	add    cl,BYTE PTR [rax]
    688f:	f4                   	hlt
    6890:	16                   	(bad)
    6891:	c7                   	(bad)
    6892:	23 00                	and    eax,DWORD PTR [rax]
    6894:	00 02                	add    BYTE PTR [rdx],al
    6896:	08 f9                	or     cl,bh
    6898:	16                   	(bad)
    6899:	43 21 00             	rex.XB and DWORD PTR [r8],eax
    689c:	00 02                	add    BYTE PTR [rdx],al
    689e:	08 fa                	or     dl,bh
    68a0:	16                   	(bad)
    68a1:	2b 30                	sub    esi,DWORD PTR [rax]
    68a3:	00 00                	add    BYTE PTR [rax],al
    68a5:	02 08                	add    cl,BYTE PTR [rax]
    68a7:	fc                   	cld
    68a8:	16                   	(bad)
    68a9:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    68ac:	00 02                	add    BYTE PTR [rdx],al
    68ae:	08 fd                	or     ch,bh
    68b0:	16                   	(bad)
    68b1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    68b2:	30 00                	xor    BYTE PTR [rax],al
    68b4:	00 02                	add    BYTE PTR [rdx],al
    68b6:	08 fe                	or     dh,bh
    68b8:	16                   	(bad)
    68b9:	5e                   	pop    rsi
    68ba:	30 00                	xor    BYTE PTR [rax],al
    68bc:	00 02                	add    BYTE PTR [rdx],al
    68be:	08 ff                	or     bh,bh
    68c0:	16                   	(bad)
    68c1:	82                   	(bad)
    68c2:	30 00                	xor    BYTE PTR [rax],al
    68c4:	00 18                	add    BYTE PTR [rax],bl
    68c6:	08 00                	or     BYTE PTR [rax],al
    68c8:	01 16                	add    DWORD PTR [rsi],edx
    68ca:	c1 30 00             	shl    DWORD PTR [rax],0x0
    68cd:	00 1a                	add    BYTE PTR [rdx],bl
    68cf:	64 69 76 00 08 b5 74 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b508
    68d6:	00 
    68d7:	00 00                	add    BYTE PTR [rax],al
    68d9:	94                   	xchg   esp,eax
    68da:	23 00                	and    eax,DWORD PTR [rax]
    68dc:	00 3d 13 00 00 01    	add    BYTE PTR [rip+0x1000013],bh        # 10068f5 <_end+0x10008dd>
    68e2:	b2 21                	mov    dl,0x21
    68e4:	00 00                	add    BYTE PTR [rax],al
    68e6:	01 b2 21 00 00 00    	add    DWORD PTR [rdx+0x21],esi
    68ec:	02 09                	add    cl,BYTE PTR [rcx]
    68ee:	40 0b 3a             	rex or edi,DWORD PTR [rdx]
    68f1:	32 00                	xor    al,BYTE PTR [rax]
    68f3:	00 02                	add    BYTE PTR [rdx],al
    68f5:	09 8d 0b 2e 32 00    	or     DWORD PTR [rbp+0x322e0b],ecx
    68fb:	00 02                	add    BYTE PTR [rdx],al
    68fd:	09 8f 0b 4b 32 00    	or     DWORD PTR [rdi+0x324b0b],ecx
    6903:	00 02                	add    BYTE PTR [rdx],al
    6905:	09 90 0b 62 32 00    	or     DWORD PTR [rax+0x32620b],edx
    690b:	00 02                	add    BYTE PTR [rdx],al
    690d:	09 91 0b 7e 32 00    	or     DWORD PTR [rcx+0x327e0b],edx
    6913:	00 02                	add    BYTE PTR [rdx],al
    6915:	09 92 0b 9e 32 00    	or     DWORD PTR [rdx+0x329e0b],edx
    691b:	00 02                	add    BYTE PTR [rdx],al
    691d:	09 93 0b ba 32 00    	or     DWORD PTR [rbx+0x32ba0b],edx
    6923:	00 02                	add    BYTE PTR [rdx],al
    6925:	09 94 0b d6 32 00 00 	or     DWORD PTR [rbx+rcx*1+0x32d6],edx
    692c:	02 09                	add    cl,BYTE PTR [rcx]
    692e:	95                   	xchg   ebp,eax
    692f:	0b f2                	or     esi,edx
    6931:	32 00                	xor    al,BYTE PTR [rax]
    6933:	00 02                	add    BYTE PTR [rdx],al
    6935:	09 96 0b 0e 33 00    	or     DWORD PTR [rsi+0x330e0b],edx
    693b:	00 02                	add    BYTE PTR [rdx],al
    693d:	09 97 0b 2f 33 00    	or     DWORD PTR [rdi+0x332f0b],edx
    6943:	00 02                	add    BYTE PTR [rdx],al
    6945:	09 98 0b 46 33 00    	or     DWORD PTR [rax+0x33460b],ebx
    694b:	00 02                	add    BYTE PTR [rdx],al
    694d:	09 99 0b 53 33 00    	or     DWORD PTR [rcx+0x33530b],ebx
    6953:	00 02                	add    BYTE PTR [rdx],al
    6955:	09 9a 0b 79 33 00    	or     DWORD PTR [rdx+0x33790b],ebx
    695b:	00 02                	add    BYTE PTR [rdx],al
    695d:	09 9b 0b 9f 33 00    	or     DWORD PTR [rbx+0x339f0b],ebx
    6963:	00 02                	add    BYTE PTR [rdx],al
    6965:	09 9c 0b bb 33 00 00 	or     DWORD PTR [rbx+rcx*1+0x33bb],ebx
    696c:	02 09                	add    cl,BYTE PTR [rcx]
    696e:	9d                   	popf
    696f:	0b e5                	or     esp,ebp
    6971:	33 00                	xor    eax,DWORD PTR [rax]
    6973:	00 02                	add    BYTE PTR [rdx],al
    6975:	09 9e 0b 01 34 00    	or     DWORD PTR [rsi+0x34010b],ebx
    697b:	00 02                	add    BYTE PTR [rdx],al
    697d:	09 a0 0b 18 34 00    	or     DWORD PTR [rax+0x34180b],esp
    6983:	00 02                	add    BYTE PTR [rdx],al
    6985:	09 a2 0b 39 34 00    	or     DWORD PTR [rdx+0x34390b],esp
    698b:	00 02                	add    BYTE PTR [rdx],al
    698d:	09 a3 0b 5a 34 00    	or     DWORD PTR [rbx+0x345a0b],esp
    6993:	00 02                	add    BYTE PTR [rdx],al
    6995:	09 a4 0b 76 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x3476],esp
    699c:	02 09                	add    cl,BYTE PTR [rcx]
    699e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    699f:	0b 9b 34 00 00 02    	or     ebx,DWORD PTR [rbx+0x2000034]
    69a5:	09 a9 0b c0 34 00    	or     DWORD PTR [rcx+0x34c00b],ebp
    69ab:	00 02                	add    BYTE PTR [rdx],al
    69ad:	09 ac 0b e5 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x34e5],ebp
    69b4:	02 09                	add    cl,BYTE PTR [rcx]
    69b6:	ae                   	scas   al,BYTE PTR es:[rdi]
    69b7:	0b 0a                	or     ecx,DWORD PTR [rdx]
    69b9:	35 00 00 02 09       	xor    eax,0x9020000
    69be:	b0 0b                	mov    al,0xb
    69c0:	25 35 00 00 02       	and    eax,0x2000035
    69c5:	09 b2 0b 45 35 00    	or     DWORD PTR [rdx+0x35450b],esi
    69cb:	00 02                	add    BYTE PTR [rdx],al
    69cd:	09 b3 0b 65 35 00    	or     DWORD PTR [rbx+0x35650b],esi
    69d3:	00 02                	add    BYTE PTR [rdx],al
    69d5:	09 b4 0b 80 35 00 00 	or     DWORD PTR [rbx+rcx*1+0x3580],esi
    69dc:	02 09                	add    cl,BYTE PTR [rcx]
    69de:	b5 0b                	mov    ch,0xb
    69e0:	9b                   	fwait
    69e1:	35 00 00 02 09       	xor    eax,0x9020000
    69e6:	b6 0b                	mov    dh,0xb
    69e8:	b6 35                	mov    dh,0x35
    69ea:	00 00                	add    BYTE PTR [rax],al
    69ec:	02 09                	add    cl,BYTE PTR [rcx]
    69ee:	b7 0b                	mov    bh,0xb
    69f0:	d1 35 00 00 02 09    	shl    DWORD PTR [rip+0x9020000],1        # 90269f6 <_end+0x90209de>
    69f6:	b8 0b ec 35 00       	mov    eax,0x35ec0b
    69fb:	00 02                	add    BYTE PTR [rdx],al
    69fd:	09 b9 0b b9 36 00    	or     DWORD PTR [rcx+0x36b90b],edi
    6a03:	00 02                	add    BYTE PTR [rdx],al
    6a05:	09 ba 0b cf 36 00    	or     DWORD PTR [rdx+0x36cf0b],edi
    6a0b:	00 02                	add    BYTE PTR [rdx],al
    6a0d:	09 bb 0b ef 36 00    	or     DWORD PTR [rbx+0x36ef0b],edi
    6a13:	00 02                	add    BYTE PTR [rdx],al
    6a15:	09 bc 0b 0f 37 00 00 	or     DWORD PTR [rbx+rcx*1+0x370f],edi
    6a1c:	02 09                	add    cl,BYTE PTR [rcx]
    6a1e:	bd 0b 2f 37 00       	mov    ebp,0x372f0b
    6a23:	00 02                	add    BYTE PTR [rdx],al
    6a25:	09 be 0b 5a 37 00    	or     DWORD PTR [rsi+0x375a0b],edi
    6a2b:	00 02                	add    BYTE PTR [rdx],al
    6a2d:	09 bf 0b 75 37 00    	or     DWORD PTR [rdi+0x37750b],edi
    6a33:	00 02                	add    BYTE PTR [rdx],al
    6a35:	09 c1                	or     ecx,eax
    6a37:	0b 96 37 00 00 02    	or     edx,DWORD PTR [rsi+0x2000037]
    6a3d:	09 c3                	or     ebx,eax
    6a3f:	0b b2 37 00 00 02    	or     esi,DWORD PTR [rdx+0x2000037]
    6a45:	09 c4                	or     esp,eax
    6a47:	0b d2                	or     edx,edx
    6a49:	37                   	(bad)
    6a4a:	00 00                	add    BYTE PTR [rax],al
    6a4c:	02 09                	add    cl,BYTE PTR [rcx]
    6a4e:	c5 0b f7             	(bad)
    6a51:	37                   	(bad)
    6a52:	00 00                	add    BYTE PTR [rax],al
    6a54:	02 09                	add    cl,BYTE PTR [rcx]
    6a56:	c6                   	(bad)
    6a57:	0b 1c 38             	or     ebx,DWORD PTR [rax+rdi*1]
    6a5a:	00 00                	add    BYTE PTR [rax],al
    6a5c:	02 09                	add    cl,BYTE PTR [rcx]
    6a5e:	c7                   	(bad)
    6a5f:	0b 3c 38             	or     edi,DWORD PTR [rax+rdi*1]
    6a62:	00 00                	add    BYTE PTR [rax],al
    6a64:	02 09                	add    cl,BYTE PTR [rcx]
    6a66:	c8 0b 53 38          	enter  0x530b,0x38
    6a6a:	00 00                	add    BYTE PTR [rax],al
    6a6c:	02 09                	add    cl,BYTE PTR [rcx]
    6a6e:	c9                   	leave
    6a6f:	0b 74 38 00          	or     esi,DWORD PTR [rax+rdi*1+0x0]
    6a73:	00 02                	add    BYTE PTR [rdx],al
    6a75:	09 ca                	or     edx,ecx
    6a77:	0b 94 38 00 00 02 09 	or     edx,DWORD PTR [rax+rdi*1+0x9020000]
    6a7e:	cb                   	retf
    6a7f:	0b b4 38 00 00 02 09 	or     esi,DWORD PTR [rax+rdi*1+0x9020000]
    6a86:	cc                   	int3
    6a87:	0b d4                	or     edx,esp
    6a89:	38 00                	cmp    BYTE PTR [rax],al
    6a8b:	00 02                	add    BYTE PTR [rdx],al
    6a8d:	09 cd                	or     ebp,ecx
    6a8f:	0b eb                	or     ebp,ebx
    6a91:	38 00                	cmp    BYTE PTR [rax],al
    6a93:	00 02                	add    BYTE PTR [rdx],al
    6a95:	09 ce                	or     esi,ecx
    6a97:	0b 07                	or     eax,DWORD PTR [rdi]
    6a99:	39 00                	cmp    DWORD PTR [rax],eax
    6a9b:	00 02                	add    BYTE PTR [rdx],al
    6a9d:	09 ce                	or     esi,ecx
    6a9f:	0b 26                	or     esp,DWORD PTR [rsi]
    6aa1:	39 00                	cmp    DWORD PTR [rax],eax
    6aa3:	00 02                	add    BYTE PTR [rdx],al
    6aa5:	09 cf                	or     edi,ecx
    6aa7:	0b 45 39             	or     eax,DWORD PTR [rbp+0x39]
    6aaa:	00 00                	add    BYTE PTR [rax],al
    6aac:	02 09                	add    cl,BYTE PTR [rcx]
    6aae:	cf                   	iret
    6aaf:	0b 64 39 00          	or     esp,DWORD PTR [rcx+rdi*1+0x0]
    6ab3:	00 02                	add    BYTE PTR [rdx],al
    6ab5:	09 d0                	or     eax,edx
    6ab7:	0b 83 39 00 00 02    	or     eax,DWORD PTR [rbx+0x2000039]
    6abd:	09 d0                	or     eax,edx
    6abf:	0b a2 39 00 00 02    	or     esp,DWORD PTR [rdx+0x2000039]
    6ac5:	09 d1                	or     ecx,edx
    6ac7:	0b c1                	or     eax,ecx
    6ac9:	39 00                	cmp    DWORD PTR [rax],eax
    6acb:	00 02                	add    BYTE PTR [rdx],al
    6acd:	09 d1                	or     ecx,edx
    6acf:	0b e0                	or     esp,eax
    6ad1:	39 00                	cmp    DWORD PTR [rax],eax
    6ad3:	00 02                	add    BYTE PTR [rdx],al
    6ad5:	09 d2                	or     edx,edx
    6ad7:	0b ff                	or     edi,edi
    6ad9:	39 00                	cmp    DWORD PTR [rax],eax
    6adb:	00 02                	add    BYTE PTR [rdx],al
    6add:	09 d2                	or     edx,edx
    6adf:	0b 24 3a             	or     esp,DWORD PTR [rdx+rdi*1]
    6ae2:	00 00                	add    BYTE PTR [rax],al
    6ae4:	18 09                	sbb    BYTE PTR [rcx],cl
    6ae6:	0b 01                	or     eax,DWORD PTR [rcx]
    6ae8:	16                   	(bad)
    6ae9:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6aec:	00 18                	add    BYTE PTR [rax],bl
    6aee:	09 0c 01             	or     DWORD PTR [rcx+rax*1],ecx
    6af1:	16                   	(bad)
    6af2:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6af5:	00 18                	add    BYTE PTR [rax],bl
    6af7:	09 0d 01 16 8a 3a    	or     DWORD PTR [rip+0x3a8a1601],ecx        # 3a8a80fe <_end+0x3a8a20e6>
    6afd:	00 00                	add    BYTE PTR [rax],al
    6aff:	18 09                	sbb    BYTE PTR [rcx],cl
    6b01:	1b 01                	sbb    eax,DWORD PTR [rcx]
    6b03:	0e                   	(bad)
    6b04:	96                   	xchg   esi,eax
    6b05:	37                   	(bad)
    6b06:	00 00                	add    BYTE PTR [rax],al
    6b08:	18 09                	sbb    BYTE PTR [rcx],cl
    6b0a:	1e                   	(bad)
    6b0b:	01 0e                	add    DWORD PTR [rsi],ecx
    6b0d:	9b                   	fwait
    6b0e:	34 00                	xor    al,0x0
    6b10:	00 18                	add    BYTE PTR [rax],bl
    6b12:	09 21                	or     DWORD PTR [rcx],esp
    6b14:	01 0e                	add    DWORD PTR [rsi],ecx
    6b16:	e5 34                	in     eax,0x34
    6b18:	00 00                	add    BYTE PTR [rax],al
    6b1a:	18 09                	sbb    BYTE PTR [rcx],cl
    6b1c:	24 01                	and    al,0x1
    6b1e:	0e                   	(bad)
    6b1f:	25 35 00 00 18       	and    eax,0x18000035
    6b24:	09 28                	or     DWORD PTR [rax],ebp
    6b26:	01 0e                	add    DWORD PTR [rsi],ecx
    6b28:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6b2b:	00 18                	add    BYTE PTR [rax],bl
    6b2d:	09 29                	or     DWORD PTR [rcx],ebp
    6b2f:	01 0e                	add    DWORD PTR [rsi],ecx
    6b31:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6b34:	00 18                	add    BYTE PTR [rax],bl
    6b36:	09 2a                	or     DWORD PTR [rdx],ebp
    6b38:	01 0e                	add    DWORD PTR [rsi],ecx
    6b3a:	8a 3a                	mov    bh,BYTE PTR [rdx]
    6b3c:	00 00                	add    BYTE PTR [rax],al
    6b3e:	02 0a                	add    cl,BYTE PTR [rdx]
    6b40:	35 0b af 3a 00       	xor    eax,0x3aaf0b
    6b45:	00 02                	add    BYTE PTR [rdx],al
    6b47:	0a 36                	or     dh,BYTE PTR [rsi]
    6b49:	0b f5                	or     esi,ebp
    6b4b:	3b 00                	cmp    eax,DWORD PTR [rax]
    6b4d:	00 02                	add    BYTE PTR [rdx],al
    6b4f:	0a 37                	or     dh,BYTE PTR [rdi]
    6b51:	0b 10                	or     edx,DWORD PTR [rax]
    6b53:	3c 00                	cmp    al,0x0
    6b55:	00 02                	add    BYTE PTR [rdx],al
    6b57:	0b 62 0b             	or     esp,DWORD PTR [rdx+0xb]
    6b5a:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    6b5d:	00 02                	add    BYTE PTR [rdx],al
    6b5f:	0b 63 0b             	or     esp,DWORD PTR [rbx+0xb]
    6b62:	7d 2c                	jge    6b90 <_end+0xb78>
    6b64:	00 00                	add    BYTE PTR [rax],al
    6b66:	02 0b                	add    cl,BYTE PTR [rbx]
    6b68:	65 0b 21             	or     esp,DWORD PTR gs:[rcx]
    6b6b:	3c 00                	cmp    al,0x0
    6b6d:	00 02                	add    BYTE PTR [rdx],al
    6b6f:	0b 66 0b             	or     esp,DWORD PTR [rsi+0xb]
    6b72:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    6b75:	00 02                	add    BYTE PTR [rdx],al
    6b77:	0b 67 0b             	or     esp,DWORD PTR [rdi+0xb]
    6b7a:	49 3c 00             	rex.WB cmp al,0x0
    6b7d:	00 02                	add    BYTE PTR [rdx],al
    6b7f:	0b 68 0b             	or     ebp,DWORD PTR [rax+0xb]
    6b82:	60                   	(bad)
    6b83:	3c 00                	cmp    al,0x0
    6b85:	00 02                	add    BYTE PTR [rdx],al
    6b87:	0b 69 0b             	or     ebp,DWORD PTR [rcx+0xb]
    6b8a:	77 3c                	ja     6bc8 <_end+0xbb0>
    6b8c:	00 00                	add    BYTE PTR [rax],al
    6b8e:	02 0b                	add    cl,BYTE PTR [rbx]
    6b90:	6a 0b                	push   0xb
    6b92:	8d 3c 00             	lea    edi,[rax+rax*1]
    6b95:	00 02                	add    BYTE PTR [rdx],al
    6b97:	0b 6b 0b             	or     ebp,DWORD PTR [rbx+0xb]
    6b9a:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6b9b:	3c 00                	cmp    al,0x0
    6b9d:	00 02                	add    BYTE PTR [rdx],al
    6b9f:	0b 6c 0b c5          	or     ebp,DWORD PTR [rbx+rcx*1-0x3b]
    6ba3:	3c 00                	cmp    al,0x0
    6ba5:	00 02                	add    BYTE PTR [rdx],al
    6ba7:	0b 6d 0b             	or     ebp,DWORD PTR [rbp+0xb]
    6baa:	e5 3c                	in     eax,0x3c
    6bac:	00 00                	add    BYTE PTR [rax],al
    6bae:	02 0b                	add    cl,BYTE PTR [rbx]
    6bb0:	71 0b                	jno    6bbd <_end+0xba5>
    6bb2:	01 3d 00 00 02 0b    	add    DWORD PTR [rip+0xb020000],edi        # b026bb8 <_end+0xb020ba0>
    6bb8:	72 0b                	jb     6bc5 <_end+0xbad>
    6bba:	26 3d 00 00 02 0b    	es cmp eax,0xb020000
    6bc0:	74 0b                	je     6bcd <_end+0xbb5>
    6bc2:	47 3d 00 00 02 0b    	rex.RXB cmp eax,0xb020000
    6bc8:	75 0b                	jne    6bd5 <_end+0xbbd>
    6bca:	68 3d 00 00 02       	push   0x200003d
    6bcf:	0b 76 0b             	or     esi,DWORD PTR [rsi+0xb]
    6bd2:	89 3d 00 00 02 0b    	mov    DWORD PTR [rip+0xb020000],edi        # b026bd8 <_end+0xb020bc0>
    6bd8:	78 0b                	js     6be5 <_end+0xbcd>
    6bda:	a0 3d 00 00 02 0b 79 	movabs al,ds:0xb70b790b0200003d
    6be1:	0b b7 
    6be3:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6be8:	7e 0b                	jle    6bf5 <_end+0xbdd>
    6bea:	c3                   	ret
    6beb:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6bf0:	83 0b d5             	or     DWORD PTR [rbx],0xffffffd5
    6bf3:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6bf8:	84 0b                	test   BYTE PTR [rbx],cl
    6bfa:	eb 3d                	jmp    6c39 <_end+0xc21>
    6bfc:	00 00                	add    BYTE PTR [rax],al
    6bfe:	02 0b                	add    cl,BYTE PTR [rbx]
    6c00:	85 0b                	test   DWORD PTR [rbx],ecx
    6c02:	06                   	(bad)
    6c03:	3e 00 00             	ds add BYTE PTR [rax],al
    6c06:	02 0b                	add    cl,BYTE PTR [rbx]
    6c08:	87 0b                	xchg   DWORD PTR [rbx],ecx
    6c0a:	18 3e                	sbb    BYTE PTR [rsi],bh
    6c0c:	00 00                	add    BYTE PTR [rax],al
    6c0e:	02 0b                	add    cl,BYTE PTR [rbx]
    6c10:	88 0b                	mov    BYTE PTR [rbx],cl
    6c12:	2f                   	(bad)
    6c13:	3e 00 00             	ds add BYTE PTR [rax],al
    6c16:	02 0b                	add    cl,BYTE PTR [rbx]
    6c18:	8b 0b                	mov    ecx,DWORD PTR [rbx]
    6c1a:	55                   	push   rbp
    6c1b:	3e 00 00             	ds add BYTE PTR [rax],al
    6c1e:	02 0b                	add    cl,BYTE PTR [rbx]
    6c20:	8d 0b                	lea    ecx,[rbx]
    6c22:	61                   	(bad)
    6c23:	3e 00 00             	ds add BYTE PTR [rax],al
    6c26:	02 0b                	add    cl,BYTE PTR [rbx]
    6c28:	8f                   	(bad)
    6c29:	0b 77 3e             	or     esi,DWORD PTR [rdi+0x3e]
    6c2c:	00 00                	add    BYTE PTR [rax],al
    6c2e:	50                   	push   rax
    6c2f:	c4                   	(bad)
    6c30:	29 00                	sub    DWORD PTR [rax],eax
    6c32:	00 11                	add    BYTE PTR [rcx],dl
    6c34:	55                   	push   rbp
    6c35:	01 41 02             	add    DWORD PTR [rcx+0x2],eax
    6c38:	0c 3a                	or     al,0x3a
    6c3a:	0b 11                	or     edx,DWORD PTR [rcx]
    6c3c:	32 00                	xor    al,BYTE PTR [rax]
    6c3e:	00 68 70             	add    BYTE PTR [rax+0x70],ch
    6c41:	6d                   	ins    DWORD PTR es:[rdi],dx
    6c42:	72 00                	jb     6c44 <_end+0xc2c>
    6c44:	3c 35                	cmp    al,0x35
    6c46:	0b 02                	or     eax,DWORD PTR [rdx]
    6c48:	0d 33 0b fa 23       	or     eax,0x23fa0b33
    6c4d:	00 00                	add    BYTE PTR [rax],al
    6c4f:	02 0d 34 0b 06 24    	add    cl,BYTE PTR [rip+0x24060b34]        # 24067789 <_end+0x24061771>
    6c55:	00 00                	add    BYTE PTR [rax],al
    6c57:	02 0d 35 0b 12 24    	add    cl,BYTE PTR [rip+0x24120b35]        # 24127792 <_end+0x2412177a>
    6c5d:	00 00                	add    BYTE PTR [rax],al
    6c5f:	02 0d 36 0b 1e 24    	add    cl,BYTE PTR [rip+0x241e0b36]        # 241e779b <_end+0x241e1783>
    6c65:	00 00                	add    BYTE PTR [rax],al
    6c67:	02 0d 38 0b 2d 2d    	add    cl,BYTE PTR [rip+0x2d2d0b38]        # 2d2d77a5 <_end+0x2d2d178d>
    6c6d:	00 00                	add    BYTE PTR [rax],al
    6c6f:	02 0d 39 0b 39 2d    	add    cl,BYTE PTR [rip+0x2d390b39]        # 2d3977ae <_end+0x2d391796>
    6c75:	00 00                	add    BYTE PTR [rax],al
    6c77:	02 0d 3a 0b 45 2d    	add    cl,BYTE PTR [rip+0x2d450b3a]        # 2d4577b7 <_end+0x2d45179f>
    6c7d:	00 00                	add    BYTE PTR [rax],al
    6c7f:	02 0d 3b 0b 51 2d    	add    cl,BYTE PTR [rip+0x2d510b3b]        # 2d5177c0 <_end+0x2d5117a8>
    6c85:	00 00                	add    BYTE PTR [rax],al
    6c87:	02 0d 3d 0b cd 2c    	add    cl,BYTE PTR [rip+0x2ccd0b3d]        # 2ccd77ca <_end+0x2ccd17b2>
    6c8d:	00 00                	add    BYTE PTR [rax],al
    6c8f:	02 0d 3e 0b d9 2c    	add    cl,BYTE PTR [rip+0x2cd90b3e]        # 2cd977d3 <_end+0x2cd917bb>
    6c95:	00 00                	add    BYTE PTR [rax],al
    6c97:	02 0d 3f 0b e5 2c    	add    cl,BYTE PTR [rip+0x2ce50b3f]        # 2ce577dc <_end+0x2ce517c4>
    6c9d:	00 00                	add    BYTE PTR [rax],al
    6c9f:	02 0d 40 0b f1 2c    	add    cl,BYTE PTR [rip+0x2cf10b40]        # 2cf177e5 <_end+0x2cf117cd>
    6ca5:	00 00                	add    BYTE PTR [rax],al
    6ca7:	02 0d 42 0b a5 2d    	add    cl,BYTE PTR [rip+0x2da50b42]        # 2da577ef <_end+0x2da517d7>
    6cad:	00 00                	add    BYTE PTR [rax],al
    6caf:	02 0d 43 0b 8d 2d    	add    cl,BYTE PTR [rip+0x2d8d0b43]        # 2d8d77f8 <_end+0x2d8d17e0>
    6cb5:	00 00                	add    BYTE PTR [rax],al
    6cb7:	02 0d 45 0b 98 2c    	add    cl,BYTE PTR [rip+0x2c980b45]        # 2c987802 <_end+0x2c9817ea>
    6cbd:	00 00                	add    BYTE PTR [rax],al
    6cbf:	02 0d 46 0b a4 2c    	add    cl,BYTE PTR [rip+0x2ca40b46]        # 2ca4780b <_end+0x2ca417f3>
    6cc5:	00 00                	add    BYTE PTR [rax],al
    6cc7:	02 0d 47 0b b0 2c    	add    cl,BYTE PTR [rip+0x2cb00b47]        # 2cb07814 <_end+0x2cb017fc>
    6ccd:	00 00                	add    BYTE PTR [rax],al
    6ccf:	02 0d 48 0b c1 2c    	add    cl,BYTE PTR [rip+0x2cc10b48]        # 2cc1781d <_end+0x2cc11805>
    6cd5:	00 00                	add    BYTE PTR [rax],al
    6cd7:	02 0d 4a 0b 5d 2d    	add    cl,BYTE PTR [rip+0x2d5d0b4a]        # 2d5d7827 <_end+0x2d5d180f>
    6cdd:	00 00                	add    BYTE PTR [rax],al
    6cdf:	02 0d 4b 0b 69 2d    	add    cl,BYTE PTR [rip+0x2d690b4b]        # 2d697830 <_end+0x2d691818>
    6ce5:	00 00                	add    BYTE PTR [rax],al
    6ce7:	02 0d 4c 0b 75 2d    	add    cl,BYTE PTR [rip+0x2d750b4c]        # 2d757839 <_end+0x2d751821>
    6ced:	00 00                	add    BYTE PTR [rax],al
    6cef:	02 0d 4d 0b 81 2d    	add    cl,BYTE PTR [rip+0x2d810b4d]        # 2d817842 <_end+0x2d81182a>
    6cf5:	00 00                	add    BYTE PTR [rax],al
    6cf7:	02 0d 4f 0b fd 2c    	add    cl,BYTE PTR [rip+0x2cfd0b4f]        # 2cfd784c <_end+0x2cfd1834>
    6cfd:	00 00                	add    BYTE PTR [rax],al
    6cff:	02 0d 50 0b 09 2d    	add    cl,BYTE PTR [rip+0x2d090b50]        # 2d097855 <_end+0x2d09183d>
    6d05:	00 00                	add    BYTE PTR [rax],al
    6d07:	02 0d 51 0b 15 2d    	add    cl,BYTE PTR [rip+0x2d150b51]        # 2d15785e <_end+0x2d151846>
    6d0d:	00 00                	add    BYTE PTR [rax],al
    6d0f:	02 0d 52 0b 21 2d    	add    cl,BYTE PTR [rip+0x2d210b52]        # 2d217867 <_end+0x2d21184f>
    6d15:	00 00                	add    BYTE PTR [rax],al
    6d17:	02 0d 54 0b b6 2d    	add    cl,BYTE PTR [rip+0x2db60b54]        # 2db67871 <_end+0x2db61859>
    6d1d:	00 00                	add    BYTE PTR [rax],al
    6d1f:	02 0d 55 0b 99 2d    	add    cl,BYTE PTR [rip+0x2d990b55]        # 2d99787a <_end+0x2d991862>
    6d25:	00 00                	add    BYTE PTR [rax],al
    6d27:	33 6d 32             	xor    ebp,DWORD PTR [rbp+0x32]
    6d2a:	00 00                	add    BYTE PTR [rax],al
    6d2c:	05 91 0d a0 17       	add    eax,0x17a00d91
    6d31:	00 00                	add    BYTE PTR [rax],al
    6d33:	3e 29 19             	ds sub DWORD PTR [rcx],ebx
    6d36:	00 00                	add    BYTE PTR [rax],al
    6d38:	f1                   	int1
    6d39:	20 00                	and    BYTE PTR [rax],al
    6d3b:	00 3e                	add    BYTE PTR [rsi],bh
    6d3d:	29 19                	sub    DWORD PTR [rcx],ebx
    6d3f:	00 00                	add    BYTE PTR [rax],al
    6d41:	f1                   	int1
    6d42:	20 00                	and    BYTE PTR [rax],al
    6d44:	00 3e                	add    BYTE PTR [rsi],bh
    6d46:	29 19                	sub    DWORD PTR [rcx],ebx
    6d48:	00 00                	add    BYTE PTR [rax],al
    6d4a:	f1                   	int1
    6d4b:	20 00                	and    BYTE PTR [rax],al
    6d4d:	00 00                	add    BYTE PTR [rax],al
    6d4f:	02 0f                	add    cl,BYTE PTR [rdi]
    6d51:	3c 0b                	cmp    al,0xb
    6d53:	dd 23                	frstor [rbx]
    6d55:	00 00                	add    BYTE PTR [rax],al
    6d57:	02 0f                	add    cl,BYTE PTR [rdi]
    6d59:	3d 0b e9 23 00       	cmp    eax,0x23e90b
    6d5e:	00 02                	add    BYTE PTR [rdx],al
    6d60:	0f 3e                	(bad)
    6d62:	0b 17                	or     edx,DWORD PTR [rdi]
    6d64:	36 00 00             	ss add BYTE PTR [rax],al
    6d67:	02 0f                	add    cl,BYTE PTR [rdi]
    6d69:	40 0b b7 3e 00 00 02 	rex or esi,DWORD PTR [rdi+0x200003e]
    6d70:	0f 41 0b             	cmovno ecx,DWORD PTR [rbx]
    6d73:	c3                   	ret
    6d74:	3e 00 00             	ds add BYTE PTR [rax],al
    6d77:	02 0f                	add    cl,BYTE PTR [rdi]
    6d79:	42 0b de             	rex.X or ebx,esi
    6d7c:	3e 00 00             	ds add BYTE PTR [rax],al
    6d7f:	02 0f                	add    cl,BYTE PTR [rdi]
    6d81:	43 0b f9             	rex.XB or edi,r9d
    6d84:	3e 00 00             	ds add BYTE PTR [rax],al
    6d87:	02 0f                	add    cl,BYTE PTR [rdi]
    6d89:	44 0b 14 3f          	or     r10d,DWORD PTR [rdi+rdi*1]
    6d8d:	00 00                	add    BYTE PTR [rax],al
    6d8f:	02 0f                	add    cl,BYTE PTR [rdi]
    6d91:	45 0b 2a             	or     r13d,DWORD PTR [r10]
    6d94:	3f                   	(bad)
    6d95:	00 00                	add    BYTE PTR [rax],al
    6d97:	02 0f                	add    cl,BYTE PTR [rdi]
    6d99:	46 0b 45 3f          	rex.RX or r8d,DWORD PTR [rbp+0x3f]
    6d9d:	00 00                	add    BYTE PTR [rax],al
    6d9f:	02 0f                	add    cl,BYTE PTR [rdi]
    6da1:	47 0b 5b 3f          	rex.RXB or r11d,DWORD PTR [r11+0x3f]
    6da5:	00 00                	add    BYTE PTR [rax],al
    6da7:	02 0f                	add    cl,BYTE PTR [rdi]
    6da9:	4f 0b 2a             	rex.WRXB or r13,QWORD PTR [r10]
    6dac:	24 00                	and    al,0x0
    6dae:	00 02                	add    BYTE PTR [rdx],al
    6db0:	0f                   	movmskps ecx,(bad)
    6db1:	50                   	push   rax
    6db2:	0b 71 3f             	or     esi,DWORD PTR [rcx+0x3f]
    6db5:	00 00                	add    BYTE PTR [rax],al
    6db7:	33 25 13 00 00 04    	xor    esp,DWORD PTR [rip+0x4000013]        # 4006dd0 <_end+0x4000db8>
    6dbd:	37                   	(bad)
    6dbe:	0d 94 1f 00 00       	or     eax,0x1f94
    6dc3:	3f                   	(bad)
    6dc4:	4d                   	rex.WRB
    6dc5:	2e 00 00             	cs add BYTE PTR [rax],al
    6dc8:	ff 01                	inc    DWORD PTR [rcx]
    6dca:	94                   	xchg   esp,eax
    6dcb:	1a 00                	sbb    al,BYTE PTR [rax]
    6dcd:	00 04 1f             	add    BYTE PTR [rdi+rbx*1],al
    6dd0:	0e                   	(bad)
    6dd1:	00 00                	add    BYTE PTR [rax],al
    6dd3:	04 0b                	add    al,0xb
    6dd5:	02 02                	add    al,BYTE PTR [rdx]
    6dd7:	0a 2b                	or     ch,BYTE PTR [rbx]
    6dd9:	00 00                	add    BYTE PTR [rax],al
    6ddb:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6ddc:	2d 00 00 3f 18       	sub    eax,0x183f0000
    6de1:	00 00                	add    BYTE PTR [rax],al
    6de3:	01 a5 2d 00 00 01    	add    DWORD PTR [rbp+0x100002d],esp
    6de9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6dea:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6def:	66 0d 00 00          	or     ax,0x0
    6df3:	34 02                	xor    al,0x2
    6df5:	0c af                	or     al,0xaf
    6df7:	17                   	(bad)
    6df8:	00 00                	add    BYTE PTR [rax],al
    6dfa:	53                   	push   rbx
    6dfb:	18 00                	sbb    BYTE PTR [rax],al
    6dfd:	00 59 18             	add    BYTE PTR [rcx+0x18],bl
    6e00:	00 00                	add    BYTE PTR [rax],al
    6e02:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    6e08:	2b 66 0d             	sub    esp,DWORD PTR [rsi+0xd]
    6e0b:	00 00                	add    BYTE PTR [rax],al
    6e0d:	36 02 02             	ss add al,BYTE PTR [rdx]
    6e10:	d5 1a 00 00          	{rex2 0x1a} add BYTE PTR [r16],al
    6e14:	6d                   	ins    DWORD PTR es:[rdi],dx
    6e15:	18 00                	sbb    BYTE PTR [rax],al
    6e17:	00 78 18             	add    BYTE PTR [rax+0x18],bh
    6e1a:	00 00                	add    BYTE PTR [rax],al
    6e1c:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    6e22:	9c                   	pushf
    6e23:	3f                   	(bad)
    6e24:	00 00                	add    BYTE PTR [rax],al
    6e26:	00 2b                	add    BYTE PTR [rbx],ch
    6e28:	7a 0d                	jp     6e37 <_end+0xe1f>
    6e2a:	00 00                	add    BYTE PTR [rax],al
    6e2c:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    6e2f:	98                   	cwde
    6e30:	12 00                	adc    al,BYTE PTR [rax]
    6e32:	00 8c 18 00 00 97 18 	add    BYTE PTR [rax+rbx*1+0x18970000],cl
    6e39:	00 00                	add    BYTE PTR [rax],al
    6e3b:	10 92 3f 00 00 10    	adc    BYTE PTR [rdx+0x1000003f],dl
    6e41:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6e42:	21 00                	and    DWORD PTR [rax],eax
    6e44:	00 00                	add    BYTE PTR [rax],al
    6e46:	51                   	push   rcx
    6e47:	f8                   	clc
    6e48:	14 00                	adc    al,0x0
    6e4a:	00 89 32 00 00 a1    	add    BYTE PTR [rcx-0x5effffce],cl
    6e50:	3f                   	(bad)
    6e51:	00 00                	add    BYTE PTR [rax],al
    6e53:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6e54:	18 00                	sbb    BYTE PTR [rax],al
    6e56:	00 b7 18 00 00 10    	add    BYTE PTR [rdi+0x10000018],dh
    6e5c:	92                   	xchg   edx,eax
    6e5d:	3f                   	(bad)
    6e5e:	00 00                	add    BYTE PTR [rax],al
    6e60:	01 9c 3f 00 00 00 52 	add    DWORD PTR [rdi+rdi*1+0x52000000],ebx
    6e67:	72 65                	jb     6ece <_end+0xeb6>
    6e69:	70 00                	jo     6e6b <_end+0xe53>
    6e6b:	b2 21                	mov    dl,0x21
    6e6d:	00 00                	add    BYTE PTR [rax],al
    6e6f:	13 b7 18 00 00 14    	adc    esi,DWORD PTR [rdi+0x14000018]
    6e75:	f4                   	hlt
    6e76:	24 00                	and    al,0x0
    6e78:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    6e7b:	11 1b                	adc    DWORD PTR [rbx],ebx
    6e7d:	00 00                	add    BYTE PTR [rax],al
    6e7f:	b7 18                	mov    bh,0x18
    6e81:	00 00                	add    BYTE PTR [rax],al
    6e83:	dc 18                	fcomp  QWORD PTR [rax]
    6e85:	00 00                	add    BYTE PTR [rax],al
    6e87:	e2 18                	loop   6ea1 <_end+0xe89>
    6e89:	00 00                	add    BYTE PTR [rax],al
    6e8b:	10 a6 3f 00 00 00    	adc    BYTE PTR [rsi+0x3f],ah
    6e91:	14 5d                	adc    al,0x5d
    6e93:	14 00                	adc    al,0x0
    6e95:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    6e98:	55                   	push   rbp
    6e99:	2f                   	(bad)
    6e9a:	00 00                	add    BYTE PTR [rax],al
    6e9c:	14 18                	adc    al,0x18
    6e9e:	00 00                	add    BYTE PTR [rax],al
    6ea0:	f9                   	stc
    6ea1:	18 00                	sbb    BYTE PTR [rax],al
    6ea3:	00 ff                	add    bh,bh
    6ea5:	18 00                	sbb    BYTE PTR [rax],al
    6ea7:	00 10                	add    BYTE PTR [rax],dl
    6ea9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6eaa:	3f                   	(bad)
    6eab:	00 00                	add    BYTE PTR [rax],al
    6ead:	00 14 db             	add    BYTE PTR [rbx+rbx*8],dl
    6eb0:	18 00                	sbb    BYTE PTR [rax],al
    6eb2:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    6eb5:	1d 1d 00 00 14       	sbb    eax,0x1400001d
    6eba:	18 00                	sbb    BYTE PTR [rax],al
    6ebc:	00 16                	add    BYTE PTR [rsi],dl
    6ebe:	19 00                	sbb    DWORD PTR [rax],eax
    6ec0:	00 1c 19             	add    BYTE PTR [rcx+rbx*1],bl
    6ec3:	00 00                	add    BYTE PTR [rax],al
    6ec5:	10 a6 3f 00 00 00    	adc    BYTE PTR [rsi+0x3f],ah
    6ecb:	14 7c                	adc    al,0x7c
    6ecd:	2e 00 00             	cs add BYTE PTR [rax],al
    6ed0:	5b                   	pop    rbx
    6ed1:	02 d3                	add    dl,bl
    6ed3:	11 00                	adc    DWORD PTR [rax],eax
    6ed5:	00 a1 3f 00 00 33    	add    BYTE PTR [rcx+0x3300003f],ah
    6edb:	19 00                	sbb    DWORD PTR [rax],eax
    6edd:	00 39                	add    BYTE PTR [rcx],bh
    6edf:	19 00                	sbb    DWORD PTR [rax],eax
    6ee1:	00 10                	add    BYTE PTR [rax],dl
    6ee3:	92                   	xchg   edx,eax
    6ee4:	3f                   	(bad)
    6ee5:	00 00                	add    BYTE PTR [rax],al
    6ee7:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    6eea:	2e 00 00             	cs add BYTE PTR [rax],al
    6eed:	62 02 6c 11 00       	(bad)
    6ef2:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6ef5:	00 00                	add    BYTE PTR [rax],al
    6ef7:	50                   	push   rax
    6ef8:	19 00                	sbb    DWORD PTR [rax],eax
    6efa:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    6efd:	00 00                	add    BYTE PTR [rax],al
    6eff:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    6f05:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6f06:	21 00                	and    DWORD PTR [rax],eax
    6f08:	00 00                	add    BYTE PTR [rax],al
    6f0a:	14 de                	adc    al,0xde
    6f0c:	30 00                	xor    BYTE PTR [rax],al
    6f0e:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    6f11:	a3 0b 00 00 a1 3f 00 	movabs ds:0x7200003fa100000b,eax
    6f18:	00 72 
    6f1a:	19 00                	sbb    DWORD PTR [rax],eax
    6f1c:	00 78 19             	add    BYTE PTR [rax+0x19],bh
    6f1f:	00 00                	add    BYTE PTR [rax],al
    6f21:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    6f27:	14 de                	adc    al,0xde
    6f29:	30 00                	xor    BYTE PTR [rax],al
    6f2b:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    6f2e:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6f2f:	34 00                	xor    al,0x0
    6f31:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6f34:	00 00                	add    BYTE PTR [rax],al
    6f36:	8f                   	(bad)
    6f37:	19 00                	sbb    DWORD PTR [rax],eax
    6f39:	00 9a 19 00 00 10    	add    BYTE PTR [rdx+0x10000019],bl
    6f3f:	92                   	xchg   edx,eax
    6f40:	3f                   	(bad)
    6f41:	00 00                	add    BYTE PTR [rax],al
    6f43:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    6f49:	14 0c                	adc    al,0xc
    6f4b:	2a 00                	sub    al,BYTE PTR [rax]
    6f4d:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    6f50:	79 1f                	jns    6f71 <_end+0xf59>
    6f52:	00 00                	add    BYTE PTR [rax],al
    6f54:	a1 3f 00 00 b1 19 00 	movabs eax,ds:0xbc000019b100003f
    6f5b:	00 bc 
    6f5d:	19 00                	sbb    DWORD PTR [rax],eax
    6f5f:	00 10                	add    BYTE PTR [rax],dl
    6f61:	92                   	xchg   edx,eax
    6f62:	3f                   	(bad)
    6f63:	00 00                	add    BYTE PTR [rax],al
    6f65:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    6f6c:	f9                   	stc
    6f6d:	30 00                	xor    BYTE PTR [rax],al
    6f6f:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    6f72:	71 0f                	jno    6f83 <_end+0xf6b>
    6f74:	00 00                	add    BYTE PTR [rax],al
    6f76:	a1 3f 00 00 d3 19 00 	movabs eax,ds:0xde000019d300003f
    6f7d:	00 de 
    6f7f:	19 00                	sbb    DWORD PTR [rax],eax
    6f81:	00 10                	add    BYTE PTR [rax],dl
    6f83:	92                   	xchg   edx,eax
    6f84:	3f                   	(bad)
    6f85:	00 00                	add    BYTE PTR [rax],al
    6f87:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    6f8e:	ab                   	stos   DWORD PTR es:[rdi],eax
    6f8f:	2d 00 00 7f 02       	sub    eax,0x27f0000
    6f94:	13 0d 00 00 a1 3f    	adc    ecx,DWORD PTR [rip+0x3fa10000]        # 3fa16f9a <_end+0x3fa10f82>
    6f9a:	00 00                	add    BYTE PTR [rax],al
    6f9c:	f5                   	cmc
    6f9d:	19 00                	sbb    DWORD PTR [rax],eax
    6f9f:	00 00                	add    BYTE PTR [rax],al
    6fa1:	1a 00                	sbb    al,BYTE PTR [rax]
    6fa3:	00 10                	add    BYTE PTR [rax],dl
    6fa5:	92                   	xchg   edx,eax
    6fa6:	3f                   	(bad)
    6fa7:	00 00                	add    BYTE PTR [rax],al
    6fa9:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    6faf:	14 d2                	adc    al,0xd2
    6fb1:	33 00                	xor    eax,DWORD PTR [rax]
    6fb3:	00 86 02 98 33 00    	add    BYTE PTR [rsi+0x339802],al
    6fb9:	00 a1 3f 00 00 17    	add    BYTE PTR [rcx+0x1700003f],ah
    6fbf:	1a 00                	sbb    al,BYTE PTR [rax]
    6fc1:	00 22                	add    BYTE PTR [rdx],ah
    6fc3:	1a 00                	sbb    al,BYTE PTR [rax]
    6fc5:	00 10                	add    BYTE PTR [rax],dl
    6fc7:	92                   	xchg   edx,eax
    6fc8:	3f                   	(bad)
    6fc9:	00 00                	add    BYTE PTR [rax],al
    6fcb:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    6fd1:	53                   	push   rbx
    6fd2:	b8 23 00 00 ed       	mov    eax,0xed000023
    6fd7:	15 00 00 14 18       	adc    eax,0x18140000
    6fdc:	00 00                	add    BYTE PTR [rax],al
    6fde:	2c 6d                	sub    al,0x6d
    6fe0:	69 6e 00 a5 02 0b 0c 	imul   ebp,DWORD PTR [rsi+0x0],0xc0b02a5
    6fe7:	00 00                	add    BYTE PTR [rax],al
    6fe9:	14 18                	adc    al,0x18
    6feb:	00 00                	add    BYTE PTR [rax],al
    6fed:	2c 6d                	sub    al,0x6d
    6fef:	61                   	(bad)
    6ff0:	78 00                	js     6ff2 <_end+0xfda>
    6ff2:	a9 02 f6 2f 00       	test   eax,0x2ff602
    6ff7:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    6ffa:	00 00                	add    BYTE PTR [rax],al
    6ffc:	40 5f                	rex pop rdi
    6ffe:	5f                   	pop    rdi
    6fff:	72 00                	jb     7001 <_end+0xfe9>
    7001:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7002:	02 06                	add    al,BYTE PTR [rsi]
    7004:	b7 18                	mov    bh,0x18
    7006:	00 00                	add    BYTE PTR [rax],al
    7008:	41 ca 2e 00          	rex.B retf 0x2e
    700c:	00 3d 02 17 48 2b    	add    BYTE PTR [rip+0x2b481702],bh        # 2b488714 <_end+0x2b4826fc>
    7012:	00 00                	add    BYTE PTR [rax],al
    7014:	76 1a                	jbe    7030 <_end+0x1018>
    7016:	00 00                	add    BYTE PTR [rax],al
    7018:	81 1a 00 00 11 09    	sbb    DWORD PTR [rdx],0x9110000
    701e:	19 00                	sbb    DWORD PTR [rax],eax
    7020:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    7026:	92                   	xchg   edx,eax
    7027:	3f                   	(bad)
    7028:	00 00                	add    BYTE PTR [rax],al
    702a:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    702d:	00 00                	add    BYTE PTR [rax],al
    702f:	00 11                	add    BYTE PTR [rcx],dl
    7031:	84 32                	test   BYTE PTR [rdx],dh
    7033:	00 00                	add    BYTE PTR [rax],al
    7035:	b2 21                	mov    dl,0x21
    7037:	00 00                	add    BYTE PTR [rax],al
    7039:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    703c:	00 00                	add    BYTE PTR [rax],al
    703e:	94                   	xchg   esp,eax
    703f:	1f                   	(bad)
    7040:	00 00                	add    BYTE PTR [rax],al
    7042:	00 13                	add    BYTE PTR [rbx],dl
    7044:	14 18                	adc    al,0x18
    7046:	00 00                	add    BYTE PTR [rax],al
    7048:	69 5f 56 32 00 04 c1 	imul   ebx,DWORD PTR [rdi+0x56],0xc1040032
    704f:	04 01                	add    al,0x1
    7051:	e3 1a                	jrcxz  706d <_end+0x1055>
    7053:	00 00                	add    BYTE PTR [rax],al
    7055:	6a bc                	push   0xffffffffffffffbc
    7057:	10 00                	adc    BYTE PTR [rax],al
    7059:	00 01                	add    BYTE PTR [rcx],al
    705b:	04 f3                	add    al,0xf3
    705d:	04 0c                	add    al,0xc
    705f:	6b 6a 1b 00          	imul   ebp,DWORD PTR [rdx+0x1b],0x0
    7063:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    7066:	04 1d                	add    al,0x1d
    7068:	85 17                	test   DWORD PTR [rdi],edx
    706a:	00 00                	add    BYTE PTR [rax],al
    706c:	f1                   	int1
    706d:	20 00                	and    BYTE PTR [rax],al
    706f:	00 01                	add    BYTE PTR [rcx],al
    7071:	01 42 6f             	add    DWORD PTR [rdx+0x6f],eax
    7074:	0d 00 00 04 f8       	or     eax,0xf8040000
    7079:	04 3a                	add    al,0x3a
    707b:	e3 1a                	jrcxz  7097 <_end+0x107f>
    707d:	00 00                	add    BYTE PTR [rax],al
    707f:	6c                   	ins    BYTE PTR es:[rdi],dx
    7080:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7081:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7082:	77 00                	ja     7084 <_end+0x106c>
    7084:	04 fd                	add    al,0xfd
    7086:	04 07                	add    al,0x7
    7088:	18 33                	sbb    BYTE PTR [rbx],dh
    708a:	00 00                	add    BYTE PTR [rax],al
    708c:	c3                   	ret
    708d:	1a 00                	sbb    al,BYTE PTR [rax]
    708f:	00 00                	add    BYTE PTR [rax],al
    7091:	00 3f                	add    BYTE PTR [rdi],bh
    7093:	47 25 00 00 9a 03    	rex.RXB and eax,0x39a0000
    7099:	da 1b                	ficomp DWORD PTR [rbx]
    709b:	00 00                	add    BYTE PTR [rax],al
    709d:	6d                   	ins    DWORD PTR es:[rdi],dx
    709e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    709f:	0d 00 00 04 a5       	or     eax,0xa5040000
    70a4:	03 0c ad 0f 00 00 01 	add    ecx,DWORD PTR [rbp*4+0x100000f]
    70ab:	04 1b                	add    al,0x1b
    70ad:	00 00                	add    BYTE PTR [rax],al
    70af:	0a 1b                	or     bl,BYTE PTR [rbx]
    70b1:	00 00                	add    BYTE PTR [rax],al
    70b3:	10 e7                	adc    bh,ah
    70b5:	41 00 00             	add    BYTE PTR [r8],al
    70b8:	00 41 6f             	add    BYTE PTR [rcx+0x6f],al
    70bb:	0d 00 00 a8 03       	or     eax,0x3a80000
    70c0:	15 89 0c 00 00       	adc    eax,0xc89
    70c5:	1e                   	(bad)
    70c6:	1b 00                	sbb    eax,DWORD PTR [rax]
    70c8:	00 29                	add    BYTE PTR [rcx],ch
    70ca:	1b 00                	sbb    eax,DWORD PTR [rax]
    70cc:	00 10                	add    BYTE PTR [rax],dl
    70ce:	e7 41                	out    0x41,eax
    70d0:	00 00                	add    BYTE PTR [rax],al
    70d2:	01 ec                	add    esp,ebp
    70d4:	41 00 00             	add    BYTE PTR [r8],al
    70d7:	00 6e 66             	add    BYTE PTR [rsi+0x66],ch
    70da:	0d 00 00 04 a1       	or     eax,0xa1040000
    70df:	03 14 14             	add    edx,DWORD PTR [rsp+rdx*1]
    70e2:	18 00                	sbb    BYTE PTR [rax],al
    70e4:	00 01                	add    BYTE PTR [rcx],al
    70e6:	13 29                	adc    ebp,DWORD PTR [rcx]
    70e8:	1b 00                	sbb    eax,DWORD PTR [rax]
    70ea:	00 14 a7             	add    BYTE PTR [rdi+riz*4],dl
    70ed:	23 00                	and    eax,DWORD PTR [rax]
    70ef:	00 b5 03 b6 2c 00    	add    BYTE PTR [rbp+0x2cb603],dh
    70f5:	00 29                	add    BYTE PTR [rcx],ch
    70f7:	1b 00                	sbb    eax,DWORD PTR [rax]
    70f9:	00 53 1b             	add    BYTE PTR [rbx+0x1b],dl
    70fc:	00 00                	add    BYTE PTR [rax],al
    70fe:	59                   	pop    rcx
    70ff:	1b 00                	sbb    eax,DWORD PTR [rax]
    7101:	00 10                	add    BYTE PTR [rax],dl
    7103:	f1                   	int1
    7104:	41 00 00             	add    BYTE PTR [r8],al
    7107:	00 14 0c             	add    BYTE PTR [rsp+rcx*1],dl
    710a:	2a 00                	sub    al,BYTE PTR [rax]
    710c:	00 d2                	add    dl,dl
    710e:	03 08                	add    ecx,DWORD PTR [rax]
    7110:	11 00                	adc    DWORD PTR [rax],eax
    7112:	00 fb                	add    bl,bh
    7114:	41 00 00             	add    BYTE PTR [r8],al
    7117:	70 1b                	jo     7134 <_end+0x111c>
    7119:	00 00                	add    BYTE PTR [rax],al
    711b:	7b 1b                	jnp    7138 <_end+0x1120>
    711d:	00 00                	add    BYTE PTR [rax],al
    711f:	10 e7                	adc    bh,ah
    7121:	41 00 00             	add    BYTE PTR [r8],al
    7124:	01 ec                	add    esp,ebp
    7126:	41 00 00             	add    BYTE PTR [r8],al
    7129:	00 14 f9             	add    BYTE PTR [rcx+rdi*8],dl
    712c:	30 00                	xor    BYTE PTR [rax],al
    712e:	00 d9                	add    cl,bl
    7130:	03 60 0e             	add    esp,DWORD PTR [rax+0xe]
    7133:	00 00                	add    BYTE PTR [rax],al
    7135:	fb                   	sti
    7136:	41 00 00             	add    BYTE PTR [r8],al
    7139:	92                   	xchg   edx,eax
    713a:	1b 00                	sbb    eax,DWORD PTR [rax]
    713c:	00 9d 1b 00 00 10    	add    BYTE PTR [rbp+0x1000001b],bl
    7142:	e7 41                	out    0x41,eax
    7144:	00 00                	add    BYTE PTR [rax],al
    7146:	01 ec                	add    esp,ebp
    7148:	41 00 00             	add    BYTE PTR [r8],al
    714b:	00 2c 6d 69 6e 00 e1 	add    BYTE PTR [rbp*2-0x1eff9197],ch
    7152:	03 b9 20 00 00 e3    	add    edi,DWORD PTR [rcx-0x1cffffe0]
    7158:	1a 00                	sbb    al,BYTE PTR [rax]
    715a:	00 2c 6d 61 78 00 e5 	add    BYTE PTR [rbp*2-0x1aff879f],ch
    7161:	03 0a                	add    ecx,DWORD PTR [rdx]
    7163:	1f                   	(bad)
    7164:	00 00                	add    BYTE PTR [rax],al
    7166:	e3 1a                	jrcxz  7182 <_end+0x116a>
    7168:	00 00                	add    BYTE PTR [rax],al
    716a:	40 5f                	rex pop rdi
    716c:	5f                   	pop    rdi
    716d:	64 00 e9             	fs add cl,ch
    7170:	03 0b                	add    ecx,DWORD PTR [rbx]
    7172:	29 1b                	sub    DWORD PTR [rbx],ebx
    7174:	00 00                	add    BYTE PTR [rax],al
    7176:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    717c:	1a 00                	sbb    al,BYTE PTR [rax]
    717e:	00 11                	add    BYTE PTR [rcx],dl
    7180:	f9                   	stc
    7181:	25 00 00 14 18       	and    eax,0x18140000
    7186:	00 00                	add    BYTE PTR [rax],al
    7188:	00 13                	add    BYTE PTR [rbx],dl
    718a:	e3 1a                	jrcxz  71a6 <_end+0x118e>
    718c:	00 00                	add    BYTE PTR [rax],al
    718e:	3f                   	(bad)
    718f:	27                   	(bad)
    7190:	14 00                	adc    al,0x0
    7192:	00 ff                	add    bh,bh
    7194:	01 5f 1e             	add    DWORD PTR [rdi+0x1e],ebx
    7197:	00 00                	add    BYTE PTR [rax],al
    7199:	04 1f                	add    al,0x1f
    719b:	0e                   	(bad)
    719c:	00 00                	add    BYTE PTR [rax],al
    719e:	04 0b                	add    al,0xb
    71a0:	02 02                	add    al,BYTE PTR [rdx]
    71a2:	67 2a 00             	sub    al,BYTE PTR [eax]
    71a5:	00 a5 2d 00 00 0a    	add    BYTE PTR [rbp+0xa00002d],ah
    71ab:	1c 00                	sbb    al,0x0
    71ad:	00 01                	add    BYTE PTR [rcx],al
    71af:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    71b0:	2d 00 00 01 a5       	sub    eax,0xa5010000
    71b5:	2d 00 00 00 2b       	sub    eax,0x2b000000
    71ba:	66 0d 00 00          	or     ax,0x0
    71be:	34 02                	xor    al,0x2
    71c0:	0c 8c                	or     al,0x8c
    71c2:	1e                   	(bad)
    71c3:	00 00                	add    BYTE PTR [rax],al
    71c5:	1e                   	(bad)
    71c6:	1c 00                	sbb    al,0x0
    71c8:	00 24 1c             	add    BYTE PTR [rsp+rbx*1],ah
    71cb:	00 00                	add    BYTE PTR [rax],al
    71cd:	10 b5 3f 00 00 00    	adc    BYTE PTR [rbp+0x3f],dh
    71d3:	2b 66 0d             	sub    esp,DWORD PTR [rsi+0xd]
    71d6:	00 00                	add    BYTE PTR [rax],al
    71d8:	36 02 02             	ss add al,BYTE PTR [rdx]
    71db:	c5 32 00             	(bad)
    71de:	00 38                	add    BYTE PTR [rax],bh
    71e0:	1c 00                	sbb    al,0x0
    71e2:	00 43 1c             	add    BYTE PTR [rbx+0x1c],al
    71e5:	00 00                	add    BYTE PTR [rax],al
    71e7:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    71ed:	bf 3f 00 00 00       	mov    edi,0x3f
    71f2:	2b 7a 0d             	sub    edi,DWORD PTR [rdx+0xd]
    71f5:	00 00                	add    BYTE PTR [rax],al
    71f7:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    71fa:	45 33 00             	xor    r8d,DWORD PTR [r8]
    71fd:	00 57 1c             	add    BYTE PTR [rdi+0x1c],dl
    7200:	00 00                	add    BYTE PTR [rax],al
    7202:	62 1c 00             	(bad)
    7205:	00 10                	add    BYTE PTR [rax],dl
    7207:	b5 3f                	mov    ch,0x3f
    7209:	00 00                	add    BYTE PTR [rax],al
    720b:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    7211:	51                   	push   rcx
    7212:	f8                   	clc
    7213:	14 00                	adc    al,0x0
    7215:	00 43 22             	add    BYTE PTR [rbx+0x22],al
    7218:	00 00                	add    BYTE PTR [rax],al
    721a:	c4                   	(bad)
    721b:	3f                   	(bad)
    721c:	00 00                	add    BYTE PTR [rax],al
    721e:	77 1c                	ja     723c <_end+0x1224>
    7220:	00 00                	add    BYTE PTR [rax],al
    7222:	82                   	(bad)
    7223:	1c 00                	sbb    al,0x0
    7225:	00 10                	add    BYTE PTR [rax],dl
    7227:	b5 3f                	mov    ch,0x3f
    7229:	00 00                	add    BYTE PTR [rax],al
    722b:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    7231:	52                   	push   rdx
    7232:	72 65                	jb     7299 <_end+0x1281>
    7234:	70 00                	jo     7236 <_end+0x121e>
    7236:	b2 21                	mov    dl,0x21
    7238:	00 00                	add    BYTE PTR [rax],al
    723a:	13 82 1c 00 00 14    	adc    eax,DWORD PTR [rdx+0x1400001c]
    7240:	f4                   	hlt
    7241:	24 00                	and    al,0x0
    7243:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    7246:	f6 16                	not    BYTE PTR [rsi]
    7248:	00 00                	add    BYTE PTR [rax],al
    724a:	82                   	(bad)
    724b:	1c 00                	sbb    al,0x0
    724d:	00 a7 1c 00 00 ad    	add    BYTE PTR [rdi-0x52ffffe4],ah
    7253:	1c 00                	sbb    al,0x0
    7255:	00 10                	add    BYTE PTR [rax],dl
    7257:	c9                   	leave
    7258:	3f                   	(bad)
    7259:	00 00                	add    BYTE PTR [rax],al
    725b:	00 14 5d 14 00 00 53 	add    BYTE PTR [rbx*2+0x53000014],dl
    7262:	02 a5 13 00 00 df    	add    ah,BYTE PTR [rbp-0x20ffffed]
    7268:	1b 00                	sbb    eax,DWORD PTR [rax]
    726a:	00 c4                	add    ah,al
    726c:	1c 00                	sbb    al,0x0
    726e:	00 ca                	add    dl,cl
    7270:	1c 00                	sbb    al,0x0
    7272:	00 10                	add    BYTE PTR [rax],dl
    7274:	c9                   	leave
    7275:	3f                   	(bad)
    7276:	00 00                	add    BYTE PTR [rax],al
    7278:	00 14 db             	add    BYTE PTR [rbx+rbx*8],dl
    727b:	18 00                	sbb    BYTE PTR [rax],al
    727d:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    7280:	a9 2a 00 00 df       	test   eax,0xdf00002a
    7285:	1b 00                	sbb    eax,DWORD PTR [rax]
    7287:	00 e1                	add    cl,ah
    7289:	1c 00                	sbb    al,0x0
    728b:	00 e7                	add    bh,ah
    728d:	1c 00                	sbb    al,0x0
    728f:	00 10                	add    BYTE PTR [rax],dl
    7291:	c9                   	leave
    7292:	3f                   	(bad)
    7293:	00 00                	add    BYTE PTR [rax],al
    7295:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    7298:	2e 00 00             	cs add BYTE PTR [rax],al
    729b:	5b                   	pop    rbx
    729c:	02 4d 1e             	add    cl,BYTE PTR [rbp+0x1e]
    729f:	00 00                	add    BYTE PTR [rax],al
    72a1:	c4                   	(bad)
    72a2:	3f                   	(bad)
    72a3:	00 00                	add    BYTE PTR [rax],al
    72a5:	fe                   	(bad)
    72a6:	1c 00                	sbb    al,0x0
    72a8:	00 04 1d 00 00 10 b5 	add    BYTE PTR [rbx*1-0x4af00000],al
    72af:	3f                   	(bad)
    72b0:	00 00                	add    BYTE PTR [rax],al
    72b2:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    72b5:	2e 00 00             	cs add BYTE PTR [rax],al
    72b8:	62 02 a1 16 00 00    	vpshufb xmm24{k6},xmm27,QWORD BCST [r8]
    72be:	df 1b                	fistp  WORD PTR [rbx]
    72c0:	00 00                	add    BYTE PTR [rax],al
    72c2:	1b 1d 00 00 26 1d    	sbb    ebx,DWORD PTR [rip+0x1d260000]        # 1d2672c8 <_end+0x1d2612b0>
    72c8:	00 00                	add    BYTE PTR [rax],al
    72ca:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    72d0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    72d1:	21 00                	and    DWORD PTR [rax],eax
    72d3:	00 00                	add    BYTE PTR [rax],al
    72d5:	14 de                	adc    al,0xde
    72d7:	30 00                	xor    BYTE PTR [rax],al
    72d9:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    72dc:	9f                   	lahf
    72dd:	18 00                	sbb    BYTE PTR [rax],al
    72df:	00 c4                	add    ah,al
    72e1:	3f                   	(bad)
    72e2:	00 00                	add    BYTE PTR [rax],al
    72e4:	3d 1d 00 00 43       	cmp    eax,0x4300001d
    72e9:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    72ee:	3f                   	(bad)
    72ef:	00 00                	add    BYTE PTR [rax],al
    72f1:	00 14 de             	add    BYTE PTR [rsi+rbx*8],dl
    72f4:	30 00                	xor    BYTE PTR [rax],al
    72f6:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    72f9:	d0 12                	rcl    BYTE PTR [rdx],1
    72fb:	00 00                	add    BYTE PTR [rax],al
    72fd:	df 1b                	fistp  WORD PTR [rbx]
    72ff:	00 00                	add    BYTE PTR [rax],al
    7301:	5a                   	pop    rdx
    7302:	1d 00 00 65 1d       	sbb    eax,0x1d650000
    7307:	00 00                	add    BYTE PTR [rax],al
    7309:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    730f:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7310:	21 00                	and    DWORD PTR [rax],eax
    7312:	00 00                	add    BYTE PTR [rax],al
    7314:	14 0c                	adc    al,0xc
    7316:	2a 00                	sub    al,BYTE PTR [rax]
    7318:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    731b:	b6 0d                	mov    dh,0xd
    731d:	00 00                	add    BYTE PTR [rax],al
    731f:	c4                   	(bad)
    7320:	3f                   	(bad)
    7321:	00 00                	add    BYTE PTR [rax],al
    7323:	7c 1d                	jl     7342 <_end+0x132a>
    7325:	00 00                	add    BYTE PTR [rax],al
    7327:	87 1d 00 00 10 b5    	xchg   DWORD PTR [rip+0xffffffffb5100000],ebx        # ffffffffb510732d <_end+0xffffffffb5101315>
    732d:	3f                   	(bad)
    732e:	00 00                	add    BYTE PTR [rax],al
    7330:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    7336:	14 f9                	adc    al,0xf9
    7338:	30 00                	xor    BYTE PTR [rax],al
    733a:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    733d:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    7340:	00 c4                	add    ah,al
    7342:	3f                   	(bad)
    7343:	00 00                	add    BYTE PTR [rax],al
    7345:	9e                   	sahf
    7346:	1d 00 00 a9 1d       	sbb    eax,0x1da90000
    734b:	00 00                	add    BYTE PTR [rax],al
    734d:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    7353:	bf 3f 00 00 00       	mov    edi,0x3f
    7358:	14 ab                	adc    al,0xab
    735a:	2d 00 00 7f 02       	sub    eax,0x27f0000
    735f:	82                   	(bad)
    7360:	20 00                	and    BYTE PTR [rax],al
    7362:	00 c4                	add    ah,al
    7364:	3f                   	(bad)
    7365:	00 00                	add    BYTE PTR [rax],al
    7367:	c0 1d 00 00 cb 1d 00 	rcr    BYTE PTR [rip+0x1dcb0000],0x0        # 1dcb736e <_end+0x1dcb1356>
    736e:	00 10                	add    BYTE PTR [rax],dl
    7370:	b5 3f                	mov    ch,0x3f
    7372:	00 00                	add    BYTE PTR [rax],al
    7374:	01 d3                	add    ebx,edx
    7376:	3f                   	(bad)
    7377:	00 00                	add    BYTE PTR [rax],al
    7379:	00 14 d2             	add    BYTE PTR [rdx+rdx*8],dl
    737c:	33 00                	xor    eax,DWORD PTR [rax]
    737e:	00 86 02 d5 29 00    	add    BYTE PTR [rsi+0x29d502],al
    7384:	00 c4                	add    ah,al
    7386:	3f                   	(bad)
    7387:	00 00                	add    BYTE PTR [rax],al
    7389:	e2 1d                	loop   73a8 <_end+0x1390>
    738b:	00 00                	add    BYTE PTR [rax],al
    738d:	ed                   	in     eax,dx
    738e:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    7393:	3f                   	(bad)
    7394:	00 00                	add    BYTE PTR [rax],al
    7396:	01 d3                	add    ebx,edx
    7398:	3f                   	(bad)
    7399:	00 00                	add    BYTE PTR [rax],al
    739b:	00 53 b8             	add    BYTE PTR [rbx-0x48],dl
    739e:	23 00                	and    eax,DWORD PTR [rax]
    73a0:	00 4a 20             	add    BYTE PTR [rdx+0x20],cl
    73a3:	00 00                	add    BYTE PTR [rax],al
    73a5:	df 1b                	fistp  WORD PTR [rbx]
    73a7:	00 00                	add    BYTE PTR [rax],al
    73a9:	2c 6d                	sub    al,0x6d
    73ab:	69 6e 00 a5 02 b6 27 	imul   ebp,DWORD PTR [rsi+0x0],0x27b602a5
    73b2:	00 00                	add    BYTE PTR [rax],al
    73b4:	df 1b                	fistp  WORD PTR [rbx]
    73b6:	00 00                	add    BYTE PTR [rax],al
    73b8:	2c 6d                	sub    al,0x6d
    73ba:	61                   	(bad)
    73bb:	78 00                	js     73bd <_end+0x13a5>
    73bd:	a9 02 f7 21 00       	test   eax,0x21f702
    73c2:	00 df                	add    bh,bl
    73c4:	1b 00                	sbb    eax,DWORD PTR [rax]
    73c6:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
    73c9:	5f                   	pop    rdi
    73ca:	72 00                	jb     73cc <_end+0x13b4>
    73cc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    73cd:	02 06                	add    al,BYTE PTR [rsi]
    73cf:	82                   	(bad)
    73d0:	1c 00                	sbb    al,0x0
    73d2:	00 41 ca             	add    BYTE PTR [rcx-0x36],al
    73d5:	2e 00 00             	cs add BYTE PTR [rax],al
    73d8:	3d 02 17 7c 29       	cmp    eax,0x297c1702
    73dd:	00 00                	add    BYTE PTR [rax],al
    73df:	41 1e                	rex.B (bad)
    73e1:	00 00                	add    BYTE PTR [rax],al
    73e3:	4c 1e                	rex.WR (bad)
    73e5:	00 00                	add    BYTE PTR [rax],al
    73e7:	11 09                	adc    DWORD PTR [rcx],ecx
    73e9:	19 00                	sbb    DWORD PTR [rax],eax
    73eb:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    73f1:	b5 3f                	mov    ch,0x3f
    73f3:	00 00                	add    BYTE PTR [rax],al
    73f5:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    73f8:	00 00                	add    BYTE PTR [rax],al
    73fa:	00 11                	add    BYTE PTR [rcx],dl
    73fc:	84 32                	test   BYTE PTR [rdx],dh
    73fe:	00 00                	add    BYTE PTR [rax],al
    7400:	b2 21                	mov    dl,0x21
    7402:	00 00                	add    BYTE PTR [rax],al
    7404:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    7407:	00 00                	add    BYTE PTR [rax],al
    7409:	3d 20 00 00 00       	cmp    eax,0x20
    740e:	13 df                	adc    ebx,edi
    7410:	1b 00                	sbb    eax,DWORD PTR [rax]
    7412:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    7415:	9e                   	sahf
    7416:	05 1f 89 20 00       	add    eax,0x20891f
    741b:	00 1b                	add    BYTE PTR [rbx],bl
    741d:	69 31 00 00 01 04    	imul   esi,DWORD PTR [rcx],0x4010000
    7423:	cc                   	int3
    7424:	0e                   	(bad)
    7425:	d6                   	(bad)
    7426:	1e                   	(bad)
    7427:	00 00                	add    BYTE PTR [rax],al
    7429:	0f 01                	(bad)
    742b:	29 00                	sub    DWORD PTR [rax],eax
    742d:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    7430:	04 1f                	add    al,0x1f
    7432:	28 00                	sub    BYTE PTR [rax],al
    7434:	00 df                	add    bh,bl
    7436:	1b 00                	sbb    eax,DWORD PTR [rax]
    7438:	00 a6 1e 00 00 11    	add    BYTE PTR [rsi+0x1100001e],ah
    743e:	84 32                	test   BYTE PTR [rdx],dh
    7440:	00 00                	add    BYTE PTR [rax],al
    7442:	b2 21                	mov    dl,0x21
    7444:	00 00                	add    BYTE PTR [rax],al
    7446:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    7449:	00 00                	add    BYTE PTR [rax],al
    744b:	94                   	xchg   esp,eax
    744c:	1f                   	(bad)
    744d:	00 00                	add    BYTE PTR [rax],al
    744f:	01 9c 3f 00 00 00 11 	add    DWORD PTR [rdi+rdi*1+0x11000000],ebx
    7456:	3c 22                	cmp    al,0x22
    7458:	00 00                	add    BYTE PTR [rax],al
    745a:	df 1b                	fistp  WORD PTR [rbx]
    745c:	00 00                	add    BYTE PTR [rax],al
    745e:	43 5f                	rex.XB pop r15
    7460:	43                   	rex.XB
    7461:	46 00 fd             	rex.RX add bpl,r15b
    7464:	1f                   	(bad)
    7465:	00 00                	add    BYTE PTR [rax],al
    7467:	43 5f                	rex.XB pop r15
    7469:	43 52                	rex.XB push r10
    746b:	00 b2 21 00 00 2f    	add    BYTE PTR [rdx+0x2f000021],dh
    7471:	35 2d 00 00 ea       	xor    eax,0xea00002d
    7476:	20 00                	and    BYTE PTR [rax],al
    7478:	00 01                	add    BYTE PTR [rcx],al
    747a:	2f                   	(bad)
    747b:	72 24                	jb     74a1 <_end+0x1489>
    747d:	00 00                	add    BYTE PTR [rax],al
    747f:	ea                   	(bad)
    7480:	20 00                	and    BYTE PTR [rax],al
    7482:	00 00                	add    BYTE PTR [rax],al
    7484:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
    7487:	25 00 00 04 c6       	and    eax,0xc6040000
    748c:	02 07                	add    al,BYTE PTR [rdi]
    748e:	80 21 00             	and    BYTE PTR [rcx],0x0
    7491:	00 e0                	add    al,ah
    7493:	1f                   	(bad)
    7494:	00 00                	add    BYTE PTR [rax],al
    7496:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    7498:	00 00                	add    BYTE PTR [rax],al
    749a:	11 03                	adc    DWORD PTR [rbx],eax
    749c:	19 00                	sbb    DWORD PTR [rax],eax
    749e:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    74a4:	98                   	cwde
    74a5:	22 00                	and    al,BYTE PTR [rax]
    74a7:	00 94 1f 00 00 11 09 	add    BYTE PTR [rdi+rbx*1+0x9110000],dl
    74ae:	19 00                	sbb    DWORD PTR [rax],eax
    74b0:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    74b6:	bb 2f 00 00 94       	mov    ebx,0x9400002f
    74bb:	1f                   	(bad)
    74bc:	00 00                	add    BYTE PTR [rax],al
    74be:	01 9c 3f 00 00 01 9c 	add    DWORD PTR [rdi+rdi*1-0x63ff0000],ebx
    74c5:	3f                   	(bad)
    74c6:	00 00                	add    BYTE PTR [rax],al
    74c8:	00 08                	add    BYTE PTR [rax],cl
    74ca:	57                   	push   rdi
    74cb:	0d 00 00 04 f0       	or     eax,0xf0040000
    74d0:	0d a8 20 00 00       	or     eax,0x20a8
    74d5:	04 e3                	add    al,0xe3
    74d7:	26 00 00             	es add BYTE PTR [rax],al
    74da:	04 11                	add    al,0x11
    74dc:	01 07                	add    DWORD PTR [rdi],eax
    74de:	fc                   	cld
    74df:	19 00                	sbb    DWORD PTR [rax],eax
    74e1:	00 1a                	add    BYTE PTR [rdx],bl
    74e3:	1f                   	(bad)
    74e4:	00 00                	add    BYTE PTR [rax],al
    74e6:	5c                   	pop    rsp
    74e7:	1f                   	(bad)
    74e8:	00 00                	add    BYTE PTR [rax],al
    74ea:	11 3c 22             	adc    DWORD PTR [rdx+riz*1],edi
    74ed:	00 00                	add    BYTE PTR [rax],al
    74ef:	df 1b                	fistp  WORD PTR [rbx]
    74f1:	00 00                	add    BYTE PTR [rax],al
    74f3:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    74fa:	00 00                	add    BYTE PTR [rax],al
    74fc:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    74ff:	00 00                	add    BYTE PTR [rax],al
    7501:	94                   	xchg   esp,eax
    7502:	1f                   	(bad)
    7503:	00 00                	add    BYTE PTR [rax],al
    7505:	01 9c 3f 00 00 00 70 	add    DWORD PTR [rdi+rdi*1+0x70000000],ebx
    750c:	e3 1b                	jrcxz  7529 <_end+0x1511>
    750e:	00 00                	add    BYTE PTR [rax],al
    7510:	04 75                	add    al,0x75
    7512:	04 07                	add    al,0x7
    7514:	13 2c 00             	adc    ebp,DWORD PTR [rax+rax*1]
    7517:	00 e0                	add    al,ah
    7519:	1f                   	(bad)
    751a:	00 00                	add    BYTE PTR [rax],al
    751c:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    7522:	1a 00                	sbb    al,BYTE PTR [rax]
    7524:	00 11                	add    BYTE PTR [rcx],dl
    7526:	ca 22 00             	retf   0x22
    7529:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    752c:	00 00                	add    BYTE PTR [rax],al
    752e:	11 d0                	adc    eax,edx
    7530:	22 00                	and    al,BYTE PTR [rax]
    7532:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    7535:	00 00                	add    BYTE PTR [rax],al
    7537:	01 84 4e 00 00 01 84 	add    DWORD PTR [rsi+rcx*2-0x7bff0000],eax
    753e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7541:	00 00                	add    BYTE PTR [rax],al
    7543:	44 c9                	rex.R leave
    7545:	1f                   	(bad)
    7546:	00 00                	add    BYTE PTR [rax],al
    7548:	d3 1f                	rcr    DWORD PTR [rdi],cl
    754a:	00 00                	add    BYTE PTR [rax],al
    754c:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    754e:	75 6d                	jne    75bd <_end+0x15a5>
    7550:	00 f1                	add    cl,dh
    7552:	1f                   	(bad)
    7553:	00 00                	add    BYTE PTR [rax],al
    7555:	b1 2d                	mov    cl,0x2d
    7557:	00 00                	add    BYTE PTR [rax],al
    7559:	54                   	push   rsp
    755a:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    755d:	00 51 15             	add    BYTE PTR [rcx+0x15],dl
    7560:	00 00                	add    BYTE PTR [rax],al
    7562:	b1 2d                	mov    cl,0x2d
    7564:	00 00                	add    BYTE PTR [rax],al
    7566:	00 ca                	add    dl,cl
    7568:	9a                   	(bad)
    7569:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    756b:	94                   	xchg   esp,eax
    756c:	26 00 00             	es add BYTE PTR [rax],al
    756f:	b2 21                	mov    dl,0x21
    7571:	00 00                	add    BYTE PTR [rax],al
    7573:	01 55 b8             	add    DWORD PTR [rbp-0x48],edx
    7576:	11 00                	adc    DWORD PTR [rax],eax
    7578:	00 b2 21 00 00 00    	add    BYTE PTR [rdx+0x21],dh
    757e:	ca 9a 3b             	retf   0x3b9a
    7581:	00 1b                	add    BYTE PTR [rbx],bl
    7583:	dd 23                	frstor [rbx]
    7585:	00 00                	add    BYTE PTR [rax],al
    7587:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    758a:	0c fd                	or     al,0xfd
    758c:	1f                   	(bad)
    758d:	00 00                	add    BYTE PTR [rax],al
    758f:	08 55 13             	or     BYTE PTR [rbp+0x13],dl
    7592:	00 00                	add    BYTE PTR [rax],al
    7594:	04 73                	add    al,0x73
    7596:	0d 14 18 00 00       	or     eax,0x1814
    759b:	71 5f                	jno    75fc <_end+0x15e4>
    759d:	54                   	push   rsp
    759e:	70 00                	jo     75a0 <_end+0x1588>
    75a0:	56                   	push   rsi
    75a1:	14 18                	adc    al,0x18
    75a3:	00 00                	add    BYTE PTR [rax],al
    75a5:	56                   	push   rsi
    75a6:	14 18                	adc    al,0x18
    75a8:	00 00                	add    BYTE PTR [rax],al
    75aa:	00 00                	add    BYTE PTR [rax],al
    75ac:	44 58                	rex.R pop rax
    75ae:	2a 00                	sub    al,BYTE PTR [rax]
    75b0:	00 3d 20 00 00 45    	add    BYTE PTR [rip+0x45000020],bh        # 450075d6 <_end+0x450015be>
    75b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    75b7:	75 6d                	jne    7626 <_end+0x160e>
    75b9:	00 5e 1d             	add    BYTE PTR [rsi+0x1d],bl
    75bc:	00 00                	add    BYTE PTR [rax],al
    75be:	b1 2d                	mov    cl,0x2d
    75c0:	00 00                	add    BYTE PTR [rax],al
    75c2:	72 64                	jb     7628 <_end+0x1610>
    75c4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    75c6:	00 10                	add    BYTE PTR [rax],dl
    75c8:	14 01                	adc    al,0x1
    75ca:	21 87 13 00 00 b1    	and    DWORD PTR [rdi-0x4effffed],eax
    75d0:	2d 00 00 e8 03       	sub    eax,0x3e80000
    75d5:	01 2f                	add    DWORD PTR [rdi],ebp
    75d7:	94                   	xchg   esp,eax
    75d8:	26 00 00             	es add BYTE PTR [rax],al
    75db:	b2 21                	mov    dl,0x21
    75dd:	00 00                	add    BYTE PTR [rax],al
    75df:	01 73 b8             	add    DWORD PTR [rbx-0x48],esi
    75e2:	11 00                	adc    DWORD PTR [rax],eax
    75e4:	00 b2 21 00 00 e8    	add    BYTE PTR [rdx-0x17ffffdf],dh
    75ea:	03 00                	add    eax,DWORD PTR [rax]
    75ec:	44 fa                	rex.R cli
    75ee:	1c 00                	sbb    al,0x0
    75f0:	00 7c 20 00          	add    BYTE PTR [rax+riz*1+0x0],bh
    75f4:	00 45 6e             	add    BYTE PTR [rbp+0x6e],al
    75f7:	75 6d                	jne    7666 <_end+0x164e>
    75f9:	00 ae 26 00 00 b1    	add    BYTE PTR [rsi-0x4effffda],ch
    75ff:	2d 00 00 54 64       	sub    eax,0x64540000
    7604:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7606:	00 23                	add    BYTE PTR [rbx],ah
    7608:	1e                   	(bad)
    7609:	00 00                	add    BYTE PTR [rax],al
    760b:	b1 2d                	mov    cl,0x2d
    760d:	00 00                	add    BYTE PTR [rax],al
    760f:	40                   	rex
    7610:	42 0f 00 2f          	rex.X verw WORD PTR [rdi]
    7614:	94                   	xchg   esp,eax
    7615:	26 00 00             	es add BYTE PTR [rax],al
    7618:	b2 21                	mov    dl,0x21
    761a:	00 00                	add    BYTE PTR [rax],al
    761c:	01 55 b8             	add    DWORD PTR [rbp-0x48],edx
    761f:	11 00                	adc    DWORD PTR [rax],eax
    7621:	00 b2 21 00 00 40    	add    BYTE PTR [rdx+0x40000021],dh
    7627:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    762b:	74 f4                	je     7621 <_end+0x1609>
    762d:	0c 00                	or     al,0x0
    762f:	00 3d 58 03 14 93    	add    BYTE PTR [rip+0xffffffff93140358],bh        # ffffffff9314798d <_end+0xffffffff93141975>
    7635:	20 00                	and    BYTE PTR [rax],al
    7637:	00 50 ed             	add    BYTE PTR [rax-0x13],dl
    763a:	0c 00                	or     al,0x0
    763c:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    763f:	05 14 00 3d d7       	add    eax,0xd73d0014
    7644:	25 00 00 04 34       	and    eax,0x34040000
    7649:	0d 1b 16 12 00       	or     eax,0x12161b
    764e:	00 01                	add    BYTE PTR [rcx],al
    7650:	05 6f 0c be 20       	add    eax,0x20be0c6f
    7655:	00 00                	add    BYTE PTR [rax],al
    7657:	08 55 13             	or     BYTE PTR [rbp+0x13],dl
    765a:	00 00                	add    BYTE PTR [rax],al
    765c:	05 70 13 df 1b       	add    eax,0x1bdf1370
    7661:	00 00                	add    BYTE PTR [rax],al
    7663:	43 5f                	rex.XB pop r15
    7665:	54                   	push   rsp
    7666:	70 00                	jo     7668 <_end+0x1650>
    7668:	df 1b                	fistp  WORD PTR [rbx]
    766a:	00 00                	add    BYTE PTR [rax],al
    766c:	00 34 c3             	add    BYTE PTR [rbx+rax*8],dh
    766f:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7674:	00 00                	add    BYTE PTR [rax],al
    7676:	34 c3                	xor    al,0xc3
    7678:	2d 00 00 f1 20       	sub    eax,0x20f10000
    767d:	00 00                	add    BYTE PTR [rax],al
    767f:	34 c3                	xor    al,0xc3
    7681:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7686:	00 00                	add    BYTE PTR [rax],al
    7688:	34 c3                	xor    al,0xc3
    768a:	2d 00 00 f1 20       	sub    eax,0x20f10000
    768f:	00 00                	add    BYTE PTR [rax],al
    7691:	00 12                	add    BYTE PTR [rdx],dl
    7693:	04 07                	add    al,0x7
    7695:	f8                   	clc
    7696:	00 00                	add    BYTE PTR [rax],al
    7698:	00 12                	add    BYTE PTR [rdx],dl
    769a:	01 02                	add    DWORD PTR [rdx],eax
    769c:	a1 04 00 00 13 ea 20 	movabs eax,ds:0x20ea13000004
    76a3:	00 00 
    76a5:	75 12                	jne    76b9 <_end+0x16a1>
    76a7:	02 00                	add    al,BYTE PTR [rax]
    76a9:	00 11                	add    BYTE PTR [rcx],dl
    76ab:	57                   	push   rdi
    76ac:	01 0b                	add    DWORD PTR [rbx],ecx
    76ae:	7c 21                	jl     76d1 <_end+0x16b9>
    76b0:	00 00                	add    BYTE PTR [rax],al
    76b2:	3d 67 32 00 00       	cmp    eax,0x3267
    76b7:	12 25 0b 02 08 cc    	adc    ah,BYTE PTR [rip+0xffffffffcc08020b]        # ffffffffcc0878c8 <_end+0xffffffffcc0818b0>
    76bd:	0b c7                	or     eax,edi
    76bf:	23 00                	and    eax,DWORD PTR [rax]
    76c1:	00 02                	add    BYTE PTR [rdx],al
    76c3:	08 dc                	or     ah,bl
    76c5:	0b 2b                	or     ebp,DWORD PTR [rbx]
    76c7:	30 00                	xor    BYTE PTR [rax],al
    76c9:	00 02                	add    BYTE PTR [rdx],al
    76cb:	08 e7                	or     bh,ah
    76cd:	0b 47 30             	or     eax,DWORD PTR [rdi+0x30]
    76d0:	00 00                	add    BYTE PTR [rax],al
    76d2:	02 08                	add    cl,BYTE PTR [rax]
    76d4:	e8 0b 5e 30 00       	call   30d4e4 <_end+0x3074cc>
    76d9:	00 02                	add    BYTE PTR [rdx],al
    76db:	08 e9                	or     cl,ch
    76dd:	0b 82 30 00 00 02    	or     eax,DWORD PTR [rdx+0x2000030]
    76e3:	08 eb                	or     bl,ch
    76e5:	0b a6 30 00 00 02    	or     esp,DWORD PTR [rsi+0x2000030]
    76eb:	08 ec                	or     ah,ch
    76ed:	0b c1                	or     eax,ecx
    76ef:	30 00                	xor    BYTE PTR [rax],al
    76f1:	00 1a                	add    BYTE PTR [rdx],bl
    76f3:	64 69 76 00 08 d9 b8 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d908
    76fa:	01 
    76fb:	00 00                	add    BYTE PTR [rax],al
    76fd:	c7                   	(bad)
    76fe:	23 00                	and    eax,DWORD PTR [rax]
    7700:	00 61 21             	add    BYTE PTR [rcx+0x21],ah
    7703:	00 00                	add    BYTE PTR [rax],al
    7705:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    770b:	be 21 00 00 00       	mov    esi,0x21
    7710:	02 09                	add    cl,BYTE PTR [rcx]
    7712:	fb                   	sti
    7713:	0b 49 3a             	or     ecx,DWORD PTR [rcx+0x3a]
    7716:	00 00                	add    BYTE PTR [rax],al
    7718:	18 09                	sbb    BYTE PTR [rcx],cl
    771a:	04 01                	add    al,0x1
    771c:	0b 65 3a             	or     esp,DWORD PTR [rbp+0x3a]
    771f:	00 00                	add    BYTE PTR [rax],al
    7721:	18 09                	sbb    BYTE PTR [rcx],cl
    7723:	05 01 0b 8a 3a       	add    eax,0x3a8a0b01
    7728:	00 00                	add    BYTE PTR [rax],al
    772a:	00 12                	add    BYTE PTR [rdx],dl
    772c:	01 08                	add    DWORD PTR [rax],ecx
    772e:	ff 01                	inc    DWORD PTR [rcx]
    7730:	00 00                	add    BYTE PTR [rax],al
    7732:	12 02                	adc    al,BYTE PTR [rdx]
    7734:	07                   	(bad)
    7735:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    7738:	00 12                	add    BYTE PTR [rdx],dl
    773a:	08 07                	or     BYTE PTR [rdi],al
    773c:	f3 00 00             	repz add BYTE PTR [rax],al
    773f:	00 12                	add    BYTE PTR [rdx],dl
    7741:	08 07                	or     BYTE PTR [rdi],al
    7743:	ee                   	out    dx,al
    7744:	00 00                	add    BYTE PTR [rax],al
    7746:	00 12                	add    BYTE PTR [rdx],dl
    7748:	01 06                	add    DWORD PTR [rsi],eax
    774a:	01 02                	add    DWORD PTR [rdx],eax
    774c:	00 00                	add    BYTE PTR [rax],al
    774e:	12 02                	adc    al,BYTE PTR [rdx]
    7750:	05 5b 00 00 00       	add    eax,0x5b
    7755:	76 04                	jbe    775b <_end+0x1743>
    7757:	05 69 6e 74 00       	add    eax,0x746e69
    775c:	13 a6 21 00 00 12    	adc    esp,DWORD PTR [rsi+0x12000021]
    7762:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 784d <_end+0x1835>
    7768:	13 b2 21 00 00 12    	adc    esi,DWORD PTR [rdx+0x12000021]
    776e:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 7854 <_end+0x183c>
    7774:	12 10                	adc    dl,BYTE PTR [rax]
    7776:	04 f3                	add    al,0xf3
    7778:	01 00                	add    DWORD PTR [rax],eax
    777a:	00 08                	add    BYTE PTR [rax],cl
    777c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    777d:	26 00 00             	es add BYTE PTR [rax],al
    7780:	13 25 15 98 21 00    	adc    esp,DWORD PTR [rip+0x219815]        # 220f9b <_end+0x21af83>
    7786:	00 08                	add    BYTE PTR [rax],cl
    7788:	c9                   	leave
    7789:	11 00                	adc    DWORD PTR [rax],eax
    778b:	00 13                	add    BYTE PTR [rbx],dl
    778d:	26 17                	es (bad)
    778f:	7c 21                	jl     77b2 <_end+0x179a>
    7791:	00 00                	add    BYTE PTR [rax],al
    7793:	08 2a                	or     BYTE PTR [rdx],ch
    7795:	2a 00                	sub    al,BYTE PTR [rax]
    7797:	00 13                	add    BYTE PTR [rbx],dl
    7799:	27                   	(bad)
    779a:	1a 9f 21 00 00 08    	sbb    bl,BYTE PTR [rdi+0x8000021]
    77a0:	5e                   	pop    rsi
    77a1:	17                   	(bad)
    77a2:	00 00                	add    BYTE PTR [rax],al
    77a4:	13 28                	adc    ebp,DWORD PTR [rax]
    77a6:	1c 83                	sbb    al,0x83
    77a8:	21 00                	and    DWORD PTR [rax],eax
    77aa:	00 08                	add    BYTE PTR [rax],cl
    77ac:	d5 08 00 00          	{rex2 0x8} add BYTE PTR [rax],al
    77b0:	13 29                	adc    ebp,DWORD PTR [rcx]
    77b2:	14 a6                	adc    al,0xa6
    77b4:	21 00                	and    DWORD PTR [rax],eax
    77b6:	00 08                	add    BYTE PTR [rax],cl
    77b8:	a9 00 00 00 13       	test   eax,0x13000000
    77bd:	2a 16                	sub    dl,BYTE PTR [rsi]
    77bf:	e3 20                	jrcxz  77e1 <_end+0x17c9>
    77c1:	00 00                	add    BYTE PTR [rax],al
    77c3:	08 e5                	or     ch,ah
    77c5:	2f                   	(bad)
    77c6:	00 00                	add    BYTE PTR [rax],al
    77c8:	13 2c 19             	adc    ebp,DWORD PTR [rcx+rbx*1]
    77cb:	b2 21                	mov    dl,0x21
    77cd:	00 00                	add    BYTE PTR [rax],al
    77cf:	08 96 08 00 00 13    	or     BYTE PTR [rsi+0x13000008],dl
    77d5:	2d 1b 8a 21 00       	sub    eax,0x218a1b
    77da:	00 08                	add    BYTE PTR [rax],cl
    77dc:	fa                   	cli
    77dd:	24 00                	and    al,0x0
    77df:	00 13                	add    BYTE PTR [rbx],dl
    77e1:	34 12                	xor    al,0x12
    77e3:	cc                   	int3
    77e4:	21 00                	and    DWORD PTR [rax],eax
    77e6:	00 08                	add    BYTE PTR [rax],cl
    77e8:	99                   	cdq
    77e9:	0d 00 00 13 35       	or     eax,0x35130000
    77ee:	13 d8                	adc    ebx,eax
    77f0:	21 00                	and    DWORD PTR [rax],eax
    77f2:	00 08                	add    BYTE PTR [rax],cl
    77f4:	c8 28 00 00          	enter  0x28,0x0
    77f8:	13 36                	adc    esi,DWORD PTR [rsi]
    77fa:	13 e4                	adc    esp,esp
    77fc:	21 00                	and    DWORD PTR [rax],eax
    77fe:	00 08                	add    BYTE PTR [rax],cl
    7800:	40 15 00 00 13 37    	rex adc eax,0x37130000
    7806:	14 f0                	adc    al,0xf0
    7808:	21 00                	and    DWORD PTR [rax],eax
    780a:	00 08                	add    BYTE PTR [rax],cl
    780c:	ee                   	out    dx,al
    780d:	31 00                	xor    DWORD PTR [rax],eax
    780f:	00 13                	add    BYTE PTR [rbx],dl
    7811:	38 13                	cmp    BYTE PTR [rbx],dl
    7813:	fc                   	cld
    7814:	21 00                	and    DWORD PTR [rax],eax
    7816:	00 08                	add    BYTE PTR [rax],cl
    7818:	88 1d 00 00 13 39    	mov    BYTE PTR [rip+0x39130000],bl        # 3913781e <_end+0x39131806>
    781e:	14 08                	adc    al,0x8
    7820:	22 00                	and    al,BYTE PTR [rax]
    7822:	00 08                	add    BYTE PTR [rax],cl
    7824:	ba 2e 00 00 13       	mov    edx,0x1300002e
    7829:	3a 13                	cmp    dl,BYTE PTR [rbx]
    782b:	14 22                	adc    al,0x22
    782d:	00 00                	add    BYTE PTR [rax],al
    782f:	08 c1                	or     cl,al
    7831:	19 00                	sbb    DWORD PTR [rax],eax
    7833:	00 13                	add    BYTE PTR [rbx],dl
    7835:	3b 14 20             	cmp    edx,DWORD PTR [rax+riz*1]
    7838:	22 00                	and    al,BYTE PTR [rax]
    783a:	00 08                	add    BYTE PTR [rax],cl
    783c:	fb                   	sti
    783d:	22 00                	and    al,BYTE PTR [rax]
    783f:	00 13                	add    BYTE PTR [rbx],dl
    7841:	48 12 b2 21 00 00 08 	rex.W adc sil,BYTE PTR [rdx+0x8000021]
    7848:	14 2f                	adc    al,0x2f
    784a:	00 00                	add    BYTE PTR [rax],al
    784c:	13 49 1b             	adc    ecx,DWORD PTR [rcx+0x1b]
    784f:	8a 21                	mov    ah,BYTE PTR [rcx]
    7851:	00 00                	add    BYTE PTR [rax],al
    7853:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    7856:	00 00                	add    BYTE PTR [rax],al
    7858:	13 98 19 b2 21 00    	adc    ebx,DWORD PTR [rax+0x21b219]
    785e:	00 08                	add    BYTE PTR [rax],cl
    7860:	00 2b                	add    BYTE PTR [rbx],ch
    7862:	00 00                	add    BYTE PTR [rax],al
    7864:	13 99 1b b2 21 00    	adc    ebx,DWORD PTR [rcx+0x21b21b]
    786a:	00 08                	add    BYTE PTR [rax],cl
    786c:	aa                   	stos   BYTE PTR es:[rdi],al
    786d:	24 00                	and    al,0x0
    786f:	00 13                	add    BYTE PTR [rbx],dl
    7871:	9c                   	pushf
    7872:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    7878:	42 0b 00             	rex.X or eax,DWORD PTR [rax]
    787b:	00 13                	add    BYTE PTR [rbx],dl
    787d:	a0 1a b2 21 00 00 77 	movabs al,ds:0x80877000021b21a
    7884:	08 08 
    7886:	b5 0a                	mov    ch,0xa
    7888:	00 00                	add    BYTE PTR [rax],al
    788a:	13 c5                	adc    eax,ebp
    788c:	21 b2 21 00 00 0d    	and    DWORD PTR [rdx+0xd000021],esi
    7892:	e7 22                	out    0x22,eax
    7894:	00 00                	add    BYTE PTR [rax],al
    7896:	12 01                	adc    al,BYTE PTR [rcx]
    7898:	06                   	(bad)
    7899:	08 02                	or     BYTE PTR [rdx],al
    789b:	00 00                	add    BYTE PTR [rax],al
    789d:	13 e7                	adc    esp,edi
    789f:	22 00                	and    al,BYTE PTR [rax]
    78a1:	00 08                	add    BYTE PTR [rax],cl
    78a3:	f1                   	int1
    78a4:	25 00 00 14 a3       	and    eax,0xa3140000
    78a9:	0f 35                	sysexitd
    78ab:	00 00                	add    BYTE PTR [rax],al
    78ad:	00 08                	add    BYTE PTR [rax],cl
    78af:	13 23                	adc    esp,DWORD PTR [rbx]
    78b1:	00 00                	add    BYTE PTR [rax],al
    78b3:	14 a4                	adc    al,0xa4
    78b5:	10 2e                	adc    BYTE PTR [rsi],ch
    78b7:	00 00                	add    BYTE PTR [rax],al
    78b9:	00 12                	add    BYTE PTR [rdx],dl
    78bb:	04 04                	add    al,0x4
    78bd:	29 2e                	sub    DWORD PTR [rsi],ebp
    78bf:	00 00                	add    BYTE PTR [rax],al
    78c1:	12 08                	adc    cl,BYTE PTR [rax]
    78c3:	04 10                	add    al,0x10
    78c5:	32 00                	xor    al,BYTE PTR [rax]
    78c7:	00 12                	add    BYTE PTR [rdx],dl
    78c9:	10 04 0c             	adc    BYTE PTR [rsp+rcx*1],al
    78cc:	31 00                	xor    DWORD PTR [rax],eax
    78ce:	00 12                	add    BYTE PTR [rdx],dl
    78d0:	08 04 ad 19 00 00 12 	or     BYTE PTR [rbp*4+0x12000019],al
    78d7:	10 04 5b             	adc    BYTE PTR [rbx+rbx*2],al
    78da:	0c 00                	or     al,0x0
    78dc:	00 08                	add    BYTE PTR [rax],cl
    78de:	d6                   	(bad)
    78df:	0a 00                	or     al,BYTE PTR [rax]
    78e1:	00 15 d6 17 8a 21    	add    BYTE PTR [rip+0x218a17d6],dl        # 218a90bd <_end+0x218a30a5>
    78e7:	00 00                	add    BYTE PTR [rax],al
    78e9:	35 08 16 3c 03       	xor    eax,0x33c1608
    78ee:	dd 02                	fld    QWORD PTR [rdx]
    78f0:	00 00                	add    BYTE PTR [rax],al
    78f2:	61                   	(bad)
    78f3:	23 00                	and    eax,DWORD PTR [rax]
    78f5:	00 06                	add    BYTE PTR [rsi],al
    78f7:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    78fa:	00 16                	add    BYTE PTR [rsi],dl
    78fc:	3d 09 a6 21 00       	cmp    eax,0x21a609
    7901:	00 00                	add    BYTE PTR [rax],al
    7903:	46 72 65             	rex.RX jb 796b <_end+0x1953>
    7906:	6d                   	ins    DWORD PTR es:[rdi],dx
    7907:	00 3e                	add    BYTE PTR [rsi],bh
    7909:	09 a6 21 00 00 04    	or     DWORD PTR [rsi+0x4000021],esp
    790f:	00 08                	add    BYTE PTR [rax],cl
    7911:	de 02                	fiadd  WORD PTR [rdx]
    7913:	00 00                	add    BYTE PTR [rax],al
    7915:	16                   	(bad)
    7916:	3f                   	(bad)
    7917:	05 3a 23 00 00       	add    eax,0x233a
    791c:	35 10 16 44 03       	xor    eax,0x3441610
    7921:	09 00                	or     DWORD PTR [rax],eax
    7923:	00 00                	add    BYTE PTR [rax],al
    7925:	94                   	xchg   esp,eax
    7926:	23 00                	and    eax,DWORD PTR [rax]
    7928:	00 06                	add    BYTE PTR [rsi],al
    792a:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    792d:	00 16                	add    BYTE PTR [rsi],dl
    792f:	45 0e                	rex.RB (bad)
    7931:	b2 21                	mov    dl,0x21
    7933:	00 00                	add    BYTE PTR [rax],al
    7935:	00 46 72             	add    BYTE PTR [rsi+0x72],al
    7938:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    793a:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    793d:	b2 21                	mov    dl,0x21
    793f:	00 00                	add    BYTE PTR [rax],al
    7941:	08 00                	or     BYTE PTR [rax],al
    7943:	08 0a                	or     BYTE PTR [rdx],cl
    7945:	00 00                	add    BYTE PTR [rax],al
    7947:	00 16                	add    BYTE PTR [rsi],dl
    7949:	47 05 6d 23 00 00    	rex.RXB add eax,0x236d
    794f:	35 10 16 4e 03       	xor    eax,0x34e1610
    7954:	b4 00                	mov    ah,0x0
    7956:	00 00                	add    BYTE PTR [rax],al
    7958:	c7                   	(bad)
    7959:	23 00                	and    eax,DWORD PTR [rax]
    795b:	00 06                	add    BYTE PTR [rsi],al
    795d:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7960:	00 16                	add    BYTE PTR [rsi],dl
    7962:	4f 13 be 21 00 00 00 	rex.WRXB adc r15,QWORD PTR [r14+0x21]
    7969:	46 72 65             	rex.RX jb 79d1 <_end+0x19b9>
    796c:	6d                   	ins    DWORD PTR es:[rdi],dx
    796d:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    7970:	be 21 00 00 08       	mov    esi,0x8000021
    7975:	00 08                	add    BYTE PTR [rax],cl
    7977:	b5 00                	mov    ch,0x0
    7979:	00 00                	add    BYTE PTR [rax],al
    797b:	16                   	(bad)
    797c:	51                   	push   rcx
    797d:	05 a0 23 00 00       	add    eax,0x23a0
    7982:	0d ee 22 00 00       	or     eax,0x22ee
    7987:	57                   	push   rdi
    7988:	d3 23                	shl    DWORD PTR [rbx],cl
    798a:	00 00                	add    BYTE PTR [rax],al
    798c:	08 ac 24 00 00 17 07 	or     BYTE PTR [rsp+0x7170000],ch
    7993:	13 bc 22 00 00 08 44 	adc    edi,DWORD PTR [rdx+riz*1+0x44080000]
    799a:	0b 00                	or     eax,DWORD PTR [rax]
    799c:	00 18                	add    BYTE PTR [rax],bl
    799e:	0a 12                	or     dl,BYTE PTR [rdx]
    79a0:	c8 22 00 00          	enter  0x22,0x0
    79a4:	13 e9                	adc    ebp,ecx
    79a6:	23 00                	and    eax,DWORD PTR [rax]
    79a8:	00 08                	add    BYTE PTR [rax],cl
    79aa:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    79ab:	26 00 00             	es add BYTE PTR [rax],al
    79ae:	19 18                	sbb    DWORD PTR [rax],ebx
    79b0:	12 cc                	adc    cl,ah
    79b2:	21 00                	and    DWORD PTR [rax],eax
    79b4:	00 08                	add    BYTE PTR [rax],cl
    79b6:	2c 2a                	sub    al,0x2a
    79b8:	00 00                	add    BYTE PTR [rax],al
    79ba:	19 19                	sbb    DWORD PTR [rcx],ebx
    79bc:	13 e4                	adc    esp,esp
    79be:	21 00                	and    DWORD PTR [rax],eax
    79c0:	00 08                	add    BYTE PTR [rax],cl
    79c2:	d7                   	xlat   BYTE PTR ds:[rbx]
    79c3:	08 00                	or     BYTE PTR [rax],al
    79c5:	00 19                	add    BYTE PTR [rcx],bl
    79c7:	1a 13                	sbb    dl,BYTE PTR [rbx]
    79c9:	fc                   	cld
    79ca:	21 00                	and    DWORD PTR [rax],eax
    79cc:	00 08                	add    BYTE PTR [rax],cl
    79ce:	e7 2f                	out    0x2f,eax
    79d0:	00 00                	add    BYTE PTR [rax],al
    79d2:	19 1b                	sbb    DWORD PTR [rbx],ebx
    79d4:	13 14 22             	adc    edx,DWORD PTR [rdx+riz*1]
    79d7:	00 00                	add    BYTE PTR [rax],al
    79d9:	1b 0f                	sbb    ecx,DWORD PTR [rdi]
    79db:	0b 00                	or     eax,DWORD PTR [rax]
    79dd:	00 10                	add    BYTE PTR [rax],dl
    79df:	1a 0b                	sbb    cl,BYTE PTR [rbx]
    79e1:	08 52 24             	or     BYTE PTR [rdx+0x24],dl
    79e4:	00 00                	add    BYTE PTR [rax],al
    79e6:	06                   	(bad)
    79e7:	ae                   	scas   al,BYTE PTR es:[rdi]
    79e8:	0a 00                	or     al,BYTE PTR [rax]
    79ea:	00 1a                	add    BYTE PTR [rdx],bl
    79ec:	10 0c c8             	adc    BYTE PTR [rax+rcx*8],cl
    79ef:	22 00                	and    al,BYTE PTR [rax]
    79f1:	00 00                	add    BYTE PTR [rax],al
    79f3:	06                   	(bad)
    79f4:	9e                   	sahf
    79f5:	0a 00                	or     al,BYTE PTR [rax]
    79f7:	00 1a                	add    BYTE PTR [rdx],bl
    79f9:	15 15 d6 22 00       	adc    eax,0x22d615
    79fe:	00 08                	add    BYTE PTR [rax],cl
    7a00:	00 25 e7 22 00 00    	add    BYTE PTR [rip+0x22e7],ah        # 9ced <_end+0x3cd5>
    7a06:	62 24 00             	(bad)
    7a09:	00 26                	add    BYTE PTR [rsi],ah
    7a0b:	8a 21                	mov    ah,BYTE PTR [rcx]
    7a0d:	00 00                	add    BYTE PTR [rax],al
    7a0f:	03 00                	add    eax,DWORD PTR [rax]
    7a11:	42 cf                	rex.X iret
    7a13:	02 00                	add    al,BYTE PTR [rax]
    7a15:	00 16                	add    BYTE PTR [rsi],dl
    7a17:	b4 03                	mov    ah,0x3
    7a19:	0f 6f 24 00          	movq   mm4,QWORD PTR [rax+rax*1]
    7a1d:	00 0d 74 24 00 00    	add    BYTE PTR [rip+0x2474],cl        # 9e97 <_end+0x3e7f>
    7a23:	58                   	pop    rax
    7a24:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7a25:	21 00                	and    DWORD PTR [rax],eax
    7a27:	00 88 24 00 00 01    	add    BYTE PTR [rax+0x1000024],cl
    7a2d:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7a30:	00 01                	add    BYTE PTR [rcx],al
    7a32:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7a35:	00 00                	add    BYTE PTR [rax],al
    7a37:	0d 8d 24 00 00       	or     eax,0x248d
    7a3c:	78 12                	js     7a50 <_end+0x1a38>
    7a3e:	10 07                	adc    BYTE PTR [rdi],al
    7a40:	1b 07                	sbb    eax,DWORD PTR [rdi]
    7a42:	00 00                	add    BYTE PTR [rax],al
    7a44:	12 10                	adc    dl,BYTE PTR [rax]
    7a46:	05 ea 01 00 00       	add    eax,0x1ea
    7a4b:	12 04 05 61 02 00 00 	adc    al,BYTE PTR [rax*1+0x261]
    7a52:	13 9c 24 00 00 12 02 	adc    ebx,DWORD PTR [rsp+0x2120000]
    7a59:	10 19                	adc    BYTE PTR [rcx],bl
    7a5b:	32 00                	xor    al,BYTE PTR [rax]
    7a5d:	00 12                	add    BYTE PTR [rdx],dl
    7a5f:	04 10                	add    al,0x10
    7a61:	e4 2b                	in     al,0x2b
    7a63:	00 00                	add    BYTE PTR [rax],al
    7a65:	33 7c 1d 00          	xor    edi,DWORD PTR [rbp+rbx*1+0x0]
    7a69:	00 06                	add    BYTE PTR [rsi],al
    7a6b:	38 0b                	cmp    BYTE PTR [rbx],cl
    7a6d:	cb                   	retf
    7a6e:	24 00                	and    al,0x0
    7a70:	00 79 06             	add    BYTE PTR [rcx+0x6],bh
    7a73:	3a 18                	cmp    bl,BYTE PTR [rax]
    7a75:	69 00 00 00 00 12    	imul   eax,DWORD PTR [rax],0x12000000
    7a7b:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    7a7e:	02 00                	add    al,BYTE PTR [rax]
    7a80:	00 02                	add    BYTE PTR [rdx],al
    7a82:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7a84:	0c 71                	or     al,0x71
    7a86:	00 00                	add    BYTE PTR [rax],al
    7a88:	00 02                	add    BYTE PTR [rdx],al
    7a8a:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7a8c:	0c 8a                	or     al,0x8a
    7a8e:	00 00                	add    BYTE PTR [rax],al
    7a90:	00 02                	add    BYTE PTR [rdx],al
    7a92:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7a94:	0c a3                	or     al,0xa3
    7a96:	00 00                	add    BYTE PTR [rax],al
    7a98:	00 02                	add    BYTE PTR [rdx],al
    7a9a:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7a9c:	0c bc                	or     al,0xbc
    7a9e:	00 00                	add    BYTE PTR [rax],al
    7aa0:	00 02                	add    BYTE PTR [rdx],al
    7aa2:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7aa4:	0c d5                	or     al,0xd5
    7aa6:	00 00                	add    BYTE PTR [rax],al
    7aa8:	00 02                	add    BYTE PTR [rdx],al
    7aaa:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7aac:	0c ee                	or     al,0xee
    7aae:	00 00                	add    BYTE PTR [rax],al
    7ab0:	00 02                	add    BYTE PTR [rdx],al
    7ab2:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7ab4:	0c 07                	or     al,0x7
    7ab6:	01 00                	add    DWORD PTR [rax],eax
    7ab8:	00 02                	add    BYTE PTR [rdx],al
    7aba:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7abc:	0c 20                	or     al,0x20
    7abe:	01 00                	add    DWORD PTR [rax],eax
    7ac0:	00 02                	add    BYTE PTR [rdx],al
    7ac2:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7ac4:	0c 3a                	or     al,0x3a
    7ac6:	01 00                	add    DWORD PTR [rax],eax
    7ac8:	00 02                	add    BYTE PTR [rdx],al
    7aca:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7acc:	0c 54                	or     al,0x54
    7ace:	01 00                	add    DWORD PTR [rax],eax
    7ad0:	00 02                	add    BYTE PTR [rdx],al
    7ad2:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7ad4:	0c 6e                	or     al,0x6e
    7ad6:	01 00                	add    DWORD PTR [rax],eax
    7ad8:	00 02                	add    BYTE PTR [rdx],al
    7ada:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7adc:	0c 88                	or     al,0x88
    7ade:	01 00                	add    DWORD PTR [rax],eax
    7ae0:	00 02                	add    BYTE PTR [rdx],al
    7ae2:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7ae4:	0c a2                	or     al,0xa2
    7ae6:	01 00                	add    DWORD PTR [rax],eax
    7ae8:	00 02                	add    BYTE PTR [rdx],al
    7aea:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7aec:	0c bc                	or     al,0xbc
    7aee:	01 00                	add    DWORD PTR [rax],eax
    7af0:	00 02                	add    BYTE PTR [rdx],al
    7af2:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7af4:	0c db                	or     al,0xdb
    7af6:	01 00                	add    DWORD PTR [rax],eax
    7af8:	00 02                	add    BYTE PTR [rdx],al
    7afa:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7afc:	0c fa                	or     al,0xfa
    7afe:	01 00                	add    DWORD PTR [rax],eax
    7b00:	00 02                	add    BYTE PTR [rdx],al
    7b02:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7b04:	0c 13                	or     al,0x13
    7b06:	02 00                	add    al,BYTE PTR [rax]
    7b08:	00 02                	add    BYTE PTR [rdx],al
    7b0a:	1b 2c 0c             	sbb    ebp,DWORD PTR [rsp+rcx*1]
    7b0d:	2c 02                	sub    al,0x2
    7b0f:	00 00                	add    BYTE PTR [rax],al
    7b11:	02 1b                	add    bl,BYTE PTR [rbx]
    7b13:	2c 0c                	sub    al,0xc
    7b15:	45 02 00             	add    r8b,BYTE PTR [r8]
    7b18:	00 02                	add    BYTE PTR [rdx],al
    7b1a:	1b 2d 0c 5e 02 00    	sbb    ebp,DWORD PTR [rip+0x25e0c]        # 2d92c <_end+0x27914>
    7b20:	00 02                	add    BYTE PTR [rdx],al
    7b22:	1b 2d 0c 77 02 00    	sbb    ebp,DWORD PTR [rip+0x2770c]        # 2f234 <_end+0x2921c>
    7b28:	00 02                	add    BYTE PTR [rdx],al
    7b2a:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7b2c:	0c 90                	or     al,0x90
    7b2e:	02 00                	add    al,BYTE PTR [rax]
    7b30:	00 02                	add    BYTE PTR [rdx],al
    7b32:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7b34:	0c aa                	or     al,0xaa
    7b36:	02 00                	add    al,BYTE PTR [rax]
    7b38:	00 02                	add    BYTE PTR [rdx],al
    7b3a:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7b3c:	0c c4                	or     al,0xc4
    7b3e:	02 00                	add    al,BYTE PTR [rax]
    7b40:	00 02                	add    BYTE PTR [rdx],al
    7b42:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7b44:	0c df                	or     al,0xdf
    7b46:	02 00                	add    al,BYTE PTR [rax]
    7b48:	00 02                	add    BYTE PTR [rdx],al
    7b4a:	1b 30                	sbb    esi,DWORD PTR [rax]
    7b4c:	0c fa                	or     al,0xfa
    7b4e:	02 00                	add    al,BYTE PTR [rax]
    7b50:	00 02                	add    BYTE PTR [rdx],al
    7b52:	1b 30                	sbb    esi,DWORD PTR [rax]
    7b54:	0c 15                	or     al,0x15
    7b56:	03 00                	add    eax,DWORD PTR [rax]
    7b58:	00 02                	add    BYTE PTR [rdx],al
    7b5a:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7b5c:	0c 30                	or     al,0x30
    7b5e:	03 00                	add    eax,DWORD PTR [rax]
    7b60:	00 02                	add    BYTE PTR [rdx],al
    7b62:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7b64:	0c 49                	or     al,0x49
    7b66:	03 00                	add    eax,DWORD PTR [rax]
    7b68:	00 0d a6 21 00 00    	add    BYTE PTR [rip+0x21a6],cl        # 9d14 <_end+0x3cfc>
    7b6e:	02 1b                	add    bl,BYTE PTR [rbx]
    7b70:	32 0c 62             	xor    cl,BYTE PTR [rdx+riz*2]
    7b73:	03 00                	add    eax,DWORD PTR [rax]
    7b75:	00 02                	add    BYTE PTR [rdx],al
    7b77:	1b 32                	sbb    esi,DWORD PTR [rdx]
    7b79:	0c 82                	or     al,0x82
    7b7b:	03 00                	add    eax,DWORD PTR [rax]
    7b7d:	00 02                	add    BYTE PTR [rdx],al
    7b7f:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7b81:	0c a2                	or     al,0xa2
    7b83:	03 00                	add    eax,DWORD PTR [rax]
    7b85:	00 02                	add    BYTE PTR [rdx],al
    7b87:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7b89:	0c c2                	or     al,0xc2
    7b8b:	03 00                	add    eax,DWORD PTR [rax]
    7b8d:	00 02                	add    BYTE PTR [rdx],al
    7b8f:	1b 34 0c             	sbb    esi,DWORD PTR [rsp+rcx*1]
    7b92:	e2 03                	loop   7b97 <_end+0x1b7f>
    7b94:	00 00                	add    BYTE PTR [rax],al
    7b96:	02 1b                	add    bl,BYTE PTR [rbx]
    7b98:	34 0c                	xor    al,0xc
    7b9a:	fb                   	sti
    7b9b:	03 00                	add    eax,DWORD PTR [rax]
    7b9d:	00 02                	add    BYTE PTR [rdx],al
    7b9f:	1b 35 0c 14 04 00    	sbb    esi,DWORD PTR [rip+0x4140c]        # 48fb1 <_end+0x42f99>
    7ba5:	00 02                	add    BYTE PTR [rdx],al
    7ba7:	1b 35 0c 2f 04 00    	sbb    esi,DWORD PTR [rip+0x42f0c]        # 4aab9 <_end+0x44aa1>
    7bad:	00 0d c5 21 00 00    	add    BYTE PTR [rip+0x21c5],cl        # 9d78 <_end+0x3d60>
    7bb3:	02 1b                	add    bl,BYTE PTR [rbx]
    7bb5:	36 0c 4a             	ss or  al,0x4a
    7bb8:	04 00                	add    al,0x0
    7bba:	00 0d 35 00 00 00    	add    BYTE PTR [rip+0x35],cl        # 7bf5 <_end+0x1bdd>
    7bc0:	02 1b                	add    bl,BYTE PTR [rbx]
    7bc2:	36 0c 6a             	ss or  al,0x6a
    7bc5:	04 00                	add    al,0x0
    7bc7:	00 02                	add    BYTE PTR [rdx],al
    7bc9:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7bcb:	0c 8a                	or     al,0x8a
    7bcd:	04 00                	add    al,0x0
    7bcf:	00 02                	add    BYTE PTR [rdx],al
    7bd1:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7bd3:	0c a8                	or     al,0xa8
    7bd5:	04 00                	add    al,0x0
    7bd7:	00 02                	add    BYTE PTR [rdx],al
    7bd9:	1b 38                	sbb    edi,DWORD PTR [rax]
    7bdb:	0c c6                	or     al,0xc6
    7bdd:	04 00                	add    al,0x0
    7bdf:	00 02                	add    BYTE PTR [rdx],al
    7be1:	1b 38                	sbb    edi,DWORD PTR [rax]
    7be3:	0c e1                	or     al,0xe1
    7be5:	04 00                	add    al,0x0
    7be7:	00 02                	add    BYTE PTR [rdx],al
    7be9:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7beb:	0c fc                	or     al,0xfc
    7bed:	04 00                	add    al,0x0
    7bef:	00 02                	add    BYTE PTR [rdx],al
    7bf1:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7bf3:	0c 16                	or     al,0x16
    7bf5:	05 00 00 02 1b       	add    eax,0x1b020000
    7bfa:	3a 0c 30             	cmp    cl,BYTE PTR [rax+rsi*1]
    7bfd:	05 00 00 02 1b       	add    eax,0x1b020000
    7c02:	3a 0c 4a             	cmp    cl,BYTE PTR [rdx+rcx*2]
    7c05:	05 00 00 02 1b       	add    eax,0x1b020000
    7c0a:	3b 0c 64             	cmp    ecx,DWORD PTR [rsp+riz*2]
    7c0d:	05 00 00 02 1b       	add    eax,0x1b020000
    7c12:	3b 0c 7f             	cmp    ecx,DWORD PTR [rdi+rdi*2]
    7c15:	05 00 00 02 1b       	add    eax,0x1b020000
    7c1a:	3c 0c                	cmp    al,0xc
    7c1c:	99                   	cdq
    7c1d:	05 00 00 02 1b       	add    eax,0x1b020000
    7c22:	3c 0c                	cmp    al,0xc
    7c24:	b9 05 00 00 02       	mov    ecx,0x2000005
    7c29:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    7c2b:	0c d9                	or     al,0xd9
    7c2d:	05 00 00 02 1b       	add    eax,0x1b020000
    7c32:	3f                   	(bad)
    7c33:	0c f4                	or     al,0xf4
    7c35:	05 00 00 02 1b       	add    eax,0x1b020000
    7c3a:	3f                   	(bad)
    7c3b:	0c 0f                	or     al,0xf
    7c3d:	06                   	(bad)
    7c3e:	00 00                	add    BYTE PTR [rax],al
    7c40:	02 1b                	add    bl,BYTE PTR [rbx]
    7c42:	40 0c 2a             	rex or al,0x2a
    7c45:	06                   	(bad)
    7c46:	00 00                	add    BYTE PTR [rax],al
    7c48:	02 1b                	add    bl,BYTE PTR [rbx]
    7c4a:	40 0c 45             	rex or al,0x45
    7c4d:	06                   	(bad)
    7c4e:	00 00                	add    BYTE PTR [rax],al
    7c50:	02 1b                	add    bl,BYTE PTR [rbx]
    7c52:	40 0c 60             	rex or al,0x60
    7c55:	06                   	(bad)
    7c56:	00 00                	add    BYTE PTR [rax],al
    7c58:	02 1b                	add    bl,BYTE PTR [rbx]
    7c5a:	41 0c 7b             	rex.B or al,0x7b
    7c5d:	06                   	(bad)
    7c5e:	00 00                	add    BYTE PTR [rax],al
    7c60:	02 1b                	add    bl,BYTE PTR [rbx]
    7c62:	41 0c 96             	rex.B or al,0x96
    7c65:	06                   	(bad)
    7c66:	00 00                	add    BYTE PTR [rax],al
    7c68:	02 1b                	add    bl,BYTE PTR [rbx]
    7c6a:	41 0c b1             	rex.B or al,0xb1
    7c6d:	06                   	(bad)
    7c6e:	00 00                	add    BYTE PTR [rax],al
    7c70:	02 1b                	add    bl,BYTE PTR [rbx]
    7c72:	42 0c cc             	rex.X or al,0xcc
    7c75:	06                   	(bad)
    7c76:	00 00                	add    BYTE PTR [rax],al
    7c78:	02 1b                	add    bl,BYTE PTR [rbx]
    7c7a:	42 0c e7             	rex.X or al,0xe7
    7c7d:	06                   	(bad)
    7c7e:	00 00                	add    BYTE PTR [rax],al
    7c80:	02 1b                	add    bl,BYTE PTR [rbx]
    7c82:	42 0c 02             	rex.X or al,0x2
    7c85:	07                   	(bad)
    7c86:	00 00                	add    BYTE PTR [rax],al
    7c88:	02 1b                	add    bl,BYTE PTR [rbx]
    7c8a:	43 0c 1d             	rex.XB or al,0x1d
    7c8d:	07                   	(bad)
    7c8e:	00 00                	add    BYTE PTR [rax],al
    7c90:	02 1b                	add    bl,BYTE PTR [rbx]
    7c92:	43 0c 38             	rex.XB or al,0x38
    7c95:	07                   	(bad)
    7c96:	00 00                	add    BYTE PTR [rax],al
    7c98:	02 1b                	add    bl,BYTE PTR [rbx]
    7c9a:	43 0c 53             	rex.XB or al,0x53
    7c9d:	07                   	(bad)
    7c9e:	00 00                	add    BYTE PTR [rax],al
    7ca0:	02 1b                	add    bl,BYTE PTR [rbx]
    7ca2:	44 0c 6e             	rex.R or al,0x6e
    7ca5:	07                   	(bad)
    7ca6:	00 00                	add    BYTE PTR [rax],al
    7ca8:	02 1b                	add    bl,BYTE PTR [rbx]
    7caa:	44 0c 89             	rex.R or al,0x89
    7cad:	07                   	(bad)
    7cae:	00 00                	add    BYTE PTR [rax],al
    7cb0:	02 1b                	add    bl,BYTE PTR [rbx]
    7cb2:	44 0c a4             	rex.R or al,0xa4
    7cb5:	07                   	(bad)
    7cb6:	00 00                	add    BYTE PTR [rax],al
    7cb8:	02 1b                	add    bl,BYTE PTR [rbx]
    7cba:	45 0c bf             	rex.RB or al,0xbf
    7cbd:	07                   	(bad)
    7cbe:	00 00                	add    BYTE PTR [rax],al
    7cc0:	02 1b                	add    bl,BYTE PTR [rbx]
    7cc2:	45 0c df             	rex.RB or al,0xdf
    7cc5:	07                   	(bad)
    7cc6:	00 00                	add    BYTE PTR [rax],al
    7cc8:	02 1b                	add    bl,BYTE PTR [rbx]
    7cca:	45 0c ff             	rex.RB or al,0xff
    7ccd:	07                   	(bad)
    7cce:	00 00                	add    BYTE PTR [rax],al
    7cd0:	02 1b                	add    bl,BYTE PTR [rbx]
    7cd2:	46 0c 1f             	rex.RX or al,0x1f
    7cd5:	08 00                	or     BYTE PTR [rax],al
    7cd7:	00 02                	add    BYTE PTR [rdx],al
    7cd9:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7cdc:	3f                   	(bad)
    7cdd:	08 00                	or     BYTE PTR [rax],al
    7cdf:	00 02                	add    BYTE PTR [rdx],al
    7ce1:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7ce4:	5f                   	pop    rdi
    7ce5:	08 00                	or     BYTE PTR [rax],al
    7ce7:	00 02                	add    BYTE PTR [rdx],al
    7ce9:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7cec:	7f 08                	jg     7cf6 <_end+0x1cde>
    7cee:	00 00                	add    BYTE PTR [rax],al
    7cf0:	02 1b                	add    bl,BYTE PTR [rbx]
    7cf2:	47 0c 9f             	rex.RXB or al,0x9f
    7cf5:	08 00                	or     BYTE PTR [rax],al
    7cf7:	00 02                	add    BYTE PTR [rdx],al
    7cf9:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7cfc:	bf 08 00 00 02       	mov    edi,0x2000008
    7d01:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7d04:	df 08                	fisttp WORD PTR [rax]
    7d06:	00 00                	add    BYTE PTR [rax],al
    7d08:	02 1b                	add    bl,BYTE PTR [rbx]
    7d0a:	48 0c ff             	rex.W or al,0xff
    7d0d:	08 00                	or     BYTE PTR [rax],al
    7d0f:	00 02                	add    BYTE PTR [rdx],al
    7d11:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7d14:	1f                   	(bad)
    7d15:	09 00                	or     DWORD PTR [rax],eax
    7d17:	00 02                	add    BYTE PTR [rdx],al
    7d19:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7d1c:	3f                   	(bad)
    7d1d:	09 00                	or     DWORD PTR [rax],eax
    7d1f:	00 02                	add    BYTE PTR [rdx],al
    7d21:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7d24:	5f                   	pop    rdi
    7d25:	09 00                	or     DWORD PTR [rax],eax
    7d27:	00 02                	add    BYTE PTR [rdx],al
    7d29:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7d2c:	7f 09                	jg     7d37 <_end+0x1d1f>
    7d2e:	00 00                	add    BYTE PTR [rax],al
    7d30:	02 1b                	add    bl,BYTE PTR [rbx]
    7d32:	4a 0c 9f             	rex.WX or al,0x9f
    7d35:	09 00                	or     DWORD PTR [rax],eax
    7d37:	00 02                	add    BYTE PTR [rdx],al
    7d39:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7d3c:	bf 09 00 00 02       	mov    edi,0x2000009
    7d41:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7d44:	df 09                	fisttp WORD PTR [rcx]
    7d46:	00 00                	add    BYTE PTR [rax],al
    7d48:	02 1b                	add    bl,BYTE PTR [rbx]
    7d4a:	4e 0c ff             	rex.WRX or al,0xff
    7d4d:	09 00                	or     DWORD PTR [rax],eax
    7d4f:	00 02                	add    BYTE PTR [rdx],al
    7d51:	1b 4e 0c             	sbb    ecx,DWORD PTR [rsi+0xc]
    7d54:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    7d56:	00 00                	add    BYTE PTR [rax],al
    7d58:	02 1b                	add    bl,BYTE PTR [rbx]
    7d5a:	4f 0c 35             	rex.WRXB or al,0x35
    7d5d:	0a 00                	or     al,BYTE PTR [rax]
    7d5f:	00 02                	add    BYTE PTR [rdx],al
    7d61:	1b 4f 0c             	sbb    ecx,DWORD PTR [rdi+0xc]
    7d64:	50                   	push   rax
    7d65:	0a 00                	or     al,BYTE PTR [rax]
    7d67:	00 02                	add    BYTE PTR [rdx],al
    7d69:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7d6c:	6b 0a 00             	imul   ecx,DWORD PTR [rdx],0x0
    7d6f:	00 02                	add    BYTE PTR [rdx],al
    7d71:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7d74:	86 0a                	xchg   BYTE PTR [rdx],cl
    7d76:	00 00                	add    BYTE PTR [rax],al
    7d78:	02 1b                	add    bl,BYTE PTR [rbx]
    7d7a:	51                   	push   rcx
    7d7b:	0c a1                	or     al,0xa1
    7d7d:	0a 00                	or     al,BYTE PTR [rax]
    7d7f:	00 02                	add    BYTE PTR [rdx],al
    7d81:	1b 51 0c             	sbb    edx,DWORD PTR [rcx+0xc]
    7d84:	bc 0a 00 00 02       	mov    esp,0x200000a
    7d89:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7d8c:	d7                   	xlat   BYTE PTR ds:[rbx]
    7d8d:	0a 00                	or     al,BYTE PTR [rax]
    7d8f:	00 02                	add    BYTE PTR [rdx],al
    7d91:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7d94:	f7 0a 00 00 02 1b    	test   DWORD PTR [rdx],0x1b020000
    7d9a:	53                   	push   rbx
    7d9b:	0c 17                	or     al,0x17
    7d9d:	0b 00                	or     eax,DWORD PTR [rax]
    7d9f:	00 02                	add    BYTE PTR [rdx],al
    7da1:	1b 53 0c             	sbb    edx,DWORD PTR [rbx+0xc]
    7da4:	30 0b                	xor    BYTE PTR [rbx],cl
    7da6:	00 00                	add    BYTE PTR [rax],al
    7da8:	02 1b                	add    bl,BYTE PTR [rbx]
    7daa:	54                   	push   rsp
    7dab:	0c 49                	or     al,0x49
    7dad:	0b 00                	or     eax,DWORD PTR [rax]
    7daf:	00 02                	add    BYTE PTR [rdx],al
    7db1:	1b 54 0c 64          	sbb    edx,DWORD PTR [rsp+rcx*1+0x64]
    7db5:	0b 00                	or     eax,DWORD PTR [rax]
    7db7:	00 02                	add    BYTE PTR [rdx],al
    7db9:	1b 55 0c             	sbb    edx,DWORD PTR [rbp+0xc]
    7dbc:	7f 0b                	jg     7dc9 <_end+0x1db1>
    7dbe:	00 00                	add    BYTE PTR [rax],al
    7dc0:	02 1b                	add    bl,BYTE PTR [rbx]
    7dc2:	55                   	push   rbp
    7dc3:	0c 9a                	or     al,0x9a
    7dc5:	0b 00                	or     eax,DWORD PTR [rax]
    7dc7:	00 02                	add    BYTE PTR [rdx],al
    7dc9:	1b 56 0c             	sbb    edx,DWORD PTR [rsi+0xc]
    7dcc:	b5 0b                	mov    ch,0xb
    7dce:	00 00                	add    BYTE PTR [rax],al
    7dd0:	02 1b                	add    bl,BYTE PTR [rbx]
    7dd2:	56                   	push   rsi
    7dd3:	0c d0                	or     al,0xd0
    7dd5:	0b 00                	or     eax,DWORD PTR [rax]
    7dd7:	00 02                	add    BYTE PTR [rdx],al
    7dd9:	1b 57 0c             	sbb    edx,DWORD PTR [rdi+0xc]
    7ddc:	eb 0b                	jmp    7de9 <_end+0x1dd1>
    7dde:	00 00                	add    BYTE PTR [rax],al
    7de0:	02 1b                	add    bl,BYTE PTR [rbx]
    7de2:	57                   	push   rdi
    7de3:	0c 0b                	or     al,0xb
    7de5:	0c 00                	or     al,0x0
    7de7:	00 02                	add    BYTE PTR [rdx],al
    7de9:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7dec:	2b 0c 00             	sub    ecx,DWORD PTR [rax+rax*1]
    7def:	00 02                	add    BYTE PTR [rdx],al
    7df1:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7df4:	4e 0c 00             	rex.WRX or al,0x0
    7df7:	00 02                	add    BYTE PTR [rdx],al
    7df9:	1b 59 0c             	sbb    ebx,DWORD PTR [rcx+0xc]
    7dfc:	71 0c                	jno    7e0a <_end+0x1df2>
    7dfe:	00 00                	add    BYTE PTR [rax],al
    7e00:	02 1b                	add    bl,BYTE PTR [rbx]
    7e02:	59                   	pop    rcx
    7e03:	0c 91                	or     al,0x91
    7e05:	0c 00                	or     al,0x0
    7e07:	00 02                	add    BYTE PTR [rdx],al
    7e09:	1b 5a 0c             	sbb    ebx,DWORD PTR [rdx+0xc]
    7e0c:	b1 0c                	mov    cl,0xc
    7e0e:	00 00                	add    BYTE PTR [rax],al
    7e10:	02 1b                	add    bl,BYTE PTR [rbx]
    7e12:	5a                   	pop    rdx
    7e13:	0c d1                	or     al,0xd1
    7e15:	0c 00                	or     al,0x0
    7e17:	00 02                	add    BYTE PTR [rdx],al
    7e19:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7e1c:	f1                   	int1
    7e1d:	0c 00                	or     al,0x0
    7e1f:	00 02                	add    BYTE PTR [rdx],al
    7e21:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7e24:	16                   	(bad)
    7e25:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e2a:	5b                   	pop    rbx
    7e2b:	0c 3b                	or     al,0x3b
    7e2d:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e32:	5b                   	pop    rbx
    7e33:	0c 60                	or     al,0x60
    7e35:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e3a:	5b                   	pop    rbx
    7e3b:	0c 80                	or     al,0x80
    7e3d:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e42:	5c                   	pop    rsp
    7e43:	0c a0                	or     al,0xa0
    7e45:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e4a:	5c                   	pop    rsp
    7e4b:	0c bb                	or     al,0xbb
    7e4d:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e52:	5d                   	pop    rbp
    7e53:	0c d6                	or     al,0xd6
    7e55:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e5a:	5d                   	pop    rbp
    7e5b:	0c f1                	or     al,0xf1
    7e5d:	0d 00 00 02 1b       	or     eax,0x1b020000
    7e62:	5e                   	pop    rsi
    7e63:	0c 0c                	or     al,0xc
    7e65:	0e                   	(bad)
    7e66:	00 00                	add    BYTE PTR [rax],al
    7e68:	02 1b                	add    bl,BYTE PTR [rbx]
    7e6a:	5e                   	pop    rsi
    7e6b:	0c 27                	or     al,0x27
    7e6d:	0e                   	(bad)
    7e6e:	00 00                	add    BYTE PTR [rax],al
    7e70:	02 1b                	add    bl,BYTE PTR [rbx]
    7e72:	5f                   	pop    rdi
    7e73:	0c 42                	or     al,0x42
    7e75:	0e                   	(bad)
    7e76:	00 00                	add    BYTE PTR [rax],al
    7e78:	02 1b                	add    bl,BYTE PTR [rbx]
    7e7a:	5f                   	pop    rdi
    7e7b:	0c 5d                	or     al,0x5d
    7e7d:	0e                   	(bad)
    7e7e:	00 00                	add    BYTE PTR [rax],al
    7e80:	02 1b                	add    bl,BYTE PTR [rbx]
    7e82:	60                   	(bad)
    7e83:	0c 78                	or     al,0x78
    7e85:	0e                   	(bad)
    7e86:	00 00                	add    BYTE PTR [rax],al
    7e88:	02 1b                	add    bl,BYTE PTR [rbx]
    7e8a:	60                   	(bad)
    7e8b:	0c 93                	or     al,0x93
    7e8d:	0e                   	(bad)
    7e8e:	00 00                	add    BYTE PTR [rax],al
    7e90:	02 1b                	add    bl,BYTE PTR [rbx]
    7e92:	61                   	(bad)
    7e93:	0c ae                	or     al,0xae
    7e95:	0e                   	(bad)
    7e96:	00 00                	add    BYTE PTR [rax],al
    7e98:	02 1b                	add    bl,BYTE PTR [rbx]
    7e9a:	61                   	(bad)
    7e9b:	0c c9                	or     al,0xc9
    7e9d:	0e                   	(bad)
    7e9e:	00 00                	add    BYTE PTR [rax],al
    7ea0:	02 1b                	add    bl,BYTE PTR [rbx]
    7ea2:	62 0c e4             	(bad)  {k6}
    7ea5:	0e                   	(bad)
    7ea6:	00 00                	add    BYTE PTR [rax],al
    7ea8:	02 1b                	add    bl,BYTE PTR [rbx]
    7eaa:	62 0c ff             	(bad)  {k6}
    7ead:	0e                   	(bad)
    7eae:	00 00                	add    BYTE PTR [rax],al
    7eb0:	02 1b                	add    bl,BYTE PTR [rbx]
    7eb2:	63 0c 1a             	movsxd ecx,DWORD PTR [rdx+rbx*1]
    7eb5:	0f 00 00             	sldt   WORD PTR [rax]
    7eb8:	02 1b                	add    bl,BYTE PTR [rbx]
    7eba:	63 0c 35 0f 00 00 02 	movsxd ecx,DWORD PTR [rsi*1+0x200000f]
    7ec1:	1b 64 0c 50          	sbb    esp,DWORD PTR [rsp+rcx*1+0x50]
    7ec5:	0f 00 00             	sldt   WORD PTR [rax]
    7ec8:	02 1b                	add    bl,BYTE PTR [rbx]
    7eca:	64 0c 6b             	fs or  al,0x6b
    7ecd:	0f 00 00             	sldt   WORD PTR [rax]
    7ed0:	02 1b                	add    bl,BYTE PTR [rbx]
    7ed2:	65 0c 86             	gs or  al,0x86
    7ed5:	0f 00 00             	sldt   WORD PTR [rax]
    7ed8:	02 1b                	add    bl,BYTE PTR [rbx]
    7eda:	65 0c a1             	gs or  al,0xa1
    7edd:	0f 00 00             	sldt   WORD PTR [rax]
    7ee0:	02 1b                	add    bl,BYTE PTR [rbx]
    7ee2:	66 0c bc             	data16 or al,0xbc
    7ee5:	0f 00 00             	sldt   WORD PTR [rax]
    7ee8:	02 1b                	add    bl,BYTE PTR [rbx]
    7eea:	66 0c dc             	data16 or al,0xdc
    7eed:	0f 00 00             	sldt   WORD PTR [rax]
    7ef0:	02 1b                	add    bl,BYTE PTR [rbx]
    7ef2:	67 0c fc             	addr32 or al,0xfc
    7ef5:	0f 00 00             	sldt   WORD PTR [rax]
    7ef8:	02 1b                	add    bl,BYTE PTR [rbx]
    7efa:	67 0c 1c             	addr32 or al,0x1c
    7efd:	10 00                	adc    BYTE PTR [rax],al
    7eff:	00 02                	add    BYTE PTR [rdx],al
    7f01:	1b 68 0c             	sbb    ebp,DWORD PTR [rax+0xc]
    7f04:	3c 10                	cmp    al,0x10
    7f06:	00 00                	add    BYTE PTR [rax],al
    7f08:	02 1b                	add    bl,BYTE PTR [rbx]
    7f0a:	68 0c 5c 10 00       	push   0x105c0c
    7f0f:	00 02                	add    BYTE PTR [rdx],al
    7f11:	1b 69 0c             	sbb    ebp,DWORD PTR [rcx+0xc]
    7f14:	7c 10                	jl     7f26 <_end+0x1f0e>
    7f16:	00 00                	add    BYTE PTR [rax],al
    7f18:	02 1b                	add    bl,BYTE PTR [rbx]
    7f1a:	69 0c a1 10 00 00 02 	imul   ecx,DWORD PTR [rcx+riz*4],0x2000010
    7f21:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7f24:	c6                   	(bad)
    7f25:	10 00                	adc    BYTE PTR [rax],al
    7f27:	00 02                	add    BYTE PTR [rdx],al
    7f29:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    7f2c:	e1 10                	loope  7f3e <_end+0x1f26>
    7f2e:	00 00                	add    BYTE PTR [rax],al
    7f30:	02 1b                	add    bl,BYTE PTR [rbx]
    7f32:	6b 0c fc 10          	imul   ecx,DWORD PTR [rsp+rdi*8],0x10
    7f36:	00 00                	add    BYTE PTR [rax],al
    7f38:	02 1b                	add    bl,BYTE PTR [rbx]
    7f3a:	6b 0c 17 11          	imul   ecx,DWORD PTR [rdi+rdx*1],0x11
    7f3e:	00 00                	add    BYTE PTR [rax],al
    7f40:	02 1b                	add    bl,BYTE PTR [rbx]
    7f42:	6c                   	ins    BYTE PTR es:[rdi],dx
    7f43:	0c 32                	or     al,0x32
    7f45:	11 00                	adc    DWORD PTR [rax],eax
    7f47:	00 02                	add    BYTE PTR [rdx],al
    7f49:	1b 6c 0c 52          	sbb    ebp,DWORD PTR [rsp+rcx*1+0x52]
    7f4d:	11 00                	adc    DWORD PTR [rax],eax
    7f4f:	00 02                	add    BYTE PTR [rdx],al
    7f51:	1b 6d 0c             	sbb    ebp,DWORD PTR [rbp+0xc]
    7f54:	72 11                	jb     7f67 <_end+0x1f4f>
    7f56:	00 00                	add    BYTE PTR [rax],al
    7f58:	02 1b                	add    bl,BYTE PTR [rbx]
    7f5a:	6d                   	ins    DWORD PTR es:[rdi],dx
    7f5b:	0c 92                	or     al,0x92
    7f5d:	11 00                	adc    DWORD PTR [rax],eax
    7f5f:	00 02                	add    BYTE PTR [rdx],al
    7f61:	1b 6e 0c             	sbb    ebp,DWORD PTR [rsi+0xc]
    7f64:	b2 11                	mov    dl,0x11
    7f66:	00 00                	add    BYTE PTR [rax],al
    7f68:	02 1b                	add    bl,BYTE PTR [rbx]
    7f6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7f6b:	0c cd                	or     al,0xcd
    7f6d:	11 00                	adc    DWORD PTR [rax],eax
    7f6f:	00 02                	add    BYTE PTR [rdx],al
    7f71:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7f74:	e8 11 00 00 02       	call   2007f8a <_end+0x2001f72>
    7f79:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    7f7c:	03 12                	add    edx,DWORD PTR [rdx]
    7f7e:	00 00                	add    BYTE PTR [rax],al
    7f80:	7a 4e                	jp     7fd0 <_end+0x1fb8>
    7f82:	34 00                	xor    al,0x0
    7f84:	00 18                	add    BYTE PTR [rax],bl
    7f86:	1c 00                	sbb    al,0x0
    7f88:	06                   	(bad)
    7f89:	2a 00                	sub    al,BYTE PTR [rax]
    7f8b:	00 36                	add    BYTE PTR [rsi],dh
    7f8d:	30 17                	xor    BYTE PTR [rdi],dl
    7f8f:	00 00                	add    BYTE PTR [rax],al
    7f91:	e3 20                	jrcxz  7fb3 <_end+0x1f9b>
    7f93:	00 00                	add    BYTE PTR [rax],al
    7f95:	00 36                	add    BYTE PTR [rsi],dh
    7f97:	6d                   	ins    DWORD PTR es:[rdi],dx
    7f98:	18 00                	sbb    BYTE PTR [rax],al
    7f9a:	00 e3                	add    bl,ah
    7f9c:	20 00                	and    BYTE PTR [rax],al
    7f9e:	00 04 36             	add    BYTE PTR [rsi+rsi*1],al
    7fa1:	bd 23 00 00 d4       	mov    ebp,0xd4000023
    7fa6:	22 00                	and    al,BYTE PTR [rax]
    7fa8:	00 08                	add    BYTE PTR [rax],cl
    7faa:	36 f8                	ss clc
    7fac:	1d 00 00 d4 22       	sbb    eax,0x22d40000
    7fb1:	00 00                	add    BYTE PTR [rax],al
    7fb3:	10 00                	adc    BYTE PTR [rax],al
    7fb5:	35 08 1d 0e 01       	xor    eax,0x10e1d08
    7fba:	9d                   	popf
    7fbb:	2f                   	(bad)
    7fbc:	00 00                	add    BYTE PTR [rax],al
    7fbe:	4e 2a 00             	rex.WRX sub r8b,BYTE PTR [rax]
    7fc1:	00 7b 04             	add    BYTE PTR [rbx+0x4],bh
    7fc4:	1d 11 03 33 2a       	sbb    eax,0x2a330311
    7fc9:	00 00                	add    BYTE PTR [rax],al
    7fcb:	59                   	pop    rcx
    7fcc:	6b 12 00             	imul   edx,DWORD PTR [rdx],0x0
    7fcf:	00 12                	add    BYTE PTR [rdx],dl
    7fd1:	13 e3                	adc    esp,ebx
    7fd3:	20 00                	and    BYTE PTR [rax],al
    7fd5:	00 59 99             	add    BYTE PTR [rcx-0x67],bl
    7fd8:	26 00 00             	es add BYTE PTR [rax],al
    7fdb:	13 0a                	adc    ecx,DWORD PTR [rdx]
    7fdd:	52                   	push   rdx
    7fde:	24 00                	and    al,0x0
    7fe0:	00 00                	add    BYTE PTR [rax],al
    7fe2:	06                   	(bad)
    7fe3:	f2 24 00             	repnz and al,0x0
    7fe6:	00 1d 0f 07 a6 21    	add    BYTE PTR [rip+0x21a6070f],bl        # 21a686fb <_end+0x21a626e3>
    7fec:	00 00                	add    BYTE PTR [rax],al
    7fee:	00 06                	add    BYTE PTR [rsi],al
    7ff0:	53                   	push   rbx
    7ff1:	0c 00                	or     al,0x0
    7ff3:	00 1d 14 05 13 2a    	add    BYTE PTR [rip+0x2a130514],bl        # 2a13850d <_end+0x2a1324f5>
    7ff9:	00 00                	add    BYTE PTR [rax],al
    7ffb:	04 00                	add    al,0x0
    7ffd:	08 9f 2f 00 00 1d    	or     BYTE PTR [rdi+0x1d00002f],bl
    8003:	15 03 06 2a 00       	adc    eax,0x2a0603
    8008:	00 1b                	add    BYTE PTR [rbx],bl
    800a:	b7 19                	mov    bh,0x19
    800c:	00 00                	add    BYTE PTR [rax],al
    800e:	10 1e                	adc    BYTE PTR [rsi],bl
    8010:	0a 10                	or     dl,BYTE PTR [rax]
    8012:	82                   	(bad)
    8013:	2a 00                	sub    al,BYTE PTR [rax]
    8015:	00 06                	add    BYTE PTR [rsi],al
    8017:	af                   	scas   eax,DWORD PTR es:[rdi]
    8018:	10 00                	adc    BYTE PTR [rax],al
    801a:	00 1e                	add    BYTE PTR [rsi],bl
    801c:	0c 0b                	or     al,0xb
    801e:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    801f:	22 00                	and    al,BYTE PTR [rax]
    8021:	00 00                	add    BYTE PTR [rax],al
    8023:	06                   	(bad)
    8024:	45                   	rex.RB
    8025:	2e 00 00             	cs add BYTE PTR [rax],al
    8028:	1e                   	(bad)
    8029:	0d 0f 4e 2a 00       	or     eax,0x2a4e0f
    802e:	00 08                	add    BYTE PTR [rax],cl
    8030:	00 08                	add    BYTE PTR [rax],cl
    8032:	cc                   	int3
    8033:	29 00                	sub    DWORD PTR [rax],eax
    8035:	00 1e                	add    BYTE PTR [rsi],bl
    8037:	0e                   	(bad)
    8038:	03 5a 2a             	add    ebx,DWORD PTR [rdx+0x2a]
    803b:	00 00                	add    BYTE PTR [rax],al
    803d:	08 17                	or     BYTE PTR [rdi],dl
    803f:	2a 00                	sub    al,BYTE PTR [rax]
    8041:	00 1f                	add    BYTE PTR [rdi],bl
    8043:	05 19 9a 2a 00       	add    eax,0x2a9a19
    8048:	00 1b                	add    BYTE PTR [rbx],bl
    804a:	7d 14                	jge    8060 <_end+0x2048>
    804c:	00 00                	add    BYTE PTR [rax],al
    804e:	d8 20                	fsub   DWORD PTR [rax]
    8050:	31 08                	xor    DWORD PTR [rax],ecx
    8052:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    8055:	00 06                	add    BYTE PTR [rsi],al
    8057:	d6                   	(bad)
    8058:	23 00                	and    eax,DWORD PTR [rax]
    805a:	00 20                	add    BYTE PTR [rax],ah
    805c:	33 07                	xor    eax,DWORD PTR [rdi]
    805e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    805f:	21 00                	and    DWORD PTR [rax],eax
    8061:	00 00                	add    BYTE PTR [rax],al
    8063:	06                   	(bad)
    8064:	1c 18                	sbb    al,0x18
    8066:	00 00                	add    BYTE PTR [rax],al
    8068:	20 36                	and    BYTE PTR [rsi],dh
    806a:	09 e2                	or     edx,esp
    806c:	22 00                	and    al,BYTE PTR [rax]
    806e:	00 08                	add    BYTE PTR [rax],cl
    8070:	06                   	(bad)
    8071:	ac                   	lods   al,BYTE PTR ds:[rsi]
    8072:	30 00                	xor    BYTE PTR [rax],al
    8074:	00 20                	add    BYTE PTR [rax],ah
    8076:	37                   	(bad)
    8077:	09 e2                	or     edx,esp
    8079:	22 00                	and    al,BYTE PTR [rax]
    807b:	00 10                	add    BYTE PTR [rax],dl
    807d:	06                   	(bad)
    807e:	af                   	scas   eax,DWORD PTR es:[rdi]
    807f:	1d 00 00 20 38       	sbb    eax,0x38200000
    8084:	09 e2                	or     edx,esp
    8086:	22 00                	and    al,BYTE PTR [rax]
    8088:	00 18                	add    BYTE PTR [rax],bl
    808a:	06                   	(bad)
    808b:	14 0f                	adc    al,0xf
    808d:	00 00                	add    BYTE PTR [rax],al
    808f:	20 39                	and    BYTE PTR [rcx],bh
    8091:	09 e2                	or     edx,esp
    8093:	22 00                	and    al,BYTE PTR [rax]
    8095:	00 20                	add    BYTE PTR [rax],ah
    8097:	06                   	(bad)
    8098:	76 32                	jbe    80cc <_end+0x20b4>
    809a:	00 00                	add    BYTE PTR [rax],al
    809c:	20 3a                	and    BYTE PTR [rdx],bh
    809e:	09 e2                	or     edx,esp
    80a0:	22 00                	and    al,BYTE PTR [rax]
    80a2:	00 28                	add    BYTE PTR [rax],ch
    80a4:	06                   	(bad)
    80a5:	2e 22 00             	cs and al,BYTE PTR [rax]
    80a8:	00 20                	add    BYTE PTR [rax],ah
    80aa:	3b 09                	cmp    ecx,DWORD PTR [rcx]
    80ac:	e2 22                	loop   80d0 <_end+0x20b8>
    80ae:	00 00                	add    BYTE PTR [rax],al
    80b0:	30 06                	xor    BYTE PTR [rsi],al
    80b2:	06                   	(bad)
    80b3:	23 00                	and    eax,DWORD PTR [rax]
    80b5:	00 20                	add    BYTE PTR [rax],ah
    80b7:	3c 09                	cmp    al,0x9
    80b9:	e2 22                	loop   80dd <_end+0x20c5>
    80bb:	00 00                	add    BYTE PTR [rax],al
    80bd:	38 06                	cmp    BYTE PTR [rsi],al
    80bf:	42 10 00             	rex.X adc BYTE PTR [rax],al
    80c2:	00 20                	add    BYTE PTR [rax],ah
    80c4:	3d 09 e2 22 00       	cmp    eax,0x22e209
    80c9:	00 40 06             	add    BYTE PTR [rax+0x6],al
    80cc:	4e 10 00             	rex.WRX adc BYTE PTR [rax],r8b
    80cf:	00 20                	add    BYTE PTR [rax],ah
    80d1:	40 09 e2             	rex or edx,esp
    80d4:	22 00                	and    al,BYTE PTR [rax]
    80d6:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    80d9:	34 2a                	xor    al,0x2a
    80db:	00 00                	add    BYTE PTR [rax],al
    80dd:	20 41 09             	and    BYTE PTR [rcx+0x9],al
    80e0:	e2 22                	loop   8104 <_end+0x20ec>
    80e2:	00 00                	add    BYTE PTR [rax],al
    80e4:	50                   	push   rax
    80e5:	06                   	(bad)
    80e6:	a9 0d 00 00 20       	test   eax,0x2000000d
    80eb:	42 09 e2             	rex.X or edx,esp
    80ee:	22 00                	and    al,BYTE PTR [rax]
    80f0:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    80f3:	70 19                	jo     810e <_end+0x20f6>
    80f5:	00 00                	add    BYTE PTR [rax],al
    80f7:	20 44 16 3a          	and    BYTE PTR [rsi+rdx*1+0x3a],al
    80fb:	2c 00                	sub    al,0x0
    80fd:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    8100:	b5 10                	mov    ch,0x10
    8102:	00 00                	add    BYTE PTR [rax],al
    8104:	20 46 14             	and    BYTE PTR [rsi+0x14],al
    8107:	3f                   	(bad)
    8108:	2c 00                	sub    al,0x0
    810a:	00 68 06             	add    BYTE PTR [rax+0x6],ch
    810d:	04 31                	add    al,0x31
    810f:	00 00                	add    BYTE PTR [rax],al
    8111:	20 48 07             	and    BYTE PTR [rax+0x7],cl
    8114:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8115:	21 00                	and    DWORD PTR [rax],eax
    8117:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    811a:	56                   	push   rsi
    811b:	1d 00 00 20 49       	sbb    eax,0x49200000
    8120:	07                   	(bad)
    8121:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8122:	21 00                	and    DWORD PTR [rax],eax
    8124:	00 74 06 b5          	add    BYTE PTR [rsi+rax*1-0x4b],dh
    8128:	1f                   	(bad)
    8129:	00 00                	add    BYTE PTR [rax],al
    812b:	20 4a 0b             	and    BYTE PTR [rdx+0xb],cl
    812e:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    812f:	22 00                	and    al,BYTE PTR [rax]
    8131:	00 78 06             	add    BYTE PTR [rax+0x6],bh
    8134:	ee                   	out    dx,al
    8135:	10 00                	adc    BYTE PTR [rax],al
    8137:	00 20                	add    BYTE PTR [rax],ah
    8139:	4d 12 83 21 00 00 80 	rex.WRB adc r8b,BYTE PTR [r11-0x7fffffdf]
    8140:	06                   	(bad)
    8141:	e2 25                	loop   8168 <_end+0x2150>
    8143:	00 00                	add    BYTE PTR [rax],al
    8145:	20 4e 0f             	and    BYTE PTR [rsi+0xf],cl
    8148:	98                   	cwde
    8149:	21 00                	and    DWORD PTR [rax],eax
    814b:	00 82 06 4e 2a 00    	add    BYTE PTR [rdx+0x2a4e06],al
    8151:	00 20                	add    BYTE PTR [rax],ah
    8153:	4f 08 44 2c 00       	rex.WRXB or BYTE PTR [r12+r13*1+0x0],r8b
    8158:	00 83 06 43 0f 00    	add    BYTE PTR [rbx+0xf4306],al
    815e:	00 20                	add    BYTE PTR [rax],ah
    8160:	51                   	push   rcx
    8161:	0f 54 2c 00          	andps  xmm5,XMMWORD PTR [rax+rax*1]
    8165:	00 88 06 b9 1f 00    	add    BYTE PTR [rax+0x1fb906],cl
    816b:	00 20                	add    BYTE PTR [rax],ah
    816d:	59                   	pop    rcx
    816e:	0d b0 22 00 00       	or     eax,0x22b0
    8173:	90                   	nop
    8174:	06                   	(bad)
    8175:	f7 27                	mul    DWORD PTR [rdi]
    8177:	00 00                	add    BYTE PTR [rax],al
    8179:	20 5b 17             	and    BYTE PTR [rbx+0x17],bl
    817c:	5e                   	pop    rsi
    817d:	2c 00                	sub    al,0x0
    817f:	00 98 06 cb 14 00    	add    BYTE PTR [rax+0x14cb06],bl
    8185:	00 20                	add    BYTE PTR [rax],ah
    8187:	5c                   	pop    rsp
    8188:	19 68 2c             	sbb    DWORD PTR [rax+0x2c],ebp
    818b:	00 00                	add    BYTE PTR [rax],al
    818d:	a0 06 72 21 00 00 20 	movabs al,ds:0x145d200000217206
    8194:	5d 14 
    8196:	3f                   	(bad)
    8197:	2c 00                	sub    al,0x0
    8199:	00 a8 06 d8 28 00    	add    BYTE PTR [rax+0x28d806],ch
    819f:	00 20                	add    BYTE PTR [rax],ah
    81a1:	5e                   	pop    rsi
    81a2:	09 d4                	or     esp,edx
    81a4:	22 00                	and    al,BYTE PTR [rax]
    81a6:	00 b0 06 42 23 00    	add    BYTE PTR [rax+0x234206],dh
    81ac:	00 20                	add    BYTE PTR [rax],ah
    81ae:	5f                   	pop    rdi
    81af:	0a 2e                	or     ch,BYTE PTR [rsi]
    81b1:	23 00                	and    eax,DWORD PTR [rax]
    81b3:	00 b8 06 52 0a 00    	add    BYTE PTR [rax+0xa5206],bh
    81b9:	00 20                	add    BYTE PTR [rax],ah
    81bb:	60                   	(bad)
    81bc:	07                   	(bad)
    81bd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    81be:	21 00                	and    DWORD PTR [rax],eax
    81c0:	00 c0                	add    al,al
    81c2:	06                   	(bad)
    81c3:	44 1e                	rex.R (bad)
    81c5:	00 00                	add    BYTE PTR [rax],al
    81c7:	20 62 08             	and    BYTE PTR [rdx+0x8],ah
    81ca:	6d                   	ins    DWORD PTR es:[rdi],dx
    81cb:	2c 00                	sub    al,0x0
    81cd:	00 c4                	add    ah,al
    81cf:	00 08                	add    BYTE PTR [rax],cl
    81d1:	81 14 00 00 21 07 19 	adc    DWORD PTR [rax+rax*1],0x19072100
    81d8:	9a                   	(bad)
    81d9:	2a 00                	sub    al,BYTE PTR [rax]
    81db:	00 7c 53 17          	add    BYTE PTR [rbx+rdx*2+0x17],bh
    81df:	00 00                	add    BYTE PTR [rax],al
    81e1:	20 2b                	and    BYTE PTR [rbx],ch
    81e3:	0e                   	(bad)
    81e4:	47 31 13             	rex.RXB xor DWORD PTR [r11],r10d
    81e7:	00 00                	add    BYTE PTR [rax],al
    81e9:	0d 35 2c 00 00       	or     eax,0x2c35
    81ee:	0d 9a 2a 00 00       	or     eax,0x2a9a
    81f3:	25 e7 22 00 00       	and    eax,0x22e7
    81f8:	54                   	push   rsp
    81f9:	2c 00                	sub    al,0x0
    81fb:	00 26                	add    BYTE PTR [rsi],ah
    81fd:	8a 21                	mov    ah,BYTE PTR [rcx]
    81ff:	00 00                	add    BYTE PTR [rax],al
    8201:	00 00                	add    BYTE PTR [rax],al
    8203:	0d 2d 2c 00 00       	or     eax,0x2c2d
    8208:	47 f4                	rex.RXB hlt
    820a:	27                   	(bad)
    820b:	00 00                	add    BYTE PTR [rax],al
    820d:	0d 59 2c 00 00       	or     eax,0x2c59
    8212:	47 c8 14 00 00       	rex.RXB enter 0x14,0x0
    8217:	0d 63 2c 00 00       	or     eax,0x2c63
    821c:	25 e7 22 00 00       	and    eax,0x22e7
    8221:	7d 2c                	jge    824f <_end+0x2237>
    8223:	00 00                	add    BYTE PTR [rax],al
    8225:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    8228:	00 00                	add    BYTE PTR [rax],al
    822a:	13 00                	adc    eax,DWORD PTR [rax]
    822c:	08 ba 19 00 00 22    	or     BYTE PTR [rdx+0x22000019],bh
    8232:	55                   	push   rbp
    8233:	12 82 2a 00 00 13    	adc    al,BYTE PTR [rdx+0x1300002a]
    8239:	7d 2c                	jge    8267 <_end+0x224f>
    823b:	00 00                	add    BYTE PTR [rax],al
    823d:	0d 21 2c 00 00       	or     eax,0x2c21
    8242:	57                   	push   rdi
    8243:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    8246:	00 08                	add    BYTE PTR [rax],cl
    8248:	cb                   	retf
    8249:	11 00                	adc    DWORD PTR [rax],eax
    824b:	00 23                	add    BYTE PTR [rbx],ah
    824d:	18 13                	sbb    BYTE PTR [rbx],dl
    824f:	d8 21                	fsub   DWORD PTR [rcx]
    8251:	00 00                	add    BYTE PTR [rax],al
    8253:	08 60 17             	or     BYTE PTR [rax+0x17],ah
    8256:	00 00                	add    BYTE PTR [rax],al
    8258:	23 19                	and    ebx,DWORD PTR [rcx]
    825a:	14 f0                	adc    al,0xf0
    825c:	21 00                	and    DWORD PTR [rax],eax
    825e:	00 08                	add    BYTE PTR [rax],cl
    8260:	ab                   	stos   DWORD PTR es:[rdi],eax
    8261:	00 00                	add    BYTE PTR [rax],al
    8263:	00 23                	add    BYTE PTR [rbx],ah
    8265:	1a 14 08             	sbb    dl,BYTE PTR [rax+rcx*1]
    8268:	22 00                	and    al,BYTE PTR [rax]
    826a:	00 13                	add    BYTE PTR [rbx],dl
    826c:	b0 2c                	mov    al,0x2c
    826e:	00 00                	add    BYTE PTR [rax],al
    8270:	08 98 08 00 00 23    	or     BYTE PTR [rax+0x23000008],bl
    8276:	1b 14 20             	sbb    edx,DWORD PTR [rax+riz*1]
    8279:	22 00                	and    al,BYTE PTR [rax]
    827b:	00 08                	add    BYTE PTR [rax],cl
    827d:	fc                   	cld
    827e:	24 00                	and    al,0x0
    8280:	00 24 19             	add    BYTE PTR [rcx+rbx*1],ah
    8283:	18 2c 22             	sbb    BYTE PTR [rdx+riz*1],ch
    8286:	00 00                	add    BYTE PTR [rax],al
    8288:	08 ca                	or     dl,cl
    828a:	28 00                	sub    BYTE PTR [rax],al
    828c:	00 24 1a             	add    BYTE PTR [rdx+rbx*1],ah
    828f:	19 44 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],eax
    8293:	00 08                	add    BYTE PTR [rax],cl
    8295:	f0 31 00             	lock xor DWORD PTR [rax],eax
    8298:	00 24 1b             	add    BYTE PTR [rbx+rbx*1],ah
    829b:	19 5c 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],ebx
    829f:	00 08                	add    BYTE PTR [rax],cl
    82a1:	bc 2e 00 00 24       	mov    esp,0x2400002e
    82a6:	1c 19                	sbb    al,0x19
    82a8:	74 22                	je     82cc <_end+0x22b4>
    82aa:	00 00                	add    BYTE PTR [rax],al
    82ac:	08 9b 0d 00 00 24    	or     BYTE PTR [rbx+0x2400000d],bl
    82b2:	1f                   	(bad)
    82b3:	19 38                	sbb    DWORD PTR [rax],edi
    82b5:	22 00                	and    al,BYTE PTR [rax]
    82b7:	00 08                	add    BYTE PTR [rax],cl
    82b9:	42 15 00 00 24 20    	rex.X adc eax,0x20240000
    82bf:	1a 50 22             	sbb    dl,BYTE PTR [rax+0x22]
    82c2:	00 00                	add    BYTE PTR [rax],al
    82c4:	08 8a 1d 00 00 24    	or     BYTE PTR [rdx+0x2400001d],cl
    82ca:	21 1a                	and    DWORD PTR [rdx],ebx
    82cc:	68 22 00 00 08       	push   0x8000022
    82d1:	c3                   	ret
    82d2:	19 00                	sbb    DWORD PTR [rax],eax
    82d4:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    82d7:	1a 80 22 00 00 08    	sbb    al,BYTE PTR [rax+0x8000022]
    82dd:	b7 2d                	mov    bh,0x2d
    82df:	00 00                	add    BYTE PTR [rax],al
    82e1:	25 2f 16 98 21       	and    eax,0x2198162f
    82e6:	00 00                	add    BYTE PTR [rax],al
    82e8:	08 40 31             	or     BYTE PTR [rax+0x31],al
    82eb:	00 00                	add    BYTE PTR [rax],al
    82ed:	25 31 13 b2 21       	and    eax,0x21b21331
    82f2:	00 00                	add    BYTE PTR [rax],al
    82f4:	08 fb                	or     bl,bh
    82f6:	10 00                	adc    BYTE PTR [rax],al
    82f8:	00 25 32 13 b2 21    	add    BYTE PTR [rip+0x21b21332],ah        # 21b29630 <_end+0x21b23618>
    82fe:	00 00                	add    BYTE PTR [rax],al
    8300:	08 8c 0d 00 00 25 33 	or     BYTE PTR [rbp+rcx*1+0x33250000],cl
    8307:	13 b2 21 00 00 08    	adc    esi,DWORD PTR [rdx+0x8000021]
    830d:	b6 2d                	mov    dh,0x2d
    830f:	00 00                	add    BYTE PTR [rax],al
    8311:	25 3c 18 7c 21       	and    eax,0x217c183c
    8316:	00 00                	add    BYTE PTR [rax],al
    8318:	08 3f                	or     BYTE PTR [rdi],bh
    831a:	31 00                	xor    DWORD PTR [rax],eax
    831c:	00 25 3e 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3e],ah        # 218a9e60 <_end+0x218a3e48>
    8322:	00 00                	add    BYTE PTR [rax],al
    8324:	08 fa                	or     dl,bh
    8326:	10 00                	adc    BYTE PTR [rax],al
    8328:	00 25 3f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3f],ah        # 218a9e6d <_end+0x218a3e55>
    832e:	00 00                	add    BYTE PTR [rax],al
    8330:	08 8b 0d 00 00 25    	or     BYTE PTR [rbx+0x2500000d],cl
    8336:	40 1b 8a 21 00 00 08 	rex sbb ecx,DWORD PTR [rdx+0x8000021]
    833d:	d6                   	(bad)
    833e:	1e                   	(bad)
    833f:	00 00                	add    BYTE PTR [rax],al
    8341:	25 4c 13 b2 21       	and    eax,0x21b2134c
    8346:	00 00                	add    BYTE PTR [rax],al
    8348:	08 d5                	or     ch,dl
    834a:	1e                   	(bad)
    834b:	00 00                	add    BYTE PTR [rax],al
    834d:	25 4f 1b 8a 21       	and    eax,0x218a1b4f
    8352:	00 00                	add    BYTE PTR [rax],al
    8354:	08 fd                	or     ch,bh
    8356:	22 00                	and    al,BYTE PTR [rax]
    8358:	00 25 5a 15 8c 22    	add    BYTE PTR [rip+0x228c155a],ah        # 228c98b8 <_end+0x228c38a0>
    835e:	00 00                	add    BYTE PTR [rax],al
    8360:	13 a5 2d 00 00 08    	adc    esp,DWORD PTR [rbp+0x800002d]
    8366:	16                   	(bad)
    8367:	2f                   	(bad)
    8368:	00 00                	add    BYTE PTR [rax],al
    836a:	25 5b 16 98 22       	and    eax,0x2298165b
    836f:	00 00                	add    BYTE PTR [rax],al
    8371:	0e                   	(bad)
    8372:	6d                   	ins    DWORD PTR es:[rdi],dx
    8373:	00 00                	add    BYTE PTR [rax],al
    8375:	00 16                	add    BYTE PTR [rsi],dl
    8377:	de 02                	fiadd  WORD PTR [rdx]
    8379:	0c a6                	or     al,0xa6
    837b:	21 00                	and    DWORD PTR [rax],eax
    837d:	00 d9                	add    cl,bl
    837f:	2d 00 00 01 d9       	sub    eax,0xd9010000
    8384:	2d 00 00 00 0d       	sub    eax,0xd000000
    8389:	de 2d 00 00 7d 04    	fisubr WORD PTR [rip+0x47d0000]        # 47d838f <_end+0x47d2377>
    838f:	33 00                	xor    eax,DWORD PTR [rax]
    8391:	00 00                	add    BYTE PTR [rax],al
    8393:	16                   	(bad)
    8394:	e3 02                	jrcxz  8398 <_end+0x2380>
    8396:	12 33                	adc    dh,BYTE PTR [rbx]
    8398:	00 00                	add    BYTE PTR [rax],al
    839a:	00 a6 21 00 00 fa    	add    BYTE PTR [rsi-0x5ffffdf],ah
    83a0:	2d 00 00 01 d9       	sub    eax,0xd9010000
    83a5:	2d 00 00 00 0c       	sub    eax,0xc000000
    83aa:	cd 01                	int    0x1
    83ac:	00 00                	add    BYTE PTR [rax],al
    83ae:	26 19 01             	es sbb DWORD PTR [rcx],eax
    83b1:	2e 00 00             	cs add BYTE PTR [rax],al
    83b4:	00 10                	add    BYTE PTR [rax],dl
    83b6:	2e 00 00             	cs add BYTE PTR [rax],al
    83b9:	01 d3                	add    ebx,edx
    83bb:	23 00                	and    eax,DWORD PTR [rax]
    83bd:	00 00                	add    BYTE PTR [rax],al
    83bf:	0e                   	(bad)
    83c0:	d2 01                	rol    BYTE PTR [rcx],cl
    83c2:	00 00                	add    BYTE PTR [rax],al
    83c4:	16                   	(bad)
    83c5:	e1 01                	loope  83c8 <_end+0x23b0>
    83c7:	01 a6 21 00 00 27    	add    DWORD PTR [rsi+0x27000021],esp
    83cd:	2e 00 00             	cs add BYTE PTR [rax],al
    83d0:	01 d3                	add    ebx,edx
    83d2:	23 00                	and    eax,DWORD PTR [rax]
    83d4:	00 00                	add    BYTE PTR [rax],al
    83d6:	0e                   	(bad)
    83d7:	dc 01                	fadd   QWORD PTR [rcx]
    83d9:	00 00                	add    BYTE PTR [rax],al
    83db:	16                   	(bad)
    83dc:	e6 01                	out    0x1,al
    83de:	01 b2 21 00 00 3e    	add    DWORD PTR [rdx+0x3e000021],esi
    83e4:	2e 00 00             	cs add BYTE PTR [rax],al
    83e7:	01 d3                	add    ebx,edx
    83e9:	23 00                	and    eax,DWORD PTR [rax]
    83eb:	00 00                	add    BYTE PTR [rax],al
    83ed:	0c 65                	or     al,0x65
    83ef:	00 00                	add    BYTE PTR [rax],al
    83f1:	00 27                	add    BYTE PTR [rdi],ah
    83f3:	14 01                	adc    al,0x1
    83f5:	d4                   	(bad)
    83f6:	22 00                	and    al,BYTE PTR [rax]
    83f8:	00 68 2e             	add    BYTE PTR [rax+0x2e],ch
    83fb:	00 00                	add    BYTE PTR [rax],al
    83fd:	01 88 24 00 00 01    	add    DWORD PTR [rax+0x1000024],ecx
    8403:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    8406:	00 01                	add    BYTE PTR [rcx],al
    8408:	2e 23 00             	cs and eax,DWORD PTR [rax]
    840b:	00 01                	add    BYTE PTR [rcx],al
    840d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8410:	00 01                	add    BYTE PTR [rcx],al
    8412:	62 24 00             	(bad)
    8415:	00 00                	add    BYTE PTR [rax],al
    8417:	7e 64                	jle    847d <_end+0x2465>
    8419:	69 76 00 16 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e016
    8420:	61                   	(bad)
    8421:	23 00                	and    eax,DWORD PTR [rax]
    8423:	00 84 2e 00 00 01 a6 	add    BYTE PTR [rsi+rbp*1-0x59ff0000],al
    842a:	21 00                	and    DWORD PTR [rax],eax
    842c:	00 01                	add    BYTE PTR [rcx],al
    842e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    842f:	21 00                	and    DWORD PTR [rax],eax
    8431:	00 00                	add    BYTE PTR [rax],al
    8433:	0e                   	(bad)
    8434:	bd 00 00 00 16       	mov    ebp,0x16000000
    8439:	05 03 0e e2 22       	add    eax,0x22e20e03
    843e:	00 00                	add    BYTE PTR [rax],al
    8440:	9b                   	fwait
    8441:	2e 00 00             	cs add BYTE PTR [rax],al
    8444:	01 d3                	add    ebx,edx
    8446:	23 00                	and    eax,DWORD PTR [rax]
    8448:	00 00                	add    BYTE PTR [rax],al
    844a:	0e                   	(bad)
    844b:	c3                   	ret
    844c:	02 00                	add    al,BYTE PTR [rax]
    844e:	00 16                	add    BYTE PTR [rsi],dl
    8450:	e2 03                	loop   8455 <_end+0x243d>
    8452:	0f 94 23             	sete   BYTE PTR [rbx]
    8455:	00 00                	add    BYTE PTR [rax],al
    8457:	b7 2e                	mov    bh,0x2e
    8459:	00 00                	add    BYTE PTR [rax],al
    845b:	01 b2 21 00 00 01    	add    DWORD PTR [rdx+0x1000021],esi
    8461:	b2 21                	mov    dl,0x21
    8463:	00 00                	add    BYTE PTR [rax],al
    8465:	00 0e                	add    BYTE PTR [rsi],cl
    8467:	33 02                	xor    eax,DWORD PTR [rdx]
    8469:	00 00                	add    BYTE PTR [rax],al
    846b:	16                   	(bad)
    846c:	26 04 0c             	es add al,0xc
    846f:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8470:	21 00                	and    DWORD PTR [rax],eax
    8472:	00 d3                	add    bl,dl
    8474:	2e 00 00             	cs add BYTE PTR [rax],al
    8477:	01 d3                	add    ebx,edx
    8479:	23 00                	and    eax,DWORD PTR [rax]
    847b:	00 01                	add    BYTE PTR [rcx],al
    847d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8480:	00 00                	add    BYTE PTR [rax],al
    8482:	0c 39                	or     al,0x39
    8484:	02 00                	add    al,BYTE PTR [rax]
    8486:	00 28                	add    BYTE PTR [rax],ch
    8488:	75 01                	jne    848b <_end+0x2473>
    848a:	2e 23 00             	cs and eax,DWORD PTR [rax]
    848d:	00 f3                	add    bl,dh
    848f:	2e 00 00             	cs add BYTE PTR [rax],al
    8492:	01 f3                	add    ebx,esi
    8494:	2e 00 00             	cs add BYTE PTR [rax],al
    8497:	01 d3                	add    ebx,edx
    8499:	23 00                	and    eax,DWORD PTR [rax]
    849b:	00 01                	add    BYTE PTR [rcx],al
    849d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    84a0:	00 00                	add    BYTE PTR [rax],al
    84a2:	0d 9c 24 00 00       	or     eax,0x249c
    84a7:	0e                   	(bad)
    84a8:	d9 00                	fld    DWORD PTR [rax]
    84aa:	00 00                	add    BYTE PTR [rax],al
    84ac:	16                   	(bad)
    84ad:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    84b0:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    84b1:	21 00                	and    DWORD PTR [rax],eax
    84b3:	00 19                	add    BYTE PTR [rcx],bl
    84b5:	2f                   	(bad)
    84b6:	00 00                	add    BYTE PTR [rax],al
    84b8:	01 f3                	add    ebx,esi
    84ba:	2e 00 00             	cs add BYTE PTR [rax],al
    84bd:	01 d3                	add    ebx,edx
    84bf:	23 00                	and    eax,DWORD PTR [rax]
    84c1:	00 01                	add    BYTE PTR [rcx],al
    84c3:	2e 23 00             	cs and eax,DWORD PTR [rax]
    84c6:	00 00                	add    BYTE PTR [rax],al
    84c8:	28 25 00 00 00 16    	sub    BYTE PTR [rip+0x16000000],ah        # 160084ce <_end+0x160024b6>
    84ce:	ca 03 3a             	retf   0x3a03
    84d1:	2f                   	(bad)
    84d2:	00 00                	add    BYTE PTR [rax],al
    84d4:	01 d4                	add    esp,edx
    84d6:	22 00                	and    al,BYTE PTR [rax]
    84d8:	00 01                	add    BYTE PTR [rcx],al
    84da:	2e 23 00             	cs and eax,DWORD PTR [rax]
    84dd:	00 01                	add    BYTE PTR [rcx],al
    84df:	2e 23 00             	cs and eax,DWORD PTR [rax]
    84e2:	00 01                	add    BYTE PTR [rcx],al
    84e4:	62 24 00             	(bad)
    84e7:	00 00                	add    BYTE PTR [rax],al
    84e9:	7f 36                	jg     8521 <_end+0x2509>
    84eb:	00 00                	add    BYTE PTR [rax],al
    84ed:	00 16                	add    BYTE PTR [rsi],dl
    84ef:	fa                   	cli
    84f0:	02 0d 4d 2f 00 00    	add    cl,BYTE PTR [rip+0x2f4d]        # b443 <_end+0x542b>
    84f6:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    84fc:	5a                   	pop    rdx
    84fd:	ec                   	in     al,dx
    84fe:	02 00                	add    al,BYTE PTR [rax]
    8500:	00 16                	add    BYTE PTR [rsi],dl
    8502:	3d 02 0c a6 21       	cmp    eax,0x21a60c02
    8507:	00 00                	add    BYTE PTR [rax],al
    8509:	28 eb                	sub    bl,ch
    850b:	02 00                	add    al,BYTE PTR [rax]
    850d:	00 16                	add    BYTE PTR [rsi],dl
    850f:	3f                   	(bad)
    8510:	02 6c 2f 00          	add    ch,BYTE PTR [rdi+rbp*1+0x0]
    8514:	00 01                	add    BYTE PTR [rcx],al
    8516:	e3 20                	jrcxz  8538 <_end+0x2520>
    8518:	00 00                	add    BYTE PTR [rax],al
    851a:	00 0c 05 01 00 00 16 	add    BYTE PTR [rax*1+0x16000001],cl
    8521:	76 0f                	jbe    8532 <_end+0x251a>
    8523:	2e 00 00             	cs add BYTE PTR [rax],al
    8526:	00 87 2f 00 00 01    	add    BYTE PTR [rdi+0x100002f],al
    852c:	d3 23                	shl    DWORD PTR [rbx],cl
    852e:	00 00                	add    BYTE PTR [rax],al
    8530:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8536:	0d e2 22 00 00       	or     eax,0x22e2
    853b:	0f 54 00             	andps  xmm0,XMMWORD PTR [rax]
    853e:	00 00                	add    BYTE PTR [rax],al
    8540:	16                   	(bad)
    8541:	d7                   	xlat   BYTE PTR ds:[rbx]
    8542:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    8545:	00 00                	add    BYTE PTR [rax],al
    8547:	b2 21                	mov    dl,0x21
    8549:	00 00                	add    BYTE PTR [rax],al
    854b:	b0 2f                	mov    al,0x2f
    854d:	00 00                	add    BYTE PTR [rax],al
    854f:	01 d3                	add    ebx,edx
    8551:	23 00                	and    eax,DWORD PTR [rax]
    8553:	00 01                	add    BYTE PTR [rcx],al
    8555:	87 2f                	xchg   DWORD PTR [rdi],ebp
    8557:	00 00                	add    BYTE PTR [rax],al
    8559:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    855f:	0f 25                	(bad)
    8561:	02 00                	add    al,BYTE PTR [rax]
    8563:	00 16                	add    BYTE PTR [rsi],dl
    8565:	db 1a                	fistp  DWORD PTR [rdx]
    8567:	1c 02                	sbb    al,0x2
    8569:	00 00                	add    BYTE PTR [rax],al
    856b:	8a 21                	mov    ah,BYTE PTR [rcx]
    856d:	00 00                	add    BYTE PTR [rax],al
    856f:	d4                   	(bad)
    8570:	2f                   	(bad)
    8571:	00 00                	add    BYTE PTR [rax],al
    8573:	01 d3                	add    ebx,edx
    8575:	23 00                	and    eax,DWORD PTR [rax]
    8577:	00 01                	add    BYTE PTR [rcx],al
    8579:	87 2f                	xchg   DWORD PTR [rdi],ebp
    857b:	00 00                	add    BYTE PTR [rax],al
    857d:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8583:	0e                   	(bad)
    8584:	db 25 00 00 16 9b    	(bad)  [rip+0xffffffff9b160000]        # ffffffff9b16858a <_end+0xffffffff9b162572>
    858a:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    858d:	21 00                	and    DWORD PTR [rax],eax
    858f:	00 eb                	add    bl,ch
    8591:	2f                   	(bad)
    8592:	00 00                	add    BYTE PTR [rax],al
    8594:	01 d3                	add    ebx,edx
    8596:	23 00                	and    eax,DWORD PTR [rax]
    8598:	00 00                	add    BYTE PTR [rax],al
    859a:	0c e1                	or     al,0xe1
    859c:	01 00                	add    DWORD PTR [rax],eax
    859e:	00 28                	add    BYTE PTR [rax],ch
    85a0:	8f 01                	pop    QWORD PTR [rcx]
    85a2:	2e 23 00             	cs and eax,DWORD PTR [rax]
    85a5:	00 0b                	add    BYTE PTR [rbx],cl
    85a7:	30 00                	xor    BYTE PTR [rax],al
    85a9:	00 01                	add    BYTE PTR [rcx],al
    85ab:	e2 22                	loop   85cf <_end+0x25b7>
    85ad:	00 00                	add    BYTE PTR [rax],al
    85af:	01 0b                	add    DWORD PTR [rbx],ecx
    85b1:	30 00                	xor    BYTE PTR [rax],al
    85b3:	00 01                	add    BYTE PTR [rcx],al
    85b5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    85b8:	00 00                	add    BYTE PTR [rax],al
    85ba:	0d a3 24 00 00       	or     eax,0x24a3
    85bf:	0c 42                	or     al,0x42
    85c1:	02 00                	add    al,BYTE PTR [rax]
    85c3:	00 28                	add    BYTE PTR [rax],ch
    85c5:	4f 01 a6 21 00 00 2b 	rex.WRXB add QWORD PTR [r14+0x2b000021],r12
    85cc:	30 00                	xor    BYTE PTR [rax],al
    85ce:	00 01                	add    BYTE PTR [rcx],al
    85d0:	e2 22                	loop   85f4 <_end+0x25dc>
    85d2:	00 00                	add    BYTE PTR [rax],al
    85d4:	01 9c 24 00 00 00 0e 	add    DWORD PTR [rsp+0xe000000],ebx
    85db:	c2 02 00             	ret    0x2
    85de:	00 16                	add    BYTE PTR [rsi],dl
    85e0:	e6 03                	out    0x3,al
    85e2:	1e                   	(bad)
    85e3:	c7                   	(bad)
    85e4:	23 00                	and    eax,DWORD PTR [rax]
    85e6:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    85e9:	00 00                	add    BYTE PTR [rax],al
    85eb:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    85f1:	be 21 00 00 00       	mov    esi,0x21
    85f6:	0e                   	(bad)
    85f7:	2d 02 00 00 16       	sub    eax,0x16000002
    85fc:	ed                   	in     eax,dx
    85fd:	01 01                	add    DWORD PTR [rcx],eax
    85ff:	be 21 00 00 5e       	mov    esi,0x5e000021
    8604:	30 00                	xor    BYTE PTR [rax],al
    8606:	00 01                	add    BYTE PTR [rcx],al
    8608:	d3 23                	shl    DWORD PTR [rbx],cl
    860a:	00 00                	add    BYTE PTR [rax],al
    860c:	00 0f                	add    BYTE PTR [rdi],cl
    860e:	88 00                	mov    BYTE PTR [rax],al
    8610:	00 00                	add    BYTE PTR [rax],al
    8612:	16                   	(bad)
    8613:	ee                   	out    dx,al
    8614:	16                   	(bad)
    8615:	7f 00                	jg     8617 <_end+0x25ff>
    8617:	00 00                	add    BYTE PTR [rax],al
    8619:	be 21 00 00 82       	mov    esi,0x82000021
    861e:	30 00                	xor    BYTE PTR [rax],al
    8620:	00 01                	add    BYTE PTR [rcx],al
    8622:	d3 23                	shl    DWORD PTR [rbx],cl
    8624:	00 00                	add    BYTE PTR [rax],al
    8626:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    862c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    862d:	21 00                	and    DWORD PTR [rax],eax
    862f:	00 00                	add    BYTE PTR [rax],al
    8631:	0f b9 02             	ud1    eax,DWORD PTR [rdx]
    8634:	00 00                	add    BYTE PTR [rax],al
    8636:	16                   	(bad)
    8637:	f3 1f                	repz (bad)
    8639:	b0 02                	mov    al,0x2
    863b:	00 00                	add    BYTE PTR [rax],al
    863d:	91                   	xchg   ecx,eax
    863e:	21 00                	and    DWORD PTR [rax],eax
    8640:	00 a6 30 00 00 01    	add    BYTE PTR [rsi+0x1000030],ah
    8646:	d3 23                	shl    DWORD PTR [rbx],cl
    8648:	00 00                	add    BYTE PTR [rax],al
    864a:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    8650:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8651:	21 00                	and    DWORD PTR [rax],eax
    8653:	00 00                	add    BYTE PTR [rax],al
    8655:	0c 97                	or     al,0x97
    8657:	02 00                	add    al,BYTE PTR [rax]
    8659:	00 16                	add    BYTE PTR [rsi],dl
    865b:	7c 0e                	jl     866b <_end+0x2653>
    865d:	35 00 00 00 c1       	xor    eax,0xc1000000
    8662:	30 00                	xor    BYTE PTR [rax],al
    8664:	00 01                	add    BYTE PTR [rcx],al
    8666:	d3 23                	shl    DWORD PTR [rbx],cl
    8668:	00 00                	add    BYTE PTR [rax],al
    866a:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8670:	0c 2b                	or     al,0x2b
    8672:	00 00                	add    BYTE PTR [rax],al
    8674:	00 16                	add    BYTE PTR [rsi],dl
    8676:	7f 14                	jg     868c <_end+0x2674>
    8678:	c5 21 00             	(bad)
    867b:	00 dc                	add    ah,bl
    867d:	30 00                	xor    BYTE PTR [rax],al
    867f:	00 01                	add    BYTE PTR [rcx],al
    8681:	d3 23                	shl    DWORD PTR [rbx],cl
    8683:	00 00                	add    BYTE PTR [rax],al
    8685:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    868b:	02 29                	add    ch,BYTE PTR [rcx]
    868d:	27                   	(bad)
    868e:	0c c2                	or     al,0xc2
    8690:	2d 00 00 02 29       	sub    eax,0x29020000
    8695:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    8697:	df 2d 00 00 02 29    	fild   QWORD PTR [rip+0x29020000]        # 2902869d <_end+0x29022685>
    869d:	2e 0e                	cs (bad)
    869f:	3a 2f                	cmp    ch,BYTE PTR [rdi]
    86a1:	00 00                	add    BYTE PTR [rax],al
    86a3:	02 29                	add    ch,BYTE PTR [rcx]
    86a5:	36 0c 61             	ss or  al,0x61
    86a8:	23 00                	and    eax,DWORD PTR [rax]
    86aa:	00 02                	add    BYTE PTR [rdx],al
    86ac:	29 37                	sub    DWORD PTR [rdi],esi
    86ae:	0c 94                	or     al,0x94
    86b0:	23 00                	and    eax,DWORD PTR [rax]
    86b2:	00 02                	add    BYTE PTR [rdx],al
    86b4:	29 39                	sub    DWORD PTR [rcx],edi
    86b6:	0c 71                	or     al,0x71
    86b8:	00 00                	add    BYTE PTR [rax],al
    86ba:	00 02                	add    BYTE PTR [rdx],al
    86bc:	29 39                	sub    DWORD PTR [rcx],edi
    86be:	0c 8a                	or     al,0x8a
    86c0:	00 00                	add    BYTE PTR [rax],al
    86c2:	00 02                	add    BYTE PTR [rdx],al
    86c4:	29 39                	sub    DWORD PTR [rcx],edi
    86c6:	0c a3                	or     al,0xa3
    86c8:	00 00                	add    BYTE PTR [rax],al
    86ca:	00 02                	add    BYTE PTR [rdx],al
    86cc:	29 39                	sub    DWORD PTR [rcx],edi
    86ce:	0c bc                	or     al,0xbc
    86d0:	00 00                	add    BYTE PTR [rax],al
    86d2:	00 02                	add    BYTE PTR [rdx],al
    86d4:	29 39                	sub    DWORD PTR [rcx],edi
    86d6:	0c d5                	or     al,0xd5
    86d8:	00 00                	add    BYTE PTR [rax],al
    86da:	00 02                	add    BYTE PTR [rdx],al
    86dc:	29 39                	sub    DWORD PTR [rcx],edi
    86de:	0c ee                	or     al,0xee
    86e0:	00 00                	add    BYTE PTR [rax],al
    86e2:	00 02                	add    BYTE PTR [rdx],al
    86e4:	29 39                	sub    DWORD PTR [rcx],edi
    86e6:	0c 07                	or     al,0x7
    86e8:	01 00                	add    DWORD PTR [rax],eax
    86ea:	00 02                	add    BYTE PTR [rdx],al
    86ec:	29 3a                	sub    DWORD PTR [rdx],edi
    86ee:	0c fa                	or     al,0xfa
    86f0:	2d 00 00 02 29       	sub    eax,0x29020000
    86f5:	3b 0c 10             	cmp    ecx,DWORD PTR [rax+rdx*1]
    86f8:	2e 00 00             	cs add BYTE PTR [rax],al
    86fb:	02 29                	add    ch,BYTE PTR [rcx]
    86fd:	3c 0c                	cmp    al,0xc
    86ff:	27                   	(bad)
    8700:	2e 00 00             	cs add BYTE PTR [rax],al
    8703:	02 29                	add    ch,BYTE PTR [rcx]
    8705:	3d 0c 3e 2e 00       	cmp    eax,0x2e3e0c
    870a:	00 02                	add    BYTE PTR [rdx],al
    870c:	29 3f                	sub    DWORD PTR [rdi],edi
    870e:	0c 43                	or     al,0x43
    8710:	21 00                	and    DWORD PTR [rax],eax
    8712:	00 02                	add    BYTE PTR [rdx],al
    8714:	29 3f                	sub    DWORD PTR [rdi],edi
    8716:	0c 1f                	or     al,0x1f
    8718:	13 00                	adc    eax,DWORD PTR [rax]
    871a:	00 02                	add    BYTE PTR [rdx],al
    871c:	29 3f                	sub    DWORD PTR [rdi],edi
    871e:	0c 68                	or     al,0x68
    8720:	2e 00 00             	cs add BYTE PTR [rax],al
    8723:	02 29                	add    ch,BYTE PTR [rcx]
    8725:	41 0c 84             	rex.B or al,0x84
    8728:	2e 00 00             	cs add BYTE PTR [rax],al
    872b:	02 29                	add    ch,BYTE PTR [rcx]
    872d:	43 0c 9b             	rex.XB or al,0x9b
    8730:	2e 00 00             	cs add BYTE PTR [rax],al
    8733:	02 29                	add    ch,BYTE PTR [rcx]
    8735:	46 0c b7             	rex.RX or al,0xb7
    8738:	2e 00 00             	cs add BYTE PTR [rax],al
    873b:	02 29                	add    ch,BYTE PTR [rcx]
    873d:	47 0c d3             	rex.RXB or al,0xd3
    8740:	2e 00 00             	cs add BYTE PTR [rax],al
    8743:	02 29                	add    ch,BYTE PTR [rcx]
    8745:	48 0c f8             	rex.W or al,0xf8
    8748:	2e 00 00             	cs add BYTE PTR [rax],al
    874b:	02 29                	add    ch,BYTE PTR [rcx]
    874d:	4a 0c 19             	rex.WX or al,0x19
    8750:	2f                   	(bad)
    8751:	00 00                	add    BYTE PTR [rax],al
    8753:	02 29                	add    ch,BYTE PTR [rcx]
    8755:	4b 0c 4d             	rex.WXB or al,0x4d
    8758:	2f                   	(bad)
    8759:	00 00                	add    BYTE PTR [rax],al
    875b:	02 29                	add    ch,BYTE PTR [rcx]
    875d:	4d 0c 5a             	rex.WRB or al,0x5a
    8760:	2f                   	(bad)
    8761:	00 00                	add    BYTE PTR [rax],al
    8763:	02 29                	add    ch,BYTE PTR [rcx]
    8765:	4e 0c 6c             	rex.WRX or al,0x6c
    8768:	2f                   	(bad)
    8769:	00 00                	add    BYTE PTR [rax],al
    876b:	02 29                	add    ch,BYTE PTR [rcx]
    876d:	4f 0c 8c             	rex.WRXB or al,0x8c
    8770:	2f                   	(bad)
    8771:	00 00                	add    BYTE PTR [rax],al
    8773:	02 29                	add    ch,BYTE PTR [rcx]
    8775:	50                   	push   rax
    8776:	0c b0                	or     al,0xb0
    8778:	2f                   	(bad)
    8779:	00 00                	add    BYTE PTR [rax],al
    877b:	02 29                	add    ch,BYTE PTR [rcx]
    877d:	51                   	push   rcx
    877e:	0c d4                	or     al,0xd4
    8780:	2f                   	(bad)
    8781:	00 00                	add    BYTE PTR [rax],al
    8783:	02 29                	add    ch,BYTE PTR [rcx]
    8785:	53                   	push   rbx
    8786:	0c eb                	or     al,0xeb
    8788:	2f                   	(bad)
    8789:	00 00                	add    BYTE PTR [rax],al
    878b:	02 29                	add    ch,BYTE PTR [rcx]
    878d:	54                   	push   rsp
    878e:	0c 10                	or     al,0x10
    8790:	30 00                	xor    BYTE PTR [rax],al
    8792:	00 80 01 20 10 15    	add    BYTE PTR [rax+0x15102001],al
    8798:	a9 01 10 70 10       	test   eax,0x10701001
    879d:	00 00                	add    BYTE PTR [rax],al
    879f:	11 32                	adc    DWORD PTR [rdx],esi
    87a1:	00 00                	add    BYTE PTR [rax],al
    87a3:	5b                   	pop    rbx
    87a4:	b4 24                	mov    ah,0x24
    87a6:	00 00                	add    BYTE PTR [rax],al
    87a8:	aa                   	stos   BYTE PTR es:[rdi],al
    87a9:	01 0d be 21 00 00    	add    DWORD PTR [rip+0x21be],ecx        # a96d <_end+0x4955>
    87af:	08 00                	or     BYTE PTR [rax],al
    87b1:	5b                   	pop    rbx
    87b2:	10 28                	adc    BYTE PTR [rax],ch
    87b4:	00 00                	add    BYTE PTR [rax],al
    87b6:	ab                   	stos   DWORD PTR es:[rdi],eax
    87b7:	01 0f                	add    DWORD PTR [rdi],ecx
    87b9:	c5 21 00             	(bad)
    87bc:	00 10                	add    BYTE PTR [rax],dl
    87be:	10 00                	adc    BYTE PTR [rax],al
    87c0:	81 01 72 10 00 00    	add    DWORD PTR [rcx],0x1072
    87c6:	15 b4 01 03 e4       	adc    eax,0xe40301b4
    87cb:	31 00                	xor    DWORD PTR [rax],eax
    87cd:	00 10                	add    BYTE PTR [rax],dl
    87cf:	12 02                	adc    al,BYTE PTR [rdx]
    87d1:	04 00                	add    al,0x0
    87d3:	00 00                	add    BYTE PTR [rax],al
    87d5:	00 12                	add    BYTE PTR [rdx],dl
    87d7:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    87da:	02 00                	add    al,BYTE PTR [rax]
    87dc:	00 08                	add    BYTE PTR [rax],cl
    87de:	a2 2a 00 00 2a 14 17 	movabs ds:0x20e317142a00002a,al
    87e5:	e3 20 
    87e7:	00 00                	add    BYTE PTR [rax],al
    87e9:	08 a1 2f 00 00 2b    	or     BYTE PTR [rcx+0x2b00002f],ah
    87ef:	06                   	(bad)
    87f0:	15 4e 2a 00 00       	adc    eax,0x2a4e
    87f5:	13 3a                	adc    edi,DWORD PTR [rdx]
    87f7:	32 00                	xor    al,BYTE PTR [rax]
    87f9:	00 0e                	add    BYTE PTR [rsi],cl
    87fb:	da 00                	fiadd  DWORD PTR [rax]
    87fd:	00 00                	add    BYTE PTR [rax],al
    87ff:	2c 57                	sub    al,0x57
    8801:	01 01                	add    DWORD PTR [rcx],eax
    8803:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8806:	00 62 32             	add    BYTE PTR [rdx+0x32],ah
    8809:	00 00                	add    BYTE PTR [rax],al
    880b:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8811:	0e                   	(bad)
    8812:	02 15 00 00 2c a7    	add    dl,BYTE PTR [rip+0xffffffffa72c0000]        # ffffffffa72c8818 <_end+0xffffffffa72c2800>
    8818:	03 0f                	add    ecx,DWORD PTR [rdi]
    881a:	2e 32 00             	cs xor al,BYTE PTR [rax]
    881d:	00 79 32             	add    BYTE PTR [rcx+0x32],bh
    8820:	00 00                	add    BYTE PTR [rax],al
    8822:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8825:	00 00                	add    BYTE PTR [rax],al
    8827:	00 0d 8e 2a 00 00    	add    BYTE PTR [rip+0x2a8e],cl        # b2bb <_end+0x52a3>
    882d:	0c 39                	or     al,0x39
    882f:	15 00 00 2d d3       	adc    eax,0xd32d0000
    8834:	01 f3                	add    ebx,esi
    8836:	2e 00 00             	cs add BYTE PTR [rax],al
    8839:	9e                   	sahf
    883a:	32 00                	xor    al,BYTE PTR [rax]
    883c:	00 01                	add    BYTE PTR [rcx],al
    883e:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8842:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    8848:	79 32                	jns    887c <_end+0x2864>
    884a:	00 00                	add    BYTE PTR [rax],al
    884c:	00 0e                	add    BYTE PTR [rsi],cl
    884e:	22 32                	and    dh,BYTE PTR [rdx]
    8850:	00 00                	add    BYTE PTR [rax],al
    8852:	2c b5                	sub    al,0xb5
    8854:	03 0f                	add    ecx,DWORD PTR [rdi]
    8856:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8859:	00 ba 32 00 00 01    	add    BYTE PTR [rdx+0x1000032],bh
    885f:	9c                   	pushf
    8860:	24 00                	and    al,0x0
    8862:	00 01                	add    BYTE PTR [rcx],al
    8864:	79 32                	jns    8898 <_end+0x2880>
    8866:	00 00                	add    BYTE PTR [rax],al
    8868:	00 0e                	add    BYTE PTR [rsi],cl
    886a:	84 0d 00 00 2c cb    	test   BYTE PTR [rip+0xffffffffcb2c0000],cl        # ffffffffcb2c8870 <_end+0xffffffffcb2c2858>
    8870:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    8873:	21 00                	and    DWORD PTR [rax],eax
    8875:	00 d6                	add    dh,dl
    8877:	32 00                	xor    al,BYTE PTR [rax]
    8879:	00 01                	add    BYTE PTR [rcx],al
    887b:	0b 30                	or     esi,DWORD PTR [rax]
    887d:	00 00                	add    BYTE PTR [rax],al
    887f:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8882:	00 00                	add    BYTE PTR [rax],al
    8884:	00 0e                	add    BYTE PTR [rsi],cl
    8886:	64 1b 00             	sbb    eax,DWORD PTR fs:[rax]
    8889:	00 2c d5 02 0c a6 21 	add    BYTE PTR [rdx*8+0x21a60c02],ch
    8890:	00 00                	add    BYTE PTR [rax],al
    8892:	f2 32 00             	repnz xor al,BYTE PTR [rax]
    8895:	00 01                	add    BYTE PTR [rcx],al
    8897:	79 32                	jns    88cb <_end+0x28b3>
    8899:	00 00                	add    BYTE PTR [rax],al
    889b:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    88a1:	0c f2                	or     al,0xf2
    88a3:	22 00                	and    al,BYTE PTR [rax]
    88a5:	00 2d b8 01 a6 21    	add    BYTE PTR [rip+0x21a601b8],ch        # 21a68a63 <_end+0x21a62a4b>
    88ab:	00 00                	add    BYTE PTR [rax],al
    88ad:	0e                   	(bad)
    88ae:	33 00                	xor    eax,DWORD PTR [rax]
    88b0:	00 01                	add    BYTE PTR [rcx],al
    88b2:	79 32                	jns    88e6 <_end+0x28ce>
    88b4:	00 00                	add    BYTE PTR [rax],al
    88b6:	01 0b                	add    DWORD PTR [rbx],ecx
    88b8:	30 00                	xor    BYTE PTR [rax],al
    88ba:	00 21                	add    BYTE PTR [rcx],ah
    88bc:	00 04 55 21 00 00 2c 	add    BYTE PTR [rdx*2+0x2c000021],al
    88c3:	1b 03                	sbb    eax,DWORD PTR [rbx]
    88c5:	0c 4c                	or     al,0x4c
    88c7:	21 00                	and    DWORD PTR [rax],eax
    88c9:	00 a6 21 00 00 2f    	add    BYTE PTR [rsi+0x2f000021],ah
    88cf:	33 00                	xor    eax,DWORD PTR [rax]
    88d1:	00 01                	add    BYTE PTR [rcx],al
    88d3:	79 32                	jns    8907 <_end+0x28ef>
    88d5:	00 00                	add    BYTE PTR [rax],al
    88d7:	01 0b                	add    DWORD PTR [rbx],ecx
    88d9:	30 00                	xor    BYTE PTR [rax],al
    88db:	00 21                	add    BYTE PTR [rcx],ah
    88dd:	00 0e                	add    BYTE PTR [rsi],cl
    88df:	03 15 00 00 2c a8    	add    edx,DWORD PTR [rip+0xffffffffa82c0000]        # ffffffffa82c88e5 <_end+0xffffffffa82c28cd>
    88e5:	03 0f                	add    ecx,DWORD PTR [rdi]
    88e7:	2e 32 00             	cs xor al,BYTE PTR [rax]
    88ea:	00 46 33             	add    BYTE PTR [rsi+0x33],al
    88ed:	00 00                	add    BYTE PTR [rax],al
    88ef:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    88f2:	00 00                	add    BYTE PTR [rax],al
    88f4:	00 5a 1a             	add    BYTE PTR [rdx+0x1a],bl
    88f7:	15 00 00 2c ae       	adc    eax,0xae2c0000
    88fc:	03 0f                	add    ecx,DWORD PTR [rdi]
    88fe:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8901:	00 0e                	add    BYTE PTR [rsi],cl
    8903:	d4                   	(bad)
    8904:	18 00                	sbb    BYTE PTR [rax],al
    8906:	00 2c 62             	add    BYTE PTR [rdx+riz*2],ch
    8909:	01 01                	add    DWORD PTR [rcx],eax
    890b:	2e 23 00             	cs and eax,DWORD PTR [rax]
    890e:	00 74 33 00          	add    BYTE PTR [rbx+rsi*1+0x0],dh
    8912:	00 01                	add    BYTE PTR [rcx],al
    8914:	d3 23                	shl    DWORD PTR [rbx],cl
    8916:	00 00                	add    BYTE PTR [rax],al
    8918:	01 2e                	add    DWORD PTR [rsi],ebp
    891a:	23 00                	and    eax,DWORD PTR [rax]
    891c:	00 01                	add    BYTE PTR [rcx],al
    891e:	74 33                	je     8953 <_end+0x293b>
    8920:	00 00                	add    BYTE PTR [rax],al
    8922:	00 0d 3a 32 00 00    	add    BYTE PTR [rip+0x323a],cl        # bb62 <_end+0x5b4a>
    8928:	0e                   	(bad)
    8929:	5c                   	pop    rsp
    892a:	10 00                	adc    BYTE PTR [rax],al
    892c:	00 2c 41             	add    BYTE PTR [rcx+rax*2],ch
    892f:	01 0f                	add    DWORD PTR [rdi],ecx
    8931:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8934:	00 9f 33 00 00 01    	add    BYTE PTR [rdi+0x1000033],bl
    893a:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    893e:	01 d3                	add    ebx,edx
    8940:	23 00                	and    eax,DWORD PTR [rax]
    8942:	00 01                	add    BYTE PTR [rcx],al
    8944:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8947:	00 01                	add    BYTE PTR [rcx],al
    8949:	74 33                	je     897e <_end+0x2966>
    894b:	00 00                	add    BYTE PTR [rax],al
    894d:	00 0e                	add    BYTE PTR [rsi],cl
    894f:	48 29 00             	sub    QWORD PTR [rax],rax
    8952:	00 2c 3d 01 0c a6 21 	add    BYTE PTR [rdi*1+0x21a60c01],ch
    8959:	00 00                	add    BYTE PTR [rax],al
    895b:	b6 33                	mov    dh,0x33
    895d:	00 00                	add    BYTE PTR [rax],al
    895f:	01 b6 33 00 00 00    	add    DWORD PTR [rsi+0x33],esi
    8965:	0d 46 32 00 00       	or     eax,0x3246
    896a:	0c 58                	or     al,0x58
    896c:	31 00                	xor    DWORD PTR [rax],eax
    896e:	00 2d fd 01 2e 23    	add    BYTE PTR [rip+0x232e01fd],ch        # 232e8b71 <_end+0x232e2b59>
    8974:	00 00                	add    BYTE PTR [rax],al
    8976:	e0 33                	loopne 89ab <_end+0x2993>
    8978:	00 00                	add    BYTE PTR [rax],al
    897a:	01 f3                	add    ebx,esi
    897c:	2e 00 00             	cs add BYTE PTR [rax],al
    897f:	01 e0                	add    eax,esp
    8981:	33 00                	xor    eax,DWORD PTR [rax]
    8983:	00 01                	add    BYTE PTR [rcx],al
    8985:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8988:	00 01                	add    BYTE PTR [rcx],al
    898a:	74 33                	je     89bf <_end+0x29a7>
    898c:	00 00                	add    BYTE PTR [rax],al
    898e:	00 0d d3 23 00 00    	add    BYTE PTR [rip+0x23d3],cl        # ad67 <_end+0x4d4f>
    8994:	0e                   	(bad)
    8995:	23 32                	and    esi,DWORD PTR [rdx]
    8997:	00 00                	add    BYTE PTR [rax],al
    8999:	2c b6                	sub    al,0xb6
    899b:	03 0f                	add    ecx,DWORD PTR [rdi]
    899d:	2e 32 00             	cs xor al,BYTE PTR [rax]
    89a0:	00 01                	add    BYTE PTR [rcx],al
    89a2:	34 00                	xor    al,0x0
    89a4:	00 01                	add    BYTE PTR [rcx],al
    89a6:	9c                   	pushf
    89a7:	24 00                	and    al,0x0
    89a9:	00 01                	add    BYTE PTR [rcx],al
    89ab:	79 32                	jns    89df <_end+0x29c7>
    89ad:	00 00                	add    BYTE PTR [rax],al
    89af:	00 0e                	add    BYTE PTR [rsi],cl
    89b1:	8d 1c 00             	lea    ebx,[rax+rax*1]
    89b4:	00 2c bc             	add    BYTE PTR [rsp+rdi*4],ch
    89b7:	03 0f                	add    ecx,DWORD PTR [rdi]
    89b9:	2e 32 00             	cs xor al,BYTE PTR [rax]
    89bc:	00 18                	add    BYTE PTR [rax],bl
    89be:	34 00                	xor    al,0x0
    89c0:	00 01                	add    BYTE PTR [rcx],al
    89c2:	9c                   	pushf
    89c3:	24 00                	and    al,0x0
    89c5:	00 00                	add    BYTE PTR [rax],al
    89c7:	0c f3                	or     al,0xf3
    89c9:	19 00                	sbb    DWORD PTR [rax],eax
    89cb:	00 2d 90 01 a6 21    	add    BYTE PTR [rip+0x21a60190],ch        # 21a68b61 <_end+0x21a62b49>
    89d1:	00 00                	add    BYTE PTR [rax],al
    89d3:	39 34 00             	cmp    DWORD PTR [rax+rax*1],esi
    89d6:	00 01                	add    BYTE PTR [rcx],al
    89d8:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    89dc:	01 2e                	add    DWORD PTR [rsi],ebp
    89de:	23 00                	and    eax,DWORD PTR [rax]
    89e0:	00 01                	add    BYTE PTR [rcx],al
    89e2:	0b 30                	or     esi,DWORD PTR [rax]
    89e4:	00 00                	add    BYTE PTR [rax],al
    89e6:	21 00                	and    DWORD PTR [rax],eax
    89e8:	04 42                	add    al,0x42
    89ea:	20 00                	and    BYTE PTR [rax],al
    89ec:	00 2c 22             	add    BYTE PTR [rdx+riz*1],ch
    89ef:	03 0c 39             	add    ecx,DWORD PTR [rcx+rdi*1]
    89f2:	20 00                	and    BYTE PTR [rax],al
    89f4:	00 a6 21 00 00 5a    	add    BYTE PTR [rsi+0x5a000021],ah
    89fa:	34 00                	xor    al,0x0
    89fc:	00 01                	add    BYTE PTR [rcx],al
    89fe:	0b 30                	or     esi,DWORD PTR [rax]
    8a00:	00 00                	add    BYTE PTR [rax],al
    8a02:	01 0b                	add    DWORD PTR [rbx],ecx
    8a04:	30 00                	xor    BYTE PTR [rax],al
    8a06:	00 21                	add    BYTE PTR [rcx],ah
    8a08:	00 0e                	add    BYTE PTR [rsi],cl
    8a0a:	65 18 00             	sbb    BYTE PTR gs:[rax],al
    8a0d:	00 2c d3             	add    BYTE PTR [rbx+rdx*8],ch
    8a10:	03 0f                	add    ecx,DWORD PTR [rdi]
    8a12:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8a15:	00 76 34             	add    BYTE PTR [rsi+0x34],dh
    8a18:	00 00                	add    BYTE PTR [rax],al
    8a1a:	01 2e                	add    DWORD PTR [rsi],ebp
    8a1c:	32 00                	xor    al,BYTE PTR [rax]
    8a1e:	00 01                	add    BYTE PTR [rcx],al
    8a20:	79 32                	jns    8a54 <_end+0x2a3c>
    8a22:	00 00                	add    BYTE PTR [rax],al
    8a24:	00 0c f1             	add    BYTE PTR [rcx+rsi*8],cl
    8a27:	22 00                	and    al,BYTE PTR [rax]
    8a29:	00 2d cb 01 a6 21    	add    BYTE PTR [rip+0x21a601cb],ch        # 21a68bfa <_end+0x21a62be2>
    8a2f:	00 00                	add    BYTE PTR [rax],al
    8a31:	96                   	xchg   esi,eax
    8a32:	34 00                	xor    al,0x0
    8a34:	00 01                	add    BYTE PTR [rcx],al
    8a36:	79 32                	jns    8a6a <_end+0x2a52>
    8a38:	00 00                	add    BYTE PTR [rax],al
    8a3a:	01 0b                	add    DWORD PTR [rbx],ecx
    8a3c:	30 00                	xor    BYTE PTR [rax],al
    8a3e:	00 01                	add    BYTE PTR [rcx],al
    8a40:	96                   	xchg   esi,eax
    8a41:	34 00                	xor    al,0x0
    8a43:	00 00                	add    BYTE PTR [rax],al
    8a45:	0d d1 29 00 00       	or     eax,0x29d1
    8a4a:	04 b5                	add    al,0xb5
    8a4c:	1a 00                	sbb    al,BYTE PTR [rax]
    8a4e:	00 2c 6b             	add    BYTE PTR [rbx+rbp*2],ch
    8a51:	03 0c ac             	add    ecx,DWORD PTR [rsp+rbp*4]
    8a54:	1a 00                	sbb    al,BYTE PTR [rax]
    8a56:	00 a6 21 00 00 c0    	add    BYTE PTR [rsi-0x3fffffdf],ah
    8a5c:	34 00                	xor    al,0x0
    8a5e:	00 01                	add    BYTE PTR [rcx],al
    8a60:	79 32                	jns    8a94 <_end+0x2a7c>
    8a62:	00 00                	add    BYTE PTR [rax],al
    8a64:	01 0b                	add    DWORD PTR [rbx],ecx
    8a66:	30 00                	xor    BYTE PTR [rax],al
    8a68:	00 01                	add    BYTE PTR [rcx],al
    8a6a:	96                   	xchg   esi,eax
    8a6b:	34 00                	xor    al,0x0
    8a6d:	00 00                	add    BYTE PTR [rax],al
    8a6f:	0c f2                	or     al,0xf2
    8a71:	19 00                	sbb    DWORD PTR [rax],eax
    8a73:	00 2d a3 01 a6 21    	add    BYTE PTR [rip+0x21a601a3],ch        # 21a68c1c <_end+0x21a62c04>
    8a79:	00 00                	add    BYTE PTR [rax],al
    8a7b:	e5 34                	in     eax,0x34
    8a7d:	00 00                	add    BYTE PTR [rax],al
    8a7f:	01 f3                	add    ebx,esi
    8a81:	2e 00 00             	cs add BYTE PTR [rax],al
    8a84:	01 2e                	add    DWORD PTR [rsi],ebp
    8a86:	23 00                	and    eax,DWORD PTR [rax]
    8a88:	00 01                	add    BYTE PTR [rcx],al
    8a8a:	0b 30                	or     esi,DWORD PTR [rax]
    8a8c:	00 00                	add    BYTE PTR [rax],al
    8a8e:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8a94:	04 51                	add    al,0x51
    8a96:	19 00                	sbb    DWORD PTR [rax],eax
    8a98:	00 2c 72             	add    BYTE PTR [rdx+rsi*2],ch
    8a9b:	03 0c 48             	add    ecx,DWORD PTR [rax+rcx*2]
    8a9e:	19 00                	sbb    DWORD PTR [rax],eax
    8aa0:	00 a6 21 00 00 0a    	add    BYTE PTR [rsi+0xa000021],ah
    8aa6:	35 00 00 01 0b       	xor    eax,0xb010000
    8aab:	30 00                	xor    BYTE PTR [rax],al
    8aad:	00 01                	add    BYTE PTR [rcx],al
    8aaf:	0b 30                	or     esi,DWORD PTR [rax]
    8ab1:	00 00                	add    BYTE PTR [rax],al
    8ab3:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8ab9:	0c 0e                	or     al,0xe
    8abb:	13 00                	adc    eax,DWORD PTR [rax]
    8abd:	00 2d c5 01 a6 21    	add    BYTE PTR [rip+0x21a601c5],ch        # 21a68c88 <_end+0x21a62c70>
    8ac3:	00 00                	add    BYTE PTR [rax],al
    8ac5:	25 35 00 00 01       	and    eax,0x1000035
    8aca:	0b 30                	or     esi,DWORD PTR [rax]
    8acc:	00 00                	add    BYTE PTR [rax],al
    8ace:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8ad4:	04 12                	add    al,0x12
    8ad6:	25 00 00 2c 6f       	and    eax,0x6f2c0000
    8adb:	03 0c 09             	add    ecx,DWORD PTR [rcx+rcx*1]
    8ade:	25 00 00 a6 21       	and    eax,0x21a60000
    8ae3:	00 00                	add    BYTE PTR [rax],al
    8ae5:	45 35 00 00 01 0b    	rex.RB xor eax,0xb010000
    8aeb:	30 00                	xor    BYTE PTR [rax],al
    8aed:	00 01                	add    BYTE PTR [rcx],al
    8aef:	96                   	xchg   esi,eax
    8af0:	34 00                	xor    al,0x0
    8af2:	00 00                	add    BYTE PTR [rax],al
    8af4:	0c 47                	or     al,0x47
    8af6:	30 00                	xor    BYTE PTR [rax],al
    8af8:	00 2d ec 01 2e 23    	add    BYTE PTR [rip+0x232e01ec],ch        # 232e8cea <_end+0x232e2cd2>
    8afe:	00 00                	add    BYTE PTR [rax],al
    8b00:	65 35 00 00 01 e2    	gs xor eax,0xe2010000
    8b06:	22 00                	and    al,BYTE PTR [rax]
    8b08:	00 01                	add    BYTE PTR [rcx],al
    8b0a:	9c                   	pushf
    8b0b:	24 00                	and    al,0x0
    8b0d:	00 01                	add    BYTE PTR [rcx],al
    8b0f:	74 33                	je     8b44 <_end+0x2b2c>
    8b11:	00 00                	add    BYTE PTR [rax],al
    8b13:	00 0c 8e             	add    BYTE PTR [rsi+rcx*4],cl
    8b16:	2f                   	(bad)
    8b17:	00 00                	add    BYTE PTR [rax],al
    8b19:	2d 60 01 f3 2e       	sub    eax,0x2ef30160
    8b1e:	00 00                	add    BYTE PTR [rax],al
    8b20:	80 35 00 00 01 f3 2e 	xor    BYTE PTR [rip+0xfffffffff3010000],0x2e        # fffffffff3018b27 <_end+0xfffffffff3012b0f>
    8b27:	00 00                	add    BYTE PTR [rax],al
    8b29:	01 0b                	add    DWORD PTR [rbx],ecx
    8b2b:	30 00                	xor    BYTE PTR [rax],al
    8b2d:	00 00                	add    BYTE PTR [rax],al
    8b2f:	0c 40                	or     al,0x40
    8b31:	16                   	(bad)
    8b32:	00 00                	add    BYTE PTR [rax],al
    8b34:	2c 82                	sub    al,0x82
    8b36:	0c a6                	or     al,0xa6
    8b38:	21 00                	and    DWORD PTR [rax],eax
    8b3a:	00 9b 35 00 00 01    	add    BYTE PTR [rbx+0x1000035],bl
    8b40:	0b 30                	or     esi,DWORD PTR [rax]
    8b42:	00 00                	add    BYTE PTR [rax],al
    8b44:	01 0b                	add    DWORD PTR [rbx],ecx
    8b46:	30 00                	xor    BYTE PTR [rax],al
    8b48:	00 00                	add    BYTE PTR [rax],al
    8b4a:	0c c9                	or     al,0xc9
    8b4c:	10 00                	adc    BYTE PTR [rax],al
    8b4e:	00 2c 9b             	add    BYTE PTR [rbx+rbx*4],ch
    8b51:	0c a6                	or     al,0xa6
    8b53:	21 00                	and    DWORD PTR [rax],eax
    8b55:	00 b6 35 00 00 01    	add    BYTE PTR [rsi+0x1000035],dh
    8b5b:	0b 30                	or     esi,DWORD PTR [rax]
    8b5d:	00 00                	add    BYTE PTR [rax],al
    8b5f:	01 0b                	add    DWORD PTR [rbx],ecx
    8b61:	30 00                	xor    BYTE PTR [rax],al
    8b63:	00 00                	add    BYTE PTR [rax],al
    8b65:	0c dc                	or     al,0xdc
    8b67:	19 00                	sbb    DWORD PTR [rax],eax
    8b69:	00 2d 3c 01 f3 2e    	add    BYTE PTR [rip+0x2ef3013c],ch        # 2ef38cab <_end+0x2ef32c93>
    8b6f:	00 00                	add    BYTE PTR [rax],al
    8b71:	d1 35 00 00 01 f3    	shl    DWORD PTR [rip+0xfffffffff3010000],1        # fffffffff3018b77 <_end+0xfffffffff3012b5f>
    8b77:	2e 00 00             	cs add BYTE PTR [rax],al
    8b7a:	01 0b                	add    DWORD PTR [rbx],ecx
    8b7c:	30 00                	xor    BYTE PTR [rax],al
    8b7e:	00 00                	add    BYTE PTR [rax],al
    8b80:	0c 17                	or     al,0x17
    8b82:	0e                   	(bad)
    8b83:	00 00                	add    BYTE PTR [rax],al
    8b85:	2c d4                	sub    al,0xd4
    8b87:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8b8a:	00 00                	add    BYTE PTR [rax],al
    8b8c:	ec                   	in     al,dx
    8b8d:	35 00 00 01 0b       	xor    eax,0xb010000
    8b92:	30 00                	xor    BYTE PTR [rax],al
    8b94:	00 01                	add    BYTE PTR [rcx],al
    8b96:	0b 30                	or     esi,DWORD PTR [rax]
    8b98:	00 00                	add    BYTE PTR [rax],al
    8b9a:	00 0e                	add    BYTE PTR [rsi],cl
    8b9c:	84 2d 00 00 2c 13    	test   BYTE PTR [rip+0x132c0000],ch        # 132c8ba2 <_end+0x132c2b8a>
    8ba2:	04 0f                	add    al,0xf
    8ba4:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8ba7:	00 12                	add    BYTE PTR [rdx],dl
    8ba9:	36 00 00             	ss add BYTE PTR [rax],al
    8bac:	01 f3                	add    ebx,esi
    8bae:	2e 00 00             	cs add BYTE PTR [rax],al
    8bb1:	01 2e                	add    DWORD PTR [rsi],ebp
    8bb3:	23 00                	and    eax,DWORD PTR [rax]
    8bb5:	00 01                	add    BYTE PTR [rcx],al
    8bb7:	0b 30                	or     esi,DWORD PTR [rax]
    8bb9:	00 00                	add    BYTE PTR [rax],al
    8bbb:	01 12                	add    DWORD PTR [rdx],edx
    8bbd:	36 00 00             	ss add BYTE PTR [rax],al
    8bc0:	00 0d b4 36 00 00    	add    BYTE PTR [rip+0x36b4],cl        # c27a <_end+0x6262>
    8bc6:	82                   	(bad)
    8bc7:	01 74 6d 00          	add    DWORD PTR [rbp+rbp*2+0x0],esi
    8bcb:	38 2e                	cmp    BYTE PTR [rsi],ch
    8bcd:	07                   	(bad)
    8bce:	08 b4 36 00 00 06 97 	or     BYTE PTR [rsi+rsi*1-0x68fa0000],dh
    8bd5:	1b 00                	sbb    eax,DWORD PTR [rax]
    8bd7:	00 2e                	add    BYTE PTR [rsi],ch
    8bd9:	09 07                	or     DWORD PTR [rdi],eax
    8bdb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8bdc:	21 00                	and    DWORD PTR [rax],eax
    8bde:	00 00                	add    BYTE PTR [rax],al
    8be0:	06                   	(bad)
    8be1:	05 18 00 00 2e       	add    eax,0x2e000018
    8be6:	0a 07                	or     al,BYTE PTR [rdi]
    8be8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8be9:	21 00                	and    DWORD PTR [rax],eax
    8beb:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    8bee:	4b 0c 00             	rex.WXB or al,0x0
    8bf1:	00 2e                	add    BYTE PTR [rsi],ch
    8bf3:	0b 07                	or     eax,DWORD PTR [rdi]
    8bf5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8bf6:	21 00                	and    DWORD PTR [rax],eax
    8bf8:	00 08                	add    BYTE PTR [rax],cl
    8bfa:	06                   	(bad)
    8bfb:	91                   	xchg   ecx,eax
    8bfc:	19 00                	sbb    DWORD PTR [rax],eax
    8bfe:	00 2e                	add    BYTE PTR [rsi],ch
    8c00:	0c 07                	or     al,0x7
    8c02:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c03:	21 00                	and    DWORD PTR [rax],eax
    8c05:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    8c08:	5d                   	pop    rbp
    8c09:	21 00                	and    DWORD PTR [rax],eax
    8c0b:	00 2e                	add    BYTE PTR [rsi],ch
    8c0d:	0d 07 a6 21 00       	or     eax,0x21a607
    8c12:	00 10                	add    BYTE PTR [rax],dl
    8c14:	06                   	(bad)
    8c15:	29 32                	sub    DWORD PTR [rdx],esi
    8c17:	00 00                	add    BYTE PTR [rax],al
    8c19:	2e 0e                	cs (bad)
    8c1b:	07                   	(bad)
    8c1c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c1d:	21 00                	and    DWORD PTR [rax],eax
    8c1f:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    8c22:	e5 28                	in     eax,0x28
    8c24:	00 00                	add    BYTE PTR [rax],al
    8c26:	2e 0f 07             	cs sysretd
    8c29:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c2a:	21 00                	and    DWORD PTR [rax],eax
    8c2c:	00 18                	add    BYTE PTR [rax],bl
    8c2e:	06                   	(bad)
    8c2f:	55                   	push   rbp
    8c30:	29 00                	sub    DWORD PTR [rax],eax
    8c32:	00 2e                	add    BYTE PTR [rsi],ch
    8c34:	10 07                	adc    BYTE PTR [rdi],al
    8c36:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c37:	21 00                	and    DWORD PTR [rax],eax
    8c39:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    8c3c:	05 13 00 00 2e       	add    eax,0x2e000013
    8c41:	11 07                	adc    DWORD PTR [rdi],eax
    8c43:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8c44:	21 00                	and    DWORD PTR [rax],eax
    8c46:	00 20                	add    BYTE PTR [rax],ah
    8c48:	06                   	(bad)
    8c49:	82                   	(bad)
    8c4a:	1e                   	(bad)
    8c4b:	00 00                	add    BYTE PTR [rax],al
    8c4d:	2e 14 0c             	cs adc al,0xc
    8c50:	b2 21                	mov    dl,0x21
    8c52:	00 00                	add    BYTE PTR [rax],al
    8c54:	28 06                	sub    BYTE PTR [rsi],al
    8c56:	dd 2f                	(bad)  [rdi]
    8c58:	00 00                	add    BYTE PTR [rax],al
    8c5a:	2e 15 0f d3 23 00    	cs adc eax,0x23d30f
    8c60:	00 30                	add    BYTE PTR [rax],dh
    8c62:	00 13                	add    BYTE PTR [rbx],dl
    8c64:	17                   	(bad)
    8c65:	36 00 00             	ss add BYTE PTR [rax],al
    8c68:	0c c3                	or     al,0xc3
    8c6a:	24 00                	and    al,0x0
    8c6c:	00 2c f7             	add    BYTE PTR [rdi+rsi*8],ch
    8c6f:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8c72:	00 00                	add    BYTE PTR [rax],al
    8c74:	cf                   	iret
    8c75:	36 00 00             	ss add BYTE PTR [rax],al
    8c78:	01 0b                	add    DWORD PTR [rbx],ecx
    8c7a:	30 00                	xor    BYTE PTR [rax],al
    8c7c:	00 00                	add    BYTE PTR [rax],al
    8c7e:	0c c5                	or     al,0xc5
    8c80:	30 00                	xor    BYTE PTR [rax],al
    8c82:	00 2d 69 01 f3 2e    	add    BYTE PTR [rip+0x2ef30169],ch        # 2ef38df1 <_end+0x2ef32dd9>
    8c88:	00 00                	add    BYTE PTR [rax],al
    8c8a:	ef                   	out    dx,eax
    8c8b:	36 00 00             	ss add BYTE PTR [rax],al
    8c8e:	01 f3                	add    ebx,esi
    8c90:	2e 00 00             	cs add BYTE PTR [rax],al
    8c93:	01 0b                	add    DWORD PTR [rbx],ecx
    8c95:	30 00                	xor    BYTE PTR [rax],al
    8c97:	00 01                	add    BYTE PTR [rcx],al
    8c99:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8c9c:	00 00                	add    BYTE PTR [rax],al
    8c9e:	0c 40                	or     al,0x40
    8ca0:	17                   	(bad)
    8ca1:	00 00                	add    BYTE PTR [rax],al
    8ca3:	2c 85                	sub    al,0x85
    8ca5:	0c a6                	or     al,0xa6
    8ca7:	21 00                	and    DWORD PTR [rax],eax
    8ca9:	00 0f                	add    BYTE PTR [rdi],cl
    8cab:	37                   	(bad)
    8cac:	00 00                	add    BYTE PTR [rax],al
    8cae:	01 0b                	add    DWORD PTR [rbx],ecx
    8cb0:	30 00                	xor    BYTE PTR [rax],al
    8cb2:	00 01                	add    BYTE PTR [rcx],al
    8cb4:	0b 30                	or     esi,DWORD PTR [rax]
    8cb6:	00 00                	add    BYTE PTR [rax],al
    8cb8:	01 2e                	add    DWORD PTR [rsi],ebp
    8cba:	23 00                	and    eax,DWORD PTR [rax]
    8cbc:	00 00                	add    BYTE PTR [rax],al
    8cbe:	0c d5                	or     al,0xd5
    8cc0:	1b 00                	sbb    eax,DWORD PTR [rax]
    8cc2:	00 2d 4e 01 f3 2e    	add    BYTE PTR [rip+0x2ef3014e],ch        # 2ef38e16 <_end+0x2ef32dfe>
    8cc8:	00 00                	add    BYTE PTR [rax],al
    8cca:	2f                   	(bad)
    8ccb:	37                   	(bad)
    8ccc:	00 00                	add    BYTE PTR [rax],al
    8cce:	01 f3                	add    ebx,esi
    8cd0:	2e 00 00             	cs add BYTE PTR [rax],al
    8cd3:	01 0b                	add    DWORD PTR [rbx],ecx
    8cd5:	30 00                	xor    BYTE PTR [rax],al
    8cd7:	00 01                	add    BYTE PTR [rcx],al
    8cd9:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8cdc:	00 00                	add    BYTE PTR [rax],al
    8cde:	0e                   	(bad)
    8cdf:	be 28 00 00 2d       	mov    esi,0x2d000028
    8ce4:	06                   	(bad)
    8ce5:	01 01                	add    DWORD PTR [rcx],eax
    8ce7:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8cea:	00 55 37             	add    BYTE PTR [rbp+0x37],dl
    8ced:	00 00                	add    BYTE PTR [rax],al
    8cef:	01 e2                	add    edx,esp
    8cf1:	22 00                	and    al,BYTE PTR [rax]
    8cf3:	00 01                	add    BYTE PTR [rcx],al
    8cf5:	55                   	push   rbp
    8cf6:	37                   	(bad)
    8cf7:	00 00                	add    BYTE PTR [rax],al
    8cf9:	01 2e                	add    DWORD PTR [rsi],ebp
    8cfb:	23 00                	and    eax,DWORD PTR [rax]
    8cfd:	00 01                	add    BYTE PTR [rcx],al
    8cff:	74 33                	je     8d34 <_end+0x2d1c>
    8d01:	00 00                	add    BYTE PTR [rax],al
    8d03:	00 0d 0b 30 00 00    	add    BYTE PTR [rip+0x300b],cl        # bd14 <_end+0x5cfc>
    8d09:	0c 35                	or     al,0x35
    8d0b:	23 00                	and    eax,DWORD PTR [rax]
    8d0d:	00 2c d8             	add    BYTE PTR [rax+rbx*8],ch
    8d10:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8d13:	00 00                	add    BYTE PTR [rax],al
    8d15:	75 37                	jne    8d4e <_end+0x2d36>
    8d17:	00 00                	add    BYTE PTR [rax],al
    8d19:	01 0b                	add    DWORD PTR [rbx],ecx
    8d1b:	30 00                	xor    BYTE PTR [rax],al
    8d1d:	00 01                	add    BYTE PTR [rcx],al
    8d1f:	0b 30                	or     esi,DWORD PTR [rax]
    8d21:	00 00                	add    BYTE PTR [rax],al
    8d23:	00 0e                	add    BYTE PTR [rsi],cl
    8d25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8d26:	29 00                	sub    DWORD PTR [rax],eax
    8d28:	00 2c 92             	add    BYTE PTR [rdx+rdx*4],ch
    8d2b:	01 0f                	add    DWORD PTR [rdi],ecx
    8d2d:	2e 00 00             	cs add BYTE PTR [rax],al
    8d30:	00 91 37 00 00 01    	add    BYTE PTR [rcx+0x1000037],dl
    8d36:	0b 30                	or     esi,DWORD PTR [rax]
    8d38:	00 00                	add    BYTE PTR [rax],al
    8d3a:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    8d40:	0d f3 2e 00 00       	or     eax,0x2ef3
    8d45:	0e                   	(bad)
    8d46:	75 29                	jne    8d71 <_end+0x2d59>
    8d48:	00 00                	add    BYTE PTR [rax],al
    8d4a:	2c 97                	sub    al,0x97
    8d4c:	01 0e                	add    DWORD PTR [rsi],ecx
    8d4e:	35 00 00 00 b2       	xor    eax,0xb2000000
    8d53:	37                   	(bad)
    8d54:	00 00                	add    BYTE PTR [rax],al
    8d56:	01 0b                	add    DWORD PTR [rbx],ecx
    8d58:	30 00                	xor    BYTE PTR [rax],al
    8d5a:	00 01                	add    BYTE PTR [rcx],al
    8d5c:	91                   	xchg   ecx,eax
    8d5d:	37                   	(bad)
    8d5e:	00 00                	add    BYTE PTR [rax],al
    8d60:	00 0c bd 29 00 00 2c 	add    BYTE PTR [rdi*4+0x2c000029],cl
    8d67:	f2 11 f3             	repnz adc ebx,esi
    8d6a:	2e 00 00             	cs add BYTE PTR [rax],al
    8d6d:	d2 37                	shl    BYTE PTR [rdi],cl
    8d6f:	00 00                	add    BYTE PTR [rax],al
    8d71:	01 f3                	add    ebx,esi
    8d73:	2e 00 00             	cs add BYTE PTR [rax],al
    8d76:	01 0b                	add    DWORD PTR [rbx],ecx
    8d78:	30 00                	xor    BYTE PTR [rax],al
    8d7a:	00 01                	add    BYTE PTR [rcx],al
    8d7c:	91                   	xchg   ecx,eax
    8d7d:	37                   	(bad)
    8d7e:	00 00                	add    BYTE PTR [rax],al
    8d80:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    8d83:	1b 00                	sbb    eax,DWORD PTR [rax]
    8d85:	00 2c f4             	add    BYTE PTR [rsp+rsi*8],ch
    8d88:	01 11                	add    DWORD PTR [rcx],edx
    8d8a:	9e                   	sahf
    8d8b:	1b 00                	sbb    eax,DWORD PTR [rax]
    8d8d:	00 b2 21 00 00 f7    	add    BYTE PTR [rdx-0x8ffffdf],dh
    8d93:	37                   	(bad)
    8d94:	00 00                	add    BYTE PTR [rax],al
    8d96:	01 0b                	add    DWORD PTR [rbx],ecx
    8d98:	30 00                	xor    BYTE PTR [rax],al
    8d9a:	00 01                	add    BYTE PTR [rcx],al
    8d9c:	91                   	xchg   ecx,eax
    8d9d:	37                   	(bad)
    8d9e:	00 00                	add    BYTE PTR [rax],al
    8da0:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8da6:	04 cd                	add    al,0xcd
    8da8:	0e                   	(bad)
    8da9:	00 00                	add    BYTE PTR [rax],al
    8dab:	2c f7                	sub    al,0xf7
    8dad:	01 1a                	add    DWORD PTR [rdx],ebx
    8daf:	c4                   	(bad)
    8db0:	0e                   	(bad)
    8db1:	00 00                	add    BYTE PTR [rax],al
    8db3:	8a 21                	mov    ah,BYTE PTR [rcx]
    8db5:	00 00                	add    BYTE PTR [rax],al
    8db7:	1c 38                	sbb    al,0x38
    8db9:	00 00                	add    BYTE PTR [rax],al
    8dbb:	01 0b                	add    DWORD PTR [rbx],ecx
    8dbd:	30 00                	xor    BYTE PTR [rax],al
    8dbf:	00 01                	add    BYTE PTR [rcx],al
    8dc1:	91                   	xchg   ecx,eax
    8dc2:	37                   	(bad)
    8dc3:	00 00                	add    BYTE PTR [rax],al
    8dc5:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8dcb:	0c 7e                	or     al,0x7e
    8dcd:	10 00                	adc    BYTE PTR [rax],al
    8dcf:	00 2c 9f             	add    BYTE PTR [rdi+rbx*4],ch
    8dd2:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8dd5:	00 00                	add    BYTE PTR [rax],al
    8dd7:	3c 38                	cmp    al,0x38
    8dd9:	00 00                	add    BYTE PTR [rax],al
    8ddb:	01 f3                	add    ebx,esi
    8ddd:	2e 00 00             	cs add BYTE PTR [rax],al
    8de0:	01 0b                	add    DWORD PTR [rbx],ecx
    8de2:	30 00                	xor    BYTE PTR [rax],al
    8de4:	00 01                	add    BYTE PTR [rcx],al
    8de6:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8de9:	00 00                	add    BYTE PTR [rax],al
    8deb:	0e                   	(bad)
    8dec:	92                   	xchg   edx,eax
    8ded:	22 00                	and    al,BYTE PTR [rax]
    8def:	00 2c 5d 01 01 a6 21 	add    BYTE PTR [rbx*2+0x21a60101],ch
    8df6:	00 00                	add    BYTE PTR [rax],al
    8df8:	53                   	push   rbx
    8df9:	38 00                	cmp    BYTE PTR [rax],al
    8dfb:	00 01                	add    BYTE PTR [rcx],al
    8dfd:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8e00:	00 00                	add    BYTE PTR [rax],al
    8e02:	0e                   	(bad)
    8e03:	ac                   	lods   al,BYTE PTR ds:[rsi]
    8e04:	1c 00                	sbb    al,0x0
    8e06:	00 2c 1b             	add    BYTE PTR [rbx+rbx*1],ch
    8e09:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    8e0c:	21 00                	and    DWORD PTR [rax],eax
    8e0e:	00 74 38 00          	add    BYTE PTR [rax+rdi*1+0x0],dh
    8e12:	00 01                	add    BYTE PTR [rcx],al
    8e14:	0b 30                	or     esi,DWORD PTR [rax]
    8e16:	00 00                	add    BYTE PTR [rax],al
    8e18:	01 0b                	add    DWORD PTR [rbx],ecx
    8e1a:	30 00                	xor    BYTE PTR [rax],al
    8e1c:	00 01                	add    BYTE PTR [rcx],al
    8e1e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e21:	00 00                	add    BYTE PTR [rax],al
    8e23:	0c 44                	or     al,0x44
    8e25:	21 00                	and    DWORD PTR [rax],eax
    8e27:	00 2d 18 01 f3 2e    	add    BYTE PTR [rip+0x2ef30118],ch        # 2ef38f45 <_end+0x2ef32f2d>
    8e2d:	00 00                	add    BYTE PTR [rax],al
    8e2f:	94                   	xchg   esp,eax
    8e30:	38 00                	cmp    BYTE PTR [rax],al
    8e32:	00 01                	add    BYTE PTR [rcx],al
    8e34:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8e38:	01 0b                	add    DWORD PTR [rbx],ecx
    8e3a:	30 00                	xor    BYTE PTR [rax],al
    8e3c:	00 01                	add    BYTE PTR [rcx],al
    8e3e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e41:	00 00                	add    BYTE PTR [rax],al
    8e43:	0c 69                	or     al,0x69
    8e45:	17                   	(bad)
    8e46:	00 00                	add    BYTE PTR [rax],al
    8e48:	2d 21 01 f3 2e       	sub    eax,0x2ef30121
    8e4d:	00 00                	add    BYTE PTR [rax],al
    8e4f:	b4 38                	mov    ah,0x38
    8e51:	00 00                	add    BYTE PTR [rax],al
    8e53:	01 f3                	add    ebx,esi
    8e55:	2e 00 00             	cs add BYTE PTR [rax],al
    8e58:	01 0b                	add    DWORD PTR [rbx],ecx
    8e5a:	30 00                	xor    BYTE PTR [rax],al
    8e5c:	00 01                	add    BYTE PTR [rcx],al
    8e5e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e61:	00 00                	add    BYTE PTR [rax],al
    8e63:	0c fd                	or     al,0xfd
    8e65:	17                   	(bad)
    8e66:	00 00                	add    BYTE PTR [rax],al
    8e68:	2d 34 01 f3 2e       	sub    eax,0x2ef30134
    8e6d:	00 00                	add    BYTE PTR [rax],al
    8e6f:	d4                   	(bad)
    8e70:	38 00                	cmp    BYTE PTR [rax],al
    8e72:	00 01                	add    BYTE PTR [rcx],al
    8e74:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8e78:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8e7f:	23 00                	and    eax,DWORD PTR [rax]
    8e81:	00 00                	add    BYTE PTR [rax],al
    8e83:	0c f3                	or     al,0xf3
    8e85:	22 00                	and    al,BYTE PTR [rax]
    8e87:	00 2d b2 01 a6 21    	add    BYTE PTR [rip+0x21a601b2],ch        # 21a6903f <_end+0x21a63027>
    8e8d:	00 00                	add    BYTE PTR [rax],al
    8e8f:	eb 38                	jmp    8ec9 <_end+0x2eb1>
    8e91:	00 00                	add    BYTE PTR [rax],al
    8e93:	01 0b                	add    DWORD PTR [rbx],ecx
    8e95:	30 00                	xor    BYTE PTR [rax],al
    8e97:	00 21                	add    BYTE PTR [rcx],ah
    8e99:	00 04 ef             	add    BYTE PTR [rdi+rbp*8],al
    8e9c:	16                   	(bad)
    8e9d:	00 00                	add    BYTE PTR [rax],al
    8e9f:	2c 1f                	sub    al,0x1f
    8ea1:	03 0c e6             	add    ecx,DWORD PTR [rsi+riz*8]
    8ea4:	16                   	(bad)
    8ea5:	00 00                	add    BYTE PTR [rax],al
    8ea7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8ea8:	21 00                	and    DWORD PTR [rax],eax
    8eaa:	00 07                	add    BYTE PTR [rdi],al
    8eac:	39 00                	cmp    DWORD PTR [rax],eax
    8eae:	00 01                	add    BYTE PTR [rcx],al
    8eb0:	0b 30                	or     esi,DWORD PTR [rax]
    8eb2:	00 00                	add    BYTE PTR [rax],al
    8eb4:	21 00                	and    DWORD PTR [rax],eax
    8eb6:	0f 4e 13             	cmovle edx,DWORD PTR [rbx]
    8eb9:	00 00                	add    BYTE PTR [rax],al
    8ebb:	2c ba                	sub    al,0xba
    8ebd:	1d 4e 13 00 00       	sbb    eax,0x134e
    8ec2:	0b 30                	or     esi,DWORD PTR [rax]
    8ec4:	00 00                	add    BYTE PTR [rax],al
    8ec6:	26 39 00             	es cmp DWORD PTR [rax],eax
    8ec9:	00 01                	add    BYTE PTR [rcx],al
    8ecb:	0b 30                	or     esi,DWORD PTR [rax]
    8ecd:	00 00                	add    BYTE PTR [rax],al
    8ecf:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8ed6:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    8ed9:	00 2c b8             	add    BYTE PTR [rax+rdi*4],ch
    8edc:	17                   	(bad)
    8edd:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    8ee0:	00 f3                	add    bl,dh
    8ee2:	2e 00 00             	cs add BYTE PTR [rax],al
    8ee5:	45 39 00             	cmp    DWORD PTR [r8],r8d
    8ee8:	00 01                	add    BYTE PTR [rcx],al
    8eea:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8eee:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8ef5:	4d 16                	rex.WRB (bad)
    8ef7:	00 00                	add    BYTE PTR [rax],al
    8ef9:	2c de                	sub    al,0xde
    8efb:	1d 4d 16 00 00       	sbb    eax,0x164d
    8f00:	0b 30                	or     esi,DWORD PTR [rax]
    8f02:	00 00                	add    BYTE PTR [rax],al
    8f04:	64 39 00             	cmp    DWORD PTR fs:[rax],eax
    8f07:	00 01                	add    BYTE PTR [rcx],al
    8f09:	0b 30                	or     esi,DWORD PTR [rax]
    8f0b:	00 00                	add    BYTE PTR [rax],al
    8f0d:	01 0b                	add    DWORD PTR [rbx],ecx
    8f0f:	30 00                	xor    BYTE PTR [rax],al
    8f11:	00 00                	add    BYTE PTR [rax],al
    8f13:	0f 4d 16             	cmovge edx,DWORD PTR [rsi]
    8f16:	00 00                	add    BYTE PTR [rax],al
    8f18:	2c dc                	sub    al,0xdc
    8f1a:	17                   	(bad)
    8f1b:	4d 16                	rex.WRB (bad)
    8f1d:	00 00                	add    BYTE PTR [rax],al
    8f1f:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8f23:	83 39 00             	cmp    DWORD PTR [rcx],0x0
    8f26:	00 01                	add    BYTE PTR [rcx],al
    8f28:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8f2c:	01 0b                	add    DWORD PTR [rbx],ecx
    8f2e:	30 00                	xor    BYTE PTR [rax],al
    8f30:	00 00                	add    BYTE PTR [rax],al
    8f32:	0f 71                	psrlw  (bad),0x71
    8f34:	12 00                	adc    al,BYTE PTR [rax]
    8f36:	00 2c c4             	add    BYTE PTR [rsp+rax*8],ch
    8f39:	1d 71 12 00 00       	sbb    eax,0x1271
    8f3e:	0b 30                	or     esi,DWORD PTR [rax]
    8f40:	00 00                	add    BYTE PTR [rax],al
    8f42:	a2 39 00 00 01 0b 30 	movabs ds:0x300b01000039,al
    8f49:	00 00 
    8f4b:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8f52:	71 12                	jno    8f66 <_end+0x2f4e>
    8f54:	00 00                	add    BYTE PTR [rax],al
    8f56:	2c c2                	sub    al,0xc2
    8f58:	17                   	(bad)
    8f59:	71 12                	jno    8f6d <_end+0x2f55>
    8f5b:	00 00                	add    BYTE PTR [rax],al
    8f5d:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8f61:	c1 39 00             	sar    DWORD PTR [rcx],0x0
    8f64:	00 01                	add    BYTE PTR [rcx],al
    8f66:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8f6a:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    8f71:	ed                   	in     eax,dx
    8f72:	27                   	(bad)
    8f73:	00 00                	add    BYTE PTR [rax],al
    8f75:	2c e9                	sub    al,0xe9
    8f77:	1d ed 27 00 00       	sbb    eax,0x27ed
    8f7c:	0b 30                	or     esi,DWORD PTR [rax]
    8f7e:	00 00                	add    BYTE PTR [rax],al
    8f80:	e0 39                	loopne 8fbb <_end+0x2fa3>
    8f82:	00 00                	add    BYTE PTR [rax],al
    8f84:	01 0b                	add    DWORD PTR [rbx],ecx
    8f86:	30 00                	xor    BYTE PTR [rax],al
    8f88:	00 01                	add    BYTE PTR [rcx],al
    8f8a:	0b 30                	or     esi,DWORD PTR [rax]
    8f8c:	00 00                	add    BYTE PTR [rax],al
    8f8e:	00 0f                	add    BYTE PTR [rdi],cl
    8f90:	ed                   	in     eax,dx
    8f91:	27                   	(bad)
    8f92:	00 00                	add    BYTE PTR [rax],al
    8f94:	2c e7                	sub    al,0xe7
    8f96:	17                   	(bad)
    8f97:	ed                   	in     eax,dx
    8f98:	27                   	(bad)
    8f99:	00 00                	add    BYTE PTR [rax],al
    8f9b:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8f9f:	ff                   	(bad)
    8fa0:	39 00                	cmp    DWORD PTR [rax],eax
    8fa2:	00 01                	add    BYTE PTR [rcx],al
    8fa4:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8fa8:	01 0b                	add    DWORD PTR [rbx],ecx
    8faa:	30 00                	xor    BYTE PTR [rax],al
    8fac:	00 00                	add    BYTE PTR [rax],al
    8fae:	04 89                	add    al,0x89
    8fb0:	15 00 00 2c 12       	adc    eax,0x122c0000
    8fb5:	01 1d 89 15 00 00    	add    DWORD PTR [rip+0x1589],ebx        # a544 <_end+0x452c>
    8fbb:	0b 30                	or     esi,DWORD PTR [rax]
    8fbd:	00 00                	add    BYTE PTR [rax],al
    8fbf:	24 3a                	and    al,0x3a
    8fc1:	00 00                	add    BYTE PTR [rax],al
    8fc3:	01 0b                	add    DWORD PTR [rbx],ecx
    8fc5:	30 00                	xor    BYTE PTR [rax],al
    8fc7:	00 01                	add    BYTE PTR [rcx],al
    8fc9:	9c                   	pushf
    8fca:	24 00                	and    al,0x0
    8fcc:	00 01                	add    BYTE PTR [rcx],al
    8fce:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fd1:	00 00                	add    BYTE PTR [rax],al
    8fd3:	04 89                	add    al,0x89
    8fd5:	15 00 00 2c 10       	adc    eax,0x102c0000
    8fda:	01 17                	add    DWORD PTR [rdi],edx
    8fdc:	89 15 00 00 f3 2e    	mov    DWORD PTR [rip+0x2ef30000],edx        # 2ef38fe2 <_end+0x2ef32fca>
    8fe2:	00 00                	add    BYTE PTR [rax],al
    8fe4:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    8fe7:	00 01                	add    BYTE PTR [rcx],al
    8fe9:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8fed:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    8ff4:	23 00                	and    eax,DWORD PTR [rax]
    8ff6:	00 00                	add    BYTE PTR [rax],al
    8ff8:	0e                   	(bad)
    8ff9:	51                   	push   rcx
    8ffa:	27                   	(bad)
    8ffb:	00 00                	add    BYTE PTR [rax],al
    8ffd:	2c 99                	sub    al,0x99
    8fff:	01 14 c5 21 00 00 65 	add    DWORD PTR [rax*8+0x65000021],edx
    9006:	3a 00                	cmp    al,BYTE PTR [rax]
    9008:	00 01                	add    BYTE PTR [rcx],al
    900a:	0b 30                	or     esi,DWORD PTR [rax]
    900c:	00 00                	add    BYTE PTR [rax],al
    900e:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    9014:	04 c6                	add    al,0xc6
    9016:	1d 00 00 2c fc       	sbb    eax,0xfc2c0000
    901b:	01 16                	add    DWORD PTR [rsi],edx
    901d:	bd 1d 00 00 be       	mov    ebp,0xbe00001d
    9022:	21 00                	and    DWORD PTR [rax],eax
    9024:	00 8a 3a 00 00 01    	add    BYTE PTR [rdx+0x100003a],cl
    902a:	0b 30                	or     esi,DWORD PTR [rax]
    902c:	00 00                	add    BYTE PTR [rax],al
    902e:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    9034:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9035:	21 00                	and    DWORD PTR [rax],eax
    9037:	00 00                	add    BYTE PTR [rax],al
    9039:	04 58                	add    al,0x58
    903b:	32 00                	xor    al,BYTE PTR [rax]
    903d:	00 2c 01             	add    BYTE PTR [rcx+rax*1],ch
    9040:	02 1f                	add    bl,BYTE PTR [rdi]
    9042:	4f 32 00             	rex.WRXB xor r8b,BYTE PTR [r8]
    9045:	00 91 21 00 00 af    	add    BYTE PTR [rcx-0x50ffffdf],dl
    904b:	3a 00                	cmp    al,BYTE PTR [rax]
    904d:	00 01                	add    BYTE PTR [rcx],al
    904f:	0b 30                	or     esi,DWORD PTR [rax]
    9051:	00 00                	add    BYTE PTR [rax],al
    9053:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    9059:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    905a:	21 00                	and    DWORD PTR [rax],eax
    905c:	00 00                	add    BYTE PTR [rax],al
    905e:	1b 4f 30             	sbb    ecx,DWORD PTR [rdi+0x30]
    9061:	00 00                	add    BYTE PTR [rax],al
    9063:	60                   	(bad)
    9064:	2f                   	(bad)
    9065:	33 08                	xor    ecx,DWORD PTR [rax]
    9067:	f5                   	cmc
    9068:	3b 00                	cmp    eax,DWORD PTR [rax]
    906a:	00 06                	add    BYTE PTR [rsi],al
    906c:	7d 12                	jge    9080 <_end+0x3068>
    906e:	00 00                	add    BYTE PTR [rax],al
    9070:	2f                   	(bad)
    9071:	37                   	(bad)
    9072:	09 e2                	or     edx,esp
    9074:	22 00                	and    al,BYTE PTR [rax]
    9076:	00 00                	add    BYTE PTR [rax],al
    9078:	06                   	(bad)
    9079:	49 18 00             	rex.WB sbb BYTE PTR [r8],al
    907c:	00 2f                	add    BYTE PTR [rdi],ch
    907e:	38 09                	cmp    BYTE PTR [rcx],cl
    9080:	e2 22                	loop   90a4 <_end+0x308c>
    9082:	00 00                	add    BYTE PTR [rax],al
    9084:	08 06                	or     BYTE PTR [rsi],al
    9086:	e1 2e                	loope  90b6 <_end+0x309e>
    9088:	00 00                	add    BYTE PTR [rax],al
    908a:	2f                   	(bad)
    908b:	3e 09 e2             	ds or  edx,esp
    908e:	22 00                	and    al,BYTE PTR [rax]
    9090:	00 10                	add    BYTE PTR [rax],dl
    9092:	06                   	(bad)
    9093:	55                   	push   rbp
    9094:	0f 00 00             	sldt   WORD PTR [rax]
    9097:	2f                   	(bad)
    9098:	44 09 e2             	or     edx,r12d
    909b:	22 00                	and    al,BYTE PTR [rax]
    909d:	00 18                	add    BYTE PTR [rax],bl
    909f:	06                   	(bad)
    90a0:	e7 2d                	out    0x2d,eax
    90a2:	00 00                	add    BYTE PTR [rax],al
    90a4:	2f                   	(bad)
    90a5:	45 09 e2             	or     r10d,r12d
    90a8:	22 00                	and    al,BYTE PTR [rax]
    90aa:	00 20                	add    BYTE PTR [rax],ah
    90ac:	06                   	(bad)
    90ad:	79 12                	jns    90c1 <_end+0x30a9>
    90af:	00 00                	add    BYTE PTR [rax],al
    90b1:	2f                   	(bad)
    90b2:	46 09 e2             	rex.RX or edx,r12d
    90b5:	22 00                	and    al,BYTE PTR [rax]
    90b7:	00 28                	add    BYTE PTR [rax],ch
    90b9:	06                   	(bad)
    90ba:	45 18 00             	sbb    BYTE PTR [r8],r8b
    90bd:	00 2f                	add    BYTE PTR [rdi],ch
    90bf:	47 09 e2             	rex.RXB or r10d,r12d
    90c2:	22 00                	and    al,BYTE PTR [rax]
    90c4:	00 30                	add    BYTE PTR [rax],dh
    90c6:	06                   	(bad)
    90c7:	dd 2e                	(bad)  [rsi]
    90c9:	00 00                	add    BYTE PTR [rax],al
    90cb:	2f                   	(bad)
    90cc:	48 09 e2             	or     rdx,rsp
    90cf:	22 00                	and    al,BYTE PTR [rax]
    90d1:	00 38                	add    BYTE PTR [rax],bh
    90d3:	06                   	(bad)
    90d4:	aa                   	stos   BYTE PTR es:[rdi],al
    90d5:	11 00                	adc    DWORD PTR [rax],eax
    90d7:	00 2f                	add    BYTE PTR [rdi],ch
    90d9:	49 09 e2             	or     r10,rsp
    90dc:	22 00                	and    al,BYTE PTR [rax]
    90de:	00 40 06             	add    BYTE PTR [rax+0x6],al
    90e1:	e5 18                	in     eax,0x18
    90e3:	00 00                	add    BYTE PTR [rax],al
    90e5:	2f                   	(bad)
    90e6:	4a 09 e2             	rex.WX or rdx,rsp
    90e9:	22 00                	and    al,BYTE PTR [rax]
    90eb:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    90ee:	86 10                	xchg   BYTE PTR [rax],dl
    90f0:	00 00                	add    BYTE PTR [rax],al
    90f2:	2f                   	(bad)
    90f3:	4b 08 e7             	rex.WXB or r15b,spl
    90f6:	22 00                	and    al,BYTE PTR [rax]
    90f8:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    90fb:	8a 10                	mov    dl,BYTE PTR [rax]
    90fd:	00 00                	add    BYTE PTR [rax],al
    90ff:	2f                   	(bad)
    9100:	4c 08 e7             	rex.WR or dil,r12b
    9103:	22 00                	and    al,BYTE PTR [rax]
    9105:	00 51 06             	add    BYTE PTR [rcx+0x6],dl
    9108:	13 19                	adc    ebx,DWORD PTR [rcx]
    910a:	00 00                	add    BYTE PTR [rax],al
    910c:	2f                   	(bad)
    910d:	4e 08 e7             	rex.WRX or dil,r12b
    9110:	22 00                	and    al,BYTE PTR [rax]
    9112:	00 52 06             	add    BYTE PTR [rdx+0x6],dl
    9115:	5d                   	pop    rbp
    9116:	27                   	(bad)
    9117:	00 00                	add    BYTE PTR [rax],al
    9119:	2f                   	(bad)
    911a:	50                   	push   rax
    911b:	08 e7                	or     bh,ah
    911d:	22 00                	and    al,BYTE PTR [rax]
    911f:	00 53 06             	add    BYTE PTR [rbx+0x6],dl
    9122:	40 13 00             	rex adc eax,DWORD PTR [rax]
    9125:	00 2f                	add    BYTE PTR [rdi],ch
    9127:	52                   	push   rdx
    9128:	08 e7                	or     bh,ah
    912a:	22 00                	and    al,BYTE PTR [rax]
    912c:	00 54 06 e2          	add    BYTE PTR [rsi+rax*1-0x1e],dl
    9130:	1f                   	(bad)
    9131:	00 00                	add    BYTE PTR [rax],al
    9133:	2f                   	(bad)
    9134:	54                   	push   rsp
    9135:	08 e7                	or     bh,ah
    9137:	22 00                	and    al,BYTE PTR [rax]
    9139:	00 55 06             	add    BYTE PTR [rbp+0x6],dl
    913c:	af                   	scas   eax,DWORD PTR es:[rdi]
    913d:	2f                   	(bad)
    913e:	00 00                	add    BYTE PTR [rax],al
    9140:	2f                   	(bad)
    9141:	5b                   	pop    rbx
    9142:	08 e7                	or     bh,ah
    9144:	22 00                	and    al,BYTE PTR [rax]
    9146:	00 56 06             	add    BYTE PTR [rsi+0x6],dl
    9149:	ed                   	in     eax,dx
    914a:	30 00                	xor    BYTE PTR [rax],al
    914c:	00 2f                	add    BYTE PTR [rdi],ch
    914e:	5c                   	pop    rsp
    914f:	08 e7                	or     bh,ah
    9151:	22 00                	and    al,BYTE PTR [rax]
    9153:	00 57 06             	add    BYTE PTR [rdi+0x6],dl
    9156:	0f 19 00             	nop    DWORD PTR [rax]
    9159:	00 2f                	add    BYTE PTR [rdi],ch
    915b:	5f                   	pop    rdi
    915c:	08 e7                	or     bh,ah
    915e:	22 00                	and    al,BYTE PTR [rax]
    9160:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    9163:	59                   	pop    rcx
    9164:	27                   	(bad)
    9165:	00 00                	add    BYTE PTR [rax],al
    9167:	2f                   	(bad)
    9168:	61                   	(bad)
    9169:	08 e7                	or     bh,ah
    916b:	22 00                	and    al,BYTE PTR [rax]
    916d:	00 59 06             	add    BYTE PTR [rcx+0x6],bl
    9170:	3c 13                	cmp    al,0x13
    9172:	00 00                	add    BYTE PTR [rax],al
    9174:	2f                   	(bad)
    9175:	63 08                	movsxd ecx,DWORD PTR [rax]
    9177:	e7 22                	out    0x22,eax
    9179:	00 00                	add    BYTE PTR [rax],al
    917b:	5a                   	pop    rdx
    917c:	06                   	(bad)
    917d:	de 1f                	ficomp WORD PTR [rdi]
    917f:	00 00                	add    BYTE PTR [rax],al
    9181:	2f                   	(bad)
    9182:	65 08 e7             	gs or  bh,ah
    9185:	22 00                	and    al,BYTE PTR [rax]
    9187:	00 5b 06             	add    BYTE PTR [rbx+0x6],bl
    918a:	ab                   	stos   DWORD PTR es:[rdi],eax
    918b:	2f                   	(bad)
    918c:	00 00                	add    BYTE PTR [rax],al
    918e:	2f                   	(bad)
    918f:	6c                   	ins    BYTE PTR es:[rdi],dx
    9190:	08 e7                	or     bh,ah
    9192:	22 00                	and    al,BYTE PTR [rax]
    9194:	00 5c 06 e9          	add    BYTE PTR [rsi+rax*1-0x17],bl
    9198:	30 00                	xor    BYTE PTR [rax],al
    919a:	00 2f                	add    BYTE PTR [rdi],ch
    919c:	6d                   	ins    DWORD PTR es:[rdi],dx
    919d:	08 e7                	or     bh,ah
    919f:	22 00                	and    al,BYTE PTR [rax]
    91a1:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    91a4:	0c 44                	or     al,0x44
    91a6:	2a 00                	sub    al,BYTE PTR [rax]
    91a8:	00 2f                	add    BYTE PTR [rdi],ch
    91aa:	7a 0e                	jp     91ba <_end+0x31a2>
    91ac:	e2 22                	loop   91d0 <_end+0x31b8>
    91ae:	00 00                	add    BYTE PTR [rax],al
    91b0:	10 3c 00             	adc    BYTE PTR [rax+rax*1],bh
    91b3:	00 01                	add    BYTE PTR [rcx],al
    91b5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91b6:	21 00                	and    DWORD PTR [rax],eax
    91b8:	00 01                	add    BYTE PTR [rcx],al
    91ba:	d3 23                	shl    DWORD PTR [rbx],cl
    91bc:	00 00                	add    BYTE PTR [rax],al
    91be:	00 37                	add    BYTE PTR [rdi],dh
    91c0:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    91c2:	00 00                	add    BYTE PTR [rax],al
    91c4:	2f                   	(bad)
    91c5:	7d 16                	jge    91dd <_end+0x31c5>
    91c7:	1c 3c                	sbb    al,0x3c
    91c9:	00 00                	add    BYTE PTR [rax],al
    91cb:	0d af 3a 00 00       	or     eax,0x3aaf
    91d0:	28 d1                	sub    cl,dl
    91d2:	10 00                	adc    BYTE PTR [rax],al
    91d4:	00 22                	add    BYTE PTR [rdx],ah
    91d6:	5c                   	pop    rsp
    91d7:	03 33                	add    esi,DWORD PTR [rbx]
    91d9:	3c 00                	cmp    al,0x0
    91db:	00 01                	add    BYTE PTR [rcx],al
    91dd:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    91e0:	00 00                	add    BYTE PTR [rax],al
    91e2:	0c 82                	or     al,0x82
    91e4:	15 00 00 22 b8       	adc    eax,0xb8220000
    91e9:	0c a6                	or     al,0xa6
    91eb:	21 00                	and    DWORD PTR [rax],eax
    91ed:	00 49 3c             	add    BYTE PTR [rcx+0x3c],cl
    91f0:	00 00                	add    BYTE PTR [rax],al
    91f2:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    91f8:	0e                   	(bad)
    91f9:	42 25 00 00 22 5e    	rex.X and eax,0x5e220000
    91ff:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    9202:	21 00                	and    DWORD PTR [rax],eax
    9204:	00 60 3c             	add    BYTE PTR [rax+0x3c],ah
    9207:	00 00                	add    BYTE PTR [rax],al
    9209:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    920f:	0e                   	(bad)
    9210:	e0 2d                	loopne 923f <_end+0x3227>
    9212:	00 00                	add    BYTE PTR [rax],al
    9214:	22 60 03             	and    ah,BYTE PTR [rax+0x3]
    9217:	0c a6                	or     al,0xa6
    9219:	21 00                	and    DWORD PTR [rax],eax
    921b:	00 77 3c             	add    BYTE PTR [rdi+0x3c],dh
    921e:	00 00                	add    BYTE PTR [rax],al
    9220:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9226:	0c fb                	or     al,0xfb
    9228:	33 00                	xor    eax,DWORD PTR [rax]
    922a:	00 22                	add    BYTE PTR [rdx],ah
    922c:	ec                   	in     al,dx
    922d:	0c a6                	or     al,0xa6
    922f:	21 00                	and    DWORD PTR [rax],eax
    9231:	00 8d 3c 00 00 01    	add    BYTE PTR [rbp+0x100003c],cl
    9237:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    923a:	00 00                	add    BYTE PTR [rax],al
    923c:	0e                   	(bad)
    923d:	db 0b                	fisttp DWORD PTR [rbx]
    923f:	00 00                	add    BYTE PTR [rax],al
    9241:	22 3f                	and    bh,BYTE PTR [rdi]
    9243:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    9246:	21 00                	and    DWORD PTR [rax],eax
    9248:	00 a4 3c 00 00 01 8e 	add    BYTE PTR [rsp+rdi*1-0x71ff0000],ah
    924f:	2c 00                	sub    al,0x0
    9251:	00 00                	add    BYTE PTR [rax],al
    9253:	0e                   	(bad)
    9254:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9255:	10 00                	adc    BYTE PTR [rax],al
    9257:	00 22                	add    BYTE PTR [rdx],ah
    9259:	3d 03 0c a6 21       	cmp    eax,0x21a60c03
    925e:	00 00                	add    BYTE PTR [rax],al
    9260:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    9264:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    926a:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    926e:	00 0d 7d 2c 00 00    	add    BYTE PTR [rip+0x2c7d],cl        # bef1 <_end+0x5ed9>
    9274:	0c 45                	or     al,0x45
    9276:	0c 00                	or     al,0x0
    9278:	00 02                	add    BYTE PTR [rdx],al
    927a:	c4 01 e2 22          	(bad)
    927e:	00 00                	add    BYTE PTR [rax],al
    9280:	e5 3c                	in     eax,0x3c
    9282:	00 00                	add    BYTE PTR [rax],al
    9284:	01 e2                	add    edx,esp
    9286:	22 00                	and    al,BYTE PTR [rax]
    9288:	00 01                	add    BYTE PTR [rcx],al
    928a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    928b:	21 00                	and    DWORD PTR [rax],eax
    928d:	00 01                	add    BYTE PTR [rcx],al
    928f:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9292:	00 00                	add    BYTE PTR [rax],al
    9294:	0e                   	(bad)
    9295:	9d                   	popf
    9296:	2b 00                	sub    eax,DWORD PTR [rax]
    9298:	00 22                	add    BYTE PTR [rdx],ah
    929a:	08 01                	or     BYTE PTR [rcx],al
    929c:	0e                   	(bad)
    929d:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    92a0:	00 01                	add    BYTE PTR [rcx],al
    92a2:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    92a7:	23 00                	and    eax,DWORD PTR [rax]
    92a9:	00 01                	add    BYTE PTR [rcx],al
    92ab:	d3 23                	shl    DWORD PTR [rbx],cl
    92ad:	00 00                	add    BYTE PTR [rax],al
    92af:	00 0c 61             	add    BYTE PTR [rcx+riz*2],cl
    92b2:	32 00                	xor    al,BYTE PTR [rax]
    92b4:	00 02                	add    BYTE PTR [rdx],al
    92b6:	cf                   	iret
    92b7:	01 2e                	add    DWORD PTR [rsi],ebp
    92b9:	23 00                	and    eax,DWORD PTR [rax]
    92bb:	00 26                	add    BYTE PTR [rsi],ah
    92bd:	3d 00 00 01 d4       	cmp    eax,0xd4010000
    92c2:	22 00                	and    al,BYTE PTR [rax]
    92c4:	00 01                	add    BYTE PTR [rcx],al
    92c6:	2e 23 00             	cs and eax,DWORD PTR [rax]
    92c9:	00 01                	add    BYTE PTR [rcx],al
    92cb:	2e 23 00             	cs and eax,DWORD PTR [rax]
    92ce:	00 01                	add    BYTE PTR [rcx],al
    92d0:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    92d3:	00 00                	add    BYTE PTR [rax],al
    92d5:	0e                   	(bad)
    92d6:	d0 2d 00 00 22 0f    	shr    BYTE PTR [rip+0xf220000],1        # f2292dc <_end+0xf2232c4>
    92dc:	01 0e                	add    DWORD PTR [rsi],ecx
    92de:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    92e1:	00 47 3d             	add    BYTE PTR [rdi+0x3d],al
    92e4:	00 00                	add    BYTE PTR [rax],al
    92e6:	01 d3                	add    ebx,edx
    92e8:	23 00                	and    eax,DWORD PTR [rax]
    92ea:	00 01                	add    BYTE PTR [rcx],al
    92ec:	d3 23                	shl    DWORD PTR [rbx],cl
    92ee:	00 00                	add    BYTE PTR [rax],al
    92f0:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    92f6:	0e                   	(bad)
    92f7:	3c 23                	cmp    al,0x23
    92f9:	00 00                	add    BYTE PTR [rax],al
    92fb:	22 0b                	and    cl,BYTE PTR [rbx]
    92fd:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    9300:	21 00                	and    DWORD PTR [rax],eax
    9302:	00 68 3d             	add    BYTE PTR [rax+0x3d],ch
    9305:	00 00                	add    BYTE PTR [rax],al
    9307:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    930d:	b2 21                	mov    dl,0x21
    930f:	00 00                	add    BYTE PTR [rax],al
    9311:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    9317:	0e                   	(bad)
    9318:	c1 1f 00             	rcr    DWORD PTR [rdi],0x0
    931b:	00 22                	add    BYTE PTR [rdx],ah
    931d:	43 03 0c a6          	add    ecx,DWORD PTR [r14+r12*4]
    9321:	21 00                	and    DWORD PTR [rax],eax
    9323:	00 84 3d 00 00 01 8e 	add    BYTE PTR [rbp+rdi*1-0x71ff0000],al
    932a:	2c 00                	sub    al,0x0
    932c:	00 01                	add    BYTE PTR [rcx],al
    932e:	84 3d 00 00 00 0d    	test   BYTE PTR [rip+0xd000000],bh        # d009334 <_end+0xd00331c>
    9334:	89 2c 00             	mov    DWORD PTR [rax+rax*1],ebp
    9337:	00 0e                	add    BYTE PTR [rsi],cl
    9339:	77 18                	ja     9353 <_end+0x333b>
    933b:	00 00                	add    BYTE PTR [rax],al
    933d:	22 11                	and    dl,BYTE PTR [rcx]
    933f:	03 11                	add    edx,DWORD PTR [rcx]
    9341:	b2 21                	mov    dl,0x21
    9343:	00 00                	add    BYTE PTR [rax],al
    9345:	a0 3d 00 00 01 8e 2c 	movabs al,ds:0x2c8e0100003d
    934c:	00 00 
    934e:	00 0e                	add    BYTE PTR [rsi],cl
    9350:	dc 0b                	fmul   QWORD PTR [rbx]
    9352:	00 00                	add    BYTE PTR [rax],al
    9354:	22 40 02             	and    al,BYTE PTR [rax+0x2]
    9357:	0c a6                	or     al,0xa6
    9359:	21 00                	and    DWORD PTR [rax],eax
    935b:	00 b7 3d 00 00 01    	add    BYTE PTR [rdi+0x100003d],dh
    9361:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9364:	00 00                	add    BYTE PTR [rax],al
    9366:	37                   	(bad)
    9367:	dd 24 00             	frstor [rax+rax*1]
    936a:	00 30                	add    BYTE PTR [rax],dh
    936c:	2f                   	(bad)
    936d:	01 a6 21 00 00 28    	add    DWORD PTR [rsi+0x28000021],esp
    9373:	24 23                	and    al,0x23
    9375:	00 00                	add    BYTE PTR [rax],al
    9377:	22 6e 03             	and    ch,BYTE PTR [rsi+0x3]
    937a:	d5 3d 00 00          	{rex2 0x3d} add BYTE PTR [r24],r8b
    937e:	01 d3                	add    ebx,edx
    9380:	23 00                	and    eax,DWORD PTR [rax]
    9382:	00 00                	add    BYTE PTR [rax],al
    9384:	0c c1                	or     al,0xc1
    9386:	14 00                	adc    al,0x0
    9388:	00 22                	add    BYTE PTR [rdx],ah
    938a:	9e                   	sahf
    938b:	0c a6                	or     al,0xa6
    938d:	21 00                	and    DWORD PTR [rax],eax
    938f:	00 eb                	add    bl,ch
    9391:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    9396:	23 00                	and    eax,DWORD PTR [rax]
    9398:	00 00                	add    BYTE PTR [rax],al
    939a:	0c cf                	or     al,0xcf
    939c:	23 00                	and    eax,DWORD PTR [rax]
    939e:	00 22                	add    BYTE PTR [rdx],ah
    93a0:	a0 0c a6 21 00 00 06 	movabs al,ds:0x3e06000021a60c
    93a7:	3e 00 
    93a9:	00 01                	add    BYTE PTR [rcx],al
    93ab:	d3 23                	shl    DWORD PTR [rbx],cl
    93ad:	00 00                	add    BYTE PTR [rax],al
    93af:	01 d3                	add    ebx,edx
    93b1:	23 00                	and    eax,DWORD PTR [rax]
    93b3:	00 00                	add    BYTE PTR [rax],al
    93b5:	28 ed                	sub    ch,ch
    93b7:	2b 00                	sub    eax,DWORD PTR [rax]
    93b9:	00 22                	add    BYTE PTR [rdx],ah
    93bb:	16                   	(bad)
    93bc:	03 18                	add    ebx,DWORD PTR [rax]
    93be:	3e 00 00             	ds add BYTE PTR [rax],al
    93c1:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    93c7:	28 3b                	sub    BYTE PTR [rbx],bh
    93c9:	25 00 00 22 4e       	and    eax,0x4e220000
    93ce:	01 2f                	add    DWORD PTR [rdi],ebp
    93d0:	3e 00 00             	ds add BYTE PTR [rax],al
    93d3:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    93d9:	e2 22                	loop   93fd <_end+0x33e5>
    93db:	00 00                	add    BYTE PTR [rax],al
    93dd:	00 0e                	add    BYTE PTR [rsi],cl
    93df:	49 23 00             	and    rax,QWORD PTR [r8]
    93e2:	00 22                	add    BYTE PTR [rdx],ah
    93e4:	53                   	push   rbx
    93e5:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    93e8:	21 00                	and    DWORD PTR [rax],eax
    93ea:	00 55 3e             	add    BYTE PTR [rbp+0x3e],dl
    93ed:	00 00                	add    BYTE PTR [rax],al
    93ef:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    93f5:	e2 22                	loop   9419 <_end+0x3401>
    93f7:	00 00                	add    BYTE PTR [rax],al
    93f9:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    93ff:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9402:	00 00                	add    BYTE PTR [rax],al
    9404:	37                   	(bad)
    9405:	95                   	xchg   ebp,eax
    9406:	2f                   	(bad)
    9407:	00 00                	add    BYTE PTR [rax],al
    9409:	22 c2                	and    al,dl
    940b:	0e                   	(bad)
    940c:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    940f:	00 0c 23             	add    BYTE PTR [rbx+riz*1],cl
    9412:	0f 00 00             	sldt   WORD PTR [rax]
    9415:	22 d3                	and    dl,bl
    9417:	0e                   	(bad)
    9418:	e2 22                	loop   943c <_end+0x3424>
    941a:	00 00                	add    BYTE PTR [rax],al
    941c:	77 3e                	ja     945c <_end+0x3444>
    941e:	00 00                	add    BYTE PTR [rax],al
    9420:	01 e2                	add    edx,esp
    9422:	22 00                	and    al,BYTE PTR [rax]
    9424:	00 00                	add    BYTE PTR [rax],al
    9426:	0e                   	(bad)
    9427:	ef                   	out    dx,eax
    9428:	2f                   	(bad)
    9429:	00 00                	add    BYTE PTR [rax],al
    942b:	22 db                	and    bl,bl
    942d:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    9430:	21 00                	and    DWORD PTR [rax],eax
    9432:	00 93 3e 00 00 01    	add    BYTE PTR [rbx+0x100003e],dl
    9438:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9439:	21 00                	and    DWORD PTR [rax],eax
    943b:	00 01                	add    BYTE PTR [rcx],al
    943d:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9440:	00 00                	add    BYTE PTR [rax],al
    9442:	0d 2e 00 00 00       	or     eax,0x2e
    9447:	33 ce                	xor    ecx,esi
    9449:	1b 00                	sbb    eax,DWORD PTR [rax]
    944b:	00 31                	add    BYTE PTR [rcx],dh
    944d:	0f 0b                	ud2
    944f:	b7 3e                	mov    bh,0x3e
    9451:	00 00                	add    BYTE PTR [rax],al
    9453:	83 01 70             	add    DWORD PTR [rcx],0x70
    9456:	13 00                	adc    eax,DWORD PTR [rax]
    9458:	00 31                	add    BYTE PTR [rcx],dh
    945a:	11 0b                	adc    DWORD PTR [rbx],ecx
    945c:	84 01                	test   BYTE PTR [rcx],al
    945e:	76 31                	jbe    9491 <_end+0x3479>
    9460:	00 31                	add    BYTE PTR [rcx],dh
    9462:	13 12                	adc    edx,DWORD PTR [rdx]
    9464:	00 00                	add    BYTE PTR [rax],al
    9466:	37                   	(bad)
    9467:	c3                   	ret
    9468:	10 00                	adc    BYTE PTR [rax],al
    946a:	00 32                	add    BYTE PTR [rdx],dh
    946c:	48 10 dd             	rex.W adc bpl,bl
    946f:	23 00                	and    eax,DWORD PTR [rax]
    9471:	00 0c 1b             	add    BYTE PTR [rbx+rbx*1],cl
    9474:	10 00                	adc    BYTE PTR [rax],al
    9476:	00 32                	add    BYTE PTR [rdx],dh
    9478:	4f 0f 2e 00          	rex.WRXB ucomiss xmm8,DWORD PTR [r8]
    947c:	00 00                	add    BYTE PTR [rax],al
    947e:	de 3e                	fidivr WORD PTR [rsi]
    9480:	00 00                	add    BYTE PTR [rax],al
    9482:	01 e9                	add    ecx,ebp
    9484:	23 00                	and    eax,DWORD PTR [rax]
    9486:	00 01                	add    BYTE PTR [rcx],al
    9488:	e9 23 00 00 00       	jmp    94b0 <_end+0x3498>
    948d:	0c 60                	or     al,0x60
    948f:	23 00                	and    eax,DWORD PTR [rax]
    9491:	00 32                	add    BYTE PTR [rdx],dh
    9493:	53                   	push   rbx
    9494:	0f e9 23             	psubsw mm4,QWORD PTR [rbx]
    9497:	00 00                	add    BYTE PTR [rax],al
    9499:	f4                   	hlt
    949a:	3e 00 00             	ds add BYTE PTR [rax],al
    949d:	01 f4                	add    esp,esi
    949f:	3e 00 00             	ds add BYTE PTR [rax],al
    94a2:	00 0d 17 36 00 00    	add    BYTE PTR [rip+0x3617],cl        # cabf <_end+0x6aa7>
    94a8:	0c a9                	or     al,0xa9
    94aa:	22 00                	and    al,BYTE PTR [rax]
    94ac:	00 32                	add    BYTE PTR [rdx],dh
    94ae:	4c 0f e9 23          	rex.WR psubsw mm4,QWORD PTR [rbx]
    94b2:	00 00                	add    BYTE PTR [rax],al
    94b4:	0f 3f                	(bad)
    94b6:	00 00                	add    BYTE PTR [rax],al
    94b8:	01 0f                	add    DWORD PTR [rdi],ecx
    94ba:	3f                   	(bad)
    94bb:	00 00                	add    BYTE PTR [rax],al
    94bd:	00 0d e9 23 00 00    	add    BYTE PTR [rip+0x23e9],cl        # b8ac <_end+0x5894>
    94c3:	0c fe                	or     al,0xfe
    94c5:	0d 00 00 32 b4       	or     eax,0xb4320000
    94ca:	0e                   	(bad)
    94cb:	e2 22                	loop   94ef <_end+0x34d7>
    94cd:	00 00                	add    BYTE PTR [rax],al
    94cf:	2a 3f                	sub    bh,BYTE PTR [rdi]
    94d1:	00 00                	add    BYTE PTR [rax],al
    94d3:	01 12                	add    DWORD PTR [rdx],edx
    94d5:	36 00 00             	ss add BYTE PTR [rax],al
    94d8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    94db:	0e                   	(bad)
    94dc:	00 00                	add    BYTE PTR [rax],al
    94de:	32 b8 0e e2 22 00    	xor    bh,BYTE PTR [rax+0x22e20e]
    94e4:	00 40 3f             	add    BYTE PTR [rax+0x3f],al
    94e7:	00 00                	add    BYTE PTR [rax],al
    94e9:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    94ec:	00 00                	add    BYTE PTR [rax],al
    94ee:	00 0d f5 23 00 00    	add    BYTE PTR [rip+0x23f5],cl        # b8e9 <_end+0x58d1>
    94f4:	0c 48                	or     al,0x48
    94f6:	32 00                	xor    al,BYTE PTR [rax]
    94f8:	00 32                	add    BYTE PTR [rdx],dh
    94fa:	85 13                	test   DWORD PTR [rbx],edx
    94fc:	f4                   	hlt
    94fd:	3e 00 00             	ds add BYTE PTR [rax],al
    9500:	5b                   	pop    rbx
    9501:	3f                   	(bad)
    9502:	00 00                	add    BYTE PTR [rax],al
    9504:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    9507:	00 00                	add    BYTE PTR [rax],al
    9509:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    950c:	19 00                	sbb    DWORD PTR [rax],eax
    950e:	00 32                	add    BYTE PTR [rdx],dh
    9510:	89 13                	mov    DWORD PTR [rbx],edx
    9512:	f4                   	hlt
    9513:	3e 00 00             	ds add BYTE PTR [rax],al
    9516:	71 3f                	jno    9557 <_end+0x353f>
    9518:	00 00                	add    BYTE PTR [rax],al
    951a:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    951d:	00 00                	add    BYTE PTR [rax],al
    951f:	00 0e                	add    BYTE PTR [rsi],cl
    9521:	f3 2a 00             	repz sub al,BYTE PTR [rax]
    9524:	00 32                	add    BYTE PTR [rdx],dh
    9526:	80 01 0c             	add    BYTE PTR [rcx],0xc
    9529:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    952a:	21 00                	and    DWORD PTR [rax],eax
    952c:	00 8d 3f 00 00 01    	add    BYTE PTR [rbp+0x100003f],cl
    9532:	8d 3f                	lea    edi,[rdi]
    9534:	00 00                	add    BYTE PTR [rax],al
    9536:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    953c:	0d 2a 24 00 00       	or     eax,0x242a
    9541:	0d 14 18 00 00       	or     eax,0x1814
    9546:	13 92 3f 00 00 22    	adc    edx,DWORD PTR [rdx+0x2200003f]
    954c:	94                   	xchg   esp,eax
    954d:	1a 00                	sbb    al,BYTE PTR [rax]
    954f:	00 22                	add    BYTE PTR [rdx],ah
    9551:	14 18                	adc    al,0x18
    9553:	00 00                	add    BYTE PTR [rax],al
    9555:	0d 94 1a 00 00       	or     eax,0x1a94
    955a:	13 a6 3f 00 00 22    	adc    esp,DWORD PTR [rsi+0x2200003f]
    9560:	c0 18 00             	rcr    BYTE PTR [rax],0x0
    9563:	00 0d df 1b 00 00    	add    BYTE PTR [rip+0x1bdf],cl        # b148 <_end+0x5130>
    9569:	13 b5 3f 00 00 22    	adc    esi,DWORD PTR [rbp+0x2200003f]
    956f:	5f                   	pop    rdi
    9570:	1e                   	(bad)
    9571:	00 00                	add    BYTE PTR [rax],al
    9573:	22 df                	and    bl,bh
    9575:	1b 00                	sbb    eax,DWORD PTR [rax]
    9577:	00 0d 5f 1e 00 00    	add    BYTE PTR [rip+0x1e5f],cl        # b3dc <_end+0x53c4>
    957d:	13 c9                	adc    ecx,ecx
    957f:	3f                   	(bad)
    9580:	00 00                	add    BYTE PTR [rax],al
    9582:	22 8b 1c 00 00 1b    	and    cl,BYTE PTR [rbx+0x1b00001c]
    9588:	21 08                	and    DWORD PTR [rax],ecx
    958a:	00 00                	add    BYTE PTR [rax],al
    958c:	10 33                	adc    BYTE PTR [rbx],dh
    958e:	07                   	(bad)
    958f:	10 0d 40 00 00 06    	adc    BYTE PTR [rip+0x6000040],cl        # 60095d5 <_end+0x60035bd>
    9595:	8f 03                	pop    QWORD PTR [rbx]
    9597:	00 00                	add    BYTE PTR [rax],al
    9599:	33 08                	xor    ecx,DWORD PTR [rax]
    959b:	0b e2                	or     esp,edx
    959d:	22 00                	and    al,BYTE PTR [rax]
    959f:	00 00                	add    BYTE PTR [rax],al
    95a1:	06                   	(bad)
    95a2:	ae                   	scas   al,BYTE PTR es:[rdi]
    95a3:	05 00 00 33 09       	add    eax,0x9330000
    95a8:	0e                   	(bad)
    95a9:	b0 2c                	mov    al,0x2c
    95ab:	00 00                	add    BYTE PTR [rax],al
    95ad:	08 06                	or     BYTE PTR [rsi],al
    95af:	b3 05                	mov    bl,0x5
    95b1:	00 00                	add    BYTE PTR [rax],al
    95b3:	33 0a                	xor    ecx,DWORD PTR [rdx]
    95b5:	0e                   	(bad)
    95b6:	b0 2c                	mov    al,0x2c
    95b8:	00 00                	add    BYTE PTR [rax],al
    95ba:	0c 00                	or     al,0x0
    95bc:	08 21                	or     BYTE PTR [rcx],ah
    95be:	08 00                	or     BYTE PTR [rax],al
    95c0:	00 33                	add    BYTE PTR [rbx],dh
    95c2:	0b 03                	or     eax,DWORD PTR [rbx]
    95c4:	d8 3f                	fdivr  DWORD PTR [rdi]
    95c6:	00 00                	add    BYTE PTR [rax],al
    95c8:	38 69 02             	cmp    BYTE PTR [rcx+0x2],ch
    95cb:	00 00                	add    BYTE PTR [rax],al
    95cd:	34 08                	xor    al,0x8
    95cf:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    95d0:	21 00                	and    DWORD PTR [rax],eax
    95d2:	00 0f                	add    BYTE PTR [rdi],cl
    95d4:	38 75 02             	cmp    BYTE PTR [rbp+0x2],dh
    95d7:	00 00                	add    BYTE PTR [rax],al
    95d9:	34 09                	xor    al,0x9
    95db:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    95dc:	21 00                	and    DWORD PTR [rax],eax
    95de:	00 02                	add    BYTE PTR [rdx],al
    95e0:	38 c4                	cmp    ah,al
    95e2:	00 00                	add    BYTE PTR [rax],al
    95e4:	00 34 0a             	add    BYTE PTR [rdx+rcx*1],dh
    95e7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    95e8:	21 00                	and    DWORD PTR [rax],eax
    95ea:	00 20                	add    BYTE PTR [rax],ah
    95ec:	08 22                	or     BYTE PTR [rdx],ah
    95ee:	03 00                	add    eax,DWORD PTR [rax]
    95f0:	00 34 0c             	add    BYTE PTR [rsp+rcx*1],dh
    95f3:	12 0d 40 00 00 08    	adc    cl,BYTE PTR [rip+0x8000040]        # 8009639 <_end+0x8003621>
    95f9:	14 07                	adc    al,0x7
    95fb:	00 00                	add    BYTE PTR [rax],al
    95fd:	34 0d                	xor    al,0xd
    95ff:	14 55                	adc    al,0x55
    9601:	40 00 00             	rex add BYTE PTR [rax],al
    9604:	0d 5a 40 00 00       	or     eax,0x405a
    9609:	58                   	pop    rax
    960a:	b0 2c                	mov    al,0x2c
    960c:	00 00                	add    BYTE PTR [rax],al
    960e:	69 40 00 00 01 3d 40 	imul   eax,DWORD PTR [rax+0x0],0x403d0100
    9615:	00 00                	add    BYTE PTR [rax],al
    9617:	00 1b                	add    BYTE PTR [rbx],bl
    9619:	07                   	(bad)
    961a:	05 00 00 20 34       	add    eax,0x34200000
    961f:	0f 10 ab 40 00 00 06 	movups xmm5,XMMWORD PTR [rbx+0x6000040]
    9626:	dd 05 00 00 34 10    	fld    QWORD PTR [rip+0x10340000]        # 1034962c <_end+0x10343614>
    962c:	0e                   	(bad)
    962d:	b0 2c                	mov    al,0x2c
    962f:	00 00                	add    BYTE PTR [rax],al
    9631:	00 06                	add    BYTE PTR [rsi],al
    9633:	5a                   	pop    rdx
    9634:	04 00                	add    al,0x0
    9636:	00 34 11             	add    BYTE PTR [rcx+rdx*1],dh
    9639:	0e                   	(bad)
    963a:	b0 2c                	mov    al,0x2c
    963c:	00 00                	add    BYTE PTR [rax],al
    963e:	04 06                	add    al,0x6
    9640:	99                   	cdq
    9641:	05 00 00 34 13       	add    eax,0x13340000
    9646:	0e                   	(bad)
    9647:	b0 2c                	mov    al,0x2c
    9649:	00 00                	add    BYTE PTR [rax],al
    964b:	08 06                	or     BYTE PTR [rsi],al
    964d:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    9650:	00 34 15 0c 3d 40 00 	add    BYTE PTR [rdx*1+0x403d0c],dh
    9657:	00 10                	add    BYTE PTR [rax],dl
    9659:	00 08                	add    BYTE PTR [rax],cl
    965b:	07                   	(bad)
    965c:	05 00 00 34 16       	add    eax,0x16340000
    9661:	03 69 40             	add    ebp,DWORD PTR [rcx+0x40]
    9664:	00 00                	add    BYTE PTR [rax],al
    9666:	1b ae 03 00 00 18    	sbb    ebp,DWORD PTR [rsi+0x18000003]
    966c:	34 18                	xor    al,0x18
    966e:	10 f9                	adc    cl,bh
    9670:	40 00 00             	rex add BYTE PTR [rax],al
    9673:	06                   	(bad)
    9674:	a1 05 00 00 34 19 0f 	movabs eax,ds:0x40f90f1934000005
    967b:	f9 40 
    967d:	00 00                	add    BYTE PTR [rax],al
    967f:	00 06                	add    BYTE PTR [rsi],al
    9681:	33 05 00 00 34 1a    	xor    eax,DWORD PTR [rip+0x1a340000]        # 1a349687 <_end+0x1a34366f>
    9687:	0e                   	(bad)
    9688:	b0 2c                	mov    al,0x2c
    968a:	00 00                	add    BYTE PTR [rax],al
    968c:	08 06                	or     BYTE PTR [rsi],al
    968e:	19 03                	sbb    DWORD PTR [rbx],eax
    9690:	00 00                	add    BYTE PTR [rax],al
    9692:	34 1b                	xor    al,0x1b
    9694:	0e                   	(bad)
    9695:	b0 2c                	mov    al,0x2c
    9697:	00 00                	add    BYTE PTR [rax],al
    9699:	0c 06                	or     al,0x6
    969b:	55                   	push   rbp
    969c:	03 00                	add    eax,DWORD PTR [rax]
    969e:	00 34 1c             	add    BYTE PTR [rsp+rbx*1],dh
    96a1:	0e                   	(bad)
    96a2:	b0 2c                	mov    al,0x2c
    96a4:	00 00                	add    BYTE PTR [rax],al
    96a6:	10 00                	adc    BYTE PTR [rax],al
    96a8:	0d ab 40 00 00       	or     eax,0x40ab
    96ad:	08 ae 03 00 00 34    	or     BYTE PTR [rsi+0x34000003],ch
    96b3:	1d 03 b7 40 00       	sbb    eax,0x40b703
    96b8:	00 1b                	add    BYTE PTR [rbx],bl
    96ba:	52                   	push   rdx
    96bb:	04 00                	add    al,0x0
    96bd:	00 18                	add    BYTE PTR [rax],bl
    96bf:	34 1f                	xor    al,0x1f
    96c1:	10 4c 41 00          	adc    BYTE PTR [rcx+rax*2+0x0],cl
    96c5:	00 06                	add    BYTE PTR [rsi],al
    96c7:	b4 04                	mov    ah,0x4
    96c9:	00 00                	add    BYTE PTR [rax],al
    96cb:	34 20                	xor    al,0x20
    96cd:	0b 4c 41 00          	or     ecx,DWORD PTR [rcx+rax*2+0x0]
    96d1:	00 00                	add    BYTE PTR [rax],al
    96d3:	06                   	(bad)
    96d4:	19 03                	sbb    DWORD PTR [rbx],eax
    96d6:	00 00                	add    BYTE PTR [rax],al
    96d8:	34 21                	xor    al,0x21
    96da:	0e                   	(bad)
    96db:	b0 2c                	mov    al,0x2c
    96dd:	00 00                	add    BYTE PTR [rax],al
    96df:	08 06                	or     BYTE PTR [rsi],al
    96e1:	08 07                	or     BYTE PTR [rdi],al
    96e3:	00 00                	add    BYTE PTR [rax],al
    96e5:	34 22                	xor    al,0x22
    96e7:	0b 35 00 00 00 0c    	or     esi,DWORD PTR [rip+0xc000000]        # c0096ed <_end+0xc0036d5>
    96ed:	06                   	(bad)
    96ee:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    96f1:	00 34 23             	add    BYTE PTR [rbx+riz*1],dh
    96f4:	0c 49                	or     al,0x49
    96f6:	40 00 00             	rex add BYTE PTR [rax],al
    96f9:	10 00                	adc    BYTE PTR [rax],al
    96fb:	0d fe 40 00 00       	or     eax,0x40fe
    9700:	08 52 04             	or     BYTE PTR [rdx+0x4],dl
    9703:	00 00                	add    BYTE PTR [rax],al
    9705:	34 24                	xor    al,0x24
    9707:	03 0a                	add    ecx,DWORD PTR [rdx]
    9709:	41 00 00             	add    BYTE PTR [r8],al
    970c:	38 c1                	cmp    cl,al
    970e:	06                   	(bad)
    970f:	00 00                	add    BYTE PTR [rax],al
    9711:	35 06 ad 21 00       	xor    eax,0x21ad06
    9716:	00 04 85 01 90 00 00 	add    BYTE PTR [rax*4+0x9001],al
    971d:	00 36                	add    BYTE PTR [rsi],dh
    971f:	06                   	(bad)
    9720:	10 bc 2c 00 00 40 42 	adc    BYTE PTR [rsp+rbp*1+0x42400000],bh
    9727:	0f 00 1b             	ltr    WORD PTR [rbx]
    972a:	9e                   	sahf
    972b:	23 00                	and    eax,DWORD PTR [rax]
    972d:	00 10                	add    BYTE PTR [rax],dl
    972f:	36 08 10             	ss or  BYTE PTR [rax],dl
    9732:	a2 41 00 00 06 be 1a 	movabs ds:0x1abe06000041,al
    9739:	00 00 
    973b:	36 09 0d a2 41 00 00 	ss or  DWORD PTR [rip+0x41a2],ecx        # d8e4 <_end+0x78cc>
    9742:	00 06                	add    BYTE PTR [rsi],al
    9744:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    9748:	36 0a 0e             	ss or  cl,BYTE PTR [rsi]
    974b:	b0 2c                	mov    al,0x2c
    974d:	00 00                	add    BYTE PTR [rax],al
    974f:	08 00                	or     BYTE PTR [rax],al
    9751:	0d 3d 40 00 00       	or     eax,0x403d
    9756:	08 9e 23 00 00 36    	or     BYTE PTR [rsi+0x36000023],bl
    975c:	0b 03                	or     eax,DWORD PTR [rbx]
    975e:	7a 41                	jp     97a1 <_end+0x3789>
    9760:	00 00                	add    BYTE PTR [rax],al
    9762:	1b 5a 13             	sbb    ebx,DWORD PTR [rdx+0x13]
    9765:	00 00                	add    BYTE PTR [rax],al
    9767:	10 36                	adc    BYTE PTR [rsi],dh
    9769:	0d 10 db 41 00       	or     eax,0x41db10
    976e:	00 06                	add    BYTE PTR [rsi],al
    9770:	c4                   	(bad)
    9771:	25 00 00 36 0e       	and    eax,0xe360000
    9776:	11 d3                	adc    ebx,edx
    9778:	23 00                	and    eax,DWORD PTR [rax]
    977a:	00 00                	add    BYTE PTR [rax],al
    977c:	06                   	(bad)
    977d:	50                   	push   rax
    977e:	0e                   	(bad)
    977f:	00 00                	add    BYTE PTR [rax],al
    9781:	36 0f 11 d3          	ss movups xmm3,xmm2
    9785:	23 00                	and    eax,DWORD PTR [rax]
    9787:	00 08                	add    BYTE PTR [rax],cl
    9789:	00 08                	add    BYTE PTR [rax],cl
    978b:	5a                   	pop    rdx
    978c:	13 00                	adc    eax,DWORD PTR [rax]
    978e:	00 36                	add    BYTE PTR [rsi],dh
    9790:	10 03                	adc    BYTE PTR [rbx],al
    9792:	b3 41                	mov    bl,0x41
    9794:	00 00                	add    BYTE PTR [rax],al
    9796:	0d e3 1a 00 00       	or     eax,0x1ae3
    979b:	22 37                	and    dh,BYTE PTR [rdi]
    979d:	1b 00                	sbb    eax,DWORD PTR [rax]
    979f:	00 0d da 1b 00 00    	add    BYTE PTR [rip+0x1bda],cl        # b37f <_end+0x5367>
    97a5:	13 f1                	adc    esi,ecx
    97a7:	41 00 00             	add    BYTE PTR [r8],al
    97aa:	22 e3                	and    ah,bl
    97ac:	1a 00                	sbb    al,BYTE PTR [rax]
    97ae:	00 29                	add    BYTE PTR [rcx],ch
    97b0:	84 17                	test   BYTE PTR [rdi],dl
    97b2:	00 00                	add    BYTE PTR [rax],al
    97b4:	29 8d 17 00 00 29    	sub    DWORD PTR [rbp+0x29000017],ecx
    97ba:	96                   	xchg   esi,eax
    97bb:	17                   	(bad)
    97bc:	00 00                	add    BYTE PTR [rax],al
    97be:	29 be 20 00 00 29    	sub    DWORD PTR [rsi+0x29000020],edi
    97c4:	c7                   	(bad)
    97c5:	20 00                	and    BYTE PTR [rax],al
    97c7:	00 29                	add    BYTE PTR [rcx],ch
    97c9:	d0 20                	shl    BYTE PTR [rax],1
    97cb:	00 00                	add    BYTE PTR [rax],al
    97cd:	29 d9                	sub    ecx,ebx
    97cf:	20 00                	and    BYTE PTR [rax],al
    97d1:	00 0f                	add    BYTE PTR [rdi],cl
    97d3:	84 05 00 00 34 2a    	test   BYTE PTR [rip+0x2a340000],al        # 2a3497d9 <_end+0x2a3437c1>
    97d9:	06                   	(bad)
    97da:	61                   	(bad)
    97db:	06                   	(bad)
    97dc:	00 00                	add    BYTE PTR [rax],al
    97de:	ea                   	(bad)
    97df:	20 00                	and    BYTE PTR [rax],al
    97e1:	00 42 42             	add    BYTE PTR [rdx+0x42],al
    97e4:	00 00                	add    BYTE PTR [rax],al
    97e6:	01 42 42             	add    DWORD PTR [rdx+0x42],eax
    97e9:	00 00                	add    BYTE PTR [rax],al
    97eb:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 9831 <_end+0x3819>
    97f1:	0d 51 41 00 00       	or     eax,0x4151
    97f6:	0e                   	(bad)
    97f7:	5a                   	pop    rdx
    97f8:	06                   	(bad)
    97f9:	00 00                	add    BYTE PTR [rax],al
    97fb:	16                   	(bad)
    97fc:	a3 02 0e d4 22 00 00 	movabs ds:0x4263000022d40e02,eax
    9803:	63 42 
    9805:	00 00                	add    BYTE PTR [rax],al
    9807:	01 2e                	add    DWORD PTR [rsi],ebp
    9809:	23 00                	and    eax,DWORD PTR [rax]
    980b:	00 01                	add    BYTE PTR [rcx],al
    980d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9810:	00 00                	add    BYTE PTR [rax],al
    9812:	0c 17                	or     al,0x17
    9814:	13 00                	adc    eax,DWORD PTR [rax]
    9816:	00 37                	add    BYTE PTR [rdi],dh
    9818:	31 0c a6             	xor    DWORD PTR [rsi+riz*4],ecx
    981b:	21 00                	and    DWORD PTR [rax],eax
    981d:	00 84 42 00 00 01 8e 	add    BYTE PTR [rdx+rax*2-0x71ff0000],al
    9824:	2c 00                	sub    al,0x0
    9826:	00 01                	add    BYTE PTR [rcx],al
    9828:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9829:	21 00                	and    DWORD PTR [rax],eax
    982b:	00 01                	add    BYTE PTR [rcx],al
    982d:	d3 23                	shl    DWORD PTR [rbx],cl
    982f:	00 00                	add    BYTE PTR [rax],al
    9831:	21 00                	and    DWORD PTR [rax],eax
    9833:	86 01                	xchg   BYTE PTR [rcx],al
    9835:	fc                   	cld
    9836:	06                   	(bad)
    9837:	00 00                	add    BYTE PTR [rax],al
    9839:	34 2b                	xor    al,0x2b
    983b:	06                   	(bad)
    983c:	41 04 00             	rex.B add al,0x0
    983f:	00 9b 42 00 00 01    	add    BYTE PTR [rbx+0x1000042],bl
    9845:	42                   	rex.X
    9846:	42 00 00             	rex.X add BYTE PTR [rax],al
    9849:	00 0f                	add    BYTE PTR [rdi],cl
    984b:	c7 03 00 00 34 28    	mov    DWORD PTR [rbx],0x28340000
    9851:	0a 99 06 00 00 b0    	or     bl,BYTE PTR [rcx-0x4ffffffa]
    9857:	2c 00                	sub    al,0x0
    9859:	00 ba 42 00 00 01    	add    BYTE PTR [rdx+0x1000042],bh
    985f:	42                   	rex.X
    9860:	42 00 00             	rex.X add BYTE PTR [rax],al
    9863:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 98a9 <_end+0x3891>
    9869:	0f 3e                	(bad)
    986b:	03 00                	add    eax,DWORD PTR [rax]
    986d:	00 34 27             	add    BYTE PTR [rdi+riz*1],dh
    9870:	09 e6                	or     esi,esp
    9872:	05 00 00 51 41       	add    eax,0x41510000
    9877:	00 00                	add    BYTE PTR [rax],al
    9879:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    987c:	00 01                	add    BYTE PTR [rcx],al
    987e:	49                   	rex.WB
    987f:	40 00 00             	rex add BYTE PTR [rax],al
    9882:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9888:	0c e8                	or     al,0xe8
    988a:	03 00                	add    eax,DWORD PTR [rax]
    988c:	00 37                	add    BYTE PTR [rdi],dh
    988e:	34 0c                	xor    al,0xc
    9890:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9891:	21 00                	and    DWORD PTR [rax],eax
    9893:	00 f5                	add    ch,dh
    9895:	42 00 00             	rex.X add BYTE PTR [rax],al
    9898:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    989e:	d3 23                	shl    DWORD PTR [rbx],cl
    98a0:	00 00                	add    BYTE PTR [rax],al
    98a2:	21 00                	and    DWORD PTR [rax],eax
    98a4:	28 9c 03 00 00 16 af 	sub    BYTE PTR [rbx+rax*1-0x50ea0000],bl
    98ab:	02 07                	add    al,BYTE PTR [rdi]
    98ad:	43 00 00             	rex.XB add BYTE PTR [r8],al
    98b0:	01 d4                	add    esp,edx
    98b2:	22 00                	and    al,BYTE PTR [rax]
    98b4:	00 00                	add    BYTE PTR [rax],al
    98b6:	0f f3 07             	psllq  mm0,QWORD PTR [rdi]
    98b9:	00 00                	add    BYTE PTR [rax],al
    98bb:	38 0a                	cmp    BYTE PTR [rdx],cl
    98bd:	0a cc                	or     cl,ah
    98bf:	07                   	(bad)
    98c0:	00 00                	add    BYTE PTR [rax],al
    98c2:	b0 2c                	mov    al,0x2c
    98c4:	00 00                	add    BYTE PTR [rax],al
    98c6:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    98c9:	00 01                	add    BYTE PTR [rcx],al
    98cb:	0d 40 00 00 00       	or     eax,0x40
    98d0:	0f a1                	pop    fs
    98d2:	08 00                	or     BYTE PTR [rax],al
    98d4:	00 38                	add    BYTE PTR [rax],bh
    98d6:	0e                   	(bad)
    98d7:	0a 3c 08             	or     bh,BYTE PTR [rax+rcx*1]
    98da:	00 00                	add    BYTE PTR [rax],al
    98dc:	b0 2c                	mov    al,0x2c
    98de:	00 00                	add    BYTE PTR [rax],al
    98e0:	3b 43 00             	cmp    eax,DWORD PTR [rbx+0x0]
    98e3:	00 01                	add    BYTE PTR [rcx],al
    98e5:	0d 40 00 00 00       	or     eax,0x40
    98ea:	0f 2a 08             	cvtpi2ps xmm1,QWORD PTR [rax]
    98ed:	00 00                	add    BYTE PTR [rax],al
    98ef:	38 0d 0a 57 08 00    	cmp    BYTE PTR [rip+0x8570a],cl        # 8efff <_end+0x88fe7>
    98f5:	00 b0 2c 00 00 55    	add    BYTE PTR [rax+0x5500002c],dh
    98fb:	43 00 00             	rex.XB add BYTE PTR [r8],al
    98fe:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9944 <_end+0x392c>
    9904:	0f 41 07             	cmovno eax,DWORD PTR [rdi]
    9907:	00 00                	add    BYTE PTR [rax],al
    9909:	38 0c 0a             	cmp    BYTE PTR [rdx+rcx*1],cl
    990c:	8e 07                	mov    es,WORD PTR [rdi]
    990e:	00 00                	add    BYTE PTR [rax],al
    9910:	b0 2c                	mov    al,0x2c
    9912:	00 00                	add    BYTE PTR [rax],al
    9914:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9915:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9918:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 995e <_end+0x3946>
    991e:	0f 76 08             	pcmpeqd mm1,QWORD PTR [rax]
    9921:	00 00                	add    BYTE PTR [rax],al
    9923:	38 0b                	cmp    BYTE PTR [rbx],cl
    9925:	0a e4                	or     ah,ah
    9927:	08 00                	or     BYTE PTR [rax],al
    9929:	00 b0 2c 00 00 89    	add    BYTE PTR [rax-0x76ffffd4],dh
    992f:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9932:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9978 <_end+0x3960>
    9938:	0f af 08             	imul   ecx,DWORD PTR [rax]
    993b:	00 00                	add    BYTE PTR [rax],al
    993d:	38 09                	cmp    BYTE PTR [rcx],cl
    993f:	0a 03                	or     al,BYTE PTR [rbx]
    9941:	09 00                	or     DWORD PTR [rax],eax
    9943:	00 b0 2c 00 00 a3    	add    BYTE PTR [rax-0x5cffffd4],dh
    9949:	43 00 00             	rex.XB add BYTE PTR [r8],al
    994c:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9992 <_end+0x397a>
    9952:	0f b3 08             	btr    DWORD PTR [rax],ecx
    9955:	00 00                	add    BYTE PTR [rax],al
    9957:	38 08                	cmp    BYTE PTR [rax],cl
    9959:	0a 0d 08 00 00 b0    	or     cl,BYTE PTR [rip+0xffffffffb0000008]        # ffffffffb0009967 <_end+0xffffffffb000394f>
    995f:	2c 00                	sub    al,0x0
    9961:	00 bd 43 00 00 01    	add    BYTE PTR [rbp+0x1000043],bh
    9967:	0d 40 00 00 00       	or     eax,0x40
    996c:	0c 7d                	or     al,0x7d
    996e:	09 00                	or     DWORD PTR [rax],eax
    9970:	00 39                	add    BYTE PTR [rcx],bh
    9972:	9c                   	pushf
    9973:	0c a6                	or     al,0xa6
    9975:	21 00                	and    DWORD PTR [rax],eax
    9977:	00 d8                	add    al,bl
    9979:	43 00 00             	rex.XB add BYTE PTR [r8],al
    997c:	01 d3                	add    ebx,edx
    997e:	23 00                	and    eax,DWORD PTR [rax]
    9980:	00 01                	add    BYTE PTR [rcx],al
    9982:	d3 23                	shl    DWORD PTR [rbx],cl
    9984:	00 00                	add    BYTE PTR [rax],al
    9986:	00 0f                	add    BYTE PTR [rdi],cl
    9988:	0a 06                	or     al,BYTE PTR [rsi]
    998a:	00 00                	add    BYTE PTR [rax],al
    998c:	34 26                	xor    al,0x26
    998e:	0b 6a 03             	or     ebp,DWORD PTR [rdx+0x3]
    9991:	00 00                	add    BYTE PTR [rax],al
    9993:	f7 43 00 00 f7 43 00 	test   DWORD PTR [rbx+0x0],0x43f700
    999a:	00 01                	add    BYTE PTR [rcx],al
    999c:	e2 22                	loop   99c0 <_end+0x39a8>
    999e:	00 00                	add    BYTE PTR [rax],al
    99a0:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    99a6:	0d 0d 40 00 00       	or     eax,0x400d
    99ab:	0f 6d                	(bad)
    99ad:	0a 00                	or     al,BYTE PTR [rax]
    99af:	00 3a                	add    BYTE PTR [rdx],bh
    99b1:	07                   	(bad)
    99b2:	0a b6 09 00 00 b0    	or     dh,BYTE PTR [rsi-0x4ffffff7]
    99b8:	2c 00                	sub    al,0x0
    99ba:	00 1b                	add    BYTE PTR [rbx],bl
    99bc:	44 00 00             	add    BYTE PTR [rax],r8b
    99bf:	01 e2                	add    edx,esp
    99c1:	22 00                	and    al,BYTE PTR [rax]
    99c3:	00 01                	add    BYTE PTR [rcx],al
    99c5:	2e 23 00             	cs and eax,DWORD PTR [rax]
    99c8:	00 00                	add    BYTE PTR [rax],al
    99ca:	0f c8                	bswap  eax
    99cc:	09 00                	or     DWORD PTR [rax],eax
    99ce:	00 3a                	add    BYTE PTR [rdx],bh
    99d0:	06                   	(bad)
    99d1:	07                   	(bad)
    99d2:	d1 09                	ror    DWORD PTR [rcx],1
    99d4:	00 00                	add    BYTE PTR [rax],al
    99d6:	e2 22                	loop   99fa <_end+0x39e2>
    99d8:	00 00                	add    BYTE PTR [rax],al
    99da:	3a 44 00 00          	cmp    al,BYTE PTR [rax+rax*1+0x0]
    99de:	01 d3                	add    ebx,edx
    99e0:	23 00                	and    eax,DWORD PTR [rax]
    99e2:	00 01                	add    BYTE PTR [rcx],al
    99e4:	3a 44 00 00          	cmp    al,BYTE PTR [rax+rax*1+0x0]
    99e8:	00 0d 2e 23 00 00    	add    BYTE PTR [rip+0x232e],cl        # bd1c <_end+0x5d04>
    99ee:	87 01                	xchg   DWORD PTR [rcx],eax
    99f0:	76 05                	jbe    99f7 <_end+0x39df>
    99f2:	00 00                	add    BYTE PTR [rax],al
    99f4:	3b 45 0d             	cmp    eax,DWORD PTR [rbp+0xd]
    99f7:	61                   	(bad)
    99f8:	44 00 00             	add    BYTE PTR [rax],r8b
    99fb:	01 d3                	add    ebx,edx
    99fd:	23 00                	and    eax,DWORD PTR [rax]
    99ff:	00 01                	add    BYTE PTR [rcx],al
    9a01:	d3 23                	shl    DWORD PTR [rbx],cl
    9a03:	00 00                	add    BYTE PTR [rax],al
    9a05:	01 e3                	add    ebx,esp
    9a07:	20 00                	and    BYTE PTR [rax],al
    9a09:	00 01                	add    BYTE PTR [rcx],al
    9a0b:	d3 23                	shl    DWORD PTR [rbx],cl
    9a0d:	00 00                	add    BYTE PTR [rax],al
    9a0f:	00 22                	add    BYTE PTR [rdx],ah
    9a11:	b9 21 00 00 30       	mov    ecx,0x30000021
    9a16:	24 1e                	and    al,0x1e
    9a18:	00 00                	add    BYTE PTR [rax],al
    9a1a:	7d 44                	jge    9a60 <_end+0x3a48>
    9a1c:	00 00                	add    BYTE PTR [rax],al
    9a1e:	02 93 44 00 00 11    	add    dl,BYTE PTR [rbx+0x11000044]
    9a24:	09 19                	or     DWORD PTR [rcx],ebx
    9a26:	00 00                	add    BYTE PTR [rax],al
    9a28:	b2 21                	mov    dl,0x21
    9a2a:	00 00                	add    BYTE PTR [rax],al
    9a2c:	31 1e                	xor    DWORD PTR [rsi],ebx
    9a2e:	1e                   	(bad)
    9a2f:	00 00                	add    BYTE PTR [rax],al
    9a31:	ba 3f 00 00 2d       	mov    edx,0x2d00003f
    9a36:	47 16                	rex.RXB (bad)
    9a38:	00 00                	add    BYTE PTR [rax],al
    9a3a:	3d 02 2d 61 44       	cmp    eax,0x44612d02
    9a3f:	00 00                	add    BYTE PTR [rax],al
    9a41:	00 5c 66 44          	add    BYTE PTR [rsi+riz*2+0x44],bl
    9a45:	00 00                	add    BYTE PTR [rax],al
    9a47:	55                   	push   rbp
    9a48:	16                   	(bad)
    9a49:	00 00                	add    BYTE PTR [rax],al
    9a4b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9a4c:	44 00 00             	add    BYTE PTR [rax],r8b
    9a4f:	b8 44 00 00 11       	mov    eax,0x11000044
    9a54:	09 19                	or     DWORD PTR [rcx],ebx
    9a56:	00 00                	add    BYTE PTR [rax],al
    9a58:	b2 21                	mov    dl,0x21
    9a5a:	00 00                	add    BYTE PTR [rax],al
    9a5c:	0b 7d 44             	or     edi,DWORD PTR [rbp+0x44]
    9a5f:	00 00                	add    BYTE PTR [rax],al
    9a61:	0b 86 44 00 00 00    	or     eax,DWORD PTR [rsi+0x44]
    9a67:	32 7a 1e             	xor    bh,BYTE PTR [rdx+0x1e]
    9a6a:	00 00                	add    BYTE PTR [rax],al
    9a6c:	ed                   	in     eax,dx
    9a6d:	44 00 00             	add    BYTE PTR [rax],r8b
    9a70:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    9a77:	00 00                	add    BYTE PTR [rax],al
    9a79:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    9a7c:	00 00                	add    BYTE PTR [rax],al
    9a7e:	94                   	xchg   esp,eax
    9a7f:	1f                   	(bad)
    9a80:	00 00                	add    BYTE PTR [rax],al
    9a82:	88 01                	mov    BYTE PTR [rcx],al
    9a84:	5f                   	pop    rdi
    9a85:	5f                   	pop    rdi
    9a86:	64 00 04 d0          	add    BYTE PTR fs:[rax+rdx*8],al
    9a8a:	2a 9c 3f 00 00 08 e8 	sub    bl,BYTE PTR [rdi+rdi*1-0x17f80000]
    9a91:	22 00                	and    al,BYTE PTR [rax]
    9a93:	00 04 d2             	add    BYTE PTR [rdx+rdx*8],al
    9a96:	25 82 1c 00 00       	and    eax,0x1c82
    9a9b:	00 32                	add    BYTE PTR [rdx],dh
    9a9d:	d6                   	(bad)
    9a9e:	1e                   	(bad)
    9a9f:	00 00                	add    BYTE PTR [rax],al
    9aa1:	40                   	rex
    9aa2:	45 00 00             	add    BYTE PTR [r8],r8b
    9aa5:	11 03                	adc    DWORD PTR [rbx],eax
    9aa7:	19 00                	sbb    DWORD PTR [rax],eax
    9aa9:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9aaf:	98                   	cwde
    9ab0:	22 00                	and    al,BYTE PTR [rax]
    9ab2:	00 94 1f 00 00 11 09 	add    BYTE PTR [rdi+rbx*1+0x9110000],dl
    9ab9:	19 00                	sbb    DWORD PTR [rax],eax
    9abb:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9ac1:	bb 2f 00 00 94       	mov    ebx,0x9400002f
    9ac6:	1f                   	(bad)
    9ac7:	00 00                	add    BYTE PTR [rax],al
    9ac9:	2d 3d 0f 00 00       	sub    eax,0xf3d
    9ace:	c6 02 32             	mov    BYTE PTR [rdx],0x32
    9ad1:	9c                   	pushf
    9ad2:	3f                   	(bad)
    9ad3:	00 00                	add    BYTE PTR [rax],al
    9ad5:	2d 3a 17 00 00       	sub    eax,0x173a
    9ada:	c7 02 24 9c 3f 00    	mov    DWORD PTR [rdx],0x3f9c24
    9ae0:	00 42 1b             	add    BYTE PTR [rdx+0x1b],al
    9ae3:	21 00                	and    DWORD PTR [rax],eax
    9ae5:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    9ae8:	02 34 e0             	add    dh,BYTE PTR [rax+riz*8]
    9aeb:	1f                   	(bad)
    9aec:	00 00                	add    BYTE PTR [rax],al
    9aee:	00 32                	add    BYTE PTR [rdx],dh
    9af0:	26 1f                	es (bad)
    9af2:	00 00                	add    BYTE PTR [rax],al
    9af4:	74 45                	je     9b3b <_end+0x3b23>
    9af6:	00 00                	add    BYTE PTR [rax],al
    9af8:	11 3c 22             	adc    DWORD PTR [rdx+riz*1],edi
    9afb:	00 00                	add    BYTE PTR [rax],al
    9afd:	df 1b                	fistp  WORD PTR [rbx]
    9aff:	00 00                	add    BYTE PTR [rax],al
    9b01:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    9b08:	00 00                	add    BYTE PTR [rax],al
    9b0a:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    9b0d:	00 00                	add    BYTE PTR [rax],al
    9b0f:	94                   	xchg   esp,eax
    9b10:	1f                   	(bad)
    9b11:	00 00                	add    BYTE PTR [rax],al
    9b13:	5d                   	pop    rbp
    9b14:	5f                   	pop    rdi
    9b15:	5f                   	pop    rdi
    9b16:	64 00 04 11          	add    BYTE PTR fs:[rcx+rdx*1],al
    9b1a:	01 34 9c             	add    DWORD PTR [rsp+rbx*4],esi
    9b1d:	3f                   	(bad)
    9b1e:	00 00                	add    BYTE PTR [rax],al
    9b20:	89 01                	mov    DWORD PTR [rcx],eax
    9b22:	00 5e ae             	add    BYTE PTR [rsi-0x52],bl
    9b25:	22 00                	and    al,BYTE PTR [rax]
    9b27:	00 b4 07 ea 2e 00 00 	add    BYTE PTR [rdi+rax*1+0x2eea],dh
    9b2e:	35 00 00 00 cc       	xor    eax,0xcc000000
    9b33:	45 00 00             	add    BYTE PTR [r8],r8b
    9b36:	1e                   	(bad)
    9b37:	5d                   	pop    rbp
    9b38:	05 00 00 01 b4       	add    eax,0xb4010000
    9b3d:	2c 42                	sub    al,0x42
    9b3f:	42 00 00             	rex.X add BYTE PTR [rax],al
    9b42:	1e                   	(bad)
    9b43:	24 10                	and    al,0x10
    9b45:	00 00                	add    BYTE PTR [rax],al
    9b47:	01 b4 3b 35 00 00 00 	add    DWORD PTR [rbx+rdi*1+0x35],esi
    9b4e:	5f                   	pop    rdi
    9b4f:	b3 03                	mov    bl,0x3
    9b51:	00 00                	add    BYTE PTR [rax],al
    9b53:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9b56:	00 17                	add    BYTE PTR [rdi],dl
    9b58:	28 16                	sub    BYTE PTR [rsi],dl
    9b5a:	00 00                	add    BYTE PTR [rax],al
    9b5c:	b7 0b                	mov    bh,0xb
    9b5e:	35 00 00 00 48       	xor    eax,0x48000000
    9b63:	49 69 00 b8 13 b0 2c 	imul   rax,QWORD PTR [r8],0x2cb013b8
    9b6a:	00 00                	add    BYTE PTR [rax],al
    9b6c:	48 17                	rex.W (bad)
    9b6e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9b6f:	05 00 00 b9 12       	add    eax,0x12b90000
    9b74:	b0 2c                	mov    al,0x2c
    9b76:	00 00                	add    BYTE PTR [rax],al
    9b78:	00 00                	add    BYTE PTR [rax],al
    9b7a:	00 25 ee 22 00 00    	add    BYTE PTR [rip+0x22ee],ah        # be6e <_end+0x5e56>
    9b80:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9b83:	00 26                	add    BYTE PTR [rsi],ah
    9b85:	8a 21                	mov    ah,BYTE PTR [rcx]
    9b87:	00 00                	add    BYTE PTR [rax],al
    9b89:	32 00                	xor    al,BYTE PTR [rax]
    9b8b:	13 cc                	adc    ecx,esp
    9b8d:	45 00 00             	add    BYTE PTR [r8],r8b
    9b90:	5e                   	pop    rsi
    9b91:	59                   	pop    rcx
    9b92:	26 00 00             	es add BYTE PTR [rax],al
    9b95:	a8 08                	test   al,0x8
    9b97:	7e 34                	jle    9bcd <_end+0x3bb5>
    9b99:	00 00                	add    BYTE PTR [rax],al
    9b9b:	2e 00 00             	cs add BYTE PTR [rax],al
    9b9e:	00 38                	add    BYTE PTR [rax],bh
    9ba0:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9ba3:	1e                   	(bad)
    9ba4:	dd 22                	frstor [rdx]
    9ba6:	00 00                	add    BYTE PTR [rax],al
    9ba8:	01 a8 26 93 3e 00    	add    DWORD PTR [rax+0x3e9326],ebp
    9bae:	00 1e                	add    BYTE PTR [rsi],bl
    9bb0:	b3 05                	mov    bl,0x5
    9bb2:	00 00                	add    BYTE PTR [rax],al
    9bb4:	01 a8 3b b0 2c 00    	add    DWORD PTR [rax+0x2cb03b],ebp
    9bba:	00 1e                	add    BYTE PTR [rsi],bl
    9bbc:	24 10                	and    al,0x10
    9bbe:	00 00                	add    BYTE PTR [rax],al
    9bc0:	01 a8 4a 2e 00 00    	add    DWORD PTR [rax+0x2e4a],ebp
    9bc6:	00 5f b3             	add    BYTE PTR [rdi-0x4d],bl
    9bc9:	03 00                	add    eax,DWORD PTR [rax]
    9bcb:	00 48 46             	add    BYTE PTR [rax+0x46],cl
    9bce:	00 00                	add    BYTE PTR [rax],al
    9bd0:	17                   	(bad)
    9bd1:	28 16                	sub    BYTE PTR [rsi],dl
    9bd3:	00 00                	add    BYTE PTR [rax],al
    9bd5:	ab                   	stos   DWORD PTR es:[rdi],eax
    9bd6:	0c 2e                	or     al,0x2e
    9bd8:	00 00                	add    BYTE PTR [rax],al
    9bda:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9bdd:	69 00 ac 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013ac
    9be3:	00 00                	add    BYTE PTR [rax],al
    9be5:	00 00                	add    BYTE PTR [rax],al
    9be7:	25 ee 22 00 00       	and    eax,0x22ee
    9bec:	48                   	rex.W
    9bed:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9bf0:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    9bf3:	00 00                	add    BYTE PTR [rax],al
    9bf5:	37                   	(bad)
    9bf6:	00 13                	add    BYTE PTR [rbx],dl
    9bf8:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    9bfb:	00 4a db             	add    BYTE PTR [rdx-0x25],cl
    9bfe:	13 00                	adc    eax,DWORD PTR [rax]
    9c00:	00 5d 78             	add    BYTE PTR [rbp+0x78],bl
    9c03:	30 00                	xor    BYTE PTR [rax],al
    9c05:	00 60 2a             	add    BYTE PTR [rax+0x2a],ah
    9c08:	00 00                	add    BYTE PTR [rax],al
    9c0a:	00 00                	add    BYTE PTR [rax],al
    9c0c:	00 00                	add    BYTE PTR [rax],al
    9c0e:	56                   	push   rsi
    9c0f:	04 00                	add    al,0x0
    9c11:	00 00                	add    BYTE PTR [rax],al
    9c13:	00 00                	add    BYTE PTR [rax],al
    9c15:	00 01                	add    BYTE PTR [rcx],al
    9c17:	9c                   	pushf
    9c18:	3a 4e 00             	cmp    cl,BYTE PTR [rsi+0x0]
    9c1b:	00 23                	add    BYTE PTR [rbx],ah
    9c1d:	b7 2b                	mov    bh,0x2b
    9c1f:	00 00                	add    BYTE PTR [rax],al
    9c21:	5d                   	pop    rbp
    9c22:	1b 8e 2c 00 00 2b    	sbb    ecx,DWORD PTR [rsi+0x2b00002c]
    9c28:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c2a:	00 1f                	add    BYTE PTR [rdi],bl
    9c2c:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c2e:	00 23                	add    BYTE PTR [rbx],ah
    9c30:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    9c33:	00 5d 28             	add    BYTE PTR [rbp+0x28],bl
    9c36:	49                   	rex.WB
    9c37:	40 00 00             	rex add BYTE PTR [rax],al
    9c3a:	6d                   	ins    DWORD PTR es:[rdi],dx
    9c3b:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c3d:	00 63 1b             	add    BYTE PTR [rbx+0x1b],ah
    9c40:	00 00                	add    BYTE PTR [rax],al
    9c42:	23 09                	and    ecx,DWORD PTR [rcx]
    9c44:	0d 00 00 5d 3c       	or     eax,0x3c5d0000
    9c49:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9c4a:	41 00 00             	add    BYTE PTR [r8],al
    9c4d:	9f                   	lahf
    9c4e:	1b 00                	sbb    eax,DWORD PTR [rax]
    9c50:	00 97 1b 00 00 23    	add    BYTE PTR [rdi+0x2300001b],dl
    9c56:	3c 29                	cmp    al,0x29
    9c58:	00 00                	add    BYTE PTR [rax],al
    9c5a:	5d                   	pop    rbp
    9c5b:	50                   	push   rax
    9c5c:	b0 2c                	mov    al,0x2c
    9c5e:	00 00                	add    BYTE PTR [rax],al
    9c60:	dc 1b                	fcomp  QWORD PTR [rbx]
    9c62:	00 00                	add    BYTE PTR [rax],al
    9c64:	d0 1b                	rcr    BYTE PTR [rbx],1
    9c66:	00 00                	add    BYTE PTR [rax],al
    9c68:	4b b3 03             	rex.WXB mov r11b,0x3
    9c6b:	00 00                	add    BYTE PTR [rax],al
    9c6d:	4a                   	rex.WX
    9c6e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9c71:	09 03                	or     DWORD PTR [rbx],eax
    9c73:	b0 44                	mov    al,0x44
    9c75:	00 00                	add    BYTE PTR [rax],al
    9c77:	00 00                	add    BYTE PTR [rax],al
    9c79:	00 00                	add    BYTE PTR [rax],al
    9c7b:	4c 5d                	rex.WR pop rbp
    9c7d:	05 00 00 61 0d       	add    eax,0xd610000
    9c82:	51                   	push   rcx
    9c83:	41 00 00             	add    BYTE PTR [r8],al
    9c86:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    9c89:	7f 1f                	jg     9caa <_end+0x3c92>
    9c8b:	fd                   	std
    9c8c:	0c 00                	or     al,0x0
    9c8e:	00 66 0f             	add    BYTE PTR [rsi+0xf],ah
    9c91:	4f                   	rex.WRXB
    9c92:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9c95:	20 1c 00             	and    BYTE PTR [rax+rax*1],bl
    9c98:	00 14 1c             	add    BYTE PTR [rsp+rbx*1],dl
    9c9b:	00 00                	add    BYTE PTR [rax],al
    9c9d:	1f                   	(bad)
    9c9e:	d6                   	(bad)
    9c9f:	22 00                	and    al,BYTE PTR [rax]
    9ca1:	00 67 0d             	add    BYTE PTR [rdi+0xd],ah
    9ca4:	93                   	xchg   ebx,eax
    9ca5:	3e 00 00             	ds add BYTE PTR [rax],al
    9ca8:	62 1c 00             	(bad)
    9cab:	00 58 1c             	add    BYTE PTR [rax+0x1c],bl
    9cae:	00 00                	add    BYTE PTR [rax],al
    9cb0:	1f                   	(bad)
    9cb1:	f4                   	hlt
    9cb2:	2b 00                	sub    eax,DWORD PTR [rax]
    9cb4:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    9cb7:	b0 2c                	mov    al,0x2c
    9cb9:	00 00                	add    BYTE PTR [rax],al
    9cbb:	97                   	xchg   edi,eax
    9cbc:	1c 00                	sbb    al,0x0
    9cbe:	00 93 1c 00 00 1f    	add    BYTE PTR [rbx+0x1f00001c],dl
    9cc4:	a1 22 00 00 95 0c 2e 	movabs eax,ds:0x2e0c95000022
    9ccb:	00 00 
    9ccd:	00 c6                	add    dh,al
    9ccf:	1c 00                	sbb    al,0x0
    9cd1:	00 b0 1c 00 00 1f    	add    BYTE PTR [rax+0x1f00001c],dh
    9cd7:	64 21 00             	and    DWORD PTR fs:[rax],eax
    9cda:	00 9e 0c 2e 00 00    	add    BYTE PTR [rsi+0x2e0c],bl
    9ce0:	00 3b                	add    BYTE PTR [rbx],bh
    9ce2:	1d 00 00 37 1d       	sbb    eax,0x1d370000
    9ce7:	00 00                	add    BYTE PTR [rax],al
    9ce9:	16                   	(bad)
    9cea:	d1 2a                	shr    DWORD PTR [rdx],1
    9cec:	00 00                	add    BYTE PTR [rax],al
    9cee:	00 00                	add    BYTE PTR [rax],al
    9cf0:	00 00                	add    BYTE PTR [rax],al
    9cf2:	28 00                	sub    BYTE PTR [rax],al
    9cf4:	00 00                	add    BYTE PTR [rax],al
    9cf6:	00 00                	add    BYTE PTR [rax],al
    9cf8:	00 00                	add    BYTE PTR [rax],al
    9cfa:	75 47                	jne    9d43 <_end+0x3d2b>
    9cfc:	00 00                	add    BYTE PTR [rax],al
    9cfe:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9d01:	62 0e a6 21 00       	(bad)
    9d06:	00 4c 1d 00          	add    BYTE PTR [rbp+rbx*1+0x0],cl
    9d0a:	00 4a 1d             	add    BYTE PTR [rdx+0x1d],cl
    9d0d:	00 00                	add    BYTE PTR [rax],al
    9d0f:	07                   	(bad)
    9d10:	f4                   	hlt
    9d11:	2a 00                	sub    al,BYTE PTR [rax]
    9d13:	00 00                	add    BYTE PTR [rax],al
    9d15:	00 00                	add    BYTE PTR [rax],al
    9d17:	00 9b 42 00 00 03    	add    BYTE PTR [rbx+0x3000042],bl
    9d1d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    9d20:	7c 00                	jl     9d22 <_end+0x3d0a>
    9d22:	00 00                	add    BYTE PTR [rax],al
    9d24:	16                   	(bad)
    9d25:	31 2b                	xor    DWORD PTR [rbx],ebp
    9d27:	00 00                	add    BYTE PTR [rax],al
    9d29:	00 00                	add    BYTE PTR [rax],al
    9d2b:	00 00                	add    BYTE PTR [rax],al
    9d2d:	1e                   	(bad)
    9d2e:	00 00                	add    BYTE PTR [rax],al
    9d30:	00 00                	add    BYTE PTR [rax],al
    9d32:	00 00                	add    BYTE PTR [rax],al
    9d34:	00 a9 47 00 00 2a    	add    BYTE PTR [rcx+0x2a000047],ch
    9d3a:	6a 00                	push   0x0
    9d3c:	6a 0e                	push   0xe
    9d3e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9d3f:	21 00                	and    DWORD PTR [rax],eax
    9d41:	00 57 1d             	add    BYTE PTR [rdi+0x1d],dl
    9d44:	00 00                	add    BYTE PTR [rax],al
    9d46:	55                   	push   rbp
    9d47:	1d 00 00 20 3d       	sbb    eax,0x3d200000
    9d4c:	2b 00                	sub    eax,DWORD PTR [rax]
    9d4e:	00 00                	add    BYTE PTR [rax],al
    9d50:	00 00                	add    BYTE PTR [rax],al
    9d52:	00 4d 2f             	add    BYTE PTR [rbp+0x2f],cl
    9d55:	00 00                	add    BYTE PTR [rax],al
    9d57:	00 16                	add    BYTE PTR [rsi],dl
    9d59:	4f 2b 00             	rex.WRXB sub r8,QWORD PTR [r8]
    9d5c:	00 00                	add    BYTE PTR [rax],al
    9d5e:	00 00                	add    BYTE PTR [rax],al
    9d60:	00 9d 00 00 00 00    	add    BYTE PTR [rbp+0x0],bl
    9d66:	00 00                	add    BYTE PTR [rax],al
    9d68:	00 c2                	add    dl,al
    9d6a:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9d6d:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9d70:	86 0e                	xchg   BYTE PTR [rsi],cl
    9d72:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9d73:	21 00                	and    DWORD PTR [rax],eax
    9d75:	00 66 1d             	add    BYTE PTR [rsi+0x1d],ah
    9d78:	00 00                	add    BYTE PTR [rax],al
    9d7a:	60                   	(bad)
    9d7b:	1d 00 00 2e 44       	sbb    eax,0x442e0000
    9d80:	03 00                	add    eax,DWORD PTR [rax]
    9d82:	00 1f                	add    BYTE PTR [rdi],bl
    9d84:	ab                   	stos   DWORD PTR es:[rdi],eax
    9d85:	2e 00 00             	cs add BYTE PTR [rax],al
    9d88:	87 0e                	xchg   DWORD PTR [rsi],ecx
    9d8a:	e3 1a                	jrcxz  9da6 <_end+0x3d8e>
    9d8c:	00 00                	add    BYTE PTR [rax],al
    9d8e:	81 1d 00 00 7f 1d 00 	sbb    DWORD PTR [rip+0x1d7f0000],0x65490000        # 1d7f9d98 <_end+0x1d7f3d80>
    9d95:	00 49 65 
    9d98:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9d99:	64 00 8d 0e e3 1a 00 	add    BYTE PTR fs:[rbp+0x1ae30e],cl
    9da0:	00 1f                	add    BYTE PTR [rdi],bl
    9da2:	21 19                	and    DWORD PTR [rcx],ebx
    9da4:	00 00                	add    BYTE PTR [rax],al
    9da6:	8e 0e                	mov    cs,WORD PTR [rsi]
    9da8:	df 1b                	fistp  WORD PTR [rbx]
    9daa:	00 00                	add    BYTE PTR [rax],al
    9dac:	8c 1d 00 00 8a 1d    	mov    WORD PTR [rip+0x1d8a0000],ds        # 1d8a9db2 <_end+0x1d8a3d9a>
    9db2:	00 00                	add    BYTE PTR [rax],al
    9db4:	16                   	(bad)
    9db5:	7e 2b                	jle    9de2 <_end+0x3dca>
    9db7:	00 00                	add    BYTE PTR [rax],al
    9db9:	00 00                	add    BYTE PTR [rax],al
    9dbb:	00 00                	add    BYTE PTR [rax],al
    9dbd:	24 00                	and    al,0x0
    9dbf:	00 00                	add    BYTE PTR [rax],al
    9dc1:	00 00                	add    BYTE PTR [rax],al
    9dc3:	00 00                	add    BYTE PTR [rax],al
    9dc5:	40                   	rex
    9dc6:	48 00 00             	rex.W add BYTE PTR [rax],al
    9dc9:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9dcc:	89 12                	mov    DWORD PTR [rdx],edx
    9dce:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9dcf:	21 00                	and    DWORD PTR [rax],eax
    9dd1:	00 a3 1d 00 00 a1    	add    BYTE PTR [rbx-0x5effffe3],ah
    9dd7:	1d 00 00 07 9d       	sbb    eax,0x9d070000
    9ddc:	2b 00                	sub    eax,DWORD PTR [rax]
    9dde:	00 00                	add    BYTE PTR [rax],al
    9de0:	00 00                	add    BYTE PTR [rax],al
    9de2:	00 23                	add    BYTE PTR [rbx],ah
    9de4:	42 00 00             	rex.X add BYTE PTR [rax],al
    9de7:	03 01                	add    eax,DWORD PTR [rcx]
    9de9:	55                   	push   rbp
    9dea:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9dee:	00 1c 40             	add    BYTE PTR [rax+rax*2],bl
    9df1:	45 00 00             	add    BYTE PTR [r8],r8b
    9df4:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9df5:	2b 00                	sub    eax,DWORD PTR [rax]
    9df7:	00 00                	add    BYTE PTR [rax],al
    9df9:	00 00                	add    BYTE PTR [rax],al
    9dfb:	00 09                	add    BYTE PTR [rcx],cl
    9dfd:	00 54 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dl
    9e01:	00 8e 4d b8 48 00    	add    BYTE PTR [rsi+0x48b84d],cl
    9e07:	00 0b                	add    BYTE PTR [rbx],cl
    9e09:	64 45 00 00          	add    BYTE PTR fs:[r8],r8b
    9e0d:	4d 71 45             	rex.WRB jno 9e55 <_end+0x3e3d>
    9e10:	00 00                	add    BYTE PTR [rax],al
    9e12:	54                   	push   rsp
    9e13:	03 00                	add    eax,DWORD PTR [rax]
    9e15:	00 60 b8             	add    BYTE PTR [rax-0x48],ah
    9e18:	44 00 00             	add    BYTE PTR [rax],r8b
    9e1b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9e1c:	2b 00                	sub    eax,DWORD PTR [rax]
    9e1e:	00 00                	add    BYTE PTR [rax],al
    9e20:	00 00                	add    BYTE PTR [rax],al
    9e22:	00 0a                	add    BYTE PTR [rdx],cl
    9e24:	00 54 03 00          	add    BYTE PTR [rbx+rax*1+0x0],dl
    9e28:	00 1f                	add    BYTE PTR [rdi],bl
    9e2a:	01 17                	add    DWORD PTR [rdi],edx
    9e2c:	0b d3                	or     edx,ebx
    9e2e:	44 00 00             	add    BYTE PTR [rax],r8b
    9e31:	2e 54                	cs push rsp
    9e33:	03 00                	add    eax,DWORD PTR [rax]
    9e35:	00 19                	add    BYTE PTR [rcx],bl
    9e37:	66 44 00 00          	data16 add BYTE PTR [rax],r8b
    9e3b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9e3c:	2b 00                	sub    eax,DWORD PTR [rax]
    9e3e:	00 00                	add    BYTE PTR [rax],al
    9e40:	00 00                	add    BYTE PTR [rax],al
    9e42:	00 0b                	add    BYTE PTR [rbx],cl
    9e44:	00 a7 2b 00 00 00    	add    BYTE PTR [rdi+0x2b],ah
	...
    9e52:	00 00                	add    BYTE PTR [rax],al
    9e54:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    9e57:	0d 0b 86 44 00       	or     eax,0x44860b
    9e5c:	00 0b                	add    BYTE PTR [rbx],cl
    9e5e:	7d 44                	jge    9ea4 <_end+0x3e8c>
    9e60:	00 00                	add    BYTE PTR [rax],al
    9e62:	00 00                	add    BYTE PTR [rax],al
    9e64:	00 00                	add    BYTE PTR [rax],al
    9e66:	00 1c 89             	add    BYTE PTR [rcx+rcx*4],bl
    9e69:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9e6c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9e6d:	2b 00                	sub    eax,DWORD PTR [rax]
    9e6f:	00 00                	add    BYTE PTR [rax],al
    9e71:	00 00                	add    BYTE PTR [rax],al
    9e73:	00 01                	add    BYTE PTR [rcx],al
    9e75:	00 69 03             	add    BYTE PTR [rcx+0x3],ch
    9e78:	00 00                	add    BYTE PTR [rax],al
    9e7a:	8e 54 a6 49          	mov    ss,WORD PTR [rsi+riz*4+0x49]
    9e7e:	00 00                	add    BYTE PTR [rax],al
    9e80:	05 b9 4e 00 00       	add    eax,0x4eb9
    9e85:	ae                   	scas   al,BYTE PTR es:[rdi]
    9e86:	1d 00 00 ac 1d       	sbb    eax,0x1dac0000
    9e8b:	00 00                	add    BYTE PTR [rax],al
    9e8d:	05 ad 4e 00 00       	add    eax,0x4ead
    9e92:	bd 1d 00 00 bb       	mov    ebp,0xbb00001d
    9e97:	1d 00 00 61 6c       	sbb    eax,0x6c610000
    9e9c:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9e9f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9ea0:	2b 00                	sub    eax,DWORD PTR [rax]
    9ea2:	00 00                	add    BYTE PTR [rax],al
    9ea4:	00 00                	add    BYTE PTR [rax],al
    9ea6:	00 02                	add    BYTE PTR [rdx],al
    9ea8:	00 a7 2b 00 00 00    	add    BYTE PTR [rdi+0x2b],ah
	...
    9eb6:	00 00                	add    BYTE PTR [rax],al
    9eb8:	00 41 1d             	add    BYTE PTR [rcx+0x1d],al
    9ebb:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9ebe:	05 7a 4e 00 00       	add    eax,0x4e7a
    9ec3:	cc                   	int3
    9ec4:	1d 00 00 ca 1d       	sbb    eax,0x1dca0000
    9ec9:	00 00                	add    BYTE PTR [rax],al
    9ecb:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    9ece:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9ed1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9ed2:	2b 00                	sub    eax,DWORD PTR [rax]
    9ed4:	00 00                	add    BYTE PTR [rax],al
    9ed6:	00 00                	add    BYTE PTR [rax],al
    9ed8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    9edb:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9edc:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    9eea:	00 26                	add    BYTE PTR [rsi],ah
    9eec:	4f                   	rex.WRXB
    9eed:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9ef0:	05 7a 4e 00 00       	add    eax,0x4e7a
    9ef5:	db 1d 00 00 d9 1d    	fistp  DWORD PTR [rip+0x1dd90000]        # 1dd99efb <_end+0x1dd93ee3>
    9efb:	00 00                	add    BYTE PTR [rax],al
    9efd:	00 60 ed             	add    BYTE PTR [rax-0x13],ah
    9f00:	44 00 00             	add    BYTE PTR [rax],r8b
    9f03:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9f04:	2b 00                	sub    eax,DWORD PTR [rax]
    9f06:	00 00                	add    BYTE PTR [rax],al
    9f08:	00 00                	add    BYTE PTR [rax],al
    9f0a:	00 06                	add    BYTE PTR [rsi],al
    9f0c:	00 79 03             	add    BYTE PTR [rcx+0x3],bh
    9f0f:	00 00                	add    BYTE PTR [rax],al
    9f11:	77 04                	ja     9f17 <_end+0x3eff>
    9f13:	29 0b                	sub    DWORD PTR [rbx],ecx
    9f15:	26 45 00 00          	es add BYTE PTR [r8],r8b
    9f19:	0b 1a                	or     ebx,DWORD PTR [rdx]
    9f1b:	45 00 00             	add    BYTE PTR [r8],r8b
    9f1e:	2e 79 03             	cs jns 9f24 <_end+0x3f0c>
    9f21:	00 00                	add    BYTE PTR [rax],al
    9f23:	8a 01                	mov    al,BYTE PTR [rcx]
    9f25:	84 71 00             	test   BYTE PTR [rcx+0x0],dh
    9f28:	00 a7 2b 00 00 00    	add    BYTE PTR [rdi+0x2b],ah
    9f2e:	00 00                	add    BYTE PTR [rax],al
    9f30:	00 07                	add    BYTE PTR [rdi],al
    9f32:	00 a7 2b 00 00 00    	add    BYTE PTR [rdi+0x2b],ah
	...
    9f40:	00 00                	add    BYTE PTR [rax],al
    9f42:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    9f45:	02 09                	add    cl,BYTE PTR [rcx]
    9f47:	0b a4 71 00 00 0b 9b 	or     esp,DWORD PTR [rcx+rsi*2-0x64f50000]
    9f4e:	71 00                	jno    9f50 <_end+0x3f38>
    9f50:	00 00                	add    BYTE PTR [rax],al
    9f52:	00 00                	add    BYTE PTR [rax],al
    9f54:	00 20                	add    BYTE PTR [rax],ah
    9f56:	76 2b                	jbe    9f83 <_end+0x3f6b>
    9f58:	00 00                	add    BYTE PTR [rax],al
    9f5a:	00 00                	add    BYTE PTR [rax],al
    9f5c:	00 00                	add    BYTE PTR [rax],al
    9f5e:	d0 1a                	rcr    BYTE PTR [rdx],1
    9f60:	00 00                	add    BYTE PTR [rax],al
    9f62:	20 a7 2b 00 00 00    	and    BYTE PTR [rdi+0x2b],ah
    9f68:	00 00                	add    BYTE PTR [rax],al
    9f6a:	00 d0                	add    al,dl
    9f6c:	1a 00                	sbb    al,BYTE PTR [rax]
    9f6e:	00 00                	add    BYTE PTR [rax],al
    9f70:	00 62 99             	add    BYTE PTR [rdx-0x67],ah
    9f73:	03 00                	add    eax,DWORD PTR [rax]
    9f75:	00 38                	add    BYTE PTR [rax],bh
    9f77:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    9f7a:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9f7d:	98                   	cwde
    9f7e:	13 b0 2c 00 00 f0    	adc    esi,DWORD PTR [rax-0xfffffd4]
    9f84:	1d 00 00 e8 1d       	sbb    eax,0x1de80000
    9f89:	00 00                	add    BYTE PTR [rax],al
    9f8b:	39 f2                	cmp    edx,esi
    9f8d:	71 00                	jno    9f8f <_end+0x3f77>
    9f8f:	00 54 2c 00          	add    BYTE PTR [rsp+rbp*1+0x0],dl
    9f93:	00 00                	add    BYTE PTR [rax],al
    9f95:	00 00                	add    BYTE PTR [rax],al
    9f97:	00 02                	add    BYTE PTR [rdx],al
    9f99:	00 a9 03 00 00 99    	add    BYTE PTR [rcx-0x66fffffd],ch
    9f9f:	10 05 0c 72 00 00    	adc    BYTE PTR [rip+0x720c],al        # 111b1 <_end+0xb199>
    9fa5:	12 1e                	adc    bl,BYTE PTR [rsi]
    9fa7:	00 00                	add    BYTE PTR [rax],al
    9fa9:	10 1e                	adc    BYTE PTR [rsi],bl
    9fab:	00 00                	add    BYTE PTR [rax],al
    9fad:	05 00 72 00 00       	add    eax,0x7200
    9fb2:	27                   	(bad)
    9fb3:	1e                   	(bad)
    9fb4:	00 00                	add    BYTE PTR [rax],al
    9fb6:	23 1e                	and    ebx,DWORD PTR [rsi]
    9fb8:	00 00                	add    BYTE PTR [rax],al
    9fba:	07                   	(bad)
    9fbb:	62 2c 00             	(bad)
    9fbe:	00 00                	add    BYTE PTR [rax],al
    9fc0:	00 00                	add    BYTE PTR [rax],al
    9fc2:	00 63 42             	add    BYTE PTR [rbx+0x42],ah
    9fc5:	00 00                	add    BYTE PTR [rax],al
    9fc7:	03 01                	add    eax,DWORD PTR [rcx]
    9fc9:	55                   	push   rbp
    9fca:	04 76                	add    al,0x76
    9fcc:	f8                   	clc
    9fcd:	7e 06                	jle    9fd5 <_end+0x3fbd>
    9fcf:	03 01                	add    eax,DWORD PTR [rcx]
    9fd1:	54                   	push   rsp
    9fd2:	01 32                	add    DWORD PTR [rdx],esi
    9fd4:	03 01                	add    eax,DWORD PTR [rcx]
    9fd6:	51                   	push   rcx
    9fd7:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    9fda:	03 01                	add    eax,DWORD PTR [rcx]
    9fdc:	61                   	(bad)
    9fdd:	06                   	(bad)
    9fde:	76 a8                	jbe    9f88 <_end+0x3f70>
    9fe0:	7f a6                	jg     9f88 <_end+0x3f70>
    9fe2:	08 2e                	or     BYTE PTR [rsi],ch
    9fe4:	00 00                	add    BYTE PTR [rax],al
    9fe6:	00 1c f2             	add    BYTE PTR [rdx+rsi*8],bl
    9fe9:	71 00                	jno    9feb <_end+0x3fd3>
    9feb:	00 02                	add    BYTE PTR [rdx],al
    9fed:	2c 00                	sub    al,0x0
    9fef:	00 00                	add    BYTE PTR [rax],al
    9ff1:	00 00                	add    BYTE PTR [rax],al
    9ff3:	00 02                	add    BYTE PTR [rdx],al
    9ff5:	00 89 03 00 00 97    	add    BYTE PTR [rcx-0x68fffffd],cl
    9ffb:	0c ca                	or     al,0xca
    9ffd:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a000:	05 0c 72 00 00       	add    eax,0x720c
    a005:	3c 1e                	cmp    al,0x1e
    a007:	00 00                	add    BYTE PTR [rax],al
    a009:	38 1e                	cmp    BYTE PTR [rsi],bl
    a00b:	00 00                	add    BYTE PTR [rax],al
    a00d:	05 00 72 00 00       	add    eax,0x7200
    a012:	61                   	(bad)
    a013:	1e                   	(bad)
    a014:	00 00                	add    BYTE PTR [rax],al
    a016:	5d                   	pop    rbp
    a017:	1e                   	(bad)
    a018:	00 00                	add    BYTE PTR [rax],al
    a01a:	0a 22                	or     ah,BYTE PTR [rdx]
    a01c:	2c 00                	sub    al,0x0
    a01e:	00 00                	add    BYTE PTR [rax],al
    a020:	00 00                	add    BYTE PTR [rax],al
    a022:	00 5b 75             	add    BYTE PTR [rbx+0x75],bl
    a025:	00 00                	add    BYTE PTR [rax],al
    a027:	9c                   	pushf
    a028:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a02b:	03 01                	add    eax,DWORD PTR [rcx]
    a02d:	55                   	push   rbp
    a02e:	09 03                	or     DWORD PTR [rbx],eax
    a030:	e5 41                	in     eax,0x41
    a032:	00 00                	add    BYTE PTR [rax],al
    a034:	00 00                	add    BYTE PTR [rax],al
    a036:	00 00                	add    BYTE PTR [rax],al
    a038:	03 01                	add    eax,DWORD PTR [rcx]
    a03a:	54                   	push   rsp
    a03b:	01 31                	add    DWORD PTR [rcx],esi
    a03d:	03 01                	add    eax,DWORD PTR [rcx]
    a03f:	51                   	push   rcx
    a040:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a043:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a046:	76 f8                	jbe    a040 <_end+0x4028>
    a048:	7e 06                	jle    a050 <_end+0x4038>
    a04a:	00 07                	add    BYTE PTR [rdi],al
    a04c:	38 2e                	cmp    BYTE PTR [rsi],ch
    a04e:	00 00                	add    BYTE PTR [rax],al
    a050:	00 00                	add    BYTE PTR [rax],al
    a052:	00 00                	add    BYTE PTR [rax],al
    a054:	5b                   	pop    rbx
    a055:	75 00                	jne    a057 <_end+0x403f>
    a057:	00 03                	add    BYTE PTR [rbx],al
    a059:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a05c:	03 e5                	add    esp,ebp
    a05e:	41 00 00             	add    BYTE PTR [r8],al
    a061:	00 00                	add    BYTE PTR [rax],al
    a063:	00 00                	add    BYTE PTR [rax],al
    a065:	03 01                	add    eax,DWORD PTR [rcx]
    a067:	54                   	push   rsp
    a068:	01 31                	add    DWORD PTR [rcx],esi
    a06a:	03 01                	add    eax,DWORD PTR [rcx]
    a06c:	51                   	push   rcx
    a06d:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a070:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a073:	76 f8                	jbe    a06d <_end+0x4055>
    a075:	7e 06                	jle    a07d <_end+0x4065>
    a077:	00 00                	add    BYTE PTR [rax],al
    a079:	1c e1                	sbb    al,0xe1
    a07b:	45 00 00             	add    BYTE PTR [r8],r8b
    a07e:	8d 2c 00             	lea    ebp,[rax+rax*1]
    a081:	00 00                	add    BYTE PTR [rax],al
    a083:	00 00                	add    BYTE PTR [rax],al
    a085:	00 01                	add    BYTE PTR [rcx],al
    a087:	00 b9 03 00 00 9e    	add    BYTE PTR [rcx-0x61fffffd],bh
    a08d:	31 e7                	xor    edi,esp
    a08f:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    a092:	05 0c 46 00 00       	add    eax,0x460c
    a097:	80 1e 00             	sbb    BYTE PTR [rsi],0x0
    a09a:	00 74 1e 00          	add    BYTE PTR [rsi+rbx*1+0x0],dh
    a09e:	00 05 00 46 00 00    	add    BYTE PTR [rip+0x4600],al        # e6a4 <_end+0x868c>
    a0a4:	ca 1e 00             	retf   0x1e
    a0a7:	00 ba 1e 00 00 05    	add    BYTE PTR [rdx+0x500001e],bh
    a0ad:	f4                   	hlt
    a0ae:	45 00 00             	add    BYTE PTR [r8],r8b
    a0b1:	13 1f                	adc    ebx,DWORD PTR [rdi]
    a0b3:	00 00                	add    BYTE PTR [rax],al
    a0b5:	0b 1f                	or     ebx,DWORD PTR [rdi]
    a0b7:	00 00                	add    BYTE PTR [rax],al
    a0b9:	2e b9 03 00 00 15    	cs mov ecx,0x15000003
    a0bf:	21 46 00             	and    DWORD PTR [rsi+0x0],eax
    a0c2:	00 42 1f             	add    BYTE PTR [rdx+0x1f],al
    a0c5:	00 00                	add    BYTE PTR [rax],al
    a0c7:	36 1f                	ss (bad)
    a0c9:	00 00                	add    BYTE PTR [rax],al
    a0cb:	3a 2c 46             	cmp    ch,BYTE PTR [rsi+rax*2]
    a0ce:	00 00                	add    BYTE PTR [rax],al
    a0d0:	d3 03                	rol    DWORD PTR [rbx],cl
    a0d2:	00 00                	add    BYTE PTR [rax],al
    a0d4:	2f                   	(bad)
    a0d5:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    a0d8:	3b 2d 46 00 00 00    	cmp    ebp,DWORD PTR [rip+0x46]        # a124 <_end+0x410c>
    a0de:	1c 1a                	sbb    al,0x1a
    a0e0:	72 00                	jb     a0e2 <_end+0x40ca>
    a0e2:	00 51 2d             	add    BYTE PTR [rcx+0x2d],dl
	...
    a0ed:	de 03                	fiadd  WORD PTR [rbx]
    a0ef:	00 00                	add    BYTE PTR [rax],al
    a0f1:	af                   	scas   eax,DWORD PTR es:[rdi]
    a0f2:	1e                   	(bad)
    a0f3:	63 4b 00             	movsxd ecx,DWORD PTR [rbx+0x0]
    a0f6:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 1131f <_end+0xb307>
    a0fc:	73 1f                	jae    a11d <_end+0x4105>
    a0fe:	00 00                	add    BYTE PTR [rax],al
    a100:	6d                   	ins    DWORD PTR es:[rdi],dx
    a101:	1f                   	(bad)
    a102:	00 00                	add    BYTE PTR [rax],al
    a104:	20 ac 2e 00 00 00 00 	and    BYTE PTR [rsi+rbp*1+0x0],ch
    a10b:	00 00                	add    BYTE PTR [rax],al
    a10d:	64 75 00             	fs jne a110 <_end+0x40f8>
    a110:	00 00                	add    BYTE PTR [rax],al
    a112:	19 e1                	sbb    ecx,esp
    a114:	45 00 00             	add    BYTE PTR [r8],r8b
    a117:	5f                   	pop    rdi
    a118:	2e 00 00             	cs add BYTE PTR [rax],al
    a11b:	00 00                	add    BYTE PTR [rax],al
    a11d:	00 00                	add    BYTE PTR [rax],al
    a11f:	01 00                	add    DWORD PTR [rax],eax
    a121:	5f                   	pop    rdi
    a122:	2e 00 00             	cs add BYTE PTR [rax],al
    a125:	00 00                	add    BYTE PTR [rax],al
    a127:	00 00                	add    BYTE PTR [rax],al
    a129:	1f                   	(bad)
    a12a:	00 00                	add    BYTE PTR [rax],al
    a12c:	00 00                	add    BYTE PTR [rax],al
    a12e:	00 00                	add    BYTE PTR [rax],al
    a130:	00 01                	add    BYTE PTR [rcx],al
    a132:	a8 08                	test   al,0x8
    a134:	05 f4 45 00 00       	add    eax,0x45f4
    a139:	8b 1f                	mov    ebx,DWORD PTR [rdi]
    a13b:	00 00                	add    BYTE PTR [rax],al
    a13d:	89 1f                	mov    DWORD PTR [rdi],ebx
    a13f:	00 00                	add    BYTE PTR [rax],al
    a141:	05 00 46 00 00       	add    eax,0x4600
    a146:	8b 1f                	mov    ebx,DWORD PTR [rdi]
    a148:	00 00                	add    BYTE PTR [rax],al
    a14a:	89 1f                	mov    DWORD PTR [rdi],ebx
    a14c:	00 00                	add    BYTE PTR [rax],al
    a14e:	0b 0c 46             	or     ecx,DWORD PTR [rsi+rax*2]
    a151:	00 00                	add    BYTE PTR [rax],al
    a153:	3b 21                	cmp    esp,DWORD PTR [rcx]
    a155:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    a158:	07                   	(bad)
    a159:	7e 2e                	jle    a189 <_end+0x4171>
    a15b:	00 00                	add    BYTE PTR [rax],al
    a15d:	00 00                	add    BYTE PTR [rax],al
    a15f:	00 00                	add    BYTE PTR [rax],al
    a161:	3f                   	(bad)
    a162:	44 00 00             	add    BYTE PTR [rax],r8b
    a165:	03 01                	add    eax,DWORD PTR [rcx]
    a167:	55                   	push   rbp
    a168:	09 03                	or     DWORD PTR [rbx],eax
    a16a:	f9                   	stc
    a16b:	41 00 00             	add    BYTE PTR [r8],al
    a16e:	00 00                	add    BYTE PTR [rax],al
    a170:	00 00                	add    BYTE PTR [rax],al
    a172:	03 01                	add    eax,DWORD PTR [rcx]
    a174:	54                   	push   rsp
    a175:	09 03                	or     DWORD PTR [rbx],eax
    a177:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a178:	41 00 00             	add    BYTE PTR [r8],al
    a17b:	00 00                	add    BYTE PTR [rax],al
    a17d:	00 00                	add    BYTE PTR [rax],al
    a17f:	03 01                	add    eax,DWORD PTR [rcx]
    a181:	51                   	push   rcx
    a182:	02 08                	add    cl,BYTE PTR [rax]
    a184:	a9 03 01 52 09       	test   eax,0x9520103
    a189:	03 e8                	add    ebp,eax
    a18b:	44 00 00             	add    BYTE PTR [rax],r8b
	...
    a196:	1c d6                	sbb    al,0xd6
    a198:	71 00                	jno    a19a <_end+0x4182>
    a19a:	00 73 2d             	add    BYTE PTR [rbx+0x2d],dh
    a19d:	00 00                	add    BYTE PTR [rax],al
    a19f:	00 00                	add    BYTE PTR [rax],al
    a1a1:	00 00                	add    BYTE PTR [rax],al
    a1a3:	03 00                	add    eax,DWORD PTR [rax]
    a1a5:	ee                   	out    dx,al
    a1a6:	03 00                	add    eax,DWORD PTR [rax]
    a1a8:	00 a0 0b 38 4c 00    	add    BYTE PTR [rax+0x4c380b],ah
    a1ae:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11398 <_end+0xb380>
    a1b4:	96                   	xchg   esi,eax
    a1b5:	1f                   	(bad)
    a1b6:	00 00                	add    BYTE PTR [rax],al
    a1b8:	94                   	xchg   esp,eax
    a1b9:	1f                   	(bad)
    a1ba:	00 00                	add    BYTE PTR [rax],al
    a1bc:	07                   	(bad)
    a1bd:	8b 2d 00 00 00 00    	mov    ebp,DWORD PTR [rip+0x0]        # a1c3 <_end+0x41ab>
    a1c3:	00 00                	add    BYTE PTR [rax],al
    a1c5:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a1c8:	00 03                	add    BYTE PTR [rbx],al
    a1ca:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a1cd:	32 03                	xor    al,BYTE PTR [rbx]
    a1cf:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a1d3:	0d 42 00 00 00       	or     eax,0x42
    a1d8:	00 00                	add    BYTE PTR [rax],al
    a1da:	00 03                	add    BYTE PTR [rbx],al
    a1dc:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    a1df:	76 a8                	jbe    a189 <_end+0x4171>
    a1e1:	7f a6                	jg     a189 <_end+0x4171>
    a1e3:	08 2e                	or     BYTE PTR [rsi],ch
    a1e5:	00 00                	add    BYTE PTR [rax],al
    a1e7:	09 d6                	or     esi,edx
    a1e9:	71 00                	jno    a1eb <_end+0x41d3>
    a1eb:	00 8b 2d 00 00 00    	add    BYTE PTR [rbx+0x2d],cl
    a1f1:	00 00                	add    BYTE PTR [rax],al
    a1f3:	00 02                	add    BYTE PTR [rdx],al
    a1f5:	00 8b 2d 00 00 00    	add    BYTE PTR [rbx+0x2d],cl
    a1fb:	00 00                	add    BYTE PTR [rax],al
    a1fd:	00 1b                	add    BYTE PTR [rbx],bl
    a1ff:	00 00                	add    BYTE PTR [rax],al
    a201:	00 00                	add    BYTE PTR [rax],al
    a203:	00 00                	add    BYTE PTR [rax],al
    a205:	00 a1 0b 92 4c 00    	add    BYTE PTR [rcx+0x4c920b],ah
    a20b:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 113f5 <_end+0xb3dd>
    a211:	a9 1f 00 00 a7       	test   eax,0xa700001f
    a216:	1f                   	(bad)
    a217:	00 00                	add    BYTE PTR [rax],al
    a219:	07                   	(bad)
    a21a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a21b:	2d 00 00 00 00       	sub    eax,0x0
    a220:	00 00                	add    BYTE PTR [rax],al
    a222:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a225:	00 03                	add    BYTE PTR [rbx],al
    a227:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a22a:	32 03                	xor    al,BYTE PTR [rbx]
    a22c:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a230:	2b 42 00             	sub    eax,DWORD PTR [rdx+0x0]
    a233:	00 00                	add    BYTE PTR [rax],al
    a235:	00 00                	add    BYTE PTR [rax],al
    a237:	00 03                	add    BYTE PTR [rbx],al
    a239:	01 61 03             	add    DWORD PTR [rcx+0x3],esp
    a23c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a23d:	03 2e                	add    ebp,DWORD PTR [rsi]
    a23f:	00 00                	add    BYTE PTR [rax],al
    a241:	1c d6                	sbb    al,0xd6
    a243:	71 00                	jno    a245 <_end+0x422d>
    a245:	00 a6 2d 00 00 00    	add    BYTE PTR [rsi+0x2d],ah
    a24b:	00 00                	add    BYTE PTR [rax],al
    a24d:	00 02                	add    BYTE PTR [rdx],al
    a24f:	00 f9                	add    cl,bh
    a251:	03 00                	add    eax,DWORD PTR [rax]
    a253:	00 a2 0b f3 4c 00    	add    BYTE PTR [rdx+0x4cf30b],ah
    a259:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11443 <_end+0xb42b>
    a25f:	bc 1f 00 00 ba       	mov    esp,0xba00001f
    a264:	1f                   	(bad)
    a265:	00 00                	add    BYTE PTR [rax],al
    a267:	07                   	(bad)
    a268:	d2 2d 00 00 00 00    	shr    BYTE PTR [rip+0x0],cl        # a26e <_end+0x4256>
    a26e:	00 00                	add    BYTE PTR [rax],al
    a270:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a273:	00 03                	add    BYTE PTR [rbx],al
    a275:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a278:	32 03                	xor    al,BYTE PTR [rbx]
    a27a:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a27e:	49                   	rex.WB
    a27f:	42 00 00             	rex.X add BYTE PTR [rax],al
    a282:	00 00                	add    BYTE PTR [rax],al
    a284:	00 00                	add    BYTE PTR [rax],al
    a286:	03 01                	add    eax,DWORD PTR [rcx]
    a288:	61                   	(bad)
    a289:	16                   	(bad)
    a28a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a28b:	03 2e                	add    ebp,DWORD PTR [rsi]
    a28d:	76 a8                	jbe    a237 <_end+0x421f>
    a28f:	7f a6                	jg     a237 <_end+0x421f>
    a291:	08 2e                	or     BYTE PTR [rsi],ch
    a293:	1b a4 2e 08 00 00 00 	sbb    esp,DWORD PTR [rsi+rbp*1+0x8]
    a29a:	00 00                	add    BYTE PTR [rax],al
    a29c:	00 59 40             	add    BYTE PTR [rcx+0x40],bl
    a29f:	1e                   	(bad)
    a2a0:	00 00                	add    BYTE PTR [rax],al
    a2a2:	0a c1                	or     al,cl
    a2a4:	2a 00                	sub    al,BYTE PTR [rax]
    a2a6:	00 00                	add    BYTE PTR [rax],al
    a2a8:	00 00                	add    BYTE PTR [rax],al
    a2aa:	00 5a 2f             	add    BYTE PTR [rdx+0x2f],bl
    a2ad:	00 00                	add    BYTE PTR [rax],al
    a2af:	0a 4d 00             	or     cl,BYTE PTR [rbp+0x0]
    a2b2:	00 03                	add    BYTE PTR [rbx],al
    a2b4:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a2b7:	3a 00                	cmp    al,BYTE PTR [rax]
    a2b9:	0a d1                	or     dl,cl
    a2bb:	2a 00                	sub    al,BYTE PTR [rax]
    a2bd:	00 00                	add    BYTE PTR [rax],al
    a2bf:	00 00                	add    BYTE PTR [rax],al
    a2c1:	00 ba 42 00 00 2d    	add    BYTE PTR [rdx+0x2d000042],bh
    a2c7:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a2ca:	03 01                	add    eax,DWORD PTR [rcx]
    a2cc:	55                   	push   rbp
    a2cd:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a2d1:	01 54 02 7f          	add    DWORD PTR [rdx+rax*1+0x7f],edx
    a2d5:	00 03                	add    BYTE PTR [rbx],al
    a2d7:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    a2da:	32 00                	xor    al,BYTE PTR [rax]
    a2dc:	0a 08                	or     cl,BYTE PTR [rax]
    a2de:	2b 00                	sub    eax,DWORD PTR [rax]
    a2e0:	00 00                	add    BYTE PTR [rax],al
    a2e2:	00 00                	add    BYTE PTR [rax],al
    a2e4:	00 47 42             	add    BYTE PTR [rdi+0x42],al
    a2e7:	00 00                	add    BYTE PTR [rax],al
    a2e9:	4d                   	rex.WRB
    a2ea:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a2ed:	03 01                	add    eax,DWORD PTR [rcx]
    a2ef:	55                   	push   rbp
    a2f0:	05 0c 40 42 0f       	add    eax,0xf42400c
    a2f5:	00 03                	add    BYTE PTR [rbx],al
    a2f7:	01 54 01 34          	add    DWORD PTR [rcx+rax*1+0x34],edx
    a2fb:	00 0a                	add    BYTE PTR [rdx],cl
    a2fd:	2d 2b 00 00 00       	sub    eax,0x2b
    a302:	00 00                	add    BYTE PTR [rax],al
    a304:	00 47 42             	add    BYTE PTR [rdi+0x42],al
    a307:	00 00                	add    BYTE PTR [rax],al
    a309:	6c                   	ins    BYTE PTR es:[rdi],dx
    a30a:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a30d:	03 01                	add    eax,DWORD PTR [rcx]
    a30f:	55                   	push   rbp
    a310:	04 76                	add    al,0x76
    a312:	80 7f 06 03          	cmp    BYTE PTR [rdi+0x6],0x3
    a316:	01 54 01 38          	add    DWORD PTR [rcx+rax*1+0x38],edx
    a31a:	00 0a                	add    BYTE PTR [rdx],cl
    a31c:	02 2c 00             	add    ch,BYTE PTR [rax+rax*1]
    a31f:	00 00                	add    BYTE PTR [rax],al
    a321:	00 00                	add    BYTE PTR [rax],al
    a323:	00 84 42 00 00 85 4d 	add    BYTE PTR [rdx+rax*2+0x4d850000],al
    a32a:	00 00                	add    BYTE PTR [rax],al
    a32c:	03 01                	add    eax,DWORD PTR [rcx]
    a32e:	55                   	push   rbp
    a32f:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a332:	7f 00                	jg     a334 <_end+0x431c>
    a334:	27                   	(bad)
    a335:	f4                   	hlt
    a336:	2c 00                	sub    al,0x0
    a338:	00 00                	add    BYTE PTR [rax],al
    a33a:	00 00                	add    BYTE PTR [rax],al
    a33c:	00 01                	add    BYTE PTR [rcx],al
    a33e:	30 0a                	xor    BYTE PTR [rdx],cl
    a340:	db 2d 00 00 00 00    	fld    TBYTE PTR [rip+0x0]        # a346 <_end+0x432e>
    a346:	00 00                	add    BYTE PTR [rax],al
    a348:	f5                   	cmc
    a349:	42 00 00             	rex.X add BYTE PTR [rax],al
    a34c:	aa                   	stos   BYTE PTR es:[rdi],al
    a34d:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a350:	03 01                	add    eax,DWORD PTR [rcx]
    a352:	55                   	push   rbp
    a353:	04 76                	add    al,0x76
    a355:	90                   	nop
    a356:	7f 06                	jg     a35e <_end+0x4346>
    a358:	00 8b 01 0b 2e 00    	add    BYTE PTR [rbx+0x2e0b01],cl
    a35e:	00 00                	add    BYTE PTR [rax],al
    a360:	00 00                	add    BYTE PTR [rax],al
    a362:	00 f5                	add    ch,dh
    a364:	42 00 00             	rex.X add BYTE PTR [rax],al
    a367:	ca 4d 00             	retf   0x4d
    a36a:	00 03                	add    BYTE PTR [rbx],al
    a36c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a36f:	91                   	xchg   ecx,eax
    a370:	70 09                	jo     a37b <_end+0x4363>
    a372:	e0 1a                	loopne a38e <_end+0x4376>
    a374:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    a377:	06                   	(bad)
    a378:	00 27                	add    BYTE PTR [rdi],ah
    a37a:	0e                   	(bad)
    a37b:	2e 00 00             	cs add BYTE PTR [rax],al
    a37e:	00 00                	add    BYTE PTR [rax],al
    a380:	00 00                	add    BYTE PTR [rax],al
    a382:	01 30                	add    DWORD PTR [rax],esi
    a384:	0a 1b                	or     bl,BYTE PTR [rbx]
    a386:	2e 00 00             	cs add BYTE PTR [rax],al
    a389:	00 00                	add    BYTE PTR [rax],al
    a38b:	00 00                	add    BYTE PTR [rax],al
    a38d:	84 42 00             	test   BYTE PTR [rdx+0x0],al
    a390:	00 ed                	add    ch,ch
    a392:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a395:	03 01                	add    eax,DWORD PTR [rcx]
    a397:	55                   	push   rbp
    a398:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a39c:	0a 9d 2e 00 00 00    	or     bl,BYTE PTR [rbp+0x2e]
    a3a2:	00 00                	add    BYTE PTR [rax],al
    a3a4:	00 3f                	add    BYTE PTR [rdi],bh
    a3a6:	44 00 00             	add    BYTE PTR [rax],r8b
    a3a9:	2c 4e                	sub    al,0x4e
    a3ab:	00 00                	add    BYTE PTR [rax],al
    a3ad:	03 01                	add    eax,DWORD PTR [rcx]
    a3af:	55                   	push   rbp
    a3b0:	09 03                	or     DWORD PTR [rbx],eax
    a3b2:	8b 41 00             	mov    eax,DWORD PTR [rcx+0x0]
    a3b5:	00 00                	add    BYTE PTR [rax],al
    a3b7:	00 00                	add    BYTE PTR [rax],al
    a3b9:	00 03                	add    BYTE PTR [rbx],al
    a3bb:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a3bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a3c0:	41 00 00             	add    BYTE PTR [r8],al
    a3c3:	00 00                	add    BYTE PTR [rax],al
    a3c5:	00 00                	add    BYTE PTR [rax],al
    a3c7:	03 01                	add    eax,DWORD PTR [rcx]
    a3c9:	51                   	push   rcx
    a3ca:	02 08                	add    cl,BYTE PTR [rax]
    a3cc:	5e                   	pop    rsi
    a3cd:	03 01                	add    eax,DWORD PTR [rcx]
    a3cf:	52                   	push   rdx
    a3d0:	09 03                	or     DWORD PTR [rbx],eax
    a3d2:	b0 44                	mov    al,0x44
    a3d4:	00 00                	add    BYTE PTR [rax],al
    a3d6:	00 00                	add    BYTE PTR [rax],al
    a3d8:	00 00                	add    BYTE PTR [rax],al
    a3da:	00 20                	add    BYTE PTR [rax],ah
    a3dc:	a2 2e 00 00 00 00 00 	movabs ds:0x6d0000000000002e,al
    a3e3:	00 6d 
    a3e5:	75 00                	jne    a3e7 <_end+0x43cf>
    a3e7:	00 00                	add    BYTE PTR [rax],al
    a3e9:	25 ee 22 00 00       	and    eax,0x22ee
    a3ee:	4a                   	rex.WX
    a3ef:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a3f2:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a3f5:	00 00                	add    BYTE PTR [rax],al
    a3f7:	36 00 13             	ss add BYTE PTR [rbx],dl
    a3fa:	3a 4e 00             	cmp    cl,BYTE PTR [rsi+0x0]
    a3fd:	00 0d b0 2c 00 00    	add    BYTE PTR [rip+0x2cb0],cl        # d0b3 <_end+0x709b>
    a403:	30 90 1c 00 00 62    	xor    BYTE PTR [rax+0x6200001c],dl
    a409:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a40c:	03 6c 4e 00          	add    ebp,DWORD PTR [rsi+rcx*2+0x0]
    a410:	00 31                	add    BYTE PTR [rcx],dh
    a412:	1e                   	(bad)
    a413:	1e                   	(bad)
    a414:	00 00                	add    BYTE PTR [rax],al
    a416:	ce                   	(bad)
    a417:	3f                   	(bad)
    a418:	00 00                	add    BYTE PTR [rax],al
    a41a:	00 30                	add    BYTE PTR [rax],dh
    a41c:	3c 1b                	cmp    al,0x1b
    a41e:	00 00                	add    BYTE PTR [rax],al
    a420:	7a 4e                	jp     a470 <_end+0x4458>
    a422:	00 00                	add    BYTE PTR [rax],al
    a424:	03 84 4e 00 00 31 1e 	add    eax,DWORD PTR [rsi+rcx*2+0x1e310000]
    a42b:	1e                   	(bad)
    a42c:	00 00                	add    BYTE PTR [rax],al
    a42e:	f6 41 00 00          	test   BYTE PTR [rcx+0x0],0x0
    a432:	00 22                	add    BYTE PTR [rdx],ah
    a434:	da 1b                	ficomp DWORD PTR [rbx]
    a436:	00 00                	add    BYTE PTR [rax],al
    a438:	32 5c 1f 00          	xor    bl,BYTE PTR [rdi+rbx*1+0x0]
    a43c:	00 c6                	add    dh,al
    a43e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a441:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    a447:	1a 00                	sbb    al,BYTE PTR [rax]
    a449:	00 11                	add    BYTE PTR [rcx],dl
    a44b:	ca 22 00             	retf   0x22
    a44e:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a451:	00 00                	add    BYTE PTR [rax],al
    a453:	11 d0                	adc    eax,edx
    a455:	22 00                	and    al,BYTE PTR [rax]
    a457:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a45a:	00 00                	add    BYTE PTR [rax],al
    a45c:	2d 3d 0f 00 00       	sub    eax,0xf3d
    a461:	75 04                	jne    a467 <_end+0x444f>
    a463:	32 84 4e 00 00 2d 3a 	xor    al,BYTE PTR [rsi+rcx*2+0x3a2d0000]
    a46a:	17                   	(bad)
    a46b:	00 00                	add    BYTE PTR [rax],al
    a46d:	76 04                	jbe    a473 <_end+0x445b>
    a46f:	24 84                	and    al,0x84
    a471:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a474:	00 4a c6             	add    BYTE PTR [rdx-0x3a],cl
    a477:	1e                   	(bad)
    a478:	00 00                	add    BYTE PTR [rax],al
    a47a:	43 74 23             	rex.XB je a4a0 <_end+0x4488>
    a47d:	00 00                	add    BYTE PTR [rax],al
    a47f:	00 26                	add    BYTE PTR [rsi],ah
    a481:	00 00                	add    BYTE PTR [rax],al
    a483:	00 00                	add    BYTE PTR [rax],al
    a485:	00 00                	add    BYTE PTR [rax],al
    a487:	53                   	push   rbx
    a488:	04 00                	add    al,0x0
    a48a:	00 00                	add    BYTE PTR [rax],al
    a48c:	00 00                	add    BYTE PTR [rax],al
    a48e:	00 01                	add    BYTE PTR [rcx],al
    a490:	9c                   	pushf
    a491:	46 52                	rex.RX push rdx
    a493:	00 00                	add    BYTE PTR [rax],al
    a495:	23 b7 2b 00 00 43    	and    esi,DWORD PTR [rdi+0x4300002b]
    a49b:	1b 8e 2c 00 00 db    	sbb    ecx,DWORD PTR [rsi-0x24ffffd4]
    a4a1:	1f                   	(bad)
    a4a2:	00 00                	add    BYTE PTR [rax],al
    a4a4:	cd 1f                	int    0x1f
    a4a6:	00 00                	add    BYTE PTR [rax],al
    a4a8:	23 01                	and    eax,DWORD PTR [rcx]
    a4aa:	04 00                	add    al,0x0
    a4ac:	00 43 28             	add    BYTE PTR [rbx+0x28],al
    a4af:	49                   	rex.WB
    a4b0:	40 00 00             	rex add BYTE PTR [rax],al
    a4b3:	18 20                	sbb    BYTE PTR [rax],ah
    a4b5:	00 00                	add    BYTE PTR [rax],al
    a4b7:	10 20                	adc    BYTE PTR [rax],ah
    a4b9:	00 00                	add    BYTE PTR [rax],al
    a4bb:	23 09                	and    ecx,DWORD PTR [rcx]
    a4bd:	0d 00 00 43 3c       	or     eax,0x3c430000
    a4c2:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a4c3:	41 00 00             	add    BYTE PTR [r8],al
    a4c6:	48 20 00             	rex.W and BYTE PTR [rax],al
    a4c9:	00 38                	add    BYTE PTR [rax],bh
    a4cb:	20 00                	and    BYTE PTR [rax],al
    a4cd:	00 4b b3             	add    BYTE PTR [rbx-0x4d],cl
    a4d0:	03 00                	add    eax,DWORD PTR [rax]
    a4d2:	00 56 52             	add    BYTE PTR [rsi+0x52],dl
    a4d5:	00 00                	add    BYTE PTR [rax],al
    a4d7:	09 03                	or     DWORD PTR [rbx],eax
    a4d9:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a4de:	00 00                	add    BYTE PTR [rax],al
    a4e0:	00 4c 5d 05          	add    BYTE PTR [rbp+rbx*2+0x5],cl
    a4e4:	00 00                	add    BYTE PTR [rax],al
    a4e6:	46 0d 51 41 00 00    	rex.RX or eax,0x4151
    a4ec:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a4ef:	7f 1f                	jg     a510 <_end+0x44f8>
    a4f1:	7b 27                	jnp    a51a <_end+0x4502>
    a4f3:	00 00                	add    BYTE PTR [rax],al
    a4f5:	4c 0b 35 00 00 00 b5 	or     r14,QWORD PTR [rip+0xffffffffb5000000]        # ffffffffb500a4fc <_end+0xffffffffb50044e4>
    a4fc:	20 00                	and    BYTE PTR [rax],al
    a4fe:	00 a5 20 00 00 16    	add    BYTE PTR [rbp+0x16000020],ah
    a504:	56                   	push   rsi
    a505:	26 00 00             	es add BYTE PTR [rax],al
    a508:	00 00                	add    BYTE PTR [rax],al
    a50a:	00 00                	add    BYTE PTR [rax],al
    a50c:	2a 00                	sub    al,BYTE PTR [rax]
    a50e:	00 00                	add    BYTE PTR [rax],al
    a510:	00 00                	add    BYTE PTR [rax],al
    a512:	00 00                	add    BYTE PTR [rax],al
    a514:	8f                   	(bad)
    a515:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a518:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    a51b:	48 0e                	rex.W (bad)
    a51d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a51e:	21 00                	and    DWORD PTR [rax],eax
    a520:	00 fd                	add    ch,bh
    a522:	20 00                	and    BYTE PTR [rax],al
    a524:	00 fb                	add    bl,bh
    a526:	20 00                	and    BYTE PTR [rax],al
    a528:	00 07                	add    BYTE PTR [rdi],al
    a52a:	7b 26                	jnp    a552 <_end+0x453a>
    a52c:	00 00                	add    BYTE PTR [rax],al
    a52e:	00 00                	add    BYTE PTR [rax],al
    a530:	00 00                	add    BYTE PTR [rax],al
    a532:	9b                   	fwait
    a533:	42 00 00             	rex.X add BYTE PTR [rax],al
    a536:	03 01                	add    eax,DWORD PTR [rcx]
    a538:	55                   	push   rbp
    a539:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a53d:	00 62 ba             	add    BYTE PTR [rdx-0x46],ah
    a540:	02 00                	add    al,BYTE PTR [rax]
    a542:	00 f9                	add    cl,bh
    a544:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a547:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a54a:	50                   	push   rax
    a54b:	13 b0 2c 00 00 08    	adc    esi,DWORD PTR [rax+0x800002c]
    a551:	21 00                	and    DWORD PTR [rax],eax
    a553:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
    a556:	00 00                	add    BYTE PTR [rax],al
    a558:	39 f2                	cmp    edx,esi
    a55a:	71 00                	jno    a55c <_end+0x4544>
    a55c:	00 da                	add    dl,bl
    a55e:	26 00 00             	es add BYTE PTR [rax],al
    a561:	00 00                	add    BYTE PTR [rax],al
    a563:	00 00                	add    BYTE PTR [rax],al
    a565:	02 00                	add    al,BYTE PTR [rax]
    a567:	ca 02 00             	retf   0x2
    a56a:	00 51 10             	add    BYTE PTR [rcx+0x10],dl
    a56d:	05 0c 72 00 00       	add    eax,0x720c
    a572:	1a 21                	sbb    ah,BYTE PTR [rcx]
    a574:	00 00                	add    BYTE PTR [rax],al
    a576:	18 21                	sbb    BYTE PTR [rcx],ah
    a578:	00 00                	add    BYTE PTR [rax],al
    a57a:	05 00 72 00 00       	add    eax,0x7200
    a57f:	2f                   	(bad)
    a580:	21 00                	and    DWORD PTR [rax],eax
    a582:	00 2b                	add    BYTE PTR [rbx],ch
    a584:	21 00                	and    DWORD PTR [rax],eax
    a586:	00 07                	add    BYTE PTR [rdi],al
    a588:	ea                   	(bad)
    a589:	26 00 00             	es add BYTE PTR [rax],al
    a58c:	00 00                	add    BYTE PTR [rax],al
    a58e:	00 00                	add    BYTE PTR [rax],al
    a590:	63 42 00             	movsxd eax,DWORD PTR [rdx+0x0]
    a593:	00 03                	add    BYTE PTR [rbx],al
    a595:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a598:	7d 00                	jge    a59a <_end+0x4582>
    a59a:	03 01                	add    eax,DWORD PTR [rcx]
    a59c:	54                   	push   rsp
    a59d:	01 32                	add    DWORD PTR [rdx],esi
    a59f:	03 01                	add    eax,DWORD PTR [rcx]
    a5a1:	51                   	push   rcx
    a5a2:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a5a5:	00 00                	add    BYTE PTR [rax],al
    a5a7:	00 09                	add    BYTE PTR [rcx],cl
    a5a9:	f2 71 00             	bnd jno a5ac <_end+0x4594>
    a5ac:	00 80 26 00 00 00    	add    BYTE PTR [rax+0x26],al
    a5b2:	00 00                	add    BYTE PTR [rax],al
    a5b4:	00 03                	add    BYTE PTR [rbx],al
    a5b6:	00 80 26 00 00 00    	add    BYTE PTR [rax+0x26],al
    a5bc:	00 00                	add    BYTE PTR [rax],al
    a5be:	00 19                	add    BYTE PTR [rcx],bl
    a5c0:	00 00                	add    BYTE PTR [rax],al
    a5c2:	00 00                	add    BYTE PTR [rax],al
    a5c4:	00 00                	add    BYTE PTR [rax],al
    a5c6:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    a5c9:	64 50                	fs push rax
    a5cb:	00 00                	add    BYTE PTR [rax],al
    a5cd:	05 0c 72 00 00       	add    eax,0x720c
    a5d2:	40 21 00             	rex and DWORD PTR [rax],eax
    a5d5:	00 3e                	add    BYTE PTR [rsi],bh
    a5d7:	21 00                	and    DWORD PTR [rax],eax
    a5d9:	00 05 00 72 00 00    	add    BYTE PTR [rip+0x7200],al        # 117df <_end+0xb7c7>
    a5df:	53                   	push   rbx
    a5e0:	21 00                	and    DWORD PTR [rax],eax
    a5e2:	00 51 21             	add    BYTE PTR [rcx+0x21],dl
    a5e5:	00 00                	add    BYTE PTR [rax],al
    a5e7:	07                   	(bad)
    a5e8:	99                   	cdq
    a5e9:	26 00 00             	es add BYTE PTR [rax],al
    a5ec:	00 00                	add    BYTE PTR [rax],al
    a5ee:	00 00                	add    BYTE PTR [rax],al
    a5f0:	5b                   	pop    rbx
    a5f1:	75 00                	jne    a5f3 <_end+0x45db>
    a5f3:	00 03                	add    BYTE PTR [rbx],al
    a5f5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a5f8:	03 90 41 00 00 00    	add    edx,DWORD PTR [rax+0x41]
    a5fe:	00 00                	add    BYTE PTR [rax],al
    a600:	00 03                	add    BYTE PTR [rbx],al
    a602:	01 54 01 31          	add    DWORD PTR [rcx+rax*1+0x31],edx
    a606:	03 01                	add    eax,DWORD PTR [rcx]
    a608:	51                   	push   rcx
    a609:	01 49 03             	add    DWORD PTR [rcx+0x3],ecx
    a60c:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    a60f:	7d 00                	jge    a611 <_end+0x45f9>
    a611:	00 00                	add    BYTE PTR [rax],al
    a613:	1c d6                	sbb    al,0xd6
    a615:	71 00                	jno    a617 <_end+0x45ff>
    a617:	00 15 27 00 00 00    	add    BYTE PTR [rip+0x27],dl        # a644 <_end+0x462c>
    a61d:	00 00                	add    BYTE PTR [rax],al
    a61f:	00 01                	add    BYTE PTR [rcx],al
    a621:	00 da                	add    dl,bl
    a623:	02 00                	add    al,BYTE PTR [rax]
    a625:	00 57 0b             	add    BYTE PTR [rdi+0xb],dl
    a628:	b7 50                	mov    bh,0x50
    a62a:	00 00                	add    BYTE PTR [rax],al
    a62c:	05 e4 71 00 00       	add    eax,0x71e4
    a631:	5d                   	pop    rbp
    a632:	21 00                	and    DWORD PTR [rax],eax
    a634:	00 5b 21             	add    BYTE PTR [rbx+0x21],bl
    a637:	00 00                	add    BYTE PTR [rax],al
    a639:	07                   	(bad)
    a63a:	34 27                	xor    al,0x27
    a63c:	00 00                	add    BYTE PTR [rax],al
    a63e:	00 00                	add    BYTE PTR [rax],al
    a640:	00 00                	add    BYTE PTR [rax],al
    a642:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a645:	00 03                	add    BYTE PTR [rbx],al
    a647:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a64a:	32 03                	xor    al,BYTE PTR [rbx]
    a64c:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a650:	b1 41                	mov    cl,0x41
    a652:	00 00                	add    BYTE PTR [rax],al
    a654:	00 00                	add    BYTE PTR [rax],al
    a656:	00 00                	add    BYTE PTR [rax],al
    a658:	03 01                	add    eax,DWORD PTR [rcx]
    a65a:	61                   	(bad)
    a65b:	08 76 90             	or     BYTE PTR [rsi-0x70],dh
    a65e:	7f a6                	jg     a606 <_end+0x45ee>
    a660:	04 35                	add    al,0x35
    a662:	a8 2e                	test   al,0x2e
    a664:	00 00                	add    BYTE PTR [rax],al
    a666:	1c 74                	sbb    al,0x74
    a668:	45 00 00             	add    BYTE PTR [r8],r8b
    a66b:	34 27                	xor    al,0x27
    a66d:	00 00                	add    BYTE PTR [rax],al
    a66f:	00 00                	add    BYTE PTR [rax],al
    a671:	00 00                	add    BYTE PTR [rax],al
    a673:	02 00                	add    al,BYTE PTR [rax]
    a675:	e5 02                	in     eax,0x2
    a677:	00 00                	add    BYTE PTR [rax],al
    a679:	58                   	pop    rax
    a67a:	45 60                	rex.RB (bad)
    a67c:	51                   	push   rcx
    a67d:	00 00                	add    BYTE PTR [rax],al
    a67f:	05 93 45 00 00       	add    eax,0x4593
    a684:	76 21                	jbe    a6a7 <_end+0x468f>
    a686:	00 00                	add    BYTE PTR [rax],al
    a688:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    a689:	21 00                	and    DWORD PTR [rax],eax
    a68b:	00 05 87 45 00 00    	add    BYTE PTR [rip+0x4587],al        # ec18 <_end+0x8c00>
    a691:	9b                   	fwait
    a692:	21 00                	and    DWORD PTR [rax],eax
    a694:	00 97 21 00 00 2e    	add    BYTE PTR [rdi+0x2e000021],dl
    a69a:	e5 02                	in     eax,0x2
    a69c:	00 00                	add    BYTE PTR [rax],al
    a69e:	15 a8 45 00 00       	adc    eax,0x45a8
    a6a3:	be 21 00 00 b0       	mov    esi,0xb0000021
    a6a8:	21 00                	and    DWORD PTR [rax],eax
    a6aa:	00 3a                	add    BYTE PTR [rdx],bh
    a6ac:	b3 45                	mov    bl,0x45
    a6ae:	00 00                	add    BYTE PTR [rax],al
    a6b0:	f0 02 00             	lock add al,BYTE PTR [rax]
    a6b3:	00 2e                	add    BYTE PTR [rsi],ch
    a6b5:	51                   	push   rcx
    a6b6:	00 00                	add    BYTE PTR [rax],al
    a6b8:	15 b4 45 00 00       	adc    eax,0x45b4
    a6bd:	0b 22                	or     esp,DWORD PTR [rdx]
    a6bf:	00 00                	add    BYTE PTR [rax],al
    a6c1:	ff 21                	jmp    QWORD PTR [rcx]
    a6c3:	00 00                	add    BYTE PTR [rax],al
    a6c5:	4d bd 45 00 00 00 03 	rex.WRB movabs r13,0x1500000300000045
    a6cc:	00 00 15 
    a6cf:	be 45 00 00 41       	mov    esi,0x41000045
    a6d4:	22 00                	and    al,BYTE PTR [rax]
    a6d6:	00 3b                	add    BYTE PTR [rbx],bh
    a6d8:	22 00                	and    al,BYTE PTR [rax]
    a6da:	00 00                	add    BYTE PTR [rax],al
    a6dc:	00 39                	add    BYTE PTR [rcx],bh
    a6de:	1a 72 00             	sbb    dh,BYTE PTR [rdx+0x0]
    a6e1:	00 a3 29 00 00 00    	add    BYTE PTR [rbx+0x29],ah
    a6e7:	00 00                	add    BYTE PTR [rax],al
    a6e9:	00 00                	add    BYTE PTR [rax],al
    a6eb:	00 29                	add    BYTE PTR [rcx],ch
    a6ed:	03 00                	add    eax,DWORD PTR [rax]
    a6ef:	00 bc 1e 05 23 72 00 	add    BYTE PTR [rsi+rbx*1+0x722305],bh
    a6f6:	00 87 22 00 00 81    	add    BYTE PTR [rdi-0x7effffde],al
    a6fc:	22 00                	and    al,BYTE PTR [rax]
    a6fe:	00 20                	add    BYTE PTR [rax],ah
    a700:	29 2a                	sub    DWORD PTR [rdx],ebp
    a702:	00 00                	add    BYTE PTR [rax],al
    a704:	00 00                	add    BYTE PTR [rax],al
    a706:	00 00                	add    BYTE PTR [rax],al
    a708:	64 75 00             	fs jne a70b <_end+0x46f3>
    a70b:	00 00                	add    BYTE PTR [rax],al
    a70d:	00 00                	add    BYTE PTR [rax],al
    a70f:	1c d6                	sbb    al,0xd6
    a711:	71 00                	jno    a713 <_end+0x46fb>
    a713:	00 b1 29 00 00 00    	add    BYTE PTR [rcx+0x29],dh
    a719:	00 00                	add    BYTE PTR [rax],al
    a71b:	00 03                	add    BYTE PTR [rbx],al
    a71d:	00 39                	add    BYTE PTR [rcx],bh
    a71f:	03 00                	add    eax,DWORD PTR [rax]
    a721:	00 58 0b             	add    BYTE PTR [rax+0xb],bl
    a724:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a725:	51                   	push   rcx
    a726:	00 00                	add    BYTE PTR [rax],al
    a728:	05 e4 71 00 00       	add    eax,0x71e4
    a72d:	9f                   	lahf
    a72e:	22 00                	and    al,BYTE PTR [rax]
    a730:	00 9d 22 00 00 07    	add    BYTE PTR [rbp+0x7000022],bl
    a736:	cb                   	retf
    a737:	29 00                	sub    DWORD PTR [rax],eax
    a739:	00 00                	add    BYTE PTR [rax],al
    a73b:	00 00                	add    BYTE PTR [rax],al
    a73d:	00 d9                	add    cl,bl
    a73f:	42 00 00             	rex.X add BYTE PTR [rax],al
    a742:	03 01                	add    eax,DWORD PTR [rcx]
    a744:	55                   	push   rbp
    a745:	01 32                	add    DWORD PTR [rdx],esi
    a747:	03 01                	add    eax,DWORD PTR [rcx]
    a749:	54                   	push   rsp
    a74a:	09 03                	or     DWORD PTR [rbx],eax
    a74c:	cb                   	retf
    a74d:	41 00 00             	add    BYTE PTR [r8],al
    a750:	00 00                	add    BYTE PTR [rax],al
    a752:	00 00                	add    BYTE PTR [rax],al
    a754:	00 00                	add    BYTE PTR [rax],al
    a756:	0a 56 26             	or     dl,BYTE PTR [rsi+0x26]
    a759:	00 00                	add    BYTE PTR [rax],al
    a75b:	00 00                	add    BYTE PTR [rax],al
    a75d:	00 00                	add    BYTE PTR [rax],al
    a75f:	ba 42 00 00 cb       	mov    edx,0xcb000042
    a764:	51                   	push   rcx
    a765:	00 00                	add    BYTE PTR [rax],al
    a767:	03 01                	add    eax,DWORD PTR [rcx]
    a769:	55                   	push   rbp
    a76a:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a76e:	01 54 03 a3          	add    DWORD PTR [rbx+rax*1-0x5d],edx
    a772:	01 54 03 01          	add    DWORD PTR [rbx+rax*1+0x1],edx
    a776:	51                   	push   rcx
    a777:	01 32                	add    DWORD PTR [rdx],esi
    a779:	00 27                	add    BYTE PTR [rdi],ah
    a77b:	9c                   	pushf
    a77c:	28 00                	sub    BYTE PTR [rax],al
    a77e:	00 00                	add    BYTE PTR [rax],al
    a780:	00 00                	add    BYTE PTR [rax],al
    a782:	00 01                	add    BYTE PTR [rcx],al
    a784:	30 0a                	xor    BYTE PTR [rdx],cl
    a786:	d3 29                	shr    DWORD PTR [rcx],cl
    a788:	00 00                	add    BYTE PTR [rax],al
    a78a:	00 00                	add    BYTE PTR [rax],al
    a78c:	00 00                	add    BYTE PTR [rax],al
    a78e:	84 42 00             	test   BYTE PTR [rdx+0x0],al
    a791:	00 ee                	add    dh,ch
    a793:	51                   	push   rcx
    a794:	00 00                	add    BYTE PTR [rax],al
    a796:	03 01                	add    eax,DWORD PTR [rcx]
    a798:	55                   	push   rbp
    a799:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a79d:	27                   	(bad)
    a79e:	13 2a                	adc    ebp,DWORD PTR [rdx]
    a7a0:	00 00                	add    BYTE PTR [rax],al
    a7a2:	00 00                	add    BYTE PTR [rax],al
    a7a4:	00 00                	add    BYTE PTR [rax],al
    a7a6:	01 30                	add    DWORD PTR [rax],esi
    a7a8:	0a 4e 2a             	or     cl,BYTE PTR [rsi+0x2a]
    a7ab:	00 00                	add    BYTE PTR [rax],al
    a7ad:	00 00                	add    BYTE PTR [rax],al
    a7af:	00 00                	add    BYTE PTR [rax],al
    a7b1:	3f                   	(bad)
    a7b2:	44 00 00             	add    BYTE PTR [rax],r8b
    a7b5:	38 52 00             	cmp    BYTE PTR [rdx+0x0],dl
    a7b8:	00 03                	add    BYTE PTR [rbx],al
    a7ba:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a7bd:	03 8b 41 00 00 00    	add    ecx,DWORD PTR [rbx+0x41]
    a7c3:	00 00                	add    BYTE PTR [rax],al
    a7c5:	00 03                	add    BYTE PTR [rbx],al
    a7c7:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a7cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a7cc:	41 00 00             	add    BYTE PTR [r8],al
    a7cf:	00 00                	add    BYTE PTR [rax],al
    a7d1:	00 00                	add    BYTE PTR [rax],al
    a7d3:	03 01                	add    eax,DWORD PTR [rcx]
    a7d5:	51                   	push   rcx
    a7d6:	02 08                	add    cl,BYTE PTR [rax]
    a7d8:	44 03 01             	add    r8d,DWORD PTR [rcx]
    a7db:	52                   	push   rdx
    a7dc:	09 03                	or     DWORD PTR [rbx],eax
    a7de:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a7e3:	00 00                	add    BYTE PTR [rax],al
    a7e5:	00 00                	add    BYTE PTR [rax],al
    a7e7:	20 53 2a             	and    BYTE PTR [rbx+0x2a],dl
    a7ea:	00 00                	add    BYTE PTR [rax],al
    a7ec:	00 00                	add    BYTE PTR [rax],al
    a7ee:	00 00                	add    BYTE PTR [rax],al
    a7f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    a7f1:	75 00                	jne    a7f3 <_end+0x47db>
    a7f3:	00 00                	add    BYTE PTR [rax],al
    a7f5:	25 ee 22 00 00       	and    eax,0x22ee
    a7fa:	56                   	push   rsi
    a7fb:	52                   	push   rdx
    a7fc:	00 00                	add    BYTE PTR [rax],al
    a7fe:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a801:	00 00                	add    BYTE PTR [rax],al
    a803:	2c 00                	sub    al,0x0
    a805:	13 46 52             	adc    eax,DWORD PTR [rsi+0x52]
    a808:	00 00                	add    BYTE PTR [rax],al
    a80a:	8c 01                	mov    WORD PTR [rcx],es
    a80c:	2c 13                	sub    al,0x13
    a80e:	00 00                	add    BYTE PTR [rax],al
    a810:	01 33                	add    DWORD PTR [rbx],esi
    a812:	06                   	(bad)
    a813:	16                   	(bad)
    a814:	31 00                	xor    DWORD PTR [rax],eax
    a816:	00 01                	add    BYTE PTR [rcx],al
    a818:	a9 52 00 00 1e       	test   eax,0x1e000052
    a81d:	01 04 00             	add    DWORD PTR [rax+rax*1],eax
    a820:	00 01                	add    BYTE PTR [rcx],al
    a822:	33 12                	xor    edx,DWORD PTR [rdx]
    a824:	49                   	rex.WB
    a825:	40 00 00             	rex add BYTE PTR [rax],al
    a828:	1e                   	(bad)
    a829:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
    a82b:	00 00                	add    BYTE PTR [rax],al
    a82d:	01 33                	add    DWORD PTR [rbx],esi
    a82f:	27                   	(bad)
    a830:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    a833:	00 1e                	add    BYTE PTR [rsi],bl
    a835:	09 0d 00 00 01 33    	or     DWORD PTR [rip+0x33010000],ecx        # 3301a83b <_end+0x33014823>
    a83b:	3b a7 41 00 00 1e    	cmp    esp,DWORD PTR [rdi+0x1e000041]
    a841:	3c 29                	cmp    al,0x29
    a843:	00 00                	add    BYTE PTR [rax],al
    a845:	01 33                	add    DWORD PTR [rbx],esi
    a847:	4f b0 2c             	rex.WRXB mov r8b,0x2c
    a84a:	00 00                	add    BYTE PTR [rax],al
    a84c:	17                   	(bad)
    a84d:	b0 2b                	mov    al,0x2b
    a84f:	00 00                	add    BYTE PTR [rax],al
    a851:	3e 0b 8e 2c 00 00 00 	ds or  ecx,DWORD PTR [rsi+0x2c]
    a858:	4a 0c 01             	rex.WX or al,0x1
    a85b:	00 00                	add    BYTE PTR [rax],al
    a85d:	11 9e 02 00 00 10    	adc    DWORD PTR [rsi+0x10000002],ebx
    a863:	2f                   	(bad)
    a864:	00 00                	add    BYTE PTR [rax],al
    a866:	00 00                	add    BYTE PTR [rax],al
    a868:	00 00                	add    BYTE PTR [rax],al
    a86a:	a9 07 00 00 00       	test   eax,0x7
    a86f:	00 00                	add    BYTE PTR [rax],al
    a871:	00 01                	add    BYTE PTR [rcx],al
    a873:	9c                   	pushf
    a874:	57                   	push   rdi
    a875:	71 00                	jno    a877 <_end+0x485f>
    a877:	00 23                	add    BYTE PTR [rbx],ah
    a879:	57                   	push   rdi
    a87a:	0e                   	(bad)
    a87b:	00 00                	add    BYTE PTR [rax],al
    a87d:	11 1a                	adc    DWORD PTR [rdx],ebx
    a87f:	d3 23                	shl    DWORD PTR [rbx],cl
    a881:	00 00                	add    BYTE PTR [rax],al
    a883:	bc 22 00 00 b0       	mov    esp,0xb0000022
    a888:	22 00                	and    al,BYTE PTR [rax]
    a88a:	00 23                	add    BYTE PTR [rbx],ah
    a88c:	3c 29                	cmp    al,0x29
    a88e:	00 00                	add    BYTE PTR [rax],al
    a890:	11 2d b0 2c 00 00    	adc    DWORD PTR [rip+0x2cb0],ebp        # d546 <_end+0x752e>
    a896:	00 23                	add    BYTE PTR [rbx],ah
    a898:	00 00                	add    BYTE PTR [rax],al
    a89a:	f0 22 00             	lock and al,BYTE PTR [rax]
    a89d:	00 23                	add    BYTE PTR [rbx],ah
    a89f:	2b 23                	sub    esp,DWORD PTR [rbx]
    a8a1:	00 00                	add    BYTE PTR [rax],al
    a8a3:	11 46 d3             	adc    DWORD PTR [rsi-0x2d],eax
    a8a6:	23 00                	and    eax,DWORD PTR [rax]
    a8a8:	00 58 23             	add    BYTE PTR [rax+0x23],bl
    a8ab:	00 00                	add    BYTE PTR [rax],al
    a8ad:	42 23 00             	rex.X and eax,DWORD PTR [rax]
    a8b0:	00 4b b3             	add    BYTE PTR [rbx-0x4d],cl
    a8b3:	03 00                	add    eax,DWORD PTR [rax]
    a8b5:	00 67 71             	add    BYTE PTR [rdi+0x71],ah
    a8b8:	00 00                	add    BYTE PTR [rax],al
    a8ba:	09 03                	or     DWORD PTR [rbx],eax
    a8bc:	20 45 00             	and    BYTE PTR [rbp+0x0],al
    a8bf:	00 00                	add    BYTE PTR [rax],al
    a8c1:	00 00                	add    BYTE PTR [rax],al
    a8c3:	00 4c 88 0b          	add    BYTE PTR [rax+rcx*4+0xb],cl
    a8c7:	00 00                	add    BYTE PTR [rax],al
    a8c9:	15 0c 2e 23 00       	adc    eax,0x232e0c
    a8ce:	00 03                	add    BYTE PTR [rbx],al
    a8d0:	91                   	xchg   ecx,eax
    a8d1:	b0 7f                	mov    al,0x7f
    a8d3:	1f                   	(bad)
    a8d4:	8a 03                	mov    al,BYTE PTR [rbx]
    a8d6:	00 00                	add    BYTE PTR [rax],al
    a8d8:	16                   	(bad)
    a8d9:	0b e2                	or     esp,edx
    a8db:	22 00                	and    al,BYTE PTR [rax]
    a8dd:	00 bc 23 00 00 b2 23 	add    BYTE PTR [rbx+riz*1+0x23b20000],bh
    a8e4:	00 00                	add    BYTE PTR [rax],al
    a8e6:	1f                   	(bad)
    a8e7:	83 04 00 00          	add    DWORD PTR [rax+rax*1],0x0
    a8eb:	18 0e                	sbb    BYTE PTR [rsi],cl
    a8ed:	b0 2c                	mov    al,0x2c
    a8ef:	00 00                	add    BYTE PTR [rax],al
    a8f1:	ec                   	in     al,dx
    a8f2:	23 00                	and    eax,DWORD PTR [rax]
    a8f4:	00 e4                	add    ah,ah
    a8f6:	23 00                	and    eax,DWORD PTR [rax]
    a8f8:	00 1f                	add    BYTE PTR [rdi],bl
    a8fa:	09 0d 00 00 1a 0e    	or     DWORD PTR [rip+0xe1a0000],ecx        # e1aa900 <_end+0xe1a48e8>
    a900:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a901:	41 00 00             	add    BYTE PTR [r8],al
    a904:	25 24 00 00 0b       	and    eax,0xb000024
    a909:	24 00                	and    al,0x0
    a90b:	00 16                	add    BYTE PTR [rsi],dl
    a90d:	88 30                	mov    BYTE PTR [rax],dh
    a90f:	00 00                	add    BYTE PTR [rax],al
    a911:	00 00                	add    BYTE PTR [rax],al
    a913:	00 00                	add    BYTE PTR [rax],al
    a915:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
    a91b:	00 00                	add    BYTE PTR [rax],al
    a91d:	60                   	(bad)
    a91e:	55                   	push   rbp
    a91f:	00 00                	add    BYTE PTR [rax],al
    a921:	17                   	(bad)
    a922:	a8 15                	test   al,0x15
    a924:	00 00                	add    BYTE PTR [rax],al
    a926:	1d 34 db 41 00       	sbb    eax,0x41db34
    a92b:	00 09                	add    BYTE PTR [rcx],cl
    a92d:	d6                   	(bad)
    a92e:	71 00                	jno    a930 <_end+0x4918>
    a930:	00 88 30 00 00 00    	add    BYTE PTR [rax+0x30],cl
    a936:	00 00                	add    BYTE PTR [rax],al
    a938:	00 01                	add    BYTE PTR [rcx],al
    a93a:	00 88 30 00 00 00    	add    BYTE PTR [rax+0x30],cl
    a940:	00 00                	add    BYTE PTR [rax],al
    a942:	00 0f                	add    BYTE PTR [rdi],cl
    a944:	00 00                	add    BYTE PTR [rax],al
    a946:	00 00                	add    BYTE PTR [rax],al
    a948:	00 00                	add    BYTE PTR [rax],al
    a94a:	00 1d 34 cb 53 00    	add    BYTE PTR [rip+0x53cb34],bl        # 547484 <_end+0x54146c>
    a950:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11b3a <_end+0xbb22>
    a956:	dc 24 00             	fsub   QWORD PTR [rax+rax*1]
    a959:	00 da                	add    dl,bl
    a95b:	24 00                	and    al,0x0
    a95d:	00 07                	add    BYTE PTR [rdi],al
    a95f:	97                   	xchg   edi,eax
    a960:	30 00                	xor    BYTE PTR [rax],al
    a962:	00 00                	add    BYTE PTR [rax],al
    a964:	00 00                	add    BYTE PTR [rax],al
    a966:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    a96c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a96f:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    a97a:	09 d6                	or     esi,edx
    a97c:	71 00                	jno    a97e <_end+0x4966>
    a97e:	00 97 30 00 00 00    	add    BYTE PTR [rdi+0x30],dl
    a984:	00 00                	add    BYTE PTR [rax],al
    a986:	00 02                	add    BYTE PTR [rdx],al
    a988:	00 97 30 00 00 00    	add    BYTE PTR [rdi+0x30],dl
    a98e:	00 00                	add    BYTE PTR [rax],al
    a990:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    a993:	00 00                	add    BYTE PTR [rax],al
    a995:	00 00                	add    BYTE PTR [rax],al
    a997:	00 00                	add    BYTE PTR [rax],al
    a999:	1d 34 19 54 00       	sbb    eax,0x541934
    a99e:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11b88 <_end+0xbb70>
    a9a4:	eb 24                	jmp    a9ca <_end+0x49b2>
    a9a6:	00 00                	add    BYTE PTR [rax],al
    a9a8:	e9 24 00 00 07       	jmp    700a9d1 <_end+0x70049b9>
    a9ad:	a3 30 00 00 00 00 00 	movabs ds:0x9b00000000000030,eax
    a9b4:	00 9b 
    a9b6:	75 00                	jne    a9b8 <_end+0x49a0>
    a9b8:	00 03                	add    BYTE PTR [rbx],al
    a9ba:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a9bd:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    a9c1:	00 00                	add    BYTE PTR [rax],al
    a9c3:	00 00                	add    BYTE PTR [rax],al
    a9c5:	00 00                	add    BYTE PTR [rax],al
    a9c7:	00 09                	add    BYTE PTR [rcx],cl
    a9c9:	d6                   	(bad)
    a9ca:	71 00                	jno    a9cc <_end+0x49b4>
    a9cc:	00 a3 30 00 00 00    	add    BYTE PTR [rbx+0x30],ah
    a9d2:	00 00                	add    BYTE PTR [rax],al
    a9d4:	00 02                	add    BYTE PTR [rdx],al
    a9d6:	00 a3 30 00 00 00    	add    BYTE PTR [rbx+0x30],ah
    a9dc:	00 00                	add    BYTE PTR [rax],al
    a9de:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    a9e1:	00 00                	add    BYTE PTR [rax],al
    a9e3:	00 00                	add    BYTE PTR [rax],al
    a9e5:	00 00                	add    BYTE PTR [rax],al
    a9e7:	1d 34 67 54 00       	sbb    eax,0x546734
    a9ec:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11bd6 <_end+0xbbbe>
    a9f2:	fa                   	cli
    a9f3:	24 00                	and    al,0x0
    a9f5:	00 f8                	add    al,bh
    a9f7:	24 00                	and    al,0x0
    a9f9:	00 07                	add    BYTE PTR [rdi],al
    a9fb:	af                   	scas   eax,DWORD PTR es:[rdi]
    a9fc:	30 00                	xor    BYTE PTR [rax],al
    a9fe:	00 00                	add    BYTE PTR [rax],al
    aa00:	00 00                	add    BYTE PTR [rax],al
    aa02:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    aa08:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aa0b:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    aa16:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    aa19:	00 00                	add    BYTE PTR [rax],al
    aa1b:	af                   	scas   eax,DWORD PTR es:[rdi]
    aa1c:	30 00                	xor    BYTE PTR [rax],al
    aa1e:	00 00                	add    BYTE PTR [rax],al
    aa20:	00 00                	add    BYTE PTR [rax],al
    aa22:	00 03                	add    BYTE PTR [rbx],al
    aa24:	00 af 30 00 00 00    	add    BYTE PTR [rdi+0x30],ch
    aa2a:	00 00                	add    BYTE PTR [rax],al
    aa2c:	00 36                	add    BYTE PTR [rsi],dh
    aa2e:	00 00                	add    BYTE PTR [rax],al
    aa30:	00 00                	add    BYTE PTR [rax],al
    aa32:	00 00                	add    BYTE PTR [rax],al
    aa34:	00 1d 34 14 55 00    	add    BYTE PTR [rip+0x551434],bl        # 55be6e <_end+0x555e56>
    aa3a:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # fcd1 <_end+0x9cb9>
    aa40:	09 25 00 00 07 25    	or     DWORD PTR [rip+0x25070000],esp        # 2507aa46 <_end+0x25074a2e>
    aa46:	00 00                	add    BYTE PTR [rax],al
    aa48:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    aa4e:	79 52                	jns    aaa2 <_end+0x4a8a>
    aa50:	00 00                	add    BYTE PTR [rax],al
    aa52:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    aa55:	00 00                	add    BYTE PTR [rax],al
    aa57:	15 9d 52 00 00       	adc    eax,0x529d
    aa5c:	15 25 00 00 11       	adc    eax,0x11000025
    aa61:	25 00 00 0a c2       	and    eax,0xc20a0000
    aa66:	30 00                	xor    BYTE PTR [rax],al
    aa68:	00 00                	add    BYTE PTR [rax],al
    aa6a:	00 00                	add    BYTE PTR [rax],al
    aa6c:	00 e5                	add    ch,ah
    aa6e:	3c 00                	cmp    al,0x0
    aa70:	00 e1                	add    cl,ah
    aa72:	54                   	push   rsp
    aa73:	00 00                	add    BYTE PTR [rax],al
    aa75:	03 01                	add    eax,DWORD PTR [rcx]
    aa77:	55                   	push   rbp
    aa78:	09 03                	or     DWORD PTR [rbx],eax
    aa7a:	98                   	cwde
    aa7b:	45 00 00             	add    BYTE PTR [r8],r8b
    aa7e:	00 00                	add    BYTE PTR [rax],al
    aa80:	00 00                	add    BYTE PTR [rax],al
    aa82:	03 01                	add    eax,DWORD PTR [rcx]
    aa84:	54                   	push   rsp
    aa85:	09 03                	or     DWORD PTR [rbx],eax
    aa87:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    aa8b:	00 00                	add    BYTE PTR [rax],al
    aa8d:	00 00                	add    BYTE PTR [rax],al
    aa8f:	00 0a                	add    BYTE PTR [rdx],cl
    aa91:	dd 30                	fnsave [rax]
    aa93:	00 00                	add    BYTE PTR [rax],al
    aa95:	00 00                	add    BYTE PTR [rax],al
    aa97:	00 00                	add    BYTE PTR [rax],al
    aa99:	4d                   	rex.WRB
    aa9a:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    aa9d:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
    aaa1:	03 01                	add    eax,DWORD PTR [rcx]
    aaa3:	55                   	push   rbp
    aaa4:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    aaa7:	03 01                	add    eax,DWORD PTR [rcx]
    aaa9:	58                   	pop    rax
    aaaa:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    aaad:	00 07                	add    BYTE PTR [rdi],al
    aaaf:	e5 30                	in     eax,0x30
    aab1:	00 00                	add    BYTE PTR [rax],al
    aab3:	00 00                	add    BYTE PTR [rax],al
    aab5:	00 00                	add    BYTE PTR [rax],al
    aab7:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    aaba:	00 03                	add    BYTE PTR [rbx],al
    aabc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    aabf:	7f 00                	jg     aac1 <_end+0x4aa9>
    aac1:	00 00                	add    BYTE PTR [rax],al
    aac3:	19 d6                	sbb    esi,edx
    aac5:	71 00                	jno    aac7 <_end+0x4aaf>
    aac7:	00 e5                	add    ch,ah
    aac9:	30 00                	xor    BYTE PTR [rax],al
    aacb:	00 00                	add    BYTE PTR [rax],al
    aacd:	00 00                	add    BYTE PTR [rax],al
    aacf:	00 02                	add    BYTE PTR [rdx],al
    aad1:	00 e5                	add    ch,ah
    aad3:	30 00                	xor    BYTE PTR [rax],al
    aad5:	00 00                	add    BYTE PTR [rax],al
    aad7:	00 00                	add    BYTE PTR [rax],al
    aad9:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    aadc:	00 00                	add    BYTE PTR [rax],al
    aade:	00 00                	add    BYTE PTR [rax],al
    aae0:	00 00                	add    BYTE PTR [rax],al
    aae2:	01 1d 34 05 e4 71    	add    DWORD PTR [rip+0x71e40534],ebx        # 71e4b01c <_end+0x71e45004>
    aae8:	00 00                	add    BYTE PTR [rax],al
    aaea:	26 25 00 00 24 25    	es and eax,0x25240000
    aaf0:	00 00                	add    BYTE PTR [rax],al
    aaf2:	07                   	(bad)
    aaf3:	f1                   	int1
    aaf4:	30 00                	xor    BYTE PTR [rax],al
    aaf6:	00 00                	add    BYTE PTR [rax],al
    aaf8:	00 00                	add    BYTE PTR [rax],al
    aafa:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ab00:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab03:	03 c0                	add    eax,eax
    ab05:	45 00 00             	add    BYTE PTR [r8],r8b
    ab08:	00 00                	add    BYTE PTR [rax],al
    ab0a:	00 00                	add    BYTE PTR [rax],al
    ab0c:	00 00                	add    BYTE PTR [rax],al
    ab0e:	00 16                	add    BYTE PTR [rsi],dl
    ab10:	08 36                	or     BYTE PTR [rsi],dh
    ab12:	00 00                	add    BYTE PTR [rax],al
    ab14:	00 00                	add    BYTE PTR [rax],al
    ab16:	00 00                	add    BYTE PTR [rax],al
    ab18:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
    ab1e:	00 00                	add    BYTE PTR [rax],al
    ab20:	60                   	(bad)
    ab21:	57                   	push   rdi
    ab22:	00 00                	add    BYTE PTR [rax],al
    ab24:	17                   	(bad)
    ab25:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    ab26:	15 00 00 1e 34       	adc    eax,0x341e0000
    ab2b:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    ab2e:	00 09                	add    BYTE PTR [rcx],cl
    ab30:	d6                   	(bad)
    ab31:	71 00                	jno    ab33 <_end+0x4b1b>
    ab33:	00 08                	add    BYTE PTR [rax],cl
    ab35:	36 00 00             	ss add BYTE PTR [rax],al
    ab38:	00 00                	add    BYTE PTR [rax],al
    ab3a:	00 00                	add    BYTE PTR [rax],al
    ab3c:	02 00                	add    al,BYTE PTR [rax]
    ab3e:	08 36                	or     BYTE PTR [rsi],dh
    ab40:	00 00                	add    BYTE PTR [rax],al
    ab42:	00 00                	add    BYTE PTR [rax],al
    ab44:	00 00                	add    BYTE PTR [rax],al
    ab46:	0f 00 00             	sldt   WORD PTR [rax]
    ab49:	00 00                	add    BYTE PTR [rax],al
    ab4b:	00 00                	add    BYTE PTR [rax],al
    ab4d:	00 1e                	add    BYTE PTR [rsi],bl
    ab4f:	34 ce                	xor    al,0xce
    ab51:	55                   	push   rbp
    ab52:	00 00                	add    BYTE PTR [rax],al
    ab54:	05 e4 71 00 00       	add    eax,0x71e4
    ab59:	35 25 00 00 33       	xor    eax,0x33000025
    ab5e:	25 00 00 07 17       	and    eax,0x17070000
    ab63:	36 00 00             	ss add BYTE PTR [rax],al
    ab66:	00 00                	add    BYTE PTR [rax],al
    ab68:	00 00                	add    BYTE PTR [rax],al
    ab6a:	9b                   	fwait
    ab6b:	75 00                	jne    ab6d <_end+0x4b55>
    ab6d:	00 03                	add    BYTE PTR [rbx],al
    ab6f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab72:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ab7d:	09 d6                	or     esi,edx
    ab7f:	71 00                	jno    ab81 <_end+0x4b69>
    ab81:	00 17                	add    BYTE PTR [rdi],dl
    ab83:	36 00 00             	ss add BYTE PTR [rax],al
    ab86:	00 00                	add    BYTE PTR [rax],al
    ab88:	00 00                	add    BYTE PTR [rax],al
    ab8a:	02 00                	add    al,BYTE PTR [rax]
    ab8c:	17                   	(bad)
    ab8d:	36 00 00             	ss add BYTE PTR [rax],al
    ab90:	00 00                	add    BYTE PTR [rax],al
    ab92:	00 00                	add    BYTE PTR [rax],al
    ab94:	08 00                	or     BYTE PTR [rax],al
    ab96:	00 00                	add    BYTE PTR [rax],al
    ab98:	00 00                	add    BYTE PTR [rax],al
    ab9a:	00 00                	add    BYTE PTR [rax],al
    ab9c:	1e                   	(bad)
    ab9d:	34 15                	xor    al,0x15
    ab9f:	56                   	push   rsi
    aba0:	00 00                	add    BYTE PTR [rax],al
    aba2:	05 e4 71 00 00       	add    eax,0x71e4
    aba7:	44 25 00 00 42 25    	rex.R and eax,0x25420000
    abad:	00 00                	add    BYTE PTR [rax],al
    abaf:	07                   	(bad)
    abb0:	1f                   	(bad)
    abb1:	36 00 00             	ss add BYTE PTR [rax],al
    abb4:	00 00                	add    BYTE PTR [rax],al
    abb6:	00 00                	add    BYTE PTR [rax],al
    abb8:	9b                   	fwait
    abb9:	75 00                	jne    abbb <_end+0x4ba3>
    abbb:	00 03                	add    BYTE PTR [rbx],al
    abbd:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    abc0:	7d 00                	jge    abc2 <_end+0x4baa>
    abc2:	00 00                	add    BYTE PTR [rax],al
    abc4:	09 d6                	or     esi,edx
    abc6:	71 00                	jno    abc8 <_end+0x4bb0>
    abc8:	00 1f                	add    BYTE PTR [rdi],bl
    abca:	36 00 00             	ss add BYTE PTR [rax],al
    abcd:	00 00                	add    BYTE PTR [rax],al
    abcf:	00 00                	add    BYTE PTR [rax],al
    abd1:	02 00                	add    al,BYTE PTR [rax]
    abd3:	1f                   	(bad)
    abd4:	36 00 00             	ss add BYTE PTR [rax],al
    abd7:	00 00                	add    BYTE PTR [rax],al
    abd9:	00 00                	add    BYTE PTR [rax],al
    abdb:	0c 00                	or     al,0x0
    abdd:	00 00                	add    BYTE PTR [rax],al
    abdf:	00 00                	add    BYTE PTR [rax],al
    abe1:	00 00                	add    BYTE PTR [rax],al
    abe3:	1e                   	(bad)
    abe4:	34 63                	xor    al,0x63
    abe6:	56                   	push   rsi
    abe7:	00 00                	add    BYTE PTR [rax],al
    abe9:	05 e4 71 00 00       	add    eax,0x71e4
    abee:	53                   	push   rbx
    abef:	25 00 00 51 25       	and    eax,0x25510000
    abf4:	00 00                	add    BYTE PTR [rax],al
    abf6:	07                   	(bad)
    abf7:	2b 36                	sub    esi,DWORD PTR [rsi]
    abf9:	00 00                	add    BYTE PTR [rax],al
    abfb:	00 00                	add    BYTE PTR [rax],al
    abfd:	00 00                	add    BYTE PTR [rax],al
    abff:	9b                   	fwait
    ac00:	75 00                	jne    ac02 <_end+0x4bea>
    ac02:	00 03                	add    BYTE PTR [rbx],al
    ac04:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ac07:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ac12:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    ac15:	00 00                	add    BYTE PTR [rax],al
    ac17:	2b 36                	sub    esi,DWORD PTR [rsi]
    ac19:	00 00                	add    BYTE PTR [rax],al
    ac1b:	00 00                	add    BYTE PTR [rax],al
    ac1d:	00 00                	add    BYTE PTR [rax],al
    ac1f:	03 00                	add    eax,DWORD PTR [rax]
    ac21:	2b 36                	sub    esi,DWORD PTR [rsi]
    ac23:	00 00                	add    BYTE PTR [rax],al
    ac25:	00 00                	add    BYTE PTR [rax],al
    ac27:	00 00                	add    BYTE PTR [rax],al
    ac29:	3a 00                	cmp    al,BYTE PTR [rax]
    ac2b:	00 00                	add    BYTE PTR [rax],al
    ac2d:	00 00                	add    BYTE PTR [rax],al
    ac2f:	00 00                	add    BYTE PTR [rax],al
    ac31:	1e                   	(bad)
    ac32:	34 14                	xor    al,0x14
    ac34:	57                   	push   rdi
    ac35:	00 00                	add    BYTE PTR [rax],al
    ac37:	05 91 52 00 00       	add    eax,0x5291
    ac3c:	62 25 00 00 60       	(bad)
    ac41:	25 00 00 0b 85       	and    eax,0x850b0000
    ac46:	52                   	push   rdx
    ac47:	00 00                	add    BYTE PTR [rax],al
    ac49:	0b 79 52             	or     edi,DWORD PTR [rcx+0x52]
    ac4c:	00 00                	add    BYTE PTR [rax],al
    ac4e:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    ac51:	00 00                	add    BYTE PTR [rax],al
    ac53:	15 9d 52 00 00       	adc    eax,0x529d
    ac58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    ac59:	25 00 00 6a 25       	and    eax,0x256a0000
    ac5e:	00 00                	add    BYTE PTR [rax],al
    ac60:	0a 3e                	or     bh,BYTE PTR [rsi]
    ac62:	36 00 00             	ss add BYTE PTR [rax],al
    ac65:	00 00                	add    BYTE PTR [rax],al
    ac67:	00 00                	add    BYTE PTR [rax],al
    ac69:	e5 3c                	in     eax,0x3c
    ac6b:	00 00                	add    BYTE PTR [rax],al
    ac6d:	dd 56 00             	fst    QWORD PTR [rsi+0x0]
    ac70:	00 03                	add    BYTE PTR [rbx],al
    ac72:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ac75:	03 e0                	add    esp,eax
    ac77:	45 00 00             	add    BYTE PTR [r8],r8b
    ac7a:	00 00                	add    BYTE PTR [rax],al
    ac7c:	00 00                	add    BYTE PTR [rax],al
    ac7e:	03 01                	add    eax,DWORD PTR [rcx]
    ac80:	54                   	push   rsp
    ac81:	09 03                	or     DWORD PTR [rbx],eax
    ac83:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ac87:	00 00                	add    BYTE PTR [rax],al
    ac89:	00 00                	add    BYTE PTR [rax],al
    ac8b:	00 0a                	add    BYTE PTR [rdx],cl
    ac8d:	5b                   	pop    rbx
    ac8e:	36 00 00             	ss add BYTE PTR [rax],al
    ac91:	00 00                	add    BYTE PTR [rax],al
    ac93:	00 00                	add    BYTE PTR [rax],al
    ac95:	4d                   	rex.WRB
    ac96:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ac99:	fd                   	std
    ac9a:	56                   	push   rsi
    ac9b:	00 00                	add    BYTE PTR [rax],al
    ac9d:	03 01                	add    eax,DWORD PTR [rcx]
    ac9f:	55                   	push   rbp
    aca0:	04 91                	add    al,0x91
    aca2:	a8 7f                	test   al,0x7f
    aca4:	06                   	(bad)
    aca5:	03 01                	add    eax,DWORD PTR [rcx]
    aca7:	58                   	pop    rax
    aca8:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    acab:	00 07                	add    BYTE PTR [rdi],al
    acad:	65 36 00 00          	gs add BYTE PTR gs:[rax],al
    acb1:	00 00                	add    BYTE PTR [rax],al
    acb3:	00 00                	add    BYTE PTR [rax],al
    acb5:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    acb8:	00 03                	add    BYTE PTR [rbx],al
    acba:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    acbd:	91                   	xchg   ecx,eax
    acbe:	a8 7f                	test   al,0x7f
    acc0:	06                   	(bad)
    acc1:	00 00                	add    BYTE PTR [rax],al
    acc3:	19 d6                	sbb    esi,edx
    acc5:	71 00                	jno    acc7 <_end+0x4caf>
    acc7:	00 65 36             	add    BYTE PTR [rbp+0x36],ah
    acca:	00 00                	add    BYTE PTR [rax],al
    accc:	00 00                	add    BYTE PTR [rax],al
    acce:	00 00                	add    BYTE PTR [rax],al
    acd0:	02 00                	add    al,BYTE PTR [rax]
    acd2:	65 36 00 00          	gs add BYTE PTR gs:[rax],al
    acd6:	00 00                	add    BYTE PTR [rax],al
    acd8:	00 00                	add    BYTE PTR [rax],al
    acda:	0c 00                	or     al,0x0
    acdc:	00 00                	add    BYTE PTR [rax],al
    acde:	00 00                	add    BYTE PTR [rax],al
    ace0:	00 00                	add    BYTE PTR [rax],al
    ace2:	01 1e                	add    DWORD PTR [rsi],ebx
    ace4:	34 05                	xor    al,0x5
    ace6:	e4 71                	in     al,0x71
    ace8:	00 00                	add    BYTE PTR [rax],al
    acea:	81 25 00 00 7f 25 00 	and    DWORD PTR [rip+0x257f0000],0x71070000        # 257facf4 <_end+0x257f4cdc>
    acf1:	00 07 71 
    acf4:	36 00 00             	ss add BYTE PTR [rax],al
    acf7:	00 00                	add    BYTE PTR [rax],al
    acf9:	00 00                	add    BYTE PTR [rax],al
    acfb:	9b                   	fwait
    acfc:	75 00                	jne    acfe <_end+0x4ce6>
    acfe:	00 03                	add    BYTE PTR [rbx],al
    ad00:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ad03:	03 c0                	add    eax,eax
    ad05:	45 00 00             	add    BYTE PTR [r8],r8b
    ad08:	00 00                	add    BYTE PTR [rax],al
    ad0a:	00 00                	add    BYTE PTR [rax],al
    ad0c:	00 00                	add    BYTE PTR [rax],al
    ad0e:	00 16                	add    BYTE PTR [rsi],dl
    ad10:	90                   	nop
    ad11:	35 00 00 00 00       	xor    eax,0x0
    ad16:	00 00                	add    BYTE PTR [rax],al
    ad18:	6d                   	ins    DWORD PTR es:[rdi],dx
    ad19:	00 00                	add    BYTE PTR [rax],al
    ad1b:	00 00                	add    BYTE PTR [rax],al
    ad1d:	00 00                	add    BYTE PTR [rax],al
    ad1f:	00 67 59             	add    BYTE PTR [rdi+0x59],ah
    ad22:	00 00                	add    BYTE PTR [rax],al
    ad24:	17                   	(bad)
    ad25:	ce                   	(bad)
    ad26:	1d 00 00 1f 34       	sbb    eax,0x341f0000
    ad2b:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    ad2e:	00 09                	add    BYTE PTR [rcx],cl
    ad30:	d6                   	(bad)
    ad31:	71 00                	jno    ad33 <_end+0x4d1b>
    ad33:	00 90 35 00 00 00    	add    BYTE PTR [rax+0x35],dl
    ad39:	00 00                	add    BYTE PTR [rax],al
    ad3b:	00 02                	add    BYTE PTR [rdx],al
    ad3d:	00 90 35 00 00 00    	add    BYTE PTR [rax+0x35],dl
    ad43:	00 00                	add    BYTE PTR [rax],al
    ad45:	00 0f                	add    BYTE PTR [rdi],cl
    ad47:	00 00                	add    BYTE PTR [rax],al
    ad49:	00 00                	add    BYTE PTR [rax],al
    ad4b:	00 00                	add    BYTE PTR [rax],al
    ad4d:	00 1f                	add    BYTE PTR [rdi],bl
    ad4f:	34 ce                	xor    al,0xce
    ad51:	57                   	push   rdi
    ad52:	00 00                	add    BYTE PTR [rax],al
    ad54:	05 e4 71 00 00       	add    eax,0x71e4
    ad59:	90                   	nop
    ad5a:	25 00 00 8e 25       	and    eax,0x258e0000
    ad5f:	00 00                	add    BYTE PTR [rax],al
    ad61:	07                   	(bad)
    ad62:	9f                   	lahf
    ad63:	35 00 00 00 00       	xor    eax,0x0
    ad68:	00 00                	add    BYTE PTR [rax],al
    ad6a:	9b                   	fwait
    ad6b:	75 00                	jne    ad6d <_end+0x4d55>
    ad6d:	00 03                	add    BYTE PTR [rbx],al
    ad6f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ad72:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ad7d:	09 d6                	or     esi,edx
    ad7f:	71 00                	jno    ad81 <_end+0x4d69>
    ad81:	00 9f 35 00 00 00    	add    BYTE PTR [rdi+0x35],bl
    ad87:	00 00                	add    BYTE PTR [rax],al
    ad89:	00 02                	add    BYTE PTR [rdx],al
    ad8b:	00 9f 35 00 00 00    	add    BYTE PTR [rdi+0x35],bl
    ad91:	00 00                	add    BYTE PTR [rax],al
    ad93:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ad96:	00 00                	add    BYTE PTR [rax],al
    ad98:	00 00                	add    BYTE PTR [rax],al
    ad9a:	00 00                	add    BYTE PTR [rax],al
    ad9c:	1f                   	(bad)
    ad9d:	34 1c                	xor    al,0x1c
    ad9f:	58                   	pop    rax
    ada0:	00 00                	add    BYTE PTR [rax],al
    ada2:	05 e4 71 00 00       	add    eax,0x71e4
    ada7:	9f                   	lahf
    ada8:	25 00 00 9d 25       	and    eax,0x259d0000
    adad:	00 00                	add    BYTE PTR [rax],al
    adaf:	07                   	(bad)
    adb0:	ab                   	stos   DWORD PTR es:[rdi],eax
    adb1:	35 00 00 00 00       	xor    eax,0x0
    adb6:	00 00                	add    BYTE PTR [rax],al
    adb8:	9b                   	fwait
    adb9:	75 00                	jne    adbb <_end+0x4da3>
    adbb:	00 03                	add    BYTE PTR [rbx],al
    adbd:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    adc0:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    adc6:	00 00                	add    BYTE PTR [rax],al
    adc8:	00 00                	add    BYTE PTR [rax],al
    adca:	00 09                	add    BYTE PTR [rcx],cl
    adcc:	d6                   	(bad)
    adcd:	71 00                	jno    adcf <_end+0x4db7>
    adcf:	00 ab 35 00 00 00    	add    BYTE PTR [rbx+0x35],ch
    add5:	00 00                	add    BYTE PTR [rax],al
    add7:	00 02                	add    BYTE PTR [rdx],al
    add9:	00 ab 35 00 00 00    	add    BYTE PTR [rbx+0x35],ch
    addf:	00 00                	add    BYTE PTR [rax],al
    ade1:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ade4:	00 00                	add    BYTE PTR [rax],al
    ade6:	00 00                	add    BYTE PTR [rax],al
    ade8:	00 00                	add    BYTE PTR [rax],al
    adea:	1f                   	(bad)
    adeb:	34 6a                	xor    al,0x6a
    aded:	58                   	pop    rax
    adee:	00 00                	add    BYTE PTR [rax],al
    adf0:	05 e4 71 00 00       	add    eax,0x71e4
    adf5:	ae                   	scas   al,BYTE PTR es:[rdi]
    adf6:	25 00 00 ac 25       	and    eax,0x25ac0000
    adfb:	00 00                	add    BYTE PTR [rax],al
    adfd:	07                   	(bad)
    adfe:	b7 35                	mov    bh,0x35
    ae00:	00 00                	add    BYTE PTR [rax],al
    ae02:	00 00                	add    BYTE PTR [rax],al
    ae04:	00 00                	add    BYTE PTR [rax],al
    ae06:	9b                   	fwait
    ae07:	75 00                	jne    ae09 <_end+0x4df1>
    ae09:	00 03                	add    BYTE PTR [rbx],al
    ae0b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ae0e:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ae19:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    ae1c:	00 00                	add    BYTE PTR [rax],al
    ae1e:	b7 35                	mov    bh,0x35
    ae20:	00 00                	add    BYTE PTR [rax],al
    ae22:	00 00                	add    BYTE PTR [rax],al
    ae24:	00 00                	add    BYTE PTR [rax],al
    ae26:	03 00                	add    eax,DWORD PTR [rax]
    ae28:	b7 35                	mov    bh,0x35
    ae2a:	00 00                	add    BYTE PTR [rax],al
    ae2c:	00 00                	add    BYTE PTR [rax],al
    ae2e:	00 00                	add    BYTE PTR [rax],al
    ae30:	3a 00                	cmp    al,BYTE PTR [rax]
    ae32:	00 00                	add    BYTE PTR [rax],al
    ae34:	00 00                	add    BYTE PTR [rax],al
    ae36:	00 00                	add    BYTE PTR [rax],al
    ae38:	1f                   	(bad)
    ae39:	34 1b                	xor    al,0x1b
    ae3b:	59                   	pop    rcx
    ae3c:	00 00                	add    BYTE PTR [rax],al
    ae3e:	05 91 52 00 00       	add    eax,0x5291
    ae43:	bd 25 00 00 bb       	mov    ebp,0xbb000025
    ae48:	25 00 00 0b 85       	and    eax,0x850b0000
    ae4d:	52                   	push   rdx
    ae4e:	00 00                	add    BYTE PTR [rax],al
    ae50:	0b 79 52             	or     edi,DWORD PTR [rcx+0x52]
    ae53:	00 00                	add    BYTE PTR [rax],al
    ae55:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    ae58:	00 00                	add    BYTE PTR [rax],al
    ae5a:	15 9d 52 00 00       	adc    eax,0x529d
    ae5f:	c9                   	leave
    ae60:	25 00 00 c5 25       	and    eax,0x25c50000
    ae65:	00 00                	add    BYTE PTR [rax],al
    ae67:	0a ca                	or     cl,dl
    ae69:	35 00 00 00 00       	xor    eax,0x0
    ae6e:	00 00                	add    BYTE PTR [rax],al
    ae70:	e5 3c                	in     eax,0x3c
    ae72:	00 00                	add    BYTE PTR [rax],al
    ae74:	e4 58                	in     al,0x58
    ae76:	00 00                	add    BYTE PTR [rax],al
    ae78:	03 01                	add    eax,DWORD PTR [rcx]
    ae7a:	55                   	push   rbp
    ae7b:	09 03                	or     DWORD PTR [rbx],eax
    ae7d:	10 46 00             	adc    BYTE PTR [rsi+0x0],al
    ae80:	00 00                	add    BYTE PTR [rax],al
    ae82:	00 00                	add    BYTE PTR [rax],al
    ae84:	00 03                	add    BYTE PTR [rbx],al
    ae86:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    ae8a:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ae8e:	00 00                	add    BYTE PTR [rax],al
    ae90:	00 00                	add    BYTE PTR [rax],al
    ae92:	00 0a                	add    BYTE PTR [rdx],cl
    ae94:	e7 35                	out    0x35,eax
    ae96:	00 00                	add    BYTE PTR [rax],al
    ae98:	00 00                	add    BYTE PTR [rax],al
    ae9a:	00 00                	add    BYTE PTR [rax],al
    ae9c:	4d                   	rex.WRB
    ae9d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    aea0:	04 59                	add    al,0x59
    aea2:	00 00                	add    BYTE PTR [rax],al
    aea4:	03 01                	add    eax,DWORD PTR [rcx]
    aea6:	55                   	push   rbp
    aea7:	04 91                	add    al,0x91
    aea9:	a8 7f                	test   al,0x7f
    aeab:	06                   	(bad)
    aeac:	03 01                	add    eax,DWORD PTR [rcx]
    aeae:	58                   	pop    rax
    aeaf:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    aeb2:	00 07                	add    BYTE PTR [rdi],al
    aeb4:	f1                   	int1
    aeb5:	35 00 00 00 00       	xor    eax,0x0
    aeba:	00 00                	add    BYTE PTR [rax],al
    aebc:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    aebf:	00 03                	add    BYTE PTR [rbx],al
    aec1:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    aec4:	91                   	xchg   ecx,eax
    aec5:	a8 7f                	test   al,0x7f
    aec7:	06                   	(bad)
    aec8:	00 00                	add    BYTE PTR [rax],al
    aeca:	19 d6                	sbb    esi,edx
    aecc:	71 00                	jno    aece <_end+0x4eb6>
    aece:	00 f1                	add    cl,dh
    aed0:	35 00 00 00 00       	xor    eax,0x0
    aed5:	00 00                	add    BYTE PTR [rax],al
    aed7:	02 00                	add    al,BYTE PTR [rax]
    aed9:	f1                   	int1
    aeda:	35 00 00 00 00       	xor    eax,0x0
    aedf:	00 00                	add    BYTE PTR [rax],al
    aee1:	0c 00                	or     al,0x0
    aee3:	00 00                	add    BYTE PTR [rax],al
    aee5:	00 00                	add    BYTE PTR [rax],al
    aee7:	00 00                	add    BYTE PTR [rax],al
    aee9:	01 1f                	add    DWORD PTR [rdi],ebx
    aeeb:	34 05                	xor    al,0x5
    aeed:	e4 71                	in     al,0x71
    aeef:	00 00                	add    BYTE PTR [rax],al
    aef1:	dc 25 00 00 da 25    	fsub   QWORD PTR [rip+0x25da0000]        # 25daaef7 <_end+0x25da4edf>
    aef7:	00 00                	add    BYTE PTR [rax],al
    aef9:	07                   	(bad)
    aefa:	fd                   	std
    aefb:	35 00 00 00 00       	xor    eax,0x0
    af00:	00 00                	add    BYTE PTR [rax],al
    af02:	9b                   	fwait
    af03:	75 00                	jne    af05 <_end+0x4eed>
    af05:	00 03                	add    BYTE PTR [rbx],al
    af07:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af0a:	03 c0                	add    eax,eax
    af0c:	45 00 00             	add    BYTE PTR [r8],r8b
    af0f:	00 00                	add    BYTE PTR [rax],al
    af11:	00 00                	add    BYTE PTR [rax],al
    af13:	00 00                	add    BYTE PTR [rax],al
    af15:	00 16                	add    BYTE PTR [rsi],dl
    af17:	18 35 00 00 00 00    	sbb    BYTE PTR [rip+0x0],dh        # af1d <_end+0x4f05>
    af1d:	00 00                	add    BYTE PTR [rax],al
    af1f:	6d                   	ins    DWORD PTR es:[rdi],dx
    af20:	00 00                	add    BYTE PTR [rax],al
    af22:	00 00                	add    BYTE PTR [rax],al
    af24:	00 00                	add    BYTE PTR [rax],al
    af26:	00 6e 5b             	add    BYTE PTR [rsi+0x5b],ch
    af29:	00 00                	add    BYTE PTR [rax],al
    af2b:	17                   	(bad)
    af2c:	4d 0d 00 00 20 34    	rex.WRB or rax,0x34200000
    af32:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    af35:	00 09                	add    BYTE PTR [rcx],cl
    af37:	d6                   	(bad)
    af38:	71 00                	jno    af3a <_end+0x4f22>
    af3a:	00 18                	add    BYTE PTR [rax],bl
    af3c:	35 00 00 00 00       	xor    eax,0x0
    af41:	00 00                	add    BYTE PTR [rax],al
    af43:	02 00                	add    al,BYTE PTR [rax]
    af45:	18 35 00 00 00 00    	sbb    BYTE PTR [rip+0x0],dh        # af4b <_end+0x4f33>
    af4b:	00 00                	add    BYTE PTR [rax],al
    af4d:	0f 00 00             	sldt   WORD PTR [rax]
    af50:	00 00                	add    BYTE PTR [rax],al
    af52:	00 00                	add    BYTE PTR [rax],al
    af54:	00 20                	add    BYTE PTR [rax],ah
    af56:	34 d5                	xor    al,0xd5
    af58:	59                   	pop    rcx
    af59:	00 00                	add    BYTE PTR [rax],al
    af5b:	05 e4 71 00 00       	add    eax,0x71e4
    af60:	eb 25                	jmp    af87 <_end+0x4f6f>
    af62:	00 00                	add    BYTE PTR [rax],al
    af64:	e9 25 00 00 07       	jmp    700af8e <_end+0x7004f76>
    af69:	27                   	(bad)
    af6a:	35 00 00 00 00       	xor    eax,0x0
    af6f:	00 00                	add    BYTE PTR [rax],al
    af71:	9b                   	fwait
    af72:	75 00                	jne    af74 <_end+0x4f5c>
    af74:	00 03                	add    BYTE PTR [rbx],al
    af76:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af79:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    af84:	09 d6                	or     esi,edx
    af86:	71 00                	jno    af88 <_end+0x4f70>
    af88:	00 27                	add    BYTE PTR [rdi],ah
    af8a:	35 00 00 00 00       	xor    eax,0x0
    af8f:	00 00                	add    BYTE PTR [rax],al
    af91:	02 00                	add    al,BYTE PTR [rax]
    af93:	27                   	(bad)
    af94:	35 00 00 00 00       	xor    eax,0x0
    af99:	00 00                	add    BYTE PTR [rax],al
    af9b:	0c 00                	or     al,0x0
    af9d:	00 00                	add    BYTE PTR [rax],al
    af9f:	00 00                	add    BYTE PTR [rax],al
    afa1:	00 00                	add    BYTE PTR [rax],al
    afa3:	20 34 23             	and    BYTE PTR [rbx+riz*1],dh
    afa6:	5a                   	pop    rdx
    afa7:	00 00                	add    BYTE PTR [rax],al
    afa9:	05 e4 71 00 00       	add    eax,0x71e4
    afae:	fa                   	cli
    afaf:	25 00 00 f8 25       	and    eax,0x25f80000
    afb4:	00 00                	add    BYTE PTR [rax],al
    afb6:	07                   	(bad)
    afb7:	33 35 00 00 00 00    	xor    esi,DWORD PTR [rip+0x0]        # afbd <_end+0x4fa5>
    afbd:	00 00                	add    BYTE PTR [rax],al
    afbf:	9b                   	fwait
    afc0:	75 00                	jne    afc2 <_end+0x4faa>
    afc2:	00 03                	add    BYTE PTR [rbx],al
    afc4:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    afc7:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    afcd:	00 00                	add    BYTE PTR [rax],al
    afcf:	00 00                	add    BYTE PTR [rax],al
    afd1:	00 09                	add    BYTE PTR [rcx],cl
    afd3:	d6                   	(bad)
    afd4:	71 00                	jno    afd6 <_end+0x4fbe>
    afd6:	00 33                	add    BYTE PTR [rbx],dh
    afd8:	35 00 00 00 00       	xor    eax,0x0
    afdd:	00 00                	add    BYTE PTR [rax],al
    afdf:	02 00                	add    al,BYTE PTR [rax]
    afe1:	33 35 00 00 00 00    	xor    esi,DWORD PTR [rip+0x0]        # afe7 <_end+0x4fcf>
    afe7:	00 00                	add    BYTE PTR [rax],al
    afe9:	0c 00                	or     al,0x0
    afeb:	00 00                	add    BYTE PTR [rax],al
    afed:	00 00                	add    BYTE PTR [rax],al
    afef:	00 00                	add    BYTE PTR [rax],al
    aff1:	20 34 71             	and    BYTE PTR [rcx+rsi*2],dh
    aff4:	5a                   	pop    rdx
    aff5:	00 00                	add    BYTE PTR [rax],al
    aff7:	05 e4 71 00 00       	add    eax,0x71e4
    affc:	09 26                	or     DWORD PTR [rsi],esp
    affe:	00 00                	add    BYTE PTR [rax],al
    b000:	07                   	(bad)
    b001:	26 00 00             	es add BYTE PTR [rax],al
    b004:	07                   	(bad)
    b005:	3f                   	(bad)
    b006:	35 00 00 00 00       	xor    eax,0x0
    b00b:	00 00                	add    BYTE PTR [rax],al
    b00d:	9b                   	fwait
    b00e:	75 00                	jne    b010 <_end+0x4ff8>
    b010:	00 03                	add    BYTE PTR [rbx],al
    b012:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b015:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b020:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b023:	00 00                	add    BYTE PTR [rax],al
    b025:	3f                   	(bad)
    b026:	35 00 00 00 00       	xor    eax,0x0
    b02b:	00 00                	add    BYTE PTR [rax],al
    b02d:	03 00                	add    eax,DWORD PTR [rax]
    b02f:	3f                   	(bad)
    b030:	35 00 00 00 00       	xor    eax,0x0
    b035:	00 00                	add    BYTE PTR [rax],al
    b037:	3a 00                	cmp    al,BYTE PTR [rax]
    b039:	00 00                	add    BYTE PTR [rax],al
    b03b:	00 00                	add    BYTE PTR [rax],al
    b03d:	00 00                	add    BYTE PTR [rax],al
    b03f:	20 34 22             	and    BYTE PTR [rdx+riz*1],dh
    b042:	5b                   	pop    rbx
    b043:	00 00                	add    BYTE PTR [rax],al
    b045:	05 91 52 00 00       	add    eax,0x5291
    b04a:	18 26                	sbb    BYTE PTR [rsi],ah
    b04c:	00 00                	add    BYTE PTR [rax],al
    b04e:	16                   	(bad)
    b04f:	26 00 00             	es add BYTE PTR [rax],al
    b052:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b058:	79 52                	jns    b0ac <_end+0x5094>
    b05a:	00 00                	add    BYTE PTR [rax],al
    b05c:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b05f:	00 00                	add    BYTE PTR [rax],al
    b061:	15 9d 52 00 00       	adc    eax,0x529d
    b066:	24 26                	and    al,0x26
    b068:	00 00                	add    BYTE PTR [rax],al
    b06a:	20 26                	and    BYTE PTR [rsi],ah
    b06c:	00 00                	add    BYTE PTR [rax],al
    b06e:	0a 52 35             	or     dl,BYTE PTR [rdx+0x35]
    b071:	00 00                	add    BYTE PTR [rax],al
    b073:	00 00                	add    BYTE PTR [rax],al
    b075:	00 00                	add    BYTE PTR [rax],al
    b077:	e5 3c                	in     eax,0x3c
    b079:	00 00                	add    BYTE PTR [rax],al
    b07b:	eb 5a                	jmp    b0d7 <_end+0x50bf>
    b07d:	00 00                	add    BYTE PTR [rax],al
    b07f:	03 01                	add    eax,DWORD PTR [rcx]
    b081:	55                   	push   rbp
    b082:	09 03                	or     DWORD PTR [rbx],eax
    b084:	8e 42 00             	mov    es,WORD PTR [rdx+0x0]
    b087:	00 00                	add    BYTE PTR [rax],al
    b089:	00 00                	add    BYTE PTR [rax],al
    b08b:	00 03                	add    BYTE PTR [rbx],al
    b08d:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b091:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b095:	00 00                	add    BYTE PTR [rax],al
    b097:	00 00                	add    BYTE PTR [rax],al
    b099:	00 0a                	add    BYTE PTR [rdx],cl
    b09b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b09c:	35 00 00 00 00       	xor    eax,0x0
    b0a1:	00 00                	add    BYTE PTR [rax],al
    b0a3:	4d                   	rex.WRB
    b0a4:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b0a7:	0b 5b 00             	or     ebx,DWORD PTR [rbx+0x0]
    b0aa:	00 03                	add    BYTE PTR [rbx],al
    b0ac:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b0af:	91                   	xchg   ecx,eax
    b0b0:	a8 7f                	test   al,0x7f
    b0b2:	06                   	(bad)
    b0b3:	03 01                	add    eax,DWORD PTR [rcx]
    b0b5:	58                   	pop    rax
    b0b6:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b0b9:	00 07                	add    BYTE PTR [rdi],al
    b0bb:	79 35                	jns    b0f2 <_end+0x50da>
    b0bd:	00 00                	add    BYTE PTR [rax],al
    b0bf:	00 00                	add    BYTE PTR [rax],al
    b0c1:	00 00                	add    BYTE PTR [rax],al
    b0c3:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b0c6:	00 03                	add    BYTE PTR [rbx],al
    b0c8:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b0cb:	91                   	xchg   ecx,eax
    b0cc:	a8 7f                	test   al,0x7f
    b0ce:	06                   	(bad)
    b0cf:	00 00                	add    BYTE PTR [rax],al
    b0d1:	19 d6                	sbb    esi,edx
    b0d3:	71 00                	jno    b0d5 <_end+0x50bd>
    b0d5:	00 79 35             	add    BYTE PTR [rcx+0x35],bh
    b0d8:	00 00                	add    BYTE PTR [rax],al
    b0da:	00 00                	add    BYTE PTR [rax],al
    b0dc:	00 00                	add    BYTE PTR [rax],al
    b0de:	02 00                	add    al,BYTE PTR [rax]
    b0e0:	79 35                	jns    b117 <_end+0x50ff>
    b0e2:	00 00                	add    BYTE PTR [rax],al
    b0e4:	00 00                	add    BYTE PTR [rax],al
    b0e6:	00 00                	add    BYTE PTR [rax],al
    b0e8:	0c 00                	or     al,0x0
    b0ea:	00 00                	add    BYTE PTR [rax],al
    b0ec:	00 00                	add    BYTE PTR [rax],al
    b0ee:	00 00                	add    BYTE PTR [rax],al
    b0f0:	01 20                	add    DWORD PTR [rax],esp
    b0f2:	34 05                	xor    al,0x5
    b0f4:	e4 71                	in     al,0x71
    b0f6:	00 00                	add    BYTE PTR [rax],al
    b0f8:	37                   	(bad)
    b0f9:	26 00 00             	es add BYTE PTR [rax],al
    b0fc:	35 26 00 00 07       	xor    eax,0x7000026
    b101:	85 35 00 00 00 00    	test   DWORD PTR [rip+0x0],esi        # b107 <_end+0x50ef>
    b107:	00 00                	add    BYTE PTR [rax],al
    b109:	9b                   	fwait
    b10a:	75 00                	jne    b10c <_end+0x50f4>
    b10c:	00 03                	add    BYTE PTR [rbx],al
    b10e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b111:	03 c0                	add    eax,eax
    b113:	45 00 00             	add    BYTE PTR [r8],r8b
    b116:	00 00                	add    BYTE PTR [rax],al
    b118:	00 00                	add    BYTE PTR [rax],al
    b11a:	00 00                	add    BYTE PTR [rax],al
    b11c:	00 16                	add    BYTE PTR [rsi],dl
    b11e:	a0 34 00 00 00 00 00 	movabs al,ds:0x6d00000000000034
    b125:	00 6d 
    b127:	00 00                	add    BYTE PTR [rax],al
    b129:	00 00                	add    BYTE PTR [rax],al
    b12b:	00 00                	add    BYTE PTR [rax],al
    b12d:	00 75 5d             	add    BYTE PTR [rbp+0x5d],dh
    b130:	00 00                	add    BYTE PTR [rax],al
    b132:	17                   	(bad)
    b133:	ed                   	in     eax,dx
    b134:	33 00                	xor    eax,DWORD PTR [rax]
    b136:	00 21                	add    BYTE PTR [rcx],ah
    b138:	34 db                	xor    al,0xdb
    b13a:	41 00 00             	add    BYTE PTR [r8],al
    b13d:	09 d6                	or     esi,edx
    b13f:	71 00                	jno    b141 <_end+0x5129>
    b141:	00 a0 34 00 00 00    	add    BYTE PTR [rax+0x34],ah
    b147:	00 00                	add    BYTE PTR [rax],al
    b149:	00 02                	add    BYTE PTR [rdx],al
    b14b:	00 a0 34 00 00 00    	add    BYTE PTR [rax+0x34],ah
    b151:	00 00                	add    BYTE PTR [rax],al
    b153:	00 0f                	add    BYTE PTR [rdi],cl
    b155:	00 00                	add    BYTE PTR [rax],al
    b157:	00 00                	add    BYTE PTR [rax],al
    b159:	00 00                	add    BYTE PTR [rax],al
    b15b:	00 21                	add    BYTE PTR [rcx],ah
    b15d:	34 dc                	xor    al,0xdc
    b15f:	5b                   	pop    rbx
    b160:	00 00                	add    BYTE PTR [rax],al
    b162:	05 e4 71 00 00       	add    eax,0x71e4
    b167:	46                   	rex.RX
    b168:	26 00 00             	es add BYTE PTR [rax],al
    b16b:	44                   	rex.R
    b16c:	26 00 00             	es add BYTE PTR [rax],al
    b16f:	07                   	(bad)
    b170:	af                   	scas   eax,DWORD PTR es:[rdi]
    b171:	34 00                	xor    al,0x0
    b173:	00 00                	add    BYTE PTR [rax],al
    b175:	00 00                	add    BYTE PTR [rax],al
    b177:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b17d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b180:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b18b:	09 d6                	or     esi,edx
    b18d:	71 00                	jno    b18f <_end+0x5177>
    b18f:	00 af 34 00 00 00    	add    BYTE PTR [rdi+0x34],ch
    b195:	00 00                	add    BYTE PTR [rax],al
    b197:	00 02                	add    BYTE PTR [rdx],al
    b199:	00 af 34 00 00 00    	add    BYTE PTR [rdi+0x34],ch
    b19f:	00 00                	add    BYTE PTR [rax],al
    b1a1:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b1a4:	00 00                	add    BYTE PTR [rax],al
    b1a6:	00 00                	add    BYTE PTR [rax],al
    b1a8:	00 00                	add    BYTE PTR [rax],al
    b1aa:	21 34 2a             	and    DWORD PTR [rdx+rbp*1],esi
    b1ad:	5c                   	pop    rsp
    b1ae:	00 00                	add    BYTE PTR [rax],al
    b1b0:	05 e4 71 00 00       	add    eax,0x71e4
    b1b5:	55                   	push   rbp
    b1b6:	26 00 00             	es add BYTE PTR [rax],al
    b1b9:	53                   	push   rbx
    b1ba:	26 00 00             	es add BYTE PTR [rax],al
    b1bd:	07                   	(bad)
    b1be:	bb 34 00 00 00       	mov    ebx,0x34
    b1c3:	00 00                	add    BYTE PTR [rax],al
    b1c5:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b1cb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b1ce:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    b1d4:	00 00                	add    BYTE PTR [rax],al
    b1d6:	00 00                	add    BYTE PTR [rax],al
    b1d8:	00 09                	add    BYTE PTR [rcx],cl
    b1da:	d6                   	(bad)
    b1db:	71 00                	jno    b1dd <_end+0x51c5>
    b1dd:	00 bb 34 00 00 00    	add    BYTE PTR [rbx+0x34],bh
    b1e3:	00 00                	add    BYTE PTR [rax],al
    b1e5:	00 02                	add    BYTE PTR [rdx],al
    b1e7:	00 bb 34 00 00 00    	add    BYTE PTR [rbx+0x34],bh
    b1ed:	00 00                	add    BYTE PTR [rax],al
    b1ef:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b1f2:	00 00                	add    BYTE PTR [rax],al
    b1f4:	00 00                	add    BYTE PTR [rax],al
    b1f6:	00 00                	add    BYTE PTR [rax],al
    b1f8:	21 34 78             	and    DWORD PTR [rax+rdi*2],esi
    b1fb:	5c                   	pop    rsp
    b1fc:	00 00                	add    BYTE PTR [rax],al
    b1fe:	05 e4 71 00 00       	add    eax,0x71e4
    b203:	64 26 00 00          	fs add BYTE PTR fs:[rax],al
    b207:	62 26 00 00 07       	(bad)
    b20c:	c7                   	(bad)
    b20d:	34 00                	xor    al,0x0
    b20f:	00 00                	add    BYTE PTR [rax],al
    b211:	00 00                	add    BYTE PTR [rax],al
    b213:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b219:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b21c:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b227:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b22a:	00 00                	add    BYTE PTR [rax],al
    b22c:	c7                   	(bad)
    b22d:	34 00                	xor    al,0x0
    b22f:	00 00                	add    BYTE PTR [rax],al
    b231:	00 00                	add    BYTE PTR [rax],al
    b233:	00 03                	add    BYTE PTR [rbx],al
    b235:	00 c7                	add    bh,al
    b237:	34 00                	xor    al,0x0
    b239:	00 00                	add    BYTE PTR [rax],al
    b23b:	00 00                	add    BYTE PTR [rax],al
    b23d:	00 3a                	add    BYTE PTR [rdx],bh
    b23f:	00 00                	add    BYTE PTR [rax],al
    b241:	00 00                	add    BYTE PTR [rax],al
    b243:	00 00                	add    BYTE PTR [rax],al
    b245:	00 21                	add    BYTE PTR [rcx],ah
    b247:	34 29                	xor    al,0x29
    b249:	5d                   	pop    rbp
    b24a:	00 00                	add    BYTE PTR [rax],al
    b24c:	05 91 52 00 00       	add    eax,0x5291
    b251:	73 26                	jae    b279 <_end+0x5261>
    b253:	00 00                	add    BYTE PTR [rax],al
    b255:	71 26                	jno    b27d <_end+0x5265>
    b257:	00 00                	add    BYTE PTR [rax],al
    b259:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b25f:	79 52                	jns    b2b3 <_end+0x529b>
    b261:	00 00                	add    BYTE PTR [rax],al
    b263:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b266:	00 00                	add    BYTE PTR [rax],al
    b268:	15 9d 52 00 00       	adc    eax,0x529d
    b26d:	7f 26                	jg     b295 <_end+0x527d>
    b26f:	00 00                	add    BYTE PTR [rax],al
    b271:	7b 26                	jnp    b299 <_end+0x5281>
    b273:	00 00                	add    BYTE PTR [rax],al
    b275:	0a da                	or     bl,dl
    b277:	34 00                	xor    al,0x0
    b279:	00 00                	add    BYTE PTR [rax],al
    b27b:	00 00                	add    BYTE PTR [rax],al
    b27d:	00 e5                	add    ch,ah
    b27f:	3c 00                	cmp    al,0x0
    b281:	00 f2                	add    dl,dh
    b283:	5c                   	pop    rsp
    b284:	00 00                	add    BYTE PTR [rax],al
    b286:	03 01                	add    eax,DWORD PTR [rcx]
    b288:	55                   	push   rbp
    b289:	09 03                	or     DWORD PTR [rbx],eax
    b28b:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    b28e:	00 00                	add    BYTE PTR [rax],al
    b290:	00 00                	add    BYTE PTR [rax],al
    b292:	00 03                	add    BYTE PTR [rbx],al
    b294:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b298:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b29c:	00 00                	add    BYTE PTR [rax],al
    b29e:	00 00                	add    BYTE PTR [rax],al
    b2a0:	00 0a                	add    BYTE PTR [rdx],cl
    b2a2:	f7 34 00             	div    DWORD PTR [rax+rax*1]
    b2a5:	00 00                	add    BYTE PTR [rax],al
    b2a7:	00 00                	add    BYTE PTR [rax],al
    b2a9:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b2ac:	00 00                	add    BYTE PTR [rax],al
    b2ae:	12 5d 00             	adc    bl,BYTE PTR [rbp+0x0]
    b2b1:	00 03                	add    BYTE PTR [rbx],al
    b2b3:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b2b6:	91                   	xchg   ecx,eax
    b2b7:	a8 7f                	test   al,0x7f
    b2b9:	06                   	(bad)
    b2ba:	03 01                	add    eax,DWORD PTR [rcx]
    b2bc:	58                   	pop    rax
    b2bd:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b2c0:	00 07                	add    BYTE PTR [rdi],al
    b2c2:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # b2c8 <_end+0x52b0>
    b2c8:	00 00                	add    BYTE PTR [rax],al
    b2ca:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b2cd:	00 03                	add    BYTE PTR [rbx],al
    b2cf:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b2d2:	91                   	xchg   ecx,eax
    b2d3:	a8 7f                	test   al,0x7f
    b2d5:	06                   	(bad)
    b2d6:	00 00                	add    BYTE PTR [rax],al
    b2d8:	19 d6                	sbb    esi,edx
    b2da:	71 00                	jno    b2dc <_end+0x52c4>
    b2dc:	00 01                	add    BYTE PTR [rcx],al
    b2de:	35 00 00 00 00       	xor    eax,0x0
    b2e3:	00 00                	add    BYTE PTR [rax],al
    b2e5:	02 00                	add    al,BYTE PTR [rax]
    b2e7:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # b2ed <_end+0x52d5>
    b2ed:	00 00                	add    BYTE PTR [rax],al
    b2ef:	0c 00                	or     al,0x0
    b2f1:	00 00                	add    BYTE PTR [rax],al
    b2f3:	00 00                	add    BYTE PTR [rax],al
    b2f5:	00 00                	add    BYTE PTR [rax],al
    b2f7:	01 21                	add    DWORD PTR [rcx],esp
    b2f9:	34 05                	xor    al,0x5
    b2fb:	e4 71                	in     al,0x71
    b2fd:	00 00                	add    BYTE PTR [rax],al
    b2ff:	92                   	xchg   edx,eax
    b300:	26 00 00             	es add BYTE PTR [rax],al
    b303:	90                   	nop
    b304:	26 00 00             	es add BYTE PTR [rax],al
    b307:	07                   	(bad)
    b308:	0d 35 00 00 00       	or     eax,0x35
    b30d:	00 00                	add    BYTE PTR [rax],al
    b30f:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b315:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b318:	03 c0                	add    eax,eax
    b31a:	45 00 00             	add    BYTE PTR [r8],r8b
    b31d:	00 00                	add    BYTE PTR [rax],al
    b31f:	00 00                	add    BYTE PTR [rax],al
    b321:	00 00                	add    BYTE PTR [rax],al
    b323:	00 16                	add    BYTE PTR [rsi],dl
    b325:	28 34 00             	sub    BYTE PTR [rax+rax*1],dh
    b328:	00 00                	add    BYTE PTR [rax],al
    b32a:	00 00                	add    BYTE PTR [rax],al
    b32c:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    b32f:	00 00                	add    BYTE PTR [rax],al
    b331:	00 00                	add    BYTE PTR [rax],al
    b333:	00 00                	add    BYTE PTR [rax],al
    b335:	7c 5f                	jl     b396 <_end+0x537e>
    b337:	00 00                	add    BYTE PTR [rax],al
    b339:	17                   	(bad)
    b33a:	61                   	(bad)
    b33b:	12 00                	adc    al,BYTE PTR [rax]
    b33d:	00 22                	add    BYTE PTR [rdx],ah
    b33f:	34 db                	xor    al,0xdb
    b341:	41 00 00             	add    BYTE PTR [r8],al
    b344:	09 d6                	or     esi,edx
    b346:	71 00                	jno    b348 <_end+0x5330>
    b348:	00 28                	add    BYTE PTR [rax],ch
    b34a:	34 00                	xor    al,0x0
    b34c:	00 00                	add    BYTE PTR [rax],al
    b34e:	00 00                	add    BYTE PTR [rax],al
    b350:	00 02                	add    BYTE PTR [rdx],al
    b352:	00 28                	add    BYTE PTR [rax],ch
    b354:	34 00                	xor    al,0x0
    b356:	00 00                	add    BYTE PTR [rax],al
    b358:	00 00                	add    BYTE PTR [rax],al
    b35a:	00 0f                	add    BYTE PTR [rdi],cl
    b35c:	00 00                	add    BYTE PTR [rax],al
    b35e:	00 00                	add    BYTE PTR [rax],al
    b360:	00 00                	add    BYTE PTR [rax],al
    b362:	00 22                	add    BYTE PTR [rdx],ah
    b364:	34 e3                	xor    al,0xe3
    b366:	5d                   	pop    rbp
    b367:	00 00                	add    BYTE PTR [rax],al
    b369:	05 e4 71 00 00       	add    eax,0x71e4
    b36e:	a1 26 00 00 9f 26 00 	movabs eax,ds:0x70000269f000026
    b375:	00 07 
    b377:	37                   	(bad)
    b378:	34 00                	xor    al,0x0
    b37a:	00 00                	add    BYTE PTR [rax],al
    b37c:	00 00                	add    BYTE PTR [rax],al
    b37e:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b384:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b387:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b392:	09 d6                	or     esi,edx
    b394:	71 00                	jno    b396 <_end+0x537e>
    b396:	00 37                	add    BYTE PTR [rdi],dh
    b398:	34 00                	xor    al,0x0
    b39a:	00 00                	add    BYTE PTR [rax],al
    b39c:	00 00                	add    BYTE PTR [rax],al
    b39e:	00 02                	add    BYTE PTR [rdx],al
    b3a0:	00 37                	add    BYTE PTR [rdi],dh
    b3a2:	34 00                	xor    al,0x0
    b3a4:	00 00                	add    BYTE PTR [rax],al
    b3a6:	00 00                	add    BYTE PTR [rax],al
    b3a8:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b3ab:	00 00                	add    BYTE PTR [rax],al
    b3ad:	00 00                	add    BYTE PTR [rax],al
    b3af:	00 00                	add    BYTE PTR [rax],al
    b3b1:	22 34 31             	and    dh,BYTE PTR [rcx+rsi*1]
    b3b4:	5e                   	pop    rsi
    b3b5:	00 00                	add    BYTE PTR [rax],al
    b3b7:	05 e4 71 00 00       	add    eax,0x71e4
    b3bc:	b0 26                	mov    al,0x26
    b3be:	00 00                	add    BYTE PTR [rax],al
    b3c0:	ae                   	scas   al,BYTE PTR es:[rdi]
    b3c1:	26 00 00             	es add BYTE PTR [rax],al
    b3c4:	07                   	(bad)
    b3c5:	43 34 00             	rex.XB xor al,0x0
    b3c8:	00 00                	add    BYTE PTR [rax],al
    b3ca:	00 00                	add    BYTE PTR [rax],al
    b3cc:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b3d2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b3d5:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    b3db:	00 00                	add    BYTE PTR [rax],al
    b3dd:	00 00                	add    BYTE PTR [rax],al
    b3df:	00 09                	add    BYTE PTR [rcx],cl
    b3e1:	d6                   	(bad)
    b3e2:	71 00                	jno    b3e4 <_end+0x53cc>
    b3e4:	00 43 34             	add    BYTE PTR [rbx+0x34],al
    b3e7:	00 00                	add    BYTE PTR [rax],al
    b3e9:	00 00                	add    BYTE PTR [rax],al
    b3eb:	00 00                	add    BYTE PTR [rax],al
    b3ed:	02 00                	add    al,BYTE PTR [rax]
    b3ef:	43 34 00             	rex.XB xor al,0x0
    b3f2:	00 00                	add    BYTE PTR [rax],al
    b3f4:	00 00                	add    BYTE PTR [rax],al
    b3f6:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b3f9:	00 00                	add    BYTE PTR [rax],al
    b3fb:	00 00                	add    BYTE PTR [rax],al
    b3fd:	00 00                	add    BYTE PTR [rax],al
    b3ff:	22 34 7f             	and    dh,BYTE PTR [rdi+rdi*2]
    b402:	5e                   	pop    rsi
    b403:	00 00                	add    BYTE PTR [rax],al
    b405:	05 e4 71 00 00       	add    eax,0x71e4
    b40a:	bf 26 00 00 bd       	mov    edi,0xbd000026
    b40f:	26 00 00             	es add BYTE PTR [rax],al
    b412:	07                   	(bad)
    b413:	4f 34 00             	rex.WRXB xor al,0x0
    b416:	00 00                	add    BYTE PTR [rax],al
    b418:	00 00                	add    BYTE PTR [rax],al
    b41a:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b420:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b423:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b42e:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b431:	00 00                	add    BYTE PTR [rax],al
    b433:	4f 34 00             	rex.WRXB xor al,0x0
    b436:	00 00                	add    BYTE PTR [rax],al
    b438:	00 00                	add    BYTE PTR [rax],al
    b43a:	00 03                	add    BYTE PTR [rbx],al
    b43c:	00 4f 34             	add    BYTE PTR [rdi+0x34],cl
    b43f:	00 00                	add    BYTE PTR [rax],al
    b441:	00 00                	add    BYTE PTR [rax],al
    b443:	00 00                	add    BYTE PTR [rax],al
    b445:	3a 00                	cmp    al,BYTE PTR [rax]
    b447:	00 00                	add    BYTE PTR [rax],al
    b449:	00 00                	add    BYTE PTR [rax],al
    b44b:	00 00                	add    BYTE PTR [rax],al
    b44d:	22 34 30             	and    dh,BYTE PTR [rax+rsi*1]
    b450:	5f                   	pop    rdi
    b451:	00 00                	add    BYTE PTR [rax],al
    b453:	05 91 52 00 00       	add    eax,0x5291
    b458:	ce                   	(bad)
    b459:	26 00 00             	es add BYTE PTR [rax],al
    b45c:	cc                   	int3
    b45d:	26 00 00             	es add BYTE PTR [rax],al
    b460:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b466:	79 52                	jns    b4ba <_end+0x54a2>
    b468:	00 00                	add    BYTE PTR [rax],al
    b46a:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b46d:	00 00                	add    BYTE PTR [rax],al
    b46f:	15 9d 52 00 00       	adc    eax,0x529d
    b474:	da 26                	fisub  DWORD PTR [rsi]
    b476:	00 00                	add    BYTE PTR [rax],al
    b478:	d6                   	(bad)
    b479:	26 00 00             	es add BYTE PTR [rax],al
    b47c:	0a 62 34             	or     ah,BYTE PTR [rdx+0x34]
    b47f:	00 00                	add    BYTE PTR [rax],al
    b481:	00 00                	add    BYTE PTR [rax],al
    b483:	00 00                	add    BYTE PTR [rax],al
    b485:	e5 3c                	in     eax,0x3c
    b487:	00 00                	add    BYTE PTR [rax],al
    b489:	f9                   	stc
    b48a:	5e                   	pop    rsi
    b48b:	00 00                	add    BYTE PTR [rax],al
    b48d:	03 01                	add    eax,DWORD PTR [rcx]
    b48f:	55                   	push   rbp
    b490:	09 03                	or     DWORD PTR [rbx],eax
    b492:	b7 42                	mov    bh,0x42
    b494:	00 00                	add    BYTE PTR [rax],al
    b496:	00 00                	add    BYTE PTR [rax],al
    b498:	00 00                	add    BYTE PTR [rax],al
    b49a:	03 01                	add    eax,DWORD PTR [rcx]
    b49c:	54                   	push   rsp
    b49d:	09 03                	or     DWORD PTR [rbx],eax
    b49f:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b4a3:	00 00                	add    BYTE PTR [rax],al
    b4a5:	00 00                	add    BYTE PTR [rax],al
    b4a7:	00 0a                	add    BYTE PTR [rdx],cl
    b4a9:	7f 34                	jg     b4df <_end+0x54c7>
    b4ab:	00 00                	add    BYTE PTR [rax],al
    b4ad:	00 00                	add    BYTE PTR [rax],al
    b4af:	00 00                	add    BYTE PTR [rax],al
    b4b1:	4d                   	rex.WRB
    b4b2:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b4b5:	19 5f 00             	sbb    DWORD PTR [rdi+0x0],ebx
    b4b8:	00 03                	add    BYTE PTR [rbx],al
    b4ba:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b4bd:	91                   	xchg   ecx,eax
    b4be:	a8 7f                	test   al,0x7f
    b4c0:	06                   	(bad)
    b4c1:	03 01                	add    eax,DWORD PTR [rcx]
    b4c3:	58                   	pop    rax
    b4c4:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b4c7:	00 07                	add    BYTE PTR [rdi],al
    b4c9:	89 34 00             	mov    DWORD PTR [rax+rax*1],esi
    b4cc:	00 00                	add    BYTE PTR [rax],al
    b4ce:	00 00                	add    BYTE PTR [rax],al
    b4d0:	00 33                	add    BYTE PTR [rbx],dh
    b4d2:	3c 00                	cmp    al,0x0
    b4d4:	00 03                	add    BYTE PTR [rbx],al
    b4d6:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b4d9:	91                   	xchg   ecx,eax
    b4da:	a8 7f                	test   al,0x7f
    b4dc:	06                   	(bad)
    b4dd:	00 00                	add    BYTE PTR [rax],al
    b4df:	19 d6                	sbb    esi,edx
    b4e1:	71 00                	jno    b4e3 <_end+0x54cb>
    b4e3:	00 89 34 00 00 00    	add    BYTE PTR [rcx+0x34],cl
    b4e9:	00 00                	add    BYTE PTR [rax],al
    b4eb:	00 02                	add    BYTE PTR [rdx],al
    b4ed:	00 89 34 00 00 00    	add    BYTE PTR [rcx+0x34],cl
    b4f3:	00 00                	add    BYTE PTR [rax],al
    b4f5:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b4f8:	00 00                	add    BYTE PTR [rax],al
    b4fa:	00 00                	add    BYTE PTR [rax],al
    b4fc:	00 00                	add    BYTE PTR [rax],al
    b4fe:	01 22                	add    DWORD PTR [rdx],esp
    b500:	34 05                	xor    al,0x5
    b502:	e4 71                	in     al,0x71
    b504:	00 00                	add    BYTE PTR [rax],al
    b506:	ed                   	in     eax,dx
    b507:	26 00 00             	es add BYTE PTR [rax],al
    b50a:	eb 26                	jmp    b532 <_end+0x551a>
    b50c:	00 00                	add    BYTE PTR [rax],al
    b50e:	07                   	(bad)
    b50f:	95                   	xchg   ebp,eax
    b510:	34 00                	xor    al,0x0
    b512:	00 00                	add    BYTE PTR [rax],al
    b514:	00 00                	add    BYTE PTR [rax],al
    b516:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b51c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b51f:	03 c0                	add    eax,eax
    b521:	45 00 00             	add    BYTE PTR [r8],r8b
    b524:	00 00                	add    BYTE PTR [rax],al
    b526:	00 00                	add    BYTE PTR [rax],al
    b528:	00 00                	add    BYTE PTR [rax],al
    b52a:	00 16                	add    BYTE PTR [rsi],dl
    b52c:	b0 33                	mov    al,0x33
    b52e:	00 00                	add    BYTE PTR [rax],al
    b530:	00 00                	add    BYTE PTR [rax],al
    b532:	00 00                	add    BYTE PTR [rax],al
    b534:	6d                   	ins    DWORD PTR es:[rdi],dx
    b535:	00 00                	add    BYTE PTR [rax],al
    b537:	00 00                	add    BYTE PTR [rax],al
    b539:	00 00                	add    BYTE PTR [rax],al
    b53b:	00 83 61 00 00 17    	add    BYTE PTR [rbx+0x17000061],al
    b541:	e7 17                	out    0x17,eax
    b543:	00 00                	add    BYTE PTR [rax],al
    b545:	23 34 db             	and    esi,DWORD PTR [rbx+rbx*8]
    b548:	41 00 00             	add    BYTE PTR [r8],al
    b54b:	09 d6                	or     esi,edx
    b54d:	71 00                	jno    b54f <_end+0x5537>
    b54f:	00 b0 33 00 00 00    	add    BYTE PTR [rax+0x33],dh
    b555:	00 00                	add    BYTE PTR [rax],al
    b557:	00 02                	add    BYTE PTR [rdx],al
    b559:	00 b0 33 00 00 00    	add    BYTE PTR [rax+0x33],dh
    b55f:	00 00                	add    BYTE PTR [rax],al
    b561:	00 0f                	add    BYTE PTR [rdi],cl
    b563:	00 00                	add    BYTE PTR [rax],al
    b565:	00 00                	add    BYTE PTR [rax],al
    b567:	00 00                	add    BYTE PTR [rax],al
    b569:	00 23                	add    BYTE PTR [rbx],ah
    b56b:	34 ea                	xor    al,0xea
    b56d:	5f                   	pop    rdi
    b56e:	00 00                	add    BYTE PTR [rax],al
    b570:	05 e4 71 00 00       	add    eax,0x71e4
    b575:	fc                   	cld
    b576:	26 00 00             	es add BYTE PTR [rax],al
    b579:	fa                   	cli
    b57a:	26 00 00             	es add BYTE PTR [rax],al
    b57d:	07                   	(bad)
    b57e:	bf 33 00 00 00       	mov    edi,0x33
    b583:	00 00                	add    BYTE PTR [rax],al
    b585:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b58b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b58e:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b599:	09 d6                	or     esi,edx
    b59b:	71 00                	jno    b59d <_end+0x5585>
    b59d:	00 bf 33 00 00 00    	add    BYTE PTR [rdi+0x33],bh
    b5a3:	00 00                	add    BYTE PTR [rax],al
    b5a5:	00 02                	add    BYTE PTR [rdx],al
    b5a7:	00 bf 33 00 00 00    	add    BYTE PTR [rdi+0x33],bh
    b5ad:	00 00                	add    BYTE PTR [rax],al
    b5af:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b5b2:	00 00                	add    BYTE PTR [rax],al
    b5b4:	00 00                	add    BYTE PTR [rax],al
    b5b6:	00 00                	add    BYTE PTR [rax],al
    b5b8:	23 34 38             	and    esi,DWORD PTR [rax+rdi*1]
    b5bb:	60                   	(bad)
    b5bc:	00 00                	add    BYTE PTR [rax],al
    b5be:	05 e4 71 00 00       	add    eax,0x71e4
    b5c3:	0b 27                	or     esp,DWORD PTR [rdi]
    b5c5:	00 00                	add    BYTE PTR [rax],al
    b5c7:	09 27                	or     DWORD PTR [rdi],esp
    b5c9:	00 00                	add    BYTE PTR [rax],al
    b5cb:	07                   	(bad)
    b5cc:	cb                   	retf
    b5cd:	33 00                	xor    eax,DWORD PTR [rax]
    b5cf:	00 00                	add    BYTE PTR [rax],al
    b5d1:	00 00                	add    BYTE PTR [rax],al
    b5d3:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b5d9:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b5dc:	03 d4                	add    edx,esp
    b5de:	42 00 00             	rex.X add BYTE PTR [rax],al
    b5e1:	00 00                	add    BYTE PTR [rax],al
    b5e3:	00 00                	add    BYTE PTR [rax],al
    b5e5:	00 00                	add    BYTE PTR [rax],al
    b5e7:	09 d6                	or     esi,edx
    b5e9:	71 00                	jno    b5eb <_end+0x55d3>
    b5eb:	00 cb                	add    bl,cl
    b5ed:	33 00                	xor    eax,DWORD PTR [rax]
    b5ef:	00 00                	add    BYTE PTR [rax],al
    b5f1:	00 00                	add    BYTE PTR [rax],al
    b5f3:	00 02                	add    BYTE PTR [rdx],al
    b5f5:	00 cb                	add    bl,cl
    b5f7:	33 00                	xor    eax,DWORD PTR [rax]
    b5f9:	00 00                	add    BYTE PTR [rax],al
    b5fb:	00 00                	add    BYTE PTR [rax],al
    b5fd:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b600:	00 00                	add    BYTE PTR [rax],al
    b602:	00 00                	add    BYTE PTR [rax],al
    b604:	00 00                	add    BYTE PTR [rax],al
    b606:	23 34 86             	and    esi,DWORD PTR [rsi+rax*4]
    b609:	60                   	(bad)
    b60a:	00 00                	add    BYTE PTR [rax],al
    b60c:	05 e4 71 00 00       	add    eax,0x71e4
    b611:	1a 27                	sbb    ah,BYTE PTR [rdi]
    b613:	00 00                	add    BYTE PTR [rax],al
    b615:	18 27                	sbb    BYTE PTR [rdi],ah
    b617:	00 00                	add    BYTE PTR [rax],al
    b619:	07                   	(bad)
    b61a:	d7                   	xlat   BYTE PTR ds:[rbx]
    b61b:	33 00                	xor    eax,DWORD PTR [rax]
    b61d:	00 00                	add    BYTE PTR [rax],al
    b61f:	00 00                	add    BYTE PTR [rax],al
    b621:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b627:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b62a:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b635:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b638:	00 00                	add    BYTE PTR [rax],al
    b63a:	d7                   	xlat   BYTE PTR ds:[rbx]
    b63b:	33 00                	xor    eax,DWORD PTR [rax]
    b63d:	00 00                	add    BYTE PTR [rax],al
    b63f:	00 00                	add    BYTE PTR [rax],al
    b641:	00 03                	add    BYTE PTR [rbx],al
    b643:	00 d7                	add    bh,dl
    b645:	33 00                	xor    eax,DWORD PTR [rax]
    b647:	00 00                	add    BYTE PTR [rax],al
    b649:	00 00                	add    BYTE PTR [rax],al
    b64b:	00 3a                	add    BYTE PTR [rdx],bh
    b64d:	00 00                	add    BYTE PTR [rax],al
    b64f:	00 00                	add    BYTE PTR [rax],al
    b651:	00 00                	add    BYTE PTR [rax],al
    b653:	00 23                	add    BYTE PTR [rbx],ah
    b655:	34 37                	xor    al,0x37
    b657:	61                   	(bad)
    b658:	00 00                	add    BYTE PTR [rax],al
    b65a:	05 91 52 00 00       	add    eax,0x5291
    b65f:	29 27                	sub    DWORD PTR [rdi],esp
    b661:	00 00                	add    BYTE PTR [rax],al
    b663:	27                   	(bad)
    b664:	27                   	(bad)
    b665:	00 00                	add    BYTE PTR [rax],al
    b667:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b66d:	79 52                	jns    b6c1 <_end+0x56a9>
    b66f:	00 00                	add    BYTE PTR [rax],al
    b671:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b674:	00 00                	add    BYTE PTR [rax],al
    b676:	15 9d 52 00 00       	adc    eax,0x529d
    b67b:	35 27 00 00 31       	xor    eax,0x31000027
    b680:	27                   	(bad)
    b681:	00 00                	add    BYTE PTR [rax],al
    b683:	0a ea                	or     ch,dl
    b685:	33 00                	xor    eax,DWORD PTR [rax]
    b687:	00 00                	add    BYTE PTR [rax],al
    b689:	00 00                	add    BYTE PTR [rax],al
    b68b:	00 e5                	add    ch,ah
    b68d:	3c 00                	cmp    al,0x0
    b68f:	00 00                	add    BYTE PTR [rax],al
    b691:	61                   	(bad)
    b692:	00 00                	add    BYTE PTR [rax],al
    b694:	03 01                	add    eax,DWORD PTR [rcx]
    b696:	55                   	push   rbp
    b697:	09 03                	or     DWORD PTR [rbx],eax
    b699:	60                   	(bad)
    b69a:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b69d:	00 00                	add    BYTE PTR [rax],al
    b69f:	00 00                	add    BYTE PTR [rax],al
    b6a1:	03 01                	add    eax,DWORD PTR [rcx]
    b6a3:	54                   	push   rsp
    b6a4:	09 03                	or     DWORD PTR [rbx],eax
    b6a6:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b6aa:	00 00                	add    BYTE PTR [rax],al
    b6ac:	00 00                	add    BYTE PTR [rax],al
    b6ae:	00 0a                	add    BYTE PTR [rdx],cl
    b6b0:	07                   	(bad)
    b6b1:	34 00                	xor    al,0x0
    b6b3:	00 00                	add    BYTE PTR [rax],al
    b6b5:	00 00                	add    BYTE PTR [rax],al
    b6b7:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b6ba:	00 00                	add    BYTE PTR [rax],al
    b6bc:	20 61 00             	and    BYTE PTR [rcx+0x0],ah
    b6bf:	00 03                	add    BYTE PTR [rbx],al
    b6c1:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b6c4:	91                   	xchg   ecx,eax
    b6c5:	a8 7f                	test   al,0x7f
    b6c7:	06                   	(bad)
    b6c8:	03 01                	add    eax,DWORD PTR [rcx]
    b6ca:	58                   	pop    rax
    b6cb:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b6ce:	00 07                	add    BYTE PTR [rdi],al
    b6d0:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
    b6d3:	00 00                	add    BYTE PTR [rax],al
    b6d5:	00 00                	add    BYTE PTR [rax],al
    b6d7:	00 33                	add    BYTE PTR [rbx],dh
    b6d9:	3c 00                	cmp    al,0x0
    b6db:	00 03                	add    BYTE PTR [rbx],al
    b6dd:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b6e0:	91                   	xchg   ecx,eax
    b6e1:	a8 7f                	test   al,0x7f
    b6e3:	06                   	(bad)
    b6e4:	00 00                	add    BYTE PTR [rax],al
    b6e6:	19 d6                	sbb    esi,edx
    b6e8:	71 00                	jno    b6ea <_end+0x56d2>
    b6ea:	00 11                	add    BYTE PTR [rcx],dl
    b6ec:	34 00                	xor    al,0x0
    b6ee:	00 00                	add    BYTE PTR [rax],al
    b6f0:	00 00                	add    BYTE PTR [rax],al
    b6f2:	00 02                	add    BYTE PTR [rdx],al
    b6f4:	00 11                	add    BYTE PTR [rcx],dl
    b6f6:	34 00                	xor    al,0x0
    b6f8:	00 00                	add    BYTE PTR [rax],al
    b6fa:	00 00                	add    BYTE PTR [rax],al
    b6fc:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b6ff:	00 00                	add    BYTE PTR [rax],al
    b701:	00 00                	add    BYTE PTR [rax],al
    b703:	00 00                	add    BYTE PTR [rax],al
    b705:	01 23                	add    DWORD PTR [rbx],esp
    b707:	34 05                	xor    al,0x5
    b709:	e4 71                	in     al,0x71
    b70b:	00 00                	add    BYTE PTR [rax],al
    b70d:	48 27                	rex.W (bad)
    b70f:	00 00                	add    BYTE PTR [rax],al
    b711:	46 27                	rex.RX (bad)
    b713:	00 00                	add    BYTE PTR [rax],al
    b715:	07                   	(bad)
    b716:	1d 34 00 00 00       	sbb    eax,0x34
    b71b:	00 00                	add    BYTE PTR [rax],al
    b71d:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b723:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b726:	03 c0                	add    eax,eax
    b728:	45 00 00             	add    BYTE PTR [r8],r8b
    b72b:	00 00                	add    BYTE PTR [rax],al
    b72d:	00 00                	add    BYTE PTR [rax],al
    b72f:	00 00                	add    BYTE PTR [rax],al
    b731:	00 16                	add    BYTE PTR [rsi],dl
    b733:	00 31                	add    BYTE PTR [rcx],dh
    b735:	00 00                	add    BYTE PTR [rax],al
    b737:	00 00                	add    BYTE PTR [rax],al
    b739:	00 00                	add    BYTE PTR [rax],al
    b73b:	74 00                	je     b73d <_end+0x5725>
    b73d:	00 00                	add    BYTE PTR [rax],al
    b73f:	00 00                	add    BYTE PTR [rax],al
    b741:	00 00                	add    BYTE PTR [rax],al
    b743:	5e                   	pop    rsi
    b744:	63 00                	movsxd eax,DWORD PTR [rax]
    b746:	00 17                	add    BYTE PTR [rdi],dl
    b748:	a8 15                	test   al,0x15
    b74a:	00 00                	add    BYTE PTR [rax],al
    b74c:	25 09 db 41 00       	and    eax,0x41db09
    b751:	00 09                	add    BYTE PTR [rcx],cl
    b753:	d6                   	(bad)
    b754:	71 00                	jno    b756 <_end+0x573e>
    b756:	00 00                	add    BYTE PTR [rax],al
    b758:	31 00                	xor    DWORD PTR [rax],eax
    b75a:	00 00                	add    BYTE PTR [rax],al
    b75c:	00 00                	add    BYTE PTR [rax],al
    b75e:	00 03                	add    BYTE PTR [rbx],al
    b760:	00 00                	add    BYTE PTR [rax],al
    b762:	31 00                	xor    DWORD PTR [rax],eax
    b764:	00 00                	add    BYTE PTR [rax],al
    b766:	00 00                	add    BYTE PTR [rax],al
    b768:	00 0f                	add    BYTE PTR [rdi],cl
    b76a:	00 00                	add    BYTE PTR [rax],al
    b76c:	00 00                	add    BYTE PTR [rax],al
    b76e:	00 00                	add    BYTE PTR [rax],al
    b770:	00 25 09 ea 61 00    	add    BYTE PTR [rip+0x61ea09],ah        # 62a17f <_end+0x624167>
    b776:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12960 <_end+0xc948>
    b77c:	57                   	push   rdi
    b77d:	27                   	(bad)
    b77e:	00 00                	add    BYTE PTR [rax],al
    b780:	55                   	push   rbp
    b781:	27                   	(bad)
    b782:	00 00                	add    BYTE PTR [rax],al
    b784:	07                   	(bad)
    b785:	0f 31                	rdtsc
    b787:	00 00                	add    BYTE PTR [rax],al
    b789:	00 00                	add    BYTE PTR [rax],al
    b78b:	00 00                	add    BYTE PTR [rax],al
    b78d:	9b                   	fwait
    b78e:	75 00                	jne    b790 <_end+0x5778>
    b790:	00 03                	add    BYTE PTR [rbx],al
    b792:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b795:	7f 00                	jg     b797 <_end+0x577f>
    b797:	00 00                	add    BYTE PTR [rax],al
    b799:	09 d6                	or     esi,edx
    b79b:	71 00                	jno    b79d <_end+0x5785>
    b79d:	00 0f                	add    BYTE PTR [rdi],cl
    b79f:	31 00                	xor    DWORD PTR [rax],eax
    b7a1:	00 00                	add    BYTE PTR [rax],al
    b7a3:	00 00                	add    BYTE PTR [rax],al
    b7a5:	00 02                	add    BYTE PTR [rdx],al
    b7a7:	00 0f                	add    BYTE PTR [rdi],cl
    b7a9:	31 00                	xor    DWORD PTR [rax],eax
    b7ab:	00 00                	add    BYTE PTR [rax],al
    b7ad:	00 00                	add    BYTE PTR [rax],al
    b7af:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b7b2:	00 00                	add    BYTE PTR [rax],al
    b7b4:	00 00                	add    BYTE PTR [rax],al
    b7b6:	00 00                	add    BYTE PTR [rax],al
    b7b8:	25 09 38 62 00       	and    eax,0x623809
    b7bd:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 129a7 <_end+0xc98f>
    b7c3:	66 27                	data16 (bad)
    b7c5:	00 00                	add    BYTE PTR [rax],al
    b7c7:	64 27                	fs (bad)
    b7c9:	00 00                	add    BYTE PTR [rax],al
    b7cb:	07                   	(bad)
    b7cc:	1b 31                	sbb    esi,DWORD PTR [rcx]
    b7ce:	00 00                	add    BYTE PTR [rax],al
    b7d0:	00 00                	add    BYTE PTR [rax],al
    b7d2:	00 00                	add    BYTE PTR [rax],al
    b7d4:	9b                   	fwait
    b7d5:	75 00                	jne    b7d7 <_end+0x57bf>
    b7d7:	00 03                	add    BYTE PTR [rbx],al
    b7d9:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b7dc:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    b7e0:	00 00                	add    BYTE PTR [rax],al
    b7e2:	00 00                	add    BYTE PTR [rax],al
    b7e4:	00 00                	add    BYTE PTR [rax],al
    b7e6:	00 09                	add    BYTE PTR [rcx],cl
    b7e8:	d6                   	(bad)
    b7e9:	71 00                	jno    b7eb <_end+0x57d3>
    b7eb:	00 1b                	add    BYTE PTR [rbx],bl
    b7ed:	31 00                	xor    DWORD PTR [rax],eax
    b7ef:	00 00                	add    BYTE PTR [rax],al
    b7f1:	00 00                	add    BYTE PTR [rax],al
    b7f3:	00 02                	add    BYTE PTR [rdx],al
    b7f5:	00 1b                	add    BYTE PTR [rbx],bl
    b7f7:	31 00                	xor    DWORD PTR [rax],eax
    b7f9:	00 00                	add    BYTE PTR [rax],al
    b7fb:	00 00                	add    BYTE PTR [rax],al
    b7fd:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b800:	00 00                	add    BYTE PTR [rax],al
    b802:	00 00                	add    BYTE PTR [rax],al
    b804:	00 00                	add    BYTE PTR [rax],al
    b806:	25 09 86 62 00       	and    eax,0x628609
    b80b:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 129f5 <_end+0xc9dd>
    b811:	75 27                	jne    b83a <_end+0x5822>
    b813:	00 00                	add    BYTE PTR [rax],al
    b815:	73 27                	jae    b83e <_end+0x5826>
    b817:	00 00                	add    BYTE PTR [rax],al
    b819:	07                   	(bad)
    b81a:	27                   	(bad)
    b81b:	31 00                	xor    DWORD PTR [rax],eax
    b81d:	00 00                	add    BYTE PTR [rax],al
    b81f:	00 00                	add    BYTE PTR [rax],al
    b821:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b827:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b82a:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b835:	1c 5b                	sbb    al,0x5b
    b837:	52                   	push   rdx
    b838:	00 00                	add    BYTE PTR [rax],al
    b83a:	27                   	(bad)
    b83b:	31 00                	xor    DWORD PTR [rax],eax
    b83d:	00 00                	add    BYTE PTR [rax],al
    b83f:	00 00                	add    BYTE PTR [rax],al
    b841:	00 03                	add    BYTE PTR [rbx],al
    b843:	00 09                	add    BYTE PTR [rcx],cl
    b845:	04 00                	add    al,0x0
    b847:	00 25 09 26 63 00    	add    BYTE PTR [rip+0x632609],ah        # 63de56 <_end+0x637e3e>
    b84d:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 10ae4 <_end+0xaacc>
    b853:	84 27                	test   BYTE PTR [rdi],ah
    b855:	00 00                	add    BYTE PTR [rax],al
    b857:	82                   	(bad)
    b858:	27                   	(bad)
    b859:	00 00                	add    BYTE PTR [rax],al
    b85b:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b861:	79 52                	jns    b8b5 <_end+0x589d>
    b863:	00 00                	add    BYTE PTR [rax],al
    b865:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b868:	00 00                	add    BYTE PTR [rax],al
    b86a:	2e 09 04 00          	cs or  DWORD PTR [rax+rax*1],eax
    b86e:	00 15 9d 52 00 00    	add    BYTE PTR [rip+0x529d],dl        # 10b11 <_end+0xaaf9>
    b874:	92                   	xchg   edx,eax
    b875:	27                   	(bad)
    b876:	00 00                	add    BYTE PTR [rax],al
    b878:	8c 27                	mov    WORD PTR [rdi],fs
    b87a:	00 00                	add    BYTE PTR [rax],al
    b87c:	0a 42 31             	or     al,BYTE PTR [rdx+0x31]
    b87f:	00 00                	add    BYTE PTR [rax],al
    b881:	00 00                	add    BYTE PTR [rax],al
    b883:	00 00                	add    BYTE PTR [rax],al
    b885:	e5 3c                	in     eax,0x3c
    b887:	00 00                	add    BYTE PTR [rax],al
    b889:	f9                   	stc
    b88a:	62                   	(bad)
    b88b:	00 00                	add    BYTE PTR [rax],al
    b88d:	03 01                	add    eax,DWORD PTR [rcx]
    b88f:	55                   	push   rbp
    b890:	09 03                	or     DWORD PTR [rbx],eax
    b892:	98                   	cwde
    b893:	45 00 00             	add    BYTE PTR [r8],r8b
    b896:	00 00                	add    BYTE PTR [rax],al
    b898:	00 00                	add    BYTE PTR [rax],al
    b89a:	03 01                	add    eax,DWORD PTR [rcx]
    b89c:	54                   	push   rsp
    b89d:	09 03                	or     DWORD PTR [rbx],eax
    b89f:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b8a3:	00 00                	add    BYTE PTR [rax],al
    b8a5:	00 00                	add    BYTE PTR [rax],al
    b8a7:	00 0a                	add    BYTE PTR [rdx],cl
    b8a9:	5d                   	pop    rbp
    b8aa:	31 00                	xor    DWORD PTR [rax],eax
    b8ac:	00 00                	add    BYTE PTR [rax],al
    b8ae:	00 00                	add    BYTE PTR [rax],al
    b8b0:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b8b3:	00 00                	add    BYTE PTR [rax],al
    b8b5:	17                   	(bad)
    b8b6:	63 00                	movsxd eax,DWORD PTR [rax]
    b8b8:	00 03                	add    BYTE PTR [rbx],al
    b8ba:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b8bd:	73 00                	jae    b8bf <_end+0x58a7>
    b8bf:	03 01                	add    eax,DWORD PTR [rcx]
    b8c1:	58                   	pop    rax
    b8c2:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b8c5:	00 20                	add    BYTE PTR [rax],ah
    b8c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    b8c8:	31 00                	xor    DWORD PTR [rax],eax
    b8ca:	00 00                	add    BYTE PTR [rax],al
    b8cc:	00 00                	add    BYTE PTR [rax],al
    b8ce:	00 33                	add    BYTE PTR [rbx],dh
    b8d0:	3c 00                	cmp    al,0x0
    b8d2:	00 00                	add    BYTE PTR [rax],al
    b8d4:	00 39                	add    BYTE PTR [rcx],bh
    b8d6:	d6                   	(bad)
    b8d7:	71 00                	jno    b8d9 <_end+0x58c1>
    b8d9:	00 6c 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],ch
    b8dd:	00 00                	add    BYTE PTR [rax],al
    b8df:	00 00                	add    BYTE PTR [rax],al
    b8e1:	00 02                	add    BYTE PTR [rdx],al
    b8e3:	00 14 04             	add    BYTE PTR [rsp+rax*1],dl
    b8e6:	00 00                	add    BYTE PTR [rax],al
    b8e8:	25 09 05 e4 71       	and    eax,0x71e40509
    b8ed:	00 00                	add    BYTE PTR [rax],al
    b8ef:	aa                   	stos   BYTE PTR es:[rdi],al
    b8f0:	27                   	(bad)
    b8f1:	00 00                	add    BYTE PTR [rax],al
    b8f3:	a8 27                	test   al,0x27
    b8f5:	00 00                	add    BYTE PTR [rax],al
    b8f7:	07                   	(bad)
    b8f8:	74 31                	je     b92b <_end+0x5913>
    b8fa:	00 00                	add    BYTE PTR [rax],al
    b8fc:	00 00                	add    BYTE PTR [rax],al
    b8fe:	00 00                	add    BYTE PTR [rax],al
    b900:	9b                   	fwait
    b901:	75 00                	jne    b903 <_end+0x58eb>
    b903:	00 03                	add    BYTE PTR [rbx],al
    b905:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b908:	73 00                	jae    b90a <_end+0x58f2>
    b90a:	00 00                	add    BYTE PTR [rax],al
    b90c:	00 16                	add    BYTE PTR [rsi],dl
    b90e:	74 31                	je     b941 <_end+0x5929>
    b910:	00 00                	add    BYTE PTR [rax],al
    b912:	00 00                	add    BYTE PTR [rax],al
    b914:	00 00                	add    BYTE PTR [rax],al
    b916:	5f                   	pop    rdi
    b917:	00 00                	add    BYTE PTR [rax],al
    b919:	00 00                	add    BYTE PTR [rax],al
    b91b:	00 00                	add    BYTE PTR [rax],al
    b91d:	00 4c 65 00          	add    BYTE PTR [rbp+riz*2+0x0],cl
    b921:	00 17                	add    BYTE PTR [rdi],dl
    b923:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    b924:	15 00 00 26 09       	adc    eax,0x9260000
    b929:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    b92c:	00 09                	add    BYTE PTR [rcx],cl
    b92e:	d6                   	(bad)
    b92f:	71 00                	jno    b931 <_end+0x5919>
    b931:	00 74 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],dh
    b935:	00 00                	add    BYTE PTR [rax],al
    b937:	00 00                	add    BYTE PTR [rax],al
    b939:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    b93c:	74 31                	je     b96f <_end+0x5957>
    b93e:	00 00                	add    BYTE PTR [rax],al
    b940:	00 00                	add    BYTE PTR [rax],al
    b942:	00 00                	add    BYTE PTR [rax],al
    b944:	08 00                	or     BYTE PTR [rax],al
    b946:	00 00                	add    BYTE PTR [rax],al
    b948:	00 00                	add    BYTE PTR [rax],al
    b94a:	00 00                	add    BYTE PTR [rax],al
    b94c:	26 09 c5             	es or  ebp,eax
    b94f:	63 00                	movsxd eax,DWORD PTR [rax]
    b951:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12b3b <_end+0xcb23>
    b957:	b9 27 00 00 b7       	mov    ecx,0xb7000027
    b95c:	27                   	(bad)
    b95d:	00 00                	add    BYTE PTR [rax],al
    b95f:	07                   	(bad)
    b960:	7c 31                	jl     b993 <_end+0x597b>
    b962:	00 00                	add    BYTE PTR [rax],al
    b964:	00 00                	add    BYTE PTR [rax],al
    b966:	00 00                	add    BYTE PTR [rax],al
    b968:	9b                   	fwait
    b969:	75 00                	jne    b96b <_end+0x5953>
    b96b:	00 03                	add    BYTE PTR [rbx],al
    b96d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b970:	7f 00                	jg     b972 <_end+0x595a>
    b972:	00 00                	add    BYTE PTR [rax],al
    b974:	09 d6                	or     esi,edx
    b976:	71 00                	jno    b978 <_end+0x5960>
    b978:	00 7c 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],bh
    b97c:	00 00                	add    BYTE PTR [rax],al
    b97e:	00 00                	add    BYTE PTR [rax],al
    b980:	00 02                	add    BYTE PTR [rdx],al
    b982:	00 7c 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],bh
    b986:	00 00                	add    BYTE PTR [rax],al
    b988:	00 00                	add    BYTE PTR [rax],al
    b98a:	00 08                	add    BYTE PTR [rax],cl
    b98c:	00 00                	add    BYTE PTR [rax],al
    b98e:	00 00                	add    BYTE PTR [rax],al
    b990:	00 00                	add    BYTE PTR [rax],al
    b992:	00 26                	add    BYTE PTR [rsi],ah
    b994:	09 0c 64             	or     DWORD PTR [rsp+riz*2],ecx
    b997:	00 00                	add    BYTE PTR [rax],al
    b999:	05 e4 71 00 00       	add    eax,0x71e4
    b99e:	c8 27 00 00          	enter  0x27,0x0
    b9a2:	c6                   	(bad)
    b9a3:	27                   	(bad)
    b9a4:	00 00                	add    BYTE PTR [rax],al
    b9a6:	07                   	(bad)
    b9a7:	84 31                	test   BYTE PTR [rcx],dh
    b9a9:	00 00                	add    BYTE PTR [rax],al
    b9ab:	00 00                	add    BYTE PTR [rax],al
    b9ad:	00 00                	add    BYTE PTR [rax],al
    b9af:	9b                   	fwait
    b9b0:	75 00                	jne    b9b2 <_end+0x599a>
    b9b2:	00 03                	add    BYTE PTR [rbx],al
    b9b4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b9b7:	7d 00                	jge    b9b9 <_end+0x59a1>
    b9b9:	00 00                	add    BYTE PTR [rax],al
    b9bb:	09 d6                	or     esi,edx
    b9bd:	71 00                	jno    b9bf <_end+0x59a7>
    b9bf:	00 84 31 00 00 00 00 	add    BYTE PTR [rcx+rsi*1+0x0],al
    b9c6:	00 00                	add    BYTE PTR [rax],al
    b9c8:	02 00                	add    al,BYTE PTR [rax]
    b9ca:	84 31                	test   BYTE PTR [rcx],dh
    b9cc:	00 00                	add    BYTE PTR [rax],al
    b9ce:	00 00                	add    BYTE PTR [rax],al
    b9d0:	00 00                	add    BYTE PTR [rax],al
    b9d2:	0c 00                	or     al,0x0
    b9d4:	00 00                	add    BYTE PTR [rax],al
    b9d6:	00 00                	add    BYTE PTR [rax],al
    b9d8:	00 00                	add    BYTE PTR [rax],al
    b9da:	26 09 5a 64          	es or  DWORD PTR [rdx+0x64],ebx
    b9de:	00 00                	add    BYTE PTR [rax],al
    b9e0:	05 e4 71 00 00       	add    eax,0x71e4
    b9e5:	d7                   	xlat   BYTE PTR ds:[rbx]
    b9e6:	27                   	(bad)
    b9e7:	00 00                	add    BYTE PTR [rax],al
    b9e9:	d5 27 00 00          	{rex2 0x27} add BYTE PTR [r8],r8b
    b9ed:	07                   	(bad)
    b9ee:	90                   	nop
    b9ef:	31 00                	xor    DWORD PTR [rax],eax
    b9f1:	00 00                	add    BYTE PTR [rax],al
    b9f3:	00 00                	add    BYTE PTR [rax],al
    b9f5:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b9fb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b9fe:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ba09:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    ba0c:	00 00                	add    BYTE PTR [rax],al
    ba0e:	95                   	xchg   ebp,eax
    ba0f:	31 00                	xor    DWORD PTR [rax],eax
    ba11:	00 00                	add    BYTE PTR [rax],al
    ba13:	00 00                	add    BYTE PTR [rax],al
    ba15:	00 00                	add    BYTE PTR [rax],al
    ba17:	00 95 31 00 00 00    	add    BYTE PTR [rbp+0x31],dl
    ba1d:	00 00                	add    BYTE PTR [rax],al
    ba1f:	00 36                	add    BYTE PTR [rsi],dh
    ba21:	00 00                	add    BYTE PTR [rax],al
    ba23:	00 00                	add    BYTE PTR [rax],al
    ba25:	00 00                	add    BYTE PTR [rax],al
    ba27:	00 26                	add    BYTE PTR [rsi],ah
    ba29:	09 07                	or     DWORD PTR [rdi],eax
    ba2b:	65 00 00             	add    BYTE PTR gs:[rax],al
    ba2e:	05 91 52 00 00       	add    eax,0x5291
    ba33:	e6 27                	out    0x27,al
    ba35:	00 00                	add    BYTE PTR [rax],al
    ba37:	e4 27                	in     al,0x27
    ba39:	00 00                	add    BYTE PTR [rax],al
    ba3b:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    ba41:	79 52                	jns    ba95 <_end+0x5a7d>
    ba43:	00 00                	add    BYTE PTR [rax],al
    ba45:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    ba48:	00 00                	add    BYTE PTR [rax],al
    ba4a:	15 9d 52 00 00       	adc    eax,0x529d
    ba4f:	f2 27                	repnz (bad)
    ba51:	00 00                	add    BYTE PTR [rax],al
    ba53:	ee                   	out    dx,al
    ba54:	27                   	(bad)
    ba55:	00 00                	add    BYTE PTR [rax],al
    ba57:	0a a8 31 00 00 00    	or     ch,BYTE PTR [rax+0x31]
    ba5d:	00 00                	add    BYTE PTR [rax],al
    ba5f:	00 e5                	add    ch,ah
    ba61:	3c 00                	cmp    al,0x0
    ba63:	00 d4                	add    ah,dl
    ba65:	64 00 00             	add    BYTE PTR fs:[rax],al
    ba68:	03 01                	add    eax,DWORD PTR [rcx]
    ba6a:	55                   	push   rbp
    ba6b:	09 03                	or     DWORD PTR [rbx],eax
    ba6d:	e0 45                	loopne bab4 <_end+0x5a9c>
    ba6f:	00 00                	add    BYTE PTR [rax],al
    ba71:	00 00                	add    BYTE PTR [rax],al
    ba73:	00 00                	add    BYTE PTR [rax],al
    ba75:	03 01                	add    eax,DWORD PTR [rcx]
    ba77:	54                   	push   rsp
    ba78:	09 03                	or     DWORD PTR [rbx],eax
    ba7a:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ba7e:	00 00                	add    BYTE PTR [rax],al
    ba80:	00 00                	add    BYTE PTR [rax],al
    ba82:	00 0a                	add    BYTE PTR [rdx],cl
    ba84:	c3                   	ret
    ba85:	31 00                	xor    DWORD PTR [rax],eax
    ba87:	00 00                	add    BYTE PTR [rax],al
    ba89:	00 00                	add    BYTE PTR [rax],al
    ba8b:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    ba8e:	00 00                	add    BYTE PTR [rax],al
    ba90:	f2 64 00 00          	repnz add BYTE PTR fs:[rax],al
    ba94:	03 01                	add    eax,DWORD PTR [rcx]
    ba96:	55                   	push   rbp
    ba97:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    ba9a:	03 01                	add    eax,DWORD PTR [rcx]
    ba9c:	58                   	pop    rax
    ba9d:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    baa0:	00 07                	add    BYTE PTR [rdi],al
    baa2:	cb                   	retf
    baa3:	31 00                	xor    DWORD PTR [rax],eax
    baa5:	00 00                	add    BYTE PTR [rax],al
    baa7:	00 00                	add    BYTE PTR [rax],al
    baa9:	00 33                	add    BYTE PTR [rbx],dh
    baab:	3c 00                	cmp    al,0x0
    baad:	00 03                	add    BYTE PTR [rbx],al
    baaf:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bab2:	7d 00                	jge    bab4 <_end+0x5a9c>
    bab4:	00 00                	add    BYTE PTR [rax],al
    bab6:	19 d6                	sbb    esi,edx
    bab8:	71 00                	jno    baba <_end+0x5aa2>
    baba:	00 cb                	add    bl,cl
    babc:	31 00                	xor    DWORD PTR [rax],eax
    babe:	00 00                	add    BYTE PTR [rax],al
    bac0:	00 00                	add    BYTE PTR [rax],al
    bac2:	00 02                	add    BYTE PTR [rdx],al
    bac4:	00 cb                	add    bl,cl
    bac6:	31 00                	xor    DWORD PTR [rax],eax
    bac8:	00 00                	add    BYTE PTR [rax],al
    baca:	00 00                	add    BYTE PTR [rax],al
    bacc:	00 08                	add    BYTE PTR [rax],cl
    bace:	00 00                	add    BYTE PTR [rax],al
    bad0:	00 00                	add    BYTE PTR [rax],al
    bad2:	00 00                	add    BYTE PTR [rax],al
    bad4:	00 01                	add    BYTE PTR [rcx],al
    bad6:	26 09 05 e4 71 00 00 	es or  DWORD PTR [rip+0x71e4],eax        # 12cc1 <_end+0xcca9>
    badd:	03 28                	add    ebp,DWORD PTR [rax]
    badf:	00 00                	add    BYTE PTR [rax],al
    bae1:	01 28                	add    DWORD PTR [rax],ebp
    bae3:	00 00                	add    BYTE PTR [rax],al
    bae5:	07                   	(bad)
    bae6:	d3 31                	shl    DWORD PTR [rcx],cl
    bae8:	00 00                	add    BYTE PTR [rax],al
    baea:	00 00                	add    BYTE PTR [rax],al
    baec:	00 00                	add    BYTE PTR [rax],al
    baee:	9b                   	fwait
    baef:	75 00                	jne    baf1 <_end+0x5ad9>
    baf1:	00 03                	add    BYTE PTR [rbx],al
    baf3:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    baf6:	73 00                	jae    baf8 <_end+0x5ae0>
    baf8:	00 00                	add    BYTE PTR [rax],al
    bafa:	00 16                	add    BYTE PTR [rsi],dl
    bafc:	d3 31                	shl    DWORD PTR [rcx],cl
    bafe:	00 00                	add    BYTE PTR [rax],al
    bb00:	00 00                	add    BYTE PTR [rax],al
    bb02:	00 00                	add    BYTE PTR [rax],al
    bb04:	5e                   	pop    rsi
    bb05:	00 00                	add    BYTE PTR [rax],al
    bb07:	00 00                	add    BYTE PTR [rax],al
    bb09:	00 00                	add    BYTE PTR [rax],al
    bb0b:	00 41 67             	add    BYTE PTR [rcx+0x67],al
    bb0e:	00 00                	add    BYTE PTR [rax],al
    bb10:	17                   	(bad)
    bb11:	e7 17                	out    0x17,eax
    bb13:	00 00                	add    BYTE PTR [rax],al
    bb15:	27                   	(bad)
    bb16:	09 db                	or     ebx,ebx
    bb18:	41 00 00             	add    BYTE PTR [r8],al
    bb1b:	09 d6                	or     esi,edx
    bb1d:	71 00                	jno    bb1f <_end+0x5b07>
    bb1f:	00 d3                	add    bl,dl
    bb21:	31 00                	xor    DWORD PTR [rax],eax
    bb23:	00 00                	add    BYTE PTR [rax],al
    bb25:	00 00                	add    BYTE PTR [rax],al
    bb27:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bb2a:	d3 31                	shl    DWORD PTR [rcx],cl
    bb2c:	00 00                	add    BYTE PTR [rax],al
    bb2e:	00 00                	add    BYTE PTR [rax],al
    bb30:	00 00                	add    BYTE PTR [rax],al
    bb32:	08 00                	or     BYTE PTR [rax],al
    bb34:	00 00                	add    BYTE PTR [rax],al
    bb36:	00 00                	add    BYTE PTR [rax],al
    bb38:	00 00                	add    BYTE PTR [rax],al
    bb3a:	27                   	(bad)
    bb3b:	09 b3 65 00 00 05    	or     DWORD PTR [rbx+0x5000065],esi
    bb41:	e4 71                	in     al,0x71
    bb43:	00 00                	add    BYTE PTR [rax],al
    bb45:	12 28                	adc    ch,BYTE PTR [rax]
    bb47:	00 00                	add    BYTE PTR [rax],al
    bb49:	10 28                	adc    BYTE PTR [rax],ch
    bb4b:	00 00                	add    BYTE PTR [rax],al
    bb4d:	07                   	(bad)
    bb4e:	db 31                	(bad)  [rcx]
    bb50:	00 00                	add    BYTE PTR [rax],al
    bb52:	00 00                	add    BYTE PTR [rax],al
    bb54:	00 00                	add    BYTE PTR [rax],al
    bb56:	9b                   	fwait
    bb57:	75 00                	jne    bb59 <_end+0x5b41>
    bb59:	00 03                	add    BYTE PTR [rbx],al
    bb5b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bb5e:	7f 00                	jg     bb60 <_end+0x5b48>
    bb60:	00 00                	add    BYTE PTR [rax],al
    bb62:	09 d6                	or     esi,edx
    bb64:	71 00                	jno    bb66 <_end+0x5b4e>
    bb66:	00 db                	add    bl,bl
    bb68:	31 00                	xor    DWORD PTR [rax],eax
    bb6a:	00 00                	add    BYTE PTR [rax],al
    bb6c:	00 00                	add    BYTE PTR [rax],al
    bb6e:	00 02                	add    BYTE PTR [rdx],al
    bb70:	00 db                	add    bl,bl
    bb72:	31 00                	xor    DWORD PTR [rax],eax
    bb74:	00 00                	add    BYTE PTR [rax],al
    bb76:	00 00                	add    BYTE PTR [rax],al
    bb78:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bb7b:	00 00                	add    BYTE PTR [rax],al
    bb7d:	00 00                	add    BYTE PTR [rax],al
    bb7f:	00 00                	add    BYTE PTR [rax],al
    bb81:	27                   	(bad)
    bb82:	09 01                	or     DWORD PTR [rcx],eax
    bb84:	66 00 00             	data16 add BYTE PTR [rax],al
    bb87:	05 e4 71 00 00       	add    eax,0x71e4
    bb8c:	21 28                	and    DWORD PTR [rax],ebp
    bb8e:	00 00                	add    BYTE PTR [rax],al
    bb90:	1f                   	(bad)
    bb91:	28 00                	sub    BYTE PTR [rax],al
    bb93:	00 07                	add    BYTE PTR [rdi],al
    bb95:	e7 31                	out    0x31,eax
    bb97:	00 00                	add    BYTE PTR [rax],al
    bb99:	00 00                	add    BYTE PTR [rax],al
    bb9b:	00 00                	add    BYTE PTR [rax],al
    bb9d:	9b                   	fwait
    bb9e:	75 00                	jne    bba0 <_end+0x5b88>
    bba0:	00 03                	add    BYTE PTR [rbx],al
    bba2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bba5:	03 d4                	add    edx,esp
    bba7:	42 00 00             	rex.X add BYTE PTR [rax],al
    bbaa:	00 00                	add    BYTE PTR [rax],al
    bbac:	00 00                	add    BYTE PTR [rax],al
    bbae:	00 00                	add    BYTE PTR [rax],al
    bbb0:	09 d6                	or     esi,edx
    bbb2:	71 00                	jno    bbb4 <_end+0x5b9c>
    bbb4:	00 e7                	add    bh,ah
    bbb6:	31 00                	xor    DWORD PTR [rax],eax
    bbb8:	00 00                	add    BYTE PTR [rax],al
    bbba:	00 00                	add    BYTE PTR [rax],al
    bbbc:	00 02                	add    BYTE PTR [rdx],al
    bbbe:	00 e7                	add    bh,ah
    bbc0:	31 00                	xor    DWORD PTR [rax],eax
    bbc2:	00 00                	add    BYTE PTR [rax],al
    bbc4:	00 00                	add    BYTE PTR [rax],al
    bbc6:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bbc9:	00 00                	add    BYTE PTR [rax],al
    bbcb:	00 00                	add    BYTE PTR [rax],al
    bbcd:	00 00                	add    BYTE PTR [rax],al
    bbcf:	27                   	(bad)
    bbd0:	09 4f 66             	or     DWORD PTR [rdi+0x66],ecx
    bbd3:	00 00                	add    BYTE PTR [rax],al
    bbd5:	05 e4 71 00 00       	add    eax,0x71e4
    bbda:	30 28                	xor    BYTE PTR [rax],ch
    bbdc:	00 00                	add    BYTE PTR [rax],al
    bbde:	2e 28 00             	cs sub BYTE PTR [rax],al
    bbe1:	00 07                	add    BYTE PTR [rdi],al
    bbe3:	f3 31 00             	repz xor DWORD PTR [rax],eax
    bbe6:	00 00                	add    BYTE PTR [rax],al
    bbe8:	00 00                	add    BYTE PTR [rax],al
    bbea:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bbf0:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bbf3:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bbfe:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bc01:	00 00                	add    BYTE PTR [rax],al
    bc03:	f3 31 00             	repz xor DWORD PTR [rax],eax
    bc06:	00 00                	add    BYTE PTR [rax],al
    bc08:	00 00                	add    BYTE PTR [rax],al
    bc0a:	00 03                	add    BYTE PTR [rbx],al
    bc0c:	00 f3                	add    bl,dh
    bc0e:	31 00                	xor    DWORD PTR [rax],eax
    bc10:	00 00                	add    BYTE PTR [rax],al
    bc12:	00 00                	add    BYTE PTR [rax],al
    bc14:	00 36                	add    BYTE PTR [rsi],dh
    bc16:	00 00                	add    BYTE PTR [rax],al
    bc18:	00 00                	add    BYTE PTR [rax],al
    bc1a:	00 00                	add    BYTE PTR [rax],al
    bc1c:	00 27                	add    BYTE PTR [rdi],ah
    bc1e:	09 fc                	or     esp,edi
    bc20:	66 00 00             	data16 add BYTE PTR [rax],al
    bc23:	05 91 52 00 00       	add    eax,0x5291
    bc28:	3f                   	(bad)
    bc29:	28 00                	sub    BYTE PTR [rax],al
    bc2b:	00 3d 28 00 00 0b    	add    BYTE PTR [rip+0xb000028],bh        # b00bc59 <_end+0xb005c41>
    bc31:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    bc34:	00 0b                	add    BYTE PTR [rbx],cl
    bc36:	79 52                	jns    bc8a <_end+0x5c72>
    bc38:	00 00                	add    BYTE PTR [rax],al
    bc3a:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bc3d:	00 00                	add    BYTE PTR [rax],al
    bc3f:	15 9d 52 00 00       	adc    eax,0x529d
    bc44:	4b 28 00             	rex.WXB sub BYTE PTR [r8],al
    bc47:	00 47 28             	add    BYTE PTR [rdi+0x28],al
    bc4a:	00 00                	add    BYTE PTR [rax],al
    bc4c:	0a 06                	or     al,BYTE PTR [rsi]
    bc4e:	32 00                	xor    al,BYTE PTR [rax]
    bc50:	00 00                	add    BYTE PTR [rax],al
    bc52:	00 00                	add    BYTE PTR [rax],al
    bc54:	00 e5                	add    ch,ah
    bc56:	3c 00                	cmp    al,0x0
    bc58:	00 c9                	add    cl,cl
    bc5a:	66 00 00             	data16 add BYTE PTR [rax],al
    bc5d:	03 01                	add    eax,DWORD PTR [rcx]
    bc5f:	55                   	push   rbp
    bc60:	09 03                	or     DWORD PTR [rbx],eax
    bc62:	60                   	(bad)
    bc63:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bc66:	00 00                	add    BYTE PTR [rax],al
    bc68:	00 00                	add    BYTE PTR [rax],al
    bc6a:	03 01                	add    eax,DWORD PTR [rcx]
    bc6c:	54                   	push   rsp
    bc6d:	09 03                	or     DWORD PTR [rbx],eax
    bc6f:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bc73:	00 00                	add    BYTE PTR [rax],al
    bc75:	00 00                	add    BYTE PTR [rax],al
    bc77:	00 0a                	add    BYTE PTR [rdx],cl
    bc79:	21 32                	and    DWORD PTR [rdx],esi
    bc7b:	00 00                	add    BYTE PTR [rax],al
    bc7d:	00 00                	add    BYTE PTR [rax],al
    bc7f:	00 00                	add    BYTE PTR [rax],al
    bc81:	4d                   	rex.WRB
    bc82:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bc85:	e7 66                	out    0x66,eax
    bc87:	00 00                	add    BYTE PTR [rax],al
    bc89:	03 01                	add    eax,DWORD PTR [rcx]
    bc8b:	55                   	push   rbp
    bc8c:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bc8f:	03 01                	add    eax,DWORD PTR [rcx]
    bc91:	58                   	pop    rax
    bc92:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bc95:	00 07                	add    BYTE PTR [rdi],al
    bc97:	29 32                	sub    DWORD PTR [rdx],esi
    bc99:	00 00                	add    BYTE PTR [rax],al
    bc9b:	00 00                	add    BYTE PTR [rax],al
    bc9d:	00 00                	add    BYTE PTR [rax],al
    bc9f:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    bca2:	00 03                	add    BYTE PTR [rbx],al
    bca4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bca7:	7d 00                	jge    bca9 <_end+0x5c91>
    bca9:	00 00                	add    BYTE PTR [rax],al
    bcab:	19 d6                	sbb    esi,edx
    bcad:	71 00                	jno    bcaf <_end+0x5c97>
    bcaf:	00 29                	add    BYTE PTR [rcx],ch
    bcb1:	32 00                	xor    al,BYTE PTR [rax]
    bcb3:	00 00                	add    BYTE PTR [rax],al
    bcb5:	00 00                	add    BYTE PTR [rax],al
    bcb7:	00 02                	add    BYTE PTR [rdx],al
    bcb9:	00 29                	add    BYTE PTR [rcx],ch
    bcbb:	32 00                	xor    al,BYTE PTR [rax]
    bcbd:	00 00                	add    BYTE PTR [rax],al
    bcbf:	00 00                	add    BYTE PTR [rax],al
    bcc1:	00 08                	add    BYTE PTR [rax],cl
    bcc3:	00 00                	add    BYTE PTR [rax],al
    bcc5:	00 00                	add    BYTE PTR [rax],al
    bcc7:	00 00                	add    BYTE PTR [rax],al
    bcc9:	00 01                	add    BYTE PTR [rcx],al
    bccb:	27                   	(bad)
    bccc:	09 05 e4 71 00 00    	or     DWORD PTR [rip+0x71e4],eax        # 12eb6 <_end+0xce9e>
    bcd2:	5c                   	pop    rsp
    bcd3:	28 00                	sub    BYTE PTR [rax],al
    bcd5:	00 5a 28             	add    BYTE PTR [rdx+0x28],bl
    bcd8:	00 00                	add    BYTE PTR [rax],al
    bcda:	07                   	(bad)
    bcdb:	31 32                	xor    DWORD PTR [rdx],esi
    bcdd:	00 00                	add    BYTE PTR [rax],al
    bcdf:	00 00                	add    BYTE PTR [rax],al
    bce1:	00 00                	add    BYTE PTR [rax],al
    bce3:	9b                   	fwait
    bce4:	75 00                	jne    bce6 <_end+0x5cce>
    bce6:	00 03                	add    BYTE PTR [rbx],al
    bce8:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bceb:	73 00                	jae    bced <_end+0x5cd5>
    bced:	00 00                	add    BYTE PTR [rax],al
    bcef:	00 16                	add    BYTE PTR [rsi],dl
    bcf1:	31 32                	xor    DWORD PTR [rdx],esi
    bcf3:	00 00                	add    BYTE PTR [rax],al
    bcf5:	00 00                	add    BYTE PTR [rax],al
    bcf7:	00 00                	add    BYTE PTR [rax],al
    bcf9:	5e                   	pop    rsi
    bcfa:	00 00                	add    BYTE PTR [rax],al
    bcfc:	00 00                	add    BYTE PTR [rax],al
    bcfe:	00 00                	add    BYTE PTR [rax],al
    bd00:	00 36                	add    BYTE PTR [rsi],dh
    bd02:	69 00 00 17 ce 1d    	imul   eax,DWORD PTR [rax],0x1dce1700
    bd08:	00 00                	add    BYTE PTR [rax],al
    bd0a:	28 09                	sub    BYTE PTR [rcx],cl
    bd0c:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    bd0f:	00 09                	add    BYTE PTR [rcx],cl
    bd11:	d6                   	(bad)
    bd12:	71 00                	jno    bd14 <_end+0x5cfc>
    bd14:	00 31                	add    BYTE PTR [rcx],dh
    bd16:	32 00                	xor    al,BYTE PTR [rax]
    bd18:	00 00                	add    BYTE PTR [rax],al
    bd1a:	00 00                	add    BYTE PTR [rax],al
    bd1c:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bd1f:	31 32                	xor    DWORD PTR [rdx],esi
    bd21:	00 00                	add    BYTE PTR [rax],al
    bd23:	00 00                	add    BYTE PTR [rax],al
    bd25:	00 00                	add    BYTE PTR [rax],al
    bd27:	08 00                	or     BYTE PTR [rax],al
    bd29:	00 00                	add    BYTE PTR [rax],al
    bd2b:	00 00                	add    BYTE PTR [rax],al
    bd2d:	00 00                	add    BYTE PTR [rax],al
    bd2f:	28 09                	sub    BYTE PTR [rcx],cl
    bd31:	a8 67                	test   al,0x67
    bd33:	00 00                	add    BYTE PTR [rax],al
    bd35:	05 e4 71 00 00       	add    eax,0x71e4
    bd3a:	6b 28 00             	imul   ebp,DWORD PTR [rax],0x0
    bd3d:	00 69 28             	add    BYTE PTR [rcx+0x28],ch
    bd40:	00 00                	add    BYTE PTR [rax],al
    bd42:	07                   	(bad)
    bd43:	39 32                	cmp    DWORD PTR [rdx],esi
    bd45:	00 00                	add    BYTE PTR [rax],al
    bd47:	00 00                	add    BYTE PTR [rax],al
    bd49:	00 00                	add    BYTE PTR [rax],al
    bd4b:	9b                   	fwait
    bd4c:	75 00                	jne    bd4e <_end+0x5d36>
    bd4e:	00 03                	add    BYTE PTR [rbx],al
    bd50:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bd53:	7f 00                	jg     bd55 <_end+0x5d3d>
    bd55:	00 00                	add    BYTE PTR [rax],al
    bd57:	09 d6                	or     esi,edx
    bd59:	71 00                	jno    bd5b <_end+0x5d43>
    bd5b:	00 39                	add    BYTE PTR [rcx],bh
    bd5d:	32 00                	xor    al,BYTE PTR [rax]
    bd5f:	00 00                	add    BYTE PTR [rax],al
    bd61:	00 00                	add    BYTE PTR [rax],al
    bd63:	00 02                	add    BYTE PTR [rdx],al
    bd65:	00 39                	add    BYTE PTR [rcx],bh
    bd67:	32 00                	xor    al,BYTE PTR [rax]
    bd69:	00 00                	add    BYTE PTR [rax],al
    bd6b:	00 00                	add    BYTE PTR [rax],al
    bd6d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd70:	00 00                	add    BYTE PTR [rax],al
    bd72:	00 00                	add    BYTE PTR [rax],al
    bd74:	00 00                	add    BYTE PTR [rax],al
    bd76:	28 09                	sub    BYTE PTR [rcx],cl
    bd78:	f6 67 00             	mul    BYTE PTR [rdi+0x0]
    bd7b:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12f65 <_end+0xcf4d>
    bd81:	7a 28                	jp     bdab <_end+0x5d93>
    bd83:	00 00                	add    BYTE PTR [rax],al
    bd85:	78 28                	js     bdaf <_end+0x5d97>
    bd87:	00 00                	add    BYTE PTR [rax],al
    bd89:	07                   	(bad)
    bd8a:	45 32 00             	xor    r8b,BYTE PTR [r8]
    bd8d:	00 00                	add    BYTE PTR [rax],al
    bd8f:	00 00                	add    BYTE PTR [rax],al
    bd91:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bd97:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bd9a:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    bda0:	00 00                	add    BYTE PTR [rax],al
    bda2:	00 00                	add    BYTE PTR [rax],al
    bda4:	00 09                	add    BYTE PTR [rcx],cl
    bda6:	d6                   	(bad)
    bda7:	71 00                	jno    bda9 <_end+0x5d91>
    bda9:	00 45 32             	add    BYTE PTR [rbp+0x32],al
    bdac:	00 00                	add    BYTE PTR [rax],al
    bdae:	00 00                	add    BYTE PTR [rax],al
    bdb0:	00 00                	add    BYTE PTR [rax],al
    bdb2:	02 00                	add    al,BYTE PTR [rax]
    bdb4:	45 32 00             	xor    r8b,BYTE PTR [r8]
    bdb7:	00 00                	add    BYTE PTR [rax],al
    bdb9:	00 00                	add    BYTE PTR [rax],al
    bdbb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bdbe:	00 00                	add    BYTE PTR [rax],al
    bdc0:	00 00                	add    BYTE PTR [rax],al
    bdc2:	00 00                	add    BYTE PTR [rax],al
    bdc4:	28 09                	sub    BYTE PTR [rcx],cl
    bdc6:	44 68 00 00 05 e4    	rex.R push 0xffffffffe4050000
    bdcc:	71 00                	jno    bdce <_end+0x5db6>
    bdce:	00 89 28 00 00 87    	add    BYTE PTR [rcx-0x78ffffd8],cl
    bdd4:	28 00                	sub    BYTE PTR [rax],al
    bdd6:	00 07                	add    BYTE PTR [rdi],al
    bdd8:	51                   	push   rcx
    bdd9:	32 00                	xor    al,BYTE PTR [rax]
    bddb:	00 00                	add    BYTE PTR [rax],al
    bddd:	00 00                	add    BYTE PTR [rax],al
    bddf:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bde5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bde8:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bdf3:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bdf6:	00 00                	add    BYTE PTR [rax],al
    bdf8:	51                   	push   rcx
    bdf9:	32 00                	xor    al,BYTE PTR [rax]
    bdfb:	00 00                	add    BYTE PTR [rax],al
    bdfd:	00 00                	add    BYTE PTR [rax],al
    bdff:	00 03                	add    BYTE PTR [rbx],al
    be01:	00 51 32             	add    BYTE PTR [rcx+0x32],dl
    be04:	00 00                	add    BYTE PTR [rax],al
    be06:	00 00                	add    BYTE PTR [rax],al
    be08:	00 00                	add    BYTE PTR [rax],al
    be0a:	36 00 00             	ss add BYTE PTR [rax],al
    be0d:	00 00                	add    BYTE PTR [rax],al
    be0f:	00 00                	add    BYTE PTR [rax],al
    be11:	00 28                	add    BYTE PTR [rax],ch
    be13:	09 f1                	or     ecx,esi
    be15:	68 00 00 05 91       	push   0xffffffff91050000
    be1a:	52                   	push   rdx
    be1b:	00 00                	add    BYTE PTR [rax],al
    be1d:	98                   	cwde
    be1e:	28 00                	sub    BYTE PTR [rax],al
    be20:	00 96 28 00 00 0b    	add    BYTE PTR [rsi+0xb000028],dl
    be26:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    be29:	00 0b                	add    BYTE PTR [rbx],cl
    be2b:	79 52                	jns    be7f <_end+0x5e67>
    be2d:	00 00                	add    BYTE PTR [rax],al
    be2f:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    be32:	00 00                	add    BYTE PTR [rax],al
    be34:	15 9d 52 00 00       	adc    eax,0x529d
    be39:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    be3a:	28 00                	sub    BYTE PTR [rax],al
    be3c:	00 a0 28 00 00 0a    	add    BYTE PTR [rax+0xa000028],ah
    be42:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    be45:	00 00                	add    BYTE PTR [rax],al
    be47:	00 00                	add    BYTE PTR [rax],al
    be49:	00 e5                	add    ch,ah
    be4b:	3c 00                	cmp    al,0x0
    be4d:	00 be 68 00 00 03    	add    BYTE PTR [rsi+0x3000068],bh
    be53:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    be56:	03 10                	add    edx,DWORD PTR [rax]
    be58:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    be5b:	00 00                	add    BYTE PTR [rax],al
    be5d:	00 00                	add    BYTE PTR [rax],al
    be5f:	03 01                	add    eax,DWORD PTR [rcx]
    be61:	54                   	push   rsp
    be62:	09 03                	or     DWORD PTR [rbx],eax
    be64:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    be68:	00 00                	add    BYTE PTR [rax],al
    be6a:	00 00                	add    BYTE PTR [rax],al
    be6c:	00 0a                	add    BYTE PTR [rdx],cl
    be6e:	7f 32                	jg     bea2 <_end+0x5e8a>
    be70:	00 00                	add    BYTE PTR [rax],al
    be72:	00 00                	add    BYTE PTR [rax],al
    be74:	00 00                	add    BYTE PTR [rax],al
    be76:	4d                   	rex.WRB
    be77:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    be7a:	dc 68 00             	fsubr  QWORD PTR [rax+0x0]
    be7d:	00 03                	add    BYTE PTR [rbx],al
    be7f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be82:	7d 00                	jge    be84 <_end+0x5e6c>
    be84:	03 01                	add    eax,DWORD PTR [rcx]
    be86:	58                   	pop    rax
    be87:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    be8a:	00 07                	add    BYTE PTR [rdi],al
    be8c:	87 32                	xchg   DWORD PTR [rdx],esi
    be8e:	00 00                	add    BYTE PTR [rax],al
    be90:	00 00                	add    BYTE PTR [rax],al
    be92:	00 00                	add    BYTE PTR [rax],al
    be94:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    be97:	00 03                	add    BYTE PTR [rbx],al
    be99:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be9c:	7d 00                	jge    be9e <_end+0x5e86>
    be9e:	00 00                	add    BYTE PTR [rax],al
    bea0:	19 d6                	sbb    esi,edx
    bea2:	71 00                	jno    bea4 <_end+0x5e8c>
    bea4:	00 87 32 00 00 00    	add    BYTE PTR [rdi+0x32],al
    beaa:	00 00                	add    BYTE PTR [rax],al
    beac:	00 02                	add    BYTE PTR [rdx],al
    beae:	00 87 32 00 00 00    	add    BYTE PTR [rdi+0x32],al
    beb4:	00 00                	add    BYTE PTR [rax],al
    beb6:	00 08                	add    BYTE PTR [rax],cl
    beb8:	00 00                	add    BYTE PTR [rax],al
    beba:	00 00                	add    BYTE PTR [rax],al
    bebc:	00 00                	add    BYTE PTR [rax],al
    bebe:	00 01                	add    BYTE PTR [rcx],al
    bec0:	28 09                	sub    BYTE PTR [rcx],cl
    bec2:	05 e4 71 00 00       	add    eax,0x71e4
    bec7:	b5 28                	mov    ch,0x28
    bec9:	00 00                	add    BYTE PTR [rax],al
    becb:	b3 28                	mov    bl,0x28
    becd:	00 00                	add    BYTE PTR [rax],al
    becf:	07                   	(bad)
    bed0:	8f                   	(bad)
    bed1:	32 00                	xor    al,BYTE PTR [rax]
    bed3:	00 00                	add    BYTE PTR [rax],al
    bed5:	00 00                	add    BYTE PTR [rax],al
    bed7:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bedd:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bee0:	73 00                	jae    bee2 <_end+0x5eca>
    bee2:	00 00                	add    BYTE PTR [rax],al
    bee4:	00 16                	add    BYTE PTR [rsi],dl
    bee6:	8f                   	(bad)
    bee7:	32 00                	xor    al,BYTE PTR [rax]
    bee9:	00 00                	add    BYTE PTR [rax],al
    beeb:	00 00                	add    BYTE PTR [rax],al
    beed:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    bef0:	00 00                	add    BYTE PTR [rax],al
    bef2:	00 00                	add    BYTE PTR [rax],al
    bef4:	00 00                	add    BYTE PTR [rax],al
    bef6:	2b 6b 00             	sub    ebp,DWORD PTR [rbx+0x0]
    bef9:	00 17                	add    BYTE PTR [rdi],dl
    befb:	4d 0d 00 00 29 09    	rex.WRB or rax,0x9290000
    bf01:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    bf04:	00 09                	add    BYTE PTR [rcx],cl
    bf06:	d6                   	(bad)
    bf07:	71 00                	jno    bf09 <_end+0x5ef1>
    bf09:	00 8f 32 00 00 00    	add    BYTE PTR [rdi+0x32],cl
    bf0f:	00 00                	add    BYTE PTR [rax],al
    bf11:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bf14:	8f                   	(bad)
    bf15:	32 00                	xor    al,BYTE PTR [rax]
    bf17:	00 00                	add    BYTE PTR [rax],al
    bf19:	00 00                	add    BYTE PTR [rax],al
    bf1b:	00 08                	add    BYTE PTR [rax],cl
    bf1d:	00 00                	add    BYTE PTR [rax],al
    bf1f:	00 00                	add    BYTE PTR [rax],al
    bf21:	00 00                	add    BYTE PTR [rax],al
    bf23:	00 29                	add    BYTE PTR [rcx],ch
    bf25:	09 9d 69 00 00 05    	or     DWORD PTR [rbp+0x5000069],ebx
    bf2b:	e4 71                	in     al,0x71
    bf2d:	00 00                	add    BYTE PTR [rax],al
    bf2f:	c4                   	(bad)
    bf30:	28 00                	sub    BYTE PTR [rax],al
    bf32:	00 c2                	add    dl,al
    bf34:	28 00                	sub    BYTE PTR [rax],al
    bf36:	00 07                	add    BYTE PTR [rdi],al
    bf38:	97                   	xchg   edi,eax
    bf39:	32 00                	xor    al,BYTE PTR [rax]
    bf3b:	00 00                	add    BYTE PTR [rax],al
    bf3d:	00 00                	add    BYTE PTR [rax],al
    bf3f:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bf45:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bf48:	7f 00                	jg     bf4a <_end+0x5f32>
    bf4a:	00 00                	add    BYTE PTR [rax],al
    bf4c:	09 d6                	or     esi,edx
    bf4e:	71 00                	jno    bf50 <_end+0x5f38>
    bf50:	00 97 32 00 00 00    	add    BYTE PTR [rdi+0x32],dl
    bf56:	00 00                	add    BYTE PTR [rax],al
    bf58:	00 02                	add    BYTE PTR [rdx],al
    bf5a:	00 97 32 00 00 00    	add    BYTE PTR [rdi+0x32],dl
    bf60:	00 00                	add    BYTE PTR [rax],al
    bf62:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bf65:	00 00                	add    BYTE PTR [rax],al
    bf67:	00 00                	add    BYTE PTR [rax],al
    bf69:	00 00                	add    BYTE PTR [rax],al
    bf6b:	29 09                	sub    DWORD PTR [rcx],ecx
    bf6d:	eb 69                	jmp    bfd8 <_end+0x5fc0>
    bf6f:	00 00                	add    BYTE PTR [rax],al
    bf71:	05 e4 71 00 00       	add    eax,0x71e4
    bf76:	d3 28                	shr    DWORD PTR [rax],cl
    bf78:	00 00                	add    BYTE PTR [rax],al
    bf7a:	d1 28                	shr    DWORD PTR [rax],1
    bf7c:	00 00                	add    BYTE PTR [rax],al
    bf7e:	07                   	(bad)
    bf7f:	a3 32 00 00 00 00 00 	movabs ds:0x9b00000000000032,eax
    bf86:	00 9b 
    bf88:	75 00                	jne    bf8a <_end+0x5f72>
    bf8a:	00 03                	add    BYTE PTR [rbx],al
    bf8c:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf8f:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    bf95:	00 00                	add    BYTE PTR [rax],al
    bf97:	00 00                	add    BYTE PTR [rax],al
    bf99:	00 09                	add    BYTE PTR [rcx],cl
    bf9b:	d6                   	(bad)
    bf9c:	71 00                	jno    bf9e <_end+0x5f86>
    bf9e:	00 a3 32 00 00 00    	add    BYTE PTR [rbx+0x32],ah
    bfa4:	00 00                	add    BYTE PTR [rax],al
    bfa6:	00 02                	add    BYTE PTR [rdx],al
    bfa8:	00 a3 32 00 00 00    	add    BYTE PTR [rbx+0x32],ah
    bfae:	00 00                	add    BYTE PTR [rax],al
    bfb0:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bfb3:	00 00                	add    BYTE PTR [rax],al
    bfb5:	00 00                	add    BYTE PTR [rax],al
    bfb7:	00 00                	add    BYTE PTR [rax],al
    bfb9:	29 09                	sub    DWORD PTR [rcx],ecx
    bfbb:	39 6a 00             	cmp    DWORD PTR [rdx+0x0],ebp
    bfbe:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 131a8 <_end+0xd190>
    bfc4:	e2 28                	loop   bfee <_end+0x5fd6>
    bfc6:	00 00                	add    BYTE PTR [rax],al
    bfc8:	e0 28                	loopne bff2 <_end+0x5fda>
    bfca:	00 00                	add    BYTE PTR [rax],al
    bfcc:	07                   	(bad)
    bfcd:	af                   	scas   eax,DWORD PTR es:[rdi]
    bfce:	32 00                	xor    al,BYTE PTR [rax]
    bfd0:	00 00                	add    BYTE PTR [rax],al
    bfd2:	00 00                	add    BYTE PTR [rax],al
    bfd4:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bfda:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bfdd:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bfe8:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bfeb:	00 00                	add    BYTE PTR [rax],al
    bfed:	af                   	scas   eax,DWORD PTR es:[rdi]
    bfee:	32 00                	xor    al,BYTE PTR [rax]
    bff0:	00 00                	add    BYTE PTR [rax],al
    bff2:	00 00                	add    BYTE PTR [rax],al
    bff4:	00 03                	add    BYTE PTR [rbx],al
    bff6:	00 af 32 00 00 00    	add    BYTE PTR [rdi+0x32],ch
    bffc:	00 00                	add    BYTE PTR [rax],al
    bffe:	00 36                	add    BYTE PTR [rsi],dh
    c000:	00 00                	add    BYTE PTR [rax],al
    c002:	00 00                	add    BYTE PTR [rax],al
    c004:	00 00                	add    BYTE PTR [rax],al
    c006:	00 29                	add    BYTE PTR [rcx],ch
    c008:	09 e6                	or     esi,esp
    c00a:	6a 00                	push   0x0
    c00c:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 112a3 <_end+0xb28b>
    c012:	f1                   	int1
    c013:	28 00                	sub    BYTE PTR [rax],al
    c015:	00 ef                	add    bh,ch
    c017:	28 00                	sub    BYTE PTR [rax],al
    c019:	00 0b                	add    BYTE PTR [rbx],cl
    c01b:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    c01e:	00 0b                	add    BYTE PTR [rbx],cl
    c020:	79 52                	jns    c074 <_end+0x605c>
    c022:	00 00                	add    BYTE PTR [rax],al
    c024:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c027:	00 00                	add    BYTE PTR [rax],al
    c029:	15 9d 52 00 00       	adc    eax,0x529d
    c02e:	fd                   	std
    c02f:	28 00                	sub    BYTE PTR [rax],al
    c031:	00 f9                	add    cl,bh
    c033:	28 00                	sub    BYTE PTR [rax],al
    c035:	00 0a                	add    BYTE PTR [rdx],cl
    c037:	c2 32 00             	ret    0x32
    c03a:	00 00                	add    BYTE PTR [rax],al
    c03c:	00 00                	add    BYTE PTR [rax],al
    c03e:	00 e5                	add    ch,ah
    c040:	3c 00                	cmp    al,0x0
    c042:	00 b3 6a 00 00 03    	add    BYTE PTR [rbx+0x300006a],dh
    c048:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c04b:	03 8e 42 00 00 00    	add    ecx,DWORD PTR [rsi+0x42]
    c051:	00 00                	add    BYTE PTR [rax],al
    c053:	00 03                	add    BYTE PTR [rbx],al
    c055:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c059:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c05d:	00 00                	add    BYTE PTR [rax],al
    c05f:	00 00                	add    BYTE PTR [rax],al
    c061:	00 0a                	add    BYTE PTR [rdx],cl
    c063:	dd 32                	fnsave [rdx]
    c065:	00 00                	add    BYTE PTR [rax],al
    c067:	00 00                	add    BYTE PTR [rax],al
    c069:	00 00                	add    BYTE PTR [rax],al
    c06b:	4d                   	rex.WRB
    c06c:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c06f:	d1 6a 00             	shr    DWORD PTR [rdx+0x0],1
    c072:	00 03                	add    BYTE PTR [rbx],al
    c074:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c077:	7d 00                	jge    c079 <_end+0x6061>
    c079:	03 01                	add    eax,DWORD PTR [rcx]
    c07b:	58                   	pop    rax
    c07c:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c07f:	00 07                	add    BYTE PTR [rdi],al
    c081:	e5 32                	in     eax,0x32
    c083:	00 00                	add    BYTE PTR [rax],al
    c085:	00 00                	add    BYTE PTR [rax],al
    c087:	00 00                	add    BYTE PTR [rax],al
    c089:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    c08c:	00 03                	add    BYTE PTR [rbx],al
    c08e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c091:	7d 00                	jge    c093 <_end+0x607b>
    c093:	00 00                	add    BYTE PTR [rax],al
    c095:	19 d6                	sbb    esi,edx
    c097:	71 00                	jno    c099 <_end+0x6081>
    c099:	00 e5                	add    ch,ah
    c09b:	32 00                	xor    al,BYTE PTR [rax]
    c09d:	00 00                	add    BYTE PTR [rax],al
    c09f:	00 00                	add    BYTE PTR [rax],al
    c0a1:	00 02                	add    BYTE PTR [rdx],al
    c0a3:	00 e5                	add    ch,ah
    c0a5:	32 00                	xor    al,BYTE PTR [rax]
    c0a7:	00 00                	add    BYTE PTR [rax],al
    c0a9:	00 00                	add    BYTE PTR [rax],al
    c0ab:	00 08                	add    BYTE PTR [rax],cl
    c0ad:	00 00                	add    BYTE PTR [rax],al
    c0af:	00 00                	add    BYTE PTR [rax],al
    c0b1:	00 00                	add    BYTE PTR [rax],al
    c0b3:	00 01                	add    BYTE PTR [rcx],al
    c0b5:	29 09                	sub    DWORD PTR [rcx],ecx
    c0b7:	05 e4 71 00 00       	add    eax,0x71e4
    c0bc:	0e                   	(bad)
    c0bd:	29 00                	sub    DWORD PTR [rax],eax
    c0bf:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    c0c2:	00 00                	add    BYTE PTR [rax],al
    c0c4:	07                   	(bad)
    c0c5:	ed                   	in     eax,dx
    c0c6:	32 00                	xor    al,BYTE PTR [rax]
    c0c8:	00 00                	add    BYTE PTR [rax],al
    c0ca:	00 00                	add    BYTE PTR [rax],al
    c0cc:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c0d2:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c0d5:	73 00                	jae    c0d7 <_end+0x60bf>
    c0d7:	00 00                	add    BYTE PTR [rax],al
    c0d9:	00 16                	add    BYTE PTR [rsi],dl
    c0db:	ed                   	in     eax,dx
    c0dc:	32 00                	xor    al,BYTE PTR [rax]
    c0de:	00 00                	add    BYTE PTR [rax],al
    c0e0:	00 00                	add    BYTE PTR [rax],al
    c0e2:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c0e5:	00 00                	add    BYTE PTR [rax],al
    c0e7:	00 00                	add    BYTE PTR [rax],al
    c0e9:	00 00                	add    BYTE PTR [rax],al
    c0eb:	20 6d 00             	and    BYTE PTR [rbp+0x0],ch
    c0ee:	00 17                	add    BYTE PTR [rdi],dl
    c0f0:	ed                   	in     eax,dx
    c0f1:	33 00                	xor    eax,DWORD PTR [rax]
    c0f3:	00 2a                	add    BYTE PTR [rdx],ch
    c0f5:	09 db                	or     ebx,ebx
    c0f7:	41 00 00             	add    BYTE PTR [r8],al
    c0fa:	09 d6                	or     esi,edx
    c0fc:	71 00                	jno    c0fe <_end+0x60e6>
    c0fe:	00 ed                	add    ch,ch
    c100:	32 00                	xor    al,BYTE PTR [rax]
    c102:	00 00                	add    BYTE PTR [rax],al
    c104:	00 00                	add    BYTE PTR [rax],al
    c106:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c109:	ed                   	in     eax,dx
    c10a:	32 00                	xor    al,BYTE PTR [rax]
    c10c:	00 00                	add    BYTE PTR [rax],al
    c10e:	00 00                	add    BYTE PTR [rax],al
    c110:	00 08                	add    BYTE PTR [rax],cl
    c112:	00 00                	add    BYTE PTR [rax],al
    c114:	00 00                	add    BYTE PTR [rax],al
    c116:	00 00                	add    BYTE PTR [rax],al
    c118:	00 2a                	add    BYTE PTR [rdx],ch
    c11a:	09 92 6b 00 00 05    	or     DWORD PTR [rdx+0x500006b],edx
    c120:	e4 71                	in     al,0x71
    c122:	00 00                	add    BYTE PTR [rax],al
    c124:	1d 29 00 00 1b       	sbb    eax,0x1b000029
    c129:	29 00                	sub    DWORD PTR [rax],eax
    c12b:	00 07                	add    BYTE PTR [rdi],al
    c12d:	f5                   	cmc
    c12e:	32 00                	xor    al,BYTE PTR [rax]
    c130:	00 00                	add    BYTE PTR [rax],al
    c132:	00 00                	add    BYTE PTR [rax],al
    c134:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c13a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c13d:	7f 00                	jg     c13f <_end+0x6127>
    c13f:	00 00                	add    BYTE PTR [rax],al
    c141:	09 d6                	or     esi,edx
    c143:	71 00                	jno    c145 <_end+0x612d>
    c145:	00 f5                	add    ch,dh
    c147:	32 00                	xor    al,BYTE PTR [rax]
    c149:	00 00                	add    BYTE PTR [rax],al
    c14b:	00 00                	add    BYTE PTR [rax],al
    c14d:	00 02                	add    BYTE PTR [rdx],al
    c14f:	00 f5                	add    ch,dh
    c151:	32 00                	xor    al,BYTE PTR [rax]
    c153:	00 00                	add    BYTE PTR [rax],al
    c155:	00 00                	add    BYTE PTR [rax],al
    c157:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c15a:	00 00                	add    BYTE PTR [rax],al
    c15c:	00 00                	add    BYTE PTR [rax],al
    c15e:	00 00                	add    BYTE PTR [rax],al
    c160:	2a 09                	sub    cl,BYTE PTR [rcx]
    c162:	e0 6b                	loopne c1cf <_end+0x61b7>
    c164:	00 00                	add    BYTE PTR [rax],al
    c166:	05 e4 71 00 00       	add    eax,0x71e4
    c16b:	2c 29                	sub    al,0x29
    c16d:	00 00                	add    BYTE PTR [rax],al
    c16f:	2a 29                	sub    ch,BYTE PTR [rcx]
    c171:	00 00                	add    BYTE PTR [rax],al
    c173:	07                   	(bad)
    c174:	01 33                	add    DWORD PTR [rbx],esi
    c176:	00 00                	add    BYTE PTR [rax],al
    c178:	00 00                	add    BYTE PTR [rax],al
    c17a:	00 00                	add    BYTE PTR [rax],al
    c17c:	9b                   	fwait
    c17d:	75 00                	jne    c17f <_end+0x6167>
    c17f:	00 03                	add    BYTE PTR [rbx],al
    c181:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c184:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    c18a:	00 00                	add    BYTE PTR [rax],al
    c18c:	00 00                	add    BYTE PTR [rax],al
    c18e:	00 09                	add    BYTE PTR [rcx],cl
    c190:	d6                   	(bad)
    c191:	71 00                	jno    c193 <_end+0x617b>
    c193:	00 01                	add    BYTE PTR [rcx],al
    c195:	33 00                	xor    eax,DWORD PTR [rax]
    c197:	00 00                	add    BYTE PTR [rax],al
    c199:	00 00                	add    BYTE PTR [rax],al
    c19b:	00 02                	add    BYTE PTR [rdx],al
    c19d:	00 01                	add    BYTE PTR [rcx],al
    c19f:	33 00                	xor    eax,DWORD PTR [rax]
    c1a1:	00 00                	add    BYTE PTR [rax],al
    c1a3:	00 00                	add    BYTE PTR [rax],al
    c1a5:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c1a8:	00 00                	add    BYTE PTR [rax],al
    c1aa:	00 00                	add    BYTE PTR [rax],al
    c1ac:	00 00                	add    BYTE PTR [rax],al
    c1ae:	2a 09                	sub    cl,BYTE PTR [rcx]
    c1b0:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    c1b2:	00 00                	add    BYTE PTR [rax],al
    c1b4:	05 e4 71 00 00       	add    eax,0x71e4
    c1b9:	3b 29                	cmp    ebp,DWORD PTR [rcx]
    c1bb:	00 00                	add    BYTE PTR [rax],al
    c1bd:	39 29                	cmp    DWORD PTR [rcx],ebp
    c1bf:	00 00                	add    BYTE PTR [rax],al
    c1c1:	07                   	(bad)
    c1c2:	0d 33 00 00 00       	or     eax,0x33
    c1c7:	00 00                	add    BYTE PTR [rax],al
    c1c9:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c1cf:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c1d2:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c1dd:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c1e0:	00 00                	add    BYTE PTR [rax],al
    c1e2:	0d 33 00 00 00       	or     eax,0x33
    c1e7:	00 00                	add    BYTE PTR [rax],al
    c1e9:	00 03                	add    BYTE PTR [rbx],al
    c1eb:	00 0d 33 00 00 00    	add    BYTE PTR [rip+0x33],cl        # c224 <_end+0x620c>
    c1f1:	00 00                	add    BYTE PTR [rax],al
    c1f3:	00 36                	add    BYTE PTR [rsi],dh
    c1f5:	00 00                	add    BYTE PTR [rax],al
    c1f7:	00 00                	add    BYTE PTR [rax],al
    c1f9:	00 00                	add    BYTE PTR [rax],al
    c1fb:	00 2a                	add    BYTE PTR [rdx],ch
    c1fd:	09 db                	or     ebx,ebx
    c1ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    c200:	00 00                	add    BYTE PTR [rax],al
    c202:	05 91 52 00 00       	add    eax,0x5291
    c207:	4a 29 00             	rex.WX sub QWORD PTR [rax],rax
    c20a:	00 48 29             	add    BYTE PTR [rax+0x29],cl
    c20d:	00 00                	add    BYTE PTR [rax],al
    c20f:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    c215:	79 52                	jns    c269 <_end+0x6251>
    c217:	00 00                	add    BYTE PTR [rax],al
    c219:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c21c:	00 00                	add    BYTE PTR [rax],al
    c21e:	15 9d 52 00 00       	adc    eax,0x529d
    c223:	56                   	push   rsi
    c224:	29 00                	sub    DWORD PTR [rax],eax
    c226:	00 52 29             	add    BYTE PTR [rdx+0x29],dl
    c229:	00 00                	add    BYTE PTR [rax],al
    c22b:	0a 20                	or     ah,BYTE PTR [rax]
    c22d:	33 00                	xor    eax,DWORD PTR [rax]
    c22f:	00 00                	add    BYTE PTR [rax],al
    c231:	00 00                	add    BYTE PTR [rax],al
    c233:	00 e5                	add    ch,ah
    c235:	3c 00                	cmp    al,0x0
    c237:	00 a8 6c 00 00 03    	add    BYTE PTR [rax+0x300006c],ch
    c23d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c240:	03 38                	add    edi,DWORD PTR [rax]
    c242:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c245:	00 00                	add    BYTE PTR [rax],al
    c247:	00 00                	add    BYTE PTR [rax],al
    c249:	03 01                	add    eax,DWORD PTR [rcx]
    c24b:	54                   	push   rsp
    c24c:	09 03                	or     DWORD PTR [rbx],eax
    c24e:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c252:	00 00                	add    BYTE PTR [rax],al
    c254:	00 00                	add    BYTE PTR [rax],al
    c256:	00 0a                	add    BYTE PTR [rdx],cl
    c258:	3b 33                	cmp    esi,DWORD PTR [rbx]
    c25a:	00 00                	add    BYTE PTR [rax],al
    c25c:	00 00                	add    BYTE PTR [rax],al
    c25e:	00 00                	add    BYTE PTR [rax],al
    c260:	4d                   	rex.WRB
    c261:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c264:	c6                   	(bad)
    c265:	6c                   	ins    BYTE PTR es:[rdi],dx
    c266:	00 00                	add    BYTE PTR [rax],al
    c268:	03 01                	add    eax,DWORD PTR [rcx]
    c26a:	55                   	push   rbp
    c26b:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c26e:	03 01                	add    eax,DWORD PTR [rcx]
    c270:	58                   	pop    rax
    c271:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c274:	00 07                	add    BYTE PTR [rdi],al
    c276:	43 33 00             	rex.XB xor eax,DWORD PTR [r8]
    c279:	00 00                	add    BYTE PTR [rax],al
    c27b:	00 00                	add    BYTE PTR [rax],al
    c27d:	00 33                	add    BYTE PTR [rbx],dh
    c27f:	3c 00                	cmp    al,0x0
    c281:	00 03                	add    BYTE PTR [rbx],al
    c283:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c286:	7d 00                	jge    c288 <_end+0x6270>
    c288:	00 00                	add    BYTE PTR [rax],al
    c28a:	19 d6                	sbb    esi,edx
    c28c:	71 00                	jno    c28e <_end+0x6276>
    c28e:	00 43 33             	add    BYTE PTR [rbx+0x33],al
    c291:	00 00                	add    BYTE PTR [rax],al
    c293:	00 00                	add    BYTE PTR [rax],al
    c295:	00 00                	add    BYTE PTR [rax],al
    c297:	02 00                	add    al,BYTE PTR [rax]
    c299:	43 33 00             	rex.XB xor eax,DWORD PTR [r8]
    c29c:	00 00                	add    BYTE PTR [rax],al
    c29e:	00 00                	add    BYTE PTR [rax],al
    c2a0:	00 08                	add    BYTE PTR [rax],cl
    c2a2:	00 00                	add    BYTE PTR [rax],al
    c2a4:	00 00                	add    BYTE PTR [rax],al
    c2a6:	00 00                	add    BYTE PTR [rax],al
    c2a8:	00 01                	add    BYTE PTR [rcx],al
    c2aa:	2a 09                	sub    cl,BYTE PTR [rcx]
    c2ac:	05 e4 71 00 00       	add    eax,0x71e4
    c2b1:	67 29 00             	sub    DWORD PTR [eax],eax
    c2b4:	00 65 29             	add    BYTE PTR [rbp+0x29],ah
    c2b7:	00 00                	add    BYTE PTR [rax],al
    c2b9:	07                   	(bad)
    c2ba:	4b 33 00             	rex.WXB xor rax,QWORD PTR [r8]
    c2bd:	00 00                	add    BYTE PTR [rax],al
    c2bf:	00 00                	add    BYTE PTR [rax],al
    c2c1:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c2c7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c2ca:	73 00                	jae    c2cc <_end+0x62b4>
    c2cc:	00 00                	add    BYTE PTR [rax],al
    c2ce:	00 16                	add    BYTE PTR [rsi],dl
    c2d0:	4b 33 00             	rex.WXB xor rax,QWORD PTR [r8]
    c2d3:	00 00                	add    BYTE PTR [rax],al
    c2d5:	00 00                	add    BYTE PTR [rax],al
    c2d7:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c2da:	00 00                	add    BYTE PTR [rax],al
    c2dc:	00 00                	add    BYTE PTR [rax],al
    c2de:	00 00                	add    BYTE PTR [rax],al
    c2e0:	15 6f 00 00 17       	adc    eax,0x1700006f
    c2e5:	61                   	(bad)
    c2e6:	12 00                	adc    al,BYTE PTR [rax]
    c2e8:	00 2b                	add    BYTE PTR [rbx],ch
    c2ea:	09 db                	or     ebx,ebx
    c2ec:	41 00 00             	add    BYTE PTR [r8],al
    c2ef:	09 d6                	or     esi,edx
    c2f1:	71 00                	jno    c2f3 <_end+0x62db>
    c2f3:	00 4b 33             	add    BYTE PTR [rbx+0x33],cl
    c2f6:	00 00                	add    BYTE PTR [rax],al
    c2f8:	00 00                	add    BYTE PTR [rax],al
    c2fa:	00 00                	add    BYTE PTR [rax],al
    c2fc:	04 00                	add    al,0x0
    c2fe:	4b 33 00             	rex.WXB xor rax,QWORD PTR [r8]
    c301:	00 00                	add    BYTE PTR [rax],al
    c303:	00 00                	add    BYTE PTR [rax],al
    c305:	00 08                	add    BYTE PTR [rax],cl
    c307:	00 00                	add    BYTE PTR [rax],al
    c309:	00 00                	add    BYTE PTR [rax],al
    c30b:	00 00                	add    BYTE PTR [rax],al
    c30d:	00 2b                	add    BYTE PTR [rbx],ch
    c30f:	09 87 6d 00 00 05    	or     DWORD PTR [rdi+0x500006d],eax
    c315:	e4 71                	in     al,0x71
    c317:	00 00                	add    BYTE PTR [rax],al
    c319:	76 29                	jbe    c344 <_end+0x632c>
    c31b:	00 00                	add    BYTE PTR [rax],al
    c31d:	74 29                	je     c348 <_end+0x6330>
    c31f:	00 00                	add    BYTE PTR [rax],al
    c321:	07                   	(bad)
    c322:	53                   	push   rbx
    c323:	33 00                	xor    eax,DWORD PTR [rax]
    c325:	00 00                	add    BYTE PTR [rax],al
    c327:	00 00                	add    BYTE PTR [rax],al
    c329:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c32f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c332:	7f 00                	jg     c334 <_end+0x631c>
    c334:	00 00                	add    BYTE PTR [rax],al
    c336:	09 d6                	or     esi,edx
    c338:	71 00                	jno    c33a <_end+0x6322>
    c33a:	00 53 33             	add    BYTE PTR [rbx+0x33],dl
    c33d:	00 00                	add    BYTE PTR [rax],al
    c33f:	00 00                	add    BYTE PTR [rax],al
    c341:	00 00                	add    BYTE PTR [rax],al
    c343:	02 00                	add    al,BYTE PTR [rax]
    c345:	53                   	push   rbx
    c346:	33 00                	xor    eax,DWORD PTR [rax]
    c348:	00 00                	add    BYTE PTR [rax],al
    c34a:	00 00                	add    BYTE PTR [rax],al
    c34c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c34f:	00 00                	add    BYTE PTR [rax],al
    c351:	00 00                	add    BYTE PTR [rax],al
    c353:	00 00                	add    BYTE PTR [rax],al
    c355:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c357:	d5 6d 00 00          	{rex2 0x6d} add BYTE PTR [r8],r24b
    c35b:	05 e4 71 00 00       	add    eax,0x71e4
    c360:	85 29                	test   DWORD PTR [rcx],ebp
    c362:	00 00                	add    BYTE PTR [rax],al
    c364:	83 29 00             	sub    DWORD PTR [rcx],0x0
    c367:	00 07                	add    BYTE PTR [rdi],al
    c369:	5f                   	pop    rdi
    c36a:	33 00                	xor    eax,DWORD PTR [rax]
    c36c:	00 00                	add    BYTE PTR [rax],al
    c36e:	00 00                	add    BYTE PTR [rax],al
    c370:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c376:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c379:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    c37f:	00 00                	add    BYTE PTR [rax],al
    c381:	00 00                	add    BYTE PTR [rax],al
    c383:	00 09                	add    BYTE PTR [rcx],cl
    c385:	d6                   	(bad)
    c386:	71 00                	jno    c388 <_end+0x6370>
    c388:	00 5f 33             	add    BYTE PTR [rdi+0x33],bl
    c38b:	00 00                	add    BYTE PTR [rax],al
    c38d:	00 00                	add    BYTE PTR [rax],al
    c38f:	00 00                	add    BYTE PTR [rax],al
    c391:	02 00                	add    al,BYTE PTR [rax]
    c393:	5f                   	pop    rdi
    c394:	33 00                	xor    eax,DWORD PTR [rax]
    c396:	00 00                	add    BYTE PTR [rax],al
    c398:	00 00                	add    BYTE PTR [rax],al
    c39a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c39d:	00 00                	add    BYTE PTR [rax],al
    c39f:	00 00                	add    BYTE PTR [rax],al
    c3a1:	00 00                	add    BYTE PTR [rax],al
    c3a3:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c3a5:	23 6e 00             	and    ebp,DWORD PTR [rsi+0x0]
    c3a8:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 13592 <_end+0xd57a>
    c3ae:	94                   	xchg   esp,eax
    c3af:	29 00                	sub    DWORD PTR [rax],eax
    c3b1:	00 92 29 00 00 07    	add    BYTE PTR [rdx+0x7000029],dl
    c3b7:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    c3ba:	00 00                	add    BYTE PTR [rax],al
    c3bc:	00 00                	add    BYTE PTR [rax],al
    c3be:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c3c4:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c3c7:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c3d2:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c3d5:	00 00                	add    BYTE PTR [rax],al
    c3d7:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    c3da:	00 00                	add    BYTE PTR [rax],al
    c3dc:	00 00                	add    BYTE PTR [rax],al
    c3de:	00 03                	add    BYTE PTR [rbx],al
    c3e0:	00 6b 33             	add    BYTE PTR [rbx+0x33],ch
    c3e3:	00 00                	add    BYTE PTR [rax],al
    c3e5:	00 00                	add    BYTE PTR [rax],al
    c3e7:	00 00                	add    BYTE PTR [rax],al
    c3e9:	36 00 00             	ss add BYTE PTR [rax],al
    c3ec:	00 00                	add    BYTE PTR [rax],al
    c3ee:	00 00                	add    BYTE PTR [rax],al
    c3f0:	00 2b                	add    BYTE PTR [rbx],ch
    c3f2:	09 d0                	or     eax,edx
    c3f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c3f5:	00 00                	add    BYTE PTR [rax],al
    c3f7:	05 91 52 00 00       	add    eax,0x5291
    c3fc:	a3 29 00 00 a1 29 00 	movabs ds:0xb000029a1000029,eax
    c403:	00 0b 
    c405:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    c408:	00 0b                	add    BYTE PTR [rbx],cl
    c40a:	79 52                	jns    c45e <_end+0x6446>
    c40c:	00 00                	add    BYTE PTR [rax],al
    c40e:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c411:	00 00                	add    BYTE PTR [rax],al
    c413:	15 9d 52 00 00       	adc    eax,0x529d
    c418:	af                   	scas   eax,DWORD PTR es:[rdi]
    c419:	29 00                	sub    DWORD PTR [rax],eax
    c41b:	00 ab 29 00 00 0a    	add    BYTE PTR [rbx+0xa000029],ch
    c421:	7e 33                	jle    c456 <_end+0x643e>
    c423:	00 00                	add    BYTE PTR [rax],al
    c425:	00 00                	add    BYTE PTR [rax],al
    c427:	00 00                	add    BYTE PTR [rax],al
    c429:	e5 3c                	in     eax,0x3c
    c42b:	00 00                	add    BYTE PTR [rax],al
    c42d:	9d                   	popf
    c42e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c42f:	00 00                	add    BYTE PTR [rax],al
    c431:	03 01                	add    eax,DWORD PTR [rcx]
    c433:	55                   	push   rbp
    c434:	09 03                	or     DWORD PTR [rbx],eax
    c436:	b7 42                	mov    bh,0x42
    c438:	00 00                	add    BYTE PTR [rax],al
    c43a:	00 00                	add    BYTE PTR [rax],al
    c43c:	00 00                	add    BYTE PTR [rax],al
    c43e:	03 01                	add    eax,DWORD PTR [rcx]
    c440:	54                   	push   rsp
    c441:	09 03                	or     DWORD PTR [rbx],eax
    c443:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c447:	00 00                	add    BYTE PTR [rax],al
    c449:	00 00                	add    BYTE PTR [rax],al
    c44b:	00 0a                	add    BYTE PTR [rdx],cl
    c44d:	99                   	cdq
    c44e:	33 00                	xor    eax,DWORD PTR [rax]
    c450:	00 00                	add    BYTE PTR [rax],al
    c452:	00 00                	add    BYTE PTR [rax],al
    c454:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c457:	00 00                	add    BYTE PTR [rax],al
    c459:	bb 6e 00 00 03       	mov    ebx,0x300006e
    c45e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c461:	7d 00                	jge    c463 <_end+0x644b>
    c463:	03 01                	add    eax,DWORD PTR [rcx]
    c465:	58                   	pop    rax
    c466:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c469:	00 07                	add    BYTE PTR [rdi],al
    c46b:	a1 33 00 00 00 00 00 	movabs eax,ds:0x3300000000000033
    c472:	00 33 
    c474:	3c 00                	cmp    al,0x0
    c476:	00 03                	add    BYTE PTR [rbx],al
    c478:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c47b:	7d 00                	jge    c47d <_end+0x6465>
    c47d:	00 00                	add    BYTE PTR [rax],al
    c47f:	19 d6                	sbb    esi,edx
    c481:	71 00                	jno    c483 <_end+0x646b>
    c483:	00 a1 33 00 00 00    	add    BYTE PTR [rcx+0x33],ah
    c489:	00 00                	add    BYTE PTR [rax],al
    c48b:	00 02                	add    BYTE PTR [rdx],al
    c48d:	00 a1 33 00 00 00    	add    BYTE PTR [rcx+0x33],ah
    c493:	00 00                	add    BYTE PTR [rax],al
    c495:	00 08                	add    BYTE PTR [rax],cl
    c497:	00 00                	add    BYTE PTR [rax],al
    c499:	00 00                	add    BYTE PTR [rax],al
    c49b:	00 00                	add    BYTE PTR [rax],al
    c49d:	00 01                	add    BYTE PTR [rcx],al
    c49f:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c4a1:	05 e4 71 00 00       	add    eax,0x71e4
    c4a6:	c0 29 00             	shr    BYTE PTR [rcx],0x0
    c4a9:	00 be 29 00 00 07    	add    BYTE PTR [rsi+0x7000029],bh
    c4af:	a9 33 00 00 00       	test   eax,0x33
    c4b4:	00 00                	add    BYTE PTR [rax],al
    c4b6:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c4bc:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4bf:	73 00                	jae    c4c1 <_end+0x64a9>
    c4c1:	00 00                	add    BYTE PTR [rax],al
    c4c3:	00 0a                	add    BYTE PTR [rdx],cl
    c4c5:	64 2f                	fs (bad)
    c4c7:	00 00                	add    BYTE PTR [rax],al
    c4c9:	00 00                	add    BYTE PTR [rax],al
    c4cb:	00 00                	add    BYTE PTR [rax],al
    c4cd:	1b 44 00 00          	sbb    eax,DWORD PTR [rax+rax*1+0x0]
    c4d1:	3b 6f 00             	cmp    ebp,DWORD PTR [rdi+0x0]
    c4d4:	00 03                	add    BYTE PTR [rbx],al
    c4d6:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c4d9:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
    c4dc:	00 00                	add    BYTE PTR [rax],al
    c4de:	00 00                	add    BYTE PTR [rax],al
    c4e0:	00 00                	add    BYTE PTR [rax],al
    c4e2:	03 01                	add    eax,DWORD PTR [rcx]
    c4e4:	54                   	push   rsp
    c4e5:	03 91 b0 7f 00 0a    	add    edx,DWORD PTR [rcx+0xa007fb0]
    c4eb:	78 2f                	js     c51c <_end+0x6504>
    c4ed:	00 00                	add    BYTE PTR [rax],al
    c4ef:	00 00                	add    BYTE PTR [rax],al
    c4f1:	00 00                	add    BYTE PTR [rax],al
    c4f3:	fc                   	cld
    c4f4:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c4f7:	53                   	push   rbx
    c4f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c4f9:	00 00                	add    BYTE PTR [rax],al
    c4fb:	03 01                	add    eax,DWORD PTR [rcx]
    c4fd:	55                   	push   rbp
    c4fe:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c501:	00 0a                	add    BYTE PTR [rdx],cl
    c503:	86 2f                	xchg   BYTE PTR [rdi],ch
    c505:	00 00                	add    BYTE PTR [rax],al
    c507:	00 00                	add    BYTE PTR [rax],al
    c509:	00 00                	add    BYTE PTR [rax],al
    c50b:	d8 43 00             	fadd   DWORD PTR [rbx+0x0]
    c50e:	00 71 6f             	add    BYTE PTR [rcx+0x6f],dh
    c511:	00 00                	add    BYTE PTR [rax],al
    c513:	03 01                	add    eax,DWORD PTR [rcx]
    c515:	55                   	push   rbp
    c516:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c519:	03 01                	add    eax,DWORD PTR [rcx]
    c51b:	54                   	push   rsp
    c51c:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    c520:	0a 98 2f 00 00 00    	or     bl,BYTE PTR [rax+0x2f]
    c526:	00 00                	add    BYTE PTR [rax],al
    c528:	00 bd 43 00 00 96    	add    BYTE PTR [rbp-0x69ffffbd],bh
    c52e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c52f:	00 00                	add    BYTE PTR [rax],al
    c531:	03 01                	add    eax,DWORD PTR [rcx]
    c533:	55                   	push   rbp
    c534:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c537:	03 01                	add    eax,DWORD PTR [rcx]
    c539:	54                   	push   rsp
    c53a:	09 03                	or     DWORD PTR [rbx],eax
    c53c:	74 42                	je     c580 <_end+0x6568>
    c53e:	00 00                	add    BYTE PTR [rax],al
    c540:	00 00                	add    BYTE PTR [rax],al
    c542:	00 00                	add    BYTE PTR [rax],al
    c544:	00 0a                	add    BYTE PTR [rdx],cl
    c546:	b2 2f                	mov    dl,0x2f
    c548:	00 00                	add    BYTE PTR [rax],al
    c54a:	00 00                	add    BYTE PTR [rax],al
    c54c:	00 00                	add    BYTE PTR [rax],al
    c54e:	bd 43 00 00 b4       	mov    ebp,0xb4000043
    c553:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c554:	00 00                	add    BYTE PTR [rax],al
    c556:	03 01                	add    eax,DWORD PTR [rcx]
    c558:	55                   	push   rbp
    c559:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c55c:	03 01                	add    eax,DWORD PTR [rcx]
    c55e:	54                   	push   rsp
    c55f:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c562:	00 0a                	add    BYTE PTR [rdx],cl
    c564:	c9                   	leave
    c565:	2f                   	(bad)
    c566:	00 00                	add    BYTE PTR [rax],al
    c568:	00 00                	add    BYTE PTR [rax],al
    c56a:	00 00                	add    BYTE PTR [rax],al
    c56c:	bd 43 00 00 d9       	mov    ebp,0xd9000043
    c571:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c572:	00 00                	add    BYTE PTR [rax],al
    c574:	03 01                	add    eax,DWORD PTR [rcx]
    c576:	55                   	push   rbp
    c577:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c57a:	03 01                	add    eax,DWORD PTR [rcx]
    c57c:	54                   	push   rsp
    c57d:	09 03                	or     DWORD PTR [rbx],eax
    c57f:	7a 42                	jp     c5c3 <_end+0x65ab>
    c581:	00 00                	add    BYTE PTR [rax],al
    c583:	00 00                	add    BYTE PTR [rax],al
    c585:	00 00                	add    BYTE PTR [rax],al
    c587:	00 0a                	add    BYTE PTR [rdx],cl
    c589:	e0 2f                	loopne c5ba <_end+0x65a2>
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	00 00                	add    BYTE PTR [rax],al
    c58f:	00 00                	add    BYTE PTR [rax],al
    c591:	bd 43 00 00 fe       	mov    ebp,0xfe000043
    c596:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c597:	00 00                	add    BYTE PTR [rax],al
    c599:	03 01                	add    eax,DWORD PTR [rcx]
    c59b:	55                   	push   rbp
    c59c:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c59f:	03 01                	add    eax,DWORD PTR [rcx]
    c5a1:	54                   	push   rsp
    c5a2:	09 03                	or     DWORD PTR [rbx],eax
    c5a4:	8a 42 00             	mov    al,BYTE PTR [rdx+0x0]
    c5a7:	00 00                	add    BYTE PTR [rax],al
    c5a9:	00 00                	add    BYTE PTR [rax],al
    c5ab:	00 00                	add    BYTE PTR [rax],al
    c5ad:	0a f7                	or     dh,bh
    c5af:	2f                   	(bad)
    c5b0:	00 00                	add    BYTE PTR [rax],al
    c5b2:	00 00                	add    BYTE PTR [rax],al
    c5b4:	00 00                	add    BYTE PTR [rax],al
    c5b6:	bd 43 00 00 23       	mov    ebp,0x23000043
    c5bb:	70 00                	jo     c5bd <_end+0x65a5>
    c5bd:	00 03                	add    BYTE PTR [rbx],al
    c5bf:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5c2:	73 00                	jae    c5c4 <_end+0x65ac>
    c5c4:	03 01                	add    eax,DWORD PTR [rcx]
    c5c6:	54                   	push   rsp
    c5c7:	09 03                	or     DWORD PTR [rbx],eax
    c5c9:	ab                   	stos   DWORD PTR es:[rdi],eax
    c5ca:	42 00 00             	rex.X add BYTE PTR [rax],al
    c5cd:	00 00                	add    BYTE PTR [rax],al
    c5cf:	00 00                	add    BYTE PTR [rax],al
    c5d1:	00 0a                	add    BYTE PTR [rdx],cl
    c5d3:	0e                   	(bad)
    c5d4:	30 00                	xor    BYTE PTR [rax],al
    c5d6:	00 00                	add    BYTE PTR [rax],al
    c5d8:	00 00                	add    BYTE PTR [rax],al
    c5da:	00 bd 43 00 00 48    	add    BYTE PTR [rbp+0x48000043],bh
    c5e0:	70 00                	jo     c5e2 <_end+0x65ca>
    c5e2:	00 03                	add    BYTE PTR [rbx],al
    c5e4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5e7:	73 00                	jae    c5e9 <_end+0x65d1>
    c5e9:	03 01                	add    eax,DWORD PTR [rcx]
    c5eb:	54                   	push   rsp
    c5ec:	09 03                	or     DWORD PTR [rbx],eax
    c5ee:	b3 42                	mov    bl,0x42
    c5f0:	00 00                	add    BYTE PTR [rax],al
    c5f2:	00 00                	add    BYTE PTR [rax],al
    c5f4:	00 00                	add    BYTE PTR [rax],al
    c5f6:	00 0a                	add    BYTE PTR [rdx],cl
    c5f8:	25 30 00 00 00       	and    eax,0x30
    c5fd:	00 00                	add    BYTE PTR [rax],al
    c5ff:	00 bd 43 00 00 6d    	add    BYTE PTR [rbp+0x6d000043],bh
    c605:	70 00                	jo     c607 <_end+0x65ef>
    c607:	00 03                	add    BYTE PTR [rbx],al
    c609:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c60c:	73 00                	jae    c60e <_end+0x65f6>
    c60e:	03 01                	add    eax,DWORD PTR [rcx]
    c610:	54                   	push   rsp
    c611:	09 03                	or     DWORD PTR [rbx],eax
    c613:	d4                   	(bad)
    c614:	42 00 00             	rex.X add BYTE PTR [rax],al
    c617:	00 00                	add    BYTE PTR [rax],al
    c619:	00 00                	add    BYTE PTR [rax],al
    c61b:	00 0a                	add    BYTE PTR [rdx],cl
    c61d:	3c 30                	cmp    al,0x30
    c61f:	00 00                	add    BYTE PTR [rax],al
    c621:	00 00                	add    BYTE PTR [rax],al
    c623:	00 00                	add    BYTE PTR [rax],al
    c625:	bd 43 00 00 92       	mov    ebp,0x92000043
    c62a:	70 00                	jo     c62c <_end+0x6614>
    c62c:	00 03                	add    BYTE PTR [rbx],al
    c62e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c631:	73 00                	jae    c633 <_end+0x661b>
    c633:	03 01                	add    eax,DWORD PTR [rcx]
    c635:	54                   	push   rsp
    c636:	09 03                	or     DWORD PTR [rbx],eax
    c638:	e4 42                	in     al,0x42
    c63a:	00 00                	add    BYTE PTR [rax],al
    c63c:	00 00                	add    BYTE PTR [rax],al
    c63e:	00 00                	add    BYTE PTR [rax],al
    c640:	00 0a                	add    BYTE PTR [rdx],cl
    c642:	4d 30 00             	rex.WRB xor BYTE PTR [r8],r8b
    c645:	00 00                	add    BYTE PTR [rax],al
    c647:	00 00                	add    BYTE PTR [rax],al
    c649:	00 f5                	add    ch,dh
    c64b:	42 00 00             	rex.X add BYTE PTR [rax],al
    c64e:	ac                   	lods   al,BYTE PTR ds:[rsi]
    c64f:	70 00                	jo     c651 <_end+0x6639>
    c651:	00 03                	add    BYTE PTR [rbx],al
    c653:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    c656:	91                   	xchg   ecx,eax
    c657:	a0 7f 06 00 20 56 30 	movabs al,ds:0x30562000067f
    c65e:	00 00 
    c660:	00 00                	add    BYTE PTR [rax],al
    c662:	00 00                	add    BYTE PTR [rax],al
    c664:	f5                   	cmc
    c665:	42 00 00             	rex.X add BYTE PTR [rax],al
    c668:	0a 5e 30             	or     bl,BYTE PTR [rsi+0x30]
    c66b:	00 00                	add    BYTE PTR [rax],al
    c66d:	00 00                	add    BYTE PTR [rax],al
    c66f:	00 00                	add    BYTE PTR [rax],al
    c671:	f5                   	cmc
    c672:	42 00 00             	rex.X add BYTE PTR [rax],al
    c675:	d1 70 00             	shl    DWORD PTR [rax+0x0],1
    c678:	00 03                	add    BYTE PTR [rbx],al
    c67a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c67d:	76 00                	jbe    c67f <_end+0x6667>
    c67f:	00 20                	add    BYTE PTR [rax],ah
    c681:	7b 36                	jnp    c6b9 <_end+0x66a1>
    c683:	00 00                	add    BYTE PTR [rax],al
    c685:	00 00                	add    BYTE PTR [rax],al
    c687:	00 00                	add    BYTE PTR [rax],al
    c689:	6d                   	ins    DWORD PTR es:[rdi],dx
    c68a:	75 00                	jne    c68c <_end+0x6674>
    c68c:	00 0a                	add    BYTE PTR [rdx],cl
    c68e:	9a                   	(bad)
    c68f:	36 00 00             	ss add BYTE PTR [rax],al
    c692:	00 00                	add    BYTE PTR [rax],al
    c694:	00 00                	add    BYTE PTR [rax],al
    c696:	3f                   	(bad)
    c697:	44 00 00             	add    BYTE PTR [rax],r8b
    c69a:	1c 71                	sbb    al,0x71
    c69c:	00 00                	add    BYTE PTR [rax],al
    c69e:	03 01                	add    eax,DWORD PTR [rcx]
    c6a0:	55                   	push   rbp
    c6a1:	09 03                	or     DWORD PTR [rbx],eax
    c6a3:	66 42 00 00          	data16 rex.X add BYTE PTR [rax],al
    c6a7:	00 00                	add    BYTE PTR [rax],al
    c6a9:	00 00                	add    BYTE PTR [rax],al
    c6ab:	03 01                	add    eax,DWORD PTR [rcx]
    c6ad:	54                   	push   rsp
    c6ae:	09 03                	or     DWORD PTR [rbx],eax
    c6b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6b1:	41 00 00             	add    BYTE PTR [r8],al
    c6b4:	00 00                	add    BYTE PTR [rax],al
    c6b6:	00 00                	add    BYTE PTR [rax],al
    c6b8:	03 01                	add    eax,DWORD PTR [rcx]
    c6ba:	51                   	push   rcx
    c6bb:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    c6be:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c6c1:	03 20                	add    esp,DWORD PTR [rax]
    c6c3:	45 00 00             	add    BYTE PTR [r8],r8b
    c6c6:	00 00                	add    BYTE PTR [rax],al
    c6c8:	00 00                	add    BYTE PTR [rax],al
    c6ca:	00 07                	add    BYTE PTR [rdi],al
    c6cc:	b9 36 00 00 00       	mov    ecx,0x36
    c6d1:	00 00                	add    BYTE PTR [rax],al
    c6d3:	00 3f                	add    BYTE PTR [rdi],bh
    c6d5:	44 00 00             	add    BYTE PTR [rax],r8b
    c6d8:	03 01                	add    eax,DWORD PTR [rcx]
    c6da:	55                   	push   rbp
    c6db:	09 03                	or     DWORD PTR [rbx],eax
    c6dd:	66 41 00 00          	data16 add BYTE PTR [r8],al
    c6e1:	00 00                	add    BYTE PTR [rax],al
    c6e3:	00 00                	add    BYTE PTR [rax],al
    c6e5:	03 01                	add    eax,DWORD PTR [rcx]
    c6e7:	54                   	push   rsp
    c6e8:	09 03                	or     DWORD PTR [rbx],eax
    c6ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6eb:	41 00 00             	add    BYTE PTR [r8],al
    c6ee:	00 00                	add    BYTE PTR [rax],al
    c6f0:	00 00                	add    BYTE PTR [rax],al
    c6f2:	03 01                	add    eax,DWORD PTR [rcx]
    c6f4:	51                   	push   rcx
    c6f5:	01 42 03             	add    DWORD PTR [rdx+0x3],eax
    c6f8:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c6fb:	03 20                	add    esp,DWORD PTR [rax]
    c6fd:	45 00 00             	add    BYTE PTR [r8],r8b
    c700:	00 00                	add    BYTE PTR [rax],al
    c702:	00 00                	add    BYTE PTR [rax],al
    c704:	00 00                	add    BYTE PTR [rax],al
    c706:	25 ee 22 00 00       	and    eax,0x22ee
    c70b:	67 71 00             	addr32 jno c70e <_end+0x66f6>
    c70e:	00 26                	add    BYTE PTR [rsi],ah
    c710:	8a 21                	mov    ah,BYTE PTR [rcx]
    c712:	00 00                	add    BYTE PTR [rax],al
    c714:	30 00                	xor    BYTE PTR [rax],al
    c716:	13 57 71             	adc    edx,DWORD PTR [rdi+0x71]
    c719:	00 00                	add    BYTE PTR [rax],al
    c71b:	30 c5                	xor    ch,al
    c71d:	18 00                	sbb    BYTE PTR [rax],al
    c71f:	00 7a 71             	add    BYTE PTR [rdx+0x71],bh
    c722:	00 00                	add    BYTE PTR [rax],al
    c724:	03 84 71 00 00 31 1e 	add    eax,DWORD PTR [rcx+rsi*2+0x1e310000]
    c72b:	1e                   	(bad)
    c72c:	00 00                	add    BYTE PTR [rax],al
    c72e:	ab                   	stos   DWORD PTR es:[rdi],eax
    c72f:	3f                   	(bad)
    c730:	00 00                	add    BYTE PTR [rax],al
    c732:	00 30                	add    BYTE PTR [rax],dh
    c734:	59                   	pop    rcx
    c735:	1a 00                	sbb    al,BYTE PTR [rax]
    c737:	00 9b 71 00 00 02    	add    BYTE PTR [rbx+0x2000071],bl
    c73d:	b1 71                	mov    cl,0x71
    c73f:	00 00                	add    BYTE PTR [rax],al
    c741:	11 09                	adc    DWORD PTR [rcx],ecx
    c743:	19 00                	sbb    DWORD PTR [rax],eax
    c745:	00 b2 21 00 00 31    	add    BYTE PTR [rdx+0x31000021],dh
    c74b:	1e                   	(bad)
    c74c:	1e                   	(bad)
    c74d:	00 00                	add    BYTE PTR [rax],al
    c74f:	97                   	xchg   edi,eax
    c750:	3f                   	(bad)
    c751:	00 00                	add    BYTE PTR [rax],al
    c753:	2d 47 16 00 00       	sub    eax,0x1647
    c758:	3d 02 2d 61 44       	cmp    eax,0x44612d02
    c75d:	00 00                	add    BYTE PTR [rax],al
    c75f:	00 5c 84 71          	add    BYTE PTR [rsp+rax*4+0x71],bl
    c763:	00 00                	add    BYTE PTR [rax],al
    c765:	d5 0e 00 00          	{rex2 0xe} add BYTE PTR [rax],r8b
    c769:	cb                   	retf
    c76a:	71 00                	jno    c76c <_end+0x6754>
    c76c:	00 d6                	add    dh,dl
    c76e:	71 00                	jno    c770 <_end+0x6758>
    c770:	00 11                	add    BYTE PTR [rcx],dl
    c772:	09 19                	or     DWORD PTR [rcx],ebx
    c774:	00 00                	add    BYTE PTR [rax],al
    c776:	b2 21                	mov    dl,0x21
    c778:	00 00                	add    BYTE PTR [rax],al
    c77a:	0b 9b 71 00 00 0b    	or     ebx,DWORD PTR [rbx+0xb000071]
    c780:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    c781:	71 00                	jno    c783 <_end+0x676b>
    c783:	00 00                	add    BYTE PTR [rax],al
    c785:	63 a4 2d 00 00 54 a6 	movsxd esp,DWORD PTR [rbp+rbp*1-0x59ac0000]
    c78c:	21 00                	and    DWORD PTR [rax],eax
    c78e:	00 f2                	add    dl,dh
    c790:	71 00                	jno    c792 <_end+0x677a>
    c792:	00 1e                	add    BYTE PTR [rsi],bl
    c794:	04 06                	add    al,0x6
    c796:	00 00                	add    BYTE PTR [rax],al
    c798:	02 54 20 d8          	add    dl,BYTE PTR [rax+riz*1-0x28]
    c79c:	23 00                	and    eax,DWORD PTR [rax]
    c79e:	00 21                	add    BYTE PTR [rcx],ah
    c7a0:	00 63 a3             	add    BYTE PTR [rbx-0x5d],ah
    c7a3:	2d 00 00 4d a6       	sub    eax,0xa64d0000
    c7a8:	21 00                	and    DWORD PTR [rax],eax
    c7aa:	00 1a                	add    BYTE PTR [rdx],bl
    c7ac:	72 00                	jb     c7ae <_end+0x6796>
    c7ae:	00 1e                	add    BYTE PTR [rsi],bl
    c7b0:	b1 2e                	mov    cl,0x2e
    c7b2:	00 00                	add    BYTE PTR [rax],al
    c7b4:	02 4d 1b             	add    cl,BYTE PTR [rbp+0x1b]
    c7b7:	93                   	xchg   ebx,eax
    c7b8:	2c 00                	sub    al,0x0
    c7ba:	00 1e                	add    BYTE PTR [rsi],bl
    c7bc:	04 06                	add    al,0x6
    c7be:	00 00                	add    BYTE PTR [rax],al
    c7c0:	02 4d 3c             	add    cl,BYTE PTR [rbp+0x3c]
    c7c3:	d8 23                	fsub   DWORD PTR [rbx]
    c7c5:	00 00                	add    BYTE PTR [rax],al
    c7c7:	21 00                	and    DWORD PTR [rax],eax
    c7c9:	32 e1                	xor    ah,cl
    c7cb:	04 00                	add    al,0x0
    c7cd:	00 31                	add    BYTE PTR [rcx],dh
    c7cf:	72 00                	jb     c7d1 <_end+0x67b9>
    c7d1:	00 5d 5f             	add    BYTE PTR [rbp+0x5f],bl
    c7d4:	5f                   	pop    rdi
    c7d5:	78 00                	js     c7d7 <_end+0x67bf>
    c7d7:	03 b6 01 0e 35 00    	add    esi,DWORD PTR [rsi+0x350e01]
    c7dd:	00 00                	add    BYTE PTR [rax],al
    c7df:	00 4e 5b             	add    BYTE PTR [rsi+0x5b],cl
    c7e2:	52                   	push   rdx
    c7e3:	00 00                	add    BYTE PTR [rax],al
    c7e5:	16                   	(bad)
    c7e6:	31 00                	xor    DWORD PTR [rax],eax
    c7e8:	00 c0                	add    al,al
    c7ea:	2e 00 00             	cs add BYTE PTR [rax],al
    c7ed:	00 00                	add    BYTE PTR [rax],al
    c7ef:	00 00                	add    BYTE PTR [rax],al
    c7f1:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    c7f4:	00 00                	add    BYTE PTR [rax],al
    c7f6:	00 00                	add    BYTE PTR [rax],al
    c7f8:	00 01                	add    BYTE PTR [rcx],al
    c7fa:	9c                   	pushf
    c7fb:	e2 72                	loop   c86f <_end+0x6857>
    c7fd:	00 00                	add    BYTE PTR [rax],al
    c7ff:	05 6d 52 00 00       	add    eax,0x526d
    c804:	d3 29                	shr    DWORD PTR [rcx],cl
    c806:	00 00                	add    BYTE PTR [rax],al
    c808:	cd 29                	int    0x29
    c80a:	00 00                	add    BYTE PTR [rax],al
    c80c:	05 79 52 00 00       	add    eax,0x5279
    c811:	ee                   	out    dx,al
    c812:	29 00                	sub    DWORD PTR [rax],eax
    c814:	00 ec                	add    ah,ch
    c816:	29 00                	sub    DWORD PTR [rax],eax
    c818:	00 05 85 52 00 00    	add    BYTE PTR [rip+0x5285],al        # 11aa3 <_end+0xba8b>
    c81e:	01 2a                	add    DWORD PTR [rdx],ebp
    c820:	00 00                	add    BYTE PTR [rax],al
    c822:	fb                   	sti
    c823:	29 00                	sub    DWORD PTR [rax],eax
    c825:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 11abc <_end+0xbaa4>
    c82b:	2c 2a                	sub    al,0x2a
    c82d:	00 00                	add    BYTE PTR [rax],al
    c82f:	26 2a 00             	es sub al,BYTE PTR [rax]
    c832:	00 15 9d 52 00 00    	add    BYTE PTR [rip+0x529d],dl        # 11ad5 <_end+0xbabd>
    c838:	4b 2a 00             	rex.WXB sub al,BYTE PTR [r8]
    c83b:	00 45 2a             	add    BYTE PTR [rbp+0x2a],al
    c83e:	00 00                	add    BYTE PTR [rax],al
    c840:	0a e7                	or     ah,bh
    c842:	2e 00 00             	cs add BYTE PTR [rax],al
    c845:	00 00                	add    BYTE PTR [rax],al
    c847:	00 00                	add    BYTE PTR [rax],al
    c849:	e5 3c                	in     eax,0x3c
    c84b:	00 00                	add    BYTE PTR [rax],al
    c84d:	b0 72                	mov    al,0x72
    c84f:	00 00                	add    BYTE PTR [rax],al
    c851:	03 01                	add    eax,DWORD PTR [rcx]
    c853:	54                   	push   rsp
    c854:	09 03                	or     DWORD PTR [rbx],eax
    c856:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c85a:	00 00                	add    BYTE PTR [rax],al
    c85c:	00 00                	add    BYTE PTR [rax],al
    c85e:	00 0a                	add    BYTE PTR [rdx],cl
    c860:	fe                   	(bad)
    c861:	2e 00 00             	cs add BYTE PTR [rax],al
    c864:	00 00                	add    BYTE PTR [rax],al
    c866:	00 00                	add    BYTE PTR [rax],al
    c868:	4d                   	rex.WRB
    c869:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c86c:	d4                   	(bad)
    c86d:	72 00                	jb     c86f <_end+0x6857>
    c86f:	00 03                	add    BYTE PTR [rbx],al
    c871:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c874:	73 00                	jae    c876 <_end+0x685e>
    c876:	03 01                	add    eax,DWORD PTR [rcx]
    c878:	54                   	push   rsp
    c879:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    c87c:	03 01                	add    eax,DWORD PTR [rcx]
    c87e:	58                   	pop    rax
    c87f:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c882:	00 64 0e 2f          	add    BYTE PTR [rsi+rcx*1+0x2f],ah
    c886:	00 00                	add    BYTE PTR [rax],al
    c888:	00 00                	add    BYTE PTR [rax],al
    c88a:	00 00                	add    BYTE PTR [rax],al
    c88c:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    c88f:	00 00                	add    BYTE PTR [rax],al
    c891:	4e e1 45             	rex.WRX loope c8d9 <_end+0x68c1>
    c894:	00 00                	add    BYTE PTR [rax],al
    c896:	7e 34                	jle    c8cc <_end+0x68b4>
    c898:	00 00                	add    BYTE PTR [rax],al
    c89a:	c0 36 00             	shl    BYTE PTR [rsi],0x0
    c89d:	00 00                	add    BYTE PTR [rax],al
    c89f:	00 00                	add    BYTE PTR [rax],al
    c8a1:	00 5b 01             	add    BYTE PTR [rbx+0x1],bl
    c8a4:	00 00                	add    BYTE PTR [rax],al
    c8a6:	00 00                	add    BYTE PTR [rax],al
    c8a8:	00 00                	add    BYTE PTR [rax],al
    c8aa:	01 9c 20 74 00 00 05 	add    DWORD PTR [rax+riz*1+0x5000074],ebx
    c8b1:	f4                   	hlt
    c8b2:	45 00 00             	add    BYTE PTR [r8],r8b
    c8b5:	73 2a                	jae    c8e1 <_end+0x68c9>
    c8b7:	00 00                	add    BYTE PTR [rax],al
    c8b9:	61                   	(bad)
    c8ba:	2a 00                	sub    al,BYTE PTR [rax]
    c8bc:	00 05 00 46 00 00    	add    BYTE PTR [rip+0x4600],al        # 10ec2 <_end+0xaeaa>
    c8c2:	cc                   	int3
    c8c3:	2a 00                	sub    al,BYTE PTR [rax]
    c8c5:	00 bc 2a 00 00 05 0c 	add    BYTE PTR [rdx+rbp*1+0xc050000],bh
    c8cc:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c8cf:	24 2b                	and    al,0x2b
    c8d1:	00 00                	add    BYTE PTR [rax],al
    c8d3:	0e                   	(bad)
    c8d4:	2b 00                	sub    eax,DWORD PTR [rax]
    c8d6:	00 15 21 46 00 00    	add    BYTE PTR [rip+0x4621],dl        # 10efd <_end+0xaee5>
    c8dc:	96                   	xchg   esi,eax
    c8dd:	2b 00                	sub    eax,DWORD PTR [rax]
    c8df:	00 86 2b 00 00 3a    	add    BYTE PTR [rsi+0x3a00002b],al
    c8e5:	2c 46                	sub    al,0x46
    c8e7:	00 00                	add    BYTE PTR [rax],al
    c8e9:	1f                   	(bad)
    c8ea:	04 00                	add    al,0x0
    c8ec:	00 50 73             	add    BYTE PTR [rax+0x73],dl
    c8ef:	00 00                	add    BYTE PTR [rax],al
    c8f1:	15 2d 46 00 00       	adc    eax,0x462d
    c8f6:	ea                   	(bad)
    c8f7:	2b 00                	sub    eax,DWORD PTR [rax]
    c8f9:	00 e6                	add    dh,ah
    c8fb:	2b 00                	sub    eax,DWORD PTR [rax]
    c8fd:	00 00                	add    BYTE PTR [rax],al
    c8ff:	1c 1a                	sbb    al,0x1a
    c901:	72 00                	jb     c903 <_end+0x68eb>
    c903:	00 b5 37 00 00 00    	add    BYTE PTR [rbp+0x37],dh
    c909:	00 00                	add    BYTE PTR [rax],al
    c90b:	00 00                	add    BYTE PTR [rax],al
    c90d:	00 2f                	add    BYTE PTR [rdi],ch
    c90f:	04 00                	add    al,0x0
    c911:	00 af 1e 84 73 00    	add    BYTE PTR [rdi+0x73841e],ch
    c917:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13b40 <_end+0xdb28>
    c91d:	01 2c 00             	add    DWORD PTR [rax+rax*1],ebp
    c920:	00 fb                	add    bl,bh
    c922:	2b 00                	sub    eax,DWORD PTR [rax]
    c924:	00 20                	add    BYTE PTR [rax],ah
    c926:	fa                   	cli
    c927:	37                   	(bad)
    c928:	00 00                	add    BYTE PTR [rax],al
    c92a:	00 00                	add    BYTE PTR [rax],al
    c92c:	00 00                	add    BYTE PTR [rax],al
    c92e:	64 75 00             	fs jne c931 <_end+0x6919>
    c931:	00 00                	add    BYTE PTR [rax],al
    c933:	09 e1                	or     ecx,esp
    c935:	45 00 00             	add    BYTE PTR [r8],r8b
    c938:	fc                   	cld
    c939:	37                   	(bad)
    c93a:	00 00                	add    BYTE PTR [rax],al
    c93c:	00 00                	add    BYTE PTR [rax],al
    c93e:	00 00                	add    BYTE PTR [rax],al
    c940:	01 00                	add    DWORD PTR [rax],eax
    c942:	fc                   	cld
    c943:	37                   	(bad)
    c944:	00 00                	add    BYTE PTR [rax],al
    c946:	00 00                	add    BYTE PTR [rax],al
    c948:	00 00                	add    BYTE PTR [rax],al
    c94a:	1f                   	(bad)
    c94b:	00 00                	add    BYTE PTR [rax],al
    c94d:	00 00                	add    BYTE PTR [rax],al
    c94f:	00 00                	add    BYTE PTR [rax],al
    c951:	00 a8 08 09 74 00    	add    BYTE PTR [rax+0x740908],ch
    c957:	00 65 f4             	add    BYTE PTR [rbp-0xc],ah
    c95a:	45 00 00             	add    BYTE PTR [r8],r8b
    c95d:	05 00 46 00 00       	add    eax,0x4600
    c962:	1b 2c 00             	sbb    ebp,DWORD PTR [rax+rax*1]
    c965:	00 17                	add    BYTE PTR [rdi],dl
    c967:	2c 00                	sub    al,0x0
    c969:	00 05 0c 46 00 00    	add    BYTE PTR [rip+0x460c],al        # 10f7b <_end+0xaf63>
    c96f:	31 2c 00             	xor    DWORD PTR [rax+rax*1],ebp
    c972:	00 2d 2c 00 00 3b    	add    BYTE PTR [rip+0x3b00002c],ch        # 3b00c9a4 <_end+0x3b00698c>
    c978:	21 46 00             	and    DWORD PTR [rsi+0x0],eax
    c97b:	00 07                	add    BYTE PTR [rdi],al
    c97d:	1b 38                	sbb    edi,DWORD PTR [rax]
    c97f:	00 00                	add    BYTE PTR [rax],al
    c981:	00 00                	add    BYTE PTR [rax],al
    c983:	00 00                	add    BYTE PTR [rax],al
    c985:	3f                   	(bad)
    c986:	44 00 00             	add    BYTE PTR [rax],r8b
    c989:	03 01                	add    eax,DWORD PTR [rcx]
    c98b:	55                   	push   rbp
    c98c:	09 03                	or     DWORD PTR [rbx],eax
    c98e:	f9                   	stc
    c98f:	41 00 00             	add    BYTE PTR [r8],al
    c992:	00 00                	add    BYTE PTR [rax],al
    c994:	00 00                	add    BYTE PTR [rax],al
    c996:	03 01                	add    eax,DWORD PTR [rcx]
    c998:	54                   	push   rsp
    c999:	09 03                	or     DWORD PTR [rbx],eax
    c99b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c99c:	41 00 00             	add    BYTE PTR [r8],al
    c99f:	00 00                	add    BYTE PTR [rax],al
    c9a1:	00 00                	add    BYTE PTR [rax],al
    c9a3:	03 01                	add    eax,DWORD PTR [rcx]
    c9a5:	51                   	push   rcx
    c9a6:	02 08                	add    cl,BYTE PTR [rax]
    c9a8:	a9 03 01 52 09       	test   eax,0x9520103
    c9ad:	03 e8                	add    ebp,eax
    c9af:	44 00 00             	add    BYTE PTR [rax],r8b
    c9b2:	00 00                	add    BYTE PTR [rax],al
    c9b4:	00 00                	add    BYTE PTR [rax],al
    c9b6:	00 00                	add    BYTE PTR [rax],al
    c9b8:	27                   	(bad)
    c9b9:	60                   	(bad)
    c9ba:	37                   	(bad)
    c9bb:	00 00                	add    BYTE PTR [rax],al
    c9bd:	00 00                	add    BYTE PTR [rax],al
    c9bf:	00 00                	add    BYTE PTR [rax],al
    c9c1:	01 30                	add    DWORD PTR [rax],esi
    c9c3:	27                   	(bad)
    c9c4:	db 37                	(bad)  [rdi]
    c9c6:	00 00                	add    BYTE PTR [rax],al
    c9c8:	00 00                	add    BYTE PTR [rax],al
    c9ca:	00 00                	add    BYTE PTR [rax],al
    c9cc:	01 30                	add    DWORD PTR [rax],esi
    c9ce:	00 4e 74             	add    BYTE PTR [rsi+0x74],cl
    c9d1:	45 00 00             	add    BYTE PTR [r8],r8b
    c9d4:	ea                   	(bad)
    c9d5:	2e 00 00             	cs add BYTE PTR [rax],al
    c9d8:	20 38                	and    BYTE PTR [rax],bh
    c9da:	00 00                	add    BYTE PTR [rax],al
    c9dc:	00 00                	add    BYTE PTR [rax],al
    c9de:	00 00                	add    BYTE PTR [rax],al
    c9e0:	1c 03                	sbb    al,0x3
    c9e2:	00 00                	add    BYTE PTR [rax],al
    c9e4:	00 00                	add    BYTE PTR [rax],al
    c9e6:	00 00                	add    BYTE PTR [rax],al
    c9e8:	01 9c 5b 75 00 00 05 	add    DWORD PTR [rbx+rbx*2+0x5000075],ebx
    c9ef:	87 45 00             	xchg   DWORD PTR [rbp+0x0],eax
    c9f2:	00 51 2c             	add    BYTE PTR [rcx+0x2c],dl
    c9f5:	00 00                	add    BYTE PTR [rax],al
    c9f7:	45 2c 00             	rex.RB sub al,0x0
    c9fa:	00 05 93 45 00 00    	add    BYTE PTR [rip+0x4593],al        # 10f93 <_end+0xaf7b>
    ca00:	99                   	cdq
    ca01:	2c 00                	sub    al,0x0
    ca03:	00 85 2c 00 00 15    	add    BYTE PTR [rbp+0x1500002c],al
    ca09:	a8 45                	test   al,0x45
    ca0b:	00 00                	add    BYTE PTR [rax],al
    ca0d:	fd                   	std
    ca0e:	2c 00                	sub    al,0x0
    ca10:	00 ef                	add    bh,ch
    ca12:	2c 00                	sub    al,0x0
    ca14:	00 3a                	add    BYTE PTR [rdx],bh
    ca16:	b3 45                	mov    bl,0x45
    ca18:	00 00                	add    BYTE PTR [rax],al
    ca1a:	3f                   	(bad)
    ca1b:	04 00                	add    al,0x0
    ca1d:	00 98 74 00 00 15    	add    BYTE PTR [rax+0x15000074],bl
    ca23:	b4 45                	mov    ah,0x45
    ca25:	00 00                	add    BYTE PTR [rax],al
    ca27:	4a 2d 00 00 3e 2d    	rex.WX sub rax,0x2d3e0000
    ca2d:	00 00                	add    BYTE PTR [rax],al
    ca2f:	4d bd 45 00 00 4f 04 	rex.WRB movabs r13,0x150000044f000045
    ca36:	00 00 15 
    ca39:	be 45 00 00 80       	mov    esi,0x80000045
    ca3e:	2d 00 00 7a 2d       	sub    eax,0x2d7a0000
    ca43:	00 00                	add    BYTE PTR [rax],al
    ca45:	00 00                	add    BYTE PTR [rax],al
    ca47:	1c 1a                	sbb    al,0x1a
    ca49:	72 00                	jb     ca4b <_end+0x6a33>
    ca4b:	00 b9 3a 00 00 00    	add    BYTE PTR [rcx+0x3a],bh
    ca51:	00 00                	add    BYTE PTR [rax],al
    ca53:	00 00                	add    BYTE PTR [rax],al
    ca55:	00 78 04             	add    BYTE PTR [rax+0x4],bh
    ca58:	00 00                	add    BYTE PTR [rax],al
    ca5a:	bc 1e cc 74 00       	mov    esp,0x74cc1e
    ca5f:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13c88 <_end+0xdc70>
    ca65:	c6                   	(bad)
    ca66:	2d 00 00 c0 2d       	sub    eax,0x2dc00000
    ca6b:	00 00                	add    BYTE PTR [rax],al
    ca6d:	64 1d 3b 00 00 00    	fs sbb eax,0x3b
    ca73:	00 00                	add    BYTE PTR [rax],al
    ca75:	00 64 75 00          	add    BYTE PTR [rbp+rsi*2+0x0],ah
    ca79:	00 00                	add    BYTE PTR [rax],al
    ca7b:	09 74 45 00          	or     DWORD PTR [rbp+rax*2+0x0],esi
    ca7f:	00 1d 3b 00 00 00    	add    BYTE PTR [rip+0x3b],bl        # cac0 <_end+0x6aa8>
    ca85:	00 00                	add    BYTE PTR [rax],al
    ca87:	00 01                	add    BYTE PTR [rcx],al
    ca89:	00 1d 3b 00 00 00    	add    BYTE PTR [rip+0x3b],bl        # caca <_end+0x6ab2>
    ca8f:	00 00                	add    BYTE PTR [rax],al
    ca91:	00 1f                	add    BYTE PTR [rdi],bl
    ca93:	00 00                	add    BYTE PTR [rax],al
    ca95:	00 00                	add    BYTE PTR [rax],al
    ca97:	00 00                	add    BYTE PTR [rax],al
    ca99:	00 b4 07 44 75 00 00 	add    BYTE PTR [rdi+rax*1+0x7544],dh
    caa0:	65 87 45 00          	xchg   DWORD PTR gs:[rbp+0x0],eax
    caa4:	00 05 93 45 00 00    	add    BYTE PTR [rip+0x4593],al        # 1103d <_end+0xb025>
    caaa:	e0 2d                	loopne cad9 <_end+0x6ac1>
    caac:	00 00                	add    BYTE PTR [rax],al
    caae:	dc 2d 00 00 3b a8    	fsubr  QWORD PTR [rip+0xffffffffa83b0000]        # ffffffffa83bcab4 <_end+0xffffffffa83b6a9c>
    cab4:	45 00 00             	add    BYTE PTR [r8],r8b
    cab7:	07                   	(bad)
    cab8:	3c 3b                	cmp    al,0x3b
    caba:	00 00                	add    BYTE PTR [rax],al
    cabc:	00 00                	add    BYTE PTR [rax],al
    cabe:	00 00                	add    BYTE PTR [rax],al
    cac0:	3f                   	(bad)
    cac1:	44 00 00             	add    BYTE PTR [rax],r8b
    cac4:	03 01                	add    eax,DWORD PTR [rcx]
    cac6:	55                   	push   rbp
    cac7:	09 03                	or     DWORD PTR [rbx],eax
    cac9:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    cacc:	00 00                	add    BYTE PTR [rax],al
    cace:	00 00                	add    BYTE PTR [rax],al
    cad0:	00 03                	add    BYTE PTR [rbx],al
    cad2:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    cad6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cad7:	41 00 00             	add    BYTE PTR [r8],al
    cada:	00 00                	add    BYTE PTR [rax],al
    cadc:	00 00                	add    BYTE PTR [rax],al
    cade:	03 01                	add    eax,DWORD PTR [rcx]
    cae0:	51                   	push   rcx
    cae1:	02 08                	add    cl,BYTE PTR [rax]
    cae3:	b5 03                	mov    ch,0x3
    cae5:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    cae8:	03 98 46 00 00 00    	add    ebx,DWORD PTR [rax+0x46]
    caee:	00 00                	add    BYTE PTR [rax],al
    caf0:	00 00                	add    BYTE PTR [rax],al
    caf2:	00 27                	add    BYTE PTR [rdi],ah
    caf4:	b6 39                	mov    dh,0x39
    caf6:	00 00                	add    BYTE PTR [rax],al
    caf8:	00 00                	add    BYTE PTR [rax],al
    cafa:	00 00                	add    BYTE PTR [rax],al
    cafc:	01 30                	add    DWORD PTR [rax],esi
    cafe:	27                   	(bad)
    caff:	fb                   	sti
    cb00:	3a 00                	cmp    al,BYTE PTR [rax]
    cb02:	00 00                	add    BYTE PTR [rax],al
    cb04:	00 00                	add    BYTE PTR [rax],al
    cb06:	00 01                	add    BYTE PTR [rcx],al
    cb08:	30 00                	xor    BYTE PTR [rax],al
    cb0a:	3c e7                	cmp    al,0xe7
    cb0c:	1c 00                	sbb    al,0x0
    cb0e:	00 dd                	add    ch,bl
    cb10:	1c 00                	sbb    al,0x0
    cb12:	00 3c 8c             	add    BYTE PTR [rsp+rcx*4],bh
    cb15:	22 00                	and    al,BYTE PTR [rax]
    cb17:	00 96 1c 00 00 3c    	add    BYTE PTR [rsi+0x3c00001c],dl
    cb1d:	ba 05 00 00 ba       	mov    edx,0xba000005
    cb22:	05 00 00 24 23       	add    eax,0x23240000
    cb27:	9e                   	sahf
    cb28:	21 0a                	and    DWORD PTR [rdx],ecx
    cb2a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb2f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb34:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb39:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb3e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb43:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb48:	0a 00                	or     al,BYTE PTR [rax]
    cb4a:	3c e3                	cmp    al,0xe3
    cb4c:	03 00                	add    eax,DWORD PTR [rax]
    cb4e:	00 d9                	add    cl,bl
    cb50:	03 00                	add    eax,DWORD PTR [rax]
    cb52:	00 24 09             	add    BYTE PTR [rcx+rcx*1],ah
    cb55:	9e                   	sahf
    cb56:	07                   	(bad)
    cb57:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cb5a:	33 32                	xor    esi,DWORD PTR [rdx]
    cb5c:	0a 00                	or     al,BYTE PTR [rax]
    cb5e:	24 22                	and    al,0x22
    cb60:	9e                   	sahf
    cb61:	20 2d 2d 2d 2d 2d    	and    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2df894 <_end+0x2d2d987c>
    cb67:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb6c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb71:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb76:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb7b:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cb80:	0a 00                	or     al,BYTE PTR [rax]
    cb82:	24 22                	and    al,0x22
    cb84:	9e                   	sahf
    cb85:	20 3d 3d 3d 3d 3d    	and    BYTE PTR [rip+0x3d3d3d3d],bh        # 3d3e08c8 <_end+0x3d3da8b0>
    cb8b:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb90:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb95:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb9a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cb9f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cba4:	0a 00                	or     al,BYTE PTR [rax]
    cba6:	24 0d                	and    al,0xd
    cba8:	9e                   	sahf
    cba9:	0b 5f 6d             	or     ebx,DWORD PTR [rdi+0x6d]
    cbac:	6d                   	ins    DWORD PTR es:[rdi],dx
    cbad:	5f                   	pop    rdi
    cbae:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cbb1:	33 32                	xor    esi,DWORD PTR [rdx]
    cbb3:	0a 00                	or     al,BYTE PTR [rax]
    cbb5:	24 0b                	and    al,0xb
    cbb7:	9e                   	sahf
    cbb8:	09 6d 75             	or     DWORD PTR [rbp+0x75],ebp
    cbbb:	72 6d                	jb     cc2a <_end+0x6c12>
    cbbd:	75 72                	jne    cc31 <_end+0x6c19>
    cbbf:	32 0a                	xor    cl,BYTE PTR [rdx]
    cbc1:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cbc4:	9e                   	sahf
    cbc5:	05 73 75 6d 0a       	add    eax,0xa6d7573
    cbca:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
    cbcd:	9e                   	sahf
    cbce:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    cbd1:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbd2:	65 72 33             	gs jb  cc08 <_end+0x6bf0>
    cbd5:	32 0a                	xor    cl,BYTE PTR [rdx]
    cbd7:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cbda:	9e                   	sahf
    cbdb:	05 65 6c 66 0a       	add    eax,0xa666c65
    cbe0:	00 24 13             	add    BYTE PTR [rbx+rdx*1],ah
    cbe3:	9e                   	sahf
    cbe4:	11 5f 6d             	adc    DWORD PTR [rdi+0x6d],ebx
    cbe7:	6d                   	ins    DWORD PTR es:[rdi],dx
    cbe8:	5f                   	pop    rdi
    cbe9:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cbec:	33 32                	xor    esi,DWORD PTR [rdx]
    cbee:	55                   	push   rbp
    cbef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cbf0:	72 6f                	jb     cc61 <_end+0x6c49>
    cbf2:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbf3:	6c                   	ins    BYTE PTR es:[rdi],dx
    cbf4:	0a 00                	or     al,BYTE PTR [rax]
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <_end+0x12e8ee>
       6:	00 02                	add    BYTE PTR [rdx],al
       8:	08 00                	or     BYTE PTR [rax],al
       a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
       c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
       e:	39 0b                	cmp    DWORD PTR [rbx],ecx
      10:	18 13                	sbb    BYTE PTR [rbx],dl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      17:	0b 0b                	or     ecx,DWORD PTR [rbx]
      19:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
      1c:	0e                   	(bad)
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	04 2e                	add    al,0x2e
      21:	01 3f                	add    DWORD PTR [rdi],edi
      23:	19 03                	sbb    DWORD PTR [rbx],eax
      25:	0e                   	(bad)
      26:	3a 21                	cmp    ah,BYTE PTR [rcx]
      28:	02 3b                	add    bh,BYTE PTR [rbx]
      2a:	05 39 0b 49 13       	add    eax,0x13490b39
      2f:	3c 19                	cmp    al,0x19
      31:	01 13                	add    DWORD PTR [rbx],edx
      33:	00 00                	add    BYTE PTR [rax],al
      35:	05 0f 00 0b 21       	add    eax,0x210b000f
      3a:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
      3d:	00 00                	add    BYTE PTR [rax],al
      3f:	06                   	(bad)
      40:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      43:	19 03                	sbb    DWORD PTR [rbx],eax
      45:	0e                   	(bad)
      46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      50:	01 13                	add    DWORD PTR [rbx],edx
      52:	00 00                	add    BYTE PTR [rax],al
      54:	07                   	(bad)
      55:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      58:	19 03                	sbb    DWORD PTR [rbx],eax
      5a:	08 3a                	or     BYTE PTR [rdx],bh
      5c:	21 06                	and    DWORD PTR [rsi],eax
      5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      60:	39 21                	cmp    DWORD PTR [rcx],esp
      62:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      65:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      69:	01 13                	add    DWORD PTR [rbx],edx
      6b:	00 00                	add    BYTE PTR [rax],al
      6d:	08 16                	or     BYTE PTR [rsi],dl
      6f:	00 03                	add    BYTE PTR [rbx],al
      71:	0e                   	(bad)
      72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      76:	39 0b                	cmp    DWORD PTR [rbx],ecx
      78:	49 13 00             	adc    rax,QWORD PTR [r8]
      7b:	00 09                	add    BYTE PTR [rcx],cl
      7d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
      81:	00 00                	add    BYTE PTR [rax],al
      83:	0a 2e                	or     ch,BYTE PTR [rsi]
      85:	01 3f                	add    DWORD PTR [rdi],edi
      87:	19 03                	sbb    DWORD PTR [rbx],eax
      89:	0e                   	(bad)
      8a:	3a 21                	cmp    ah,BYTE PTR [rcx]
      8c:	02 3b                	add    bh,BYTE PTR [rbx]
      8e:	0b 39                	or     edi,DWORD PTR [rcx]
      90:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
      93:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      97:	01 13                	add    DWORD PTR [rbx],edx
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	0b 49 00             	or     ecx,DWORD PTR [rcx+0x0]
      9e:	02 18                	add    bl,BYTE PTR [rax]
      a0:	7e 18                	jle    ba <__abi_tag-0x2c2>
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	0c 13                	or     al,0x13
      a6:	01 0b                	add    DWORD PTR [rbx],ecx
      a8:	0b 3a                	or     edi,DWORD PTR [rdx]
      aa:	21 02                	and    DWORD PTR [rdx],eax
      ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ae:	39 21                	cmp    DWORD PTR [rcx],esp
      b0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      b3:	01 13                	add    DWORD PTR [rbx],edx
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	0d 0d 00 03 0e       	or     eax,0xe03000d
      bc:	3a 21                	cmp    ah,BYTE PTR [rcx]
      be:	02 3b                	add    bh,BYTE PTR [rbx]
      c0:	0b 39                	or     edi,DWORD PTR [rcx]
      c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      c5:	38 21                	cmp    BYTE PTR [rcx],ah
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 0e                	add    BYTE PTR [rsi],cl
      cb:	0d 00 03 08 3a       	or     eax,0x3a080300
      d0:	21 02                	and    DWORD PTR [rdx],eax
      d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d6:	49 13 38             	adc    rdi,QWORD PTR [r8]
      d9:	0b 00                	or     eax,DWORD PTR [rax]
      db:	00 0f                	add    BYTE PTR [rdi],cl
      dd:	34 00                	xor    al,0x0
      df:	03 0e                	add    ecx,DWORD PTR [rsi]
      e1:	3a 21                	cmp    ah,BYTE PTR [rcx]
      e3:	0c 3b                	or     al,0x3b
      e5:	0b 39                	or     edi,DWORD PTR [rcx]
      e7:	21 0b                	and    DWORD PTR [rbx],ecx
      e9:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
      ed:	00 00                	add    BYTE PTR [rax],al
      ef:	10 2e                	adc    BYTE PTR [rsi],ch
      f1:	01 3f                	add    DWORD PTR [rdi],edi
      f3:	19 03                	sbb    DWORD PTR [rbx],eax
      f5:	08 3a                	or     BYTE PTR [rdx],bh
      f7:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 21390c38 <_end+0x2138ac20>
      fd:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     100:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     104:	00 00                	add    BYTE PTR [rax],al
     106:	11 2e                	adc    DWORD PTR [rsi],ebp
     108:	01 3f                	add    DWORD PTR [rdi],edi
     10a:	19 03                	sbb    DWORD PTR [rbx],eax
     10c:	0e                   	(bad)
     10d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     10f:	02 3b                	add    bh,BYTE PTR [rbx]
     111:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     116:	19 01                	sbb    DWORD PTR [rcx],eax
     118:	13 00                	adc    eax,DWORD PTR [rax]
     11a:	00 12                	add    BYTE PTR [rdx],dl
     11c:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     121:	21 01                	and    DWORD PTR [rcx],eax
     123:	3b 21                	cmp    esp,DWORD PTR [rcx]
     125:	07                   	(bad)
     126:	39 0b                	cmp    DWORD PTR [rbx],ecx
     128:	49 13 02             	adc    rax,QWORD PTR [r10]
     12b:	17                   	(bad)
     12c:	b7 42                	mov    bh,0x42
     12e:	17                   	(bad)
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	13 48 01             	adc    ecx,DWORD PTR [rax+0x1]
     134:	7d 01                	jge    137 <__abi_tag-0x245>
     136:	7f 13                	jg     14b <__abi_tag-0x231>
     138:	00 00                	add    BYTE PTR [rax],al
     13a:	14 11                	adc    al,0x11
     13c:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1450 <_end+0x30ab438>
     142:	1f                   	(bad)
     143:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     145:	55                   	push   rbp
     146:	17                   	(bad)
     147:	11 01                	adc    DWORD PTR [rcx],eax
     149:	10 17                	adc    BYTE PTR [rdi],dl
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	15 0f 00 0b 0b       	adc    eax,0xb0b000f
     152:	00 00                	add    BYTE PTR [rax],al
     154:	16                   	(bad)
     155:	24 00                	and    al,0x0
     157:	0b 0b                	or     ecx,DWORD PTR [rbx]
     159:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     15c:	08 00                	or     BYTE PTR [rax],al
     15e:	00 17                	add    BYTE PTR [rdi],dl
     160:	16                   	(bad)
     161:	00 03                	add    BYTE PTR [rbx],al
     163:	0e                   	(bad)
     164:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     166:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490ca5 <_end+0x1348ac8d>
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	18 15 01 49 13 01    	sbb    BYTE PTR [rip+0x1134901],dl        # 1134a75 <_end+0x112ea5d>
     174:	13 00                	adc    eax,DWORD PTR [rax]
     176:	00 19                	add    BYTE PTR [rcx],bl
     178:	26 00 00             	es add BYTE PTR [rax],al
     17b:	00 1a                	add    BYTE PTR [rdx],bl
     17d:	39 01                	cmp    DWORD PTR [rcx],eax
     17f:	03 08                	add    ecx,DWORD PTR [rax]
     181:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     183:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010cc2 <_end+0x1300acaa>
     189:	00 00                	add    BYTE PTR [rax],al
     18b:	1b 08                	sbb    ecx,DWORD PTR [rax]
     18d:	00 3a                	add    BYTE PTR [rdx],bh
     18f:	0b 3b                	or     edi,DWORD PTR [rbx]
     191:	05 39 0b 18 13       	add    eax,0x13180b39
     196:	00 00                	add    BYTE PTR [rax],al
     198:	1c 15                	sbb    al,0x15
     19a:	00 00                	add    BYTE PTR [rax],al
     19c:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f02d0 <_end+0x193ea2b8>
     1a2:	03 0e                	add    ecx,DWORD PTR [rsi]
     1a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1a6:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0ce5 <_end+0xe6daccd>
     1ac:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     1b0:	01 13                	add    DWORD PTR [rbx],edx
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	1e                   	(bad)
     1b5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1b8:	19 03                	sbb    DWORD PTR [rbx],eax
     1ba:	0e                   	(bad)
     1bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1bd:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cfc <_end+0x1348ace4>
     1c3:	20 0b                	and    BYTE PTR [rbx],cl
     1c5:	01 13                	add    DWORD PTR [rbx],edx
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	1f                   	(bad)
     1ca:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     1cf:	0b 3b                	or     edi,DWORD PTR [rbx]
     1d1:	05 39 0b 49 13       	add    eax,0x13490b39
     1d6:	00 00                	add    BYTE PTR [rax],al
     1d8:	20 2e                	and    BYTE PTR [rsi],ch
     1da:	01 3f                	add    DWORD PTR [rdi],edi
     1dc:	19 03                	sbb    DWORD PTR [rbx],eax
     1de:	08 3a                	or     BYTE PTR [rdx],bh
     1e0:	0b 3b                	or     edi,DWORD PTR [rbx]
     1e2:	05 39 0b 49 13       	add    eax,0x13490b39
     1e7:	3c 19                	cmp    al,0x19
     1e9:	01 13                	add    DWORD PTR [rbx],edx
     1eb:	00 00                	add    BYTE PTR [rax],al
     1ed:	21 2e                	and    DWORD PTR [rsi],ebp
     1ef:	01 3f                	add    DWORD PTR [rdi],edi
     1f1:	19 03                	sbb    DWORD PTR [rbx],eax
     1f3:	0e                   	(bad)
     1f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1f6:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1870d35 <_end+0x186ad1d>
     1fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     1ff:	01 13                	add    DWORD PTR [rbx],edx
     201:	00 00                	add    BYTE PTR [rax],al
     203:	22 2e                	and    ch,BYTE PTR [rsi]
     205:	00 3f                	add    BYTE PTR [rdi],bh
     207:	19 03                	sbb    DWORD PTR [rbx],eax
     209:	0e                   	(bad)
     20a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     20c:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d4b <_end+0x1348ad33>
     212:	3c 19                	cmp    al,0x19
     214:	00 00                	add    BYTE PTR [rax],al
     216:	23 39                	and    edi,DWORD PTR [rcx]
     218:	01 03                	add    DWORD PTR [rbx],eax
     21a:	0e                   	(bad)
     21b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     21d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010d5c <_end+0x1300ad44>
     223:	00 00                	add    BYTE PTR [rax],al
     225:	24 34                	and    al,0x34
     227:	00 03                	add    BYTE PTR [rbx],al
     229:	0e                   	(bad)
     22a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     22c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     22e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     230:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     234:	00 00                	add    BYTE PTR [rax],al
     236:	25 2e 01 3f 19       	and    eax,0x193f012e
     23b:	03 0e                	add    ecx,DWORD PTR [rsi]
     23d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     23f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     241:	39 0b                	cmp    DWORD PTR [rbx],ecx
     243:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     244:	0e                   	(bad)
     245:	3c 19                	cmp    al,0x19
     247:	01 13                	add    DWORD PTR [rbx],edx
     249:	00 00                	add    BYTE PTR [rax],al
     24b:	26 2e 01 3f          	es cs add DWORD PTR [rdi],edi
     24f:	19 03                	sbb    DWORD PTR [rbx],eax
     251:	0e                   	(bad)
     252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     256:	39 0b                	cmp    DWORD PTR [rbx],ecx
     258:	49 13 11             	adc    rdx,QWORD PTR [r9]
     25b:	01 12                	add    DWORD PTR [rdx],edx
     25d:	07                   	(bad)
     25e:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     262:	00 00                	add    BYTE PTR [rax],al
     264:	27                   	(bad)
     265:	1d 01 31 13 52       	sbb    eax,0x52133101
     26a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     270:	58                   	pop    rax
     271:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     274:	57                   	push   rdi
     275:	0b 01                	or     eax,DWORD PTR [rcx]
     277:	13 00                	adc    eax,DWORD PTR [rax]
     279:	00 28                	add    BYTE PTR [rax],ch
     27b:	05 00 31 13 02       	add    eax,0x2133100
     280:	17                   	(bad)
     281:	b7 42                	mov    bh,0x42
     283:	17                   	(bad)
     284:	00 00                	add    BYTE PTR [rax],al
     286:	00 01                	add    BYTE PTR [rcx],al
     288:	05 00 49 13 00       	add    eax,0x134900
     28d:	00 02                	add    BYTE PTR [rdx],al
     28f:	08 00                	or     BYTE PTR [rax],al
     291:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     293:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     295:	39 0b                	cmp    DWORD PTR [rbx],ecx
     297:	18 13                	sbb    BYTE PTR [rbx],dl
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     29e:	02 18                	add    bl,BYTE PTR [rax]
     2a0:	7e 18                	jle    2ba <__abi_tag-0xc2>
     2a2:	00 00                	add    BYTE PTR [rax],al
     2a4:	04 24                	add    al,0x24
     2a6:	00 0b                	add    BYTE PTR [rbx],cl
     2a8:	0b 3e                	or     edi,DWORD PTR [rsi]
     2aa:	0b 03                	or     eax,DWORD PTR [rbx]
     2ac:	0e                   	(bad)
     2ad:	00 00                	add    BYTE PTR [rax],al
     2af:	05 05 00 31 13       	add    eax,0x13310005
     2b4:	02 17                	add    dl,BYTE PTR [rdi]
     2b6:	b7 42                	mov    bh,0x42
     2b8:	17                   	(bad)
     2b9:	00 00                	add    BYTE PTR [rax],al
     2bb:	06                   	(bad)
     2bc:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     2c1:	0b 3b                	or     edi,DWORD PTR [rbx]
     2c3:	0b 39                	or     edi,DWORD PTR [rcx]
     2c5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2c8:	38 0b                	cmp    BYTE PTR [rbx],cl
     2ca:	00 00                	add    BYTE PTR [rax],al
     2cc:	07                   	(bad)
     2cd:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     2d1:	7f 13                	jg     2e6 <__abi_tag-0x96>
     2d3:	00 00                	add    BYTE PTR [rax],al
     2d5:	08 0f                	or     BYTE PTR [rdi],cl
     2d7:	00 0b                	add    BYTE PTR [rbx],cl
     2d9:	21 08                	and    DWORD PTR [rax],ecx
     2db:	49 13 00             	adc    rax,QWORD PTR [r8]
     2de:	00 09                	add    BYTE PTR [rcx],cl
     2e0:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     2e5:	0b 3b                	or     edi,DWORD PTR [rbx]
     2e7:	0b 39                	or     edi,DWORD PTR [rcx]
     2e9:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2ec:	00 00                	add    BYTE PTR [rax],al
     2ee:	0a 16                	or     dl,BYTE PTR [rsi]
     2f0:	00 03                	add    BYTE PTR [rbx],al
     2f2:	0e                   	(bad)
     2f3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2f5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2f7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2f9:	49 13 00             	adc    rax,QWORD PTR [r8]
     2fc:	00 0b                	add    BYTE PTR [rbx],cl
     2fe:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     301:	19 03                	sbb    DWORD PTR [rbx],eax
     303:	0e                   	(bad)
     304:	3a 21                	cmp    ah,BYTE PTR [rcx]
     306:	06                   	(bad)
     307:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490e46 <_end+0x1348ae2e>
     30d:	3c 19                	cmp    al,0x19
     30f:	01 13                	add    DWORD PTR [rbx],edx
     311:	00 00                	add    BYTE PTR [rax],al
     313:	0c 48                	or     al,0x48
     315:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     318:	7f 13                	jg     32d <__abi_tag-0x4f>
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	0d 2e 01 3f 19       	or     eax,0x193f012e
     321:	03 0e                	add    ecx,DWORD PTR [rsi]
     323:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     325:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     327:	39 0b                	cmp    DWORD PTR [rbx],ecx
     329:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     32d:	01 13                	add    DWORD PTR [rbx],edx
     32f:	00 00                	add    BYTE PTR [rax],al
     331:	0e                   	(bad)
     332:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     337:	21 01                	and    DWORD PTR [rcx],eax
     339:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     33b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     33d:	49 13 02             	adc    rax,QWORD PTR [r10]
     340:	17                   	(bad)
     341:	b7 42                	mov    bh,0x42
     343:	17                   	(bad)
     344:	00 00                	add    BYTE PTR [rax],al
     346:	0f 34                	sysenter
     348:	00 31                	add    BYTE PTR [rcx],dh
     34a:	13 02                	adc    eax,DWORD PTR [rdx]
     34c:	17                   	(bad)
     34d:	b7 42                	mov    bh,0x42
     34f:	17                   	(bad)
     350:	00 00                	add    BYTE PTR [rax],al
     352:	10 26                	adc    BYTE PTR [rsi],ah
     354:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     357:	00 00                	add    BYTE PTR [rax],al
     359:	11 2e                	adc    DWORD PTR [rsi],ebp
     35b:	01 3f                	add    DWORD PTR [rdi],edi
     35d:	19 03                	sbb    DWORD PTR [rbx],eax
     35f:	08 3a                	or     BYTE PTR [rdx],bh
     361:	21 09                	and    DWORD PTR [rcx],ecx
     363:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     365:	39 21                	cmp    DWORD PTR [rcx],esp
     367:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     36a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     36e:	01 13                	add    DWORD PTR [rbx],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	12 2e                	adc    ch,BYTE PTR [rsi]
     374:	01 3f                	add    DWORD PTR [rdi],edi
     376:	19 03                	sbb    DWORD PTR [rbx],eax
     378:	0e                   	(bad)
     379:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     37b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     37d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     37f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     380:	0e                   	(bad)
     381:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     385:	01 13                	add    DWORD PTR [rbx],edx
     387:	00 00                	add    BYTE PTR [rax],al
     389:	13 1d 01 31 13 52    	adc    ebx,DWORD PTR [rip+0x52133101]        # 52133490 <_end+0x5212d478>
     38f:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     395:	58                   	pop    rax
     396:	21 01                	and    DWORD PTR [rcx],eax
     398:	59                   	pop    rcx
     399:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     39c:	01 13                	add    DWORD PTR [rbx],edx
     39e:	00 00                	add    BYTE PTR [rax],al
     3a0:	14 34                	adc    al,0x34
     3a2:	00 03                	add    BYTE PTR [rbx],al
     3a4:	0e                   	(bad)
     3a5:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3a7:	01 3b                	add    DWORD PTR [rbx],edi
     3a9:	0b 39                	or     edi,DWORD PTR [rcx]
     3ab:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3ae:	02 17                	add    dl,BYTE PTR [rdi]
     3b0:	b7 42                	mov    bh,0x42
     3b2:	17                   	(bad)
     3b3:	00 00                	add    BYTE PTR [rax],al
     3b5:	15 34 00 03 08       	adc    eax,0x8030034
     3ba:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3bc:	01 3b                	add    DWORD PTR [rbx],edi
     3be:	0b 39                	or     edi,DWORD PTR [rcx]
     3c0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3c3:	02 17                	add    dl,BYTE PTR [rdi]
     3c5:	b7 42                	mov    bh,0x42
     3c7:	17                   	(bad)
     3c8:	00 00                	add    BYTE PTR [rax],al
     3ca:	16                   	(bad)
     3cb:	1d 01 31 13 52       	sbb    eax,0x52133101
     3d0:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     3d6:	12 07                	adc    al,BYTE PTR [rdi]
     3d8:	58                   	pop    rax
     3d9:	21 01                	and    DWORD PTR [rcx],eax
     3db:	59                   	pop    rcx
     3dc:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     3df:	01 13                	add    DWORD PTR [rbx],edx
     3e1:	00 00                	add    BYTE PTR [rax],al
     3e3:	17                   	(bad)
     3e4:	34 00                	xor    al,0x0
     3e6:	03 0e                	add    ecx,DWORD PTR [rsi]
     3e8:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3ea:	01 3b                	add    DWORD PTR [rbx],edi
     3ec:	0b 39                	or     edi,DWORD PTR [rcx]
     3ee:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3f1:	00 00                	add    BYTE PTR [rax],al
     3f3:	18 0b                	sbb    BYTE PTR [rbx],cl
     3f5:	01 00                	add    DWORD PTR [rax],eax
     3f7:	00 19                	add    BYTE PTR [rcx],bl
     3f9:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     3fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     3ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     400:	0e                   	(bad)
     401:	03 0e                	add    ecx,DWORD PTR [rsi]
     403:	00 00                	add    BYTE PTR [rax],al
     405:	1a 13                	sbb    dl,BYTE PTR [rbx]
     407:	01 03                	add    DWORD PTR [rbx],eax
     409:	0e                   	(bad)
     40a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     40c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     40e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     410:	39 21                	cmp    DWORD PTR [rcx],esp
     412:	10 01                	adc    BYTE PTR [rcx],al
     414:	13 00                	adc    eax,DWORD PTR [rax]
     416:	00 1b                	add    BYTE PTR [rbx],bl
     418:	34 00                	xor    al,0x0
     41a:	03 0e                	add    ecx,DWORD PTR [rsi]
     41c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     41e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     420:	39 21                	cmp    DWORD PTR [rcx],esp
     422:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     425:	1c 0b                	sbb    al,0xb
     427:	00 00                	add    BYTE PTR [rax],al
     429:	1c 34                	sbb    al,0x34
     42b:	00 03                	add    BYTE PTR [rbx],al
     42d:	08 3a                	or     BYTE PTR [rdx],bh
     42f:	21 01                	and    DWORD PTR [rcx],eax
     431:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     433:	39 0b                	cmp    DWORD PTR [rbx],ecx
     435:	49 13 00             	adc    rax,QWORD PTR [r8]
     438:	00 1d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],bl        # 1349053f <_end+0x1348a527>
     43e:	01 13                	add    DWORD PTR [rbx],edx
     440:	00 00                	add    BYTE PTR [rax],al
     442:	1e                   	(bad)
     443:	21 00                	and    DWORD PTR [rax],eax
     445:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     448:	0b 00                	or     eax,DWORD PTR [rax]
     44a:	00 1f                	add    BYTE PTR [rdi],bl
     44c:	34 00                	xor    al,0x0
     44e:	03 0e                	add    ecx,DWORD PTR [rsi]
     450:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     454:	6c                   	ins    BYTE PTR es:[rdi],dx
     455:	19 02                	sbb    DWORD PTR [rdx],eax
     457:	18 00                	sbb    BYTE PTR [rax],al
     459:	00 20                	add    BYTE PTR [rax],ah
     45b:	0b 01                	or     eax,DWORD PTR [rcx]
     45d:	55                   	push   rbp
     45e:	17                   	(bad)
     45f:	00 00                	add    BYTE PTR [rax],al
     461:	21 48 01             	and    DWORD PTR [rax+0x1],ecx
     464:	7d 01                	jge    467 <__abi_tag+0xeb>
     466:	7f 13                	jg     47b <__abi_tag+0xff>
     468:	01 13                	add    DWORD PTR [rbx],edx
     46a:	00 00                	add    BYTE PTR [rax],al
     46c:	22 13                	and    dl,BYTE PTR [rbx]
     46e:	01 0b                	add    DWORD PTR [rbx],ecx
     470:	0b 3a                	or     edi,DWORD PTR [rdx]
     472:	21 06                	and    DWORD PTR [rsi],eax
     474:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     476:	39 21                	cmp    DWORD PTR [rcx],esp
     478:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     47b:	01 13                	add    DWORD PTR [rbx],edx
     47d:	00 00                	add    BYTE PTR [rax],al
     47f:	23 0d 00 03 08 3a    	and    ecx,DWORD PTR [rip+0x3a080300]        # 3a080785 <_end+0x3a07a76d>
     485:	21 06                	and    DWORD PTR [rsi],eax
     487:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     489:	39 0b                	cmp    DWORD PTR [rbx],ecx
     48b:	49 13 38             	adc    rdi,QWORD PTR [r8]
     48e:	0b 00                	or     eax,DWORD PTR [rax]
     490:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     493:	01 3f                	add    DWORD PTR [rdi],edi
     495:	19 03                	sbb    DWORD PTR [rbx],eax
     497:	0e                   	(bad)
     498:	3a 21                	cmp    ah,BYTE PTR [rcx]
     49a:	06                   	(bad)
     49b:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d25da <_end+0x3c0cc5c2>
     4a1:	19 01                	sbb    DWORD PTR [rcx],eax
     4a3:	13 00                	adc    eax,DWORD PTR [rax]
     4a5:	00 25 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],ah        # e0304df <_end+0xe02a4c7>
     4ab:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     4af:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b0:	19 00                	sbb    DWORD PTR [rax],eax
     4b2:	00 26                	add    BYTE PTR [rsi],ah
     4b4:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     4b7:	19 03                	sbb    DWORD PTR [rbx],eax
     4b9:	0e                   	(bad)
     4ba:	3a 21                	cmp    ah,BYTE PTR [rcx]
     4bc:	01 3b                	add    DWORD PTR [rbx],edi
     4be:	0b 39                	or     edi,DWORD PTR [rcx]
     4c0:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     4c3:	49 13 11             	adc    rdx,QWORD PTR [r9]
     4c6:	01 12                	add    DWORD PTR [rdx],edx
     4c8:	07                   	(bad)
     4c9:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
     4ce:	13 00                	adc    eax,DWORD PTR [rax]
     4d0:	00 27                	add    BYTE PTR [rdi],ah
     4d2:	34 00                	xor    al,0x0
     4d4:	31 13                	xor    DWORD PTR [rbx],edx
     4d6:	00 00                	add    BYTE PTR [rax],al
     4d8:	28 0b                	sub    BYTE PTR [rbx],cl
     4da:	01 31                	add    DWORD PTR [rcx],esi
     4dc:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
     4df:	01 13                	add    DWORD PTR [rbx],edx
     4e1:	00 00                	add    BYTE PTR [rax],al
     4e3:	29 05 00 31 13 00    	sub    DWORD PTR [rip+0x133100],eax        # 1335e9 <_end+0x12d5d1>
     4e9:	00 2a                	add    BYTE PTR [rdx],ch
     4eb:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     4ee:	19 03                	sbb    DWORD PTR [rbx],eax
     4f0:	0e                   	(bad)
     4f1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4f3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4f5:	39 21                	cmp    DWORD PTR [rcx],esp
     4f7:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     4fa:	20 21                	and    BYTE PTR [rcx],ah
     4fc:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     4ff:	01 13                	add    DWORD PTR [rbx],edx
     501:	00 00                	add    BYTE PTR [rax],al
     503:	2b 37                	sub    esi,DWORD PTR [rdi]
     505:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     508:	00 00                	add    BYTE PTR [rax],al
     50a:	2c 15                	sub    al,0x15
     50c:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     50f:	01 13                	add    DWORD PTR [rbx],edx
     511:	00 00                	add    BYTE PTR [rax],al
     513:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     518:	03 08                	add    ecx,DWORD PTR [rax]
     51a:	3a 21                	cmp    ah,BYTE PTR [rcx]
     51c:	08 3b                	or     BYTE PTR [rbx],bh
     51e:	0b 39                	or     edi,DWORD PTR [rcx]
     520:	21 03                	and    DWORD PTR [rbx],eax
     522:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     523:	0e                   	(bad)
     524:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     528:	00 00                	add    BYTE PTR [rax],al
     52a:	2e 18 00             	cs sbb BYTE PTR [rax],al
     52d:	00 00                	add    BYTE PTR [rax],al
     52f:	2f                   	(bad)
     530:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     533:	19 03                	sbb    DWORD PTR [rbx],eax
     535:	0e                   	(bad)
     536:	3a 21                	cmp    ah,BYTE PTR [rcx]
     538:	11 3b                	adc    DWORD PTR [rbx],edi
     53a:	0b 39                	or     edi,DWORD PTR [rcx]
     53c:	21 06                	and    DWORD PTR [rsi],eax
     53e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     53f:	0e                   	(bad)
     540:	3c 19                	cmp    al,0x19
     542:	01 13                	add    DWORD PTR [rbx],edx
     544:	00 00                	add    BYTE PTR [rax],al
     546:	30 0b                	xor    BYTE PTR [rbx],cl
     548:	01 11                	add    DWORD PTR [rcx],edx
     54a:	01 12                	add    DWORD PTR [rdx],edx
     54c:	07                   	(bad)
     54d:	01 13                	add    DWORD PTR [rbx],edx
     54f:	00 00                	add    BYTE PTR [rax],al
     551:	31 2e                	xor    DWORD PTR [rsi],ebp
     553:	01 03                	add    DWORD PTR [rbx],eax
     555:	0e                   	(bad)
     556:	3a 21                	cmp    ah,BYTE PTR [rcx]
     558:	01 3b                	add    DWORD PTR [rbx],edi
     55a:	0b 39                	or     edi,DWORD PTR [rcx]
     55c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     55f:	20 21                	and    BYTE PTR [rcx],ah
     561:	01 01                	add    DWORD PTR [rcx],eax
     563:	13 00                	adc    eax,DWORD PTR [rax]
     565:	00 32                	add    BYTE PTR [rdx],dh
     567:	0b 01                	or     eax,DWORD PTR [rcx]
     569:	31 13                	xor    DWORD PTR [rbx],edx
     56b:	11 01                	adc    DWORD PTR [rcx],eax
     56d:	12 07                	adc    al,BYTE PTR [rdi]
     56f:	00 00                	add    BYTE PTR [rax],al
     571:	33 1d 01 31 13 52    	xor    ebx,DWORD PTR [rip+0x52133101]        # 52133678 <_end+0x5212d660>
     577:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     57d:	58                   	pop    rax
     57e:	21 01                	and    DWORD PTR [rcx],eax
     580:	59                   	pop    rcx
     581:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     584:	00 00                	add    BYTE PTR [rax],al
     586:	34 2e                	xor    al,0x2e
     588:	01 3f                	add    DWORD PTR [rdi],edi
     58a:	19 03                	sbb    DWORD PTR [rbx],eax
     58c:	0e                   	(bad)
     58d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     58f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     591:	39 0b                	cmp    DWORD PTR [rbx],ecx
     593:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     594:	0e                   	(bad)
     595:	49 13 20             	adc    rsp,QWORD PTR [r8]
     598:	0b 01                	or     eax,DWORD PTR [rcx]
     59a:	13 00                	adc    eax,DWORD PTR [rax]
     59c:	00 35 05 00 03 08    	add    BYTE PTR [rip+0x8030005],dh        # 80305a7 <_end+0x802a58f>
     5a2:	3a 21                	cmp    ah,BYTE PTR [rcx]
     5a4:	02 3b                	add    bh,BYTE PTR [rbx]
     5a6:	0b 39                	or     edi,DWORD PTR [rcx]
     5a8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     5ab:	00 00                	add    BYTE PTR [rax],al
     5ad:	36 2e 01 31          	ss cs add DWORD PTR [rcx],esi
     5b1:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     5b4:	11 01                	adc    DWORD PTR [rcx],eax
     5b6:	12 07                	adc    al,BYTE PTR [rdi]
     5b8:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     5bc:	01 13                	add    DWORD PTR [rbx],edx
     5be:	00 00                	add    BYTE PTR [rax],al
     5c0:	37                   	(bad)
     5c1:	0b 01                	or     eax,DWORD PTR [rcx]
     5c3:	31 13                	xor    DWORD PTR [rbx],edx
     5c5:	11 01                	adc    DWORD PTR [rcx],eax
     5c7:	12 07                	adc    al,BYTE PTR [rdi]
     5c9:	01 13                	add    DWORD PTR [rbx],edx
     5cb:	00 00                	add    BYTE PTR [rax],al
     5cd:	38 36                	cmp    BYTE PTR [rsi],dh
     5cf:	00 02                	add    BYTE PTR [rdx],al
     5d1:	18 00                	sbb    BYTE PTR [rax],al
     5d3:	00 39                	add    BYTE PTR [rcx],bh
     5d5:	11 01                	adc    DWORD PTR [rcx],eax
     5d7:	25 0e 13 0b 03       	and    eax,0x30b130e
     5dc:	1f                   	(bad)
     5dd:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     5df:	11 01                	adc    DWORD PTR [rcx],eax
     5e1:	12 07                	adc    al,BYTE PTR [rdi]
     5e3:	10 17                	adc    BYTE PTR [rdi],dl
     5e5:	00 00                	add    BYTE PTR [rax],al
     5e7:	3a 24 00             	cmp    ah,BYTE PTR [rax+rax*1]
     5ea:	0b 0b                	or     ecx,DWORD PTR [rbx]
     5ec:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     5ef:	08 00                	or     BYTE PTR [rax],al
     5f1:	00 3b                	add    BYTE PTR [rbx],bh
     5f3:	0f 00 0b             	str    WORD PTR [rbx]
     5f6:	0b 00                	or     eax,DWORD PTR [rax]
     5f8:	00 3c 16             	add    BYTE PTR [rsi+rdx*1],bh
     5fb:	00 03                	add    BYTE PTR [rbx],al
     5fd:	0e                   	(bad)
     5fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     600:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349113f <_end+0x1348b127>
     606:	00 00                	add    BYTE PTR [rax],al
     608:	3d 26 00 00 00       	cmp    eax,0x26
     60d:	3e 39 01             	ds cmp DWORD PTR [rcx],eax
     610:	03 08                	add    ecx,DWORD PTR [rax]
     612:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     614:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011153 <_end+0x1300b13b>
     61a:	00 00                	add    BYTE PTR [rax],al
     61c:	3f                   	(bad)
     61d:	08 00                	or     BYTE PTR [rax],al
     61f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     621:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 13181160 <_end+0x1317b148>
     627:	00 00                	add    BYTE PTR [rax],al
     629:	40 15 00 00 00 41    	rex adc eax,0x41000000
     62f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     632:	19 03                	sbb    DWORD PTR [rbx],eax
     634:	0e                   	(bad)
     635:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     637:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1176 <_end+0xe6db15e>
     63d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     641:	01 13                	add    DWORD PTR [rbx],edx
     643:	00 00                	add    BYTE PTR [rax],al
     645:	42                   	rex.X
     646:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     649:	19 03                	sbb    DWORD PTR [rbx],eax
     64b:	08 3a                	or     BYTE PTR [rdx],bh
     64d:	0b 3b                	or     edi,DWORD PTR [rbx]
     64f:	05 39 0b 49 13       	add    eax,0x13490b39
     654:	3c 19                	cmp    al,0x19
     656:	01 13                	add    DWORD PTR [rbx],edx
     658:	00 00                	add    BYTE PTR [rax],al
     65a:	43                   	rex.XB
     65b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     65e:	19 03                	sbb    DWORD PTR [rbx],eax
     660:	0e                   	(bad)
     661:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     663:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18711a2 <_end+0x186b18a>
     669:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     66c:	01 13                	add    DWORD PTR [rbx],edx
     66e:	00 00                	add    BYTE PTR [rax],al
     670:	44                   	rex.R
     671:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     674:	19 03                	sbb    DWORD PTR [rbx],eax
     676:	0e                   	(bad)
     677:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     679:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134911b8 <_end+0x1348b1a0>
     67f:	3c 19                	cmp    al,0x19
     681:	00 00                	add    BYTE PTR [rax],al
     683:	45 39 01             	cmp    DWORD PTR [r9],r8d
     686:	03 0e                	add    ecx,DWORD PTR [rsi]
     688:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     68a:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130111c9 <_end+0x1300b1b1>
     690:	00 00                	add    BYTE PTR [rax],al
     692:	46                   	rex.RX
     693:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     696:	19 03                	sbb    DWORD PTR [rbx],eax
     698:	0e                   	(bad)
     699:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     69b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     69d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     69f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6a0:	0e                   	(bad)
     6a1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     6a5:	00 00                	add    BYTE PTR [rax],al
     6a7:	47                   	rex.RXB
     6a8:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6ab:	19 03                	sbb    DWORD PTR [rbx],eax
     6ad:	0e                   	(bad)
     6ae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6b0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6b2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6b4:	87 01                	xchg   DWORD PTR [rcx],eax
     6b6:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     6b9:	01 13                	add    DWORD PTR [rbx],edx
     6bb:	00 00                	add    BYTE PTR [rax],al
     6bd:	48                   	rex.W
     6be:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6c1:	19 03                	sbb    DWORD PTR [rbx],eax
     6c3:	0e                   	(bad)
     6c4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6c6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6cb:	0e                   	(bad)
     6cc:	11 01                	adc    DWORD PTR [rcx],eax
     6ce:	12 07                	adc    al,BYTE PTR [rdi]
     6d0:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     6d4:	01 13                	add    DWORD PTR [rbx],edx
     6d6:	00 00                	add    BYTE PTR [rax],al
     6d8:	49                   	rex.WB
     6d9:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     6dd:	82                   	(bad)
     6de:	01 19                	add    DWORD PTR [rcx],ebx
     6e0:	7f 13                	jg     6f5 <__abi_tag+0x379>
     6e2:	00 00                	add    BYTE PTR [rax],al
     6e4:	4a 1d 01 31 13 52    	rex.WX sbb rax,0x52133101
     6ea:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     6f0:	12 07                	adc    al,BYTE PTR [rdi]
     6f2:	58                   	pop    rax
     6f3:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     6f6:	57                   	push   rdi
     6f7:	0b 00                	or     eax,DWORD PTR [rax]
     6f9:	00 4b 05             	add    BYTE PTR [rbx+0x5],cl
     6fc:	00 31                	add    BYTE PTR [rcx],dh
     6fe:	13 02                	adc    eax,DWORD PTR [rdx]
     700:	18 00                	sbb    BYTE PTR [rax],al
     702:	00 4c 2e 01          	add    BYTE PTR [rsi+rbp*1+0x1],cl
     706:	3f                   	(bad)
     707:	19 03                	sbb    DWORD PTR [rbx],eax
     709:	0e                   	(bad)
     70a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     70c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     70e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     710:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     711:	0e                   	(bad)
     712:	20 0b                	and    BYTE PTR [rbx],cl
     714:	01 13                	add    DWORD PTR [rbx],edx
     716:	00 00                	add    BYTE PTR [rax],al
     718:	4d 1d 01 31 13 55    	rex.WRB sbb rax,0x55133101
     71e:	17                   	(bad)
     71f:	58                   	pop    rax
     720:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     723:	57                   	push   rdi
     724:	0b 00                	or     eax,DWORD PTR [rax]
     726:	00 4e 2e             	add    BYTE PTR [rsi+0x2e],cl
     729:	01 3f                	add    DWORD PTR [rdi],edi
     72b:	19 03                	sbb    DWORD PTR [rbx],eax
     72d:	0e                   	(bad)
     72e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     730:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     732:	39 0b                	cmp    DWORD PTR [rbx],ecx
     734:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     735:	0e                   	(bad)
     736:	49 13 11             	adc    rdx,QWORD PTR [r9]
     739:	01 12                	add    DWORD PTR [rdx],edx
     73b:	07                   	(bad)
     73c:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     740:	01 13                	add    DWORD PTR [rbx],edx
     742:	00 00                	add    BYTE PTR [rax],al
     744:	4f 05 00 31 13 1c    	rex.WRXB add rax,0x1c133100
     74a:	0b 00                	or     eax,DWORD PTR [rax]
     74c:	00 50 48             	add    BYTE PTR [rax+0x48],dl
     74f:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     752:	82                   	(bad)
     753:	01 19                	add    DWORD PTR [rcx],ebx
     755:	7f 13                	jg     76a <__abi_tag+0x3ee>
     757:	00 00                	add    BYTE PTR [rax],al
     759:	00 01                	add    BYTE PTR [rcx],al
     75b:	08 00                	or     BYTE PTR [rax],al
     75d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     75f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     761:	39 0b                	cmp    DWORD PTR [rbx],ecx
     763:	18 13                	sbb    BYTE PTR [rbx],dl
     765:	00 00                	add    BYTE PTR [rax],al
     767:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 13506d <_end+0x12f055>
     76d:	00 03                	add    BYTE PTR [rbx],al
     76f:	34 00                	xor    al,0x0
     771:	03 0e                	add    ecx,DWORD PTR [rsi]
     773:	3a 21                	cmp    ah,BYTE PTR [rcx]
     775:	01 3b                	add    DWORD PTR [rbx],edi
     777:	0b 39                	or     edi,DWORD PTR [rcx]
     779:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     77c:	02 17                	add    dl,BYTE PTR [rdi]
     77e:	b7 42                	mov    bh,0x42
     780:	17                   	(bad)
     781:	00 00                	add    BYTE PTR [rax],al
     783:	04 24                	add    al,0x24
     785:	00 0b                	add    BYTE PTR [rbx],cl
     787:	0b 3e                	or     edi,DWORD PTR [rsi]
     789:	0b 03                	or     eax,DWORD PTR [rbx]
     78b:	0e                   	(bad)
     78c:	00 00                	add    BYTE PTR [rax],al
     78e:	05 05 00 31 13       	add    eax,0x13310005
     793:	02 17                	add    dl,BYTE PTR [rdi]
     795:	b7 42                	mov    bh,0x42
     797:	17                   	(bad)
     798:	00 00                	add    BYTE PTR [rax],al
     79a:	06                   	(bad)
     79b:	16                   	(bad)
     79c:	00 03                	add    BYTE PTR [rbx],al
     79e:	0e                   	(bad)
     79f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7a1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7a3:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7a5:	49 13 00             	adc    rax,QWORD PTR [r8]
     7a8:	00 07                	add    BYTE PTR [rdi],al
     7aa:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7ad:	19 03                	sbb    DWORD PTR [rbx],eax
     7af:	0e                   	(bad)
     7b0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7b2:	07                   	(bad)
     7b3:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134912f2 <_end+0x1348b2da>
     7b9:	3c 19                	cmp    al,0x19
     7bb:	01 13                	add    DWORD PTR [rbx],edx
     7bd:	00 00                	add    BYTE PTR [rax],al
     7bf:	08 0f                	or     BYTE PTR [rdi],cl
     7c1:	00 0b                	add    BYTE PTR [rbx],cl
     7c3:	21 08                	and    DWORD PTR [rax],ecx
     7c5:	49 13 00             	adc    rax,QWORD PTR [r8]
     7c8:	00 09                	add    BYTE PTR [rcx],cl
     7ca:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7cd:	19 03                	sbb    DWORD PTR [rbx],eax
     7cf:	0e                   	(bad)
     7d0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7d6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     7da:	01 13                	add    DWORD PTR [rbx],edx
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     7e1:	03 08                	add    ecx,DWORD PTR [rax]
     7e3:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7e5:	01 3b                	add    DWORD PTR [rbx],edi
     7e7:	0b 39                	or     edi,DWORD PTR [rcx]
     7e9:	21 0e                	and    DWORD PTR [rsi],ecx
     7eb:	49 13 02             	adc    rax,QWORD PTR [r10]
     7ee:	17                   	(bad)
     7ef:	b7 42                	mov    bh,0x42
     7f1:	17                   	(bad)
     7f2:	00 00                	add    BYTE PTR [rax],al
     7f4:	0b 2e                	or     ebp,DWORD PTR [rsi]
     7f6:	01 3f                	add    DWORD PTR [rdi],edi
     7f8:	19 03                	sbb    DWORD PTR [rbx],eax
     7fa:	08 3a                	or     BYTE PTR [rdx],bh
     7fc:	21 09                	and    DWORD PTR [rcx],ecx
     7fe:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     800:	39 21                	cmp    DWORD PTR [rcx],esp
     802:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     805:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     809:	01 13                	add    DWORD PTR [rbx],edx
     80b:	00 00                	add    BYTE PTR [rax],al
     80d:	0c 2e                	or     al,0x2e
     80f:	01 3f                	add    DWORD PTR [rdi],edi
     811:	19 03                	sbb    DWORD PTR [rbx],eax
     813:	0e                   	(bad)
     814:	3a 21                	cmp    ah,BYTE PTR [rcx]
     816:	01 3b                	add    DWORD PTR [rbx],edi
     818:	0b 39                	or     edi,DWORD PTR [rcx]
     81a:	21 0a                	and    DWORD PTR [rdx],ecx
     81c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81d:	0e                   	(bad)
     81e:	49 13 11             	adc    rdx,QWORD PTR [r9]
     821:	01 12                	add    DWORD PTR [rdx],edx
     823:	07                   	(bad)
     824:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     828:	01 13                	add    DWORD PTR [rbx],edx
     82a:	00 00                	add    BYTE PTR [rax],al
     82c:	0d 05 00 03 0e       	or     eax,0xe030005
     831:	3a 21                	cmp    ah,BYTE PTR [rcx]
     833:	01 3b                	add    DWORD PTR [rbx],edi
     835:	0b 39                	or     edi,DWORD PTR [rcx]
     837:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     83a:	02 17                	add    dl,BYTE PTR [rdi]
     83c:	b7 42                	mov    bh,0x42
     83e:	17                   	(bad)
     83f:	00 00                	add    BYTE PTR [rax],al
     841:	0e                   	(bad)
     842:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     847:	0b 3b                	or     edi,DWORD PTR [rbx]
     849:	0b 39                	or     edi,DWORD PTR [rcx]
     84b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     84e:	38 0b                	cmp    BYTE PTR [rbx],cl
     850:	00 00                	add    BYTE PTR [rax],al
     852:	0f 0b                	ud2
     854:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     857:	00 00                	add    BYTE PTR [rax],al
     859:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     85c:	31 13                	xor    DWORD PTR [rbx],edx
     85e:	02 17                	add    dl,BYTE PTR [rdi]
     860:	b7 42                	mov    bh,0x42
     862:	17                   	(bad)
     863:	00 00                	add    BYTE PTR [rax],al
     865:	11 2e                	adc    DWORD PTR [rsi],ebp
     867:	01 3f                	add    DWORD PTR [rdi],edi
     869:	19 03                	sbb    DWORD PTR [rbx],eax
     86b:	0e                   	(bad)
     86c:	3a 21                	cmp    ah,BYTE PTR [rcx]
     86e:	07                   	(bad)
     86f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     871:	39 0b                	cmp    DWORD PTR [rbx],ecx
     873:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     874:	0e                   	(bad)
     875:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     879:	01 13                	add    DWORD PTR [rbx],edx
     87b:	00 00                	add    BYTE PTR [rax],al
     87d:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     880:	03 0e                	add    ecx,DWORD PTR [rsi]
     882:	3a 21                	cmp    ah,BYTE PTR [rcx]
     884:	01 3b                	add    DWORD PTR [rbx],edi
     886:	0b 39                	or     edi,DWORD PTR [rcx]
     888:	21 0e                	and    DWORD PTR [rsi],ecx
     88a:	49 13 00             	adc    rax,QWORD PTR [r8]
     88d:	00 13                	add    BYTE PTR [rbx],dl
     88f:	34 00                	xor    al,0x0
     891:	03 0e                	add    ecx,DWORD PTR [rsi]
     893:	3a 21                	cmp    ah,BYTE PTR [rcx]
     895:	01 3b                	add    DWORD PTR [rbx],edi
     897:	0b 39                	or     edi,DWORD PTR [rcx]
     899:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     89c:	1c 0b                	sbb    al,0xb
     89e:	00 00                	add    BYTE PTR [rax],al
     8a0:	14 1d                	adc    al,0x1d
     8a2:	01 31                	add    DWORD PTR [rcx],esi
     8a4:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     8a7:	b8 42 0b 55 17       	mov    eax,0x17550b42
     8ac:	58                   	pop    rax
     8ad:	21 01                	and    DWORD PTR [rcx],eax
     8af:	59                   	pop    rcx
     8b0:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8b3:	01 13                	add    DWORD PTR [rbx],edx
     8b5:	00 00                	add    BYTE PTR [rax],al
     8b7:	15 1d 01 31 13       	adc    eax,0x1331011d
     8bc:	52                   	push   rdx
     8bd:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     8c3:	58                   	pop    rax
     8c4:	21 01                	and    DWORD PTR [rcx],eax
     8c6:	59                   	pop    rcx
     8c7:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8ca:	00 00                	add    BYTE PTR [rax],al
     8cc:	16                   	(bad)
     8cd:	05 00 03 08 3a       	add    eax,0x3a080300
     8d2:	21 02                	and    DWORD PTR [rdx],eax
     8d4:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491413 <_end+0x1348b3fb>
     8da:	00 00                	add    BYTE PTR [rax],al
     8dc:	17                   	(bad)
     8dd:	13 01                	adc    eax,DWORD PTR [rcx]
     8df:	0b 0b                	or     ecx,DWORD PTR [rbx]
     8e1:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8e3:	07                   	(bad)
     8e4:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8e6:	39 21                	cmp    DWORD PTR [rcx],esp
     8e8:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     8eb:	01 13                	add    DWORD PTR [rbx],edx
     8ed:	00 00                	add    BYTE PTR [rax],al
     8ef:	18 0d 00 03 08 3a    	sbb    BYTE PTR [rip+0x3a080300],cl        # 3a080bf5 <_end+0x3a07abdd>
     8f5:	21 07                	and    DWORD PTR [rdi],eax
     8f7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     8f9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8fb:	49 13 38             	adc    rdi,QWORD PTR [r8]
     8fe:	0b 00                	or     eax,DWORD PTR [rax]
     900:	00 19                	add    BYTE PTR [rcx],bl
     902:	05 00 03 08 3a       	add    eax,0x3a080300
     907:	21 01                	and    DWORD PTR [rcx],eax
     909:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     90b:	39 0b                	cmp    DWORD PTR [rbx],ecx
     90d:	49 13 00             	adc    rax,QWORD PTR [r8]
     910:	00 1a                	add    BYTE PTR [rdx],bl
     912:	34 00                	xor    al,0x0
     914:	03 08                	add    ecx,DWORD PTR [rax]
     916:	3a 21                	cmp    ah,BYTE PTR [rcx]
     918:	01 3b                	add    DWORD PTR [rbx],edi
     91a:	0b 39                	or     edi,DWORD PTR [rcx]
     91c:	21 0e                	and    DWORD PTR [rsi],ecx
     91e:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     922:	00 00                	add    BYTE PTR [rax],al
     924:	1b 26                	sbb    esp,DWORD PTR [rsi]
     926:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     929:	00 00                	add    BYTE PTR [rax],al
     92b:	1c 2e                	sbb    al,0x2e
     92d:	01 3f                	add    DWORD PTR [rdi],edi
     92f:	19 03                	sbb    DWORD PTR [rbx],eax
     931:	08 3a                	or     BYTE PTR [rdx],bh
     933:	21 08                	and    DWORD PTR [rax],ecx
     935:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     937:	39 21                	cmp    DWORD PTR [rcx],esp
     939:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     93c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     940:	00 00                	add    BYTE PTR [rax],al
     942:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     947:	03 0e                	add    ecx,DWORD PTR [rsi]
     949:	3a 21                	cmp    ah,BYTE PTR [rcx]
     94b:	07                   	(bad)
     94c:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2a8b <_end+0x3c0cca73>
     952:	19 01                	sbb    DWORD PTR [rcx],eax
     954:	13 00                	adc    eax,DWORD PTR [rax]
     956:	00 1e                	add    BYTE PTR [rsi],bl
     958:	2e 01 03             	cs add DWORD PTR [rbx],eax
     95b:	0e                   	(bad)
     95c:	3a 21                	cmp    ah,BYTE PTR [rcx]
     95e:	01 3b                	add    DWORD PTR [rbx],edi
     960:	0b 39                	or     edi,DWORD PTR [rcx]
     962:	21 11                	and    DWORD PTR [rcx],edx
     964:	49 13 20             	adc    rsp,QWORD PTR [r8]
     967:	21 01                	and    DWORD PTR [rcx],eax
     969:	01 13                	add    DWORD PTR [rbx],edx
     96b:	00 00                	add    BYTE PTR [rax],al
     96d:	1f                   	(bad)
     96e:	34 00                	xor    al,0x0
     970:	03 08                	add    ecx,DWORD PTR [rax]
     972:	3a 21                	cmp    ah,BYTE PTR [rcx]
     974:	01 3b                	add    DWORD PTR [rbx],edi
     976:	0b 39                	or     edi,DWORD PTR [rcx]
     978:	21 0e                	and    DWORD PTR [rsi],ecx
     97a:	49 13 00             	adc    rax,QWORD PTR [r8]
     97d:	00 20                	add    BYTE PTR [rax],ah
     97f:	0b 01                	or     eax,DWORD PTR [rcx]
     981:	55                   	push   rbp
     982:	17                   	(bad)
     983:	01 13                	add    DWORD PTR [rbx],edx
     985:	00 00                	add    BYTE PTR [rax],al
     987:	21 48 00             	and    DWORD PTR [rax+0x0],ecx
     98a:	7d 01                	jge    98d <__abi_tag+0x611>
     98c:	83 01 18             	add    DWORD PTR [rcx],0x18
     98f:	00 00                	add    BYTE PTR [rax],al
     991:	22 11                	and    dl,BYTE PTR [rcx]
     993:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1ca7 <_end+0x30abc8f>
     999:	1f                   	(bad)
     99a:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     99c:	11 01                	adc    DWORD PTR [rcx],eax
     99e:	12 07                	adc    al,BYTE PTR [rdi]
     9a0:	10 17                	adc    BYTE PTR [rdi],dl
     9a2:	00 00                	add    BYTE PTR [rax],al
     9a4:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
     9a7:	0b 0b                	or     ecx,DWORD PTR [rbx]
     9a9:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     9ac:	08 00                	or     BYTE PTR [rax],al
     9ae:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
     9b1:	00 0b                	add    BYTE PTR [rbx],cl
     9b3:	0b 00                	or     eax,DWORD PTR [rax]
     9b5:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0309d1 <_end+0xe02a9b9>
     9bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9bd:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134914fc <_end+0x1348b4e4>
     9c3:	00 00                	add    BYTE PTR [rax],al
     9c5:	26 15 01 49 13 01    	es adc eax,0x1134901
     9cb:	13 00                	adc    eax,DWORD PTR [rax]
     9cd:	00 27                	add    BYTE PTR [rdi],ah
     9cf:	26 00 00             	es add BYTE PTR [rax],al
     9d2:	00 28                	add    BYTE PTR [rax],ch
     9d4:	39 01                	cmp    DWORD PTR [rcx],eax
     9d6:	03 08                	add    ecx,DWORD PTR [rax]
     9d8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9da:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011519 <_end+0x1300b501>
     9e0:	00 00                	add    BYTE PTR [rax],al
     9e2:	29 08                	sub    DWORD PTR [rax],ecx
     9e4:	00 3a                	add    BYTE PTR [rdx],bh
     9e6:	0b 3b                	or     edi,DWORD PTR [rbx]
     9e8:	05 39 0b 18 13       	add    eax,0x13180b39
     9ed:	00 00                	add    BYTE PTR [rax],al
     9ef:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b0009f5 <_end+0x2affa9dd>
     9f5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     9f8:	19 03                	sbb    DWORD PTR [rbx],eax
     9fa:	0e                   	(bad)
     9fb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9fd:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e153c <_end+0xe6db524>
     a03:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a07:	01 13                	add    DWORD PTR [rbx],edx
     a09:	00 00                	add    BYTE PTR [rax],al
     a0b:	2c 2e                	sub    al,0x2e
     a0d:	01 3f                	add    DWORD PTR [rdi],edi
     a0f:	19 03                	sbb    DWORD PTR [rbx],eax
     a11:	08 3a                	or     BYTE PTR [rdx],bh
     a13:	0b 3b                	or     edi,DWORD PTR [rbx]
     a15:	05 39 0b 49 13       	add    eax,0x13490b39
     a1a:	3c 19                	cmp    al,0x19
     a1c:	01 13                	add    DWORD PTR [rbx],edx
     a1e:	00 00                	add    BYTE PTR [rax],al
     a20:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     a25:	03 0e                	add    ecx,DWORD PTR [rsi]
     a27:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a29:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871568 <_end+0x186b550>
     a2f:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     a32:	01 13                	add    DWORD PTR [rbx],edx
     a34:	00 00                	add    BYTE PTR [rax],al
     a36:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
     a3a:	19 03                	sbb    DWORD PTR [rbx],eax
     a3c:	0e                   	(bad)
     a3d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a3f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349157e <_end+0x1348b566>
     a45:	3c 19                	cmp    al,0x19
     a47:	00 00                	add    BYTE PTR [rax],al
     a49:	2f                   	(bad)
     a4a:	39 01                	cmp    DWORD PTR [rcx],eax
     a4c:	03 0e                	add    ecx,DWORD PTR [rsi]
     a4e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a50:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301158f <_end+0x1300b577>
     a56:	00 00                	add    BYTE PTR [rax],al
     a58:	30 13                	xor    BYTE PTR [rbx],dl
     a5a:	01 03                	add    DWORD PTR [rbx],eax
     a5c:	0e                   	(bad)
     a5d:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a5f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a61:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a63:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a65:	01 13                	add    DWORD PTR [rbx],edx
     a67:	00 00                	add    BYTE PTR [rax],al
     a69:	31 0b                	xor    DWORD PTR [rbx],ecx
     a6b:	01 00                	add    DWORD PTR [rax],eax
     a6d:	00 32                	add    BYTE PTR [rdx],dh
     a6f:	34 00                	xor    al,0x0
     a71:	03 0e                	add    ecx,DWORD PTR [rsi]
     a73:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a75:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a77:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a79:	49 13 1c 05 00 00 33 	adc    rbx,QWORD PTR [rax*1+0x34330000]
     a80:	34 
     a81:	00 03                	add    BYTE PTR [rbx],al
     a83:	08 3a                	or     BYTE PTR [rdx],bh
     a85:	0b 3b                	or     edi,DWORD PTR [rbx]
     a87:	0b 39                	or     edi,DWORD PTR [rcx]
     a89:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     a8c:	1c 07                	sbb    al,0x7
     a8e:	00 00                	add    BYTE PTR [rax],al
     a90:	34 34                	xor    al,0x34
     a92:	00 31                	add    BYTE PTR [rcx],dh
     a94:	13 00                	adc    eax,DWORD PTR [rax]
     a96:	00 35 0b 01 31 13    	add    BYTE PTR [rip+0x1331010b],dh        # 13310ba7 <_end+0x1330ab8f>
     a9c:	55                   	push   rbp
     a9d:	17                   	(bad)
     a9e:	01 13                	add    DWORD PTR [rbx],edx
     aa0:	00 00                	add    BYTE PTR [rax],al
     aa2:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     aa6:	19 03                	sbb    DWORD PTR [rbx],eax
     aa8:	0e                   	(bad)
     aa9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     aab:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e15ea <_end+0xe6db5d2>
     ab1:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ab4:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     ab7:	01 13                	add    DWORD PTR [rbx],edx
     ab9:	00 00                	add    BYTE PTR [rax],al
     abb:	37                   	(bad)
     abc:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     abf:	19 03                	sbb    DWORD PTR [rbx],eax
     ac1:	0e                   	(bad)
     ac2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ac4:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1603 <_end+0xe6db5eb>
     aca:	49 13 20             	adc    rsp,QWORD PTR [r8]
     acd:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     ad0:	00 00                	add    BYTE PTR [rax],al
     ad2:	00 01                	add    BYTE PTR [rcx],al
     ad4:	05 00 49 13 00       	add    eax,0x134900
     ad9:	00 02                	add    BYTE PTR [rdx],al
     adb:	08 00                	or     BYTE PTR [rax],al
     add:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     adf:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ae1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ae3:	18 13                	sbb    BYTE PTR [rbx],dl
     ae5:	00 00                	add    BYTE PTR [rax],al
     ae7:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     aea:	02 18                	add    bl,BYTE PTR [rax]
     aec:	7e 18                	jle    b06 <__abi_tag+0x78a>
     aee:	00 00                	add    BYTE PTR [rax],al
     af0:	04 05                	add    al,0x5
     af2:	00 31                	add    BYTE PTR [rcx],dh
     af4:	13 02                	adc    eax,DWORD PTR [rdx]
     af6:	17                   	(bad)
     af7:	b7 42                	mov    bh,0x42
     af9:	17                   	(bad)
     afa:	00 00                	add    BYTE PTR [rax],al
     afc:	05 48 01 7d 01       	add    eax,0x17d0148
     b01:	7f 13                	jg     b16 <__abi_tag+0x79a>
     b03:	00 00                	add    BYTE PTR [rax],al
     b05:	06                   	(bad)
     b06:	24 00                	and    al,0x0
     b08:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b0a:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     b0d:	0e                   	(bad)
     b0e:	00 00                	add    BYTE PTR [rax],al
     b10:	07                   	(bad)
     b11:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     b16:	0b 3b                	or     edi,DWORD PTR [rbx]
     b18:	0b 39                	or     edi,DWORD PTR [rcx]
     b1a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b1d:	38 0b                	cmp    BYTE PTR [rbx],cl
     b1f:	00 00                	add    BYTE PTR [rax],al
     b21:	08 2e                	or     BYTE PTR [rsi],ch
     b23:	01 3f                	add    DWORD PTR [rdi],edi
     b25:	19 03                	sbb    DWORD PTR [rbx],eax
     b27:	0e                   	(bad)
     b28:	3a 21                	cmp    ah,BYTE PTR [rcx]
     b2a:	05 3b 05 39 0b       	add    eax,0xb39053b
     b2f:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     b33:	01 13                	add    DWORD PTR [rbx],edx
     b35:	00 00                	add    BYTE PTR [rax],al
     b37:	09 1d 01 31 13 52    	or     DWORD PTR [rip+0x52133101],ebx        # 52133c3e <_end+0x5212dc26>
     b3d:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     b43:	12 07                	adc    al,BYTE PTR [rdi]
     b45:	58                   	pop    rax
     b46:	21 01                	and    DWORD PTR [rcx],eax
     b48:	59                   	pop    rcx
     b49:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     b4c:	01 13                	add    DWORD PTR [rbx],edx
     b4e:	00 00                	add    BYTE PTR [rax],al
     b50:	0a 0f                	or     cl,BYTE PTR [rdi]
     b52:	00 0b                	add    BYTE PTR [rbx],cl
     b54:	21 08                	and    DWORD PTR [rax],ecx
     b56:	49 13 00             	adc    rax,QWORD PTR [r8]
     b59:	00 0b                	add    BYTE PTR [rbx],cl
     b5b:	16                   	(bad)
     b5c:	00 03                	add    BYTE PTR [rbx],al
     b5e:	0e                   	(bad)
     b5f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b61:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b63:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b65:	49 13 00             	adc    rax,QWORD PTR [r8]
     b68:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
     b6b:	01 3f                	add    DWORD PTR [rdi],edi
     b6d:	19 03                	sbb    DWORD PTR [rbx],eax
     b6f:	0e                   	(bad)
     b70:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b72:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b74:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b76:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     b7a:	01 13                	add    DWORD PTR [rbx],edx
     b7c:	00 00                	add    BYTE PTR [rax],al
     b7e:	0d 05 00 03 0e       	or     eax,0xe030005
     b83:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b85:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b87:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b89:	49 13 00             	adc    rax,QWORD PTR [r8]
     b8c:	00 0e                	add    BYTE PTR [rsi],cl
     b8e:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     b92:	00 00                	add    BYTE PTR [rax],al
     b94:	0f 34                	sysenter
     b96:	00 03                	add    BYTE PTR [rbx],al
     b98:	08 3a                	or     BYTE PTR [rdx],bh
     b9a:	21 01                	and    DWORD PTR [rcx],eax
     b9c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b9e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ba0:	49 13 02             	adc    rax,QWORD PTR [r10]
     ba3:	17                   	(bad)
     ba4:	b7 42                	mov    bh,0x42
     ba6:	17                   	(bad)
     ba7:	00 00                	add    BYTE PTR [rax],al
     ba9:	10 2e                	adc    BYTE PTR [rsi],ch
     bab:	01 3f                	add    DWORD PTR [rdi],edi
     bad:	19 03                	sbb    DWORD PTR [rbx],eax
     baf:	08 3a                	or     BYTE PTR [rdx],bh
     bb1:	21 08                	and    DWORD PTR [rax],ecx
     bb3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bb5:	39 21                	cmp    DWORD PTR [rcx],esp
     bb7:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     bba:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     bbe:	01 13                	add    DWORD PTR [rbx],edx
     bc0:	00 00                	add    BYTE PTR [rax],al
     bc2:	11 05 00 03 0e 3a    	adc    DWORD PTR [rip+0x3a0e0300],eax        # 3a0e0ec8 <_end+0x3a0daeb0>
     bc8:	21 01                	and    DWORD PTR [rcx],eax
     bca:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bcc:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bce:	49 13 02             	adc    rax,QWORD PTR [r10]
     bd1:	17                   	(bad)
     bd2:	b7 42                	mov    bh,0x42
     bd4:	17                   	(bad)
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	12 1d 01 31 13 52    	adc    bl,BYTE PTR [rip+0x52133101]        # 52133cde <_end+0x5212dcc6>
     bdd:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     be3:	58                   	pop    rax
     be4:	21 01                	and    DWORD PTR [rcx],eax
     be6:	59                   	pop    rcx
     be7:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     bea:	01 13                	add    DWORD PTR [rbx],edx
     bec:	00 00                	add    BYTE PTR [rax],al
     bee:	13 0b                	adc    ecx,DWORD PTR [rbx]
     bf0:	01 11                	add    DWORD PTR [rcx],edx
     bf2:	01 12                	add    DWORD PTR [rdx],edx
     bf4:	07                   	(bad)
     bf5:	01 13                	add    DWORD PTR [rbx],edx
     bf7:	00 00                	add    BYTE PTR [rax],al
     bf9:	14 1d                	adc    al,0x1d
     bfb:	01 31                	add    DWORD PTR [rcx],esi
     bfd:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     c00:	b8 42 0b 55 17       	mov    eax,0x17550b42
     c05:	58                   	pop    rax
     c06:	21 01                	and    DWORD PTR [rcx],eax
     c08:	59                   	pop    rcx
     c09:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     c0c:	00 00                	add    BYTE PTR [rax],al
     c0e:	15 01 01 49 13       	adc    eax,0x13490101
     c13:	01 13                	add    DWORD PTR [rbx],edx
     c15:	00 00                	add    BYTE PTR [rax],al
     c17:	16                   	(bad)
     c18:	21 00                	and    DWORD PTR [rax],eax
     c1a:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     c1d:	0b 00                	or     eax,DWORD PTR [rax]
     c1f:	00 17                	add    BYTE PTR [rdi],dl
     c21:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c24:	19 03                	sbb    DWORD PTR [rbx],eax
     c26:	0e                   	(bad)
     c27:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c29:	05 3b 0b 39 0b       	add    eax,0xb390b3b
     c2e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c2f:	0e                   	(bad)
     c30:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c34:	01 13                	add    DWORD PTR [rbx],edx
     c36:	00 00                	add    BYTE PTR [rax],al
     c38:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
     c3b:	03 0e                	add    ecx,DWORD PTR [rsi]
     c3d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c3f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c41:	39 21                	cmp    DWORD PTR [rcx],esp
     c43:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c46:	1c 0b                	sbb    al,0xb
     c48:	00 00                	add    BYTE PTR [rax],al
     c4a:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
     c4d:	03 0e                	add    ecx,DWORD PTR [rsi]
     c4f:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     c53:	6c                   	ins    BYTE PTR es:[rdi],dx
     c54:	19 02                	sbb    DWORD PTR [rdx],eax
     c56:	18 00                	sbb    BYTE PTR [rax],al
     c58:	00 1a                	add    BYTE PTR [rdx],bl
     c5a:	34 00                	xor    al,0x0
     c5c:	31 13                	xor    DWORD PTR [rbx],edx
     c5e:	02 17                	add    dl,BYTE PTR [rdi]
     c60:	b7 42                	mov    bh,0x42
     c62:	17                   	(bad)
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	1b 13                	sbb    edx,DWORD PTR [rbx]
     c67:	01 0b                	add    DWORD PTR [rbx],ecx
     c69:	0b 3a                	or     edi,DWORD PTR [rdx]
     c6b:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 213917ac <_end+0x2138b794>
     c71:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     c74:	01 13                	add    DWORD PTR [rbx],edx
     c76:	00 00                	add    BYTE PTR [rax],al
     c78:	1c 0d                	sbb    al,0xd
     c7a:	00 03                	add    BYTE PTR [rbx],al
     c7c:	08 3a                	or     BYTE PTR [rdx],bh
     c7e:	21 05 3b 0b 39 0b    	and    DWORD PTR [rip+0xb390b3b],eax        # b3917bf <_end+0xb38b7a7>
     c84:	49 13 38             	adc    rdi,QWORD PTR [r8]
     c87:	0b 00                	or     eax,DWORD PTR [rax]
     c89:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f0dbd <_end+0x193eada5>
     c8f:	03 0e                	add    ecx,DWORD PTR [rsi]
     c91:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c93:	05 3b 05 39 21       	add    eax,0x2139053b
     c98:	0d 3c 19 01 13       	or     eax,0x1301193c
     c9d:	00 00                	add    BYTE PTR [rax],al
     c9f:	1e                   	(bad)
     ca0:	13 01                	adc    eax,DWORD PTR [rcx]
     ca2:	03 0e                	add    ecx,DWORD PTR [rsi]
     ca4:	0b 0b                	or     ecx,DWORD PTR [rbx]
     ca6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ca8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     caa:	39 21                	cmp    DWORD PTR [rcx],esp
     cac:	10 01                	adc    BYTE PTR [rcx],al
     cae:	13 00                	adc    eax,DWORD PTR [rax]
     cb0:	00 1f                	add    BYTE PTR [rdi],bl
     cb2:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     cb5:	19 03                	sbb    DWORD PTR [rbx],eax
     cb7:	0e                   	(bad)
     cb8:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cba:	01 3b                	add    DWORD PTR [rbx],edi
     cbc:	0b 39                	or     edi,DWORD PTR [rcx]
     cbe:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     cc1:	49 13 11             	adc    rdx,QWORD PTR [r9]
     cc4:	01 12                	add    DWORD PTR [rdx],edx
     cc6:	07                   	(bad)
     cc7:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     ccb:	01 13                	add    DWORD PTR [rbx],edx
     ccd:	00 00                	add    BYTE PTR [rax],al
     ccf:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     cd2:	03 0e                	add    ecx,DWORD PTR [rsi]
     cd4:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cd6:	01 3b                	add    DWORD PTR [rbx],edi
     cd8:	0b 39                	or     edi,DWORD PTR [rcx]
     cda:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     cdd:	02 17                	add    dl,BYTE PTR [rdi]
     cdf:	b7 42                	mov    bh,0x42
     ce1:	17                   	(bad)
     ce2:	00 00                	add    BYTE PTR [rax],al
     ce4:	21 2e                	and    DWORD PTR [rsi],ebp
     ce6:	00 3f                	add    BYTE PTR [rdi],bh
     ce8:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     ceb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cec:	0e                   	(bad)
     ced:	03 0e                	add    ecx,DWORD PTR [rsi]
     cef:	00 00                	add    BYTE PTR [rax],al
     cf1:	22 2e                	and    ch,BYTE PTR [rsi]
     cf3:	01 3f                	add    DWORD PTR [rdi],edi
     cf5:	19 03                	sbb    DWORD PTR [rbx],eax
     cf7:	08 3a                	or     BYTE PTR [rdx],bh
     cf9:	21 07                	and    DWORD PTR [rdi],eax
     cfb:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cfd:	39 21                	cmp    DWORD PTR [rcx],esp
     cff:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     d02:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     d06:	00 00                	add    BYTE PTR [rax],al
     d08:	23 18                	and    ebx,DWORD PTR [rax]
     d0a:	00 00                	add    BYTE PTR [rax],al
     d0c:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     d0f:	01 3f                	add    DWORD PTR [rdi],edi
     d11:	19 03                	sbb    DWORD PTR [rbx],eax
     d13:	0e                   	(bad)
     d14:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d16:	01 3b                	add    DWORD PTR [rbx],edi
     d18:	0b 39                	or     edi,DWORD PTR [rcx]
     d1a:	21 06                	and    DWORD PTR [rsi],eax
     d1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1d:	0e                   	(bad)
     d1e:	11 01                	adc    DWORD PTR [rcx],eax
     d20:	12 07                	adc    al,BYTE PTR [rdi]
     d22:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     d26:	01 13                	add    DWORD PTR [rbx],edx
     d28:	00 00                	add    BYTE PTR [rax],al
     d2a:	25 1d 01 31 13       	and    eax,0x1331011d
     d2f:	52                   	push   rdx
     d30:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     d36:	12 07                	adc    al,BYTE PTR [rdi]
     d38:	58                   	pop    rax
     d39:	21 01                	and    DWORD PTR [rcx],eax
     d3b:	59                   	pop    rcx
     d3c:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     d3f:	00 00                	add    BYTE PTR [rax],al
     d41:	26 34 00             	es xor al,0x0
     d44:	03 08                	add    ecx,DWORD PTR [rax]
     d46:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d48:	01 3b                	add    DWORD PTR [rbx],edi
     d4a:	0b 39                	or     edi,DWORD PTR [rcx]
     d4c:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d4f:	00 00                	add    BYTE PTR [rax],al
     d51:	27                   	(bad)
     d52:	0b 01                	or     eax,DWORD PTR [rcx]
     d54:	55                   	push   rbp
     d55:	17                   	(bad)
     d56:	00 00                	add    BYTE PTR [rax],al
     d58:	28 0b                	sub    BYTE PTR [rbx],cl
     d5a:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     d5d:	01 13                	add    DWORD PTR [rbx],edx
     d5f:	00 00                	add    BYTE PTR [rax],al
     d61:	29 05 00 31 13 00    	sub    DWORD PTR [rip+0x133100],eax        # 133e67 <_end+0x12de4f>
     d67:	00 2a                	add    BYTE PTR [rdx],ch
     d69:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     d6c:	19 03                	sbb    DWORD PTR [rbx],eax
     d6e:	0e                   	(bad)
     d6f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d71:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d73:	39 21                	cmp    DWORD PTR [rcx],esp
     d75:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     d78:	20 21                	and    BYTE PTR [rcx],ah
     d7a:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     d7d:	01 13                	add    DWORD PTR [rbx],edx
     d7f:	00 00                	add    BYTE PTR [rax],al
     d81:	2b 36                	sub    esi,DWORD PTR [rsi]
     d83:	00 02                	add    BYTE PTR [rdx],al
     d85:	18 00                	sbb    BYTE PTR [rax],al
     d87:	00 2c 11             	add    BYTE PTR [rcx+rdx*1],ch
     d8a:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b209e <_end+0x30ac086>
     d90:	1f                   	(bad)
     d91:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     d93:	11 01                	adc    DWORD PTR [rcx],eax
     d95:	12 07                	adc    al,BYTE PTR [rdi]
     d97:	10 17                	adc    BYTE PTR [rdi],dl
     d99:	00 00                	add    BYTE PTR [rax],al
     d9b:	2d 24 00 0b 0b       	sub    eax,0xb0b0024
     da0:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     da3:	08 00                	or     BYTE PTR [rax],al
     da5:	00 2e                	add    BYTE PTR [rsi],ch
     da7:	37                   	(bad)
     da8:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     dab:	00 00                	add    BYTE PTR [rax],al
     dad:	2f                   	(bad)
     dae:	0f 00 0b             	str    WORD PTR [rbx]
     db1:	0b 00                	or     eax,DWORD PTR [rax]
     db3:	00 30                	add    BYTE PTR [rax],dh
     db5:	16                   	(bad)
     db6:	00 03                	add    BYTE PTR [rbx],al
     db8:	0e                   	(bad)
     db9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     dbb:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134918fa <_end+0x1348b8e2>
     dc1:	00 00                	add    BYTE PTR [rax],al
     dc3:	31 15 01 49 13 01    	xor    DWORD PTR [rip+0x1134901],edx        # 11356ca <_end+0x112f6b2>
     dc9:	13 00                	adc    eax,DWORD PTR [rax]
     dcb:	00 32                	add    BYTE PTR [rdx],dh
     dcd:	26 00 00             	es add BYTE PTR [rax],al
     dd0:	00 33                	add    BYTE PTR [rbx],dh
     dd2:	39 01                	cmp    DWORD PTR [rcx],eax
     dd4:	03 08                	add    ecx,DWORD PTR [rax]
     dd6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     dd8:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011917 <_end+0x1300b8ff>
     dde:	00 00                	add    BYTE PTR [rax],al
     de0:	34 08                	xor    al,0x8
     de2:	00 3a                	add    BYTE PTR [rdx],bh
     de4:	0b 3b                	or     edi,DWORD PTR [rbx]
     de6:	05 39 0b 18 13       	add    eax,0x13180b39
     deb:	00 00                	add    BYTE PTR [rax],al
     ded:	35 15 00 00 00       	xor    eax,0x15
     df2:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     df6:	19 03                	sbb    DWORD PTR [rbx],eax
     df8:	0e                   	(bad)
     df9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     dfb:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e193a <_end+0xe6db922>
     e01:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     e05:	01 13                	add    DWORD PTR [rbx],edx
     e07:	00 00                	add    BYTE PTR [rax],al
     e09:	37                   	(bad)
     e0a:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     e0d:	19 03                	sbb    DWORD PTR [rbx],eax
     e0f:	08 3a                	or     BYTE PTR [rdx],bh
     e11:	0b 3b                	or     edi,DWORD PTR [rbx]
     e13:	05 39 0b 49 13       	add    eax,0x13490b39
     e18:	3c 19                	cmp    al,0x19
     e1a:	01 13                	add    DWORD PTR [rbx],edx
     e1c:	00 00                	add    BYTE PTR [rax],al
     e1e:	38 2e                	cmp    BYTE PTR [rsi],ch
     e20:	01 3f                	add    DWORD PTR [rdi],edi
     e22:	19 03                	sbb    DWORD PTR [rbx],eax
     e24:	0e                   	(bad)
     e25:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e27:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871966 <_end+0x186b94e>
     e2d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e30:	01 13                	add    DWORD PTR [rbx],edx
     e32:	00 00                	add    BYTE PTR [rax],al
     e34:	39 2e                	cmp    DWORD PTR [rsi],ebp
     e36:	00 3f                	add    BYTE PTR [rdi],bh
     e38:	19 03                	sbb    DWORD PTR [rbx],eax
     e3a:	0e                   	(bad)
     e3b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e3d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349197c <_end+0x1348b964>
     e43:	3c 19                	cmp    al,0x19
     e45:	00 00                	add    BYTE PTR [rax],al
     e47:	3a 39                	cmp    bh,BYTE PTR [rcx]
     e49:	01 03                	add    DWORD PTR [rbx],eax
     e4b:	0e                   	(bad)
     e4c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e4e:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301198d <_end+0x1300b975>
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     e58:	01 3f                	add    DWORD PTR [rdi],edi
     e5a:	19 03                	sbb    DWORD PTR [rbx],eax
     e5c:	0e                   	(bad)
     e5d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e5f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e61:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e63:	87 01                	xchg   DWORD PTR [rcx],eax
     e65:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e68:	01 13                	add    DWORD PTR [rbx],edx
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	3c 48                	cmp    al,0x48
     e6e:	01 7d 01             	add    DWORD PTR [rbp+0x1],edi
     e71:	82                   	(bad)
     e72:	01 19                	add    DWORD PTR [rcx],ebx
     e74:	7f 13                	jg     e89 <__abi_tag+0xb0d>
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	3d 48 00 7d 01       	cmp    eax,0x17d0048
     e7d:	7f 13                	jg     e92 <__abi_tag+0xb16>
     e7f:	00 00                	add    BYTE PTR [rax],al
     e81:	3e 2e 01 03          	ds cs add DWORD PTR [rbx],eax
     e85:	0e                   	(bad)
     e86:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e88:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e8a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e8c:	49 13 20             	adc    rsp,QWORD PTR [r8]
     e8f:	0b 01                	or     eax,DWORD PTR [rcx]
     e91:	13 00                	adc    eax,DWORD PTR [rax]
     e93:	00 3f                	add    BYTE PTR [rdi],bh
     e95:	2e 01 03             	cs add DWORD PTR [rbx],eax
     e98:	0e                   	(bad)
     e99:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e9b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e9d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e9f:	20 0b                	and    BYTE PTR [rbx],cl
     ea1:	01 13                	add    DWORD PTR [rbx],edx
     ea3:	00 00                	add    BYTE PTR [rax],al
     ea5:	40 0b 01             	rex or eax,DWORD PTR [rcx]
     ea8:	00 00                	add    BYTE PTR [rax],al
     eaa:	41                   	rex.B
     eab:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     eae:	19 03                	sbb    DWORD PTR [rbx],eax
     eb0:	0e                   	(bad)
     eb1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     eb3:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     eb5:	39 0b                	cmp    DWORD PTR [rbx],ecx
     eb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     eb8:	0e                   	(bad)
     eb9:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ebc:	0b 01                	or     eax,DWORD PTR [rcx]
     ebe:	13 00                	adc    eax,DWORD PTR [rax]
     ec0:	00 42 34             	add    BYTE PTR [rdx+0x34],al
     ec3:	00 03                	add    BYTE PTR [rbx],al
     ec5:	0e                   	(bad)
     ec6:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     eca:	6c                   	ins    BYTE PTR es:[rdi],dx
     ecb:	19 00                	sbb    DWORD PTR [rax],eax
     ecd:	00 43 34             	add    BYTE PTR [rbx+0x34],al
     ed0:	00 03                	add    BYTE PTR [rbx],al
     ed2:	0e                   	(bad)
     ed3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ed5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ed7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ed9:	49 13 02             	adc    rax,QWORD PTR [r10]
     edc:	18 00                	sbb    BYTE PTR [rax],al
     ede:	00 44 0b 01          	add    BYTE PTR [rbx+rcx*1+0x1],al
     ee2:	31 13                	xor    DWORD PTR [rbx],edx
     ee4:	11 01                	adc    DWORD PTR [rcx],eax
     ee6:	12 07                	adc    al,BYTE PTR [rdi]
     ee8:	01 13                	add    DWORD PTR [rbx],edx
     eea:	00 00                	add    BYTE PTR [rax],al
     eec:	45                   	rex.RB
     eed:	2e 01 31             	cs add DWORD PTR [rcx],esi
     ef0:	13 11                	adc    edx,DWORD PTR [rcx]
     ef2:	01 12                	add    DWORD PTR [rdx],edx
     ef4:	07                   	(bad)
     ef5:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     ef9:	01 13                	add    DWORD PTR [rbx],edx
     efb:	00 00                	add    BYTE PTR [rax],al
     efd:	46 34 00             	rex.RX xor al,0x0
     f00:	31 13                	xor    DWORD PTR [rbx],edx
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	47                   	rex.RXB
     f05:	2e 01 31             	cs add DWORD PTR [rcx],esi
     f08:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     f0b:	11 01                	adc    DWORD PTR [rcx],eax
     f0d:	12 07                	adc    al,BYTE PTR [rdi]
     f0f:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f13:	01 13                	add    DWORD PTR [rbx],edx
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	48                   	rex.W
     f18:	49 00 80 01 13 7e 18 	rex.WB add BYTE PTR [r8+0x187e1301],al
     f1f:	00 00                	add    BYTE PTR [rax],al
     f21:	00 01                	add    BYTE PTR [rcx],al
     f23:	05 00 49 13 00       	add    eax,0x134900
     f28:	00 02                	add    BYTE PTR [rdx],al
     f2a:	08 00                	or     BYTE PTR [rax],al
     f2c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f2e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f30:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f32:	18 13                	sbb    BYTE PTR [rbx],dl
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	03 0d 00 03 0e 3a    	add    ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e123c <_end+0x3a0db224>
     f3c:	0b 3b                	or     edi,DWORD PTR [rbx]
     f3e:	0b 39                	or     edi,DWORD PTR [rcx]
     f40:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f43:	38 0b                	cmp    BYTE PTR [rbx],cl
     f45:	00 00                	add    BYTE PTR [rax],al
     f47:	04 16                	add    al,0x16
     f49:	00 03                	add    BYTE PTR [rbx],al
     f4b:	0e                   	(bad)
     f4c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f4e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f50:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f52:	49 13 00             	adc    rax,QWORD PTR [r8]
     f55:	00 05 49 00 02 18    	add    BYTE PTR [rip+0x18020049],al        # 18020fa4 <_end+0x1801af8c>
     f5b:	7e 18                	jle    f75 <__abi_tag+0xbf9>
     f5d:	00 00                	add    BYTE PTR [rax],al
     f5f:	06                   	(bad)
     f60:	24 00                	and    al,0x0
     f62:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f64:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     f67:	0e                   	(bad)
     f68:	00 00                	add    BYTE PTR [rax],al
     f6a:	07                   	(bad)
     f6b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f6e:	19 03                	sbb    DWORD PTR [rbx],eax
     f70:	0e                   	(bad)
     f71:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f73:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491ab2 <_end+0x1348ba9a>
     f79:	3c 19                	cmp    al,0x19
     f7b:	01 13                	add    DWORD PTR [rbx],edx
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	08 2e                	or     BYTE PTR [rsi],ch
     f81:	01 3f                	add    DWORD PTR [rdi],edi
     f83:	19 03                	sbb    DWORD PTR [rbx],eax
     f85:	0e                   	(bad)
     f86:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f88:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f8a:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f8c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     f90:	01 13                	add    DWORD PTR [rbx],edx
     f92:	00 00                	add    BYTE PTR [rax],al
     f94:	09 0f                	or     DWORD PTR [rdi],ecx
     f96:	00 0b                	add    BYTE PTR [rbx],cl
     f98:	21 08                	and    DWORD PTR [rax],ecx
     f9a:	49 13 00             	adc    rax,QWORD PTR [r8]
     f9d:	00 0a                	add    BYTE PTR [rdx],cl
     f9f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     fa2:	19 03                	sbb    DWORD PTR [rbx],eax
     fa4:	08 3a                	or     BYTE PTR [rdx],bh
     fa6:	21 0b                	and    DWORD PTR [rbx],ecx
     fa8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     faa:	39 21                	cmp    DWORD PTR [rcx],esp
     fac:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     faf:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fb3:	01 13                	add    DWORD PTR [rbx],edx
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	0b 2e                	or     ebp,DWORD PTR [rsi]
     fb9:	01 3f                	add    DWORD PTR [rdi],edi
     fbb:	19 03                	sbb    DWORD PTR [rbx],eax
     fbd:	0e                   	(bad)
     fbe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fc0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fc2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fc4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fc5:	0e                   	(bad)
     fc6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fca:	01 13                	add    DWORD PTR [rbx],edx
     fcc:	00 00                	add    BYTE PTR [rax],al
     fce:	0c 05                	or     al,0x5
     fd0:	00 31                	add    BYTE PTR [rcx],dh
     fd2:	13 02                	adc    eax,DWORD PTR [rdx]
     fd4:	17                   	(bad)
     fd5:	b7 42                	mov    bh,0x42
     fd7:	17                   	(bad)
     fd8:	00 00                	add    BYTE PTR [rax],al
     fda:	0d 34 00 03 0e       	or     eax,0xe030034
     fdf:	3a 21                	cmp    ah,BYTE PTR [rcx]
     fe1:	01 3b                	add    DWORD PTR [rbx],edi
     fe3:	0b 39                	or     edi,DWORD PTR [rcx]
     fe5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     fe8:	02 17                	add    dl,BYTE PTR [rdi]
     fea:	b7 42                	mov    bh,0x42
     fec:	17                   	(bad)
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	0e                   	(bad)
     ff0:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     ff5:	0b 3b                	or     edi,DWORD PTR [rbx]
     ff7:	0b 39                	or     edi,DWORD PTR [rcx]
     ff9:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ffc:	00 00                	add    BYTE PTR [rax],al
     ffe:	0f 26                	(bad)
    1000:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1003:	00 00                	add    BYTE PTR [rax],al
    1005:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e130b <_end+0x3a0db2f3>
    100b:	21 01                	and    DWORD PTR [rcx],eax
    100d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    100f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1011:	49 13 02             	adc    rax,QWORD PTR [r10]
    1014:	17                   	(bad)
    1015:	b7 42                	mov    bh,0x42
    1017:	17                   	(bad)
    1018:	00 00                	add    BYTE PTR [rax],al
    101a:	11 48 01             	adc    DWORD PTR [rax+0x1],ecx
    101d:	7d 01                	jge    1020 <_init+0x20>
    101f:	7f 13                	jg     1034 <__printf_chk@plt+0x4>
    1021:	00 00                	add    BYTE PTR [rax],al
    1023:	12 48 01             	adc    cl,BYTE PTR [rax+0x1]
    1026:	7d 01                	jge    1029 <_init+0x29>
    1028:	7f 13                	jg     103d <__printf_chk@plt+0xd>
    102a:	01 13                	add    DWORD PTR [rbx],edx
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	13 13                	adc    edx,DWORD PTR [rbx]
    1030:	01 0b                	add    DWORD PTR [rbx],ecx
    1032:	0b 3a                	or     edi,DWORD PTR [rdx]
    1034:	21 06                	and    DWORD PTR [rsi],eax
    1036:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1038:	39 21                	cmp    DWORD PTR [rcx],esp
    103a:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    103d:	01 13                	add    DWORD PTR [rbx],edx
    103f:	00 00                	add    BYTE PTR [rax],al
    1041:	14 0d                	adc    al,0xd
    1043:	00 03                	add    BYTE PTR [rbx],al
    1045:	08 3a                	or     BYTE PTR [rdx],bh
    1047:	21 06                	and    DWORD PTR [rsi],eax
    1049:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    104b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    104d:	49 13 38             	adc    rdi,QWORD PTR [r8]
    1050:	0b 00                	or     eax,DWORD PTR [rax]
    1052:	00 15 01 01 49 13    	add    BYTE PTR [rip+0x13490101],dl        # 13491159 <_end+0x1348b141>
    1058:	01 13                	add    DWORD PTR [rbx],edx
    105a:	00 00                	add    BYTE PTR [rax],al
    105c:	16                   	(bad)
    105d:	21 00                	and    DWORD PTR [rax],eax
    105f:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    1062:	0b 00                	or     eax,DWORD PTR [rax]
    1064:	00 17                	add    BYTE PTR [rdi],dl
    1066:	13 01                	adc    eax,DWORD PTR [rcx]
    1068:	03 0e                	add    ecx,DWORD PTR [rsi]
    106a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    106c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    106e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1070:	39 21                	cmp    DWORD PTR [rcx],esp
    1072:	08 01                	or     BYTE PTR [rcx],al
    1074:	13 00                	adc    eax,DWORD PTR [rax]
    1076:	00 18                	add    BYTE PTR [rax],bl
    1078:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    107b:	19 03                	sbb    DWORD PTR [rbx],eax
    107d:	08 3a                	or     BYTE PTR [rdx],bh
    107f:	21 0a                	and    DWORD PTR [rdx],ecx
    1081:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1083:	39 21                	cmp    DWORD PTR [rcx],esp
    1085:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    1088:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    108c:	00 00                	add    BYTE PTR [rax],al
    108e:	19 2e                	sbb    DWORD PTR [rsi],ebp
    1090:	01 3f                	add    DWORD PTR [rdi],edi
    1092:	19 03                	sbb    DWORD PTR [rbx],eax
    1094:	0e                   	(bad)
    1095:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1097:	06                   	(bad)
    1098:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d31d7 <_end+0x3c0cd1bf>
    109e:	19 01                	sbb    DWORD PTR [rcx],eax
    10a0:	13 00                	adc    eax,DWORD PTR [rax]
    10a2:	00 1a                	add    BYTE PTR [rdx],bl
    10a4:	18 00                	sbb    BYTE PTR [rax],al
    10a6:	00 00                	add    BYTE PTR [rax],al
    10a8:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    10aa:	00 3f                	add    BYTE PTR [rdi],bh
    10ac:	19 03                	sbb    DWORD PTR [rbx],eax
    10ae:	0e                   	(bad)
    10af:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10b1:	02 3b                	add    bh,BYTE PTR [rbx]
    10b3:	0b 39                	or     edi,DWORD PTR [rcx]
    10b5:	21 01                	and    DWORD PTR [rcx],eax
    10b7:	3c 19                	cmp    al,0x19
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	1c 2e                	sbb    al,0x2e
    10bd:	01 3f                	add    DWORD PTR [rdi],edi
    10bf:	19 03                	sbb    DWORD PTR [rbx],eax
    10c1:	0e                   	(bad)
    10c2:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10c4:	01 3b                	add    DWORD PTR [rbx],edi
    10c6:	0b 39                	or     edi,DWORD PTR [rcx]
    10c8:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    10cb:	49 13 11             	adc    rdx,QWORD PTR [r9]
    10ce:	01 12                	add    DWORD PTR [rdx],edx
    10d0:	07                   	(bad)
    10d1:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    10d5:	01 13                	add    DWORD PTR [rbx],edx
    10d7:	00 00                	add    BYTE PTR [rax],al
    10d9:	1d 34 00 03 0e       	sbb    eax,0xe030034
    10de:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    10e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    10e3:	19 02                	sbb    DWORD PTR [rdx],eax
    10e5:	18 00                	sbb    BYTE PTR [rax],al
    10e7:	00 1e                	add    BYTE PTR [rsi],bl
    10e9:	1d 01 31 13 52       	sbb    eax,0x52133101
    10ee:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
    10f4:	58                   	pop    rax
    10f5:	21 01                	and    DWORD PTR [rcx],eax
    10f7:	59                   	pop    rcx
    10f8:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    10fb:	01 13                	add    DWORD PTR [rbx],edx
    10fd:	00 00                	add    BYTE PTR [rax],al
    10ff:	1f                   	(bad)
    1100:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1103:	19 03                	sbb    DWORD PTR [rbx],eax
    1105:	0e                   	(bad)
    1106:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1108:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    110a:	39 21                	cmp    DWORD PTR [rcx],esp
    110c:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    110f:	20 21                	and    BYTE PTR [rcx],ah
    1111:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
    1114:	01 13                	add    DWORD PTR [rbx],edx
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	20 05 00 03 08 3a    	and    BYTE PTR [rip+0x3a080300],al        # 3a08141e <_end+0x3a07b406>
    111e:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1121:	0b 39                	or     edi,DWORD PTR [rcx]
    1123:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1126:	00 00                	add    BYTE PTR [rax],al
    1128:	21 2e                	and    DWORD PTR [rsi],ebp
    112a:	00 3f                	add    BYTE PTR [rdi],bh
    112c:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    112f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1130:	0e                   	(bad)
    1131:	03 0e                	add    ecx,DWORD PTR [rsi]
    1133:	00 00                	add    BYTE PTR [rax],al
    1135:	22 11                	and    dl,BYTE PTR [rcx]
    1137:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b244b <_end+0x30ac433>
    113d:	1f                   	(bad)
    113e:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1140:	11 01                	adc    DWORD PTR [rcx],eax
    1142:	12 07                	adc    al,BYTE PTR [rdi]
    1144:	10 17                	adc    BYTE PTR [rdi],dl
    1146:	00 00                	add    BYTE PTR [rax],al
    1148:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
    114b:	0b 0b                	or     ecx,DWORD PTR [rbx]
    114d:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    1150:	08 00                	or     BYTE PTR [rax],al
    1152:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    1155:	00 0b                	add    BYTE PTR [rbx],cl
    1157:	0b 00                	or     eax,DWORD PTR [rax]
    1159:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e031175 <_end+0xe02b15d>
    115f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1161:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491ca0 <_end+0x1348bc88>
    1167:	00 00                	add    BYTE PTR [rax],al
    1169:	26 15 01 49 13 01    	es adc eax,0x1134901
    116f:	13 00                	adc    eax,DWORD PTR [rax]
    1171:	00 27                	add    BYTE PTR [rdi],ah
    1173:	26 00 00             	es add BYTE PTR [rax],al
    1176:	00 28                	add    BYTE PTR [rax],ch
    1178:	39 01                	cmp    DWORD PTR [rcx],eax
    117a:	03 08                	add    ecx,DWORD PTR [rax]
    117c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    117e:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011cbd <_end+0x1300bca5>
    1184:	00 00                	add    BYTE PTR [rax],al
    1186:	29 08                	sub    DWORD PTR [rax],ecx
    1188:	00 3a                	add    BYTE PTR [rdx],bh
    118a:	0b 3b                	or     edi,DWORD PTR [rbx]
    118c:	05 39 0b 18 13       	add    eax,0x13180b39
    1191:	00 00                	add    BYTE PTR [rax],al
    1193:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b001199 <_end+0x2affb181>
    1199:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    119c:	19 03                	sbb    DWORD PTR [rbx],eax
    119e:	0e                   	(bad)
    119f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11a1:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1ce0 <_end+0xe6dbcc8>
    11a7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    11ab:	01 13                	add    DWORD PTR [rbx],edx
    11ad:	00 00                	add    BYTE PTR [rax],al
    11af:	2c 2e                	sub    al,0x2e
    11b1:	01 3f                	add    DWORD PTR [rdi],edi
    11b3:	19 03                	sbb    DWORD PTR [rbx],eax
    11b5:	08 3a                	or     BYTE PTR [rdx],bh
    11b7:	0b 3b                	or     edi,DWORD PTR [rbx]
    11b9:	05 39 0b 49 13       	add    eax,0x13490b39
    11be:	3c 19                	cmp    al,0x19
    11c0:	01 13                	add    DWORD PTR [rbx],edx
    11c2:	00 00                	add    BYTE PTR [rax],al
    11c4:	2d 2e 01 3f 19       	sub    eax,0x193f012e
    11c9:	03 0e                	add    ecx,DWORD PTR [rsi]
    11cb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11cd:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871d0c <_end+0x186bcf4>
    11d3:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    11d6:	01 13                	add    DWORD PTR [rbx],edx
    11d8:	00 00                	add    BYTE PTR [rax],al
    11da:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
    11de:	19 03                	sbb    DWORD PTR [rbx],eax
    11e0:	0e                   	(bad)
    11e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11e3:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491d22 <_end+0x1348bd0a>
    11e9:	3c 19                	cmp    al,0x19
    11eb:	00 00                	add    BYTE PTR [rax],al
    11ed:	2f                   	(bad)
    11ee:	39 01                	cmp    DWORD PTR [rcx],eax
    11f0:	03 0e                	add    ecx,DWORD PTR [rsi]
    11f2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11f4:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011d33 <_end+0x1300bd1b>
    11fa:	00 00                	add    BYTE PTR [rax],al
    11fc:	30 2e                	xor    BYTE PTR [rsi],ch
    11fe:	01 3f                	add    DWORD PTR [rdi],edi
    1200:	19 03                	sbb    DWORD PTR [rbx],eax
    1202:	0e                   	(bad)
    1203:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1205:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1207:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1209:	87 01                	xchg   DWORD PTR [rcx],eax
    120b:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    120e:	01 13                	add    DWORD PTR [rbx],edx
    1210:	00 00                	add    BYTE PTR [rax],al
    1212:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    1215:	03 0e                	add    ecx,DWORD PTR [rsi]
    1217:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1219:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    121b:	39 0b                	cmp    DWORD PTR [rbx],ecx
    121d:	49 13 02             	adc    rax,QWORD PTR [r10]
    1220:	18 00                	sbb    BYTE PTR [rax],al
    1222:	00 32                	add    BYTE PTR [rdx],dh
    1224:	34 00                	xor    al,0x0
    1226:	03 0e                	add    ecx,DWORD PTR [rsi]
    1228:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    122a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    122c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    122e:	49 13 00             	adc    rax,QWORD PTR [r8]
    1231:	00 33                	add    BYTE PTR [rbx],dh
    1233:	1d 01 31 13 52       	sbb    eax,0x52133101
    1238:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    123e:	12 07                	adc    al,BYTE PTR [rdi]
    1240:	58                   	pop    rax
    1241:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1244:	57                   	push   rdi
    1245:	0b 01                	or     eax,DWORD PTR [rcx]
    1247:	13 00                	adc    eax,DWORD PTR [rax]
    1249:	00 34 48             	add    BYTE PTR [rax+rcx*2],dh
    124c:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    124f:	83 01 18             	add    DWORD PTR [rcx],0x18
    1252:	00 00                	add    BYTE PTR [rax],al
    1254:	35 48 00 7d 01       	xor    eax,0x17d0048
    1259:	7f 13                	jg     126e <deregister_tm_clones+0x2e>
    125b:	00 00                	add    BYTE PTR [rax],al
    125d:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
    1261:	19 03                	sbb    DWORD PTR [rbx],eax
    1263:	0e                   	(bad)
    1264:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1266:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1268:	39 0b                	cmp    DWORD PTR [rbx],ecx
    126a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    126b:	0e                   	(bad)
    126c:	49 13 20             	adc    rsp,QWORD PTR [r8]
    126f:	0b 01                	or     eax,DWORD PTR [rcx]
    1271:	13 00                	adc    eax,DWORD PTR [rax]
    1273:	00 00                	add    BYTE PTR [rax],al
    1275:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 135b7b <_end+0x12fb63>
    127b:	00 02                	add    BYTE PTR [rdx],al
    127d:	08 00                	or     BYTE PTR [rax],al
    127f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1281:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1283:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1285:	18 13                	sbb    BYTE PTR [rbx],dl
    1287:	00 00                	add    BYTE PTR [rax],al
    1289:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
    128c:	02 18                	add    bl,BYTE PTR [rax]
    128e:	7e 18                	jle    12a8 <register_tm_clones+0x38>
    1290:	00 00                	add    BYTE PTR [rax],al
    1292:	04 2e                	add    al,0x2e
    1294:	01 3f                	add    DWORD PTR [rdi],edi
    1296:	19 03                	sbb    DWORD PTR [rbx],eax
    1298:	0e                   	(bad)
    1299:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    129b:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1dda <_end+0xe6dbdc2>
    12a1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    12a5:	01 13                	add    DWORD PTR [rbx],edx
    12a7:	00 00                	add    BYTE PTR [rax],al
    12a9:	05 05 00 31 13       	add    eax,0x13310005
    12ae:	02 17                	add    dl,BYTE PTR [rdi]
    12b0:	b7 42                	mov    bh,0x42
    12b2:	17                   	(bad)
    12b3:	00 00                	add    BYTE PTR [rax],al
    12b5:	06                   	(bad)
    12b6:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    12bb:	0b 3b                	or     edi,DWORD PTR [rbx]
    12bd:	0b 39                	or     edi,DWORD PTR [rcx]
    12bf:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    12c2:	38 0b                	cmp    BYTE PTR [rbx],cl
    12c4:	00 00                	add    BYTE PTR [rax],al
    12c6:	07                   	(bad)
    12c7:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    12cb:	7f 13                	jg     12e0 <__do_global_dtors_aux+0x30>
    12cd:	00 00                	add    BYTE PTR [rax],al
    12cf:	08 16                	or     BYTE PTR [rsi],dl
    12d1:	00 03                	add    BYTE PTR [rbx],al
    12d3:	0e                   	(bad)
    12d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12d8:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12da:	49 13 00             	adc    rax,QWORD PTR [r8]
    12dd:	00 09                	add    BYTE PTR [rcx],cl
    12df:	1d 01 31 13 52       	sbb    eax,0x52133101
    12e4:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    12ea:	12 07                	adc    al,BYTE PTR [rdi]
    12ec:	58                   	pop    rax
    12ed:	21 01                	and    DWORD PTR [rcx],eax
    12ef:	59                   	pop    rcx
    12f0:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    12f3:	01 13                	add    DWORD PTR [rbx],edx
    12f5:	00 00                	add    BYTE PTR [rax],al
    12f7:	0a 48 01             	or     cl,BYTE PTR [rax+0x1]
    12fa:	7d 01                	jge    12fd <frame_dummy+0xd>
    12fc:	7f 13                	jg     1311 <_Z16buildStringArrayPcj+0x11>
    12fe:	01 13                	add    DWORD PTR [rbx],edx
    1300:	00 00                	add    BYTE PTR [rax],al
    1302:	0b 05 00 31 13 00    	or     eax,DWORD PTR [rip+0x133100]        # 134408 <_end+0x12e3f0>
    1308:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    130b:	01 3f                	add    DWORD PTR [rdi],edi
    130d:	19 03                	sbb    DWORD PTR [rbx],eax
    130f:	0e                   	(bad)
    1310:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1312:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1314:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1316:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    131a:	01 13                	add    DWORD PTR [rbx],edx
    131c:	00 00                	add    BYTE PTR [rax],al
    131e:	0d 0f 00 0b 21       	or     eax,0x210b000f
    1323:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1326:	00 00                	add    BYTE PTR [rax],al
    1328:	0e                   	(bad)
    1329:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    132c:	19 03                	sbb    DWORD PTR [rbx],eax
    132e:	0e                   	(bad)
    132f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1331:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491e70 <_end+0x1348be58>
    1337:	3c 19                	cmp    al,0x19
    1339:	01 13                	add    DWORD PTR [rbx],edx
    133b:	00 00                	add    BYTE PTR [rax],al
    133d:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    1340:	3f                   	(bad)
    1341:	19 03                	sbb    DWORD PTR [rbx],eax
    1343:	0e                   	(bad)
    1344:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1346:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1348:	39 0b                	cmp    DWORD PTR [rbx],ecx
    134a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    134b:	0e                   	(bad)
    134c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1350:	01 13                	add    DWORD PTR [rbx],edx
    1352:	00 00                	add    BYTE PTR [rax],al
    1354:	10 05 00 49 13 34    	adc    BYTE PTR [rip+0x34134900],al        # 34135c5a <_end+0x3412fc42>
    135a:	19 00                	sbb    DWORD PTR [rax],eax
    135c:	00 11                	add    BYTE PTR [rcx],dl
    135e:	2f                   	(bad)
    135f:	00 03                	add    BYTE PTR [rbx],al
    1361:	0e                   	(bad)
    1362:	49 13 00             	adc    rax,QWORD PTR [r8]
    1365:	00 12                	add    BYTE PTR [rdx],dl
    1367:	24 00                	and    al,0x0
    1369:	0b 0b                	or     ecx,DWORD PTR [rbx]
    136b:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    136e:	0e                   	(bad)
    136f:	00 00                	add    BYTE PTR [rax],al
    1371:	13 26                	adc    esp,DWORD PTR [rsi]
    1373:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1376:	00 00                	add    BYTE PTR [rax],al
    1378:	14 2e                	adc    al,0x2e
    137a:	01 3f                	add    DWORD PTR [rdi],edi
    137c:	19 03                	sbb    DWORD PTR [rbx],eax
    137e:	0e                   	(bad)
    137f:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1381:	04 3b                	add    al,0x3b
    1383:	05 39 21 02 6e       	add    eax,0x6e022139
    1388:	0e                   	(bad)
    1389:	49 13 32             	adc    rsi,QWORD PTR [r10]
    138c:	21 01                	and    DWORD PTR [rcx],eax
    138e:	3c 19                	cmp    al,0x19
    1390:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1393:	13 00                	adc    eax,DWORD PTR [rax]
    1395:	00 15 34 00 31 13    	add    BYTE PTR [rip+0x13310034],dl        # 133113cf <_end+0x1330b3b7>
    139b:	02 17                	add    dl,BYTE PTR [rdi]
    139d:	b7 42                	mov    bh,0x42
    139f:	17                   	(bad)
    13a0:	00 00                	add    BYTE PTR [rax],al
    13a2:	16                   	(bad)
    13a3:	0b 01                	or     eax,DWORD PTR [rcx]
    13a5:	11 01                	adc    DWORD PTR [rcx],eax
    13a7:	12 07                	adc    al,BYTE PTR [rdi]
    13a9:	01 13                	add    DWORD PTR [rbx],edx
    13ab:	00 00                	add    BYTE PTR [rax],al
    13ad:	17                   	(bad)
    13ae:	34 00                	xor    al,0x0
    13b0:	03 0e                	add    ecx,DWORD PTR [rsi]
    13b2:	3a 21                	cmp    ah,BYTE PTR [rcx]
    13b4:	01 3b                	add    DWORD PTR [rbx],edi
    13b6:	0b 39                	or     edi,DWORD PTR [rcx]
    13b8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13bb:	00 00                	add    BYTE PTR [rax],al
    13bd:	18 08                	sbb    BYTE PTR [rax],cl
    13bf:	00 3a                	add    BYTE PTR [rdx],bh
    13c1:	0b 3b                	or     edi,DWORD PTR [rbx]
    13c3:	05 39 0b 18 13       	add    eax,0x13180b39
    13c8:	00 00                	add    BYTE PTR [rax],al
    13ca:	19 1d 01 31 13 52    	sbb    DWORD PTR [rip+0x52133101],ebx        # 521344d1 <_end+0x5212e4b9>
    13d0:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    13d6:	12 07                	adc    al,BYTE PTR [rdi]
    13d8:	58                   	pop    rax
    13d9:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    13dc:	57                   	push   rdi
    13dd:	0b 00                	or     eax,DWORD PTR [rax]
    13df:	00 1a                	add    BYTE PTR [rdx],bl
    13e1:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    13e4:	19 03                	sbb    DWORD PTR [rbx],eax
    13e6:	08 3a                	or     BYTE PTR [rdx],bh
    13e8:	0b 3b                	or     edi,DWORD PTR [rbx]
    13ea:	0b 39                	or     edi,DWORD PTR [rcx]
    13ec:	21 03                	and    DWORD PTR [rbx],eax
    13ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13ef:	0e                   	(bad)
    13f0:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    13f4:	01 13                	add    DWORD PTR [rbx],edx
    13f6:	00 00                	add    BYTE PTR [rax],al
    13f8:	1b 13                	sbb    edx,DWORD PTR [rbx]
    13fa:	01 03                	add    DWORD PTR [rbx],eax
    13fc:	0e                   	(bad)
    13fd:	0b 0b                	or     ecx,DWORD PTR [rbx]
    13ff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1401:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1403:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1405:	01 13                	add    DWORD PTR [rbx],edx
    1407:	00 00                	add    BYTE PTR [rax],al
    1409:	1c 1d                	sbb    al,0x1d
    140b:	01 31                	add    DWORD PTR [rcx],esi
    140d:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    1410:	b8 42 05 55 17       	mov    eax,0x17550542
    1415:	58                   	pop    rax
    1416:	21 01                	and    DWORD PTR [rcx],eax
    1418:	59                   	pop    rcx
    1419:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    141c:	01 13                	add    DWORD PTR [rbx],edx
    141e:	00 00                	add    BYTE PTR [rax],al
    1420:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
    1425:	03 08                	add    ecx,DWORD PTR [rax]
    1427:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1429:	03 3b                	add    edi,DWORD PTR [rbx]
    142b:	05 39 21 03 6e       	add    eax,0x6e032139
    1430:	0e                   	(bad)
    1431:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1435:	01 13                	add    DWORD PTR [rbx],edx
    1437:	00 00                	add    BYTE PTR [rax],al
    1439:	1e                   	(bad)
    143a:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    143f:	0b 3b                	or     edi,DWORD PTR [rbx]
    1441:	0b 39                	or     edi,DWORD PTR [rcx]
    1443:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1446:	00 00                	add    BYTE PTR [rax],al
    1448:	1f                   	(bad)
    1449:	34 00                	xor    al,0x0
    144b:	03 0e                	add    ecx,DWORD PTR [rsi]
    144d:	3a 21                	cmp    ah,BYTE PTR [rcx]
    144f:	01 3b                	add    DWORD PTR [rbx],edi
    1451:	0b 39                	or     edi,DWORD PTR [rcx]
    1453:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1456:	02 17                	add    dl,BYTE PTR [rdi]
    1458:	b7 42                	mov    bh,0x42
    145a:	17                   	(bad)
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	20 48 00             	and    BYTE PTR [rax+0x0],cl
    1460:	7d 01                	jge    1463 <_Z11hashMapCtorPFj8string_tEj+0x33>
    1462:	7f 13                	jg     1477 <_Z11hashMapCtorPFj8string_tEj+0x47>
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	21 18                	and    DWORD PTR [rax],ebx
    1468:	00 00                	add    BYTE PTR [rax],al
    146a:	00 22                	add    BYTE PTR [rdx],ah
    146c:	10 00                	adc    BYTE PTR [rax],al
    146e:	0b 21                	or     esp,DWORD PTR [rcx]
    1470:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	23 05 00 03 0e 3a    	and    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e177b <_end+0x3a0db763>
    147b:	21 01                	and    DWORD PTR [rcx],eax
    147d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    147f:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1481:	49 13 02             	adc    rax,QWORD PTR [r10]
    1484:	17                   	(bad)
    1485:	b7 42                	mov    bh,0x42
    1487:	17                   	(bad)
    1488:	00 00                	add    BYTE PTR [rax],al
    148a:	24 36                	and    al,0x36
    148c:	00 02                	add    BYTE PTR [rdx],al
    148e:	18 00                	sbb    BYTE PTR [rax],al
    1490:	00 25 01 01 49 13    	add    BYTE PTR [rip+0x13490101],ah        # 13491597 <_end+0x1348b57f>
    1496:	01 13                	add    DWORD PTR [rbx],edx
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	26 21 00             	es and DWORD PTR [rax],eax
    149d:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    14a0:	0b 00                	or     eax,DWORD PTR [rax]
    14a2:	00 27                	add    BYTE PTR [rdi],ah
    14a4:	48 00 7d 01          	rex.W add BYTE PTR [rbp+0x1],dil
    14a8:	83 01 18             	add    DWORD PTR [rcx],0x18
    14ab:	00 00                	add    BYTE PTR [rax],al
    14ad:	28 2e                	sub    BYTE PTR [rsi],ch
    14af:	01 3f                	add    DWORD PTR [rdi],edi
    14b1:	19 03                	sbb    DWORD PTR [rbx],eax
    14b3:	0e                   	(bad)
    14b4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14b6:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d35f5 <_end+0x3c0cd5dd>
    14bc:	19 01                	sbb    DWORD PTR [rcx],eax
    14be:	13 00                	adc    eax,DWORD PTR [rax]
    14c0:	00 29                	add    BYTE PTR [rcx],ch
    14c2:	34 00                	xor    al,0x0
    14c4:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    14c7:	00 2a                	add    BYTE PTR [rdx],ch
    14c9:	34 00                	xor    al,0x0
    14cb:	03 08                	add    ecx,DWORD PTR [rax]
    14cd:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14cf:	01 3b                	add    DWORD PTR [rbx],edi
    14d1:	0b 39                	or     edi,DWORD PTR [rcx]
    14d3:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    14d6:	02 17                	add    dl,BYTE PTR [rdi]
    14d8:	b7 42                	mov    bh,0x42
    14da:	17                   	(bad)
    14db:	00 00                	add    BYTE PTR [rax],al
    14dd:	2b 2e                	sub    ebp,DWORD PTR [rsi]
    14df:	01 3f                	add    DWORD PTR [rdi],edi
    14e1:	19 03                	sbb    DWORD PTR [rbx],eax
    14e3:	0e                   	(bad)
    14e4:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14e6:	04 3b                	add    al,0x3b
    14e8:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    14ed:	32 21                	xor    ah,BYTE PTR [rcx]
    14ef:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    14f2:	8b 01                	mov    eax,DWORD PTR [rcx]
    14f4:	21 01                	and    DWORD PTR [rcx],eax
    14f6:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    14f9:	13 00                	adc    eax,DWORD PTR [rax]
    14fb:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
    14fe:	00 3f                	add    BYTE PTR [rdi],bh
    1500:	19 03                	sbb    DWORD PTR [rbx],eax
    1502:	08 3a                	or     BYTE PTR [rdx],bh
    1504:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1507:	05 39 21 02 6e       	add    eax,0x6e022139
    150c:	0e                   	(bad)
    150d:	49 13 32             	adc    rsi,QWORD PTR [r10]
    1510:	21 01                	and    DWORD PTR [rcx],eax
    1512:	3c 19                	cmp    al,0x19
    1514:	00 00                	add    BYTE PTR [rax],al
    1516:	2d 05 00 03 0e       	sub    eax,0xe030005
    151b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    151d:	04 3b                	add    al,0x3b
    151f:	05 39 0b 49 13       	add    eax,0x13490b39
    1524:	00 00                	add    BYTE PTR [rax],al
    1526:	2e 0b 01             	cs or  eax,DWORD PTR [rcx]
    1529:	55                   	push   rbp
    152a:	17                   	(bad)
    152b:	00 00                	add    BYTE PTR [rax],al
    152d:	2f                   	(bad)
    152e:	30 00                	xor    BYTE PTR [rax],al
    1530:	03 0e                	add    ecx,DWORD PTR [rsi]
    1532:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
    1536:	00 00                	add    BYTE PTR [rax],al
    1538:	30 2e                	xor    BYTE PTR [rsi],ch
    153a:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    153d:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    1540:	0b 01                	or     eax,DWORD PTR [rcx]
    1542:	13 00                	adc    eax,DWORD PTR [rax]
    1544:	00 31                	add    BYTE PTR [rcx],dh
    1546:	05 00 03 0e 49       	add    eax,0x490e0300
    154b:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    154e:	00 00                	add    BYTE PTR [rax],al
    1550:	32 2e                	xor    ch,BYTE PTR [rsi]
    1552:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1555:	20 21                	and    BYTE PTR [rcx],ah
    1557:	03 01                	add    eax,DWORD PTR [rcx]
    1559:	13 00                	adc    eax,DWORD PTR [rax]
    155b:	00 33                	add    BYTE PTR [rbx],dh
    155d:	39 01                	cmp    DWORD PTR [rcx],eax
    155f:	03 0e                	add    ecx,DWORD PTR [rsi]
    1561:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1563:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1565:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1567:	01 13                	add    DWORD PTR [rbx],edx
    1569:	00 00                	add    BYTE PTR [rax],al
    156b:	34 34                	xor    al,0x34
    156d:	00 03                	add    BYTE PTR [rbx],al
    156f:	0e                   	(bad)
    1570:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1572:	10 3b                	adc    BYTE PTR [rbx],bh
    1574:	21 b2 02 39 21 14    	and    DWORD PTR [rdx+0x14213902],esi
    157a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    157e:	1c 21                	sbb    al,0x21
    1580:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    1584:	00 35 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],dh        # b0b169d <_end+0xb0ab685>
    158a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    158c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    158e:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1590:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1591:	0e                   	(bad)
    1592:	01 13                	add    DWORD PTR [rbx],edx
    1594:	00 00                	add    BYTE PTR [rax],al
    1596:	36 0d 00 03 0e 3a    	ss or  eax,0x3a0e0300
    159c:	21 1c 3b             	and    DWORD PTR [rbx+rdi*1],ebx
    159f:	21 00                	and    DWORD PTR [rax],eax
    15a1:	49 13 38             	adc    rdi,QWORD PTR [r8]
    15a4:	0b 00                	or     eax,DWORD PTR [rax]
    15a6:	00 37                	add    BYTE PTR [rdi],dh
    15a8:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    15ab:	19 03                	sbb    DWORD PTR [rbx],eax
    15ad:	0e                   	(bad)
    15ae:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15b0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15b2:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15b4:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15b8:	00 00                	add    BYTE PTR [rax],al
    15ba:	38 34 00             	cmp    BYTE PTR [rax+rax*1],dh
    15bd:	03 0e                	add    ecx,DWORD PTR [rsi]
    15bf:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15c1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15c3:	39 21                	cmp    DWORD PTR [rcx],esp
    15c5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15c8:	1c 0b                	sbb    al,0xb
    15ca:	00 00                	add    BYTE PTR [rax],al
    15cc:	39 1d 01 31 13 52    	cmp    DWORD PTR [rip+0x52133101],ebx        # 521346d3 <_end+0x5212e6bb>
    15d2:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    15d8:	58                   	pop    rax
    15d9:	21 01                	and    DWORD PTR [rcx],eax
    15db:	59                   	pop    rcx
    15dc:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    15df:	00 00                	add    BYTE PTR [rax],al
    15e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15e3:	01 31                	add    DWORD PTR [rcx],esi
    15e5:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    15e8:	01 13                	add    DWORD PTR [rbx],edx
    15ea:	00 00                	add    BYTE PTR [rax],al
    15ec:	3b 34 00             	cmp    esi,DWORD PTR [rax+rax*1]
    15ef:	31 13                	xor    DWORD PTR [rbx],edx
    15f1:	00 00                	add    BYTE PTR [rax],al
    15f3:	3c 2e                	cmp    al,0x2e
    15f5:	00 3f                	add    BYTE PTR [rdi],bh
    15f7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    15fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15fb:	0e                   	(bad)
    15fc:	03 0e                	add    ecx,DWORD PTR [rsi]
    15fe:	00 00                	add    BYTE PTR [rax],al
    1600:	3d 39 00 03 0e       	cmp    eax,0xe030039
    1605:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1607:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1609:	39 0b                	cmp    DWORD PTR [rbx],ecx
    160b:	00 00                	add    BYTE PTR [rax],al
    160d:	3e 34 00             	ds xor al,0x0
    1610:	03 0e                	add    ecx,DWORD PTR [rsi]
    1612:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1614:	0e                   	(bad)
    1615:	3b 21                	cmp    esp,DWORD PTR [rcx]
    1617:	30 39                	xor    BYTE PTR [rcx],bh
    1619:	21 14 49             	and    DWORD PTR [rcx+rcx*2],edx
    161c:	13 3c 19             	adc    edi,DWORD PTR [rcx+rbx*1]
    161f:	1c 21                	sbb    al,0x21
    1621:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    1625:	00 3f                	add    BYTE PTR [rdi],bh
    1627:	02 01                	add    al,BYTE PTR [rcx]
    1629:	03 0e                	add    ecx,DWORD PTR [rsi]
    162b:	0b 21                	or     esp,DWORD PTR [rcx]
    162d:	08 3a                	or     BYTE PTR [rdx],bh
    162f:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1632:	05 39 21 0d 01       	add    eax,0x10d2139
    1637:	13 00                	adc    eax,DWORD PTR [rax]
    1639:	00 40 0d             	add    BYTE PTR [rax+0xd],al
    163c:	00 03                	add    BYTE PTR [rbx],al
    163e:	08 3a                	or     BYTE PTR [rdx],bh
    1640:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1643:	05 39 0b 49 13       	add    eax,0x13490b39
    1648:	38 21                	cmp    BYTE PTR [rcx],ah
    164a:	00 00                	add    BYTE PTR [rax],al
    164c:	00 41 2e             	add    BYTE PTR [rcx+0x2e],al
    164f:	01 3f                	add    DWORD PTR [rdi],edi
    1651:	19 03                	sbb    DWORD PTR [rbx],eax
    1653:	0e                   	(bad)
    1654:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1656:	04 3b                	add    al,0x3b
    1658:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    165d:	32 21                	xor    ah,BYTE PTR [rcx]
    165f:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    1662:	63 19                	movsxd ebx,DWORD PTR [rcx]
    1664:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1667:	13 00                	adc    eax,DWORD PTR [rax]
    1669:	00 42 16             	add    BYTE PTR [rdx+0x16],al
    166c:	00 03                	add    BYTE PTR [rbx],al
    166e:	0e                   	(bad)
    166f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1671:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134921b0 <_end+0x1348c198>
    1677:	00 00                	add    BYTE PTR [rax],al
    1679:	43 2f                	rex.XB (bad)
    167b:	00 03                	add    BYTE PTR [rbx],al
    167d:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1680:	00 00                	add    BYTE PTR [rax],al
    1682:	44 13 01             	adc    r8d,DWORD PTR [rcx]
    1685:	03 0e                	add    ecx,DWORD PTR [rsi]
    1687:	0b 21                	or     esp,DWORD PTR [rcx]
    1689:	01 3a                	add    DWORD PTR [rdx],edi
    168b:	21 10                	and    DWORD PTR [rax],edx
    168d:	3b 21                	cmp    esp,DWORD PTR [rcx]
    168f:	8a 02                	mov    al,BYTE PTR [rdx]
    1691:	39 21                	cmp    DWORD PTR [rcx],esp
    1693:	0c 01                	or     al,0x1
    1695:	13 00                	adc    eax,DWORD PTR [rax]
    1697:	00 45 34             	add    BYTE PTR [rbp+0x34],al
    169a:	00 03                	add    BYTE PTR [rbx],al
    169c:	08 3a                	or     BYTE PTR [rdx],bh
    169e:	21 10                	and    DWORD PTR [rax],edx
    16a0:	3b 21                	cmp    esp,DWORD PTR [rcx]
    16a2:	91                   	xchg   ecx,eax
    16a3:	02 39                	add    bh,BYTE PTR [rcx]
    16a5:	21 21                	and    DWORD PTR [rcx],esp
    16a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16a8:	0e                   	(bad)
    16a9:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    16ac:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    16af:	1c 21                	sbb    al,0x21
    16b1:	01 6c 19 20          	add    DWORD PTR [rcx+rbx*1+0x20],ebp
    16b5:	21 01                	and    DWORD PTR [rcx],eax
    16b7:	00 00                	add    BYTE PTR [rax],al
    16b9:	46 0d 00 03 08 3a    	rex.RX or eax,0x3a080300
    16bf:	21 16                	and    DWORD PTR [rsi],edx
    16c1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16c3:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16c5:	49 13 38             	adc    rdi,QWORD PTR [r8]
    16c8:	0b 00                	or     eax,DWORD PTR [rax]
    16ca:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    16cd:	00 03                	add    BYTE PTR [rbx],al
    16cf:	0e                   	(bad)
    16d0:	3c 19                	cmp    al,0x19
    16d2:	00 00                	add    BYTE PTR [rax],al
    16d4:	48 0b 01             	or     rax,QWORD PTR [rcx]
    16d7:	00 00                	add    BYTE PTR [rax],al
    16d9:	49 34 00             	rex.WB xor al,0x0
    16dc:	03 08                	add    ecx,DWORD PTR [rax]
    16de:	3a 21                	cmp    ah,BYTE PTR [rcx]
    16e0:	01 3b                	add    DWORD PTR [rbx],edi
    16e2:	0b 39                	or     edi,DWORD PTR [rcx]
    16e4:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    16e7:	00 00                	add    BYTE PTR [rax],al
    16e9:	4a                   	rex.WX
    16ea:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    16ed:	19 03                	sbb    DWORD PTR [rbx],eax
    16ef:	0e                   	(bad)
    16f0:	3a 21                	cmp    ah,BYTE PTR [rcx]
    16f2:	01 3b                	add    DWORD PTR [rbx],edi
    16f4:	0b 39                	or     edi,DWORD PTR [rcx]
    16f6:	21 06                	and    DWORD PTR [rsi],eax
    16f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16f9:	0e                   	(bad)
    16fa:	11 01                	adc    DWORD PTR [rcx],eax
    16fc:	12 07                	adc    al,BYTE PTR [rdi]
    16fe:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1702:	01 13                	add    DWORD PTR [rbx],edx
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	4b 34 00             	rex.WXB xor al,0x0
    1709:	03 0e                	add    ecx,DWORD PTR [rsi]
    170b:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    170f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1710:	19 02                	sbb    DWORD PTR [rdx],eax
    1712:	18 00                	sbb    BYTE PTR [rax],al
    1714:	00 4c 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],cl
    1718:	03 0e                	add    ecx,DWORD PTR [rsi]
    171a:	3a 21                	cmp    ah,BYTE PTR [rcx]
    171c:	01 3b                	add    DWORD PTR [rbx],edi
    171e:	0b 39                	or     edi,DWORD PTR [rcx]
    1720:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1723:	02 18                	add    bl,BYTE PTR [rax]
    1725:	00 00                	add    BYTE PTR [rax],al
    1727:	4d 0b 01             	or     r8,QWORD PTR [r9]
    172a:	31 13                	xor    DWORD PTR [rbx],edx
    172c:	55                   	push   rbp
    172d:	17                   	(bad)
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	4e                   	rex.WRX
    1731:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1734:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1737:	11 01                	adc    DWORD PTR [rcx],eax
    1739:	12 07                	adc    al,BYTE PTR [rdi]
    173b:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    173f:	01 13                	add    DWORD PTR [rbx],edx
    1741:	00 00                	add    BYTE PTR [rax],al
    1743:	4f 39 00             	rex.WRXB cmp QWORD PTR [r8],r8
    1746:	03 0e                	add    ecx,DWORD PTR [rsi]
    1748:	3a 21                	cmp    ah,BYTE PTR [rcx]
    174a:	05 3b 05 39 21       	add    eax,0x2139053b
    174f:	0d 00 00 50 39       	or     eax,0x39500000
    1754:	00 03                	add    BYTE PTR [rbx],al
    1756:	0e                   	(bad)
    1757:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1759:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 1892298 <_end+0x188c280>
    175f:	19 00                	sbb    DWORD PTR [rax],eax
    1761:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
    1764:	01 3f                	add    DWORD PTR [rdi],edi
    1766:	19 03                	sbb    DWORD PTR [rbx],eax
    1768:	0e                   	(bad)
    1769:	3a 21                	cmp    ah,BYTE PTR [rcx]
    176b:	04 3b                	add    al,0x3b
    176d:	21 c9                	and    ecx,ecx
    176f:	04 39                	add    al,0x39
    1771:	21 0c 6e             	and    DWORD PTR [rsi+rbp*2],ecx
    1774:	0e                   	(bad)
    1775:	49 13 32             	adc    rsi,QWORD PTR [r10]
    1778:	21 01                	and    DWORD PTR [rcx],eax
    177a:	3c 19                	cmp    al,0x19
    177c:	8b 01                	mov    eax,DWORD PTR [rcx]
    177e:	21 01                	and    DWORD PTR [rcx],eax
    1780:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1783:	13 00                	adc    eax,DWORD PTR [rax]
    1785:	00 52 16             	add    BYTE PTR [rdx+0x16],dl
    1788:	00 03                	add    BYTE PTR [rbx],al
    178a:	08 3a                	or     BYTE PTR [rdx],bh
    178c:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    178f:	21 b0 04 39 21 08    	and    DWORD PTR [rax+0x8213904],esi
    1795:	49 13 32             	adc    rsi,QWORD PTR [r10]
    1798:	21 01                	and    DWORD PTR [rcx],eax
    179a:	00 00                	add    BYTE PTR [rax],al
    179c:	53                   	push   rbx
    179d:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    17a0:	19 03                	sbb    DWORD PTR [rbx],eax
    17a2:	0e                   	(bad)
    17a3:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17a5:	04 3b                	add    al,0x3b
    17a7:	21 a1 05 39 21 02    	and    DWORD PTR [rcx+0x2213905],esp
    17ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17ae:	0e                   	(bad)
    17af:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17b2:	21 01                	and    DWORD PTR [rcx],eax
    17b4:	3c 19                	cmp    al,0x19
    17b6:	00 00                	add    BYTE PTR [rax],al
    17b8:	54                   	push   rsp
    17b9:	34 00                	xor    al,0x0
    17bb:	03 08                	add    ecx,DWORD PTR [rax]
    17bd:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17bf:	10 3b                	adc    BYTE PTR [rbx],bh
    17c1:	21 94 02 39 21 21 6e 	and    DWORD PTR [rdx+rax*1+0x6e212139],edx
    17c8:	0e                   	(bad)
    17c9:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    17cc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    17cf:	1c 06                	sbb    al,0x6
    17d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    17d2:	19 20                	sbb    DWORD PTR [rax],esp
    17d4:	21 01                	and    DWORD PTR [rcx],eax
    17d6:	00 00                	add    BYTE PTR [rax],al
    17d8:	55                   	push   rbp
    17d9:	30 00                	xor    BYTE PTR [rax],al
    17db:	03 0e                	add    ecx,DWORD PTR [rsi]
    17dd:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    17e1:	00 00                	add    BYTE PTR [rax],al
    17e3:	56                   	push   rsi
    17e4:	2f                   	(bad)
    17e5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    17e8:	00 00                	add    BYTE PTR [rax],al
    17ea:	57                   	push   rdi
    17eb:	37                   	(bad)
    17ec:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    17ef:	00 00                	add    BYTE PTR [rax],al
    17f1:	58                   	pop    rax
    17f2:	15 01 49 13 01       	adc    eax,0x1134901
    17f7:	13 00                	adc    eax,DWORD PTR [rax]
    17f9:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
    17fc:	00 03                	add    BYTE PTR [rbx],al
    17fe:	0e                   	(bad)
    17ff:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1801:	1d 3b 0b 39 0b       	sbb    eax,0xb390b3b
    1806:	49 13 00             	adc    rax,QWORD PTR [r8]
    1809:	00 5a 2e             	add    BYTE PTR [rdx+0x2e],bl
    180c:	00 3f                	add    BYTE PTR [rdi],bh
    180e:	19 03                	sbb    DWORD PTR [rbx],eax
    1810:	0e                   	(bad)
    1811:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1813:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492352 <_end+0x1348c33a>
    1819:	3c 19                	cmp    al,0x19
    181b:	00 00                	add    BYTE PTR [rax],al
    181d:	5b                   	pop    rbx
    181e:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    1823:	21 15 3b 05 39 0b    	and    DWORD PTR [rip+0xb39053b],edx        # b391d64 <_end+0xb38bd4c>
    1829:	49 13 88 01 0b 38 0b 	adc    rcx,QWORD PTR [r8+0xb380b01]
    1830:	00 00                	add    BYTE PTR [rax],al
    1832:	5c                   	pop    rsp
    1833:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1836:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1839:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    183c:	13 00                	adc    eax,DWORD PTR [rax]
    183e:	00 5d 05             	add    BYTE PTR [rbp+0x5],bl
    1841:	00 03                	add    BYTE PTR [rbx],al
    1843:	08 3a                	or     BYTE PTR [rdx],bh
    1845:	0b 3b                	or     edi,DWORD PTR [rbx]
    1847:	05 39 0b 49 13       	add    eax,0x13490b39
    184c:	00 00                	add    BYTE PTR [rax],al
    184e:	5e                   	pop    rsi
    184f:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1852:	19 03                	sbb    DWORD PTR [rbx],eax
    1854:	0e                   	(bad)
    1855:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1857:	01 3b                	add    DWORD PTR [rbx],edi
    1859:	0b 39                	or     edi,DWORD PTR [rcx]
    185b:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    185e:	49 13 20             	adc    rsp,QWORD PTR [r8]
    1861:	21 01                	and    DWORD PTR [rcx],eax
    1863:	01 13                	add    DWORD PTR [rbx],edx
    1865:	00 00                	add    BYTE PTR [rax],al
    1867:	5f                   	pop    rdi
    1868:	34 00                	xor    al,0x0
    186a:	03 0e                	add    ecx,DWORD PTR [rsi]
    186c:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    1870:	6c                   	ins    BYTE PTR es:[rdi],dx
    1871:	19 00                	sbb    DWORD PTR [rax],eax
    1873:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    1876:	01 31                	add    DWORD PTR [rcx],esi
    1878:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    187b:	b8 42 05 55 17       	mov    eax,0x17550542
    1880:	58                   	pop    rax
    1881:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    1884:	05 57 0b 00 00       	add    eax,0xb57
    1889:	61                   	(bad)
    188a:	1d 01 31 13 52       	sbb    eax,0x52133101
    188f:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1895:	12 07                	adc    al,BYTE PTR [rdi]
    1897:	58                   	pop    rax
    1898:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    189b:	21 f7                	and    edi,esi
    189d:	08 57 0b             	or     BYTE PTR [rdi+0xb],dl
    18a0:	01 13                	add    DWORD PTR [rbx],edx
    18a2:	00 00                	add    BYTE PTR [rax],al
    18a4:	62 0b 01 55 17       	(bad)
    18a9:	01 13                	add    DWORD PTR [rbx],edx
    18ab:	00 00                	add    BYTE PTR [rax],al
    18ad:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    18af:	01 3f                	add    DWORD PTR [rdi],edi
    18b1:	19 03                	sbb    DWORD PTR [rbx],eax
    18b3:	0e                   	(bad)
    18b4:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18b6:	02 3b                	add    bh,BYTE PTR [rbx]
    18b8:	0b 39                	or     edi,DWORD PTR [rcx]
    18ba:	21 01                	and    DWORD PTR [rcx],eax
    18bc:	49 13 20             	adc    rsp,QWORD PTR [r8]
    18bf:	21 03                	and    DWORD PTR [rbx],eax
    18c1:	34 19                	xor    al,0x19
    18c3:	01 13                	add    DWORD PTR [rbx],edx
    18c5:	00 00                	add    BYTE PTR [rax],al
    18c7:	64 48 00 7d 01       	rex.W add BYTE PTR fs:[rbp+0x1],dil
    18cc:	82                   	(bad)
    18cd:	01 19                	add    DWORD PTR [rcx],ebx
    18cf:	7f 13                	jg     18e4 <_Z11hashMapDtorP7HashMap+0x14>
    18d1:	00 00                	add    BYTE PTR [rax],al
    18d3:	65 05 00 31 13 1c    	gs add eax,0x1c133100
    18d9:	21 00                	and    DWORD PTR [rax],eax
    18db:	00 00                	add    BYTE PTR [rax],al
    18dd:	66 11 01             	adc    WORD PTR [rcx],ax
    18e0:	25 0e 13 0b 03       	and    eax,0x30b130e
    18e5:	1f                   	(bad)
    18e6:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    18e8:	11 01                	adc    DWORD PTR [rcx],eax
    18ea:	12 07                	adc    al,BYTE PTR [rdi]
    18ec:	10 17                	adc    BYTE PTR [rdi],dl
    18ee:	00 00                	add    BYTE PTR [rax],al
    18f0:	67 39 01             	cmp    DWORD PTR [ecx],eax
    18f3:	03 08                	add    ecx,DWORD PTR [rax]
    18f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    18f7:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012436 <_end+0x1300c41e>
    18fd:	00 00                	add    BYTE PTR [rax],al
    18ff:	68 39 00 03 08       	push   0x8030039
    1904:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1906:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1908:	39 0b                	cmp    DWORD PTR [rbx],ecx
    190a:	00 00                	add    BYTE PTR [rax],al
    190c:	69 39 01 03 08 3a    	imul   edi,DWORD PTR [rcx],0x3a080301
    1912:	0b 3b                	or     edi,DWORD PTR [rbx]
    1914:	05 39 0b 89 01       	add    eax,0x1890b39
    1919:	19 01                	sbb    DWORD PTR [rcx],eax
    191b:	13 00                	adc    eax,DWORD PTR [rax]
    191d:	00 6a 13             	add    BYTE PTR [rdx+0x13],ch
    1920:	01 03                	add    DWORD PTR [rbx],eax
    1922:	0e                   	(bad)
    1923:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1925:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1927:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # 2466 <_Z10debugPrintP4List+0x216>
    192d:	6b 34 00 03          	imul   esi,DWORD PTR [rax+rax*1],0x3
    1931:	0e                   	(bad)
    1932:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1934:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2473 <_end+0xe6dc45b>
    193a:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    193d:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1940:	1c 0b                	sbb    al,0xb
    1942:	6c                   	ins    BYTE PTR es:[rdi],dx
    1943:	19 20                	sbb    DWORD PTR [rax],esp
    1945:	0b 00                	or     eax,DWORD PTR [rax]
    1947:	00 6c 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],ch
    194b:	3f                   	(bad)
    194c:	19 03                	sbb    DWORD PTR [rbx],eax
    194e:	08 3a                	or     BYTE PTR [rdx],bh
    1950:	0b 3b                	or     edi,DWORD PTR [rbx]
    1952:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1957:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    195b:	00 00                	add    BYTE PTR [rax],al
    195d:	6d                   	ins    DWORD PTR es:[rdi],dx
    195e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1961:	19 03                	sbb    DWORD PTR [rbx],eax
    1963:	0e                   	(bad)
    1964:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1966:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e24a5 <_end+0xe6dc48d>
    196c:	32 0b                	xor    cl,BYTE PTR [rbx]
    196e:	3c 19                	cmp    al,0x19
    1970:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1973:	13 00                	adc    eax,DWORD PTR [rax]
    1975:	00 6e 16             	add    BYTE PTR [rsi+0x16],ch
    1978:	00 03                	add    BYTE PTR [rbx],al
    197a:	0e                   	(bad)
    197b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    197d:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134924bc <_end+0x1348c4a4>
    1983:	32 0b                	xor    cl,BYTE PTR [rbx]
    1985:	00 00                	add    BYTE PTR [rax],al
    1987:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1988:	3a 00                	cmp    al,BYTE PTR [rax]
    198a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    198c:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 131824cb <_end+0x1317c4b3>
    1992:	00 00                	add    BYTE PTR [rax],al
    1994:	70 2e                	jo     19c4 <_Z17hashMapDebugPrintP7HashMap+0x84>
    1996:	01 3f                	add    DWORD PTR [rdi],edi
    1998:	19 03                	sbb    DWORD PTR [rbx],eax
    199a:	0e                   	(bad)
    199b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    199d:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e24dc <_end+0xe6dc4c4>
    19a3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    19a7:	00 00                	add    BYTE PTR [rax],al
    19a9:	71 87                	jno    1932 <_Z11hashMapDtorP7HashMap+0x62>
    19ab:	82                   	(bad)
    19ac:	01 01                	add    DWORD PTR [rcx],eax
    19ae:	03 08                	add    ecx,DWORD PTR [rax]
    19b0:	00 00                	add    BYTE PTR [rax],al
    19b2:	72 34                	jb     19e8 <_Z17hashMapDebugPrintP7HashMap+0xa8>
    19b4:	00 03                	add    BYTE PTR [rbx],al
    19b6:	08 3a                	or     BYTE PTR [rdx],bh
    19b8:	0b 3b                	or     edi,DWORD PTR [rbx]
    19ba:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    19bf:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    19c2:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    19c5:	1c 05                	sbb    al,0x5
    19c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    19c8:	19 20                	sbb    DWORD PTR [rax],esp
    19ca:	0b 00                	or     eax,DWORD PTR [rax]
    19cc:	00 73 30             	add    BYTE PTR [rbx+0x30],dh
    19cf:	00 03                	add    BYTE PTR [rbx],al
    19d1:	0e                   	(bad)
    19d2:	49 13 1c 05 00 00 74 	adc    rbx,QWORD PTR [rax*1+0x39740000]
    19d9:	39 
    19da:	01 03                	add    DWORD PTR [rbx],eax
    19dc:	0e                   	(bad)
    19dd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19df:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 189251e <_end+0x188c506>
    19e5:	19 01                	sbb    DWORD PTR [rcx],eax
    19e7:	13 00                	adc    eax,DWORD PTR [rax]
    19e9:	00 75 39             	add    BYTE PTR [rbp+0x39],dh
    19ec:	01 03                	add    DWORD PTR [rbx],eax
    19ee:	0e                   	(bad)
    19ef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19f1:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012530 <_end+0x1300c518>
    19f7:	00 00                	add    BYTE PTR [rax],al
    19f9:	76 24                	jbe    1a1f <_Z15crc32HashString8string_t+0x1f>
    19fb:	00 0b                	add    BYTE PTR [rbx],cl
    19fd:	0b 3e                	or     edi,DWORD PTR [rsi]
    19ff:	0b 03                	or     eax,DWORD PTR [rbx]
    1a01:	08 00                	or     BYTE PTR [rax],al
    1a03:	00 77 0f             	add    BYTE PTR [rdi+0xf],dh
    1a06:	00 0b                	add    BYTE PTR [rbx],cl
    1a08:	0b 00                	or     eax,DWORD PTR [rax]
    1a0a:	00 78 26             	add    BYTE PTR [rax+0x26],bh
    1a0d:	00 00                	add    BYTE PTR [rax],al
    1a0f:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    1a12:	00 3a                	add    BYTE PTR [rdx],bh
    1a14:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a16:	0b 39                	or     edi,DWORD PTR [rcx]
    1a18:	0b 18                	or     ebx,DWORD PTR [rax]
    1a1a:	13 00                	adc    eax,DWORD PTR [rax]
    1a1c:	00 7a 13             	add    BYTE PTR [rdx+0x13],bh
    1a1f:	01 03                	add    DWORD PTR [rbx],eax
    1a21:	0e                   	(bad)
    1a22:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1a24:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a26:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a28:	01 13                	add    DWORD PTR [rbx],edx
    1a2a:	00 00                	add    BYTE PTR [rax],al
    1a2c:	7b 17                	jnp    1a45 <_Z15crc32HashString8string_t+0x45>
    1a2e:	01 0b                	add    DWORD PTR [rbx],ecx
    1a30:	0b 3a                	or     edi,DWORD PTR [rdx]
    1a32:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a34:	0b 39                	or     edi,DWORD PTR [rcx]
    1a36:	0b 01                	or     eax,DWORD PTR [rcx]
    1a38:	13 00                	adc    eax,DWORD PTR [rax]
    1a3a:	00 7c 16 00          	add    BYTE PTR [rsi+rdx*1+0x0],bh
    1a3e:	03 0e                	add    ecx,DWORD PTR [rsi]
    1a40:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a42:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a44:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a46:	00 00                	add    BYTE PTR [rax],al
    1a48:	7d 15                	jge    1a5f <_Z15crc32HashString8string_t+0x5f>
    1a4a:	00 00                	add    BYTE PTR [rax],al
    1a4c:	00 7e 2e             	add    BYTE PTR [rsi+0x2e],bh
    1a4f:	01 3f                	add    DWORD PTR [rdi],edi
    1a51:	19 03                	sbb    DWORD PTR [rbx],eax
    1a53:	08 3a                	or     BYTE PTR [rdx],bh
    1a55:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a57:	05 39 0b 49 13       	add    eax,0x13490b39
    1a5c:	3c 19                	cmp    al,0x19
    1a5e:	01 13                	add    DWORD PTR [rbx],edx
    1a60:	00 00                	add    BYTE PTR [rax],al
    1a62:	7f 2e                	jg     1a92 <_Z15crc32HashString8string_t+0x92>
    1a64:	01 3f                	add    DWORD PTR [rdi],edi
    1a66:	19 03                	sbb    DWORD PTR [rbx],eax
    1a68:	0e                   	(bad)
    1a69:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a6b:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18725aa <_end+0x186c592>
    1a71:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1a74:	01 13                	add    DWORD PTR [rbx],edx
    1a76:	00 00                	add    BYTE PTR [rax],al
    1a78:	80 01 13             	add    BYTE PTR [rcx],0x13
    1a7b:	01 0b                	add    DWORD PTR [rbx],ecx
    1a7d:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
    1a83:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25c2 <_end+0xe6dc5aa>
    1a89:	01 13                	add    DWORD PTR [rbx],edx
    1a8b:	00 00                	add    BYTE PTR [rax],al
    1a8d:	81 01 16 00 03 0e    	add    DWORD PTR [rcx],0xe030016
    1a93:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a95:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134925d4 <_end+0x1348c5bc>
    1a9b:	88 01                	mov    BYTE PTR [rcx],al
    1a9d:	0b 00                	or     eax,DWORD PTR [rax]
    1a9f:	00 82 01 13 01 03    	add    BYTE PTR [rdx+0x3011301],al
    1aa5:	08 0b                	or     BYTE PTR [rbx],cl
    1aa7:	0b 3a                	or     edi,DWORD PTR [rdx]
    1aa9:	0b 3b                	or     edi,DWORD PTR [rbx]
    1aab:	0b 39                	or     edi,DWORD PTR [rcx]
    1aad:	0b 01                	or     eax,DWORD PTR [rcx]
    1aaf:	13 00                	adc    eax,DWORD PTR [rax]
    1ab1:	00 83 01 39 01 03    	add    BYTE PTR [rbx+0x3013901],al
    1ab7:	0e                   	(bad)
    1ab8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1aba:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1abc:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1abe:	00 00                	add    BYTE PTR [rax],al
    1ac0:	84 01                	test   BYTE PTR [rcx],al
    1ac2:	39 00                	cmp    DWORD PTR [rax],eax
    1ac4:	03 08                	add    ecx,DWORD PTR [rax]
    1ac6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ac8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1aca:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1acc:	89 01                	mov    DWORD PTR [rcx],eax
    1ace:	19 00                	sbb    DWORD PTR [rax],eax
    1ad0:	00 85 01 34 00 03    	add    BYTE PTR [rbp+0x3003401],al
    1ad6:	0e                   	(bad)
    1ad7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ad9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1adb:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1add:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1ae1:	00 00                	add    BYTE PTR [rax],al
    1ae3:	86 01                	xchg   BYTE PTR [rcx],al
    1ae5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1ae8:	19 03                	sbb    DWORD PTR [rbx],eax
    1aea:	0e                   	(bad)
    1aeb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1aed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1aef:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1af1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1af2:	0e                   	(bad)
    1af3:	3c 19                	cmp    al,0x19
    1af5:	01 13                	add    DWORD PTR [rbx],edx
    1af7:	00 00                	add    BYTE PTR [rax],al
    1af9:	87 01                	xchg   DWORD PTR [rcx],eax
    1afb:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1afe:	19 03                	sbb    DWORD PTR [rbx],eax
    1b00:	0e                   	(bad)
    1b01:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b03:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b05:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b07:	87 01                	xchg   DWORD PTR [rcx],eax
    1b09:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1b0c:	01 13                	add    DWORD PTR [rbx],edx
    1b0e:	00 00                	add    BYTE PTR [rax],al
    1b10:	88 01                	mov    BYTE PTR [rcx],al
    1b12:	05 00 03 08 3a       	add    eax,0x3a080300
    1b17:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b19:	0b 39                	or     edi,DWORD PTR [rcx]
    1b1b:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1b1e:	00 00                	add    BYTE PTR [rax],al
    1b20:	89 01                	mov    DWORD PTR [rcx],eax
    1b22:	0b 00                	or     eax,DWORD PTR [rax]
    1b24:	00 00                	add    BYTE PTR [rax],al
    1b26:	8a 01                	mov    al,BYTE PTR [rcx]
    1b28:	1d 01 31 13 52       	sbb    eax,0x52133101
    1b2d:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1b33:	12 07                	adc    al,BYTE PTR [rdi]
    1b35:	58                   	pop    rax
    1b36:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    1b39:	57                   	push   rdi
    1b3a:	0b 00                	or     eax,DWORD PTR [rax]
    1b3c:	00 8b 01 48 01 7d    	add    BYTE PTR [rbx+0x7d014801],cl
    1b42:	01 82 01 19 7f 13    	add    DWORD PTR [rdx+0x137f1901],eax
    1b48:	01 13                	add    DWORD PTR [rbx],edx
    1b4a:	00 00                	add    BYTE PTR [rax],al
    1b4c:	8c 01                	mov    WORD PTR [rcx],es
    1b4e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b51:	19 03                	sbb    DWORD PTR [rbx],eax
    1b53:	0e                   	(bad)
    1b54:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b56:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b58:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b5b:	0e                   	(bad)
    1b5c:	20 0b                	and    BYTE PTR [rbx],cl
    1b5e:	01 13                	add    DWORD PTR [rbx],edx
    1b60:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	e3 00                	jrcxz  2 <__abi_tag-0x37a>
       2:	00 00                	add    BYTE PTR [rax],al
       4:	05 00 08 00 8b       	add    eax,0x8b000800
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 01                	add    BYTE PTR [rcx],al
       d:	01 01                	add    DWORD PTR [rcx],eax
       f:	fb                   	sti
      10:	0e                   	(bad)
      11:	0d 00 01 01 01       	or     eax,0x1010100
      16:	01 00                	add    DWORD PTR [rax],eax
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	01 00                	add    DWORD PTR [rax],eax
      1c:	00 01                	add    BYTE PTR [rcx],al
      1e:	01 01                	add    DWORD PTR [rcx],eax
      20:	1f                   	(bad)
      21:	09 00                	or     DWORD PTR [rax],eax
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 2f                	add    BYTE PTR [rdi],ch
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 41 00             	add    BYTE PTR [rcx+0x0],al
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
      31:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
      34:	00 00                	add    BYTE PTR [rax],al
      36:	9a                   	(bad)
      37:	00 00                	add    BYTE PTR [rax],al
      39:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	00 dd                	add    ch,bl
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 02                	add    BYTE PTR [rdx],al
      47:	01 1f                	add    DWORD PTR [rdi],ebx
      49:	02 0f                	add    cl,BYTE PTR [rdi]
      4b:	0f 26                	(bad)
      4d:	00 00                	add    BYTE PTR [rax],al
      4f:	00 01                	add    BYTE PTR [rcx],al
      51:	26 00 00             	es add BYTE PTR [rax],al
      54:	00 01                	add    BYTE PTR [rcx],al
      56:	07                   	(bad)
      57:	01 00                	add    DWORD PTR [rax],eax
      59:	00 02                	add    BYTE PTR [rdx],al
      5b:	10 01                	adc    BYTE PTR [rcx],al
      5d:	00 00                	add    BYTE PTR [rax],al
      5f:	03 19                	add    ebx,DWORD PTR [rcx]
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
      66:	01 00                	add    DWORD PTR [rax],eax
      68:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 197 <__abi_tag-0x1e5>
      6e:	06                   	(bad)
      6f:	33 01                	xor    eax,DWORD PTR [rcx]
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 42                	add    al,0x42
      75:	01 00                	add    DWORD PTR [rax],eax
      77:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7a:	01 00                	add    DWORD PTR [rax],eax
      7c:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7f:	01 00                	add    DWORD PTR [rax],eax
      81:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1da <__abi_tag-0x1a2>
      87:	04 62                	add    al,0x62
      89:	01 00                	add    DWORD PTR [rax],eax
      8b:	00 07                	add    BYTE PTR [rdi],al
      8d:	6d                   	ins    DWORD PTR es:[rdi],dx
      8e:	01 00                	add    DWORD PTR [rax],eax
      90:	00 07                	add    BYTE PTR [rdi],al
      92:	75 01                	jne    95 <__abi_tag-0x2e7>
      94:	00 00                	add    BYTE PTR [rax],al
      96:	08 05 21 00 09 02    	or     BYTE PTR [rip+0x2090021],al        # 20900bd <_end+0x208a0a5>
      9c:	e0 11                	loopne af <__abi_tag-0x2cd>
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	00 00                	add    BYTE PTR [rax],al
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	18 06                	sbb    BYTE PTR [rsi],al
      a6:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b06b1 <_end+0x54aa699>
      ac:	21 06                	and    DWORD PTR [rsi],eax
      ae:	11 04 02             	adc    DWORD PTR [rdx+rax*1],eax
      b1:	05 17 03 dc 03       	add    eax,0x3dc0317
      b6:	20 4a 04             	and    BYTE PTR [rdx+0x4],cl
      b9:	01 05 0c 03 a5 7c    	add    DWORD PTR [rip+0x7ca5030c],eax        # 7ca503cb <_end+0x7ca4a3b3>
      bf:	58                   	pop    rax
      c0:	04 02                	add    al,0x2
      c2:	05 01 06 03 d9       	add    eax,0xd9030601
      c7:	03 4a 05             	add    ecx,DWORD PTR [rdx+0x5]
      ca:	03 14 05 17 06 01 2e 	add    edx,DWORD PTR [rax*1+0x2e010617]
      d1:	58                   	pop    rax
      d2:	04 01                	add    al,0x1
      d4:	05 0c 00 02 04       	add    eax,0x402000c
      d9:	01 03                	add    DWORD PTR [rbx],eax
      db:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
      dc:	7c 01                	jl     df <__abi_tag-0x29d>
      de:	05 01 08 13 02       	add    eax,0x2130801
      e3:	04 00                	add    al,0x0
      e5:	01 01                	add    DWORD PTR [rcx],eax
      e7:	53                   	push   rbx
      e8:	07                   	(bad)
      e9:	00 00                	add    BYTE PTR [rax],al
      eb:	05 00 08 00 a9       	add    eax,0xa9000800
      f0:	00 00                	add    BYTE PTR [rax],al
      f2:	00 01                	add    BYTE PTR [rcx],al
      f4:	01 01                	add    DWORD PTR [rcx],eax
      f6:	fb                   	sti
      f7:	0e                   	(bad)
      f8:	0d 00 01 01 01       	or     eax,0x1010100
      fd:	01 00                	add    DWORD PTR [rax],eax
      ff:	00 00                	add    BYTE PTR [rax],al
     101:	01 00                	add    DWORD PTR [rax],eax
     103:	00 01                	add    BYTE PTR [rcx],al
     105:	01 01                	add    DWORD PTR [rcx],eax
     107:	1f                   	(bad)
     108:	09 00                	or     DWORD PTR [rax],eax
     10a:	00 00                	add    BYTE PTR [rax],al
     10c:	00 2f                	add    BYTE PTR [rdi],ch
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     113:	00 00                	add    BYTE PTR [rax],al
     115:	77 00                	ja     117 <__abi_tag-0x265>
     117:	00 00                	add    BYTE PTR [rax],al
     119:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     11c:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     122:	00 00                	add    BYTE PTR [rax],al
     124:	00 c7                	add    bh,al
     126:	00 00                	add    BYTE PTR [rax],al
     128:	00 dd                	add    ch,bl
     12a:	00 00                	add    BYTE PTR [rax],al
     12c:	00 02                	add    BYTE PTR [rdx],al
     12e:	01 1f                	add    DWORD PTR [rdi],ebx
     130:	02 0f                	add    cl,BYTE PTR [rdi]
     132:	15 93 01 00 00       	adc    eax,0x193
     137:	01 93 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edx
     13d:	a0 01 00 00 02 a9 01 	movabs al,ds:0x1a902000001
     144:	00 00 
     146:	03 bc 01 00 00 03 10 	add    edi,DWORD PTR [rcx+rax*1+0x10030000]
     14d:	01 00                	add    DWORD PTR [rax],eax
     14f:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     152:	01 00                	add    DWORD PTR [rax],eax
     154:	00 02                	add    BYTE PTR [rdx],al
     156:	19 01                	sbb    DWORD PTR [rcx],eax
     158:	00 00                	add    BYTE PTR [rax],al
     15a:	03 21                	add    esp,DWORD PTR [rcx]
     15c:	01 00                	add    DWORD PTR [rax],eax
     15e:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 28d <__abi_tag-0xef>
     164:	06                   	(bad)
     165:	33 01                	xor    eax,DWORD PTR [rcx]
     167:	00 00                	add    BYTE PTR [rax],al
     169:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	03 07                	add    eax,DWORD PTR [rdi]
     170:	01 00                	add    DWORD PTR [rax],eax
     172:	00 03                	add    BYTE PTR [rbx],al
     174:	07                   	(bad)
     175:	01 00                	add    DWORD PTR [rax],eax
     177:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 2d0 <__abi_tag-0xac>
     17d:	03 c5                	add    eax,ebp
     17f:	01 00                	add    DWORD PTR [rax],eax
     181:	00 07                	add    BYTE PTR [rdi],al
     183:	62 01 00 00 07       	(bad)
     188:	d0 01                	rol    BYTE PTR [rcx],1
     18a:	00 00                	add    BYTE PTR [rax],al
     18c:	07                   	(bad)
     18d:	d7                   	xlat   BYTE PTR ds:[rbx]
     18e:	01 00                	add    DWORD PTR [rax],eax
     190:	00 03                	add    BYTE PTR [rbx],al
     192:	e5 01                	in     eax,0x1
     194:	00 00                	add    BYTE PTR [rax],al
     196:	02 75 01             	add    dh,BYTE PTR [rbp+0x1]
     199:	00 00                	add    BYTE PTR [rax],al
     19b:	08 05 37 00 09 02    	or     BYTE PTR [rip+0x2090037],al        # 20901d8 <_end+0x208a1c0>
     1a1:	00 13                	add    BYTE PTR [rbx],dl
     1a3:	00 00                	add    BYTE PTR [rax],al
     1a5:	00 00                	add    BYTE PTR [rax],al
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	03 13                	add    edx,DWORD PTR [rbx]
     1ab:	01 06                	add    DWORD PTR [rsi],eax
     1ad:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b07b8 <_end+0x54aa7a0>
     1b3:	37                   	(bad)
     1b4:	06                   	(bad)
     1b5:	11 05 05 d7 06 bc    	adc    DWORD PTR [rip+0xffffffffbc06d705],eax        # ffffffffbc06d8c0 <_end+0xffffffffbc0678a8>
     1bb:	05 2f 06 01 05       	add    eax,0x501062f
     1c0:	52                   	push   rdx
     1c1:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     1c2:	05 2f 3b 3c 05       	add    eax,0x53c3b2f
     1c7:	52                   	push   rdx
     1c8:	59                   	pop    rcx
     1c9:	05 32 3c 05 2f       	add    eax,0x2f053c32
     1ce:	81 05 05 06 3d 05 32 	add    DWORD PTR [rip+0x53d0605],0x58010632        # 53d07dd <_end+0x53ca7c5>
     1d5:	06 01 58 
     1d8:	05 05 06 3d 13       	add    eax,0x133d0605
     1dd:	14 05                	adc    al,0x5
     1df:	1c 00                	sbb    al,0x0
     1e1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     1e4:	01 05 09 08 59 14    	add    DWORD PTR [rip+0x14590809],eax        # 145909f3 <_end+0x1458a9db>
     1ea:	04 02                	add    al,0x2
     1ec:	05 01 03 ca 01       	add    eax,0x1ca0301
     1f1:	01 05 03 14 05 1b    	add    DWORD PTR [rip+0x1b051403],eax        # 1b0515fa <_end+0x1b04b5e2>
     1f7:	06                   	(bad)
     1f8:	01 c8                	add    eax,ecx
     1fa:	04 01                	add    al,0x1
     1fc:	05 09 06 03 b5       	add    eax,0xb5030609
     201:	7e 01                	jle    204 <__abi_tag-0x178>
     203:	05 23 06 40 05       	add    eax,0x5400623
     208:	0d 46 05 09 06       	or     eax,0x6090546
     20d:	4c 04 03             	rex.WR add al,0x3
     210:	05 22 00 02 04       	add    eax,0x4020022
     215:	01 06                	add    DWORD PTR [rsi],eax
     217:	03 3d 01 04 01 05    	add    edi,DWORD PTR [rip+0x5010401]        # 501061e <_end+0x500a606>
     21d:	10 03                	adc    BYTE PTR [rbx],al
     21f:	45 3c 04             	rex.RB cmp al,0x4
     222:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 402024a <_end+0x401a232>
     228:	01 03                	add    DWORD PTR [rbx],eax
     22a:	3b 4a 04             	cmp    ecx,DWORD PTR [rdx+0x4]
     22d:	01 05 17 03 43 58    	add    DWORD PTR [rip+0x58430317],eax        # 5843054a <_end+0x5842a532>
     233:	04 03                	add    al,0x3
     235:	05 22 00 02 04       	add    eax,0x4020022
     23a:	01 03                	add    DWORD PTR [rbx],eax
     23c:	3d 3c 04 01 05       	cmp    eax,0x501043c
     241:	17                   	(bad)
     242:	03 43 74             	add    eax,DWORD PTR [rbx+0x74]
     245:	05 09 06 3e 04       	add    eax,0x43e0609
     24a:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 4020272 <_end+0x401a25a>
     250:	01 06                	add    DWORD PTR [rsi],eax
     252:	03 3b                	add    edi,DWORD PTR [rbx]
     254:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     257:	05 10 03 45 74       	add    eax,0x74450310
     25c:	04 03                	add    al,0x3
     25e:	05 01 06 03 38       	add    eax,0x38030601
     263:	3c 05                	cmp    al,0x5
     265:	03 15 05 22 00 02    	add    edx,DWORD PTR [rip+0x2002205]        # 2002470 <_end+0x1ffc458>
     26b:	04 01                	add    al,0x1
     26d:	06                   	(bad)
     26e:	01 00                	add    DWORD PTR [rax],eax
     270:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     273:	c8 04 01 05          	enter  0x104,0x5
     277:	09 06                	or     DWORD PTR [rsi],eax
     279:	03 46 01             	add    eax,DWORD PTR [rsi+0x1]
     27c:	05 26 06 01 04       	add    eax,0x4010626
     281:	03 05 01 06 03 14    	add    eax,DWORD PTR [rip+0x14030601]        # 14030888 <_end+0x1402a870>
     287:	d6                   	(bad)
     288:	05 03 14 04 01       	add    eax,0x1041403
     28d:	05 0f 06 03 6a       	add    eax,0x6a03060f
     292:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     295:	05 21 00 02 04       	add    eax,0x4020021
     29a:	01 03                	add    DWORD PTR [rbx],eax
     29c:	16                   	(bad)
     29d:	58                   	pop    rax
     29e:	04 01                	add    al,0x1
     2a0:	05 0f 03 6a 9e       	add    eax,0x9e6a030f
     2a5:	04 03                	add    al,0x3
     2a7:	05 21 00 02 04       	add    eax,0x4020021
     2ac:	01 03                	add    DWORD PTR [rbx],eax
     2ae:	16                   	(bad)
     2af:	3c 04                	cmp    al,0x4
     2b1:	01 05 26 03 6a 58    	add    DWORD PTR [rip+0x586a0326],eax        # 586a05dd <_end+0x5869a5c5>
     2b7:	04 03                	add    al,0x3
     2b9:	05 21 00 02 04       	add    eax,0x4020021
     2be:	01 03                	add    DWORD PTR [rbx],eax
     2c0:	16                   	(bad)
     2c1:	3c 00                	cmp    al,0x0
     2c3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2c6:	58                   	pop    rax
     2c7:	04 01                	add    al,0x1
     2c9:	05 09 06 03 6c       	add    eax,0x6c030609
     2ce:	01 05 20 06 01 4b    	add    DWORD PTR [rip+0x4b010620],eax        # 4b0108f4 <_end+0x4b00a8dc>
     2d4:	57                   	push   rdi
     2d5:	05 09 06 59 05       	add    eax,0x5590609
     2da:	05 00 02 04 03       	add    eax,0x3040200
     2df:	03 74 01 05          	add    esi,DWORD PTR [rcx+rax*1+0x5]
     2e3:	1c 00                	sbb    al,0x0
     2e5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2e8:	01 00                	add    DWORD PTR [rax],eax
     2ea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2ed:	06                   	(bad)
     2ee:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     2f1:	04 01                	add    al,0x1
     2f3:	ac                   	lods   al,BYTE PTR ds:[rsi]
     2f4:	05 01 03 10 01       	add    eax,0x1100301
     2f9:	90                   	nop
     2fa:	4a                   	rex.WX
     2fb:	2e 05 05 00 02 04    	cs add eax,0x4020005
     301:	01 03                	add    DWORD PTR [rbx],eax
     303:	69 3c 00 02 04 01 08 	imul   edi,DWORD PTR [rax+rax*1],0x8010402
     30a:	2e 00 02             	cs add BYTE PTR [rdx],al
     30d:	04 01                	add    al,0x1
     30f:	74 05                	je     316 <__abi_tag-0x66>
     311:	39 06                	cmp    DWORD PTR [rsi],eax
     313:	03 19                	add    ebx,DWORD PTR [rcx]
     315:	08 20                	or     BYTE PTR [rax],ah
     317:	06                   	(bad)
     318:	01 08                	add    DWORD PTR [rax],ecx
     31a:	ba 05 05 06 f3       	mov    edx,0xf3060505
     31f:	05 2e 06 15 05       	add    eax,0x515062e
     324:	05 06 4c 05 22       	add    eax,0x22054c06
     329:	06                   	(bad)
     32a:	01 05 0d 53 05 2e    	add    DWORD PTR [rip+0x2e05530d],eax        # 2e05563d <_end+0x2e04f625>
     330:	77 05                	ja     337 <__abi_tag-0x45>
     332:	22 4c 3c 05          	and    cl,BYTE PTR [rsp+rdi*1+0x5]
     336:	13 00                	adc    eax,DWORD PTR [rax]
     338:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     33b:	58                   	pop    rax
     33c:	05 05 06 4c 05       	add    eax,0x54c0605
     341:	1c 00                	sbb    al,0x0
     343:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     346:	01 05 09 08 2f 05    	add    DWORD PTR [rip+0x52f0809],eax        # 52f0b55 <_end+0x52eab3d>
     34c:	24 06                	and    al,0x6
     34e:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020370 <_end+0x401a358>
     354:	01 3b                	add    DWORD PTR [rbx],edi
     356:	05 24 4b 05 05       	add    eax,0x5054b24
     35b:	00 02                	add    BYTE PTR [rdx],al
     35d:	04 03                	add    al,0x3
     35f:	06                   	(bad)
     360:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     363:	1c 00                	sbb    al,0x0
     365:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     368:	01 05 01 06 5d 08    	add    DWORD PTR [rip+0x85d0601],eax        # 85d096f <_end+0x85ca957>
     36e:	90                   	nop
     36f:	66 05 3a 06          	add    ax,0x63a
     373:	bc 06 01 08 82       	mov    esp,0x82080106
     378:	05 05 06 f3 e6       	add    eax,0xe6f30605
     37d:	05 23 06 01 3c       	add    eax,0x3c010623
     382:	3c 05                	cmp    al,0x5
     384:	0e                   	(bad)
     385:	83 05 24 30 05 23 39 	add    DWORD PTR [rip+0x23053024],0x39        # 230533b0 <_end+0x2304d398>
     38c:	05 05 06 2f 05       	add    eax,0x52f0605
     391:	0e                   	(bad)
     392:	06                   	(bad)
     393:	01 05 36 76 05 0e    	add    DWORD PTR [rip+0xe057636],eax        # e0579cf <_end+0xe0519b7>
     399:	2c 05                	sub    al,0x5
     39b:	05 06 4c 05 34       	add    eax,0x34054c06
     3a0:	06                   	(bad)
     3a1:	01 05 24 4a 08 4a    	add    DWORD PTR [rip+0x4a084a24],eax        # 4a084dcb <_end+0x4a07edb3>
     3a7:	05 05 06 ae 05       	add    eax,0x5ae0605
     3ac:	2a 06                	sub    al,BYTE PTR [rsi]
     3ae:	59                   	pop    rcx
     3af:	05 05 06 76 05       	add    eax,0x5760605
     3b4:	01 06                	add    DWORD PTR [rsi],eax
     3b6:	a2 08 ac 20 2e 2e 58 	movabs ds:0x905582e2e20ac08,al
     3bd:	05 09 
     3bf:	06                   	(bad)
     3c0:	03 7a 66             	add    edi,DWORD PTR [rdx+0x66]
     3c3:	05 36 06 01 58       	add    eax,0x58010636
     3c8:	05 4a f2 05 4f       	add    eax,0x4f05f24a
     3cd:	82                   	(bad)
     3ce:	05 05 4c 05 1e       	add    eax,0x1e054c05
     3d3:	80 05 05 06 76 05 44 	add    BYTE PTR [rip+0x5760605],0x44        # 57609df <_end+0x575a9c7>
     3da:	06                   	(bad)
     3db:	03 df                	add    ebx,edi
     3dd:	00 2e                	add    BYTE PTR [rsi],ch
     3df:	05 26 58 05 22       	add    eax,0x22055826
     3e4:	03 8d 7f 58 05 09    	add    ecx,DWORD PTR [rbp+0x905587f]
     3ea:	06                   	(bad)
     3eb:	03 15 ac 05 10 03    	add    edx,DWORD PTR [rip+0x31005ac]        # 310099d <_end+0x30fa985>
     3f1:	db 00                	fild   DWORD PTR [rax]
     3f3:	01 05 05 13 14 05    	add    DWORD PTR [rip+0x5141305],eax        # 51416fe <_end+0x513b6e6>
     3f9:	26 06                	es (bad)
     3fb:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     3fe:	22 03                	and    al,BYTE PTR [rbx]
     400:	8d 7f 58             	lea    edi,[rdi+0x58]
     403:	05 26 03 f3 00       	add    eax,0xf30326
     408:	3c 05                	cmp    al,0x5
     40a:	09 06                	or     DWORD PTR [rsi],eax
     40c:	03 87 7f 58 05 05    	add    eax,DWORD PTR [rdi+0x505587f]
     412:	13 17                	adc    edx,DWORD PTR [rdi]
     414:	05 26 06 03 f3       	add    eax,0xf3030626
     419:	00 01                	add    BYTE PTR [rcx],al
     41b:	05 22 03 8d 7f       	add    eax,0x7f8d0322
     420:	3c 05                	cmp    al,0x5
     422:	1c 00                	sbb    al,0x0
     424:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     427:	5a                   	pop    rdx
     428:	05 22 d4 05 05       	add    eax,0x505d422
     42d:	06                   	(bad)
     42e:	3e 05 1c 00 02 04    	ds add eax,0x402001c
     434:	01 01                	add    DWORD PTR [rcx],eax
     436:	00 02                	add    BYTE PTR [rdx],al
     438:	04 01                	add    al,0x1
     43a:	06                   	(bad)
     43b:	d6                   	(bad)
     43c:	05 09 06 08 13       	add    eax,0x13080609
     441:	05 24 06 01 05       	add    eax,0x5010624
     446:	1c 00                	sbb    al,0x0
     448:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     44b:	57                   	push   rdi
     44c:	05 24 4b 05 05       	add    eax,0x5054b24
     451:	00 02                	add    BYTE PTR [rdx],al
     453:	04 03                	add    al,0x3
     455:	06                   	(bad)
     456:	08 8f 05 1c 00 02    	or     BYTE PTR [rdi+0x2001c05],cl
     45c:	04 01                	add    al,0x1
     45e:	01 05 27 00 02 04    	add    DWORD PTR [rip+0x4020027],eax        # 402048b <_end+0x401a473>
     464:	01 06                	add    DWORD PTR [rsi],eax
     466:	03 f4                	add    esi,esp
     468:	00 58 05             	add    BYTE PTR [rax+0x5],bl
     46b:	28 56 05             	sub    BYTE PTR [rsi+0x5],dl
     46e:	05 06 03 92 7f       	add    eax,0x7f920306
     473:	74 06                	je     47b <__abi_tag+0xff>
     475:	01 06                	add    DWORD PTR [rsi],eax
     477:	03 ee                	add    ebp,esi
     479:	00 01                	add    BYTE PTR [rcx],al
     47b:	05 34 06 01 05       	add    eax,0x5010634
     480:	13 03                	adc    eax,DWORD PTR [rbx]
     482:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     483:	82                   	(bad)
     484:	05 34 03 11 74       	add    eax,0x74110334
     489:	05 05 06 68 05       	add    eax,0x5680605
     48e:	1c 00                	sbb    al,0x0
     490:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     493:	01 05 09 08 67 05    	add    DWORD PTR [rip+0x5670809],eax        # 5670ca2 <_end+0x566ac8a>
     499:	33 06                	xor    eax,DWORD PTR [rsi]
     49b:	08 12                	or     BYTE PTR [rdx],dl
     49d:	05 12 4a 05 09       	add    eax,0x9054a12
     4a2:	06                   	(bad)
     4a3:	30 05 19 01 05 0d    	xor    BYTE PTR [rip+0xd050119],al        # d0505c2 <_end+0xd04a5aa>
     4a9:	91                   	xchg   ecx,eax
     4aa:	05 44 06 01 05       	add    eax,0x5010644
     4af:	36 03 71 4a          	ss add esi,DWORD PTR [rcx+0x4a]
     4b3:	05 44 03 0f 2e       	add    eax,0x2e0f0344
     4b8:	3c 05                	cmp    al,0x5
     4ba:	14 3c                	adc    al,0x3c
     4bc:	05 0d 06 59 06       	add    eax,0x659060d
     4c1:	01 05 0e 03 6e 4a    	add    DWORD PTR [rip+0x4a6e030e],eax        # 4a6e07d5 <_end+0x4a6da7bd>
     4c7:	4a 58                	rex.WX pop rax
     4c9:	05 11 06 0f 05       	add    eax,0x50f0611
     4ce:	05 13 14 14 05       	add    eax,0x5141413
     4d3:	36 06                	ss (bad)
     4d5:	01 05 34 2e 05 24    	add    DWORD PTR [rip+0x24052e34],eax        # 2405330f <_end+0x2404d2f7>
     4db:	4a 9e                	rex.WX sahf
     4dd:	05 05 06 5a 06       	add    eax,0x65a0605
     4e2:	01 05 0d 06 03 10    	add    DWORD PTR [rip+0x1003060d],eax        # 10030af5 <_end+0x1002aadd>
     4e8:	01 05 22 06 01 05    	add    DWORD PTR [rip+0x5010622],eax        # 5010b10 <_end+0x500aaf8>
     4ee:	2e 4a 05 22 4a 05 16 	cs rex.WX add rax,0x16054a22
     4f5:	3c 4a                	cmp    al,0x4a
     4f7:	05 19 06 0e 05       	add    eax,0x50e0619
     4fc:	27                   	(bad)
     4fd:	00 02                	add    BYTE PTR [rdx],al
     4ff:	04 01                	add    al,0x1
     501:	06                   	(bad)
     502:	47 05 05 00 02 04    	rex.RXB add eax,0x4020005
     508:	02 06                	add    al,BYTE PTR [rsi]
     50a:	58                   	pop    rax
     50b:	05 1c 00 02 04       	add    eax,0x402001c
     510:	01 01                	add    DWORD PTR [rcx],eax
     512:	00 02                	add    BYTE PTR [rdx],al
     514:	04 01                	add    al,0x1
     516:	06                   	(bad)
     517:	66 00 02             	data16 add BYTE PTR [rdx],al
     51a:	04 01                	add    al,0x1
     51c:	9e                   	sahf
     51d:	00 02                	add    BYTE PTR [rdx],al
     51f:	04 01                	add    al,0x1
     521:	06                   	(bad)
     522:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
     525:	00 02                	add    BYTE PTR [rdx],al
     527:	04 01                	add    al,0x1
     529:	06                   	(bad)
     52a:	c8 05 13 16          	enter  0x1305,0x16
     52e:	05 09 06 47 05       	add    eax,0x5470609
     533:	11 06                	adc    DWORD PTR [rsi],eax
     535:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020557 <_end+0x401a53f>
     53b:	01 57 05             	add    DWORD PTR [rdi+0x5],edx
     53e:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
     541:	05 00 02 04 03       	add    eax,0x3040200
     546:	06                   	(bad)
     547:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 4020569 <_end+0x401a551>
     54d:	01 01                	add    DWORD PTR [rcx],eax
     54f:	00 02                	add    BYTE PTR [rdx],al
     551:	04 01                	add    al,0x1
     553:	06                   	(bad)
     554:	ac                   	lods   al,BYTE PTR ds:[rsi]
     555:	05 05 06 16 05       	add    eax,0x5160605
     55a:	09 06                	or     DWORD PTR [rsi],eax
     55c:	01 05 05 06 03 20    	add    DWORD PTR [rip+0x20030605],eax        # 20030b67 <_end+0x2002ab4f>
     562:	58                   	pop    rax
     563:	06                   	(bad)
     564:	01 05 1a 03 92 7f    	add    DWORD PTR [rip+0x7f92031a],eax        # 7f920884 <_end+0x7f91a86c>
     56a:	01 05 05 06 08 84    	add    DWORD PTR [rip+0xffffffff84080605],eax        # ffffffff84080b75 <_end+0xffffffff8407ab5d>
     570:	05 1a 06 10 05       	add    eax,0x510061a
     575:	0c 76                	or     al,0x76
     577:	05 05 00 02 04       	add    eax,0x4020005
     57c:	01 03                	add    DWORD PTR [rbx],eax
     57e:	73 58                	jae    5d8 <__abi_tag+0x25c>
     580:	00 02                	add    BYTE PTR [rdx],al
     582:	04 01                	add    al,0x1
     584:	ba 00 02 04 01       	mov    edx,0x1040200
     589:	74 00                	je     58b <__abi_tag+0x20f>
     58b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     58e:	74 05                	je     595 <__abi_tag+0x219>
     590:	01 03                	add    DWORD PTR [rbx],eax
     592:	0e                   	(bad)
     593:	58                   	pop    rax
     594:	05 3a 06 d8 06       	add    eax,0x6d8063a
     599:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0ba4 <_end+0x54aab8c>
     59f:	3a 06                	cmp    al,BYTE PTR [rsi]
     5a1:	11 05 05 9f 06 e6    	adc    DWORD PTR [rip+0xffffffffe6069f05],eax        # ffffffffe606a4ac <_end+0xffffffffe6064494>
     5a7:	05 23 06 01 3c       	add    eax,0x3c010623
     5ac:	3c 05                	cmp    al,0x5
     5ae:	0e                   	(bad)
     5af:	67 05 14 30 05 23    	addr32 add eax,0x23053014
     5b5:	39 05 05 06 2f 05    	cmp    DWORD PTR [rip+0x52f0605],eax        # 52f0bc0 <_end+0x52eaba8>
     5bb:	0e                   	(bad)
     5bc:	06                   	(bad)
     5bd:	01 05 24 76 05 0e    	add    DWORD PTR [rip+0xe057624],eax        # e057be7 <_end+0xe051bcf>
     5c3:	48 05 05 06 3e 05    	add    rax,0x53e0605
     5c9:	14 06                	adc    al,0x6
     5cb:	01 3c 08             	add    DWORD PTR [rax+rcx*1],edi
     5ce:	3c 3c                	cmp    al,0x3c
     5d0:	05 05 00 02 04       	add    eax,0x4020005
     5d5:	01 58 06             	add    DWORD PTR [rax+0x6],ebx
     5d8:	4c 05 32 06 01 05    	rex.WR add rax,0x5010632
     5de:	01 08                	add    DWORD PTR [rax],ecx
     5e0:	15 05 46 39 05       	adc    eax,0x5394605
     5e5:	4b 82                	rex.WXB (bad)
     5e7:	05 1a 4a 05 05       	add    eax,0x5054a1a
     5ec:	06                   	(bad)
     5ed:	5a                   	pop    rdx
     5ee:	05 01 06 13 58       	add    eax,0x58130601
     5f3:	3c 2e                	cmp    al,0x2e
     5f5:	05 37 00 02 04       	add    eax,0x4020037
     5fa:	01 06                	add    DWORD PTR [rsi],eax
     5fc:	7d 05                	jge    603 <__abi_tag+0x287>
     5fe:	47 00 02             	rex.RXB add BYTE PTR [r10],r8b
     601:	04 01                	add    al,0x1
     603:	06                   	(bad)
     604:	01 05 01 4f 58 82    	add    DWORD PTR [rip+0xffffffff82584f01],eax        # ffffffff8258550b <_end+0xffffffff8257f4f3>
     60a:	05 05 00 02 04       	add    eax,0x4020005
     60f:	01 03                	add    DWORD PTR [rbx],eax
     611:	76 20                	jbe    633 <__abi_tag+0x2b7>
     613:	00 02                	add    BYTE PTR [rdx],al
     615:	04 01                	add    al,0x1
     617:	ba 00 02 04 01       	mov    edx,0x1040200
     61c:	74 00                	je     61e <__abi_tag+0x2a2>
     61e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     621:	74 05                	je     628 <__abi_tag+0x2ac>
     623:	39 06                	cmp    DWORD PTR [rsi],eax
     625:	03 0c ba             	add    ecx,DWORD PTR [rdx+rdi*4]
     628:	06                   	(bad)
     629:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0c34 <_end+0x54aac1c>
     62f:	39 06                	cmp    DWORD PTR [rsi],eax
     631:	11 05 05 4b 05 0d    	adc    DWORD PTR [rip+0xd054b05],eax        # d05513c <_end+0xd04f124>
     637:	06                   	(bad)
     638:	b2 05                	mov    dl,0x5
     63a:	39 06                	cmp    DWORD PTR [rsi],eax
     63c:	3c 3c                	cmp    al,0x3c
     63e:	05 05 06 03 27       	add    eax,0x27030605
     643:	66 05 32 06          	add    ax,0x632
     647:	01 05 21 2e 05 32    	add    DWORD PTR [rip+0x32052e21],eax        # 3205346e <_end+0x3204d456>
     64d:	3c 05                	cmp    al,0x5
     64f:	21 3c 05 40 3c 05 21 	and    DWORD PTR [rax*1+0x21053c40],edi
     656:	4a 05 05 06 bc 05    	rex.WX add rax,0x5bc0605
     65c:	01 06                	add    DWORD PTR [rsi],eax
     65e:	15 20 05 05 1d       	adc    eax,0x1d050520
     663:	05 01 31 05 05       	add    eax,0x5053101
     668:	2b 05 01 3f 05 05    	sub    eax,DWORD PTR [rip+0x5053f01]        # 505456f <_end+0x504e557>
     66e:	00 02                	add    BYTE PTR [rdx],al
     670:	04 01                	add    al,0x1
     672:	03 4e 20             	add    ecx,DWORD PTR [rsi+0x20]
     675:	00 02                	add    BYTE PTR [rdx],al
     677:	04 01                	add    al,0x1
     679:	ba 00 02 04 01       	mov    edx,0x1040200
     67e:	74 00                	je     680 <__abi_tag+0x304>
     680:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     683:	74 05                	je     68a <__abi_tag+0x30e>
     685:	23 06                	and    eax,DWORD PTR [rsi]
     687:	03 34 08             	add    esi,DWORD PTR [rax+rcx*1]
     68a:	20 06                	and    BYTE PTR [rsi],al
     68c:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0c97 <_end+0x54aac7f>
     692:	23 06                	and    eax,DWORD PTR [rsi]
     694:	11 05 05 67 05 1c    	adc    DWORD PTR [rip+0x1c056705],eax        # 1c056d9f <_end+0x1c050d87>
     69a:	00 02                	add    BYTE PTR [rdx],al
     69c:	04 01                	add    al,0x1
     69e:	5a                   	pop    rdx
     69f:	00 02                	add    BYTE PTR [rdx],al
     6a1:	04 01                	add    al,0x1
     6a3:	06                   	(bad)
     6a4:	66 05 09 ad          	add    ax,0xad09
     6a8:	05 11 06 01 05       	add    eax,0x5010611
     6ad:	1c 00                	sbb    al,0x0
     6af:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     6b2:	81 05 11 4b 05 05 00 	add    DWORD PTR [rip+0x5054b11],0x3040200        # 50551cd <_end+0x504f1b5>
     6b9:	02 04 03 
     6bc:	06                   	(bad)
     6bd:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 40206df <_end+0x401a6c7>
     6c3:	01 01                	add    DWORD PTR [rcx],eax
     6c5:	00 02                	add    BYTE PTR [rdx],al
     6c7:	04 01                	add    al,0x1
     6c9:	06                   	(bad)
     6ca:	58                   	pop    rax
     6cb:	05 05 06 16 05       	add    eax,0x5160605
     6d0:	09 06                	or     DWORD PTR [rsi],eax
     6d2:	01 05 01 4b 05 09    	add    DWORD PTR [rip+0x9054b01],eax        # 90551d9 <_end+0x904f1c1>
     6d8:	65 05 06 06 03 79    	gs add eax,0x79030606
     6de:	58                   	pop    rax
     6df:	05 05 00 02 04       	add    eax,0x4020005
     6e4:	01 06                	add    DWORD PTR [rsi],eax
     6e6:	13 00                	adc    eax,DWORD PTR [rax]
     6e8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     6eb:	08 90 05 29 06 03    	or     BYTE PTR [rax+0x3062905],dl
     6f1:	29 c8                	sub    eax,ecx
     6f3:	06                   	(bad)
     6f4:	01 05 05 06 4b 04    	add    DWORD PTR [rip+0x44b0605],eax        # 44b0cff <_end+0x44aace7>
     6fa:	04 05                	add    al,0x5
     6fc:	01 03                	add    DWORD PTR [rbx],eax
     6fe:	99                   	cdq
     6ff:	7f 01                	jg     702 <__abi_tag+0x386>
     701:	05 03 14 04 01       	add    eax,0x1041403
     706:	05 29 06 03 e4       	add    eax,0xe4030629
     70b:	00 01                	add    BYTE PTR [rcx],al
     70d:	04 04                	add    al,0x4
     70f:	05 17 03 9c 7f       	add    eax,0x7f9c0317
     714:	2e 04 01             	cs add al,0x1
     717:	05 29 03 e4 00       	add    eax,0xe40329
     71c:	74 04                	je     722 <__abi_tag+0x3a6>
     71e:	04 05                	add    al,0x5
     720:	17                   	(bad)
     721:	03 9c 7f 66 3c 04 01 	add    ebx,DWORD PTR [rdi+rdi*2+0x1043c66]
     728:	05 29 03 e4 00       	add    eax,0xe40329
     72d:	01 04 04             	add    DWORD PTR [rsp+rax*1],eax
     730:	05 17 03 9c 7f       	add    eax,0x7f9c0317
     735:	58                   	pop    rax
     736:	58                   	pop    rax
     737:	04 01                	add    al,0x1
     739:	05 05 06 03 e7       	add    eax,0xe7030605
     73e:	00 01                	add    BYTE PTR [rcx],al
     740:	97                   	xchg   edi,eax
     741:	04 04                	add    al,0x4
     743:	05 01 03 90 7f       	add    eax,0x7f900301
     748:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051b51 <_end+0x1704bb39>
     74e:	06                   	(bad)
     74f:	01 08                	add    DWORD PTR [rax],ecx
     751:	58                   	pop    rax
     752:	04 01                	add    al,0x1
     754:	05 05 06 03 ef       	add    eax,0xef030605
     759:	00 01                	add    BYTE PTR [rcx],al
     75b:	04 04                	add    al,0x4
     75d:	05 01 03 8f 7f       	add    eax,0x7f8f0301
     762:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041b6b <_end+0x103bb53>
     768:	05 0b 06 03 ef       	add    eax,0xef03060b
     76d:	00 01                	add    BYTE PTR [rcx],al
     76f:	04 04                	add    al,0x4
     771:	05 17 03 91 7f       	add    eax,0x7f910317
     776:	4a 04 01             	rex.WX add al,0x1
     779:	05 0b 03 ef 00       	add    eax,0xef030b
     77e:	08 12                	or     BYTE PTR [rdx],dl
     780:	04 04                	add    al,0x4
     782:	05 17 03 91 7f       	add    eax,0x7f910317
     787:	58                   	pop    rax
     788:	58                   	pop    rax
     789:	04 01                	add    al,0x1
     78b:	05 05 06 03 f1       	add    eax,0xf1030605
     790:	00 01                	add    BYTE PTR [rcx],al
     792:	05 1c 00 02 04       	add    eax,0x402001c
     797:	01 01                	add    DWORD PTR [rcx],eax
     799:	05 09 08 21 04       	add    eax,0x4210809
     79e:	04 05                	add    al,0x5
     7a0:	01 03                	add    DWORD PTR [rbx],eax
     7a2:	8c 7f 01             	mov    WORD PTR [rdi+0x1],?
     7a5:	05 03 14 05 17       	add    eax,0x17051403
     7aa:	06                   	(bad)
     7ab:	01 08                	add    DWORD PTR [rax],ecx
     7ad:	12 04 01             	adc    al,BYTE PTR [rcx+rax*1]
     7b0:	05 09 06 03 f3       	add    eax,0xf3030609
     7b5:	00 01                	add    BYTE PTR [rcx],al
     7b7:	05 13 06 01 05       	add    eax,0x5010613
     7bc:	1c 00                	sbb    al,0x0
     7be:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     7c1:	80 05 13 4c 05 05 00 	add    BYTE PTR [rip+0x5054c13],0x0        # 50553db <_end+0x504f3c3>
     7c8:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     7cb:	06                   	(bad)
     7cc:	8e 05 1c 00 02 04    	mov    es,WORD PTR [rip+0x402001c]        # 40207ee <_end+0x401a7d6>
     7d2:	01 01                	add    DWORD PTR [rcx],eax
     7d4:	00 02                	add    BYTE PTR [rdx],al
     7d6:	04 01                	add    al,0x1
     7d8:	06                   	(bad)
     7d9:	58                   	pop    rax
     7da:	05 05 06 16 04       	add    eax,0x4160605
     7df:	04 05                	add    al,0x5
     7e1:	01 03                	add    DWORD PTR [rbx],eax
     7e3:	89 7f 01             	mov    DWORD PTR [rdi+0x1],edi
     7e6:	05 03 14 04 01       	add    eax,0x1041403
     7eb:	05 01 06 03 f6       	add    eax,0xf6030601
     7f0:	00 01                	add    BYTE PTR [rcx],al
     7f2:	04 04                	add    al,0x4
     7f4:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     7f9:	4a 04 01             	rex.WX add al,0x1
     7fc:	05 01 03 f6 00       	add    eax,0xf60301
     801:	3c 2e                	cmp    al,0x2e
     803:	04 04                	add    al,0x4
     805:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     80a:	4a 82                	rex.WX (bad)
     80c:	04 01                	add    al,0x1
     80e:	05 09 06 03 e8       	add    eax,0xe8030609
     813:	00 01                	add    BYTE PTR [rcx],al
     815:	04 04                	add    al,0x4
     817:	05 01 03 96 7f       	add    eax,0x7f960301
     81c:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051c25 <_end+0x1704bc0d>
     822:	06                   	(bad)
     823:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
     829:	06                   	(bad)
     82a:	03 e9                	add    ebp,ecx
     82c:	00 01                	add    BYTE PTR [rcx],al
     82e:	04 04                	add    al,0x4
     830:	05 01 03 95 7f       	add    eax,0x7f950301
     835:	01 05 03 14 02 02    	add    DWORD PTR [rip+0x2021403],eax        # 2021c3e <_end+0x201bc26>
     83b:	00 01                	add    BYTE PTR [rcx],al
     83d:	01 f8                	add    eax,edi
     83f:	06                   	(bad)
     840:	00 00                	add    BYTE PTR [rax],al
     842:	05 00 08 00 90       	add    eax,0x90000800
     847:	00 00                	add    BYTE PTR [rax],al
     849:	00 01                	add    BYTE PTR [rcx],al
     84b:	01 01                	add    DWORD PTR [rcx],eax
     84d:	fb                   	sti
     84e:	0e                   	(bad)
     84f:	0d 00 01 01 01       	or     eax,0x1010100
     854:	01 00                	add    DWORD PTR [rax],eax
     856:	00 00                	add    BYTE PTR [rax],al
     858:	01 00                	add    DWORD PTR [rax],eax
     85a:	00 01                	add    BYTE PTR [rcx],al
     85c:	01 01                	add    DWORD PTR [rcx],eax
     85e:	1f                   	(bad)
     85f:	09 00                	or     DWORD PTR [rax],eax
     861:	00 00                	add    BYTE PTR [rax],al
     863:	00 2f                	add    BYTE PTR [rdi],ch
     865:	00 00                	add    BYTE PTR [rax],al
     867:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
     86a:	00 00                	add    BYTE PTR [rax],al
     86c:	77 00                	ja     86e <__abi_tag+0x4f2>
     86e:	00 00                	add    BYTE PTR [rax],al
     870:	41 00 00             	add    BYTE PTR [r8],al
     873:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     879:	00 00                	add    BYTE PTR [rax],al
     87b:	00 c7                	add    bh,al
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	00 dd                	add    ch,bl
     881:	00 00                	add    BYTE PTR [rax],al
     883:	00 02                	add    BYTE PTR [rdx],al
     885:	01 1f                	add    DWORD PTR [rdi],ebx
     887:	02 0f                	add    cl,BYTE PTR [rdi]
     889:	10 00                	adc    BYTE PTR [rax],al
     88b:	02 00                	add    al,BYTE PTR [rax]
     88d:	00 01                	add    BYTE PTR [rcx],al
     88f:	00 02                	add    BYTE PTR [rdx],al
     891:	00 00                	add    BYTE PTR [rax],al
     893:	01 0f                	add    DWORD PTR [rdi],ecx
     895:	02 00                	add    al,BYTE PTR [rax]
     897:	00 02                	add    BYTE PTR [rdx],al
     899:	19 01                	sbb    DWORD PTR [rcx],eax
     89b:	00 00                	add    BYTE PTR [rax],al
     89d:	03 1b                	add    ebx,DWORD PTR [rbx]
     89f:	02 00                	add    al,BYTE PTR [rax]
     8a1:	00 03                	add    BYTE PTR [rbx],al
     8a3:	53                   	push   rbx
     8a4:	01 00                	add    DWORD PTR [rax],eax
     8a6:	00 03                	add    BYTE PTR [rbx],al
     8a8:	10 01                	adc    BYTE PTR [rcx],al
     8aa:	00 00                	add    BYTE PTR [rax],al
     8ac:	02 07                	add    al,BYTE PTR [rdi]
     8ae:	01 00                	add    DWORD PTR [rax],eax
     8b0:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     8b3:	01 00                	add    DWORD PTR [rax],eax
     8b5:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 9e4 <__abi_tag+0x668>
     8bb:	06                   	(bad)
     8bc:	33 01                	xor    eax,DWORD PTR [rcx]
     8be:	00 00                	add    BYTE PTR [rax],al
     8c0:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     8c3:	00 00                	add    BYTE PTR [rax],al
     8c5:	03 07                	add    eax,DWORD PTR [rdi]
     8c7:	01 00                	add    DWORD PTR [rax],eax
     8c9:	00 03                	add    BYTE PTR [rbx],al
     8cb:	07                   	(bad)
     8cc:	01 00                	add    DWORD PTR [rax],eax
     8ce:	00 05 c5 01 00 00    	add    BYTE PTR [rip+0x1c5],al        # a99 <__abi_tag+0x71d>
     8d4:	07                   	(bad)
     8d5:	75 01                	jne    8d8 <__abi_tag+0x55c>
     8d7:	00 00                	add    BYTE PTR [rax],al
     8d9:	08 05 2a 00 09 02    	or     BYTE PTR [rip+0x209002a],al        # 2090909 <_end+0x208a8f1>
     8df:	00 1a                	add    BYTE PTR [rdx],bl
     8e1:	00 00                	add    BYTE PTR [rax],al
     8e3:	00 00                	add    BYTE PTR [rax],al
     8e5:	00 00                	add    BYTE PTR [rax],al
     8e7:	03 0a                	add    ecx,DWORD PTR [rdx]
     8e9:	01 06                	add    DWORD PTR [rsi],eax
     8eb:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b0ef6 <_end+0x134aaede>
     8f1:	13 13                	adc    edx,DWORD PTR [rbx]
     8f3:	13 05 22 06 01 05    	adc    eax,DWORD PTR [rip+0x5010622]        # 5010f1b <_end+0x500af03>
     8f9:	05 06 4c 05 17       	add    eax,0x17054c06
     8fe:	00 02                	add    BYTE PTR [rdx],al
     900:	04 01                	add    al,0x1
     902:	01 00                	add    DWORD PTR [rax],eax
     904:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     907:	06                   	(bad)
     908:	ba 05 2a 03 79       	mov    edx,0x79032a05
     90d:	01 05 0e 4b 05 27    	add    DWORD PTR [rip+0x27054b0e],eax        # 27055421 <_end+0x2704f409>
     913:	03 a6 01 66 05 19    	add    esp,DWORD PTR [rsi+0x19056601]
     919:	c7 05 20 e5 d6 05 09 	mov    DWORD PTR [rip+0x5d6e520],0xe1030609        # 5d6ee43 <_end+0x5d68e2b>
     920:	06 03 e1 
     923:	7e 01                	jle    926 <__abi_tag+0x5aa>
     925:	05 0f 06 01 05       	add    eax,0x501060f
     92a:	09 06                	or     DWORD PTR [rsi],eax
     92c:	3d 05 11 03 94       	cmp    eax,0x94031105
     931:	01 01                	add    DWORD PTR [rcx],eax
     933:	05 05 13 05 11       	add    eax,0x11051305
     938:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
     93b:	05 05 13 05 3b       	add    eax,0x3b051305
     940:	06                   	(bad)
     941:	01 05 1f 3c 2e 05    	add    DWORD PTR [rip+0x52e3c1f],eax        # 52e4566 <_end+0x52de54e>
     947:	3b 66 05             	cmp    esp,DWORD PTR [rsi+0x5]
     94a:	09 58 05             	or     DWORD PTR [rax+0x5],ebx
     94d:	05 06 2f 05 1f       	add    eax,0x1f052f06
     952:	06                   	(bad)
     953:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f053794 <_end+0x1f04d77c>
     959:	3c 05                	cmp    al,0x5
     95b:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     962:	66 05 05 06          	add    ax,0x605
     966:	2f                   	(bad)
     967:	05 1f 06 01 05       	add    eax,0x501061f
     96c:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     96e:	3c 05                	cmp    al,0x5
     970:	1f                   	(bad)
     971:	2e 3c 05             	cs cmp al,0x5
     974:	0e                   	(bad)
     975:	03 0f                	add    ecx,DWORD PTR [rdi]
     977:	01 05 1f 03 71 2e    	add    DWORD PTR [rip+0x2e71031f],eax        # 2e710c9c <_end+0x2e70ac84>
     97d:	05 3b 66 05 09       	add    eax,0x905663b
     982:	66 05 05 06          	add    ax,0x605
     986:	2f                   	(bad)
     987:	13 30                	adc    esi,DWORD PTR [rax]
     989:	06                   	(bad)
     98a:	01 06                	add    DWORD PTR [rsi],eax
     98c:	17                   	(bad)
     98d:	14 05                	adc    al,0x5
     98f:	2b 06                	sub    eax,DWORD PTR [rsi]
     991:	01 05 0e 66 05 05    	add    DWORD PTR [rip+0x505660e],eax        # 5056fa5 <_end+0x5050f8d>
     997:	06                   	(bad)
     998:	4c 14 05             	rex.WR adc al,0x5
     99b:	17                   	(bad)
     99c:	00 02                	add    BYTE PTR [rdx],al
     99e:	04 01                	add    al,0x1
     9a0:	01 05 09 83 05 19    	add    DWORD PTR [rip+0x19058309],eax        # 19058caf <_end+0x19052c97>
     9a6:	06                   	(bad)
     9a7:	01 05 09 82 05 0d    	add    DWORD PTR [rip+0xd058209],eax        # d058bb6 <_end+0xd052b9e>
     9ad:	06                   	(bad)
     9ae:	59                   	pop    rcx
     9af:	05 27 06 01 05       	add    eax,0x5010627
     9b4:	20 3c 05 27 3c 05 20 	and    BYTE PTR [rax*1+0x20053c27],bh
     9bb:	2e 05 11 3c 05 05    	cs add eax,0x5053c11
     9c1:	00 02                	add    BYTE PTR [rdx],al
     9c3:	04 02                	add    al,0x2
     9c5:	06                   	(bad)
     9c6:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 40209e3 <_end+0x401a9cb>
     9cc:	01 3c 00             	add    DWORD PTR [rax+rax*1],edi
     9cf:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     9d2:	06                   	(bad)
     9d3:	58                   	pop    rax
     9d4:	05 05 06 18 05       	add    eax,0x5180605
     9d9:	11 03                	adc    DWORD PTR [rbx],eax
     9db:	68 01 05 05 13       	push   0x13050501
     9e0:	05 3b 06 01 05       	add    eax,0x501063b
     9e5:	1f                   	(bad)
     9e6:	3c 2e                	cmp    al,0x2e
     9e8:	05 17 00 02 04       	add    eax,0x4020017
     9ed:	01 03                	add    DWORD PTR [rbx],eax
     9ef:	f3 7e 01             	repz jle 9f3 <__abi_tag+0x677>
     9f2:	05 1f 03 8d 01       	add    eax,0x18d031f
     9f7:	4a 05 3b 66 05 09    	rex.WX add rax,0x905663b
     9fd:	58                   	pop    rax
     9fe:	05 05 06 2f 05       	add    eax,0x52f0605
     a03:	1f                   	(bad)
     a04:	06                   	(bad)
     a05:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f053846 <_end+0x1f04d82e>
     a0b:	3c 05                	cmp    al,0x5
     a0d:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     a14:	66 05 05 06          	add    ax,0x605
     a18:	2f                   	(bad)
     a19:	05 1f 06 01 05       	add    eax,0x501061f
     a1e:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     a20:	05 1f 3c 05 3b       	add    eax,0x3b053c1f
     a25:	3c 05                	cmp    al,0x5
     a27:	1f                   	(bad)
     a28:	58                   	pop    rax
     a29:	05 09 66 05 05       	add    eax,0x5056609
     a2e:	06                   	(bad)
     a2f:	2f                   	(bad)
     a30:	13 30                	adc    esi,DWORD PTR [rax]
     a32:	06                   	(bad)
     a33:	01 06                	add    DWORD PTR [rsi],eax
     a35:	03 13                	add    edx,DWORD PTR [rbx]
     a37:	01 06                	add    DWORD PTR [rsi],eax
     a39:	01 05 0e 00 02 04    	add    DWORD PTR [rip+0x402000e],eax        # 4020a4d <_end+0x401aa35>
     a3f:	01 03                	add    DWORD PTR [rbx],eax
     a41:	dc 7e 01             	fdivr  QWORD PTR [rsi+0x1]
     a44:	05 05 00 02 04       	add    eax,0x4020005
     a49:	03 06                	add    eax,DWORD PTR [rsi]
     a4b:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 4020a68 <_end+0x401aa50>
     a51:	01 01                	add    DWORD PTR [rcx],eax
     a53:	05 01 06 96 58       	add    eax,0x58960601
     a58:	05 2e 06 a0 06       	add    eax,0x6a0062e
     a5d:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b1068 <_end+0x134ab050>
     a63:	13 13                	adc    edx,DWORD PTR [rbx]
     a65:	05 22 06 01 05       	add    eax,0x5010622
     a6a:	05 06 4c 05 17       	add    eax,0x17054c06
     a6f:	00 02                	add    BYTE PTR [rdx],al
     a71:	04 01                	add    al,0x1
     a73:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     a76:	05 21 06 03 a4       	add    eax,0xa4030621
     a7b:	06                   	(bad)
     a7c:	82                   	(bad)
     a7d:	82                   	(bad)
     a7e:	ba 04 01 05 0e       	mov    edx,0xe050104
     a83:	03 d7                	add    edx,edi
     a85:	79 01                	jns    a88 <__abi_tag+0x70c>
     a87:	05 09 06 c0 13       	add    eax,0x13c00609
     a8c:	04 02                	add    al,0x2
     a8e:	05 01 03 a0 06       	add    eax,0x6a00301
     a93:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051e9c <_end+0x2104be84>
     a99:	06                   	(bad)
     a9a:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     a9d:	05 17 00 02 04       	add    eax,0x4020017
     aa2:	01 03                	add    DWORD PTR [rbx],eax
     aa4:	dc 79 2e             	fdivr  QWORD PTR [rcx+0x2e]
     aa7:	04 02                	add    al,0x2
     aa9:	05 21 03 a4 06       	add    eax,0x6a40321
     aae:	4a                   	rex.WX
     aaf:	66 04 01             	data16 add al,0x1
     ab2:	05 0e 00 02 04       	add    eax,0x402000e
     ab7:	01 03                	add    DWORD PTR [rbx],eax
     ab9:	de 79 01             	fidivr WORD PTR [rcx+0x1]
     abc:	05 05 00 02 04       	add    eax,0x4020005
     ac1:	03 06                	add    eax,DWORD PTR [rsi]
     ac3:	2c 05                	sub    al,0x5
     ac5:	17                   	(bad)
     ac6:	00 02                	add    BYTE PTR [rdx],al
     ac8:	04 01                	add    al,0x1
     aca:	01 00                	add    DWORD PTR [rax],eax
     acc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     acf:	06                   	(bad)
     ad0:	9e                   	sahf
     ad1:	05 0e 0d 05 05       	add    eax,0x5050d0e
     ad6:	06                   	(bad)
     ad7:	03 0a                	add    ecx,DWORD PTR [rdx]
     ad9:	2e 05 01 06 13 05    	cs add eax,0x5130601
     adf:	34 06                	xor    al,0x6
     ae1:	68 06 01 05 05       	push   0x5050106
     ae6:	06                   	(bad)
     ae7:	4b 13 13             	rex.WXB adc rdx,QWORD PTR [r11]
     aea:	14 13                	adc    al,0x13
     aec:	13 13                	adc    edx,DWORD PTR [rbx]
     aee:	15 04 02 05 01       	adc    eax,0x1050204
     af3:	03 96 06 01 05 03    	add    edx,DWORD PTR [rsi+0x3050106]
     af9:	14 05                	adc    al,0x5
     afb:	21 06                	and    DWORD PTR [rsi],eax
     afd:	01 90 82 04 01 05    	add    DWORD PTR [rax+0x5010482],edx
     b03:	05 06 03 e9 79       	add    eax,0x79e90306
     b08:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     b0b:	05 01 03 95 06       	add    eax,0x6950301
     b10:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f19 <_end+0x2104bf01>
     b16:	06                   	(bad)
     b17:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     b1b:	05 05 06 03 ea       	add    eax,0xea030605
     b20:	79 01                	jns    b23 <__abi_tag+0x7a7>
     b22:	04 02                	add    al,0x2
     b24:	05 01 03 94 06       	add    eax,0x6940301
     b29:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f32 <_end+0x2104bf1a>
     b2f:	06                   	(bad)
     b30:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     b34:	05 05 06 03 eb       	add    eax,0xeb030605
     b39:	79 01                	jns    b3c <__abi_tag+0x7c0>
     b3b:	04 02                	add    al,0x2
     b3d:	05 01 03 93 06       	add    eax,0x6930301
     b42:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041f4b <_end+0x103bf33>
     b48:	05 13 06 03 ed       	add    eax,0xed030613
     b4d:	79 01                	jns    b50 <__abi_tag+0x7d4>
     b4f:	04 02                	add    al,0x2
     b51:	05 21 03 93 06       	add    eax,0x6930321
     b56:	2e 74 04             	cs je  b5d <__abi_tag+0x7e1>
     b59:	01 05 05 06 03 ed    	add    DWORD PTR [rip+0xffffffffed030605],eax        # ffffffffed031164 <_end+0xffffffffed02b14c>
     b5f:	79 01                	jns    b62 <__abi_tag+0x7e6>
     b61:	14 05                	adc    al,0x5
     b63:	1b 06                	sbb    eax,DWORD PTR [rsi]
     b65:	10 05 0b 2e 05 01    	adc    BYTE PTR [rip+0x1052e0b],al        # 1053976 <_end+0x104d95e>
     b6b:	31 05 2c 06 f4 06    	xor    DWORD PTR [rip+0x6f4062c],eax        # 6f4119d <_end+0x6f3b185>
     b71:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b117c <_end+0x134ab164>
     b77:	13 13                	adc    edx,DWORD PTR [rbx]
     b79:	05 0e 06 01 05       	add    eax,0x501060e
     b7e:	14 4b                	adc    al,0x4b
     b80:	05 0e 3b 05 05       	add    eax,0x5053b0e
     b85:	06                   	(bad)
     b86:	2f                   	(bad)
     b87:	14 13                	adc    al,0x13
     b89:	14 05                	adc    al,0x5
     b8b:	13 01                	adc    eax,DWORD PTR [rcx]
     b8d:	05 0e 06 b7 05       	add    eax,0x5b7060e
     b92:	09 06                	or     DWORD PTR [rsi],eax
     b94:	e9 13 13 13 14       	jmp    14131eac <_end+0x1412be94>
     b99:	05 11 06 01 05       	add    eax,0x5010611
     b9e:	09 06                	or     DWORD PTR [rsi],eax
     ba0:	75 05                	jne    ba7 <__abi_tag+0x82b>
     ba2:	0e                   	(bad)
     ba3:	06                   	(bad)
     ba4:	18 47 05             	sbb    BYTE PTR [rdi+0x5],al
     ba7:	1c 63                	sbb    al,0x63
     ba9:	05 11 66 05 09       	add    eax,0x9056611
     bae:	06                   	(bad)
     baf:	3d 14 13 05 11       	cmp    eax,0x11051314
     bb4:	06                   	(bad)
     bb5:	0f 05                	syscall
     bb7:	0e                   	(bad)
     bb8:	69 05 09 06 30 13 05 	imul   eax,DWORD PTR [rip+0x13300609],0x71031305        # 133011cb <_end+0x132fb1b3>
     bbf:	13 03 71 
     bc2:	01 06                	add    DWORD PTR [rsi],eax
     bc4:	58                   	pop    rax
     bc5:	2e 05 05 06 03 12    	cs add eax,0x12030605
     bcb:	3c 05                	cmp    al,0x5
     bcd:	06                   	(bad)
     bce:	03 09                	add    ecx,DWORD PTR [rcx]
     bd0:	e4 05                	in     al,0x5
     bd2:	05 14 05 12 06       	add    eax,0x6120514
     bd7:	01 05 0a 58 05 05    	add    DWORD PTR [rip+0x505580a],eax        # 50563e7 <_end+0x50503cf>
     bdd:	06                   	(bad)
     bde:	2f                   	(bad)
     bdf:	05 0a 06 01 05       	add    eax,0x501060a
     be4:	05 06 67 05 12       	add    eax,0x12056706
     be9:	06                   	(bad)
     bea:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a11f5 <_end+0x559b1dd>
     bf0:	0a 06                	or     al,BYTE PTR [rsi]
     bf2:	10 05 01 31 05 09    	adc    BYTE PTR [rip+0x9053101],al        # 9053cf9 <_end+0x904dce1>
     bf8:	06                   	(bad)
     bf9:	03 72 90             	add    esi,DWORD PTR [rdx-0x70]
     bfc:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 501121b <_end+0x500b203>
     c02:	0e                   	(bad)
     c03:	74 05                	je     c0a <__abi_tag+0x88e>
     c05:	09 06                	or     DWORD PTR [rsi],eax
     c07:	2f                   	(bad)
     c08:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 5011227 <_end+0x500b20f>
     c0e:	0e                   	(bad)
     c0f:	74 05                	je     c16 <__abi_tag+0x89a>
     c11:	09 06                	or     DWORD PTR [rsi],eax
     c13:	2f                   	(bad)
     c14:	13 05 17 06 01 05    	adc    eax,DWORD PTR [rip+0x5010617]        # 5011231 <_end+0x500b219>
     c1a:	0e                   	(bad)
     c1b:	3c 05                	cmp    al,0x5
     c1d:	09 06                	or     DWORD PTR [rsi],eax
     c1f:	2f                   	(bad)
     c20:	05 0e 06 01 66       	add    eax,0x6601060e
     c25:	03 63 3c             	add    esp,DWORD PTR [rbx+0x3c]
     c28:	05 28 06 03 27       	add    eax,0x27030628
     c2d:	f2 06                	repnz (bad)
     c2f:	01 82 05 05 06 3d    	add    DWORD PTR [rdx+0x3d060505],eax
     c35:	13 13                	adc    edx,DWORD PTR [rbx]
     c37:	14 05                	adc    al,0x5
     c39:	16                   	(bad)
     c3a:	00 02                	add    BYTE PTR [rdx],al
     c3c:	04 01                	add    al,0x1
     c3e:	01 05 2b 00 02 04    	add    DWORD PTR [rip+0x402002b],eax        # 4020c6f <_end+0x401ac57>
     c44:	01 06                	add    DWORD PTR [rsi],eax
     c46:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020c62 <_end+0x401ac4a>
     c4c:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     c4f:	09 06                	or     DWORD PTR [rsi],eax
     c51:	02 31                	add    dh,BYTE PTR [rcx]
     c53:	13 13                	adc    edx,DWORD PTR [rbx]
     c55:	05 0e 06 01 05       	add    eax,0x501060e
     c5a:	05 00 02 04 02       	add    eax,0x2040200
     c5f:	06                   	(bad)
     c60:	48 05 16 00 02 04    	add    rax,0x4020016
     c66:	01 01                	add    DWORD PTR [rcx],eax
     c68:	05 09 02 3d 13       	add    eax,0x133d0209
     c6d:	13 05 2e 06 11 05    	adc    eax,DWORD PTR [rip+0x511062e]        # 51112a1 <_end+0x510b289>
     c73:	0e                   	(bad)
     c74:	3d 05 05 00 02       	cmp    eax,0x2000505
     c79:	04 02                	add    al,0x2
     c7b:	06                   	(bad)
     c7c:	48 05 3a 00 02 04    	add    rax,0x402003a
     c82:	02 06                	add    al,BYTE PTR [rsi]
     c84:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020ca0 <_end+0x401ac88>
     c8a:	01 06                	add    DWORD PTR [rsi],eax
     c8c:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     c92:	2e 06                	cs (bad)
     c94:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 50549a8 <_end+0x504e990>
     c9a:	00 02                	add    BYTE PTR [rdx],al
     c9c:	04 02                	add    al,0x2
     c9e:	06                   	(bad)
     c9f:	48 05 3a 00 02 04    	add    rax,0x402003a
     ca5:	02 06                	add    al,BYTE PTR [rsi]
     ca7:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020cc3 <_end+0x401acab>
     cad:	01 06                	add    DWORD PTR [rsi],eax
     caf:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     cb5:	2e 06                	cs (bad)
     cb7:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 50549cb <_end+0x504e9b3>
     cbd:	00 02                	add    BYTE PTR [rdx],al
     cbf:	04 02                	add    al,0x2
     cc1:	06                   	(bad)
     cc2:	48 05 3a 00 02 04    	add    rax,0x402003a
     cc8:	02 06                	add    al,BYTE PTR [rsi]
     cca:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020ce6 <_end+0x401acce>
     cd0:	01 06                	add    DWORD PTR [rsi],eax
     cd2:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     cd8:	2e 06                	cs (bad)
     cda:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 50549ee <_end+0x504e9d6>
     ce0:	00 02                	add    BYTE PTR [rdx],al
     ce2:	04 02                	add    al,0x2
     ce4:	06                   	(bad)
     ce5:	48 05 3a 00 02 04    	add    rax,0x402003a
     ceb:	02 06                	add    al,BYTE PTR [rsi]
     ced:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d09 <_end+0x401acf1>
     cf3:	01 06                	add    DWORD PTR [rsi],eax
     cf5:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     cfb:	2e 06                	cs (bad)
     cfd:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a11 <_end+0x504e9f9>
     d03:	00 02                	add    BYTE PTR [rdx],al
     d05:	04 02                	add    al,0x2
     d07:	06                   	(bad)
     d08:	48 05 3a 00 02 04    	add    rax,0x402003a
     d0e:	02 06                	add    al,BYTE PTR [rsi]
     d10:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d2c <_end+0x401ad14>
     d16:	01 06                	add    DWORD PTR [rsi],eax
     d18:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d1e:	2e 06                	cs (bad)
     d20:	11 05 3a 00 02 04    	adc    DWORD PTR [rip+0x402003a],eax        # 4020d60 <_end+0x401ad48>
     d26:	02 3b                	add    bh,BYTE PTR [rbx]
     d28:	05 0e 3e 05 05       	add    eax,0x5053e0e
     d2d:	00 02                	add    BYTE PTR [rdx],al
     d2f:	04 02                	add    al,0x2
     d31:	06                   	(bad)
     d32:	48 05 16 00 02 04    	add    rax,0x4020016
     d38:	01 01                	add    DWORD PTR [rcx],eax
     d3a:	05 09 59 13 05       	add    eax,0x5135909
     d3f:	2e 06                	cs (bad)
     d41:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a55 <_end+0x504ea3d>
     d47:	00 02                	add    BYTE PTR [rdx],al
     d49:	04 02                	add    al,0x2
     d4b:	06                   	(bad)
     d4c:	3a 05 16 00 02 04    	cmp    al,BYTE PTR [rip+0x4020016]        # 4020d68 <_end+0x401ad50>
     d52:	01 01                	add    DWORD PTR [rcx],eax
     d54:	00 02                	add    BYTE PTR [rdx],al
     d56:	04 01                	add    al,0x1
     d58:	06                   	(bad)
     d59:	01 05 1d 00 02 04    	add    DWORD PTR [rip+0x402001d],eax        # 4020d7c <_end+0x401ad64>
     d5f:	01 42 05             	add    DWORD PTR [rdx+0x5],eax
     d62:	1f                   	(bad)
     d63:	00 02                	add    BYTE PTR [rdx],al
     d65:	04 01                	add    al,0x1
     d67:	06                   	(bad)
     d68:	2e 05 24 06 15 05    	cs add eax,0x5150624
     d6e:	1f                   	(bad)
     d6f:	00 02                	add    BYTE PTR [rdx],al
     d71:	04 01                	add    al,0x1
     d73:	71 00                	jno    d75 <__abi_tag+0x9f9>
     d75:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     d78:	74 05                	je     d7f <__abi_tag+0xa03>
     d7a:	0b 11                	or     edx,DWORD PTR [rcx]
     d7c:	05 09 06 76 05       	add    eax,0x5760609
     d81:	2e 06                	cs (bad)
     d83:	01 05 17 4a 05 1f    	add    DWORD PTR [rip+0x1f054a17],eax        # 1f0557a0 <_end+0x1f04f788>
     d89:	00 02                	add    BYTE PTR [rdx],al
     d8b:	04 01                	add    al,0x1
     d8d:	3b 05 0f 4b 05 05    	cmp    eax,DWORD PTR [rip+0x5054b0f]        # 50558a2 <_end+0x504f88a>
     d93:	00 02                	add    BYTE PTR [rdx],al
     d95:	04 03                	add    al,0x3
     d97:	06                   	(bad)
     d98:	2d 05 1f 00 02       	sub    eax,0x2001f05
     d9d:	04 01                	add    al,0x1
     d9f:	01 00                	add    DWORD PTR [rax],eax
     da1:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     da4:	06                   	(bad)
     da5:	58                   	pop    rax
     da6:	05 09 06 16 05       	add    eax,0x5160609
     dab:	05 00 02 04 03       	add    eax,0x3040200
     db0:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020de1 <_end+0x401adc9>
     db6:	01 01                	add    DWORD PTR [rcx],eax
     db8:	05 09 67 05 05       	add    eax,0x5056709
     dbd:	00 02                	add    BYTE PTR [rdx],al
     dbf:	04 03                	add    al,0x3
     dc1:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020df2 <_end+0x401adda>
     dc7:	01 01                	add    DWORD PTR [rcx],eax
     dc9:	05 09 67 05 05       	add    eax,0x5056709
     dce:	00 02                	add    BYTE PTR [rdx],al
     dd0:	04 03                	add    al,0x3
     dd2:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e03 <_end+0x401adeb>
     dd8:	01 01                	add    DWORD PTR [rcx],eax
     dda:	05 0f 06 13 58       	add    eax,0x5813060f
     ddf:	74 05                	je     de6 <__abi_tag+0xa6a>
     de1:	05 06 14 14 05       	add    eax,0x5141406
     de6:	1a 00                	sbb    al,BYTE PTR [rax]
     de8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     deb:	06                   	(bad)
     dec:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053ef3 <_end+0xf04dedb>
     df2:	45 3c 05             	rex.RB cmp al,0x5
     df5:	05 06 14 14 05       	add    eax,0x5141406
     dfa:	1a 00                	sbb    al,BYTE PTR [rax]
     dfc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     dff:	06                   	(bad)
     e00:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053f07 <_end+0xf04deef>
     e06:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     e07:	3c 05                	cmp    al,0x5
     e09:	05 06 14 14 05       	add    eax,0x5141406
     e0e:	1a 00                	sbb    al,BYTE PTR [rax]
     e10:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e13:	06                   	(bad)
     e14:	10 05 01 31 05 0b    	adc    BYTE PTR [rip+0xb053101],al        # b053f1b <_end+0xb04df03>
     e1a:	03 76 ac             	add    esi,DWORD PTR [rsi-0x54]
     e1d:	05 16 00 02 04       	add    eax,0x4020016
     e22:	01 7d 05             	add    DWORD PTR [rbp+0x5],edi
     e25:	09 2c 05 0e 2c 4a 3c 	or     DWORD PTR [rax*1+0x3c4a2c0e],ebp
     e2c:	05 09 30 05 0e       	add    eax,0xe053009
     e31:	2c 05                	sub    al,0x5
     e33:	2c 06                	sub    al,0x6
     e35:	03 15 90 06 01 05    	add    edx,DWORD PTR [rip+0x5010690]        # 50114cb <_end+0x500b4b3>
     e3b:	05 06 4b 13 13       	add    eax,0x13134b06
     e40:	14 05                	adc    al,0x5
     e42:	17                   	(bad)
     e43:	00 02                	add    BYTE PTR [rdx],al
     e45:	04 01                	add    al,0x1
     e47:	01 00                	add    DWORD PTR [rax],eax
     e49:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e4c:	06                   	(bad)
     e4d:	90                   	nop
     e4e:	05 0e 0f 2d 05       	add    eax,0x52d0f0e
     e53:	0b 5e 05             	or     ebx,DWORD PTR [rsi+0x5]
     e56:	09 06                	or     DWORD PTR [rsi],eax
     e58:	ba 05 21 06 01       	mov    edx,0x1062105
     e5d:	05 17 00 02 04       	add    eax,0x4020017
     e62:	01 3a                	add    DWORD PTR [rdx],edi
     e64:	05 10 4c 2e 05       	add    eax,0x52e4c10
     e69:	0b 3c 05 10 08 21 05 	or     edi,DWORD PTR [rax*1+0x5210810]
     e70:	0b 2d 05 09 06 2f    	or     ebp,DWORD PTR [rip+0x2f060905]        # 2f06177b <_end+0x2f05b763>
     e76:	05 10 06 01 05       	add    eax,0x5010610
     e7b:	0b 58 05             	or     ebx,DWORD PTR [rax+0x5]
     e7e:	05 00 02 04 03       	add    eax,0x3040200
     e83:	06                   	(bad)
     e84:	08 39                	or     BYTE PTR [rcx],bh
     e86:	05 17 00 02 04       	add    eax,0x4020017
     e8b:	01 01                	add    DWORD PTR [rcx],eax
     e8d:	05 0f 06 5e 05       	add    eax,0x55e060f
     e92:	18 3c 05 17 00 02 04 	sbb    BYTE PTR [rax*1+0x4020017],bh
     e99:	01 03                	add    DWORD PTR [rbx],eax
     e9b:	7a c8                	jp     e65 <__abi_tag+0xae9>
     e9d:	05 05 06 5e 05       	add    eax,0x55e0605
     ea2:	01 06                	add    DWORD PTR [rsi],eax
     ea4:	13 05 28 06 ae 06    	adc    eax,DWORD PTR [rip+0x6ae0628]        # 6ae14d2 <_end+0x6adb4ba>
     eaa:	01 82 05 05 06 2f    	add    DWORD PTR [rdx+0x2f060505],eax
     eb0:	13 13                	adc    edx,DWORD PTR [rbx]
     eb2:	05 17 00 02 04       	add    eax,0x4020017
     eb7:	01 01                	add    DWORD PTR [rcx],eax
     eb9:	00 02                	add    BYTE PTR [rdx],al
     ebb:	04 01                	add    al,0x1
     ebd:	06                   	(bad)
     ebe:	74 05                	je     ec5 <__abi_tag+0xb49>
     ec0:	0e                   	(bad)
     ec1:	10 05 09 06 77 05    	adc    BYTE PTR [rip+0x5770609],al        # 57714d0 <_end+0x576b4b8>
     ec7:	2d 06 01 05 16       	sub    eax,0x16050106
     ecc:	3c 05                	cmp    al,0x5
     ece:	0e                   	(bad)
     ecf:	3c 05                	cmp    al,0x5
     ed1:	09 06                	or     DWORD PTR [rsi],eax
     ed3:	30 06                	xor    BYTE PTR [rsi],al
     ed5:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     edb:	04 01                	add    al,0x1
     edd:	06                   	(bad)
     ede:	2e 05 34 00 02 04    	cs add eax,0x4020034
     ee4:	01 06                	add    DWORD PTR [rsi],eax
     ee6:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020f03 <_end+0x401aeeb>
     eec:	01 2b                	add    DWORD PTR [rbx],ebp
     eee:	05 11 4f 05 34       	add    eax,0x34054f11
     ef3:	00 02                	add    BYTE PTR [rdx],al
     ef5:	04 01                	add    al,0x1
     ef7:	2c 05                	sub    al,0x5
     ef9:	2c 00                	sub    al,0x0
     efb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     efe:	3c 05                	cmp    al,0x5
     f00:	09 06                	or     DWORD PTR [rsi],eax
     f02:	30 05 0e 06 01 05    	xor    BYTE PTR [rip+0x501060e],al        # 5011516 <_end+0x500b4fe>
     f08:	05 00 02 04 02       	add    eax,0x2040200
     f0d:	06                   	(bad)
     f0e:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020f2b <_end+0x401af13>
     f14:	01 01                	add    DWORD PTR [rcx],eax
     f16:	05 09 79 05 05       	add    eax,0x5057909
     f1b:	00 02                	add    BYTE PTR [rdx],al
     f1d:	04 02                	add    al,0x2
     f1f:	0d 05 17 00 02       	or     eax,0x2001705
     f24:	04 01                	add    al,0x1
     f26:	01 00                	add    DWORD PTR [rax],eax
     f28:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f2b:	06                   	(bad)
     f2c:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     f2f:	04 01                	add    al,0x1
     f31:	58                   	pop    rax
     f32:	05 01 1a 02 01       	add    eax,0x1021a01
     f37:	00 01                	add    BYTE PTR [rcx],al
     f39:	01 65 08             	add    DWORD PTR [rbp+0x8],esp
     f3c:	00 00                	add    BYTE PTR [rax],al
     f3e:	05 00 08 00 a4       	add    eax,0xa4000800
     f43:	00 00                	add    BYTE PTR [rax],al
     f45:	00 01                	add    BYTE PTR [rcx],al
     f47:	01 01                	add    DWORD PTR [rcx],eax
     f49:	fb                   	sti
     f4a:	0e                   	(bad)
     f4b:	0d 00 01 01 01       	or     eax,0x1010100
     f50:	01 00                	add    DWORD PTR [rax],eax
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	01 00                	add    DWORD PTR [rax],eax
     f56:	00 01                	add    BYTE PTR [rcx],al
     f58:	01 01                	add    DWORD PTR [rcx],eax
     f5a:	1f                   	(bad)
     f5b:	09 00                	or     DWORD PTR [rax],eax
     f5d:	00 00                	add    BYTE PTR [rax],al
     f5f:	00 2f                	add    BYTE PTR [rdi],ch
     f61:	00 00                	add    BYTE PTR [rax],al
     f63:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     f66:	00 00                	add    BYTE PTR [rax],al
     f68:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     f6b:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     f6e:	00 00                	add    BYTE PTR [rax],al
     f70:	9a                   	(bad)
     f71:	00 00                	add    BYTE PTR [rax],al
     f73:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
     f79:	00 00                	add    BYTE PTR [rax],al
     f7b:	00 dd                	add    ch,bl
     f7d:	00 00                	add    BYTE PTR [rax],al
     f7f:	00 02                	add    BYTE PTR [rdx],al
     f81:	01 1f                	add    DWORD PTR [rdi],ebx
     f83:	02 0f                	add    cl,BYTE PTR [rdi]
     f85:	14 3b                	adc    al,0x3b
     f87:	02 00                	add    al,BYTE PTR [rax]
     f89:	00 01                	add    BYTE PTR [rcx],al
     f8b:	3b 02                	cmp    eax,DWORD PTR [rdx]
     f8d:	00 00                	add    BYTE PTR [rax],al
     f8f:	01 a9 01 00 00 02    	add    DWORD PTR [rcx+0x2000001],ebp
     f95:	bc 01 00 00 02       	mov    esp,0x2000001
     f9a:	10 01                	adc    BYTE PTR [rcx],al
     f9c:	00 00                	add    BYTE PTR [rax],al
     f9e:	03 07                	add    eax,DWORD PTR [rdi]
     fa0:	01 00                	add    DWORD PTR [rax],eax
     fa2:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
     fa5:	01 00                	add    DWORD PTR [rax],eax
     fa7:	00 02                	add    BYTE PTR [rdx],al
     fa9:	21 01                	and    DWORD PTR [rcx],eax
     fab:	00 00                	add    BYTE PTR [rax],al
     fad:	05 29 01 00 00       	add    eax,0x129
     fb2:	06                   	(bad)
     fb3:	33 01                	xor    eax,DWORD PTR [rcx]
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
     fba:	00 00                	add    BYTE PTR [rax],al
     fbc:	02 07                	add    al,BYTE PTR [rdi]
     fbe:	01 00                	add    DWORD PTR [rax],eax
     fc0:	00 02                	add    BYTE PTR [rdx],al
     fc2:	07                   	(bad)
     fc3:	01 00                	add    DWORD PTR [rax],eax
     fc5:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 111e <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xe>
     fcb:	02 c5                	add    al,ch
     fcd:	01 00                	add    DWORD PTR [rax],eax
     fcf:	00 07                	add    BYTE PTR [rdi],al
     fd1:	62 01 00 00 07       	(bad)
     fd6:	d0 01                	rol    BYTE PTR [rcx],1
     fd8:	00 00                	add    BYTE PTR [rax],al
     fda:	07                   	(bad)
     fdb:	d7                   	xlat   BYTE PTR ds:[rbx]
     fdc:	01 00                	add    DWORD PTR [rax],eax
     fde:	00 02                	add    BYTE PTR [rdx],al
     fe0:	e5 01                	in     eax,0x1
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	04 75                	add    al,0x75
     fe6:	01 00                	add    DWORD PTR [rax],eax
     fe8:	00 08                	add    BYTE PTR [rax],cl
     fea:	05 05 00 09 02       	add    eax,0x2090005
     fef:	a0 1e 00 00 00 00 00 	movabs al,ds:0x30000000000001e
     ff6:	00 03 
     ff8:	d2 00                	rol    BYTE PTR [rax],cl
     ffa:	01 00                	add    DWORD PTR [rax],eax
     ffc:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     fff:	06                   	(bad)
    1000:	2f                   	(bad)
    1001:	08 8f 00 02 04 01    	or     BYTE PTR [rdi+0x1040200],cl
    1007:	4b 05 10 06 03 b9    	rex.WXB add rax,0xffffffffb9030610
    100d:	7f f2                	jg     1001 <_init+0x1>
    100f:	06                   	(bad)
    1010:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b161b <_end+0x134ab603>
    1016:	05 10 06 10 05       	add    eax,0x5100610
    101b:	28 22                	sub    BYTE PTR [rdx],ah
    101d:	05 10 56 05 28       	add    eax,0x28055610
    1022:	3e 58                	ds pop rax
    1024:	05 25 5f 05 13       	add    eax,0x13055f25
    1029:	72 05                	jb     1030 <__printf_chk@plt>
    102b:	0a 03                	or     al,BYTE PTR [rbx]
    102d:	7a 9e                	jp     fcd <__abi_tag+0xc51>
    102f:	05 15 00 02 04       	add    eax,0x4020015
    1034:	01 83 05 05 06 3d    	add    DWORD PTR [rbx+0x3d060505],eax
    103a:	13 05 25 06 17 05    	adc    eax,DWORD PTR [rip+0x5170625]        # 5171665 <_end+0x516b64d>
    1040:	21 03                	and    DWORD PTR [rbx],eax
    1042:	7a ac                	jp     ff0 <__abi_tag+0xc74>
    1044:	05 05 06 76 14       	add    eax,0x14760605
    1049:	13 05 1c 00 02 04    	adc    eax,DWORD PTR [rip+0x402001c]        # 402106b <_end+0x401b053>
    104f:	01 01                	add    DWORD PTR [rcx],eax
    1051:	05 09 13 13 05       	add    eax,0x5131309
    1056:	05 00 02 04 03       	add    eax,0x3040200
    105b:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 402107d <_end+0x401b065>
    1061:	01 01                	add    DWORD PTR [rcx],eax
    1063:	05 09 13 13 05       	add    eax,0x5131309
    1068:	25 06 11 05 05       	and    eax,0x5051106
    106d:	00 02                	add    BYTE PTR [rdx],al
    106f:	04 03                	add    al,0x3
    1071:	06                   	(bad)
    1072:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1078:	01 01                	add    DWORD PTR [rcx],eax
    107a:	05 09 13 13 05       	add    eax,0x5131309
    107f:	25 06 11 05 13       	and    eax,0x13051106
    1084:	72 05                	jb     108b <calloc@plt+0xb>
    1086:	25 4c 05 05 00       	and    eax,0x5054c
    108b:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    108e:	06                   	(bad)
    108f:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1095:	01 01                	add    DWORD PTR [rcx],eax
    1097:	05 05 17 05 01       	add    eax,0x1051705
    109c:	06                   	(bad)
    109d:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
    10a0:	2a 06                	sub    al,BYTE PTR [rsi]
    10a2:	4c 06                	rex.WR (bad)
    10a4:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b16af <_end+0x54ab697>
    10aa:	2a 06                	sub    al,BYTE PTR [rsi]
    10ac:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05afb7 <_end+0x1a054f9f>
    10b2:	03 38                	add    edi,DWORD PTR [rax]
    10b4:	ba 3c 3c 3c 05       	mov    edx,0x53c3c3c
    10b9:	05 06 03 4a 01       	add    eax,0x14a0306
    10be:	03 33                	add    esi,DWORD PTR [rbx]
    10c0:	01 13                	add    DWORD PTR [rbx],edx
    10c2:	14 05                	adc    al,0x5
    10c4:	0e                   	(bad)
    10c5:	06                   	(bad)
    10c6:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 53016d1 <_end+0x52fb6b9>
    10cc:	10 01                	adc    BYTE PTR [rcx],al
    10ce:	05 09 af 05 0d       	add    eax,0xd05af09
    10d3:	06                   	(bad)
    10d4:	01 05 10 06 39 05    	add    DWORD PTR [rip+0x5390610],eax        # 53916ea <_end+0x538b6d2>
    10da:	09 83 05 36 06 01    	or     DWORD PTR [rbx+0x1063605],eax
    10e0:	05 0c 06 03 16       	add    eax,0x1603060c
    10e5:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    10eb:	05 15 06 01 82       	add    eax,0x82010615
    10f0:	58                   	pop    rax
    10f1:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    10f4:	05 09 00 02 04       	add    eax,0x4020009
    10f9:	01 48 05             	add    DWORD PTR [rax+0x5],ecx
    10fc:	44 00 02             	add    BYTE PTR [rdx],r8b
    10ff:	04 01                	add    al,0x1
    1101:	06                   	(bad)
    1102:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1105:	04 01                	add    al,0x1
    1107:	06                   	(bad)
    1108:	01 05 05 06 03 49    	add    DWORD PTR [rip+0x49030605],eax        # 49031713 <_end+0x4902b6fb>
    110e:	01 05 19 06 03 11    	add    DWORD PTR [rip+0x11030619],eax        # 1103172d <_end+0x1102b715>
    1114:	01 05 18 03 70 4a    	add    DWORD PTR [rip+0x4a700318],eax        # 4a701432 <_end+0x4a6fb41a>
    111a:	3c 05                	cmp    al,0x5
    111c:	05 06 03 10 01       	add    eax,0x1100306
    1121:	05 22 06 01 05       	add    eax,0x5010622
    1126:	05 06 92 05 2b       	add    eax,0x2b059206
    112b:	00 02                	add    BYTE PTR [rdx],al
    112d:	04 01                	add    al,0x1
    112f:	90                   	nop
    1130:	05 0d 03 2c 01       	add    eax,0x12c030d
    1135:	05 05 13 05 15       	add    eax,0x15051305
    113a:	06                   	(bad)
    113b:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    113e:	05 06 4b 05 2a       	add    eax,0x2a054b06
    1143:	06                   	(bad)
    1144:	01 05 48 bb 04 02    	add    DWORD PTR [rip+0x204bb48],eax        # 204cc92 <_end+0x2046c7a>
    114a:	05 21 00 02 04       	add    eax,0x4020021
    114f:	01 03                	add    DWORD PTR [rbx],eax
    1151:	57                   	push   rdi
    1152:	3c 04                	cmp    al,0x4
    1154:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4021170 <_end+0x401b158>
    115a:	01 03                	add    DWORD PTR [rbx],eax
    115c:	28 3c 05 05 06 4b 05 	sub    BYTE PTR [rax*1+0x54b0605],bh
    1163:	48 06                	rex.W (bad)
    1165:	01 05 0b 2e 04 02    	add    DWORD PTR [rip+0x2042e0b],eax        # 2043f76 <_end+0x203df5e>
    116b:	05 01 06 03 55       	add    eax,0x55030601
    1170:	4a 05 03 14 05 21    	rex.WX add rax,0x21051403
    1176:	00 02                	add    BYTE PTR [rdx],al
    1178:	04 01                	add    al,0x1
    117a:	06                   	(bad)
    117b:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    117e:	05 1d 03 29 3c       	add    eax,0x3c29031d
    1183:	04 02                	add    al,0x2
    1185:	05 21 00 02 04       	add    eax,0x4020021
    118a:	01 03                	add    DWORD PTR [rbx],eax
    118c:	57                   	push   rdi
    118d:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1190:	04 01                	add    al,0x1
    1192:	d6                   	(bad)
    1193:	04 01                	add    al,0x1
    1195:	05 05 06 03 2a       	add    eax,0x2a030605
    119a:	01 05 13 06 01 05    	add    DWORD PTR [rip+0x5010613],eax        # 50117b3 <_end+0x500b79b>
    11a0:	29 00                	sub    DWORD PTR [rax],eax
    11a2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    11a5:	06                   	(bad)
    11a6:	3c 05                	cmp    al,0x5
    11a8:	31 00                	xor    DWORD PTR [rax],eax
    11aa:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    11ad:	06                   	(bad)
    11ae:	01 05 29 00 02 04    	add    DWORD PTR [rip+0x4020029],eax        # 40211dd <_end+0x401b1c5>
    11b4:	01 3c 05 0f 83 05 09 	add    DWORD PTR [rax*1+0x905830f],edi
    11bb:	06                   	(bad)
    11bc:	08 3c 05 2a 06 2e 05 	or     BYTE PTR [rax*1+0x52e062a],bh
    11c3:	29 00                	sub    DWORD PTR [rax],eax
    11c5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    11c8:	3b 05 26 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b26]        # 9055cf4 <_end+0x904fcdc>
    11ce:	06                   	(bad)
    11cf:	3d 05 26 06 01       	cmp    eax,0x1062605
    11d4:	05 05 00 02 04       	add    eax,0x4020005
    11d9:	03 06                	add    eax,DWORD PTR [rsi]
    11db:	3a 05 29 00 02 04    	cmp    al,BYTE PTR [rip+0x4020029]        # 402120a <_end+0x401b1f2>
    11e1:	01 01                	add    DWORD PTR [rcx],eax
    11e3:	05 22 06 03 52       	add    eax,0x52030622
    11e8:	4a 05 05 06 4a 05    	rex.WX add rax,0x54a0605
    11ee:	01 06                	add    DWORD PTR [rsi],eax
    11f0:	13 66 66             	adc    esp,DWORD PTR [rsi+0x66]
    11f3:	05 05 06 03 6a       	add    eax,0x6a030605
    11f8:	58                   	pop    rax
    11f9:	05 09 13 05 18       	add    eax,0x18051309
    11fe:	06                   	(bad)
    11ff:	01 05 12 41 05 18    	add    DWORD PTR [rip+0x18054112],eax        # 18055317 <_end+0x1804f2ff>
    1205:	37                   	(bad)
    1206:	05 09 06 3d 05       	add    eax,0x53d0609
    120b:	2e 06                	cs (bad)
    120d:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    1210:	30 4a 05             	xor    BYTE PTR [rdx+0x5],cl
    1213:	18 2e                	sbb    BYTE PTR [rsi],ch
    1215:	05 09 06 3e 05       	add    eax,0x53e0609
    121a:	28 06                	sub    BYTE PTR [rsi],al
    121c:	17                   	(bad)
    121d:	05 31 3f 05 27       	add    eax,0x27053f31
    1222:	03 79 4a             	add    edi,DWORD PTR [rcx+0x4a]
    1225:	73 05                	jae    122c <_start+0x1c>
    1227:	09 06                	or     DWORD PTR [rsi],eax
    1229:	83 13 14             	adc    DWORD PTR [rbx],0x14
    122c:	05 28 06 01 05       	add    eax,0x5010628
    1231:	09 06                	or     DWORD PTR [rsi],eax
    1233:	67 14 05             	addr32 adc al,0x5
    1236:	31 06                	xor    DWORD PTR [rsi],eax
    1238:	01 05 09 06 3d 05    	add    DWORD PTR [rip+0x53d0609],eax        # 53d1847 <_end+0x53cb82f>
    123e:	31 06                	xor    DWORD PTR [rsi],eax
    1240:	01 05 09 06 3e 06    	add    DWORD PTR [rip+0x63e0609],eax        # 63e184f <_end+0x63db837>
    1246:	58                   	pop    rax
    1247:	05 05 06 15 05       	add    eax,0x5150605
    124c:	1e                   	(bad)
    124d:	06                   	(bad)
    124e:	0f 05                	syscall
    1250:	22 4d 05             	and    cl,BYTE PTR [rbp+0x5]
    1253:	05 06 3e 92 05       	add    eax,0x5923e06
    1258:	01 06                	add    DWORD PTR [rsi],eax
    125a:	13 82 2e 2e 05 22    	adc    eax,DWORD PTR [rdx+0x22052e2e]
    1260:	1f                   	(bad)
    1261:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1267:	01 03                	add    DWORD PTR [rbx],eax
    1269:	67 66 00 02          	data16 add BYTE PTR [edx],al
    126d:	04 01                	add    al,0x1
    126f:	ba 00 02 04 01       	mov    edx,0x1040200
    1274:	74 00                	je     1276 <register_tm_clones+0x6>
    1276:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1279:	74 05                	je     1280 <register_tm_clones+0x10>
    127b:	29 06                	sub    DWORD PTR [rsi],eax
    127d:	03 1c 08             	add    ebx,DWORD PTR [rax+rcx*1]
    1280:	20 06                	and    BYTE PTR [rsi],al
    1282:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b188d <_end+0x54ab875>
    1288:	29 06                	sub    DWORD PTR [rsi],eax
    128a:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05b195 <_end+0x1a05517d>
    1290:	03 1b                	add    ebx,DWORD PTR [rbx]
    1292:	90                   	nop
    1293:	90                   	nop
    1294:	05 05 06 03 67       	add    eax,0x67030605
    1299:	01 03                	add    DWORD PTR [rbx],eax
    129b:	16                   	(bad)
    129c:	01 13                	add    DWORD PTR [rbx],edx
    129e:	14 05                	adc    al,0x5
    12a0:	0e                   	(bad)
    12a1:	06                   	(bad)
    12a2:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 53018ad <_end+0x52fb895>
    12a8:	10 01                	adc    BYTE PTR [rcx],al
    12aa:	05 09 d9 05 15       	add    eax,0x1505d909
    12af:	06                   	(bad)
    12b0:	01 05 0d 4a 05 10    	add    DWORD PTR [rip+0x10054a0d],eax        # 10055cc3 <_end+0x1004fcab>
    12b6:	06                   	(bad)
    12b7:	39 05 09 4b 05 33    	cmp    DWORD PTR [rip+0x33054b09],eax        # 33055dc6 <_end+0x3304fdae>
    12bd:	06                   	(bad)
    12be:	01 05 15 03 2b 2e    	add    DWORD PTR [rip+0x2e2b0315],eax        # 2e2b15d9 <_end+0x2e2ab5c1>
    12c4:	05 36 03 55 3c       	add    eax,0x3c550336
    12c9:	05 0c 06 03 16       	add    eax,0x1603060c
    12ce:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    12d4:	05 15 06 01 9e       	add    eax,0x9e010615
    12d9:	05 09 00 02 04       	add    eax,0x4020009
    12de:	01 03                	add    DWORD PTR [rbx],eax
    12e0:	55                   	push   rbp
    12e1:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 402132b <_end+0x401b313>
    12e7:	01 06                	add    DWORD PTR [rsi],eax
    12e9:	4a 05 0b 06 03 68    	rex.WX add rax,0x6803060b
    12ef:	01 05 24 03 0a 4a    	add    DWORD PTR [rip+0x4a0a0324],eax        # 4a0a1619 <_end+0x4a09b601>
    12f5:	05 4b 00 02 04       	add    eax,0x402004b
    12fa:	01 03                	add    DWORD PTR [rbx],eax
    12fc:	0e                   	(bad)
    12fd:	74 00                	je     12ff <frame_dummy+0xf>
    12ff:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1302:	2e 05 05 06 03 66    	cs add eax,0x66030605
    1308:	01 14 05 19 06 01 05 	add    DWORD PTR [rax*1+0x5010619],edx
    130f:	24 03                	and    al,0x3
    1311:	0a 3c 05 0e 03 79 66 	or     bh,BYTE PTR [rax*1+0x6679030e]
    1318:	3d 05 25 2a 05       	cmp    eax,0x52a2505
    131d:	05 06 75 05 27       	add    eax,0x27057506
    1322:	06                   	(bad)
    1323:	01 05 05 06 84 05    	add    DWORD PTR [rip+0x5840605],eax        # 584192e <_end+0x583b916>
    1329:	0e                   	(bad)
    132a:	06                   	(bad)
    132b:	01 05 05 06 3d 14    	add    DWORD PTR [rip+0x143d0605],eax        # 143d1936 <_end+0x143cb91e>
    1331:	05 29 06 01 4a       	add    eax,0x4a010629
    1336:	05 05 06 3d 05       	add    eax,0x53d0605
    133b:	29 06                	sub    DWORD PTR [rsi],eax
    133d:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    1340:	05 06 4c 13 05       	add    eax,0x5134c06
    1345:	24 06                	and    al,0x6
    1347:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1952 <_end+0x54ab93a>
    134d:	14 06                	adc    al,0x6
    134f:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a195a <_end+0x559b942>
    1355:	1a 06                	sbb    al,BYTE PTR [rsi]
    1357:	01 05 05 06 68 05    	add    DWORD PTR [rip+0x5680605],eax        # 5681962 <_end+0x567b94a>
    135d:	01 06                	add    DWORD PTR [rsi],eax
    135f:	13 66 2e             	adc    esp,DWORD PTR [rsi+0x2e]
    1362:	2e 05 05 06 03 6e    	cs add eax,0x6e030605
    1368:	90                   	nop
    1369:	05 01 06 03 12       	add    eax,0x12030601
    136e:	01 05 1a 00 02 04    	add    DWORD PTR [rip+0x402001a],eax        # 402138e <_end+0x401b376>
    1374:	01 03                	add    DWORD PTR [rbx],eax
    1376:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1377:	4a 05 01 03 12 2e    	rex.WX add rax,0x2e120301
    137d:	4a                   	rex.WX
    137e:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1384:	01 03                	add    DWORD PTR [rbx],eax
    1386:	6a 20                	push   0x20
    1388:	00 02                	add    BYTE PTR [rdx],al
    138a:	04 01                	add    al,0x1
    138c:	ba 00 02 04 01       	mov    edx,0x1040200
    1391:	74 00                	je     1393 <_Z16buildStringArrayPcj+0x93>
    1393:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1396:	74 05                	je     139d <_Z16buildStringArrayPcj+0x9d>
    1398:	2b 06                	sub    eax,DWORD PTR [rsi]
    139a:	03 18                	add    ebx,DWORD PTR [rax]
    139c:	90                   	nop
    139d:	06                   	(bad)
    139e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b19a9 <_end+0x54ab991>
    13a4:	2b 06                	sub    eax,DWORD PTR [rsi]
    13a6:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05b2b1 <_end+0x1a055299>
    13ac:	5a                   	pop    rdx
    13ad:	05 05 06 90 05       	add    eax,0x5900605
    13b2:	0e                   	(bad)
    13b3:	06                   	(bad)
    13b4:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 53019bf <_end+0x52fb9a7>
    13ba:	10 01                	adc    BYTE PTR [rcx],al
    13bc:	05 09 a1 05 15       	add    eax,0x1505a109
    13c1:	06                   	(bad)
    13c2:	01 05 0d 4a 05 10    	add    DWORD PTR [rip+0x10054a0d],eax        # 10055dd5 <_end+0x1004fdbd>
    13c8:	06                   	(bad)
    13c9:	39 05 09 4b 05 33    	cmp    DWORD PTR [rip+0x33054b09],eax        # 33055ed8 <_end+0x3304fec0>
    13cf:	06                   	(bad)
    13d0:	01 05 15 03 2b 2e    	add    DWORD PTR [rip+0x2e2b0315],eax        # 2e2b16eb <_end+0x2e2ab6d3>
    13d6:	05 36 03 55 3c       	add    eax,0x3c550336
    13db:	05 0c 06 03 16       	add    eax,0x1603060c
    13e0:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    13e6:	05 15 06 01 9e       	add    eax,0x9e010615
    13eb:	05 09 00 02 04       	add    eax,0x4020009
    13f0:	01 03                	add    DWORD PTR [rbx],eax
    13f2:	55                   	push   rbp
    13f3:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 402143d <_end+0x401b425>
    13f9:	01 06                	add    DWORD PTR [rsi],eax
    13fb:	4a 05 01 06 18 05    	rex.WX add rax,0x5180601
    1401:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    1404:	04 01                	add    al,0x1
    1406:	03 7a 4a             	add    edi,DWORD PTR [rdx+0x4a]
    1409:	05 01 34 2e 2e       	add    eax,0x2e2e3401
    140e:	2e 9e                	cs sahf
    1410:	05 0c 49 05 01       	add    eax,0x105490c
    1415:	2f                   	(bad)
    1416:	2e 2e 2e 20 58 05    	cs cs cs and BYTE PTR [rax+0x5],bl
    141c:	1a 06                	sbb    al,BYTE PTR [rsi]
    141e:	00 09                	add    BYTE PTR [rcx],cl
    1420:	02 10                	add    dl,BYTE PTR [rax]
    1422:	22 00                	and    al,BYTE PTR [rax]
    1424:	00 00                	add    BYTE PTR [rax],al
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	00 03                	add    BYTE PTR [rbx],al
    142a:	2e 01 06             	cs add DWORD PTR [rsi],eax
    142d:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1a38 <_end+0x54aba20>
    1433:	1a 06                	sbb    al,BYTE PTR [rsi]
    1435:	11 05 05 21 06 84    	adc    DWORD PTR [rip+0xffffffff84062105],eax        # ffffffff84063540 <_end+0xffffffff8405d528>
    143b:	05 09 06 01 3c       	add    eax,0x3c010609
    1440:	05 05 06 5a 13       	add    eax,0x135a0605
    1445:	05 14 06 01 05       	add    eax,0x5010614
    144a:	01 83 20 05 05 00    	add    DWORD PTR [rbx+0x50520],eax
    1450:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1453:	03 7a 20             	add    edi,DWORD PTR [rdx+0x20]
    1456:	00 02                	add    BYTE PTR [rdx],al
    1458:	04 01                	add    al,0x1
    145a:	08 90 05 1c 06 7c    	or     BYTE PTR [rax+0x7c061c05],dl
    1460:	06                   	(bad)
    1461:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1a6c <_end+0x54aba54>
    1467:	1c 06                	sbb    al,0x6
    1469:	11 05 05 4b 04 03    	adc    DWORD PTR [rip+0x3044b05],eax        # 3045f74 <_end+0x303ff5c>
    146f:	05 17 03 bf 7f       	add    eax,0x7fbf0317
    1474:	90                   	nop
    1475:	04 01                	add    al,0x1
    1477:	05 05 06 03 c3       	add    eax,0xc3030605
    147c:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
    147f:	03 05 01 03 bb 7f    	add    eax,DWORD PTR [rip+0x7fbb0301]        # 7fbb1786 <_end+0x7fbab76e>
    1485:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705288e <_end+0x1704c876>
    148b:	06                   	(bad)
    148c:	01 d6                	add    esi,edx
    148e:	58                   	pop    rax
    148f:	04 01                	add    al,0x1
    1491:	05 05 06 03 c4       	add    eax,0xc4030605
    1496:	00 01                	add    BYTE PTR [rcx],al
    1498:	04 03                	add    al,0x3
    149a:	05 01 03 ba 7f       	add    eax,0x7fba0301
    149f:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528a8 <_end+0x1704c890>
    14a5:	06                   	(bad)
    14a6:	01 08                	add    DWORD PTR [rax],ecx
    14a8:	58                   	pop    rax
    14a9:	04 01                	add    al,0x1
    14ab:	05 05 06 03 c5       	add    eax,0xc5030605
    14b0:	00 01                	add    BYTE PTR [rcx],al
    14b2:	04 03                	add    al,0x3
    14b4:	05 01 03 b9 7f       	add    eax,0x7fb90301
    14b9:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528c2 <_end+0x1704c8aa>
    14bf:	06                   	(bad)
    14c0:	01 08                	add    DWORD PTR [rax],ecx
    14c2:	58                   	pop    rax
    14c3:	04 01                	add    al,0x1
    14c5:	05 05 06 03 c6       	add    eax,0xc6030605
    14ca:	00 01                	add    BYTE PTR [rcx],al
    14cc:	04 03                	add    al,0x3
    14ce:	05 01 03 b8 7f       	add    eax,0x7fb80301
    14d3:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170528dc <_end+0x1704c8c4>
    14d9:	06                   	(bad)
    14da:	01 08                	add    DWORD PTR [rax],ecx
    14dc:	2e 04 01             	cs add al,0x1
    14df:	05 05 06 03 c7       	add    eax,0xc7030605
    14e4:	00 01                	add    BYTE PTR [rcx],al
    14e6:	05 17 00 02 04       	add    eax,0x4020017
    14eb:	01 01                	add    DWORD PTR [rcx],eax
    14ed:	05 0e 06 74 05       	add    eax,0x574060e
    14f2:	09 06                	or     DWORD PTR [rsi],eax
    14f4:	f3 04 03             	repz add al,0x3
    14f7:	05 01 03 b6 7f       	add    eax,0x7fb60301
    14fc:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052905 <_end+0x1704c8ed>
    1502:	06                   	(bad)
    1503:	01 08                	add    DWORD PTR [rax],ecx
    1505:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    1508:	05 05 00 02 04       	add    eax,0x4020005
    150d:	03 06                	add    eax,DWORD PTR [rsi]
    150f:	03 c7                	add    eax,edi
    1511:	00 01                	add    BYTE PTR [rcx],al
    1513:	05 17 00 02 04       	add    eax,0x4020017
    1518:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
    151b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    151e:	06                   	(bad)
    151f:	66 05 05 06          	add    ax,0x605
    1523:	15 04 03 05 01       	adc    eax,0x1050304
    1528:	03 b4 7f 01 05 03 14 	add    esi,DWORD PTR [rdi+rdi*2+0x14030501]
    152f:	05 17 06 01 9e       	add    eax,0x9e010617
    1534:	04 01                	add    al,0x1
    1536:	05 05 06 03 cb       	add    eax,0xcb030605
    153b:	00 01                	add    BYTE PTR [rcx],al
    153d:	04 03                	add    al,0x3
    153f:	05 01 03 b3 7f       	add    eax,0x7fb30301
    1544:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705294d <_end+0x1704c935>
    154a:	06                   	(bad)
    154b:	01 08                	add    DWORD PTR [rax],ecx
    154d:	2e 04 01             	cs add al,0x1
    1550:	05 05 06 03 cc       	add    eax,0xcc030605
    1555:	00 01                	add    BYTE PTR [rcx],al
    1557:	05 17 00 02 04       	add    eax,0x4020017
    155c:	01 01                	add    DWORD PTR [rcx],eax
    155e:	05 09 08 67 04       	add    eax,0x4670809
    1563:	03 05 01 03 b1 7f    	add    eax,DWORD PTR [rip+0x7fb10301]        # 7fb1186a <_end+0x7fb0b852>
    1569:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042972 <_end+0x103c95a>
    156f:	05 0f 06 03 cd       	add    eax,0xcd03060f
    1574:	00 01                	add    BYTE PTR [rcx],al
    1576:	04 03                	add    al,0x3
    1578:	05 17 03 b3 7f       	add    eax,0x7fb30317
    157d:	3c 04                	cmp    al,0x4
    157f:	01 00                	add    DWORD PTR [rax],eax
    1581:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1584:	03 cc                	add    ecx,esp
    1586:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    158c:	04 03                	add    al,0x3
    158e:	05 17 03 b3 7f       	add    eax,0x7fb30317
    1593:	3c 90                	cmp    al,0x90
    1595:	04 01                	add    al,0x1
    1597:	05 05 00 02 04       	add    eax,0x4020005
    159c:	03 06                	add    eax,DWORD PTR [rsi]
    159e:	03 cc                	add    ecx,esp
    15a0:	00 01                	add    BYTE PTR [rcx],al
    15a2:	05 17 00 02 04       	add    eax,0x4020017
    15a7:	01 01                	add    DWORD PTR [rcx],eax
    15a9:	00 02                	add    BYTE PTR [rdx],al
    15ab:	04 01                	add    al,0x1
    15ad:	06                   	(bad)
    15ae:	66 05 05 06          	add    ax,0x605
    15b2:	15 04 03 05 01       	adc    eax,0x1050304
    15b7:	03 af 7f 01 05 03    	add    ebp,DWORD PTR [rdi+0x305017f]
    15bd:	14 05                	adc    al,0x5
    15bf:	17                   	(bad)
    15c0:	06                   	(bad)
    15c1:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    15c7:	06                   	(bad)
    15c8:	03 d0                	add    edx,eax
    15ca:	00 01                	add    BYTE PTR [rcx],al
    15cc:	04 03                	add    al,0x3
    15ce:	05 01 03 ae 7f       	add    eax,0x7fae0301
    15d3:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170529dc <_end+0x1704c9c4>
    15d9:	06                   	(bad)
    15da:	01 08                	add    DWORD PTR [rax],ecx
    15dc:	2e 04 01             	cs add al,0x1
    15df:	05 05 06 03 d1       	add    eax,0xd1030605
    15e4:	00 01                	add    BYTE PTR [rcx],al
    15e6:	05 17 00 02 04       	add    eax,0x4020017
    15eb:	01 01                	add    DWORD PTR [rcx],eax
    15ed:	05 09 08 59 04       	add    eax,0x4590809
    15f2:	03 05 01 03 ac 7f    	add    eax,DWORD PTR [rip+0x7fac0301]        # 7fac18f9 <_end+0x7fabb8e1>
    15f8:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042a01 <_end+0x103c9e9>
    15fe:	05 0f 06 03 d2       	add    eax,0xd203060f
    1603:	00 01                	add    BYTE PTR [rcx],al
    1605:	04 03                	add    al,0x3
    1607:	05 17 03 ae 7f       	add    eax,0x7fae0317
    160c:	3c 04                	cmp    al,0x4
    160e:	01 00                	add    DWORD PTR [rax],eax
    1610:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1613:	03 d1                	add    edx,ecx
    1615:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    161b:	04 03                	add    al,0x3
    161d:	05 17 03 ae 7f       	add    eax,0x7fae0317
    1622:	3c 9e                	cmp    al,0x9e
    1624:	04 01                	add    al,0x1
    1626:	05 05 00 02 04       	add    eax,0x4020005
    162b:	03 06                	add    eax,DWORD PTR [rsi]
    162d:	03 d1                	add    edx,ecx
    162f:	00 01                	add    BYTE PTR [rcx],al
    1631:	05 17 00 02 04       	add    eax,0x4020017
    1636:	01 01                	add    DWORD PTR [rcx],eax
    1638:	00 02                	add    BYTE PTR [rdx],al
    163a:	04 01                	add    al,0x1
    163c:	06                   	(bad)
    163d:	66 05 05 06          	add    ax,0x605
    1641:	15 04 03 05 01       	adc    eax,0x1050304
    1646:	03 aa 7f 01 05 03    	add    ebp,DWORD PTR [rdx+0x305017f]
    164c:	14 05                	adc    al,0x5
    164e:	17                   	(bad)
    164f:	06                   	(bad)
    1650:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    1656:	06                   	(bad)
    1657:	03 d5                	add    edx,ebp
    1659:	00 01                	add    BYTE PTR [rcx],al
    165b:	04 03                	add    al,0x3
    165d:	05 01 03 a9 7f       	add    eax,0x7fa90301
    1662:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052a6b <_end+0x1704ca53>
    1668:	06                   	(bad)
    1669:	01 08                	add    DWORD PTR [rax],ecx
    166b:	2e 04 01             	cs add al,0x1
    166e:	05 05 06 03 d6       	add    eax,0xd6030605
    1673:	00 01                	add    BYTE PTR [rcx],al
    1675:	05 17 00 02 04       	add    eax,0x4020017
    167a:	01 01                	add    DWORD PTR [rcx],eax
    167c:	05 09 08 4b 04       	add    eax,0x44b0809
    1681:	03 05 01 03 a7 7f    	add    eax,DWORD PTR [rip+0x7fa70301]        # 7fa71988 <_end+0x7fa6b970>
    1687:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042a90 <_end+0x103ca78>
    168d:	05 0f 06 03 d7       	add    eax,0xd703060f
    1692:	00 01                	add    BYTE PTR [rcx],al
    1694:	04 03                	add    al,0x3
    1696:	05 17 03 a9 7f       	add    eax,0x7fa90317
    169b:	3c 04                	cmp    al,0x4
    169d:	01 00                	add    DWORD PTR [rax],eax
    169f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    16a2:	03 d6                	add    edx,esi
    16a4:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    16aa:	04 03                	add    al,0x3
    16ac:	05 17 03 a9 7f       	add    eax,0x7fa90317
    16b1:	3c 9e                	cmp    al,0x9e
    16b3:	04 01                	add    al,0x1
    16b5:	05 05 00 02 04       	add    eax,0x4020005
    16ba:	03 06                	add    eax,DWORD PTR [rsi]
    16bc:	03 d6                	add    edx,esi
    16be:	00 01                	add    BYTE PTR [rcx],al
    16c0:	05 17 00 02 04       	add    eax,0x4020017
    16c5:	01 01                	add    DWORD PTR [rcx],eax
    16c7:	00 02                	add    BYTE PTR [rdx],al
    16c9:	04 01                	add    al,0x1
    16cb:	06                   	(bad)
    16cc:	66 05 05 06          	add    ax,0x605
    16d0:	15 04 03 05 01       	adc    eax,0x1050304
    16d5:	03 a5 7f 01 05 03    	add    esp,DWORD PTR [rbp+0x305017f]
    16db:	14 05                	adc    al,0x5
    16dd:	17                   	(bad)
    16de:	06                   	(bad)
    16df:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    16e5:	06                   	(bad)
    16e6:	03 da                	add    ebx,edx
    16e8:	00 01                	add    BYTE PTR [rcx],al
    16ea:	04 03                	add    al,0x3
    16ec:	05 01 03 a4 7f       	add    eax,0x7fa40301
    16f1:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052afa <_end+0x1704cae2>
    16f7:	06                   	(bad)
    16f8:	01 ba 04 01 05 05    	add    DWORD PTR [rdx+0x5050104],edi
    16fe:	06                   	(bad)
    16ff:	03 db                	add    ebx,ebx
    1701:	00 01                	add    BYTE PTR [rcx],al
    1703:	05 17 00 02 04       	add    eax,0x4020017
    1708:	01 01                	add    DWORD PTR [rcx],eax
    170a:	05 09 08 3d 04       	add    eax,0x43d0809
    170f:	03 05 01 03 a2 7f    	add    eax,DWORD PTR [rip+0x7fa20301]        # 7fa21a16 <_end+0x7fa1b9fe>
    1715:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b1e <_end+0x103cb06>
    171b:	05 0f 06 03 dc       	add    eax,0xdc03060f
    1720:	00 01                	add    BYTE PTR [rcx],al
    1722:	04 03                	add    al,0x3
    1724:	05 17 03 a4 7f       	add    eax,0x7fa40317
    1729:	3c 04                	cmp    al,0x4
    172b:	01 00                	add    DWORD PTR [rax],eax
    172d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1730:	03 db                	add    ebx,ebx
    1732:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    1738:	04 03                	add    al,0x3
    173a:	05 17 03 a4 7f       	add    eax,0x7fa40317
    173f:	3c ac                	cmp    al,0xac
    1741:	04 01                	add    al,0x1
    1743:	05 05 00 02 04       	add    eax,0x4020005
    1748:	03 06                	add    eax,DWORD PTR [rsi]
    174a:	03 db                	add    ebx,ebx
    174c:	00 01                	add    BYTE PTR [rcx],al
    174e:	05 17 00 02 04       	add    eax,0x4020017
    1753:	01 01                	add    DWORD PTR [rcx],eax
    1755:	00 02                	add    BYTE PTR [rdx],al
    1757:	04 01                	add    al,0x1
    1759:	06                   	(bad)
    175a:	58                   	pop    rax
    175b:	05 05 06 15 04       	add    eax,0x4150605
    1760:	03 05 01 03 a0 7f    	add    eax,DWORD PTR [rip+0x7fa00301]        # 7fa01a67 <_end+0x7f9fba4f>
    1766:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b6f <_end+0x103cb57>
    176c:	05 01 06 03 df       	add    eax,0xdf030601
    1771:	00 01                	add    BYTE PTR [rcx],al
    1773:	04 03                	add    al,0x3
    1775:	05 17 03 a1 7f       	add    eax,0x7fa10317
    177a:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    177d:	05 01 03 df 00       	add    eax,0xdf0301
    1782:	58                   	pop    rax
    1783:	04 03                	add    al,0x3
    1785:	05 17 03 a1 7f       	add    eax,0x7fa10317
    178a:	3c 58                	cmp    al,0x58
    178c:	04 01                	add    al,0x1
    178e:	05 05 00 02 04       	add    eax,0x4020005
    1793:	01 03                	add    DWORD PTR [rbx],eax
    1795:	c1 00 01             	rol    DWORD PTR [rax],0x1
    1798:	00 02                	add    BYTE PTR [rdx],al
    179a:	04 01                	add    al,0x1
    179c:	08 90 02 05 00 01    	or     BYTE PTR [rax+0x1000502],dl
    17a2:	01 ff                	add    edi,edi
    17a4:	01 00                	add    DWORD PTR [rax],eax
    17a6:	00 05 00 08 00 b7    	add    BYTE PTR [rip+0xffffffffb7000800],al        # ffffffffb7001fac <_end+0xffffffffb6ffbf94>
    17ac:	00 00                	add    BYTE PTR [rax],al
    17ae:	00 01                	add    BYTE PTR [rcx],al
    17b0:	01 01                	add    DWORD PTR [rcx],eax
    17b2:	fb                   	sti
    17b3:	0e                   	(bad)
    17b4:	0d 00 01 01 01       	or     eax,0x1010100
    17b9:	01 00                	add    DWORD PTR [rax],eax
    17bb:	00 00                	add    BYTE PTR [rax],al
    17bd:	01 00                	add    DWORD PTR [rax],eax
    17bf:	00 01                	add    BYTE PTR [rcx],al
    17c1:	01 01                	add    DWORD PTR [rcx],eax
    17c3:	1f                   	(bad)
    17c4:	0a 00                	or     al,BYTE PTR [rax]
    17c6:	00 00                	add    BYTE PTR [rax],al
    17c8:	00 2f                	add    BYTE PTR [rdi],ch
    17ca:	00 00                	add    BYTE PTR [rax],al
    17cc:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    17cf:	00 00                	add    BYTE PTR [rax],al
    17d1:	41 00 00             	add    BYTE PTR [r8],al
    17d4:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    17d7:	00 00                	add    BYTE PTR [rax],al
    17d9:	60                   	(bad)
    17da:	02 00                	add    al,BYTE PTR [rax]
    17dc:	00 82 02 00 00 9a    	add    BYTE PTR [rdx-0x65fffffe],al
    17e2:	00 00                	add    BYTE PTR [rax],al
    17e4:	00 ae 00 00 00 dd    	add    BYTE PTR [rsi-0x23000000],ch
    17ea:	00 00                	add    BYTE PTR [rax],al
    17ec:	00 02                	add    BYTE PTR [rdx],al
    17ee:	01 1f                	add    DWORD PTR [rdi],ebx
    17f0:	02 0f                	add    cl,BYTE PTR [rdi]
    17f2:	17                   	(bad)
    17f3:	56                   	push   rsi
    17f4:	02 00                	add    al,BYTE PTR [rax]
    17f6:	00 01                	add    BYTE PTR [rcx],al
    17f8:	56                   	push   rsi
    17f9:	02 00                	add    al,BYTE PTR [rax]
    17fb:	00 01                	add    BYTE PTR [rcx],al
    17fd:	ab                   	stos   DWORD PTR es:[rdi],eax
    17fe:	02 00                	add    al,BYTE PTR [rax]
    1800:	00 02                	add    BYTE PTR [rdx],al
    1802:	b4 02                	mov    ah,0x2
    1804:	00 00                	add    BYTE PTR [rax],al
    1806:	02 a0 01 00 00 03    	add    ah,BYTE PTR [rax+0x3000001]
    180c:	10 01                	adc    BYTE PTR [rcx],al
    180e:	00 00                	add    BYTE PTR [rax],al
    1810:	04 07                	add    al,0x7
    1812:	01 00                	add    DWORD PTR [rax],eax
    1814:	00 03                	add    BYTE PTR [rbx],al
    1816:	19 01                	sbb    DWORD PTR [rcx],eax
    1818:	00 00                	add    BYTE PTR [rax],al
    181a:	02 19                	add    bl,BYTE PTR [rcx]
    181c:	01 00                	add    DWORD PTR [rax],eax
    181e:	00 05 bd 02 00 00    	add    BYTE PTR [rip+0x2bd],al        # 1ae1 <_Z15crc32HashString8string_t+0xe1>
    1824:	06                   	(bad)
    1825:	21 01                	and    DWORD PTR [rcx],eax
    1827:	00 00                	add    BYTE PTR [rax],al
    1829:	07                   	(bad)
    182a:	29 01                	sub    DWORD PTR [rcx],eax
    182c:	00 00                	add    BYTE PTR [rax],al
    182e:	08 33                	or     BYTE PTR [rbx],dh
    1830:	01 00                	add    DWORD PTR [rax],eax
    1832:	00 02                	add    BYTE PTR [rdx],al
    1834:	42 01 00             	rex.X add DWORD PTR [rax],eax
    1837:	00 02                	add    BYTE PTR [rdx],al
    1839:	07                   	(bad)
    183a:	01 00                	add    DWORD PTR [rax],eax
    183c:	00 02                	add    BYTE PTR [rdx],al
    183e:	07                   	(bad)
    183f:	01 00                	add    DWORD PTR [rax],eax
    1841:	00 07                	add    BYTE PTR [rdi],al
    1843:	cf                   	iret
    1844:	02 00                	add    al,BYTE PTR [rax]
    1846:	00 02                	add    BYTE PTR [rdx],al
    1848:	53                   	push   rbx
    1849:	01 00                	add    DWORD PTR [rax],eax
    184b:	00 02                	add    BYTE PTR [rdx],al
    184d:	dd 02                	fld    QWORD PTR [rdx]
    184f:	00 00                	add    BYTE PTR [rax],al
    1851:	02 b4 02 00 00 03 d6 	add    dh,BYTE PTR [rdx+rax*1-0x29fd0000]
    1858:	02 00                	add    al,BYTE PTR [rax]
    185a:	00 05 e5 01 00 00    	add    BYTE PTR [rip+0x1e5],al        # 1a45 <_Z15crc32HashString8string_t+0x45>
    1860:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    1863:	00 00                	add    BYTE PTR [rax],al
    1865:	09 05 33 00 09 02    	or     DWORD PTR [rip+0x2090033],eax        # 209189e <_end+0x208b886>
    186b:	80 24 00 00          	and    BYTE PTR [rax+rax*1],0x0
    186f:	00 00                	add    BYTE PTR [rax],al
    1871:	00 00                	add    BYTE PTR [rax],al
    1873:	03 0a                	add    ecx,DWORD PTR [rdx]
    1875:	01 06                	add    DWORD PTR [rsi],eax
    1877:	01 08                	add    DWORD PTR [rax],ecx
    1879:	3c 05                	cmp    al,0x5
    187b:	05 06 08 2f 05       	add    eax,0x52f0806
    1880:	11 06                	adc    DWORD PTR [rsi],eax
    1882:	92                   	xchg   edx,eax
    1883:	05 05 06 74 05       	add    eax,0x5740605
    1888:	0e                   	(bad)
    1889:	06                   	(bad)
    188a:	13 3c 05 11 3b 05 05 	adc    edi,DWORD PTR [rax*1+0x5053b11]
    1891:	06                   	(bad)
    1892:	08 e5                	or     ch,ah
    1894:	05 0e 06 01 05       	add    eax,0x501060e
    1899:	05 00 02 04 01       	add    eax,0x1040200
    189e:	82                   	(bad)
    189f:	06                   	(bad)
    18a0:	5a                   	pop    rdx
    18a1:	05 0c 06 01 05       	add    eax,0x501060c
    18a6:	05 06 59 04 02       	add    eax,0x2045906
    18ab:	05 1b 06 03 23       	add    eax,0x2303061b
    18b0:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    18b3:	05 0b 03 5d 74       	add    eax,0x745d030b
    18b8:	05 05 06 4c 04       	add    eax,0x44c0605
    18bd:	02 05 01 03 15 01    	add    al,BYTE PTR [rip+0x1150301]        # 1151bc4 <_end+0x114bbac>
    18c3:	05 03 14 15 05       	add    eax,0x5151403
    18c8:	07                   	(bad)
    18c9:	14 17                	adc    al,0x17
    18cb:	05 1b 06 01 82       	add    eax,0x8201061b
    18d0:	04 01                	add    al,0x1
    18d2:	05 05 06 03 60       	add    eax,0x60030605
    18d7:	01 5a 05             	add    DWORD PTR [rdx+0x5],ebx
    18da:	1f                   	(bad)
    18db:	06                   	(bad)
    18dc:	01 c8                	add    eax,ecx
    18de:	05 05 06 3d 5a       	add    eax,0x5a3d0605
    18e3:	04 03                	add    al,0x3
    18e5:	05 01 01 05 03       	add    eax,0x3050101
    18ea:	14 05                	adc    al,0x5
    18ec:	0a 00                	or     al,BYTE PTR [rax]
    18ee:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    18f1:	06                   	(bad)
    18f2:	01 00                	add    DWORD PTR [rax],eax
    18f4:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    18f7:	d6                   	(bad)
    18f8:	04 01                	add    al,0x1
    18fa:	05 05 06 01 05       	add    eax,0x5010605
    18ff:	0a 06                	or     al,BYTE PTR [rsi]
    1901:	01 05 01 85 05 34    	add    DWORD PTR [rip+0x34058501],eax        # 34059e08 <_end+0x34053df0>
    1907:	00 02                	add    BYTE PTR [rdx],al
    1909:	04 01                	add    al,0x1
    190b:	03 70 02             	add    esi,DWORD PTR [rax+0x2]
    190e:	2e 01 00             	cs add DWORD PTR [rax],eax
    1911:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1914:	2e 05 05 00 02 04    	cs add eax,0x4020005
    191a:	01 2b                	add    DWORD PTR [rbx],ebp
    191c:	00 02                	add    BYTE PTR [rdx],al
    191e:	04 01                	add    al,0x1
    1920:	08 2e                	or     BYTE PTR [rsi],ch
    1922:	00 02                	add    BYTE PTR [rdx],al
    1924:	04 01                	add    al,0x1
    1926:	74 05                	je     192d <_Z11hashMapDtorP7HashMap+0x5d>
    1928:	01 03                	add    DWORD PTR [rbx],eax
    192a:	13 58 05             	adc    ebx,DWORD PTR [rax+0x5]
    192d:	32 06                	xor    al,BYTE PTR [rsi]
    192f:	ca 06 01             	retf   0x106
    1932:	05 05 06 4b 05       	add    eax,0x54b0605
    1937:	32 06                	xor    al,BYTE PTR [rsi]
    1939:	11 05 05 4b 05 1b    	adc    DWORD PTR [rip+0x1b054b05],eax        # 1b056444 <_end+0x1b05042c>
    193f:	06                   	(bad)
    1940:	b1 05                	mov    cl,0x5
    1942:	0e                   	(bad)
    1943:	06                   	(bad)
    1944:	10 05 1b 30 05 09    	adc    BYTE PTR [rip+0x905301b],al        # 9054965 <_end+0x904e94d>
    194a:	06                   	(bad)
    194b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    194c:	04 04                	add    al,0x4
    194e:	05 1b 06 03 c3       	add    eax,0xc303061b
    1953:	01 01                	add    DWORD PTR [rcx],eax
    1955:	04 01                	add    al,0x1
    1957:	05 0e 03 bd 7e       	add    eax,0x7ebd030e
    195c:	58                   	pop    rax
    195d:	05 09 06 3d 04       	add    eax,0x43d0609
    1962:	04 05                	add    al,0x5
    1964:	01 03                	add    DWORD PTR [rbx],eax
    1966:	c0 01 01             	rol    BYTE PTR [rcx],0x1
    1969:	05 03 14 05 1b       	add    eax,0x1b051403
    196e:	06                   	(bad)
    196f:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    1972:	01 05 13 00 02 04    	add    DWORD PTR [rip+0x4020013],eax        # 402198b <_end+0x401b973>
    1978:	01 03                	add    DWORD PTR [rbx],eax
    197a:	be 7e 01 05 1b       	mov    esi,0x1b05017e
    197f:	06                   	(bad)
    1980:	48 05 14 06 01 05    	add    rax,0x5010614
    1986:	1b 66 05             	sbb    esp,DWORD PTR [rsi+0x5]
    1989:	01 5e 4a             	add    DWORD PTR [rsi+0x4a],ebx
    198c:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1992:	01 03                	add    DWORD PTR [rbx],eax
    1994:	75 20                	jne    19b6 <_Z17hashMapDebugPrintP7HashMap+0x76>
    1996:	00 02                	add    BYTE PTR [rdx],al
    1998:	04 01                	add    al,0x1
    199a:	08 2e                	or     BYTE PTR [rsi],ch
    199c:	00 02                	add    BYTE PTR [rdx],al
    199e:	04 01                	add    al,0x1
    19a0:	74 02                	je     19a4 <_Z17hashMapDebugPrintP7HashMap+0x64>
    19a2:	05 00 01 01 38       	add    eax,0x38010100
    19a7:	16                   	(bad)
    19a8:	00 00                	add    BYTE PTR [rax],al
    19aa:	05 00 08 00 82       	add    eax,0x82000800
    19af:	01 00                	add    DWORD PTR [rax],eax
    19b1:	00 01                	add    BYTE PTR [rcx],al
    19b3:	01 01                	add    DWORD PTR [rcx],eax
    19b5:	fb                   	sti
    19b6:	0e                   	(bad)
    19b7:	0d 00 01 01 01       	or     eax,0x1010100
    19bc:	01 00                	add    DWORD PTR [rax],eax
    19be:	00 00                	add    BYTE PTR [rax],al
    19c0:	01 00                	add    DWORD PTR [rax],eax
    19c2:	00 01                	add    BYTE PTR [rcx],al
    19c4:	01 01                	add    DWORD PTR [rcx],eax
    19c6:	1f                   	(bad)
    19c7:	0c 00                	or     al,0x0
    19c9:	00 00                	add    BYTE PTR [rax],al
    19cb:	00 2f                	add    BYTE PTR [rdi],ch
    19cd:	00 00                	add    BYTE PTR [rax],al
    19cf:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    19d2:	00 00                	add    BYTE PTR [rax],al
    19d4:	9a                   	(bad)
    19d5:	00 00                	add    BYTE PTR [rax],al
    19d7:	00 ae 00 00 00 07    	add    BYTE PTR [rsi+0x7000000],ch
    19dd:	03 00                	add    eax,DWORD PTR [rax]
    19df:	00 dd                	add    ch,bl
    19e1:	00 00                	add    BYTE PTR [rax],al
    19e3:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    19e6:	00 00                	add    BYTE PTR [rax],al
    19e8:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    19eb:	00 82 02 00 00 21    	add    BYTE PTR [rdx+0x21000002],al
    19f1:	03 00                	add    eax,DWORD PTR [rax]
    19f3:	00 c7                	add    bh,al
    19f5:	00 00                	add    BYTE PTR [rax],al
    19f7:	00 02                	add    BYTE PTR [rdx],al
    19f9:	01 1f                	add    DWORD PTR [rdi],ebx
    19fb:	02 0f                	add    cl,BYTE PTR [rdi]
    19fd:	3e fd                	ds std
    19ff:	02 00                	add    al,BYTE PTR [rax]
    1a01:	00 01                	add    BYTE PTR [rcx],al
    1a03:	fd                   	std
    1a04:	02 00                	add    al,BYTE PTR [rax]
    1a06:	00 01                	add    BYTE PTR [rcx],al
    1a08:	bc 01 00 00 02       	mov    esp,0x2000001
    1a0d:	3a 03                	cmp    al,BYTE PTR [rbx]
    1a0f:	00 00                	add    BYTE PTR [rax],al
    1a11:	03 40 03             	add    eax,DWORD PTR [rax+0x3]
    1a14:	00 00                	add    BYTE PTR [rax],al
    1a16:	04 49                	add    al,0x49
    1a18:	03 00                	add    eax,DWORD PTR [rax]
    1a1a:	00 03                	add    BYTE PTR [rbx],al
    1a1c:	55                   	push   rbp
    1a1d:	03 00                	add    eax,DWORD PTR [rax]
    1a1f:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 1b4e <_Z19_mm_crc32HashString8string_t+0x2e>
    1a25:	04 21                	add    al,0x21
    1a27:	01 00                	add    DWORD PTR [rax],eax
    1a29:	00 03                	add    BYTE PTR [rbx],al
    1a2b:	5d                   	pop    rbp
    1a2c:	03 00                	add    eax,DWORD PTR [rax]
    1a2e:	00 03                	add    BYTE PTR [rbx],al
    1a30:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    1a33:	00 03                	add    BYTE PTR [rbx],al
    1a35:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a36:	03 00                	add    eax,DWORD PTR [rax]
    1a38:	00 03                	add    BYTE PTR [rbx],al
    1a3a:	73 03                	jae    1a3f <_Z15crc32HashString8string_t+0x3f>
    1a3c:	00 00                	add    BYTE PTR [rax],al
    1a3e:	03 7b 03             	add    edi,DWORD PTR [rbx+0x3]
    1a41:	00 00                	add    BYTE PTR [rax],al
    1a43:	03 83 03 00 00 04    	add    eax,DWORD PTR [rbx+0x4000003]
    1a49:	8e 03                	mov    es,WORD PTR [rbx]
    1a4b:	00 00                	add    BYTE PTR [rax],al
    1a4d:	03 94 03 00 00 03 75 	add    edx,DWORD PTR [rbx+rax*1+0x75030000]
    1a54:	01 00                	add    DWORD PTR [rax],eax
    1a56:	00 06                	add    BYTE PTR [rsi],al
    1a58:	9a                   	(bad)
    1a59:	03 00                	add    eax,DWORD PTR [rax]
    1a5b:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1a5e:	01 00                	add    DWORD PTR [rax],eax
    1a60:	00 02                	add    BYTE PTR [rdx],al
    1a62:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a63:	03 00                	add    eax,DWORD PTR [rax]
    1a65:	00 07                	add    BYTE PTR [rdi],al
    1a67:	10 01                	adc    BYTE PTR [rcx],al
    1a69:	00 00                	add    BYTE PTR [rax],al
    1a6b:	08 07                	or     BYTE PTR [rdi],al
    1a6d:	01 00                	add    DWORD PTR [rax],eax
    1a6f:	00 07                	add    BYTE PTR [rdi],al
    1a71:	b2 03                	mov    dl,0x3
    1a73:	00 00                	add    BYTE PTR [rax],al
    1a75:	09 bc 03 00 00 09 1b 	or     DWORD PTR [rbx+rax*1+0x1b090000],edi
    1a7c:	02 00                	add    al,BYTE PTR [rax]
    1a7e:	00 02                	add    BYTE PTR [rdx],al
    1a80:	bd 02 00 00 09       	mov    ebp,0x9000002
    1a85:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a86:	03 00                	add    eax,DWORD PTR [rax]
    1a88:	00 03                	add    BYTE PTR [rbx],al
    1a8a:	c5 03 00             	(bad)
    1a8d:	00 00                	add    BYTE PTR [rax],al
    1a8f:	d0 03                	rol    BYTE PTR [rbx],1
    1a91:	00 00                	add    BYTE PTR [rax],al
    1a93:	09 de                	or     esi,ebx
    1a95:	03 00                	add    eax,DWORD PTR [rax]
    1a97:	00 09                	add    BYTE PTR [rcx],cl
    1a99:	e9 03 00 00 09       	jmp    9001aa1 <_end+0x8ffba89>
    1a9e:	f2 03 00             	repnz add eax,DWORD PTR [rax]
    1aa1:	00 09                	add    BYTE PTR [rcx],cl
    1aa3:	eb 03                	jmp    1aa8 <_Z15crc32HashString8string_t+0xa8>
    1aa5:	00 00                	add    BYTE PTR [rax],al
    1aa7:	09 00                	or     DWORD PTR [rax],eax
    1aa9:	04 00                	add    al,0x0
    1aab:	00 07                	add    BYTE PTR [rdi],al
    1aad:	53                   	push   rbx
    1aae:	01 00                	add    DWORD PTR [rax],eax
    1ab0:	00 02                	add    BYTE PTR [rdx],al
    1ab2:	08 04 00             	or     BYTE PTR [rax+rax*1],al
    1ab5:	00 02                	add    BYTE PTR [rdx],al
    1ab7:	17                   	(bad)
    1ab8:	04 00                	add    al,0x0
    1aba:	00 07                	add    BYTE PTR [rdi],al
    1abc:	33 01                	xor    eax,DWORD PTR [rcx]
    1abe:	00 00                	add    BYTE PTR [rax],al
    1ac0:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    1ac3:	00 00                	add    BYTE PTR [rax],al
    1ac5:	02 07                	add    al,BYTE PTR [rdi]
    1ac7:	01 00                	add    DWORD PTR [rax],eax
    1ac9:	00 02                	add    BYTE PTR [rdx],al
    1acb:	07                   	(bad)
    1acc:	01 00                	add    DWORD PTR [rax],eax
    1ace:	00 03                	add    BYTE PTR [rbx],al
    1ad0:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    1ad3:	00 09                	add    BYTE PTR [rcx],cl
    1ad5:	d2 03                	rol    BYTE PTR [rbx],cl
    1ad7:	00 00                	add    BYTE PTR [rax],al
    1ad9:	09 29                	or     DWORD PTR [rcx],ebp
    1adb:	04 00                	add    al,0x0
    1add:	00 07                	add    BYTE PTR [rdi],al
    1adf:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
    1ae2:	00 02                	add    BYTE PTR [rdx],al
    1ae4:	3a 04 00             	cmp    al,BYTE PTR [rax+rax*1]
    1ae7:	00 09                	add    BYTE PTR [rcx],cl
    1ae9:	46 04 00             	rex.RX add al,0x0
    1aec:	00 07                	add    BYTE PTR [rdi],al
    1aee:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1af1:	00 02                	add    BYTE PTR [rdx],al
    1af3:	4f 04 00             	rex.WRXB add al,0x0
    1af6:	00 0a                	add    BYTE PTR [rdx],cl
    1af8:	60                   	(bad)
    1af9:	04 00                	add    al,0x0
    1afb:	00 07                	add    BYTE PTR [rdi],al
    1afd:	c5 01 00             	(bad)
    1b00:	00 0b                	add    BYTE PTR [rbx],cl
    1b02:	62 01 00 00 0b       	(bad)
    1b07:	d0 01                	rol    BYTE PTR [rcx],1
    1b09:	00 00                	add    BYTE PTR [rax],al
    1b0b:	0b 6d 01             	or     ebp,DWORD PTR [rbp+0x1]
    1b0e:	00 00                	add    BYTE PTR [rax],al
    1b10:	0b d7                	or     edx,edi
    1b12:	01 00                	add    DWORD PTR [rax],eax
    1b14:	00 02                	add    BYTE PTR [rdx],al
    1b16:	67 04 00             	addr32 add al,0x0
    1b19:	00 0b                	add    BYTE PTR [rbx],cl
    1b1b:	a0 01 00 00 07 74 04 	movabs al,ds:0x47407000001
    1b22:	00 00 
    1b24:	0b e5                	or     esp,ebp
    1b26:	01 00                	add    DWORD PTR [rax],eax
    1b28:	00 07                	add    BYTE PTR [rdi],al
    1b2a:	7c 04                	jl     1b30 <_Z19_mm_crc32HashString8string_t+0x10>
    1b2c:	00 00                	add    BYTE PTR [rax],al
    1b2e:	04 8e                	add    al,0x8e
    1b30:	04 00                	add    al,0x0
    1b32:	00 03                	add    BYTE PTR [rbx],al
    1b34:	05 46 00 09 02       	add    eax,0x2090046
    1b39:	00 26                	add    BYTE PTR [rsi],ah
    1b3b:	00 00                	add    BYTE PTR [rax],al
    1b3d:	00 00                	add    BYTE PTR [rax],al
    1b3f:	00 00                	add    BYTE PTR [rax],al
    1b41:	03 c2                	add    eax,edx
    1b43:	00 01                	add    BYTE PTR [rcx],al
    1b45:	06                   	(bad)
    1b46:	01 02                	add    DWORD PTR [rdx],eax
    1b48:	24 12                	and    al,0x12
    1b4a:	05 05 06 e5 05       	add    eax,0x5e50605
    1b4f:	22 06                	and    al,BYTE PTR [rsi]
    1b51:	92                   	xchg   edx,eax
    1b52:	9e                   	sahf
    1b53:	05 05 06 3c 05       	add    eax,0x53c0605
    1b58:	22 06                	and    al,BYTE PTR [rsi]
    1b5a:	01 82 05 17 00 02    	add    DWORD PTR [rdx+0x2001705],eax
    1b60:	04 01                	add    al,0x1
    1b62:	06                   	(bad)
    1b63:	5a                   	pop    rdx
    1b64:	00 02                	add    BYTE PTR [rdx],al
    1b66:	04 01                	add    al,0x1
    1b68:	06                   	(bad)
    1b69:	82                   	(bad)
    1b6a:	05 09 06 9f 05       	add    eax,0x59f0609
    1b6f:	1a 06                	sbb    al,BYTE PTR [rsi]
    1b71:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021b8e <_end+0x401bb76>
    1b77:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1b7d:	05 00 02 04 02       	add    eax,0x2040200
    1b82:	06                   	(bad)
    1b83:	57                   	push   rdi
    1b84:	05 17 00 02 04       	add    eax,0x4020017
    1b89:	01 01                	add    DWORD PTR [rcx],eax
    1b8b:	00 02                	add    BYTE PTR [rdx],al
    1b8d:	04 01                	add    al,0x1
    1b8f:	06                   	(bad)
    1b90:	58                   	pop    rax
    1b91:	05 05 06 16 14       	add    eax,0x14160605
    1b96:	04 02                	add    al,0x2
    1b98:	05 01 11 05 03       	add    eax,0x3051101
    1b9d:	14 05                	adc    al,0x5
    1b9f:	18 06                	sbb    BYTE PTR [rsi],al
    1ba1:	01 08                	add    DWORD PTR [rax],ecx
    1ba3:	82                   	(bad)
    1ba4:	04 01                	add    al,0x1
    1ba6:	05 1c 00 02 04       	add    eax,0x402001c
    1bab:	01 06                	add    DWORD PTR [rsi],eax
    1bad:	13 05 0b 06 70 05    	adc    eax,DWORD PTR [rip+0x570060b]        # 57021be <_end+0x56fc1a6>
    1bb3:	1c 00                	sbb    al,0x0
    1bb5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1bb8:	4e 05 2d 4b 66 05    	rex.WRX add rax,0x5664b2d
    1bbe:	0b 0d 08 20 04 02    	or     ecx,DWORD PTR [rip+0x2042008]        # 2043bcc <_end+0x203dbb4>
    1bc4:	05 18 4d 08 58       	add    eax,0x58084d18
    1bc9:	04 01                	add    al,0x1
    1bcb:	05 09 06 14 04       	add    eax,0x4140609
    1bd0:	02 05 01 0e 05 03    	add    al,BYTE PTR [rip+0x3050e01]        # 30529d7 <_end+0x304c9bf>
    1bd6:	14 04                	adc    al,0x4
    1bd8:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021bfa <_end+0x401bbe2>
    1bde:	01 06                	add    DWORD PTR [rsi],eax
    1be0:	13 04 02             	adc    eax,DWORD PTR [rdx+rax*1]
    1be3:	05 18 49 ba 04       	add    eax,0x4ba4918
    1be8:	01 05 09 06 15 05    	add    DWORD PTR [rip+0x5150609],eax        # 51521f7 <_end+0x514c1df>
    1bee:	26 06                	es (bad)
    1bf0:	01 05 1b 4a 05 26    	add    DWORD PTR [rip+0x26054a1b],eax        # 26056611 <_end+0x260505f9>
    1bf6:	00 02                	add    BYTE PTR [rdx],al
    1bf8:	04 01                	add    al,0x1
    1bfa:	08 2c 05 1b 3e 05 05 	or     BYTE PTR [rax*1+0x5053e1b],ch
    1c01:	00 02                	add    BYTE PTR [rdx],al
    1c03:	04 02                	add    al,0x2
    1c05:	06                   	(bad)
    1c06:	48 05 1c 00 02 04    	add    rax,0x402001c
    1c0c:	01 01                	add    DWORD PTR [rcx],eax
    1c0e:	05 17 06 4f 05       	add    eax,0x54f0617
    1c13:	05 06 58 05 17       	add    eax,0x17055806
    1c18:	06                   	(bad)
    1c19:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c2224 <_end+0x44bc20c>
    1c1f:	02 05 01 0f 05 03    	add    al,BYTE PTR [rip+0x3050f01]        # 3052b26 <_end+0x304cb0e>
    1c25:	14 05                	adc    al,0x5
    1c27:	17                   	(bad)
    1c28:	06                   	(bad)
    1c29:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1c2c:	05 0b 08 13 04       	add    eax,0x413080b
    1c31:	02 05 17 8f 58 04    	add    al,BYTE PTR [rip+0x4588f17]        # 458ab4e <_end+0x4584b36>
    1c37:	01 05 05 06 14 05    	add    DWORD PTR [rip+0x5140605],eax        # 5142242 <_end+0x513c22a>
    1c3d:	07                   	(bad)
    1c3e:	03 dc                	add    ebx,esp
    1c40:	00 01                	add    BYTE PTR [rcx],al
    1c42:	05 05 13 05 1c       	add    eax,0x1c051305
    1c47:	00 02                	add    BYTE PTR [rdx],al
    1c49:	04 01                	add    al,0x1
    1c4b:	15 05 27 00 02       	adc    eax,0x2002705
    1c50:	04 01                	add    al,0x1
    1c52:	06                   	(bad)
    1c53:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021c75 <_end+0x401bc5d>
    1c59:	01 3c 05 23 ad 05 0b 	add    DWORD PTR [rax*1+0xb05ad23],edi
    1c60:	08 9c 05 12 08 22 05 	or     BYTE PTR [rbp+rax*1+0x5220812],bl
    1c67:	26 d7                	xlat   BYTE PTR ds:[rbx]
    1c69:	05 09 06 08 9d       	add    eax,0x9d080609
    1c6e:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5112286 <_end+0x510c26e>
    1c74:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    1c7b:	02 23                	add    ah,BYTE PTR [rbx]
    1c7d:	12 c8                	adc    cl,al
    1c7f:	05 1c 02 2c 12       	add    eax,0x122c021c
    1c84:	c8 05 05 00          	enter  0x505,0x0
    1c88:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1c8b:	06                   	(bad)
    1c8c:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021cae <_end+0x401bc96>
    1c92:	01 01                	add    DWORD PTR [rcx],eax
    1c94:	00 02                	add    BYTE PTR [rdx],al
    1c96:	04 01                	add    al,0x1
    1c98:	06                   	(bad)
    1c99:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    1c9f:	13 05 26 06 01 f2    	adc    eax,DWORD PTR [rip+0xfffffffff2010626]        # fffffffff20122cb <_end+0xfffffffff200c2b3>
    1ca5:	05 12 81 05 26       	add    eax,0x26058112
    1caa:	d7                   	xlat   BYTE PTR ds:[rbx]
    1cab:	05 12 57 05 26       	add    eax,0x26055712
    1cb0:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    1cb3:	31 02                	xor    DWORD PTR [rdx],eax
    1cb5:	27                   	(bad)
    1cb6:	12 05 1c 08 4a c8    	adc    al,BYTE PTR [rip+0xffffffffc84a081c]        # ffffffffc84a24d8 <_end+0xffffffffc849c4c0>
    1cbc:	05 05 00 02 04       	add    eax,0x4020005
    1cc1:	03 06                	add    eax,DWORD PTR [rsi]
    1cc3:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021ce5 <_end+0x401bccd>
    1cc9:	01 01                	add    DWORD PTR [rcx],eax
    1ccb:	05 09 2f 13 05       	add    eax,0x5132f09
    1cd0:	29 06                	sub    DWORD PTR [rsi],eax
    1cd2:	11 05 26 2f 05 12    	adc    DWORD PTR [rip+0x12052f26],eax        # 12054bfe <_end+0x1204ebe6>
    1cd8:	49 05 26 4b 05 05    	rex.WB add rax,0x5054b26
    1cde:	00 02                	add    BYTE PTR [rdx],al
    1ce0:	04 03                	add    al,0x3
    1ce2:	8e 05 26 3e 05 31    	mov    es,WORD PTR [rip+0x31053e26]        # 31055b0e <_end+0x3104faf6>
    1ce8:	4a 05 1c 4a 4a 05    	rex.WX add rax,0x54a4a1c
    1cee:	05 00 02 04 03       	add    eax,0x3040200
    1cf3:	06                   	(bad)
    1cf4:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d16 <_end+0x401bcfe>
    1cfa:	01 01                	add    DWORD PTR [rcx],eax
    1cfc:	05 09 4b 13 05       	add    eax,0x5134b09
    1d01:	12 06                	adc    al,BYTE PTR [rsi]
    1d03:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    1d06:	05 00 02 04 03       	add    eax,0x3040200
    1d0b:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31055b37 <_end+0x3104fb1f>
    1d11:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1d15:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1d1b:	03 06                	add    eax,DWORD PTR [rsi]
    1d1d:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d3f <_end+0x401bd27>
    1d23:	01 01                	add    DWORD PTR [rcx],eax
    1d25:	05 09 4b 13 05       	add    eax,0x5134b09
    1d2a:	12 06                	adc    al,BYTE PTR [rsi]
    1d2c:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31056858 <_end+0x31050840>
    1d32:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1d36:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1d3c:	03 06                	add    eax,DWORD PTR [rsi]
    1d3e:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d60 <_end+0x401bd48>
    1d44:	01 01                	add    DWORD PTR [rcx],eax
    1d46:	00 02                	add    BYTE PTR [rdx],al
    1d48:	04 01                	add    al,0x1
    1d4a:	06                   	(bad)
    1d4b:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5162356 <_end+0x515c33e>
    1d51:	1e                   	(bad)
    1d52:	06                   	(bad)
    1d53:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1d56:	05 03 06 03 fa       	add    eax,0xfa030603
    1d5b:	01 c8                	add    eax,ecx
    1d5d:	05 05 13 05 1b       	add    eax,0x1b051305
    1d62:	06                   	(bad)
    1d63:	9e                   	sahf
    1d64:	4a 04 01             	rex.WX add al,0x1
    1d67:	05 05 06 03 87       	add    eax,0x87030605
    1d6c:	7e 01                	jle    1d6f <_Z13sumHashString8string_t+0x10f>
    1d6e:	06                   	(bad)
    1d6f:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1d72:	05 01 06 03 96       	add    eax,0x96030601
    1d77:	7f 01                	jg     1d7a <_Z13sumHashString8string_t+0x11a>
    1d79:	05 03 14 05 17       	add    eax,0x17051403
    1d7e:	06                   	(bad)
    1d7f:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1d82:	05 0b 00 02 04       	add    eax,0x402000b
    1d87:	01 08                	add    DWORD PTR [rax],ecx
    1d89:	14 04                	adc    al,0x4
    1d8b:	02 05 17 48 58 04    	add    al,BYTE PTR [rip+0x4584817]        # 45865a8 <_end+0x4580590>
    1d91:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 516239c <_end+0x515c384>
    1d97:	10 06                	adc    BYTE PTR [rsi],al
    1d99:	01 05 01 83 08 3c    	add    DWORD PTR [rip+0x3c088301],eax        # 3c08a0a0 <_end+0x3c084088>
    1d9f:	66 2e 05 05 06       	cs add ax,0x605
    1da4:	03 e1                	add    esp,ecx
    1da6:	00 08                	add    BYTE PTR [rax],cl
    1da8:	12 05 1e 06 01 04    	adc    al,BYTE PTR [rip+0x401061e]        # 40123cc <_end+0x400c3b4>
    1dae:	03 05 03 06 03 fa    	add    eax,DWORD PTR [rip+0xfffffffffa030603]        # fffffffffa0323b7 <_end+0xfffffffffa02c39f>
    1db4:	01 82 05 05 13 06    	add    DWORD PTR [rdx+0x6130505],eax
    1dba:	82                   	(bad)
    1dbb:	3c 2e                	cmp    al,0x2e
    1dbd:	04 01                	add    al,0x1
    1dbf:	05 0b 03 80 7e       	add    eax,0x7e80030b
    1dc4:	01 05 13 4b 74 04    	add    DWORD PTR [rip+0x4744b13],eax        # 47468dd <_end+0x47408c5>
    1dca:	03 05 1b 03 ff 01    	add    eax,DWORD PTR [rip+0x1ff031b]        # 1ff20eb <_end+0x1fec0d3>
    1dd0:	01 90 66 04 01 05    	add    DWORD PTR [rax+0x5010466],edx
    1dd6:	05 00 02 04 01       	add    eax,0x1040200
    1ddb:	03 8d 7d 01 00 02    	add    ecx,DWORD PTR [rbp+0x200017d]
    1de1:	04 01                	add    al,0x1
    1de3:	ba 00 02 04 01       	mov    edx,0x1040200
    1de8:	74 00                	je     1dea <_Z17adler32HashString8string_t+0x1a>
    1dea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1ded:	74 05                	je     1df4 <_Z17adler32HashString8string_t+0x24>
    1def:	01 03                	add    DWORD PTR [rbx],eax
    1df1:	17                   	(bad)
    1df2:	58                   	pop    rax
    1df3:	05 5c 06 08 22       	add    eax,0x2208065c
    1df8:	06                   	(bad)
    1df9:	01 02                	add    DWORD PTR [rdx],eax
    1dfb:	24 12                	and    al,0x12
    1dfd:	05 05 06 08 91       	add    eax,0x91080605
    1e02:	05 0a 06 bb 05       	add    eax,0x5bb060a
    1e07:	22 5a 74             	and    bl,BYTE PTR [rdx+0x74]
    1e0a:	3c 05                	cmp    al,0x5
    1e0c:	05 06 3a 05 0a       	add    eax,0xa053a06
    1e11:	06                   	(bad)
    1e12:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a241d <_end+0x559c405>
    1e18:	22 06                	and    al,BYTE PTR [rsi]
    1e1a:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021e37 <_end+0x401be1f>
    1e20:	01 06                	add    DWORD PTR [rsi],eax
    1e22:	f3 00 02             	repz add BYTE PTR [rdx],al
    1e25:	04 01                	add    al,0x1
    1e27:	06                   	(bad)
    1e28:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e2b:	04 01                	add    al,0x1
    1e2d:	3c 05                	cmp    al,0x5
    1e2f:	09 06                	or     DWORD PTR [rsi],eax
    1e31:	75 05                	jne    1e38 <_Z17adler32HashString8string_t+0x68>
    1e33:	1a 06                	sbb    al,BYTE PTR [rsi]
    1e35:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021e52 <_end+0x401be3a>
    1e3b:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1e41:	05 00 02 04 02       	add    eax,0x2040200
    1e46:	06                   	(bad)
    1e47:	57                   	push   rdi
    1e48:	05 17 00 02 04       	add    eax,0x4020017
    1e4d:	01 01                	add    DWORD PTR [rcx],eax
    1e4f:	00 02                	add    BYTE PTR [rdx],al
    1e51:	04 01                	add    al,0x1
    1e53:	06                   	(bad)
    1e54:	58                   	pop    rax
    1e55:	05 05 06 16 05       	add    eax,0x5160605
    1e5a:	2e 06                	cs (bad)
    1e5c:	01 05 30 e5 05 2e    	add    DWORD PTR [rip+0x2e05e530],eax        # 2e060392 <_end+0x2e05a37a>
    1e62:	57                   	push   rdi
    1e63:	05 05 06 75 05       	add    eax,0x5750605
    1e68:	30 06                	xor    BYTE PTR [rsi],al
    1e6a:	01 3c 3c             	add    DWORD PTR [rsp+rdi*1],edi
    1e6d:	05 05 06 08 67       	add    eax,0x67080605
    1e72:	14 05                	adc    al,0x5
    1e74:	17                   	(bad)
    1e75:	00 02                	add    BYTE PTR [rdx],al
    1e77:	04 01                	add    al,0x1
    1e79:	01 05 09 03 17 74    	add    DWORD PTR [rip+0x74170309],eax        # 74172188 <_end+0x7416c170>
    1e7f:	05 1e 06 01 05       	add    eax,0x501061e
    1e84:	21 00                	and    DWORD PTR [rax],eax
    1e86:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e89:	58                   	pop    rax
    1e8a:	05 17 00 02 04       	add    eax,0x4020017
    1e8f:	01 03                	add    DWORD PTR [rbx],eax
    1e91:	69 2e 05 21 00 02    	imul   ebp,DWORD PTR [rsi],0x2002105
    1e97:	04 01                	add    al,0x1
    1e99:	03 17                	add    edx,DWORD PTR [rdi]
    1e9b:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    1ea1:	01 3c 05 05 00 02 04 	add    DWORD PTR [rax*1+0x4020005],edi
    1ea8:	03 06                	add    eax,DWORD PTR [rsi]
    1eaa:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
    1ead:	05 17 00 02 04       	add    eax,0x4020017
    1eb2:	01 01                	add    DWORD PTR [rcx],eax
    1eb4:	00 02                	add    BYTE PTR [rdx],al
    1eb6:	04 01                	add    al,0x1
    1eb8:	06                   	(bad)
    1eb9:	58                   	pop    rax
    1eba:	00 02                	add    BYTE PTR [rdx],al
    1ebc:	04 01                	add    al,0x1
    1ebe:	06                   	(bad)
    1ebf:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    1ec2:	04 04                	add    al,0x4
    1ec4:	05 26 00 02 04       	add    eax,0x4020026
    1ec9:	01 06                	add    DWORD PTR [rsi],eax
    1ecb:	03 ce                	add    ecx,esi
    1ecd:	00 08                	add    BYTE PTR [rax],cl
    1ecf:	66 00 02             	data16 add BYTE PTR [rdx],al
    1ed2:	04 01                	add    al,0x1
    1ed4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1ed5:	04 01                	add    al,0x1
    1ed7:	05 09 06 03 b3       	add    eax,0xb3030609
    1edc:	7f 01                	jg     1edf <_Z8listCtorv+0xf>
    1ede:	05 34 06 01 05       	add    eax,0x5010634
    1ee3:	09 06                	or     DWORD PTR [rsi],eax
    1ee5:	ca 05 1b             	retf   0x1b05
    1ee8:	00 02                	add    BYTE PTR [rdx],al
    1eea:	04 01                	add    al,0x1
    1eec:	01 05 0d 2f 05 4e    	add    DWORD PTR [rip+0x4e052f0d],eax        # 4e054dff <_end+0x4e04ede7>
    1ef2:	06                   	(bad)
    1ef3:	01 05 21 3c 05 1b    	add    DWORD PTR [rip+0x1b053c21],eax        # 1b055b1a <_end+0x1b04fb02>
    1ef9:	00 02                	add    BYTE PTR [rdx],al
    1efb:	04 01                	add    al,0x1
    1efd:	3b 05 21 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b21]        # 9056a24 <_end+0x9050a0c>
    1f03:	00 02                	add    BYTE PTR [rdx],al
    1f05:	04 02                	add    al,0x2
    1f07:	06                   	(bad)
    1f08:	08 2d 05 1b 00 02    	or     BYTE PTR [rip+0x2001b05],ch        # 2003a13 <_end+0x1ffd9fb>
    1f0e:	04 01                	add    al,0x1
    1f10:	01 05 09 5c 05 32    	add    DWORD PTR [rip+0x32055c09],eax        # 32057b1f <_end+0x32051b07>
    1f16:	06                   	(bad)
    1f17:	01 05 09 06 59 04    	add    DWORD PTR [rip+0x4590609],eax        # 4592526 <_end+0x458c50e>
    1f1d:	04 05                	add    al,0x5
    1f1f:	07                   	(bad)
    1f20:	03 e7                	add    esp,edi
    1f22:	07                   	(bad)
    1f23:	01 05 02 03 c0 7e    	add    DWORD PTR [rip+0x7ec00302],eax        # 7ec0222b <_end+0x7ebfc213>
    1f29:	01 06                	add    DWORD PTR [rsi],eax
    1f2b:	01 06                	add    DWORD PTR [rsi],eax
    1f2d:	01 06                	add    DWORD PTR [rsi],eax
    1f2f:	01 05 07 06 03 91    	add    DWORD PTR [rip+0xffffffff91030607],eax        # ffffffff9103253c <_end+0xffffffff9102c524>
    1f35:	7e 01                	jle    1f38 <_Z12pushListElemP4List8string_t+0x8>
    1f37:	05 17 03 f7 7e       	add    eax,0x7ef70317
    1f3c:	01 06                	add    DWORD PTR [rsi],eax
    1f3e:	01 05 07 06 03 d4    	add    DWORD PTR [rip+0xffffffffd4030607],eax        # ffffffffd403254b <_end+0xffffffffd402c533>
    1f44:	7d 01                	jge    1f47 <_Z12pushListElemP4List8string_t+0x17>
    1f46:	05 04 03 bf 7f       	add    eax,0x7fbf0304
    1f4b:	01 05 17 03 ed 02    	add    DWORD PTR [rip+0x2ed0317],eax        # 2ed2268 <_end+0x2ecc250>
    1f51:	01 06                	add    DWORD PTR [rsi],eax
    1f53:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1f56:	05 09 06 03 d3       	add    eax,0xd3030609
    1f5b:	7c 01                	jl     1f5e <_Z12pushListElemP4List8string_t+0x2e>
    1f5d:	04 04                	add    al,0x4
    1f5f:	05 22 00 02 04       	add    eax,0x4020022
    1f64:	02 06                	add    al,BYTE PTR [rsi]
    1f66:	03 bc 04 01 00 02 04 	add    edi,DWORD PTR [rsp+rax*1+0x4020001]
    1f6d:	02 4a 04             	add    cl,BYTE PTR [rdx+0x4]
    1f70:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021f94 <_end+0x401bf7c>
    1f76:	01 03                	add    DWORD PTR [rbx],eax
    1f78:	c4                   	(bad)
    1f79:	7b 01                	jnp    1f7c <_Z12pushListElemP4List8string_t+0x4c>
    1f7b:	05 17 00 02 04       	add    eax,0x4020017
    1f80:	01 03                	add    DWORD PTR [rbx],eax
    1f82:	76 4a                	jbe    1fce <_Z12pushListElemP4List8string_t+0x9e>
    1f84:	04 04                	add    al,0x4
    1f86:	05 22 00 02 04       	add    eax,0x4020022
    1f8b:	02 03                	add    al,BYTE PTR [rbx]
    1f8d:	c6 04 4a 00          	mov    BYTE PTR [rdx+rcx*2],0x0
    1f91:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1f94:	3c 00                	cmp    al,0x0
    1f96:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    1f99:	3c 05                	cmp    al,0x5
    1f9b:	26 00 02             	es add BYTE PTR [rdx],al
    1f9e:	04 01                	add    al,0x1
    1fa0:	03 88 7c 01 04 01    	add    ecx,DWORD PTR [rax+0x104017c]
    1fa6:	05 17 00 02 04       	add    eax,0x4020017
    1fab:	01 03                	add    DWORD PTR [rbx],eax
    1fad:	b2 7f                	mov    dl,0x7f
    1faf:	08 12                	or     BYTE PTR [rdx],dl
    1fb1:	04 04                	add    al,0x4
    1fb3:	05 26 00 02 04       	add    eax,0x4020026
    1fb8:	01 03                	add    DWORD PTR [rbx],eax
    1fba:	ce                   	(bad)
    1fbb:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    1fbe:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4021fe2 <_end+0x401bfca>
    1fc4:	01 03                	add    DWORD PTR [rbx],eax
    1fc6:	bc 7f 74 00 02       	mov    esp,0x200747f
    1fcb:	04 01                	add    al,0x1
    1fcd:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1fce:	05 05 00 02 04       	add    eax,0x4020005
    1fd3:	02 06                	add    al,BYTE PTR [rsi]
    1fd5:	03 76 01             	add    esi,DWORD PTR [rsi+0x1]
    1fd8:	05 17 00 02 04       	add    eax,0x4020017
    1fdd:	01 01                	add    DWORD PTR [rcx],eax
    1fdf:	05 10 06 03 0d       	add    eax,0xd030610
    1fe4:	ba 04 02 05 18       	mov    edx,0x18050204
    1fe9:	03 bc 7f 9e 04 01 05 	add    edi,DWORD PTR [rdi+rdi*2+0x501049e]
    1ff0:	05 06 03 c4 00       	add    eax,0xc40306
    1ff5:	74 05                	je     1ffc <_Z12pushListElemP4List8string_t+0xcc>
    1ff7:	10 06                	adc    BYTE PTR [rsi],al
    1ff9:	01 05 05 06 5a 14    	add    DWORD PTR [rip+0x145a0605],eax        # 145a2604 <_end+0x1459c5ec>
    1fff:	04 02                	add    al,0x2
    2001:	05 01 03 b6 7f       	add    eax,0x7fb60301
    2006:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 1805340f <_end+0x1804d3f7>
    200c:	06                   	(bad)
    200d:	01 08                	add    DWORD PTR [rax],ecx
    200f:	e4 04                	in     al,0x4
    2011:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022033 <_end+0x401c01b>
    2017:	01 06                	add    DWORD PTR [rsi],eax
    2019:	03 c9                	add    ecx,ecx
    201b:	00 01                	add    BYTE PTR [rcx],al
    201d:	00 02                	add    BYTE PTR [rdx],al
    201f:	04 01                	add    al,0x1
    2021:	06                   	(bad)
    2022:	82                   	(bad)
    2023:	05 0c 0f 05 10       	add    eax,0x10050f0c
    2028:	be 04 02 05 18       	mov    esi,0x18050204
    202d:	03 b6 7f 66 08 74    	add    esi,DWORD PTR [rsi+0x7408667f]
    2033:	04 01                	add    al,0x1
    2035:	05 09 06 03 ca       	add    eax,0xca030609
    203a:	00 01                	add    BYTE PTR [rcx],al
    203c:	04 02                	add    al,0x2
    203e:	05 01 03 b4 7f       	add    eax,0x7fb40301
    2043:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 104344c <_end+0x103d434>
    2049:	05 1c 00 02 04       	add    eax,0x402001c
    204e:	01 06                	add    DWORD PTR [rsi],eax
    2050:	03 c9                	add    ecx,ecx
    2052:	00 01                	add    BYTE PTR [rcx],al
    2054:	04 02                	add    al,0x2
    2056:	05 18 03 b7 7f       	add    eax,0x7fb70318
    205b:	4a 9e                	rex.WX sahf
    205d:	04 01                	add    al,0x1
    205f:	05 09 06 03 cb       	add    eax,0xcb030609
    2064:	00 01                	add    BYTE PTR [rcx],al
    2066:	05 16 06 01 05       	add    eax,0x5010616
    206b:	05 00 02 04 02       	add    eax,0x2040200
    2070:	06                   	(bad)
    2071:	d4                   	(bad)
    2072:	05 1c 00 02 04       	add    eax,0x402001c
    2077:	01 01                	add    DWORD PTR [rcx],eax
    2079:	05 12 06 5d 05       	add    eax,0x55d0612
    207e:	05 06 ac 05 12       	add    eax,0x1205ac06
    2083:	06                   	(bad)
    2084:	01 05 05 06 c9 05    	add    DWORD PTR [rip+0x5c90605],eax        # 5c9268f <_end+0x5c8c677>
    208a:	08 03                	or     BYTE PTR [rbx],al
    208c:	0a 01                	or     al,BYTE PTR [rcx]
    208e:	05 05 13 06 e4       	add    eax,0xe4061305
    2093:	05 0c 5a 74 05       	add    eax,0x5745a0c
    2098:	09 06                	or     DWORD PTR [rsi],eax
    209a:	76 05                	jbe    20a1 <_Z12pushListElemP4List8string_t+0x171>
    209c:	2e 06                	cs (bad)
    209e:	01 05 39 c8 82 05    	add    DWORD PTR [rip+0x582c839],eax        # 582e8dd <_end+0x58288c5>
    20a4:	1c d6                	sbb    al,0xd6
    20a6:	05 05 00 02 04       	add    eax,0x4020005
    20ab:	03 06                	add    eax,DWORD PTR [rsi]
    20ad:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    20b2:	04 01                	add    al,0x1
    20b4:	01 00                	add    DWORD PTR [rax],eax
    20b6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    20b9:	06                   	(bad)
    20ba:	08 58 05             	or     BYTE PTR [rax+0x5],bl
    20bd:	09 06                	or     DWORD PTR [rsi],eax
    20bf:	9f                   	lahf
    20c0:	05 2c 06 01 05       	add    eax,0x501062c
    20c5:	2e 66 05 2c 4a       	cs add ax,0x4a2c
    20ca:	05 2e 58 05 39       	add    eax,0x3905582e
    20cf:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    20d5:	00 02                	add    BYTE PTR [rdx],al
    20d7:	04 03                	add    al,0x3
    20d9:	06                   	(bad)
    20da:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022100 <_end+0x401c0e8>
    20e1:	01 05 09 
    20e4:	9f                   	lahf
    20e5:	05 2e 06 01 05       	add    eax,0x501062e
    20ea:	39 c8                	cmp    eax,ecx
    20ec:	05 1c 4a 05 05       	add    eax,0x5054a1c
    20f1:	00 02                	add    BYTE PTR [rdx],al
    20f3:	04 03                	add    al,0x3
    20f5:	06                   	(bad)
    20f6:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    20fc:	01 01                	add    DWORD PTR [rcx],eax
    20fe:	00 02                	add    BYTE PTR [rdx],al
    2100:	04 01                	add    al,0x1
    2102:	06                   	(bad)
    2103:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 515270e <_end+0x514c6f6>
    2109:	1e                   	(bad)
    210a:	06                   	(bad)
    210b:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e056b30 <_end+0x1e050b18>
    2111:	4a 04 03             	rex.WX add al,0x3
    2114:	05 03 06 03 87       	add    eax,0x87030603
    2119:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    211f:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2121:	d6                   	(bad)
    2122:	4a 04 01             	rex.WX add al,0x1
    2125:	05 18 00 02 04       	add    eax,0x4020018
    212a:	01 03                	add    DWORD PTR [rbx],eax
    212c:	f8                   	clc
    212d:	7d 01                	jge    2130 <_Z11popListElemP4List8string_t+0x80>
    212f:	04 02                	add    al,0x2
    2131:	05 17 03 a7 7f       	add    eax,0x7fa70317
    2136:	4a 04 01             	rex.WX add al,0x1
    2139:	05 18 00 02 04       	add    eax,0x4020018
    213e:	01 03                	add    DWORD PTR [rbx],eax
    2140:	d9 00                	fld    DWORD PTR [rax]
    2142:	74 05                	je     2149 <_Z11popListElemP4List8string_t+0x99>
    2144:	05 06 5a 06 01       	add    eax,0x1065a06
    2149:	06                   	(bad)
    214a:	03 6f 01             	add    ebp,DWORD PTR [rdi+0x1]
    214d:	04 02                	add    al,0x2
    214f:	05 01 03 b4 7f       	add    eax,0x7fb40301
    2154:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705355d <_end+0x1704d545>
    215a:	06                   	(bad)
    215b:	01 08                	add    DWORD PTR [rax],ecx
    215d:	74 04                	je     2163 <_Z11popListElemP4List8string_t+0xb3>
    215f:	01 05 05 06 03 cb    	add    DWORD PTR [rip+0xffffffffcb030605],eax        # ffffffffcb03276a <_end+0xffffffffcb02c752>
    2165:	00 01                	add    BYTE PTR [rcx],al
    2167:	04 02                	add    al,0x2
    2169:	05 01 03 b3 7f       	add    eax,0x7fb30301
    216e:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17053577 <_end+0x1704d55f>
    2174:	06                   	(bad)
    2175:	01 08                	add    DWORD PTR [rax],ecx
    2177:	9e                   	sahf
    2178:	04 01                	add    al,0x1
    217a:	05 05 06 03 cc       	add    eax,0xcc030605
    217f:	00 01                	add    BYTE PTR [rcx],al
    2181:	04 02                	add    al,0x2
    2183:	05 01 03 b2 7f       	add    eax,0x7fb20301
    2188:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1043591 <_end+0x103d579>
    218e:	05 39 06 03 cc       	add    eax,0xcc030639
    2193:	00 01                	add    BYTE PTR [rcx],al
    2195:	04 02                	add    al,0x2
    2197:	05 17 03 b4 7f       	add    eax,0x7fb40317
    219c:	9e                   	sahf
    219d:	04 01                	add    al,0x1
    219f:	05 39 03 cc 00       	add    eax,0xcc0339
    21a4:	08 12                	or     BYTE PTR [rdx],dl
    21a6:	05 0b 4a 04 02       	add    eax,0x2044a0b
    21ab:	05 17 03 b4 7f       	add    eax,0x7fb40317
    21b0:	82                   	(bad)
    21b1:	58                   	pop    rax
    21b2:	04 01                	add    al,0x1
    21b4:	05 05 06 03 ce       	add    eax,0xce030605
    21b9:	00 01                	add    BYTE PTR [rcx],al
    21bb:	05 09 06 01 05       	add    eax,0x5010609
    21c0:	05 06 91 05 09       	add    eax,0x9059106
    21c5:	06                   	(bad)
    21c6:	01 05 01 08 67 58    	add    DWORD PTR [rip+0x58670801],eax        # 586729cd <_end+0x5866c9b5>
    21cc:	4a 58                	rex.WX pop rax
    21ce:	05 09 65 58 05       	add    eax,0x5586509
    21d3:	05 06 03 6e 82       	add    eax,0x826e0306
    21d8:	05 10 06 01 05       	add    eax,0x5010610
    21dd:	05 06 84 14 04       	add    eax,0x4148406
    21e2:	02 05 01 03 b6 7f    	add    al,BYTE PTR [rip+0x7fb60301]        # 7fb624e9 <_end+0x7fb5c4d1>
    21e8:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 180535f1 <_end+0x1804d5d9>
    21ee:	06                   	(bad)
    21ef:	01 08                	add    DWORD PTR [rax],ecx
    21f1:	ba 04 01 05 1c       	mov    edx,0x1c050104
    21f6:	00 02                	add    BYTE PTR [rdx],al
    21f8:	04 01                	add    al,0x1
    21fa:	06                   	(bad)
    21fb:	03 c9                	add    ecx,ecx
    21fd:	00 01                	add    BYTE PTR [rcx],al
    21ff:	05 05 17 05 12       	add    eax,0x12051705
    2204:	06                   	(bad)
    2205:	01 05 05 03 0c 4a    	add    DWORD PTR [rip+0x4a0c0305],eax        # 4a0c2510 <_end+0x4a0bc4f8>
    220b:	05 12 03 74 58       	add    eax,0x58740312
    2210:	05 05 06 4b 05       	add    eax,0x54b0605
    2215:	08 03                	or     BYTE PTR [rbx],al
    2217:	0a 01                	or     al,BYTE PTR [rcx]
    2219:	05 05 13 34 05       	add    eax,0x5341305
    221e:	1e                   	(bad)
    221f:	06                   	(bad)
    2220:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2223:	05 03 06 03 87       	add    eax,0x87030603
    2228:	02 82 05 05 13 06    	add    al,BYTE PTR [rdx+0x6130505]
    222e:	58                   	pop    rax
    222f:	04 01                	add    al,0x1
    2231:	05 0c 03 f4 7d       	add    eax,0x7df4030c
    2236:	01 05 13 4b 74 05    	add    DWORD PTR [rip+0x5744b13],eax        # 5746d4f <_end+0x5740d37>
    223c:	08 06                	or     BYTE PTR [rsi],al
    223e:	0e                   	(bad)
    223f:	05 05 00 02 04       	add    eax,0x4020005
    2244:	01 06                	add    DWORD PTR [rsi],eax
    2246:	13 00                	adc    eax,DWORD PTR [rax]
    2248:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    224b:	08 d6                	or     dh,dl
    224d:	00 02                	add    BYTE PTR [rdx],al
    224f:	04 01                	add    al,0x1
    2251:	03 b5 7f 01 00 02    	add    esi,DWORD PTR [rbp+0x200017f]
    2257:	04 01                	add    al,0x1
    2259:	ba 00 02 04 01       	mov    edx,0x1040200
    225e:	74 00                	je     2260 <_Z10debugPrintP4List+0x10>
    2260:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2263:	74 05                	je     226a <_Z10debugPrintP4List+0x1a>
    2265:	09 03                	or     DWORD PTR [rbx],eax
    2267:	c7 00 58 58 04 03    	mov    DWORD PTR [rax],0x3045858
    226d:	05 1b 03 92 02       	add    eax,0x292031b
    2272:	58                   	pop    rax
    2273:	58                   	pop    rax
    2274:	04 01                	add    al,0x1
    2276:	05 5b 06 03 fc       	add    eax,0xfc03065b
    227b:	7c 08                	jl     2285 <_Z10debugPrintP4List+0x35>
    227d:	3c 06                	cmp    al,0x6
    227f:	01 05 05 06 03 0b    	add    DWORD PTR [rip+0xb030605],eax        # b03288a <_end+0xb02c872>
    2285:	4a 05 5b 06 03 75    	rex.WX add rax,0x7503065b
    228b:	01 05 1e 03 0b 2e    	add    DWORD PTR [rip+0x2e0b031e],eax        # 2e0b25af <_end+0x2e0ac597>
    2291:	05 5b 03 75 74       	add    eax,0x7475035b
    2296:	82                   	(bad)
    2297:	58                   	pop    rax
    2298:	74 05                	je     229f <_Z10debugPrintP4List+0x4f>
    229a:	1e                   	(bad)
    229b:	03 0b                	add    ecx,DWORD PTR [rbx]
    229d:	20 05 13 59 05 1e    	and    BYTE PTR [rip+0x1e055913],al        # 1e057bb6 <_end+0x1e051b9e>
    22a3:	8f 05 05 06 3d 05    	pop    QWORD PTR [rip+0x53d0605]        # 53d28ae <_end+0x53cc896>
    22a9:	13 06                	adc    eax,DWORD PTR [rsi]
    22ab:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad28b6 <_end+0x5acc89e>
    22b1:	0b 06                	or     eax,DWORD PTR [rsi]
    22b3:	01 05 01 3d 20 20    	add    DWORD PTR [rip+0x20203d01],eax        # 20205fba <_end+0x201fffa2>
    22b9:	2e 2e 05 0b 2d 58 05 	cs cs add eax,0x5582d0b
    22c0:	50                   	push   rax
    22c1:	06                   	(bad)
    22c2:	00 09                	add    BYTE PTR [rcx],cl
    22c4:	02 10                	add    dl,BYTE PTR [rax]
    22c6:	2f                   	(bad)
    22c7:	00 00                	add    BYTE PTR [rax],al
    22c9:	00 00                	add    BYTE PTR [rax],al
    22cb:	00 00                	add    BYTE PTR [rax],al
    22cd:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    22d0:	06                   	(bad)
    22d1:	01 08                	add    DWORD PTR [rax],ecx
    22d3:	20 05 05 06 f3 bb    	and    BYTE PTR [rip+0xffffffffbbf30605],al        # ffffffffbbf328de <_end+0xffffffffbbf2c8c6>
    22d9:	05 1a 06 93 74       	add    eax,0x7493061a
    22de:	05 05 06 3b 05       	add    eax,0x53b0605
    22e3:	1a 06                	sbb    al,BYTE PTR [rsi]
    22e5:	13 05 0c 57 05 05    	adc    eax,DWORD PTR [rip+0x505570c]        # 50579f7 <_end+0x50519df>
    22eb:	06                   	(bad)
    22ec:	91                   	xchg   ecx,eax
    22ed:	05 1a 06 01 05       	add    eax,0x501061a
    22f2:	20 5a 05             	and    BYTE PTR [rdx+0x5],bl
    22f5:	1a 80 05 05 06 76    	sbb    al,BYTE PTR [rax+0x76060505]
    22fb:	05 20 06 01 05       	add    eax,0x5010620
    2300:	39 5a 05             	cmp    DWORD PTR [rdx+0x5],ebx
    2303:	20 3a                	and    BYTE PTR [rdx],bh
    2305:	05 05 06 3e 05       	add    eax,0x53e0605
    230a:	39 06                	cmp    DWORD PTR [rsi],eax
    230c:	01 05 0f 85 05 39    	add    DWORD PTR [rip+0x3905850f],eax        # 3905a821 <_end+0x39054809>
    2312:	9b                   	fwait
    2313:	05 05 06 3f 05       	add    eax,0x53f0605
    2318:	0f 06                	clts
    231a:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022325 <_end+0x401c30d>
    2320:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    2323:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2326:	82                   	(bad)
    2327:	05 3f 00 02 04       	add    eax,0x402003f
    232c:	02 06                	add    al,BYTE PTR [rsi]
    232e:	01 05 05 13 05 0f    	add    DWORD PTR [rip+0xf051305],eax        # f053639 <_end+0xf04d621>
    2334:	06                   	(bad)
    2335:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022340 <_end+0x401c328>
    233b:	01 08                	add    DWORD PTR [rax],ecx
    233d:	20 05 43 00 02 04    	and    BYTE PTR [rip+0x4020043],al        # 4022386 <_end+0x401c36e>
    2343:	02 06                	add    al,BYTE PTR [rsi]
    2345:	82                   	(bad)
    2346:	05 05 13 05 0f       	add    eax,0xf051305
    234b:	06                   	(bad)
    234c:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022357 <_end+0x401c33f>
    2352:	01 e4                	add    esp,esp
    2354:	05 41 00 02 04       	add    eax,0x4020041
    2359:	02 06                	add    al,BYTE PTR [rsi]
    235b:	82                   	(bad)
    235c:	05 05 13 05 0f       	add    eax,0xf051305
    2361:	06                   	(bad)
    2362:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 402236d <_end+0x401c355>
    2368:	01 e4                	add    esp,esp
    236a:	05 3d 00 02 04       	add    eax,0x402003d
    236f:	02 06                	add    al,BYTE PTR [rsi]
    2371:	82                   	(bad)
    2372:	05 05 13 05 0f       	add    eax,0xf051305
    2377:	06                   	(bad)
    2378:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022383 <_end+0x401c36b>
    237e:	01 e4                	add    esp,esp
    2380:	05 41 00 02 04       	add    eax,0x4020041
    2385:	02 06                	add    al,BYTE PTR [rsi]
    2387:	82                   	(bad)
    2388:	05 05 13 05 0f       	add    eax,0xf051305
    238d:	06                   	(bad)
    238e:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022399 <_end+0x401c381>
    2394:	01 e4                	add    esp,esp
    2396:	05 3d 00 02 04       	add    eax,0x402003d
    239b:	02 06                	add    al,BYTE PTR [rsi]
    239d:	82                   	(bad)
    239e:	05 05 13 05 0f       	add    eax,0xf051305
    23a3:	06                   	(bad)
    23a4:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223af <_end+0x401c397>
    23aa:	01 e4                	add    esp,esp
    23ac:	05 49 00 02 04       	add    eax,0x4020049
    23b1:	02 06                	add    al,BYTE PTR [rsi]
    23b3:	82                   	(bad)
    23b4:	05 05 13 05 0f       	add    eax,0xf051305
    23b9:	06                   	(bad)
    23ba:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223c5 <_end+0x401c3ad>
    23c0:	01 e4                	add    esp,esp
    23c2:	00 02                	add    BYTE PTR [rdx],al
    23c4:	04 01                	add    al,0x1
    23c6:	82                   	(bad)
    23c7:	06                   	(bad)
    23c8:	03 0a                	add    ecx,DWORD PTR [rdx]
    23ca:	01 05 09 06 01 05    	add    DWORD PTR [rip+0x5010609],eax        # 50129d9 <_end+0x500c9c1>
    23d0:	05 06 91 05 09       	add    eax,0x9059106
    23d5:	06                   	(bad)
    23d6:	01 05 05 06 91 05    	add    DWORD PTR [rip+0x5910605],eax        # 59129e1 <_end+0x590c9c9>
    23dc:	09 06                	or     DWORD PTR [rsi],eax
    23de:	01 05 01 83 08 e4    	add    DWORD PTR [rip+0xffffffffe4088301],eax        # ffffffffe408a6e5 <_end+0xffffffffe40846cd>
    23e4:	05 34 00 02 04       	add    eax,0x4020034
    23e9:	01 06                	add    DWORD PTR [rsi],eax
    23eb:	03 6c 9e 04          	add    ebp,DWORD PTR [rsi+rbx*4+0x4]
    23ef:	02 05 01 03 37 01    	add    al,BYTE PTR [rip+0x1370301]        # 13726f6 <_end+0x136c6de>
    23f5:	05 03 14 05 17       	add    eax,0x17051403
    23fa:	06                   	(bad)
    23fb:	01 e4                	add    esp,esp
    23fd:	04 01                	add    al,0x1
    23ff:	05 34 00 02 04       	add    eax,0x4020034
    2404:	03 06                	add    eax,DWORD PTR [rsi]
    2406:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    2409:	04 02                	add    al,0x2
    240b:	05 01 03 37 01       	add    eax,0x1370301
    2410:	05 03 14 05 17       	add    eax,0x17051403
    2415:	06                   	(bad)
    2416:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    241c:	00 02                	add    BYTE PTR [rdx],al
    241e:	04 04                	add    al,0x4
    2420:	06                   	(bad)
    2421:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    2424:	04 02                	add    al,0x2
    2426:	05 01 03 37 01       	add    eax,0x1370301
    242b:	05 03 14 05 17       	add    eax,0x17051403
    2430:	06                   	(bad)
    2431:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2437:	00 02                	add    BYTE PTR [rdx],al
    2439:	04 05                	add    al,0x5
    243b:	06                   	(bad)
    243c:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    243f:	00 02                	add    BYTE PTR [rdx],al
    2441:	04 05                	add    al,0x5
    2443:	01 05 06 03 16 01    	add    DWORD PTR [rip+0x1160306],eax        # 116274f <_end+0x115c737>
    2449:	05 05 03 0b 01       	add    eax,0x10b0305
    244e:	05 1e 06 01 05       	add    eax,0x501061e
    2453:	13 08                	adc    ecx,DWORD PTR [rax]
    2455:	2f                   	(bad)
    2456:	05 1e f1 05 05       	add    eax,0x505f11e
    245b:	06                   	(bad)
    245c:	3d 05 13 06 01       	cmp    eax,0x1061305
    2461:	05 05 06 83 05       	add    eax,0x5830605
    2466:	0b 06                	or     eax,DWORD PTR [rsi]
    2468:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    246e:	04 06                	add    al,0x6
    2470:	06                   	(bad)
    2471:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
    2474:	04 02                	add    al,0x2
    2476:	05 01 03 37 01       	add    eax,0x1370301
    247b:	05 03 14 05 17       	add    eax,0x17051403
    2480:	06                   	(bad)
    2481:	01 ba e4 04 01 05    	add    DWORD PTR [rdx+0x50104e4],edi
    2487:	09 06                	or     DWORD PTR [rsi],eax
    2489:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    248c:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    248f:	05 01 03 2f 01       	add    eax,0x12f0301
    2494:	05 03 14 05 17       	add    eax,0x17051403
    2499:	06                   	(bad)
    249a:	01 e4                	add    esp,esp
    249c:	04 01                	add    al,0x1
    249e:	05 09 00 02 04       	add    eax,0x4020009
    24a3:	01 06                	add    DWORD PTR [rsi],eax
    24a5:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24a8:	04 02                	add    al,0x2
    24aa:	05 01 03 2f 01       	add    eax,0x12f0301
    24af:	05 03 14 05 17       	add    eax,0x17051403
    24b4:	06                   	(bad)
    24b5:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    24bb:	00 02                	add    BYTE PTR [rdx],al
    24bd:	04 02                	add    al,0x2
    24bf:	06                   	(bad)
    24c0:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24c3:	04 02                	add    al,0x2
    24c5:	05 01 03 2f 01       	add    eax,0x12f0301
    24ca:	05 03 14 05 17       	add    eax,0x17051403
    24cf:	06                   	(bad)
    24d0:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    24d6:	00 02                	add    BYTE PTR [rdx],al
    24d8:	04 03                	add    al,0x3
    24da:	06                   	(bad)
    24db:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24de:	00 02                	add    BYTE PTR [rdx],al
    24e0:	04 03                	add    al,0x3
    24e2:	01 05 06 03 0e 01    	add    DWORD PTR [rip+0x10e0306],eax        # 10e27ee <_end+0x10dc7d6>
    24e8:	05 05 03 0b 01       	add    eax,0x10b0305
    24ed:	05 1e 06 3c 05       	add    eax,0x53c061e
    24f2:	13 08                	adc    ecx,DWORD PTR [rax]
    24f4:	75 05                	jne    24fb <_Z8readFilePKcPm+0x7b>
    24f6:	1e                   	(bad)
    24f7:	f1                   	int1
    24f8:	05 05 06 3d 05       	add    eax,0x53d0605
    24fd:	13 06                	adc    eax,DWORD PTR [rsi]
    24ff:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832b0a <_end+0x582caf2>
    2505:	0b 06                	or     eax,DWORD PTR [rsi]
    2507:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    250a:	05 17 03 16 3c       	add    eax,0x3c160317
    250f:	74 04                	je     2515 <_Z8readFilePKcPm+0x95>
    2511:	01 05 0b 03 6a 01    	add    DWORD PTR [rip+0x16a030b],eax        # 16a2822 <_end+0x169c80a>
    2517:	58                   	pop    rax
    2518:	05 09 00 02 04       	add    eax,0x4020009
    251d:	04 06                	add    al,0x6
    251f:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    2522:	04 02                	add    al,0x2
    2524:	05 01 03 2f 01       	add    eax,0x12f0301
    2529:	05 03 14 05 17       	add    eax,0x17051403
    252e:	06                   	(bad)
    252f:	01 82 04 01 05 14    	add    DWORD PTR [rdx+0x14050104],eax
    2535:	06                   	(bad)
    2536:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2539:	05 09 13 01 04       	add    eax,0x4011309
    253e:	02 05 01 03 2e 01    	add    al,BYTE PTR [rip+0x12e0301]        # 12e2845 <_end+0x12dc82d>
    2544:	05 03 14 05 17       	add    eax,0x17051403
    2549:	06                   	(bad)
    254a:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2550:	00 02                	add    BYTE PTR [rdx],al
    2552:	04 01                	add    al,0x1
    2554:	06                   	(bad)
    2555:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2558:	04 02                	add    al,0x2
    255a:	05 01 03 2e 01       	add    eax,0x12e0301
    255f:	05 03 14 05 17       	add    eax,0x17051403
    2564:	06                   	(bad)
    2565:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    256b:	00 02                	add    BYTE PTR [rdx],al
    256d:	04 02                	add    al,0x2
    256f:	06                   	(bad)
    2570:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2573:	04 02                	add    al,0x2
    2575:	05 01 03 2e 01       	add    eax,0x12e0301
    257a:	05 03 14 05 17       	add    eax,0x17051403
    257f:	06                   	(bad)
    2580:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2586:	00 02                	add    BYTE PTR [rdx],al
    2588:	04 03                	add    al,0x3
    258a:	06                   	(bad)
    258b:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    258e:	00 02                	add    BYTE PTR [rdx],al
    2590:	04 03                	add    al,0x3
    2592:	01 00                	add    DWORD PTR [rax],eax
    2594:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2597:	06                   	(bad)
    2598:	01 05 06 06 03 0d    	add    DWORD PTR [rip+0xd030606],eax        # d032ba4 <_end+0xd02cb8c>
    259e:	58                   	pop    rax
    259f:	05 05 03 0b 01       	add    eax,0x10b0305
    25a4:	05 1e 06 01 05       	add    eax,0x501061e
    25a9:	13 08                	adc    ecx,DWORD PTR [rax]
    25ab:	2f                   	(bad)
    25ac:	05 1e f1 05 05       	add    eax,0x505f11e
    25b1:	06                   	(bad)
    25b2:	3d 05 13 06 01       	cmp    eax,0x1061305
    25b7:	05 05 06 83 05       	add    eax,0x5830605
    25bc:	0b 06                	or     eax,DWORD PTR [rsi]
    25be:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    25c4:	04 04                	add    al,0x4
    25c6:	06                   	(bad)
    25c7:	03 66 01             	add    esp,DWORD PTR [rsi+0x1]
    25ca:	04 02                	add    al,0x2
    25cc:	05 01 03 2e 01       	add    eax,0x12e0301
    25d1:	05 03 14 05 17       	add    eax,0x17051403
    25d6:	06                   	(bad)
    25d7:	01 82 04 01 05 18    	add    DWORD PTR [rdx+0x18050104],eax
    25dd:	06                   	(bad)
    25de:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    25e1:	05 09 13 01 04       	add    eax,0x4011309
    25e6:	02 05 01 03 2d 01    	add    al,BYTE PTR [rip+0x12d0301]        # 12d28ed <_end+0x12cc8d5>
    25ec:	05 03 14 05 17       	add    eax,0x17051403
    25f1:	06                   	(bad)
    25f2:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    25f8:	00 02                	add    BYTE PTR [rdx],al
    25fa:	04 01                	add    al,0x1
    25fc:	06                   	(bad)
    25fd:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2600:	04 02                	add    al,0x2
    2602:	05 01 03 2d 01       	add    eax,0x12d0301
    2607:	05 03 14 05 17       	add    eax,0x17051403
    260c:	06                   	(bad)
    260d:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2613:	00 02                	add    BYTE PTR [rdx],al
    2615:	04 02                	add    al,0x2
    2617:	06                   	(bad)
    2618:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    261b:	04 02                	add    al,0x2
    261d:	05 01 03 2d 01       	add    eax,0x12d0301
    2622:	05 03 14 05 17       	add    eax,0x17051403
    2627:	06                   	(bad)
    2628:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    262e:	00 02                	add    BYTE PTR [rdx],al
    2630:	04 03                	add    al,0x3
    2632:	06                   	(bad)
    2633:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2636:	00 02                	add    BYTE PTR [rdx],al
    2638:	04 03                	add    al,0x3
    263a:	01 05 06 03 0c 01    	add    DWORD PTR [rip+0x10c0306],eax        # 10c2946 <_end+0x10bc92e>
    2640:	05 05 03 0b 01       	add    eax,0x10b0305
    2645:	05 1e 06 01 05       	add    eax,0x501061e
    264a:	13 08                	adc    ecx,DWORD PTR [rax]
    264c:	2f                   	(bad)
    264d:	05 1e f1 05 05       	add    eax,0x505f11e
    2652:	06                   	(bad)
    2653:	3d 05 13 06 01       	cmp    eax,0x1061305
    2658:	05 05 06 83 05       	add    eax,0x5830605
    265d:	0b 06                	or     eax,DWORD PTR [rsi]
    265f:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2665:	04 04                	add    al,0x4
    2667:	06                   	(bad)
    2668:	03 67 01             	add    esp,DWORD PTR [rdi+0x1]
    266b:	04 02                	add    al,0x2
    266d:	05 01 03 2d 01       	add    eax,0x12d0301
    2672:	05 03 14 05 17       	add    eax,0x17051403
    2677:	06                   	(bad)
    2678:	01 82 04 01 05 1e    	add    DWORD PTR [rdx+0x1e050104],eax
    267e:	06                   	(bad)
    267f:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2682:	05 09 13 01 04       	add    eax,0x4011309
    2687:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c298e <_end+0x12bc976>
    268d:	05 03 14 05 17       	add    eax,0x17051403
    2692:	06                   	(bad)
    2693:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    2699:	00 02                	add    BYTE PTR [rdx],al
    269b:	04 01                	add    al,0x1
    269d:	06                   	(bad)
    269e:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26a1:	04 02                	add    al,0x2
    26a3:	05 01 03 2c 01       	add    eax,0x12c0301
    26a8:	05 03 14 05 17       	add    eax,0x17051403
    26ad:	06                   	(bad)
    26ae:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    26b4:	00 02                	add    BYTE PTR [rdx],al
    26b6:	04 02                	add    al,0x2
    26b8:	06                   	(bad)
    26b9:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26bc:	04 02                	add    al,0x2
    26be:	05 01 03 2c 01       	add    eax,0x12c0301
    26c3:	05 03 14 05 17       	add    eax,0x17051403
    26c8:	06                   	(bad)
    26c9:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    26cf:	00 02                	add    BYTE PTR [rdx],al
    26d1:	04 03                	add    al,0x3
    26d3:	06                   	(bad)
    26d4:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    26d7:	00 02                	add    BYTE PTR [rdx],al
    26d9:	04 03                	add    al,0x3
    26db:	01 05 06 03 0b 01    	add    DWORD PTR [rip+0x10b0306],eax        # 10b29e7 <_end+0x10ac9cf>
    26e1:	05 05 03 0b 01       	add    eax,0x10b0305
    26e6:	05 1e 06 01 05       	add    eax,0x501061e
    26eb:	13 08                	adc    ecx,DWORD PTR [rax]
    26ed:	2f                   	(bad)
    26ee:	05 1e f1 05 05       	add    eax,0x505f11e
    26f3:	06                   	(bad)
    26f4:	3d 05 13 06 01       	cmp    eax,0x1061305
    26f9:	05 05 06 83 05       	add    eax,0x5830605
    26fe:	0b 06                	or     eax,DWORD PTR [rsi]
    2700:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2706:	04 04                	add    al,0x4
    2708:	06                   	(bad)
    2709:	03 68 01             	add    ebp,DWORD PTR [rax+0x1]
    270c:	04 02                	add    al,0x2
    270e:	05 01 03 2c 01       	add    eax,0x12c0301
    2713:	05 03 14 05 17       	add    eax,0x17051403
    2718:	06                   	(bad)
    2719:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    271f:	06                   	(bad)
    2720:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2723:	05 09 13 01 04       	add    eax,0x4011309
    2728:	02 05 01 03 2b 01    	add    al,BYTE PTR [rip+0x12b0301]        # 12b2a2f <_end+0x12aca17>
    272e:	05 03 14 05 17       	add    eax,0x17051403
    2733:	06                   	(bad)
    2734:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    273a:	00 02                	add    BYTE PTR [rdx],al
    273c:	04 01                	add    al,0x1
    273e:	06                   	(bad)
    273f:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2742:	04 02                	add    al,0x2
    2744:	05 01 03 2b 01       	add    eax,0x12b0301
    2749:	05 03 14 05 17       	add    eax,0x17051403
    274e:	06                   	(bad)
    274f:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2755:	00 02                	add    BYTE PTR [rdx],al
    2757:	04 02                	add    al,0x2
    2759:	06                   	(bad)
    275a:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    275d:	04 02                	add    al,0x2
    275f:	05 01 03 2b 01       	add    eax,0x12b0301
    2764:	05 03 14 05 17       	add    eax,0x17051403
    2769:	06                   	(bad)
    276a:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2770:	00 02                	add    BYTE PTR [rdx],al
    2772:	04 03                	add    al,0x3
    2774:	06                   	(bad)
    2775:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2778:	00 02                	add    BYTE PTR [rdx],al
    277a:	04 03                	add    al,0x3
    277c:	01 05 06 03 0a 01    	add    DWORD PTR [rip+0x10a0306],eax        # 10a2a88 <_end+0x109ca70>
    2782:	05 05 03 0b 01       	add    eax,0x10b0305
    2787:	05 1e 06 01 05       	add    eax,0x501061e
    278c:	13 08                	adc    ecx,DWORD PTR [rax]
    278e:	2f                   	(bad)
    278f:	05 1e f1 05 05       	add    eax,0x505f11e
    2794:	06                   	(bad)
    2795:	3d 05 13 06 01       	cmp    eax,0x1061305
    279a:	05 05 06 83 05       	add    eax,0x5830605
    279f:	0b 06                	or     eax,DWORD PTR [rsi]
    27a1:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    27a7:	04 04                	add    al,0x4
    27a9:	06                   	(bad)
    27aa:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    27ad:	04 02                	add    al,0x2
    27af:	05 01 03 2b 01       	add    eax,0x12b0301
    27b4:	05 03 14 05 17       	add    eax,0x17051403
    27b9:	06                   	(bad)
    27ba:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    27c0:	06                   	(bad)
    27c1:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    27c4:	05 09 13 01 04       	add    eax,0x4011309
    27c9:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2ad0 <_end+0x129cab8>
    27cf:	05 03 14 05 17       	add    eax,0x17051403
    27d4:	06                   	(bad)
    27d5:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    27db:	00 02                	add    BYTE PTR [rdx],al
    27dd:	04 01                	add    al,0x1
    27df:	06                   	(bad)
    27e0:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    27e4:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2aeb <_end+0x129cad3>
    27ea:	05 03 14 05 17       	add    eax,0x17051403
    27ef:	06                   	(bad)
    27f0:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    27f6:	00 02                	add    BYTE PTR [rdx],al
    27f8:	04 02                	add    al,0x2
    27fa:	06                   	(bad)
    27fb:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    27ff:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2b06 <_end+0x129caee>
    2805:	05 03 14 05 17       	add    eax,0x17051403
    280a:	06                   	(bad)
    280b:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2811:	00 02                	add    BYTE PTR [rdx],al
    2813:	04 03                	add    al,0x3
    2815:	06                   	(bad)
    2816:	03 54 01 00          	add    edx,DWORD PTR [rcx+rax*1+0x0]
    281a:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    281d:	01 05 06 03 09 01    	add    DWORD PTR [rip+0x1090306],eax        # 1092b29 <_end+0x108cb11>
    2823:	05 05 03 0b 01       	add    eax,0x10b0305
    2828:	05 1e 06 01 05       	add    eax,0x501061e
    282d:	13 08                	adc    ecx,DWORD PTR [rax]
    282f:	2f                   	(bad)
    2830:	05 1e f1 05 05       	add    eax,0x505f11e
    2835:	06                   	(bad)
    2836:	3d 05 13 06 01       	cmp    eax,0x1061305
    283b:	05 05 06 83 05       	add    eax,0x5830605
    2840:	0b 06                	or     eax,DWORD PTR [rsi]
    2842:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2848:	04 04                	add    al,0x4
    284a:	06                   	(bad)
    284b:	03 6a 01             	add    ebp,DWORD PTR [rdx+0x1]
    284e:	04 02                	add    al,0x2
    2850:	05 01 03 2a 01       	add    eax,0x12a0301
    2855:	05 03 14 05 17       	add    eax,0x17051403
    285a:	06                   	(bad)
    285b:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    2861:	06                   	(bad)
    2862:	03 54 01 05          	add    edx,DWORD PTR [rcx+rax*1+0x5]
    2866:	09 13                	or     DWORD PTR [rbx],edx
    2868:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    286b:	05 01 03 29 01       	add    eax,0x1290301
    2870:	05 03 14 05 17       	add    eax,0x17051403
    2875:	06                   	(bad)
    2876:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    287c:	00 02                	add    BYTE PTR [rdx],al
    287e:	04 01                	add    al,0x1
    2880:	06                   	(bad)
    2881:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2884:	04 02                	add    al,0x2
    2886:	05 01 03 29 01       	add    eax,0x1290301
    288b:	05 03 14 05 17       	add    eax,0x17051403
    2890:	06                   	(bad)
    2891:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2897:	00 02                	add    BYTE PTR [rdx],al
    2899:	04 02                	add    al,0x2
    289b:	06                   	(bad)
    289c:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    289f:	04 02                	add    al,0x2
    28a1:	05 01 03 29 01       	add    eax,0x1290301
    28a6:	05 03 14 05 17       	add    eax,0x17051403
    28ab:	06                   	(bad)
    28ac:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    28b2:	00 02                	add    BYTE PTR [rdx],al
    28b4:	04 03                	add    al,0x3
    28b6:	06                   	(bad)
    28b7:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    28ba:	00 02                	add    BYTE PTR [rdx],al
    28bc:	04 03                	add    al,0x3
    28be:	01 05 06 1a 05 05    	add    DWORD PTR [rip+0x5051a06],eax        # 50542ca <_end+0x504e2b2>
    28c4:	03 0b                	add    ecx,DWORD PTR [rbx]
    28c6:	01 05 1e 06 01 05    	add    DWORD PTR [rip+0x501061e],eax        # 5012eea <_end+0x500ced2>
    28cc:	13 08                	adc    ecx,DWORD PTR [rax]
    28ce:	2f                   	(bad)
    28cf:	05 1e f1 05 05       	add    eax,0x505f11e
    28d4:	06                   	(bad)
    28d5:	3d 05 13 06 01       	cmp    eax,0x1061305
    28da:	05 05 06 83 05       	add    eax,0x5830605
    28df:	0b 06                	or     eax,DWORD PTR [rsi]
    28e1:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    28e7:	04 04                	add    al,0x4
    28e9:	06                   	(bad)
    28ea:	03 6b 01             	add    ebp,DWORD PTR [rbx+0x1]
    28ed:	04 02                	add    al,0x2
    28ef:	05 01 03 29 01       	add    eax,0x1290301
    28f4:	05 03 14 05 17       	add    eax,0x17051403
    28f9:	06                   	(bad)
    28fa:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    2900:	06                   	(bad)
    2901:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2904:	06                   	(bad)
    2905:	74 05                	je     290c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x30c>
    2907:	34 00                	xor    al,0x0
    2909:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    290c:	06                   	(bad)
    290d:	03 78 01             	add    edi,DWORD PTR [rax+0x1]
    2910:	04 02                	add    al,0x2
    2912:	05 01 03 31 01       	add    eax,0x1310301
    2917:	05 03 14 05 17       	add    eax,0x17051403
    291c:	06                   	(bad)
    291d:	01 e4                	add    esp,esp
    291f:	04 01                	add    al,0x1
    2921:	05 34 00 02 04       	add    eax,0x4020034
    2926:	03 06                	add    eax,DWORD PTR [rsi]
    2928:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    292b:	04 02                	add    al,0x2
    292d:	05 01 03 31 01       	add    eax,0x1310301
    2932:	05 03 14 05 17       	add    eax,0x17051403
    2937:	06                   	(bad)
    2938:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    293e:	00 02                	add    BYTE PTR [rdx],al
    2940:	04 04                	add    al,0x4
    2942:	06                   	(bad)
    2943:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    2946:	04 02                	add    al,0x2
    2948:	05 01 03 31 01       	add    eax,0x1310301
    294d:	05 03 14 05 17       	add    eax,0x17051403
    2952:	06                   	(bad)
    2953:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2959:	00 02                	add    BYTE PTR [rdx],al
    295b:	04 05                	add    al,0x5
    295d:	06                   	(bad)
    295e:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    2961:	00 02                	add    BYTE PTR [rdx],al
    2963:	04 05                	add    al,0x5
    2965:	01 05 06 03 10 01    	add    DWORD PTR [rip+0x1100306],eax        # 1102c71 <_end+0x10fcc59>
    296b:	05 05 03 0b 01       	add    eax,0x10b0305
    2970:	05 1e 06 01 05       	add    eax,0x501061e
    2975:	13 08                	adc    ecx,DWORD PTR [rax]
    2977:	2f                   	(bad)
    2978:	05 1e f1 05 05       	add    eax,0x505f11e
    297d:	06                   	(bad)
    297e:	3d 05 13 06 01       	cmp    eax,0x1061305
    2983:	05 05 06 9f 05       	add    eax,0x59f0605
    2988:	0b 06                	or     eax,DWORD PTR [rsi]
    298a:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2990:	04 06                	add    al,0x6
    2992:	06                   	(bad)
    2993:	03 63 01             	add    esp,DWORD PTR [rbx+0x1]
    2996:	04 02                	add    al,0x2
    2998:	05 01 03 31 01       	add    eax,0x1310301
    299d:	05 03 14 05 17       	add    eax,0x17051403
    29a2:	06                   	(bad)
    29a3:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    29a9:	34 00                	xor    al,0x0
    29ab:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    29ae:	06                   	(bad)
    29af:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29b3:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322cba <_end+0x131cca2>
    29b9:	05 03 14 05 17       	add    eax,0x17051403
    29be:	06                   	(bad)
    29bf:	01 e4                	add    esp,esp
    29c1:	04 01                	add    al,0x1
    29c3:	05 34 00 02 04       	add    eax,0x4020034
    29c8:	03 06                	add    eax,DWORD PTR [rsi]
    29ca:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29ce:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322cd5 <_end+0x131ccbd>
    29d4:	05 03 14 05 17       	add    eax,0x17051403
    29d9:	06                   	(bad)
    29da:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    29e0:	00 02                	add    BYTE PTR [rdx],al
    29e2:	04 04                	add    al,0x4
    29e4:	06                   	(bad)
    29e5:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    29e9:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322cf0 <_end+0x131ccd8>
    29ef:	05 03 14 05 17       	add    eax,0x17051403
    29f4:	06                   	(bad)
    29f5:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    29fb:	00 02                	add    BYTE PTR [rdx],al
    29fd:	04 05                	add    al,0x5
    29ff:	06                   	(bad)
    2a00:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    2a04:	02 04 05 01 05 06 03 	add    al,BYTE PTR [rax*1+0x3060501]
    2a0b:	11 01                	adc    DWORD PTR [rcx],eax
    2a0d:	05 05 03 0b 01       	add    eax,0x10b0305
    2a12:	05 1e 06 01 05       	add    eax,0x501061e
    2a17:	13 08                	adc    ecx,DWORD PTR [rax]
    2a19:	2f                   	(bad)
    2a1a:	05 1e f1 05 05       	add    eax,0x505f11e
    2a1f:	06                   	(bad)
    2a20:	3d 05 13 06 01       	cmp    eax,0x1061305
    2a25:	05 05 06 9f 05       	add    eax,0x59f0605
    2a2a:	0b 06                	or     eax,DWORD PTR [rsi]
    2a2c:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2a32:	04 06                	add    al,0x6
    2a34:	06                   	(bad)
    2a35:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
    2a38:	04 02                	add    al,0x2
    2a3a:	05 01 03 32 01       	add    eax,0x1320301
    2a3f:	05 03 14 05 17       	add    eax,0x17051403
    2a44:	06                   	(bad)
    2a45:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2a4b:	34 00                	xor    al,0x0
    2a4d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2a50:	06                   	(bad)
    2a51:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a54:	04 02                	add    al,0x2
    2a56:	05 01 03 33 01       	add    eax,0x1330301
    2a5b:	05 03 14 05 17       	add    eax,0x17051403
    2a60:	06                   	(bad)
    2a61:	01 e4                	add    esp,esp
    2a63:	04 01                	add    al,0x1
    2a65:	05 34 00 02 04       	add    eax,0x4020034
    2a6a:	03 06                	add    eax,DWORD PTR [rsi]
    2a6c:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a6f:	04 02                	add    al,0x2
    2a71:	05 01 03 33 01       	add    eax,0x1330301
    2a76:	05 03 14 05 17       	add    eax,0x17051403
    2a7b:	06                   	(bad)
    2a7c:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a82:	00 02                	add    BYTE PTR [rdx],al
    2a84:	04 04                	add    al,0x4
    2a86:	06                   	(bad)
    2a87:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2a8a:	04 02                	add    al,0x2
    2a8c:	05 01 03 33 01       	add    eax,0x1330301
    2a91:	05 03 14 05 17       	add    eax,0x17051403
    2a96:	06                   	(bad)
    2a97:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a9d:	00 02                	add    BYTE PTR [rdx],al
    2a9f:	04 05                	add    al,0x5
    2aa1:	06                   	(bad)
    2aa2:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2aa5:	00 02                	add    BYTE PTR [rdx],al
    2aa7:	04 05                	add    al,0x5
    2aa9:	01 05 06 03 12 01    	add    DWORD PTR [rip+0x1120306],eax        # 1122db5 <_end+0x111cd9d>
    2aaf:	05 05 03 0b 01       	add    eax,0x10b0305
    2ab4:	05 1e 06 01 05       	add    eax,0x501061e
    2ab9:	13 08                	adc    ecx,DWORD PTR [rax]
    2abb:	2f                   	(bad)
    2abc:	05 1e f1 05 05       	add    eax,0x505f11e
    2ac1:	06                   	(bad)
    2ac2:	3d 05 13 06 01       	cmp    eax,0x1061305
    2ac7:	05 05 06 9f 05       	add    eax,0x59f0605
    2acc:	0b 06                	or     eax,DWORD PTR [rsi]
    2ace:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2ad4:	04 06                	add    al,0x6
    2ad6:	06                   	(bad)
    2ad7:	03 61 01             	add    esp,DWORD PTR [rcx+0x1]
    2ada:	04 02                	add    al,0x2
    2adc:	05 01 03 33 01       	add    eax,0x1330301
    2ae1:	05 03 14 05 17       	add    eax,0x17051403
    2ae6:	06                   	(bad)
    2ae7:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2aed:	34 00                	xor    al,0x0
    2aef:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2af2:	06                   	(bad)
    2af3:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2af6:	04 02                	add    al,0x2
    2af8:	05 01 03 34 01       	add    eax,0x1340301
    2afd:	05 03 14 05 17       	add    eax,0x17051403
    2b02:	06                   	(bad)
    2b03:	01 e4                	add    esp,esp
    2b05:	04 01                	add    al,0x1
    2b07:	05 34 00 02 04       	add    eax,0x4020034
    2b0c:	03 06                	add    eax,DWORD PTR [rsi]
    2b0e:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b11:	04 02                	add    al,0x2
    2b13:	05 01 03 34 01       	add    eax,0x1340301
    2b18:	05 03 14 05 17       	add    eax,0x17051403
    2b1d:	06                   	(bad)
    2b1e:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b24:	00 02                	add    BYTE PTR [rdx],al
    2b26:	04 04                	add    al,0x4
    2b28:	06                   	(bad)
    2b29:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b2c:	04 02                	add    al,0x2
    2b2e:	05 01 03 34 01       	add    eax,0x1340301
    2b33:	05 03 14 05 17       	add    eax,0x17051403
    2b38:	06                   	(bad)
    2b39:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b3f:	00 02                	add    BYTE PTR [rdx],al
    2b41:	04 05                	add    al,0x5
    2b43:	06                   	(bad)
    2b44:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b47:	00 02                	add    BYTE PTR [rdx],al
    2b49:	04 05                	add    al,0x5
    2b4b:	01 05 06 03 13 01    	add    DWORD PTR [rip+0x1130306],eax        # 1132e57 <_end+0x112ce3f>
    2b51:	05 05 03 0b 01       	add    eax,0x10b0305
    2b56:	05 1e 06 01 05       	add    eax,0x501061e
    2b5b:	13 08                	adc    ecx,DWORD PTR [rax]
    2b5d:	2f                   	(bad)
    2b5e:	05 1e f1 05 05       	add    eax,0x505f11e
    2b63:	06                   	(bad)
    2b64:	3d 05 13 06 01       	cmp    eax,0x1061305
    2b69:	05 05 06 9f 05       	add    eax,0x59f0605
    2b6e:	0b 06                	or     eax,DWORD PTR [rsi]
    2b70:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2b76:	04 06                	add    al,0x6
    2b78:	06                   	(bad)
    2b79:	03 60 01             	add    esp,DWORD PTR [rax+0x1]
    2b7c:	04 02                	add    al,0x2
    2b7e:	05 01 03 34 01       	add    eax,0x1340301
    2b83:	05 03 14 05 17       	add    eax,0x17051403
    2b88:	06                   	(bad)
    2b89:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2b8f:	34 00                	xor    al,0x0
    2b91:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2b94:	06                   	(bad)
    2b95:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2b98:	04 02                	add    al,0x2
    2b9a:	05 01 03 35 01       	add    eax,0x1350301
    2b9f:	05 03 14 05 17       	add    eax,0x17051403
    2ba4:	06                   	(bad)
    2ba5:	01 e4                	add    esp,esp
    2ba7:	04 01                	add    al,0x1
    2ba9:	05 34 00 02 04       	add    eax,0x4020034
    2bae:	03 06                	add    eax,DWORD PTR [rsi]
    2bb0:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2bb3:	04 02                	add    al,0x2
    2bb5:	05 01 03 35 01       	add    eax,0x1350301
    2bba:	05 03 14 05 17       	add    eax,0x17051403
    2bbf:	06                   	(bad)
    2bc0:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2bc6:	00 02                	add    BYTE PTR [rdx],al
    2bc8:	04 04                	add    al,0x4
    2bca:	06                   	(bad)
    2bcb:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2bce:	04 02                	add    al,0x2
    2bd0:	05 01 03 35 01       	add    eax,0x1350301
    2bd5:	05 03 14 05 17       	add    eax,0x17051403
    2bda:	06                   	(bad)
    2bdb:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2be1:	00 02                	add    BYTE PTR [rdx],al
    2be3:	04 05                	add    al,0x5
    2be5:	06                   	(bad)
    2be6:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2be9:	00 02                	add    BYTE PTR [rdx],al
    2beb:	04 05                	add    al,0x5
    2bed:	01 05 06 03 14 01    	add    DWORD PTR [rip+0x1140306],eax        # 1142ef9 <_end+0x113cee1>
    2bf3:	05 05 03 0b 01       	add    eax,0x10b0305
    2bf8:	05 1e 06 01 05       	add    eax,0x501061e
    2bfd:	13 08                	adc    ecx,DWORD PTR [rax]
    2bff:	2f                   	(bad)
    2c00:	05 1e f1 05 05       	add    eax,0x505f11e
    2c05:	06                   	(bad)
    2c06:	3d 05 13 06 01       	cmp    eax,0x1061305
    2c0b:	05 05 06 9f 05       	add    eax,0x59f0605
    2c10:	0b 06                	or     eax,DWORD PTR [rsi]
    2c12:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2c18:	04 06                	add    al,0x6
    2c1a:	06                   	(bad)
    2c1b:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    2c1e:	04 02                	add    al,0x2
    2c20:	05 01 03 35 01       	add    eax,0x1350301
    2c25:	05 03 14 05 17       	add    eax,0x17051403
    2c2a:	06                   	(bad)
    2c2b:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2c31:	34 00                	xor    al,0x0
    2c33:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2c36:	06                   	(bad)
    2c37:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c3a:	04 02                	add    al,0x2
    2c3c:	05 01 03 36 01       	add    eax,0x1360301
    2c41:	05 03 14 05 17       	add    eax,0x17051403
    2c46:	06                   	(bad)
    2c47:	01 e4                	add    esp,esp
    2c49:	04 01                	add    al,0x1
    2c4b:	05 34 00 02 04       	add    eax,0x4020034
    2c50:	03 06                	add    eax,DWORD PTR [rsi]
    2c52:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c55:	04 02                	add    al,0x2
    2c57:	05 01 03 36 01       	add    eax,0x1360301
    2c5c:	05 03 14 05 17       	add    eax,0x17051403
    2c61:	06                   	(bad)
    2c62:	01 82 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],eax
    2c68:	00 02                	add    BYTE PTR [rdx],al
    2c6a:	04 04                	add    al,0x4
    2c6c:	06                   	(bad)
    2c6d:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c70:	04 02                	add    al,0x2
    2c72:	05 01 03 36 01       	add    eax,0x1360301
    2c77:	05 03 14 05 17       	add    eax,0x17051403
    2c7c:	06                   	(bad)
    2c7d:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2c83:	00 02                	add    BYTE PTR [rdx],al
    2c85:	04 05                	add    al,0x5
    2c87:	06                   	(bad)
    2c88:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2c8b:	00 02                	add    BYTE PTR [rdx],al
    2c8d:	04 05                	add    al,0x5
    2c8f:	01 05 06 03 15 01    	add    DWORD PTR [rip+0x1150306],eax        # 1152f9b <_end+0x114cf83>
    2c95:	05 05 03 0b 01       	add    eax,0x10b0305
    2c9a:	05 1e 06 01 05       	add    eax,0x501061e
    2c9f:	13 08                	adc    ecx,DWORD PTR [rax]
    2ca1:	2f                   	(bad)
    2ca2:	05 1e f1 05 05       	add    eax,0x505f11e
    2ca7:	06                   	(bad)
    2ca8:	3d 05 13 06 01       	cmp    eax,0x1061305
    2cad:	05 05 06 9f 05       	add    eax,0x59f0605
    2cb2:	0b 06                	or     eax,DWORD PTR [rsi]
    2cb4:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2cba:	04 06                	add    al,0x6
    2cbc:	06                   	(bad)
    2cbd:	03 5e 01             	add    ebx,DWORD PTR [rsi+0x1]
    2cc0:	04 02                	add    al,0x2
    2cc2:	05 01 03 36 01       	add    eax,0x1360301
    2cc7:	05 03 14 05 17       	add    eax,0x17051403
    2ccc:	06                   	(bad)
    2ccd:	01 ba 58 04 01 05    	add    DWORD PTR [rdx+0x5010458],edi
    2cd3:	01 03                	add    DWORD PTR [rbx],eax
    2cd5:	5b                   	pop    rbx
    2cd6:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022ce1 <_end+0x401ccc9>
    2cdc:	01 03                	add    DWORD PTR [rbx],eax
    2cde:	62                   	(bad)
    2cdf:	58                   	pop    rax
    2ce0:	00 02                	add    BYTE PTR [rdx],al
    2ce2:	04 01                	add    al,0x1
    2ce4:	ba 00 02 04 01       	mov    edx,0x1040200
    2ce9:	74 00                	je     2ceb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x28b>
    2ceb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cee:	74 00                	je     2cf0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x290>
    2cf0:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2cf3:	57                   	push   rdi
    2cf4:	00 02                	add    BYTE PTR [rdx],al
    2cf6:	04 01                	add    al,0x1
    2cf8:	ba 00 02 04 01       	mov    edx,0x1040200
    2cfd:	74 00                	je     2cff <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x29f>
    2cff:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d02:	74 05                	je     2d09 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2a9>
    2d04:	52                   	push   rdx
    2d05:	06                   	(bad)
    2d06:	03 96 01 ba 06 01    	add    edx,DWORD PTR [rsi+0x106ba01]
    2d0c:	05 05 06 4b 05       	add    eax,0x54b0605
    2d11:	52                   	push   rdx
    2d12:	06                   	(bad)
    2d13:	11 05 05 08 67 05    	adc    DWORD PTR [rip+0x5670805],eax        # 567351e <_end+0x566d506>
    2d19:	1c 00                	sbb    al,0x0
    2d1b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d1e:	06                   	(bad)
    2d1f:	af                   	scas   eax,DWORD PTR es:[rdi]
    2d20:	00 02                	add    BYTE PTR [rdx],al
    2d22:	04 01                	add    al,0x1
    2d24:	06                   	(bad)
    2d25:	08 ba 05 0c 57 4a    	or     BYTE PTR [rdx+0x4a570c05],bh
    2d2b:	05 09 06 08 3e       	add    eax,0x3e080609
    2d30:	05 2e 06 01 05       	add    eax,0x501062e
    2d35:	39 ba 82 05 1c d6    	cmp    DWORD PTR [rdx-0x29e3fa7e],edi
    2d3b:	05 05 00 02 04       	add    eax,0x4020005
    2d40:	03 06                	add    eax,DWORD PTR [rsi]
    2d42:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    2d47:	04 01                	add    al,0x1
    2d49:	01 00                	add    DWORD PTR [rax],eax
    2d4b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d4e:	06                   	(bad)
    2d4f:	08 20                	or     BYTE PTR [rax],ah
    2d51:	05 09 06 91 05       	add    eax,0x5910609
    2d56:	2c 06                	sub    al,0x6
    2d58:	01 05 2e 2e 05 2c    	add    DWORD PTR [rip+0x2c052e2e],eax        # 2c055b8c <_end+0x2c04fb74>
    2d5e:	4a 05 2e 58 05 39    	rex.WX add rax,0x3905582e
    2d64:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    2d6a:	00 02                	add    BYTE PTR [rdx],al
    2d6c:	04 03                	add    al,0x3
    2d6e:	06                   	(bad)
    2d6f:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022d95 <_end+0x401cd7d>
    2d76:	01 05 09 
    2d79:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2d7a:	05 2e 06 01 05       	add    eax,0x501062e
    2d7f:	39 90 05 1c 4a 05    	cmp    DWORD PTR [rax+0x54a1c05],edx
    2d85:	05 00 02 04 03       	add    eax,0x3040200
    2d8a:	06                   	(bad)
    2d8b:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    2d91:	01 01                	add    DWORD PTR [rcx],eax
    2d93:	00 02                	add    BYTE PTR [rdx],al
    2d95:	04 01                	add    al,0x1
    2d97:	06                   	(bad)
    2d98:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 51533a3 <_end+0x514d38b>
    2d9e:	1e                   	(bad)
    2d9f:	06                   	(bad)
    2da0:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e0577c5 <_end+0x1e0517ad>
    2da6:	4a 04 03             	rex.WX add al,0x3
    2da9:	05 03 06 03 87       	add    eax,0x87030603
    2dae:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    2db4:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2db6:	9e                   	sahf
    2db7:	4a 04 01             	rex.WX add al,0x1
    2dba:	05 05 06 03 fa       	add    eax,0xfa030605
    2dbf:	7d 01                	jge    2dc2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x362>
    2dc1:	05 01 06 13 05       	add    eax,0x5130601
    2dc6:	18 00                	sbb    BYTE PTR [rax],al
    2dc8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2dcb:	47 05 01 4d c8 05    	rex.RXB add eax,0x5c84d01
    2dd1:	05 06 7f 05 1e       	add    eax,0x1e057f06
    2dd6:	06                   	(bad)
    2dd7:	01 4a 04             	add    DWORD PTR [rdx+0x4],ecx
    2dda:	03 05 03 06 03 87    	add    eax,DWORD PTR [rip+0xffffffff87030603]        # ffffffff870333e3 <_end+0xffffffff8702d3cb>
    2de0:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    2de3:	05 13 06 2e 04       	add    eax,0x42e0613
    2de8:	01 05 13 03 f5 7d    	add    DWORD PTR [rip+0x7df50313],eax        # 7df53101 <_end+0x7df4d0e9>
    2dee:	01 05 0c 2d 4a 04    	add    DWORD PTR [rip+0x44a2d0c],eax        # 44a5b00 <_end+0x449fae8>
    2df4:	03 05 1b 03 8c 02    	add    eax,DWORD PTR [rip+0x28c031b]        # 28c3115 <_end+0x28bd0fd>
    2dfa:	58                   	pop    rax
    2dfb:	58                   	pop    rax
    2dfc:	2e 04 01             	cs add al,0x1
    2dff:	05 08 06 03 f1       	add    eax,0xf1030608
    2e04:	7d 01                	jge    2e07 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3a7>
    2e06:	05 05 00 02 04       	add    eax,0x4020005
    2e0b:	01 06                	add    DWORD PTR [rsi],eax
    2e0d:	13 00                	adc    eax,DWORD PTR [rax]
    2e0f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e12:	08 2e                	or     BYTE PTR [rsi],ch
    2e14:	00 02                	add    BYTE PTR [rdx],al
    2e16:	04 01                	add    al,0x1
    2e18:	74 00                	je     2e1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ba>
    2e1a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e1d:	58                   	pop    rax
    2e1e:	05 43 06 00 09       	add    eax,0x9000643
    2e23:	02 20                	add    ah,BYTE PTR [rax]
    2e25:	38 00                	cmp    BYTE PTR [rax],al
    2e27:	00 00                	add    BYTE PTR [rax],al
    2e29:	00 00                	add    BYTE PTR [rax],al
    2e2b:	00 03                	add    BYTE PTR [rbx],al
    2e2d:	0b 01                	or     eax,DWORD PTR [rcx]
    2e2f:	06                   	(bad)
    2e30:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b343b <_end+0x54ad423>
    2e36:	43 06                	rex.XB (bad)
    2e38:	11 05 05 08 83 05    	adc    DWORD PTR [rip+0x5830805],eax        # 5833643 <_end+0x582d62b>
    2e3e:	1c 00                	sbb    al,0x0
    2e40:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e43:	06                   	(bad)
    2e44:	93                   	xchg   ebx,eax
    2e45:	05 27 00 02 04       	add    eax,0x4020027
    2e4a:	01 06                	add    DWORD PTR [rsi],eax
    2e4c:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022e6e <_end+0x401ce56>
    2e52:	01 3c 05 23 ad 3c 05 	add    DWORD PTR [rax*1+0x53cad23],edi
    2e59:	0b 08                	or     ecx,DWORD PTR [rax]
    2e5b:	8e 05 12 08 30 05    	mov    es,WORD PTR [rip+0x5300812]        # 5303673 <_end+0x52fd65b>
    2e61:	26 d7                	xlat   BYTE PTR ds:[rbx]
    2e63:	05 09 06 08 c7       	add    eax,0xc7080609
    2e68:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 5113480 <_end+0x510d468>
    2e6e:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    2e75:	02 23                	add    ah,BYTE PTR [rbx]
    2e77:	12 c8                	adc    cl,al
    2e79:	05 1c 02 2e 12       	add    eax,0x122e021c
    2e7e:	c8 05 05 00          	enter  0x505,0x0
    2e82:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2e85:	06                   	(bad)
    2e86:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022ea8 <_end+0x401ce90>
    2e8c:	01 01                	add    DWORD PTR [rcx],eax
    2e8e:	00 02                	add    BYTE PTR [rdx],al
    2e90:	04 01                	add    al,0x1
    2e92:	06                   	(bad)
    2e93:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    2e99:	13 05 26 06 01 05    	adc    eax,DWORD PTR [rip+0x5010626]        # 50134c5 <_end+0x500d4ad>
    2e9f:	12 e3                	adc    ah,bl
    2ea1:	05 26 08 c9 05       	add    eax,0x5c90826
    2ea6:	31 02                	xor    DWORD PTR [rdx],eax
    2ea8:	3a 12                	cmp    dl,BYTE PTR [rdx]
    2eaa:	05 1c 08 4a c8       	add    eax,0xc84a081c
    2eaf:	05 05 00 02 04       	add    eax,0x4020005
    2eb4:	03 06                	add    eax,DWORD PTR [rsi]
    2eb6:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022ed8 <_end+0x401cec0>
    2ebc:	01 01                	add    DWORD PTR [rcx],eax
    2ebe:	05 09 2f 13 05       	add    eax,0x5132f09
    2ec3:	29 06                	sub    DWORD PTR [rsi],eax
    2ec5:	11 05 12 2e 05 26    	adc    DWORD PTR [rip+0x26052e12],eax        # 26055cdd <_end+0x2604fcc5>
    2ecb:	4b 05 05 00 02 04    	rex.WXB add rax,0x4020005
    2ed1:	03 8e 05 26 3e 05    	add    ecx,DWORD PTR [rsi+0x53e2605]
    2ed7:	31 4a 05             	xor    DWORD PTR [rdx+0x5],ecx
    2eda:	1c 4a                	sbb    al,0x4a
    2edc:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2ee2:	03 06                	add    eax,DWORD PTR [rsi]
    2ee4:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f06 <_end+0x401ceee>
    2eea:	01 01                	add    DWORD PTR [rcx],eax
    2eec:	05 09 4b 13 05       	add    eax,0x5134b09
    2ef1:	12 06                	adc    al,BYTE PTR [rsi]
    2ef3:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    2ef6:	05 00 02 04 03       	add    eax,0x3040200
    2efb:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31056d27 <_end+0x31050d0f>
    2f01:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f05:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f0b:	03 06                	add    eax,DWORD PTR [rsi]
    2f0d:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f2f <_end+0x401cf17>
    2f13:	01 01                	add    DWORD PTR [rcx],eax
    2f15:	05 09 4b 13 05       	add    eax,0x5134b09
    2f1a:	12 06                	adc    al,BYTE PTR [rsi]
    2f1c:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31057a48 <_end+0x31051a30>
    2f22:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f26:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f2c:	03 06                	add    eax,DWORD PTR [rsi]
    2f2e:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f50 <_end+0x401cf38>
    2f34:	01 01                	add    DWORD PTR [rcx],eax
    2f36:	00 02                	add    BYTE PTR [rdx],al
    2f38:	04 01                	add    al,0x1
    2f3a:	06                   	(bad)
    2f3b:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 5163546 <_end+0x515d52e>
    2f41:	1e                   	(bad)
    2f42:	06                   	(bad)
    2f43:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2f46:	05 03 06 03 fa       	add    eax,0xfa030603
    2f4b:	01 c8                	add    eax,ecx
    2f4d:	05 05 13 04 01       	add    eax,0x1041305
    2f52:	05 01 06 03 88       	add    eax,0x88030601
    2f57:	7e 74                	jle    2fcd <_Z7testAllPKcjS0_+0xbd>
    2f59:	04 03                	add    al,0x3
    2f5b:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2f60:	4a 04 01             	rex.WX add al,0x1
    2f63:	05 01 03 88 7e       	add    eax,0x7e880301
    2f68:	58                   	pop    rax
    2f69:	05 05 06 e1 05       	add    eax,0x5e10605
    2f6e:	1e                   	(bad)
    2f6f:	06                   	(bad)
    2f70:	01 05 01 5b 05 1e    	add    DWORD PTR [rip+0x1e055b01],eax        # 1e058a77 <_end+0x1e052a5f>
    2f76:	47 04 03             	rex.RXB add al,0x3
    2f79:	05 03 06 03 fa       	add    eax,0xfa030603
    2f7e:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2f81:	05 13 04 01 05       	add    eax,0x5010413
    2f86:	01 06                	add    DWORD PTR [rsi],eax
    2f88:	03 88 7e 01 04 03    	add    ecx,DWORD PTR [rax+0x304017e]
    2f8e:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2f93:	74 58                	je     2fed <_Z7testAllPKcjS0_+0xdd>
    2f95:	04 01                	add    al,0x1
    2f97:	05 01 03 88 7e       	add    eax,0x7e880301
    2f9c:	01 66 3c             	add    DWORD PTR [rsi+0x3c],esp
    2f9f:	05 13 03 79 2e       	add    eax,0x2e790313
    2fa4:	05 0b 2d 05 01       	add    eax,0x1052d0b
    2fa9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2faa:	04 03                	add    al,0x3
    2fac:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2fb1:	4a 04 01             	rex.WX add al,0x1
    2fb4:	05 01 03 88 7e       	add    eax,0x7e880301
    2fb9:	4a 04 03             	rex.WX add al,0x3
    2fbc:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2fc1:	74 58                	je     301b <_Z7testAllPKcjS0_+0x10b>
    2fc3:	04 01                	add    al,0x1
    2fc5:	05 07 06 03 fd       	add    eax,0xfd030607
    2fca:	7d 01                	jge    2fcd <_Z7testAllPKcjS0_+0xbd>
    2fcc:	05 05 00 02 04       	add    eax,0x4020005
    2fd1:	01 06                	add    DWORD PTR [rsi],eax
    2fd3:	13 00                	adc    eax,DWORD PTR [rax]
    2fd5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2fd8:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
    2fde:	58                   	pop    rax
    2fdf:	00 01                	add    BYTE PTR [rcx],al
    2fe1:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
       3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       4:	61                   	(bad)
       5:	74 31                	je     38 <__abi_tag-0x344>
       7:	36 00 36             	ss add BYTE PTR [rsi],dh
       a:	6c                   	ins    BYTE PTR es:[rdi],dx
       b:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
      12:	5a 
      13:	53                   	push   rbx
      14:	74 33                	je     49 <__abi_tag-0x333>
      16:	61                   	(bad)
      17:	62 73 6c 00 5f       	(bad)
      1c:	5a                   	pop    rdx
      1d:	53                   	push   rbx
      1e:	74 33                	je     53 <__abi_tag-0x329>
      20:	61                   	(bad)
      21:	62 73 6e 00 71       	(bad)
      26:	73 6f                	jae    97 <__abi_tag-0x2e5>
      28:	72 74                	jb     9e <__abi_tag-0x2de>
      2a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      2d:	72 74                	jb     a3 <__abi_tag-0x2d9>
      2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      30:	6c                   	ins    BYTE PTR es:[rdi],dx
      31:	64 00 61 74          	add    BYTE PTR fs:[rcx+0x74],ah
      35:	5f                   	pop    rdi
      36:	71 75                	jno    ad <__abi_tag-0x2cf>
      38:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
      3f:	74 00                	je     41 <__abi_tag-0x33b>
      41:	5f                   	pop    rdi
      42:	5a                   	pop    rdx
      43:	53                   	push   rbx
      44:	74 33                	je     79 <__abi_tag-0x303>
      46:	61                   	(bad)
      47:	62 73 78 00 5f       	(bad)
      4c:	5f                   	pop    rdi
      4d:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      54:	73 74                	jae    ca <__abi_tag-0x2b2>
      56:	72 74                	jb     cc <__abi_tag-0x2b0>
      58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      59:	6c                   	ins    BYTE PTR es:[rdi],dx
      5a:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
      5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5e:	72 74                	jb     d4 <__abi_tag-0x2a8>
      60:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
      63:	74 00                	je     65 <__abi_tag-0x317>
      65:	62 73 65 61 72       	(bad)
      6a:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
      6d:	61                   	(bad)
      6e:	74 65                	je     d5 <__abi_tag-0x2a7>
      70:	78 69                	js     db <__abi_tag-0x2a1>
      72:	74 00                	je     74 <__abi_tag-0x308>
      74:	5f                   	pop    rdi
      75:	5a                   	pop    rdx
      76:	53                   	push   rbx
      77:	74 33                	je     ac <__abi_tag-0x2d0>
      79:	64 69 76 6c 6c 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x6c],0x5f5f006c
      80:	5f 
      81:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      88:	73 74                	jae    fe <__abi_tag-0x27e>
      8a:	72 74                	jb     100 <__abi_tag-0x27c>
      8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      8d:	6c                   	ins    BYTE PTR es:[rdi],dx
      8e:	6c                   	ins    BYTE PTR es:[rdi],dx
      8f:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
      92:	41 52                	push   r10
      94:	43                   	rex.XB
      95:	48 5f                	rex.W pop rdi
      97:	45                   	rex.RB
      98:	4c                   	rex.WR
      99:	45                   	rex.RB
      9a:	4d 53                	rex.WRB push r11
      9c:	5f                   	pop    rdi
      9d:	41                   	rex.B
      9e:	4d                   	rex.WRB
      9f:	4f 55                	rex.WRXB push r13
      a1:	4e 54                	rex.WRX push rsp
      a3:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
      a6:	69 6e 00 5f 5f 75 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69755f5f
      ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ae:	74 33                	je     e3 <__abi_tag-0x299>
      b0:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
      b3:	00 37                	add    BYTE PTR [rdi],dh
      b5:	6c                   	ins    BYTE PTR es:[rdi],dx
      b6:	6c                   	ins    BYTE PTR es:[rdi],dx
      b7:	64 69 76 5f 74 00 67 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x65670074
      be:	65 
      bf:	74 65                	je     126 <__abi_tag-0x256>
      c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      c2:	76 00                	jbe    c4 <__abi_tag-0x2b8>
      c4:	59                   	pop    rcx
      c5:	4d                   	rex.WRB
      c6:	4d 5f                	rex.WRB pop r15
      c8:	42 59                	rex.X pop rcx
      ca:	54                   	push   rsp
      cb:	45 53                	rex.RB push r11
      cd:	5f                   	pop    rdi
      ce:	53                   	push   rbx
      cf:	49 5a                	rex.WB pop r10
      d1:	45 00 66 6c          	add    BYTE PTR [r14+0x6c],r12b
      d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d6:	61                   	(bad)
      d7:	74 00                	je     d9 <__abi_tag-0x2a3>
      d9:	6d                   	ins    DWORD PTR es:[rdi],dx
      da:	62                   	(bad)
      db:	74 6f                	je     14c <__abi_tag-0x230>
      dd:	77 63                	ja     142 <__abi_tag-0x23a>
      df:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
      e3:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      e8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
      ec:	74 00                	je     ee <__abi_tag-0x28e>
      ee:	6c                   	ins    BYTE PTR es:[rdi],dx
      ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      f1:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      f6:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
      fa:	73 69                	jae    165 <__abi_tag-0x217>
      fc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      fe:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     103:	74 00                	je     105 <__abi_tag-0x277>
     105:	73 74                	jae    17b <__abi_tag-0x201>
     107:	72 74                	jb     17d <__abi_tag-0x1ff>
     109:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     10a:	64 00 74 65 73       	add    BYTE PTR fs:[rbp+riz*2+0x73],dh
     10f:	74 41                	je     152 <__abi_tag-0x22a>
     111:	6c                   	ins    BYTE PTR es:[rdi],dx
     112:	6c                   	ins    BYTE PTR es:[rdi],dx
     113:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     116:	55                   	push   rbp
     117:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
     11a:	2b 31                	sub    esi,DWORD PTR [rcx]
     11c:	37                   	(bad)
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	33 2e                	xor    ebp,DWORD PTR [rsi]
     121:	33 2e                	xor    ebp,DWORD PTR [rsi]
     123:	30 20                	xor    BYTE PTR [rax],ah
     125:	2d 6d 73 73 65       	sub    eax,0x6573736d
     12a:	34 2e                	xor    al,0x2e
     12c:	32 20                	xor    ah,BYTE PTR [rax]
     12e:	2d 6d 61 76 78       	sub    eax,0x7876616d
     133:	32 20                	xor    ah,BYTE PTR [rax]
     135:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     13a:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     140:	72 69                	jb     1ab <__abi_tag-0x1d1>
     142:	63 20                	movsxd esp,DWORD PTR [rax]
     144:	2d 6d 61 72 63       	sub    eax,0x6372616d
     149:	68 3d 78 38 36       	push   0x3638783d
     14e:	2d 36 34 20 2d       	sub    eax,0x2d203436
     153:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d2034a9 <_end+0x2d1fd491>
     15a:	66 61                	data16 (bad)
     15c:	73 79                	jae    1d7 <__abi_tag-0x1a5>
     15e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     15f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     163:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     164:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     165:	75 73                	jne    1da <__abi_tag-0x1a2>
     167:	2d 75 6e 77 69       	sub    eax,0x69776e75
     16c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     16d:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
     173:	65 73 20             	gs jae 196 <__abi_tag-0x1e6>
     176:	2d 66 73 74 61       	sub    eax,0x61747366
     17b:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     17e:	70 72                	jo     1f2 <__abi_tag-0x18a>
     180:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     181:	74 65                	je     1e8 <__abi_tag-0x194>
     183:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     187:	2d 73 74 72 6f       	sub    eax,0x6f727473
     18c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     18d:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617474fa <_end+0x617414e2>
     194:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     197:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
     19b:	68 2d 70 72 6f       	push   0x6f72702d
     1a0:	74 65                	je     207 <__abi_tag-0x175>
     1a2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1a7:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666513 <_end+0x2d6604fb>
     1ad:	70 72                	jo     221 <__abi_tag-0x15b>
     1af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1b0:	74 65                	je     217 <__abi_tag-0x165>
     1b2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1b7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     1ba:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     1be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1c0:	75 5f                	jne    221 <__abi_tag-0x15b>
     1c2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1c5:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
     1c9:	45 78 78             	rex.RB js 244 <__abi_tag-0x138>
     1cc:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d0:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
     1d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d5:	69 00 61 72 67 76    	imul   eax,DWORD PTR [rax],0x76677261
     1db:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     1e3:	73 74                	jae    259 <__abi_tag-0x123>
     1e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1e6:	6d                   	ins    DWORD PTR es:[rdi],dx
     1e7:	62 73 00 5f 5f       	(bad)
     1ec:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     1f3:	6c                   	ins    BYTE PTR es:[rdi],dx
     1f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1f6:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     1fb:	62 6c 65             	(bad)
     1fe:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     201:	73 69                	jae    26c <__abi_tag-0x110>
     203:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     205:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     20a:	61                   	(bad)
     20b:	72 00                	jb     20d <__abi_tag-0x16f>
     20d:	61                   	(bad)
     20e:	72 67                	jb     277 <__abi_tag-0x105>
     210:	63 00                	movsxd eax,DWORD PTR [rax]
     212:	5f                   	pop    rdi
     213:	5f                   	pop    rdi
     214:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     216:	75 5f                	jne    277 <__abi_tag-0x105>
     218:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     21b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     21e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     225:	73 74                	jae    29b <__abi_tag-0xe1>
     227:	72 74                	jb     29d <__abi_tag-0xdf>
     229:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     22a:	75 6c                	jne    298 <__abi_tag-0xe4>
     22c:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     22f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     230:	6c                   	ins    BYTE PTR es:[rdi],dx
     231:	6c                   	ins    BYTE PTR es:[rdi],dx
     232:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     235:	6c                   	ins    BYTE PTR es:[rdi],dx
     236:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     238:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     23b:	73 74                	jae    2b1 <__abi_tag-0xcb>
     23d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     23e:	77 63                	ja     2a3 <__abi_tag-0xd9>
     240:	73 00                	jae    242 <__abi_tag-0x13a>
     242:	77 63                	ja     2a7 <__abi_tag-0xd5>
     244:	74 6f                	je     2b5 <__abi_tag-0xc7>
     246:	6d                   	ins    DWORD PTR es:[rdi],dx
     247:	62                   	(bad)
     248:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
     24b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24c:	74 00                	je     24e <__abi_tag-0x12e>
     24e:	73 68                	jae    2b8 <__abi_tag-0xc4>
     250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     251:	72 74                	jb     2c7 <__abi_tag-0xb5>
     253:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     256:	73 69                	jae    2c1 <__abi_tag-0xbb>
     258:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     25a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     25f:	74 00                	je     261 <__abi_tag-0x11b>
     261:	77 63                	ja     2c6 <__abi_tag-0xb6>
     263:	68 61 72 5f 74       	push   0x745f7261
     268:	00 4c 4f 41          	add    BYTE PTR [rdi+rcx*2+0x41],cl
     26c:	44 5f                	rex.R pop rdi
     26e:	46                   	rex.RX
     26f:	41                   	rex.B
     270:	43 54                	rex.XB push r12
     272:	4f 52                	rex.WRXB push r10
     274:	00 42 41             	add    BYTE PTR [rdx+0x41],al
     277:	53                   	push   rbx
     278:	45 5f                	rex.RB pop r15
     27a:	48                   	rex.W
     27b:	41 53                	push   r11
     27d:	48 5f                	rex.W pop rdi
     27f:	4d                   	rex.WRB
     280:	41 50                	push   r8
     282:	5f                   	pop    rdi
     283:	43                   	rex.XB
     284:	41 50                	push   r8
     286:	41                   	rex.B
     287:	43                   	rex.XB
     288:	49 54                	rex.WB push r12
     28a:	59                   	pop    rcx
     28b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     28e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     291:	61                   	(bad)
     292:	74 31                	je     2c5 <__abi_tag-0xb7>
     294:	32 38                	xor    bh,BYTE PTR [rax]
     296:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     299:	72 74                	jb     30f <__abi_tag-0x6d>
     29b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     29c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     2a0:	37                   	(bad)
     2a1:	74 65                	je     308 <__abi_tag-0x74>
     2a3:	73 74                	jae    319 <__abi_tag-0x63>
     2a5:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     2a7:	6c                   	ins    BYTE PTR es:[rdi],dx
     2a8:	50                   	push   rax
     2a9:	4b 63 6a 53          	rex.WXB movsxd rbp,DWORD PTR [r10+0x53]
     2ad:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
     2b0:	5f                   	pop    rdi
     2b1:	5f                   	pop    rdi
     2b2:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     2b9:	73 74                	jae    32f <__abi_tag-0x4d>
     2bb:	72 74                	jb     331 <__abi_tag-0x4b>
     2bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2be:	75 6c                	jne    32c <__abi_tag-0x50>
     2c0:	6c                   	ins    BYTE PTR es:[rdi],dx
     2c1:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
     2c5:	69 76 00 5f 5f 62 66 	imul   esi,DWORD PTR [rsi+0x0],0x66625f5f
     2cc:	31 36                	xor    DWORD PTR [rsi],esi
     2ce:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     2d4:	70 61                	jo     337 <__abi_tag-0x45>
     2d6:	72 5f                	jb     337 <__abi_tag-0x45>
     2d8:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
     2da:	5f                   	pop    rdi
     2db:	74 00                	je     2dd <__abi_tag-0x9f>
     2dd:	35 64 69 76 5f       	xor    eax,0x5f766964
     2e2:	74 00                	je     2e4 <__abi_tag-0x98>
     2e4:	5f                   	pop    rdi
     2e5:	5f                   	pop    rdi
     2e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2e7:	70 74                	jo     35d <__abi_tag-0x1f>
     2e9:	72 00                	jb     2eb <__abi_tag-0x91>
     2eb:	73 72                	jae    35f <__abi_tag-0x1d>
     2ed:	61                   	(bad)
     2ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2ef:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     2f3:	53                   	push   rbx
     2f4:	74 33                	je     329 <__abi_tag-0x53>
     2f6:	61                   	(bad)
     2f7:	62 73 64 00 5f       	(bad)
     2fc:	5a                   	pop    rdx
     2fd:	53                   	push   rbx
     2fe:	74 33                	je     333 <__abi_tag-0x49>
     300:	61                   	(bad)
     301:	62 73 65 00 5f       	(bad)
     306:	5a                   	pop    rdx
     307:	53                   	push   rbx
     308:	74 33                	je     33d <__abi_tag-0x3f>
     30a:	61                   	(bad)
     30b:	62 73 66 00 5f       	(bad)
     310:	5a                   	pop    rdx
     311:	53                   	push   rbx
     312:	74 33                	je     347 <__abi_tag-0x35>
     314:	61                   	(bad)
     315:	62 73 67 00 63       	(bad)
     31a:	61                   	(bad)
     31b:	70 61                	jo     37e <__abi_tag+0x2>
     31d:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
     320:	79 00                	jns    322 <__abi_tag-0x5a>
     322:	64 61                	fs (bad)
     324:	74 61                	je     387 <__abi_tag+0xb>
     326:	5f                   	pop    rdi
     327:	74 00                	je     329 <__abi_tag-0x53>
     329:	5f                   	pop    rdi
     32a:	5a                   	pop    rdx
     32b:	31 30                	xor    DWORD PTR [rax],esi
     32d:	64 65 62 75 67 50 72 	(bad)
     334:	69 6e 74 50 34 4c 69 	imul   ebp,DWORD PTR [rsi+0x74],0x694c3450
     33b:	73 74                	jae    3b1 <__abi_tag+0x35>
     33d:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     340:	73 68                	jae    3aa <__abi_tag+0x2e>
     342:	4d 61                	rex.WRB (bad)
     344:	70 43                	jo     389 <__abi_tag+0xd>
     346:	74 6f                	je     3b7 <__abi_tag+0x3b>
     348:	72 00                	jb     34a <__abi_tag-0x32>
     34a:	77 6f                	ja     3bb <__abi_tag+0x3f>
     34c:	72 64                	jb     3b2 <__abi_tag+0x36>
     34e:	5f                   	pop    rdi
     34f:	62 65 67 69 6e       	(bad)
     354:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     357:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     359:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     35b:	74 73                	je     3d0 <__abi_tag+0x54>
     35d:	5f                   	pop    rdi
     35e:	61                   	(bad)
     35f:	6d                   	ins    DWORD PTR es:[rdi],dx
     360:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     361:	75 6e                	jne    3d1 <__abi_tag+0x55>
     363:	74 00                	je     365 <__abi_tag-0x17>
     365:	5f                   	pop    rdi
     366:	5f                   	pop    rdi
     367:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     36a:	5f                   	pop    rdi
     36b:	5a                   	pop    rdx
     36c:	31 36                	xor    DWORD PTR [rsi],esi
     36e:	62 75 69 6c 64       	(bad)
     373:	53                   	push   rbx
     374:	74 72                	je     3e8 <__abi_tag+0x6c>
     376:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     37d:	79 50                	jns    3cf <__abi_tag+0x53>
     37f:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
     382:	61                   	(bad)
     383:	6c                   	ins    BYTE PTR es:[rdi],dx
     384:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
     38b:	65 78 74             	gs js  402 <__abi_tag+0x86>
     38e:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     391:	72 69                	jb     3fc <__abi_tag+0x80>
     393:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     394:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     398:	73 72                	jae    40c <__abi_tag+0x90>
     39a:	63 00                	movsxd eax,DWORD PTR [rax]
     39c:	66 72 65             	data16 jb 404 <__abi_tag+0x88>
     39f:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     3a3:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     3a7:	74 44                	je     3ed <__abi_tag+0x71>
     3a9:	74 6f                	je     41a <__abi_tag+0x9e>
     3ab:	72 50                	jb     3fd <__abi_tag+0x81>
     3ad:	34 4c                	xor    al,0x4c
     3af:	69 73 74 00 5f 5f 50 	imul   esi,DWORD PTR [rbx+0x74],0x505f5f00
     3b6:	52                   	push   rdx
     3b7:	45 54                	rex.RB push r12
     3b9:	54                   	push   rsp
     3ba:	59                   	pop    rcx
     3bb:	5f                   	pop    rdi
     3bc:	46 55                	rex.RX push rbp
     3be:	4e                   	rex.WRX
     3bf:	43 54                	rex.XB push r12
     3c1:	49                   	rex.WB
     3c2:	4f                   	rex.WRXB
     3c3:	4e 5f                	rex.WRX pop rdi
     3c5:	5f                   	pop    rdi
     3c6:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3c9:	73 68                	jae    433 <__abi_tag+0xb7>
     3cb:	4d 61                	rex.WRB (bad)
     3cd:	70 41                	jo     410 <__abi_tag+0x94>
     3cf:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     3d3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     3d5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     3d7:	74 00                	je     3d9 <__abi_tag+0x5d>
     3d9:	5f                   	pop    rdi
     3da:	5f                   	pop    rdi
     3db:	62 75 69 6c 74       	(bad)
     3e0:	69 6e 5f 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x73747570
     3e7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3ea:	70 72                	jo     45e <__abi_tag+0xe2>
     3ec:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
     3f3:	6b 00 70             	imul   eax,DWORD PTR [rax],0x70
     3f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3f7:	70 4c                	jo     445 <__abi_tag+0xc9>
     3f9:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     400:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     403:	73 68                	jae    46d <__abi_tag+0xf1>
     405:	5f                   	pop    rdi
     406:	66 75 6e             	data16 jne 477 <__abi_tag+0xfb>
     409:	63 00                	movsxd eax,DWORD PTR [rax]
     40b:	5f                   	pop    rdi
     40c:	5a                   	pop    rdx
     40d:	31 37                	xor    DWORD PTR [rdi],esi
     40f:	68 61 73 68 4d       	push   0x4d687361
     414:	61                   	(bad)
     415:	70 44                	jo     45b <__abi_tag+0xdf>
     417:	65 62 75 67 50 72    	(bad)
     41d:	69 6e 74 50 37 48 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61483750
     424:	73 68                	jae    48e <__abi_tag+0x112>
     426:	4d 61                	rex.WRB (bad)
     428:	70 00                	jo     42a <__abi_tag+0xae>
     42a:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     42c:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     42e:	5f                   	pop    rdi
     42f:	69 6e 78 00 5f 5f 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c5f5f00
     436:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     438:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     43b:	72 6e                	jb     4ab <__abi_tag+0x12f>
     43d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     440:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     443:	31 31                	xor    DWORD PTR [rcx],esi
     445:	68 61 73 68 4d       	push   0x4d687361
     44a:	61                   	(bad)
     44b:	70 44                	jo     491 <__abi_tag+0x115>
     44d:	74 6f                	je     4be <__abi_tag+0x142>
     44f:	72 50                	jb     4a1 <__abi_tag+0x125>
     451:	37                   	(bad)
     452:	48 61                	rex.W (bad)
     454:	73 68                	jae    4be <__abi_tag+0x142>
     456:	4d 61                	rex.WRB (bad)
     458:	70 00                	jo     45a <__abi_tag+0xde>
     45a:	70 72                	jo     4ce <__abi_tag+0x152>
     45c:	65 76 5f             	gs jbe 4be <__abi_tag+0x142>
     45f:	69 6e 78 00 6c 69 73 	imul   ebp,DWORD PTR [rsi+0x78],0x73696c00
     466:	74 44                	je     4ac <__abi_tag+0x130>
     468:	74 6f                	je     4d9 <__abi_tag+0x15d>
     46a:	72 00                	jb     46c <__abi_tag+0xf0>
     46c:	5f                   	pop    rdi
     46d:	5f                   	pop    rdi
     46e:	62 75 69 6c 74       	(bad)
     473:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     47a:	6d                   	ins    DWORD PTR es:[rdi],dx
     47b:	73 65                	jae    4e2 <__abi_tag+0x166>
     47d:	74 5f                	je     4de <__abi_tag+0x162>
     47f:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     482:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     486:	65 73 00             	gs jae 489 <__abi_tag+0x10d>
     489:	5f                   	pop    rdi
     48a:	5f                   	pop    rdi
     48b:	62 75 69 6c 74       	(bad)
     490:	69 6e 5f 5f 5f 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74735f5f
     497:	72 6e                	jb     507 <__abi_tag+0x18b>
     499:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     49c:	5f                   	pop    rdi
     49d:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     4a0:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
     4a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4a4:	6c                   	ins    BYTE PTR es:[rdi],dx
     4a5:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
     4a8:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
     4af:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b0:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4b2:	63 00                	movsxd eax,DWORD PTR [rax]
     4b4:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b5:	69 73 74 73 00 6c 69 	imul   esi,DWORD PTR [rbx+0x74],0x696c0073
     4bc:	73 74                	jae    532 <__abi_tag+0x1b6>
     4be:	43 74 6f             	rex.XB je 530 <__abi_tag+0x1b4>
     4c1:	72 00                	jb     4c3 <__abi_tag+0x147>
     4c3:	5f                   	pop    rdi
     4c4:	5a                   	pop    rdx
     4c5:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     4c9:	74 43                	je     50e <__abi_tag+0x192>
     4cb:	74 6f                	je     53c <__abi_tag+0x1c0>
     4cd:	72 76                	jb     545 <__abi_tag+0x1c9>
     4cf:	00 64 65 62          	add    BYTE PTR [rbp+riz*2+0x62],ah
     4d3:	75 67                	jne    53c <__abi_tag+0x1c0>
     4d5:	50                   	push   rax
     4d6:	72 69                	jb     541 <__abi_tag+0x1c5>
     4d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4d9:	74 00                	je     4db <__abi_tag+0x15f>
     4db:	5f                   	pop    rdi
     4dc:	5a                   	pop    rdx
     4dd:	31 33                	xor    DWORD PTR [rbx],esi
     4df:	73 65                	jae    546 <__abi_tag+0x1ca>
     4e1:	61                   	(bad)
     4e2:	72 63                	jb     547 <__abi_tag+0x1cb>
     4e4:	68 45 6c 65 6d       	push   0x6d656c45
     4e9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     4eb:	74 50                	je     53d <__abi_tag+0x1c1>
     4ed:	34 4c                	xor    al,0x4c
     4ef:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     4f6:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     4fd:	5f                   	pop    rdi
     4fe:	64 65 73 74          	fs gs jae 576 <__abi_tag+0x1fa>
     502:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     505:	73 68                	jae    56f <__abi_tag+0x1f3>
     507:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     50e:	6d 
     50f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     512:	62 75 69 6c 74       	(bad)
     517:	69 6e 5f 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63727473
     51e:	68 72 00 68 61       	push   0x61680072
     523:	73 68                	jae    58d <__abi_tag+0x211>
     525:	4d 61                	rex.WRB (bad)
     527:	70 44                	jo     56d <__abi_tag+0x1f1>
     529:	65 62 75 67 50 72    	(bad)
     52f:	69 6e 74 00 74 61 69 	imul   ebp,DWORD PTR [rsi+0x74],0x69617400
     536:	6c                   	ins    BYTE PTR es:[rdi],dx
     537:	5f                   	pop    rdi
     538:	69 6e 78 00 73 65 61 	imul   ebp,DWORD PTR [rsi+0x78],0x61657300
     53f:	72 63                	jb     5a4 <__abi_tag+0x228>
     541:	68 45 6c 65 6d       	push   0x6d656c45
     546:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     548:	74 00                	je     54a <__abi_tag+0x1ce>
     54a:	73 75                	jae    5c1 <__abi_tag+0x245>
     54c:	70 70                	jo     5be <__abi_tag+0x242>
     54e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     54f:	73 65                	jae    5b6 <__abi_tag+0x23a>
     551:	64 5f                	fs pop rdi
     553:	69 6e 64 65 78 00 6e 	imul   ebp,DWORD PTR [rsi+0x64],0x6e007865
     55a:	65 77 5f             	gs ja  5bc <__abi_tag+0x240>
     55d:	68 61 73 68 4d       	push   0x4d687361
     562:	61                   	(bad)
     563:	70 00                	jo     565 <__abi_tag+0x1e9>
     565:	72 65                	jb     5cc <__abi_tag+0x250>
     567:	68 61 73 68 41       	push   0x41687361
     56c:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     570:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     572:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     574:	74 00                	je     576 <__abi_tag+0x1fa>
     576:	5f                   	pop    rdi
     577:	5f                   	pop    rdi
     578:	61                   	(bad)
     579:	73 73                	jae    5ee <__abi_tag+0x272>
     57b:	65 72 74             	gs jb  5f2 <__abi_tag+0x276>
     57e:	5f                   	pop    rdi
     57f:	66 61                	data16 (bad)
     581:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     588:	4d 
     589:	61                   	(bad)
     58a:	70 53                	jo     5df <__abi_tag+0x263>
     58c:	65 61                	gs (bad)
     58e:	72 63                	jb     5f3 <__abi_tag+0x277>
     590:	68 45 6c 65 6d       	push   0x6d656c45
     595:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     597:	74 00                	je     599 <__abi_tag+0x21d>
     599:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     59c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     59d:	74 65                	je     604 <__abi_tag+0x288>
     59f:	72 00                	jb     5a1 <__abi_tag+0x225>
     5a1:	6c                   	ins    BYTE PTR es:[rdi],dx
     5a2:	69 73 74 5f 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c655f
     5a9:	6d                   	ins    DWORD PTR es:[rdi],dx
     5aa:	73 00                	jae    5ac <__abi_tag+0x230>
     5ac:	72 65                	jb     613 <__abi_tag+0x297>
     5ae:	68 61 73 68 00       	push   0x687361
     5b3:	6c                   	ins    BYTE PTR es:[rdi],dx
     5b4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5b6:	67 74 68             	addr32 je 621 <__abi_tag+0x2a5>
     5b9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5bc:	73 74                	jae    632 <__abi_tag+0x2b6>
     5be:	61                   	(bad)
     5bf:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     5c2:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     5c5:	5f                   	pop    rdi
     5c6:	66 61                	data16 (bad)
     5c8:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     5cf:	4d 
     5d0:	61                   	(bad)
     5d1:	70 50                	jo     623 <__abi_tag+0x2a7>
     5d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5d4:	70 45                	jo     61b <__abi_tag+0x29f>
     5d6:	6c                   	ins    BYTE PTR es:[rdi],dx
     5d7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     5d9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5db:	74 00                	je     5dd <__abi_tag+0x261>
     5dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5de:	65 78 74             	gs js  655 <__abi_tag+0x2d9>
     5e1:	5f                   	pop    rdi
     5e2:	69 6e 78 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x78],0x315a5f00
     5e9:	31 68 61             	xor    DWORD PTR [rax+0x61],ebp
     5ec:	73 68                	jae    656 <__abi_tag+0x2da>
     5ee:	4d 61                	rex.WRB (bad)
     5f0:	70 43                	jo     635 <__abi_tag+0x2b9>
     5f2:	74 6f                	je     663 <__abi_tag+0x2e7>
     5f4:	72 50                	jb     646 <__abi_tag+0x2ca>
     5f6:	46 6a 38             	rex.RX push 0x38
     5f9:	73 74                	jae    66f <__abi_tag+0x2f3>
     5fb:	72 69                	jb     666 <__abi_tag+0x2ea>
     5fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5fe:	67 5f                	addr32 pop rdi
     600:	74 45                	je     647 <__abi_tag+0x2cb>
     602:	6a 00                	push   0x0
     604:	5f                   	pop    rdi
     605:	5f                   	pop    rdi
     606:	66 6d                	ins    WORD PTR es:[rdi],dx
     608:	74 00                	je     60a <__abi_tag+0x28e>
     60a:	62 75 69 6c 64       	(bad)
     60f:	53                   	push   rbx
     610:	74 72                	je     684 <__abi_tag+0x308>
     612:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     619:	79 00                	jns    61b <__abi_tag+0x29f>
     61b:	5f                   	pop    rdi
     61c:	5a                   	pop    rdx
     61d:	31 31                	xor    DWORD PTR [rcx],esi
     61f:	70 6f                	jo     690 <__abi_tag+0x314>
     621:	70 4c                	jo     66f <__abi_tag+0x2f3>
     623:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     62a:	50                   	push   rax
     62b:	34 4c                	xor    al,0x4c
     62d:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     634:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     63b:	5a                   	pop    rdx
     63c:	31 32                	xor    DWORD PTR [rdx],esi
     63e:	70 75                	jo     6b5 <__abi_tag+0x339>
     640:	73 68                	jae    6aa <__abi_tag+0x32e>
     642:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     649:	6d 
     64a:	50                   	push   rax
     64b:	34 4c                	xor    al,0x4c
     64d:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     654:	69 6e 67 5f 74 00 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6300745f
     65b:	61                   	(bad)
     65c:	6c                   	ins    BYTE PTR es:[rdi],dx
     65d:	6c                   	ins    BYTE PTR es:[rdi],dx
     65e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     65f:	63 00                	movsxd eax,DWORD PTR [rax]
     661:	5f                   	pop    rdi
     662:	5a                   	pop    rdx
     663:	32 30                	xor    dh,BYTE PTR [rax]
     665:	68 61 73 68 4d       	push   0x4d687361
     66a:	61                   	(bad)
     66b:	70 53                	jo     6c0 <__abi_tag+0x344>
     66d:	65 61                	gs (bad)
     66f:	72 63                	jb     6d4 <__abi_tag+0x358>
     671:	68 45 6c 65 6d       	push   0x6d656c45
     676:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     678:	74 50                	je     6ca <__abi_tag+0x34e>
     67a:	37                   	(bad)
     67b:	48 61                	rex.W (bad)
     67d:	73 68                	jae    6e7 <__abi_tag+0x36b>
     67f:	4d 61                	rex.WRB (bad)
     681:	70 38                	jo     6bb <__abi_tag+0x33f>
     683:	73 74                	jae    6f9 <__abi_tag+0x37d>
     685:	72 69                	jb     6f0 <__abi_tag+0x374>
     687:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     688:	67 5f                	addr32 pop rdi
     68a:	74 00                	je     68c <__abi_tag+0x310>
     68c:	73 74                	jae    702 <__abi_tag+0x386>
     68e:	72 69                	jb     6f9 <__abi_tag+0x37d>
     690:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     691:	67 5f                	addr32 pop rdi
     693:	61                   	(bad)
     694:	72 72                	jb     708 <__abi_tag+0x38c>
     696:	61                   	(bad)
     697:	79 00                	jns    699 <__abi_tag+0x31d>
     699:	5f                   	pop    rdi
     69a:	5a                   	pop    rdx
     69b:	31 37                	xor    DWORD PTR [rdi],esi
     69d:	68 61 73 68 4d       	push   0x4d687361
     6a2:	61                   	(bad)
     6a3:	70 41                	jo     6e6 <__abi_tag+0x36a>
     6a5:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     6a9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6ab:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6ad:	74 50                	je     6ff <__abi_tag+0x383>
     6af:	37                   	(bad)
     6b0:	48 61                	rex.W (bad)
     6b2:	73 68                	jae    71c <__abi_tag+0x3a0>
     6b4:	4d 61                	rex.WRB (bad)
     6b6:	70 38                	jo     6f0 <__abi_tag+0x374>
     6b8:	73 74                	jae    72e <__abi_tag+0x3b2>
     6ba:	72 69                	jb     725 <__abi_tag+0x3a9>
     6bc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6bd:	67 5f                	addr32 pop rdi
     6bf:	74 00                	je     6c1 <__abi_tag+0x345>
     6c1:	4c                   	rex.WR
     6c2:	49 53                	rex.WB push r11
     6c4:	54                   	push   rsp
     6c5:	5f                   	pop    rdi
     6c6:	42                   	rex.X
     6c7:	41 53                	push   r11
     6c9:	45 5f                	rex.RB pop r15
     6cb:	43                   	rex.XB
     6cc:	41 50                	push   r8
     6ce:	41                   	rex.B
     6cf:	43                   	rex.XB
     6d0:	49 54                	rex.WB push r12
     6d2:	59                   	pop    rcx
     6d3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     6d6:	31 37                	xor    DWORD PTR [rdi],esi
     6d8:	68 61 73 68 4d       	push   0x4d687361
     6dd:	61                   	(bad)
     6de:	70 50                	jo     730 <__abi_tag+0x3b4>
     6e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     6e1:	70 45                	jo     728 <__abi_tag+0x3ac>
     6e3:	6c                   	ins    BYTE PTR es:[rdi],dx
     6e4:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6e6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6e8:	74 50                	je     73a <__abi_tag+0x3be>
     6ea:	37                   	(bad)
     6eb:	48 61                	rex.W (bad)
     6ed:	73 68                	jae    757 <__abi_tag+0x3db>
     6ef:	4d 61                	rex.WRB (bad)
     6f1:	70 38                	jo     72b <__abi_tag+0x3af>
     6f3:	73 74                	jae    769 <__abi_tag+0x3ed>
     6f5:	72 69                	jb     760 <__abi_tag+0x3e4>
     6f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6f8:	67 5f                	addr32 pop rdi
     6fa:	74 00                	je     6fc <__abi_tag+0x380>
     6fc:	68 61 73 68 4d       	push   0x4d687361
     701:	61                   	(bad)
     702:	70 44                	jo     748 <__abi_tag+0x3cc>
     704:	74 6f                	je     775 <__abi_tag+0x3f9>
     706:	72 00                	jb     708 <__abi_tag+0x38c>
     708:	6c                   	ins    BYTE PTR es:[rdi],dx
     709:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     70a:	61                   	(bad)
     70b:	64 5f                	fs pop rdi
     70d:	66 61                	data16 (bad)
     70f:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     713:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     716:	73 68                	jae    780 <__abi_tag+0x404>
     718:	5f                   	pop    rdi
     719:	74 00                	je     71b <__abi_tag+0x39f>
     71b:	5f                   	pop    rdi
     71c:	5f                   	pop    rdi
     71d:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
     724:	75 6e                	jne    794 <__abi_tag+0x418>
     726:	73 69                	jae    791 <__abi_tag+0x415>
     728:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     72a:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     72f:	31 33                	xor    DWORD PTR [rbx],esi
     731:	5f                   	pop    rdi
     732:	6d                   	ins    DWORD PTR es:[rdi],dx
     733:	6d                   	ins    DWORD PTR es:[rdi],dx
     734:	5f                   	pop    rdi
     735:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     738:	33 32                	xor    esi,DWORD PTR [rdx]
     73a:	5f                   	pop    rdi
     73b:	75 36                	jne    773 <__abi_tag+0x3f7>
     73d:	34 79                	xor    al,0x79
     73f:	79 00                	jns    741 <__abi_tag+0x3c5>
     741:	73 75                	jae    7b8 <__abi_tag+0x43c>
     743:	6d                   	ins    DWORD PTR es:[rdi],dx
     744:	48 61                	rex.W (bad)
     746:	73 68                	jae    7b0 <__abi_tag+0x434>
     748:	53                   	push   rbx
     749:	74 72                	je     7bd <__abi_tag+0x441>
     74b:	69 6e 67 00 74 6d 70 	imul   ebp,DWORD PTR [rsi+0x67],0x706d7400
     752:	32 00                	xor    al,BYTE PTR [rax]
     754:	68 61 73 68 31       	push   0x31687361
     759:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     75c:	73 68                	jae    7c6 <__abi_tag+0x44a>
     75e:	32 00                	xor    al,BYTE PTR [rax]
     760:	68 61 73 68 33       	push   0x33687361
     765:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     768:	73 68                	jae    7d2 <__abi_tag+0x456>
     76a:	34 00                	xor    al,0x0
     76c:	74 6d                	je     7db <__abi_tag+0x45f>
     76e:	70 31                	jo     7a1 <__abi_tag+0x425>
     770:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
     773:	74 73                	je     7e8 <__abi_tag+0x46c>
     775:	52                   	push   rdx
     776:	65 76 65             	gs jbe 7de <__abi_tag+0x462>
     779:	72 73                	jb     7ee <__abi_tag+0x472>
     77b:	65 00 70 6f          	add    BYTE PTR gs:[rax+0x6f],dh
     77f:	6c                   	ins    BYTE PTR es:[rdi],dx
     780:	79 6e                	jns    7f0 <__abi_tag+0x474>
     782:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     783:	6d                   	ins    DWORD PTR es:[rdi],dx
     784:	69 61 6c 00 73 68 69 	imul   esp,DWORD PTR [rcx+0x6c],0x69687300
     78b:	66 74 00             	data16 je 78e <__abi_tag+0x412>
     78e:	5f                   	pop    rdi
     78f:	5a                   	pop    rdx
     790:	31 33                	xor    DWORD PTR [rbx],esi
     792:	73 75                	jae    809 <__abi_tag+0x48d>
     794:	6d                   	ins    DWORD PTR es:[rdi],dx
     795:	48 61                	rex.W (bad)
     797:	73 68                	jae    801 <__abi_tag+0x485>
     799:	53                   	push   rbx
     79a:	74 72                	je     80e <__abi_tag+0x492>
     79c:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     7a3:	69 6e 67 5f 74 00 72 	imul   ebp,DWORD PTR [rsi+0x67],0x7200745f
     7aa:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7ac:	61                   	(bad)
     7ad:	69 6e 64 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007265
     7b4:	5a                   	pop    rdx
     7b5:	31 33                	xor    DWORD PTR [rbx],esi
     7b7:	5f                   	pop    rdi
     7b8:	6d                   	ins    DWORD PTR es:[rdi],dx
     7b9:	6d                   	ins    DWORD PTR es:[rdi],dx
     7ba:	5f                   	pop    rdi
     7bb:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7be:	33 32                	xor    esi,DWORD PTR [rdx]
     7c0:	5f                   	pop    rdi
     7c1:	75 33                	jne    7f6 <__abi_tag+0x47a>
     7c3:	32 6a 6a             	xor    ch,BYTE PTR [rdx+0x6a]
     7c6:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
     7c9:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     7ce:	32 35 5f 6d 6d 5f    	xor    dh,BYTE PTR [rip+0x5f6d6d5f]        # 5f6d7533 <_end+0x5f6d151b>
     7d4:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7d7:	33 32                	xor    esi,DWORD PTR [rdx]
     7d9:	55                   	push   rbp
     7da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7db:	72 6f                	jb     84c <__abi_tag+0x4d0>
     7dd:	6c                   	ins    BYTE PTR es:[rdi],dx
     7de:	6c                   	ins    BYTE PTR es:[rdi],dx
     7df:	48 61                	rex.W (bad)
     7e1:	73 68                	jae    84b <__abi_tag+0x4cf>
     7e3:	53                   	push   rbx
     7e4:	74 72                	je     858 <__abi_tag+0x4dc>
     7e6:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     7ed:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     7f4:	6d                   	ins    DWORD PTR es:[rdi],dx
     7f5:	6d                   	ins    DWORD PTR es:[rdi],dx
     7f6:	5f                   	pop    rdi
     7f7:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7fa:	33 32                	xor    esi,DWORD PTR [rdx]
     7fc:	55                   	push   rbp
     7fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fe:	72 6f                	jb     86f <__abi_tag+0x4f3>
     800:	6c                   	ins    BYTE PTR es:[rdi],dx
     801:	6c                   	ins    BYTE PTR es:[rdi],dx
     802:	48 61                	rex.W (bad)
     804:	73 68                	jae    86e <__abi_tag+0x4f2>
     806:	53                   	push   rbx
     807:	74 72                	je     87b <__abi_tag+0x4ff>
     809:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     810:	35 63 72 63 33       	xor    eax,0x33637263
     815:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     818:	73 68                	jae    882 <__abi_tag+0x506>
     81a:	53                   	push   rbx
     81b:	74 72                	je     88f <__abi_tag+0x513>
     81d:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     824:	69 6e 67 5f 74 00 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6100745f
     82b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     82d:	65 72 33             	gs jb  863 <__abi_tag+0x4e7>
     830:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     833:	73 68                	jae    89d <__abi_tag+0x521>
     835:	53                   	push   rbx
     836:	74 72                	je     8aa <__abi_tag+0x52e>
     838:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     83f:	33 65 6c             	xor    esp,DWORD PTR [rbp+0x6c]
     842:	66 48 61             	data16 rex.W (bad)
     845:	73 68                	jae    8af <__abi_tag+0x533>
     847:	53                   	push   rbx
     848:	74 72                	je     8bc <__abi_tag+0x540>
     84a:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     851:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     858:	5a                   	pop    rdx
     859:	31 37                	xor    DWORD PTR [rdi],esi
     85b:	61                   	(bad)
     85c:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     85e:	65 72 33             	gs jb  894 <__abi_tag+0x518>
     861:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     864:	73 68                	jae    8ce <__abi_tag+0x552>
     866:	53                   	push   rbx
     867:	74 72                	je     8db <__abi_tag+0x55f>
     869:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     870:	69 6e 67 5f 74 00 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d00745f
     877:	75 72                	jne    8eb <__abi_tag+0x56f>
     879:	6d                   	ins    DWORD PTR es:[rdi],dx
     87a:	75 72                	jne    8ee <__abi_tag+0x572>
     87c:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     87f:	73 68                	jae    8e9 <__abi_tag+0x56d>
     881:	53                   	push   rbx
     882:	74 72                	je     8f6 <__abi_tag+0x57a>
     884:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     88b:	5f                   	pop    rdi
     88c:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     88f:	33 32                	xor    esi,DWORD PTR [rdx]
     891:	5f                   	pop    rdi
     892:	75 33                	jne    8c7 <__abi_tag+0x54b>
     894:	32 00                	xor    al,BYTE PTR [rax]
     896:	5f                   	pop    rdi
     897:	5f                   	pop    rdi
     898:	75 69                	jne    903 <__abi_tag+0x587>
     89a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     89b:	74 36                	je     8d3 <__abi_tag+0x557>
     89d:	34 5f                	xor    al,0x5f
     89f:	74 00                	je     8a1 <__abi_tag+0x525>
     8a1:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     8a3:	66 48 61             	data16 rex.W (bad)
     8a6:	73 68                	jae    910 <__abi_tag+0x594>
     8a8:	53                   	push   rbx
     8a9:	74 72                	je     91d <__abi_tag+0x5a1>
     8ab:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8b2:	5f                   	pop    rdi
     8b3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8b6:	33 32                	xor    esi,DWORD PTR [rdx]
     8b8:	48 61                	rex.W (bad)
     8ba:	73 68                	jae    924 <__abi_tag+0x5a8>
     8bc:	53                   	push   rbx
     8bd:	74 72                	je     931 <__abi_tag+0x5b5>
     8bf:	69 6e 67 00 6d 6f 64 	imul   ebp,DWORD PTR [rsi+0x67],0x646f6d00
     8c6:	5f                   	pop    rdi
     8c7:	61                   	(bad)
     8c8:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8ca:	65 72 00             	gs jb  8cd <__abi_tag+0x551>
     8cd:	78 6f                	js     93e <__abi_tag+0x5c2>
     8cf:	72 5f                	jb     930 <__abi_tag+0x5b4>
     8d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8d2:	75 6d                	jne    941 <__abi_tag+0x5c5>
     8d4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8d7:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
     8de:	00 68 69             	add    BYTE PTR [rax+0x69],ch
     8e1:	67 68 00 5f 5a 31    	addr32 push 0x315a5f00
     8e7:	37                   	(bad)
     8e8:	6d                   	ins    DWORD PTR es:[rdi],dx
     8e9:	75 72                	jne    95d <__abi_tag+0x5e1>
     8eb:	6d                   	ins    DWORD PTR es:[rdi],dx
     8ec:	75 72                	jne    960 <__abi_tag+0x5e4>
     8ee:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     8f1:	73 68                	jae    95b <__abi_tag+0x5df>
     8f3:	53                   	push   rbx
     8f4:	74 72                	je     968 <__abi_tag+0x5ec>
     8f6:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     8fd:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     904:	5a                   	pop    rdx
     905:	31 39                	xor    DWORD PTR [rcx],edi
     907:	5f                   	pop    rdi
     908:	6d                   	ins    DWORD PTR es:[rdi],dx
     909:	6d                   	ins    DWORD PTR es:[rdi],dx
     90a:	5f                   	pop    rdi
     90b:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     90e:	33 32                	xor    esi,DWORD PTR [rdx]
     910:	48 61                	rex.W (bad)
     912:	73 68                	jae    97c <__abi_tag+0x600>
     914:	53                   	push   rbx
     915:	74 72                	je     989 <__abi_tag+0x60d>
     917:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     91e:	69 6e 67 5f 74 00 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6300745f
     925:	68 61 72 73 00       	push   0x737261
     92a:	5f                   	pop    rdi
     92b:	6d                   	ins    DWORD PTR es:[rdi],dx
     92c:	6d                   	ins    DWORD PTR es:[rdi],dx
     92d:	5f                   	pop    rdi
     92e:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     931:	33 32                	xor    esi,DWORD PTR [rdx]
     933:	5f                   	pop    rdi
     934:	75 36                	jne    96c <__abi_tag+0x5f0>
     936:	34 00                	xor    al,0x0
     938:	72 65                	jb     99f <__abi_tag+0x623>
     93a:	73 75                	jae    9b1 <__abi_tag+0x635>
     93c:	6c                   	ins    BYTE PTR es:[rdi],dx
     93d:	74 00                	je     93f <__abi_tag+0x5c3>
     93f:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     942:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     949:	6d 
     94a:	73 00                	jae    94c <__abi_tag+0x5d0>
     94c:	72 65                	jb     9b3 <__abi_tag+0x637>
     94e:	73 69                	jae    9b9 <__abi_tag+0x63d>
     950:	7a 65                	jp     9b7 <__abi_tag+0x63b>
     952:	55                   	push   rbp
     953:	70 00                	jo     955 <__abi_tag+0x5d9>
     955:	5f                   	pop    rdi
     956:	5f                   	pop    rdi
     957:	62 75 69 6c 74       	(bad)
     95c:	69 6e 5f 70 75 74 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63747570
     963:	68 61 72 00 6f       	push   0x6f007261
     968:	6c                   	ins    BYTE PTR es:[rdi],dx
     969:	64 5f                	fs pop rdi
     96b:	6c                   	ins    BYTE PTR es:[rdi],dx
     96c:	61                   	(bad)
     96d:	73 74                	jae    9e3 <__abi_tag+0x667>
     96f:	5f                   	pop    rdi
     970:	69 6e 78 00 64 61 74 	imul   ebp,DWORD PTR [rsi+0x78],0x74616400
     977:	61                   	(bad)
     978:	31 00                	xor    DWORD PTR [rax],eax
     97a:	6d                   	ins    DWORD PTR es:[rdi],dx
     97b:	79 5f                	jns    9dc <__abi_tag+0x660>
     97d:	73 74                	jae    9f3 <__abi_tag+0x677>
     97f:	72 63                	jb     9e4 <__abi_tag+0x668>
     981:	6d                   	ins    DWORD PTR es:[rdi],dx
     982:	70 00                	jo     984 <__abi_tag+0x608>
     984:	64 61                	fs (bad)
     986:	74 61                	je     9e9 <__abi_tag+0x66d>
     988:	32 00                	xor    al,BYTE PTR [rax]
     98a:	72 65                	jb     9f1 <__abi_tag+0x675>
     98c:	61                   	(bad)
     98d:	6c                   	ins    BYTE PTR es:[rdi],dx
     98e:	6c                   	ins    BYTE PTR es:[rdi],dx
     98f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     990:	63 00                	movsxd eax,DWORD PTR [rax]
     992:	5f                   	pop    rdi
     993:	5f                   	pop    rdi
     994:	67 69 64 5f 74 00 73 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x5f747300
     99b:	74 5f 
     99d:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     9a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9a4:	72 65                	jb     a0b <__abi_tag+0x68f>
     9a6:	61                   	(bad)
     9a7:	64 5f                	fs pop rdi
     9a9:	61                   	(bad)
     9aa:	6c                   	ins    BYTE PTR es:[rdi],dx
     9ab:	69 61 73 00 5f 5f 70 	imul   esp,DWORD PTR [rcx+0x73],0x705f5f00
     9b2:	61                   	(bad)
     9b3:	74 68                	je     a1d <__abi_tag+0x6a1>
     9b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     9b8:	31 30                	xor    DWORD PTR [rax],esi
     9ba:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     9bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9be:	74 4c                	je     a0c <__abi_tag+0x690>
     9c0:	69 6e 65 73 50 63 6d 	imul   ebp,DWORD PTR [rsi+0x65],0x6d635073
     9c7:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     9ca:	61                   	(bad)
     9cb:	64 46 69 6c 65 00 5f 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x72385a5f
     9d2:	5a 38 72 
     9d5:	65 61                	gs (bad)
     9d7:	64 46 69 6c 65 50 4b 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x50],0x6d50634b
     9de:	63 50 6d 
     9e1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9e5:	70 65                	jo     a4c <__abi_tag+0x6d0>
     9e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9e8:	5f                   	pop    rdi
     9e9:	74 6f                	je     a5a <__abi_tag+0x6de>
     9eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9ec:	5f                   	pop    rdi
     9ed:	6d                   	ins    DWORD PTR es:[rdi],dx
     9ee:	61                   	(bad)
     9ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9f0:	79 5f                	jns    a51 <__abi_tag+0x6d5>
     9f2:	61                   	(bad)
     9f3:	72 67                	jb     a5c <__abi_tag+0x6e0>
     9f5:	73 00                	jae    9f7 <__abi_tag+0x67b>
     9f7:	5f                   	pop    rdi
     9f8:	5f                   	pop    rdi
     9f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9fa:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     9fc:	61                   	(bad)
     9fd:	67 00 73 74          	add    BYTE PTR [ebx+0x74],dh
     a01:	5f                   	pop    rdi
     a02:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
     a09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a0a:	64 65 5f             	fs gs pop rdi
     a0d:	74 00                	je     a0f <__abi_tag+0x693>
     a0f:	5f                   	pop    rdi
     a10:	5f                   	pop    rdi
     a11:	62 6c 6b             	(bad)  {k3}
     a14:	63 6e 74             	movsxd ebp,DWORD PTR [rsi+0x74]
     a17:	5f                   	pop    rdi
     a18:	74 00                	je     a1a <__abi_tag+0x69e>
     a1a:	5f                   	pop    rdi
     a1b:	5f                   	pop    rdi
     a1c:	73 73                	jae    a91 <__abi_tag+0x715>
     a1e:	69 7a 65 5f 74 00 64 	imul   edi,DWORD PTR [rdx+0x65],0x6400745f
     a25:	75 6d                	jne    a94 <__abi_tag+0x718>
     a27:	6d                   	ins    DWORD PTR es:[rdi],dx
     a28:	79 00                	jns    a2a <__abi_tag+0x6ae>
     a2a:	73 74                	jae    aa0 <__abi_tag+0x724>
     a2c:	5f                   	pop    rdi
     a2d:	62 6c 6f             	(bad)  {k3}
     a30:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     a33:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a36:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a37:	62 79 74 65 73       	(bad)
     a3c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     a3f:	5f                   	pop    rdi
     a40:	75 69                	jne    aab <__abi_tag+0x72f>
     a42:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     a46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a47:	70 65                	jo     aae <__abi_tag+0x732>
     a49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a4a:	5f                   	pop    rdi
     a4b:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4c:	69 73 73 69 6e 67 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
     a53:	6d                   	ins    DWORD PTR es:[rdi],dx
     a54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a55:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
     a5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a5b:	6c                   	ins    BYTE PTR es:[rdi],dx
     a5c:	69 6e 6b 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f00745f
     a63:	5f                   	pop    rdi
     a64:	72 65                	jb     acb <__abi_tag+0x74f>
     a66:	61                   	(bad)
     a67:	64 5f                	fs pop rdi
     a69:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     a6c:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     a6f:	75 6e                	jne    adf <__abi_tag+0x763>
     a71:	74 4c                	je     abf <__abi_tag+0x743>
     a73:	69 6e 65 73 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0073
     a7a:	66 64 00 73 74       	data16 add BYTE PTR fs:[rbx+0x74],dh
     a7f:	5f                   	pop    rdi
     a80:	73 69                	jae    aeb <__abi_tag+0x76f>
     a82:	7a 65                	jp     ae9 <__abi_tag+0x76d>
     a84:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a88:	70 65                	jo     aef <__abi_tag+0x773>
     a8a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a8b:	5f                   	pop    rdi
     a8c:	32 00                	xor    al,BYTE PTR [rax]
     a8e:	73 74                	jae    b04 <__abi_tag+0x788>
     a90:	5f                   	pop    rdi
     a91:	6d                   	ins    DWORD PTR es:[rdi],dx
     a92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a93:	64 65 00 73 74       	fs add BYTE PTR gs:[rbx+0x74],dh
     a98:	5f                   	pop    rdi
     a99:	61                   	(bad)
     a9a:	74 69                	je     b05 <__abi_tag+0x789>
     a9c:	6d                   	ins    DWORD PTR es:[rdi],dx
     a9d:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
     aa1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aa2:	73 65                	jae    b09 <__abi_tag+0x78d>
     aa4:	63 00                	movsxd eax,DWORD PTR [rax]
     aa6:	5f                   	pop    rdi
     aa7:	5f                   	pop    rdi
     aa8:	64 65 76 5f          	fs gs jbe b0b <__abi_tag+0x78f>
     aac:	74 00                	je     aae <__abi_tag+0x732>
     aae:	74 76                	je     b26 <__abi_tag+0x7aa>
     ab0:	5f                   	pop    rdi
     ab1:	73 65                	jae    b18 <__abi_tag+0x79c>
     ab3:	63 00                	movsxd eax,DWORD PTR [rax]
     ab5:	5f                   	pop    rdi
     ab6:	5f                   	pop    rdi
     ab7:	73 79                	jae    b32 <__abi_tag+0x7b6>
     ab9:	73 63                	jae    b1e <__abi_tag+0x7a2>
     abb:	61                   	(bad)
     abc:	6c                   	ins    BYTE PTR es:[rdi],dx
     abd:	6c                   	ins    BYTE PTR es:[rdi],dx
     abe:	5f                   	pop    rdi
     abf:	73 6c                	jae    b2d <__abi_tag+0x7b1>
     ac1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ac2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ac3:	67 5f                	addr32 pop rdi
     ac5:	74 00                	je     ac7 <__abi_tag+0x74b>
     ac7:	66 69 6c 65 5f 73 74 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7473
     ace:	61                   	(bad)
     acf:	74 00                	je     ad1 <__abi_tag+0x755>
     ad1:	5f                   	pop    rdi
     ad2:	5f                   	pop    rdi
     ad3:	62                   	(bad)
     ad4:	6c                   	ins    BYTE PTR es:[rdi],dx
     ad5:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     ad9:	65 5f                	gs pop rdi
     adb:	74 00                	je     add <__abi_tag+0x761>
     add:	5f                   	pop    rdi
     ade:	5f                   	pop    rdi
     adf:	62 75 66 00 5f 5f 70 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xe0]
     ae6:	61                   	(bad)
     ae7:	64 30 00             	xor    BYTE PTR fs:[rax],al
     aea:	5f                   	pop    rdi
     aeb:	5f                   	pop    rdi
     aec:	67 6c                	ins    BYTE PTR es:[edi],dx
     aee:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
     af5:	65 72 76             	gs jb  b6e <__abi_tag+0x7f2>
     af8:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
     afd:	5f                   	pop    rdi
     afe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aff:	6c                   	ins    BYTE PTR es:[rdi],dx
     b00:	69 6e 6b 00 73 74 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f747300
     b07:	62                   	(bad)
     b08:	6c                   	ins    BYTE PTR es:[rdi],dx
     b09:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b0d:	65 00 74 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
     b12:	65 73 70             	gs jae b85 <__abi_tag+0x809>
     b15:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
     b18:	5f                   	pop    rdi
     b19:	5f                   	pop    rdi
     b1a:	69 6e 6f 5f 74 00 66 	imul   ebp,DWORD PTR [rsi+0x6f],0x6600745f
     b21:	69 6c 65 5f 64 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
     b28:	63 
     b29:	72 00                	jb     b2b <__abi_tag+0x7af>
     b2b:	73 74                	jae    ba1 <__abi_tag+0x825>
     b2d:	5f                   	pop    rdi
     b2e:	72 64                	jb     b94 <__abi_tag+0x818>
     b30:	65 76 00             	gs jbe b33 <__abi_tag+0x7b7>
     b33:	5f                   	pop    rdi
     b34:	5f                   	pop    rdi
     b35:	75 69                	jne    ba0 <__abi_tag+0x824>
     b37:	64 5f                	fs pop rdi
     b39:	74 00                	je     b3b <__abi_tag+0x7bf>
     b3b:	73 74                	jae    bb1 <__abi_tag+0x835>
     b3d:	5f                   	pop    rdi
     b3e:	67 69 64 00 5f 5f 74 	imul   esp,DWORD PTR [eax+eax*1+0x5f],0x6d69745f
     b45:	69 6d 
     b47:	65 5f                	gs pop rdi
     b49:	74 00                	je     b4b <__abi_tag+0x7cf>
     b4b:	5f                   	pop    rdi
     b4c:	5f                   	pop    rdi
     b4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b4e:	66 66 5f             	data16 pop di
     b51:	74 00                	je     b53 <__abi_tag+0x7d7>
     b53:	73 74                	jae    bc9 <__abi_tag+0x84d>
     b55:	5f                   	pop    rdi
     b56:	64 65 76 00          	fs gs jbe b5a <__abi_tag+0x7de>
     b5a:	5f                   	pop    rdi
     b5b:	5f                   	pop    rdi
     b5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b5d:	70 65                	jo     bc4 <__abi_tag+0x848>
     b5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b60:	5f                   	pop    rdi
     b61:	61                   	(bad)
     b62:	6c                   	ins    BYTE PTR es:[rdi],dx
     b63:	69 61 73 00 6e 65 77 	imul   esp,DWORD PTR [rcx+0x73],0x77656e00
     b6a:	5f                   	pop    rdi
     b6b:	74 65                	je     bd2 <__abi_tag+0x856>
     b6d:	78 74                	js     be3 <__abi_tag+0x867>
     b6f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     b72:	5f                   	pop    rdi
     b73:	6d                   	ins    DWORD PTR es:[rdi],dx
     b74:	74 69                	je     bdf <__abi_tag+0x863>
     b76:	6d                   	ins    DWORD PTR es:[rdi],dx
     b77:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b7a:	72 65                	jb     be1 <__abi_tag+0x865>
     b7c:	61                   	(bad)
     b7d:	64 5f                	fs pop rdi
     b7f:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     b82:	5f                   	pop    rdi
     b83:	77 61                	ja     be6 <__abi_tag+0x86a>
     b85:	72 6e                	jb     bf5 <__abi_tag+0x879>
     b87:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
     b8a:	6c                   	ins    BYTE PTR es:[rdi],dx
     b8b:	65 5f                	gs pop rdi
     b8d:	73 69                	jae    bf8 <__abi_tag+0x87c>
     b8f:	7a 65                	jp     bf6 <__abi_tag+0x87a>
     b91:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
     b94:	69 6d 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rbp+0x0],0x74535a5f
     b9b:	34 66                	xor    al,0x66
     b9d:	6d                   	ins    DWORD PTR es:[rdi],dx
     b9e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b9f:	64 65 65 00 5f 5a    	fs gs add BYTE PTR gs:[rdi+0x5a],bl
     ba5:	4e 53                	rex.WRX push rbx
     ba7:	74 36                	je     bdf <__abi_tag+0x863>
     ba9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     baf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     bb3:	61                   	(bad)
     bb4:	74 69                	je     c1f <__abi_tag+0x8a3>
     bb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     bba:	53                   	push   rbx
     bbb:	74 35                	je     bf2 <__abi_tag+0x876>
     bbd:	72 61                	jb     c20 <__abi_tag+0x8a4>
     bbf:	74 69                	je     c2a <__abi_tag+0x8ae>
     bc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bc2:	49                   	rex.WB
     bc3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     bc5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     bc8:	6c                   	ins    BYTE PTR es:[rdi],dx
     bc9:	31 30                	xor    DWORD PTR [rax],esi
     bcb:	30 30                	xor    BYTE PTR [rax],dh
     bcd:	30 30                	xor    BYTE PTR [rax],dh
     bcf:	30 30                	xor    BYTE PTR [rax],dh
     bd1:	30 30                	xor    BYTE PTR [rax],dh
     bd3:	45                   	rex.RB
     bd4:	45                   	rex.RB
     bd5:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     bd7:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd8:	45 76 00             	rex.RB jbe bdb <__abi_tag+0x85f>
     bdb:	66 67 65 74 63       	data16 addr32 gs je c43 <__abi_tag+0x8c7>
     be0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     be3:	53                   	push   rbx
     be4:	74 36                	je     c1c <__abi_tag+0x8a0>
     be6:	73 63                	jae    c4b <__abi_tag+0x8cf>
     be8:	61                   	(bad)
     be9:	6c                   	ins    BYTE PTR es:[rdi],dx
     bea:	62 6e 66 69 00       	(bad)
     bef:	5f                   	pop    rdi
     bf0:	5a                   	pop    rdx
     bf1:	53                   	push   rbx
     bf2:	74 37                	je     c2b <__abi_tag+0x8af>
     bf4:	73 69                	jae    c5f <__abi_tag+0x8e3>
     bf6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     bf8:	62 69 74 64 00       	(bad)
     bfd:	5f                   	pop    rdi
     bfe:	5a                   	pop    rdx
     bff:	53                   	push   rbx
     c00:	74 37                	je     c39 <__abi_tag+0x8bd>
     c02:	73 69                	jae    c6d <__abi_tag+0x8f1>
     c04:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c06:	62 69 74 66 00       	(bad)
     c0b:	5f                   	pop    rdi
     c0c:	5a                   	pop    rdx
     c0d:	4e 53                	rex.WRX push rbx
     c0f:	74 36                	je     c47 <__abi_tag+0x8cb>
     c11:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c15:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c16:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c17:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c1b:	61                   	(bad)
     c1c:	74 69                	je     c87 <__abi_tag+0x90b>
     c1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c20:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c22:	53                   	push   rbx
     c23:	74 35                	je     c5a <__abi_tag+0x8de>
     c25:	72 61                	jb     c88 <__abi_tag+0x90c>
     c27:	74 69                	je     c92 <__abi_tag+0x916>
     c29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c2a:	49                   	rex.WB
     c2b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c2d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c30:	6c                   	ins    BYTE PTR es:[rdi],dx
     c31:	31 30                	xor    DWORD PTR [rax],esi
     c33:	30 30                	xor    BYTE PTR [rax],dh
     c35:	30 30                	xor    BYTE PTR [rax],dh
     c37:	30 30                	xor    BYTE PTR [rax],dh
     c39:	30 30                	xor    BYTE PTR [rax],dh
     c3b:	45                   	rex.RB
     c3c:	45                   	rex.RB
     c3d:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
     c41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c42:	45 76 00             	rex.RB jbe c45 <__abi_tag+0x8c9>
     c45:	66 67 65 74 73       	data16 addr32 gs je cbd <__abi_tag+0x941>
     c4a:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     c4e:	68 6f 75 72 00       	push   0x72756f
     c53:	5f                   	pop    rdi
     c54:	5f                   	pop    rdi
     c55:	76 61                	jbe    cb8 <__abi_tag+0x93c>
     c57:	6c                   	ins    BYTE PTR es:[rdi],dx
     c58:	75 65                	jne    cbf <__abi_tag+0x943>
     c5a:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
     c5d:	6c                   	ins    BYTE PTR es:[rdi],dx
     c5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c5f:	61                   	(bad)
     c60:	74 36                	je     c98 <__abi_tag+0x91c>
     c62:	34 78                	xor    al,0x78
     c64:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c67:	53                   	push   rbx
     c68:	74 34                	je     c9e <__abi_tag+0x922>
     c6a:	66 6d                	ins    WORD PTR es:[rdi],dx
     c6c:	69 6e 66 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f0066
     c73:	53                   	push   rbx
     c74:	74 35                	je     cab <__abi_tag+0x92f>
     c76:	6c                   	ins    BYTE PTR es:[rdi],dx
     c77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c78:	67 31 30             	xor    DWORD PTR [eax],esi
     c7b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     c7f:	53                   	push   rbx
     c80:	74 35                	je     cb7 <__abi_tag+0x93b>
     c82:	6c                   	ins    BYTE PTR es:[rdi],dx
     c83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c84:	67 31 30             	xor    DWORD PTR [eax],esi
     c87:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     c8b:	4e 53                	rex.WRX push rbx
     c8d:	74 36                	je     cc5 <__abi_tag+0x949>
     c8f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c95:	31 30                	xor    DWORD PTR [rax],esi
     c97:	74 69                	je     d02 <__abi_tag+0x986>
     c99:	6d                   	ins    DWORD PTR es:[rdi],dx
     c9a:	65 5f                	gs pop rdi
     c9c:	70 6f                	jo     d0d <__abi_tag+0x991>
     c9e:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     ca5:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     ca8:	32 31                	xor    dh,BYTE PTR [rcx]
     caa:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     cad:	65 61                	gs (bad)
     caf:	64 79 5f             	fs jns d11 <__abi_tag+0x995>
     cb2:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     cb6:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     cba:	5f                   	pop    rdi
     cbb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     cbf:	61                   	(bad)
     cc0:	74 69                	je     d2b <__abi_tag+0x9af>
     cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cc4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     cc6:	53                   	push   rbx
     cc7:	74 35                	je     cfe <__abi_tag+0x982>
     cc9:	72 61                	jb     d2c <__abi_tag+0x9b0>
     ccb:	74 69                	je     d36 <__abi_tag+0x9ba>
     ccd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cce:	49                   	rex.WB
     ccf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     cd1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     cd4:	6c                   	ins    BYTE PTR es:[rdi],dx
     cd5:	31 30                	xor    DWORD PTR [rax],esi
     cd7:	30 30                	xor    BYTE PTR [rax],dh
     cd9:	30 30                	xor    BYTE PTR [rax],dh
     cdb:	30 30                	xor    BYTE PTR [rax],dh
     cdd:	30 30                	xor    BYTE PTR [rax],dh
     cdf:	45                   	rex.RB
     ce0:	45                   	rex.RB
     ce1:	45                   	rex.RB
     ce2:	45                   	rex.RB
     ce3:	45                   	rex.RB
     ce4:	43 34 45             	rex.XB xor al,0x45
     ce7:	52                   	push   rdx
     ce8:	4b 53                	rex.WXB push r11
     cea:	36 5f                	ss pop rdi
     cec:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     cef:	72 6f                	jb     d60 <__abi_tag+0x9e4>
     cf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cf2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cf3:	5f                   	pop    rdi
     cf4:	6c                   	ins    BYTE PTR es:[rdi],dx
     cf5:	69 74 65 72 61 6c 73 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x736c61
     cfc:	00 
     cfd:	69 6e 64 65 78 5f 61 	imul   ebp,DWORD PTR [rsi+0x64],0x615f7865
     d04:	72 72                	jb     d78 <__abi_tag+0x9fc>
     d06:	61                   	(bad)
     d07:	79 00                	jns    d09 <__abi_tag+0x98d>
     d09:	74 65                	je     d70 <__abi_tag+0x9f4>
     d0b:	73 74                	jae    d81 <__abi_tag+0xa05>
     d0d:	5f                   	pop    rdi
     d0e:	64 61                	fs (bad)
     d10:	74 61                	je     d73 <__abi_tag+0x9f7>
     d12:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d15:	4e 53                	rex.WRX push rbx
     d17:	74 36                	je     d4f <__abi_tag+0x9d3>
     d19:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     d1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d23:	61                   	(bad)
     d24:	74 69                	je     d8f <__abi_tag+0xa13>
     d26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d28:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d2a:	53                   	push   rbx
     d2b:	74 35                	je     d62 <__abi_tag+0x9e6>
     d2d:	72 61                	jb     d90 <__abi_tag+0xa14>
     d2f:	74 69                	je     d9a <__abi_tag+0xa1e>
     d31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d32:	49                   	rex.WB
     d33:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d35:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d38:	6c                   	ins    BYTE PTR es:[rdi],dx
     d39:	31 30                	xor    DWORD PTR [rax],esi
     d3b:	30 30                	xor    BYTE PTR [rax],dh
     d3d:	30 30                	xor    BYTE PTR [rax],dh
     d3f:	30 30                	xor    BYTE PTR [rax],dh
     d41:	30 30                	xor    BYTE PTR [rax],dh
     d43:	45                   	rex.RB
     d44:	45                   	rex.RB
     d45:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     d47:	4c                   	rex.WR
     d48:	45 52                	rex.RB push r10
     d4a:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
     d4c:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     d4f:	6d                   	ins    DWORD PTR es:[rdi],dx
     d50:	5f                   	pop    rdi
     d51:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
     d58:	5f                   	pop    rdi
     d59:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     d5b:	61                   	(bad)
     d5c:	62                   	(bad)
     d5d:	6c                   	ins    BYTE PTR es:[rdi],dx
     d5e:	65 5f                	gs pop rdi
     d60:	69 66 5f 69 73 5f 64 	imul   esp,DWORD PTR [rsi+0x5f],0x645f7369
     d67:	75 72                	jne    ddb <__abi_tag+0xa5f>
     d69:	61                   	(bad)
     d6a:	74 69                	je     dd5 <__abi_tag+0xa59>
     d6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d6e:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
     d72:	65 5f                	gs pop rdi
     d74:	70 6f                	jo     de5 <__abi_tag+0xa69>
     d76:	69 6e 74 00 7e 64 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75647e00
     d7d:	72 61                	jb     de0 <__abi_tag+0xa64>
     d7f:	74 69                	je     dea <__abi_tag+0xa6e>
     d81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d82:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d83:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
     d86:	75 74                	jne    dfc <__abi_tag+0xa80>
     d88:	77 73                	ja     dfd <__abi_tag+0xa81>
     d8a:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     d8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d8e:	74 5f                	je     def <__abi_tag+0xa73>
     d90:	66 61                	data16 (bad)
     d92:	73 74                	jae    e08 <__abi_tag+0xa8c>
     d94:	36 34 5f             	ss xor al,0x5f
     d97:	74 00                	je     d99 <__abi_tag+0xa1d>
     d99:	5f                   	pop    rdi
     d9a:	5f                   	pop    rdi
     d9b:	75 69                	jne    e06 <__abi_tag+0xa8a>
     d9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d9e:	74 5f                	je     dff <__abi_tag+0xa83>
     da0:	6c                   	ins    BYTE PTR es:[rdi],dx
     da1:	65 61                	gs (bad)
     da3:	73 74                	jae    e19 <__abi_tag+0xa9d>
     da5:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
     da8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     dab:	4f 5f                	rex.WRXB pop r15
     dad:	73 61                	jae    e10 <__abi_tag+0xa94>
     daf:	76 65                	jbe    e16 <__abi_tag+0xa9a>
     db1:	5f                   	pop    rdi
     db2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     db4:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     db8:	4e 53                	rex.WRX push rbx
     dba:	74 36                	je     df2 <__abi_tag+0xa76>
     dbc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     dbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dc2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     dc6:	61                   	(bad)
     dc7:	74 69                	je     e32 <__abi_tag+0xab6>
     dc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dcb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     dcd:	53                   	push   rbx
     dce:	74 35                	je     e05 <__abi_tag+0xa89>
     dd0:	72 61                	jb     e33 <__abi_tag+0xab7>
     dd2:	74 69                	je     e3d <__abi_tag+0xac1>
     dd4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dd5:	49                   	rex.WB
     dd6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     dd8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ddb:	6c                   	ins    BYTE PTR es:[rdi],dx
     ddc:	31 30                	xor    DWORD PTR [rax],esi
     dde:	30 30                	xor    BYTE PTR [rax],dh
     de0:	30 30                	xor    BYTE PTR [rax],dh
     de2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
     de5:	45 70 4c             	rex.RB jo e34 <__abi_tag+0xab8>
     de8:	45 52                	rex.RB push r10
     dea:	4b 53                	rex.WXB push r11
     dec:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     def:	73 71                	jae    e62 <__abi_tag+0xae6>
     df1:	72 74                	jb     e67 <__abi_tag+0xaeb>
     df3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     df6:	53                   	push   rbx
     df7:	74 33                	je     e2c <__abi_tag+0xab0>
     df9:	65 78 70             	gs js  e6c <__abi_tag+0xaf0>
     dfc:	65 00 61 73          	add    BYTE PTR gs:[rcx+0x73],ah
     e00:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     e04:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e08:	53                   	push   rbx
     e09:	74 39                	je     e44 <__abi_tag+0xac8>
     e0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e0c:	65 78 74             	gs js  e83 <__abi_tag+0xb07>
     e0f:	61                   	(bad)
     e10:	66 74 65             	data16 je e78 <__abi_tag+0xafc>
     e13:	72 65                	jb     e7a <__abi_tag+0xafe>
     e15:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
     e19:	73 63                	jae    e7e <__abi_tag+0xb02>
     e1b:	73 70                	jae    e8d <__abi_tag+0xb11>
     e1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e1e:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     e21:	5f                   	pop    rdi
     e22:	67 63 64 00 66       	movsxd esp,DWORD PTR [eax+eax*1+0x66]
     e27:	6d                   	ins    DWORD PTR es:[rdi],dx
     e28:	69 6e 00 6c 6f 63 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61636f6c
     e2f:	6c                   	ins    BYTE PTR es:[rdi],dx
     e30:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
     e34:	76 00                	jbe    e36 <__abi_tag+0xaba>
     e36:	5f                   	pop    rdi
     e37:	5a                   	pop    rdx
     e38:	53                   	push   rbx
     e39:	74 36                	je     e71 <__abi_tag+0xaf5>
     e3b:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3c:	67 61                	addr32 (bad)
     e3e:	6d                   	ins    DWORD PTR es:[rdi],dx
     e3f:	6d                   	ins    DWORD PTR es:[rdi],dx
     e40:	61                   	(bad)
     e41:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e45:	53                   	push   rbx
     e46:	74 36                	je     e7e <__abi_tag+0xb02>
     e48:	6c                   	ins    BYTE PTR es:[rdi],dx
     e49:	67 61                	addr32 (bad)
     e4b:	6d                   	ins    DWORD PTR es:[rdi],dx
     e4c:	6d                   	ins    DWORD PTR es:[rdi],dx
     e4d:	61                   	(bad)
     e4e:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
     e52:	61                   	(bad)
     e53:	72 63                	jb     eb8 <__abi_tag+0xb3c>
     e55:	68 5f 66 69 6c       	push   0x6c69665f
     e5a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e5c:	61                   	(bad)
     e5d:	6d                   	ins    DWORD PTR es:[rdi],dx
     e5e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e62:	4e 53                	rex.WRX push rbx
     e64:	74 36                	je     e9c <__abi_tag+0xb20>
     e66:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     e69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e6c:	31 30                	xor    DWORD PTR [rax],esi
     e6e:	74 69                	je     ed9 <__abi_tag+0xb5d>
     e70:	6d                   	ins    DWORD PTR es:[rdi],dx
     e71:	65 5f                	gs pop rdi
     e73:	70 6f                	jo     ee4 <__abi_tag+0xb68>
     e75:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     e7c:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     e7f:	32 31                	xor    dh,BYTE PTR [rcx]
     e81:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     e84:	65 61                	gs (bad)
     e86:	64 79 5f             	fs jns ee8 <__abi_tag+0xb6c>
     e89:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     e8d:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     e91:	5f                   	pop    rdi
     e92:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     e96:	61                   	(bad)
     e97:	74 69                	je     f02 <__abi_tag+0xb86>
     e99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e9b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     e9d:	53                   	push   rbx
     e9e:	74 35                	je     ed5 <__abi_tag+0xb59>
     ea0:	72 61                	jb     f03 <__abi_tag+0xb87>
     ea2:	74 69                	je     f0d <__abi_tag+0xb91>
     ea4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ea5:	49                   	rex.WB
     ea6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ea8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     eab:	6c                   	ins    BYTE PTR es:[rdi],dx
     eac:	31 30                	xor    DWORD PTR [rax],esi
     eae:	30 30                	xor    BYTE PTR [rax],dh
     eb0:	30 30                	xor    BYTE PTR [rax],dh
     eb2:	30 30                	xor    BYTE PTR [rax],dh
     eb4:	30 30                	xor    BYTE PTR [rax],dh
     eb6:	45                   	rex.RB
     eb7:	45                   	rex.RB
     eb8:	45                   	rex.RB
     eb9:	45                   	rex.RB
     eba:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     ebc:	49                   	rex.WB
     ebd:	45 52                	rex.RB push r10
     ebf:	4b 53                	rex.WXB push r11
     ec1:	36 5f                	ss pop rdi
     ec3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ec6:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     ecd:	77 63                	ja     f32 <__abi_tag+0xbb6>
     ecf:	73 74                	jae    f45 <__abi_tag+0xbc9>
     ed1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ed2:	75 6c                	jne    f40 <__abi_tag+0xbc4>
     ed4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     ed7:	4e 53                	rex.WRX push rbx
     ed9:	74 36                	je     f11 <__abi_tag+0xb95>
     edb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ede:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     edf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ee0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ee1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     ee5:	61                   	(bad)
     ee6:	74 69                	je     f51 <__abi_tag+0xbd5>
     ee8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ee9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     eea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     eec:	53                   	push   rbx
     eed:	74 35                	je     f24 <__abi_tag+0xba8>
     eef:	72 61                	jb     f52 <__abi_tag+0xbd6>
     ef1:	74 69                	je     f5c <__abi_tag+0xbe0>
     ef3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ef4:	49                   	rex.WB
     ef5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ef7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     efa:	6c                   	ins    BYTE PTR es:[rdi],dx
     efb:	31 30                	xor    DWORD PTR [rax],esi
     efd:	30 30                	xor    BYTE PTR [rax],dh
     eff:	30 30                	xor    BYTE PTR [rax],dh
     f01:	30 30                	xor    BYTE PTR [rax],dh
     f03:	30 30                	xor    BYTE PTR [rax],dh
     f05:	45                   	rex.RB
     f06:	45                   	rex.RB
     f07:	45                   	rex.RB
     f08:	43 31 49 6c          	rex.XB xor DWORD PTR [r9+0x6c],ecx
     f0c:	76 45                	jbe    f53 <__abi_tag+0xbd7>
     f0e:	45 52                	rex.RB push r10
     f10:	4b 54                	rex.WXB push r12
     f12:	5f                   	pop    rdi
     f13:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     f16:	4f 5f                	rex.WRXB pop r15
     f18:	77 72                	ja     f8c <__abi_tag+0xc10>
     f1a:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
     f21:	65 
     f22:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
     f26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f27:	61                   	(bad)
     f28:	6d                   	ins    DWORD PTR es:[rdi],dx
     f29:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f2c:	53                   	push   rbx
     f2d:	74 31                	je     f60 <__abi_tag+0xbe4>
     f2f:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
     f32:	78 74                	js     fa8 <__abi_tag+0xc2c>
     f34:	74 6f                	je     fa5 <__abi_tag+0xc29>
     f36:	77 61                	ja     f99 <__abi_tag+0xc1d>
     f38:	72 64                	jb     f9e <__abi_tag+0xc22>
     f3a:	66 65 00 5f 5f       	data16 add BYTE PTR gs:[rdi+0x5f],bl
     f3f:	6c                   	ins    BYTE PTR es:[rdi],dx
     f40:	68 73 00 5f 6c       	push   0x6c5f0073
     f45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f46:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     f49:	69 73 75 6e 6f 72 64 	imul   esi,DWORD PTR [rbx+0x75],0x64726f6e
     f50:	65 72 65             	gs jb  fb8 <__abi_tag+0xc3c>
     f53:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     f57:	74 5f                	je     fb8 <__abi_tag+0xc3c>
     f59:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     f5c:	72 5f                	jb     fbd <__abi_tag+0xc41>
     f5e:	73 79                	jae    fd9 <__abi_tag+0xc5d>
     f60:	6d                   	ins    DWORD PTR es:[rdi],dx
     f61:	62 6f 6c 00 5f       	(bad)
     f66:	5a                   	pop    rdx
     f67:	53                   	push   rbx
     f68:	74 33                	je     f9d <__abi_tag+0xc21>
     f6a:	66 6d                	ins    WORD PTR es:[rdi],dx
     f6c:	61                   	(bad)
     f6d:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
     f73:	4e 53                	rex.WRX push rbx
     f75:	74 36                	je     fad <__abi_tag+0xc31>
     f77:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     f7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f7c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     f81:	61                   	(bad)
     f82:	74 69                	je     fed <__abi_tag+0xc71>
     f84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f86:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     f88:	53                   	push   rbx
     f89:	74 35                	je     fc0 <__abi_tag+0xc44>
     f8b:	72 61                	jb     fee <__abi_tag+0xc72>
     f8d:	74 69                	je     ff8 <__abi_tag+0xc7c>
     f8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f90:	49                   	rex.WB
     f91:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f93:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f96:	6c                   	ins    BYTE PTR es:[rdi],dx
     f97:	31 30                	xor    DWORD PTR [rax],esi
     f99:	30 30                	xor    BYTE PTR [rax],dh
     f9b:	30 30                	xor    BYTE PTR [rax],dh
     f9d:	30 30                	xor    BYTE PTR [rax],dh
     f9f:	30 30                	xor    BYTE PTR [rax],dh
     fa1:	45                   	rex.RB
     fa2:	45                   	rex.RB
     fa3:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     fa5:	49                   	rex.WB
     fa6:	45 52                	rex.RB push r10
     fa8:	4b 53                	rex.WXB push r11
     faa:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     fad:	5f                   	pop    rdi
     fae:	5a                   	pop    rdx
     faf:	4e 53                	rex.WRX push rbx
     fb1:	74 36                	je     fe9 <__abi_tag+0xc6d>
     fb3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     fb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fb9:	31 30                	xor    DWORD PTR [rax],esi
     fbb:	74 69                	je     1026 <_init+0x26>
     fbd:	6d                   	ins    DWORD PTR es:[rdi],dx
     fbe:	65 5f                	gs pop rdi
     fc0:	70 6f                	jo     1031 <__printf_chk@plt+0x1>
     fc2:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     fc9:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     fcc:	32 31                	xor    dh,BYTE PTR [rcx]
     fce:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     fd1:	65 61                	gs (bad)
     fd3:	64 79 5f             	fs jns 1035 <__printf_chk@plt+0x5>
     fd6:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     fda:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     fde:	5f                   	pop    rdi
     fdf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     fe3:	61                   	(bad)
     fe4:	74 69                	je     104f <rand@plt+0xf>
     fe6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fe7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fe8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     fea:	53                   	push   rbx
     feb:	74 35                	je     1022 <_init+0x22>
     fed:	72 61                	jb     1050 <strchr@plt>
     fef:	74 69                	je     105a <strchr@plt+0xa>
     ff1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff2:	49                   	rex.WB
     ff3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ff5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ff8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ff9:	31 30                	xor    DWORD PTR [rax],esi
     ffb:	30 30                	xor    BYTE PTR [rax],dh
     ffd:	30 30                	xor    BYTE PTR [rax],dh
     fff:	30 30                	xor    BYTE PTR [rax],dh
    1001:	30 30                	xor    BYTE PTR [rax],dh
    1003:	45                   	rex.RB
    1004:	45                   	rex.RB
    1005:	45                   	rex.RB
    1006:	45                   	rex.RB
    1007:	45                   	rex.RB
    1008:	43 34 45             	rex.XB xor al,0x45
    100b:	76 00                	jbe    100d <_init+0xd>
    100d:	5f                   	pop    rdi
    100e:	5a                   	pop    rdx
    100f:	53                   	push   rbx
    1010:	74 36                	je     1048 <rand@plt+0x8>
    1012:	73 63                	jae    1077 <__assert_fail@plt+0x7>
    1014:	61                   	(bad)
    1015:	6c                   	ins    BYTE PTR es:[rdi],dx
    1016:	62 6e 65 69 00       	(bad)
    101b:	64 69 66 66 74 69 6d 	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
    1022:	65 
    1023:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
    1026:	65 72 61             	gs jb  108a <calloc@plt+0xa>
    1029:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    102e:	53                   	push   rbx
    102f:	74 34                	je     1065 <__strncpy_chk@plt+0x5>
    1031:	74 61                	je     1094 <open@plt+0x4>
    1033:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1034:	68 65 00 5f 5a       	push   0x5a5f0065
    1039:	53                   	push   rbx
    103a:	74 34                	je     1070 <__assert_fail@plt>
    103c:	74 61                	je     109f <open@plt+0xf>
    103e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    103f:	68 66 00 5f 49       	push   0x495f0066
    1044:	4f 5f                	rex.WRXB pop r15
    1046:	62 75 66 5f 65       	(bad)
    104b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    104c:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
    1050:	4f 5f                	rex.WRXB pop r15
    1052:	73 61                	jae    10b5 <stat@plt+0x5>
    1054:	76 65                	jbe    10bb <stat@plt+0xb>
    1056:	5f                   	pop    rdi
    1057:	62 61 73 65 00       	(bad)
    105c:	6d                   	ins    DWORD PTR es:[rdi],dx
    105d:	62 72 74 6f 77       	(bad)
    1062:	63 00                	movsxd eax,DWORD PTR [rax]
    1064:	5f                   	pop    rdi
    1065:	5a                   	pop    rdx
    1066:	53                   	push   rbx
    1067:	74 35                	je     109e <open@plt+0xe>
    1069:	6c                   	ins    BYTE PTR es:[rdi],dx
    106a:	72 69                	jb     10d5 <fclose@plt+0x5>
    106c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    106d:	74 66                	je     10d5 <fclose@plt+0x5>
    106f:	00 31                	add    BYTE PTR [rcx],dh
    1071:	31 6d 61             	xor    DWORD PTR [rbp+0x61],ebp
    1074:	78 5f                	js     10d5 <fclose@plt+0x5>
    1076:	61                   	(bad)
    1077:	6c                   	ins    BYTE PTR es:[rdi],dx
    1078:	69 67 6e 5f 74 00 77 	imul   esp,DWORD PTR [rdi+0x6e],0x7700745f
    107f:	63 73 78             	movsxd esi,DWORD PTR [rbx+0x78]
    1082:	66 72 6d             	data16 jb 10f2 <fopen@plt+0x2>
    1085:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1088:	74 5f                	je     10e9 <__stack_chk_fail@plt+0x9>
    108a:	66 72 61             	data16 jb 10ee <__stack_chk_fail@plt+0xe>
    108d:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    1090:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    1097:	5a                   	pop    rdx
    1098:	53                   	push   rbx
    1099:	74 39                	je     10d4 <fclose@plt+0x4>
    109b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    109c:	65 78 74             	gs js  1113 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x3>
    109f:	61                   	(bad)
    10a0:	66 74 65             	data16 je 1108 <free@plt+0x8>
    10a3:	72 66                	jb     110b <free@plt+0xb>
    10a5:	66 00 66 67          	data16 add BYTE PTR [rsi+0x67],ah
    10a9:	65 74 70             	gs je  111c <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xc>
    10ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10ad:	73 00                	jae    10af <aligned_alloc@plt+0xf>
    10af:	5f                   	pop    rdi
    10b0:	5f                   	pop    rdi
    10b1:	70 6f                	jo     1122 <__memset_chk@plt+0x2>
    10b3:	73 00                	jae    10b5 <stat@plt+0x5>
    10b5:	5f                   	pop    rdi
    10b6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    10b9:	69 6e 00 73 74 65 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61657473
    10c0:	64 79 5f             	fs jns 1122 <__memset_chk@plt+0x2>
    10c3:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    10c7:	6b 00 77             	imul   eax,DWORD PTR [rax],0x77
    10ca:	63 73 63             	movsxd esi,DWORD PTR [rbx+0x63]
    10cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    10cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d0:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    10d3:	65 61                	gs (bad)
    10d5:	72 65                	jb     113c <putchar@plt+0xc>
    10d7:	72 72                	jb     114b <strcmp@plt+0xb>
    10d9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    10dc:	53                   	push   rbx
    10dd:	74 31                	je     1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    10df:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    10e2:	75 6e                	jne    1152 <read@plt+0x2>
    10e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10e5:	72 64                	jb     114b <strcmp@plt+0xb>
    10e7:	65 72 65             	gs jb  114f <strcmp@plt+0xf>
    10ea:	64 64 64 00 5f 63    	fs fs add BYTE PTR fs:[rdi+0x63],bl
    10f0:	75 72                	jne    1164 <puts@plt+0x4>
    10f2:	5f                   	pop    rdi
    10f3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    10f6:	75 6d                	jne    1165 <puts@plt+0x5>
    10f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10f9:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    10fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fd:	74 5f                	je     115e <read@plt+0xe>
    10ff:	66 61                	data16 (bad)
    1101:	73 74                	jae    1177 <realloc@plt+0x7>
    1103:	33 32                	xor    esi,DWORD PTR [rdx]
    1105:	5f                   	pop    rdi
    1106:	74 00                	je     1108 <free@plt+0x8>
    1108:	5f                   	pop    rdi
    1109:	5a                   	pop    rdx
    110a:	4e 53                	rex.WRX push rbx
    110c:	74 36                	je     1144 <strcmp@plt+0x4>
    110e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1111:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1112:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1113:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1114:	31 30                	xor    DWORD PTR [rax],esi
    1116:	74 69                	je     1181 <__fprintf_chk@plt+0x1>
    1118:	6d                   	ins    DWORD PTR es:[rdi],dx
    1119:	65 5f                	gs pop rdi
    111b:	70 6f                	jo     118c <__fprintf_chk@plt+0xc>
    111d:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1124:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1127:	32 31                	xor    dh,BYTE PTR [rcx]
    1129:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    112c:	65 61                	gs (bad)
    112e:	64 79 5f             	fs jns 1190 <sqrtf@plt>
    1131:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1135:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1139:	5f                   	pop    rdi
    113a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    113e:	61                   	(bad)
    113f:	74 69                	je     11aa <fwrite@plt+0xa>
    1141:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1142:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1143:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1145:	53                   	push   rbx
    1146:	74 35                	je     117d <realloc@plt+0xd>
    1148:	72 61                	jb     11ab <fwrite@plt+0xb>
    114a:	74 69                	je     11b5 <close@plt+0x5>
    114c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    114d:	49                   	rex.WB
    114e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1150:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1153:	6c                   	ins    BYTE PTR es:[rdi],dx
    1154:	31 30                	xor    DWORD PTR [rax],esi
    1156:	30 30                	xor    BYTE PTR [rax],dh
    1158:	30 30                	xor    BYTE PTR [rax],dh
    115a:	30 30                	xor    BYTE PTR [rax],dh
    115c:	30 30                	xor    BYTE PTR [rax],dh
    115e:	45                   	rex.RB
    115f:	45                   	rex.RB
    1160:	45                   	rex.RB
    1161:	45                   	rex.RB
    1162:	45 70 4c             	rex.RB jo 11b1 <close@plt+0x1>
    1165:	45 52                	rex.RB push r10
    1167:	4b 53                	rex.WXB push r11
    1169:	36 5f                	ss pop rdi
    116b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    116e:	4e 53                	rex.WRX push rbx
    1170:	74 36                	je     11a8 <fwrite@plt+0x8>
    1172:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1175:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1176:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1177:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1178:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    117c:	61                   	(bad)
    117d:	74 69                	je     11e8 <main+0x8>
    117f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1180:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1181:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1183:	53                   	push   rbx
    1184:	74 35                	je     11bb <close@plt+0xb>
    1186:	72 61                	jb     11e9 <main+0x9>
    1188:	74 69                	je     11f3 <main+0x13>
    118a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    118b:	49                   	rex.WB
    118c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    118e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1191:	6c                   	ins    BYTE PTR es:[rdi],dx
    1192:	31 30                	xor    DWORD PTR [rax],esi
    1194:	30 30                	xor    BYTE PTR [rax],dh
    1196:	30 30                	xor    BYTE PTR [rax],dh
    1198:	30 30                	xor    BYTE PTR [rax],dh
    119a:	30 30                	xor    BYTE PTR [rax],dh
    119c:	45                   	rex.RB
    119d:	45                   	rex.RB
    119e:	45 70 70             	rex.RB jo 1211 <_start+0x1>
    11a1:	45 69 00 6c 64 65 78 	imul   r8d,DWORD PTR [r8],0x7865646c
    11a8:	70 00                	jo     11aa <fwrite@plt+0xa>
    11aa:	70 6f                	jo     121b <_start+0xb>
    11ac:	73 69                	jae    1217 <_start+0x7>
    11ae:	74 69                	je     1219 <_start+0x9>
    11b0:	76 65                	jbe    1217 <_start+0x7>
    11b2:	5f                   	pop    rdi
    11b3:	73 69                	jae    121e <_start+0xe>
    11b5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    11b7:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    11ba:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    11bc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11bf:	53                   	push   rbx
    11c0:	74 35                	je     11f7 <main+0x17>
    11c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11c4:	67 31 70 65          	xor    DWORD PTR [eax+0x65],esi
    11c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11cb:	75 69                	jne    1236 <_start+0x26>
    11cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11ce:	74 38                	je     1208 <main+0x28>
    11d0:	5f                   	pop    rdi
    11d1:	74 00                	je     11d3 <__cxa_finalize@plt+0x3>
    11d3:	5f                   	pop    rdi
    11d4:	5a                   	pop    rdx
    11d5:	4e 53                	rex.WRX push rbx
    11d7:	74 36                	je     120f <main+0x2f>
    11d9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    11dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11df:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    11e3:	61                   	(bad)
    11e4:	74 69                	je     124f <deregister_tm_clones+0xf>
    11e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11e8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11ea:	53                   	push   rbx
    11eb:	74 35                	je     1222 <_start+0x12>
    11ed:	72 61                	jb     1250 <deregister_tm_clones+0x10>
    11ef:	74 69                	je     125a <deregister_tm_clones+0x1a>
    11f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11f2:	49                   	rex.WB
    11f3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11f5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11f8:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f9:	31 30                	xor    DWORD PTR [rax],esi
    11fb:	30 30                	xor    BYTE PTR [rax],dh
    11fd:	30 30                	xor    BYTE PTR [rax],dh
    11ff:	30 30                	xor    BYTE PTR [rax],dh
    1201:	30 30                	xor    BYTE PTR [rax],dh
    1203:	45                   	rex.RB
    1204:	45                   	rex.RB
    1205:	45 70 70             	rex.RB jo 1278 <register_tm_clones+0x8>
    1208:	45 76 00             	rex.RB jbe 120b <main+0x2b>
    120b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    120c:	65 78 74             	gs js  1283 <register_tm_clones+0x13>
    120f:	74 6f                	je     1280 <register_tm_clones+0x10>
    1211:	77 61                	ja     1274 <register_tm_clones+0x4>
    1213:	72 64                	jb     1279 <register_tm_clones+0x9>
    1215:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    1218:	61                   	(bad)
    1219:	62                   	(bad)
    121a:	6c                   	ins    BYTE PTR es:[rdi],dx
    121b:	65 5f                	gs pop rdi
    121d:	69 66 3c 74 72 75 65 	imul   esp,DWORD PTR [rsi+0x3c],0x65757274
    1224:	2c 20                	sub    al,0x20
    1226:	73 74                	jae    129c <register_tm_clones+0x2c>
    1228:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    122b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    122e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    122f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1230:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1231:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1233:	64 75 72             	fs jne 12a8 <register_tm_clones+0x38>
    1236:	61                   	(bad)
    1237:	74 69                	je     12a2 <register_tm_clones+0x32>
    1239:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123b:	3c 6c                	cmp    al,0x6c
    123d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1243:	74 2c                	je     1271 <register_tm_clones+0x1>
    1245:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1248:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    124b:	72 61                	jb     12ae <register_tm_clones+0x3e>
    124d:	74 69                	je     12b8 <__do_global_dtors_aux+0x8>
    124f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1250:	3c 31                	cmp    al,0x31
    1252:	2c 20                	sub    al,0x20
    1254:	31 30                	xor    DWORD PTR [rax],esi
    1256:	30 30                	xor    BYTE PTR [rax],dh
    1258:	30 30                	xor    BYTE PTR [rax],dh
    125a:	30 3e                	xor    BYTE PTR [rsi],bh
    125c:	20 3e                	and    BYTE PTR [rsi],bh
    125e:	20 3e                	and    BYTE PTR [rsi],bh
    1260:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
    1263:	66 5f                	pop    di
    1265:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
    126c:	5f                   	pop    rdi
    126d:	77 63                	ja     12d2 <__do_global_dtors_aux+0x22>
    126f:	68 00 77 63 73       	push   0x73637700
    1274:	72 63                	jb     12d9 <__do_global_dtors_aux+0x29>
    1276:	68 72 00 6d 6f       	push   0x6f6d0072
    127b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    127c:	5f                   	pop    rdi
    127d:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    1282:	61                   	(bad)
    1283:	6c                   	ins    BYTE PTR es:[rdi],dx
    1284:	5f                   	pop    rdi
    1285:	70 6f                	jo     12f6 <frame_dummy+0x6>
    1287:	69 6e 74 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535a5f00
    128e:	74 35                	je     12c5 <__do_global_dtors_aux+0x15>
    1290:	68 79 70 6f 74       	push   0x746f7079
    1295:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    129a:	4e 53                	rex.WRX push rbx
    129c:	74 36                	je     12d4 <__do_global_dtors_aux+0x24>
    129e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    12a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a4:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    12a8:	61                   	(bad)
    12a9:	74 69                	je     1314 <_Z16buildStringArrayPcj+0x14>
    12ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ad:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12af:	53                   	push   rbx
    12b0:	74 35                	je     12e7 <__do_global_dtors_aux+0x37>
    12b2:	72 61                	jb     1315 <_Z16buildStringArrayPcj+0x15>
    12b4:	74 69                	je     131f <_Z16buildStringArrayPcj+0x1f>
    12b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12b7:	49                   	rex.WB
    12b8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12ba:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    12be:	31 30                	xor    DWORD PTR [rax],esi
    12c0:	30 30                	xor    BYTE PTR [rax],dh
    12c2:	30 30                	xor    BYTE PTR [rax],dh
    12c4:	30 30                	xor    BYTE PTR [rax],dh
    12c6:	30 30                	xor    BYTE PTR [rax],dh
    12c8:	45                   	rex.RB
    12c9:	45                   	rex.RB
    12ca:	45                   	rex.RB
    12cb:	44 34 45             	rex.R xor al,0x45
    12ce:	76 00                	jbe    12d0 <__do_global_dtors_aux+0x20>
    12d0:	5f                   	pop    rdi
    12d1:	5a                   	pop    rdx
    12d2:	4e 53                	rex.WRX push rbx
    12d4:	74 36                	je     130c <_Z16buildStringArrayPcj+0xc>
    12d6:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    12d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12dc:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    12e0:	61                   	(bad)
    12e1:	74 69                	je     134c <_Z16buildStringArrayPcj+0x4c>
    12e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12e5:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12e7:	53                   	push   rbx
    12e8:	74 35                	je     131f <_Z16buildStringArrayPcj+0x1f>
    12ea:	72 61                	jb     134d <_Z16buildStringArrayPcj+0x4d>
    12ec:	74 69                	je     1357 <_Z16buildStringArrayPcj+0x57>
    12ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ef:	49                   	rex.WB
    12f0:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12f2:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    12f6:	31 30                	xor    DWORD PTR [rax],esi
    12f8:	30 30                	xor    BYTE PTR [rax],dh
    12fa:	30 30                	xor    BYTE PTR [rax],dh
    12fc:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    12ff:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1301:	6d                   	ins    DWORD PTR es:[rdi],dx
    1302:	45 69 00 74 6d 5f 69 	imul   r8d,DWORD PTR [r8],0x695f6d74
    1309:	73 64                	jae    136f <_Z16buildStringArrayPcj+0x6f>
    130b:	73 74                	jae    1381 <_Z16buildStringArrayPcj+0x81>
    130d:	00 76 77             	add    BYTE PTR [rsi+0x77],dh
    1310:	70 72                	jo     1384 <_Z16buildStringArrayPcj+0x84>
    1312:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
    1319:	66 70 72             	data16 jo 138e <_Z16buildStringArrayPcj+0x8e>
    131c:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    1323:	6b 00 63             	imul   eax,DWORD PTR [rax],0x63
    1326:	68 72 6f 6e 6f       	push   0x6f6e6f72
    132b:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
    132f:	74 00                	je     1331 <_Z16buildStringArrayPcj+0x31>
    1331:	5f                   	pop    rdi
    1332:	49                   	rex.WB
    1333:	4f 5f                	rex.WRXB pop r15
    1335:	6d                   	ins    DWORD PTR es:[rdi],dx
    1336:	61                   	(bad)
    1337:	72 6b                	jb     13a4 <_Z16buildStringArrayPcj+0xa4>
    1339:	65 72 00             	gs jb  133c <_Z16buildStringArrayPcj+0x3c>
    133c:	69 6e 74 5f 6e 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f6e5f
    1343:	73 5f                	jae    13a4 <_Z16buildStringArrayPcj+0xa4>
    1345:	70 72                	jo     13b9 <_Z16buildStringArrayPcj+0xb9>
    1347:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    134b:	65 73 00             	gs jae 134e <_Z16buildStringArrayPcj+0x4e>
    134e:	77 63                	ja     13b3 <_Z16buildStringArrayPcj+0xb3>
    1350:	73 63                	jae    13b5 <_Z16buildStringArrayPcj+0xb5>
    1352:	68 72 00 74 79       	push   0x79740072
    1357:	70 65                	jo     13be <_Z16buildStringArrayPcj+0xbe>
    1359:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    135c:	6c                   	ins    BYTE PTR es:[rdi],dx
    135d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    135f:	61                   	(bad)
    1360:	6d                   	ins    DWORD PTR es:[rdi],dx
    1361:	65 73 00             	gs jae 1364 <_Z16buildStringArrayPcj+0x64>
    1364:	5f                   	pop    rdi
    1365:	5a                   	pop    rdx
    1366:	53                   	push   rbx
    1367:	74 34                	je     139d <_Z16buildStringArrayPcj+0x9d>
    1369:	66 64 69 6d 65 65 00 	imul   bp,WORD PTR fs:[rbp+0x65],0x65
    1370:	65 78 65             	gs js  13d8 <_Z16buildStringArrayPcj+0xd8>
    1373:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
    1376:	69 6f 6e 00 5f 5a 53 	imul   ebp,DWORD PTR [rdi+0x6e],0x535a5f00
    137d:	74 35                	je     13b4 <_Z16buildStringArrayPcj+0xb4>
    137f:	68 79 70 6f 74       	push   0x746f7079
    1384:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1389:	4e 53                	rex.WRX push rbx
    138b:	74 35                	je     13c2 <_Z16buildStringArrayPcj+0xc2>
    138d:	72 61                	jb     13f0 <_Z16buildStringArrayPcj+0xf0>
    138f:	74 69                	je     13fa <_Z16buildStringArrayPcj+0xfa>
    1391:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1392:	49                   	rex.WB
    1393:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1395:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1398:	6c                   	ins    BYTE PTR es:[rdi],dx
    1399:	31 30                	xor    DWORD PTR [rax],esi
    139b:	30 30                	xor    BYTE PTR [rax],dh
    139d:	45                   	rex.RB
    139e:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    13a3:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    13a7:	4e                   	rex.WRX
    13a8:	4b 53                	rex.WXB push r11
    13aa:	74 36                	je     13e2 <_Z16buildStringArrayPcj+0xe2>
    13ac:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    13af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    13b6:	61                   	(bad)
    13b7:	74 69                	je     1422 <_Z16buildStringArrayPcj+0x122>
    13b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13bb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    13bd:	53                   	push   rbx
    13be:	74 35                	je     13f5 <_Z16buildStringArrayPcj+0xf5>
    13c0:	72 61                	jb     1423 <_Z16buildStringArrayPcj+0x123>
    13c2:	74 69                	je     142d <_Z16buildStringArrayPcj+0x12d>
    13c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13c5:	49                   	rex.WB
    13c6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    13c8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    13cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    13cc:	31 30                	xor    DWORD PTR [rax],esi
    13ce:	30 30                	xor    BYTE PTR [rax],dh
    13d0:	30 30                	xor    BYTE PTR [rax],dh
    13d2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    13d5:	45 70 73             	rex.RB jo 144b <_Z11hashMapCtorPFj8string_tEj+0x1b>
    13d8:	45 76 00             	rex.RB jbe 13db <_Z16buildStringArrayPcj+0xdb>
    13db:	74 65                	je     1442 <_Z11hashMapCtorPFj8string_tEj+0x12>
    13dd:	73 74                	jae    1453 <_Z11hashMapCtorPFj8string_tEj+0x23>
    13df:	53                   	push   rbx
    13e0:	65 61                	gs (bad)
    13e2:	72 63                	jb     1447 <_Z11hashMapCtorPFj8string_tEj+0x17>
    13e4:	68 54 69 6d 65       	push   0x656d6954
    13e9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    13ec:	53                   	push   rbx
    13ed:	74 35                	je     1424 <_Z16buildStringArrayPcj+0x124>
    13ef:	68 79 70 6f 74       	push   0x746f7079
    13f4:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
    13fa:	53                   	push   rbx
    13fb:	74 39                	je     1436 <_Z11hashMapCtorPFj8string_tEj+0x6>
    13fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13fe:	65 61                	gs (bad)
    1400:	72 62                	jb     1464 <_Z11hashMapCtorPFj8string_tEj+0x34>
    1402:	79 69                	jns    146d <_Z11hashMapCtorPFj8string_tEj+0x3d>
    1404:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1405:	74 65                	je     146c <_Z11hashMapCtorPFj8string_tEj+0x3c>
    1407:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    140a:	53                   	push   rbx
    140b:	74 31                	je     143e <_Z11hashMapCtorPFj8string_tEj+0xe>
    140d:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1410:	6c                   	ins    BYTE PTR es:[rdi],dx
    1411:	65 73 73             	gs jae 1487 <_Z11hashMapCtorPFj8string_tEj+0x57>
    1414:	65 71 75             	gs jno 148c <_Z11hashMapCtorPFj8string_tEj+0x5c>
    1417:	61                   	(bad)
    1418:	6c                   	ins    BYTE PTR es:[rdi],dx
    1419:	64 64 00 5f 5a       	fs add BYTE PTR fs:[rdi+0x5a],bl
    141e:	53                   	push   rbx
    141f:	74 34                	je     1455 <_Z11hashMapCtorPFj8string_tEj+0x25>
    1421:	66 61                	data16 (bad)
    1423:	62 73 66 00 64       	(bad)
    1428:	75 72                	jne    149c <_Z11hashMapCtorPFj8string_tEj+0x6c>
    142a:	61                   	(bad)
    142b:	74 69                	je     1496 <_Z11hashMapCtorPFj8string_tEj+0x66>
    142d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    142e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    142f:	3c 6c                	cmp    al,0x6c
    1431:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1432:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1433:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1437:	74 2c                	je     1465 <_Z11hashMapCtorPFj8string_tEj+0x35>
    1439:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    143c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    143f:	72 61                	jb     14a2 <_Z11hashMapCtorPFj8string_tEj+0x72>
    1441:	74 69                	je     14ac <_Z11hashMapCtorPFj8string_tEj+0x7c>
    1443:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1444:	3c 31                	cmp    al,0x31
    1446:	2c 20                	sub    al,0x20
    1448:	31 30                	xor    DWORD PTR [rax],esi
    144a:	30 30                	xor    BYTE PTR [rax],dh
    144c:	30 30                	xor    BYTE PTR [rax],dh
    144e:	30 3e                	xor    BYTE PTR [rsi],bh
    1450:	20 3e                	and    BYTE PTR [rsi],bh
    1452:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    1455:	61                   	(bad)
    1456:	72 62                	jb     14ba <_Z11hashMapCtorPFj8string_tEj+0x8a>
    1458:	79 69                	jns    14c3 <_Z11hashMapCtorPFj8string_tEj+0x93>
    145a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    145b:	74 00                	je     145d <_Z11hashMapCtorPFj8string_tEj+0x2d>
    145d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    145e:	70 65                	jo     14c5 <_Z11hashMapCtorPFj8string_tEj+0x95>
    1460:	72 61                	jb     14c3 <_Z11hashMapCtorPFj8string_tEj+0x93>
    1462:	74 6f                	je     14d3 <_Z11hashMapCtorPFj8string_tEj+0xa3>
    1464:	72 2b                	jb     1491 <_Z11hashMapCtorPFj8string_tEj+0x61>
    1466:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1469:	53                   	push   rbx
    146a:	74 34                	je     14a0 <_Z11hashMapCtorPFj8string_tEj+0x70>
    146c:	61                   	(bad)
    146d:	74 61                	je     14d0 <_Z11hashMapCtorPFj8string_tEj+0xa0>
    146f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1470:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1474:	53                   	push   rbx
    1475:	74 34                	je     14ab <_Z11hashMapCtorPFj8string_tEj+0x7b>
    1477:	61                   	(bad)
    1478:	74 61                	je     14db <_Z11hashMapCtorPFj8string_tEj+0xab>
    147a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    147b:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    147f:	4f 5f                	rex.WRXB pop r15
    1481:	46                   	rex.RX
    1482:	49                   	rex.WB
    1483:	4c                   	rex.WR
    1484:	45 00 6d 6f          	add    BYTE PTR [r13+0x6f],r13b
    1488:	64 66 00 5f 5a       	data16 add BYTE PTR fs:[rdi+0x5a],bl
    148d:	53                   	push   rbx
    148e:	74 31                	je     14c1 <_Z11hashMapCtorPFj8string_tEj+0x91>
    1490:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1493:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1497:	73 69                	jae    1502 <_Z17hashMapAddElementP7HashMap8string_t+0x22>
    1499:	66 79 64             	data16 jns 1500 <_Z17hashMapAddElementP7HashMap8string_t+0x20>
    149c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    149f:	53                   	push   rbx
    14a0:	74 31                	je     14d3 <_Z11hashMapCtorPFj8string_tEj+0xa3>
    14a2:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    14a5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    14a9:	73 69                	jae    1514 <_Z17hashMapAddElementP7HashMap8string_t+0x34>
    14ab:	66 79 65             	data16 jns 1513 <_Z17hashMapAddElementP7HashMap8string_t+0x33>
    14ae:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14b1:	53                   	push   rbx
    14b2:	74 31                	je     14e5 <_Z17hashMapAddElementP7HashMap8string_t+0x5>
    14b4:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    14b7:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    14bb:	73 69                	jae    1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14bd:	66 79 66             	data16 jns 1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14c0:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    14c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    14c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14c5:	76 65                	jbe    152c <_Z17hashMapAddElementP7HashMap8string_t+0x4c>
    14c7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    14ca:	4f 5f                	rex.WRXB pop r15
    14cc:	77 69                	ja     1537 <_Z17hashMapAddElementP7HashMap8string_t+0x57>
    14ce:	64 65 5f             	fs gs pop rdi
    14d1:	64 61                	fs (bad)
    14d3:	74 61                	je     1536 <_Z17hashMapAddElementP7HashMap8string_t+0x56>
    14d5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14d8:	53                   	push   rbx
    14d9:	74 34                	je     150f <_Z17hashMapAddElementP7HashMap8string_t+0x2f>
    14db:	66 64 69 6d 66 66 00 	imul   bp,WORD PTR fs:[rbp+0x66],0x66
    14e2:	5f                   	pop    rdi
    14e3:	5a                   	pop    rdx
    14e4:	53                   	push   rbx
    14e5:	74 34                	je     151b <_Z17hashMapAddElementP7HashMap8string_t+0x3b>
    14e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    14e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14e9:	67 32 65 00          	xor    ah,BYTE PTR [ebp+0x0]
    14ed:	5f                   	pop    rdi
    14ee:	5a                   	pop    rdx
    14ef:	53                   	push   rbx
    14f0:	74 34                	je     1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    14f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14f4:	67 32 66 00          	xor    ah,BYTE PTR [esi+0x0]
    14f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14f9:	70 65                	jo     1560 <_Z17hashMapAddElementP7HashMap8string_t+0x80>
    14fb:	72 61                	jb     155e <_Z17hashMapAddElementP7HashMap8string_t+0x7e>
    14fd:	74 6f                	je     156e <_Z17hashMapAddElementP7HashMap8string_t+0x8e>
    14ff:	72 3d                	jb     153e <_Z17hashMapAddElementP7HashMap8string_t+0x5e>
    1501:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    1504:	65 74 77             	gs je  157e <_Z17hashMapAddElementP7HashMap8string_t+0x9e>
    1507:	63 00                	movsxd eax,DWORD PTR [rax]
    1509:	69 73 69 6e 66 00 66 	imul   esi,DWORD PTR [rbx+0x69],0x6600666e
    1510:	70 63                	jo     1575 <_Z17hashMapAddElementP7HashMap8string_t+0x95>
    1512:	6c                   	ins    BYTE PTR es:[rdi],dx
    1513:	61                   	(bad)
    1514:	73 73                	jae    1589 <_Z17hashMapAddElementP7HashMap8string_t+0xa9>
    1516:	69 66 79 00 67 65 74 	imul   esp,DWORD PTR [rsi+0x79],0x74656700
    151d:	77 63                	ja     1582 <_Z17hashMapAddElementP7HashMap8string_t+0xa2>
    151f:	68 61 72 00 5f       	push   0x5f007261
    1524:	5a                   	pop    rdx
    1525:	53                   	push   rbx
    1526:	74 34                	je     155c <_Z17hashMapAddElementP7HashMap8string_t+0x7c>
    1528:	65 72 66             	gs jb  1591 <_Z17hashMapAddElementP7HashMap8string_t+0xb1>
    152b:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    152e:	5f                   	pop    rdi
    152f:	5a                   	pop    rdx
    1530:	53                   	push   rbx
    1531:	74 34                	je     1567 <_Z17hashMapAddElementP7HashMap8string_t+0x87>
    1533:	65 72 66             	gs jb  159c <_Z17hashMapAddElementP7HashMap8string_t+0xbc>
    1536:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    1539:	66 67 65 74 77       	data16 addr32 gs je 15b5 <_Z17hashMapAddElementP7HashMap8string_t+0xd5>
    153e:	73 00                	jae    1540 <_Z17hashMapAddElementP7HashMap8string_t+0x60>
    1540:	5f                   	pop    rdi
    1541:	5f                   	pop    rdi
    1542:	75 69                	jne    15ad <_Z17hashMapAddElementP7HashMap8string_t+0xcd>
    1544:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1545:	74 5f                	je     15a6 <_Z17hashMapAddElementP7HashMap8string_t+0xc6>
    1547:	6c                   	ins    BYTE PTR es:[rdi],dx
    1548:	65 61                	gs (bad)
    154a:	73 74                	jae    15c0 <_Z17hashMapAddElementP7HashMap8string_t+0xe0>
    154c:	31 36                	xor    DWORD PTR [rsi],esi
    154e:	5f                   	pop    rdi
    154f:	74 00                	je     1551 <_Z17hashMapAddElementP7HashMap8string_t+0x71>
    1551:	5f                   	pop    rdi
    1552:	5a                   	pop    rdx
    1553:	4e 53                	rex.WRX push rbx
    1555:	74 35                	je     158c <_Z17hashMapAddElementP7HashMap8string_t+0xac>
    1557:	72 61                	jb     15ba <_Z17hashMapAddElementP7HashMap8string_t+0xda>
    1559:	74 69                	je     15c4 <_Z17hashMapAddElementP7HashMap8string_t+0xe4>
    155b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    155c:	49                   	rex.WB
    155d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    155f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1562:	6c                   	ins    BYTE PTR es:[rdi],dx
    1563:	31 30                	xor    DWORD PTR [rax],esi
    1565:	30 30                	xor    BYTE PTR [rax],dh
    1567:	30 30                	xor    BYTE PTR [rax],dh
    1569:	30 30                	xor    BYTE PTR [rax],dh
    156b:	30 30                	xor    BYTE PTR [rax],dh
    156d:	45                   	rex.RB
    156e:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    1573:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1577:	53                   	push   rbx
    1578:	74 34                	je     15ae <_Z17hashMapAddElementP7HashMap8string_t+0xce>
    157a:	6d                   	ins    DWORD PTR es:[rdi],dx
    157b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    157c:	64 66 65 50          	fs gs push ax
    1580:	65 00 66 63          	add    BYTE PTR gs:[rsi+0x63],ah
    1584:	6c                   	ins    BYTE PTR es:[rdi],dx
    1585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1586:	73 65                	jae    15ed <_Z17hashMapAddElementP7HashMap8string_t+0x10d>
    1588:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    158b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    158d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1590:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    1593:	70 79                	jo     160e <_Z17hashMapAddElementP7HashMap8string_t+0x12e>
    1595:	73 69                	jae    1600 <_Z17hashMapAddElementP7HashMap8string_t+0x120>
    1597:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1599:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    159c:	53                   	push   rbx
    159d:	74 33                	je     15d2 <_Z17hashMapAddElementP7HashMap8string_t+0xf2>
    159f:	74 61                	je     1602 <_Z17hashMapAddElementP7HashMap8string_t+0x122>
    15a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15a2:	66 00 5f 6d          	data16 add BYTE PTR [rdi+0x6d],bl
    15a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    15a7:	5f                   	pop    rdi
    15a8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    15ab:	33 32                	xor    esi,DWORD PTR [rdx]
    15ad:	5f                   	pop    rdi
    15ae:	66 69 6c 65 73 00 69 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6900
    15b5:	73 6c                	jae    1623 <_Z17hashMapAddElementP7HashMap8string_t+0x143>
    15b7:	65 73 73             	gs jae 162d <_Z17hashMapAddElementP7HashMap8string_t+0x14d>
    15ba:	65 71 75             	gs jno 1632 <_Z17hashMapAddElementP7HashMap8string_t+0x152>
    15bd:	61                   	(bad)
    15be:	6c                   	ins    BYTE PTR es:[rdi],dx
    15bf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    15c2:	53                   	push   rbx
    15c3:	74 38                	je     15fd <_Z17hashMapAddElementP7HashMap8string_t+0x11d>
    15c5:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    15cd:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    15d1:	53                   	push   rbx
    15d2:	74 38                	je     160c <_Z17hashMapAddElementP7HashMap8string_t+0x12c>
    15d4:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15db:	6c                   	ins    BYTE PTR es:[rdi],dx
    15dc:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    15e0:	53                   	push   rbx
    15e1:	74 38                	je     161b <_Z17hashMapAddElementP7HashMap8string_t+0x13b>
    15e3:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    15eb:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    15ef:	4e 53                	rex.WRX push rbx
    15f1:	74 36                	je     1629 <_Z17hashMapAddElementP7HashMap8string_t+0x149>
    15f3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    15f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    15fd:	61                   	(bad)
    15fe:	74 69                	je     1669 <_Z17hashMapAddElementP7HashMap8string_t+0x189>
    1600:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1601:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1602:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1604:	53                   	push   rbx
    1605:	74 35                	je     163c <_Z17hashMapAddElementP7HashMap8string_t+0x15c>
    1607:	72 61                	jb     166a <_Z17hashMapAddElementP7HashMap8string_t+0x18a>
    1609:	74 69                	je     1674 <_Z17hashMapAddElementP7HashMap8string_t+0x194>
    160b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    160c:	49                   	rex.WB
    160d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    160f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1612:	6c                   	ins    BYTE PTR es:[rdi],dx
    1613:	31 30                	xor    DWORD PTR [rax],esi
    1615:	30 30                	xor    BYTE PTR [rax],dh
    1617:	30 30                	xor    BYTE PTR [rax],dh
    1619:	30 30                	xor    BYTE PTR [rax],dh
    161b:	30 30                	xor    BYTE PTR [rax],dh
    161d:	45                   	rex.RB
    161e:	45                   	rex.RB
    161f:	45 34 7a             	rex.RB xor al,0x7a
    1622:	65 72 6f             	gs jb  1694 <_Z17hashMapAddElementP7HashMap8string_t+0x1b4>
    1625:	45 76 00             	rex.RB jbe 1628 <_Z17hashMapAddElementP7HashMap8string_t+0x148>
    1628:	73 74                	jae    169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    162a:	61                   	(bad)
    162b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    162c:	64 61                	fs (bad)
    162e:	72 74                	jb     16a4 <_Z17hashMapAddElementP7HashMap8string_t+0x1c4>
    1630:	5f                   	pop    rdi
    1631:	64 65 76 69          	fs gs jbe 169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    1635:	61                   	(bad)
    1636:	74 69                	je     16a1 <_Z17hashMapAddElementP7HashMap8string_t+0x1c1>
    1638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1639:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    163a:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
    163d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    163e:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    1642:	73 63                	jae    16a7 <_Z17hashMapAddElementP7HashMap8string_t+0x1c7>
    1644:	6d                   	ins    DWORD PTR es:[rdi],dx
    1645:	70 00                	jo     1647 <_Z17hashMapAddElementP7HashMap8string_t+0x167>
    1647:	5f                   	pop    rdi
    1648:	5f                   	pop    rdi
    1649:	72 65                	jb     16b0 <_Z17hashMapAddElementP7HashMap8string_t+0x1d0>
    164b:	70 00                	jo     164d <_Z17hashMapAddElementP7HashMap8string_t+0x16d>
    164d:	77 63                	ja     16b2 <_Z17hashMapAddElementP7HashMap8string_t+0x1d2>
    164f:	73 70                	jae    16c1 <_Z17hashMapAddElementP7HashMap8string_t+0x1e1>
    1651:	62 72 6b 00 5f       	(bad)
    1656:	5a                   	pop    rdx
    1657:	4e 53                	rex.WRX push rbx
    1659:	74 36                	je     1691 <_Z17hashMapAddElementP7HashMap8string_t+0x1b1>
    165b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    165e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    165f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1660:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1661:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1665:	61                   	(bad)
    1666:	74 69                	je     16d1 <_Z17hashMapAddElementP7HashMap8string_t+0x1f1>
    1668:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1669:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    166a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    166c:	53                   	push   rbx
    166d:	74 35                	je     16a4 <_Z17hashMapAddElementP7HashMap8string_t+0x1c4>
    166f:	72 61                	jb     16d2 <_Z17hashMapAddElementP7HashMap8string_t+0x1f2>
    1671:	74 69                	je     16dc <_Z17hashMapAddElementP7HashMap8string_t+0x1fc>
    1673:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1674:	49                   	rex.WB
    1675:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1677:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    167a:	6c                   	ins    BYTE PTR es:[rdi],dx
    167b:	31 30                	xor    DWORD PTR [rax],esi
    167d:	30 30                	xor    BYTE PTR [rax],dh
    167f:	30 30                	xor    BYTE PTR [rax],dh
    1681:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1684:	45                   	rex.RB
    1685:	43 32 49 6c          	rex.XB xor cl,BYTE PTR [r9+0x6c]
    1689:	76 45                	jbe    16d0 <_Z17hashMapAddElementP7HashMap8string_t+0x1f0>
    168b:	45 52                	rex.RB push r10
    168d:	4b 54                	rex.WXB push r12
    168f:	5f                   	pop    rdi
    1690:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1693:	53                   	push   rbx
    1694:	74 36                	je     16cc <_Z17hashMapAddElementP7HashMap8string_t+0x1ec>
    1696:	72 65                	jb     16fd <_Z17hashMapAddElementP7HashMap8string_t+0x21d>
    1698:	6d                   	ins    DWORD PTR es:[rdi],dx
    1699:	71 75                	jno    1710 <_Z17hashMapAddElementP7HashMap8string_t+0x230>
    169b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    169c:	65 65 50             	gs gs push rax
    169f:	69 00 5f 5a 4e 53    	imul   eax,DWORD PTR [rax],0x534e5a5f
    16a5:	74 36                	je     16dd <_Z17hashMapAddElementP7HashMap8string_t+0x1fd>
    16a7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ad:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16b1:	61                   	(bad)
    16b2:	74 69                	je     171d <_Z17hashMapAddElementP7HashMap8string_t+0x23d>
    16b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16b6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    16b8:	53                   	push   rbx
    16b9:	74 35                	je     16f0 <_Z17hashMapAddElementP7HashMap8string_t+0x210>
    16bb:	72 61                	jb     171e <_Z17hashMapAddElementP7HashMap8string_t+0x23e>
    16bd:	74 69                	je     1728 <_Z17hashMapAddElementP7HashMap8string_t+0x248>
    16bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16c0:	49                   	rex.WB
    16c1:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    16c3:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    16c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    16c7:	31 30                	xor    DWORD PTR [rax],esi
    16c9:	30 30                	xor    BYTE PTR [rax],dh
    16cb:	30 30                	xor    BYTE PTR [rax],dh
    16cd:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    16d0:	45 70 70             	rex.RB jo 1743 <_Z17hashMapAddElementP7HashMap8string_t+0x263>
    16d3:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    16da:	39 6e 65             	cmp    DWORD PTR [rsi+0x65],ebp
    16dd:	61                   	(bad)
    16de:	72 62                	jb     1742 <_Z17hashMapAddElementP7HashMap8string_t+0x262>
    16e0:	79 69                	jns    174b <_Z17hashMapAddElementP7HashMap8string_t+0x26b>
    16e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16e3:	74 66                	je     174b <_Z17hashMapAddElementP7HashMap8string_t+0x26b>
    16e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16e8:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    16ef:	77 73                	ja     1764 <_Z17hashMapAddElementP7HashMap8string_t+0x284>
    16f1:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    16f4:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    16f8:	4e                   	rex.WRX
    16f9:	4b 53                	rex.WXB push r11
    16fb:	74 36                	je     1733 <_Z17hashMapAddElementP7HashMap8string_t+0x253>
    16fd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1700:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1701:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1702:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1703:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1707:	61                   	(bad)
    1708:	74 69                	je     1773 <_Z17hashMapAddElementP7HashMap8string_t+0x293>
    170a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    170b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    170c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    170e:	53                   	push   rbx
    170f:	74 35                	je     1746 <_Z17hashMapAddElementP7HashMap8string_t+0x266>
    1711:	72 61                	jb     1774 <_Z17hashMapAddElementP7HashMap8string_t+0x294>
    1713:	74 69                	je     177e <_Z17hashMapAddElementP7HashMap8string_t+0x29e>
    1715:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1716:	49                   	rex.WB
    1717:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1719:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    171c:	6c                   	ins    BYTE PTR es:[rdi],dx
    171d:	31 30                	xor    DWORD PTR [rax],esi
    171f:	30 30                	xor    BYTE PTR [rax],dh
    1721:	30 30                	xor    BYTE PTR [rax],dh
    1723:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1726:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    172c:	74 45                	je     1773 <_Z17hashMapAddElementP7HashMap8string_t+0x293>
    172e:	76 00                	jbe    1730 <_Z17hashMapAddElementP7HashMap8string_t+0x250>
    1730:	67 70 5f             	addr32 jo 1792 <_Z17hashMapPopElementP7HashMap8string_t+0x2>
    1733:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1734:	66 66 73 65          	data16 data16 jae 179d <_Z17hashMapPopElementP7HashMap8string_t+0xd>
    1738:	74 00                	je     173a <_Z17hashMapAddElementP7HashMap8string_t+0x25a>
    173a:	5f                   	pop    rdi
    173b:	5f                   	pop    rdi
    173c:	72 68                	jb     17a6 <_Z17hashMapPopElementP7HashMap8string_t+0x16>
    173e:	73 00                	jae    1740 <_Z17hashMapAddElementP7HashMap8string_t+0x260>
    1740:	77 63                	ja     17a5 <_Z17hashMapPopElementP7HashMap8string_t+0x15>
    1742:	73 6e                	jae    17b2 <_Z17hashMapPopElementP7HashMap8string_t+0x22>
    1744:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1747:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    174a:	53                   	push   rbx
    174b:	74 34                	je     1781 <_Z17hashMapAddElementP7HashMap8string_t+0x2a1>
    174d:	73 69                	jae    17b8 <_Z17hashMapPopElementP7HashMap8string_t+0x28>
    174f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1750:	68 66 00 5f 49       	push   0x495f0066
    1755:	4f 5f                	rex.WRXB pop r15
    1757:	6c                   	ins    BYTE PTR es:[rdi],dx
    1758:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1759:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    175c:	74 00                	je     175e <_Z17hashMapAddElementP7HashMap8string_t+0x27e>
    175e:	5f                   	pop    rdi
    175f:	5f                   	pop    rdi
    1760:	75 69                	jne    17cb <_Z17hashMapPopElementP7HashMap8string_t+0x3b>
    1762:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1763:	74 31                	je     1796 <_Z17hashMapPopElementP7HashMap8string_t+0x6>
    1765:	36 5f                	ss pop rdi
    1767:	74 00                	je     1769 <_Z17hashMapAddElementP7HashMap8string_t+0x289>
    1769:	77 6d                	ja     17d8 <_Z17hashMapPopElementP7HashMap8string_t+0x48>
    176b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    176d:	6d                   	ins    DWORD PTR es:[rdi],dx
    176e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    176f:	76 65                	jbe    17d6 <_Z17hashMapPopElementP7HashMap8string_t+0x46>
    1771:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1774:	53                   	push   rbx
    1775:	74 36                	je     17ad <_Z17hashMapPopElementP7HashMap8string_t+0x1d>
    1777:	6c                   	ins    BYTE PTR es:[rdi],dx
    1778:	72 6f                	jb     17e9 <_Z17hashMapPopElementP7HashMap8string_t+0x59>
    177a:	75 6e                	jne    17ea <_Z17hashMapPopElementP7HashMap8string_t+0x5a>
    177c:	64 66 00 6c 6f 67    	data16 add BYTE PTR fs:[rdi+rbp*2+0x67],ch
    1782:	31 30                	xor    DWORD PTR [rax],esi
    1784:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1787:	4e 53                	rex.WRX push rbx
    1789:	74 36                	je     17c1 <_Z17hashMapPopElementP7HashMap8string_t+0x31>
    178b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    178e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    178f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1790:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1791:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1794:	32 31                	xor    dh,BYTE PTR [rcx]
    1796:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1799:	65 61                	gs (bad)
    179b:	64 79 5f             	fs jns 17fd <_Z17hashMapPopElementP7HashMap8string_t+0x6d>
    179e:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    17a2:	6b 39 69             	imul   edi,DWORD PTR [rcx],0x69
    17a5:	73 5f                	jae    1806 <_Z17hashMapPopElementP7HashMap8string_t+0x76>
    17a7:	73 74                	jae    181d <_Z17hashMapPopElementP7HashMap8string_t+0x8d>
    17a9:	65 61                	gs (bad)
    17ab:	64 79 45             	fs jns 17f3 <_Z17hashMapPopElementP7HashMap8string_t+0x63>
    17ae:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17b1:	4e 53                	rex.WRX push rbx
    17b3:	74 36                	je     17eb <_Z17hashMapPopElementP7HashMap8string_t+0x5b>
    17b5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    17b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17bb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    17bf:	61                   	(bad)
    17c0:	74 69                	je     182b <_Z17hashMapPopElementP7HashMap8string_t+0x9b>
    17c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17c4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    17c6:	53                   	push   rbx
    17c7:	74 35                	je     17fe <_Z17hashMapPopElementP7HashMap8string_t+0x6e>
    17c9:	72 61                	jb     182c <_Z17hashMapPopElementP7HashMap8string_t+0x9c>
    17cb:	74 69                	je     1836 <_Z17hashMapPopElementP7HashMap8string_t+0xa6>
    17cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17ce:	49                   	rex.WB
    17cf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    17d1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    17d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    17d5:	31 30                	xor    DWORD PTR [rax],esi
    17d7:	30 30                	xor    BYTE PTR [rax],dh
    17d9:	30 30                	xor    BYTE PTR [rax],dh
    17db:	30 30                	xor    BYTE PTR [rax],dh
    17dd:	30 30                	xor    BYTE PTR [rax],dh
    17df:	45                   	rex.RB
    17e0:	45                   	rex.RB
    17e1:	45                   	rex.RB
    17e2:	43 34 45             	rex.XB xor al,0x45
    17e5:	76 00                	jbe    17e7 <_Z17hashMapPopElementP7HashMap8string_t+0x57>
    17e7:	5f                   	pop    rdi
    17e8:	6d                   	ins    DWORD PTR es:[rdi],dx
    17e9:	6d                   	ins    DWORD PTR es:[rdi],dx
    17ea:	5f                   	pop    rdi
    17eb:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    17ee:	33 32                	xor    esi,DWORD PTR [rdx]
    17f0:	55                   	push   rbp
    17f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17f2:	72 6f                	jb     1863 <_Z20hashMapSearchElementP7HashMap8string_t+0x3>
    17f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f6:	5f                   	pop    rdi
    17f7:	66 69 6c 65 73 00 77 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7700
    17fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    17ff:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1801:	73 65                	jae    1868 <_Z20hashMapSearchElementP7HashMap8string_t+0x8>
    1803:	74 00                	je     1805 <_Z17hashMapPopElementP7HashMap8string_t+0x75>
    1805:	74 6d                	je     1874 <_Z20hashMapSearchElementP7HashMap8string_t+0x14>
    1807:	5f                   	pop    rdi
    1808:	6d                   	ins    DWORD PTR es:[rdi],dx
    1809:	69 6e 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74535a5f
    1810:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    1813:	70 79                	jo     188e <_Z20hashMapSearchElementP7HashMap8string_t+0x2e>
    1815:	73 69                	jae    1880 <_Z20hashMapSearchElementP7HashMap8string_t+0x20>
    1817:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1819:	65 65 00 5f 49       	gs add BYTE PTR gs:[rdi+0x49],bl
    181e:	4f 5f                	rex.WRXB pop r15
    1820:	72 65                	jb     1887 <_Z20hashMapSearchElementP7HashMap8string_t+0x27>
    1822:	61                   	(bad)
    1823:	64 5f                	fs pop rdi
    1825:	70 74                	jo     189b <_Z20hashMapSearchElementP7HashMap8string_t+0x3b>
    1827:	72 00                	jb     1829 <_Z17hashMapPopElementP7HashMap8string_t+0x99>
    1829:	5f                   	pop    rdi
    182a:	5a                   	pop    rdx
    182b:	53                   	push   rbx
    182c:	74 38                	je     1866 <_Z20hashMapSearchElementP7HashMap8string_t+0x6>
    182e:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1831:	79 73                	jns    18a6 <_Z20hashMapSearchElementP7HashMap8string_t+0x46>
    1833:	69 67 6e 66 66 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f006666
    183a:	5a                   	pop    rdx
    183b:	53                   	push   rbx
    183c:	74 35                	je     1873 <_Z20hashMapSearchElementP7HashMap8string_t+0x13>
    183e:	69 73 69 6e 66 66 00 	imul   esi,DWORD PTR [rbx+0x69],0x66666e
    1845:	6d                   	ins    DWORD PTR es:[rdi],dx
    1846:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1847:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1848:	5f                   	pop    rdi
    1849:	74 68                	je     18b3 <_Z20hashMapSearchElementP7HashMap8string_t+0x53>
    184b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    184c:	75 73                	jne    18c1 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    184e:	61                   	(bad)
    184f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1850:	64 73 5f             	fs jae 18b2 <_Z20hashMapSearchElementP7HashMap8string_t+0x52>
    1853:	73 65                	jae    18ba <_Z20hashMapSearchElementP7HashMap8string_t+0x5a>
    1855:	70 00                	jo     1857 <_Z17hashMapPopElementP7HashMap8string_t+0xc7>
    1857:	69 73 6c 65 73 73 67 	imul   esi,DWORD PTR [rbx+0x6c],0x67737365
    185e:	72 65                	jb     18c5 <_Z20hashMapSearchElementP7HashMap8string_t+0x65>
    1860:	61                   	(bad)
    1861:	74 65                	je     18c8 <_Z20hashMapSearchElementP7HashMap8string_t+0x68>
    1863:	72 00                	jb     1865 <_Z20hashMapSearchElementP7HashMap8string_t+0x5>
    1865:	75 6e                	jne    18d5 <_Z11hashMapDtorP7HashMap+0x5>
    1867:	67 65 74 77          	addr32 gs je 18e2 <_Z11hashMapDtorP7HashMap+0x12>
    186b:	63 00                	movsxd eax,DWORD PTR [rax]
    186d:	66 70 5f             	data16 jo 18cf <_Z20hashMapSearchElementP7HashMap8string_t+0x6f>
    1870:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1871:	66 66 73 65          	data16 data16 jae 18da <_Z11hashMapDtorP7HashMap+0xa>
    1875:	74 00                	je     1877 <_Z20hashMapSearchElementP7HashMap8string_t+0x17>
    1877:	66 74 65             	data16 je 18df <_Z11hashMapDtorP7HashMap+0xf>
    187a:	6c                   	ins    BYTE PTR es:[rdi],dx
    187b:	6c                   	ins    BYTE PTR es:[rdi],dx
    187c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    187f:	53                   	push   rbx
    1880:	74 34                	je     18b6 <_Z20hashMapSearchElementP7HashMap8string_t+0x56>
    1882:	61                   	(bad)
    1883:	73 69                	jae    18ee <_Z11hashMapDtorP7HashMap+0x1e>
    1885:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1886:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    188a:	53                   	push   rbx
    188b:	74 34                	je     18c1 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    188d:	61                   	(bad)
    188e:	73 69                	jae    18f9 <_Z11hashMapDtorP7HashMap+0x29>
    1890:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1891:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1895:	53                   	push   rbx
    1896:	74 33                	je     18cb <_Z20hashMapSearchElementP7HashMap8string_t+0x6b>
    1898:	66 6d                	ins    WORD PTR es:[rdi],dx
    189a:	61                   	(bad)
    189b:	66 66 66 00 5f 5a    	data16 data16 data16 add BYTE PTR [rdi+0x5a],bl
    18a1:	4e 53                	rex.WRX push rbx
    18a3:	74 36                	je     18db <_Z11hashMapDtorP7HashMap+0xb>
    18a5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    18a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18ab:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    18af:	61                   	(bad)
    18b0:	74 69                	je     191b <_Z11hashMapDtorP7HashMap+0x4b>
    18b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18b4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    18b6:	53                   	push   rbx
    18b7:	74 35                	je     18ee <_Z11hashMapDtorP7HashMap+0x1e>
    18b9:	72 61                	jb     191c <_Z11hashMapDtorP7HashMap+0x4c>
    18bb:	74 69                	je     1926 <_Z11hashMapDtorP7HashMap+0x56>
    18bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18be:	49                   	rex.WB
    18bf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    18c1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    18c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    18c5:	31 30                	xor    DWORD PTR [rax],esi
    18c7:	30 30                	xor    BYTE PTR [rax],dh
    18c9:	30 30                	xor    BYTE PTR [rax],dh
    18cb:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    18ce:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    18d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d1:	45 76 00             	rex.RB jbe 18d4 <_Z11hashMapDtorP7HashMap+0x4>
    18d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d5:	62 72 6c 65 6e       	(bad)
    18da:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    18dd:	65 72 61             	gs jb  1941 <_Z17hashMapDebugPrintP7HashMap+0x1>
    18e0:	74 6f                	je     1951 <_Z17hashMapDebugPrintP7HashMap+0x11>
    18e2:	72 2d                	jb     1911 <_Z11hashMapDtorP7HashMap+0x41>
    18e4:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    18e7:	67 61                	addr32 (bad)
    18e9:	74 69                	je     1954 <_Z17hashMapDebugPrintP7HashMap+0x14>
    18eb:	76 65                	jbe    1952 <_Z17hashMapDebugPrintP7HashMap+0x12>
    18ed:	5f                   	pop    rdi
    18ee:	73 69                	jae    1959 <_Z17hashMapDebugPrintP7HashMap+0x19>
    18f0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    18f2:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    18f6:	31 70 00             	xor    DWORD PTR [rax+0x0],esi
    18f9:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1900:	65 72 00             	gs jb  1903 <_Z11hashMapDtorP7HashMap+0x33>
    1903:	5f                   	pop    rdi
    1904:	52                   	push   rdx
    1905:	65 70 31             	gs jo  1939 <_Z11hashMapDtorP7HashMap+0x69>
    1908:	00 5f 52             	add    BYTE PTR [rdi+0x52],bl
    190b:	65 70 32             	gs jo  1940 <_Z17hashMapDebugPrintP7HashMap>
    190e:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1911:	74 5f                	je     1972 <_Z17hashMapDebugPrintP7HashMap+0x32>
    1913:	70 5f                	jo     1974 <_Z17hashMapDebugPrintP7HashMap+0x34>
    1915:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    1918:	70 72                	jo     198c <_Z17hashMapDebugPrintP7HashMap+0x4c>
    191a:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    191e:	65 73 00             	gs jae 1921 <_Z11hashMapDtorP7HashMap+0x51>
    1921:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1923:	61                   	(bad)
    1924:	70 73                	jo     1999 <_Z17hashMapDebugPrintP7HashMap+0x59>
    1926:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    192b:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    1932:	5f                   	pop    rdi
    1933:	74 6f                	je     19a4 <_Z17hashMapDebugPrintP7HashMap+0x64>
    1935:	5f                   	pop    rdi
    1936:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1939:	72 73                	jb     19ae <_Z17hashMapDebugPrintP7HashMap+0x6e>
    193b:	5f                   	pop    rdi
    193c:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    1943:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1945:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    194a:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1951:	76 73                	jbe    19c6 <_Z17hashMapDebugPrintP7HashMap+0x86>
    1953:	77 73                	ja     19c8 <_Z17hashMapDebugPrintP7HashMap+0x88>
    1955:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1958:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    195c:	53                   	push   rbx
    195d:	74 31                	je     1990 <_Z17hashMapDebugPrintP7HashMap+0x50>
    195f:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1962:	6c                   	ins    BYTE PTR es:[rdi],dx
    1963:	65 73 73             	gs jae 19d9 <_Z17hashMapDebugPrintP7HashMap+0x99>
    1966:	67 72 65             	addr32 jb 19ce <_Z17hashMapDebugPrintP7HashMap+0x8e>
    1969:	61                   	(bad)
    196a:	74 65                	je     19d1 <_Z17hashMapDebugPrintP7HashMap+0x91>
    196c:	72 64                	jb     19d2 <_Z17hashMapDebugPrintP7HashMap+0x92>
    196e:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
    1972:	61                   	(bad)
    1973:	72 6b                	jb     19e0 <_Z17hashMapDebugPrintP7HashMap+0xa0>
    1975:	65 72 73             	gs jb  19eb <_Z17hashMapDebugPrintP7HashMap+0xab>
    1978:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    197b:	53                   	push   rbx
    197c:	74 35                	je     19b3 <_Z17hashMapDebugPrintP7HashMap+0x73>
    197e:	65 78 70             	gs js  19f1 <_Z17hashMapDebugPrintP7HashMap+0xb1>
    1981:	6d                   	ins    DWORD PTR es:[rdi],dx
    1982:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    1985:	5f                   	pop    rdi
    1986:	5a                   	pop    rdx
    1987:	53                   	push   rbx
    1988:	74 35                	je     19bf <_Z17hashMapDebugPrintP7HashMap+0x7f>
    198a:	65 78 70             	gs js  19fd <_Z17hashMapDebugPrintP7HashMap+0xbd>
    198d:	6d                   	ins    DWORD PTR es:[rdi],dx
    198e:	31 66 00             	xor    DWORD PTR [rsi+0x0],esp
    1991:	74 6d                	je     1a00 <_Z15crc32HashString8string_t>
    1993:	5f                   	pop    rdi
    1994:	6d                   	ins    DWORD PTR es:[rdi],dx
    1995:	64 61                	fs (bad)
    1997:	79 00                	jns    1999 <_Z17hashMapDebugPrintP7HashMap+0x59>
    1999:	5f                   	pop    rdi
    199a:	5a                   	pop    rdx
    199b:	53                   	push   rbx
    199c:	74 33                	je     19d1 <_Z17hashMapDebugPrintP7HashMap+0x91>
    199e:	73 69                	jae    1a09 <_Z15crc32HashString8string_t+0x9>
    19a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19a1:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    19a5:	53                   	push   rbx
    19a6:	74 33                	je     19db <_Z17hashMapDebugPrintP7HashMap+0x9b>
    19a8:	73 69                	jae    1a13 <_Z15crc32HashString8string_t+0x13>
    19aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19ab:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    19af:	6c                   	ins    BYTE PTR es:[rdi],dx
    19b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19b1:	61                   	(bad)
    19b2:	74 33                	je     19e7 <_Z17hashMapDebugPrintP7HashMap+0xa7>
    19b4:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    19b7:	5f                   	pop    rdi
    19b8:	47 5f                	rex.RXB pop r15
    19ba:	66 70 6f             	data16 jo 1a2c <_Z15crc32HashString8string_t+0x2c>
    19bd:	73 5f                	jae    1a1e <_Z15crc32HashString8string_t+0x1e>
    19bf:	74 00                	je     19c1 <_Z17hashMapDebugPrintP7HashMap+0x81>
    19c1:	5f                   	pop    rdi
    19c2:	5f                   	pop    rdi
    19c3:	75 69                	jne    1a2e <_Z15crc32HashString8string_t+0x2e>
    19c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19c6:	74 5f                	je     1a27 <_Z15crc32HashString8string_t+0x27>
    19c8:	6c                   	ins    BYTE PTR es:[rdi],dx
    19c9:	65 61                	gs (bad)
    19cb:	73 74                	jae    1a41 <_Z15crc32HashString8string_t+0x41>
    19cd:	36 34 5f             	ss xor al,0x5f
    19d0:	74 00                	je     19d2 <_Z17hashMapDebugPrintP7HashMap+0x92>
    19d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    19d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19d4:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    19d7:	74 69                	je     1a42 <_Z15crc32HashString8string_t+0x42>
    19d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    19da:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    19de:	73 63                	jae    1a43 <_Z15crc32HashString8string_t+0x43>
    19e0:	70 79                	jo     1a5b <_Z15crc32HashString8string_t+0x5b>
    19e2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19e5:	53                   	push   rbx
    19e6:	74 37                	je     1a1f <_Z15crc32HashString8string_t+0x1f>
    19e8:	73 63                	jae    1a4d <_Z15crc32HashString8string_t+0x4d>
    19ea:	61                   	(bad)
    19eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    19ec:	62 6c 6e             	(bad)  {k5}
    19ef:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    19f1:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    19f4:	77 70                	ja     1a66 <_Z15crc32HashString8string_t+0x66>
    19f6:	72 69                	jb     1a61 <_Z15crc32HashString8string_t+0x61>
    19f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19f9:	74 66                	je     1a61 <_Z15crc32HashString8string_t+0x61>
    19fb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19fe:	4e 53                	rex.WRX push rbx
    1a00:	74 36                	je     1a38 <_Z15crc32HashString8string_t+0x38>
    1a02:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1a05:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a08:	31 33                	xor    DWORD PTR [rbx],esi
    1a0a:	64 75 72             	fs jne 1a7f <_Z15crc32HashString8string_t+0x7f>
    1a0d:	61                   	(bad)
    1a0e:	74 69                	je     1a79 <_Z15crc32HashString8string_t+0x79>
    1a10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a12:	5f                   	pop    rdi
    1a13:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    1a16:	74 49                	je     1a61 <_Z15crc32HashString8string_t+0x61>
    1a18:	4e 53                	rex.WRX push rbx
    1a1a:	5f                   	pop    rdi
    1a1b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1a1f:	61                   	(bad)
    1a20:	74 69                	je     1a8b <_Z15crc32HashString8string_t+0x8b>
    1a22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a24:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1a26:	53                   	push   rbx
    1a27:	74 35                	je     1a5e <_Z15crc32HashString8string_t+0x5e>
    1a29:	72 61                	jb     1a8c <_Z15crc32HashString8string_t+0x8c>
    1a2b:	74 69                	je     1a96 <_Z15crc32HashString8string_t+0x96>
    1a2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a2e:	49                   	rex.WB
    1a2f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a31:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a34:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a35:	31 30                	xor    DWORD PTR [rax],esi
    1a37:	30 30                	xor    BYTE PTR [rax],dh
    1a39:	30 30                	xor    BYTE PTR [rax],dh
    1a3b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1a3e:	45                   	rex.RB
    1a3f:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1a41:	53                   	push   rbx
    1a42:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    1a45:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a47:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a4a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a4b:	31 30                	xor    DWORD PTR [rax],esi
    1a4d:	30 30                	xor    BYTE PTR [rax],dh
    1a4f:	30 30                	xor    BYTE PTR [rax],dh
    1a51:	30 30                	xor    BYTE PTR [rax],dh
    1a53:	30 30                	xor    BYTE PTR [rax],dh
    1a55:	45                   	rex.RB
    1a56:	45                   	rex.RB
    1a57:	45                   	rex.RB
    1a58:	45                   	rex.RB
    1a59:	4e 53                	rex.WRX push rbx
    1a5b:	74 39                	je     1a96 <_Z15crc32HashString8string_t+0x96>
    1a5d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1a5f:	61                   	(bad)
    1a60:	62                   	(bad)
    1a61:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a62:	65 5f                	gs pop rdi
    1a64:	69 66 49 58 73 72 4e 	imul   esp,DWORD PTR [rsi+0x49],0x4e727358
    1a6b:	53                   	push   rbx
    1a6c:	5f                   	pop    rdi
    1a6d:	31 33                	xor    DWORD PTR [rbx],esi
    1a6f:	5f                   	pop    rdi
    1a70:	5f                   	pop    rdi
    1a71:	69 73 5f 64 75 72 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61727564
    1a78:	74 69                	je     1ae3 <_Z15crc32HashString8string_t+0xe3>
    1a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7c:	49 54                	rex.WB push r12
    1a7e:	5f                   	pop    rdi
    1a7f:	45                   	rex.RB
    1a80:	45 35 76 61 6c 75    	rex.RB xor eax,0x756c6176
    1a86:	65 45 53             	gs rex.RB push r11
    1a89:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    1a8c:	34 74                	xor    al,0x74
    1a8e:	79 70                	jns    1b00 <_Z15crc32HashString8string_t+0x100>
    1a90:	65 45 52             	gs rex.RB push r10
    1a93:	4b                   	rex.WXB
    1a94:	4e 53                	rex.WRX push rbx
    1a96:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    1a99:	54                   	push   rsp
    1a9a:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    1a9d:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    1aa0:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1aa4:	53                   	push   rbx
    1aa5:	74 33                	je     1ada <_Z15crc32HashString8string_t+0xda>
    1aa7:	65 78 70             	gs js  1b1a <_Z15crc32HashString8string_t+0x11a>
    1aaa:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1aae:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ab5:	76 66                	jbe    1b1d <_Z15crc32HashString8string_t+0x11d>
    1ab7:	77 73                	ja     1b2c <_Z19_mm_crc32HashString8string_t+0xc>
    1ab9:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1abc:	66 00 64 61 74       	data16 add BYTE PTR [rcx+riz*2+0x74],ah
    1ac1:	61                   	(bad)
    1ac2:	5f                   	pop    rdi
    1ac3:	61                   	(bad)
    1ac4:	72 72                	jb     1b38 <_Z19_mm_crc32HashString8string_t+0x18>
    1ac6:	61                   	(bad)
    1ac7:	79 00                	jns    1ac9 <_Z15crc32HashString8string_t+0xc9>
    1ac9:	5f                   	pop    rdi
    1aca:	5a                   	pop    rdx
    1acb:	53                   	push   rbx
    1acc:	74 34                	je     1b02 <_Z15crc32HashString8string_t+0x102>
    1ace:	66 6d                	ins    WORD PTR es:[rdi],dx
    1ad0:	61                   	(bad)
    1ad1:	78 65                	js     1b38 <_Z19_mm_crc32HashString8string_t+0x18>
    1ad3:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1ad7:	4e 53                	rex.WRX push rbx
    1ad9:	74 36                	je     1b11 <_Z15crc32HashString8string_t+0x111>
    1adb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1ade:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1adf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ae0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1ae5:	61                   	(bad)
    1ae6:	74 69                	je     1b51 <_Z19_mm_crc32HashString8string_t+0x31>
    1ae8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1aea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1aec:	53                   	push   rbx
    1aed:	74 35                	je     1b24 <_Z19_mm_crc32HashString8string_t+0x4>
    1aef:	72 61                	jb     1b52 <_Z19_mm_crc32HashString8string_t+0x32>
    1af1:	74 69                	je     1b5c <_Z19_mm_crc32HashString8string_t+0x3c>
    1af3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1af4:	49                   	rex.WB
    1af5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1af7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1afa:	6c                   	ins    BYTE PTR es:[rdi],dx
    1afb:	31 30                	xor    DWORD PTR [rax],esi
    1afd:	30 30                	xor    BYTE PTR [rax],dh
    1aff:	30 30                	xor    BYTE PTR [rax],dh
    1b01:	30 30                	xor    BYTE PTR [rax],dh
    1b03:	30 30                	xor    BYTE PTR [rax],dh
    1b05:	45                   	rex.RB
    1b06:	45                   	rex.RB
    1b07:	45                   	rex.RB
    1b08:	43 34 45             	rex.XB xor al,0x45
    1b0b:	52                   	push   rdx
    1b0c:	4b 53                	rex.WXB push r11
    1b0e:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1b11:	5f                   	pop    rdi
    1b12:	5a                   	pop    rdx
    1b13:	4e                   	rex.WRX
    1b14:	4b 53                	rex.WXB push r11
    1b16:	74 36                	je     1b4e <_Z19_mm_crc32HashString8string_t+0x2e>
    1b18:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b1e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b22:	61                   	(bad)
    1b23:	74 69                	je     1b8e <_Z25_mm_crc32UnrollHashString8string_t+0x1e>
    1b25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b27:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b29:	53                   	push   rbx
    1b2a:	74 35                	je     1b61 <_Z19_mm_crc32HashString8string_t+0x41>
    1b2c:	72 61                	jb     1b8f <_Z25_mm_crc32UnrollHashString8string_t+0x1f>
    1b2e:	74 69                	je     1b99 <_Z25_mm_crc32UnrollHashString8string_t+0x29>
    1b30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b31:	49                   	rex.WB
    1b32:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b34:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b37:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b38:	31 30                	xor    DWORD PTR [rax],esi
    1b3a:	30 30                	xor    BYTE PTR [rax],dh
    1b3c:	30 30                	xor    BYTE PTR [rax],dh
    1b3e:	30 30                	xor    BYTE PTR [rax],dh
    1b40:	30 30                	xor    BYTE PTR [rax],dh
    1b42:	45                   	rex.RB
    1b43:	45                   	rex.RB
    1b44:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1b4a:	74 45                	je     1b91 <_Z25_mm_crc32UnrollHashString8string_t+0x21>
    1b4c:	76 00                	jbe    1b4e <_Z19_mm_crc32HashString8string_t+0x2e>
    1b4e:	5f                   	pop    rdi
    1b4f:	5a                   	pop    rdx
    1b50:	53                   	push   rbx
    1b51:	74 31                	je     1b84 <_Z25_mm_crc32UnrollHashString8string_t+0x14>
    1b53:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1b56:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b57:	65 73 73             	gs jae 1bcd <_Z17murmur2HashString8string_t+0x1d>
    1b5a:	67 72 65             	addr32 jb 1bc2 <_Z17murmur2HashString8string_t+0x12>
    1b5d:	61                   	(bad)
    1b5e:	74 65                	je     1bc5 <_Z17murmur2HashString8string_t+0x15>
    1b60:	72 65                	jb     1bc7 <_Z17murmur2HashString8string_t+0x17>
    1b62:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
    1b66:	69 64 65 00 69 73 5f 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x735f7369
    1b6d:	73 
    1b6e:	74 65                	je     1bd5 <_Z17murmur2HashString8string_t+0x25>
    1b70:	61                   	(bad)
    1b71:	64 79 00             	fs jns 1b74 <_Z25_mm_crc32UnrollHashString8string_t+0x4>
    1b74:	74 67                	je     1bdd <_Z17murmur2HashString8string_t+0x2d>
    1b76:	61                   	(bad)
    1b77:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b78:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b79:	61                   	(bad)
    1b7a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1b7d:	53                   	push   rbx
    1b7e:	74 37                	je     1bb7 <_Z17murmur2HashString8string_t+0x7>
    1b80:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b81:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b82:	72 6f                	jb     1bf3 <_Z17murmur2HashString8string_t+0x43>
    1b84:	75 6e                	jne    1bf4 <_Z17murmur2HashString8string_t+0x44>
    1b86:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1b8b:	53                   	push   rbx
    1b8c:	74 37                	je     1bc5 <_Z17murmur2HashString8string_t+0x15>
    1b8e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b90:	72 6f                	jb     1c01 <_Z17murmur2HashString8string_t+0x51>
    1b92:	75 6e                	jne    1c02 <_Z17murmur2HashString8string_t+0x52>
    1b94:	64 66 00 74 6d 5f    	data16 add BYTE PTR fs:[rbp+rbp*2+0x5f],dh
    1b9a:	73 65                	jae    1c01 <_Z17murmur2HashString8string_t+0x51>
    1b9c:	63 00                	movsxd eax,DWORD PTR [rax]
    1b9e:	5f                   	pop    rdi
    1b9f:	5f                   	pop    rdi
    1ba0:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ba7:	77 63                	ja     1c0c <_Z17murmur2HashString8string_t+0x5c>
    1ba9:	73 74                	jae    1c1f <_Z17murmur2HashString8string_t+0x6f>
    1bab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bac:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bad:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bb0:	53                   	push   rbx
    1bb1:	74 37                	je     1bea <_Z17murmur2HashString8string_t+0x3a>
    1bb3:	73 63                	jae    1c18 <_Z17murmur2HashString8string_t+0x68>
    1bb5:	61                   	(bad)
    1bb6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bb7:	62 6c 6e             	(bad)  {k6}
    1bba:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1bbc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bbf:	53                   	push   rbx
    1bc0:	74 39                	je     1bfb <_Z17murmur2HashString8string_t+0x4b>
    1bc2:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1bc9:	65 72 64             	gs jb  1c30 <_Z17murmur2HashString8string_t+0x80>
    1bcc:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1bd0:	70 73                	jo     1c45 <_Z17murmur2HashString8string_t+0x95>
    1bd2:	74 6c                	je     1c40 <_Z17murmur2HashString8string_t+0x90>
    1bd4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    1bd7:	73 6e                	jae    1c47 <_Z17murmur2HashString8string_t+0x97>
    1bd9:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1bdc:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    1bdf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be1:	72 00                	jb     1be3 <_Z17murmur2HashString8string_t+0x33>
    1be3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be4:	70 65                	jo     1c4b <_Z17murmur2HashString8string_t+0x9b>
    1be6:	72 61                	jb     1c49 <_Z17murmur2HashString8string_t+0x99>
    1be8:	74 6f                	je     1c59 <_Z17murmur2HashString8string_t+0xa9>
    1bea:	72 2d                	jb     1c19 <_Z17murmur2HashString8string_t+0x69>
    1bec:	3c 73                	cmp    al,0x73
    1bee:	74 64                	je     1c54 <_Z17murmur2HashString8string_t+0xa4>
    1bf0:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bf2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1bf5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1bf7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf8:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bfa:	5f                   	pop    rdi
    1bfb:	56                   	push   rsi
    1bfc:	32 3a                	xor    bh,BYTE PTR [rdx]
    1bfe:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    1c01:	65 61                	gs (bad)
    1c03:	64 79 5f             	fs jns 1c65 <_Z13sumHashString8string_t+0x5>
    1c06:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1c0a:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    1c0e:	74 64                	je     1c74 <_Z13sumHashString8string_t+0x14>
    1c10:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c12:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c18:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c1a:	64 75 72             	fs jne 1c8f <_Z13sumHashString8string_t+0x2f>
    1c1d:	61                   	(bad)
    1c1e:	74 69                	je     1c89 <_Z13sumHashString8string_t+0x29>
    1c20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c21:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c22:	3c 6c                	cmp    al,0x6c
    1c24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c26:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c2a:	74 2c                	je     1c58 <_Z17murmur2HashString8string_t+0xa8>
    1c2c:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c2f:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c32:	72 61                	jb     1c95 <_Z13sumHashString8string_t+0x35>
    1c34:	74 69                	je     1c9f <_Z13sumHashString8string_t+0x3f>
    1c36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c37:	3c 31                	cmp    al,0x31
    1c39:	2c 20                	sub    al,0x20
    1c3b:	31 30                	xor    DWORD PTR [rax],esi
    1c3d:	30 30                	xor    BYTE PTR [rax],dh
    1c3f:	30 30                	xor    BYTE PTR [rax],dh
    1c41:	30 30                	xor    BYTE PTR [rax],dh
    1c43:	30 30                	xor    BYTE PTR [rax],dh
    1c45:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c48:	2c 20                	sub    al,0x20
    1c4a:	73 74                	jae    1cc0 <_Z13sumHashString8string_t+0x60>
    1c4c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c4f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c55:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c57:	64 75 72             	fs jne 1ccc <_Z13sumHashString8string_t+0x6c>
    1c5a:	61                   	(bad)
    1c5b:	74 69                	je     1cc6 <_Z13sumHashString8string_t+0x66>
    1c5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c5f:	3c 6c                	cmp    al,0x6c
    1c61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c63:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c67:	74 2c                	je     1c95 <_Z13sumHashString8string_t+0x35>
    1c69:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c6c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c6f:	72 61                	jb     1cd2 <_Z13sumHashString8string_t+0x72>
    1c71:	74 69                	je     1cdc <_Z13sumHashString8string_t+0x7c>
    1c73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c74:	3c 31                	cmp    al,0x31
    1c76:	2c 20                	sub    al,0x20
    1c78:	31 30                	xor    DWORD PTR [rax],esi
    1c7a:	30 30                	xor    BYTE PTR [rax],dh
    1c7c:	30 30                	xor    BYTE PTR [rax],dh
    1c7e:	30 30                	xor    BYTE PTR [rax],dh
    1c80:	30 30                	xor    BYTE PTR [rax],dh
    1c82:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c85:	20 3e                	and    BYTE PTR [rsi],bh
    1c87:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1c8b:	32 00                	xor    al,BYTE PTR [rax]
    1c8d:	70 75                	jo     1d04 <_Z13sumHashString8string_t+0xa4>
    1c8f:	74 77                	je     1d08 <_Z13sumHashString8string_t+0xa8>
    1c91:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1c94:	72 00                	jb     1c96 <_Z13sumHashString8string_t+0x36>
    1c96:	5f                   	pop    rdi
    1c97:	5f                   	pop    rdi
    1c98:	62 75 69 6c 74       	(bad)
    1c9d:	69 6e 5f 73 71 72 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74727173
    1ca4:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1ca8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ca9:	61                   	(bad)
    1caa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cab:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1cae:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1cb0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1cb3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1cb6:	53                   	push   rbx
    1cb7:	74 31                	je     1cea <_Z13sumHashString8string_t+0x8a>
    1cb9:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1cbc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cbd:	65 73 73             	gs jae 1d33 <_Z13sumHashString8string_t+0xd3>
    1cc0:	67 72 65             	addr32 jb 1d28 <_Z13sumHashString8string_t+0xc8>
    1cc3:	61                   	(bad)
    1cc4:	74 65                	je     1d2b <_Z13sumHashString8string_t+0xcb>
    1cc6:	72 66                	jb     1d2e <_Z13sumHashString8string_t+0xce>
    1cc8:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1ccc:	53                   	push   rbx
    1ccd:	74 35                	je     1d04 <_Z13sumHashString8string_t+0xa4>
    1ccf:	66 72 65             	data16 jb 1d37 <_Z13sumHashString8string_t+0xd7>
    1cd2:	78 70                	js     1d44 <_Z13sumHashString8string_t+0xe4>
    1cd4:	65 50                	gs push rax
    1cd6:	69 00 66 61 62 73    	imul   eax,DWORD PTR [rax],0x73626166
    1cdc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cdf:	62 75 69 6c 74       	(bad)
    1ce4:	69 6e 5f 66 77 72 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69727766
    1ceb:	74 65                	je     1d52 <_Z13sumHashString8string_t+0xf2>
    1ced:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1cf0:	53                   	push   rbx
    1cf1:	74 35                	je     1d28 <_Z13sumHashString8string_t+0xc8>
    1cf3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cf4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cf5:	67 31 70 66          	xor    DWORD PTR [eax+0x66],esi
    1cf9:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    1cfc:	74 69                	je     1d67 <_Z13sumHashString8string_t+0x107>
    1cfe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cff:	3c 31                	cmp    al,0x31
    1d01:	2c 20                	sub    al,0x20
    1d03:	31 30                	xor    DWORD PTR [rax],esi
    1d05:	30 30                	xor    BYTE PTR [rax],dh
    1d07:	30 30                	xor    BYTE PTR [rax],dh
    1d09:	30 3e                	xor    BYTE PTR [rsi],bh
    1d0b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d0e:	53                   	push   rbx
    1d0f:	74 39                	je     1d4a <_Z13sumHashString8string_t+0xea>
    1d11:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1d18:	65 72 65             	gs jb  1d80 <_Z13sumHashString8string_t+0x120>
    1d1b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1d1f:	4e                   	rex.WRX
    1d20:	4b 53                	rex.WXB push r11
    1d22:	74 36                	je     1d5a <_Z13sumHashString8string_t+0xfa>
    1d24:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1d27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d2a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1d2e:	61                   	(bad)
    1d2f:	74 69                	je     1d9a <_Z13sumHashString8string_t+0x13a>
    1d31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d32:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d33:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1d35:	53                   	push   rbx
    1d36:	74 35                	je     1d6d <_Z13sumHashString8string_t+0x10d>
    1d38:	72 61                	jb     1d9b <_Z13sumHashString8string_t+0x13b>
    1d3a:	74 69                	je     1da5 <_Z13sumHashString8string_t+0x145>
    1d3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d3d:	49                   	rex.WB
    1d3e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d40:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d43:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d44:	31 30                	xor    DWORD PTR [rax],esi
    1d46:	30 30                	xor    BYTE PTR [rax],dh
    1d48:	30 30                	xor    BYTE PTR [rax],dh
    1d4a:	30 30                	xor    BYTE PTR [rax],dh
    1d4c:	30 30                	xor    BYTE PTR [rax],dh
    1d4e:	45                   	rex.RB
    1d4f:	45                   	rex.RB
    1d50:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1d52:	67 45 76 00          	addr32 rex.RB jbe 1d56 <_Z13sumHashString8string_t+0xf6>
    1d56:	5f                   	pop    rdi
    1d57:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1d59:	61                   	(bad)
    1d5a:	67 73 32             	addr32 jae 1d8f <_Z13sumHashString8string_t+0x12f>
    1d5d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d60:	4e 53                	rex.WRX push rbx
    1d62:	74 35                	je     1d99 <_Z13sumHashString8string_t+0x139>
    1d64:	72 61                	jb     1dc7 <_Z13sumHashString8string_t+0x167>
    1d66:	74 69                	je     1dd1 <_Z17adler32HashString8string_t+0x1>
    1d68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d69:	49                   	rex.WB
    1d6a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d6c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d6f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d70:	31 30                	xor    DWORD PTR [rax],esi
    1d72:	30 30                	xor    BYTE PTR [rax],dh
    1d74:	45                   	rex.RB
    1d75:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    1d79:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d7a:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1d7e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1d80:	75 5f                	jne    1de1 <_Z17adler32HashString8string_t+0x11>
    1d82:	64 65 62 75 67 00 5f 	(bad)
    1d89:	5f                   	pop    rdi
    1d8a:	75 69                	jne    1df5 <_Z17adler32HashString8string_t+0x25>
    1d8c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d8d:	74 5f                	je     1dee <_Z17adler32HashString8string_t+0x1e>
    1d8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d90:	65 61                	gs (bad)
    1d92:	73 74                	jae    1e08 <_Z17adler32HashString8string_t+0x38>
    1d94:	33 32                	xor    esi,DWORD PTR [rdx]
    1d96:	5f                   	pop    rdi
    1d97:	74 00                	je     1d99 <_Z13sumHashString8string_t+0x139>
    1d99:	5f                   	pop    rdi
    1d9a:	5a                   	pop    rdx
    1d9b:	53                   	push   rbx
    1d9c:	74 34                	je     1dd2 <_Z17adler32HashString8string_t+0x2>
    1d9e:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1da1:	74 65                	je     1e08 <_Z17adler32HashString8string_t+0x38>
    1da3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1da6:	53                   	push   rbx
    1da7:	74 34                	je     1ddd <_Z17adler32HashString8string_t+0xd>
    1da9:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1dac:	74 66                	je     1e14 <_Z17adler32HashString8string_t+0x44>
    1dae:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1db1:	4f 5f                	rex.WRXB pop r15
    1db3:	72 65                	jb     1e1a <_Z17adler32HashString8string_t+0x4a>
    1db5:	61                   	(bad)
    1db6:	64 5f                	fs pop rdi
    1db8:	62 61 73 65 00       	(bad)
    1dbd:	5f                   	pop    rdi
    1dbe:	5f                   	pop    rdi
    1dbf:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1dc6:	77 63                	ja     1e2b <_Z17adler32HashString8string_t+0x5b>
    1dc8:	73 74                	jae    1e3e <_Z17adler32HashString8string_t+0x6e>
    1dca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dcb:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dcc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dcd:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    1dd0:	72 6d                	jb     1e3f <_Z17adler32HashString8string_t+0x6f>
    1dd2:	75 72                	jne    1e46 <_Z17adler32HashString8string_t+0x76>
    1dd4:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    1dd7:	69 6c 65 73 00 5f 5a 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x535a5f00
    1dde:	53 
    1ddf:	74 34                	je     1e15 <_Z17adler32HashString8string_t+0x45>
    1de1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1de2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1de3:	64 66 66 50          	fs data16 push ax
    1de7:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1deb:	67 72 65             	addr32 jb 1e53 <_Z13elfHashString8string_t+0x3>
    1dee:	61                   	(bad)
    1def:	74 65                	je     1e56 <_Z13elfHashString8string_t+0x6>
    1df1:	72 65                	jb     1e58 <_Z13elfHashString8string_t+0x8>
    1df3:	71 75                	jno    1e6a <_Z13elfHashString8string_t+0x1a>
    1df5:	61                   	(bad)
    1df6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1df7:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1dfa:	67 5f                	addr32 pop rdi
    1dfc:	73 61                	jae    1e5f <_Z13elfHashString8string_t+0xf>
    1dfe:	76 65                	jbe    1e65 <_Z13elfHashString8string_t+0x15>
    1e00:	5f                   	pop    rdi
    1e01:	61                   	(bad)
    1e02:	72 65                	jb     1e69 <_Z13elfHashString8string_t+0x19>
    1e04:	61                   	(bad)
    1e05:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1e08:	53                   	push   rbx
    1e09:	74 35                	je     1e40 <_Z17adler32HashString8string_t+0x70>
    1e0b:	72 6f                	jb     1e7c <_Z13elfHashString8string_t+0x2c>
    1e0d:	75 6e                	jne    1e7d <_Z13elfHashString8string_t+0x2d>
    1e0f:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1e14:	53                   	push   rbx
    1e15:	74 35                	je     1e4c <_Z17adler32HashString8string_t+0x7c>
    1e17:	72 6f                	jb     1e88 <_Z13elfHashString8string_t+0x38>
    1e19:	75 6e                	jne    1e89 <_Z13elfHashString8string_t+0x39>
    1e1b:	64 66 00 74 68 69    	data16 add BYTE PTR fs:[rax+rbp*2+0x69],dh
    1e21:	73 00                	jae    1e23 <_Z17adler32HashString8string_t+0x53>
    1e23:	5f                   	pop    rdi
    1e24:	5a                   	pop    rdx
    1e25:	4e 53                	rex.WRX push rbx
    1e27:	74 35                	je     1e5e <_Z13elfHashString8string_t+0xe>
    1e29:	72 61                	jb     1e8c <_Z13elfHashString8string_t+0x3c>
    1e2b:	74 69                	je     1e96 <_Z13elfHashString8string_t+0x46>
    1e2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e2e:	49                   	rex.WB
    1e2f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e31:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e34:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e35:	31 30                	xor    DWORD PTR [rax],esi
    1e37:	30 30                	xor    BYTE PTR [rax],dh
    1e39:	30 30                	xor    BYTE PTR [rax],dh
    1e3b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e3e:	33 64 65 6e          	xor    esp,DWORD PTR [rbp+riz*2+0x6e]
    1e42:	45 00 5f 75          	add    BYTE PTR [r15+0x75],r11b
    1e46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e47:	75 73                	jne    1ebc <_Z13searchElementP4List8string_t.part.0+0x1c>
    1e49:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    1e4d:	5f                   	pop    rdi
    1e4e:	5a                   	pop    rdx
    1e4f:	4e 53                	rex.WRX push rbx
    1e51:	74 36                	je     1e89 <_Z13elfHashString8string_t+0x39>
    1e53:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e59:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e5d:	61                   	(bad)
    1e5e:	74 69                	je     1ec9 <_Z13searchElementP4List8string_t.part.0+0x29>
    1e60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e61:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e62:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1e64:	53                   	push   rbx
    1e65:	74 35                	je     1e9c <_Z13elfHashString8string_t+0x4c>
    1e67:	72 61                	jb     1eca <_Z13searchElementP4List8string_t.part.0+0x2a>
    1e69:	74 69                	je     1ed4 <_Z8listCtorv+0x4>
    1e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e6c:	49                   	rex.WB
    1e6d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e6f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e72:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e73:	31 30                	xor    DWORD PTR [rax],esi
    1e75:	30 30                	xor    BYTE PTR [rax],dh
    1e77:	30 30                	xor    BYTE PTR [rax],dh
    1e79:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e7c:	45 70 70             	rex.RB jo 1eef <_Z8listCtorv+0x1f>
    1e7f:	45 76 00             	rex.RB jbe 1e82 <_Z13elfHashString8string_t+0x32>
    1e82:	74 6d                	je     1ef1 <_Z8listCtorv+0x21>
    1e84:	5f                   	pop    rdi
    1e85:	67 6d                	ins    DWORD PTR es:[edi],dx
    1e87:	74 6f                	je     1ef8 <_Z8listCtorv+0x28>
    1e89:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1e8e:	4e 53                	rex.WRX push rbx
    1e90:	74 36                	je     1ec8 <_Z13searchElementP4List8string_t.part.0+0x28>
    1e92:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e98:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e9c:	61                   	(bad)
    1e9d:	74 69                	je     1f08 <_Z8listCtorv+0x38>
    1e9f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ea0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ea1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1ea3:	53                   	push   rbx
    1ea4:	74 35                	je     1edb <_Z8listCtorv+0xb>
    1ea6:	72 61                	jb     1f09 <_Z8listCtorv+0x39>
    1ea8:	74 69                	je     1f13 <_Z8listCtorv+0x43>
    1eaa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1eab:	49                   	rex.WB
    1eac:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1eae:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1eb1:	6c                   	ins    BYTE PTR es:[rdi],dx
    1eb2:	31 30                	xor    DWORD PTR [rax],esi
    1eb4:	30 30                	xor    BYTE PTR [rax],dh
    1eb6:	30 30                	xor    BYTE PTR [rax],dh
    1eb8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1ebb:	45                   	rex.RB
    1ebc:	43 34 45             	rex.XB xor al,0x45
    1ebf:	76 00                	jbe    1ec1 <_Z13searchElementP4List8string_t.part.0+0x21>
    1ec1:	65 72 66             	gs jb  1f2a <_Z8listCtorv+0x5a>
    1ec4:	63 00                	movsxd eax,DWORD PTR [rax]
    1ec6:	74 65                	je     1f2d <_Z8listCtorv+0x5d>
    1ec8:	73 74                	jae    1f3e <_Z12pushListElemP4List8string_t+0xe>
    1eca:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    1ecc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ecd:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ece:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    1ed5:	75 69                	jne    1f40 <_Z12pushListElemP4List8string_t+0x10>
    1ed7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ed8:	74 70                	je     1f4a <_Z12pushListElemP4List8string_t+0x1a>
    1eda:	74 72                	je     1f4e <_Z12pushListElemP4List8string_t+0x1e>
    1edc:	5f                   	pop    rdi
    1edd:	74 00                	je     1edf <_Z8listCtorv+0xf>
    1edf:	5f                   	pop    rdi
    1ee0:	5a                   	pop    rdx
    1ee1:	53                   	push   rbx
    1ee2:	74 34                	je     1f18 <_Z8listCtorv+0x48>
    1ee4:	73 69                	jae    1f4f <_Z12pushListElemP4List8string_t+0x1f>
    1ee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee7:	68 65 00 61 73       	push   0x73610065
    1eec:	69 6e 68 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x68],0x535a5f00
    1ef3:	74 36                	je     1f2b <_Z8listCtorv+0x5b>
    1ef5:	74 67                	je     1f5e <_Z12pushListElemP4List8string_t+0x2e>
    1ef7:	61                   	(bad)
    1ef8:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ef9:	6d                   	ins    DWORD PTR es:[rdi],dx
    1efa:	61                   	(bad)
    1efb:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1eff:	53                   	push   rbx
    1f00:	74 36                	je     1f38 <_Z12pushListElemP4List8string_t+0x8>
    1f02:	74 67                	je     1f6b <_Z12pushListElemP4List8string_t+0x3b>
    1f04:	61                   	(bad)
    1f05:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f06:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f07:	61                   	(bad)
    1f08:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1f0c:	4e 53                	rex.WRX push rbx
    1f0e:	74 36                	je     1f46 <_Z12pushListElemP4List8string_t+0x16>
    1f10:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f16:	31 30                	xor    DWORD PTR [rax],esi
    1f18:	74 69                	je     1f83 <_Z12pushListElemP4List8string_t+0x53>
    1f1a:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f1b:	65 5f                	gs pop rdi
    1f1d:	70 6f                	jo     1f8e <_Z12pushListElemP4List8string_t+0x5e>
    1f1f:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1f26:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1f29:	32 31                	xor    dh,BYTE PTR [rcx]
    1f2b:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1f2e:	65 61                	gs (bad)
    1f30:	64 79 5f             	fs jns 1f92 <_Z12pushListElemP4List8string_t+0x62>
    1f33:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1f37:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1f3b:	5f                   	pop    rdi
    1f3c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f40:	61                   	(bad)
    1f41:	74 69                	je     1fac <_Z12pushListElemP4List8string_t+0x7c>
    1f43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f45:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f47:	53                   	push   rbx
    1f48:	74 35                	je     1f7f <_Z12pushListElemP4List8string_t+0x4f>
    1f4a:	72 61                	jb     1fad <_Z12pushListElemP4List8string_t+0x7d>
    1f4c:	74 69                	je     1fb7 <_Z12pushListElemP4List8string_t+0x87>
    1f4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f4f:	49                   	rex.WB
    1f50:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f52:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f55:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f56:	31 30                	xor    DWORD PTR [rax],esi
    1f58:	30 30                	xor    BYTE PTR [rax],dh
    1f5a:	30 30                	xor    BYTE PTR [rax],dh
    1f5c:	30 30                	xor    BYTE PTR [rax],dh
    1f5e:	30 30                	xor    BYTE PTR [rax],dh
    1f60:	45                   	rex.RB
    1f61:	45                   	rex.RB
    1f62:	45                   	rex.RB
    1f63:	45                   	rex.RB
    1f64:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    1f68:	78 45                	js     1faf <_Z12pushListElemP4List8string_t+0x7f>
    1f6a:	76 00                	jbe    1f6c <_Z12pushListElemP4List8string_t+0x3c>
    1f6c:	5f                   	pop    rdi
    1f6d:	5a                   	pop    rdx
    1f6e:	53                   	push   rbx
    1f6f:	74 35                	je     1fa6 <_Z12pushListElemP4List8string_t+0x76>
    1f71:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f72:	64 65 78 70          	fs gs js 1fe6 <_Z12pushListElemP4List8string_t+0xb6>
    1f76:	66 69 00 5f 5a       	imul   ax,WORD PTR [rax],0x5a5f
    1f7b:	4e 53                	rex.WRX push rbx
    1f7d:	74 36                	je     1fb5 <_Z12pushListElemP4List8string_t+0x85>
    1f7f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f85:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f89:	61                   	(bad)
    1f8a:	74 69                	je     1ff5 <_Z12pushListElemP4List8string_t+0xc5>
    1f8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f8e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f90:	53                   	push   rbx
    1f91:	74 35                	je     1fc8 <_Z12pushListElemP4List8string_t+0x98>
    1f93:	72 61                	jb     1ff6 <_Z12pushListElemP4List8string_t+0xc6>
    1f95:	74 69                	je     2000 <_Z12pushListElemP4List8string_t+0xd0>
    1f97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f98:	49                   	rex.WB
    1f99:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f9b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f9f:	31 30                	xor    DWORD PTR [rax],esi
    1fa1:	30 30                	xor    BYTE PTR [rax],dh
    1fa3:	30 30                	xor    BYTE PTR [rax],dh
    1fa5:	30 30                	xor    BYTE PTR [rax],dh
    1fa7:	30 30                	xor    BYTE PTR [rax],dh
    1fa9:	45                   	rex.RB
    1faa:	45                   	rex.RB
    1fab:	45 70 4c             	rex.RB jo 1ffa <_Z12pushListElemP4List8string_t+0xca>
    1fae:	45 52                	rex.RB push r10
    1fb0:	4b 53                	rex.WXB push r11
    1fb2:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1fb5:	5f                   	pop    rdi
    1fb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fb8:	64 5f                	fs pop rdi
    1fba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fbb:	66 66 73 65          	data16 data16 jae 2024 <_Z12pushListElemP4List8string_t+0xf4>
    1fbf:	74 00                	je     1fc1 <_Z12pushListElemP4List8string_t+0x91>
    1fc1:	66 73 65             	data16 jae 2029 <_Z12pushListElemP4List8string_t+0xf9>
    1fc4:	74 70                	je     2036 <_Z12pushListElemP4List8string_t+0x106>
    1fc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fc7:	73 00                	jae    1fc9 <_Z12pushListElemP4List8string_t+0x99>
    1fc9:	72 61                	jb     202c <_Z12pushListElemP4List8string_t+0xfc>
    1fcb:	74 69                	je     2036 <_Z12pushListElemP4List8string_t+0x106>
    1fcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fce:	3c 31                	cmp    al,0x31
    1fd0:	2c 20                	sub    al,0x20
    1fd2:	31 30                	xor    DWORD PTR [rax],esi
    1fd4:	30 30                	xor    BYTE PTR [rax],dh
    1fd6:	30 30                	xor    BYTE PTR [rax],dh
    1fd8:	30 30                	xor    BYTE PTR [rax],dh
    1fda:	30 30                	xor    BYTE PTR [rax],dh
    1fdc:	3e 00 69 6e          	ds add BYTE PTR [rcx+0x6e],ch
    1fe0:	74 5f                	je     2041 <_Z12pushListElemP4List8string_t+0x111>
    1fe2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fe3:	5f                   	pop    rdi
    1fe4:	73 65                	jae    204b <_Z12pushListElemP4List8string_t+0x11b>
    1fe6:	70 5f                	jo     2047 <_Z12pushListElemP4List8string_t+0x117>
    1fe8:	62 79 5f 73 70       	(bad)
    1fed:	61                   	(bad)
    1fee:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1ff1:	5f                   	pop    rdi
    1ff2:	5a                   	pop    rdx
    1ff3:	4e 53                	rex.WRX push rbx
    1ff5:	74 35                	je     202c <_Z12pushListElemP4List8string_t+0xfc>
    1ff7:	72 61                	jb     205a <_Z12pushListElemP4List8string_t+0x12a>
    1ff9:	74 69                	je     2064 <_Z12pushListElemP4List8string_t+0x134>
    1ffb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ffc:	49                   	rex.WB
    1ffd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1fff:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2002:	6c                   	ins    BYTE PTR es:[rdi],dx
    2003:	31 30                	xor    DWORD PTR [rax],esi
    2005:	30 30                	xor    BYTE PTR [rax],dh
    2007:	30 30                	xor    BYTE PTR [rax],dh
    2009:	30 30                	xor    BYTE PTR [rax],dh
    200b:	30 30                	xor    BYTE PTR [rax],dh
    200d:	45                   	rex.RB
    200e:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    2012:	6d                   	ins    DWORD PTR es:[rdi],dx
    2013:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    2017:	53                   	push   rbx
    2018:	74 35                	je     204f <_Z12pushListElemP4List8string_t+0x11f>
    201a:	69 73 6e 61 6e 64 00 	imul   esi,DWORD PTR [rbx+0x6e],0x646e61
    2021:	5f                   	pop    rdi
    2022:	5a                   	pop    rdx
    2023:	53                   	push   rbx
    2024:	74 35                	je     205b <_Z12pushListElemP4List8string_t+0x12b>
    2026:	69 73 6e 61 6e 65 00 	imul   esi,DWORD PTR [rbx+0x6e],0x656e61
    202d:	5f                   	pop    rdi
    202e:	5a                   	pop    rdx
    202f:	53                   	push   rbx
    2030:	74 35                	je     2067 <_Z12pushListElemP4List8string_t+0x137>
    2032:	69 73 6e 61 6e 66 00 	imul   esi,DWORD PTR [rbx+0x6e],0x666e61
    2039:	5f                   	pop    rdi
    203a:	5f                   	pop    rdi
    203b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2042:	73 77                	jae    20bb <_Z11popListElemP4List8string_t+0xb>
    2044:	73 63                	jae    20a9 <_Z12pushListElemP4List8string_t+0x179>
    2046:	61                   	(bad)
    2047:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2048:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    204c:	4e 53                	rex.WRX push rbx
    204e:	74 36                	je     2086 <_Z12pushListElemP4List8string_t+0x156>
    2050:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2053:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2054:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2055:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2056:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    205a:	61                   	(bad)
    205b:	74 69                	je     20c6 <_Z11popListElemP4List8string_t+0x16>
    205d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    205e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    205f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2061:	53                   	push   rbx
    2062:	74 35                	je     2099 <_Z12pushListElemP4List8string_t+0x169>
    2064:	72 61                	jb     20c7 <_Z11popListElemP4List8string_t+0x17>
    2066:	74 69                	je     20d1 <_Z11popListElemP4List8string_t+0x21>
    2068:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2069:	49                   	rex.WB
    206a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    206c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    206f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2070:	31 30                	xor    DWORD PTR [rax],esi
    2072:	30 30                	xor    BYTE PTR [rax],dh
    2074:	30 30                	xor    BYTE PTR [rax],dh
    2076:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2079:	45 34 7a             	rex.RB xor al,0x7a
    207c:	65 72 6f             	gs jb  20ee <_Z11popListElemP4List8string_t+0x3e>
    207f:	45 76 00             	rex.RB jbe 2082 <_Z12pushListElemP4List8string_t+0x152>
    2082:	5f                   	pop    rdi
    2083:	5a                   	pop    rdx
    2084:	4e 53                	rex.WRX push rbx
    2086:	74 36                	je     20be <_Z11popListElemP4List8string_t+0xe>
    2088:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    208b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    208d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2092:	61                   	(bad)
    2093:	74 69                	je     20fe <_Z11popListElemP4List8string_t+0x4e>
    2095:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2096:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2097:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2099:	53                   	push   rbx
    209a:	74 35                	je     20d1 <_Z11popListElemP4List8string_t+0x21>
    209c:	72 61                	jb     20ff <_Z11popListElemP4List8string_t+0x4f>
    209e:	74 69                	je     2109 <_Z11popListElemP4List8string_t+0x59>
    20a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20a1:	49                   	rex.WB
    20a2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    20a4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    20a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    20a8:	31 30                	xor    DWORD PTR [rax],esi
    20aa:	30 30                	xor    BYTE PTR [rax],dh
    20ac:	30 30                	xor    BYTE PTR [rax],dh
    20ae:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    20b1:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    20b3:	4c                   	rex.WR
    20b4:	45 52                	rex.RB push r10
    20b6:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    20b8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    20bb:	4e 53                	rex.WRX push rbx
    20bd:	74 36                	je     20f5 <_Z11popListElemP4List8string_t+0x45>
    20bf:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    20c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c5:	31 30                	xor    DWORD PTR [rax],esi
    20c7:	74 69                	je     2132 <_Z11popListElemP4List8string_t+0x82>
    20c9:	6d                   	ins    DWORD PTR es:[rdi],dx
    20ca:	65 5f                	gs pop rdi
    20cc:	70 6f                	jo     213d <_Z11popListElemP4List8string_t+0x8d>
    20ce:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    20d5:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    20d8:	32 31                	xor    dh,BYTE PTR [rcx]
    20da:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    20dd:	65 61                	gs (bad)
    20df:	64 79 5f             	fs jns 2141 <_Z11popListElemP4List8string_t+0x91>
    20e2:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    20e6:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    20ea:	5f                   	pop    rdi
    20eb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    20ef:	61                   	(bad)
    20f0:	74 69                	je     215b <_Z11popListElemP4List8string_t+0xab>
    20f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    20f6:	53                   	push   rbx
    20f7:	74 35                	je     212e <_Z11popListElemP4List8string_t+0x7e>
    20f9:	72 61                	jb     215c <_Z11popListElemP4List8string_t+0xac>
    20fb:	74 69                	je     2166 <_Z11popListElemP4List8string_t+0xb6>
    20fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fe:	49                   	rex.WB
    20ff:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2101:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2104:	6c                   	ins    BYTE PTR es:[rdi],dx
    2105:	31 30                	xor    DWORD PTR [rax],esi
    2107:	30 30                	xor    BYTE PTR [rax],dh
    2109:	30 30                	xor    BYTE PTR [rax],dh
    210b:	30 30                	xor    BYTE PTR [rax],dh
    210d:	30 30                	xor    BYTE PTR [rax],dh
    210f:	45                   	rex.RB
    2110:	45                   	rex.RB
    2111:	45                   	rex.RB
    2112:	45                   	rex.RB
    2113:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    2117:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2118:	45 76 00             	rex.RB jbe 211b <_Z11popListElemP4List8string_t+0x6b>
    211b:	5f                   	pop    rdi
    211c:	5f                   	pop    rdi
    211d:	63 64 00 5f          	movsxd esp,DWORD PTR [rax+rax*1+0x5f]
    2121:	5a                   	pop    rdx
    2122:	53                   	push   rbx
    2123:	74 35                	je     215a <_Z11popListElemP4List8string_t+0xaa>
    2125:	74 72                	je     2199 <_Z13searchElementP4List8string_t+0x9>
    2127:	75 6e                	jne    2197 <_Z13searchElementP4List8string_t+0x7>
    2129:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    212c:	5f                   	pop    rdi
    212d:	5a                   	pop    rdx
    212e:	53                   	push   rbx
    212f:	74 35                	je     2166 <_Z11popListElemP4List8string_t+0xb6>
    2131:	74 72                	je     21a5 <_Z13searchElementP4List8string_t+0x15>
    2133:	75 6e                	jne    21a3 <_Z13searchElementP4List8string_t+0x13>
    2135:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    2138:	5f                   	pop    rdi
    2139:	5a                   	pop    rdx
    213a:	53                   	push   rbx
    213b:	74 34                	je     2171 <_Z11popListElemP4List8string_t+0xc1>
    213d:	66 6d                	ins    WORD PTR es:[rdi],dx
    213f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2140:	64 66 66 00 77 6d    	data16 data16 add BYTE PTR fs:[rdi+0x6d],dh
    2146:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2148:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    214b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    214e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2155:	66 77 73             	data16 ja 21cb <_Z13searchElementP4List8string_t+0x3b>
    2158:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    215b:	66 00 74 6d 5f       	data16 add BYTE PTR [rbp+rbp*2+0x5f],dh
    2160:	6d                   	ins    DWORD PTR es:[rdi],dx
    2161:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2162:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2163:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2166:	64 5f                	fs pop rdi
    2168:	64 65 76 69          	fs gs jbe 21d5 <_Z13searchElementP4List8string_t+0x45>
    216c:	61                   	(bad)
    216d:	74 69                	je     21d8 <_Z13searchElementP4List8string_t+0x48>
    216f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2170:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2171:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
    2174:	72 65                	jb     21db <_Z13searchElementP4List8string_t+0x4b>
    2176:	65 72 65             	gs jb  21de <_Z13searchElementP4List8string_t+0x4e>
    2179:	73 5f                	jae    21da <_Z13searchElementP4List8string_t+0x4a>
    217b:	6c                   	ins    BYTE PTR es:[rdi],dx
    217c:	69 73 74 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+0x74],0x4e5a5f00
    2183:	53                   	push   rbx
    2184:	74 36                	je     21bc <_Z13searchElementP4List8string_t+0x2c>
    2186:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2189:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    218a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    218b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    218c:	6d                   	ins    DWORD PTR es:[rdi],dx
    218d:	69 49 6c 53 74 35 72 	imul   ecx,DWORD PTR [rcx+0x6c],0x72357453
    2194:	61                   	(bad)
    2195:	74 69                	je     2200 <_Z13searchElementP4List8string_t+0x70>
    2197:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2198:	49                   	rex.WB
    2199:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    219b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    219e:	6c                   	ins    BYTE PTR es:[rdi],dx
    219f:	31 30                	xor    DWORD PTR [rax],esi
    21a1:	30 30                	xor    BYTE PTR [rax],dh
    21a3:	30 30                	xor    BYTE PTR [rax],dh
    21a5:	30 30                	xor    BYTE PTR [rax],dh
    21a7:	30 30                	xor    BYTE PTR [rax],dh
    21a9:	45                   	rex.RB
    21aa:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    21ac:	53                   	push   rbx
    21ad:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21b0:	45                   	rex.RB
    21b1:	4e 53                	rex.WRX push rbx
    21b3:	74 31                	je     21e6 <_Z13searchElementP4List8string_t+0x56>
    21b5:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    21b8:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    21ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21bc:	5f                   	pop    rdi
    21bd:	74 79                	je     2238 <_Z8listDtorP4List+0x28>
    21bf:	70 65                	jo     2226 <_Z8listDtorP4List+0x16>
    21c1:	49                   	rex.WB
    21c2:	4a                   	rex.WX
    21c3:	4e 53                	rex.WRX push rbx
    21c5:	5f                   	pop    rdi
    21c6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    21ca:	61                   	(bad)
    21cb:	74 69                	je     2236 <_Z8listDtorP4List+0x26>
    21cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21cf:	49 54                	rex.WB push r12
    21d1:	5f                   	pop    rdi
    21d2:	54                   	push   rsp
    21d3:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    21d6:	45                   	rex.RB
    21d7:	4e 53                	rex.WRX push rbx
    21d9:	34 5f                	xor    al,0x5f
    21db:	49 54                	rex.WB push r12
    21dd:	31 5f 54             	xor    DWORD PTR [rdi+0x54],ebx
    21e0:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21e3:	45                   	rex.RB
    21e4:	45                   	rex.RB
    21e5:	45 34 74             	rex.RB xor al,0x74
    21e8:	79 70                	jns    225a <_Z10debugPrintP4List+0xa>
    21ea:	65 45 52             	gs rex.RB push r10
    21ed:	4b 53                	rex.WXB push r11
    21ef:	37                   	(bad)
    21f0:	5f                   	pop    rdi
    21f1:	52                   	push   rdx
    21f2:	4b 53                	rex.WXB push r11
    21f4:	41 5f                	pop    r15
    21f6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    21f9:	4e 53                	rex.WRX push rbx
    21fb:	74 36                	je     2233 <_Z8listDtorP4List+0x23>
    21fd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2200:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2201:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2202:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2203:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2207:	61                   	(bad)
    2208:	74 69                	je     2273 <_Z10debugPrintP4List+0x23>
    220a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    220b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    220c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    220e:	53                   	push   rbx
    220f:	74 35                	je     2246 <_Z8listDtorP4List+0x36>
    2211:	72 61                	jb     2274 <_Z10debugPrintP4List+0x24>
    2213:	74 69                	je     227e <_Z10debugPrintP4List+0x2e>
    2215:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2216:	49                   	rex.WB
    2217:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2219:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    221c:	6c                   	ins    BYTE PTR es:[rdi],dx
    221d:	31 30                	xor    DWORD PTR [rax],esi
    221f:	30 30                	xor    BYTE PTR [rax],dh
    2221:	30 30                	xor    BYTE PTR [rax],dh
    2223:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2226:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    222a:	78 45                	js     2271 <_Z10debugPrintP4List+0x21>
    222c:	76 00                	jbe    222e <_Z8listDtorP4List+0x1e>
    222e:	5f                   	pop    rdi
    222f:	49                   	rex.WB
    2230:	4f 5f                	rex.WRXB pop r15
    2232:	77 72                	ja     22a6 <_Z10debugPrintP4List+0x56>
    2234:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    223b:	00 
    223c:	5f                   	pop    rdi
    223d:	54                   	push   rsp
    223e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    223f:	44 75 72             	rex.R jne 22b4 <_Z10debugPrintP4List+0x64>
    2242:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2245:	4e 53                	rex.WRX push rbx
    2247:	74 36                	je     227f <_Z10debugPrintP4List+0x2f>
    2249:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    224c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    224e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2253:	61                   	(bad)
    2254:	74 69                	je     22bf <_Z10debugPrintP4List+0x6f>
    2256:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2257:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2258:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    225a:	53                   	push   rbx
    225b:	74 35                	je     2292 <_Z10debugPrintP4List+0x42>
    225d:	72 61                	jb     22c0 <_Z10debugPrintP4List+0x70>
    225f:	74 69                	je     22ca <_Z10debugPrintP4List+0x7a>
    2261:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2262:	49                   	rex.WB
    2263:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2265:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2268:	6c                   	ins    BYTE PTR es:[rdi],dx
    2269:	31 30                	xor    DWORD PTR [rax],esi
    226b:	30 30                	xor    BYTE PTR [rax],dh
    226d:	30 30                	xor    BYTE PTR [rax],dh
    226f:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2272:	45 61                	rex.RB (bad)
    2274:	53                   	push   rbx
    2275:	45 52                	rex.RB push r10
    2277:	4b 53                	rex.WXB push r11
    2279:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    227c:	5f                   	pop    rdi
    227d:	5a                   	pop    rdx
    227e:	53                   	push   rbx
    227f:	74 34                	je     22b5 <_Z10debugPrintP4List+0x65>
    2281:	73 71                	jae    22f4 <_Z10debugPrintP4List+0xa4>
    2283:	72 74                	jb     22f9 <_Z10debugPrintP4List+0xa9>
    2285:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2289:	53                   	push   rbx
    228a:	74 34                	je     22c0 <_Z10debugPrintP4List+0x70>
    228c:	73 71                	jae    22ff <_Z10debugPrintP4List+0xaf>
    228e:	72 74                	jb     2304 <_Z10debugPrintP4List+0xb4>
    2290:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    2294:	74 6f                	je     2305 <_Z10debugPrintP4List+0xb5>
    2296:	62                   	(bad)
    2297:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    229a:	65 72 69             	gs jb  2306 <_Z10debugPrintP4List+0xb6>
    229d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229e:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    22a1:	61                   	(bad)
    22a2:	76 65                	jbe    2309 <_Z10debugPrintP4List+0xb9>
    22a4:	72 61                	jb     2307 <_Z10debugPrintP4List+0xb7>
    22a6:	67 65 5f             	addr32 gs pop rdi
    22a9:	74 69                	je     2314 <_Z10debugPrintP4List+0xc4>
    22ab:	6d                   	ins    DWORD PTR es:[rdi],dx
    22ac:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
    22b0:	61                   	(bad)
    22b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22b2:	64 61                	fs (bad)
    22b4:	72 74                	jb     232a <_Z10debugPrintP4List+0xda>
    22b6:	44                   	rex.R
    22b7:	65 76 69             	gs jbe 2323 <_Z10debugPrintP4List+0xd3>
    22ba:	61                   	(bad)
    22bb:	74 69                	je     2326 <_Z10debugPrintP4List+0xd6>
    22bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22bf:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    22c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    22c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    22c3:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    22ca:	5f                   	pop    rdi
    22cb:	44 75 72             	rex.R jne 2340 <_Z10debugPrintP4List+0xf0>
    22ce:	31 00                	xor    DWORD PTR [rax],eax
    22d0:	5f                   	pop    rdi
    22d1:	44 75 72             	rex.R jne 2346 <_Z10debugPrintP4List+0xf6>
    22d4:	32 00                	xor    al,BYTE PTR [rax]
    22d6:	73 65                	jae    233d <_Z10debugPrintP4List+0xed>
    22d8:	61                   	(bad)
    22d9:	72 63                	jb     233e <_Z10debugPrintP4List+0xee>
    22db:	68 5f 74 69 6d       	push   0x6d69745f
    22e0:	65 5f                	gs pop rdi
    22e2:	61                   	(bad)
    22e3:	72 72                	jb     2357 <_Z10debugPrintP4List+0x107>
    22e5:	61                   	(bad)
    22e6:	79 00                	jns    22e8 <_Z10debugPrintP4List+0x98>
    22e8:	5f                   	pop    rdi
    22e9:	5f                   	pop    rdi
    22ea:	74 6f                	je     235b <_Z10debugPrintP4List+0x10b>
    22ec:	5f                   	pop    rdi
    22ed:	72 65                	jb     2354 <_Z10debugPrintP4List+0x104>
    22ef:	70 00                	jo     22f1 <_Z10debugPrintP4List+0xa1>
    22f1:	76 66                	jbe    2359 <_Z10debugPrintP4List+0x109>
    22f3:	77 70                	ja     2365 <_Z10debugPrintP4List+0x115>
    22f5:	72 69                	jb     2360 <_Z10debugPrintP4List+0x110>
    22f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22f8:	74 66                	je     2360 <_Z10debugPrintP4List+0x110>
    22fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22fd:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    2304:	74 00                	je     2306 <_Z10debugPrintP4List+0xb6>
    2306:	5f                   	pop    rdi
    2307:	49                   	rex.WB
    2308:	4f 5f                	rex.WRXB pop r15
    230a:	62 75 66 5f 62       	(bad)
    230f:	61                   	(bad)
    2310:	73 65                	jae    2377 <_Z10debugPrintP4List+0x127>
    2312:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    2316:	62                   	(bad)
    2317:	6c                   	ins    BYTE PTR es:[rdi],dx
    2318:	65 5f                	gs pop rdi
    231a:	74 00                	je     231c <_Z10debugPrintP4List+0xcc>
    231c:	6c                   	ins    BYTE PTR es:[rdi],dx
    231d:	6c                   	ins    BYTE PTR es:[rdi],dx
    231e:	72 6f                	jb     238f <_Z10debugPrintP4List+0x13f>
    2320:	75 6e                	jne    2390 <_Z10debugPrintP4List+0x140>
    2322:	64 00 70 65          	add    BYTE PTR fs:[rax+0x65],dh
    2326:	72 72                	jb     239a <_Z10debugPrintP4List+0x14a>
    2328:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2329:	72 00                	jb     232b <_Z10debugPrintP4List+0xdb>
    232b:	74 65                	je     2392 <_Z10debugPrintP4List+0x142>
    232d:	73 74                	jae    23a3 <_Z10debugPrintP4List+0x153>
    232f:	5f                   	pop    rdi
    2330:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2331:	61                   	(bad)
    2332:	6d                   	ins    DWORD PTR es:[rdi],dx
    2333:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    2337:	73 73                	jae    23ac <_Z10debugPrintP4List+0x15c>
    2339:	70 6e                	jo     23a9 <_Z10debugPrintP4List+0x159>
    233b:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    233e:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    2343:	5f                   	pop    rdi
    2344:	70 61                	jo     23a7 <_Z10debugPrintP4List+0x157>
    2346:	64 35 00 73 65 74    	fs xor eax,0x74657300
    234c:	76 62                	jbe    23b0 <_Z10debugPrintP4List+0x160>
    234e:	75 66                	jne    23b6 <_Z10debugPrintP4List+0x166>
    2350:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2353:	65 72 69             	gs jb  23bf <_Z10debugPrintP4List+0x16f>
    2356:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2357:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    235b:	6d                   	ins    DWORD PTR es:[rdi],dx
    235c:	71 75                	jno    23d3 <_Z10debugPrintP4List+0x183>
    235e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    235f:	00 6d 6b             	add    BYTE PTR [rbp+0x6b],ch
    2362:	74 69                	je     23cd <_Z10debugPrintP4List+0x17d>
    2364:	6d                   	ins    DWORD PTR es:[rdi],dx
    2365:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2369:	53                   	push   rbx
    236a:	74 35                	je     23a1 <_Z10debugPrintP4List+0x151>
    236c:	61                   	(bad)
    236d:	74 61                	je     23d0 <_Z10debugPrintP4List+0x180>
    236f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2370:	32 65 65             	xor    ah,BYTE PTR [rbp+0x65]
    2373:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2376:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    2379:	65 73 74             	gs jae 23f0 <_Z10debugPrintP4List+0x1a0>
    237c:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    237e:	6c                   	ins    BYTE PTR es:[rdi],dx
    237f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2380:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2387:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    238a:	4f 5f                	rex.WRXB pop r15
    238c:	46                   	rex.RX
    238d:	49                   	rex.WB
    238e:	4c                   	rex.WR
    238f:	45 50                	rex.RB push r8
    2391:	46 6a 38             	rex.RX push 0x38
    2394:	73 74                	jae    240a <_Z10debugPrintP4List+0x1ba>
    2396:	72 69                	jb     2401 <_Z10debugPrintP4List+0x1b1>
    2398:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2399:	67 5f                	addr32 pop rdi
    239b:	74 45                	je     23e2 <_Z10debugPrintP4List+0x192>
    239d:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    23a1:	74 44                	je     23e7 <_Z10debugPrintP4List+0x197>
    23a3:	61                   	(bad)
    23a4:	74 61                	je     2407 <_Z10debugPrintP4List+0x1b7>
    23a6:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    23aa:	65 5f                	gs pop rdi
    23ac:	73 69                	jae    2417 <_Z10debugPrintP4List+0x1c7>
    23ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23af:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    23b2:	65 70 6f             	gs jo  2424 <_Z10debugPrintP4List+0x1d4>
    23b5:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    23b8:	7a 65                	jp     241f <_Z10debugPrintP4List+0x1cf>
    23ba:	72 6f                	jb     242b <_Z10debugPrintP4List+0x1db>
    23bc:	00 6f 76             	add    BYTE PTR [rdi+0x76],ch
    23bf:	65 72 66             	gs jb  2428 <_Z10debugPrintP4List+0x1d8>
    23c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    23c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23c4:	77 5f                	ja     2425 <_Z10debugPrintP4List+0x1d5>
    23c6:	61                   	(bad)
    23c7:	72 67                	jb     2430 <_Z10debugPrintP4List+0x1e0>
    23c9:	5f                   	pop    rdi
    23ca:	61                   	(bad)
    23cb:	72 65                	jb     2432 <_Z10debugPrintP4List+0x1e2>
    23cd:	61                   	(bad)
    23ce:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    23d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23d2:	61                   	(bad)
    23d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    23d4:	65 00 5f 66          	add    BYTE PTR gs:[rdi+0x66],bl
    23d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    23d9:	61                   	(bad)
    23da:	67 73 00             	addr32 jae 23dd <_Z10debugPrintP4List+0x18d>
    23dd:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    23e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    23e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23e3:	5f                   	pop    rdi
    23e4:	74 79                	je     245f <_Z10debugPrintP4List+0x20f>
    23e6:	70 65                	jo     244d <_Z10debugPrintP4List+0x1fd>
    23e8:	3c 73                	cmp    al,0x73
    23ea:	74 64                	je     2450 <_Z10debugPrintP4List+0x200>
    23ec:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23ee:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    23f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23f4:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23f6:	64 75 72             	fs jne 246b <_Z10debugPrintP4List+0x21b>
    23f9:	61                   	(bad)
    23fa:	74 69                	je     2465 <_Z10debugPrintP4List+0x215>
    23fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23fe:	3c 6c                	cmp    al,0x6c
    2400:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2401:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2402:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2406:	74 2c                	je     2434 <_Z10debugPrintP4List+0x1e4>
    2408:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    240b:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    240e:	72 61                	jb     2471 <_Z10debugPrintP4List+0x221>
    2410:	74 69                	je     247b <_Z10debugPrintP4List+0x22b>
    2412:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2413:	3c 31                	cmp    al,0x31
    2415:	2c 20                	sub    al,0x20
    2417:	31 30                	xor    DWORD PTR [rax],esi
    2419:	30 30                	xor    BYTE PTR [rax],dh
    241b:	30 30                	xor    BYTE PTR [rax],dh
    241d:	30 30                	xor    BYTE PTR [rax],dh
    241f:	30 30                	xor    BYTE PTR [rax],dh
    2421:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2424:	2c 20                	sub    al,0x20
    2426:	73 74                	jae    249c <_Z8readFilePKcPm+0x1c>
    2428:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    242b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    242e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2430:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2431:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2433:	64 75 72             	fs jne 24a8 <_Z8readFilePKcPm+0x28>
    2436:	61                   	(bad)
    2437:	74 69                	je     24a2 <_Z8readFilePKcPm+0x22>
    2439:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    243a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243b:	3c 6c                	cmp    al,0x6c
    243d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    243e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2443:	74 2c                	je     2471 <_Z10debugPrintP4List+0x221>
    2445:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2448:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    244b:	72 61                	jb     24ae <_Z8readFilePKcPm+0x2e>
    244d:	74 69                	je     24b8 <_Z8readFilePKcPm+0x38>
    244f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2450:	3c 31                	cmp    al,0x31
    2452:	2c 20                	sub    al,0x20
    2454:	31 30                	xor    DWORD PTR [rax],esi
    2456:	30 30                	xor    BYTE PTR [rax],dh
    2458:	30 30                	xor    BYTE PTR [rax],dh
    245a:	30 30                	xor    BYTE PTR [rax],dh
    245c:	30 30                	xor    BYTE PTR [rax],dh
    245e:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2461:	20 3e                	and    BYTE PTR [rsi],bh
    2463:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2466:	53                   	push   rbx
    2467:	74 35                	je     249e <_Z8readFilePKcPm+0x1e>
    2469:	66 72 65             	data16 jb 24d1 <_Z8readFilePKcPm+0x51>
    246c:	78 70                	js     24de <_Z8readFilePKcPm+0x5e>
    246e:	66 50                	push   ax
    2470:	69 00 5f 44 65 6e    	imul   eax,DWORD PTR [rax],0x6e65445f
    2476:	49 73 4f             	rex.WB jae 24c8 <_Z8readFilePKcPm+0x48>
    2479:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    247a:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    247e:	53                   	push   rbx
    247f:	74 35                	je     24b6 <_Z8readFilePKcPm+0x36>
    2481:	61                   	(bad)
    2482:	74 61                	je     24e5 <_Z8readFilePKcPm+0x65>
    2484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2485:	68 65 00 5f 5a       	push   0x5a5f0065
    248a:	53                   	push   rbx
    248b:	74 35                	je     24c2 <_Z8readFilePKcPm+0x42>
    248d:	61                   	(bad)
    248e:	74 61                	je     24f1 <_Z8readFilePKcPm+0x71>
    2490:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2491:	68 66 00 5f 5a       	push   0x5a5f0066
    2496:	53                   	push   rbx
    2497:	74 34                	je     24cd <_Z8readFilePKcPm+0x4d>
    2499:	61                   	(bad)
    249a:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    249d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    24a1:	53                   	push   rbx
    24a2:	74 34                	je     24d8 <_Z8readFilePKcPm+0x58>
    24a4:	61                   	(bad)
    24a5:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    24a8:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    24ac:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    24b0:	6b 5f 74 00          	imul   ebx,DWORD PTR [rdi+0x74],0x0
    24b4:	5f                   	pop    rdi
    24b5:	5f                   	pop    rdi
    24b6:	6d                   	ins    DWORD PTR es:[rdi],dx
    24b7:	61                   	(bad)
    24b8:	78 5f                	js     2519 <_Z8readFilePKcPm+0x99>
    24ba:	61                   	(bad)
    24bb:	6c                   	ins    BYTE PTR es:[rdi],dx
    24bc:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
    24c3:	77 63                	ja     2528 <_Z8readFilePKcPm+0xa8>
    24c5:	73 6c                	jae    2533 <_Z8readFilePKcPm+0xb3>
    24c7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    24c9:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    24cc:	72 74                	jb     2542 <_Z8readFilePKcPm+0xc2>
    24ce:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    24d1:	53                   	push   rbx
    24d2:	74 37                	je     250b <_Z8readFilePKcPm+0x8b>
    24d4:	73 69                	jae    253f <_Z8readFilePKcPm+0xbf>
    24d6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    24d8:	62 69 74 65 00       	(bad)
    24dd:	67 65 74 63          	addr32 gs je 2544 <_Z8readFilePKcPm+0xc4>
    24e1:	68 61 72 00 5f       	push   0x5f007261
    24e6:	5a                   	pop    rdx
    24e7:	53                   	push   rbx
    24e8:	74 35                	je     251f <_Z8readFilePKcPm+0x9f>
    24ea:	61                   	(bad)
    24eb:	74 61                	je     254e <_Z8readFilePKcPm+0xce>
    24ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24ee:	32 66 66             	xor    ah,BYTE PTR [rsi+0x66]
    24f1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24f4:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    24f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24f8:	74 00                	je     24fa <_Z8readFilePKcPm+0x7a>
    24fa:	5f                   	pop    rdi
    24fb:	5f                   	pop    rdi
    24fc:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2503:	73 74                	jae    2579 <_Z8readFilePKcPm+0xf9>
    2505:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2508:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    250b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2512:	76 77                	jbe    258b <_Z8readFilePKcPm+0x10b>
    2514:	73 63                	jae    2579 <_Z8readFilePKcPm+0xf9>
    2516:	61                   	(bad)
    2517:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2518:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
    251c:	61                   	(bad)
    251d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    251e:	68 00 5f 5a 53       	push   0x535a5f00
    2523:	74 31                	je     2556 <_Z8readFilePKcPm+0xd6>
    2525:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
    2528:	78 74                	js     259e <_Z10countLinesPcm+0xe>
    252a:	74 6f                	je     259b <_Z10countLinesPcm+0xb>
    252c:	77 61                	ja     258f <_Z8readFilePKcPm+0x10f>
    252e:	72 64                	jb     2594 <_Z10countLinesPcm+0x4>
    2530:	65 65 00 73 63       	gs add BYTE PTR gs:[rbx+0x63],dh
    2535:	61                   	(bad)
    2536:	6c                   	ins    BYTE PTR es:[rdi],dx
    2537:	62 6c 6e             	(bad)
    253a:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    253d:	74 62                	je     25a1 <_Z10countLinesPcm+0x11>
    253f:	75 66                	jne    25a7 <_Z10countLinesPcm+0x17>
    2541:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    2544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2545:	66 00 74 69 6d       	data16 add BYTE PTR [rcx+rbp*2+0x6d],dh
    254a:	65 5f                	gs pop rdi
    254c:	70 6f                	jo     25bd <_Z10countLinesPcm+0x2d>
    254e:	69 6e 74 3c 73 74 64 	imul   ebp,DWORD PTR [rsi+0x74],0x6474733c
    2555:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2557:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    255a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    255c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    255f:	5f                   	pop    rdi
    2560:	56                   	push   rsi
    2561:	32 3a                	xor    bh,BYTE PTR [rdx]
    2563:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    2566:	65 61                	gs (bad)
    2568:	64 79 5f             	fs jns 25ca <_Z10countLinesPcm+0x3a>
    256b:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    256f:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    2573:	74 64                	je     25d9 <_Z10countLinesPcm+0x49>
    2575:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2577:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    257a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    257c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    257f:	64 75 72             	fs jne 25f4 <_Z10countLinesPcm+0x64>
    2582:	61                   	(bad)
    2583:	74 69                	je     25ee <_Z10countLinesPcm+0x5e>
    2585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2586:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2587:	3c 6c                	cmp    al,0x6c
    2589:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    258a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    258b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    258f:	74 2c                	je     25bd <_Z10countLinesPcm+0x2d>
    2591:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2594:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2597:	72 61                	jb     25fa <_Z10countLinesPcm+0x6a>
    2599:	74 69                	je     2604 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x4>
    259b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    259c:	3c 31                	cmp    al,0x31
    259e:	2c 20                	sub    al,0x20
    25a0:	31 30                	xor    DWORD PTR [rax],esi
    25a2:	30 30                	xor    BYTE PTR [rax],dh
    25a4:	30 30                	xor    BYTE PTR [rax],dh
    25a6:	30 30                	xor    BYTE PTR [rax],dh
    25a8:	30 30                	xor    BYTE PTR [rax],dh
    25aa:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    25ad:	20 3e                	and    BYTE PTR [rsi],bh
    25af:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    25b2:	53                   	push   rbx
    25b3:	74 33                	je     25e8 <_Z10countLinesPcm+0x58>
    25b5:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25b8:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    25bc:	53                   	push   rbx
    25bd:	74 33                	je     25f2 <_Z10countLinesPcm+0x62>
    25bf:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25c2:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
    25c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c8:	69 73 69 6f 6e 5f 66 	imul   esi,DWORD PTR [rbx+0x69],0x665f6e6f
    25cf:	69 6c 65 6e 61 6d 65 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x656d61
    25d6:	00 
    25d7:	66 69 6c 65 73 79 73 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
    25de:	74 65                	je     2645 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x45>
    25e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    25e1:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    25e4:	74 61                	je     2647 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x47>
    25e6:	62                   	(bad)
    25e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    25e8:	65 5f                	gs pop rdi
    25ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25eb:	66 66 73 65          	data16 data16 jae 2654 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x54>
    25ef:	74 00                	je     25f1 <_Z10countLinesPcm+0x61>
    25f1:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    25f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25f4:	61                   	(bad)
    25f5:	74 5f                	je     2656 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x56>
    25f7:	74 00                	je     25f9 <_Z10countLinesPcm+0x69>
    25f9:	5f                   	pop    rdi
    25fa:	44 75 72             	rex.R jne 266f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x6f>
    25fd:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2600:	65 72 61             	gs jb  2664 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x64>
    2603:	74 6f                	je     2674 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x74>
    2605:	72 2d                	jb     2634 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x34>
    2607:	3c 6c                	cmp    al,0x6c
    2609:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    260a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    260b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    260f:	74 2c                	je     263d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d>
    2611:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2614:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2617:	72 61                	jb     267a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x7a>
    2619:	74 69                	je     2684 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x84>
    261b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    261c:	3c 31                	cmp    al,0x31
    261e:	2c 20                	sub    al,0x20
    2620:	31 30                	xor    DWORD PTR [rax],esi
    2622:	30 30                	xor    BYTE PTR [rax],dh
    2624:	30 30                	xor    BYTE PTR [rax],dh
    2626:	30 30                	xor    BYTE PTR [rax],dh
    2628:	30 30                	xor    BYTE PTR [rax],dh
    262a:	3e 2c 20             	ds sub al,0x20
    262d:	6c                   	ins    BYTE PTR es:[rdi],dx
    262e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    262f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2630:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2634:	74 2c                	je     2662 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x62>
    2636:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2639:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    263c:	72 61                	jb     269f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x9f>
    263e:	74 69                	je     26a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa9>
    2640:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2641:	3c 31                	cmp    al,0x31
    2643:	2c 20                	sub    al,0x20
    2645:	31 30                	xor    DWORD PTR [rax],esi
    2647:	30 30                	xor    BYTE PTR [rax],dh
    2649:	30 30                	xor    BYTE PTR [rax],dh
    264b:	30 30                	xor    BYTE PTR [rax],dh
    264d:	30 30                	xor    BYTE PTR [rax],dh
    264f:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2652:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    2655:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2656:	67 62                	addr32 (bad)
    2658:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    265b:	61                   	(bad)
    265c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    265d:	64 61                	fs (bad)
    265f:	72 74                	jb     26d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xd5>
    2661:	44                   	rex.R
    2662:	65 76 69             	gs jbe 26ce <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xce>
    2665:	61                   	(bad)
    2666:	74 69                	je     26d1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xd1>
    2668:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2669:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    266a:	54                   	push   rsp
    266b:	69 6d 65 00 5f 5a 53 	imul   ebp,DWORD PTR [rbp+0x65],0x535a5f00
    2672:	74 38                	je     26ac <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xac>
    2674:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    267b:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2680:	53                   	push   rbx
    2681:	74 34                	je     26b7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xb7>
    2683:	65 78 70             	gs js  26f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xf6>
    2686:	32 65 00             	xor    ah,BYTE PTR [rbp+0x0]
    2689:	5f                   	pop    rdi
    268a:	5a                   	pop    rdx
    268b:	53                   	push   rbx
    268c:	74 34                	je     26c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc2>
    268e:	65 78 70             	gs js  2701 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x101>
    2691:	32 66 00             	xor    ah,BYTE PTR [rsi+0x0]
    2694:	5f                   	pop    rdi
    2695:	4e 75 6d             	rex.WRX jne 2705 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x105>
    2698:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    269b:	77 63                	ja     2700 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x100>
    269d:	68 62 00 61 74       	push   0x74610062
    26a2:	61                   	(bad)
    26a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26a4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26a7:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    26ae:	5f                   	pop    rdi
    26af:	5a                   	pop    rdx
    26b0:	4e 53                	rex.WRX push rbx
    26b2:	74 35                	je     26e9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xe9>
    26b4:	72 61                	jb     2717 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x117>
    26b6:	74 69                	je     2721 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x121>
    26b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26b9:	49                   	rex.WB
    26ba:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    26bc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    26bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    26c0:	31 30                	xor    DWORD PTR [rax],esi
    26c2:	30 30                	xor    BYTE PTR [rax],dh
    26c4:	30 30                	xor    BYTE PTR [rax],dh
    26c6:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    26c9:	33 6e 75             	xor    ebp,DWORD PTR [rsi+0x75]
    26cc:	6d                   	ins    DWORD PTR es:[rdi],dx
    26cd:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    26d1:	53                   	push   rbx
    26d2:	74 31                	je     2705 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x105>
    26d4:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    26d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    26d8:	65 73 73             	gs jae 274e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x14e>
    26db:	65 71 75             	gs jno 2753 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x153>
    26de:	61                   	(bad)
    26df:	6c                   	ins    BYTE PTR es:[rdi],dx
    26e0:	65 65 00 64 75 72    	gs add BYTE PTR gs:[rbp+rsi*2+0x72],ah
    26e6:	61                   	(bad)
    26e7:	74 69                	je     2752 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x152>
    26e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26eb:	5f                   	pop    rdi
    26ec:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    26ef:	74 3c                	je     272d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x12d>
    26f1:	73 74                	jae    2767 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x167>
    26f3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26f6:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    26f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fc:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    26fe:	64 75 72             	fs jne 2773 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x173>
    2701:	61                   	(bad)
    2702:	74 69                	je     276d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x16d>
    2704:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2705:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2706:	3c 6c                	cmp    al,0x6c
    2708:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2709:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    270a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    270e:	74 2c                	je     273c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x13c>
    2710:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2713:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2716:	72 61                	jb     2779 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x179>
    2718:	74 69                	je     2783 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x183>
    271a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    271b:	3c 31                	cmp    al,0x31
    271d:	2c 20                	sub    al,0x20
    271f:	31 30                	xor    DWORD PTR [rax],esi
    2721:	30 30                	xor    BYTE PTR [rax],dh
    2723:	30 30                	xor    BYTE PTR [rax],dh
    2725:	30 3e                	xor    BYTE PTR [rsi],bh
    2727:	20 3e                	and    BYTE PTR [rsi],bh
    2729:	2c 20                	sub    al,0x20
    272b:	6c                   	ins    BYTE PTR es:[rdi],dx
    272c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    272d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    272e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2732:	74 2c                	je     2760 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x160>
    2734:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2737:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    273a:	72 61                	jb     279d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19d>
    273c:	74 69                	je     27a7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a7>
    273e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    273f:	3c 31                	cmp    al,0x31
    2741:	2c 20                	sub    al,0x20
    2743:	31 30                	xor    DWORD PTR [rax],esi
    2745:	30 30                	xor    BYTE PTR [rax],dh
    2747:	30 30                	xor    BYTE PTR [rax],dh
    2749:	30 30                	xor    BYTE PTR [rax],dh
    274b:	30 30                	xor    BYTE PTR [rax],dh
    274d:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2750:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    2753:	73 74                	jae    27c9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c9>
    2755:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2756:	6c                   	ins    BYTE PTR es:[rdi],dx
    2757:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    275b:	74 5f                	je     27bc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1bc>
    275d:	70 5f                	jo     27be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1be>
    275f:	73 65                	jae    27c6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c6>
    2761:	70 5f                	jo     27c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c2>
    2763:	62 79 5f 73 70       	(bad)
    2768:	61                   	(bad)
    2769:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    276c:	5f                   	pop    rdi
    276d:	5a                   	pop    rdx
    276e:	53                   	push   rbx
    276f:	74 38                	je     27a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a9>
    2771:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2778:	65 64 00 61 76       	gs add BYTE PTR fs:[rcx+0x76],ah
    277d:	65 72 61             	gs jb  27e1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1e1>
    2780:	67 65 5f             	addr32 gs pop rdi
    2783:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2786:	6c                   	ins    BYTE PTR es:[rdi],dx
    2787:	69 73 69 6f 6e 00 5f 	imul   esi,DWORD PTR [rbx+0x69],0x5f006e6f
    278e:	5a                   	pop    rdx
    278f:	53                   	push   rbx
    2790:	74 38                	je     27ca <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ca>
    2792:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2799:	65 66 00 5f 5a       	data16 add BYTE PTR gs:[rdi+0x5a],bl
    279e:	53                   	push   rbx
    279f:	74 31                	je     27d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1d2>
    27a1:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    27a4:	75 6e                	jne    2814 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x214>
    27a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27a7:	72 64                	jb     280d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x20d>
    27a9:	65 72 65             	gs jb  2811 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x211>
    27ac:	64 65 65 00 66 72    	fs gs add BYTE PTR gs:[rsi+0x72],ah
    27b2:	65 78 70             	gs js  2825 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x225>
    27b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    27b8:	4e 53                	rex.WRX push rbx
    27ba:	74 36                	je     27f2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1f2>
    27bc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    27bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    27c6:	61                   	(bad)
    27c7:	74 69                	je     2832 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x232>
    27c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27cb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    27cd:	53                   	push   rbx
    27ce:	74 35                	je     2805 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x205>
    27d0:	72 61                	jb     2833 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x233>
    27d2:	74 69                	je     283d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x23d>
    27d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27d5:	49                   	rex.WB
    27d6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    27d8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    27db:	6c                   	ins    BYTE PTR es:[rdi],dx
    27dc:	31 30                	xor    DWORD PTR [rax],esi
    27de:	30 30                	xor    BYTE PTR [rax],dh
    27e0:	30 30                	xor    BYTE PTR [rax],dh
    27e2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    27e5:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    27e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27ea:	45 76 00             	rex.RB jbe 27ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ed>
    27ed:	77 63                	ja     2852 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x252>
    27ef:	73 73                	jae    2864 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x264>
    27f1:	74 72                	je     2865 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x265>
    27f3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    27f6:	4f 5f                	rex.WRXB pop r15
    27f8:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    27fb:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    27ff:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    2802:	78 74                	js     2878 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x278>
    2804:	61                   	(bad)
    2805:	66 74 65             	data16 je 286d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x26d>
    2808:	72 00                	jb     280a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x20a>
    280a:	65 78 70             	gs js  287d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x27d>
    280d:	6d                   	ins    DWORD PTR es:[rdi],dx
    280e:	31 00                	xor    DWORD PTR [rax],eax
    2810:	5f                   	pop    rdi
    2811:	5f                   	pop    rdi
    2812:	6d                   	ins    DWORD PTR es:[rdi],dx
    2813:	61                   	(bad)
    2814:	78 5f                	js     2875 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x275>
    2816:	61                   	(bad)
    2817:	6c                   	ins    BYTE PTR es:[rdi],dx
    2818:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
    281f:	5f                   	pop    rdi
    2820:	5a                   	pop    rdx
    2821:	4e 53                	rex.WRX push rbx
    2823:	74 36                	je     285b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x25b>
    2825:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2828:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2829:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    282a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    282b:	32 30                	xor    dh,BYTE PTR [rax]
    282d:	5f                   	pop    rdi
    282e:	5f                   	pop    rdi
    282f:	64 75 72             	fs jne 28a4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2a4>
    2832:	61                   	(bad)
    2833:	74 69                	je     289e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29e>
    2835:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2836:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2837:	5f                   	pop    rdi
    2838:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    283b:	74 5f                	je     289c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29c>
    283d:	69 6d 70 6c 49 4e 53 	imul   ebp,DWORD PTR [rbp+0x70],0x534e496c
    2844:	5f                   	pop    rdi
    2845:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2849:	61                   	(bad)
    284a:	74 69                	je     28b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b5>
    284c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    284d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    284e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2850:	53                   	push   rbx
    2851:	74 35                	je     2888 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x288>
    2853:	72 61                	jb     28b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b6>
    2855:	74 69                	je     28c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2c0>
    2857:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2858:	49                   	rex.WB
    2859:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    285b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    285e:	6c                   	ins    BYTE PTR es:[rdi],dx
    285f:	31 30                	xor    DWORD PTR [rax],esi
    2861:	30 30                	xor    BYTE PTR [rax],dh
    2863:	30 30                	xor    BYTE PTR [rax],dh
    2865:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2868:	45                   	rex.RB
    2869:	45 53                	rex.RB push r11
    286b:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    286e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2870:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2873:	6c                   	ins    BYTE PTR es:[rdi],dx
    2874:	31 30                	xor    DWORD PTR [rax],esi
    2876:	30 30                	xor    BYTE PTR [rax],dh
    2878:	45                   	rex.RB
    2879:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    287b:	4c 62 31 45 4c 62 30 	rex.WR vpunpckldq zmm14{k4},zmm7,ZMMWORD PTR [rax]
    2882:	45                   	rex.RB
    2883:	45                   	rex.RB
    2884:	36 5f                	ss pop rdi
    2886:	5f                   	pop    rdi
    2887:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    288a:	74 49                	je     28d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2d5>
    288c:	6c                   	ins    BYTE PTR es:[rdi],dx
    288d:	53                   	push   rbx
    288e:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    2891:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2893:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2896:	6c                   	ins    BYTE PTR es:[rdi],dx
    2897:	31 30                	xor    DWORD PTR [rax],esi
    2899:	30 30                	xor    BYTE PTR [rax],dh
    289b:	30 30                	xor    BYTE PTR [rax],dh
    289d:	30 30                	xor    BYTE PTR [rax],dh
    289f:	30 30                	xor    BYTE PTR [rax],dh
    28a1:	45                   	rex.RB
    28a2:	45                   	rex.RB
    28a3:	45                   	rex.RB
    28a4:	45 53                	rex.RB push r11
    28a6:	34 5f                	xor    al,0x5f
    28a8:	52                   	push   rdx
    28a9:	4b                   	rex.WXB
    28aa:	4e 53                	rex.WRX push rbx
    28ac:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    28af:	54                   	push   rsp
    28b0:	5f                   	pop    rdi
    28b1:	54                   	push   rsp
    28b2:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    28b5:	45 00 5f 43          	add    BYTE PTR [r15+0x43],r11b
    28b9:	6c                   	ins    BYTE PTR es:[rdi],dx
    28ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28bb:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    28be:	77 63                	ja     2923 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x323>
    28c0:	73 72                	jae    2934 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x334>
    28c2:	74 6f                	je     2933 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x333>
    28c4:	6d                   	ins    DWORD PTR es:[rdi],dx
    28c5:	62 73 00 5f 5f       	(bad)
    28ca:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    28d1:	73 74                	jae    2947 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x347>
    28d3:	31 36                	xor    DWORD PTR [rsi],esi
    28d5:	5f                   	pop    rdi
    28d6:	74 00                	je     28d8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2d8>
    28d8:	5f                   	pop    rdi
    28d9:	66 72 65             	data16 jb 2941 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x341>
    28dc:	65 72 65             	gs jb  2944 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x344>
    28df:	73 5f                	jae    2940 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x340>
    28e1:	62 75 66 00 74       	(bad)
    28e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    28e7:	5f                   	pop    rdi
    28e8:	77 64                	ja     294e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x34e>
    28ea:	61                   	(bad)
    28eb:	79 00                	jns    28ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2ed>
    28ed:	5f                   	pop    rdi
    28ee:	5a                   	pop    rdx
    28ef:	53                   	push   rbx
    28f0:	74 31                	je     2923 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x323>
    28f2:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    28f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    28f6:	65 73 73             	gs jae 296c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x36c>
    28f9:	65 71 75             	gs jno 2971 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x371>
    28fc:	61                   	(bad)
    28fd:	6c                   	ins    BYTE PTR es:[rdi],dx
    28fe:	66 66 00 5f 5f       	data16 data16 add BYTE PTR [rdi+0x5f],bl
    2903:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2906:	74 3c                	je     2944 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x344>
    2908:	6c                   	ins    BYTE PTR es:[rdi],dx
    2909:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    290a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    290b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    290f:	74 2c                	je     293d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x33d>
    2911:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2914:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2917:	72 61                	jb     297a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x37a>
    2919:	74 69                	je     2984 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x384>
    291b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    291c:	3c 31                	cmp    al,0x31
    291e:	2c 20                	sub    al,0x20
    2920:	31 30                	xor    DWORD PTR [rax],esi
    2922:	30 30                	xor    BYTE PTR [rax],dh
    2924:	30 30                	xor    BYTE PTR [rax],dh
    2926:	30 30                	xor    BYTE PTR [rax],dh
    2928:	30 30                	xor    BYTE PTR [rax],dh
    292a:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    292d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2930:	53                   	push   rbx
    2931:	74 35                	je     2968 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x368>
    2933:	68 79 70 6f 74       	push   0x746f7079
    2938:	66 66 66 00 74 65 73 	data16 data16 data16 add BYTE PTR [rbp+riz*2+0x73],dh
    293f:	74 5f                	je     29a0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3a0>
    2941:	61                   	(bad)
    2942:	6d                   	ins    DWORD PTR es:[rdi],dx
    2943:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2944:	75 6e                	jne    29b4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b4>
    2946:	74 00                	je     2948 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x348>
    2948:	6d                   	ins    DWORD PTR es:[rdi],dx
    2949:	62 73 69 6e 69       	(bad)
    294e:	74 00                	je     2950 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x350>
    2950:	61                   	(bad)
    2951:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2954:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    2958:	79 64                	jns    29be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3be>
    295a:	61                   	(bad)
    295b:	79 00                	jns    295d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x35d>
    295d:	5f                   	pop    rdi
    295e:	5a                   	pop    rdx
    295f:	53                   	push   rbx
    2960:	74 39                	je     299b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x39b>
    2962:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    2969:	65 72 66             	gs jb  29d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d2>
    296c:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    2970:	73 74                	jae    29e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3e6>
    2972:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2973:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    2977:	73 74                	jae    29ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ed>
    2979:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    297a:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    297e:	4e 53                	rex.WRX push rbx
    2980:	74 36                	je     29b8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b8>
    2982:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2985:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2986:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2987:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2988:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    298c:	61                   	(bad)
    298d:	74 69                	je     29f8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3f8>
    298f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2990:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2991:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2993:	53                   	push   rbx
    2994:	74 35                	je     29cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3cb>
    2996:	72 61                	jb     29f9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3f9>
    2998:	74 69                	je     2a03 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x403>
    299a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    299b:	49                   	rex.WB
    299c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    299e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    29a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    29a2:	31 30                	xor    DWORD PTR [rax],esi
    29a4:	30 30                	xor    BYTE PTR [rax],dh
    29a6:	30 30                	xor    BYTE PTR [rax],dh
    29a8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    29ab:	45                   	rex.RB
    29ac:	43 34 49             	rex.XB xor al,0x49
    29af:	6c                   	ins    BYTE PTR es:[rdi],dx
    29b0:	76 45                	jbe    29f7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3f7>
    29b2:	45 52                	rex.RB push r10
    29b4:	4b 54                	rex.WXB push r12
    29b6:	5f                   	pop    rdi
    29b7:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    29ba:	69 6e 00 77 63 73 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74736377
    29c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29c2:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    29c5:	5f                   	pop    rdi
    29c6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    29c9:	31 31                	xor    DWORD PTR [rcx],esi
    29cb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29ce:	66 70 6f             	data16 jo 2a40 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x440>
    29d1:	73 5f                	jae    2a32 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x432>
    29d3:	74 00                	je     29d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d5>
    29d5:	5f                   	pop    rdi
    29d6:	5a                   	pop    rdx
    29d7:	4e 53                	rex.WRX push rbx
    29d9:	74 36                	je     2a11 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x411>
    29db:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    29de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29e1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    29e5:	61                   	(bad)
    29e6:	74 69                	je     2a51 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x451>
    29e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29ea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    29ec:	53                   	push   rbx
    29ed:	74 35                	je     2a24 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x424>
    29ef:	72 61                	jb     2a52 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x452>
    29f1:	74 69                	je     2a5c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x45c>
    29f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f4:	49                   	rex.WB
    29f5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    29f7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    29fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    29fb:	31 30                	xor    DWORD PTR [rax],esi
    29fd:	30 30                	xor    BYTE PTR [rax],dh
    29ff:	30 30                	xor    BYTE PTR [rax],dh
    2a01:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a04:	45                   	rex.RB
    2a05:	64 56                	fs push rsi
    2a07:	45 52                	rex.RB push r10
    2a09:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2a0b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2a0e:	65 72 61             	gs jb  2a72 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x12>
    2a11:	74 6f                	je     2a82 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x22>
    2a13:	72 2b                	jb     2a40 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x440>
    2a15:	3d 00 5f 5f 46       	cmp    eax,0x465f5f00
    2a1a:	49                   	rex.WB
    2a1b:	4c                   	rex.WR
    2a1c:	45 00 61 63          	add    BYTE PTR [r9+0x63],r12b
    2a20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a21:	73 68                	jae    2a8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2b>
    2a23:	00 74 72 75          	add    BYTE PTR [rdx+rsi*2+0x75],dh
    2a27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a28:	63 00                	movsxd eax,DWORD PTR [rax]
    2a2a:	5f                   	pop    rdi
    2a2b:	5f                   	pop    rdi
    2a2c:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    2a33:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2a36:	4f 5f                	rex.WRXB pop r15
    2a38:	62 61 63 6b 75       	(bad)
    2a3d:	70 5f                	jo     2a9e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e>
    2a3f:	62 61 73 65 00       	(bad)
    2a44:	73 65                	jae    2aab <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x4b>
    2a46:	74 6c                	je     2ab4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x54>
    2a48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a49:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    2a4c:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
    2a50:	68 6f 72 74 62       	push   0x6274726f
    2a55:	75 66                	jne    2abd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x5d>
    2a57:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    2a5a:	74 69                	je     2ac5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x65>
    2a5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a5d:	3c 31                	cmp    al,0x31
    2a5f:	2c 20                	sub    al,0x20
    2a61:	31 30                	xor    DWORD PTR [rax],esi
    2a63:	30 30                	xor    BYTE PTR [rax],dh
    2a65:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    2a69:	4e 53                	rex.WRX push rbx
    2a6b:	74 36                	je     2aa3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43>
    2a6d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a72:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a73:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a77:	61                   	(bad)
    2a78:	74 69                	je     2ae3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x83>
    2a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a7c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a7e:	53                   	push   rbx
    2a7f:	74 35                	je     2ab6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x56>
    2a81:	72 61                	jb     2ae4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x84>
    2a83:	74 69                	je     2aee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x8e>
    2a85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a86:	49                   	rex.WB
    2a87:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a89:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a8d:	31 30                	xor    DWORD PTR [rax],esi
    2a8f:	30 30                	xor    BYTE PTR [rax],dh
    2a91:	30 30                	xor    BYTE PTR [rax],dh
    2a93:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a96:	45                   	rex.RB
    2a97:	36 5f                	ss pop rdi
    2a99:	53                   	push   rbx
    2a9a:	5f                   	pop    rdi
    2a9b:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2aa0:	6c                   	ins    BYTE PTR es:[rdi],dx
    2aa1:	00 77 69             	add    BYTE PTR [rdi+0x69],dh
    2aa4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa5:	74 5f                	je     2b06 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa6>
    2aa7:	74 00                	je     2aa9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x49>
    2aa9:	5f                   	pop    rdi
    2aaa:	5a                   	pop    rdx
    2aab:	4e                   	rex.WRX
    2aac:	4b 53                	rex.WXB push r11
    2aae:	74 36                	je     2ae6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x86>
    2ab0:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2ab3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ab5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2aba:	61                   	(bad)
    2abb:	74 69                	je     2b26 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xc6>
    2abd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2abe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2abf:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2ac1:	53                   	push   rbx
    2ac2:	74 35                	je     2af9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x99>
    2ac4:	72 61                	jb     2b27 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xc7>
    2ac6:	74 69                	je     2b31 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd1>
    2ac8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ac9:	49                   	rex.WB
    2aca:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2acc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2acf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ad0:	31 30                	xor    DWORD PTR [rax],esi
    2ad2:	30 30                	xor    BYTE PTR [rax],dh
    2ad4:	30 30                	xor    BYTE PTR [rax],dh
    2ad6:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2ad9:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    2adb:	67 45 76 00          	addr32 rex.RB jbe 2adf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x7f>
    2adf:	5f                   	pop    rdi
    2ae0:	5a                   	pop    rdx
    2ae1:	53                   	push   rbx
    2ae2:	74 31                	je     2b15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xb5>
    2ae4:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2ae7:	75 6e                	jne    2b57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf7>
    2ae9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aea:	72 64                	jb     2b50 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf0>
    2aec:	65 72 65             	gs jb  2b54 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf4>
    2aef:	64 66 66 00 74 69 6d 	data16 data16 add BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    2af6:	65 73 70             	gs jae 2b69 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x109>
    2af9:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    2afd:	65 74 00             	gs je  2b00 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa0>
    2b00:	5f                   	pop    rdi
    2b01:	5f                   	pop    rdi
    2b02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b03:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    2b08:	74 00                	je     2b0a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xaa>
    2b0a:	5f                   	pop    rdi
    2b0b:	5a                   	pop    rdx
    2b0c:	4e 53                	rex.WRX push rbx
    2b0e:	74 36                	je     2b46 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xe6>
    2b10:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b16:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b1a:	61                   	(bad)
    2b1b:	74 69                	je     2b86 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x126>
    2b1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b1f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b21:	53                   	push   rbx
    2b22:	74 35                	je     2b59 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xf9>
    2b24:	72 61                	jb     2b87 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x127>
    2b26:	74 69                	je     2b91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x131>
    2b28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b29:	49                   	rex.WB
    2b2a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b2c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b2f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b30:	31 30                	xor    DWORD PTR [rax],esi
    2b32:	30 30                	xor    BYTE PTR [rax],dh
    2b34:	30 30                	xor    BYTE PTR [rax],dh
    2b36:	30 30                	xor    BYTE PTR [rax],dh
    2b38:	30 30                	xor    BYTE PTR [rax],dh
    2b3a:	45                   	rex.RB
    2b3b:	45                   	rex.RB
    2b3c:	45                   	rex.RB
    2b3d:	36 5f                	ss pop rdi
    2b3f:	53                   	push   rbx
    2b40:	5f                   	pop    rdi
    2b41:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2b46:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b47:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b4a:	4e 53                	rex.WRX push rbx
    2b4c:	74 36                	je     2b84 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x124>
    2b4e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b54:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b58:	61                   	(bad)
    2b59:	74 69                	je     2bc4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x164>
    2b5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b5d:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b5f:	53                   	push   rbx
    2b60:	74 35                	je     2b97 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x137>
    2b62:	72 61                	jb     2bc5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x165>
    2b64:	74 69                	je     2bcf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x16f>
    2b66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b67:	49                   	rex.WB
    2b68:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b6a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b6e:	31 30                	xor    DWORD PTR [rax],esi
    2b70:	30 30                	xor    BYTE PTR [rax],dh
    2b72:	30 30                	xor    BYTE PTR [rax],dh
    2b74:	30 30                	xor    BYTE PTR [rax],dh
    2b76:	30 30                	xor    BYTE PTR [rax],dh
    2b78:	45                   	rex.RB
    2b79:	45                   	rex.RB
    2b7a:	45                   	rex.RB
    2b7b:	43 34 49             	rex.XB xor al,0x49
    2b7e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b7f:	76 45                	jbe    2bc6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x166>
    2b81:	45 52                	rex.RB push r10
    2b83:	4b 54                	rex.WXB push r12
    2b85:	5f                   	pop    rdi
    2b86:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b89:	53                   	push   rbx
    2b8a:	74 34                	je     2bc0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x160>
    2b8c:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b90:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2b94:	53                   	push   rbx
    2b95:	74 34                	je     2bcb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x16b>
    2b97:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b9b:	66 00 66 6f          	data16 add BYTE PTR [rsi+0x6f],ah
    2b9f:	70 65                	jo     2c06 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1a6>
    2ba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ba2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ba5:	53                   	push   rbx
    2ba6:	74 36                	je     2bde <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x17e>
    2ba8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ba9:	6c                   	ins    BYTE PTR es:[rdi],dx
    2baa:	72 69                	jb     2c15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b5>
    2bac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bad:	74 65                	je     2c14 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b4>
    2baf:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2bb2:	61                   	(bad)
    2bb3:	72 63                	jb     2c18 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b8>
    2bb5:	68 5f 66 69 6c       	push   0x6c69665f
    2bba:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2bbe:	73 77                	jae    2c37 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d7>
    2bc0:	61                   	(bad)
    2bc1:	70 70                	jo     2c33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d3>
    2bc3:	61                   	(bad)
    2bc4:	62                   	(bad)
    2bc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc6:	65 5f                	gs pop rdi
    2bc8:	64 65 74 61          	fs gs je 2c2d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1cd>
    2bcc:	69 6c 73 00 5f 5a 53 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x74535a5f
    2bd3:	74 
    2bd4:	33 6c 6f 67          	xor    ebp,DWORD PTR [rdi+rbp*2+0x67]
    2bd8:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2bdc:	53                   	push   rbx
    2bdd:	74 33                	je     2c12 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b2>
    2bdf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2be1:	67 66 00 63 68       	data16 add BYTE PTR [ebx+0x68],ah
    2be6:	61                   	(bad)
    2be7:	72 33                	jb     2c1c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1bc>
    2be9:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    2bec:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2bef:	77 69                	ja     2c5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1fa>
    2bf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf2:	64 00 72 61          	add    BYTE PTR fs:[rdx+0x61],dh
    2bf6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf7:	64 5f                	fs pop rdi
    2bf9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bfa:	75 6d                	jne    2c69 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x209>
    2bfc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bff:	53                   	push   rbx
    2c00:	74 34                	je     2c36 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d6>
    2c02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c03:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c04:	67 62 65 00 5f 5a    	(bad)
    2c0a:	53                   	push   rbx
    2c0b:	74 34                	je     2c41 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1e1>
    2c0d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c0e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c0f:	67 62 66 00 5f 5a    	(bad)
    2c15:	4e 53                	rex.WRX push rbx
    2c17:	74 36                	je     2c4f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1ef>
    2c19:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2c1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c20:	69 49 4e 53 5f 33 5f 	imul   ecx,DWORD PTR [rcx+0x4e],0x5f335f53
    2c27:	56                   	push   rsi
    2c28:	32 31                	xor    dh,BYTE PTR [rcx]
    2c2a:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2c2d:	65 61                	gs (bad)
    2c2f:	64 79 5f             	fs jns 2c91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x231>
    2c32:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2c36:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2c3a:	5f                   	pop    rdi
    2c3b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2c3f:	61                   	(bad)
    2c40:	74 69                	je     2cab <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x24b>
    2c42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c44:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2c46:	53                   	push   rbx
    2c47:	74 35                	je     2c7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x21e>
    2c49:	72 61                	jb     2cac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x24c>
    2c4b:	74 69                	je     2cb6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x256>
    2c4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c4e:	49                   	rex.WB
    2c4f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2c51:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2c54:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c55:	31 30                	xor    DWORD PTR [rax],esi
    2c57:	30 30                	xor    BYTE PTR [rax],dh
    2c59:	30 30                	xor    BYTE PTR [rax],dh
    2c5b:	30 30                	xor    BYTE PTR [rax],dh
    2c5d:	30 30                	xor    BYTE PTR [rax],dh
    2c5f:	45                   	rex.RB
    2c60:	45                   	rex.RB
    2c61:	45                   	rex.RB
    2c62:	45 53                	rex.RB push r11
    2c64:	36 5f                	ss pop rdi
    2c66:	45                   	rex.RB
    2c67:	45                   	rex.RB
    2c68:	4e 53                	rex.WRX push rbx
    2c6a:	74 31                	je     2c9d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x23d>
    2c6c:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2c6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c70:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c73:	5f                   	pop    rdi
    2c74:	74 79                	je     2cef <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x28f>
    2c76:	70 65                	jo     2cdd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x27d>
    2c78:	49                   	rex.WB
    2c79:	4a 54                	rex.WX push rsp
    2c7b:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    2c7e:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    2c81:	45 34 74             	rex.RB xor al,0x74
    2c84:	79 70                	jns    2cf6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x296>
    2c86:	65 45 52             	gs rex.RB push r10
    2c89:	4b                   	rex.WXB
    2c8a:	4e 53                	rex.WRX push rbx
    2c8c:	5f                   	pop    rdi
    2c8d:	31 30                	xor    DWORD PTR [rax],esi
    2c8f:	74 69                	je     2cfa <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x29a>
    2c91:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c92:	65 5f                	gs pop rdi
    2c94:	70 6f                	jo     2d05 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2a5>
    2c96:	69 6e 74 49 54 5f 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535f5449
    2c9d:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    2ca0:	45 52                	rex.RB push r10
    2ca2:	4b                   	rex.WXB
    2ca3:	4e 53                	rex.WRX push rbx
    2ca5:	43 5f                	rex.XB pop r15
    2ca7:	49 53                	rex.WB push r11
    2ca9:	44 5f                	rex.R pop rdi
    2cab:	53                   	push   rbx
    2cac:	39 5f 45             	cmp    DWORD PTR [rdi+0x45],ebx
    2caf:	45 00 66 6d          	add    BYTE PTR [r14+0x6d],r12b
    2cb3:	61                   	(bad)
    2cb4:	78 00                	js     2cb6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x256>
    2cb6:	5f                   	pop    rdi
    2cb7:	5a                   	pop    rdx
    2cb8:	4e                   	rex.WRX
    2cb9:	4b 53                	rex.WXB push r11
    2cbb:	74 36                	je     2cf3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x293>
    2cbd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2cc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc3:	31 30                	xor    DWORD PTR [rax],esi
    2cc5:	74 69                	je     2d30 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2d0>
    2cc7:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cc8:	65 5f                	gs pop rdi
    2cca:	70 6f                	jo     2d3b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2db>
    2ccc:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2cd3:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2cd6:	32 31                	xor    dh,BYTE PTR [rcx]
    2cd8:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2cdb:	65 61                	gs (bad)
    2cdd:	64 79 5f             	fs jns 2d3f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2df>
    2ce0:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2ce4:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2ce8:	5f                   	pop    rdi
    2ce9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2ced:	61                   	(bad)
    2cee:	74 69                	je     2d59 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2f9>
    2cf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cf2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2cf4:	53                   	push   rbx
    2cf5:	74 35                	je     2d2c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2cc>
    2cf7:	72 61                	jb     2d5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2fa>
    2cf9:	74 69                	je     2d64 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x304>
    2cfb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cfc:	49                   	rex.WB
    2cfd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2cff:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2d02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2d03:	31 30                	xor    DWORD PTR [rax],esi
    2d05:	30 30                	xor    BYTE PTR [rax],dh
    2d07:	30 30                	xor    BYTE PTR [rax],dh
    2d09:	30 30                	xor    BYTE PTR [rax],dh
    2d0b:	30 30                	xor    BYTE PTR [rax],dh
    2d0d:	45                   	rex.RB
    2d0e:	45                   	rex.RB
    2d0f:	45                   	rex.RB
    2d10:	45                   	rex.RB
    2d11:	45 31 36             	xor    DWORD PTR [r14],r14d
    2d14:	74 69                	je     2d7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x31f>
    2d16:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d17:	65 5f                	gs pop rdi
    2d19:	73 69                	jae    2d84 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x324>
    2d1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d1c:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2d1f:	65 70 6f             	gs jo  2d91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x331>
    2d22:	63 68 45             	movsxd ebp,DWORD PTR [rax+0x45]
    2d25:	76 00                	jbe    2d27 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2c7>
    2d27:	5f                   	pop    rdi
    2d28:	5a                   	pop    rdx
    2d29:	53                   	push   rbx
    2d2a:	74 36                	je     2d62 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x302>
    2d2c:	69 73 6c 65 73 73 66 	imul   esi,DWORD PTR [rbx+0x6c],0x66737365
    2d33:	66 00 5f 4e          	data16 add BYTE PTR [rdi+0x4e],bl
    2d37:	75 6d                	jne    2da6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x346>
    2d39:	49 73 4f             	rex.WB jae 2d8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x32b>
    2d3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d3d:	65 00 6c 67 61       	add    BYTE PTR gs:[rdi+riz*2+0x61],ch
    2d42:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d43:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d44:	61                   	(bad)
    2d45:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d48:	53                   	push   rbx
    2d49:	74 36                	je     2d81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x321>
    2d4b:	69 73 6c 65 73 73 64 	imul   esi,DWORD PTR [rbx+0x6c],0x64737365
    2d52:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2d56:	53                   	push   rbx
    2d57:	74 35                	je     2d8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x32e>
    2d59:	69 73 69 6e 66 64 00 	imul   esi,DWORD PTR [rbx+0x69],0x64666e
    2d60:	5f                   	pop    rdi
    2d61:	5a                   	pop    rdx
    2d62:	53                   	push   rbx
    2d63:	74 35                	je     2d9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x33a>
    2d65:	69 73 69 6e 66 65 00 	imul   esi,DWORD PTR [rbx+0x69],0x65666e
    2d6c:	5f                   	pop    rdi
    2d6d:	5a                   	pop    rdx
    2d6e:	53                   	push   rbx
    2d6f:	74 35                	je     2da6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x346>
    2d71:	61                   	(bad)
    2d72:	73 69                	jae    2ddd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x37d>
    2d74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d75:	68 65 00 5f 5a       	push   0x5a5f0065
    2d7a:	53                   	push   rbx
    2d7b:	74 35                	je     2db2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x352>
    2d7d:	61                   	(bad)
    2d7e:	73 69                	jae    2de9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x389>
    2d80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d81:	68 66 00 77 63       	push   0x63770066
    2d86:	73 66                	jae    2dee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x38e>
    2d88:	74 69                	je     2df3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x393>
    2d8a:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d8b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2d8f:	53                   	push   rbx
    2d90:	74 34                	je     2dc6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x366>
    2d92:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2d95:	68 65 00 5f 5a       	push   0x5a5f0065
    2d9a:	53                   	push   rbx
    2d9b:	74 34                	je     2dd1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x371>
    2d9d:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2da0:	68 66 00 66 70       	push   0x70660066
    2da5:	72 69                	jb     2e10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b0>
    2da7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2da8:	74 66                	je     2e10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b0>
    2daa:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2dad:	65 72 61             	gs jb  2e11 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b1>
    2db0:	74 6f                	je     2e21 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3c1>
    2db2:	72 2a                	jb     2dde <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x37e>
    2db4:	3d 00 75 69 6e       	cmp    eax,0x6e697500
    2db9:	74 5f                	je     2e1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ba>
    2dbb:	66 61                	data16 (bad)
    2dbd:	73 74                	jae    2e33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d3>
    2dbf:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2dc2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dc5:	69 73 5f 72 61 74 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69746172
    2dcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dcd:	5f                   	pop    rdi
    2dce:	76 00                	jbe    2dd0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x370>
    2dd0:	66 72 65             	data16 jb 2e38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d8>
    2dd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dd4:	70 65                	jo     2e3b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3db>
    2dd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dd7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dda:	64 65 62 75 67 00 66 	(bad)
    2de1:	65 72 72             	gs jb  2e56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f6>
    2de4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2de5:	72 00                	jb     2de7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x387>
    2de7:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2dea:	72 65                	jb     2e51 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f1>
    2dec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ded:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    2df0:	73 79                	jae    2e6b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40b>
    2df2:	6d                   	ins    DWORD PTR es:[rdi],dx
    2df3:	62 6f 6c 00 5f       	(bad)
    2df8:	5a                   	pop    rdx
    2df9:	53                   	push   rbx
    2dfa:	74 31                	je     2e2d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3cd>
    2dfc:	34 69                	xor    al,0x69
    2dfe:	73 67                	jae    2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x407>
    2e00:	72 65                	jb     2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x407>
    2e02:	61                   	(bad)
    2e03:	74 65                	je     2e6a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40a>
    2e05:	72 65                	jb     2e6c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40c>
    2e07:	71 75                	jno    2e7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41e>
    2e09:	61                   	(bad)
    2e0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e0b:	64 64 00 73 63       	fs add BYTE PTR fs:[rbx+0x63],dh
    2e10:	61                   	(bad)
    2e11:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e12:	62 6e 00 5f 5a       	(bad)
    2e17:	53                   	push   rbx
    2e18:	74 33                	je     2e4d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ed>
    2e1a:	65 72 66             	gs jb  2e83 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x423>
    2e1d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e21:	53                   	push   rbx
    2e22:	74 33                	je     2e57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f7>
    2e24:	65 72 66             	gs jb  2e8d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x42d>
    2e27:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    2e2b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e2c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e2d:	61                   	(bad)
    2e2e:	74 33                	je     2e63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x403>
    2e30:	32 00                	xor    al,BYTE PTR [rax]
    2e32:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2e39:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    2e3d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e3e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2e40:	61                   	(bad)
    2e41:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e42:	65 73 00             	gs jae 2e45 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e5>
    2e45:	5f                   	pop    rdi
    2e46:	5f                   	pop    rdi
    2e47:	73 74                	jae    2ebd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x45d>
    2e49:	61                   	(bad)
    2e4a:	74 65                	je     2eb1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x451>
    2e4c:	00 64 75 72          	add    BYTE PTR [rbp+rsi*2+0x72],ah
    2e50:	61                   	(bad)
    2e51:	74 69                	je     2ebc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x45c>
    2e53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e55:	3c 6c                	cmp    al,0x6c
    2e57:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e59:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2e5d:	74 2c                	je     2e8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x42b>
    2e5f:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2e62:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2e65:	72 61                	jb     2ec8 <_Z4testPFj8string_tE9Filenames8TestDataj+0x8>
    2e67:	74 69                	je     2ed2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x12>
    2e69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e6a:	3c 31                	cmp    al,0x31
    2e6c:	2c 20                	sub    al,0x20
    2e6e:	31 30                	xor    DWORD PTR [rax],esi
    2e70:	30 30                	xor    BYTE PTR [rax],dh
    2e72:	30 30                	xor    BYTE PTR [rax],dh
    2e74:	30 30                	xor    BYTE PTR [rax],dh
    2e76:	30 30                	xor    BYTE PTR [rax],dh
    2e78:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2e7b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2e7e:	65 72 61             	gs jb  2ee2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x22>
    2e81:	74 6f                	je     2ef2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x32>
    2e83:	72 2b                	jb     2eb0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x450>
    2e85:	2b 00                	sub    eax,DWORD PTR [rax]
    2e87:	5f                   	pop    rdi
    2e88:	5a                   	pop    rdx
    2e89:	53                   	push   rbx
    2e8a:	74 36                	je     2ec2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x2>
    2e8c:	69 73 6c 65 73 73 65 	imul   esi,DWORD PTR [rbx+0x6c],0x65737365
    2e93:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e97:	53                   	push   rbx
    2e98:	74 34                	je     2ece <_Z4testPFj8string_tE9Filenames8TestDataj+0xe>
    2e9a:	72 69                	jb     2f05 <_Z4testPFj8string_tE9Filenames8TestDataj+0x45>
    2e9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e9d:	74 65                	je     2f04 <_Z4testPFj8string_tE9Filenames8TestDataj+0x44>
    2e9f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ea2:	53                   	push   rbx
    2ea3:	74 34                	je     2ed9 <_Z4testPFj8string_tE9Filenames8TestDataj+0x19>
    2ea5:	72 69                	jb     2f10 <_Z7testAllPKcjS0_>
    2ea7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ea8:	74 66                	je     2f10 <_Z7testAllPKcjS0_>
    2eaa:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2ead:	61                   	(bad)
    2eae:	72 74                	jb     2f24 <_Z7testAllPKcjS0_+0x14>
    2eb0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eb3:	73 74                	jae    2f29 <_Z7testAllPKcjS0_+0x19>
    2eb5:	72 65                	jb     2f1c <_Z7testAllPKcjS0_+0xc>
    2eb7:	61                   	(bad)
    2eb8:	6d                   	ins    DWORD PTR es:[rdi],dx
    2eb9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ebc:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2ec3:	73 74                	jae    2f39 <_Z7testAllPKcjS0_+0x29>
    2ec5:	36 34 5f             	ss xor al,0x5f
    2ec8:	74 00                	je     2eca <_Z4testPFj8string_tE9Filenames8TestDataj+0xa>
    2eca:	64 75 72             	fs jne 2f3f <_Z7testAllPKcjS0_+0x2f>
    2ecd:	61                   	(bad)
    2ece:	74 69                	je     2f39 <_Z7testAllPKcjS0_+0x29>
    2ed0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ed1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed2:	3c 6c                	cmp    al,0x6c
    2ed4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ed5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2eda:	74 3e                	je     2f1a <_Z7testAllPKcjS0_+0xa>
    2edc:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    2edf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ee0:	5f                   	pop    rdi
    2ee1:	67 72 6f             	addr32 jb 2f53 <_Z7testAllPKcjS0_+0x43>
    2ee4:	75 70                	jne    2f56 <_Z7testAllPKcjS0_+0x46>
    2ee6:	69 6e 67 00 5f 5a 32 	imul   ebp,DWORD PTR [rsi+0x67],0x325a5f00
    2eed:	37                   	(bad)
    2eee:	73 74                	jae    2f64 <_Z7testAllPKcjS0_+0x54>
    2ef0:	61                   	(bad)
    2ef1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ef2:	64 61                	fs (bad)
    2ef4:	72 74                	jb     2f6a <_Z7testAllPKcjS0_+0x5a>
    2ef6:	44                   	rex.R
    2ef7:	65 76 69             	gs jbe 2f63 <_Z7testAllPKcjS0_+0x53>
    2efa:	61                   	(bad)
    2efb:	74 69                	je     2f66 <_Z7testAllPKcjS0_+0x56>
    2efd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2efe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2eff:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2f01:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f03:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2f0a:	37                   	(bad)
    2f0b:	48 61                	rex.W (bad)
    2f0d:	73 68                	jae    2f77 <_Z7testAllPKcjS0_+0x67>
    2f0f:	4d 61                	rex.WRB (bad)
    2f11:	70 66                	jo     2f79 <_Z7testAllPKcjS0_+0x69>
    2f13:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f16:	75 69                	jne    2f81 <_Z7testAllPKcjS0_+0x71>
    2f18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f19:	74 6d                	je     2f88 <_Z7testAllPKcjS0_+0x78>
    2f1b:	61                   	(bad)
    2f1c:	78 5f                	js     2f7d <_Z7testAllPKcjS0_+0x6d>
    2f1e:	74 00                	je     2f20 <_Z7testAllPKcjS0_+0x10>
    2f20:	68 79 70 6f 74       	push   0x746f7079
    2f25:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f28:	53                   	push   rbx
    2f29:	74 31                	je     2f5c <_Z7testAllPKcjS0_+0x4c>
    2f2b:	34 69                	xor    al,0x69
    2f2d:	73 67                	jae    2f96 <_Z7testAllPKcjS0_+0x86>
    2f2f:	72 65                	jb     2f96 <_Z7testAllPKcjS0_+0x86>
    2f31:	61                   	(bad)
    2f32:	74 65                	je     2f99 <_Z7testAllPKcjS0_+0x89>
    2f34:	72 65                	jb     2f9b <_Z7testAllPKcjS0_+0x8b>
    2f36:	71 75                	jno    2fad <_Z7testAllPKcjS0_+0x9d>
    2f38:	61                   	(bad)
    2f39:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f3a:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2f3f:	53                   	push   rbx
    2f40:	74 35                	je     2f77 <_Z7testAllPKcjS0_+0x67>
    2f42:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f44:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f46:	72 65                	jb     2fad <_Z7testAllPKcjS0_+0x9d>
    2f48:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f4b:	53                   	push   rbx
    2f4c:	74 35                	je     2f83 <_Z7testAllPKcjS0_+0x73>
    2f4e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f52:	72 66                	jb     2fba <_Z7testAllPKcjS0_+0xaa>
    2f54:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f57:	4e                   	rex.WRX
    2f58:	4b 53                	rex.WXB push r11
    2f5a:	74 36                	je     2f92 <_Z7testAllPKcjS0_+0x82>
    2f5c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2f5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f62:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2f66:	61                   	(bad)
    2f67:	74 69                	je     2fd2 <_Z7testAllPKcjS0_+0xc2>
    2f69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f6b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2f6d:	53                   	push   rbx
    2f6e:	74 35                	je     2fa5 <_Z7testAllPKcjS0_+0x95>
    2f70:	72 61                	jb     2fd3 <_Z7testAllPKcjS0_+0xc3>
    2f72:	74 69                	je     2fdd <_Z7testAllPKcjS0_+0xcd>
    2f74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f75:	49                   	rex.WB
    2f76:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2f78:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2f7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f7c:	31 30                	xor    DWORD PTR [rax],esi
    2f7e:	30 30                	xor    BYTE PTR [rax],dh
    2f80:	30 30                	xor    BYTE PTR [rax],dh
    2f82:	30 30                	xor    BYTE PTR [rax],dh
    2f84:	30 30                	xor    BYTE PTR [rax],dh
    2f86:	45                   	rex.RB
    2f87:	45                   	rex.RB
    2f88:	45 70 73             	rex.RB jo 2ffe <_Z7testAllPKcjS0_+0xee>
    2f8b:	45 76 00             	rex.RB jbe 2f8e <_Z7testAllPKcjS0_+0x7e>
    2f8e:	77 63                	ja     2ff3 <_Z7testAllPKcjS0_+0xe3>
    2f90:	73 63                	jae    2ff5 <_Z7testAllPKcjS0_+0xe5>
    2f92:	61                   	(bad)
    2f93:	74 00                	je     2f95 <_Z7testAllPKcjS0_+0x85>
    2f95:	74 6d                	je     3004 <_Z7testAllPKcjS0_+0xf4>
    2f97:	70 66                	jo     2fff <_Z7testAllPKcjS0_+0xef>
    2f99:	69 6c 65 00 31 31 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x5f5f3131
    2fa0:	5f 
    2fa1:	6d                   	ins    DWORD PTR es:[rdi],dx
    2fa2:	62 73 74 61 74       	(bad)
    2fa7:	65 5f                	gs pop rdi
    2fa9:	74 00                	je     2fab <_Z7testAllPKcjS0_+0x9b>
    2fab:	69 6e 74 5f 70 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f705f
    2fb2:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    2fb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fba:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2fbd:	65 72 69             	gs jb  3029 <_Z7testAllPKcjS0_+0x119>
    2fc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fc1:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2fc4:	5f                   	pop    rdi
    2fc5:	5f                   	pop    rdi
    2fc6:	73 77                	jae    303f <_Z7testAllPKcjS0_+0x12f>
    2fc8:	61                   	(bad)
    2fc9:	70 70                	jo     303b <_Z7testAllPKcjS0_+0x12b>
    2fcb:	61                   	(bad)
    2fcc:	62                   	(bad)
    2fcd:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fce:	65 5f                	gs pop rdi
    2fd0:	77 69                	ja     303b <_Z7testAllPKcjS0_+0x12b>
    2fd2:	74 68                	je     303c <_Z7testAllPKcjS0_+0x12c>
    2fd4:	5f                   	pop    rdi
    2fd5:	64 65 74 61          	fs gs je 303a <_Z7testAllPKcjS0_+0x12a>
    2fd9:	69 6c 73 00 74 6d 5f 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x7a5f6d74
    2fe0:	7a 
    2fe1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fe2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fe3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2fe7:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    2fee:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    2ff1:	67 65 74 63          	addr32 gs je 3058 <_Z7testAllPKcjS0_+0x148>
    2ff5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ff8:	4e 53                	rex.WRX push rbx
    2ffa:	74 36                	je     3032 <_Z7testAllPKcjS0_+0x122>
    2ffc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2fff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3000:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3001:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3002:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3006:	61                   	(bad)
    3007:	74 69                	je     3072 <_Z7testAllPKcjS0_+0x162>
    3009:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    300b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    300d:	53                   	push   rbx
    300e:	74 35                	je     3045 <_Z7testAllPKcjS0_+0x135>
    3010:	72 61                	jb     3073 <_Z7testAllPKcjS0_+0x163>
    3012:	74 69                	je     307d <_Z7testAllPKcjS0_+0x16d>
    3014:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3015:	49                   	rex.WB
    3016:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3018:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    301b:	6c                   	ins    BYTE PTR es:[rdi],dx
    301c:	31 30                	xor    DWORD PTR [rax],esi
    301e:	30 30                	xor    BYTE PTR [rax],dh
    3020:	30 30                	xor    BYTE PTR [rax],dh
    3022:	30 30                	xor    BYTE PTR [rax],dh
    3024:	30 30                	xor    BYTE PTR [rax],dh
    3026:	45                   	rex.RB
    3027:	45                   	rex.RB
    3028:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    302c:	78 45                	js     3073 <_Z7testAllPKcjS0_+0x163>
    302e:	76 00                	jbe    3030 <_Z7testAllPKcjS0_+0x120>
    3030:	5f                   	pop    rdi
    3031:	5a                   	pop    rdx
    3032:	53                   	push   rbx
    3033:	74 35                	je     306a <_Z7testAllPKcjS0_+0x15a>
    3035:	69 6c 6f 67 62 66 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006662
    303c:	5f 
    303d:	5a                   	pop    rdx
    303e:	53                   	push   rbx
    303f:	74 33                	je     3074 <_Z7testAllPKcjS0_+0x164>
    3041:	70 6f                	jo     30b2 <_Z7testAllPKcjS0_+0x1a2>
    3043:	77 65                	ja     30aa <_Z7testAllPKcjS0_+0x19a>
    3045:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    3049:	72 74                	jb     30bf <_Z7testAllPKcjS0_+0x1af>
    304b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    304c:	6d                   	ins    DWORD PTR es:[rdi],dx
    304d:	62                   	(bad)
    304e:	00 6c 63 6f          	add    BYTE PTR [rbx+riz*2+0x6f],ch
    3052:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3053:	76 00                	jbe    3055 <_Z7testAllPKcjS0_+0x145>
    3055:	5f                   	pop    rdi
    3056:	5a                   	pop    rdx
    3057:	53                   	push   rbx
    3058:	74 35                	je     308f <_Z7testAllPKcjS0_+0x17f>
    305a:	69 6c 6f 67 62 65 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006562
    3061:	5f 
    3062:	5a                   	pop    rdx
    3063:	53                   	push   rbx
    3064:	74 31                	je     3097 <_Z7testAllPKcjS0_+0x187>
    3066:	34 69                	xor    al,0x69
    3068:	73 67                	jae    30d1 <_Z7testAllPKcjS0_+0x1c1>
    306a:	72 65                	jb     30d1 <_Z7testAllPKcjS0_+0x1c1>
    306c:	61                   	(bad)
    306d:	74 65                	je     30d4 <_Z7testAllPKcjS0_+0x1c4>
    306f:	72 65                	jb     30d6 <_Z7testAllPKcjS0_+0x1c6>
    3071:	71 75                	jno    30e8 <_Z7testAllPKcjS0_+0x1d8>
    3073:	61                   	(bad)
    3074:	6c                   	ins    BYTE PTR es:[rdi],dx
    3075:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    307a:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    307d:	65 73 74             	gs jae 30f4 <_Z7testAllPKcjS0_+0x1e4>
    3080:	53                   	push   rbx
    3081:	65 61                	gs (bad)
    3083:	72 63                	jb     30e8 <_Z7testAllPKcjS0_+0x1d8>
    3085:	68 54 69 6d 65       	push   0x656d6954
    308a:	50                   	push   rax
    308b:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    308e:	4f 5f                	rex.WRXB pop r15
    3090:	46                   	rex.RX
    3091:	49                   	rex.WB
    3092:	4c                   	rex.WR
    3093:	45 50                	rex.RB push r8
    3095:	46 6a 38             	rex.RX push 0x38
    3098:	73 74                	jae    310e <_Z7testAllPKcjS0_+0x1fe>
    309a:	72 69                	jb     3105 <_Z7testAllPKcjS0_+0x1f5>
    309c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    309d:	67 5f                	addr32 pop rdi
    309f:	74 45                	je     30e6 <_Z7testAllPKcjS0_+0x1d6>
    30a1:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    30a5:	74 44                	je     30eb <_Z7testAllPKcjS0_+0x1db>
    30a7:	61                   	(bad)
    30a8:	74 61                	je     310b <_Z7testAllPKcjS0_+0x1fb>
    30aa:	6a 00                	push   0x0
    30ac:	5f                   	pop    rdi
    30ad:	49                   	rex.WB
    30ae:	4f 5f                	rex.WRXB pop r15
    30b0:	72 65                	jb     3117 <_Z7testAllPKcjS0_+0x207>
    30b2:	61                   	(bad)
    30b3:	64 5f                	fs pop rdi
    30b5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30b7:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    30bb:	53                   	push   rbx
    30bc:	74 35                	je     30f3 <_Z7testAllPKcjS0_+0x1e3>
    30be:	6c                   	ins    BYTE PTR es:[rdi],dx
    30bf:	72 69                	jb     312a <_Z7testAllPKcjS0_+0x21a>
    30c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30c2:	74 65                	je     3129 <_Z7testAllPKcjS0_+0x219>
    30c4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    30c7:	73 6e                	jae    3137 <_Z7testAllPKcjS0_+0x227>
    30c9:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    30cc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    30cf:	53                   	push   rbx
    30d0:	74 39                	je     310b <_Z7testAllPKcjS0_+0x1fb>
    30d2:	72 65                	jb     3139 <_Z7testAllPKcjS0_+0x229>
    30d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    30d5:	61                   	(bad)
    30d6:	69 6e 64 65 72 65 65 	imul   ebp,DWORD PTR [rsi+0x64],0x65657265
    30dd:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30e0:	65 72 61             	gs jb  3144 <_Z7testAllPKcjS0_+0x234>
    30e3:	74 6f                	je     3154 <_Z7testAllPKcjS0_+0x244>
    30e5:	72 2d                	jb     3114 <_Z7testAllPKcjS0_+0x204>
    30e7:	2d 00 69 6e 74       	sub    eax,0x746e6900
    30ec:	5f                   	pop    rdi
    30ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30ee:	5f                   	pop    rdi
    30ef:	73 69                	jae    315a <_Z7testAllPKcjS0_+0x24a>
    30f1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    30f3:	5f                   	pop    rdi
    30f4:	70 6f                	jo     3165 <_Z7testAllPKcjS0_+0x255>
    30f6:	73 6e                	jae    3166 <_Z7testAllPKcjS0_+0x256>
    30f8:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30fb:	65 72 61             	gs jb  315f <_Z7testAllPKcjS0_+0x24f>
    30fe:	74 6f                	je     316f <_Z7testAllPKcjS0_+0x25f>
    3100:	72 2d                	jb     312f <_Z7testAllPKcjS0_+0x21f>
    3102:	3d 00 5f 66 69       	cmp    eax,0x69665f00
    3107:	6c                   	ins    BYTE PTR es:[rdi],dx
    3108:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    310a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    310b:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    310e:	6c                   	ins    BYTE PTR es:[rdi],dx
    310f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3110:	61                   	(bad)
    3111:	74 31                	je     3144 <_Z7testAllPKcjS0_+0x234>
    3113:	32 38                	xor    bh,BYTE PTR [rax]
    3115:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3118:	34 74                	xor    al,0x74
    311a:	65 73 74             	gs jae 3191 <_Z7testAllPKcjS0_+0x281>
    311d:	50                   	push   rax
    311e:	46 6a 38             	rex.RX push 0x38
    3121:	73 74                	jae    3197 <_Z7testAllPKcjS0_+0x287>
    3123:	72 69                	jb     318e <_Z7testAllPKcjS0_+0x27e>
    3125:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3126:	67 5f                	addr32 pop rdi
    3128:	74 45                	je     316f <_Z7testAllPKcjS0_+0x25f>
    312a:	39 46 69             	cmp    DWORD PTR [rsi+0x69],eax
    312d:	6c                   	ins    BYTE PTR es:[rdi],dx
    312e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3130:	61                   	(bad)
    3131:	6d                   	ins    DWORD PTR es:[rdi],dx
    3132:	65 73 38             	gs jae 316d <_Z7testAllPKcjS0_+0x25d>
    3135:	54                   	push   rsp
    3136:	65 73 74             	gs jae 31ad <_Z7testAllPKcjS0_+0x29d>
    3139:	44 61                	rex.R (bad)
    313b:	74 61                	je     319e <_Z7testAllPKcjS0_+0x28e>
    313d:	6a 00                	push   0x0
    313f:	75 69                	jne    31aa <_Z7testAllPKcjS0_+0x29a>
    3141:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3142:	74 5f                	je     31a3 <_Z7testAllPKcjS0_+0x293>
    3144:	66 61                	data16 (bad)
    3146:	73 74                	jae    31bc <_Z7testAllPKcjS0_+0x2ac>
    3148:	31 36                	xor    DWORD PTR [rsi],esi
    314a:	5f                   	pop    rdi
    314b:	74 00                	je     314d <_Z7testAllPKcjS0_+0x23d>
    314d:	5f                   	pop    rdi
    314e:	5a                   	pop    rdx
    314f:	53                   	push   rbx
    3150:	74 33                	je     3185 <_Z7testAllPKcjS0_+0x275>
    3152:	70 6f                	jo     31c3 <_Z7testAllPKcjS0_+0x2b3>
    3154:	77 66                	ja     31bc <_Z7testAllPKcjS0_+0x2ac>
    3156:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    315a:	73 72                	jae    31ce <_Z7testAllPKcjS0_+0x2be>
    315c:	74 6f                	je     31cd <_Z7testAllPKcjS0_+0x2bd>
    315e:	77 63                	ja     31c3 <_Z7testAllPKcjS0_+0x2b3>
    3160:	73 00                	jae    3162 <_Z7testAllPKcjS0_+0x252>
    3162:	69 73 6c 65 73 73 00 	imul   esi,DWORD PTR [rbx+0x6c],0x737365
    3169:	5f                   	pop    rdi
    316a:	5f                   	pop    rdi
    316b:	64 75 72             	fs jne 31e0 <_Z7testAllPKcjS0_+0x2d0>
    316e:	61                   	(bad)
    316f:	74 69                	je     31da <_Z7testAllPKcjS0_+0x2ca>
    3171:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3172:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3173:	5f                   	pop    rdi
    3174:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    3177:	74 5f                	je     31d8 <_Z7testAllPKcjS0_+0x2c8>
    3179:	69 6d 70 6c 3c 73 74 	imul   ebp,DWORD PTR [rbp+0x70],0x74733c6c
    3180:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3183:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3186:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3189:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    318b:	64 75 72             	fs jne 3200 <_Z7testAllPKcjS0_+0x2f0>
    318e:	61                   	(bad)
    318f:	74 69                	je     31fa <_Z7testAllPKcjS0_+0x2ea>
    3191:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3192:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3193:	3c 6c                	cmp    al,0x6c
    3195:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3196:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3197:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    319b:	74 2c                	je     31c9 <_Z7testAllPKcjS0_+0x2b9>
    319d:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    31a0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31a3:	72 61                	jb     3206 <_Z7testAllPKcjS0_+0x2f6>
    31a5:	74 69                	je     3210 <_Z7testAllPKcjS0_+0x300>
    31a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31a8:	3c 31                	cmp    al,0x31
    31aa:	2c 20                	sub    al,0x20
    31ac:	31 30                	xor    DWORD PTR [rax],esi
    31ae:	30 30                	xor    BYTE PTR [rax],dh
    31b0:	30 30                	xor    BYTE PTR [rax],dh
    31b2:	30 3e                	xor    BYTE PTR [rsi],bh
    31b4:	20 3e                	and    BYTE PTR [rsi],bh
    31b6:	2c 20                	sub    al,0x20
    31b8:	73 74                	jae    322e <_Z7testAllPKcjS0_+0x31e>
    31ba:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31bd:	72 61                	jb     3220 <_Z7testAllPKcjS0_+0x310>
    31bf:	74 69                	je     322a <_Z7testAllPKcjS0_+0x31a>
    31c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31c2:	3c 31                	cmp    al,0x31
    31c4:	2c 20                	sub    al,0x20
    31c6:	31 30                	xor    DWORD PTR [rax],esi
    31c8:	30 30                	xor    BYTE PTR [rax],dh
    31ca:	3e 2c 20             	ds sub al,0x20
    31cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    31ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31d0:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    31d4:	74 2c                	je     3202 <_Z7testAllPKcjS0_+0x2f2>
    31d6:	20 74 72 75          	and    BYTE PTR [rdx+rsi*2+0x75],dh
    31da:	65 2c 20             	gs sub al,0x20
    31dd:	66 61                	data16 (bad)
    31df:	6c                   	ins    BYTE PTR es:[rdi],dx
    31e0:	73 65                	jae    3247 <_Z7testAllPKcjS0_+0x337>
    31e2:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    31e6:	53                   	push   rbx
    31e7:	74 33                	je     321c <_Z7testAllPKcjS0_+0x30c>
    31e9:	74 61                	je     324c <_Z7testAllPKcjS0_+0x33c>
    31eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31ec:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    31f0:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    31f7:	73 74                	jae    326d <_Z7testAllPKcjS0_+0x35d>
    31f9:	33 32                	xor    esi,DWORD PTR [rdx]
    31fb:	5f                   	pop    rdi
    31fc:	74 00                	je     31fe <_Z7testAllPKcjS0_+0x2ee>
    31fe:	5f                   	pop    rdi
    31ff:	5a                   	pop    rdx
    3200:	53                   	push   rbx
    3201:	74 35                	je     3238 <_Z7testAllPKcjS0_+0x328>
    3203:	6c                   	ins    BYTE PTR es:[rdi],dx
    3204:	64 65 78 70          	fs gs js 3278 <_Z7testAllPKcjS0_+0x368>
    3208:	65 69 00 63 65 69 6c 	imul   eax,DWORD PTR gs:[rax],0x6c696563
    320f:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    3212:	6c                   	ins    BYTE PTR es:[rdi],dx
    3213:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3214:	61                   	(bad)
    3215:	74 36                	je     324d <_Z7testAllPKcjS0_+0x33d>
    3217:	34 00                	xor    al,0x0
    3219:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    321c:	72 31                	jb     324f <_Z7testAllPKcjS0_+0x33f>
    321e:	36 5f                	ss pop rdi
    3220:	74 00                	je     3222 <_Z7testAllPKcjS0_+0x312>
    3222:	66 70 75             	data16 jo 329a <_Z7testAllPKcjS0_+0x38a>
    3225:	74 77                	je     329e <_Z7testAllPKcjS0_+0x38e>
    3227:	63 00                	movsxd eax,DWORD PTR [rax]
    3229:	74 6d                	je     3298 <_Z7testAllPKcjS0_+0x388>
    322b:	5f                   	pop    rdi
    322c:	79 65                	jns    3293 <_Z7testAllPKcjS0_+0x383>
    322e:	61                   	(bad)
    322f:	72 00                	jb     3231 <_Z7testAllPKcjS0_+0x321>
    3231:	5f                   	pop    rdi
    3232:	5a                   	pop    rdx
    3233:	53                   	push   rbx
    3234:	74 39                	je     326f <_Z7testAllPKcjS0_+0x35f>
    3236:	72 65                	jb     329d <_Z7testAllPKcjS0_+0x38d>
    3238:	6d                   	ins    DWORD PTR es:[rdi],dx
    3239:	61                   	(bad)
    323a:	69 6e 64 65 72 66 66 	imul   ebp,DWORD PTR [rsi+0x64],0x66667265
    3241:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    3244:	61                   	(bad)
    3245:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3246:	32 00                	xor    al,BYTE PTR [rax]
    3248:	67 6d                	ins    DWORD PTR es:[edi],dx
    324a:	74 69                	je     32b5 <_Z7testAllPKcjS0_+0x3a5>
    324c:	6d                   	ins    DWORD PTR es:[rdi],dx
    324d:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    3251:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    3258:	77 63                	ja     32bd <_Z7testAllPKcjS0_+0x3ad>
    325a:	73 74                	jae    32d0 <_Z7testAllPKcjS0_+0x3c0>
    325c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    325d:	75 6c                	jne    32cb <_Z7testAllPKcjS0_+0x3bb>
    325f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3260:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    3263:	65 61                	gs (bad)
    3265:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3269:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    326a:	70 73                	jo     32df <_Z7testAllPKcjS0_+0x3cf>
    326c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    326f:	64 65 74 61          	fs gs je 32d4 <_Z7testAllPKcjS0_+0x3c4>
    3273:	69 6c 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
    327a:	77 
    327b:	72 69                	jb     32e6 <_Z7testAllPKcjS0_+0x3d6>
    327d:	74 65                	je     32e4 <_Z7testAllPKcjS0_+0x3d4>
    327f:	5f                   	pop    rdi
    3280:	70 74                	jo     32f6 <_Z7testAllPKcjS0_+0x3e6>
    3282:	72 00                	jb     3284 <_Z7testAllPKcjS0_+0x374>
    3284:	5f                   	pop    rdi
    3285:	52                   	push   rdx
    3286:	65 70 00             	gs jo  3289 <_Z7testAllPKcjS0_+0x379>
    3289:	5f                   	pop    rdi
    328a:	5a                   	pop    rdx
    328b:	4e 53                	rex.WRX push rbx
    328d:	74 36                	je     32c5 <_Z7testAllPKcjS0_+0x3b5>
    328f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3292:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3294:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3295:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3299:	61                   	(bad)
    329a:	74 69                	je     3305 <_Z7testAllPKcjS0_+0x3f5>
    329c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    329d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    329e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    32a0:	53                   	push   rbx
    32a1:	74 35                	je     32d8 <_Z7testAllPKcjS0_+0x3c8>
    32a3:	72 61                	jb     3306 <_Z7testAllPKcjS0_+0x3f6>
    32a5:	74 69                	je     3310 <_Z7testAllPKcjS0_+0x400>
    32a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32a8:	49                   	rex.WB
    32a9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32ab:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    32af:	31 30                	xor    DWORD PTR [rax],esi
    32b1:	30 30                	xor    BYTE PTR [rax],dh
    32b3:	30 30                	xor    BYTE PTR [rax],dh
    32b5:	30 30                	xor    BYTE PTR [rax],dh
    32b7:	30 30                	xor    BYTE PTR [rax],dh
    32b9:	45                   	rex.RB
    32ba:	45                   	rex.RB
    32bb:	45 61                	rex.RB (bad)
    32bd:	53                   	push   rbx
    32be:	45 52                	rex.RB push r10
    32c0:	4b 53                	rex.WXB push r11
    32c2:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32c5:	5f                   	pop    rdi
    32c6:	5a                   	pop    rdx
    32c7:	4e 53                	rex.WRX push rbx
    32c9:	74 36                	je     3301 <_Z7testAllPKcjS0_+0x3f1>
    32cb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    32ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    32d5:	61                   	(bad)
    32d6:	74 69                	je     3341 <_Z7testAllPKcjS0_+0x431>
    32d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32da:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    32dc:	53                   	push   rbx
    32dd:	74 35                	je     3314 <_Z7testAllPKcjS0_+0x404>
    32df:	72 61                	jb     3342 <_Z7testAllPKcjS0_+0x432>
    32e1:	74 69                	je     334c <_Z7testAllPKcjS0_+0x43c>
    32e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32e4:	49                   	rex.WB
    32e5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32e7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    32eb:	31 30                	xor    DWORD PTR [rax],esi
    32ed:	30 30                	xor    BYTE PTR [rax],dh
    32ef:	30 30                	xor    BYTE PTR [rax],dh
    32f1:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    32f4:	45                   	rex.RB
    32f5:	43 34 45             	rex.XB xor al,0x45
    32f8:	52                   	push   rdx
    32f9:	4b 53                	rex.WXB push r11
    32fb:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32fe:	5f                   	pop    rdi
    32ff:	5a                   	pop    rdx
    3300:	53                   	push   rbx
    3301:	74 36                	je     3339 <_Z7testAllPKcjS0_+0x429>
    3303:	6c                   	ins    BYTE PTR es:[rdi],dx
    3304:	72 6f                	jb     3375 <_Z7testAllPKcjS0_+0x465>
    3306:	75 6e                	jne    3376 <_Z7testAllPKcjS0_+0x466>
    3308:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    330d:	53                   	push   rbx
    330e:	74 36                	je     3346 <_Z7testAllPKcjS0_+0x436>
    3310:	6c                   	ins    BYTE PTR es:[rdi],dx
    3311:	6c                   	ins    BYTE PTR es:[rdi],dx
    3312:	72 69                	jb     337d <_Z7testAllPKcjS0_+0x46d>
    3314:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3315:	74 66                	je     337d <_Z7testAllPKcjS0_+0x46d>
    3317:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    331a:	4e 53                	rex.WRX push rbx
    331c:	74 36                	je     3354 <_Z7testAllPKcjS0_+0x444>
    331e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3321:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3322:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3323:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3324:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    3327:	32 31                	xor    dh,BYTE PTR [rcx]
    3329:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    332c:	65 61                	gs (bad)
    332e:	64 79 5f             	fs jns 3390 <_Z7testAllPKcjS0_+0x480>
    3331:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    3335:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
    3338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3339:	77 45                	ja     3380 <_Z7testAllPKcjS0_+0x470>
    333b:	76 00                	jbe    333d <_Z7testAllPKcjS0_+0x42d>
    333d:	73 69                	jae    33a8 <_Z7testAllPKcjS0_+0x498>
    333f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3341:	62 69 74 00 5f 5a 4e 	vmaxps xmm27,xmm17,XMMWORD PTR [r18+0x4e0]
    3348:	53                   	push   rbx
    3349:	74 36                	je     3381 <_Z7testAllPKcjS0_+0x471>
    334b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    334e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    334f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3350:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3351:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3355:	61                   	(bad)
    3356:	74 69                	je     33c1 <_Z7testAllPKcjS0_+0x4b1>
    3358:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3359:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    335a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    335c:	53                   	push   rbx
    335d:	74 35                	je     3394 <_Z7testAllPKcjS0_+0x484>
    335f:	72 61                	jb     33c2 <_Z7testAllPKcjS0_+0x4b2>
    3361:	74 69                	je     33cc <_Z7testAllPKcjS0_+0x4bc>
    3363:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3364:	49                   	rex.WB
    3365:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3367:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    336a:	6c                   	ins    BYTE PTR es:[rdi],dx
    336b:	31 30                	xor    DWORD PTR [rax],esi
    336d:	30 30                	xor    BYTE PTR [rax],dh
    336f:	30 30                	xor    BYTE PTR [rax],dh
    3371:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3374:	45                   	rex.RB
    3375:	44 34 45             	rex.R xor al,0x45
    3378:	76 00                	jbe    337a <_Z7testAllPKcjS0_+0x46a>
    337a:	5f                   	pop    rdi
    337b:	5a                   	pop    rdx
    337c:	53                   	push   rbx
    337d:	74 34                	je     33b3 <_Z7testAllPKcjS0_+0x4a3>
    337f:	66 61                	data16 (bad)
    3381:	62 73 65 00 5f       	(bad)
    3386:	5a                   	pop    rdx
    3387:	53                   	push   rbx
    3388:	74 35                	je     33bf <_Z7testAllPKcjS0_+0x4af>
    338a:	68 79 70 6f 74       	push   0x746f7079
    338f:	64 64 64 00 65 78    	fs fs add BYTE PTR fs:[rbp+0x78],ah
    3395:	70 32                	jo     33c9 <_Z7testAllPKcjS0_+0x4b9>
    3397:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    339a:	4e 53                	rex.WRX push rbx
    339c:	74 36                	je     33d4 <_Z7testAllPKcjS0_+0x4c4>
    339e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    33a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a4:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    33a8:	61                   	(bad)
    33a9:	74 69                	je     3414 <_Z7testAllPKcjS0_+0x504>
    33ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33ad:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    33af:	53                   	push   rbx
    33b0:	74 35                	je     33e7 <_Z7testAllPKcjS0_+0x4d7>
    33b2:	72 61                	jb     3415 <_Z7testAllPKcjS0_+0x505>
    33b4:	74 69                	je     341f <_Z7testAllPKcjS0_+0x50f>
    33b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33b7:	49                   	rex.WB
    33b8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    33ba:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    33bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    33be:	31 30                	xor    DWORD PTR [rax],esi
    33c0:	30 30                	xor    BYTE PTR [rax],dh
    33c2:	30 30                	xor    BYTE PTR [rax],dh
    33c4:	30 30                	xor    BYTE PTR [rax],dh
    33c6:	30 30                	xor    BYTE PTR [rax],dh
    33c8:	45                   	rex.RB
    33c9:	45                   	rex.RB
    33ca:	45                   	rex.RB
    33cb:	64 56                	fs push rsi
    33cd:	45 52                	rex.RB push r10
    33cf:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    33d1:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    33d4:	65 72 61             	gs jb  3438 <_Z7testAllPKcjS0_+0x528>
    33d7:	74 6f                	je     3448 <_Z7testAllPKcjS0_+0x538>
    33d9:	72 2f                	jb     340a <_Z7testAllPKcjS0_+0x4fa>
    33db:	3d 00 5f 5a 53       	cmp    eax,0x535a5f00
    33e0:	74 36                	je     3418 <_Z7testAllPKcjS0_+0x508>
    33e2:	72 65                	jb     3449 <_Z7testAllPKcjS0_+0x539>
    33e4:	6d                   	ins    DWORD PTR es:[rdi],dx
    33e5:	71 75                	jno    345c <_Z7testAllPKcjS0_+0x54c>
    33e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33e8:	66 66 50             	data16 push ax
    33eb:	69 00 61 64 6c 65    	imul   eax,DWORD PTR [rax],0x656c6461
    33f1:	72 33                	jb     3426 <_Z7testAllPKcjS0_+0x516>
    33f3:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    33f6:	69 6c 65 73 00 66 66 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c666600
    33fd:	6c 
    33fe:	75 73                	jne    3473 <_Z7testAllPKcjS0_+0x563>
    3400:	68 00 6c 6c 72       	push   0x726c6c00
    3405:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    340c:	53                   	push   rbx
    340d:	74 36                	je     3445 <_Z7testAllPKcjS0_+0x535>
    340f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3412:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3413:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3414:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3415:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3419:	61                   	(bad)
    341a:	74 69                	je     3485 <_Z7testAllPKcjS0_+0x575>
    341c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    341d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    341e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3420:	53                   	push   rbx
    3421:	74 35                	je     3458 <_Z7testAllPKcjS0_+0x548>
    3423:	72 61                	jb     3486 <_Z7testAllPKcjS0_+0x576>
    3425:	74 69                	je     3490 <_Z7testAllPKcjS0_+0x580>
    3427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3428:	49                   	rex.WB
    3429:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    342b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    342e:	6c                   	ins    BYTE PTR es:[rdi],dx
    342f:	31 30                	xor    DWORD PTR [rax],esi
    3431:	30 30                	xor    BYTE PTR [rax],dh
    3433:	30 30                	xor    BYTE PTR [rax],dh
    3435:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3438:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    343a:	49                   	rex.WB
    343b:	45 52                	rex.RB push r10
    343d:	4b 53                	rex.WXB push r11
    343f:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    3442:	5f                   	pop    rdi
    3443:	5a                   	pop    rdx
    3444:	53                   	push   rbx
    3445:	74 34                	je     347b <_Z7testAllPKcjS0_+0x56b>
    3447:	66 6d                	ins    WORD PTR es:[rdi],dx
    3449:	69 6e 65 65 00 74 79 	imul   ebp,DWORD PTR [rsi+0x65],0x79740065
    3450:	70 65                	jo     34b7 <_Z7testAllPKcjS0_+0x5a7>
    3452:	64 65 66 20 5f 5f    	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    3458:	76 61                	jbe    34bb <_Z7testAllPKcjS0_+0x5ab>
    345a:	5f                   	pop    rdi
    345b:	6c                   	ins    BYTE PTR es:[rdi],dx
    345c:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    3463:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3466:	76 61                	jbe    34c9 <_Z7testAllPKcjS0_+0x5b9>
    3468:	5f                   	pop    rdi
    3469:	6c                   	ins    BYTE PTR es:[rdi],dx
    346a:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    3471:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3474:	53                   	push   rbx
    3475:	74 34                	je     34ab <_Z7testAllPKcjS0_+0x59b>
    3477:	66 6d                	ins    WORD PTR es:[rdi],dx
    3479:	61                   	(bad)
    347a:	78 66                	js     34e2 <_Z7testAllPKcjS0_+0x5d2>
    347c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    3480:	32 31                	xor    dh,BYTE PTR [rcx]
    3482:	73 74                	jae    34f8 <_Z7testAllPKcjS0_+0x5e8>
    3484:	61                   	(bad)
    3485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3486:	64 61                	fs (bad)
    3488:	72 74                	jb     34fe <_Z7testAllPKcjS0_+0x5ee>
    348a:	44                   	rex.R
    348b:	65 76 69             	gs jbe 34f7 <_Z7testAllPKcjS0_+0x5e7>
    348e:	61                   	(bad)
    348f:	74 69                	je     34fa <_Z7testAllPKcjS0_+0x5ea>
    3491:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3492:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3493:	54                   	push   rsp
    3494:	69 6d 65 50 64 6a 64 	imul   ebp,DWORD PTR [rbp+0x65],0x646a6450
    349b:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    349e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    349f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34a0:	72 6d                	jb     350f <_Z7testAllPKcjS0_+0x5ff>
    34a2:	61                   	(bad)
    34a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    34a4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    34a7:	4e 53                	rex.WRX push rbx
    34a9:	74 36                	je     34e1 <_Z7testAllPKcjS0_+0x5d1>
    34ab:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    34ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    34b5:	61                   	(bad)
    34b6:	74 69                	je     3521 <_Z7testAllPKcjS0_+0x611>
    34b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34ba:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    34bc:	53                   	push   rbx
    34bd:	74 35                	je     34f4 <_Z7testAllPKcjS0_+0x5e4>
    34bf:	72 61                	jb     3522 <_Z7testAllPKcjS0_+0x612>
    34c1:	74 69                	je     352c <_Z7testAllPKcjS0_+0x61c>
    34c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34c4:	49                   	rex.WB
    34c5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    34c7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    34ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    34cb:	31 30                	xor    DWORD PTR [rax],esi
    34cd:	30 30                	xor    BYTE PTR [rax],dh
    34cf:	30 30                	xor    BYTE PTR [rax],dh
    34d1:	30 30                	xor    BYTE PTR [rax],dh
    34d3:	30 30                	xor    BYTE PTR [rax],dh
    34d5:	45                   	rex.RB
    34d6:	45                   	rex.RB
    34d7:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    34d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    34da:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    34e1:	35 61 63 6f 73       	xor    eax,0x736f6361
    34e6:	68 65 00 5f 5a       	push   0x5a5f0065
    34eb:	53                   	push   rbx
    34ec:	74 35                	je     3523 <_Z7testAllPKcjS0_+0x613>
    34ee:	61                   	(bad)
    34ef:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    34f2:	68                   	.byte 0x68
    34f3:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	72 6f                	jb     72 <__abi_tag-0x30a>
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	74 2f                	je     35 <__abi_tag-0x347>
   6:	68 61 73 68 4d       	push   0x4d687361
   b:	61                   	(bad)
   c:	70 2f                	jo     3d <__abi_tag-0x33f>
   e:	62 75 69 6c 64       	(bad)
  13:	00 2f                	add    BYTE PTR [rdi],ch
  15:	72 6f                	jb     86 <__abi_tag-0x2f6>
  17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  18:	74 2f                	je     49 <__abi_tag-0x333>
  1a:	68 61 73 68 4d       	push   0x4d687361
  1f:	61                   	(bad)
  20:	70 2f                	jo     51 <__abi_tag-0x32b>
  22:	73 72                	jae    96 <__abi_tag-0x2e6>
  24:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  26:	6d                   	ins    DWORD PTR es:[rdi],dx
  27:	61                   	(bad)
  28:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  2f:	2f                   	(bad)
  30:	72 6f                	jb     a1 <__abi_tag-0x2db>
  32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  33:	74 2f                	je     64 <__abi_tag-0x318>
  35:	68 61 73 68 4d       	push   0x4d687361
  3a:	61                   	(bad)
  3b:	70 2f                	jo     6c <__abi_tag-0x310>
  3d:	73 72                	jae    b1 <__abi_tag-0x2cb>
  3f:	63 00                	movsxd eax,DWORD PTR [rax]
  41:	2f                   	(bad)
  42:	75 73                	jne    b7 <__abi_tag-0x2c5>
  44:	72 2f                	jb     75 <__abi_tag-0x307>
  46:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4d:	00 2f                	add    BYTE PTR [rdi],ch
  4f:	75 73                	jne    c4 <__abi_tag-0x2b8>
  51:	72 2f                	jb     82 <__abi_tag-0x2fa>
  53:	6c                   	ins    BYTE PTR es:[rdi],dx
  54:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  5b:	78 38                	js     95 <__abi_tag-0x2e7>
  5d:	36 5f                	ss pop rdi
  5f:	36 34 2d             	ss xor al,0x2d
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  6a:	75 2f                	jne    9b <__abi_tag-0x2e1>
  6c:	31 33                	xor    DWORD PTR [rbx],esi
  6e:	2f                   	(bad)
  6f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  76:	00 2f                	add    BYTE PTR [rdi],ch
  78:	75 73                	jne    ed <__abi_tag-0x28f>
  7a:	72 2f                	jb     ab <__abi_tag-0x2d1>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	2f                   	(bad)
  84:	78 38                	js     be <__abi_tag-0x2be>
  86:	36 5f                	ss pop rdi
  88:	36 34 2d             	ss xor al,0x2d
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  93:	75 2f                	jne    c4 <__abi_tag-0x2b8>
  95:	62 69 74 73 00       	(bad)
  9a:	2f                   	(bad)
  9b:	75 73                	jne    110 <__abi_tag-0x26c>
  9d:	72 2f                	jb     ce <__abi_tag-0x2ae>
  9f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a6:	2f                   	(bad)
  a7:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a9:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ab:	31 33                	xor    DWORD PTR [rbx],esi
  ad:	00 2f                	add    BYTE PTR [rdi],ch
  af:	75 73                	jne    124 <__abi_tag-0x258>
  b1:	72 2f                	jb     e2 <__abi_tag-0x29a>
  b3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ba:	2f                   	(bad)
  bb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bf:	31 33                	xor    DWORD PTR [rbx],esi
  c1:	2f                   	(bad)
  c2:	62 69 74 73 00       	(bad)
  c7:	2f                   	(bad)
  c8:	72 6f                	jb     139 <__abi_tag-0x243>
  ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cb:	74 2f                	je     fc <__abi_tag-0x280>
  cd:	68 61 73 68 4d       	push   0x4d687361
  d2:	61                   	(bad)
  d3:	70 2f                	jo     104 <__abi_tag-0x278>
  d5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dc:	00 2f                	add    BYTE PTR [rdi],ch
  de:	75 73                	jne    153 <__abi_tag-0x229>
  e0:	72 2f                	jb     111 <__abi_tag-0x26b>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	78 38                	js     124 <__abi_tag-0x258>
  ec:	36 5f                	ss pop rdi
  ee:	36 34 2d             	ss xor al,0x2d
  f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  f2:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  f9:	75 2f                	jne    12a <__abi_tag-0x252>
  fb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  fd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ff:	31 33                	xor    DWORD PTR [rbx],esi
 101:	2f                   	(bad)
 102:	62 69 74 73 00       	(bad)
 107:	73 74                	jae    17d <__abi_tag-0x1ff>
 109:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 10b:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 112:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 119:	74 
 11a:	79 70                	jns    18c <__abi_tag-0x1f0>
 11c:	65 73 2e             	gs jae 14d <__abi_tag-0x22f>
 11f:	68 00 63 73 74       	push   0x74736300
 124:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 126:	69 62 00 73 74 64 5f 	imul   esp,DWORD PTR [rdx+0x0],0x5f647473
 12d:	61                   	(bad)
 12e:	62 73 2e 68 00       	(bad)
 133:	73 74                	jae    1a9 <__abi_tag-0x1d3>
 135:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 137:	69 62 2d 66 6c 6f 61 	imul   esp,DWORD PTR [rdx+0x2d],0x616f6c66
 13e:	74 2e                	je     16e <__abi_tag-0x20e>
 140:	68 00 73 74 64       	push   0x64747300
 145:	6c                   	ins    BYTE PTR es:[rdi],dx
 146:	69 62 2d 62 73 65 61 	imul   esp,DWORD PTR [rdx+0x2d],0x61657362
 14d:	72 63                	jb     1b2 <__abi_tag-0x1ca>
 14f:	68 2e 68 00 73       	push   0x7300682e
 154:	74 64                	je     1ba <__abi_tag-0x1c2>
 156:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 15d:	74 6e                	je     1cd <__abi_tag-0x1af>
 15f:	2e 68 00 68 61 73    	cs push 0x73616800
 165:	68 5f 6d 61 70       	push   0x70616d5f
 16a:	2e 68 00 74 65 73    	cs push 0x73657400
 170:	74 73                	je     1e5 <__abi_tag-0x197>
 172:	2e 68 00 63 2b 2b    	cs push 0x2b2b6300
 178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 17b:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 181:	2f                   	(bad)
 182:	72 6f                	jb     1f3 <__abi_tag-0x189>
 184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 185:	74 2f                	je     1b6 <__abi_tag-0x1c6>
 187:	68 61 73 68 4d       	push   0x4d687361
 18c:	61                   	(bad)
 18d:	70 2f                	jo     1be <__abi_tag-0x1be>
 18f:	73 72                	jae    203 <__abi_tag-0x179>
 191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 193:	68 61 73 68 5f       	push   0x5f687361
 198:	6d                   	ins    DWORD PTR es:[rdi],dx
 199:	61                   	(bad)
 19a:	70 2e                	jo     1ca <__abi_tag-0x1b2>
 19c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 19f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1a2:	72 69                	jb     20d <__abi_tag-0x16f>
 1a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1a5:	67 2e 68 00 73 74 72 	addr32 cs push 0x72747300
 1ac:	69 6e 67 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f665f
 1b3:	74 69                	je     21e <__abi_tag-0x15e>
 1b5:	66 69 65 64 2e 68    	imul   sp,WORD PTR [rbp+0x64],0x682e
 1bb:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1be:	64 69 6f 32 2e 68 00 	imul   ebp,DWORD PTR fs:[rdi+0x32],0x7300682e
 1c5:	73 
 1c6:	74 72                	je     23a <__abi_tag-0x142>
 1c8:	69 6e 67 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x67],0x682e745f
 1cf:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 1d3:	74 2e                	je     203 <__abi_tag-0x179>
 1d5:	68 00 73 74 64       	push   0x64747300
 1da:	69 6f 32 2d 64 65 63 	imul   ebp,DWORD PTR [rdi+0x32],0x6365642d
 1e1:	6c                   	ins    BYTE PTR es:[rdi],dx
 1e2:	2e 68 00 61 73 73    	cs push 0x73736100
 1e8:	65 72 74             	gs jb  25f <__abi_tag-0x11d>
 1eb:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 1f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1f2:	74 2f                	je     223 <__abi_tag-0x159>
 1f4:	68 61 73 68 4d       	push   0x4d687361
 1f9:	61                   	(bad)
 1fa:	70 2f                	jo     22b <__abi_tag-0x151>
 1fc:	73 72                	jae    270 <__abi_tag-0x10c>
 1fe:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 200:	68 61 73 68 5f       	push   0x5f687361
 205:	66 75 6e             	data16 jne 276 <__abi_tag-0x106>
 208:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 20b:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 20e:	00 73 6d             	add    BYTE PTR [rbx+0x6d],dh
 211:	6d                   	ins    DWORD PTR es:[rdi],dx
 212:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 219:	68 00 73 74 64       	push   0x64747300
 21e:	69 6e 74 2d 69 6e 74 	imul   ebp,DWORD PTR [rsi+0x74],0x746e692d
 225:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 226:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 22c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 22d:	74 2f                	je     25e <__abi_tag-0x11e>
 22f:	68 61 73 68 4d       	push   0x4d687361
 234:	61                   	(bad)
 235:	70 2f                	jo     266 <__abi_tag-0x116>
 237:	73 72                	jae    2ab <__abi_tag-0xd1>
 239:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 23b:	6c                   	ins    BYTE PTR es:[rdi],dx
 23c:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
 243:	00 2f                	add    BYTE PTR [rdi],ch
 245:	72 6f                	jb     2b6 <__abi_tag-0xc6>
 247:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 248:	74 2f                	je     279 <__abi_tag-0x103>
 24a:	68 61 73 68 4d       	push   0x4d687361
 24f:	61                   	(bad)
 250:	70 2f                	jo     281 <__abi_tag-0xfb>
 252:	73 72                	jae    2c6 <__abi_tag-0xb6>
 254:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 256:	75 74                	jne    2cc <__abi_tag-0xb0>
 258:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
 25f:	00 
 260:	2f                   	(bad)
 261:	75 73                	jne    2d6 <__abi_tag-0xa6>
 263:	72 2f                	jb     294 <__abi_tag-0xe8>
 265:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 26c:	2f                   	(bad)
 26d:	78 38                	js     2a7 <__abi_tag-0xd5>
 26f:	36 5f                	ss pop rdi
 271:	36 34 2d             	ss xor al,0x2d
 274:	6c                   	ins    BYTE PTR es:[rdi],dx
 275:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 27c:	75 2f                	jne    2ad <__abi_tag-0xcf>
 27e:	73 79                	jae    2f9 <__abi_tag-0x83>
 280:	73 00                	jae    282 <__abi_tag-0xfa>
 282:	2f                   	(bad)
 283:	75 73                	jne    2f8 <__abi_tag-0x84>
 285:	72 2f                	jb     2b6 <__abi_tag-0xc6>
 287:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 28e:	2f                   	(bad)
 28f:	78 38                	js     2c9 <__abi_tag-0xb3>
 291:	36 5f                	ss pop rdi
 293:	36 34 2d             	ss xor al,0x2d
 296:	6c                   	ins    BYTE PTR es:[rdi],dx
 297:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 29e:	75 2f                	jne    2cf <__abi_tag-0xad>
 2a0:	62 69 74 73 2f       	(bad)
 2a5:	74 79                	je     320 <__abi_tag-0x5c>
 2a7:	70 65                	jo     30e <__abi_tag-0x6e>
 2a9:	73 00                	jae    2ab <__abi_tag-0xd1>
 2ab:	66 63 6e 74          	movsxd bp,DWORD PTR [rsi+0x74]
 2af:	6c                   	ins    BYTE PTR es:[rdi],dx
 2b0:	32 2e                	xor    ch,BYTE PTR [rsi]
 2b2:	68 00 75 6e 69       	push   0x696e7500
 2b7:	73 74                	jae    32d <__abi_tag-0x4f>
 2b9:	64 2e 68 00 73 74 72 	fs cs push 0x72747300
 2c0:	75 63                	jne    325 <__abi_tag-0x57>
 2c2:	74 5f                	je     323 <__abi_tag-0x59>
 2c4:	74 69                	je     32f <__abi_tag-0x4d>
 2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
 2c7:	65 73 70             	gs jae 33a <__abi_tag-0x42>
 2ca:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 2cd:	68 00 73 74 72       	push   0x72747300
 2d2:	75 63                	jne    337 <__abi_tag-0x45>
 2d4:	74 5f                	je     335 <__abi_tag-0x47>
 2d6:	73 74                	jae    34c <__abi_tag-0x30>
 2d8:	61                   	(bad)
 2d9:	74 2e                	je     309 <__abi_tag-0x73>
 2db:	68 00 75 6e 69       	push   0x696e7500
 2e0:	73 74                	jae    356 <__abi_tag-0x26>
 2e2:	64 2d 64 65 63 6c    	fs sub eax,0x6c636564
 2e8:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 2ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ef:	74 2f                	je     320 <__abi_tag-0x5c>
 2f1:	68 61 73 68 4d       	push   0x4d687361
 2f6:	61                   	(bad)
 2f7:	70 2f                	jo     328 <__abi_tag-0x54>
 2f9:	73 72                	jae    36d <__abi_tag-0xf>
 2fb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 2fd:	74 65                	je     364 <__abi_tag-0x18>
 2ff:	73 74                	jae    375 <__abi_tag-0x7>
 301:	73 2e                	jae    331 <__abi_tag-0x4b>
 303:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 306:	00 2f                	add    BYTE PTR [rdi],ch
 308:	75 73                	jne    37d <__abi_tag+0x1>
 30a:	72 2f                	jb     33b <__abi_tag-0x41>
 30c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 313:	2f                   	(bad)
 314:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 316:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 318:	31 33                	xor    DWORD PTR [rbx],esi
 31a:	2f                   	(bad)
 31b:	64 65 62 75 67 00 2f 	(bad)
 322:	75 73                	jne    397 <__abi_tag+0x1b>
 324:	72 2f                	jb     355 <__abi_tag-0x27>
 326:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 32d:	2f                   	(bad)
 32e:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 330:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 332:	31 33                	xor    DWORD PTR [rbx],esi
 334:	2f                   	(bad)
 335:	70 73                	jo     3aa <__abi_tag+0x2e>
 337:	74 6c                	je     3a5 <__abi_tag+0x29>
 339:	00 63 6d             	add    BYTE PTR [rbx+0x6d],ah
 33c:	61                   	(bad)
 33d:	74 68                	je     3a7 <__abi_tag+0x2b>
 33f:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
 342:	72 6f                	jb     3b3 <__abi_tag+0x37>
 344:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 346:	2e 68 00 74 79 70    	cs push 0x70797400
 34c:	65 5f                	gs pop rdi
 34e:	74 72                	je     3c2 <__abi_tag+0x46>
 350:	61                   	(bad)
 351:	69 74 73 00 64 65 62 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x75626564
 358:	75 
 359:	67 2e 68 00 63 77 63 	addr32 cs push 0x63776300
 360:	68 61 72 00 63       	push   0x63007261
 365:	6c                   	ins    BYTE PTR es:[rdi],dx
 366:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 367:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 36a:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 36e:	74 64                	je     3d4 <__abi_tag+0x58>
 370:	69 6f 00 63 73 74 64 	imul   ebp,DWORD PTR [rdi+0x0],0x64747363
 377:	64 65 66 00 63 73    	fs data16 add BYTE PTR gs:[rbx+0x73],ah
 37d:	74 64                	je     3e3 <__abi_tag+0x67>
 37f:	69 6e 74 00 63 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61686300
 386:	72 63                	jb     3eb <__abi_tag+0x6f>
 388:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 389:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 38a:	76 2e                	jbe    3ba <__abi_tag+0x3e>
 38c:	68 00 63 74 69       	push   0x69746300
 391:	6d                   	ins    DWORD PTR es:[rdi],dx
 392:	65 00 72 61          	add    BYTE PTR gs:[rdx+0x61],dh
 396:	74 69                	je     401 <__abi_tag+0x85>
 398:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 399:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 39c:	65 64 65 66 69 6e 65 	gs fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 3a3:	64 5f 
 3a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a6:	70 73                	jo     41b <__abi_tag+0x9f>
 3a8:	2e 68 00 6d 61 74    	cs push 0x74616d00
 3ae:	68 2e 68 00 63       	push   0x6300682e
 3b3:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b5:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3b8:	74 2e                	je     3e8 <__abi_tag+0x6c>
 3ba:	68 00 74 69 6d       	push   0x6d697400
 3bf:	65 5f                	gs pop rdi
 3c1:	74 2e                	je     3f1 <__abi_tag+0x75>
 3c3:	68 00 3c 62 75       	push   0x75623c00
 3c8:	69 6c 74 2d 69 6e 3e 	imul   ebp,DWORD PTR [rsp+rsi*2+0x2d],0x3e6e69
 3cf:	00 
 3d0:	5f                   	pop    rdi
 3d1:	5f                   	pop    rdi
 3d2:	6d                   	ins    DWORD PTR es:[rdi],dx
 3d3:	62 73 74 61 74       	(bad)
 3d8:	65 5f                	gs pop rdi
 3da:	74 2e                	je     40a <__abi_tag+0x8e>
 3dc:	68 00 5f 5f 66       	push   0x665f5f00
 3e1:	70 6f                	jo     452 <__abi_tag+0xd6>
 3e3:	73 5f                	jae    444 <__abi_tag+0xc8>
 3e5:	74 2e                	je     415 <__abi_tag+0x99>
 3e7:	68 00 5f 5f 46       	push   0x465f5f00
 3ec:	49                   	rex.WB
 3ed:	4c                   	rex.WR
 3ee:	45                   	rex.RB
 3ef:	2e 68 00 73 74 72    	cs push 0x72747300
 3f5:	75 63                	jne    45a <__abi_tag+0xde>
 3f7:	74 5f                	je     458 <__abi_tag+0xdc>
 3f9:	46                   	rex.RX
 3fa:	49                   	rex.WB
 3fb:	4c                   	rex.WR
 3fc:	45                   	rex.RB
 3fd:	2e 68 00 73 74 64    	cs push 0x64747300
 403:	69 6f 2e 68 00 73 74 	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
 40a:	64 69 6e 74 2d 6c 65 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c2d
 411:	61 
 412:	73 74                	jae    488 <__abi_tag+0x10c>
 414:	2e 68 00 73 74 64    	cs push 0x64747300
 41a:	69 6e 74 2e 68 00 77 	imul   ebp,DWORD PTR [rsi+0x74],0x7700682e
 421:	69 6e 74 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x74],0x682e745f
 428:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 42b:	68 61 72 2e 68       	push   0x682e7261
 430:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 433:	68 61 72 32 2e       	push   0x2e327261
 438:	68 00 73 74 72       	push   0x72747300
 43d:	75 63                	jne    4a2 <__abi_tag+0x126>
 43f:	74 5f                	je     4a0 <__abi_tag+0x124>
 441:	74 6d                	je     4b0 <__abi_tag+0x134>
 443:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 449:	61                   	(bad)
 44a:	6c                   	ins    BYTE PTR es:[rdi],dx
 44b:	65 2e 68 00 65 78 65 	gs cs push 0x65786500
 452:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 455:	69 6f 6e 5f 64 65 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x6665645f
 45c:	73 2e                	jae    48c <__abi_tag+0x110>
 45e:	68 00 74 69 6d       	push   0x6d697400
 463:	65 2e 68 00 68 61 73 	gs cs push 0x73616800
 46a:	68 5f 66 75 6e       	push   0x6e75665f
 46f:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 472:	68 00 75 74 69       	push   0x69747500
 477:	6c                   	ins    BYTE PTR es:[rdi],dx
 478:	73 2e                	jae    4a8 <__abi_tag+0x12c>
 47a:	68 00 6d 65 6d       	push   0x6d656d00
 47f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 480:	72 79                	jb     4fb <__abi_tag+0x17f>
 482:	5f                   	pop    rdi
 483:	72 65                	jb     4ea <__abi_tag+0x16e>
 485:	73 6f                	jae    4f6 <__abi_tag+0x17a>
 487:	75 72                	jne    4fb <__abi_tag+0x17f>
 489:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 48c:	68 00 73 74 72       	push   0x72747300
 491:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
 498:	77 00                	ja     49a <__abi_tag+0x11e>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
       3:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 809 <__abi_tag+0x48d>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 06                	add    BYTE PTR [rsi],al
      11:	e0 11                	loopne 24 <__abi_tag-0x358>
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	04 00                	add    al,0x0
      1b:	09 01                	or     DWORD PTR [rcx],eax
      1d:	55                   	push   rbp
      1e:	04 09                	add    al,0x9
      20:	2e 04 a3             	cs add al,0xa3
      23:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      26:	00 00                	add    BYTE PTR [rax],al
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	00 06                	add    BYTE PTR [rsi],al
      2c:	e0 11                	loopne 3f <__abi_tag-0x33d>
      2e:	00 00                	add    BYTE PTR [rax],al
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	04 00                	add    al,0x0
      36:	14 01                	adc    al,0x1
      38:	54                   	push   rsp
      39:	04 14                	add    al,0x14
      3b:	2e 04 a3             	cs add al,0xa3
      3e:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
      42:	00 00                	add    BYTE PTR [rax],al
      44:	08 f2                	or     dl,dh
      46:	11 00                	adc    DWORD PTR [rax],eax
      48:	00 00                	add    BYTE PTR [rax],al
      4a:	00 00                	add    BYTE PTR [rax],al
      4c:	00 06                	add    BYTE PTR [rsi],al
      4e:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
      51:	25 06 00 00 05       	and    eax,0x5000006
      56:	00 08                	add    BYTE PTR [rax],cl
	...
      64:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
      67:	0c d6                	or     al,0xd6
      69:	0c 01                	or     al,0x1
      6b:	55                   	push   rbp
      6c:	04 d6                	add    al,0xd6
      6e:	0c e4                	or     al,0xe4
      70:	0d 01 56 04 e4       	or     eax,0xe4045601
      75:	0d ed 0d 04 a3       	or     eax,0xa3040ded
      7a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      7d:	04 ed                	add    al,0xed
      7f:	0d fe 0d 01 56       	or     eax,0x56010dfe
      84:	00 02                	add    BYTE PTR [rdx],al
      86:	00 00                	add    BYTE PTR [rax],al
      88:	00 00                	add    BYTE PTR [rax],al
      8a:	01 04 9e             	add    DWORD PTR [rsi+rbx*4],eax
      8d:	0d ae 0d 02 30       	or     eax,0x30020dae
      92:	9f                   	lahf
      93:	04 ae                	add    al,0xae
      95:	0d cd 0d 01 53       	or     eax,0x53010dcd
      9a:	04 cd                	add    al,0xcd
      9c:	0d d6 0d 03 73       	or     eax,0x73030dd6
      a1:	7f 9f                	jg     42 <__abi_tag-0x33a>
      a3:	00 01                	add    BYTE PTR [rcx],al
      a5:	00 04 ae             	add    BYTE PTR [rsi+rbp*4],al
      a8:	0d c1 0d 0a 03       	or     eax,0x30a0dc1
      ad:	87 40 00             	xchg   DWORD PTR [rax+0x0],eax
      b0:	00 00                	add    BYTE PTR [rax],al
      b2:	00 00                	add    BYTE PTR [rax],al
      b4:	00 9f 00 01 00 04    	add    BYTE PTR [rdi+0x4000100],bl
      ba:	c4                   	(bad)
      bb:	0c e0                	or     al,0xe0
      bd:	0c 06                	or     al,0x6
      bf:	a0 76 20 00 00 00 00 	movabs al,ds:0x1000000002076
      c6:	01 00 
      c8:	04 e9                	add    al,0xe9
      ca:	0c ff                	or     al,0xff
      cc:	0c 0a                	or     al,0xa
      ce:	03 65 40             	add    esp,DWORD PTR [rbp+0x40]
      d1:	00 00                	add    BYTE PTR [rax],al
      d3:	00 00                	add    BYTE PTR [rax],al
      d5:	00 00                	add    BYTE PTR [rax],al
      d7:	9f                   	lahf
      d8:	00 02                	add    BYTE PTR [rdx],al
      da:	00 04 ff             	add    BYTE PTR [rdi+rdi*8],al
      dd:	0c 9e                	or     al,0x9e
      df:	0d 0a 03 76 40       	or     eax,0x4076030a
      e4:	00 00                	add    BYTE PTR [rax],al
      e6:	00 00                	add    BYTE PTR [rax],al
      e8:	00 00                	add    BYTE PTR [rax],al
      ea:	9f                   	lahf
      eb:	00 02                	add    BYTE PTR [rdx],al
      ed:	00 04 db             	add    BYTE PTR [rbx+rbx*8],al
      f0:	0d ed 0d 06 a0       	or     eax,0xa0060ded
      f5:	76 20                	jbe    117 <__abi_tag-0x265>
      f7:	00 00                	add    BYTE PTR [rax],al
      f9:	00 00                	add    BYTE PTR [rax],al
      fb:	02 00                	add    al,BYTE PTR [rax]
      fd:	04 ed                	add    al,0xed
      ff:	0d fc 0d 06 a0       	or     eax,0xa0060dfc
     104:	9f                   	lahf
     105:	20 00                	and    BYTE PTR [rax],al
	...
     113:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
     116:	0a f9                	or     bh,cl
     118:	0a 01                	or     al,BYTE PTR [rcx]
     11a:	55                   	push   rbp
     11b:	04 f9                	add    al,0xf9
     11d:	0a 9b 0b 01 53 04    	or     bl,BYTE PTR [rbx+0x453010b]
     123:	9b                   	fwait
     124:	0b a4 0b 04 a3 01 55 	or     esp,DWORD PTR [rbx+rcx*1+0x5501a304]
     12b:	9f                   	lahf
     12c:	04 a4                	add    al,0xa4
     12e:	0b be 0b 01 55 04    	or     edi,DWORD PTR [rsi+0x455010b]
     134:	be 0b c3 0b 04       	mov    esi,0x40bc30b
     139:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
     140:	00 00 
     142:	00 00                	add    BYTE PTR [rax],al
     144:	00 00                	add    BYTE PTR [rax],al
     146:	04 e0                	add    al,0xe0
     148:	0a f3                	or     dh,bl
     14a:	0a 06                	or     al,BYTE PTR [rsi]
     14c:	54                   	push   rsp
     14d:	93                   	xchg   ebx,eax
     14e:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     151:	08 04 f3             	or     BYTE PTR [rbx+rsi*8],al
     154:	0a f6                	or     dh,dh
     156:	0a 06                	or     al,BYTE PTR [rsi]
     158:	54                   	push   rsp
     159:	93                   	xchg   ebx,eax
     15a:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     15d:	08 04 f6             	or     BYTE PTR [rsi+rsi*8],al
     160:	0a 9c 0b 06 5c 93 08 	or     bl,BYTE PTR [rbx+rcx*1+0x8935c06]
     167:	56                   	push   rsi
     168:	93                   	xchg   ebx,eax
     169:	08 04 a4             	or     BYTE PTR [rsp+riz*4],al
     16c:	0b b0 0b 06 54 93    	or     esi,DWORD PTR [rax-0x6cabf9f5]
     172:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     175:	08 00                	or     BYTE PTR [rax],al
     177:	00 00                	add    BYTE PTR [rax],al
     179:	04 ff                	add    al,0xff
     17b:	0a 87 0b 08 70 00    	or     al,BYTE PTR [rdi+0x70080b]
     181:	73 08                	jae    18b <__abi_tag-0x1f1>
     183:	94                   	xchg   esp,eax
     184:	04 1d                	add    al,0x1d
     186:	9f                   	lahf
     187:	00 00                	add    BYTE PTR [rax],al
     189:	00 04 9a             	add    BYTE PTR [rdx+rbx*4],al
     18c:	0b a3 0b 01 50 00    	or     esp,DWORD PTR [rbx+0x50010b]
	...
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	04 90                	add    al,0x90
     1a2:	09 b0 09 01 55 04    	or     DWORD PTR [rax+0x4550109],esi
     1a8:	b0 09                	mov    al,0x9
     1aa:	9b                   	fwait
     1ab:	0a 01                	or     al,BYTE PTR [rcx]
     1ad:	53                   	push   rbx
     1ae:	04 9b                	add    al,0x9b
     1b0:	0a a1 0a 04 a3 01    	or     ah,BYTE PTR [rcx+0x1a3040a]
     1b6:	55                   	push   rbp
     1b7:	9f                   	lahf
     1b8:	04 a1                	add    al,0xa1
     1ba:	0a b1 0a 01 53 04    	or     dh,BYTE PTR [rcx+0x453010a]
     1c0:	b1 0a                	mov    cl,0xa
     1c2:	ba 0a 04 a3 01       	mov    edx,0x1a3040a
     1c7:	55                   	push   rbp
     1c8:	9f                   	lahf
     1c9:	04 ba                	add    al,0xba
     1cb:	0a d4                	or     dl,ah
     1cd:	0a 01                	or     al,BYTE PTR [rcx]
     1cf:	55                   	push   rbp
     1d0:	04 d4                	add    al,0xd4
     1d2:	0a d9                	or     bl,cl
     1d4:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
     1d7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
     1e2:	00 00                	add    BYTE PTR [rax],al
     1e4:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     1e7:	09 ad 09 06 54 93    	or     DWORD PTR [rbp-0x6cabf9f7],ebp
     1ed:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     1f0:	08 04 ad 09 b3 09 06 	or     BYTE PTR [rbp*4+0x609b309],al
     1f7:	54                   	push   rsp
     1f8:	93                   	xchg   ebx,eax
     1f9:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     1fc:	08 04 b3             	or     BYTE PTR [rbx+rsi*4],al
     1ff:	09 e5                	or     ebp,esp
     201:	09 06                	or     DWORD PTR [rsi],eax
     203:	5d                   	pop    rbp
     204:	93                   	xchg   ebx,eax
     205:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     208:	08 04 e5 09 e8 09 06 	or     BYTE PTR [riz*8+0x609e809],al
     20f:	5d                   	pop    rbp
     210:	93                   	xchg   ebx,eax
     211:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     214:	08 04 ba             	or     BYTE PTR [rdx+rdi*4],al
     217:	0a c6                	or     al,dh
     219:	0a 06                	or     al,BYTE PTR [rsi]
     21b:	54                   	push   rsp
     21c:	93                   	xchg   ebx,eax
     21d:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     220:	08 00                	or     BYTE PTR [rax],al
     222:	00 00                	add    BYTE PTR [rax],al
     224:	00 00                	add    BYTE PTR [rax],al
     226:	00 00                	add    BYTE PTR [rax],al
     228:	04 ce                	add    al,0xce
     22a:	09 d1                	or     ecx,edx
     22c:	09 01                	or     DWORD PTR [rcx],eax
     22e:	50                   	push   rax
     22f:	04 d1                	add    al,0xd1
     231:	09 9e 0a 01 5c 04    	or     DWORD PTR [rsi+0x45c010a],ebx
     237:	a1 0a ac 0a 01 5c 00 	movabs eax,ds:0x5c010aac0a
     23e:	00 00 
	...
     24c:	04 e0                	add    al,0xe0
     24e:	03 9b 04 01 55 04    	add    ebx,DWORD PTR [rbx+0x4550104]
     254:	9b                   	fwait
     255:	04 93                	add    al,0x93
     257:	05 01 5c 04 93       	add    eax,0x93045c01
     25c:	05 9b 05 04 a3       	add    eax,0xa304059b
     261:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     264:	04 9b                	add    al,0x9b
     266:	05 e3 08 01 5c       	add    eax,0x5c0108e3
     26b:	04 e3                	add    al,0xe3
     26d:	08 fd                	or     ch,bh
     26f:	08 01                	or     BYTE PTR [rcx],al
     271:	55                   	push   rbp
     272:	04 fd                	add    al,0xfd
     274:	08 82 09 04 a3 01    	or     BYTE PTR [rdx+0x1a30409],al
     27a:	55                   	push   rbp
     27b:	9f                   	lahf
     27c:	04 82                	add    al,0x82
     27e:	09 87 09 01 5c 00    	or     DWORD PTR [rdi+0x5c0109],eax
	...
     290:	04 e0                	add    al,0xe0
     292:	03 98 04 06 54 93    	add    ebx,DWORD PTR [rax-0x6cabf9fc]
     298:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     29b:	08 04 98             	or     BYTE PTR [rax+rbx*4],al
     29e:	04 9e                	add    al,0x9e
     2a0:	04 06                	add    al,0x6
     2a2:	54                   	push   rsp
     2a3:	93                   	xchg   ebx,eax
     2a4:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     2a7:	08 04 9e             	or     BYTE PTR [rsi+rbx*4],al
     2aa:	04 91                	add    al,0x91
     2ac:	05 06 5d 93 08       	add    eax,0x8935d06
     2b1:	53                   	push   rbx
     2b2:	93                   	xchg   ebx,eax
     2b3:	08 04 9b             	or     BYTE PTR [rbx+rbx*4],al
     2b6:	05 eb 05 06 5d       	add    eax,0x5d0605eb
     2bb:	93                   	xchg   ebx,eax
     2bc:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     2bf:	08 04 e3             	or     BYTE PTR [rbx+riz*8],al
     2c2:	08 ef                	or     bh,ch
     2c4:	08 06                	or     BYTE PTR [rsi],al
     2c6:	54                   	push   rsp
     2c7:	93                   	xchg   ebx,eax
     2c8:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2cb:	08 04 82             	or     BYTE PTR [rdx+rax*4],al
     2ce:	09 87 09 06 5d 93    	or     DWORD PTR [rdi-0x6ca2f9f7],eax
     2d4:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     2d7:	08 00                	or     BYTE PTR [rax],al
	...
     2e5:	04 ba                	add    al,0xba
     2e7:	04 be                	add    al,0xbe
     2e9:	04 01                	add    al,0x1
     2eb:	51                   	push   rcx
     2ec:	04 be                	add    al,0xbe
     2ee:	04 90                	add    al,0x90
     2f0:	05 02 77 14 04       	add    eax,0x4147702
     2f5:	90                   	nop
     2f6:	05 9a 05 08 76       	add    eax,0x7608059a
     2fb:	58                   	pop    rax
     2fc:	09 e0                	or     eax,esp
     2fe:	1a 08                	sbb    cl,BYTE PTR [rax]
     300:	4c 1c 04             	rex.WR sbb al,0x4
     303:	9a                   	(bad)
     304:	05 9b 05 08 77       	add    eax,0x7708059b
     309:	50                   	push   rax
     30a:	09 e0                	or     eax,esp
     30c:	1a 08                	sbb    cl,BYTE PTR [rax]
     30e:	4c 1c 04             	rex.WR sbb al,0x4
     311:	9b                   	fwait
     312:	05 e3 08 02 77       	add    eax,0x770208e3
     317:	14 04                	adc    al,0x4
     319:	82                   	(bad)
     31a:	09 87 09 02 77 14    	or     DWORD PTR [rdi+0x14770209],eax
     320:	00 00                	add    BYTE PTR [rax],al
     322:	00 00                	add    BYTE PTR [rax],al
     324:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     327:	04 f4                	add    al,0xf4
     329:	04 01                	add    al,0x1
     32b:	50                   	push   rax
     32c:	04 9b                	add    al,0x9b
     32e:	05 a5 05 01 50       	add    eax,0x500105a5
     333:	00 01                	add    BYTE PTR [rcx],al
     335:	01 04 e7             	add    DWORD PTR [rdi+riz*8],eax
     338:	05 be 08 01 5c       	add    eax,0x5c0108be
     33d:	00 00                	add    BYTE PTR [rax],al
     33f:	00 00                	add    BYTE PTR [rax],al
     341:	01 04 f8             	add    DWORD PTR [rax+rdi*8],eax
     344:	05 9f 06 01 5d       	add    eax,0x5d01069f
     349:	04 9f                	add    al,0x9f
     34b:	06                   	(bad)
     34c:	e4 06                	in     al,0x6
     34e:	01 53 00             	add    DWORD PTR [rbx+0x0],edx
     351:	00 00                	add    BYTE PTR [rax],al
     353:	00 01                	add    BYTE PTR [rcx],al
     355:	04 f8                	add    al,0xf8
     357:	05 ff 05 01 50       	add    eax,0x500105ff
     35c:	04 ff                	add    al,0xff
     35e:	05 e4 06 02 77       	add    eax,0x770206e4
     363:	08 00                	or     BYTE PTR [rax],al
     365:	01 00                	add    DWORD PTR [rax],eax
     367:	04 91                	add    al,0x91
     369:	06                   	(bad)
     36a:	a9 06 02 30 9f       	test   eax,0x9f300206
     36f:	00 01                	add    BYTE PTR [rcx],al
     371:	00 00                	add    BYTE PTR [rax],al
     373:	01 01                	add    DWORD PTR [rcx],eax
     375:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
     378:	06                   	(bad)
     379:	8b 07                	mov    eax,DWORD PTR [rdi]
     37b:	02 30                	add    dh,BYTE PTR [rax]
     37d:	9f                   	lahf
     37e:	04 8b                	add    al,0x8b
     380:	07                   	(bad)
     381:	fb                   	sti
     382:	07                   	(bad)
     383:	02 77 18             	add    dh,BYTE PTR [rdi+0x18]
     386:	04 fb                	add    al,0xfb
     388:	07                   	(bad)
     389:	81 08 07 77 18 94    	or     DWORD PTR [rax],0x94187707
     38f:	04 23                	add    al,0x23
     391:	01 9f 00 00 00 00    	add    DWORD PTR [rdi+0x0],ebx
     397:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
     39a:	07                   	(bad)
     39b:	b4 07                	mov    ah,0x7
     39d:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     3a0:	f2 07                	repnz (bad)
     3a2:	95                   	xchg   ebp,eax
     3a3:	08 01                	or     BYTE PTR [rcx],al
     3a5:	52                   	push   rdx
     3a6:	00 00                	add    BYTE PTR [rax],al
     3a8:	00 00                	add    BYTE PTR [rax],al
     3aa:	00 00                	add    BYTE PTR [rax],al
     3ac:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
     3af:	07                   	(bad)
     3b0:	c1 07 06             	rol    DWORD PTR [rdi],0x6
     3b3:	70 10                	jo     3c5 <__abi_tag+0x49>
     3b5:	93                   	xchg   ebx,eax
     3b6:	08 93 08 04 c1 07    	or     BYTE PTR [rbx+0x7c10408],dl
     3bc:	c9                   	leave
     3bd:	07                   	(bad)
     3be:	0c 70                	or     al,0x70
     3c0:	10 93 08 70 18 93    	adc    BYTE PTR [rbx-0x6ce78ff8],dl
     3c6:	04 70                	add    al,0x70
     3c8:	1c 93                	sbb    al,0x93
     3ca:	04 04                	add    al,0x4
     3cc:	c9                   	leave
     3cd:	07                   	(bad)
     3ce:	e2 07                	loop   3d7 <__abi_tag+0x5b>
     3d0:	05 54 93 08 93       	add    eax,0x93089354
     3d5:	08 00                	or     BYTE PTR [rax],al
     3d7:	04 00                	add    al,0x0
     3d9:	00 00                	add    BYTE PTR [rax],al
     3db:	04 ce                	add    al,0xce
     3dd:	07                   	(bad)
     3de:	d0 07                	rol    BYTE PTR [rdi],1
     3e0:	06                   	(bad)
     3e1:	70 00                	jo     3e3 <__abi_tag+0x67>
     3e3:	73 00                	jae    3e5 <__abi_tag+0x69>
     3e5:	1d 9f 04 d0 07       	sbb    eax,0x7d0049f
     3ea:	e2 07                	loop   3f3 <__abi_tag+0x77>
     3ec:	06                   	(bad)
     3ed:	81 00 73 00 1d 9f    	add    DWORD PTR [rax],0x9f1d0073
     3f3:	00 00                	add    BYTE PTR [rax],al
     3f5:	00 00                	add    BYTE PTR [rax],al
     3f7:	00 00                	add    BYTE PTR [rax],al
     3f9:	01 04 8b             	add    DWORD PTR [rbx+rcx*4],eax
     3fc:	08 95 08 02 30 9f    	or     BYTE PTR [rbp-0x60cffdf8],dl
     402:	04 9c                	add    al,0x9c
     404:	08 a5 08 01 5d 04    	or     BYTE PTR [rbp+0x45d0108],ah
     40a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     40b:	08 ae 08 03 7d 7f    	or     BYTE PTR [rsi+0x7f7d0308],ch
     411:	9f                   	lahf
	...
     41e:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     421:	2f                   	(bad)
     422:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     425:	2f                   	(bad)
     426:	6d                   	ins    DWORD PTR es:[rdi],dx
     427:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
     42a:	6d                   	ins    DWORD PTR es:[rdi],dx
     42b:	78 01                	js     42e <__abi_tag+0xb2>
     42d:	50                   	push   rax
     42e:	04 78                	add    al,0x78
     430:	fb                   	sti
     431:	01 01                	add    DWORD PTR [rcx],eax
     433:	56                   	push   rsi
     434:	04 84                	add    al,0x84
     436:	02 9e 02 01 55 04    	add    bl,BYTE PTR [rsi+0x4550102]
     43c:	9e                   	sahf
     43d:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     443:	55                   	push   rbp
     444:	9f                   	lahf
	...
     44d:	00 00                	add    BYTE PTR [rax],al
     44f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     452:	29 01                	sub    DWORD PTR [rcx],eax
     454:	54                   	push   rsp
     455:	04 29                	add    al,0x29
     457:	5f                   	pop    rdi
     458:	01 5c 04 5f          	add    DWORD PTR [rsp+rax*1+0x5f],ebx
     45c:	84 02                	test   BYTE PTR [rdx],al
     45e:	04 a3                	add    al,0xa3
     460:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
     464:	84 02                	test   BYTE PTR [rdx],al
     466:	97                   	xchg   edi,eax
     467:	02 01                	add    al,BYTE PTR [rcx]
     469:	54                   	push   rsp
     46a:	04 97                	add    al,0x97
     46c:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     472:	54                   	push   rsp
     473:	9f                   	lahf
     474:	00 00                	add    BYTE PTR [rax],al
     476:	00 00                	add    BYTE PTR [rax],al
     478:	00 00                	add    BYTE PTR [rax],al
     47a:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
     47d:	46 01 50 04          	rex.RX add DWORD PTR [rax+0x4],r10d
     481:	46 ff 01             	rex.RX inc DWORD PTR [rcx]
     484:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
     487:	ff 01                	inc    DWORD PTR [rcx]
     489:	84 02                	test   BYTE PTR [rdx],al
     48b:	01 50 00             	add    DWORD PTR [rax+0x0],edx
     48e:	00 00                	add    BYTE PTR [rax],al
     490:	00 00                	add    BYTE PTR [rax],al
     492:	04 4a                	add    al,0x4a
     494:	5f                   	pop    rdi
     495:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     498:	5f                   	pop    rdi
     499:	81 02 01 5e 00 01    	add    DWORD PTR [rdx],0x1005e01
     49f:	00 01                	add    BYTE PTR [rcx],al
     4a1:	00 00                	add    BYTE PTR [rax],al
     4a3:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     4a6:	5f                   	pop    rdi
     4a7:	02 30                	add    dh,BYTE PTR [rax]
     4a9:	9f                   	lahf
     4aa:	04 5f                	add    al,0x5f
     4ac:	78 01                	js     4af <__abi_tag+0x133>
     4ae:	56                   	push   rsi
     4af:	04 78                	add    al,0x78
     4b1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     4b2:	01 01                	add    DWORD PTR [rcx],eax
     4b4:	54                   	push   rsp
     4b5:	00 02                	add    BYTE PTR [rdx],al
     4b7:	00 00                	add    BYTE PTR [rax],al
     4b9:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     4bc:	5f                   	pop    rdi
     4bd:	02 30                	add    dh,BYTE PTR [rax]
     4bf:	9f                   	lahf
     4c0:	04 91                	add    al,0x91
     4c2:	01 f2                	add    edx,esi
     4c4:	01 01                	add    DWORD PTR [rcx],eax
     4c6:	5c                   	pop    rsp
     4c7:	00 03                	add    BYTE PTR [rbx],al
     4c9:	00 00                	add    BYTE PTR [rax],al
     4cb:	02 02                	add    al,BYTE PTR [rdx]
     4cd:	00 00                	add    BYTE PTR [rax],al
     4cf:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     4d2:	5f                   	pop    rdi
     4d3:	02 30                	add    dh,BYTE PTR [rax]
     4d5:	9f                   	lahf
     4d6:	04 5f                	add    al,0x5f
     4d8:	e3 01                	jrcxz  4db <__abi_tag+0x15f>
     4da:	05 7f 00 34 25       	add    eax,0x2534007f
     4df:	9f                   	lahf
     4e0:	04 e3                	add    al,0xe3
     4e2:	01 e7                	add    edi,esp
     4e4:	01 07                	add    DWORD PTR [rdi],eax
     4e6:	7f 00                	jg     4e8 <__abi_tag+0x16c>
     4e8:	34 25                	xor    al,0x25
     4ea:	23 01                	and    eax,DWORD PTR [rcx]
     4ec:	9f                   	lahf
     4ed:	04 e7                	add    al,0xe7
     4ef:	01 f2                	add    edx,esi
     4f1:	01 07                	add    DWORD PTR [rdi],eax
     4f3:	7f 70                	jg     565 <__abi_tag+0x1e9>
     4f5:	34 25                	xor    al,0x25
     4f7:	23 01                	and    eax,DWORD PTR [rcx]
     4f9:	9f                   	lahf
     4fa:	00 02                	add    BYTE PTR [rdx],al
     4fc:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     4ff:	6d                   	ins    DWORD PTR es:[rdi],dx
     500:	02 3a                	add    bh,BYTE PTR [rdx]
     502:	9f                   	lahf
     503:	00 02                	add    BYTE PTR [rdx],al
     505:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     508:	6d                   	ins    DWORD PTR es:[rdi],dx
     509:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 00                	add    BYTE PTR [rax],al
     510:	04 9b                	add    al,0x9b
     512:	01 a7 01 01 51 04    	add    DWORD PTR [rdi+0x4510101],esp
     518:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     519:	01 a8 01 03 91 a8    	add    DWORD PTR [rax-0x576efcff],ebp
     51f:	7f 00                	jg     521 <__abi_tag+0x1a5>
     521:	01 00                	add    DWORD PTR [rax],eax
     523:	04 91                	add    al,0x91
     525:	01 a7 01 01 54 00    	add    DWORD PTR [rdi+0x540101],esp
     52b:	01 00                	add    DWORD PTR [rax],eax
     52d:	00 00                	add    BYTE PTR [rax],al
     52f:	04 91                	add    al,0x91
     531:	01 a7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esp
     537:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     538:	01 a8 01 03 91 a0    	add    DWORD PTR [rax-0x5f6efcff],ebp
     53e:	7f 00                	jg     540 <__abi_tag+0x1c4>
     540:	00 00                	add    BYTE PTR [rax],al
     542:	00 00                	add    BYTE PTR [rax],al
     544:	00 00                	add    BYTE PTR [rax],al
     546:	04 b6                	add    al,0xb6
     548:	01 c8                	add    eax,ecx
     54a:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     54d:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     551:	0c ff                	or     al,0xff
     553:	ff                   	(bad)
     554:	ff                   	(bad)
     555:	ff 1a                	call   FWORD PTR [rdx]
     557:	9f                   	lahf
     558:	04 c8                	add    al,0xc8
     55a:	01 d4                	add    esp,edx
     55c:	01 01                	add    DWORD PTR [rcx],eax
     55e:	51                   	push   rcx
     55f:	04 d4                	add    al,0xd4
     561:	01 d5                	add    ebp,edx
     563:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     566:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     56a:	0c ff                	or     al,0xff
     56c:	ff                   	(bad)
     56d:	ff                   	(bad)
     56e:	ff 1a                	call   FWORD PTR [rdx]
     570:	9f                   	lahf
     571:	00 00                	add    BYTE PTR [rax],al
     573:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     576:	01 d5                	add    ebp,edx
     578:	01 02                	add    DWORD PTR [rdx],eax
     57a:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     580:	00 00                	add    BYTE PTR [rax],al
     582:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     585:	01 d0                	add    eax,edx
     587:	01 06                	add    DWORD PTR [rsi],eax
     589:	7e 00                	jle    58b <__abi_tag+0x20f>
     58b:	75 00                	jne    58d <__abi_tag+0x211>
     58d:	22 9f 04 d0 01 d4    	and    bl,BYTE PTR [rdi-0x2bfe2ffc]
     593:	01 01                	add    DWORD PTR [rcx],eax
     595:	55                   	push   rbp
     596:	04 d4                	add    al,0xd4
     598:	01 d5                	add    ebp,edx
     59a:	01 0d 7e 00 91 a8    	add    DWORD PTR [rip+0xffffffffa891007e],ecx        # ffffffffa891061e <_end+0xffffffffa890a606>
     5a0:	7f 06                	jg     5a8 <__abi_tag+0x22c>
     5a2:	22 91 b0 7f 06 22    	and    dl,BYTE PTR [rcx+0x22067fb0]
     5a8:	9f                   	lahf
	...
     5b1:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     5b4:	02 e6                	add    ah,dh
     5b6:	02 01                	add    al,BYTE PTR [rcx]
     5b8:	54                   	push   rsp
     5b9:	04 e6                	add    al,0xe6
     5bb:	02 f4                	add    dh,ah
     5bd:	02 02                	add    al,BYTE PTR [rdx]
     5bf:	75 10                	jne    5d1 <__abi_tag+0x255>
     5c1:	04 f4                	add    al,0xf4
     5c3:	02 f8                	add    bh,al
     5c5:	02 02                	add    al,BYTE PTR [rdx]
     5c7:	7c 10                	jl     5d9 <__abi_tag+0x25d>
     5c9:	04 f8                	add    al,0xf8
     5cb:	02 d9                	add    bl,cl
     5cd:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     5d0:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
     5d4:	00 00                	add    BYTE PTR [rax],al
     5d6:	00 00                	add    BYTE PTR [rax],al
     5d8:	00 00                	add    BYTE PTR [rax],al
     5da:	04 b0                	add    al,0xb0
     5dc:	02 f8                	add    bh,al
     5de:	02 01                	add    al,BYTE PTR [rcx]
     5e0:	51                   	push   rcx
     5e1:	04 f8                	add    al,0xf8
     5e3:	02 90 03 01 5e 04    	add    dl,BYTE PTR [rax+0x45e0103]
     5e9:	90                   	nop
     5ea:	03 d9                	add    ebx,ecx
     5ec:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     5ef:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
	...
     5fa:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     5fd:	02 f4                	add    dh,ah
     5ff:	02 02                	add    al,BYTE PTR [rdx]
     601:	75 00                	jne    603 <__abi_tag+0x287>
     603:	04 f4                	add    al,0xf4
     605:	02 ce                	add    cl,dh
     607:	03 02                	add    eax,DWORD PTR [rdx]
     609:	7c 00                	jl     60b <__abi_tag+0x28f>
     60b:	04 ce                	add    al,0xce
     60d:	03 d4                	add    edx,esp
     60f:	03 02                	add    eax,DWORD PTR [rdx]
     611:	70 00                	jo     613 <__abi_tag+0x297>
     613:	04 d4                	add    al,0xd4
     615:	03 d9                	add    ebx,ecx
     617:	03 02                	add    eax,DWORD PTR [rdx]
     619:	7c 00                	jl     61b <__abi_tag+0x29f>
     61b:	00 01                	add    BYTE PTR [rcx],al
     61d:	00 04 fd 02 90 03 02 	add    BYTE PTR [rdi*8+0x2039002],al
     624:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     62a:	00 00                	add    BYTE PTR [rax],al
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     633:	0b eb                	or     ebp,ebx
     635:	0b 01                	or     eax,DWORD PTR [rcx]
     637:	55                   	push   rbp
     638:	04 eb                	add    al,0xeb
     63a:	0b 94 0c 01 56 04 94 	or     edx,DWORD PTR [rsp+rcx*1-0x6bfba9ff]
     641:	0c 99                	or     al,0x99
     643:	0c 04                	or     al,0x4
     645:	a3 01 55 9f 04 99 0c 	movabs ds:0xcb30c99049f5501,eax
     64c:	b3 0c 
     64e:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     651:	b3 0c                	mov    bl,0xc
     653:	b8 0c 04 a3 01       	mov    eax,0x1a3040c
     658:	55                   	push   rbp
     659:	9f                   	lahf
     65a:	00 00                	add    BYTE PTR [rax],al
     65c:	00 00                	add    BYTE PTR [rax],al
     65e:	00 00                	add    BYTE PTR [rax],al
     660:	01 04 e5 0b eb 0b 02 	add    DWORD PTR [riz*8+0x20beb0b],eax
     667:	30 9f 04 eb 0b fc    	xor    BYTE PTR [rdi-0x3f414fc],bl
     66d:	0b 01                	or     eax,DWORD PTR [rcx]
     66f:	53                   	push   rbx
     670:	04 fc                	add    al,0xfc
     672:	0b 85 0c 03 73 7f    	or     eax,DWORD PTR [rbp+0x7f73030c]
     678:	9f                   	lahf
     679:	00 f0                	add    al,dh
     67b:	0c 00                	or     al,0x0
     67d:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # e83 <__abi_tag+0xb07>
     683:	00 00                	add    BYTE PTR [rax],al
     685:	00 00                	add    BYTE PTR [rax],al
     687:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     68a:	08 d8                	or     al,bl
     68c:	08 06                	or     BYTE PTR [rsi],al
     68e:	55                   	push   rbp
     68f:	93                   	xchg   ebx,eax
     690:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     694:	00 01                	add    BYTE PTR [rcx],al
     696:	00 00                	add    BYTE PTR [rax],al
     698:	00 00                	add    BYTE PTR [rax],al
     69a:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
     69d:	08 e3                	or     bl,ah
     69f:	08 02                	or     BYTE PTR [rdx],al
     6a1:	30 9f 04 e3 08 ee    	xor    BYTE PTR [rdi-0x11f71cfc],bl
     6a7:	08 01                	or     BYTE PTR [rcx],al
     6a9:	50                   	push   rax
     6aa:	04 f0                	add    al,0xf0
     6ac:	08 99 09 01 50 00    	or     BYTE PTR [rcx+0x500109],bl
     6b2:	02 00                	add    al,BYTE PTR [rax]
     6b4:	01 00                	add    DWORD PTR [rax],eax
	...
     6be:	04 da                	add    al,0xda
     6c0:	08 e3                	or     bl,ah
     6c2:	08 02                	or     BYTE PTR [rdx],al
     6c4:	30 9f 04 f0 08 f8    	xor    BYTE PTR [rdi-0x7f70ffc],bl
     6ca:	08 08                	or     BYTE PTR [rax],cl
     6cc:	70 00                	jo     6ce <__abi_tag+0x352>
     6ce:	40                   	rex
     6cf:	48 24 1f             	rex.W and al,0x1f
     6d2:	1a 9f 04 f8 08 82    	sbb    bl,BYTE PTR [rdi-0x7df707fc]
     6d8:	09 01                	or     DWORD PTR [rcx],eax
     6da:	51                   	push   rcx
     6db:	04 82                	add    al,0x82
     6dd:	09 85 09 01 52 04    	or     DWORD PTR [rbp+0x4520109],eax
     6e3:	85 09                	test   DWORD PTR [rcx],ecx
     6e5:	8f 09 04 71          	(bad)
     6e9:	00 20                	add    BYTE PTR [rax],ah
     6eb:	9f                   	lahf
     6ec:	04 8f                	add    al,0x8f
     6ee:	09 99 09 01 51 00    	or     DWORD PTR [rcx+0x510109],ebx
     6f4:	03 00                	add    eax,DWORD PTR [rax]
     6f6:	04 da                	add    al,0xda
     6f8:	08 e3                	or     bl,ah
     6fa:	08 02                	or     BYTE PTR [rdx],al
     6fc:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     702:	d0 07                	rol    BYTE PTR [rdi],1
     704:	d4                   	(bad)
     705:	07                   	(bad)
     706:	06                   	(bad)
     707:	55                   	push   rbp
     708:	93                   	xchg   ebx,eax
     709:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     70d:	00 01                	add    BYTE PTR [rcx],al
     70f:	00 00                	add    BYTE PTR [rax],al
     711:	00 00                	add    BYTE PTR [rax],al
     713:	00 00                	add    BYTE PTR [rax],al
     715:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     718:	07                   	(bad)
     719:	ea                   	(bad)
     71a:	07                   	(bad)
     71b:	02 31                	add    dh,BYTE PTR [rcx]
     71d:	9f                   	lahf
     71e:	04 ea                	add    al,0xea
     720:	07                   	(bad)
     721:	f9                   	stc
     722:	07                   	(bad)
     723:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     726:	92                   	xchg   edx,eax
     727:	08 b6 08 01 51 04    	or     BYTE PTR [rsi+0x4510108],dh
     72d:	b6 08                	mov    dh,0x8
     72f:	c6                   	(bad)
     730:	08 02                	or     BYTE PTR [rdx],al
     732:	31 9f 00 02 00 00    	xor    DWORD PTR [rdi+0x200],ebx
     738:	00 00                	add    BYTE PTR [rax],al
     73a:	00 00                	add    BYTE PTR [rax],al
     73c:	00 00                	add    BYTE PTR [rax],al
     73e:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     741:	07                   	(bad)
     742:	ea                   	(bad)
     743:	07                   	(bad)
     744:	02 30                	add    dh,BYTE PTR [rax]
     746:	9f                   	lahf
     747:	04 ea                	add    al,0xea
     749:	07                   	(bad)
     74a:	90                   	nop
     74b:	08 01                	or     BYTE PTR [rcx],al
     74d:	50                   	push   rax
     74e:	04 ab                	add    al,0xab
     750:	08 b3 08 01 50 04    	or     BYTE PTR [rbx+0x4500108],dh
     756:	b3 08                	mov    bl,0x8
     758:	b6 08                	mov    dh,0x8
     75a:	06                   	(bad)
     75b:	72 00                	jb     75d <__abi_tag+0x3e1>
     75d:	79 00                	jns    75f <__abi_tag+0x3e3>
     75f:	1c 9f                	sbb    al,0x9f
     761:	04 b6                	add    al,0xb6
     763:	08 c6                	or     dh,al
     765:	08 02                	or     BYTE PTR [rdx],al
     767:	30 9f 00 04 00 00    	xor    BYTE PTR [rdi+0x400],bl
     76d:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     770:	07                   	(bad)
     771:	ea                   	(bad)
     772:	07                   	(bad)
     773:	02 30                	add    dh,BYTE PTR [rax]
     775:	9f                   	lahf
     776:	04 b6                	add    al,0xb6
     778:	08 c6                	or     dh,al
     77a:	08 02                	or     BYTE PTR [rdx],al
     77c:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     782:	e0 04                	loopne 788 <__abi_tag+0x40c>
     784:	e8 04 06 55 93       	call   ffffffff93550d8d <_end+0xffffffff9354ad75>
     789:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     78d:	00 01                	add    BYTE PTR [rcx],al
     78f:	00 00                	add    BYTE PTR [rax],al
     791:	02 02                	add    al,BYTE PTR [rdx]
     793:	00 00                	add    BYTE PTR [rax],al
     795:	00 02                	add    BYTE PTR [rdx],al
     797:	00 00                	add    BYTE PTR [rax],al
     799:	00 02                	add    BYTE PTR [rdx],al
     79b:	00 00                	add    BYTE PTR [rax],al
     79d:	00 00                	add    BYTE PTR [rax],al
     79f:	00 00                	add    BYTE PTR [rax],al
     7a1:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     7a4:	04 9f                	add    al,0x9f
     7a6:	05 02 30 9f 04       	add    eax,0x49f3002
     7ab:	e1 05                	loope  7b2 <__abi_tag+0x436>
     7ad:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     7b0:	50                   	push   rax
     7b1:	04 8a                	add    al,0x8a
     7b3:	07                   	(bad)
     7b4:	8c 07                	mov    WORD PTR [rdi],es
     7b6:	06                   	(bad)
     7b7:	70 00                	jo     7b9 <__abi_tag+0x43d>
     7b9:	72 00                	jb     7bb <__abi_tag+0x43f>
     7bb:	22 9f 04 8c 07 8d    	and    bl,BYTE PTR [rdi-0x72f873fc]
     7c1:	07                   	(bad)
     7c2:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     7c5:	93                   	xchg   ebx,eax
     7c6:	07                   	(bad)
     7c7:	95                   	xchg   ebp,eax
     7c8:	07                   	(bad)
     7c9:	06                   	(bad)
     7ca:	70 00                	jo     7cc <__abi_tag+0x450>
     7cc:	72 00                	jb     7ce <__abi_tag+0x452>
     7ce:	22 9f 04 95 07 96    	and    bl,BYTE PTR [rdi-0x69f86afc]
     7d4:	07                   	(bad)
     7d5:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     7d8:	a3 07 a5 07 06 70 00 	movabs ds:0x7200700607a507,eax
     7df:	72 00 
     7e1:	22 9f 04 a5 07 a6    	and    bl,BYTE PTR [rdi-0x59f85afc]
     7e7:	07                   	(bad)
     7e8:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     7eb:	b4 07                	mov    ah,0x7
     7ed:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     7f0:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     7f6:	07                   	(bad)
     7f7:	02 30                	add    dh,BYTE PTR [rax]
     7f9:	9f                   	lahf
     7fa:	00 02                	add    BYTE PTR [rdx],al
     7fc:	00 01                	add    BYTE PTR [rcx],al
     7fe:	00 00                	add    BYTE PTR [rax],al
     800:	01 01                	add    DWORD PTR [rcx],eax
     802:	00 00                	add    BYTE PTR [rax],al
     804:	01 01                	add    DWORD PTR [rcx],eax
     806:	00 00                	add    BYTE PTR [rax],al
     808:	01 01                	add    DWORD PTR [rcx],eax
     80a:	00 00                	add    BYTE PTR [rax],al
     80c:	01 01                	add    DWORD PTR [rcx],eax
     80e:	01 01                	add    DWORD PTR [rcx],eax
     810:	02 00                	add    al,BYTE PTR [rax]
     812:	00 00                	add    BYTE PTR [rax],al
     814:	00 00                	add    BYTE PTR [rax],al
     816:	02 02                	add    al,BYTE PTR [rdx]
     818:	01 01                	add    DWORD PTR [rcx],eax
     81a:	01 01                	add    DWORD PTR [rcx],eax
	...
     824:	00 00                	add    BYTE PTR [rax],al
     826:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     829:	04 9f                	add    al,0x9f
     82b:	05 02 30 9f 04       	add    eax,0x49f3002
     830:	f1                   	int1
     831:	05 fc 05 0b 7a       	add    eax,0x7a0b05fc
     836:	00 08                	add    BYTE PTR [rax],cl
     838:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     83b:	20 26                	and    BYTE PTR [rsi],ah
     83d:	75 00                	jne    83f <__abi_tag+0x4c3>
     83f:	22 04 fc             	and    al,BYTE PTR [rsp+rdi*8]
     842:	05 81 06 0b 72       	add    eax,0x720b0681
     847:	04 08                	add    al,0x8
     849:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     84c:	20 26                	and    BYTE PTR [rsi],ah
     84e:	75 00                	jne    850 <__abi_tag+0x4d4>
     850:	22 04 81             	and    al,BYTE PTR [rcx+rax*4]
     853:	06                   	(bad)
     854:	8c 06                	mov    WORD PTR [rsi],es
     856:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     859:	08 20                	or     BYTE PTR [rax],ah
     85b:	24 08                	and    al,0x8
     85d:	20 26                	and    BYTE PTR [rsi],ah
     85f:	75 00                	jne    861 <__abi_tag+0x4e5>
     861:	22 04 8c             	and    al,BYTE PTR [rsp+rcx*4]
     864:	06                   	(bad)
     865:	91                   	xchg   ecx,eax
     866:	06                   	(bad)
     867:	0b 72 08             	or     esi,DWORD PTR [rdx+0x8]
     86a:	08 20                	or     BYTE PTR [rax],ah
     86c:	24 08                	and    al,0x8
     86e:	20 26                	and    BYTE PTR [rsi],ah
     870:	75 00                	jne    872 <__abi_tag+0x4f6>
     872:	22 04 91             	and    al,BYTE PTR [rcx+rdx*4]
     875:	06                   	(bad)
     876:	9c                   	pushf
     877:	06                   	(bad)
     878:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     87b:	08 20                	or     BYTE PTR [rax],ah
     87d:	24 08                	and    al,0x8
     87f:	20 26                	and    BYTE PTR [rsi],ah
     881:	75 00                	jne    883 <__abi_tag+0x507>
     883:	22 04 9c             	and    al,BYTE PTR [rsp+rbx*4]
     886:	06                   	(bad)
     887:	a1 06 0b 72 0c 08 20 	movabs eax,ds:0x82420080c720b06
     88e:	24 08 
     890:	20 26                	and    BYTE PTR [rsi],ah
     892:	75 00                	jne    894 <__abi_tag+0x518>
     894:	22 04 a1             	and    al,BYTE PTR [rcx+riz*4]
     897:	06                   	(bad)
     898:	ac                   	lods   al,BYTE PTR ds:[rsi]
     899:	06                   	(bad)
     89a:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     89d:	08 20                	or     BYTE PTR [rax],ah
     89f:	24 08                	and    al,0x8
     8a1:	20 26                	and    BYTE PTR [rsi],ah
     8a3:	75 00                	jne    8a5 <__abi_tag+0x529>
     8a5:	22 04 ac             	and    al,BYTE PTR [rsp+rbp*4]
     8a8:	06                   	(bad)
     8a9:	b1 06                	mov    cl,0x6
     8ab:	0b 72 10             	or     esi,DWORD PTR [rdx+0x10]
     8ae:	08 20                	or     BYTE PTR [rax],ah
     8b0:	24 08                	and    al,0x8
     8b2:	20 26                	and    BYTE PTR [rsi],ah
     8b4:	75 00                	jne    8b6 <__abi_tag+0x53a>
     8b6:	22 04 b1             	and    al,BYTE PTR [rcx+rsi*4]
     8b9:	06                   	(bad)
     8ba:	c0 06 0b             	rol    BYTE PTR [rsi],0xb
     8bd:	7a 00                	jp     8bf <__abi_tag+0x543>
     8bf:	08 20                	or     BYTE PTR [rax],ah
     8c1:	24 08                	and    al,0x8
     8c3:	20 26                	and    BYTE PTR [rsi],ah
     8c5:	75 00                	jne    8c7 <__abi_tag+0x54b>
     8c7:	22 04 c0             	and    al,BYTE PTR [rax+rax*8]
     8ca:	06                   	(bad)
     8cb:	c6 06 0b             	mov    BYTE PTR [rsi],0xb
     8ce:	72 00                	jb     8d0 <__abi_tag+0x554>
     8d0:	08 20                	or     BYTE PTR [rax],ah
     8d2:	24 08                	and    al,0x8
     8d4:	20 26                	and    BYTE PTR [rsi],ah
     8d6:	75 00                	jne    8d8 <__abi_tag+0x55c>
     8d8:	22 04 cb             	and    al,BYTE PTR [rbx+rcx*8]
     8db:	06                   	(bad)
     8dc:	db 06                	fild   DWORD PTR [rsi]
     8de:	02 30                	add    dh,BYTE PTR [rax]
     8e0:	9f                   	lahf
     8e1:	04 db                	add    al,0xdb
     8e3:	06                   	(bad)
     8e4:	e7 06                	out    0x6,eax
     8e6:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     8e9:	ed                   	in     eax,dx
     8ea:	06                   	(bad)
     8eb:	f2 06                	repnz (bad)
     8ed:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     8f0:	f2 06                	repnz (bad)
     8f2:	f8                   	clc
     8f3:	06                   	(bad)
     8f4:	05 72 00 38 24       	add    eax,0x24380072
     8f9:	9f                   	lahf
     8fa:	04 f8                	add    al,0xf8
     8fc:	06                   	(bad)
     8fd:	fe 06                	inc    BYTE PTR [rsi]
     8ff:	05 72 00 40 24       	add    eax,0x24400072
     904:	9f                   	lahf
     905:	04 fe                	add    al,0xfe
     907:	06                   	(bad)
     908:	83 07 05             	add    DWORD PTR [rdi],0x5
     90b:	72 00                	jb     90d <__abi_tag+0x591>
     90d:	48 24 9f             	rex.W and al,0x9f
     910:	04 83                	add    al,0x83
     912:	07                   	(bad)
     913:	8a 07                	mov    al,BYTE PTR [rdi]
     915:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     918:	8d 07                	lea    eax,[rdi]
     91a:	93                   	xchg   ebx,eax
     91b:	07                   	(bad)
     91c:	05 72 00 38 24       	add    eax,0x24380072
     921:	9f                   	lahf
     922:	04 96                	add    al,0x96
     924:	07                   	(bad)
     925:	a3 07 05 72 00 40 24 	movabs ds:0x49f244000720507,eax
     92c:	9f 04 
     92e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     92f:	07                   	(bad)
     930:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     933:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     939:	07                   	(bad)
     93a:	02 30                	add    dh,BYTE PTR [rax]
     93c:	9f                   	lahf
     93d:	00 03                	add    BYTE PTR [rbx],al
     93f:	00 00                	add    BYTE PTR [rax],al
     941:	01 01                	add    DWORD PTR [rcx],eax
     943:	01 00                	add    DWORD PTR [rax],eax
     945:	00 00                	add    BYTE PTR [rax],al
     947:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     94a:	04 9f                	add    al,0x9f
     94c:	05 02 30 9f 04       	add    eax,0x49f3002
     951:	ec                   	in     al,dx
     952:	05 bb 06 01 5a       	add    eax,0x5a0106bb
     957:	04 bb                	add    al,0xbb
     959:	06                   	(bad)
     95a:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     95d:	52                   	push   rdx
     95e:	04 b4                	add    al,0xb4
     960:	07                   	(bad)
     961:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     964:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     96a:	07                   	(bad)
     96b:	02 30                	add    dh,BYTE PTR [rax]
     96d:	9f                   	lahf
     96e:	00 00                	add    BYTE PTR [rax],al
     970:	00 00                	add    BYTE PTR [rax],al
     972:	01 00                	add    DWORD PTR [rax],eax
     974:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
     977:	06                   	(bad)
     978:	eb 06                	jmp    980 <__abi_tag+0x604>
     97a:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     97d:	eb 06                	jmp    985 <__abi_tag+0x609>
     97f:	ed                   	in     eax,dx
     980:	06                   	(bad)
     981:	03 71 7f             	add    esi,DWORD PTR [rcx+0x7f]
     984:	9f                   	lahf
     985:	04 a6                	add    al,0xa6
     987:	07                   	(bad)
     988:	b4 07                	mov    ah,0x7
     98a:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     98d:	00 03                	add    BYTE PTR [rbx],al
     98f:	03 02                	add    eax,DWORD PTR [rdx]
     991:	02 02                	add    al,BYTE PTR [rdx]
     993:	02 00                	add    al,BYTE PTR [rax]
     995:	00 00                	add    BYTE PTR [rax],al
     997:	00 00                	add    BYTE PTR [rax],al
     999:	04 f2                	add    al,0xf2
     99b:	06                   	(bad)
     99c:	f2 06                	repnz (bad)
     99e:	05 34 79 00 1c       	add    eax,0x1c007934
     9a3:	9f                   	lahf
     9a4:	04 f2                	add    al,0xf2
     9a6:	06                   	(bad)
     9a7:	f8                   	clc
     9a8:	06                   	(bad)
     9a9:	05 33 79 00 1c       	add    eax,0x1c007933
     9ae:	9f                   	lahf
     9af:	04 f8                	add    al,0xf8
     9b1:	06                   	(bad)
     9b2:	fe 06                	inc    BYTE PTR [rsi]
     9b4:	05 32 79 00 1c       	add    eax,0x1c007932
     9b9:	9f                   	lahf
     9ba:	04 fe                	add    al,0xfe
     9bc:	06                   	(bad)
     9bd:	8a 07                	mov    al,BYTE PTR [rdi]
     9bf:	05 31 79 00 1c       	add    eax,0x1c007931
     9c4:	9f                   	lahf
     9c5:	04 8d                	add    al,0x8d
     9c7:	07                   	(bad)
     9c8:	93                   	xchg   ebx,eax
     9c9:	07                   	(bad)
     9ca:	05 33 79 00 1c       	add    eax,0x1c007933
     9cf:	9f                   	lahf
     9d0:	04 96                	add    al,0x96
     9d2:	07                   	(bad)
     9d3:	a3 07 05 32 79 00 1c 	movabs ds:0x9f1c0079320507,eax
     9da:	9f 00 
     9dc:	00 00                	add    BYTE PTR [rax],al
     9de:	04 b0                	add    al,0xb0
     9e0:	03 b8 03 06 55 93    	add    edi,DWORD PTR [rax-0x6caaf9fd]
     9e6:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
	...
     9f2:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     9f9:	50                   	push   rax
     9fa:	04 c9                	add    al,0xc9
     9fc:	03 ff                	add    edi,edi
     9fe:	03 01                	add    eax,DWORD PTR [rcx]
     a00:	54                   	push   rsp
     a01:	04 ff                	add    al,0xff
     a03:	03 84 04 05 74 00 33 	add    eax,DWORD PTR [rsp+rax*1+0x33007405]
     a0a:	1a 9f 04 cf 04 d4    	sbb    bl,BYTE PTR [rdi-0x2bfb30fc]
     a10:	04 01                	add    al,0x1
     a12:	50                   	push   rax
     a13:	00 01                	add    BYTE PTR [rcx],al
     a15:	00 00                	add    BYTE PTR [rax],al
     a17:	01 01                	add    DWORD PTR [rcx],eax
     a19:	00 04 bd 03 e3 03 01 	add    BYTE PTR [rdi*4+0x103e303],al
     a20:	52                   	push   rdx
     a21:	04 e3                	add    al,0xe3
     a23:	03 fa                	add    edi,edx
     a25:	03 03                	add    eax,DWORD PTR [rbx]
     a27:	72 7c                	jb     aa5 <__abi_tag+0x729>
     a29:	9f                   	lahf
     a2a:	04 fa                	add    al,0xfa
     a2c:	03 d4                	add    edx,esp
     a2e:	04 01                	add    al,0x1
     a30:	52                   	push   rdx
     a31:	00 02                	add    BYTE PTR [rdx],al
     a33:	00 00                	add    BYTE PTR [rax],al
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	00 02                	add    BYTE PTR [rdx],al
	...
     a41:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     a48:	50                   	push   rax
     a49:	04 c9                	add    al,0xc9
     a4b:	03 d5                	add    edx,ebp
     a4d:	03 01                	add    eax,DWORD PTR [rcx]
     a4f:	54                   	push   rsp
     a50:	04 d5                	add    al,0xd5
     a52:	03 e9                	add    ebp,ecx
     a54:	03 01                	add    eax,DWORD PTR [rcx]
     a56:	51                   	push   rcx
     a57:	04 f2                	add    al,0xf2
     a59:	03 a5 04 01 51 04    	add    esp,DWORD PTR [rbp+0x4510104]
     a5f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     a60:	04 a7                	add    al,0xa7
     a62:	04 06                	add    al,0x6
     a64:	70 00                	jo     a66 <__abi_tag+0x6ea>
     a66:	71 00                	jno    a68 <__abi_tag+0x6ec>
     a68:	27                   	(bad)
     a69:	9f                   	lahf
     a6a:	04 a7                	add    al,0xa7
     a6c:	04 a8                	add    al,0xa8
     a6e:	04 01                	add    al,0x1
     a70:	50                   	push   rax
     a71:	04 a8                	add    al,0xa8
     a73:	04 cf                	add    al,0xcf
     a75:	04 01                	add    al,0x1
     a77:	51                   	push   rcx
     a78:	04 cf                	add    al,0xcf
     a7a:	04 d4                	add    al,0xd4
     a7c:	04 01                	add    al,0x1
     a7e:	50                   	push   rax
     a7f:	00 03                	add    BYTE PTR [rbx],al
     a81:	00 01                	add    BYTE PTR [rcx],al
     a83:	02 02                	add    al,BYTE PTR [rdx]
     a85:	03 03                	add    eax,DWORD PTR [rbx]
     a87:	04 04                	add    al,0x4
     a89:	00 00                	add    BYTE PTR [rax],al
     a8b:	00 00                	add    BYTE PTR [rax],al
     a8d:	01 01                	add    DWORD PTR [rcx],eax
     a8f:	00 00                	add    BYTE PTR [rax],al
     a91:	00 00                	add    BYTE PTR [rax],al
     a93:	00 00                	add    BYTE PTR [rax],al
     a95:	00 04 bd 03 d5 03 02 	add    BYTE PTR [rdi*4+0x203d503],al
     a9c:	30 9f 04 d5 03 d5    	xor    BYTE PTR [rdi-0x2afc2afc],bl
     aa2:	03 08                	add    ecx,DWORD PTR [rax]
     aa4:	72 00                	jb     aa6 <__abi_tag+0x72a>
     aa6:	94                   	xchg   esp,eax
     aa7:	01 08                	add    DWORD PTR [rax],ecx
     aa9:	ff 1a                	call   FWORD PTR [rdx]
     aab:	9f                   	lahf
     aac:	04 d5                	add    al,0xd5
     aae:	03 d5                	add    edx,ebp
     ab0:	03 12                	add    edx,DWORD PTR [rdx]
     ab2:	72 01                	jb     ab5 <__abi_tag+0x739>
     ab4:	94                   	xchg   esp,eax
     ab5:	01 08                	add    DWORD PTR [rax],ecx
     ab7:	ff 1a                	call   FWORD PTR [rdx]
     ab9:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     abc:	00 94 01 08 ff 1a 21 	add    BYTE PTR [rcx+rax*1+0x211aff08],dl
     ac3:	9f                   	lahf
     ac4:	04 d5                	add    al,0xd5
     ac6:	03 d5                	add    edx,ebp
     ac8:	03 1c 72             	add    ebx,DWORD PTR [rdx+rsi*2]
     acb:	01 94 01 08 ff 1a 38 	add    DWORD PTR [rcx+rax*1+0x381aff08],edx
     ad2:	24 72                	and    al,0x72
     ad4:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     adb:	24 21                	and    al,0x21
     add:	72 00                	jb     adf <__abi_tag+0x763>
     adf:	94                   	xchg   esp,eax
     ae0:	01 08                	add    DWORD PTR [rax],ecx
     ae2:	ff 1a                	call   FWORD PTR [rdx]
     ae4:	21 9f 04 d5 03 df    	and    DWORD PTR [rdi-0x20fc2afc],ebx
     aea:	03 26                	add    esp,DWORD PTR [rsi]
     aec:	72 01                	jb     aef <__abi_tag+0x773>
     aee:	94                   	xchg   esp,eax
     aef:	01 08                	add    DWORD PTR [rax],ecx
     af1:	ff 1a                	call   FWORD PTR [rdx]
     af3:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     af6:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     afd:	24 21                	and    al,0x21
     aff:	72 03                	jb     b04 <__abi_tag+0x788>
     b01:	94                   	xchg   esp,eax
     b02:	01 08                	add    DWORD PTR [rax],ecx
     b04:	ff 1a                	call   FWORD PTR [rdx]
     b06:	48 24 21             	rex.W and al,0x21
     b09:	72 00                	jb     b0b <__abi_tag+0x78f>
     b0b:	94                   	xchg   esp,eax
     b0c:	01 08                	add    DWORD PTR [rax],ecx
     b0e:	ff 1a                	call   FWORD PTR [rdx]
     b10:	21 9f 04 df 03 f2    	and    DWORD PTR [rdi-0xdfc20fc],ebx
     b16:	03 01                	add    eax,DWORD PTR [rcx]
     b18:	58                   	pop    rax
     b19:	04 f2                	add    al,0xf2
     b1b:	03 f2                	add    esi,edx
     b1d:	03 01                	add    eax,DWORD PTR [rcx]
     b1f:	50                   	push   rax
     b20:	04 f2                	add    al,0xf2
     b22:	03 f8                	add    edi,eax
     b24:	03 09                	add    ecx,DWORD PTR [rcx]
     b26:	70 00                	jo     b28 <__abi_tag+0x7ac>
     b28:	0c 95                	or     al,0x95
     b2a:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e6700 <_end+0xffffffff9f1e06e8>
     b2f:	04 f8                	add    al,0xf8
     b31:	03 81 04 01 50 04    	add    eax,DWORD PTR [rcx+0x4500104]
     b37:	81 04 84 04 0e 78 00 	add    DWORD PTR [rsp+rax*4],0x780e04
     b3e:	48 25 78 00 27 0c    	and    rax,0xc270078
     b44:	95                   	xchg   ebp,eax
     b45:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e671b <_end+0xffffffff9f1e0703>
     b4a:	04 cf                	add    al,0xcf
     b4c:	04 d4                	add    al,0xd4
     b4e:	04 02                	add    al,0x2
     b50:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     b56:	f0 02 fd             	lock add bh,ch
     b59:	02 06                	add    al,BYTE PTR [rsi]
     b5b:	55                   	push   rbp
     b5c:	93                   	xchg   ebx,eax
     b5d:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     b61:	00 01                	add    BYTE PTR [rcx],al
     b63:	02 04 f4             	add    al,BYTE PTR [rsp+rsi*8]
     b66:	02 9c 03 02 30 9f 00 	add    bl,BYTE PTR [rbx+rax*1+0x9f3002]
     b6d:	04 00                	add    al,0x0
     b6f:	00 00                	add    BYTE PTR [rax],al
     b71:	04 f4                	add    al,0xf4
     b73:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     b79:	04 85                	add    al,0x85
     b7b:	03 95 03 01 50 00    	add    edx,DWORD PTR [rbp+0x500103]
     b81:	05 00 00 00 04       	add    eax,0x4000000
     b86:	f4                   	hlt
     b87:	02 8c 03 02 75 08 04 	add    cl,BYTE PTR [rbx+rax*1+0x4087502]
     b8e:	8c 03                	mov    WORD PTR [rbx],es
     b90:	a1 03 01 54 00 06 00 	movabs eax,ds:0x600540103
     b97:	00 00 
     b99:	04 f4                	add    al,0xf4
     b9b:	02 93 03 02 75 10    	add    dl,BYTE PTR [rbx+0x10750203]
     ba1:	04 93                	add    al,0x93
     ba3:	03 a1 03 01 52 00    	add    esp,DWORD PTR [rcx+0x520103]
     ba9:	07                   	(bad)
     baa:	00 00                	add    BYTE PTR [rax],al
     bac:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     baf:	02 9c 03 02 75 18 04 	add    bl,BYTE PTR [rbx+rax*1+0x4187502]
     bb6:	9c                   	pushf
     bb7:	03 a1 03 01 51 00    	add    esp,DWORD PTR [rcx+0x510103]
     bbd:	08 00                	or     BYTE PTR [rax],al
     bbf:	04 f4                	add    al,0xf4
     bc1:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     bc7:	00 08                	add    BYTE PTR [rax],cl
     bc9:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     bcc:	02 85 03 0a 9e 08    	add    al,BYTE PTR [rbp+0x89e0a03]
     bd2:	11 11                	adc    DWORD PTR [rcx],edx
     bd4:	11 21                	adc    DWORD PTR [rcx],esp
     bd6:	11 12                	adc    DWORD PTR [rdx],edx
     bd8:	12 12                	adc    dl,BYTE PTR [rdx]
     bda:	00 02                	add    BYTE PTR [rdx],al
     bdc:	00 04 85 03 8c 03 02 	add    BYTE PTR [rax*4+0x2038c03],al
     be3:	75 08                	jne    bed <__abi_tag+0x871>
     be5:	00 02                	add    BYTE PTR [rdx],al
     be7:	00 04 85 03 8c 03 0a 	add    BYTE PTR [rax*4+0xa038c03],al
     bee:	9e                   	sahf
     bef:	08 11                	or     BYTE PTR [rcx],dl
     bf1:	11 11                	adc    DWORD PTR [rcx],edx
     bf3:	21 11                	and    DWORD PTR [rcx],edx
     bf5:	12 12                	adc    dl,BYTE PTR [rdx]
     bf7:	12 00                	adc    al,BYTE PTR [rax]
     bf9:	02 00                	add    al,BYTE PTR [rax]
     bfb:	04 8c                	add    al,0x8c
     bfd:	03 93 03 02 75 10    	add    edx,DWORD PTR [rbx+0x10750203]
     c03:	00 02                	add    BYTE PTR [rdx],al
     c05:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
     c08:	03 93 03 0a 9e 08    	add    edx,DWORD PTR [rbx+0x89e0a03]
     c0e:	11 11                	adc    DWORD PTR [rcx],edx
     c10:	11 21                	adc    DWORD PTR [rcx],esp
     c12:	11 12                	adc    DWORD PTR [rdx],edx
     c14:	12 12                	adc    dl,BYTE PTR [rdx]
     c16:	00 02                	add    BYTE PTR [rdx],al
     c18:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
     c1b:	03 9c 03 02 75 18 00 	add    ebx,DWORD PTR [rbx+rax*1+0x187502]
     c22:	02 00                	add    al,BYTE PTR [rax]
     c24:	04 93                	add    al,0x93
     c26:	03 9c 03 0a 9e 08 11 	add    ebx,DWORD PTR [rbx+rax*1+0x11089e0a]
     c2d:	11 11                	adc    DWORD PTR [rcx],edx
     c2f:	21 11                	and    DWORD PTR [rcx],edx
     c31:	12 12                	adc    dl,BYTE PTR [rdx]
     c33:	12 00                	adc    al,BYTE PTR [rax]
     c35:	00 00                	add    BYTE PTR [rax],al
     c37:	04 a0                	add    al,0xa0
     c39:	02 a8 02 06 55 93    	add    ch,BYTE PTR [rax-0x6caaf9fe]
     c3f:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     c43:	00 01                	add    BYTE PTR [rcx],al
     c45:	00 00                	add    BYTE PTR [rax],al
     c47:	00 00                	add    BYTE PTR [rax],al
     c49:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     c4c:	02 c6                	add    al,dh
     c4e:	02 02                	add    al,BYTE PTR [rdx]
     c50:	30 9f 04 c6 02 e4    	xor    BYTE PTR [rdi-0x1bfd39fc],bl
     c56:	02 01                	add    al,BYTE PTR [rcx]
     c58:	50                   	push   rax
     c59:	04 e4                	add    al,0xe4
     c5b:	02 eb                	add    ch,bl
     c5d:	02 02                	add    al,BYTE PTR [rdx]
     c5f:	30 9f 00 02 00 01    	xor    BYTE PTR [rdi+0x1000200],bl
     c65:	00 00                	add    BYTE PTR [rax],al
     c67:	00 00                	add    BYTE PTR [rax],al
     c69:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     c6c:	02 c6                	add    al,dh
     c6e:	02 02                	add    al,BYTE PTR [rdx]
     c70:	30 9f 04 c6 02 d6    	xor    BYTE PTR [rdi-0x29fd39fc],bl
     c76:	02 02                	add    al,BYTE PTR [rdx]
     c78:	75 00                	jne    c7a <__abi_tag+0x8fe>
     c7a:	04 d6                	add    al,0xd6
     c7c:	02 e4                	add    ah,ah
     c7e:	02 02                	add    al,BYTE PTR [rdx]
     c80:	75 7c                	jne    cfe <__abi_tag+0x982>
     c82:	04 e4                	add    al,0xe4
     c84:	02 eb                	add    ch,bl
     c86:	02 02                	add    al,BYTE PTR [rdx]
     c88:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     c8e:	00 00                	add    BYTE PTR [rax],al
     c90:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     c93:	02 b0 02 01 54 04    	add    dh,BYTE PTR [rax+0x4540102]
     c99:	b0 02                	mov    al,0x2
     c9b:	b8 02 03 74 02       	mov    eax,0x2740302
     ca0:	9f                   	lahf
     ca1:	04 e4                	add    al,0xe4
     ca3:	02 eb                	add    ch,bl
     ca5:	02 01                	add    al,BYTE PTR [rcx]
     ca7:	54                   	push   rsp
     ca8:	00 01                	add    BYTE PTR [rcx],al
     caa:	00 00                	add    BYTE PTR [rax],al
     cac:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     caf:	02 c6                	add    al,dh
     cb1:	02 02                	add    al,BYTE PTR [rdx]
     cb3:	30 9f 04 e4 02 eb    	xor    BYTE PTR [rdi-0x14fd1bfc],bl
     cb9:	02 02                	add    al,BYTE PTR [rdx]
     cbb:	30 9f 00 02 00 00    	xor    BYTE PTR [rdi+0x200],bl
     cc1:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     cc4:	02 d6                	add    dl,dh
     cc6:	02 02                	add    al,BYTE PTR [rdx]
     cc8:	75 00                	jne    cca <__abi_tag+0x94e>
     cca:	04 d6                	add    al,0xd6
     ccc:	02 dc                	add    bl,ah
     cce:	02 02                	add    al,BYTE PTR [rdx]
     cd0:	75 7c                	jne    d4e <__abi_tag+0x9d2>
     cd2:	00 02                	add    BYTE PTR [rdx],al
     cd4:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     cd7:	02 dc                	add    bl,ah
     cd9:	02 06                	add    al,BYTE PTR [rsi]
     cdb:	0c 11                	or     al,0x11
     cdd:	11 11                	adc    DWORD PTR [rcx],edx
     cdf:	11 9f 00 00 00 04    	adc    DWORD PTR [rdi+0x4000000],ebx
     ce5:	00 08                	add    BYTE PTR [rax],cl
     ce7:	06                   	(bad)
     ce8:	55                   	push   rbp
     ce9:	93                   	xchg   ebx,eax
     cea:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     cee:	00 01                	add    BYTE PTR [rcx],al
     cf0:	00 00                	add    BYTE PTR [rax],al
     cf2:	00 00                	add    BYTE PTR [rax],al
     cf4:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     cf7:	44 02 30             	add    r14b,BYTE PTR [rax]
     cfa:	9f                   	lahf
     cfb:	04 44                	add    al,0x44
     cfd:	96                   	xchg   esi,eax
     cfe:	02 01                	add    al,BYTE PTR [rcx]
     d00:	5a                   	pop    rdx
     d01:	04 96                	add    al,0x96
     d03:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     d09:	00 02                	add    BYTE PTR [rdx],al
	...
     d13:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     d16:	44 02 30             	add    r14b,BYTE PTR [rax]
     d19:	9f                   	lahf
     d1a:	04 4b                	add    al,0x4b
     d1c:	50                   	push   rax
     d1d:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     d20:	50                   	push   rax
     d21:	cc                   	int3
     d22:	01 02                	add    DWORD PTR [rdx],eax
     d24:	79 00                	jns    d26 <__abi_tag+0x9aa>
     d26:	04 cc                	add    al,0xcc
     d28:	01 96 02 02 79 7c    	add    DWORD PTR [rsi+0x7c790202],edx
     d2e:	04 96                	add    al,0x96
     d30:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     d36:	00 00                	add    BYTE PTR [rax],al
     d38:	00 00                	add    BYTE PTR [rax],al
     d3a:	00 00                	add    BYTE PTR [rax],al
     d3c:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
     d3f:	14 01                	adc    al,0x1
     d41:	54                   	push   rsp
     d42:	04 14                	add    al,0x14
     d44:	1e                   	(bad)
     d45:	03 74 02 9f          	add    esi,DWORD PTR [rdx+rax*1-0x61]
     d49:	04 96                	add    al,0x96
     d4b:	02 99 02 01 54 00    	add    bl,BYTE PTR [rcx+0x540102]
     d51:	01 00                	add    DWORD PTR [rax],eax
     d53:	00 00                	add    BYTE PTR [rax],al
     d55:	04 08                	add    al,0x8
     d57:	44 02 30             	add    r14b,BYTE PTR [rax]
     d5a:	9f                   	lahf
     d5b:	04 96                	add    al,0x96
     d5d:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     d63:	00 02                	add    BYTE PTR [rdx],al
     d65:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     d68:	85 02                	test   DWORD PTR [rdx],eax
     d6a:	06                   	(bad)
     d6b:	0c 11                	or     al,0x11
     d6d:	11 11                	adc    DWORD PTR [rcx],edx
     d6f:	11 9f 00 01 00 00    	adc    DWORD PTR [rdi+0x100],ebx
     d75:	00 00                	add    BYTE PTR [rax],al
     d77:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     d7a:	50                   	push   rax
     d7b:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     d7e:	50                   	push   rax
     d7f:	cc                   	int3
     d80:	01 02                	add    DWORD PTR [rdx],eax
     d82:	79 00                	jns    d84 <__abi_tag+0xa08>
     d84:	04 cc                	add    al,0xcc
     d86:	01 85 02 02 79 7c    	add    DWORD PTR [rbp+0x7c790202],eax
     d8c:	00 01                	add    BYTE PTR [rcx],al
     d8e:	00 00                	add    BYTE PTR [rax],al
     d90:	00 00                	add    BYTE PTR [rax],al
     d92:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
     d95:	01 98 01 ce 01 79    	add    DWORD PTR [rax+0x7901ce01],ebx
     d9b:	00 94 04 31 24 11 aa 	add    BYTE PTR [rsp+rax*1-0x55eedbcf],dl
     da2:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     da7:	79 00                	jns    da9 <__abi_tag+0xa2d>
     da9:	94                   	xchg   esp,eax
     daa:	04 31                	add    al,0x31
     dac:	25 0c 55 55 55       	and    eax,0x5555550c
     db1:	55                   	push   rbp
     db2:	1a 21                	sbb    ah,BYTE PTR [rcx]
     db4:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     db7:	cc                   	int3
     db8:	99                   	cdq
     db9:	b3 e6                	mov    bl,0xe6
     dbb:	7c 1a                	jl     dd7 <__abi_tag+0xa5b>
     dbd:	79 00                	jns    dbf <__abi_tag+0xa43>
     dbf:	94                   	xchg   esp,eax
     dc0:	04 31                	add    al,0x31
     dc2:	24 11                	and    al,0x11
     dc4:	aa                   	stos   BYTE PTR es:[rdi],al
     dc5:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     dca:	79 00                	jns    dcc <__abi_tag+0xa50>
     dcc:	94                   	xchg   esp,eax
     dcd:	04 31                	add    al,0x31
     dcf:	25 0c 55 55 55       	and    eax,0x5555550c
     dd4:	55                   	push   rbp
     dd5:	1a 21                	sbb    ah,BYTE PTR [rcx]
     dd7:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333340e9 <_end+0x3332e0d1>
     ddd:	33 1a                	xor    ebx,DWORD PTR [rdx]
     ddf:	21 34 24             	and    DWORD PTR [rsp],esi
     de2:	11 f0                	adc    eax,esi
     de4:	e1 c3                	loope  da9 <__abi_tag+0xa2d>
     de6:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     de9:	72 00                	jb     deb <__abi_tag+0xa6f>
     deb:	21 38                	and    DWORD PTR [rax],edi
     ded:	25 0c ff 00 ff       	and    eax,0xff00ff0c
     df2:	00 1a                	add    BYTE PTR [rdx],bl
     df4:	79 00                	jns    df6 <__abi_tag+0xa7a>
     df6:	94                   	xchg   esp,eax
     df7:	04 31                	add    al,0x31
     df9:	24 11                	and    al,0x11
     dfb:	aa                   	stos   BYTE PTR es:[rdi],al
     dfc:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e01:	79 00                	jns    e03 <__abi_tag+0xa87>
     e03:	94                   	xchg   esp,eax
     e04:	04 31                	add    al,0x31
     e06:	25 0c 55 55 55       	and    eax,0x5555550c
     e0b:	55                   	push   rbp
     e0c:	1a 21                	sbb    ah,BYTE PTR [rcx]
     e0e:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     e11:	cc                   	int3
     e12:	99                   	cdq
     e13:	b3 e6                	mov    bl,0xe6
     e15:	7c 1a                	jl     e31 <__abi_tag+0xab5>
     e17:	79 00                	jns    e19 <__abi_tag+0xa9d>
     e19:	94                   	xchg   esp,eax
     e1a:	04 31                	add    al,0x31
     e1c:	24 11                	and    al,0x11
     e1e:	aa                   	stos   BYTE PTR es:[rdi],al
     e1f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e24:	79 00                	jns    e26 <__abi_tag+0xaaa>
     e26:	94                   	xchg   esp,eax
     e27:	04 31                	add    al,0x31
     e29:	25 0c 55 55 55       	and    eax,0x5555550c
     e2e:	55                   	push   rbp
     e2f:	1a 21                	sbb    ah,BYTE PTR [rcx]
     e31:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334143 <_end+0x3332e12b>
     e37:	33 1a                	xor    ebx,DWORD PTR [rdx]
     e39:	21 34 24             	and    DWORD PTR [rsp],esi
     e3c:	11 f0                	adc    eax,esi
     e3e:	e1 c3                	loope  e03 <__abi_tag+0xa87>
     e40:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     e43:	72 00                	jb     e45 <__abi_tag+0xac9>
     e45:	21 38                	and    DWORD PTR [rax],edi
     e47:	24 11                	and    al,0x11
     e49:	80 fe 83             	cmp    dh,0x83
     e4c:	78 1a                	js     e68 <__abi_tag+0xaec>
     e4e:	21 40 14             	and    DWORD PTR [rax+0x14],eax
     e51:	14 24                	adc    al,0x24
     e53:	0c ff                	or     al,0xff
     e55:	ff                   	(bad)
     e56:	ff                   	(bad)
     e57:	ff 1a                	call   FWORD PTR [rdx]
     e59:	17                   	(bad)
     e5a:	16                   	(bad)
     e5b:	0c ff                	or     al,0xff
     e5d:	ff                   	(bad)
     e5e:	ff                   	(bad)
     e5f:	ff 1a                	call   FWORD PTR [rdx]
     e61:	16                   	(bad)
     e62:	1f                   	(bad)
     e63:	23 20                	and    esp,DWORD PTR [rax]
     e65:	25 21 9f 04 98       	and    eax,0x98049f21
     e6a:	01 cc                	add    esp,ecx
     e6c:	01 e6                	add    esi,esp
     e6e:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
     e71:	94                   	xchg   esp,eax
     e72:	04 31                	add    al,0x31
     e74:	24 11                	and    al,0x11
     e76:	aa                   	stos   BYTE PTR es:[rdi],al
     e77:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e7c:	79 00                	jns    e7e <__abi_tag+0xb02>
     e7e:	94                   	xchg   esp,eax
     e7f:	04 31                	add    al,0x31
     e81:	25 0c 55 55 55       	and    eax,0x5555550c
     e86:	55                   	push   rbp
     e87:	1a 21                	sbb    ah,BYTE PTR [rcx]
     e89:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     e8c:	cc                   	int3
     e8d:	99                   	cdq
     e8e:	b3 e6                	mov    bl,0xe6
     e90:	7c 1a                	jl     eac <__abi_tag+0xb30>
     e92:	79 00                	jns    e94 <__abi_tag+0xb18>
     e94:	94                   	xchg   esp,eax
     e95:	04 31                	add    al,0x31
     e97:	24 11                	and    al,0x11
     e99:	aa                   	stos   BYTE PTR es:[rdi],al
     e9a:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e9f:	79 00                	jns    ea1 <__abi_tag+0xb25>
     ea1:	94                   	xchg   esp,eax
     ea2:	04 31                	add    al,0x31
     ea4:	25 0c 55 55 55       	and    eax,0x5555550c
     ea9:	55                   	push   rbp
     eaa:	1a 21                	sbb    ah,BYTE PTR [rcx]
     eac:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333341be <_end+0x3332e1a6>
     eb2:	33 1a                	xor    ebx,DWORD PTR [rdx]
     eb4:	21 34 24             	and    DWORD PTR [rsp],esi
     eb7:	11 f0                	adc    eax,esi
     eb9:	e1 c3                	loope  e7e <__abi_tag+0xb02>
     ebb:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     ebe:	79 00                	jns    ec0 <__abi_tag+0xb44>
     ec0:	94                   	xchg   esp,eax
     ec1:	04 31                	add    al,0x31
     ec3:	24 11                	and    al,0x11
     ec5:	aa                   	stos   BYTE PTR es:[rdi],al
     ec6:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     ecb:	79 00                	jns    ecd <__abi_tag+0xb51>
     ecd:	94                   	xchg   esp,eax
     ece:	04 31                	add    al,0x31
     ed0:	25 0c 55 55 55       	and    eax,0x5555550c
     ed5:	55                   	push   rbp
     ed6:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ed8:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     edb:	cc                   	int3
     edc:	99                   	cdq
     edd:	b3 e6                	mov    bl,0xe6
     edf:	7c 1a                	jl     efb <__abi_tag+0xb7f>
     ee1:	79 00                	jns    ee3 <__abi_tag+0xb67>
     ee3:	94                   	xchg   esp,eax
     ee4:	04 31                	add    al,0x31
     ee6:	24 11                	and    al,0x11
     ee8:	aa                   	stos   BYTE PTR es:[rdi],al
     ee9:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     eee:	79 00                	jns    ef0 <__abi_tag+0xb74>
     ef0:	94                   	xchg   esp,eax
     ef1:	04 31                	add    al,0x31
     ef3:	25 0c 55 55 55       	and    eax,0x5555550c
     ef8:	55                   	push   rbp
     ef9:	1a 21                	sbb    ah,BYTE PTR [rcx]
     efb:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333420d <_end+0x3332e1f5>
     f01:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f03:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
     f0a:	0f 1a 21             	bndldx (bad),[rcx]
     f0d:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff010e1f <_end+0xffffffffff00ae07>
     f13:	00 1a                	add    BYTE PTR [rdx],bl
     f15:	79 00                	jns    f17 <__abi_tag+0xb9b>
     f17:	94                   	xchg   esp,eax
     f18:	04 31                	add    al,0x31
     f1a:	24 11                	and    al,0x11
     f1c:	aa                   	stos   BYTE PTR es:[rdi],al
     f1d:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f22:	79 00                	jns    f24 <__abi_tag+0xba8>
     f24:	94                   	xchg   esp,eax
     f25:	04 31                	add    al,0x31
     f27:	25 0c 55 55 55       	and    eax,0x5555550c
     f2c:	55                   	push   rbp
     f2d:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f2f:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     f32:	cc                   	int3
     f33:	99                   	cdq
     f34:	b3 e6                	mov    bl,0xe6
     f36:	7c 1a                	jl     f52 <__abi_tag+0xbd6>
     f38:	79 00                	jns    f3a <__abi_tag+0xbbe>
     f3a:	94                   	xchg   esp,eax
     f3b:	04 31                	add    al,0x31
     f3d:	24 11                	and    al,0x11
     f3f:	aa                   	stos   BYTE PTR es:[rdi],al
     f40:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f45:	79 00                	jns    f47 <__abi_tag+0xbcb>
     f47:	94                   	xchg   esp,eax
     f48:	04 31                	add    al,0x31
     f4a:	25 0c 55 55 55       	and    eax,0x5555550c
     f4f:	55                   	push   rbp
     f50:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f52:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334264 <_end+0x3332e24c>
     f58:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f5a:	21 34 24             	and    DWORD PTR [rsp],esi
     f5d:	11 f0                	adc    eax,esi
     f5f:	e1 c3                	loope  f24 <__abi_tag+0xba8>
     f61:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     f64:	79 00                	jns    f66 <__abi_tag+0xbea>
     f66:	94                   	xchg   esp,eax
     f67:	04 31                	add    al,0x31
     f69:	24 11                	and    al,0x11
     f6b:	aa                   	stos   BYTE PTR es:[rdi],al
     f6c:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f71:	79 00                	jns    f73 <__abi_tag+0xbf7>
     f73:	94                   	xchg   esp,eax
     f74:	04 31                	add    al,0x31
     f76:	25 0c 55 55 55       	and    eax,0x5555550c
     f7b:	55                   	push   rbp
     f7c:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f7e:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     f81:	cc                   	int3
     f82:	99                   	cdq
     f83:	b3 e6                	mov    bl,0xe6
     f85:	7c 1a                	jl     fa1 <__abi_tag+0xc25>
     f87:	79 00                	jns    f89 <__abi_tag+0xc0d>
     f89:	94                   	xchg   esp,eax
     f8a:	04 31                	add    al,0x31
     f8c:	24 11                	and    al,0x11
     f8e:	aa                   	stos   BYTE PTR es:[rdi],al
     f8f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f94:	79 00                	jns    f96 <__abi_tag+0xc1a>
     f96:	94                   	xchg   esp,eax
     f97:	04 31                	add    al,0x31
     f99:	25 0c 55 55 55       	and    eax,0x5555550c
     f9e:	55                   	push   rbp
     f9f:	1a 21                	sbb    ah,BYTE PTR [rcx]
     fa1:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333342b3 <_end+0x3332e29b>
     fa7:	33 1a                	xor    ebx,DWORD PTR [rdx]
     fa9:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
     fb0:	0f 1a 21             	bndldx (bad),[rcx]
     fb3:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
     fb6:	80 fe 83             	cmp    dh,0x83
     fb9:	78 1a                	js     fd5 <__abi_tag+0xc59>
     fbb:	21 40 14             	and    DWORD PTR [rax+0x14],eax
     fbe:	14 24                	adc    al,0x24
     fc0:	0c ff                	or     al,0xff
     fc2:	ff                   	(bad)
     fc3:	ff                   	(bad)
     fc4:	ff 1a                	call   FWORD PTR [rdx]
     fc6:	17                   	(bad)
     fc7:	16                   	(bad)
     fc8:	0c ff                	or     al,0xff
     fca:	ff                   	(bad)
     fcb:	ff                   	(bad)
     fcc:	ff 1a                	call   FWORD PTR [rdx]
     fce:	16                   	(bad)
     fcf:	1f                   	(bad)
     fd0:	23 20                	and    esp,DWORD PTR [rax]
     fd2:	25 21 9f 04 cc       	and    eax,0xcc049f21
     fd7:	01 85 02 e6 02 79    	add    DWORD PTR [rbp+0x7902e602],eax
     fdd:	7c 94                	jl     f73 <__abi_tag+0xbf7>
     fdf:	04 31                	add    al,0x31
     fe1:	24 11                	and    al,0x11
     fe3:	aa                   	stos   BYTE PTR es:[rdi],al
     fe4:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     fe9:	79 7c                	jns    1067 <__strncpy_chk@plt+0x7>
     feb:	94                   	xchg   esp,eax
     fec:	04 31                	add    al,0x31
     fee:	25 0c 55 55 55       	and    eax,0x5555550c
     ff3:	55                   	push   rbp
     ff4:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ff6:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     ff9:	cc                   	int3
     ffa:	99                   	cdq
     ffb:	b3 e6                	mov    bl,0xe6
     ffd:	7c 1a                	jl     1019 <_init+0x19>
     fff:	79 7c                	jns    107d <__assert_fail@plt+0xd>
    1001:	94                   	xchg   esp,eax
    1002:	04 31                	add    al,0x31
    1004:	24 11                	and    al,0x11
    1006:	aa                   	stos   BYTE PTR es:[rdi],al
    1007:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    100c:	79 7c                	jns    108a <calloc@plt+0xa>
    100e:	94                   	xchg   esp,eax
    100f:	04 31                	add    al,0x31
    1011:	25 0c 55 55 55       	and    eax,0x5555550c
    1016:	55                   	push   rbp
    1017:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1019:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333432b <_end+0x3332e313>
    101f:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1021:	21 34 24             	and    DWORD PTR [rsp],esi
    1024:	11 f0                	adc    eax,esi
    1026:	e1 c3                	loope  feb <__abi_tag+0xc6f>
    1028:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    102b:	79 7c                	jns    10a9 <aligned_alloc@plt+0x9>
    102d:	94                   	xchg   esp,eax
    102e:	04 31                	add    al,0x31
    1030:	24 11                	and    al,0x11
    1032:	aa                   	stos   BYTE PTR es:[rdi],al
    1033:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1038:	79 7c                	jns    10b6 <stat@plt+0x6>
    103a:	94                   	xchg   esp,eax
    103b:	04 31                	add    al,0x31
    103d:	25 0c 55 55 55       	and    eax,0x5555550c
    1042:	55                   	push   rbp
    1043:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1045:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1048:	cc                   	int3
    1049:	99                   	cdq
    104a:	b3 e6                	mov    bl,0xe6
    104c:	7c 1a                	jl     1068 <__strncpy_chk@plt+0x8>
    104e:	79 7c                	jns    10cc <srand@plt+0xc>
    1050:	94                   	xchg   esp,eax
    1051:	04 31                	add    al,0x31
    1053:	24 11                	and    al,0x11
    1055:	aa                   	stos   BYTE PTR es:[rdi],al
    1056:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    105b:	79 7c                	jns    10d9 <fclose@plt+0x9>
    105d:	94                   	xchg   esp,eax
    105e:	04 31                	add    al,0x31
    1060:	25 0c 55 55 55       	and    eax,0x5555550c
    1065:	55                   	push   rbp
    1066:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1068:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333437a <_end+0x3332e362>
    106e:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1070:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    1077:	0f 1a 21             	bndldx (bad),[rcx]
    107a:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff010f8c <_end+0xffffffffff00af74>
    1080:	00 1a                	add    BYTE PTR [rdx],bl
    1082:	79 7c                	jns    1100 <free@plt>
    1084:	94                   	xchg   esp,eax
    1085:	04 31                	add    al,0x31
    1087:	24 11                	and    al,0x11
    1089:	aa                   	stos   BYTE PTR es:[rdi],al
    108a:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    108f:	79 7c                	jns    110d <free@plt+0xd>
    1091:	94                   	xchg   esp,eax
    1092:	04 31                	add    al,0x31
    1094:	25 0c 55 55 55       	and    eax,0x5555550c
    1099:	55                   	push   rbp
    109a:	1a 21                	sbb    ah,BYTE PTR [rcx]
    109c:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    109f:	cc                   	int3
    10a0:	99                   	cdq
    10a1:	b3 e6                	mov    bl,0xe6
    10a3:	7c 1a                	jl     10bf <stat@plt+0xf>
    10a5:	79 7c                	jns    1123 <__memset_chk@plt+0x3>
    10a7:	94                   	xchg   esp,eax
    10a8:	04 31                	add    al,0x31
    10aa:	24 11                	and    al,0x11
    10ac:	aa                   	stos   BYTE PTR es:[rdi],al
    10ad:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10b2:	79 7c                	jns    1130 <putchar@plt>
    10b4:	94                   	xchg   esp,eax
    10b5:	04 31                	add    al,0x31
    10b7:	25 0c 55 55 55       	and    eax,0x5555550c
    10bc:	55                   	push   rbp
    10bd:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10bf:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333343d1 <_end+0x3332e3b9>
    10c5:	33 1a                	xor    ebx,DWORD PTR [rdx]
    10c7:	21 34 24             	and    DWORD PTR [rsp],esi
    10ca:	11 f0                	adc    eax,esi
    10cc:	e1 c3                	loope  1091 <open@plt+0x1>
    10ce:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    10d1:	79 7c                	jns    114f <strcmp@plt+0xf>
    10d3:	94                   	xchg   esp,eax
    10d4:	04 31                	add    al,0x31
    10d6:	24 11                	and    al,0x11
    10d8:	aa                   	stos   BYTE PTR es:[rdi],al
    10d9:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10de:	79 7c                	jns    115c <read@plt+0xc>
    10e0:	94                   	xchg   esp,eax
    10e1:	04 31                	add    al,0x31
    10e3:	25 0c 55 55 55       	and    eax,0x5555550c
    10e8:	55                   	push   rbp
    10e9:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10eb:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    10ee:	cc                   	int3
    10ef:	99                   	cdq
    10f0:	b3 e6                	mov    bl,0xe6
    10f2:	7c 1a                	jl     110e <free@plt+0xe>
    10f4:	79 7c                	jns    1172 <realloc@plt+0x2>
    10f6:	94                   	xchg   esp,eax
    10f7:	04 31                	add    al,0x31
    10f9:	24 11                	and    al,0x11
    10fb:	aa                   	stos   BYTE PTR es:[rdi],al
    10fc:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1101:	79 7c                	jns    117f <realloc@plt+0xf>
    1103:	94                   	xchg   esp,eax
    1104:	04 31                	add    al,0x31
    1106:	25 0c 55 55 55       	and    eax,0x5555550c
    110b:	55                   	push   rbp
    110c:	1a 21                	sbb    ah,BYTE PTR [rcx]
    110e:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334420 <_end+0x3332e408>
    1114:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1116:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    111d:	0f 1a 21             	bndldx (bad),[rcx]
    1120:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    1123:	80 fe 83             	cmp    dh,0x83
    1126:	78 1a                	js     1142 <strcmp@plt+0x2>
    1128:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    112b:	14 24                	adc    al,0x24
    112d:	0c ff                	or     al,0xff
    112f:	ff                   	(bad)
    1130:	ff                   	(bad)
    1131:	ff 1a                	call   FWORD PTR [rdx]
    1133:	17                   	(bad)
    1134:	16                   	(bad)
    1135:	0c ff                	or     al,0xff
    1137:	ff                   	(bad)
    1138:	ff                   	(bad)
    1139:	ff 1a                	call   FWORD PTR [rdx]
    113b:	16                   	(bad)
    113c:	1f                   	(bad)
    113d:	23 20                	and    esp,DWORD PTR [rax]
    113f:	25 21 9f 00 03       	and    eax,0x3009f21
    1144:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
    1147:	01 85 02 06 9e 04    	add    DWORD PTR [rbp+0x49e0602],eax
    114d:	88 88 88 88 00 00    	mov    BYTE PTR [rax+0x8888],cl
    1153:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1156:	01 c8                	add    eax,ecx
    1158:	01 01                	add    DWORD PTR [rcx],eax
    115a:	51                   	push   rcx
    115b:	00 01                	add    BYTE PTR [rcx],al
    115d:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1160:	01 96 02 07 10 c1    	add    DWORD PTR [rsi-0x3eeff8fe],edx
    1166:	de f1                	fdivrp st(1),st
    1168:	f6 11                	not    BYTE PTR [rcx]
    116a:	9f                   	lahf
    116b:	00 02                	add    BYTE PTR [rdx],al
    116d:	00 00                	add    BYTE PTR [rax],al
    116f:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1172:	01 98 01 02 30 9f    	add    DWORD PTR [rax-0x60cffdff],ebx
    1178:	04 98                	add    al,0x98
    117a:	01 c6                	add    esi,eax
    117c:	01 01                	add    DWORD PTR [rcx],eax
    117e:	50                   	push   rax
    117f:	00 03                	add    BYTE PTR [rbx],al
	...
    1191:	01 01                	add    DWORD PTR [rcx],eax
    1193:	00 00                	add    BYTE PTR [rax],al
    1195:	01 04 4b             	add    DWORD PTR [rbx+rcx*2],eax
    1198:	50                   	push   rax
    1199:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    119c:	50                   	push   rax
    119d:	5d                   	pop    rbp
    119e:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
    11a1:	04 5d                	add    al,0x5d
    11a3:	62 01 50 04 62       	(bad)
    11a8:	65 01 51 04          	add    DWORD PTR gs:[rcx+0x4],edx
    11ac:	65 72 1b             	gs jb  11ca <__isoc23_strtol@plt+0xa>
    11af:	79 00                	jns    11b1 <close@plt+0x1>
    11b1:	94                   	xchg   esp,eax
    11b2:	04 31                	add    al,0x31
    11b4:	24 11                	and    al,0x11
    11b6:	aa                   	stos   BYTE PTR es:[rdi],al
    11b7:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11bc:	79 00                	jns    11be <close@plt+0xe>
    11be:	94                   	xchg   esp,eax
    11bf:	04 31                	add    al,0x31
    11c1:	25 0c 55 55 55       	and    eax,0x5555550c
    11c6:	55                   	push   rbp
    11c7:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11c9:	9f                   	lahf
    11ca:	04 72                	add    al,0x72
    11cc:	77 01                	ja     11cf <__isoc23_strtol@plt+0xf>
    11ce:	50                   	push   rax
    11cf:	04 77                	add    al,0x77
    11d1:	7c 01                	jl     11d4 <__cxa_finalize@plt+0x4>
    11d3:	52                   	push   rdx
    11d4:	04 7c                	add    al,0x7c
    11d6:	8c 01                	mov    WORD PTR [rcx],es
    11d8:	47 79 00             	rex.RXB jns 11db <__cxa_finalize@plt+0xb>
    11db:	94                   	xchg   esp,eax
    11dc:	04 31                	add    al,0x31
    11de:	24 11                	and    al,0x11
    11e0:	aa                   	stos   BYTE PTR es:[rdi],al
    11e1:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11e6:	79 00                	jns    11e8 <main+0x8>
    11e8:	94                   	xchg   esp,eax
    11e9:	04 31                	add    al,0x31
    11eb:	25 0c 55 55 55       	and    eax,0x5555550c
    11f0:	55                   	push   rbp
    11f1:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11f3:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    11f6:	cc                   	int3
    11f7:	99                   	cdq
    11f8:	b3 e6                	mov    bl,0xe6
    11fa:	7c 1a                	jl     1216 <_start+0x6>
    11fc:	79 00                	jns    11fe <main+0x1e>
    11fe:	94                   	xchg   esp,eax
    11ff:	04 31                	add    al,0x31
    1201:	24 11                	and    al,0x11
    1203:	aa                   	stos   BYTE PTR es:[rdi],al
    1204:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1209:	79 00                	jns    120b <main+0x2b>
    120b:	94                   	xchg   esp,eax
    120c:	04 31                	add    al,0x31
    120e:	25 0c 55 55 55       	and    eax,0x5555550c
    1213:	55                   	push   rbp
    1214:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1216:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334528 <_end+0x3332e510>
    121c:	33 1a                	xor    ebx,DWORD PTR [rdx]
    121e:	21 9f 04 8c 01 8c    	and    DWORD PTR [rdi-0x73fe73fc],ebx
    1224:	01 01                	add    DWORD PTR [rcx],eax
    1226:	51                   	push   rcx
    1227:	04 8c                	add    al,0x8c
    1229:	01 8e 01 16 71 00    	add    DWORD PTR [rsi+0x711601],ecx
    122f:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff011141 <_end+0xffffffffff00b129>
    1235:	00 1a                	add    BYTE PTR [rdx],bl
    1237:	71 00                	jno    1239 <_start+0x29>
    1239:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    123c:	80 fe 83             	cmp    dh,0x83
    123f:	78 1a                	js     125b <deregister_tm_clones+0x1b>
    1241:	21 9f 04 8e 01 8e    	and    DWORD PTR [rdi-0x71fe71fc],ebx
    1247:	01 ce                	add    esi,ecx
    1249:	01 79 00             	add    DWORD PTR [rcx+0x0],edi
    124c:	94                   	xchg   esp,eax
    124d:	04 31                	add    al,0x31
    124f:	24 11                	and    al,0x11
    1251:	aa                   	stos   BYTE PTR es:[rdi],al
    1252:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1257:	79 00                	jns    1259 <deregister_tm_clones+0x19>
    1259:	94                   	xchg   esp,eax
    125a:	04 31                	add    al,0x31
    125c:	25 0c 55 55 55       	and    eax,0x5555550c
    1261:	55                   	push   rbp
    1262:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1264:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1267:	cc                   	int3
    1268:	99                   	cdq
    1269:	b3 e6                	mov    bl,0xe6
    126b:	7c 1a                	jl     1287 <register_tm_clones+0x17>
    126d:	79 00                	jns    126f <deregister_tm_clones+0x2f>
    126f:	94                   	xchg   esp,eax
    1270:	04 31                	add    al,0x31
    1272:	24 11                	and    al,0x11
    1274:	aa                   	stos   BYTE PTR es:[rdi],al
    1275:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    127a:	79 00                	jns    127c <register_tm_clones+0xc>
    127c:	94                   	xchg   esp,eax
    127d:	04 31                	add    al,0x31
    127f:	25 0c 55 55 55       	and    eax,0x5555550c
    1284:	55                   	push   rbp
    1285:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1287:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334599 <_end+0x3332e581>
    128d:	33 1a                	xor    ebx,DWORD PTR [rdx]
    128f:	21 34 24             	and    DWORD PTR [rsp],esi
    1292:	11 f0                	adc    eax,esi
    1294:	e1 c3                	loope  1259 <deregister_tm_clones+0x19>
    1296:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    1299:	72 00                	jb     129b <register_tm_clones+0x2b>
    129b:	21 38                	and    DWORD PTR [rax],edi
    129d:	25 0c ff 00 ff       	and    eax,0xff00ff0c
    12a2:	00 1a                	add    BYTE PTR [rdx],bl
    12a4:	79 00                	jns    12a6 <register_tm_clones+0x36>
    12a6:	94                   	xchg   esp,eax
    12a7:	04 31                	add    al,0x31
    12a9:	24 11                	and    al,0x11
    12ab:	aa                   	stos   BYTE PTR es:[rdi],al
    12ac:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12b1:	79 00                	jns    12b3 <__do_global_dtors_aux+0x3>
    12b3:	94                   	xchg   esp,eax
    12b4:	04 31                	add    al,0x31
    12b6:	25 0c 55 55 55       	and    eax,0x5555550c
    12bb:	55                   	push   rbp
    12bc:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12be:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    12c1:	cc                   	int3
    12c2:	99                   	cdq
    12c3:	b3 e6                	mov    bl,0xe6
    12c5:	7c 1a                	jl     12e1 <__do_global_dtors_aux+0x31>
    12c7:	79 00                	jns    12c9 <__do_global_dtors_aux+0x19>
    12c9:	94                   	xchg   esp,eax
    12ca:	04 31                	add    al,0x31
    12cc:	24 11                	and    al,0x11
    12ce:	aa                   	stos   BYTE PTR es:[rdi],al
    12cf:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12d4:	79 00                	jns    12d6 <__do_global_dtors_aux+0x26>
    12d6:	94                   	xchg   esp,eax
    12d7:	04 31                	add    al,0x31
    12d9:	25 0c 55 55 55       	and    eax,0x5555550c
    12de:	55                   	push   rbp
    12df:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12e1:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333345f3 <_end+0x3332e5db>
    12e7:	33 1a                	xor    ebx,DWORD PTR [rdx]
    12e9:	21 34 24             	and    DWORD PTR [rsp],esi
    12ec:	11 f0                	adc    eax,esi
    12ee:	e1 c3                	loope  12b3 <__do_global_dtors_aux+0x3>
    12f0:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    12f3:	72 00                	jb     12f5 <frame_dummy+0x5>
    12f5:	21 38                	and    DWORD PTR [rax],edi
    12f7:	24 11                	and    al,0x11
    12f9:	80 fe 83             	cmp    dh,0x83
    12fc:	78 1a                	js     1318 <_Z16buildStringArrayPcj+0x18>
    12fe:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    1301:	14 24                	adc    al,0x24
    1303:	0c ff                	or     al,0xff
    1305:	ff                   	(bad)
    1306:	ff                   	(bad)
    1307:	ff 1a                	call   FWORD PTR [rdx]
    1309:	17                   	(bad)
    130a:	16                   	(bad)
    130b:	0c ff                	or     al,0xff
    130d:	ff                   	(bad)
    130e:	ff                   	(bad)
    130f:	ff 1a                	call   FWORD PTR [rdx]
    1311:	16                   	(bad)
    1312:	1f                   	(bad)
    1313:	23 20                	and    esp,DWORD PTR [rax]
    1315:	25 21 9f 00 02       	and    eax,0x2009f21
	...
    1322:	00 00                	add    BYTE PTR [rax],al
    1324:	01 01                	add    DWORD PTR [rcx],eax
    1326:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    1329:	01 c8                	add    eax,ecx
    132b:	01 01                	add    DWORD PTR [rcx],eax
    132d:	51                   	push   rcx
    132e:	04 d9                	add    al,0xd9
    1330:	01 de                	add    esi,ebx
    1332:	01 01                	add    DWORD PTR [rcx],eax
    1334:	50                   	push   rax
    1335:	04 de                	add    al,0xde
    1337:	01 e1                	add    ecx,esp
    1339:	01 01                	add    DWORD PTR [rcx],eax
    133b:	51                   	push   rcx
    133c:	04 ee                	add    al,0xee
    133e:	01 f3                	add    ebx,esi
    1340:	01 01                	add    DWORD PTR [rcx],eax
    1342:	50                   	push   rax
    1343:	04 f3                	add    al,0xf3
    1345:	01 f6                	add    esi,esi
    1347:	01 01                	add    DWORD PTR [rcx],eax
    1349:	51                   	push   rcx
    134a:	04 83                	add    al,0x83
    134c:	02 83 02 01 50 04    	add    al,BYTE PTR [rbx+0x4500102]
    1352:	83 02 85             	add    DWORD PTR [rdx],0xffffff85
    1355:	02 16                	add    dl,BYTE PTR [rsi]
    1357:	70 00                	jo     1359 <_Z16buildStringArrayPcj+0x59>
    1359:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff01126b <_end+0xffffffffff00b253>
    135f:	00 1a                	add    BYTE PTR [rdx],bl
    1361:	70 00                	jo     1363 <_Z16buildStringArrayPcj+0x63>
    1363:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    1366:	80 fe 83             	cmp    dh,0x83
    1369:	78 1a                	js     1385 <_Z16buildStringArrayPcj+0x85>
    136b:	21 9f 00 11 06 00    	and    DWORD PTR [rdi+0x61100],ebx
    1371:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 1b77 <_Z25_mm_crc32UnrollHashString8string_t+0x7>
	...
    1383:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    1386:	07                   	(bad)
    1387:	d5 07 01 55 04       	{rex2 0x7} add DWORD PTR [r13+0x4],r10d
    138c:	d5 07 a7             	(bad)
    138f:	0b 01                	or     eax,DWORD PTR [rcx]
    1391:	53                   	push   rbx
    1392:	04 a7                	add    al,0xa7
    1394:	0b b4 0b 04 a3 01 55 	or     esi,DWORD PTR [rbx+rcx*1+0x5501a304]
    139b:	9f                   	lahf
    139c:	04 b4                	add    al,0xb4
    139e:	0b ce                	or     ecx,esi
    13a0:	0b 01                	or     eax,DWORD PTR [rcx]
    13a2:	55                   	push   rbp
    13a3:	04 ce                	add    al,0xce
    13a5:	0b d3                	or     edx,ebx
    13a7:	0b 04 a3             	or     eax,DWORD PTR [rbx+riz*4]
    13aa:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    13ad:	00 02                	add    BYTE PTR [rdx],al
    13af:	00 00                	add    BYTE PTR [rax],al
    13b1:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
    13b4:	08 aa 08 02 30 9f    	or     BYTE PTR [rdx-0x60cffdf8],ch
    13ba:	04 aa                	add    al,0xaa
    13bc:	08 cc                	or     ah,cl
    13be:	08 01                	or     BYTE PTR [rcx],al
    13c0:	5c                   	pop    rsp
    13c1:	00 01                	add    BYTE PTR [rcx],al
    13c3:	00 04 aa             	add    BYTE PTR [rdx+rbp*4],al
    13c6:	08 c2                	or     dl,al
    13c8:	08 0a                	or     BYTE PTR [rdx],cl
    13ca:	03 19                	add    ebx,DWORD PTR [rcx]
    13cc:	41 00 00             	add    BYTE PTR [r8],al
    13cf:	00 00                	add    BYTE PTR [rax],al
    13d1:	00 00                	add    BYTE PTR [rax],al
    13d3:	9f                   	lahf
    13d4:	00 02                	add    BYTE PTR [rdx],al
    13d6:	00 00                	add    BYTE PTR [rax],al
    13d8:	00 00                	add    BYTE PTR [rax],al
    13da:	00 00                	add    BYTE PTR [rax],al
    13dc:	02 04 e9             	add    al,BYTE PTR [rcx+rbp*8]
    13df:	08 fa                	or     dl,bh
    13e1:	08 02                	or     BYTE PTR [rdx],al
    13e3:	30 9f 04 fa 08 8f    	xor    BYTE PTR [rdi-0x70f705fc],bl
    13e9:	09 01                	or     DWORD PTR [rcx],eax
    13eb:	5c                   	pop    rsp
    13ec:	04 8f                	add    al,0x8f
    13ee:	09 93 09 01 50 04    	or     DWORD PTR [rbx+0x4500109],edx
    13f4:	93                   	xchg   ebx,eax
    13f5:	09 9f 09 03 7c 7f    	or     DWORD PTR [rdi+0x7f7c0309],ebx
    13fb:	9f                   	lahf
    13fc:	00 01                	add    BYTE PTR [rcx],al
    13fe:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    1401:	08 9f 09 0a 03 19    	or     BYTE PTR [rdi+0x19030a09],bl
    1407:	41 00 00             	add    BYTE PTR [r8],al
    140a:	00 00                	add    BYTE PTR [rax],al
    140c:	00 00                	add    BYTE PTR [rax],al
    140e:	9f                   	lahf
    140f:	00 02                	add    BYTE PTR [rdx],al
    1411:	00 00                	add    BYTE PTR [rax],al
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	02 04 c2             	add    al,BYTE PTR [rdx+rax*8]
    141a:	09 d3                	or     ebx,edx
    141c:	09 02                	or     DWORD PTR [rdx],eax
    141e:	30 9f 04 d3 09 e7    	xor    BYTE PTR [rdi-0x18f62cfc],bl
    1424:	09 01                	or     DWORD PTR [rcx],eax
    1426:	5c                   	pop    rsp
    1427:	04 e7                	add    al,0xe7
    1429:	09 eb                	or     ebx,ebp
    142b:	09 01                	or     DWORD PTR [rcx],eax
    142d:	50                   	push   rax
    142e:	04 eb                	add    al,0xeb
    1430:	09 f8                	or     eax,edi
    1432:	09 03                	or     DWORD PTR [rbx],eax
    1434:	7c 7f                	jl     14b5 <_Z11hashMapCtorPFj8string_tEj+0x85>
    1436:	9f                   	lahf
    1437:	00 01                	add    BYTE PTR [rcx],al
    1439:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    143c:	09 f8                	or     eax,edi
    143e:	09 0a                	or     DWORD PTR [rdx],ecx
    1440:	03 19                	add    ebx,DWORD PTR [rcx]
    1442:	41 00 00             	add    BYTE PTR [r8],al
    1445:	00 00                	add    BYTE PTR [rax],al
    1447:	00 00                	add    BYTE PTR [rax],al
    1449:	9f                   	lahf
    144a:	00 02                	add    BYTE PTR [rdx],al
    144c:	00 00                	add    BYTE PTR [rax],al
    144e:	00 00                	add    BYTE PTR [rax],al
    1450:	00 00                	add    BYTE PTR [rax],al
    1452:	02 04 9b             	add    al,BYTE PTR [rbx+rbx*4]
    1455:	0a ac 0a 02 30 9f 04 	or     ch,BYTE PTR [rdx+rcx*1+0x49f3002]
    145c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    145d:	0a bf 0a 01 5c 04    	or     bh,BYTE PTR [rdi+0x45c010a]
    1463:	bf 0a c3 0a 01       	mov    edi,0x10ac30a
    1468:	50                   	push   rax
    1469:	04 c3                	add    al,0xc3
    146b:	0a d0                	or     dl,al
    146d:	0a 03                	or     al,BYTE PTR [rbx]
    146f:	7c 7f                	jl     14f0 <_Z17hashMapAddElementP7HashMap8string_t+0x10>
    1471:	9f                   	lahf
    1472:	00 01                	add    BYTE PTR [rcx],al
    1474:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    1477:	0a d0                	or     dl,al
    1479:	0a 0a                	or     cl,BYTE PTR [rdx]
    147b:	03 19                	add    ebx,DWORD PTR [rcx]
    147d:	41 00 00             	add    BYTE PTR [r8],al
    1480:	00 00                	add    BYTE PTR [rax],al
    1482:	00 00                	add    BYTE PTR [rax],al
    1484:	9f                   	lahf
    1485:	00 02                	add    BYTE PTR [rdx],al
    1487:	00 00                	add    BYTE PTR [rax],al
    1489:	00 00                	add    BYTE PTR [rax],al
    148b:	00 00                	add    BYTE PTR [rax],al
    148d:	02 04 ec             	add    al,BYTE PTR [rsp+rbp*8]
    1490:	0a fc                	or     bh,ah
    1492:	0a 02                	or     al,BYTE PTR [rdx]
    1494:	30 9f 04 fc 0a 8f    	xor    BYTE PTR [rdi-0x70f503fc],bl
    149a:	0b 01                	or     eax,DWORD PTR [rcx]
    149c:	56                   	push   rsi
    149d:	04 8f                	add    al,0x8f
    149f:	0b 93 0b 01 50 04    	or     edx,DWORD PTR [rbx+0x450010b]
    14a5:	93                   	xchg   ebx,eax
    14a6:	0b a1 0b 03 76 7f    	or     esp,DWORD PTR [rcx+0x7f76030b]
    14ac:	9f                   	lahf
    14ad:	00 01                	add    BYTE PTR [rcx],al
    14af:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    14b2:	0a a1 0b 0a 03 43    	or     ah,BYTE PTR [rcx+0x43030a0b]
    14b8:	41 00 00             	add    BYTE PTR [r8],al
    14bb:	00 00                	add    BYTE PTR [rax],al
    14bd:	00 00                	add    BYTE PTR [rax],al
    14bf:	9f                   	lahf
    14c0:	00 01                	add    BYTE PTR [rcx],al
    14c2:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    14c5:	07                   	(bad)
    14c6:	da 07                	fiadd  DWORD PTR [rdi]
    14c8:	0a 03                	or     al,BYTE PTR [rbx]
    14ca:	e4 40                	in     al,0x40
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	00 00                	add    BYTE PTR [rax],al
    14d0:	00 00                	add    BYTE PTR [rax],al
    14d2:	9f                   	lahf
    14d3:	00 02                	add    BYTE PTR [rdx],al
    14d5:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    14d8:	07                   	(bad)
    14d9:	f0 07                	lock (bad)
    14db:	0a 03                	or     al,BYTE PTR [rbx]
    14dd:	f2 40 00 00          	repnz rex add BYTE PTR [rax],al
    14e1:	00 00                	add    BYTE PTR [rax],al
    14e3:	00 00                	add    BYTE PTR [rax],al
    14e5:	9f                   	lahf
    14e6:	00 02                	add    BYTE PTR [rdx],al
    14e8:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    14eb:	07                   	(bad)
    14ec:	86 08                	xchg   BYTE PTR [rax],cl
    14ee:	0a 03                	or     al,BYTE PTR [rbx]
    14f0:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    14f3:	00 00                	add    BYTE PTR [rax],al
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    14fd:	86 08                	xchg   BYTE PTR [rax],cl
    14ff:	99                   	cdq
    1500:	08 0a                	or     BYTE PTR [rdx],cl
    1502:	03 0e                	add    ecx,DWORD PTR [rsi]
    1504:	41 00 00             	add    BYTE PTR [r8],al
    1507:	00 00                	add    BYTE PTR [rax],al
    1509:	00 00                	add    BYTE PTR [rax],al
    150b:	9f                   	lahf
    150c:	00 02                	add    BYTE PTR [rdx],al
    150e:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    1511:	08 d6                	or     dh,dl
    1513:	08 06                	or     BYTE PTR [rsi],al
    1515:	a0 d9 46 00 00 00 00 	movabs al,ds:0x20000000046d9
    151c:	02 00 
    151e:	04 d6                	add    al,0xd6
    1520:	08 e9                	or     cl,ch
    1522:	08 0a                	or     BYTE PTR [rdx],cl
    1524:	03 1d 41 00 00 00    	add    ebx,DWORD PTR [rip+0x41]        # 156b <_Z17hashMapAddElementP7HashMap8string_t+0x8b>
    152a:	00 00                	add    BYTE PTR [rax],al
    152c:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    1532:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1533:	09 af 09 06 a0 d9    	or     DWORD PTR [rdi-0x265ff9f7],ebp
    1539:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	02 00                	add    al,BYTE PTR [rax]
    1540:	04 af                	add    al,0xaf
    1542:	09 c2                	or     edx,eax
    1544:	09 0a                	or     DWORD PTR [rdx],ecx
    1546:	03 28                	add    ebp,DWORD PTR [rax]
    1548:	41 00 00             	add    BYTE PTR [r8],al
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	9f                   	lahf
    1550:	00 02                	add    BYTE PTR [rdx],al
    1552:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
    1555:	09 88 0a 06 a0 d9    	or     DWORD PTR [rax-0x265ff9f6],ecx
    155b:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    155e:	00 00                	add    BYTE PTR [rax],al
    1560:	02 00                	add    al,BYTE PTR [rax]
    1562:	04 88                	add    al,0x88
    1564:	0a 9b 0a 0a 03 33    	or     bl,BYTE PTR [rbx+0x33030a0a]
    156a:	41 00 00             	add    BYTE PTR [r8],al
    156d:	00 00                	add    BYTE PTR [rax],al
    156f:	00 00                	add    BYTE PTR [rax],al
    1571:	9f                   	lahf
    1572:	00 02                	add    BYTE PTR [rdx],al
    1574:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    1577:	0a e0                	or     ah,al
    1579:	0a 06                	or     al,BYTE PTR [rsi]
    157b:	a0 d9 46 00 00 00 00 	movabs al,ds:0x20000000046d9
    1582:	02 00 
    1584:	04 e0                	add    al,0xe0
    1586:	0a ec                	or     ch,ah
    1588:	0a 06                	or     al,BYTE PTR [rsi]
    158a:	a0 e8 46 00 00 00 00 	movabs al,ds:0x20000000046e8
    1591:	02 00 
    1593:	04 a6                	add    al,0xa6
    1595:	0b b4 0b 06 a0 d9 46 	or     esi,DWORD PTR [rbx+rcx*1+0x46d9a006]
	...
    15a8:	00 00                	add    BYTE PTR [rax],al
    15aa:	04 f0                	add    al,0xf0
    15ac:	06                   	(bad)
    15ad:	80 07 01             	add    BYTE PTR [rdi],0x1
    15b0:	55                   	push   rbp
    15b1:	04 80                	add    al,0x80
    15b3:	07                   	(bad)
    15b4:	8e 07                	mov    es,WORD PTR [rdi]
    15b6:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    15b9:	8e 07                	mov    es,WORD PTR [rdi]
    15bb:	8f 07                	pop    QWORD PTR [rdi]
    15bd:	04 a3                	add    al,0xa3
    15bf:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    15c2:	04 8f                	add    al,0x8f
    15c4:	07                   	(bad)
    15c5:	a9 07 01 55 04       	test   eax,0x4550107
    15ca:	a9 07 ae 07 04       	test   eax,0x407ae07
    15cf:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    15d6:	00 00 
	...
    15e0:	00 00                	add    BYTE PTR [rax],al
    15e2:	04 90                	add    al,0x90
    15e4:	04 bb                	add    al,0xbb
    15e6:	04 01                	add    al,0x1
    15e8:	55                   	push   rbp
    15e9:	04 bb                	add    al,0xbb
    15eb:	04 b5                	add    al,0xb5
    15ed:	05 01 5c 04 b5       	add    eax,0xb5045c01
    15f2:	05 b8 05 04 a3       	add    eax,0xa30405b8
    15f7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    15fa:	04 b8                	add    al,0xb8
    15fc:	05 ca 05 01 5c       	add    eax,0x5c0105ca
    1601:	04 ca                	add    al,0xca
    1603:	05 cd 05 04 a3       	add    eax,0xa30405cd
    1608:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    160b:	04 cd                	add    al,0xcd
    160d:	05 e7 05 01 55       	add    eax,0x550105e7
    1612:	04 e7                	add    al,0xe7
    1614:	05 ec 05 04 a3       	add    eax,0xa30405ec
    1619:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    1624:	00 00                	add    BYTE PTR [rax],al
    1626:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1629:	04 b0                	add    al,0xb0
    162b:	04 06                	add    al,0x6
    162d:	54                   	push   rsp
    162e:	93                   	xchg   ebx,eax
    162f:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1632:	08 04 b0             	or     BYTE PTR [rax+rsi*4],al
    1635:	04 bb                	add    al,0xbb
    1637:	04 06                	add    al,0x6
    1639:	5d                   	pop    rbp
    163a:	93                   	xchg   ebx,eax
    163b:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    163e:	08 04 cb             	or     BYTE PTR [rbx+rcx*8],al
    1641:	04 dd                	add    al,0xdd
    1643:	04 06                	add    al,0x6
    1645:	5d                   	pop    rbp
    1646:	93                   	xchg   ebx,eax
    1647:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    164a:	08 04 b8             	or     BYTE PTR [rax+rdi*4],al
    164d:	05 cc 05 06 5d       	add    eax,0x5d0605cc
    1652:	93                   	xchg   ebx,eax
    1653:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1656:	08 04 cd 05 d9 05 06 	or     BYTE PTR [rcx*8+0x605d905],al
    165d:	54                   	push   rsp
    165e:	93                   	xchg   ebx,eax
    165f:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1662:	08 00                	or     BYTE PTR [rax],al
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	00 00                	add    BYTE PTR [rax],al
    1668:	00 00                	add    BYTE PTR [rax],al
    166a:	04 ef                	add    al,0xef
    166c:	04 b3                	add    al,0xb3
    166e:	05 01 56 04 b3       	add    eax,0xb3045601
    1673:	05 b8 05 01 50       	add    eax,0x500105b8
    1678:	04 b8                	add    al,0xb8
    167a:	05 cd 05 02 30       	add    eax,0x300205cd
    167f:	9f                   	lahf
    1680:	00 00                	add    BYTE PTR [rax],al
    1682:	00 00                	add    BYTE PTR [rax],al
    1684:	00 04 8f             	add    BYTE PTR [rdi+rcx*4],al
    1687:	05 93 05 01 54       	add    eax,0x54010593
    168c:	04 93                	add    al,0x93
    168e:	05 b8 05 01 55       	add    eax,0x550105b8
    1693:	00 01                	add    BYTE PTR [rcx],al
    1695:	00 00                	add    BYTE PTR [rax],al
    1697:	00 04 8f             	add    BYTE PTR [rdi+rcx*4],al
    169a:	05 9a 05 01 51       	add    eax,0x5101059a
    169f:	04 9a                	add    al,0x9a
    16a1:	05 a2 05 05 72       	add    eax,0x720505a2
    16a6:	00 74 00 22          	add    BYTE PTR [rax+rax*1+0x22],dh
    16aa:	00 02                	add    BYTE PTR [rdx],al
    16ac:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    16af:	04 bb                	add    al,0xbb
    16b1:	04 05                	add    al,0x5
    16b3:	54                   	push   rsp
    16b4:	93                   	xchg   ebx,eax
    16b5:	08 93 08 00 02 00    	or     BYTE PTR [rbx+0x20008],dl
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	04 b0                	add    al,0xb0
    16bf:	04 bb                	add    al,0xbb
    16c1:	04 01                	add    al,0x1
    16c3:	55                   	push   rbp
    16c4:	04 bb                	add    al,0xbb
    16c6:	04 ef                	add    al,0xef
    16c8:	04 01                	add    al,0x1
    16ca:	5c                   	pop    rsp
    16cb:	00 00                	add    BYTE PTR [rax],al
    16cd:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    16d0:	04 ef                	add    al,0xef
    16d2:	04 01                	add    al,0x1
    16d4:	56                   	push   rsi
    16d5:	00 00                	add    BYTE PTR [rax],al
    16d7:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    16da:	04 dd                	add    al,0xdd
    16dc:	04 08                	add    al,0x8
    16de:	70 00                	jo     16e0 <_Z17hashMapAddElementP7HashMap8string_t+0x200>
    16e0:	73 00                	jae    16e2 <_Z17hashMapAddElementP7HashMap8string_t+0x202>
    16e2:	22 23                	and    ah,BYTE PTR [rbx]
    16e4:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    16ea:	d4                   	(bad)
    16eb:	04 de                	add    al,0xde
    16ed:	04 06                	add    al,0x6
    16ef:	a0 22 42 00 00 00 00 	movabs al,ds:0x4222
    16f6:	00 00 
	...
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	04 90                	add    al,0x90
    1708:	01 ad 01 01 55 04    	add    DWORD PTR [rbp+0x4550101],ebp
    170e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    170f:	01 f5                	add    ebp,esi
    1711:	02 01                	add    al,BYTE PTR [rcx]
    1713:	56                   	push   rsi
    1714:	04 f5                	add    al,0xf5
    1716:	02 fc                	add    bh,ah
    1718:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    171b:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    171e:	04 fc                	add    al,0xfc
    1720:	02 d5                	add    dl,ch
    1722:	03 01                	add    eax,DWORD PTR [rcx]
    1724:	56                   	push   rsi
    1725:	04 d5                	add    al,0xd5
    1727:	03 da                	add    ebx,edx
    1729:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
    172c:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    172f:	04 da                	add    al,0xda
    1731:	03 e4                	add    esp,esp
    1733:	03 01                	add    eax,DWORD PTR [rcx]
    1735:	56                   	push   rsi
    1736:	04 e4                	add    al,0xe4
    1738:	03 fe                	add    edi,esi
    173a:	03 01                	add    eax,DWORD PTR [rcx]
    173c:	55                   	push   rbp
    173d:	04 fe                	add    al,0xfe
    173f:	03 83 04 04 a3 01    	add    eax,DWORD PTR [rbx+0x1a30404]
    1745:	55                   	push   rbp
    1746:	9f                   	lahf
	...
    174f:	00 00                	add    BYTE PTR [rax],al
    1751:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1754:	01 b0 01 06 54 93    	add    DWORD PTR [rax-0x6cabf9ff],esi
    175a:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    175d:	08 04 b0             	or     BYTE PTR [rax+rsi*4],al
    1760:	01 b3 01 06 5c 93    	add    DWORD PTR [rbx-0x6ca3f9ff],esi
    1766:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1769:	08 04 b3             	or     BYTE PTR [rbx+rsi*4],al
    176c:	01 81 02 06 5c 93    	add    DWORD PTR [rcx-0x6ca3f9fe],eax
    1772:	08 5d 93             	or     BYTE PTR [rbp-0x6d],bl
    1775:	08 04 fc             	or     BYTE PTR [rsp+rdi*8],al
    1778:	02 d7                	add    dl,bh
    177a:	03 06                	add    eax,DWORD PTR [rsi]
    177c:	5c                   	pop    rsp
    177d:	93                   	xchg   ebx,eax
    177e:	08 5d 93             	or     BYTE PTR [rbp-0x6d],bl
    1781:	08 04 e4             	or     BYTE PTR [rsp+riz*8],al
    1784:	03 f0                	add    esi,eax
    1786:	03 06                	add    eax,DWORD PTR [rsi]
    1788:	54                   	push   rsp
    1789:	93                   	xchg   ebx,eax
    178a:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    178d:	08 00                	or     BYTE PTR [rax],al
    178f:	00 00                	add    BYTE PTR [rax],al
    1791:	00 00                	add    BYTE PTR [rax],al
    1793:	00 00                	add    BYTE PTR [rax],al
    1795:	04 fc                	add    al,0xfc
    1797:	02 89 03 02 30 9f    	add    cl,BYTE PTR [rcx-0x60cffdfd]
    179d:	04 89                	add    al,0x89
    179f:	03 8d 03 01 53 04    	add    ecx,DWORD PTR [rbp+0x4530103]
    17a5:	8d 03                	lea    eax,[rbx]
    17a7:	bd 03 01 54 00       	mov    ebp,0x540103
    17ac:	02 00                	add    al,BYTE PTR [rax]
    17ae:	04 b3                	add    al,0xb3
    17b0:	01 be 01 05 54 93    	add    DWORD PTR [rsi-0x6cabfaff],edi
    17b6:	08 93 08 00 00 00    	or     BYTE PTR [rbx+0x8],dl
    17bc:	01 00                	add    DWORD PTR [rax],eax
    17be:	00 00                	add    BYTE PTR [rax],al
    17c0:	04 b5                	add    al,0xb5
    17c2:	01 be 01 02 75 00    	add    DWORD PTR [rsi+0x750201],edi
    17c8:	04 be                	add    al,0xbe
    17ca:	01 c3                	add    ebx,eax
    17cc:	01 05 75 00 73 00    	add    DWORD PTR [rip+0x730075],eax        # 731847 <_end+0x72b82f>
    17d2:	22 04 c3             	and    al,BYTE PTR [rbx+rax*8]
    17d5:	01 cb                	add    ebx,ecx
    17d7:	01 01                	add    DWORD PTR [rcx],eax
    17d9:	53                   	push   rbx
    17da:	00 00                	add    BYTE PTR [rax],al
    17dc:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
    17df:	01 d7                	add    edi,edx
    17e1:	01 08                	add    DWORD PTR [rax],ecx
    17e3:	75 00                	jne    17e5 <_Z17hashMapPopElementP7HashMap8string_t+0x55>
    17e5:	73 00                	jae    17e7 <_Z17hashMapPopElementP7HashMap8string_t+0x57>
    17e7:	22 23                	and    ah,BYTE PTR [rbx]
    17e9:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    17ef:	cf                   	iret
    17f0:	01 dc                	add    esp,ebx
    17f2:	01 06                	add    DWORD PTR [rsi],eax
    17f4:	a0 85 43 00 00 00 00 	movabs al,ds:0x1000000004385
    17fb:	01 00 
    17fd:	00 00                	add    BYTE PTR [rax],al
    17ff:	04 fd                	add    al,0xfd
    1801:	01 ef                	add    edi,ebp
    1803:	02 01                	add    al,BYTE PTR [rcx]
    1805:	56                   	push   rsi
    1806:	04 da                	add    al,0xda
    1808:	03 e4                	add    esp,esp
    180a:	03 01                	add    eax,DWORD PTR [rcx]
    180c:	56                   	push   rsi
    180d:	00 00                	add    BYTE PTR [rax],al
    180f:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
    1812:	02 b5 02 01 51 00    	add    dh,BYTE PTR [rbp+0x510102]
    1818:	00 00                	add    BYTE PTR [rax],al
    181a:	04 a1                	add    al,0xa1
    181c:	02 b6 02 02 30 9f    	add    dh,BYTE PTR [rsi-0x60cffdfe]
    1822:	00 00                	add    BYTE PTR [rax],al
    1824:	00 00                	add    BYTE PTR [rax],al
    1826:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
    1829:	02 a8 02 06 70 00    	add    ch,BYTE PTR [rax+0x700602]
    182f:	71 00                	jno    1831 <_Z17hashMapPopElementP7HashMap8string_t+0xa1>
    1831:	22 9f 04 a8 02 b5    	and    bl,BYTE PTR [rdi-0x4afd57fc]
    1837:	02 01                	add    al,BYTE PTR [rcx]
    1839:	55                   	push   rbp
    183a:	00 00                	add    BYTE PTR [rax],al
    183c:	00 00                	add    BYTE PTR [rax],al
    183e:	01 01                	add    DWORD PTR [rcx],eax
    1840:	00 00                	add    BYTE PTR [rax],al
    1842:	00 00                	add    BYTE PTR [rax],al
    1844:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
    1847:	02 dd                	add    bl,ch
    1849:	02 01                	add    al,BYTE PTR [rcx]
    184b:	50                   	push   rax
    184c:	04 dd                	add    al,0xdd
    184e:	02 e7                	add    ah,bh
    1850:	02 01                	add    al,BYTE PTR [rcx]
    1852:	52                   	push   rdx
    1853:	04 e7                	add    al,0xe7
    1855:	02 ef                	add    ch,bh
    1857:	02 01                	add    al,BYTE PTR [rcx]
    1859:	50                   	push   rax
    185a:	04 da                	add    al,0xda
    185c:	03 de                	add    ebx,esi
    185e:	03 01                	add    eax,DWORD PTR [rcx]
    1860:	50                   	push   rax
    1861:	04 de                	add    al,0xde
    1863:	03 e4                	add    esp,esp
    1865:	03 02                	add    eax,DWORD PTR [rdx]
    1867:	76 08                	jbe    1871 <_Z20hashMapSearchElementP7HashMap8string_t+0x11>
    1869:	00 00                	add    BYTE PTR [rax],al
    186b:	00 00                	add    BYTE PTR [rax],al
    186d:	00 00                	add    BYTE PTR [rax],al
    186f:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    1872:	42 02 75 00          	rex.X add sil,BYTE PTR [rbp+0x0]
    1876:	04 42                	add    al,0x42
    1878:	8c 01                	mov    WORD PTR [rcx],es
    187a:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    187d:	04 8c                	add    al,0x8c
    187f:	01 8d 01 02 70 00    	add    DWORD PTR [rbp+0x700201],ecx
    1885:	00 03                	add    BYTE PTR [rbx],al
    1887:	07                   	(bad)
    1888:	07                   	(bad)
    1889:	01 01                	add    DWORD PTR [rcx],eax
    188b:	01 01                	add    DWORD PTR [rcx],eax
    188d:	00 04 75 75 02 31 9f 	add    BYTE PTR [rsi*2-0x60cefd8b],al
    1894:	04 75                	add    al,0x75
    1896:	79 02                	jns    189a <_Z20hashMapSearchElementP7HashMap8string_t+0x3a>
    1898:	32 9f 04 79 88 01    	xor    bl,BYTE PTR [rdi+0x1887904]
    189e:	02 33                	add    dh,BYTE PTR [rbx]
    18a0:	9f                   	lahf
    18a1:	04 88                	add    al,0x88
    18a3:	01 8d 01 02 34 9f    	add    DWORD PTR [rbp-0x60cbfdff],ecx
    18a9:	00 00                	add    BYTE PTR [rax],al
    18ab:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    18ae:	25 06 fa 22 11       	and    eax,0x1122fa06
    18b3:	00 00                	add    BYTE PTR [rax],al
    18b5:	9f                   	lahf
	...
    18c2:	00 00                	add    BYTE PTR [rax],al
    18c4:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    18c7:	05 94 06 01 55       	add    eax,0x55010694
    18cc:	04 94                	add    al,0x94
    18ce:	06                   	(bad)
    18cf:	c4                   	(bad)
    18d0:	06                   	(bad)
    18d1:	01 5c 04 c4          	add    DWORD PTR [rsp+rax*1-0x3c],ebx
    18d5:	06                   	(bad)
    18d6:	c7 06 04 a3 01 55    	mov    DWORD PTR [rsi],0x5501a304
    18dc:	9f                   	lahf
    18dd:	04 c7                	add    al,0xc7
    18df:	06                   	(bad)
    18e0:	da 06                	fiadd  DWORD PTR [rsi]
    18e2:	01 5c 04 da          	add    DWORD PTR [rsp+rax*1-0x26],ebx
    18e6:	06                   	(bad)
    18e7:	dd 06                	fld    QWORD PTR [rsi]
    18e9:	04 a3                	add    al,0xa3
    18eb:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    18ee:	04 dd                	add    al,0xdd
    18f0:	06                   	(bad)
    18f1:	e1 06                	loope  18f9 <_Z11hashMapDtorP7HashMap+0x29>
    18f3:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    18f6:	e1 06                	loope  18fe <_Z11hashMapDtorP7HashMap+0x2e>
    18f8:	e2 06                	loop   1900 <_Z11hashMapDtorP7HashMap+0x30>
    18fa:	04 a3                	add    al,0xa3
    18fc:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    1907:	00 00                	add    BYTE PTR [rax],al
    1909:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    190c:	05 8c 06 06 54       	add    eax,0x5406068c
    1911:	93                   	xchg   ebx,eax
    1912:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1915:	08 04 8c             	or     BYTE PTR [rsp+rcx*4],al
    1918:	06                   	(bad)
    1919:	94                   	xchg   esp,eax
    191a:	06                   	(bad)
    191b:	06                   	(bad)
    191c:	5d                   	pop    rbp
    191d:	93                   	xchg   ebx,eax
    191e:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1921:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    1924:	06                   	(bad)
    1925:	b5 06                	mov    ch,0x6
    1927:	06                   	(bad)
    1928:	5d                   	pop    rbp
    1929:	93                   	xchg   ebx,eax
    192a:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    192d:	08 04 c7             	or     BYTE PTR [rdi+rax*8],al
    1930:	06                   	(bad)
    1931:	dc 06                	fadd   QWORD PTR [rsi]
    1933:	06                   	(bad)
    1934:	5d                   	pop    rbp
    1935:	93                   	xchg   ebx,eax
    1936:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1939:	08 04 dd 06 e1 06 06 	or     BYTE PTR [rbx*8+0x606e106],al
    1940:	54                   	push   rsp
    1941:	93                   	xchg   ebx,eax
    1942:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1945:	08 00                	or     BYTE PTR [rax],al
    1947:	00 00                	add    BYTE PTR [rax],al
    1949:	00 00                	add    BYTE PTR [rax],al
    194b:	00 00                	add    BYTE PTR [rax],al
    194d:	04 8e                	add    al,0x8e
    194f:	06                   	(bad)
    1950:	c2 06 01             	ret    0x106
    1953:	56                   	push   rsi
    1954:	04 c2                	add    al,0xc2
    1956:	06                   	(bad)
    1957:	c7 06 01 50 04 c7    	mov    DWORD PTR [rsi],0xc7045001
    195d:	06                   	(bad)
    195e:	d8 06                	fadd   DWORD PTR [rsi]
    1960:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
    1963:	00 00                	add    BYTE PTR [rax],al
    1965:	04 ac                	add    al,0xac
    1967:	06                   	(bad)
    1968:	b5 06                	mov    ch,0x6
    196a:	08 70 00             	or     BYTE PTR [rax+0x0],dh
    196d:	73 00                	jae    196f <_Z17hashMapDebugPrintP7HashMap+0x2f>
    196f:	22 23                	and    ah,BYTE PTR [rbx]
    1971:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    1977:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1978:	06                   	(bad)
    1979:	b6 06                	mov    dh,0x6
    197b:	06                   	(bad)
    197c:	a0 3d 41 00 00 00 00 	movabs al,ds:0x18c00000000413d
    1983:	8c 01 
    1985:	00 00                	add    BYTE PTR [rax],al
    1987:	05 00 08 00 00       	add    eax,0x800
	...
    1998:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    199b:	02 aa 02 01 55 04    	add    ch,BYTE PTR [rdx+0x4550102]
    19a1:	aa                   	stos   BYTE PTR es:[rdi],al
    19a2:	02 d0                	add    dl,al
    19a4:	02 01                	add    al,BYTE PTR [rcx]
    19a6:	56                   	push   rsi
    19a7:	04 d0                	add    al,0xd0
    19a9:	02 d3                	add    dl,bl
    19ab:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    19ae:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    19b1:	04 d3                	add    al,0xd3
    19b3:	02 ed                	add    ch,ch
    19b5:	02 01                	add    al,BYTE PTR [rcx]
    19b7:	55                   	push   rbp
    19b8:	04 ed                	add    al,0xed
    19ba:	02 f2                	add    dh,dl
    19bc:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    19bf:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    19ca:	00 00                	add    BYTE PTR [rax],al
    19cc:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    19cf:	02 aa 02 01 54 04    	add    ch,BYTE PTR [rdx+0x4540102]
    19d5:	aa                   	stos   BYTE PTR es:[rdi],al
    19d6:	02 d2                	add    dl,dl
    19d8:	02 01                	add    al,BYTE PTR [rcx]
    19da:	5c                   	pop    rsp
    19db:	04 d2                	add    al,0xd2
    19dd:	02 d3                	add    dl,bl
    19df:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    19e2:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    19e6:	d3 02                	rol    DWORD PTR [rdx],cl
    19e8:	e6 02                	out    0x2,al
    19ea:	01 54 04 e6          	add    DWORD PTR [rsp+rax*1-0x1a],edx
    19ee:	02 f2                	add    dh,dl
    19f0:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    19f3:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    19f7:	00 00                	add    BYTE PTR [rax],al
    19f9:	00 00                	add    BYTE PTR [rax],al
    19fb:	04 a3                	add    al,0xa3
    19fd:	02 bc 02 01 55 04 c1 	add    bh,BYTE PTR [rdx+rax*1-0x3efbaaff]
    1a04:	02 d3                	add    dl,bl
    1a06:	02 01                	add    al,BYTE PTR [rcx]
    1a08:	55                   	push   rbp
    1a09:	00 00                	add    BYTE PTR [rax],al
    1a0b:	00 00                	add    BYTE PTR [rax],al
    1a0d:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    1a10:	02 aa 02 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfe]
    1a16:	04 aa                	add    al,0xaa
    1a18:	02 cc                	add    cl,ah
    1a1a:	02 01                	add    al,BYTE PTR [rcx]
    1a1c:	53                   	push   rbx
    1a1d:	00 01                	add    BYTE PTR [rcx],al
    1a1f:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1a22:	02 bd 02 02 3a 9f    	add    bh,BYTE PTR [rbp-0x60c5fdfe]
    1a28:	00 01                	add    BYTE PTR [rcx],al
    1a2a:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1a2d:	02 bc 02 01 55 00 00 	add    bh,BYTE PTR [rdx+rax*1+0x5501]
	...
    1a40:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1a43:	64 01 55 04          	add    DWORD PTR fs:[rbp+0x4],edx
    1a47:	64 97                	fs xchg edi,eax
    1a49:	01 01                	add    DWORD PTR [rcx],eax
    1a4b:	53                   	push   rbx
    1a4c:	04 97                	add    al,0x97
    1a4e:	01 d6                	add    esi,edx
    1a50:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1a53:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1a56:	04 d6                	add    al,0xd6
    1a58:	01 e2                	add    edx,esp
    1a5a:	01 01                	add    DWORD PTR [rcx],eax
    1a5c:	53                   	push   rbx
    1a5d:	04 e2                	add    al,0xe2
    1a5f:	01 e4                	add    esp,esp
    1a61:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1a64:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1a67:	04 e4                	add    al,0xe4
    1a69:	01 fe                	add    esi,edi
    1a6b:	01 01                	add    DWORD PTR [rcx],eax
    1a6d:	55                   	push   rbp
    1a6e:	04 fe                	add    al,0xfe
    1a70:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1a76:	55                   	push   rbp
    1a77:	9f                   	lahf
	...
    1a80:	00 00                	add    BYTE PTR [rax],al
    1a82:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1a85:	3a 01                	cmp    al,BYTE PTR [rcx]
    1a87:	54                   	push   rsp
    1a88:	04 3a                	add    al,0x3a
    1a8a:	82                   	(bad)
    1a8b:	01 01                	add    DWORD PTR [rcx],eax
    1a8d:	5c                   	pop    rsp
    1a8e:	04 82                	add    al,0x82
    1a90:	01 e4                	add    esp,esp
    1a92:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1a95:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1a99:	e4 01                	in     al,0x1
    1a9b:	f7 01 01 54 04 f7    	test   DWORD PTR [rcx],0xf7045401
    1aa1:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1aa7:	54                   	push   rsp
    1aa8:	9f                   	lahf
    1aa9:	00 00                	add    BYTE PTR [rax],al
    1aab:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1aae:	b2 01                	mov    dl,0x1
    1ab0:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    1ab3:	00 00                	add    BYTE PTR [rax],al
    1ab5:	00 00                	add    BYTE PTR [rax],al
    1ab7:	04 82                	add    al,0x82
    1ab9:	01 93 01 01 50 04    	add    DWORD PTR [rbx+0x4500101],edx
    1abf:	93                   	xchg   ebx,eax
    1ac0:	01 b2 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],esi
    1ac6:	00 00                	add    BYTE PTR [rax],al
    1ac8:	00 00                	add    BYTE PTR [rax],al
    1aca:	04 97                	add    al,0x97
    1acc:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1ad2:	a9 01 b2 01 01       	test   eax,0x101b201
    1ad7:	53                   	push   rbx
    1ad8:	00 01                	add    BYTE PTR [rcx],al
    1ada:	00 04 7a             	add    BYTE PTR [rdx+rdi*2],al
    1add:	82                   	(bad)
    1ade:	01 02                	add    DWORD PTR [rdx],eax
    1ae0:	30 9f 00 01 00 04    	xor    BYTE PTR [rdi+0x4000100],bl
    1ae6:	7a 82                	jp     1a6a <_Z15crc32HashString8string_t+0x6a>
    1ae8:	01 01                	add    DWORD PTR [rcx],eax
    1aea:	53                   	push   rbx
    1aeb:	00 01                	add    BYTE PTR [rcx],al
    1aed:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1af0:	01 aa 01 01 5d 00    	add    DWORD PTR [rdx+0x5d0101],ebp
    1af6:	01 00                	add    DWORD PTR [rax],eax
    1af8:	00 00                	add    BYTE PTR [rax],al
    1afa:	04 9c                	add    al,0x9c
    1afc:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1b02:	a9 01 aa 01 01       	test   eax,0x101aa01
    1b07:	53                   	push   rbx
    1b08:	00 01                	add    BYTE PTR [rcx],al
    1b0a:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1b0d:	01 aa 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],ebp
    1b13:	dd 12                	fst    QWORD PTR [rdx]
    1b15:	00 00                	add    BYTE PTR [rax],al
    1b17:	05 00 08 00 00       	add    eax,0x800
	...
    1b28:	00 00                	add    BYTE PTR [rax],al
    1b2a:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1b2d:	08 af 09 01 55 04    	or     BYTE PTR [rdi+0x4550109],ch
    1b33:	af                   	scas   eax,DWORD PTR es:[rdi]
    1b34:	09 80 10 03 76 f8    	or     DWORD PTR [rax-0x789fcf0],eax
    1b3a:	7e 04                	jle    1b40 <_Z19_mm_crc32HashString8string_t+0x20>
    1b3c:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1b3f:	10 08                	adc    BYTE PTR [rax],cl
    1b41:	91                   	xchg   ecx,eax
    1b42:	70 09                	jo     1b4d <_Z19_mm_crc32HashString8string_t+0x2d>
    1b44:	e0 1a                	loopne 1b60 <_Z19_mm_crc32HashString8string_t+0x40>
    1b46:	08 98 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],bl
    1b4c:	fe                   	(bad)
    1b4d:	10 03                	adc    BYTE PTR [rbx],al
    1b4f:	76 f8                	jbe    1b49 <_Z19_mm_crc32HashString8string_t+0x29>
    1b51:	7e 04                	jle    1b57 <_Z19_mm_crc32HashString8string_t+0x37>
    1b53:	fe                   	(bad)
    1b54:	10 98 11 01 55 04    	adc    BYTE PTR [rax+0x4550111],bl
    1b5a:	98                   	cwde
    1b5b:	11 b6 11 03 76 f8    	adc    DWORD PTR [rsi-0x789fcef],esi
    1b61:	7e 00                	jle    1b63 <_Z19_mm_crc32HashString8string_t+0x43>
	...
    1b6b:	00 00                	add    BYTE PTR [rax],al
    1b6d:	04 e0                	add    al,0xe0
    1b6f:	08 c0                	or     al,al
    1b71:	09 01                	or     DWORD PTR [rcx],eax
    1b73:	54                   	push   rsp
    1b74:	04 c0                	add    al,0xc0
    1b76:	09 da                	or     edx,ebx
    1b78:	09 01                	or     DWORD PTR [rcx],eax
    1b7a:	5f                   	pop    rdi
    1b7b:	04 da                	add    al,0xda
    1b7d:	09 fe                	or     esi,edi
    1b7f:	10 04 a3             	adc    BYTE PTR [rbx+riz*4],al
    1b82:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1b86:	fe                   	(bad)
    1b87:	10 91 11 01 54 04    	adc    BYTE PTR [rcx+0x4540111],dl
    1b8d:	91                   	xchg   ecx,eax
    1b8e:	11 b6 11 04 a3 01    	adc    DWORD PTR [rsi+0x1a30411],esi
    1b94:	54                   	push   rsp
    1b95:	9f                   	lahf
	...
    1b9e:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1ba1:	08 b6 09 06 51 93    	or     BYTE PTR [rsi-0x6caef9f7],dh
    1ba7:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1baa:	08 04 b9             	or     BYTE PTR [rcx+rdi*4],al
    1bad:	09 d7                	or     edi,edx
    1baf:	09 06                	or     DWORD PTR [rsi],eax
    1bb1:	5d                   	pop    rbp
    1bb2:	93                   	xchg   ebx,eax
    1bb3:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1bb6:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
    1bb9:	09 9a 0a 06 5d 93    	or     DWORD PTR [rdx-0x6ca2f9f6],ebx
    1bbf:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1bc2:	08 04 fe             	or     BYTE PTR [rsi+rdi*8],al
    1bc5:	10 8a 11 06 51 93    	adc    BYTE PTR [rdx-0x6caef9ef],cl
    1bcb:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1bce:	08 00                	or     BYTE PTR [rax],al
	...
    1bdc:	04 e0                	add    al,0xe0
    1bde:	08 c0                	or     al,al
    1be0:	09 01                	or     DWORD PTR [rcx],eax
    1be2:	58                   	pop    rax
    1be3:	04 c0                	add    al,0xc0
    1be5:	09 80 10 03 76 8c    	or     DWORD PTR [rax-0x7389fcf0],eax
    1beb:	7f 04                	jg     1bf1 <_Z17murmur2HashString8string_t+0x41>
    1bed:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1bf0:	10 08                	adc    BYTE PTR [rax],cl
    1bf2:	91                   	xchg   ecx,eax
    1bf3:	70 09                	jo     1bfe <_Z17murmur2HashString8string_t+0x4e>
    1bf5:	e0 1a                	loopne 1c11 <_Z17murmur2HashString8string_t+0x61>
    1bf7:	08 84 1c 04 8b 10 fe 	or     BYTE PTR [rsp+rbx*1-0x1ef74fc],al
    1bfe:	10 03                	adc    BYTE PTR [rbx],al
    1c00:	76 8c                	jbe    1b8e <_Z25_mm_crc32UnrollHashString8string_t+0x1e>
    1c02:	7f 04                	jg     1c08 <_Z17murmur2HashString8string_t+0x58>
    1c04:	fe                   	(bad)
    1c05:	10 9c 11 01 58 04 9c 	adc    BYTE PTR [rcx+rdx*1-0x63fba7ff],bl
    1c0c:	11 b6 11 03 76 8c    	adc    DWORD PTR [rsi-0x7389fcef],esi
    1c12:	7f 00                	jg     1c14 <_Z17murmur2HashString8string_t+0x64>
	...
    1c20:	04 94                	add    al,0x94
    1c22:	0a 97 0a 01 50 04    	or     dl,BYTE PTR [rdi+0x450010a]
    1c28:	97                   	xchg   edi,eax
    1c29:	0a b1 0a 01 5f 04    	or     dh,BYTE PTR [rcx+0x45f010a]
    1c2f:	b1 0a                	mov    cl,0xa
    1c31:	80 10 03             	adc    BYTE PTR [rax],0x3
    1c34:	76 98                	jbe    1bce <_Z17murmur2HashString8string_t+0x1e>
    1c36:	7f 04                	jg     1c3c <_Z17murmur2HashString8string_t+0x8c>
    1c38:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1c3b:	10 08                	adc    BYTE PTR [rax],cl
    1c3d:	91                   	xchg   ecx,eax
    1c3e:	70 09                	jo     1c49 <_Z17murmur2HashString8string_t+0x99>
    1c40:	e0 1a                	loopne 1c5c <_Z17murmur2HashString8string_t+0xac>
    1c42:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    1c45:	04 8b                	add    al,0x8b
    1c47:	10 fe                	adc    dh,bh
    1c49:	10 03                	adc    BYTE PTR [rbx],al
    1c4b:	76 98                	jbe    1be5 <_Z17murmur2HashString8string_t+0x35>
    1c4d:	7f 04                	jg     1c53 <_Z17murmur2HashString8string_t+0xa3>
    1c4f:	9d                   	popf
    1c50:	11 b6 11 03 76 98    	adc    DWORD PTR [rsi-0x6789fcef],esi
    1c56:	7f 00                	jg     1c58 <_Z17murmur2HashString8string_t+0xa8>
	...
    1c60:	00 00                	add    BYTE PTR [rax],al
    1c62:	04 b1                	add    al,0xb1
    1c64:	0a b1 0a 01 50 04    	or     dh,BYTE PTR [rcx+0x450010a]
    1c6a:	b1 0a                	mov    cl,0xa
    1c6c:	80 10 03             	adc    BYTE PTR [rax],0x3
    1c6f:	76 90                	jbe    1c01 <_Z17murmur2HashString8string_t+0x51>
    1c71:	7f 04                	jg     1c77 <_Z13sumHashString8string_t+0x17>
    1c73:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1c76:	10 08                	adc    BYTE PTR [rax],cl
    1c78:	91                   	xchg   ecx,eax
    1c79:	70 09                	jo     1c84 <_Z13sumHashString8string_t+0x24>
    1c7b:	e0 1a                	loopne 1c97 <_Z13sumHashString8string_t+0x37>
    1c7d:	08 80 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],al
    1c83:	fe                   	(bad)
    1c84:	10 03                	adc    BYTE PTR [rbx],al
    1c86:	76 90                	jbe    1c18 <_Z17murmur2HashString8string_t+0x68>
    1c88:	7f 04                	jg     1c8e <_Z13sumHashString8string_t+0x2e>
    1c8a:	9d                   	popf
    1c8b:	11 b6 11 03 76 90    	adc    DWORD PTR [rsi-0x6f89fcef],esi
    1c91:	7f 00                	jg     1c93 <_Z13sumHashString8string_t+0x33>
    1c93:	01 00                	add    DWORD PTR [rax],eax
    1c95:	00 00                	add    BYTE PTR [rax],al
    1c97:	04 b1                	add    al,0xb1
    1c99:	0a fe                	or     bh,dh
    1c9b:	10 06                	adc    BYTE PTR [rsi],al
    1c9d:	0c 73                	or     al,0x73
    1c9f:	99                   	cdq
    1ca0:	0f 00 9f 04 9d 11 b6 	ltr    WORD PTR [rdi-0x49ee62fc]
    1ca7:	11 06                	adc    DWORD PTR [rsi],eax
    1ca9:	0c 73                	or     al,0x73
    1cab:	99                   	cdq
    1cac:	0f 00 9f 00 01 00 00 	ltr    WORD PTR [rdi+0x100]
	...
    1cbb:	00 01                	add    BYTE PTR [rcx],al
	...
    1cc5:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1cc8:	0c b6                	or     al,0xb6
    1cca:	0c 0a                	or     al,0xa
    1ccc:	9e                   	sahf
    1ccd:	08 00                	or     BYTE PTR [rax],al
    1ccf:	00 00                	add    BYTE PTR [rax],al
    1cd1:	00 00                	add    BYTE PTR [rax],al
    1cd3:	00 00                	add    BYTE PTR [rax],al
    1cd5:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1cd8:	0c e1                	or     al,0xe1
    1cda:	0c 01                	or     al,0x1
    1cdc:	63 04 e1             	movsxd eax,DWORD PTR [rcx+riz*8]
    1cdf:	0c f0                	or     al,0xf0
    1ce1:	0c 03                	or     al,0x3
    1ce3:	76 a0                	jbe    1c85 <_Z13sumHashString8string_t+0x25>
    1ce5:	7f 04                	jg     1ceb <_Z13sumHashString8string_t+0x8b>
    1ce7:	f0 0c 8d             	lock or al,0x8d
    1cea:	0d 01 63 04 8d       	or     eax,0x8d046301
    1cef:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1cf4:	04 8b                	add    al,0x8b
    1cf6:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1cfc:	9b                   	fwait
    1cfd:	10 c5                	adc    ch,al
    1cff:	10 0a                	adc    BYTE PTR [rdx],cl
    1d01:	9e                   	sahf
    1d02:	08 00                	or     BYTE PTR [rax],al
    1d04:	00 00                	add    BYTE PTR [rax],al
    1d06:	00 00                	add    BYTE PTR [rax],al
    1d08:	00 00                	add    BYTE PTR [rax],al
    1d0a:	00 04 c5 10 fd 10 01 	add    BYTE PTR [rax*8+0x110fd10],al
    1d11:	66 04 fd             	data16 add al,0xfd
    1d14:	10 fe                	adc    dh,bh
    1d16:	10 0e                	adc    BYTE PTR [rsi],cl
    1d18:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1d19:	2e 08 00             	cs or  BYTE PTR [rax],al
    1d1c:	00 00                	add    BYTE PTR [rax],al
    1d1e:	00 00                	add    BYTE PTR [rax],al
    1d20:	00 00                	add    BYTE PTR [rax],al
    1d22:	00 12                	add    BYTE PTR [rdx],dl
    1d24:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1d2a:	11 01                	adc    DWORD PTR [rcx],eax
    1d2c:	66 04 ab             	data16 add al,0xab
    1d2f:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1d35:	7f 00                	jg     1d37 <_Z13sumHashString8string_t+0xd7>
    1d37:	01 00                	add    DWORD PTR [rax],eax
    1d39:	00 00                	add    BYTE PTR [rax],al
    1d3b:	04 f3                	add    al,0xf3
    1d3d:	0e                   	(bad)
    1d3e:	f7 0f 01 53 04 9d    	test   DWORD PTR [rdi],0x9d045301
    1d44:	11 a2 11 01 53 00    	adc    DWORD PTR [rdx+0x530111],esp
    1d4a:	00 00                	add    BYTE PTR [rax],al
    1d4c:	04 d1                	add    al,0xd1
    1d4e:	09 e1                	or     ecx,esp
    1d50:	09 02                	or     DWORD PTR [rdx],eax
    1d52:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1d58:	b1 0a                	mov    cl,0xa
    1d5a:	b1 0a                	mov    cl,0xa
    1d5c:	02 30                	add    dh,BYTE PTR [rax]
    1d5e:	9f                   	lahf
    1d5f:	00 00                	add    BYTE PTR [rax],al
    1d61:	00 00                	add    BYTE PTR [rax],al
    1d63:	00 00                	add    BYTE PTR [rax],al
    1d65:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
    1d68:	0a f1                	or     dh,cl
    1d6a:	0a 02                	or     al,BYTE PTR [rdx]
    1d6c:	30 9f 04 93 10 d4    	xor    BYTE PTR [rdi-0x2bef6cfc],bl
    1d72:	10 02                	adc    BYTE PTR [rdx],al
    1d74:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1d7a:	10 02                	adc    BYTE PTR [rdx],al
    1d7c:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1d82:	b3 0b                	mov    bl,0xb
    1d84:	b9 0b 02 52 f0       	mov    ecx,0xf052020b
    1d89:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1d8c:	04 a7                	add    al,0xa7
    1d8e:	0b b6 0b 0e 70 00    	or     esi,DWORD PTR [rsi+0x700e0b]
    1d94:	76 a8                	jbe    1d3e <_Z13sumHashString8string_t+0xde>
    1d96:	7f 06                	jg     1d9e <_Z13sumHashString8string_t+0x13e>
    1d98:	1c 0a                	sbb    al,0xa
    1d9a:	e8 03 1b 9f 93       	call   ffffffff939f38a2 <_end+0xffffffff939ed88a>
    1d9f:	08 00                	or     BYTE PTR [rax],al
    1da1:	01 00                	add    DWORD PTR [rax],eax
    1da3:	04 fe                	add    al,0xfe
    1da5:	0a fe                	or     bh,dh
    1da7:	0a 02                	or     al,BYTE PTR [rdx]
    1da9:	30 9f 00 01 08 04    	xor    BYTE PTR [rdi+0x4080100],bl
    1daf:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1db0:	0b a7 0b 06 a0 83    	or     esp,DWORD PTR [rdi-0x7c5ff9f5]
    1db6:	9d                   	popf
    1db7:	00 00                	add    BYTE PTR [rax],al
    1db9:	00 00                	add    BYTE PTR [rax],al
    1dbb:	01 08                	add    DWORD PTR [rax],ecx
    1dbd:	04 a7                	add    al,0xa7
    1dbf:	0b a7 0b 06 a0 96    	or     esp,DWORD PTR [rdi-0x695ff9f5]
    1dc5:	9d                   	popf
    1dc6:	00 00                	add    BYTE PTR [rax],al
    1dc8:	00 00                	add    BYTE PTR [rax],al
    1dca:	02 03                	add    al,BYTE PTR [rbx]
    1dcc:	04 a7                	add    al,0xa7
    1dce:	0b a7 0b 06 a0 83    	or     esp,DWORD PTR [rdi-0x7c5ff9f5]
    1dd4:	9d                   	popf
    1dd5:	00 00                	add    BYTE PTR [rax],al
    1dd7:	00 00                	add    BYTE PTR [rax],al
    1dd9:	03 05 04 a7 0b a7    	add    eax,DWORD PTR [rip+0xffffffffa70ba704]        # ffffffffa70bc4e3 <_end+0xffffffffa70b64cb>
    1ddf:	0b 06                	or     eax,DWORD PTR [rsi]
    1de1:	a0 96 9d 00 00 00 00 	movabs al,ds:0x9d96
    1de8:	00 00 
    1dea:	00 00                	add    BYTE PTR [rax],al
    1dec:	00 00                	add    BYTE PTR [rax],al
    1dee:	00 00                	add    BYTE PTR [rax],al
    1df0:	04 a2                	add    al,0xa2
    1df2:	0c b6                	or     al,0xb6
    1df4:	0c 02                	or     al,0x2
    1df6:	30 9f 04 d4 0c e1    	xor    BYTE PTR [rdi-0x1ef32bfc],bl
    1dfc:	0c 01                	or     al,0x1
    1dfe:	52                   	push   rdx
    1dff:	04 b8                	add    al,0xb8
    1e01:	10 d4                	adc    ah,dl
    1e03:	10 02                	adc    BYTE PTR [rdx],al
    1e05:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1e0b:	10 02                	adc    BYTE PTR [rdx],al
    1e0d:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1e13:	d4                   	(bad)
    1e14:	0c e2                	or     al,0xe2
    1e16:	0c 0a                	or     al,0xa
    1e18:	03 04 42             	add    eax,DWORD PTR [rdx+rax*2]
    1e1b:	00 00                	add    BYTE PTR [rax],al
    1e1d:	00 00                	add    BYTE PTR [rax],al
    1e1f:	00 00                	add    BYTE PTR [rax],al
    1e21:	9f                   	lahf
    1e22:	00 02                	add    BYTE PTR [rdx],al
    1e24:	00 00                	add    BYTE PTR [rax],al
    1e26:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1e29:	0c e1                	or     al,0xe1
    1e2b:	0c 01                	or     al,0x1
    1e2d:	55                   	push   rbp
    1e2e:	04 e1                	add    al,0xe1
    1e30:	0c e2                	or     al,0xe2
    1e32:	0c 03                	or     al,0x3
    1e34:	76 f8                	jbe    1e2e <_Z17adler32HashString8string_t+0x5e>
    1e36:	7e 00                	jle    1e38 <_Z17adler32HashString8string_t+0x68>
    1e38:	02 00                	add    al,BYTE PTR [rax]
    1e3a:	02 00                	add    al,BYTE PTR [rax]
    1e3c:	04 82                	add    al,0x82
    1e3e:	0c a2                	or     al,0xa2
    1e40:	0c 0a                	or     al,0xa
    1e42:	03 e5                	add    esp,ebp
    1e44:	41 00 00             	add    BYTE PTR [r8],al
    1e47:	00 00                	add    BYTE PTR [rax],al
    1e49:	00 00                	add    BYTE PTR [rax],al
    1e4b:	9f                   	lahf
    1e4c:	04 9b                	add    al,0x9b
    1e4e:	10 b8 10 0a 03 e5    	adc    BYTE PTR [rax-0x1afcf5f0],bh
    1e54:	41 00 00             	add    BYTE PTR [r8],al
    1e57:	00 00                	add    BYTE PTR [rax],al
    1e59:	00 00                	add    BYTE PTR [rax],al
    1e5b:	9f                   	lahf
    1e5c:	00 02                	add    BYTE PTR [rdx],al
    1e5e:	00 02                	add    BYTE PTR [rdx],al
    1e60:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1e63:	0c a2                	or     al,0xa2
    1e65:	0c 03                	or     al,0x3
    1e67:	76 f8                	jbe    1e61 <_Z13elfHashString8string_t+0x11>
    1e69:	7e 04                	jle    1e6f <_Z13elfHashString8string_t+0x1f>
    1e6b:	9b                   	fwait
    1e6c:	10 b8 10 03 76 f8    	adc    BYTE PTR [rax-0x789fcf0],bh
    1e72:	7e 00                	jle    1e74 <_Z13elfHashString8string_t+0x24>
    1e74:	01 00                	add    DWORD PTR [rax],eax
    1e76:	00 00                	add    BYTE PTR [rax],al
    1e78:	01 00                	add    DWORD PTR [rax],eax
    1e7a:	00 00                	add    BYTE PTR [rax],al
    1e7c:	00 00                	add    BYTE PTR [rax],al
    1e7e:	00 00                	add    BYTE PTR [rax],al
    1e80:	04 8d                	add    al,0x8d
    1e82:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1e87:	04 8b                	add    al,0x8b
    1e89:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1e8f:	c5 10 fd             	(bad)
    1e92:	10 01                	adc    BYTE PTR [rcx],al
    1e94:	66 04 fd             	data16 add al,0xfd
    1e97:	10 fe                	adc    dh,bh
    1e99:	10 0e                	adc    BYTE PTR [rsi],cl
    1e9b:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1e9c:	2e 08 00             	cs or  BYTE PTR [rax],al
    1e9f:	00 00                	add    BYTE PTR [rax],al
    1ea1:	00 00                	add    BYTE PTR [rax],al
    1ea3:	00 00                	add    BYTE PTR [rax],al
    1ea5:	00 12                	add    BYTE PTR [rdx],dl
    1ea7:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1ead:	11 01                	adc    DWORD PTR [rcx],eax
    1eaf:	66 04 ab             	data16 add al,0xab
    1eb2:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1eb8:	7f 00                	jg     1eba <_Z13searchElementP4List8string_t.part.0+0x1a>
    1eba:	01 00                	add    DWORD PTR [rax],eax
    1ebc:	00 00                	add    BYTE PTR [rax],al
    1ebe:	00 00                	add    BYTE PTR [rax],al
    1ec0:	00 00                	add    BYTE PTR [rax],al
    1ec2:	01 00                	add    DWORD PTR [rax],eax
    1ec4:	00 00                	add    BYTE PTR [rax],al
    1ec6:	00 00                	add    BYTE PTR [rax],al
    1ec8:	00 00                	add    BYTE PTR [rax],al
    1eca:	04 8d                	add    al,0x8d
    1ecc:	0d 9c 0d 01 52       	or     eax,0x52010d9c
    1ed1:	04 9c                	add    al,0x9c
    1ed3:	0d a8 0d 01 50       	or     eax,0x50010da8
    1ed8:	04 a8                	add    al,0xa8
    1eda:	0d df 0e 03 76       	or     eax,0x76030edf
    1edf:	8c 7f 04             	mov    WORD PTR [rdi+0x4],?
    1ee2:	8b 10                	mov    edx,DWORD PTR [rax]
    1ee4:	93                   	xchg   ebx,eax
    1ee5:	10 03                	adc    BYTE PTR [rbx],al
    1ee7:	76 8c                	jbe    1e75 <_Z13elfHashString8string_t+0x25>
    1ee9:	7f 04                	jg     1eef <_Z8listCtorv+0x1f>
    1eeb:	c5 10 d4             	(bad)
    1eee:	10 02                	adc    BYTE PTR [rdx],al
    1ef0:	30 9f 04 d4 10 df    	xor    BYTE PTR [rdi-0x20ef2bfc],bl
    1ef6:	10 01                	adc    BYTE PTR [rcx],al
    1ef8:	52                   	push   rdx
    1ef9:	04 df                	add    al,0xdf
    1efb:	10 fe                	adc    dh,bh
    1efd:	10 02                	adc    BYTE PTR [rdx],al
    1eff:	30 9f 04 a2 11 b6    	xor    BYTE PTR [rdi-0x49ee5dfc],bl
    1f05:	11 03                	adc    DWORD PTR [rbx],eax
    1f07:	76 8c                	jbe    1e95 <_Z13elfHashString8string_t+0x45>
    1f09:	7f 00                	jg     1f0b <_Z8listCtorv+0x3b>
    1f0b:	01 00                	add    DWORD PTR [rax],eax
    1f0d:	00 00                	add    BYTE PTR [rax],al
    1f0f:	01 00                	add    DWORD PTR [rax],eax
    1f11:	00 00                	add    BYTE PTR [rax],al
    1f13:	04 8d                	add    al,0x8d
    1f15:	0d df 0e 03 76       	or     eax,0x76030edf
    1f1a:	90                   	nop
    1f1b:	7f 04                	jg     1f21 <_Z8listCtorv+0x51>
    1f1d:	8b 10                	mov    edx,DWORD PTR [rax]
    1f1f:	93                   	xchg   ebx,eax
    1f20:	10 01                	adc    BYTE PTR [rcx],al
    1f22:	52                   	push   rdx
    1f23:	04 c5                	add    al,0xc5
    1f25:	10 fe                	adc    dh,bh
    1f27:	10 03                	adc    BYTE PTR [rbx],al
    1f29:	76 90                	jbe    1ebb <_Z13searchElementP4List8string_t.part.0+0x1b>
    1f2b:	7f 04                	jg     1f31 <_Z12pushListElemP4List8string_t+0x1>
    1f2d:	a2 11 b6 11 03 76 90 	movabs ds:0x7f90760311b611,al
    1f34:	7f 00 
    1f36:	00 00                	add    BYTE PTR [rax],al
    1f38:	00 00                	add    BYTE PTR [rax],al
    1f3a:	00 00                	add    BYTE PTR [rax],al
    1f3c:	00 02                	add    BYTE PTR [rdx],al
    1f3e:	00 01                	add    BYTE PTR [rcx],al
    1f40:	00 00                	add    BYTE PTR [rax],al
    1f42:	04 af                	add    al,0xaf
    1f44:	0d c4 0d 01 61       	or     eax,0x61010dc4
    1f49:	04 de                	add    al,0xde
    1f4b:	0d f4 0d 01 61       	or     eax,0x61010df4
    1f50:	04 fe                	add    al,0xfe
    1f52:	0d 99 0e 01 61       	or     eax,0x61010e99
    1f57:	04 a1                	add    al,0xa1
    1f59:	0e                   	(bad)
    1f5a:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    1f5d:	61                   	(bad)
    1f5e:	04 f3                	add    al,0xf3
    1f60:	0e                   	(bad)
    1f61:	f3 0e                	repz (bad)
    1f63:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1f66:	8b 10                	mov    edx,DWORD PTR [rax]
    1f68:	93                   	xchg   ebx,eax
    1f69:	10 01                	adc    BYTE PTR [rcx],al
    1f6b:	61                   	(bad)
    1f6c:	00 00                	add    BYTE PTR [rax],al
    1f6e:	00 00                	add    BYTE PTR [rax],al
    1f70:	00 00                	add    BYTE PTR [rax],al
    1f72:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    1f75:	0e                   	(bad)
    1f76:	e3 0e                	jrcxz  1f86 <_Z12pushListElemP4List8string_t+0x56>
    1f78:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    1f7b:	cf                   	iret
    1f7c:	10 d4                	adc    ah,dl
    1f7e:	10 01                	adc    BYTE PTR [rcx],al
    1f80:	61                   	(bad)
    1f81:	04 a2                	add    al,0xa2
    1f83:	11 ab 11 01 61 00    	adc    DWORD PTR [rbx+0x610111],ebp
    1f89:	02 00                	add    al,BYTE PTR [rax]
    1f8b:	04 df                	add    al,0xdf
    1f8d:	10 fe                	adc    dh,bh
    1f8f:	10 02                	adc    BYTE PTR [rdx],al
    1f91:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    1f97:	f3 0e                	repz (bad)
    1f99:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    1f9b:	0a 03                	or     al,BYTE PTR [rbx]
    1f9d:	0d 42 00 00 00       	or     eax,0x42
    1fa2:	00 00                	add    BYTE PTR [rax],al
    1fa4:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    1faa:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    1fac:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1fad:	0f 0a                	(bad)
    1faf:	03 2b                	add    ebp,DWORD PTR [rbx]
    1fb1:	42 00 00             	rex.X add BYTE PTR [rax],al
    1fb4:	00 00                	add    BYTE PTR [rax],al
    1fb6:	00 00                	add    BYTE PTR [rax],al
    1fb8:	9f                   	lahf
    1fb9:	00 02                	add    BYTE PTR [rdx],al
    1fbb:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1fbe:	0f d2 0f             	psrld  mm1,QWORD PTR [rdi]
    1fc1:	0a 03                	or     al,BYTE PTR [rbx]
    1fc3:	49                   	rex.WB
    1fc4:	42 00 00             	rex.X add BYTE PTR [rax],al
    1fc7:	00 00                	add    BYTE PTR [rax],al
    1fc9:	00 00                	add    BYTE PTR [rax],al
    1fcb:	9f                   	lahf
	...
    1fd8:	00 00                	add    BYTE PTR [rax],al
    1fda:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1fdd:	51                   	push   rcx
    1fde:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1fe1:	51                   	push   rcx
    1fe2:	ed                   	in     eax,dx
    1fe3:	07                   	(bad)
    1fe4:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
    1fe7:	ed                   	in     eax,dx
    1fe8:	07                   	(bad)
    1fe9:	f7 07 04 a3 01 55    	test   DWORD PTR [rdi],0x5501a304
    1fef:	9f                   	lahf
    1ff0:	04 f7                	add    al,0xf7
    1ff2:	07                   	(bad)
    1ff3:	af                   	scas   eax,DWORD PTR es:[rdi]
    1ff4:	08 01                	or     BYTE PTR [rcx],al
    1ff6:	5d                   	pop    rbp
    1ff7:	04 af                	add    al,0xaf
    1ff9:	08 c9                	or     cl,cl
    1ffb:	08 01                	or     BYTE PTR [rcx],al
    1ffd:	55                   	push   rbp
    1ffe:	04 c9                	add    al,0xc9
    2000:	08 ce                	or     dh,cl
    2002:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    2005:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2008:	04 ce                	add    al,0xce
    200a:	08 d3                	or     bl,dl
    200c:	08 01                	or     BYTE PTR [rcx],al
    200e:	5d                   	pop    rbp
	...
    2017:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    201a:	55                   	push   rbp
    201b:	01 54 04 55          	add    DWORD PTR [rsp+rax*1+0x55],edx
    201f:	af                   	scas   eax,DWORD PTR es:[rdi]
    2020:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    2023:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2027:	af                   	scas   eax,DWORD PTR es:[rdi]
    2028:	08 c2                	or     dl,al
    202a:	08 01                	or     BYTE PTR [rcx],al
    202c:	54                   	push   rsp
    202d:	04 c2                	add    al,0xc2
    202f:	08 d3                	or     bl,dl
    2031:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    2034:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    2048:	04 00                	add    al,0x0
    204a:	46 06                	rex.RX (bad)
    204c:	51                   	push   rcx
    204d:	93                   	xchg   ebx,eax
    204e:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    2051:	08 04 49             	or     BYTE PTR [rcx+rcx*2],al
    2054:	5e                   	pop    rsi
    2055:	06                   	(bad)
    2056:	53                   	push   rbx
    2057:	93                   	xchg   ebx,eax
    2058:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    205b:	08 04 80             	or     BYTE PTR [rax+rax*4],al
    205e:	01 ae 01 06 53 93    	add    DWORD PTR [rsi-0x6cacf9ff],ebp
    2064:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2067:	08 04 91             	or     BYTE PTR [rcx+rdx*4],al
    206a:	02 bc 05 06 53 93 08 	add    bh,BYTE PTR [rbp+rax*1+0x8935306]
    2071:	5e                   	pop    rsi
    2072:	93                   	xchg   ebx,eax
    2073:	08 04 b7             	or     BYTE PTR [rdi+rsi*4],al
    2076:	06                   	(bad)
    2077:	e7 07                	out    0x7,eax
    2079:	06                   	(bad)
    207a:	53                   	push   rbx
    207b:	93                   	xchg   ebx,eax
    207c:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    207f:	08 04 f7             	or     BYTE PTR [rdi+rsi*8],al
    2082:	07                   	(bad)
    2083:	af                   	scas   eax,DWORD PTR es:[rdi]
    2084:	08 06                	or     BYTE PTR [rsi],al
    2086:	53                   	push   rbx
    2087:	93                   	xchg   ebx,eax
    2088:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    208b:	08 04 af             	or     BYTE PTR [rdi+rbp*4],al
    208e:	08 bb 08 06 51 93    	or     BYTE PTR [rbx-0x6caef9f8],bh
    2094:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    2097:	08 04 ce             	or     BYTE PTR [rsi+rcx*8],al
    209a:	08 d3                	or     bl,dl
    209c:	08 06                	or     BYTE PTR [rsi],al
    209e:	53                   	push   rbx
    209f:	93                   	xchg   ebx,eax
    20a0:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    20a3:	08 00                	or     BYTE PTR [rax],al
    20a5:	02 00                	add    al,BYTE PTR [rax]
	...
    20b3:	00 00                	add    BYTE PTR [rax],al
    20b5:	04 80                	add    al,0x80
    20b7:	01 b9 01 06 9e 04    	add    DWORD PTR [rcx+0x49e0601],edi
    20bd:	00 00                	add    BYTE PTR [rax],al
    20bf:	00 00                	add    BYTE PTR [rax],al
    20c1:	04 da                	add    al,0xda
    20c3:	01 e9                	add    ecx,ebp
    20c5:	01 01                	add    DWORD PTR [rcx],eax
    20c7:	63 04 e9             	movsxd eax,DWORD PTR [rcx+rbp*8]
    20ca:	01 88 02 03 76 90    	add    DWORD PTR [rax-0x6f89fcfe],ecx
    20d0:	7f 04                	jg     20d6 <_Z11popListElemP4List8string_t+0x26>
    20d2:	88 02                	mov    BYTE PTR [rdx],al
    20d4:	91                   	xchg   ecx,eax
    20d5:	02 01                	add    al,BYTE PTR [rcx]
    20d7:	63 04 95 02 b3 02 01 	movsxd eax,DWORD PTR [rdx*4+0x102b302]
    20de:	63 04 b3             	movsxd eax,DWORD PTR [rbx+rsi*4]
    20e1:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    20e7:	7f 04                	jg     20ed <_Z11popListElemP4List8string_t+0x3d>
    20e9:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    20ef:	90                   	nop
    20f0:	7f 04                	jg     20f6 <_Z11popListElemP4List8string_t+0x46>
    20f2:	95                   	xchg   ebp,eax
    20f3:	08 a0 08 03 76 90    	or     BYTE PTR [rax-0x6f89fcf8],ah
    20f9:	7f 00                	jg     20fb <_Z11popListElemP4List8string_t+0x4b>
    20fb:	00 00                	add    BYTE PTR [rax],al
    20fd:	04 56                	add    al,0x56
    20ff:	65 02 30             	add    dh,BYTE PTR gs:[rax]
    2102:	9f                   	lahf
    2103:	00 00                	add    BYTE PTR [rax],al
    2105:	00 00                	add    BYTE PTR [rax],al
    2107:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
    210a:	01 b9 01 02 30 9f    	add    DWORD PTR [rcx-0x60cffdff],edi
    2110:	04 da                	add    al,0xda
    2112:	01 e9                	add    ecx,ebp
    2114:	01 01                	add    DWORD PTR [rcx],eax
    2116:	52                   	push   rdx
    2117:	00 02                	add    BYTE PTR [rdx],al
    2119:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    211c:	01 ea                	add    edx,ebp
    211e:	01 0a                	add    DWORD PTR [rdx],ecx
    2120:	03 aa 41 00 00 00    	add    ebp,DWORD PTR [rdx+0x41]
    2126:	00 00                	add    BYTE PTR [rax],al
    2128:	00 9f 00 02 00 00    	add    BYTE PTR [rdi+0x200],bl
    212e:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    2131:	01 e9                	add    ecx,ebp
    2133:	01 01                	add    DWORD PTR [rcx],eax
    2135:	55                   	push   rbp
    2136:	04 e9                	add    al,0xe9
    2138:	01 ea                	add    edx,ebp
    213a:	01 01                	add    DWORD PTR [rcx],eax
    213c:	5d                   	pop    rbp
    213d:	00 03                	add    BYTE PTR [rbx],al
    213f:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    2142:	01 99 01 0a 03 90    	add    DWORD PTR [rcx-0x6ffcf5ff],ebx
    2148:	41 00 00             	add    BYTE PTR [r8],al
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	9f                   	lahf
    2150:	00 03                	add    BYTE PTR [rbx],al
    2152:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    2155:	01 99 01 01 5d 00    	add    DWORD PTR [rcx+0x5d0101],ebx
    215b:	01 00                	add    DWORD PTR [rax],eax
    215d:	04 95                	add    al,0x95
    215f:	02 b4 02 0a 03 b1 41 	add    dh,BYTE PTR [rdx+rax*1+0x41b1030a]
    2166:	00 00                	add    BYTE PTR [rax],al
    2168:	00 00                	add    BYTE PTR [rax],al
    216a:	00 00                	add    BYTE PTR [rax],al
    216c:	9f                   	lahf
    216d:	00 02                	add    BYTE PTR [rdx],al
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	00 00                	add    BYTE PTR [rax],al
    2173:	00 00                	add    BYTE PTR [rax],al
    2175:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    2178:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    217e:	7f 04                	jg     2184 <_Z11popListElemP4List8string_t+0xd4>
    2180:	92                   	xchg   edx,eax
    2181:	03 ad 07 01 63 04    	add    ebp,DWORD PTR [rbp+0x4630107]
    2187:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    218d:	90                   	nop
    218e:	7f 04                	jg     2194 <_Z13searchElementP4List8string_t+0x4>
    2190:	8a 08                	mov    cl,BYTE PTR [rax]
    2192:	a8 08                	test   al,0x8
    2194:	01 63 00             	add    DWORD PTR [rbx+0x0],esp
    2197:	02 02                	add    al,BYTE PTR [rdx]
    2199:	00 00                	add    BYTE PTR [rax],al
    219b:	04 b4                	add    al,0xb4
    219d:	02 b1 07 04 76 b0    	add    dh,BYTE PTR [rcx-0x4f89fbf9]
    21a3:	7f 9f                	jg     2144 <_Z11popListElemP4List8string_t+0x94>
    21a5:	04 f7                	add    al,0xf7
    21a7:	07                   	(bad)
    21a8:	af                   	scas   eax,DWORD PTR es:[rdi]
    21a9:	08 04 76             	or     BYTE PTR [rsi+rsi*2],al
    21ac:	b0 7f                	mov    al,0x7f
    21ae:	9f                   	lahf
    21af:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    21be:	04 b4                	add    al,0xb4
    21c0:	02 92 03 06 9e 04    	add    dl,BYTE PTR [rdx+0x49e0603]
    21c6:	00 00                	add    BYTE PTR [rax],al
    21c8:	00 00                	add    BYTE PTR [rax],al
    21ca:	04 92                	add    al,0x92
    21cc:	03 c8                	add    ecx,eax
    21ce:	04 01                	add    al,0x1
    21d0:	68 04 81 05 9c       	push   0xffffffff9c058104
    21d5:	05 01 68 04 ac       	add    eax,0xac046801
    21da:	05 a3 07 01 68       	add    eax,0x680107a3
    21df:	04 f7                	add    al,0xf7
    21e1:	07                   	(bad)
    21e2:	8a 08                	mov    cl,BYTE PTR [rax]
    21e4:	06                   	(bad)
    21e5:	9e                   	sahf
    21e6:	04 00                	add    al,0x0
    21e8:	00 00                	add    BYTE PTR [rax],al
    21ea:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
    21ed:	08 95 08 01 68 04    	or     BYTE PTR [rbp+0x4680108],dl
    21f3:	95                   	xchg   ebp,eax
    21f4:	08 a0 08 06 9e 04    	or     BYTE PTR [rax+0x49e0608],ah
    21fa:	00 00                	add    BYTE PTR [rax],al
    21fc:	00 00                	add    BYTE PTR [rax],al
    21fe:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    2201:	02 00                	add    al,BYTE PTR [rax]
    2203:	00 00                	add    BYTE PTR [rax],al
    2205:	02 00                	add    al,BYTE PTR [rax]
    2207:	00 00                	add    BYTE PTR [rax],al
    2209:	00 00                	add    BYTE PTR [rax],al
    220b:	04 b4                	add    al,0xb4
    220d:	02 92 03 02 30 9f    	add    dl,BYTE PTR [rdx-0x60cffdfd]
    2213:	04 d9                	add    al,0xd9
    2215:	06                   	(bad)
    2216:	e1 06                	loope  221e <_Z8listDtorP4List+0xe>
    2218:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    221b:	e1 06                	loope  2223 <_Z8listDtorP4List+0x13>
    221d:	e4 06                	in     al,0x6
    221f:	03 70 01             	add    esi,DWORD PTR [rax+0x1]
    2222:	9f                   	lahf
    2223:	04 f9                	add    al,0xf9
    2225:	06                   	(bad)
    2226:	81 07 01 50 04 f7    	add    DWORD PTR [rdi],0xf7045001
    222c:	07                   	(bad)
    222d:	8a 08                	mov    cl,BYTE PTR [rax]
    222f:	02 30                	add    dh,BYTE PTR [rax]
    2231:	9f                   	lahf
    2232:	04 95                	add    al,0x95
    2234:	08 a0 08 02 30 9f    	or     BYTE PTR [rax-0x60cffdf8],ah
    223a:	00 01                	add    BYTE PTR [rcx],al
    223c:	00 00                	add    BYTE PTR [rax],al
    223e:	00 01                	add    BYTE PTR [rcx],al
    2240:	00 04 dd 06 e1 06 0f 	add    BYTE PTR [rbx*8+0xf06e106],al
    2247:	71 00                	jno    2249 <_Z8listDtorP4List+0x39>
    2249:	0c ff                	or     al,0xff
    224b:	ff                   	(bad)
    224c:	ff                   	(bad)
    224d:	ff 1a                	call   FWORD PTR [rdx]
    224f:	48 1e                	rex.W (bad)
    2251:	75 00                	jne    2253 <_Z10debugPrintP4List+0x3>
    2253:	22 23                	and    ah,BYTE PTR [rbx]
    2255:	10 04 e1             	adc    BYTE PTR [rcx+riz*8],al
    2258:	06                   	(bad)
    2259:	e4 06                	in     al,0x6
    225b:	0f 70 01 0c          	pshufw mm0,QWORD PTR [rcx],0xc
    225f:	ff                   	(bad)
    2260:	ff                   	(bad)
    2261:	ff                   	(bad)
    2262:	ff 1a                	call   FWORD PTR [rdx]
    2264:	48 1e                	rex.W (bad)
    2266:	75 00                	jne    2268 <_Z10debugPrintP4List+0x18>
    2268:	22 23                	and    ah,BYTE PTR [rbx]
    226a:	10 04 fd 06 81 07 0f 	adc    BYTE PTR [rdi*8+0xf078106],al
    2271:	70 00                	jo     2273 <_Z10debugPrintP4List+0x23>
    2273:	0c ff                	or     al,0xff
    2275:	ff                   	(bad)
    2276:	ff                   	(bad)
    2277:	ff 1a                	call   FWORD PTR [rdx]
    2279:	48 1e                	rex.W (bad)
    227b:	75 00                	jne    227d <_Z10debugPrintP4List+0x2d>
    227d:	22 23                	and    ah,BYTE PTR [rbx]
    227f:	10 00                	adc    BYTE PTR [rax],al
    2281:	00 00                	add    BYTE PTR [rax],al
    2283:	00 00                	add    BYTE PTR [rax],al
    2285:	00 00                	add    BYTE PTR [rax],al
    2287:	04 a3                	add    al,0xa3
    2289:	07                   	(bad)
    228a:	b1 07                	mov    cl,0x7
    228c:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    228f:	88 08                	mov    BYTE PTR [rax],cl
    2291:	8a 08                	mov    cl,BYTE PTR [rax]
    2293:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    2296:	a0 08 a8 08 01 68 00 	movabs al,ds:0x200680108a808
    229d:	02 00 
    229f:	04 b1                	add    al,0xb1
    22a1:	07                   	(bad)
    22a2:	cb                   	retf
    22a3:	07                   	(bad)
    22a4:	0a 03                	or     al,BYTE PTR [rbx]
    22a6:	cb                   	retf
    22a7:	41 00 00             	add    BYTE PTR [r8],al
    22aa:	00 00                	add    BYTE PTR [rax],al
    22ac:	00 00                	add    BYTE PTR [rax],al
    22ae:	9f                   	lahf
	...
    22bb:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    22be:	12 ce                	adc    cl,dh
    22c0:	12 01                	adc    al,BYTE PTR [rcx]
    22c2:	55                   	push   rbp
    22c3:	04 ce                	add    al,0xce
    22c5:	12 fb                	adc    bh,bl
    22c7:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    22ca:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    22cd:	04 fb                	add    al,0xfb
    22cf:	20 95 21 01 55 04    	and    BYTE PTR [rbp+0x4550121],dl
    22d5:	95                   	xchg   ebp,eax
    22d6:	21 9a 21 04 a3 01    	and    DWORD PTR [rdx+0x1a30421],ebx
    22dc:	55                   	push   rbp
    22dd:	9f                   	lahf
    22de:	04 9a                	add    al,0x9a
    22e0:	21 b4 21 01 55 04 b4 	and    DWORD PTR [rcx+riz*1-0x4bfbaaff],esi
    22e7:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    22ed:	55                   	push   rbp
    22ee:	9f                   	lahf
	...
    22ff:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    2302:	12 d6                	adc    dl,dh
    2304:	12 01                	adc    al,BYTE PTR [rcx]
    2306:	54                   	push   rsp
    2307:	04 d6                	add    al,0xd6
    2309:	12 fe                	adc    bh,dh
    230b:	14 01                	adc    al,0x1
    230d:	5e                   	pop    rsi
    230e:	04 fe                	add    al,0xfe
    2310:	14 81                	adc    al,0x81
    2312:	15 04 a3 01 54       	adc    eax,0x5401a304
    2317:	9f                   	lahf
    2318:	04 81                	add    al,0x81
    231a:	15 fb 20 01 5e       	adc    eax,0x5e0120fb
    231f:	04 fb                	add    al,0xfb
    2321:	20 8e 21 01 54 04    	and    BYTE PTR [rsi+0x4540121],cl
    2327:	8e 21                	mov    fs,WORD PTR [rcx]
    2329:	9a                   	(bad)
    232a:	21 04 a3             	and    DWORD PTR [rbx+riz*4],eax
    232d:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2331:	9a                   	(bad)
    2332:	21 ad 21 01 54 04    	and    DWORD PTR [rbp+0x4540121],ebp
    2338:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2339:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    233f:	54                   	push   rsp
    2340:	9f                   	lahf
	...
    2355:	00 00                	add    BYTE PTR [rax],al
    2357:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    235a:	12 e3                	adc    ah,bl
    235c:	12 01                	adc    al,BYTE PTR [rcx]
    235e:	51                   	push   rcx
    235f:	04 e3                	add    al,0xe3
    2361:	12 c4                	adc    al,ah
    2363:	14 01                	adc    al,0x1
    2365:	53                   	push   rbx
    2366:	04 c4                	add    al,0xc4
    2368:	14 81                	adc    al,0x81
    236a:	15 04 a3 01 51       	adc    eax,0x5101a304
    236f:	9f                   	lahf
    2370:	04 81                	add    al,0x81
    2372:	15 d5 16 01 53       	adc    eax,0x530116d5
    2377:	04 d5                	add    al,0xd5
    2379:	16                   	(bad)
    237a:	ae                   	scas   al,BYTE PTR es:[rdi]
    237b:	1b 04 a3             	sbb    eax,DWORD PTR [rbx+riz*4]
    237e:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    2381:	04 ae                	add    al,0xae
    2383:	1b f6                	sbb    esi,esi
    2385:	20 01                	and    BYTE PTR [rcx],al
    2387:	53                   	push   rbx
    2388:	04 f6                	add    al,0xf6
    238a:	20 fb                	and    bl,bh
    238c:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    238f:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    2392:	04 fb                	add    al,0xfb
    2394:	20 87 21 01 51 04    	and    BYTE PTR [rdi+0x4510121],al
    239a:	87 21                	xchg   DWORD PTR [rcx],esp
    239c:	9a                   	(bad)
    239d:	21 01                	and    DWORD PTR [rcx],eax
    239f:	53                   	push   rbx
    23a0:	04 9a                	add    al,0x9a
    23a2:	21 a6 21 01 51 04    	and    DWORD PTR [rsi+0x4510121],esp
    23a8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    23a9:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    23af:	51                   	push   rcx
    23b0:	9f                   	lahf
	...
    23b9:	00 00                	add    BYTE PTR [rax],al
    23bb:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    23be:	12 f7                	adc    dh,bh
    23c0:	12 01                	adc    al,BYTE PTR [rcx]
    23c2:	50                   	push   rax
    23c3:	04 f7                	add    al,0xf7
    23c5:	12 a0 13 01 5f 04    	adc    ah,BYTE PTR [rax+0x45f0113]
    23cb:	a0 13 81 15 03 91 a0 	movabs al,ds:0x47fa09103158113
    23d2:	7f 04 
    23d4:	81 15 d5 15 01 5f 04 	adc    DWORD PTR [rip+0x5f0115d5],0xfb15d504        # 5f0139b3 <_end+0x5f00d99b>
    23db:	d5 15 fb 
    23de:	20 03                	and    BYTE PTR [rbx],al
    23e0:	91                   	xchg   ecx,eax
    23e1:	a0 7f 00 00 00 00 00 	movabs al,ds:0x7f
    23e8:	00 00 
    23ea:	00 00                	add    BYTE PTR [rax],al
    23ec:	04 fe                	add    al,0xfe
    23ee:	12 c4                	adc    al,ah
    23f0:	14 01                	adc    al,0x1
    23f2:	5c                   	pop    rsp
    23f3:	04 81                	add    al,0x81
    23f5:	15 95 17 01 5c       	adc    eax,0x5c011795
    23fa:	04 95                	add    al,0x95
    23fc:	17                   	(bad)
    23fd:	ae                   	scas   al,BYTE PTR es:[rdi]
    23fe:	1b 03                	sbb    eax,DWORD PTR [rbx]
    2400:	91                   	xchg   ecx,eax
    2401:	a8 7f                	test   al,0x7f
    2403:	04 ae                	add    al,0xae
    2405:	1b f6                	sbb    esi,esi
    2407:	20 01                	and    BYTE PTR [rcx],al
    2409:	5c                   	pop    rsp
	...
    241e:	03 03                	add    eax,DWORD PTR [rbx]
    2420:	00 00                	add    BYTE PTR [rax],al
    2422:	00 00                	add    BYTE PTR [rax],al
    2424:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    2427:	13 97 13 08 50 93    	adc    edx,DWORD PTR [rdi-0x6caff7ed]
    242d:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2431:	93                   	xchg   ebx,eax
    2432:	04 04                	add    al,0x4
    2434:	97                   	xchg   edi,eax
    2435:	13 c4                	adc    eax,esp
    2437:	14 08                	adc    al,0x8
    2439:	56                   	push   rsi
    243a:	93                   	xchg   ebx,eax
    243b:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    243f:	93                   	xchg   ebx,eax
    2440:	04 04                	add    al,0x4
    2442:	c4                   	(bad)
    2443:	14 de                	adc    al,0xde
    2445:	14 05                	adc    al,0x5
    2447:	56                   	push   rsi
    2448:	93                   	xchg   ebx,eax
    2449:	08 93 08 04 81 15    	or     BYTE PTR [rbx+0x15810408],dl
    244f:	f6 15 08 56 93 08    	not    BYTE PTR [rip+0x8935608]        # 8937a5d <_end+0x8931a45>
    2455:	5c                   	pop    rsp
    2456:	93                   	xchg   ebx,eax
    2457:	04 93                	add    al,0x93
    2459:	04 04                	add    al,0x4
    245b:	f6 15 95 17 08 56    	not    BYTE PTR [rip+0x56081795]        # 56083bf6 <_end+0x5607dbde>
    2461:	93                   	xchg   ebx,eax
    2462:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2466:	93                   	xchg   ebx,eax
    2467:	04 04                	add    al,0x4
    2469:	95                   	xchg   ebp,eax
    246a:	17                   	(bad)
    246b:	ae                   	scas   al,BYTE PTR es:[rdi]
    246c:	1b 0a                	sbb    ecx,DWORD PTR [rdx]
    246e:	56                   	push   rsi
    246f:	93                   	xchg   ebx,eax
    2470:	08 91 a8 7f 93 04    	or     BYTE PTR [rcx+0x4937fa8],dl
    2476:	93                   	xchg   ebx,eax
    2477:	04 04                	add    al,0x4
    2479:	ae                   	scas   al,BYTE PTR es:[rdi]
    247a:	1b a2 1c 08 56 93    	sbb    esp,DWORD PTR [rdx-0x6ca9f7e4]
    2480:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2484:	93                   	xchg   ebx,eax
    2485:	04 04                	add    al,0x4
    2487:	a2 1c 9a 1d 08 56 93 	movabs ds:0x5c089356081d9a1c,al
    248e:	08 5c 
    2490:	93                   	xchg   ebx,eax
    2491:	04 93                	add    al,0x93
    2493:	04 04                	add    al,0x4
    2495:	9a                   	(bad)
    2496:	1d 92 1e 08 56       	sbb    eax,0x56081e92
    249b:	93                   	xchg   ebx,eax
    249c:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24a0:	93                   	xchg   ebx,eax
    24a1:	04 04                	add    al,0x4
    24a3:	92                   	xchg   edx,eax
    24a4:	1e                   	(bad)
    24a5:	bf 1e 07 93 08       	mov    edi,0x893071e
    24aa:	5c                   	pop    rsp
    24ab:	93                   	xchg   ebx,eax
    24ac:	04 93                	add    al,0x93
    24ae:	04 04                	add    al,0x4
    24b0:	bf 1e 8a 1f 08       	mov    edi,0x81f8a1e
    24b5:	56                   	push   rsi
    24b6:	93                   	xchg   ebx,eax
    24b7:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24bb:	93                   	xchg   ebx,eax
    24bc:	04 04                	add    al,0x4
    24be:	8a 1f                	mov    bl,BYTE PTR [rdi]
    24c0:	82                   	(bad)
    24c1:	20 08                	and    BYTE PTR [rax],cl
    24c3:	56                   	push   rsi
    24c4:	93                   	xchg   ebx,eax
    24c5:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24c9:	93                   	xchg   ebx,eax
    24ca:	04 04                	add    al,0x4
    24cc:	82                   	(bad)
    24cd:	20 f6                	and    dh,dh
    24cf:	20 08                	and    BYTE PTR [rax],cl
    24d1:	56                   	push   rsi
    24d2:	93                   	xchg   ebx,eax
    24d3:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24d7:	93                   	xchg   ebx,eax
    24d8:	04 00                	add    al,0x0
    24da:	01 00                	add    DWORD PTR [rax],eax
    24dc:	04 81                	add    al,0x81
    24de:	15 97 15 06 a0       	adc    eax,0xa0061597
    24e3:	25 cb 00 00 00       	and    eax,0xcb
    24e8:	00 02                	add    BYTE PTR [rdx],al
    24ea:	00 04 97             	add    BYTE PTR [rdi+rdx*4],al
    24ed:	15 a3 15 06 a0       	adc    eax,0xa00615a3
    24f2:	53                   	push   rbx
    24f3:	cb                   	retf
    24f4:	00 00                	add    BYTE PTR [rax],al
    24f6:	00 00                	add    BYTE PTR [rax],al
    24f8:	02 00                	add    al,BYTE PTR [rax]
    24fa:	04 a3                	add    al,0xa3
    24fc:	15 af 15 06 a0       	adc    eax,0xa00615af
    2501:	5e                   	pop    rsi
    2502:	cb                   	retf
    2503:	00 00                	add    BYTE PTR [rax],al
    2505:	00 00                	add    BYTE PTR [rax],al
    2507:	03 00                	add    eax,DWORD PTR [rax]
    2509:	04 af                	add    al,0xaf
    250b:	15 e5 15 01 5e       	adc    eax,0x5e0115e5
    2510:	00 00                	add    BYTE PTR [rax],al
    2512:	00 00                	add    BYTE PTR [rax],al
    2514:	00 04 d5 15 dc 15 01 	add    BYTE PTR [rdx*8+0x115dc15],al
    251b:	50                   	push   rax
    251c:	04 dc                	add    al,0xdc
    251e:	15 f6 15 01 5f       	adc    eax,0x5f0115f6
    2523:	00 02                	add    BYTE PTR [rdx],al
    2525:	00 04 e5 15 f1 15 06 	add    BYTE PTR [riz*8+0x615f115],al
    252c:	a0 82 cb 00 00 00 00 	movabs al,ds:0x200000000cb82
    2533:	02 00 
    2535:	04 82                	add    al,0x82
    2537:	20 97 20 06 a0 25    	and    BYTE PTR [rdi+0x25a00620],dl
    253d:	cb                   	retf
    253e:	00 00                	add    BYTE PTR [rax],al
    2540:	00 00                	add    BYTE PTR [rax],al
    2542:	02 00                	add    al,BYTE PTR [rax]
    2544:	04 97                	add    al,0x97
    2546:	20 9f 20 06 a0 a6    	and    BYTE PTR [rdi-0x595ff9e0],bl
    254c:	cb                   	retf
    254d:	00 00                	add    BYTE PTR [rax],al
    254f:	00 00                	add    BYTE PTR [rax],al
    2551:	02 00                	add    al,BYTE PTR [rax]
    2553:	04 9f                	add    al,0x9f
    2555:	20 ab 20 06 a0 5e    	and    BYTE PTR [rbx+0x5ea00620],ch
    255b:	cb                   	retf
    255c:	00 00                	add    BYTE PTR [rax],al
    255e:	00 00                	add    BYTE PTR [rax],al
    2560:	03 00                	add    eax,DWORD PTR [rax]
    2562:	04 ab                	add    al,0xab
    2564:	20 e5                	and    ch,ah
    2566:	20 01                	and    BYTE PTR [rcx],al
    2568:	5e                   	pop    rsi
    2569:	00 00                	add    BYTE PTR [rax],al
    256b:	00 00                	add    BYTE PTR [rax],al
    256d:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    2570:	20 da                	and    dl,bl
    2572:	20 01                	and    BYTE PTR [rcx],al
    2574:	50                   	push   rax
    2575:	04 da                	add    al,0xda
    2577:	20 f6                	and    dh,dh
    2579:	20 03                	and    BYTE PTR [rbx],al
    257b:	91                   	xchg   ecx,eax
    257c:	a8 7f                	test   al,0x7f
    257e:	00 02                	add    BYTE PTR [rdx],al
    2580:	00 04 e5 20 f1 20 06 	add    BYTE PTR [riz*8+0x620f120],al
    2587:	a0 82 cb 00 00 00 00 	movabs al,ds:0x200000000cb82
    258e:	02 00 
    2590:	04 8a                	add    al,0x8a
    2592:	1f                   	(bad)
    2593:	9f                   	lahf
    2594:	1f                   	(bad)
    2595:	06                   	(bad)
    2596:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    259d:	02 00 
    259f:	04 9f                	add    al,0x9f
    25a1:	1f                   	(bad)
    25a2:	ab                   	stos   DWORD PTR es:[rdi],eax
    25a3:	1f                   	(bad)
    25a4:	06                   	(bad)
    25a5:	a0 b5 cb 00 00 00 00 	movabs al,ds:0x200000000cbb5
    25ac:	02 00 
    25ae:	04 ab                	add    al,0xab
    25b0:	1f                   	(bad)
    25b1:	b7 1f                	mov    bh,0x1f
    25b3:	06                   	(bad)
    25b4:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    25bb:	03 00 
    25bd:	04 b7                	add    al,0xb7
    25bf:	1f                   	(bad)
    25c0:	f1                   	int1
    25c1:	1f                   	(bad)
    25c2:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    25c5:	00 00                	add    BYTE PTR [rax],al
    25c7:	00 00                	add    BYTE PTR [rax],al
    25c9:	04 dd                	add    al,0xdd
    25cb:	1f                   	(bad)
    25cc:	e6 1f                	out    0x1f,al
    25ce:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    25d1:	e6 1f                	out    0x1f,al
    25d3:	82                   	(bad)
    25d4:	20 03                	and    BYTE PTR [rbx],al
    25d6:	91                   	xchg   ecx,eax
    25d7:	a8 7f                	test   al,0x7f
    25d9:	00 02                	add    BYTE PTR [rdx],al
    25db:	00 04 f1             	add    BYTE PTR [rcx+rsi*8],al
    25de:	1f                   	(bad)
    25df:	fd                   	std
    25e0:	1f                   	(bad)
    25e1:	06                   	(bad)
    25e2:	a0 82 cb 00 00 00 00 	movabs al,ds:0x200000000cb82
    25e9:	02 00 
    25eb:	04 92                	add    al,0x92
    25ed:	1e                   	(bad)
    25ee:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    25ef:	1e                   	(bad)
    25f0:	06                   	(bad)
    25f1:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    25f8:	02 00 
    25fa:	04 a7                	add    al,0xa7
    25fc:	1e                   	(bad)
    25fd:	b3 1e                	mov    bl,0x1e
    25ff:	06                   	(bad)
    2600:	a0 c2 cb 00 00 00 00 	movabs al,ds:0x200000000cbc2
    2607:	02 00 
    2609:	04 b3                	add    al,0xb3
    260b:	1e                   	(bad)
    260c:	bf 1e 06 a0 5e       	mov    edi,0x5ea0061e
    2611:	cb                   	retf
    2612:	00 00                	add    BYTE PTR [rax],al
    2614:	00 00                	add    BYTE PTR [rax],al
    2616:	03 00                	add    eax,DWORD PTR [rax]
    2618:	04 bf                	add    al,0xbf
    261a:	1e                   	(bad)
    261b:	f9                   	stc
    261c:	1e                   	(bad)
    261d:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2620:	00 00                	add    BYTE PTR [rax],al
    2622:	00 00                	add    BYTE PTR [rax],al
    2624:	04 e5                	add    al,0xe5
    2626:	1e                   	(bad)
    2627:	ee                   	out    dx,al
    2628:	1e                   	(bad)
    2629:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    262c:	ee                   	out    dx,al
    262d:	1e                   	(bad)
    262e:	8a 1f                	mov    bl,BYTE PTR [rdi]
    2630:	03 91 a8 7f 00 02    	add    edx,DWORD PTR [rcx+0x2007fa8]
    2636:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
    2639:	1e                   	(bad)
    263a:	85 1f                	test   DWORD PTR [rdi],ebx
    263c:	06                   	(bad)
    263d:	a0 82 cb 00 00 00 00 	movabs al,ds:0x200000000cb82
    2644:	02 00 
    2646:	04 9a                	add    al,0x9a
    2648:	1d af 1d 06 a0       	sbb    eax,0xa0061daf
    264d:	25 cb 00 00 00       	and    eax,0xcb
    2652:	00 02                	add    BYTE PTR [rdx],al
    2654:	00 04 af             	add    BYTE PTR [rdi+rbp*4],al
    2657:	1d bb 1d 06 a0       	sbb    eax,0xa0061dbb
    265c:	cb                   	retf
    265d:	cb                   	retf
    265e:	00 00                	add    BYTE PTR [rax],al
    2660:	00 00                	add    BYTE PTR [rax],al
    2662:	02 00                	add    al,BYTE PTR [rax]
    2664:	04 bb                	add    al,0xbb
    2666:	1d c7 1d 06 a0       	sbb    eax,0xa0061dc7
    266b:	5e                   	pop    rsi
    266c:	cb                   	retf
    266d:	00 00                	add    BYTE PTR [rax],al
    266f:	00 00                	add    BYTE PTR [rax],al
    2671:	03 00                	add    eax,DWORD PTR [rax]
    2673:	04 c7                	add    al,0xc7
    2675:	1d 81 1e 01 5e       	sbb    eax,0x5e011e81
    267a:	00 00                	add    BYTE PTR [rax],al
    267c:	00 00                	add    BYTE PTR [rax],al
    267e:	00 04 ed 1d f6 1d 01 	add    BYTE PTR [rbp*8+0x11df61d],al
    2685:	50                   	push   rax
    2686:	04 f6                	add    al,0xf6
    2688:	1d 92 1e 03 91       	sbb    eax,0x91031e92
    268d:	a8 7f                	test   al,0x7f
    268f:	00 02                	add    BYTE PTR [rdx],al
    2691:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
    2694:	1e                   	(bad)
    2695:	8d 1e                	lea    ebx,[rsi]
    2697:	06                   	(bad)
    2698:	a0 82 cb 00 00 00 00 	movabs al,ds:0x200000000cb82
    269f:	02 00 
    26a1:	04 a2                	add    al,0xa2
    26a3:	1c b7                	sbb    al,0xb7
    26a5:	1c 06                	sbb    al,0x6
    26a7:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    26ae:	02 00 
    26b0:	04 b7                	add    al,0xb7
    26b2:	1c c3                	sbb    al,0xc3
    26b4:	1c 06                	sbb    al,0x6
    26b6:	a0 d8 cb 00 00 00 00 	movabs al,ds:0x200000000cbd8
    26bd:	02 00 
    26bf:	04 c3                	add    al,0xc3
    26c1:	1c cf                	sbb    al,0xcf
    26c3:	1c 06                	sbb    al,0x6
    26c5:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    26cc:	03 00 
    26ce:	04 cf                	add    al,0xcf
    26d0:	1c 89                	sbb    al,0x89
    26d2:	1d 01 5e 00 00       	sbb    eax,0x5e01
    26d7:	00 00                	add    BYTE PTR [rax],al
    26d9:	00 04 f5 1c fe 1c 01 	add    BYTE PTR [rsi*8+0x11cfe1c],al
    26e0:	50                   	push   rax
    26e1:	04 fe                	add    al,0xfe
    26e3:	1c 9a                	sbb    al,0x9a
    26e5:	1d 03 91 a8 7f       	sbb    eax,0x7fa89103
    26ea:	00 02                	add    BYTE PTR [rdx],al
    26ec:	00 04 89             	add    BYTE PTR [rcx+rcx*4],al
    26ef:	1d 95 1d 06 a0       	sbb    eax,0xa0061d95
    26f4:	82                   	(bad)
    26f5:	cb                   	retf
    26f6:	00 00                	add    BYTE PTR [rax],al
    26f8:	00 00                	add    BYTE PTR [rax],al
    26fa:	02 00                	add    al,BYTE PTR [rax]
    26fc:	04 ae                	add    al,0xae
    26fe:	1b bf 1b 06 a0 25    	sbb    edi,DWORD PTR [rdi+0x25a0061b]
    2704:	cb                   	retf
    2705:	00 00                	add    BYTE PTR [rax],al
    2707:	00 00                	add    BYTE PTR [rax],al
    2709:	02 00                	add    al,BYTE PTR [rax]
    270b:	04 bf                	add    al,0xbf
    270d:	1b cb                	sbb    ecx,ebx
    270f:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2711:	a0 e1 cb 00 00 00 00 	movabs al,ds:0x200000000cbe1
    2718:	02 00 
    271a:	04 cb                	add    al,0xcb
    271c:	1b d7                	sbb    edx,edi
    271e:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2720:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    2727:	03 00 
    2729:	04 d7                	add    al,0xd7
    272b:	1b 91 1c 01 5e 00    	sbb    edx,DWORD PTR [rcx+0x5e011c]
    2731:	00 00                	add    BYTE PTR [rax],al
    2733:	00 00                	add    BYTE PTR [rax],al
    2735:	04 fd                	add    al,0xfd
    2737:	1b 86 1c 01 50 04    	sbb    eax,DWORD PTR [rsi+0x450011c]
    273d:	86 1c a2             	xchg   BYTE PTR [rdx+riz*4],bl
    2740:	1c 03                	sbb    al,0x3
    2742:	91                   	xchg   ecx,eax
    2743:	a8 7f                	test   al,0x7f
    2745:	00 02                	add    BYTE PTR [rdx],al
    2747:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    274a:	1c 9d                	sbb    al,0x9d
    274c:	1c 06                	sbb    al,0x6
    274e:	a0 82 cb 00 00 00 00 	movabs al,ds:0x300000000cb82
    2755:	03 00 
    2757:	04 f6                	add    al,0xf6
    2759:	15 8f 16 06 a0       	adc    eax,0xa006168f
    275e:	25 cb 00 00 00       	and    eax,0xcb
    2763:	00 02                	add    BYTE PTR [rdx],al
    2765:	00 04 8f             	add    BYTE PTR [rdi+rcx*4],al
    2768:	16                   	(bad)
    2769:	9b                   	fwait
    276a:	16                   	(bad)
    276b:	06                   	(bad)
    276c:	a0 53 cb 00 00 00 00 	movabs al,ds:0x200000000cb53
    2773:	02 00 
    2775:	04 9b                	add    al,0x9b
    2777:	16                   	(bad)
    2778:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2779:	16                   	(bad)
    277a:	06                   	(bad)
    277b:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    2782:	03 00 
    2784:	04 a7                	add    al,0xa7
    2786:	16                   	(bad)
    2787:	ec                   	in     al,dx
    2788:	16                   	(bad)
    2789:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    278c:	00 00                	add    BYTE PTR [rax],al
    278e:	00 00                	add    BYTE PTR [rax],al
    2790:	00 00                	add    BYTE PTR [rax],al
    2792:	04 d5                	add    al,0xd5
    2794:	16                   	(bad)
    2795:	dc 16                	fcom   QWORD PTR [rsi]
    2797:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    279a:	dc 16                	fcom   QWORD PTR [rsi]
    279c:	e7 16                	out    0x16,eax
    279e:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    27a1:	e7 16                	out    0x16,eax
    27a3:	eb 16                	jmp    27bb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1bb>
    27a5:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
    27a8:	02 00                	add    al,BYTE PTR [rax]
    27aa:	04 ec                	add    al,0xec
    27ac:	16                   	(bad)
    27ad:	f4                   	hlt
    27ae:	16                   	(bad)
    27af:	06                   	(bad)
    27b0:	a0 82 cb 00 00 00 00 	movabs al,ds:0x400000000cb82
    27b7:	04 00 
    27b9:	04 f4                	add    al,0xf4
    27bb:	16                   	(bad)
    27bc:	fc                   	cld
    27bd:	16                   	(bad)
    27be:	06                   	(bad)
    27bf:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    27c6:	02 00 
    27c8:	04 fc                	add    al,0xfc
    27ca:	16                   	(bad)
    27cb:	84 17                	test   BYTE PTR [rdi],dl
    27cd:	06                   	(bad)
    27ce:	a0 a6 cb 00 00 00 00 	movabs al,ds:0x200000000cba6
    27d5:	02 00 
    27d7:	04 84                	add    al,0x84
    27d9:	17                   	(bad)
    27da:	90                   	nop
    27db:	17                   	(bad)
    27dc:	06                   	(bad)
    27dd:	a0 5e cb 00 00 00 00 	movabs al,ds:0xcb5e
    27e4:	00 00 
    27e6:	04 95                	add    al,0x95
    27e8:	17                   	(bad)
    27e9:	cb                   	retf
    27ea:	17                   	(bad)
    27eb:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    27ee:	00 00                	add    BYTE PTR [rax],al
    27f0:	00 00                	add    BYTE PTR [rax],al
    27f2:	04 bb                	add    al,0xbb
    27f4:	17                   	(bad)
    27f5:	c2 17 01             	ret    0x117
    27f8:	50                   	push   rax
    27f9:	04 c2                	add    al,0xc2
    27fb:	17                   	(bad)
    27fc:	99                   	cdq
    27fd:	18 01                	sbb    BYTE PTR [rcx],al
    27ff:	5d                   	pop    rbp
    2800:	00 02                	add    BYTE PTR [rdx],al
    2802:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    2805:	17                   	(bad)
    2806:	d3 17                	rcl    DWORD PTR [rdi],cl
    2808:	06                   	(bad)
    2809:	a0 82 cb 00 00 00 00 	movabs al,ds:0x400000000cb82
    2810:	04 00 
    2812:	04 d3                	add    al,0xd3
    2814:	17                   	(bad)
    2815:	db 17                	fist   DWORD PTR [rdi]
    2817:	06                   	(bad)
    2818:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    281f:	02 00 
    2821:	04 db                	add    al,0xdb
    2823:	17                   	(bad)
    2824:	e7 17                	out    0x17,eax
    2826:	06                   	(bad)
    2827:	a0 e1 cb 00 00 00 00 	movabs al,ds:0x200000000cbe1
    282e:	02 00 
    2830:	04 e7                	add    al,0xe7
    2832:	17                   	(bad)
    2833:	f3 17                	repz (bad)
    2835:	06                   	(bad)
    2836:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    283d:	03 00 
    283f:	04 f3                	add    al,0xf3
    2841:	17                   	(bad)
    2842:	a9 18 01 5e 00       	test   eax,0x5e0118
    2847:	00 00                	add    BYTE PTR [rax],al
    2849:	00 00                	add    BYTE PTR [rax],al
    284b:	04 99                	add    al,0x99
    284d:	18 a0 18 01 50 04    	sbb    BYTE PTR [rax+0x4500118],ah
    2853:	a0 18 f7 18 01 5d 00 	movabs al,ds:0x2005d0118f718
    285a:	02 00 
    285c:	04 a9                	add    al,0xa9
    285e:	18 b1 18 06 a0 82    	sbb    BYTE PTR [rcx-0x7d5ff9e8],dh
    2864:	cb                   	retf
    2865:	00 00                	add    BYTE PTR [rax],al
    2867:	00 00                	add    BYTE PTR [rax],al
    2869:	04 00                	add    al,0x0
    286b:	04 b1                	add    al,0xb1
    286d:	18 b9 18 06 a0 25    	sbb    BYTE PTR [rcx+0x25a00618],bh
    2873:	cb                   	retf
    2874:	00 00                	add    BYTE PTR [rax],al
    2876:	00 00                	add    BYTE PTR [rax],al
    2878:	02 00                	add    al,BYTE PTR [rax]
    287a:	04 b9                	add    al,0xb9
    287c:	18 c5                	sbb    ch,al
    287e:	18 06                	sbb    BYTE PTR [rsi],al
    2880:	a0 b5 cb 00 00 00 00 	movabs al,ds:0x200000000cbb5
    2887:	02 00 
    2889:	04 c5                	add    al,0xc5
    288b:	18 d1                	sbb    cl,dl
    288d:	18 06                	sbb    BYTE PTR [rsi],al
    288f:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    2896:	03 00 
    2898:	04 d1                	add    al,0xd1
    289a:	18 87 19 01 5e 00    	sbb    BYTE PTR [rdi+0x5e0119],al
    28a0:	00 00                	add    BYTE PTR [rax],al
    28a2:	00 00                	add    BYTE PTR [rax],al
    28a4:	04 f7                	add    al,0xf7
    28a6:	18 fe                	sbb    dh,bh
    28a8:	18 01                	sbb    BYTE PTR [rcx],al
    28aa:	50                   	push   rax
    28ab:	04 fe                	add    al,0xfe
    28ad:	18 d5                	sbb    ch,dl
    28af:	19 01                	sbb    DWORD PTR [rcx],eax
    28b1:	5d                   	pop    rbp
    28b2:	00 02                	add    BYTE PTR [rdx],al
    28b4:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    28b7:	19 8f 19 06 a0 82    	sbb    DWORD PTR [rdi-0x7d5ff9e7],ecx
    28bd:	cb                   	retf
    28be:	00 00                	add    BYTE PTR [rax],al
    28c0:	00 00                	add    BYTE PTR [rax],al
    28c2:	04 00                	add    al,0x0
    28c4:	04 8f                	add    al,0x8f
    28c6:	19 97 19 06 a0 25    	sbb    DWORD PTR [rdi+0x25a00619],edx
    28cc:	cb                   	retf
    28cd:	00 00                	add    BYTE PTR [rax],al
    28cf:	00 00                	add    BYTE PTR [rax],al
    28d1:	02 00                	add    al,BYTE PTR [rax]
    28d3:	04 97                	add    al,0x97
    28d5:	19 a3 19 06 a0 c2    	sbb    DWORD PTR [rbx-0x3d5ff9e7],esp
    28db:	cb                   	retf
    28dc:	00 00                	add    BYTE PTR [rax],al
    28de:	00 00                	add    BYTE PTR [rax],al
    28e0:	02 00                	add    al,BYTE PTR [rax]
    28e2:	04 a3                	add    al,0xa3
    28e4:	19 af 19 06 a0 5e    	sbb    DWORD PTR [rdi+0x5ea00619],ebp
    28ea:	cb                   	retf
    28eb:	00 00                	add    BYTE PTR [rax],al
    28ed:	00 00                	add    BYTE PTR [rax],al
    28ef:	03 00                	add    eax,DWORD PTR [rax]
    28f1:	04 af                	add    al,0xaf
    28f3:	19 e5                	sbb    ebp,esp
    28f5:	19 01                	sbb    DWORD PTR [rcx],eax
    28f7:	5e                   	pop    rsi
    28f8:	00 00                	add    BYTE PTR [rax],al
    28fa:	00 00                	add    BYTE PTR [rax],al
    28fc:	00 04 d5 19 dc 19 01 	add    BYTE PTR [rdx*8+0x119dc19],al
    2903:	50                   	push   rax
    2904:	04 dc                	add    al,0xdc
    2906:	19 b3 1a 01 5d 00    	sbb    DWORD PTR [rbx+0x5d011a],esi
    290c:	02 00                	add    al,BYTE PTR [rax]
    290e:	04 e5                	add    al,0xe5
    2910:	19 ed                	sbb    ebp,ebp
    2912:	19 06                	sbb    DWORD PTR [rsi],eax
    2914:	a0 82 cb 00 00 00 00 	movabs al,ds:0x400000000cb82
    291b:	04 00 
    291d:	04 ed                	add    al,0xed
    291f:	19 f5                	sbb    ebp,esi
    2921:	19 06                	sbb    DWORD PTR [rsi],eax
    2923:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    292a:	02 00 
    292c:	04 f5                	add    al,0xf5
    292e:	19 81 1a 06 a0 cb    	sbb    DWORD PTR [rcx-0x345ff9e6],eax
    2934:	cb                   	retf
    2935:	00 00                	add    BYTE PTR [rax],al
    2937:	00 00                	add    BYTE PTR [rax],al
    2939:	02 00                	add    al,BYTE PTR [rax]
    293b:	04 81                	add    al,0x81
    293d:	1a 8d 1a 06 a0 5e    	sbb    cl,BYTE PTR [rbp+0x5ea0061a]
    2943:	cb                   	retf
    2944:	00 00                	add    BYTE PTR [rax],al
    2946:	00 00                	add    BYTE PTR [rax],al
    2948:	03 00                	add    eax,DWORD PTR [rax]
    294a:	04 8d                	add    al,0x8d
    294c:	1a c3                	sbb    al,bl
    294e:	1a 01                	sbb    al,BYTE PTR [rcx]
    2950:	5e                   	pop    rsi
    2951:	00 00                	add    BYTE PTR [rax],al
    2953:	00 00                	add    BYTE PTR [rax],al
    2955:	00 04 b3             	add    BYTE PTR [rbx+rsi*4],al
    2958:	1a ba 1a 01 50 04    	sbb    bh,BYTE PTR [rdx+0x450011a]
    295e:	ba 1a 91 1b 01       	mov    edx,0x11b911a
    2963:	5d                   	pop    rbp
    2964:	00 02                	add    BYTE PTR [rdx],al
    2966:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    2969:	1a cb                	sbb    cl,bl
    296b:	1a 06                	sbb    al,BYTE PTR [rsi]
    296d:	a0 82 cb 00 00 00 00 	movabs al,ds:0x400000000cb82
    2974:	04 00 
    2976:	04 cb                	add    al,0xcb
    2978:	1a d3                	sbb    dl,bl
    297a:	1a 06                	sbb    al,BYTE PTR [rsi]
    297c:	a0 25 cb 00 00 00 00 	movabs al,ds:0x200000000cb25
    2983:	02 00 
    2985:	04 d3                	add    al,0xd3
    2987:	1a df                	sbb    bl,bh
    2989:	1a 06                	sbb    al,BYTE PTR [rsi]
    298b:	a0 d8 cb 00 00 00 00 	movabs al,ds:0x200000000cbd8
    2992:	02 00 
    2994:	04 df                	add    al,0xdf
    2996:	1a eb                	sbb    ch,bl
    2998:	1a 06                	sbb    al,BYTE PTR [rsi]
    299a:	a0 5e cb 00 00 00 00 	movabs al,ds:0x300000000cb5e
    29a1:	03 00 
    29a3:	04 eb                	add    al,0xeb
    29a5:	1a a1 1b 01 5e 00    	sbb    ah,BYTE PTR [rcx+0x5e011b]
    29ab:	00 00                	add    BYTE PTR [rax],al
    29ad:	00 00                	add    BYTE PTR [rax],al
    29af:	04 91                	add    al,0x91
    29b1:	1b 98 1b 01 50 04    	sbb    ebx,DWORD PTR [rax+0x450011b]
    29b7:	98                   	cwde
    29b8:	1b ae 1b 01 5d 00    	sbb    ebp,DWORD PTR [rsi+0x5d011b]
    29be:	02 00                	add    al,BYTE PTR [rax]
    29c0:	04 a1                	add    al,0xa1
    29c2:	1b a9 1b 06 a0 82    	sbb    ebp,DWORD PTR [rcx-0x7d5ff9e5]
    29c8:	cb                   	retf
	...
    29d1:	00 00                	add    BYTE PTR [rax],al
    29d3:	04 c0                	add    al,0xc0
    29d5:	11 e1                	adc    ecx,esp
    29d7:	11 01                	adc    DWORD PTR [rcx],eax
    29d9:	55                   	push   rbp
    29da:	04 e1                	add    al,0xe1
    29dc:	11 83 12 01 56 04    	adc    DWORD PTR [rbx+0x4560112],eax
    29e2:	83 12 8e             	adc    DWORD PTR [rdx],0xffffff8e
    29e5:	12 04 a3             	adc    al,BYTE PTR [rbx+riz*4]
    29e8:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    29eb:	00 00                	add    BYTE PTR [rax],al
    29ed:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    29f0:	11 cd                	adc    ebp,ecx
    29f2:	11 06                	adc    DWORD PTR [rsi],eax
    29f4:	54                   	push   rsp
    29f5:	93                   	xchg   ebx,eax
    29f6:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    29f9:	08 00                	or     BYTE PTR [rax],al
    29fb:	00 00                	add    BYTE PTR [rax],al
    29fd:	00 00                	add    BYTE PTR [rax],al
    29ff:	00 00                	add    BYTE PTR [rax],al
    2a01:	04 c0                	add    al,0xc0
    2a03:	11 d5                	adc    ebp,edx
    2a05:	11 06                	adc    DWORD PTR [rsi],eax
    2a07:	52                   	push   rdx
    2a08:	93                   	xchg   ebx,eax
    2a09:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2a0c:	08 04 d5 11 da 11 06 	or     BYTE PTR [rdx*8+0x611da11],al
    2a13:	5d                   	pop    rbp
    2a14:	93                   	xchg   ebx,eax
    2a15:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2a18:	08 04 da             	or     BYTE PTR [rdx+rbx*8],al
    2a1b:	11 85 12 06 5d 93    	adc    DWORD PTR [rbp-0x6ca2f9ee],eax
    2a21:	08 5c 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],bl
    2a25:	00 00                	add    BYTE PTR [rax],al
    2a27:	00 00                	add    BYTE PTR [rax],al
    2a29:	00 00                	add    BYTE PTR [rax],al
    2a2b:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2a2e:	11 e6                	adc    esi,esp
    2a30:	11 01                	adc    DWORD PTR [rcx],eax
    2a32:	59                   	pop    rcx
    2a33:	04 e6                	add    al,0xe6
    2a35:	11 89 12 01 5e 04    	adc    DWORD PTR [rcx+0x45e0112],ecx
    2a3b:	89 12                	mov    DWORD PTR [rdx],edx
    2a3d:	8e 12                	mov    ss,WORD PTR [rdx]
    2a3f:	04 a3                	add    al,0xa3
    2a41:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    2a44:	00 00                	add    BYTE PTR [rax],al
    2a46:	00 00                	add    BYTE PTR [rax],al
    2a48:	00 00                	add    BYTE PTR [rax],al
    2a4a:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2a4d:	11 fd                	adc    ebp,edi
    2a4f:	11 01                	adc    DWORD PTR [rcx],eax
    2a51:	50                   	push   rax
    2a52:	04 fd                	add    al,0xfd
    2a54:	11 82 12 01 53 04    	adc    DWORD PTR [rdx+0x4530112],eax
    2a5a:	82                   	(bad)
    2a5b:	12 8d 12 01 55 00    	adc    cl,BYTE PTR [rbp+0x550112]
	...
    2a71:	00 00                	add    BYTE PTR [rax],al
    2a73:	04 c0                	add    al,0xc0
    2a75:	21 99 22 01 55 04    	and    DWORD PTR [rcx+0x4550122],ebx
    2a7b:	99                   	cdq
    2a7c:	22 bf 23 01 51 04    	and    bh,BYTE PTR [rdi+0x4510123]
    2a82:	bf 23 d1 23 04       	mov    edi,0x423d123
    2a87:	a3 01 55 9f 04 d1 23 	movabs ds:0x23dd23d1049f5501,eax
    2a8e:	dd 23 
    2a90:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    2a93:	dd 23                	frstor [rbx]
    2a95:	ea                   	(bad)
    2a96:	23 01                	and    eax,DWORD PTR [rcx]
    2a98:	55                   	push   rbp
    2a99:	04 ea                	add    al,0xea
    2a9b:	23 f9                	and    edi,ecx
    2a9d:	23 01                	and    eax,DWORD PTR [rcx]
    2a9f:	51                   	push   rcx
    2aa0:	04 f9                	add    al,0xf9
    2aa2:	23 fc                	and    edi,esp
    2aa4:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2aa7:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2aaa:	04 fc                	add    al,0xfc
    2aac:	23 96 24 01 55 04    	and    edx,DWORD PTR [rsi+0x4550124]
    2ab2:	96                   	xchg   esi,eax
    2ab3:	24 9b                	and    al,0x9b
    2ab5:	24 04                	and    al,0x4
    2ab7:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    2abe:	00 00 
	...
    2acc:	04 c0                	add    al,0xc0
    2ace:	21 83 22 01 54 04    	and    DWORD PTR [rbx+0x4540122],eax
    2ad4:	83 22 c3             	and    DWORD PTR [rdx],0xffffffc3
    2ad7:	23 01                	and    eax,DWORD PTR [rcx]
    2ad9:	52                   	push   rdx
    2ada:	04 c3                	add    al,0xc3
    2adc:	23 dd                	and    ebx,ebp
    2ade:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2ae1:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2ae5:	dd 23                	frstor [rbx]
    2ae7:	f5                   	cmc
    2ae8:	23 01                	and    eax,DWORD PTR [rcx]
    2aea:	54                   	push   rsp
    2aeb:	04 f5                	add    al,0xf5
    2aed:	23 f9                	and    edi,ecx
    2aef:	23 01                	and    eax,DWORD PTR [rcx]
    2af1:	52                   	push   rdx
    2af2:	04 f9                	add    al,0xf9
    2af4:	23 fc                	and    edi,esp
    2af6:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2af9:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2afd:	fc                   	cld
    2afe:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2b04:	8f                   	(bad)
    2b05:	24 9b                	and    al,0x9b
    2b07:	24 04                	and    al,0x4
    2b09:	a3 01 54 9f 00 00 00 	movabs ds:0x9f5401,eax
    2b10:	00 00 
	...
    2b22:	00 00                	add    BYTE PTR [rax],al
    2b24:	04 c0                	add    al,0xc0
    2b26:	21 8c 22 01 61 04 8c 	and    DWORD PTR [rdx+riz*1-0x73fb9eff],ecx
    2b2d:	22 bf 23 01 64 04    	and    bh,BYTE PTR [rdi+0x4640123]
    2b33:	bf 23 d1 23 06       	mov    edi,0x623d123
    2b38:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23d1049f2e11a503,eax
    2b3f:	d1 23 
    2b41:	dd 23                	frstor [rbx]
    2b43:	01 64 04 dd          	add    DWORD PTR [rsp+rax*1-0x23],esp
    2b47:	23 e4                	and    esp,esp
    2b49:	23 01                	and    eax,DWORD PTR [rcx]
    2b4b:	61                   	(bad)
    2b4c:	04 e4                	add    al,0xe4
    2b4e:	23 ea                	and    ebp,edx
    2b50:	23 06                	and    eax,DWORD PTR [rsi]
    2b52:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23ea049f2e11a503,eax
    2b59:	ea 23 
    2b5b:	f0 23 01             	lock and eax,DWORD PTR [rcx]
    2b5e:	61                   	(bad)
    2b5f:	04 f0                	add    al,0xf0
    2b61:	23 f9                	and    edi,ecx
    2b63:	23 01                	and    eax,DWORD PTR [rcx]
    2b65:	64 04 f9             	fs add al,0xf9
    2b68:	23 fc                	and    edi,esp
    2b6a:	23 06                	and    eax,DWORD PTR [rsi]
    2b6c:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23fc049f2e11a503,eax
    2b73:	fc 23 
    2b75:	9a                   	(bad)
    2b76:	24 01                	and    al,0x1
    2b78:	61                   	(bad)
    2b79:	04 9a                	add    al,0x9a
    2b7b:	24 9b                	and    al,0x9b
    2b7d:	24 06                	and    al,0x6
    2b7f:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2b86:	00 00 
	...
    2b94:	00 00                	add    BYTE PTR [rax],al
    2b96:	04 e6                	add    al,0xe6
    2b98:	21 99 22 0a 9e 08    	and    DWORD PTR [rcx+0x89e0a22],ebx
	...
    2ba6:	04 99                	add    al,0x99
    2ba8:	22 b4 22 01 61 04 ce 	and    dh,BYTE PTR [rdx+riz*1-0x31fb9eff]
    2baf:	22 e0                	and    ah,al
    2bb1:	22 01                	and    al,BYTE PTR [rcx]
    2bb3:	61                   	(bad)
    2bb4:	04 e9                	add    al,0xe9
    2bb6:	22 80 23 01 61 04    	and    al,BYTE PTR [rax+0x4610123]
    2bbc:	88 23                	mov    BYTE PTR [rbx],ah
    2bbe:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2bbf:	23 01                	and    eax,DWORD PTR [rcx]
    2bc1:	61                   	(bad)
    2bc2:	04 c3                	add    al,0xc3
    2bc4:	23 cb                	and    ecx,ebx
    2bc6:	23 06                	and    eax,DWORD PTR [rsi]
    2bc8:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2bc9:	11 35 a8 2e 9f 04    	adc    DWORD PTR [rip+0x49f2ea8],esi        # 49f5a77 <_end+0x49efa5f>
    2bcf:	cb                   	retf
    2bd0:	23 dd                	and    ebx,ebp
    2bd2:	23 01                	and    eax,DWORD PTR [rcx]
    2bd4:	61                   	(bad)
    2bd5:	04 dd                	add    al,0xdd
    2bd7:	23 f5                	and    esi,ebp
    2bd9:	23 0a                	and    ecx,DWORD PTR [rdx]
    2bdb:	9e                   	sahf
    2bdc:	08 00                	or     BYTE PTR [rax],al
	...
    2bea:	04 e6                	add    al,0xe6
    2bec:	21 99 22 02 30 9f    	and    DWORD PTR [rcx-0x60cffdde],ebx
    2bf2:	04 dd                	add    al,0xdd
    2bf4:	23 f5                	and    esi,ebp
    2bf6:	23 02                	and    eax,DWORD PTR [rdx]
    2bf8:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    2bfe:	00 00                	add    BYTE PTR [rax],al
    2c00:	00 04 b5 23 c3 23 01 	add    BYTE PTR [rsi*4+0x123c323],al
    2c07:	61                   	(bad)
    2c08:	04 e8                	add    al,0xe8
    2c0a:	23 ea                	and    ebp,edx
    2c0c:	23 01                	and    eax,DWORD PTR [rcx]
    2c0e:	61                   	(bad)
    2c0f:	04 f5                	add    al,0xf5
    2c11:	23 f9                	and    edi,ecx
    2c13:	23 01                	and    eax,DWORD PTR [rcx]
    2c15:	61                   	(bad)
    2c16:	00 02                	add    BYTE PTR [rdx],al
    2c18:	00 00                	add    BYTE PTR [rax],al
    2c1a:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    2c1d:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2c23:	8f                   	(bad)
    2c24:	24 9b                	and    al,0x9b
    2c26:	24 04                	and    al,0x4
    2c28:	a3 01 54 9f 00 02 00 	movabs ds:0x2009f5401,eax
    2c2f:	00 00 
    2c31:	04 fc                	add    al,0xfc
    2c33:	23 9a 24 01 61 04    	and    ebx,DWORD PTR [rdx+0x4610124]
    2c39:	9a                   	(bad)
    2c3a:	24 9b                	and    al,0x9b
    2c3c:	24 06                	and    al,0x6
    2c3e:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2c45:	00 00 
	...
    2c4f:	00 00                	add    BYTE PTR [rax],al
    2c51:	04 a0                	add    al,0xa0
    2c53:	24 d7                	and    al,0xd7
    2c55:	24 01                	and    al,0x1
    2c57:	55                   	push   rbp
    2c58:	04 d7                	add    al,0xd7
    2c5a:	24 d1                	and    al,0xd1
    2c5c:	29 04 a3             	sub    DWORD PTR [rbx+riz*4],eax
    2c5f:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2c62:	04 d1                	add    al,0xd1
    2c64:	29 f3                	sub    ebx,esi
    2c66:	29 01                	sub    DWORD PTR [rcx],eax
    2c68:	55                   	push   rbp
    2c69:	04 f3                	add    al,0xf3
    2c6b:	29 9d 2a 04 a3 01    	sub    DWORD PTR [rbp+0x1a3042a],ebx
    2c71:	55                   	push   rbp
    2c72:	9f                   	lahf
    2c73:	04 9d                	add    al,0x9d
    2c75:	2a b7 2a 01 55 04    	sub    dh,BYTE PTR [rdi+0x455012a]
    2c7b:	b7 2a                	mov    bh,0x2a
    2c7d:	bc 2a 04 a3 01       	mov    esp,0x1a3042a
    2c82:	55                   	push   rbp
    2c83:	9f                   	lahf
	...
    2c98:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2c9b:	24 a7                	and    al,0xa7
    2c9d:	25 01 61 04 a7       	and    eax,0xa7046101
    2ca2:	25 d1 29 01 65       	and    eax,0x650129d1
    2ca7:	04 d1                	add    al,0xd1
    2ca9:	29 f2                	sub    edx,esi
    2cab:	29 01                	sub    DWORD PTR [rcx],eax
    2cad:	61                   	(bad)
    2cae:	04 f2                	add    al,0xf2
    2cb0:	29 f3                	sub    ebx,esi
    2cb2:	29 06                	sub    DWORD PTR [rsi],eax
    2cb4:	a3 03 a5 11 35 9f 04 	movabs ds:0x29f3049f3511a503,eax
    2cbb:	f3 29 
    2cbd:	fd                   	std
    2cbe:	29 01                	sub    DWORD PTR [rcx],eax
    2cc0:	65 04 fd             	gs add al,0xfd
    2cc3:	29 89 2a 01 61 04    	sub    DWORD PTR [rcx+0x461012a],ecx
    2cc9:	89 2a                	mov    DWORD PTR [rdx],ebp
    2ccb:	9c                   	pushf
    2ccc:	2a 01                	sub    al,BYTE PTR [rcx]
    2cce:	65 04 9c             	gs add al,0x9c
    2cd1:	2a 9d 2a 06 a3 03    	sub    bl,BYTE PTR [rbp+0x3a3062a]
    2cd7:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2cd8:	11 35 9f 04 9d 2a    	adc    DWORD PTR [rip+0x2a9d049f],esi        # 2a9d317d <_end+0x2a9cd165>
    2cde:	bb 2a 01 61 04       	mov    ebx,0x461012a
    2ce3:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2ce8:	a3 03 a5 11 35 9f 00 	movabs ds:0x9f3511a503,eax
    2cef:	00 00 
	...
    2cfd:	04 c6                	add    al,0xc6
    2cff:	24 a7                	and    al,0xa7
    2d01:	25 06 9e 04 00       	and    eax,0x49e06
    2d06:	00 00                	add    BYTE PTR [rax],al
    2d08:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    2d0b:	25 e0 26 01 69       	and    eax,0x690126e0
    2d10:	04 9b                	add    al,0x9b
    2d12:	27                   	(bad)
    2d13:	b6 27                	mov    dh,0x27
    2d15:	01 69 04             	add    DWORD PTR [rcx+0x4],ebp
    2d18:	c6                   	(bad)
    2d19:	27                   	(bad)
    2d1a:	b9 29 01 69 04       	mov    ecx,0x4690129
    2d1f:	d1 29                	shr    DWORD PTR [rcx],1
    2d21:	f3 29 06             	repz sub DWORD PTR [rsi],eax
    2d24:	9e                   	sahf
    2d25:	04 00                	add    al,0x0
    2d27:	00 00                	add    BYTE PTR [rax],al
    2d29:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2d2c:	29 fd                	sub    ebp,edi
    2d2e:	29 01                	sub    DWORD PTR [rcx],eax
    2d30:	69 04 fd 29 89 2a 06 	imul   eax,DWORD PTR [rdi*8+0x62a8929],0x49e
    2d37:	9e 04 00 00 
    2d3b:	00 00                	add    BYTE PTR [rax],al
    2d3d:	00 00                	add    BYTE PTR [rax],al
    2d3f:	00 02                	add    BYTE PTR [rdx],al
    2d41:	00 00                	add    BYTE PTR [rax],al
    2d43:	00 02                	add    BYTE PTR [rdx],al
    2d45:	00 00                	add    BYTE PTR [rax],al
    2d47:	00 00                	add    BYTE PTR [rax],al
    2d49:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
    2d4c:	24 a7                	and    al,0xa7
    2d4e:	25 02 30 9f 04       	and    eax,0x49f3002
    2d53:	ef                   	out    dx,eax
    2d54:	28 f7                	sub    bh,dh
    2d56:	28 01                	sub    BYTE PTR [rcx],al
    2d58:	51                   	push   rcx
    2d59:	04 f7                	add    al,0xf7
    2d5b:	28 fa                	sub    dl,bh
    2d5d:	28 03                	sub    BYTE PTR [rbx],al
    2d5f:	70 01                	jo     2d62 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x302>
    2d61:	9f                   	lahf
    2d62:	04 8f                	add    al,0x8f
    2d64:	29 97 29 01 50 04    	sub    DWORD PTR [rdi+0x4500129],edx
    2d6a:	d1 29                	shr    DWORD PTR [rcx],1
    2d6c:	f3 29 02             	repz sub DWORD PTR [rdx],eax
    2d6f:	30 9f 04 fd 29 89    	xor    BYTE PTR [rdi-0x76d602fc],bl
    2d75:	2a 02                	sub    al,BYTE PTR [rdx]
    2d77:	30 9f 00 01 00 00    	xor    BYTE PTR [rdi+0x100],bl
    2d7d:	00 01                	add    BYTE PTR [rcx],al
    2d7f:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2d82:	28 f7                	sub    bh,dh
    2d84:	28 0f                	sub    BYTE PTR [rdi],cl
    2d86:	71 00                	jno    2d88 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x328>
    2d88:	0c ff                	or     al,0xff
    2d8a:	ff                   	(bad)
    2d8b:	ff                   	(bad)
    2d8c:	ff 1a                	call   FWORD PTR [rdx]
    2d8e:	48 1e                	rex.W (bad)
    2d90:	75 00                	jne    2d92 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x332>
    2d92:	22 23                	and    ah,BYTE PTR [rbx]
    2d94:	10 04 f7             	adc    BYTE PTR [rdi+rsi*8],al
    2d97:	28 fa                	sub    dl,bh
    2d99:	28 0f                	sub    BYTE PTR [rdi],cl
    2d9b:	70 01                	jo     2d9e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x33e>
    2d9d:	0c ff                	or     al,0xff
    2d9f:	ff                   	(bad)
    2da0:	ff                   	(bad)
    2da1:	ff 1a                	call   FWORD PTR [rdx]
    2da3:	48 1e                	rex.W (bad)
    2da5:	75 00                	jne    2da7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x347>
    2da7:	22 23                	and    ah,BYTE PTR [rbx]
    2da9:	10 04 93             	adc    BYTE PTR [rbx+rdx*4],al
    2dac:	29 97 29 0f 70 00    	sub    DWORD PTR [rdi+0x700f29],edx
    2db2:	0c ff                	or     al,0xff
    2db4:	ff                   	(bad)
    2db5:	ff                   	(bad)
    2db6:	ff 1a                	call   FWORD PTR [rdx]
    2db8:	48 1e                	rex.W (bad)
    2dba:	75 00                	jne    2dbc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x35c>
    2dbc:	22 23                	and    ah,BYTE PTR [rbx]
    2dbe:	10 00                	adc    BYTE PTR [rax],al
    2dc0:	00 00                	add    BYTE PTR [rax],al
    2dc2:	00 00                	add    BYTE PTR [rax],al
    2dc4:	00 00                	add    BYTE PTR [rax],al
    2dc6:	04 b9                	add    al,0xb9
    2dc8:	29 d1                	sub    ecx,edx
    2dca:	29 01                	sub    DWORD PTR [rcx],eax
    2dcc:	69 04 e6 29 f3 29 01 	imul   eax,DWORD PTR [rsi+riz*8],0x129f329
    2dd3:	69 04 89 2a 9c 2a 01 	imul   eax,DWORD PTR [rcx+rcx*4],0x12a9c2a
    2dda:	69 00 02 00 00 00    	imul   eax,DWORD PTR [rax],0x2
    2de0:	04 9d                	add    al,0x9d
    2de2:	2a bb 2a 01 61 04    	sub    bh,BYTE PTR [rbx+0x461012a]
    2de8:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2ded:	a3                   	.byte 0xa3
    2dee:	03 a5 11 35 9f 00    	add    esp,DWORD PTR [rbp+0x9f3511]

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	23 00                	and    eax,DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 00       	add    eax,0x800
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 e5 11 00 00    	add    BYTE PTR [rip+0x11e5],al        # 11f6 <main+0x16>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	04 00                	add    al,0x0
  17:	09 04 0d 14 00 07 e0 	or     DWORD PTR [rcx*1-0x1ff8ffec],eax
  1e:	11 00                	adc    DWORD PTR [rax],eax
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 2e                	add    BYTE PTR [rsi],ch
  26:	00 d5                	add    ch,dl
  28:	00 00                	add    BYTE PTR [rax],al
  2a:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 830 <__abi_tag+0x4b4>
  30:	00 00                	add    BYTE PTR [rax],al
  32:	00 04 78             	add    BYTE PTR [rax+rdi*2],al
  35:	7b 04                	jnp    3b <__abi_tag-0x341>
  37:	7f 84                	jg     ffffffffffffffbd <_end+0xffffffffffff9fa5>
  39:	01 04 87             	add    DWORD PTR [rdi+rax*4],eax
  3c:	01 8e 01 04 91 01    	add    DWORD PTR [rsi+0x1910401],ecx
  42:	98                   	cwde
  43:	01 04 9b             	add    DWORD PTR [rbx+rbx*4],eax
  46:	01 a8 01 00 04 b6    	add    DWORD PTR [rax-0x49fbffff],ebp
  4c:	01 b6 01 04 bb 01    	add    DWORD PTR [rsi+0x1bb0401],esi
  52:	c5 01 04             	(bad)
  55:	c8 01 cd 01          	enter  0xcd01,0x1
  59:	04 d0                	add    al,0xd0
  5b:	01 d5                	add    ebp,edx
  5d:	01 00                	add    DWORD PTR [rax],eax
  5f:	04 d2                	add    al,0xd2
  61:	05 e7 05 04 e7       	add    eax,0xe70405e7
  66:	05 be 08 00 04       	add    eax,0x40008be
  6b:	dc 05 e7 05 04 f0    	fadd   QWORD PTR [rip+0xfffffffff00405e7]        # fffffffff0040658 <_end+0xfffffffff003a640>
  71:	05 f3 05 04 f8       	add    eax,0xf80405f3
  76:	05 f8 05 04 fb       	add    eax,0xfb0405f8
  7b:	05 d8 06 04 e4       	add    eax,0xe40406d8
  80:	06                   	(bad)
  81:	e4 06                	in     al,0x6
  83:	00 04 80             	add    BYTE PTR [rax+rax*4],al
  86:	06                   	(bad)
  87:	8e 06                	mov    es,WORD PTR [rsi]
  89:	04 91                	add    al,0x91
  8b:	06                   	(bad)
  8c:	d8 06                	fadd   DWORD PTR [rsi]
  8e:	00 04 d8             	add    BYTE PTR [rax+rbx*8],al
  91:	06                   	(bad)
  92:	dd 06                	fld    QWORD PTR [rsi]
  94:	04 f9                	add    al,0xf9
  96:	06                   	(bad)
  97:	8b 08                	mov    ecx,DWORD PTR [rax]
  99:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  9c:	07                   	(bad)
  9d:	b6 07                	mov    dh,0x7
  9f:	04 c5                	add    al,0xc5
  a1:	07                   	(bad)
  a2:	e3 07                	jrcxz  ab <__abi_tag-0x2d1>
  a4:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  a7:	07                   	(bad)
  a8:	b6 07                	mov    dh,0x7
  aa:	04 c5                	add    al,0xc5
  ac:	07                   	(bad)
  ad:	ce                   	(bad)
  ae:	07                   	(bad)
  af:	04 ce                	add    al,0xce
  b1:	07                   	(bad)
  b2:	e3 07                	jrcxz  bb <__abi_tag-0x2c1>
  b4:	00 04 ec             	add    BYTE PTR [rsp+rbp*8],al
  b7:	06                   	(bad)
  b8:	f3 06                	repz (bad)
  ba:	04 8b                	add    al,0x8b
  bc:	08 be 08 00 04 8b    	or     BYTE PTR [rsi-0x74fbfff8],bh
  c2:	08 98 08 04 9c 08    	or     BYTE PTR [rax+0x89c0408],bl
  c8:	b9 08 00 04 c4       	mov    ecx,0xc4040008
  cd:	0c c4                	or     al,0xc4
  cf:	0c 04                	or     al,0x4
  d1:	c6                   	(bad)
  d2:	0c cd                	or     al,0xcd
  d4:	0c 04                	or     al,0x4
  d6:	d3 0c d6             	ror    DWORD PTR [rsi+rdx*8],cl
  d9:	0c 04                	or     al,0x4
  db:	db 0c e0             	fisttp DWORD PTR [rax+riz*8]
  de:	0c 00                	or     al,0x0
  e0:	04 ff                	add    al,0xff
  e2:	0c ff                	or     al,0xff
  e4:	0c 04                	or     al,0x4
  e6:	83 0d 94 0d 04 99 0d 	or     DWORD PTR [rip+0xffffffff99040d94],0xd        # ffffffff99040e81 <_end+0xffffffff9903ae69>
  ed:	9e                   	sahf
  ee:	0d 00 04 db 0d       	or     eax,0xddb0400
  f3:	db 0d 04 df 0d e2    	fisttp DWORD PTR [rip+0xffffffffe20ddf04]        # ffffffffe20ddffd <_end+0xffffffffe20d7fe5>
  f9:	0d 04 e8 0d f0       	or     eax,0xf00de804
  fe:	0d 00 c3 00 00       	or     eax,0xc300
 103:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 909 <__abi_tag+0x58d>
 109:	00 00                	add    BYTE PTR [rax],al
 10b:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
 10e:	14 04                	adc    al,0x4
 110:	1e                   	(bad)
 111:	91                   	xchg   ecx,eax
 112:	02 00                	add    al,BYTE PTR [rax]
 114:	04 1e                	add    al,0x1e
 116:	48 04 4b             	rex.W add al,0x4b
 119:	c8 01 04 cc          	enter  0x401,0xcc
 11d:	01 85 02 00 04 1e    	add    DWORD PTR [rbp+0x1e040002],eax
 123:	48 04 7c             	rex.W add al,0x7c
 126:	7e 04                	jle    12c <__abi_tag-0x250>
 128:	98                   	cwde
 129:	01 c3                	add    ebx,eax
 12b:	01 00                	add    DWORD PTR [rax],eax
 12d:	04 4b                	add    al,0x4b
 12f:	7c 04                	jl     135 <__abi_tag-0x247>
 131:	7e 8e                	jle    c1 <__abi_tag-0x2bb>
 133:	01 00                	add    DWORD PTR [rax],eax
 135:	04 c3                	add    al,0xc3
 137:	01 c8                	add    eax,ecx
 139:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
 13c:	01 85 02 00 04 a8    	add    DWORD PTR [rbp-0x57fbfffe],eax
 142:	02 c4                	add    al,ah
 144:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 147:	02 e8                	add    ch,al
 149:	02 00                	add    al,BYTE PTR [rax]
 14b:	04 b0                	add    al,0xb0
 14d:	02 c4                	add    al,ah
 14f:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 152:	02 d2                	add    dl,dl
 154:	02 04 d6             	add    al,BYTE PTR [rsi+rdx*8]
 157:	02 dc                	add    bl,ah
 159:	02 00                	add    al,BYTE PTR [rax]
 15b:	04 f4                	add    al,0xf4
 15d:	02 fb                	add    bh,bl
 15f:	02 04 ff             	add    al,BYTE PTR [rdi+rdi*8]
 162:	02 85 03 00 04 fb    	add    al,BYTE PTR [rbp-0x4fbfffd]
 168:	02 fd                	add    bh,ch
 16a:	02 04 85 03 8c 03 00 	add    al,BYTE PTR [rax*4+0x38c03]
 171:	04 fd                	add    al,0xfd
 173:	02 ff                	add    bh,bh
 175:	02 04 8c             	add    al,BYTE PTR [rsp+rcx*4]
 178:	03 93 03 00 04 93    	add    edx,DWORD PTR [rbx-0x6cfbfffd]
 17e:	03 93 03 04 95 03    	add    edx,DWORD PTR [rbx+0x3950403]
 184:	9c                   	pushf
 185:	03 00                	add    eax,DWORD PTR [rax]
 187:	04 c9                	add    al,0xc9
 189:	06                   	(bad)
 18a:	cb                   	retf
 18b:	06                   	(bad)
 18c:	04 d2                	add    al,0xd2
 18e:	06                   	(bad)
 18f:	d9 06                	fld    DWORD PTR [rsi]
 191:	04 e0                	add    al,0xe0
 193:	06                   	(bad)
 194:	f2 06                	repnz (bad)
 196:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
 199:	06                   	(bad)
 19a:	d2 06                	rol    BYTE PTR [rsi],cl
 19c:	04 f2                	add    al,0xf2
 19e:	06                   	(bad)
 19f:	8a 07                	mov    al,BYTE PTR [rdi]
 1a1:	04 90                	add    al,0x90
 1a3:	07                   	(bad)
 1a4:	93                   	xchg   ebx,eax
 1a5:	07                   	(bad)
 1a6:	04 a0                	add    al,0xa0
 1a8:	07                   	(bad)
 1a9:	a3 07 00 04 d4 07 dd 	movabs ds:0x407dd07d4040007,eax
 1b0:	07 04 
 1b2:	e4 07                	in     al,0x7
 1b4:	b0 08                	mov    al,0x8
 1b6:	04 c0                	add    al,0xc0
 1b8:	08 c5                	or     ch,al
 1ba:	08 00                	or     BYTE PTR [rax],al
 1bc:	04 da                	add    al,0xda
 1be:	08 e1                	or     cl,ah
 1c0:	08 04 e8             	or     BYTE PTR [rax+rbp*8],al
 1c3:	08 99 09 00 c4 00    	or     BYTE PTR [rcx+0xc40009],bl
 1c9:	00 00                	add    BYTE PTR [rax],al
 1cb:	05 00 08 00 00       	add    eax,0x800
 1d0:	00 00                	add    BYTE PTR [rax],al
 1d2:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
 1d5:	4e 04 63             	rex.WRX add al,0x63
 1d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1d9:	04 75                	add    al,0x75
 1db:	80 01 04             	add    BYTE PTR [rcx],0x4
 1de:	84 01                	test   BYTE PTR [rcx],al
 1e0:	88 01                	mov    BYTE PTR [rcx],al
 1e2:	00 04 aa             	add    BYTE PTR [rdx+rbp*4],al
 1e5:	01 b3 01 04 b3 01    	add    DWORD PTR [rbx+0x1b30401],esi
 1eb:	e4 01                	in     al,0x1
 1ed:	00 04 e8             	add    BYTE PTR [rax+rbp*8],al
 1f0:	01 eb                	add    ebx,ebp
 1f2:	01 04 80             	add    DWORD PTR [rax+rax*4],eax
 1f5:	03 b8 03 04 bd 03    	add    edi,DWORD PTR [rax+0x3bd0403]
 1fb:	c1 03 00             	rol    DWORD PTR [rbx],0x0
 1fe:	04 94                	add    al,0x94
 200:	02 97 02 04 a1 02    	add    dl,BYTE PTR [rdi+0x2a10402]
 206:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 207:	02 04 a8             	add    al,BYTE PTR [rax+rbp*4]
 20a:	02 b6 02 00 04 a7    	add    dh,BYTE PTR [rsi-0x58fbfffe]
 210:	04 b0                	add    al,0xb0
 212:	04 04                	add    al,0x4
 214:	b0 04                	mov    al,0x4
 216:	e2 04                	loop   21c <__abi_tag-0x160>
 218:	04 ed                	add    al,0xed
 21a:	04 ef                	add    al,0xef
 21c:	04 00                	add    al,0x0
 21e:	04 cd                	add    al,0xcd
 220:	04 d0                	add    al,0xd0
 222:	04 04                	add    al,0x4
 224:	d4                   	(bad)
 225:	04 de                	add    al,0xde
 227:	04 00                	add    al,0x0
 229:	04 a5                	add    al,0xa5
 22b:	06                   	(bad)
 22c:	a8 06                	test   al,0x6
 22e:	04 ac                	add    al,0xac
 230:	06                   	(bad)
 231:	b6 06                	mov    dh,0x6
 233:	00 04 c1             	add    BYTE PTR [rcx+rax*8],al
 236:	07                   	(bad)
 237:	c7 07 04 c7 07 da    	mov    DWORD PTR [rdi],0xda07c704
 23d:	07                   	(bad)
 23e:	00 04 80             	add    BYTE PTR [rax+rax*4],al
 241:	09 80 09 04 83 09    	or     DWORD PTR [rax+0x9830409],eax
 247:	8b 09                	mov    ecx,DWORD PTR [rcx]
 249:	04 96                	add    al,0x96
 24b:	09 9f 09 00 04 d8    	or     DWORD PTR [rdi-0x27fbfff7],ebx
 251:	09 d8                	or     eax,ebx
 253:	09 04 db             	or     DWORD PTR [rbx+rbx*8],eax
 256:	09 e3                	or     ebx,esp
 258:	09 04 ee             	or     DWORD PTR [rsi+rbp*8],eax
 25b:	09 f8                	or     eax,edi
 25d:	09 00                	or     DWORD PTR [rax],eax
 25f:	04 b0                	add    al,0xb0
 261:	0a b0 0a 04 b3 0a    	or     dh,BYTE PTR [rax+0xab3040a]
 267:	bb 0a 04 c6 0a       	mov    ebx,0xac6040a
 26c:	d0 0a                	ror    BYTE PTR [rdx],1
 26e:	00 04 80             	add    BYTE PTR [rax+rax*4],al
 271:	0b 80 0b 04 83 0b    	or     eax,DWORD PTR [rax+0xb83040b]
 277:	8b 0b                	mov    ecx,DWORD PTR [rbx]
 279:	04 96                	add    al,0x96
 27b:	0b a1 0b 00 04 a6    	or     esp,DWORD PTR [rcx-0x59fbfff5]
 281:	0b a6 0b 04 a7 0b    	or     esp,DWORD PTR [rsi+0xba7040b]
 287:	ac                   	lods   al,BYTE PTR ds:[rsi]
 288:	0b 04 af             	or     eax,DWORD PTR [rdi+rbp*4]
 28b:	0b b4 0b 00 1b 00 00 	or     esi,DWORD PTR [rbx+rcx*1+0x1b00]
 292:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # a98 <__abi_tag+0x71c>
 298:	00 00                	add    BYTE PTR [rax],al
 29a:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
 29d:	76 04                	jbe    2a3 <__abi_tag-0xd9>
 29f:	7a 82                	jp     223 <__abi_tag-0x159>
 2a1:	01 00                	add    DWORD PTR [rax],eax
 2a3:	04 b0                	add    al,0xb0
 2a5:	02 b5 02 04 b8 02    	add    dh,BYTE PTR [rbp+0x2b80402]
 2ab:	bd 02 00 e5 01       	mov    ebp,0x1e50002
 2b0:	00 00                	add    BYTE PTR [rax],al
 2b2:	05 00 08 00 00       	add    eax,0x800
 2b7:	00 00                	add    BYTE PTR [rax],al
 2b9:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
 2bc:	01 a0 01 04 a4 01    	add    DWORD PTR [rax+0x1a40401],esp
 2c2:	ae                   	scas   al,BYTE PTR es:[rdi]
 2c3:	01 04 c4             	add    DWORD PTR [rsp+rax*8],eax
 2c6:	01 8c 02 00 04 c4 01 	add    DWORD PTR [rdx+rax*1+0x1c40400],ecx
 2cd:	da 01                	fiadd  DWORD PTR [rcx]
 2cf:	04 da                	add    al,0xda
 2d1:	01 da                	add    edx,ebx
 2d3:	01 04 de             	add    DWORD PTR [rsi+rbx*8],eax
 2d6:	01 ea                	add    edx,ebp
 2d8:	01 00                	add    DWORD PTR [rax],eax
 2da:	04 95                	add    al,0x95
 2dc:	02 a6 02 04 af 02    	add    ah,BYTE PTR [rsi+0x2af0402]
 2e2:	b4 02                	mov    ah,0x2
 2e4:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
 2e7:	02 b1 07 04 80 08    	add    dh,BYTE PTR [rcx+0x8800407]
 2ed:	af                   	scas   eax,DWORD PTR es:[rdi]
 2ee:	08 00                	or     BYTE PTR [rax],al
 2f0:	04 b4                	add    al,0xb4
 2f2:	02 dd                	add    bl,ch
 2f4:	02 04 ef             	add    al,BYTE PTR [rdi+rbp*8]
 2f7:	02 96 07 04 99 08    	add    dl,BYTE PTR [rsi+0x8990407]
 2fd:	a0 08 00 04 c2 02 dd 	movabs al,ds:0x402dd02c2040008
 304:	02 04 
 306:	ef                   	out    dx,eax
 307:	02 81 05 04 ac 05    	add    al,BYTE PTR [rcx+0x5ac0405]
 30d:	b5 06                	mov    ch,0x6
 30f:	04 b7                	add    al,0xb7
 311:	06                   	(bad)
 312:	ca 06 04             	retf   0x406
 315:	cd 06                	int    0x6
 317:	d9 06                	fld    DWORD PTR [rsi]
 319:	04 dd                	add    al,0xdd
 31b:	06                   	(bad)
 31c:	e1 06                	loope  324 <__abi_tag-0x58>
 31e:	04 e4                	add    al,0xe4
 320:	06                   	(bad)
 321:	f9                   	stc
 322:	06                   	(bad)
 323:	04 fd                	add    al,0xfd
 325:	06                   	(bad)
 326:	96                   	xchg   esi,eax
 327:	07                   	(bad)
 328:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
 32b:	07                   	(bad)
 32c:	b1 07                	mov    cl,0x7
 32e:	04 88                	add    al,0x88
 330:	08 95 08 04 a0 08    	or     BYTE PTR [rbp+0x8a00408],dl
 336:	af                   	scas   eax,DWORD PTR es:[rdi]
 337:	08 00                	or     BYTE PTR [rax],al
 339:	04 b1                	add    al,0xb1
 33b:	07                   	(bad)
 33c:	c2 07 04             	ret    0x407
 33f:	c6 07 cb             	mov    BYTE PTR [rdi],0xcb
 342:	07                   	(bad)
 343:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 346:	0a af 0b 04 b3 0b    	or     ch,BYTE PTR [rdi+0xbb3040b]
 34c:	ca 0b 04             	retf   0x40b
 34f:	ce                   	(bad)
 350:	0b e0                	or     esp,eax
 352:	0b 00                	or     eax,DWORD PTR [rax]
 354:	04 e6                	add    al,0xe6
 356:	0a f1                	or     dh,cl
 358:	0a 04 a7             	or     al,BYTE PTR [rdi+riz*4]
 35b:	0b a7 0b 04 b9 0b    	or     esp,DWORD PTR [rdi+0xbb9040b]
 361:	ca 0b 04             	retf   0x40b
 364:	ce                   	(bad)
 365:	0b d5                	or     edx,ebp
 367:	0b 00                	or     eax,DWORD PTR [rax]
 369:	04 a7                	add    al,0xa7
 36b:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 371:	ab                   	stos   DWORD PTR es:[rdi],eax
 372:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 375:	0b b9 0b 00 04 a7    	or     edi,DWORD PTR [rcx-0x58fbfff5]
 37b:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 381:	ab                   	stos   DWORD PTR es:[rdi],eax
 382:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 385:	0b b9 0b 00 04 f6    	or     edi,DWORD PTR [rcx-0x9fbfff5]
 38b:	0b fd                	or     edi,ebp
 38d:	0b 04 82             	or     eax,DWORD PTR [rdx+rax*4]
 390:	0c a2                	or     al,0xa2
 392:	0c 04                	or     al,0x4
 394:	9b                   	fwait
 395:	10 b8 10 00 04 a2    	adc    BYTE PTR [rax-0x5dfbfff0],bh
 39b:	0c aa                	or     al,0xaa
 39d:	0c 04                	or     al,0x4
 39f:	b6 0c                	mov    dh,0xc
 3a1:	f5                   	cmc
 3a2:	0c 04                	or     al,0x4
 3a4:	b8 10 b8 10 00       	mov    eax,0x10b810
 3a9:	04 bc                	add    al,0xbc
 3ab:	0c d4                	or     al,0xd4
 3ad:	0c 04                	or     al,0x4
 3af:	d4                   	(bad)
 3b0:	0c d4                	or     al,0xd4
 3b2:	0c 04                	or     al,0x4
 3b4:	d8 0c e2             	fmul   DWORD PTR [rdx+riz*8]
 3b7:	0c 00                	or     al,0x0
 3b9:	04 8d                	add    al,0x8d
 3bb:	0d e7 0e 04 ee       	or     eax,0xee040ee7
 3c0:	0e                   	(bad)
 3c1:	f3 0e                	repz (bad)
 3c3:	04 bc                	add    al,0xbc
 3c5:	10 c1                	adc    cl,al
 3c7:	10 04 c5 10 fe 10 04 	adc    BYTE PTR [rax*8+0x410fe10],al
 3ce:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3cf:	11 b6 11 00 04 af    	adc    DWORD PTR [rsi-0x50fbffef],esi
 3d5:	0d c0 0e 04 d8       	or     eax,0xd8040ec0
 3da:	10 df                	adc    bh,bl
 3dc:	10 00                	adc    BYTE PTR [rax],al
 3de:	04 d1                	add    al,0xd1
 3e0:	0e                   	(bad)
 3e1:	e3 0e                	jrcxz  3f1 <__abi_tag+0x75>
 3e3:	04 cf                	add    al,0xcf
 3e5:	10 d4                	adc    ah,dl
 3e7:	10 04 a7             	adc    BYTE PTR [rdi+riz*4],al
 3ea:	11 b6 11 00 04 e7    	adc    DWORD PTR [rsi-0x18fbffef],esi
 3f0:	0e                   	(bad)
 3f1:	ee                   	out    dx,al
 3f2:	0e                   	(bad)
 3f3:	04 f3                	add    al,0xf3
 3f5:	0e                   	(bad)
 3f6:	8b 0f                	mov    ecx,DWORD PTR [rdi]
 3f8:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
 3fb:	0f                   	xsha1  (bad)
 3fc:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 3fd:	0f 04                	(bad)
 3ff:	b0 0f                	mov    al,0xf
 401:	c1 0f 04             	ror    DWORD PTR [rdi],0x4
 404:	cd 0f                	int    0xf
 406:	d2 0f                	ror    BYTE PTR [rdi],cl
 408:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
 40b:	16                   	(bad)
 40c:	e0 16                	loopne 424 <__abi_tag+0xa8>
 40e:	04 e7                	add    al,0xe7
 410:	16                   	(bad)
 411:	ec                   	in     al,dx
 412:	16                   	(bad)
 413:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
 416:	16                   	(bad)
 417:	e7 16                	out    0x16,eax
 419:	04 ec                	add    al,0xec
 41b:	16                   	(bad)
 41c:	f4                   	hlt
 41d:	16                   	(bad)
 41e:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 421:	21 88 22 04 a0 22    	and    DWORD PTR [rax+0x22a00422],ecx
 427:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 428:	23 04 ea             	and    eax,DWORD PTR [rdx+rbp*8]
 42b:	23 ec                	and    ebp,esp
 42d:	23 00                	and    eax,DWORD PTR [rax]
 42f:	04 b5                	add    al,0xb5
 431:	23 c3                	and    eax,ebx
 433:	23 04 e8             	and    eax,DWORD PTR [rax+rbp*8]
 436:	23 ea                	and    ebp,edx
 438:	23 04 f5 23 fc 23 00 	and    eax,DWORD PTR [rsi*8+0x23fc23]
 43f:	04 c6                	add    al,0xc6
 441:	24 f1                	and    al,0xf1
 443:	24 04                	and    al,0x4
 445:	84 25 ac 29 04 fd    	test   BYTE PTR [rip+0xfffffffffd0429ac],ah        # fffffffffd042df7 <_end+0xfffffffffd03cddf>
 44b:	29 ff                	sub    edi,edi
 44d:	29 00                	sub    DWORD PTR [rax],eax
 44f:	04 d4                	add    al,0xd4
 451:	24 f1                	and    al,0xf1
 453:	24 04                	and    al,0x4
 455:	84 25 9b 27 04 c6    	test   BYTE PTR [rip+0xffffffffc604279b],ah        # ffffffffc6042bf6 <_end+0xffffffffc603cbde>
 45b:	27                   	(bad)
 45c:	cf                   	iret
 45d:	28 04 d1             	sub    BYTE PTR [rcx+rdx*8],al
 460:	28 e0                	sub    al,ah
 462:	28 04 e3             	sub    BYTE PTR [rbx+riz*8],al
 465:	28 ef                	sub    bh,ch
 467:	28 04 f3             	sub    BYTE PTR [rbx+rsi*8],al
 46a:	28 f7                	sub    bh,dh
 46c:	28 04 fa             	sub    BYTE PTR [rdx+rdi*8],al
 46f:	28 8f 29 04 93 29    	sub    BYTE PTR [rdi+0x29930429],cl
 475:	ac                   	lods   al,BYTE PTR ds:[rsi]
 476:	29 00                	sub    DWORD PTR [rax],eax
 478:	04 b9                	add    al,0xb9
 47a:	29 c0                	sub    eax,eax
 47c:	29 04 c4             	sub    DWORD PTR [rsp+rax*8],eax
 47f:	29 c9                	sub    ecx,ecx
 481:	29 04 e6             	sub    DWORD PTR [rsi+riz*8],eax
 484:	29 e6                	sub    esi,esp
 486:	29 04 ed 29 f2 29 04 	sub    DWORD PTR [rbp*8+0x429f229],eax
 48d:	8d 2a                	lea    ebp,[rdx]
 48f:	91                   	xchg   ecx,eax
 490:	2a 04 98             	sub    al,BYTE PTR [rax+rbx*4]
 493:	2a                   	.byte 0x2a
 494:	9d                   	popf
 495:	2a 00                	sub    al,BYTE PTR [rax]

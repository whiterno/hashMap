
build/main:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000318 <.interp>:
 318:	2f                   	(bad)
 319:	6c                   	ins    BYTE PTR es:[rdi],dx
 31a:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
 321:	2d 6c 69 6e 75       	sub    eax,0x756e696c
 326:	78 2d                	js     355 <__abi_tag-0x27>
 328:	78 38                	js     362 <__abi_tag-0x1a>
 32a:	36 2d 36 34 2e 73    	ss sub eax,0x732e3436
 330:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 331:	2e 32 00             	cs xor al,BYTE PTR [rax]

Disassembly of section .note.gnu.property:

0000000000000338 <.note.gnu.property>:
 338:	04 00                	add    al,0x0
 33a:	00 00                	add    BYTE PTR [rax],al
 33c:	10 00                	adc    BYTE PTR [rax],al
 33e:	00 00                	add    BYTE PTR [rax],al
 340:	05 00 00 00 47       	add    eax,0x47000000
 345:	4e 55                	rex.WRX push rbp
 347:	00 02                	add    BYTE PTR [rdx],al
 349:	80 00 c0             	add    BYTE PTR [rax],0xc0
 34c:	04 00                	add    al,0x0
 34e:	00 00                	add    BYTE PTR [rax],al
 350:	01 00                	add    DWORD PTR [rax],eax
 352:	00 00                	add    BYTE PTR [rax],al
 354:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

0000000000000358 <.note.gnu.build-id>:
 358:	04 00                	add    al,0x0
 35a:	00 00                	add    BYTE PTR [rax],al
 35c:	14 00                	adc    al,0x0
 35e:	00 00                	add    BYTE PTR [rax],al
 360:	03 00                	add    eax,DWORD PTR [rax]
 362:	00 00                	add    BYTE PTR [rax],al
 364:	47                   	rex.RXB
 365:	4e 55                	rex.WRX push rbp
 367:	00 33                	add    BYTE PTR [rbx],dh
 369:	8c 3a                	mov    WORD PTR [rdx],?
 36b:	4d 25 f5 47 f9 81    	rex.WRB and rax,0xffffffff81f947f5
 371:	03 28                	add    ebp,DWORD PTR [rax]
 373:	96                   	xchg   esi,eax
 374:	54                   	push   rsp
 375:	da 26                	fisub  DWORD PTR [rsi]
 377:	66 c9                	leavew
 379:	1e                   	(bad)
 37a:	ea                   	(bad)
 37b:	27                   	(bad)

Disassembly of section .note.ABI-tag:

000000000000037c <__abi_tag>:
 37c:	04 00                	add    al,0x0
 37e:	00 00                	add    BYTE PTR [rax],al
 380:	10 00                	adc    BYTE PTR [rax],al
 382:	00 00                	add    BYTE PTR [rax],al
 384:	01 00                	add    DWORD PTR [rax],eax
 386:	00 00                	add    BYTE PTR [rax],al
 388:	47                   	rex.RXB
 389:	4e 55                	rex.WRX push rbp
 38b:	00 00                	add    BYTE PTR [rax],al
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 03                	add    BYTE PTR [rbx],al
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 02                	add    BYTE PTR [rdx],al
 395:	00 00                	add    BYTE PTR [rax],al
 397:	00 00                	add    BYTE PTR [rax],al
 399:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .gnu.hash:

00000000000003a0 <.gnu.hash>:
 3a0:	02 00                	add    al,BYTE PTR [rax]
 3a2:	00 00                	add    BYTE PTR [rax],al
 3a4:	1f                   	(bad)
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 06                	add    BYTE PTR [rsi],al
 3ad:	00 00                	add    BYTE PTR [rax],al
 3af:	00 00                	add    BYTE PTR [rax],al
 3b1:	00 81 00 00 00 00    	add    BYTE PTR [rcx+0x0],al
 3b7:	00 1f                	add    BYTE PTR [rdi],bl
 3b9:	00 00                	add    BYTE PTR [rax],al
 3bb:	00 00                	add    BYTE PTR [rax],al
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 d1                	add    cl,dl
 3c1:	65 ce                	gs (bad)
 3c3:	6d                   	ins    DWORD PTR es:[rdi],dx

Disassembly of section .dynsym:

00000000000003c8 <.dynsym>:
	...
 3e0:	87 00                	xchg   DWORD PTR [rax],eax
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	12 00                	adc    al,BYTE PTR [rax]
	...
 3f6:	00 00                	add    BYTE PTR [rax],al
 3f8:	21 01                	and    DWORD PTR [rcx],eax
 3fa:	00 00                	add    BYTE PTR [rax],al
 3fc:	12 00                	adc    al,BYTE PTR [rax]
	...
 40e:	00 00                	add    BYTE PTR [rax],al
 410:	35 01 00 00 12       	xor    eax,0x12000001
	...
 425:	00 00                	add    BYTE PTR [rax],al
 427:	00 bf 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],bh
	...
 43d:	00 00                	add    BYTE PTR [rax],al
 43f:	00 99 00 00 00 12    	add    BYTE PTR [rcx+0x12000000],bl
	...
 455:	00 00                	add    BYTE PTR [rax],al
 457:	00 3c 01             	add    BYTE PTR [rcx+rax*1],bh
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	12 00                	adc    al,BYTE PTR [rax]
	...
 46e:	00 00                	add    BYTE PTR [rax],al
 470:	b5 00                	mov    ch,0x0
 472:	00 00                	add    BYTE PTR [rax],al
 474:	12 00                	adc    al,BYTE PTR [rax]
	...
 486:	00 00                	add    BYTE PTR [rax],al
 488:	12 01                	adc    al,BYTE PTR [rcx]
 48a:	00 00                	add    BYTE PTR [rax],al
 48c:	12 00                	adc    al,BYTE PTR [rax]
	...
 49e:	00 00                	add    BYTE PTR [rax],al
 4a0:	f3 00 00             	repz add BYTE PTR [rax],al
 4a3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4b5:	00 00                	add    BYTE PTR [rax],al
 4b7:	00 a7 00 00 00 12    	add    BYTE PTR [rdi+0x12000000],ah
	...
 4cd:	00 00                	add    BYTE PTR [rax],al
 4cf:	00 20                	add    BYTE PTR [rax],ah
 4d1:	01 00                	add    DWORD PTR [rax],eax
 4d3:	00 12                	add    BYTE PTR [rdx],dl
	...
 4e5:	00 00                	add    BYTE PTR [rax],al
 4e7:	00 43 01             	add    BYTE PTR [rbx+0x1],al
 4ea:	00 00                	add    BYTE PTR [rax],al
 4ec:	12 00                	adc    al,BYTE PTR [rax]
	...
 4fe:	00 00                	add    BYTE PTR [rax],al
 500:	76 00                	jbe    502 <__abi_tag+0x186>
 502:	00 00                	add    BYTE PTR [rax],al
 504:	12 00                	adc    al,BYTE PTR [rax]
	...
 516:	00 00                	add    BYTE PTR [rax],al
 518:	b4 00                	mov    ah,0x0
 51a:	00 00                	add    BYTE PTR [rax],al
 51c:	12 00                	adc    al,BYTE PTR [rax]
	...
 52e:	00 00                	add    BYTE PTR [rax],al
 530:	94                   	xchg   esp,eax
 531:	00 00                	add    BYTE PTR [rax],al
 533:	00 12                	add    BYTE PTR [rdx],dl
	...
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 54a:	00 00                	add    BYTE PTR [rax],al
 54c:	12 00                	adc    al,BYTE PTR [rax]
	...
 55e:	00 00                	add    BYTE PTR [rax],al
 560:	05 01 00 00 12       	add    eax,0x12000001
	...
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 ac 00 00 00 12 00 	add    BYTE PTR [rax+rax*1+0x120000],ch
	...
 58e:	00 00                	add    BYTE PTR [rax],al
 590:	51                   	push   rcx
 591:	01 00                	add    DWORD PTR [rax],eax
 593:	00 12                	add    BYTE PTR [rdx],dl
	...
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 ba 00 00 00 12    	add    BYTE PTR [rdx+0x12000000],bh
	...
 5bd:	00 00                	add    BYTE PTR [rax],al
 5bf:	00 71 00             	add    BYTE PTR [rcx+0x0],dh
 5c2:	00 00                	add    BYTE PTR [rax],al
 5c4:	12 00                	adc    al,BYTE PTR [rax]
	...
 5d6:	00 00                	add    BYTE PTR [rax],al
 5d8:	dd 00                	fld    QWORD PTR [rax]
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	12 00                	adc    al,BYTE PTR [rax]
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	e5 00                	in     eax,0x0
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	12 00                	adc    al,BYTE PTR [rax]
	...
 606:	00 00                	add    BYTE PTR [rax],al
 608:	10 00                	adc    BYTE PTR [rax],al
 60a:	00 00                	add    BYTE PTR [rax],al
 60c:	20 00                	and    BYTE PTR [rax],al
	...
 61e:	00 00                	add    BYTE PTR [rax],al
 620:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
 623:	00 12                	add    BYTE PTR [rdx],dl
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 01                	add    BYTE PTR [rcx],al
 639:	00 00                	add    BYTE PTR [rax],al
 63b:	00 20                	add    BYTE PTR [rax],ah
	...
 64d:	00 00                	add    BYTE PTR [rax],al
 64f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 652:	00 00                	add    BYTE PTR [rax],al
 654:	20 00                	and    BYTE PTR [rax],al
	...
 666:	00 00                	add    BYTE PTR [rax],al
 668:	4a 01 00             	rex.WX add QWORD PTR [rax],rax
 66b:	00 12                	add    BYTE PTR [rdx],dl
	...
 67d:	00 00                	add    BYTE PTR [rax],al
 67f:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
 683:	00 12                	add    BYTE PTR [rdx],dl
	...
 695:	00 00                	add    BYTE PTR [rax],al
 697:	00 cd                	add    ch,cl
 699:	00 00                	add    BYTE PTR [rax],al
 69b:	00 12                	add    BYTE PTR [rdx],dl
	...
 6ad:	00 00                	add    BYTE PTR [rax],al
 6af:	00 26                	add    BYTE PTR [rsi],ah
 6b1:	01 00                	add    DWORD PTR [rax],eax
 6b3:	00 22                	add    BYTE PTR [rdx],ah
	...

Disassembly of section .dynstr:

00000000000006c8 <.dynstr>:
 6c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 6cb:	67 6d                	ins    DWORD PTR es:[edi],dx
 6cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6cf:	5f                   	pop    rdi
 6d0:	73 74                	jae    746 <__abi_tag+0x3ca>
 6d2:	61                   	(bad)
 6d3:	72 74                	jb     749 <__abi_tag+0x3cd>
 6d5:	5f                   	pop    rdi
 6d6:	5f                   	pop    rdi
 6d7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6da:	54                   	push   rsp
 6db:	4d 5f                	rex.WRB pop r15
 6dd:	64 65 72 65          	fs gs jb 746 <__abi_tag+0x3ca>
 6e1:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 6e8:	4d 
 6e9:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 6eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 6ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6ed:	65 54                	gs push rsp
 6ef:	61                   	(bad)
 6f0:	62 6c 65             	(bad)
 6f3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 6f6:	54                   	push   rsp
 6f7:	4d 5f                	rex.WRB pop r15
 6f9:	72 65                	jb     760 <__abi_tag+0x3e4>
 6fb:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 702:	4d 
 703:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 705:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 706:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 707:	65 54                	gs push rsp
 709:	61                   	(bad)
 70a:	62 6c 65             	(bad)
 70d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 710:	4e 53                	rex.WRX push rbx
 712:	74 36                	je     74a <__abi_tag+0x3ce>
 714:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
 717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 718:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 719:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 71a:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
 71d:	32 31                	xor    dh,BYTE PTR [rcx]
 71f:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
 722:	65 61                	gs (bad)
 724:	64 79 5f             	fs jns 786 <__abi_tag+0x40a>
 727:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
 72b:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
 72e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 72f:	77 45                	ja     776 <__abi_tag+0x3fa>
 731:	76 00                	jbe    733 <__abi_tag+0x3b7>
 733:	73 71                	jae    7a6 <__abi_tag+0x42a>
 735:	72 74                	jb     7ab <__abi_tag+0x42f>
 737:	66 00 70 75          	data16 add BYTE PTR [rax+0x75],dh
 73b:	74 73                	je     7b0 <__abi_tag+0x434>
 73d:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 740:	73 74                	jae    7b6 <__abi_tag+0x43a>
 742:	61                   	(bad)
 743:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 746:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 749:	5f                   	pop    rdi
 74a:	66 61                	data16 (bad)
 74c:	69 6c 00 5f 5f 70 72 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x6972705f
 753:	69 
 754:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 755:	74 66                	je     7bd <__abi_tag+0x441>
 757:	5f                   	pop    rdi
 758:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 75b:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
 75e:	65 65 00 5f 5f       	gs add BYTE PTR gs:[rdi+0x5f],bl
 763:	61                   	(bad)
 764:	73 73                	jae    7d9 <__abi_tag+0x45d>
 766:	65 72 74             	gs jb  7dd <__abi_tag+0x461>
 769:	5f                   	pop    rdi
 76a:	66 61                	data16 (bad)
 76c:	69 6c 00 73 74 61 74 	imul   ebp,DWORD PTR [rax+rax*1+0x73],0x746174
 773:	00 
 774:	70 75                	jo     7eb <__abi_tag+0x46f>
 776:	74 63                	je     7db <__abi_tag+0x45f>
 778:	68 61 72 00 66       	push   0x66007261
 77d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 77e:	70 65                	jo     7e5 <__abi_tag+0x469>
 780:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 781:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 784:	61                   	(bad)
 785:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 789:	73 74                	jae    7ff <__abi_tag+0x483>
 78b:	72 6e                	jb     7fb <__abi_tag+0x47f>
 78d:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
 790:	5f                   	pop    rdi
 791:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 794:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 797:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
 79e:	73 74                	jae    814 <__abi_tag+0x498>
 7a0:	72 74                	jb     816 <__abi_tag+0x49a>
 7a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7a3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a4:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
 7a7:	61                   	(bad)
 7a8:	6c                   	ins    BYTE PTR es:[rdi],dx
 7a9:	6c                   	ins    BYTE PTR es:[rdi],dx
 7aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7ab:	63 00                	movsxd eax,DWORD PTR [rax]
 7ad:	5f                   	pop    rdi
 7ae:	5f                   	pop    rdi
 7af:	66 70 72             	data16 jo 824 <__abi_tag+0x4a8>
 7b2:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
 7b9:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
 7bc:	5f                   	pop    rdi
 7bd:	6c                   	ins    BYTE PTR es:[rdi],dx
 7be:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
 7c5:	72 74                	jb     83b <__abi_tag+0x4bf>
 7c7:	5f                   	pop    rdi
 7c8:	6d                   	ins    DWORD PTR es:[rdi],dx
 7c9:	61                   	(bad)
 7ca:	69 6e 00 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x0],0x656d5f5f
 7d1:	6d                   	ins    DWORD PTR es:[rdi],dx
 7d2:	73 65                	jae    839 <__abi_tag+0x4bd>
 7d4:	74 5f                	je     835 <__abi_tag+0x4b9>
 7d6:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
 7d9:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
 7dc:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
 7e3:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e4:	6c                   	ins    BYTE PTR es:[rdi],dx
 7e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 7e6:	63 00                	movsxd eax,DWORD PTR [rax]
 7e8:	73 72                	jae    85c <__abi_tag+0x4e0>
 7ea:	61                   	(bad)
 7eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7ec:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
 7f0:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 7f3:	5f                   	pop    rdi
 7f4:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 7fa:	7a 65                	jp     861 <__abi_tag+0x4e5>
 7fc:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 7ff:	72 63                	jb     864 <__abi_tag+0x4e8>
 801:	68 72 00 63 61       	push   0x61630072
 806:	6c                   	ins    BYTE PTR es:[rdi],dx
 807:	6c                   	ins    BYTE PTR es:[rdi],dx
 808:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 809:	63 00                	movsxd eax,DWORD PTR [rax]
 80b:	66 63 6c 6f 73       	movsxd bp,DWORD PTR [rdi+rbp*2+0x73]
 810:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
 814:	72 69                	jb     87f <__abi_tag+0x503>
 816:	74 65                	je     87d <__abi_tag+0x501>
 818:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 81b:	72 63                	jb     880 <__abi_tag+0x504>
 81d:	6d                   	ins    DWORD PTR es:[rdi],dx
 81e:	70 00                	jo     820 <__abi_tag+0x4a4>
 820:	6c                   	ins    BYTE PTR es:[rdi],dx
 821:	69 62 73 74 64 63 2b 	imul   esp,DWORD PTR [rdx+0x73],0x2b636474
 828:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 82a:	73 6f                	jae    89b <__abi_tag+0x51f>
 82c:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 832:	6d                   	ins    DWORD PTR es:[rdi],dx
 833:	2e 73 6f             	cs jae 8a5 <__abi_tag+0x529>
 836:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 83c:	63 2e                	movsxd ebp,DWORD PTR [rsi]
 83e:	73 6f                	jae    8af <__abi_tag+0x533>
 840:	2e 36 00 47 4c       	cs ss add BYTE PTR [rdi+0x4c],al
 845:	49                   	rex.WB
 846:	42                   	rex.X
 847:	43 5f                	rex.XB pop r15
 849:	32 2e                	xor    ch,BYTE PTR [rsi]
 84b:	32 2e                	xor    ch,BYTE PTR [rsi]
 84d:	35 00 47 4c 49       	xor    eax,0x494c4700
 852:	42                   	rex.X
 853:	43 58                	rex.XB pop r8
 855:	58                   	pop    rax
 856:	5f                   	pop    rdi
 857:	33 2e                	xor    ebp,DWORD PTR [rsi]
 859:	34 2e                	xor    al,0x2e
 85b:	31 39                	xor    DWORD PTR [rcx],edi
 85d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 860:	49                   	rex.WB
 861:	42                   	rex.X
 862:	43 5f                	rex.XB pop r15
 864:	32 2e                	xor    ch,BYTE PTR [rsi]
 866:	33 38                	xor    edi,DWORD PTR [rax]
 868:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 86b:	49                   	rex.WB
 86c:	42                   	rex.X
 86d:	43 5f                	rex.XB pop r15
 86f:	32 2e                	xor    ch,BYTE PTR [rsi]
 871:	34 00                	xor    al,0x0
 873:	47                   	rex.RXB
 874:	4c                   	rex.WR
 875:	49                   	rex.WB
 876:	42                   	rex.X
 877:	43 5f                	rex.XB pop r15
 879:	32 2e                	xor    ch,BYTE PTR [rsi]
 87b:	33 33                	xor    esi,DWORD PTR [rbx]
 87d:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 880:	49                   	rex.WB
 881:	42                   	rex.X
 882:	43 5f                	rex.XB pop r15
 884:	32 2e                	xor    ch,BYTE PTR [rsi]
 886:	33 34 00             	xor    esi,DWORD PTR [rax+rax*1]
 889:	47                   	rex.RXB
 88a:	4c                   	rex.WR
 88b:	49                   	rex.WB
 88c:	42                   	rex.X
 88d:	43 5f                	rex.XB pop r15
 88f:	32 2e                	xor    ch,BYTE PTR [rsi]
 891:	31 36                	xor    DWORD PTR [rsi],esi
 893:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 896:	49                   	rex.WB
 897:	42                   	rex.X
 898:	43 5f                	rex.XB pop r15
 89a:	32 2e                	xor    ch,BYTE PTR [rsi]
 89c:	33 2e                	xor    ebp,DWORD PTR [rsi]
 89e:	34 00                	xor    al,0x0

Disassembly of section .gnu.version:

00000000000008a0 <.gnu.version>:
 8a0:	00 00                	add    BYTE PTR [rax],al
 8a2:	02 00                	add    al,BYTE PTR [rax]
 8a4:	03 00                	add    eax,DWORD PTR [rax]
 8a6:	03 00                	add    eax,DWORD PTR [rax]
 8a8:	02 00                	add    al,BYTE PTR [rax]
 8aa:	03 00                	add    eax,DWORD PTR [rax]
 8ac:	03 00                	add    eax,DWORD PTR [rax]
 8ae:	03 00                	add    eax,DWORD PTR [rax]
 8b0:	04 00                	add    al,0x0
 8b2:	05 00 06 00 03       	add    eax,0x3000600
 8b7:	00 03                	add    BYTE PTR [rbx],al
 8b9:	00 07                	add    BYTE PTR [rdi],al
 8bb:	00 03                	add    BYTE PTR [rbx],al
 8bd:	00 03                	add    BYTE PTR [rbx],al
 8bf:	00 08                	add    BYTE PTR [rax],cl
 8c1:	00 02                	add    BYTE PTR [rdx],al
 8c3:	00 03                	add    BYTE PTR [rbx],al
 8c5:	00 03                	add    BYTE PTR [rbx],al
 8c7:	00 03                	add    BYTE PTR [rbx],al
 8c9:	00 03                	add    BYTE PTR [rbx],al
 8cb:	00 03                	add    BYTE PTR [rbx],al
 8cd:	00 02                	add    BYTE PTR [rdx],al
 8cf:	00 01                	add    BYTE PTR [rcx],al
 8d1:	00 09                	add    BYTE PTR [rcx],cl
 8d3:	00 01                	add    BYTE PTR [rcx],al
 8d5:	00 01                	add    BYTE PTR [rcx],al
 8d7:	00 03                	add    BYTE PTR [rbx],al
 8d9:	00 03                	add    BYTE PTR [rbx],al
 8db:	00 0a                	add    BYTE PTR [rdx],cl
 8dd:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .gnu.version_r:

00000000000008e0 <.gnu.version_r>:
 8e0:	01 00                	add    DWORD PTR [rax],eax
 8e2:	01 00                	add    DWORD PTR [rax],eax
 8e4:	67 01 00             	add    DWORD PTR [eax],eax
 8e7:	00 10                	add    BYTE PTR [rax],dl
 8e9:	00 00                	add    BYTE PTR [rax],al
 8eb:	00 20                	add    BYTE PTR [rax],ah
 8ed:	00 00                	add    BYTE PTR [rax],al
 8ef:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 8f2:	69 09 00 00 09 00    	imul   ecx,DWORD PTR [rcx],0x90000
 8f8:	7b 01                	jnp    8fb <__abi_tag+0x57f>
 8fa:	00 00                	add    BYTE PTR [rax],al
 8fc:	00 00                	add    BYTE PTR [rax],al
 8fe:	00 00                	add    BYTE PTR [rax],al
 900:	01 00                	add    DWORD PTR [rax],eax
 902:	01 00                	add    DWORD PTR [rax],eax
 904:	58                   	pop    rax
 905:	01 00                	add    DWORD PTR [rax],eax
 907:	00 10                	add    BYTE PTR [rax],dl
 909:	00 00                	add    BYTE PTR [rax],al
 90b:	00 20                	add    BYTE PTR [rax],ah
 90d:	00 00                	add    BYTE PTR [rax],al
 90f:	00 69 f8             	add    BYTE PTR [rcx-0x8],ch
 912:	97                   	xchg   edi,eax
 913:	02 00                	add    al,BYTE PTR [rax]
 915:	00 08                	add    BYTE PTR [rax],cl
 917:	00 87 01 00 00 00    	add    BYTE PTR [rdi+0x1],al
 91d:	00 00                	add    BYTE PTR [rax],al
 91f:	00 01                	add    BYTE PTR [rcx],al
 921:	00 07                	add    BYTE PTR [rdi],al
 923:	00 71 01             	add    BYTE PTR [rcx+0x1],dh
 926:	00 00                	add    BYTE PTR [rax],al
 928:	10 00                	adc    BYTE PTR [rax],al
 92a:	00 00                	add    BYTE PTR [rax],al
 92c:	00 00                	add    BYTE PTR [rax],al
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	b8 91 96 06 00       	mov    eax,0x69691
 935:	00 0a                	add    BYTE PTR [rdx],cl
 937:	00 96 01 00 00 10    	add    BYTE PTR [rsi+0x10000001],dl
 93d:	00 00                	add    BYTE PTR [rax],al
 93f:	00 14 69             	add    BYTE PTR [rcx+rbp*2],dl
 942:	69 0d 00 00 07 00 a1 	imul   ecx,DWORD PTR [rip+0x70000],0x1a1        # 7094c <_end+0x6a934>
 949:	01 00 00 
 94c:	10 00                	adc    BYTE PTR [rax],al
 94e:	00 00                	add    BYTE PTR [rax],al
 950:	b3 91                	mov    bl,0x91
 952:	96                   	xchg   esi,eax
 953:	06                   	(bad)
 954:	00 00                	add    BYTE PTR [rax],al
 956:	06                   	(bad)
 957:	00 ab 01 00 00 10    	add    BYTE PTR [rbx+0x10000001],ch
 95d:	00 00                	add    BYTE PTR [rax],al
 95f:	00 b4 91 96 06 00 00 	add    BYTE PTR [rcx+rdx*4+0x696],dh
 966:	05 00 b6 01 00       	add    eax,0x1b600
 96b:	00 10                	add    BYTE PTR [rax],dl
 96d:	00 00                	add    BYTE PTR [rax],al
 96f:	00 96 91 96 06 00    	add    BYTE PTR [rsi+0x69691],dl
 975:	00 04 00             	add    BYTE PTR [rax+rax*1],al
 978:	c1 01 00             	rol    DWORD PTR [rcx],0x0
 97b:	00 10                	add    BYTE PTR [rax],dl
 97d:	00 00                	add    BYTE PTR [rax],al
 97f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 982:	69 09 00 00 03 00    	imul   ecx,DWORD PTR [rcx],0x30000
 988:	7b 01                	jnp    98b <__abi_tag+0x60f>
 98a:	00 00                	add    BYTE PTR [rax],al
 98c:	10 00                	adc    BYTE PTR [rax],al
 98e:	00 00                	add    BYTE PTR [rax],al
 990:	74 19                	je     9ab <__abi_tag+0x62f>
 992:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 998:	cc                   	int3
 999:	01 00                	add    DWORD PTR [rax],eax
 99b:	00 00                	add    BYTE PTR [rax],al
 99d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000000009a0 <.rela.dyn>:
 9a0:	d0 5c 00 00          	rcr    BYTE PTR [rax+rax*1+0x0],1
 9a4:	00 00                	add    BYTE PTR [rax],al
 9a6:	00 00                	add    BYTE PTR [rax],al
 9a8:	08 00                	or     BYTE PTR [rax],al
 9aa:	00 00                	add    BYTE PTR [rax],al
 9ac:	00 00                	add    BYTE PTR [rax],al
 9ae:	00 00                	add    BYTE PTR [rax],al
 9b0:	f0 12 00             	lock adc al,BYTE PTR [rax]
 9b3:	00 00                	add    BYTE PTR [rax],al
 9b5:	00 00                	add    BYTE PTR [rax],al
 9b7:	00 d8                	add    al,bl
 9b9:	5c                   	pop    rsp
 9ba:	00 00                	add    BYTE PTR [rax],al
 9bc:	00 00                	add    BYTE PTR [rax],al
 9be:	00 00                	add    BYTE PTR [rax],al
 9c0:	08 00                	or     BYTE PTR [rax],al
 9c2:	00 00                	add    BYTE PTR [rax],al
 9c4:	00 00                	add    BYTE PTR [rax],al
 9c6:	00 00                	add    BYTE PTR [rax],al
 9c8:	b0 12                	mov    al,0x12
 9ca:	00 00                	add    BYTE PTR [rax],al
 9cc:	00 00                	add    BYTE PTR [rax],al
 9ce:	00 00                	add    BYTE PTR [rax],al
 9d0:	08 60 00             	or     BYTE PTR [rax+0x0],ah
 9d3:	00 00                	add    BYTE PTR [rax],al
 9d5:	00 00                	add    BYTE PTR [rax],al
 9d7:	00 08                	add    BYTE PTR [rax],cl
 9d9:	00 00                	add    BYTE PTR [rax],al
 9db:	00 00                	add    BYTE PTR [rax],al
 9dd:	00 00                	add    BYTE PTR [rax],al
 9df:	00 08                	add    BYTE PTR [rax],cl
 9e1:	60                   	(bad)
 9e2:	00 00                	add    BYTE PTR [rax],al
 9e4:	00 00                	add    BYTE PTR [rax],al
 9e6:	00 00                	add    BYTE PTR [rax],al
 9e8:	d8 5f 00             	fcomp  DWORD PTR [rdi+0x0]
 9eb:	00 00                	add    BYTE PTR [rax],al
 9ed:	00 00                	add    BYTE PTR [rax],al
 9ef:	00 06                	add    BYTE PTR [rsi],al
 9f1:	00 00                	add    BYTE PTR [rax],al
 9f3:	00 1f                	add    BYTE PTR [rdi],bl
	...
 9fd:	00 00                	add    BYTE PTR [rax],al
 9ff:	00 e0                	add    al,ah
 a01:	5f                   	pop    rdi
 a02:	00 00                	add    BYTE PTR [rax],al
 a04:	00 00                	add    BYTE PTR [rax],al
 a06:	00 00                	add    BYTE PTR [rax],al
 a08:	06                   	(bad)
 a09:	00 00                	add    BYTE PTR [rax],al
 a0b:	00 09                	add    BYTE PTR [rcx],cl
	...
 a15:	00 00                	add    BYTE PTR [rax],al
 a17:	00 e8                	add    al,ch
 a19:	5f                   	pop    rdi
 a1a:	00 00                	add    BYTE PTR [rax],al
 a1c:	00 00                	add    BYTE PTR [rax],al
 a1e:	00 00                	add    BYTE PTR [rax],al
 a20:	06                   	(bad)
 a21:	00 00                	add    BYTE PTR [rax],al
 a23:	00 18                	add    BYTE PTR [rax],bl
	...
 a2d:	00 00                	add    BYTE PTR [rax],al
 a2f:	00 f0                	add    al,dh
 a31:	5f                   	pop    rdi
 a32:	00 00                	add    BYTE PTR [rax],al
 a34:	00 00                	add    BYTE PTR [rax],al
 a36:	00 00                	add    BYTE PTR [rax],al
 a38:	06                   	(bad)
 a39:	00 00                	add    BYTE PTR [rax],al
 a3b:	00 1a                	add    BYTE PTR [rdx],bl
	...
 a45:	00 00                	add    BYTE PTR [rax],al
 a47:	00 f8                	add    al,bh
 a49:	5f                   	pop    rdi
 a4a:	00 00                	add    BYTE PTR [rax],al
 a4c:	00 00                	add    BYTE PTR [rax],al
 a4e:	00 00                	add    BYTE PTR [rax],al
 a50:	06                   	(bad)
 a51:	00 00                	add    BYTE PTR [rax],al
 a53:	00 1b                	add    BYTE PTR [rbx],bl
	...

Disassembly of section .rela.plt:

0000000000000a60 <.rela.plt>:
 a60:	08 5f 00             	or     BYTE PTR [rdi+0x0],bl
 a63:	00 00                	add    BYTE PTR [rax],al
 a65:	00 00                	add    BYTE PTR [rax],al
 a67:	00 07                	add    BYTE PTR [rdi],al
 a69:	00 00                	add    BYTE PTR [rax],al
 a6b:	00 01                	add    BYTE PTR [rcx],al
	...
 a75:	00 00                	add    BYTE PTR [rax],al
 a77:	00 10                	add    BYTE PTR [rax],dl
 a79:	5f                   	pop    rdi
 a7a:	00 00                	add    BYTE PTR [rax],al
 a7c:	00 00                	add    BYTE PTR [rax],al
 a7e:	00 00                	add    BYTE PTR [rax],al
 a80:	07                   	(bad)
 a81:	00 00                	add    BYTE PTR [rax],al
 a83:	00 02                	add    BYTE PTR [rdx],al
	...
 a8d:	00 00                	add    BYTE PTR [rax],al
 a8f:	00 18                	add    BYTE PTR [rax],bl
 a91:	5f                   	pop    rdi
 a92:	00 00                	add    BYTE PTR [rax],al
 a94:	00 00                	add    BYTE PTR [rax],al
 a96:	00 00                	add    BYTE PTR [rax],al
 a98:	07                   	(bad)
 a99:	00 00                	add    BYTE PTR [rax],al
 a9b:	00 03                	add    BYTE PTR [rbx],al
	...
 aa5:	00 00                	add    BYTE PTR [rax],al
 aa7:	00 20                	add    BYTE PTR [rax],ah
 aa9:	5f                   	pop    rdi
 aaa:	00 00                	add    BYTE PTR [rax],al
 aac:	00 00                	add    BYTE PTR [rax],al
 aae:	00 00                	add    BYTE PTR [rax],al
 ab0:	07                   	(bad)
 ab1:	00 00                	add    BYTE PTR [rax],al
 ab3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 abe:	00 00                	add    BYTE PTR [rax],al
 ac0:	28 5f 00             	sub    BYTE PTR [rdi+0x0],bl
 ac3:	00 00                	add    BYTE PTR [rax],al
 ac5:	00 00                	add    BYTE PTR [rax],al
 ac7:	00 07                	add    BYTE PTR [rdi],al
 ac9:	00 00                	add    BYTE PTR [rax],al
 acb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # ad1 <__abi_tag+0x755>
 ad1:	00 00                	add    BYTE PTR [rax],al
 ad3:	00 00                	add    BYTE PTR [rax],al
 ad5:	00 00                	add    BYTE PTR [rax],al
 ad7:	00 30                	add    BYTE PTR [rax],dh
 ad9:	5f                   	pop    rdi
 ada:	00 00                	add    BYTE PTR [rax],al
 adc:	00 00                	add    BYTE PTR [rax],al
 ade:	00 00                	add    BYTE PTR [rax],al
 ae0:	07                   	(bad)
 ae1:	00 00                	add    BYTE PTR [rax],al
 ae3:	00 06                	add    BYTE PTR [rsi],al
	...
 aed:	00 00                	add    BYTE PTR [rax],al
 aef:	00 38                	add    BYTE PTR [rax],bh
 af1:	5f                   	pop    rdi
 af2:	00 00                	add    BYTE PTR [rax],al
 af4:	00 00                	add    BYTE PTR [rax],al
 af6:	00 00                	add    BYTE PTR [rax],al
 af8:	07                   	(bad)
 af9:	00 00                	add    BYTE PTR [rax],al
 afb:	00 07                	add    BYTE PTR [rdi],al
	...
 b05:	00 00                	add    BYTE PTR [rax],al
 b07:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
 b0a:	00 00                	add    BYTE PTR [rax],al
 b0c:	00 00                	add    BYTE PTR [rax],al
 b0e:	00 00                	add    BYTE PTR [rax],al
 b10:	07                   	(bad)
 b11:	00 00                	add    BYTE PTR [rax],al
 b13:	00 08                	add    BYTE PTR [rax],cl
	...
 b1d:	00 00                	add    BYTE PTR [rax],al
 b1f:	00 48 5f             	add    BYTE PTR [rax+0x5f],cl
 b22:	00 00                	add    BYTE PTR [rax],al
 b24:	00 00                	add    BYTE PTR [rax],al
 b26:	00 00                	add    BYTE PTR [rax],al
 b28:	07                   	(bad)
 b29:	00 00                	add    BYTE PTR [rax],al
 b2b:	00 0a                	add    BYTE PTR [rdx],cl
	...
 b35:	00 00                	add    BYTE PTR [rax],al
 b37:	00 50 5f             	add    BYTE PTR [rax+0x5f],dl
 b3a:	00 00                	add    BYTE PTR [rax],al
 b3c:	00 00                	add    BYTE PTR [rax],al
 b3e:	00 00                	add    BYTE PTR [rax],al
 b40:	07                   	(bad)
 b41:	00 00                	add    BYTE PTR [rax],al
 b43:	00 0b                	add    BYTE PTR [rbx],cl
	...
 b4d:	00 00                	add    BYTE PTR [rax],al
 b4f:	00 58 5f             	add    BYTE PTR [rax+0x5f],bl
 b52:	00 00                	add    BYTE PTR [rax],al
 b54:	00 00                	add    BYTE PTR [rax],al
 b56:	00 00                	add    BYTE PTR [rax],al
 b58:	07                   	(bad)
 b59:	00 00                	add    BYTE PTR [rax],al
 b5b:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
 b66:	00 00                	add    BYTE PTR [rax],al
 b68:	60                   	(bad)
 b69:	5f                   	pop    rdi
 b6a:	00 00                	add    BYTE PTR [rax],al
 b6c:	00 00                	add    BYTE PTR [rax],al
 b6e:	00 00                	add    BYTE PTR [rax],al
 b70:	07                   	(bad)
 b71:	00 00                	add    BYTE PTR [rax],al
 b73:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # b79 <__abi_tag+0x7fd>
 b79:	00 00                	add    BYTE PTR [rax],al
 b7b:	00 00                	add    BYTE PTR [rax],al
 b7d:	00 00                	add    BYTE PTR [rax],al
 b7f:	00 68 5f             	add    BYTE PTR [rax+0x5f],ch
 b82:	00 00                	add    BYTE PTR [rax],al
 b84:	00 00                	add    BYTE PTR [rax],al
 b86:	00 00                	add    BYTE PTR [rax],al
 b88:	07                   	(bad)
 b89:	00 00                	add    BYTE PTR [rax],al
 b8b:	00 0e                	add    BYTE PTR [rsi],cl
	...
 b95:	00 00                	add    BYTE PTR [rax],al
 b97:	00 70 5f             	add    BYTE PTR [rax+0x5f],dh
 b9a:	00 00                	add    BYTE PTR [rax],al
 b9c:	00 00                	add    BYTE PTR [rax],al
 b9e:	00 00                	add    BYTE PTR [rax],al
 ba0:	07                   	(bad)
 ba1:	00 00                	add    BYTE PTR [rax],al
 ba3:	00 0f                	add    BYTE PTR [rdi],cl
	...
 bad:	00 00                	add    BYTE PTR [rax],al
 baf:	00 78 5f             	add    BYTE PTR [rax+0x5f],bh
 bb2:	00 00                	add    BYTE PTR [rax],al
 bb4:	00 00                	add    BYTE PTR [rax],al
 bb6:	00 00                	add    BYTE PTR [rax],al
 bb8:	07                   	(bad)
 bb9:	00 00                	add    BYTE PTR [rax],al
 bbb:	00 10                	add    BYTE PTR [rax],dl
	...
 bc5:	00 00                	add    BYTE PTR [rax],al
 bc7:	00 80 5f 00 00 00    	add    BYTE PTR [rax+0x5f],al
 bcd:	00 00                	add    BYTE PTR [rax],al
 bcf:	00 07                	add    BYTE PTR [rdi],al
 bd1:	00 00                	add    BYTE PTR [rax],al
 bd3:	00 11                	add    BYTE PTR [rcx],dl
	...
 bdd:	00 00                	add    BYTE PTR [rax],al
 bdf:	00 88 5f 00 00 00    	add    BYTE PTR [rax+0x5f],cl
 be5:	00 00                	add    BYTE PTR [rax],al
 be7:	00 07                	add    BYTE PTR [rdi],al
 be9:	00 00                	add    BYTE PTR [rax],al
 beb:	00 12                	add    BYTE PTR [rdx],dl
	...
 bf5:	00 00                	add    BYTE PTR [rax],al
 bf7:	00 90 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dl
 bfd:	00 00                	add    BYTE PTR [rax],al
 bff:	00 07                	add    BYTE PTR [rdi],al
 c01:	00 00                	add    BYTE PTR [rax],al
 c03:	00 13                	add    BYTE PTR [rbx],dl
	...
 c0d:	00 00                	add    BYTE PTR [rax],al
 c0f:	00 98 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bl
 c15:	00 00                	add    BYTE PTR [rax],al
 c17:	00 07                	add    BYTE PTR [rdi],al
 c19:	00 00                	add    BYTE PTR [rax],al
 c1b:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
	...
 c26:	00 00                	add    BYTE PTR [rax],al
 c28:	a0 5f 00 00 00 00 00 	movabs al,ds:0x70000000000005f
 c2f:	00 07 
 c31:	00 00                	add    BYTE PTR [rax],al
 c33:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # c39 <__abi_tag+0x8bd>
 c39:	00 00                	add    BYTE PTR [rax],al
 c3b:	00 00                	add    BYTE PTR [rax],al
 c3d:	00 00                	add    BYTE PTR [rax],al
 c3f:	00 a8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],ch
 c45:	00 00                	add    BYTE PTR [rax],al
 c47:	00 07                	add    BYTE PTR [rdi],al
 c49:	00 00                	add    BYTE PTR [rax],al
 c4b:	00 16                	add    BYTE PTR [rsi],dl
	...
 c55:	00 00                	add    BYTE PTR [rax],al
 c57:	00 b0 5f 00 00 00    	add    BYTE PTR [rax+0x5f],dh
 c5d:	00 00                	add    BYTE PTR [rax],al
 c5f:	00 07                	add    BYTE PTR [rdi],al
 c61:	00 00                	add    BYTE PTR [rax],al
 c63:	00 17                	add    BYTE PTR [rdi],dl
	...
 c6d:	00 00                	add    BYTE PTR [rax],al
 c6f:	00 b8 5f 00 00 00    	add    BYTE PTR [rax+0x5f],bh
 c75:	00 00                	add    BYTE PTR [rax],al
 c77:	00 07                	add    BYTE PTR [rdi],al
 c79:	00 00                	add    BYTE PTR [rax],al
 c7b:	00 19                	add    BYTE PTR [rcx],bl
	...
 c85:	00 00                	add    BYTE PTR [rax],al
 c87:	00 c0                	add    al,al
 c89:	5f                   	pop    rdi
 c8a:	00 00                	add    BYTE PTR [rax],al
 c8c:	00 00                	add    BYTE PTR [rax],al
 c8e:	00 00                	add    BYTE PTR [rax],al
 c90:	07                   	(bad)
 c91:	00 00                	add    BYTE PTR [rax],al
 c93:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
	...
 c9e:	00 00                	add    BYTE PTR [rax],al
 ca0:	c8 5f 00 00          	enter  0x5f,0x0
 ca4:	00 00                	add    BYTE PTR [rax],al
 ca6:	00 00                	add    BYTE PTR [rax],al
 ca8:	07                   	(bad)
 ca9:	00 00                	add    BYTE PTR [rax],al
 cab:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # cb1 <__abi_tag+0x935>
 cb1:	00 00                	add    BYTE PTR [rax],al
 cb3:	00 00                	add    BYTE PTR [rax],al
 cb5:	00 00                	add    BYTE PTR [rax],al
 cb7:	00 d0                	add    al,dl
 cb9:	5f                   	pop    rdi
 cba:	00 00                	add    BYTE PTR [rax],al
 cbc:	00 00                	add    BYTE PTR [rax],al
 cbe:	00 00                	add    BYTE PTR [rax],al
 cc0:	07                   	(bad)
 cc1:	00 00                	add    BYTE PTR [rax],al
 cc3:	00 1e                	add    BYTE PTR [rsi],bl
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 e1 4f 00 00 	mov    rax,QWORD PTR [rip+0x4fe1]        # 5ff0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__printf_chk@plt-0x10>:
    1020:	ff 35 d2 4e 00 00    	push   QWORD PTR [rip+0x4ed2]        # 5ef8 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 d4 4e 00 00    	jmp    QWORD PTR [rip+0x4ed4]        # 5f00 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <__printf_chk@plt>:
    1030:	ff 25 d2 4e 00 00    	jmp    QWORD PTR [rip+0x4ed2]        # 5f08 <__printf_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <rand@plt>:
    1040:	ff 25 ca 4e 00 00    	jmp    QWORD PTR [rip+0x4eca]        # 5f10 <rand@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <strchr@plt>:
    1050:	ff 25 c2 4e 00 00    	jmp    QWORD PTR [rip+0x4ec2]        # 5f18 <strchr@GLIBC_2.2.5>
    1056:	68 02 00 00 00       	push   0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__strncpy_chk@plt>:
    1060:	ff 25 ba 4e 00 00    	jmp    QWORD PTR [rip+0x4eba]        # 5f20 <__strncpy_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <__assert_fail@plt>:
    1070:	ff 25 b2 4e 00 00    	jmp    QWORD PTR [rip+0x4eb2]        # 5f28 <__assert_fail@GLIBC_2.2.5>
    1076:	68 04 00 00 00       	push   0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <calloc@plt>:
    1080:	ff 25 aa 4e 00 00    	jmp    QWORD PTR [rip+0x4eaa]        # 5f30 <calloc@GLIBC_2.2.5>
    1086:	68 05 00 00 00       	push   0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <open@plt>:
    1090:	ff 25 a2 4e 00 00    	jmp    QWORD PTR [rip+0x4ea2]        # 5f38 <open@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <aligned_alloc@plt>:
    10a0:	ff 25 9a 4e 00 00    	jmp    QWORD PTR [rip+0x4e9a]        # 5f40 <aligned_alloc@GLIBC_2.16>
    10a6:	68 07 00 00 00       	push   0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <stat@plt>:
    10b0:	ff 25 92 4e 00 00    	jmp    QWORD PTR [rip+0x4e92]        # 5f48 <stat@GLIBC_2.33>
    10b6:	68 08 00 00 00       	push   0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <srand@plt>:
    10c0:	ff 25 8a 4e 00 00    	jmp    QWORD PTR [rip+0x4e8a]        # 5f50 <srand@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <fclose@plt>:
    10d0:	ff 25 82 4e 00 00    	jmp    QWORD PTR [rip+0x4e82]        # 5f58 <fclose@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 7a 4e 00 00    	jmp    QWORD PTR [rip+0x4e7a]        # 5f60 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <fopen@plt>:
    10f0:	ff 25 72 4e 00 00    	jmp    QWORD PTR [rip+0x4e72]        # 5f68 <fopen@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <free@plt>:
    1100:	ff 25 6a 4e 00 00    	jmp    QWORD PTR [rip+0x4e6a]        # 5f70 <free@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>:
    1110:	ff 25 62 4e 00 00    	jmp    QWORD PTR [rip+0x4e62]        # 5f78 <_ZNSt6chrono3_V212steady_clock3nowEv@GLIBCXX_3.4.19>
    1116:	68 0e 00 00 00       	push   0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <__memset_chk@plt>:
    1120:	ff 25 5a 4e 00 00    	jmp    QWORD PTR [rip+0x4e5a]        # 5f80 <__memset_chk@GLIBC_2.3.4>
    1126:	68 0f 00 00 00       	push   0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <putchar@plt>:
    1130:	ff 25 52 4e 00 00    	jmp    QWORD PTR [rip+0x4e52]        # 5f88 <putchar@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <strcmp@plt>:
    1140:	ff 25 4a 4e 00 00    	jmp    QWORD PTR [rip+0x4e4a]        # 5f90 <strcmp@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <read@plt>:
    1150:	ff 25 42 4e 00 00    	jmp    QWORD PTR [rip+0x4e42]        # 5f98 <read@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <puts@plt>:
    1160:	ff 25 3a 4e 00 00    	jmp    QWORD PTR [rip+0x4e3a]        # 5fa0 <puts@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <realloc@plt>:
    1170:	ff 25 32 4e 00 00    	jmp    QWORD PTR [rip+0x4e32]        # 5fa8 <realloc@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <__fprintf_chk@plt>:
    1180:	ff 25 2a 4e 00 00    	jmp    QWORD PTR [rip+0x4e2a]        # 5fb0 <__fprintf_chk@GLIBC_2.3.4>
    1186:	68 15 00 00 00       	push   0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <sqrtf@plt>:
    1190:	ff 25 22 4e 00 00    	jmp    QWORD PTR [rip+0x4e22]        # 5fb8 <sqrtf@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <fwrite@plt>:
    11a0:	ff 25 1a 4e 00 00    	jmp    QWORD PTR [rip+0x4e1a]        # 5fc0 <fwrite@GLIBC_2.2.5>
    11a6:	68 17 00 00 00       	push   0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <close@plt>:
    11b0:	ff 25 12 4e 00 00    	jmp    QWORD PTR [rip+0x4e12]        # 5fc8 <close@GLIBC_2.2.5>
    11b6:	68 18 00 00 00       	push   0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011c0 <__isoc23_strtol@plt>:
    11c0:	ff 25 0a 4e 00 00    	jmp    QWORD PTR [rip+0x4e0a]        # 5fd0 <__isoc23_strtol@GLIBC_2.38>
    11c6:	68 19 00 00 00       	push   0x19
    11cb:	e9 50 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

00000000000011d0 <__cxa_finalize@plt>:
    11d0:	ff 25 02 4e 00 00    	jmp    QWORD PTR [rip+0x4e02]        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    11d6:	66 90                	xchg   ax,ax

Disassembly of section .text:

00000000000011e0 <main>:
    11e0:	f3 0f 1e fa          	endbr64
    11e4:	53                   	push   rbx
    11e5:	48 8b 7e 08          	mov    rdi,QWORD PTR [rsi+0x8]
    11e9:	ba 0a 00 00 00       	mov    edx,0xa
    11ee:	48 8b 5e 10          	mov    rbx,QWORD PTR [rsi+0x10]
    11f2:	31 f6                	xor    esi,esi
    11f4:	e8 c7 ff ff ff       	call   11c0 <__isoc23_strtol@plt>
    11f9:	48 89 da             	mov    rdx,rbx
    11fc:	48 8d 3d 11 2e 00 00 	lea    rdi,[rip+0x2e11]        # 4014 <_IO_stdin_used+0x14>
    1203:	89 c6                	mov    esi,eax
    1205:	e8 26 1d 00 00       	call   2f30 <_Z7testAllPKcjS0_>
    120a:	31 c0                	xor    eax,eax
    120c:	5b                   	pop    rbx
    120d:	c3                   	ret
    120e:	66 90                	xchg   ax,ax

0000000000001210 <_start>:
    1210:	f3 0f 1e fa          	endbr64
    1214:	31 ed                	xor    ebp,ebp
    1216:	49 89 d1             	mov    r9,rdx
    1219:	5e                   	pop    rsi
    121a:	48 89 e2             	mov    rdx,rsp
    121d:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
    1221:	50                   	push   rax
    1222:	54                   	push   rsp
    1223:	45 31 c0             	xor    r8d,r8d
    1226:	31 c9                	xor    ecx,ecx
    1228:	48 8d 3d b1 ff ff ff 	lea    rdi,[rip+0xffffffffffffffb1]        # 11e0 <main>
    122f:	ff 15 ab 4d 00 00    	call   QWORD PTR [rip+0x4dab]        # 5fe0 <__libc_start_main@GLIBC_2.34>
    1235:	f4                   	hlt
    1236:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    123d:	00 00 00 

0000000000001240 <deregister_tm_clones>:
    1240:	48 8d 3d c9 4d 00 00 	lea    rdi,[rip+0x4dc9]        # 6010 <__TMC_END__>
    1247:	48 8d 05 c2 4d 00 00 	lea    rax,[rip+0x4dc2]        # 6010 <__TMC_END__>
    124e:	48 39 f8             	cmp    rax,rdi
    1251:	74 15                	je     1268 <deregister_tm_clones+0x28>
    1253:	48 8b 05 8e 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d8e]        # 5fe8 <_ITM_deregisterTMCloneTable@Base>
    125a:	48 85 c0             	test   rax,rax
    125d:	74 09                	je     1268 <deregister_tm_clones+0x28>
    125f:	ff e0                	jmp    rax
    1261:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1268:	c3                   	ret
    1269:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001270 <register_tm_clones>:
    1270:	48 8d 3d 99 4d 00 00 	lea    rdi,[rip+0x4d99]        # 6010 <__TMC_END__>
    1277:	48 8d 35 92 4d 00 00 	lea    rsi,[rip+0x4d92]        # 6010 <__TMC_END__>
    127e:	48 29 fe             	sub    rsi,rdi
    1281:	48 89 f0             	mov    rax,rsi
    1284:	48 c1 ee 3f          	shr    rsi,0x3f
    1288:	48 c1 f8 03          	sar    rax,0x3
    128c:	48 01 c6             	add    rsi,rax
    128f:	48 d1 fe             	sar    rsi,1
    1292:	74 14                	je     12a8 <register_tm_clones+0x38>
    1294:	48 8b 05 5d 4d 00 00 	mov    rax,QWORD PTR [rip+0x4d5d]        # 5ff8 <_ITM_registerTMCloneTable@Base>
    129b:	48 85 c0             	test   rax,rax
    129e:	74 08                	je     12a8 <register_tm_clones+0x38>
    12a0:	ff e0                	jmp    rax
    12a2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    12a8:	c3                   	ret
    12a9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012b0 <__do_global_dtors_aux>:
    12b0:	f3 0f 1e fa          	endbr64
    12b4:	80 3d 55 4d 00 00 00 	cmp    BYTE PTR [rip+0x4d55],0x0        # 6010 <__TMC_END__>
    12bb:	75 2b                	jne    12e8 <__do_global_dtors_aux+0x38>
    12bd:	55                   	push   rbp
    12be:	48 83 3d 12 4d 00 00 	cmp    QWORD PTR [rip+0x4d12],0x0        # 5fd8 <__cxa_finalize@GLIBC_2.2.5>
    12c5:	00 
    12c6:	48 89 e5             	mov    rbp,rsp
    12c9:	74 0c                	je     12d7 <__do_global_dtors_aux+0x27>
    12cb:	48 8b 3d 36 4d 00 00 	mov    rdi,QWORD PTR [rip+0x4d36]        # 6008 <__dso_handle>
    12d2:	e8 f9 fe ff ff       	call   11d0 <__cxa_finalize@plt>
    12d7:	e8 64 ff ff ff       	call   1240 <deregister_tm_clones>
    12dc:	c6 05 2d 4d 00 00 01 	mov    BYTE PTR [rip+0x4d2d],0x1        # 6010 <__TMC_END__>
    12e3:	5d                   	pop    rbp
    12e4:	c3                   	ret
    12e5:	0f 1f 00             	nop    DWORD PTR [rax]
    12e8:	c3                   	ret
    12e9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000012f0 <frame_dummy>:
    12f0:	f3 0f 1e fa          	endbr64
    12f4:	e9 77 ff ff ff       	jmp    1270 <register_tm_clones>
    12f9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001300 <_Z16buildStringArrayPcj>:
    1300:	f3 0f 1e fa          	endbr64
    1304:	41 57                	push   r15
    1306:	41 56                	push   r14
    1308:	41 55                	push   r13
    130a:	41 54                	push   r12
    130c:	55                   	push   rbp
    130d:	53                   	push   rbx
    130e:	48 83 ec 28          	sub    rsp,0x28
    1312:	48 85 ff             	test   rdi,rdi
    1315:	0f 84 e9 00 00 00    	je     1404 <_Z16buildStringArrayPcj+0x104>
    131b:	41 89 f4             	mov    r12d,esi
    131e:	41 89 f7             	mov    r15d,esi
    1321:	48 89 fd             	mov    rbp,rdi
    1324:	be 10 00 00 00       	mov    esi,0x10
    1329:	44 89 e3             	mov    ebx,r12d
    132c:	4c 89 ff             	mov    rdi,r15
    132f:	e8 4c fd ff ff       	call   1080 <calloc@plt>
    1334:	c1 e3 05             	shl    ebx,0x5
    1337:	bf 20 00 00 00       	mov    edi,0x20
    133c:	48 89 de             	mov    rsi,rbx
    133f:	49 89 c5             	mov    r13,rax
    1342:	e8 59 fd ff ff       	call   10a0 <aligned_alloc@plt>
    1347:	49 89 c6             	mov    r14,rax
    134a:	45 85 e4             	test   r12d,r12d
    134d:	0f 84 9f 00 00 00    	je     13f2 <_Z16buildStringArrayPcj+0xf2>
    1353:	49 c1 e7 04          	shl    r15,0x4
    1357:	4c 89 7c 24 18       	mov    QWORD PTR [rsp+0x18],r15
    135c:	45 31 ff             	xor    r15d,r15d
    135f:	90                   	nop
    1360:	48 89 ef             	mov    rdi,rbp
    1363:	be 0a 00 00 00       	mov    esi,0xa
    1368:	e8 e3 fc ff ff       	call   1050 <strchr@plt>
    136d:	48 89 ee             	mov    rsi,rbp
    1370:	47 8d 14 3f          	lea    r10d,[r15+r15*1]
    1374:	48 8d 68 01          	lea    rbp,[rax+0x1]
    1378:	4c 89 d1             	mov    rcx,r10
    137b:	4f 8d 0c 16          	lea    r9,[r14+r10*1]
    137f:	4c 89 54 24 10       	mov    QWORD PTR [rsp+0x10],r10
    1384:	49 89 ec             	mov    r12,rbp
    1387:	4c 89 cf             	mov    rdi,r9
    138a:	4c 89 0c 24          	mov    QWORD PTR [rsp],r9
    138e:	49 29 f4             	sub    r12,rsi
    1391:	4c 39 d3             	cmp    rbx,r10
    1394:	48 0f 43 cb          	cmovae rcx,rbx
    1398:	44 89 e2             	mov    edx,r12d
    139b:	48 89 54 24 08       	mov    QWORD PTR [rsp+0x8],rdx
    13a0:	4c 29 d1             	sub    rcx,r10
    13a3:	e8 b8 fc ff ff       	call   1060 <__strncpy_chk@plt>
    13a8:	48 8b 54 24 08       	mov    rdx,QWORD PTR [rsp+0x8]
    13ad:	4c 8b 54 24 10       	mov    r10,QWORD PTR [rsp+0x10]
    13b2:	4a 8d 3c 12          	lea    rdi,[rdx+r10*1]
    13b6:	ba 20 00 00 00       	mov    edx,0x20
    13bb:	48 39 fb             	cmp    rbx,rdi
    13be:	48 89 f9             	mov    rcx,rdi
    13c1:	48 0f 43 cb          	cmovae rcx,rbx
    13c5:	44 29 e2             	sub    edx,r12d
    13c8:	31 f6                	xor    esi,esi
    13ca:	48 29 f9             	sub    rcx,rdi
    13cd:	4c 01 f7             	add    rdi,r14
    13d0:	e8 4b fd ff ff       	call   1120 <__memset_chk@plt>
    13d5:	4c 8b 0c 24          	mov    r9,QWORD PTR [rsp]
    13d9:	47 89 64 3d 0c       	mov    DWORD PTR [r13+r15*1+0xc],r12d
    13de:	4f 89 4c 3d 00       	mov    QWORD PTR [r13+r15*1+0x0],r9
    13e3:	49 83 c7 10          	add    r15,0x10
    13e7:	4c 39 7c 24 18       	cmp    QWORD PTR [rsp+0x18],r15
    13ec:	0f 85 6e ff ff ff    	jne    1360 <_Z16buildStringArrayPcj+0x60>
    13f2:	48 83 c4 28          	add    rsp,0x28
    13f6:	4c 89 e8             	mov    rax,r13
    13f9:	5b                   	pop    rbx
    13fa:	5d                   	pop    rbp
    13fb:	41 5c                	pop    r12
    13fd:	41 5d                	pop    r13
    13ff:	41 5e                	pop    r14
    1401:	41 5f                	pop    r15
    1403:	c3                   	ret
    1404:	48 8d 0d dd 2e 00 00 	lea    rcx,[rip+0x2edd]        # 42e8 <_IO_stdin_used+0x2e8>
    140b:	ba 15 00 00 00       	mov    edx,0x15
    1410:	48 8d 35 01 2f 00 00 	lea    rsi,[rip+0x2f01]        # 4318 <_IO_stdin_used+0x318>
    1417:	48 8d 3d ff 2b 00 00 	lea    rdi,[rip+0x2bff]        # 401d <_IO_stdin_used+0x1d>
    141e:	e8 4d fc ff ff       	call   1070 <__assert_fail@plt>
    1423:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    142a:	00 00 00 00 
    142e:	66 90                	xchg   ax,ax

0000000000001430 <_Z11hashMapCtorPFj8string_tEj>:
    1430:	f3 0f 1e fa          	endbr64
    1434:	55                   	push   rbp
    1435:	48 89 e5             	mov    rbp,rsp
    1438:	41 56                	push   r14
    143a:	41 89 d6             	mov    r14d,edx
    143d:	41 55                	push   r13
    143f:	41 54                	push   r12
    1441:	49 89 fc             	mov    r12,rdi
    1444:	53                   	push   rbx
    1445:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    1449:	48 83 ec 40          	sub    rsp,0x40
    144d:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1454:	00 00 
    1456:	48 89 44 24 38       	mov    QWORD PTR [rsp+0x38],rax
    145b:	31 c0                	xor    eax,eax
    145d:	48 89 77 10          	mov    QWORD PTR [rdi+0x10],rsi
    1461:	be 18 00 00 00       	mov    esi,0x18
    1466:	c7 47 0c 00 00 00 00 	mov    DWORD PTR [rdi+0xc],0x0
    146d:	44 89 77 08          	mov    DWORD PTR [rdi+0x8],r14d
    1471:	4c 89 f7             	mov    rdi,r14
    1474:	e8 07 fc ff ff       	call   1080 <calloc@plt>
    1479:	49 89 04 24          	mov    QWORD PTR [r12],rax
    147d:	45 85 f6             	test   r14d,r14d
    1480:	74 32                	je     14b4 <_Z11hashMapCtorPFj8string_tEj+0x84>
    1482:	48 89 c3             	mov    rbx,rax
    1485:	4b 8d 04 76          	lea    rax,[r14+r14*2]
    1489:	49 89 e5             	mov    r13,rsp
    148c:	4c 8d 34 c3          	lea    r14,[rbx+rax*8]
    1490:	4c 89 ef             	mov    rdi,r13
    1493:	48 83 c3 18          	add    rbx,0x18
    1497:	e8 54 0a 00 00       	call   1ef0 <_Z8listCtorv>
    149c:	c5 fa 6f 04 24       	vmovdqu xmm0,XMMWORD PTR [rsp]
    14a1:	c5 fa 7f 43 e8       	vmovdqu XMMWORD PTR [rbx-0x18],xmm0
    14a6:	48 8b 44 24 10       	mov    rax,QWORD PTR [rsp+0x10]
    14ab:	48 89 43 f8          	mov    QWORD PTR [rbx-0x8],rax
    14af:	4c 39 f3             	cmp    rbx,r14
    14b2:	75 dc                	jne    1490 <_Z11hashMapCtorPFj8string_tEj+0x60>
    14b4:	48 8b 44 24 38       	mov    rax,QWORD PTR [rsp+0x38]
    14b9:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    14c0:	00 00 
    14c2:	75 10                	jne    14d4 <_Z11hashMapCtorPFj8string_tEj+0xa4>
    14c4:	48 8d 65 e0          	lea    rsp,[rbp-0x20]
    14c8:	4c 89 e0             	mov    rax,r12
    14cb:	5b                   	pop    rbx
    14cc:	41 5c                	pop    r12
    14ce:	41 5d                	pop    r13
    14d0:	41 5e                	pop    r14
    14d2:	5d                   	pop    rbp
    14d3:	c3                   	ret
    14d4:	e8 07 fc ff ff       	call   10e0 <__stack_chk_fail@plt>
    14d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000014e0 <_Z17hashMapAddElementP7HashMap8string_t>:
    14e0:	f3 0f 1e fa          	endbr64
    14e4:	55                   	push   rbp
    14e5:	48 89 e5             	mov    rbp,rsp
    14e8:	41 57                	push   r15
    14ea:	41 56                	push   r14
    14ec:	41 55                	push   r13
    14ee:	41 54                	push   r12
    14f0:	53                   	push   rbx
    14f1:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    14f5:	48 83 ec 60          	sub    rsp,0x60
    14f9:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1500:	00 00 
    1502:	48 89 44 24 58       	mov    QWORD PTR [rsp+0x58],rax
    1507:	31 c0                	xor    eax,eax
    1509:	48 85 ff             	test   rdi,rdi
    150c:	0f 84 51 02 00 00    	je     1763 <_Z17hashMapAddElementP7HashMap8string_t+0x283>
    1512:	49 89 fc             	mov    r12,rdi
    1515:	48 89 d3             	mov    rbx,rdx
    1518:	48 89 f7             	mov    rdi,rsi
    151b:	49 89 f5             	mov    r13,rsi
    151e:	48 89 d6             	mov    rsi,rdx
    1521:	41 ff 54 24 10       	call   QWORD PTR [r12+0x10]
    1526:	31 d2                	xor    edx,edx
    1528:	4c 89 ee             	mov    rsi,r13
    152b:	89 c1                	mov    ecx,eax
    152d:	89 c8                	mov    eax,ecx
    152f:	41 f7 74 24 08       	div    DWORD PTR [r12+0x8]
    1534:	89 d0                	mov    eax,edx
    1536:	89 54 24 14          	mov    DWORD PTR [rsp+0x14],edx
    153a:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    153e:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    1542:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1546:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    154d:	ff ff ff 
    1550:	48 21 c3             	and    rbx,rax
    1553:	48 89 da             	mov    rdx,rbx
    1556:	48 09 ca             	or     rdx,rcx
    1559:	e8 f2 09 00 00       	call   1f50 <_Z12pushListElemP4List8string_t>
    155e:	83 f8 01             	cmp    eax,0x1
    1561:	74 3d                	je     15a0 <_Z17hashMapAddElementP7HashMap8string_t+0xc0>
    1563:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    156a:	c5 f8 2f 05 96 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a96]        # 4008 <_IO_stdin_used+0x8>
    1571:	00 
    1572:	73 5e                	jae    15d2 <_Z17hashMapAddElementP7HashMap8string_t+0xf2>
    1574:	48 8b 44 24 58       	mov    rax,QWORD PTR [rsp+0x58]
    1579:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    1580:	00 00 
    1582:	0f 85 fa 01 00 00    	jne    1782 <_Z17hashMapAddElementP7HashMap8string_t+0x2a2>
    1588:	8b 44 24 14          	mov    eax,DWORD PTR [rsp+0x14]
    158c:	48 8d 65 d8          	lea    rsp,[rbp-0x28]
    1590:	5b                   	pop    rbx
    1591:	41 5c                	pop    r12
    1593:	41 5d                	pop    r13
    1595:	41 5e                	pop    r14
    1597:	41 5f                	pop    r15
    1599:	5d                   	pop    rbp
    159a:	c3                   	ret
    159b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    15a0:	41 8b 44 24 08       	mov    eax,DWORD PTR [r12+0x8]
    15a5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    15a9:	c4 e1 f2 2a c8       	vcvtsi2ss xmm1,xmm1,rax
    15ae:	c4 c1 72 59 44 24 0c 	vmulss xmm0,xmm1,DWORD PTR [r12+0xc]
    15b5:	c5 fa 58 05 47 2a 00 	vaddss xmm0,xmm0,DWORD PTR [rip+0x2a47]        # 4004 <_IO_stdin_used+0x4>
    15bc:	00 
    15bd:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    15c1:	c5 f8 2f 05 3f 2a 00 	vcomiss xmm0,DWORD PTR [rip+0x2a3f]        # 4008 <_IO_stdin_used+0x8>
    15c8:	00 
    15c9:	c4 c1 7a 11 44 24 0c 	vmovss DWORD PTR [r12+0xc],xmm0
    15d0:	72 a2                	jb     1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    15d2:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    15d7:	49 8b 44 24 10       	mov    rax,QWORD PTR [r12+0x10]
    15dc:	be 18 00 00 00       	mov    esi,0x18
    15e1:	c5 fa 11 44 24 10    	vmovss DWORD PTR [rsp+0x10],xmm0
    15e7:	47 8d 2c 00          	lea    r13d,[r8+r8*1]
    15eb:	44 89 44 24 18       	mov    DWORD PTR [rsp+0x18],r8d
    15f0:	4c 89 ef             	mov    rdi,r13
    15f3:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    15f8:	4c 89 eb             	mov    rbx,r13
    15fb:	e8 80 fa ff ff       	call   1080 <calloc@plt>
    1600:	45 85 ed             	test   r13d,r13d
    1603:	44 8b 44 24 18       	mov    r8d,DWORD PTR [rsp+0x18]
    1608:	c5 fa 10 44 24 10    	vmovss xmm0,DWORD PTR [rsp+0x10]
    160e:	49 89 c6             	mov    r14,rax
    1611:	74 51                	je     1664 <_Z17hashMapAddElementP7HashMap8string_t+0x184>
    1613:	4b 8d 54 6d 00       	lea    rdx,[r13+r13*2+0x0]
    1618:	49 89 c7             	mov    r15,rax
    161b:	4c 8d 2c d0          	lea    r13,[rax+rdx*8]
    161f:	48 8d 44 24 20       	lea    rax,[rsp+0x20]
    1624:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    1629:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1630:	48 8b 7c 24 18       	mov    rdi,QWORD PTR [rsp+0x18]
    1635:	49 83 c7 18          	add    r15,0x18
    1639:	e8 b2 08 00 00       	call   1ef0 <_Z8listCtorv>
    163e:	c5 fa 6f 54 24 20    	vmovdqu xmm2,XMMWORD PTR [rsp+0x20]
    1644:	c4 c1 7a 7f 57 e8    	vmovdqu XMMWORD PTR [r15-0x18],xmm2
    164a:	48 8b 54 24 30       	mov    rdx,QWORD PTR [rsp+0x30]
    164f:	49 89 57 f8          	mov    QWORD PTR [r15-0x8],rdx
    1653:	4d 39 fd             	cmp    r13,r15
    1656:	75 d8                	jne    1630 <_Z17hashMapAddElementP7HashMap8string_t+0x150>
    1658:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    165d:	c4 c1 7a 10 44 24 0c 	vmovss xmm0,DWORD PTR [r12+0xc]
    1664:	c5 fa 59 1d a0 29 00 	vmulss xmm3,xmm0,DWORD PTR [rip+0x29a0]        # 400c <_IO_stdin_used+0xc>
    166b:	00 
    166c:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1670:	48 89 fa             	mov    rdx,rdi
    1673:	c5 fa 11 5c 24 10    	vmovss DWORD PTR [rsp+0x10],xmm3
    1679:	45 85 c0             	test   r8d,r8d
    167c:	0f 84 b7 00 00 00    	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1682:	48 c7 44 24 18 00 00 	mov    QWORD PTR [rsp+0x18],0x0
    1689:	00 00 
    168b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1690:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1695:	48 8d 04 40          	lea    rax,[rax+rax*2]
    1699:	4c 8d 2c c5 00 00 00 	lea    r13,[rax*8+0x0]
    16a0:	00 
    16a1:	48 8b 04 c7          	mov    rax,QWORD PTR [rdi+rax*8]
    16a5:	8b 08                	mov    ecx,DWORD PTR [rax]
    16a7:	85 c9                	test   ecx,ecx
    16a9:	74 50                	je     16fb <_Z17hashMapAddElementP7HashMap8string_t+0x21b>
    16ab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    16b0:	48 c1 e1 05          	shl    rcx,0x5
    16b4:	31 d2                	xor    edx,edx
    16b6:	48 01 c8             	add    rax,rcx
    16b9:	49 89 cf             	mov    r15,rcx
    16bc:	c5 fa 7e 40 18       	vmovq  xmm0,QWORD PTR [rax+0x18]
    16c1:	48 8b 70 10          	mov    rsi,QWORD PTR [rax+0x10]
    16c5:	c5 f9 7e c0          	vmovd  eax,xmm0
    16c9:	c4 e1 f9 7e c7       	vmovq  rdi,xmm0
    16ce:	f7 f3                	div    ebx
    16d0:	48 8d 04 52          	lea    rax,[rdx+rdx*2]
    16d4:	48 89 fa             	mov    rdx,rdi
    16d7:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    16db:	48 89 c7             	mov    rdi,rax
    16de:	e8 6d 08 00 00       	call   1f50 <_Z12pushListElemP4List8string_t>
    16e3:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    16e7:	4a 8b 04 2f          	mov    rax,QWORD PTR [rdi+r13*1]
    16eb:	48 89 fa             	mov    rdx,rdi
    16ee:	42 8b 0c 38          	mov    ecx,DWORD PTR [rax+r15*1]
    16f2:	85 c9                	test   ecx,ecx
    16f4:	75 ba                	jne    16b0 <_Z17hashMapAddElementP7HashMap8string_t+0x1d0>
    16f6:	45 8b 44 24 08       	mov    r8d,DWORD PTR [r12+0x8]
    16fb:	48 83 44 24 18 01    	add    QWORD PTR [rsp+0x18],0x1
    1701:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    1706:	44 39 c0             	cmp    eax,r8d
    1709:	72 85                	jb     1690 <_Z17hashMapAddElementP7HashMap8string_t+0x1b0>
    170b:	45 85 c0             	test   r8d,r8d
    170e:	74 29                	je     1739 <_Z17hashMapAddElementP7HashMap8string_t+0x259>
    1710:	45 31 ed             	xor    r13d,r13d
    1713:	eb 07                	jmp    171c <_Z17hashMapAddElementP7HashMap8string_t+0x23c>
    1715:	0f 1f 00             	nop    DWORD PTR [rax]
    1718:	49 8b 14 24          	mov    rdx,QWORD PTR [r12]
    171c:	4b 8d 44 6d 00       	lea    rax,[r13+r13*2+0x0]
    1721:	49 83 c5 01          	add    r13,0x1
    1725:	48 8d 3c c2          	lea    rdi,[rdx+rax*8]
    1729:	e8 02 0b 00 00       	call   2230 <_Z8listDtorP4List>
    172e:	45 3b 6c 24 08       	cmp    r13d,DWORD PTR [r12+0x8]
    1733:	72 e3                	jb     1718 <_Z17hashMapAddElementP7HashMap8string_t+0x238>
    1735:	49 8b 3c 24          	mov    rdi,QWORD PTR [r12]
    1739:	e8 c2 f9 ff ff       	call   1100 <free@plt>
    173e:	c5 fa 10 64 24 10    	vmovss xmm4,DWORD PTR [rsp+0x10]
    1744:	48 8b 44 24 08       	mov    rax,QWORD PTR [rsp+0x8]
    1749:	4d 89 34 24          	mov    QWORD PTR [r12],r14
    174d:	41 89 5c 24 08       	mov    DWORD PTR [r12+0x8],ebx
    1752:	49 89 44 24 10       	mov    QWORD PTR [r12+0x10],rax
    1757:	c4 c1 7a 11 64 24 0c 	vmovss DWORD PTR [r12+0xc],xmm4
    175e:	e9 11 fe ff ff       	jmp    1574 <_Z17hashMapAddElementP7HashMap8string_t+0x94>
    1763:	48 8d 0d ce 2b 00 00 	lea    rcx,[rip+0x2bce]        # 4338 <_IO_stdin_used+0x338>
    176a:	ba 3e 00 00 00       	mov    edx,0x3e
    176f:	48 8d 35 a2 2b 00 00 	lea    rsi,[rip+0x2ba2]        # 4318 <_IO_stdin_used+0x318>
    1776:	48 8d 3d a5 28 00 00 	lea    rdi,[rip+0x28a5]        # 4022 <_IO_stdin_used+0x22>
    177d:	e8 ee f8 ff ff       	call   1070 <__assert_fail@plt>
    1782:	e8 59 f9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1787:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    178e:	00 00 

0000000000001790 <_Z17hashMapPopElementP7HashMap8string_t>:
    1790:	f3 0f 1e fa          	endbr64
    1794:	41 55                	push   r13
    1796:	41 54                	push   r12
    1798:	55                   	push   rbp
    1799:	53                   	push   rbx
    179a:	48 83 ec 08          	sub    rsp,0x8
    179e:	48 85 ff             	test   rdi,rdi
    17a1:	0f 84 93 00 00 00    	je     183a <_Z17hashMapPopElementP7HashMap8string_t+0xaa>
    17a7:	48 89 fb             	mov    rbx,rdi
    17aa:	48 89 d5             	mov    rbp,rdx
    17ad:	48 89 f7             	mov    rdi,rsi
    17b0:	49 89 f5             	mov    r13,rsi
    17b3:	48 89 d6             	mov    rsi,rdx
    17b6:	ff 53 10             	call   QWORD PTR [rbx+0x10]
    17b9:	31 d2                	xor    edx,edx
    17bb:	4c 89 ee             	mov    rsi,r13
    17be:	89 c1                	mov    ecx,eax
    17c0:	89 c8                	mov    eax,ecx
    17c2:	f7 73 08             	div    DWORD PTR [rbx+0x8]
    17c5:	89 d0                	mov    eax,edx
    17c7:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    17cb:	49 89 c4             	mov    r12,rax
    17ce:	48 8b 03             	mov    rax,QWORD PTR [rbx]
    17d1:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    17d5:	48 89 ea             	mov    rdx,rbp
    17d8:	48 b8 00 00 00 00 ff 	movabs rax,0xffffffff00000000
    17df:	ff ff ff 
    17e2:	48 21 c2             	and    rdx,rax
    17e5:	48 09 ca             	or     rdx,rcx
    17e8:	e8 e3 08 00 00       	call   20d0 <_Z11popListElemP4List8string_t>
    17ed:	85 c0                	test   eax,eax
    17ef:	74 37                	je     1828 <_Z17hashMapPopElementP7HashMap8string_t+0x98>
    17f1:	8b 43 08             	mov    eax,DWORD PTR [rbx+0x8]
    17f4:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    17f8:	c4 e1 fa 2a c0       	vcvtsi2ss xmm0,xmm0,rax
    17fd:	c5 fa 59 4b 0c       	vmulss xmm1,xmm0,DWORD PTR [rbx+0xc]
    1802:	44 89 e0             	mov    eax,r12d
    1805:	c5 f2 5c 0d f7 27 00 	vsubss xmm1,xmm1,DWORD PTR [rip+0x27f7]        # 4004 <_IO_stdin_used+0x4>
    180c:	00 
    180d:	c5 f2 5e c0          	vdivss xmm0,xmm1,xmm0
    1811:	c5 fa 11 43 0c       	vmovss DWORD PTR [rbx+0xc],xmm0
    1816:	48 83 c4 08          	add    rsp,0x8
    181a:	5b                   	pop    rbx
    181b:	5d                   	pop    rbp
    181c:	41 5c                	pop    r12
    181e:	41 5d                	pop    r13
    1820:	c3                   	ret
    1821:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1828:	44 8b 63 08          	mov    r12d,DWORD PTR [rbx+0x8]
    182c:	48 83 c4 08          	add    rsp,0x8
    1830:	5b                   	pop    rbx
    1831:	5d                   	pop    rbp
    1832:	44 89 e0             	mov    eax,r12d
    1835:	41 5c                	pop    r12
    1837:	41 5d                	pop    r13
    1839:	c3                   	ret
    183a:	48 8d 0d 27 2b 00 00 	lea    rcx,[rip+0x2b27]        # 4368 <_IO_stdin_used+0x368>
    1841:	ba 4f 00 00 00       	mov    edx,0x4f
    1846:	48 8d 35 cb 2a 00 00 	lea    rsi,[rip+0x2acb]        # 4318 <_IO_stdin_used+0x318>
    184d:	48 8d 3d ce 27 00 00 	lea    rdi,[rip+0x27ce]        # 4022 <_IO_stdin_used+0x22>
    1854:	e8 17 f8 ff ff       	call   1070 <__assert_fail@plt>
    1859:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001860 <_Z20hashMapSearchElementP7HashMap8string_t>:
    1860:	f3 0f 1e fa          	endbr64
    1864:	48 83 ec 08          	sub    rsp,0x8
    1868:	48 85 ff             	test   rdi,rdi
    186b:	74 58                	je     18c5 <_Z20hashMapSearchElementP7HashMap8string_t+0x65>
    186d:	48 89 d1             	mov    rcx,rdx
    1870:	ba 11 11 11 21       	mov    edx,0x21111111
    1875:	89 d0                	mov    eax,edx
    1877:	41 89 d1             	mov    r9d,edx
    187a:	41 89 d0             	mov    r8d,edx
    187d:	f2 48 0f 38 f1 06    	crc32  rax,QWORD PTR [rsi]
    1883:	f2 4c 0f 38 f1 4e 08 	crc32  r9,QWORD PTR [rsi+0x8]
    188a:	f2 4c 0f 38 f1 46 10 	crc32  r8,QWORD PTR [rsi+0x10]
    1891:	44 01 c8             	add    eax,r9d
    1894:	f2 48 0f 38 f1 56 18 	crc32  rdx,QWORD PTR [rsi+0x18]
    189b:	44 01 c0             	add    eax,r8d
    189e:	01 d0                	add    eax,edx
    18a0:	8b 57 08             	mov    edx,DWORD PTR [rdi+0x8]
    18a3:	83 ea 01             	sub    edx,0x1
    18a6:	21 d0                	and    eax,edx
    18a8:	48 8d 14 40          	lea    rdx,[rax+rax*2]
    18ac:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    18af:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    18b3:	48 89 ca             	mov    rdx,rcx
    18b6:	e8 f5 08 00 00       	call   21b0 <_Z13searchElementP4List8string_t>
    18bb:	85 c0                	test   eax,eax
    18bd:	0f 95 c0             	setne  al
    18c0:	48 83 c4 08          	add    rsp,0x8
    18c4:	c3                   	ret
    18c5:	48 8d 0d cc 2a 00 00 	lea    rcx,[rip+0x2acc]        # 4398 <_IO_stdin_used+0x398>
    18cc:	ba 5c 00 00 00       	mov    edx,0x5c
    18d1:	48 8d 35 40 2a 00 00 	lea    rsi,[rip+0x2a40]        # 4318 <_IO_stdin_used+0x318>
    18d8:	48 8d 3d 43 27 00 00 	lea    rdi,[rip+0x2743]        # 4022 <_IO_stdin_used+0x22>
    18df:	e8 8c f7 ff ff       	call   1070 <__assert_fail@plt>
    18e4:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    18eb:	00 00 00 00 
    18ef:	90                   	nop

00000000000018f0 <_Z11hashMapDtorP7HashMap>:
    18f0:	f3 0f 1e fa          	endbr64
    18f4:	55                   	push   rbp
    18f5:	53                   	push   rbx
    18f6:	48 83 ec 08          	sub    rsp,0x8
    18fa:	48 85 ff             	test   rdi,rdi
    18fd:	74 3a                	je     1939 <_Z11hashMapDtorP7HashMap+0x49>
    18ff:	8b 47 08             	mov    eax,DWORD PTR [rdi+0x8]
    1902:	48 89 fd             	mov    rbp,rdi
    1905:	31 db                	xor    ebx,ebx
    1907:	85 c0                	test   eax,eax
    1909:	74 1f                	je     192a <_Z11hashMapDtorP7HashMap+0x3a>
    190b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1910:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    1914:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    1918:	48 83 c3 01          	add    rbx,0x1
    191c:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    1920:	e8 0b 09 00 00       	call   2230 <_Z8listDtorP4List>
    1925:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    1928:	72 e6                	jb     1910 <_Z11hashMapDtorP7HashMap+0x20>
    192a:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    192e:	48 83 c4 08          	add    rsp,0x8
    1932:	5b                   	pop    rbx
    1933:	5d                   	pop    rbp
    1934:	e9 c7 f7 ff ff       	jmp    1100 <free@plt>
    1939:	48 8d 0d ea 26 00 00 	lea    rcx,[rip+0x26ea]        # 402a <_IO_stdin_used+0x2a>
    1940:	ba 91 00 00 00       	mov    edx,0x91
    1945:	48 8d 35 cc 29 00 00 	lea    rsi,[rip+0x29cc]        # 4318 <_IO_stdin_used+0x318>
    194c:	48 8d 3d cf 26 00 00 	lea    rdi,[rip+0x26cf]        # 4022 <_IO_stdin_used+0x22>
    1953:	e8 18 f7 ff ff       	call   1070 <__assert_fail@plt>
    1958:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    195f:	00 

0000000000001960 <_Z17hashMapDebugPrintP7HashMap>:
    1960:	f3 0f 1e fa          	endbr64
    1964:	41 55                	push   r13
    1966:	4c 8d 2d d8 26 00 00 	lea    r13,[rip+0x26d8]        # 4045 <_IO_stdin_used+0x45>
    196d:	41 54                	push   r12
    196f:	55                   	push   rbp
    1970:	48 89 fd             	mov    rbp,rdi
    1973:	4c 89 ef             	mov    rdi,r13
    1976:	53                   	push   rbx
    1977:	48 83 ec 08          	sub    rsp,0x8
    197b:	e8 e0 f7 ff ff       	call   1160 <puts@plt>
    1980:	48 85 ed             	test   rbp,rbp
    1983:	0f 84 87 00 00 00    	je     1a10 <_Z17hashMapDebugPrintP7HashMap+0xb0>
    1989:	8b 55 08             	mov    edx,DWORD PTR [rbp+0x8]
    198c:	48 8d 35 d2 26 00 00 	lea    rsi,[rip+0x26d2]        # 4065 <_IO_stdin_used+0x65>
    1993:	bf 02 00 00 00       	mov    edi,0x2
    1998:	31 c0                	xor    eax,eax
    199a:	e8 91 f6 ff ff       	call   1030 <__printf_chk@plt>
    199f:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    19a3:	bf 02 00 00 00       	mov    edi,0x2
    19a8:	48 8d 35 c7 26 00 00 	lea    rsi,[rip+0x26c7]        # 4076 <_IO_stdin_used+0x76>
    19af:	b8 01 00 00 00       	mov    eax,0x1
    19b4:	c5 fa 5a 45 0c       	vcvtss2sd xmm0,xmm0,DWORD PTR [rbp+0xc]
    19b9:	e8 72 f6 ff ff       	call   1030 <__printf_chk@plt>
    19be:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    19c1:	85 c0                	test   eax,eax
    19c3:	74 36                	je     19fb <_Z17hashMapDebugPrintP7HashMap+0x9b>
    19c5:	31 db                	xor    ebx,ebx
    19c7:	4c 8d 25 b9 26 00 00 	lea    r12,[rip+0x26b9]        # 4087 <_IO_stdin_used+0x87>
    19ce:	66 90                	xchg   ax,ax
    19d0:	89 da                	mov    edx,ebx
    19d2:	4c 89 e6             	mov    rsi,r12
    19d5:	bf 02 00 00 00       	mov    edi,0x2
    19da:	31 c0                	xor    eax,eax
    19dc:	e8 4f f6 ff ff       	call   1030 <__printf_chk@plt>
    19e1:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    19e5:	48 8d 14 5b          	lea    rdx,[rbx+rbx*2]
    19e9:	48 83 c3 01          	add    rbx,0x1
    19ed:	48 8d 3c d0          	lea    rdi,[rax+rdx*8]
    19f1:	e8 7a 08 00 00       	call   2270 <_Z10debugPrintP4List>
    19f6:	3b 5d 08             	cmp    ebx,DWORD PTR [rbp+0x8]
    19f9:	72 d5                	jb     19d0 <_Z17hashMapDebugPrintP7HashMap+0x70>
    19fb:	48 83 c4 08          	add    rsp,0x8
    19ff:	4c 89 ef             	mov    rdi,r13
    1a02:	5b                   	pop    rbx
    1a03:	5d                   	pop    rbp
    1a04:	41 5c                	pop    r12
    1a06:	41 5d                	pop    r13
    1a08:	e9 53 f7 ff ff       	jmp    1160 <puts@plt>
    1a0d:	0f 1f 00             	nop    DWORD PTR [rax]
    1a10:	48 8d 3d 49 26 00 00 	lea    rdi,[rip+0x2649]        # 4060 <_IO_stdin_used+0x60>
    1a17:	e8 44 f7 ff ff       	call   1160 <puts@plt>
    1a1c:	eb dd                	jmp    19fb <_Z17hashMapDebugPrintP7HashMap+0x9b>
    1a1e:	66 90                	xchg   ax,ax

0000000000001a20 <_Z15crc32HashString8string_t>:
    1a20:	f3 0f 1e fa          	endbr64
    1a24:	48 c1 ee 20          	shr    rsi,0x20
    1a28:	83 fe 01             	cmp    esi,0x1
    1a2b:	0f 8e 05 01 00 00    	jle    1b36 <_Z15crc32HashString8string_t+0x116>
    1a31:	83 ee 02             	sub    esi,0x2
    1a34:	53                   	push   rbx
    1a35:	49 89 f9             	mov    r9,rdi
    1a38:	45 31 d2             	xor    r10d,r10d
    1a3b:	c1 ee 02             	shr    esi,0x2
    1a3e:	41 b8 1f 00 00 00    	mov    r8d,0x1f
    1a44:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1a4b:	48 be 00 00 00 00 00 	movabs rsi,0x8000000000000000
    1a52:	00 00 80 
    1a55:	4c 8d 5c 07 04       	lea    r11,[rdi+rax*1+0x4]
    1a5a:	48 bf 41 6f dc 1e 01 	movabs rdi,0x11edc6f41
    1a61:	00 00 00 
    1a64:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1a68:	41 8b 11             	mov    edx,DWORD PTR [r9]
    1a6b:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1a6e:	d1 ea                	shr    edx,1
    1a70:	81 e2 55 55 55 55    	and    edx,0x55555555
    1a76:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1a7b:	09 d0                	or     eax,edx
    1a7d:	89 c2                	mov    edx,eax
    1a7f:	c1 e0 02             	shl    eax,0x2
    1a82:	c1 ea 02             	shr    edx,0x2
    1a85:	25 cc cc cc cc       	and    eax,0xcccccccc
    1a8a:	81 e2 33 33 33 33    	and    edx,0x33333333
    1a90:	09 d0                	or     eax,edx
    1a92:	89 c1                	mov    ecx,eax
    1a94:	c1 e0 04             	shl    eax,0x4
    1a97:	89 c2                	mov    edx,eax
    1a99:	c1 e9 04             	shr    ecx,0x4
    1a9c:	31 c0                	xor    eax,eax
    1a9e:	81 e1 0f 0f 0f 0f    	and    ecx,0xf0f0f0f
    1aa4:	81 e2 f0 f0 f0 f0    	and    edx,0xf0f0f0f0
    1aaa:	09 ca                	or     edx,ecx
    1aac:	0f ca                	bswap  edx
    1aae:	81 f2 88 88 88 88    	xor    edx,0x88888888
    1ab4:	48 c1 e2 20          	shl    rdx,0x20
    1ab8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1abf:	00 
    1ac0:	48 89 f3             	mov    rbx,rsi
    1ac3:	89 c1                	mov    ecx,eax
    1ac5:	48 d3 eb             	shr    rbx,cl
    1ac8:	48 85 d3             	test   rbx,rdx
    1acb:	74 0e                	je     1adb <_Z15crc32HashString8string_t+0xbb>
    1acd:	44 89 c1             	mov    ecx,r8d
    1ad0:	48 89 fb             	mov    rbx,rdi
    1ad3:	29 c1                	sub    ecx,eax
    1ad5:	48 d3 e3             	shl    rbx,cl
    1ad8:	48 31 da             	xor    rdx,rbx
    1adb:	83 c0 01             	add    eax,0x1
    1ade:	83 f8 20             	cmp    eax,0x20
    1ae1:	75 dd                	jne    1ac0 <_Z15crc32HashString8string_t+0xa0>
    1ae3:	8d 04 12             	lea    eax,[rdx+rdx*1]
    1ae6:	d1 ea                	shr    edx,1
    1ae8:	49 83 c1 04          	add    r9,0x4
    1aec:	81 e2 55 55 55 55    	and    edx,0x55555555
    1af2:	25 aa aa aa aa       	and    eax,0xaaaaaaaa
    1af7:	09 d0                	or     eax,edx
    1af9:	89 c2                	mov    edx,eax
    1afb:	c1 e0 02             	shl    eax,0x2
    1afe:	c1 ea 02             	shr    edx,0x2
    1b01:	25 cc cc cc cc       	and    eax,0xcccccccc
    1b06:	81 e2 33 33 33 33    	and    edx,0x33333333
    1b0c:	09 d0                	or     eax,edx
    1b0e:	89 c2                	mov    edx,eax
    1b10:	c1 e0 04             	shl    eax,0x4
    1b13:	c1 ea 04             	shr    edx,0x4
    1b16:	25 f0 f0 f0 f0       	and    eax,0xf0f0f0f0
    1b1b:	81 e2 0f 0f 0f 0f    	and    edx,0xf0f0f0f
    1b21:	09 d0                	or     eax,edx
    1b23:	0f c8                	bswap  eax
    1b25:	41 01 c2             	add    r10d,eax
    1b28:	4d 39 cb             	cmp    r11,r9
    1b2b:	0f 85 37 ff ff ff    	jne    1a68 <_Z15crc32HashString8string_t+0x48>
    1b31:	44 89 d0             	mov    eax,r10d
    1b34:	5b                   	pop    rbx
    1b35:	c3                   	ret
    1b36:	31 c0                	xor    eax,eax
    1b38:	c3                   	ret
    1b39:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

0000000000001b40 <_Z19_mm_crc32HashString8string_t>:
    1b40:	f3 0f 1e fa          	endbr64
    1b44:	48 c1 ee 20          	shr    rsi,0x20
    1b48:	83 fe 01             	cmp    esi,0x1
    1b4b:	7e 3b                	jle    1b88 <_Z19_mm_crc32HashString8string_t+0x48>
    1b4d:	83 ee 02             	sub    esi,0x2
    1b50:	b9 11 11 11 11       	mov    ecx,0x11111111
    1b55:	c1 ee 02             	shr    esi,0x2
    1b58:	8d 04 b5 00 00 00 00 	lea    eax,[rsi*4+0x0]
    1b5f:	48 8d 74 07 04       	lea    rsi,[rdi+rax*1+0x4]
    1b64:	31 c0                	xor    eax,eax
    1b66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1b6d:	00 00 00 
    1b70:	89 ca                	mov    edx,ecx
    1b72:	48 83 c7 04          	add    rdi,0x4
    1b76:	f2 0f 38 f1 57 fc    	crc32  edx,DWORD PTR [rdi-0x4]
    1b7c:	01 d0                	add    eax,edx
    1b7e:	48 39 f7             	cmp    rdi,rsi
    1b81:	75 ed                	jne    1b70 <_Z19_mm_crc32HashString8string_t+0x30>
    1b83:	c3                   	ret
    1b84:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1b88:	31 c0                	xor    eax,eax
    1b8a:	c3                   	ret
    1b8b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000001b90 <_Z25_mm_crc32UnrollHashString8string_t>:
    1b90:	f3 0f 1e fa          	endbr64
    1b94:	ba 11 11 11 21       	mov    edx,0x21111111
    1b99:	89 d0                	mov    eax,edx
    1b9b:	89 d6                	mov    esi,edx
    1b9d:	89 d1                	mov    ecx,edx
    1b9f:	f2 48 0f 38 f1 07    	crc32  rax,QWORD PTR [rdi]
    1ba5:	f2 48 0f 38 f1 77 08 	crc32  rsi,QWORD PTR [rdi+0x8]
    1bac:	f2 48 0f 38 f1 4f 10 	crc32  rcx,QWORD PTR [rdi+0x10]
    1bb3:	01 f0                	add    eax,esi
    1bb5:	f2 48 0f 38 f1 57 18 	crc32  rdx,QWORD PTR [rdi+0x18]
    1bbc:	01 c8                	add    eax,ecx
    1bbe:	01 d0                	add    eax,edx
    1bc0:	c3                   	ret
    1bc1:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1bc8:	00 00 00 00 
    1bcc:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001bd0 <_Z17murmur2HashString8string_t>:
    1bd0:	f3 0f 1e fa          	endbr64
    1bd4:	48 c1 ee 20          	shr    rsi,0x20
    1bd8:	48 89 f9             	mov    rcx,rdi
    1bdb:	89 f0                	mov    eax,esi
    1bdd:	83 fe 03             	cmp    esi,0x3
    1be0:	0f 86 8a 00 00 00    	jbe    1c70 <_Z17murmur2HashString8string_t+0xa0>
    1be6:	8d 46 fc             	lea    eax,[rsi-0x4]
    1be9:	89 f2                	mov    edx,esi
    1beb:	c1 e8 02             	shr    eax,0x2
    1bee:	83 c0 01             	add    eax,0x1
    1bf1:	48 8d 3c 87          	lea    rdi,[rdi+rax*4]
    1bf5:	0f 1f 00             	nop    DWORD PTR [rax]
    1bf8:	44 69 01 95 e9 d1 5b 	imul   r8d,DWORD PTR [rcx],0x5bd1e995
    1bff:	48 83 c1 04          	add    rcx,0x4
    1c03:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c09:	44 89 c0             	mov    eax,r8d
    1c0c:	c1 e8 18             	shr    eax,0x18
    1c0f:	44 31 c0             	xor    eax,r8d
    1c12:	69 c0 95 e9 d1 5b    	imul   eax,eax,0x5bd1e995
    1c18:	31 c2                	xor    edx,eax
    1c1a:	48 39 cf             	cmp    rdi,rcx
    1c1d:	75 d9                	jne    1bf8 <_Z17murmur2HashString8string_t+0x28>
    1c1f:	89 f0                	mov    eax,esi
    1c21:	83 e0 03             	and    eax,0x3
    1c24:	83 f8 02             	cmp    eax,0x2
    1c27:	74 30                	je     1c59 <_Z17murmur2HashString8string_t+0x89>
    1c29:	83 f8 03             	cmp    eax,0x3
    1c2c:	74 22                	je     1c50 <_Z17murmur2HashString8string_t+0x80>
    1c2e:	83 f8 01             	cmp    eax,0x1
    1c31:	74 2f                	je     1c62 <_Z17murmur2HashString8string_t+0x92>
    1c33:	89 d0                	mov    eax,edx
    1c35:	c1 e8 0d             	shr    eax,0xd
    1c38:	31 c2                	xor    edx,eax
    1c3a:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c40:	89 d0                	mov    eax,edx
    1c42:	c1 e8 0f             	shr    eax,0xf
    1c45:	31 d0                	xor    eax,edx
    1c47:	c3                   	ret
    1c48:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    1c4f:	00 
    1c50:	0f b6 47 02          	movzx  eax,BYTE PTR [rdi+0x2]
    1c54:	c1 e0 10             	shl    eax,0x10
    1c57:	31 c2                	xor    edx,eax
    1c59:	0f b6 47 01          	movzx  eax,BYTE PTR [rdi+0x1]
    1c5d:	c1 e0 08             	shl    eax,0x8
    1c60:	31 c2                	xor    edx,eax
    1c62:	0f b6 07             	movzx  eax,BYTE PTR [rdi]
    1c65:	31 c2                	xor    edx,eax
    1c67:	69 d2 95 e9 d1 5b    	imul   edx,edx,0x5bd1e995
    1c6d:	eb c4                	jmp    1c33 <_Z17murmur2HashString8string_t+0x63>
    1c6f:	90                   	nop
    1c70:	89 f2                	mov    edx,esi
    1c72:	eb b0                	jmp    1c24 <_Z17murmur2HashString8string_t+0x54>
    1c74:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1c7b:	00 00 00 00 
    1c7f:	90                   	nop

0000000000001c80 <_Z13sumHashString8string_t>:
    1c80:	f3 0f 1e fa          	endbr64
    1c84:	48 c1 ee 20          	shr    rsi,0x20
    1c88:	41 89 f0             	mov    r8d,esi
    1c8b:	44 8d 4e fd          	lea    r9d,[rsi-0x3]
    1c8f:	83 fe 03             	cmp    esi,0x3
    1c92:	0f 8e 40 01 00 00    	jle    1dd8 <_Z13sumHashString8string_t+0x158>
    1c98:	8d 46 fc             	lea    eax,[rsi-0x4]
    1c9b:	89 c2                	mov    edx,eax
    1c9d:	c1 ea 02             	shr    edx,0x2
    1ca0:	83 c2 01             	add    edx,0x1
    1ca3:	83 f8 1b             	cmp    eax,0x1b
    1ca6:	0f 86 39 01 00 00    	jbe    1de5 <_Z13sumHashString8string_t+0x165>
    1cac:	89 d1                	mov    ecx,edx
    1cae:	48 89 f8             	mov    rax,rdi
    1cb1:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    1cb5:	c1 e9 03             	shr    ecx,0x3
    1cb8:	48 c1 e1 05          	shl    rcx,0x5
    1cbc:	48 01 f9             	add    rcx,rdi
    1cbf:	90                   	nop
    1cc0:	c5 fd fe 00          	vpaddd ymm0,ymm0,YMMWORD PTR [rax]
    1cc4:	48 83 c0 20          	add    rax,0x20
    1cc8:	48 39 c8             	cmp    rax,rcx
    1ccb:	75 f3                	jne    1cc0 <_Z13sumHashString8string_t+0x40>
    1ccd:	c4 e3 7d 39 c1 01    	vextracti128 xmm1,ymm0,0x1
    1cd3:	89 d1                	mov    ecx,edx
    1cd5:	c5 f1 fe c0          	vpaddd xmm0,xmm1,xmm0
    1cd9:	83 e1 f8             	and    ecx,0xfffffff8
    1cdc:	c5 f1 73 d8 08       	vpsrldq xmm1,xmm0,0x8
    1ce1:	c1 e1 02             	shl    ecx,0x2
    1ce4:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1ce8:	c5 f1 73 d8 04       	vpsrldq xmm1,xmm0,0x4
    1ced:	c5 f9 fe c1          	vpaddd xmm0,xmm0,xmm1
    1cf1:	c5 f9 7e c0          	vmovd  eax,xmm0
    1cf5:	f6 c2 07             	test   dl,0x7
    1cf8:	0f 84 e2 00 00 00    	je     1de0 <_Z13sumHashString8string_t+0x160>
    1cfe:	c5 f8 77             	vzeroupper
    1d01:	4c 63 d1             	movsxd r10,ecx
    1d04:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d08:	44 8d 51 04          	lea    r10d,[rcx+0x4]
    1d0c:	45 39 d1             	cmp    r9d,r10d
    1d0f:	7e 55                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d11:	4d 63 d2             	movsxd r10,r10d
    1d14:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d18:	44 8d 51 08          	lea    r10d,[rcx+0x8]
    1d1c:	45 39 d1             	cmp    r9d,r10d
    1d1f:	7e 45                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d21:	4d 63 d2             	movsxd r10,r10d
    1d24:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d28:	44 8d 51 0c          	lea    r10d,[rcx+0xc]
    1d2c:	45 39 d1             	cmp    r9d,r10d
    1d2f:	7e 35                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d31:	4d 63 d2             	movsxd r10,r10d
    1d34:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d38:	44 8d 51 10          	lea    r10d,[rcx+0x10]
    1d3c:	45 39 d1             	cmp    r9d,r10d
    1d3f:	7e 25                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d41:	4d 63 d2             	movsxd r10,r10d
    1d44:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d48:	44 8d 51 14          	lea    r10d,[rcx+0x14]
    1d4c:	45 39 d1             	cmp    r9d,r10d
    1d4f:	7e 15                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d51:	4d 63 d2             	movsxd r10,r10d
    1d54:	83 c1 18             	add    ecx,0x18
    1d57:	42 03 04 17          	add    eax,DWORD PTR [rdi+r10*1]
    1d5b:	41 39 c9             	cmp    r9d,ecx
    1d5e:	7e 06                	jle    1d66 <_Z13sumHashString8string_t+0xe6>
    1d60:	48 63 c9             	movsxd rcx,ecx
    1d63:	03 04 0f             	add    eax,DWORD PTR [rdi+rcx*1]
    1d66:	c1 e2 02             	shl    edx,0x2
    1d69:	89 d1                	mov    ecx,edx
    1d6b:	41 89 f1             	mov    r9d,esi
    1d6e:	41 83 e1 03          	and    r9d,0x3
    1d72:	39 f1                	cmp    ecx,esi
    1d74:	73 5a                	jae    1dd0 <_Z13sumHashString8string_t+0x150>
    1d76:	48 63 d2             	movsxd rdx,edx
    1d79:	31 c9                	xor    ecx,ecx
    1d7b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1d80:	0f be 34 17          	movsx  esi,BYTE PTR [rdi+rdx*1]
    1d84:	c1 e1 08             	shl    ecx,0x8
    1d87:	48 83 c2 01          	add    rdx,0x1
    1d8b:	01 f1                	add    ecx,esi
    1d8d:	44 39 c2             	cmp    edx,r8d
    1d90:	72 ee                	jb     1d80 <_Z13sumHashString8string_t+0x100>
    1d92:	41 83 f9 03          	cmp    r9d,0x3
    1d96:	74 18                	je     1db0 <_Z13sumHashString8string_t+0x130>
    1d98:	41 83 f9 02          	cmp    r9d,0x2
    1d9c:	74 22                	je     1dc0 <_Z13sumHashString8string_t+0x140>
    1d9e:	31 d2                	xor    edx,edx
    1da0:	c1 e1 18             	shl    ecx,0x18
    1da3:	41 83 f9 01          	cmp    r9d,0x1
    1da7:	0f 45 ca             	cmovne ecx,edx
    1daa:	01 c8                	add    eax,ecx
    1dac:	c3                   	ret
    1dad:	0f 1f 00             	nop    DWORD PTR [rax]
    1db0:	c1 e1 08             	shl    ecx,0x8
    1db3:	01 c8                	add    eax,ecx
    1db5:	c3                   	ret
    1db6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1dbd:	00 00 00 
    1dc0:	c1 e1 10             	shl    ecx,0x10
    1dc3:	01 c8                	add    eax,ecx
    1dc5:	c3                   	ret
    1dc6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1dcd:	00 00 00 
    1dd0:	31 c9                	xor    ecx,ecx
    1dd2:	eb be                	jmp    1d92 <_Z13sumHashString8string_t+0x112>
    1dd4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1dd8:	31 c9                	xor    ecx,ecx
    1dda:	31 d2                	xor    edx,edx
    1ddc:	31 c0                	xor    eax,eax
    1dde:	eb 8b                	jmp    1d6b <_Z13sumHashString8string_t+0xeb>
    1de0:	c5 f8 77             	vzeroupper
    1de3:	eb 81                	jmp    1d66 <_Z13sumHashString8string_t+0xe6>
    1de5:	31 c9                	xor    ecx,ecx
    1de7:	31 c0                	xor    eax,eax
    1de9:	e9 13 ff ff ff       	jmp    1d01 <_Z13sumHashString8string_t+0x81>
    1dee:	66 90                	xchg   ax,ax

0000000000001df0 <_Z17adler32HashString8string_t>:
    1df0:	f3 0f 1e fa          	endbr64
    1df4:	48 c1 ee 20          	shr    rsi,0x20
    1df8:	74 66                	je     1e60 <_Z17adler32HashString8string_t+0x70>
    1dfa:	48 01 fe             	add    rsi,rdi
    1dfd:	31 c0                	xor    eax,eax
    1dff:	ba 01 00 00 00       	mov    edx,0x1
    1e04:	41 b8 71 80 07 80    	mov    r8d,0x80078071
    1e0a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    1e10:	0f be 0f             	movsx  ecx,BYTE PTR [rdi]
    1e13:	48 83 c7 01          	add    rdi,0x1
    1e17:	01 ca                	add    edx,ecx
    1e19:	48 89 d1             	mov    rcx,rdx
    1e1c:	49 0f af d0          	imul   rdx,r8
    1e20:	48 c1 ea 2f          	shr    rdx,0x2f
    1e24:	44 69 ca f1 ff 00 00 	imul   r9d,edx,0xfff1
    1e2b:	44 29 c9             	sub    ecx,r9d
    1e2e:	01 c8                	add    eax,ecx
    1e30:	89 ca                	mov    edx,ecx
    1e32:	89 c0                	mov    eax,eax
    1e34:	48 89 c1             	mov    rcx,rax
    1e37:	49 0f af c0          	imul   rax,r8
    1e3b:	48 c1 e8 2f          	shr    rax,0x2f
    1e3f:	44 69 c8 f1 ff 00 00 	imul   r9d,eax,0xfff1
    1e46:	89 c8                	mov    eax,ecx
    1e48:	44 29 c8             	sub    eax,r9d
    1e4b:	48 39 f7             	cmp    rdi,rsi
    1e4e:	75 c0                	jne    1e10 <_Z17adler32HashString8string_t+0x20>
    1e50:	c1 e0 10             	shl    eax,0x10
    1e53:	09 d0                	or     eax,edx
    1e55:	c3                   	ret
    1e56:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e5d:	00 00 00 
    1e60:	b8 01 00 00 00       	mov    eax,0x1
    1e65:	c3                   	ret
    1e66:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    1e6d:	00 00 00 

0000000000001e70 <_Z13elfHashString8string_t>:
    1e70:	f3 0f 1e fa          	endbr64
    1e74:	48 c1 ee 20          	shr    rsi,0x20
    1e78:	89 f0                	mov    eax,esi
    1e7a:	85 f6                	test   esi,esi
    1e7c:	74 3b                	je     1eb9 <_Z13elfHashString8string_t+0x49>
    1e7e:	48 01 fe             	add    rsi,rdi
    1e81:	31 c0                	xor    eax,eax
    1e83:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    1e88:	0f be 17             	movsx  edx,BYTE PTR [rdi]
    1e8b:	c1 e0 04             	shl    eax,0x4
    1e8e:	01 d0                	add    eax,edx
    1e90:	89 c2                	mov    edx,eax
    1e92:	81 e2 00 00 00 f0    	and    edx,0xf0000000
    1e98:	74 16                	je     1eb0 <_Z13elfHashString8string_t+0x40>
    1e9a:	89 d1                	mov    ecx,edx
    1e9c:	48 83 c7 01          	add    rdi,0x1
    1ea0:	f7 d2                	not    edx
    1ea2:	c1 e9 18             	shr    ecx,0x18
    1ea5:	31 c8                	xor    eax,ecx
    1ea7:	21 d0                	and    eax,edx
    1ea9:	48 39 fe             	cmp    rsi,rdi
    1eac:	75 da                	jne    1e88 <_Z13elfHashString8string_t+0x18>
    1eae:	c3                   	ret
    1eaf:	90                   	nop
    1eb0:	48 83 c7 01          	add    rdi,0x1
    1eb4:	48 39 fe             	cmp    rsi,rdi
    1eb7:	75 cf                	jne    1e88 <_Z13elfHashString8string_t+0x18>
    1eb9:	c3                   	ret
    1eba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]

0000000000001ec0 <_Z13searchElementP4List8string_t.part.0>:
    1ec0:	50                   	push   rax
    1ec1:	58                   	pop    rax
    1ec2:	48 8d 0d ff 24 00 00 	lea    rcx,[rip+0x24ff]        # 43c8 <_IO_stdin_used+0x3c8>
    1ec9:	ba 54 00 00 00       	mov    edx,0x54
    1ece:	48 8d 35 c3 21 00 00 	lea    rsi,[rip+0x21c3]        # 4098 <_IO_stdin_used+0x98>
    1ed5:	48 8d 3d d7 21 00 00 	lea    rdi,[rip+0x21d7]        # 40b3 <_IO_stdin_used+0xb3>
    1edc:	48 83 ec 08          	sub    rsp,0x8
    1ee0:	e8 8b f1 ff ff       	call   1070 <__assert_fail@plt>
    1ee5:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1eec:	00 00 00 00 

0000000000001ef0 <_Z8listCtorv>:
    1ef0:	f3 0f 1e fa          	endbr64
    1ef4:	53                   	push   rbx
    1ef5:	be 20 00 00 00       	mov    esi,0x20
    1efa:	48 89 fb             	mov    rbx,rdi
    1efd:	bf 04 00 00 00       	mov    edi,0x4
    1f02:	e8 79 f1 ff ff       	call   1080 <calloc@plt>
    1f07:	48 8b 15 c2 27 00 00 	mov    rdx,QWORD PTR [rip+0x27c2]        # 46d0 <_IO_stdin_used+0x6d0>
    1f0e:	48 b9 01 00 00 00 04 	movabs rcx,0x400000001
    1f15:	00 00 00 
    1f18:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    1f1f:	00 
    1f20:	48 89 03             	mov    QWORD PTR [rbx],rax
    1f23:	48 89 50 20          	mov    QWORD PTR [rax+0x20],rdx
    1f27:	48 8b 15 aa 27 00 00 	mov    rdx,QWORD PTR [rip+0x27aa]        # 46d8 <_IO_stdin_used+0x6d8>
    1f2e:	48 c7 00 00 00 00 00 	mov    QWORD PTR [rax],0x0
    1f35:	48 89 50 40          	mov    QWORD PTR [rax+0x40],rdx
    1f39:	48 8b 15 a0 27 00 00 	mov    rdx,QWORD PTR [rip+0x27a0]        # 46e0 <_IO_stdin_used+0x6e0>
    1f40:	48 89 4b 08          	mov    QWORD PTR [rbx+0x8],rcx
    1f44:	48 89 50 60          	mov    QWORD PTR [rax+0x60],rdx
    1f48:	48 89 d8             	mov    rax,rbx
    1f4b:	5b                   	pop    rbx
    1f4c:	c3                   	ret
    1f4d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000001f50 <_Z12pushListElemP4List8string_t>:
    1f50:	f3 0f 1e fa          	endbr64
    1f54:	41 55                	push   r13
    1f56:	41 54                	push   r12
    1f58:	55                   	push   rbp
    1f59:	53                   	push   rbx
    1f5a:	48 83 ec 08          	sub    rsp,0x8
    1f5e:	48 85 ff             	test   rdi,rdi
    1f61:	0f 84 3d 01 00 00    	je     20a4 <_Z12pushListElemP4List8string_t+0x154>
    1f67:	48 89 fd             	mov    rbp,rdi
    1f6a:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    1f6d:	49 89 f4             	mov    r12,rsi
    1f70:	49 89 d5             	mov    r13,rdx
    1f73:	8b 1f                	mov    ebx,DWORD PTR [rdi]
    1f75:	85 db                	test   ebx,ebx
    1f77:	75 12                	jne    1f8b <_Z12pushListElemP4List8string_t+0x3b>
    1f79:	e9 c2 00 00 00       	jmp    2040 <_Z12pushListElemP4List8string_t+0xf0>
    1f7e:	66 90                	xchg   ax,ax
    1f80:	8b 1c 1f             	mov    ebx,DWORD PTR [rdi+rbx*1]
    1f83:	85 db                	test   ebx,ebx
    1f85:	0f 84 b5 00 00 00    	je     2040 <_Z12pushListElemP4List8string_t+0xf0>
    1f8b:	48 c1 e3 05          	shl    rbx,0x5
    1f8f:	48 8b 74 1f 10       	mov    rsi,QWORD PTR [rdi+rbx*1+0x10]
    1f94:	4c 89 e7             	mov    rdi,r12
    1f97:	e8 c4 1b 00 00       	call   3b60 <my_strcmp>
    1f9c:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    1fa0:	85 c0                	test   eax,eax
    1fa2:	75 dc                	jne    1f80 <_Z12pushListElemP4List8string_t+0x30>
    1fa4:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    1fa8:	8b 55 08             	mov    edx,DWORD PTR [rbp+0x8]
    1fab:	8b 48 08             	mov    ecx,DWORD PTR [rax+0x8]
    1fae:	83 c1 01             	add    ecx,0x1
    1fb1:	89 48 08             	mov    DWORD PTR [rax+0x8],ecx
    1fb4:	39 55 0c             	cmp    DWORD PTR [rbp+0xc],edx
    1fb7:	0f 85 d0 00 00 00    	jne    208d <_Z12pushListElemP4List8string_t+0x13d>
    1fbd:	44 8d 24 12          	lea    r12d,[rdx+rdx*1]
    1fc1:	44 89 65 0c          	mov    DWORD PTR [rbp+0xc],r12d
    1fc5:	49 c1 e4 05          	shl    r12,0x5
    1fc9:	4c 89 e6             	mov    rsi,r12
    1fcc:	e8 9f f1 ff ff       	call   1170 <realloc@plt>
    1fd1:	8b 55 0c             	mov    edx,DWORD PTR [rbp+0xc]
    1fd4:	4c 89 e1             	mov    rcx,r12
    1fd7:	48 89 45 00          	mov    QWORD PTR [rbp+0x0],rax
    1fdb:	d1 ea                	shr    edx,1
    1fdd:	48 c1 e2 05          	shl    rdx,0x5
    1fe1:	49 39 d4             	cmp    r12,rdx
    1fe4:	48 8d 3c 10          	lea    rdi,[rax+rdx*1]
    1fe8:	48 0f 42 ca          	cmovb  rcx,rdx
    1fec:	31 f6                	xor    esi,esi
    1fee:	48 29 d1             	sub    rcx,rdx
    1ff1:	e8 2a f1 ff ff       	call   1120 <__memset_chk@plt>
    1ff6:	8b 45 08             	mov    eax,DWORD PTR [rbp+0x8]
    1ff9:	8b 75 0c             	mov    esi,DWORD PTR [rbp+0xc]
    1ffc:	39 f0                	cmp    eax,esi
    1ffe:	0f 83 96 00 00 00    	jae    209a <_Z12pushListElemP4List8string_t+0x14a>
    2004:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    2008:	89 c2                	mov    edx,eax
    200a:	48 c1 e2 05          	shl    rdx,0x5
    200e:	48 01 fa             	add    rdx,rdi
    2011:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2018:	89 c1                	mov    ecx,eax
    201a:	83 c0 01             	add    eax,0x1
    201d:	48 83 c2 20          	add    rdx,0x20
    2021:	89 42 e0             	mov    DWORD PTR [rdx-0x20],eax
    2024:	89 4a e4             	mov    DWORD PTR [rdx-0x1c],ecx
    2027:	39 f0                	cmp    eax,esi
    2029:	75 ed                	jne    2018 <_Z12pushListElemP4List8string_t+0xc8>
    202b:	8b 4c 1f 08          	mov    ecx,DWORD PTR [rdi+rbx*1+0x8]
    202f:	48 83 c4 08          	add    rsp,0x8
    2033:	5b                   	pop    rbx
    2034:	5d                   	pop    rbp
    2035:	89 c8                	mov    eax,ecx
    2037:	41 5c                	pop    r12
    2039:	41 5d                	pop    r13
    203b:	c3                   	ret
    203c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2040:	8b 5d 08             	mov    ebx,DWORD PTR [rbp+0x8]
    2043:	8b 4f 04             	mov    ecx,DWORD PTR [rdi+0x4]
    2046:	48 89 de             	mov    rsi,rbx
    2049:	48 c1 e3 05          	shl    rbx,0x5
    204d:	48 8d 04 1f          	lea    rax,[rdi+rbx*1]
    2051:	8b 10                	mov    edx,DWORD PTR [rax]
    2053:	89 55 08             	mov    DWORD PTR [rbp+0x8],edx
    2056:	89 48 04             	mov    DWORD PTR [rax+0x4],ecx
    2059:	48 c1 e1 05          	shl    rcx,0x5
    205d:	c7 40 08 00 00 00 00 	mov    DWORD PTR [rax+0x8],0x0
    2064:	4c 89 60 10          	mov    QWORD PTR [rax+0x10],r12
    2068:	4c 89 68 18          	mov    QWORD PTR [rax+0x18],r13
    206c:	c7 00 00 00 00 00    	mov    DWORD PTR [rax],0x0
    2072:	89 77 04             	mov    DWORD PTR [rdi+0x4],esi
    2075:	89 34 0f             	mov    DWORD PTR [rdi+rcx*1],esi
    2078:	b9 01 00 00 00       	mov    ecx,0x1
    207d:	83 45 10 01          	add    DWORD PTR [rbp+0x10],0x1
    2081:	89 48 08             	mov    DWORD PTR [rax+0x8],ecx
    2084:	39 55 0c             	cmp    DWORD PTR [rbp+0xc],edx
    2087:	0f 84 30 ff ff ff    	je     1fbd <_Z12pushListElemP4List8string_t+0x6d>
    208d:	48 83 c4 08          	add    rsp,0x8
    2091:	89 c8                	mov    eax,ecx
    2093:	5b                   	pop    rbx
    2094:	5d                   	pop    rbp
    2095:	41 5c                	pop    r12
    2097:	41 5d                	pop    r13
    2099:	c3                   	ret
    209a:	48 8b 45 00          	mov    rax,QWORD PTR [rbp+0x0]
    209e:	8b 4c 18 08          	mov    ecx,DWORD PTR [rax+rbx*1+0x8]
    20a2:	eb e9                	jmp    208d <_Z12pushListElemP4List8string_t+0x13d>
    20a4:	48 8d 0d 45 23 00 00 	lea    rcx,[rip+0x2345]        # 43f0 <_IO_stdin_used+0x3f0>
    20ab:	ba 1e 00 00 00       	mov    edx,0x1e
    20b0:	48 8d 35 e1 1f 00 00 	lea    rsi,[rip+0x1fe1]        # 4098 <_IO_stdin_used+0x98>
    20b7:	48 8d 3d f5 1f 00 00 	lea    rdi,[rip+0x1ff5]        # 40b3 <_IO_stdin_used+0xb3>
    20be:	e8 ad ef ff ff       	call   1070 <__assert_fail@plt>
    20c3:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    20ca:	00 00 00 00 
    20ce:	66 90                	xchg   ax,ax

00000000000020d0 <_Z11popListElemP4List8string_t>:
    20d0:	f3 0f 1e fa          	endbr64
    20d4:	41 55                	push   r13
    20d6:	41 54                	push   r12
    20d8:	55                   	push   rbp
    20d9:	53                   	push   rbx
    20da:	48 83 ec 08          	sub    rsp,0x8
    20de:	48 85 ff             	test   rdi,rdi
    20e1:	0f 84 a6 00 00 00    	je     218d <_Z11popListElemP4List8string_t+0xbd>
    20e7:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    20ea:	49 89 fc             	mov    r12,rdi
    20ed:	49 89 f5             	mov    r13,rsi
    20f0:	8b 28                	mov    ebp,DWORD PTR [rax]
    20f2:	85 ed                	test   ebp,ebp
    20f4:	75 15                	jne    210b <_Z11popListElemP4List8string_t+0x3b>
    20f6:	e9 85 00 00 00       	jmp    2180 <_Z11popListElemP4List8string_t+0xb0>
    20fb:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2100:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    2104:	8b 2c 18             	mov    ebp,DWORD PTR [rax+rbx*1]
    2107:	85 ed                	test   ebp,ebp
    2109:	74 75                	je     2180 <_Z11popListElemP4List8string_t+0xb0>
    210b:	89 eb                	mov    ebx,ebp
    210d:	4c 89 ef             	mov    rdi,r13
    2110:	48 c1 e3 05          	shl    rbx,0x5
    2114:	48 8b 74 18 10       	mov    rsi,QWORD PTR [rax+rbx*1+0x10]
    2119:	e8 42 1a 00 00       	call   3b60 <my_strcmp>
    211e:	85 c0                	test   eax,eax
    2120:	75 de                	jne    2100 <_Z11popListElemP4List8string_t+0x30>
    2122:	49 8b 0c 24          	mov    rcx,QWORD PTR [r12]
    2126:	c4 c1 79 6e 4c 24 08 	vmovd  xmm1,DWORD PTR [r12+0x8]
    212d:	89 e8                	mov    eax,ebp
    212f:	48 01 cb             	add    rbx,rcx
    2132:	c4 e3 71 22 c5 01    	vpinsrd xmm0,xmm1,ebp,0x1
    2138:	8b 73 04             	mov    esi,DWORD PTR [rbx+0x4]
    213b:	8b 13                	mov    edx,DWORD PTR [rbx]
    213d:	c7 43 18 00 00 00 00 	mov    DWORD PTR [rbx+0x18],0x0
    2144:	48 c7 43 10 00 00 00 	mov    QWORD PTR [rbx+0x10],0x0
    214b:	00 
    214c:	48 89 f7             	mov    rdi,rsi
    214f:	48 c1 e6 05          	shl    rsi,0x5
    2153:	89 14 31             	mov    DWORD PTR [rcx+rsi*1],edx
    2156:	48 c1 e2 05          	shl    rdx,0x5
    215a:	89 7c 11 04          	mov    DWORD PTR [rcx+rdx*1+0x4],edi
    215e:	c5 f9 d6 03          	vmovq  QWORD PTR [rbx],xmm0
    2162:	41 89 6c 24 08       	mov    DWORD PTR [r12+0x8],ebp
    2167:	41 83 6c 24 10 01    	sub    DWORD PTR [r12+0x10],0x1
    216d:	48 83 c4 08          	add    rsp,0x8
    2171:	5b                   	pop    rbx
    2172:	5d                   	pop    rbp
    2173:	41 5c                	pop    r12
    2175:	41 5d                	pop    r13
    2177:	c3                   	ret
    2178:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    217f:	00 
    2180:	48 83 c4 08          	add    rsp,0x8
    2184:	31 c0                	xor    eax,eax
    2186:	5b                   	pop    rbx
    2187:	5d                   	pop    rbp
    2188:	41 5c                	pop    r12
    218a:	41 5d                	pop    r13
    218c:	c3                   	ret
    218d:	48 8d 0d 7c 22 00 00 	lea    rcx,[rip+0x227c]        # 4410 <_IO_stdin_used+0x410>
    2194:	ba 3b 00 00 00       	mov    edx,0x3b
    2199:	48 8d 35 f8 1e 00 00 	lea    rsi,[rip+0x1ef8]        # 4098 <_IO_stdin_used+0x98>
    21a0:	48 8d 3d 0c 1f 00 00 	lea    rdi,[rip+0x1f0c]        # 40b3 <_IO_stdin_used+0xb3>
    21a7:	e8 c4 ee ff ff       	call   1070 <__assert_fail@plt>
    21ac:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

00000000000021b0 <_Z13searchElementP4List8string_t>:
    21b0:	f3 0f 1e fa          	endbr64
    21b4:	41 55                	push   r13
    21b6:	41 54                	push   r12
    21b8:	55                   	push   rbp
    21b9:	53                   	push   rbx
    21ba:	48 83 ec 08          	sub    rsp,0x8
    21be:	48 85 ff             	test   rdi,rdi
    21c1:	74 5a                	je     221d <_Z13searchElementP4List8string_t+0x6d>
    21c3:	48 8b 07             	mov    rax,QWORD PTR [rdi]
    21c6:	49 89 fc             	mov    r12,rdi
    21c9:	49 89 f5             	mov    r13,rsi
    21cc:	8b 28                	mov    ebp,DWORD PTR [rax]
    21ce:	85 ed                	test   ebp,ebp
    21d0:	75 11                	jne    21e3 <_Z13searchElementP4List8string_t+0x33>
    21d2:	eb 3c                	jmp    2210 <_Z13searchElementP4List8string_t+0x60>
    21d4:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    21d8:	49 8b 04 24          	mov    rax,QWORD PTR [r12]
    21dc:	8b 2c 18             	mov    ebp,DWORD PTR [rax+rbx*1]
    21df:	85 ed                	test   ebp,ebp
    21e1:	74 2d                	je     2210 <_Z13searchElementP4List8string_t+0x60>
    21e3:	89 eb                	mov    ebx,ebp
    21e5:	4c 89 ef             	mov    rdi,r13
    21e8:	48 c1 e3 05          	shl    rbx,0x5
    21ec:	48 8b 74 18 10       	mov    rsi,QWORD PTR [rax+rbx*1+0x10]
    21f1:	e8 6a 19 00 00       	call   3b60 <my_strcmp>
    21f6:	85 c0                	test   eax,eax
    21f8:	75 de                	jne    21d8 <_Z13searchElementP4List8string_t+0x28>
    21fa:	48 83 c4 08          	add    rsp,0x8
    21fe:	89 e8                	mov    eax,ebp
    2200:	5b                   	pop    rbx
    2201:	5d                   	pop    rbp
    2202:	41 5c                	pop    r12
    2204:	41 5d                	pop    r13
    2206:	c3                   	ret
    2207:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    220e:	00 00 
    2210:	48 83 c4 08          	add    rsp,0x8
    2214:	31 c0                	xor    eax,eax
    2216:	5b                   	pop    rbx
    2217:	5d                   	pop    rbp
    2218:	41 5c                	pop    r12
    221a:	41 5d                	pop    r13
    221c:	c3                   	ret
    221d:	e8 9e fc ff ff       	call   1ec0 <_Z13searchElementP4List8string_t.part.0>
    2222:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2229:	00 00 00 00 
    222d:	0f 1f 00             	nop    DWORD PTR [rax]

0000000000002230 <_Z8listDtorP4List>:
    2230:	f3 0f 1e fa          	endbr64
    2234:	53                   	push   rbx
    2235:	48 85 ff             	test   rdi,rdi
    2238:	74 15                	je     224f <_Z8listDtorP4List+0x1f>
    223a:	48 89 fb             	mov    rbx,rdi
    223d:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    2240:	e8 bb ee ff ff       	call   1100 <free@plt>
    2245:	48 c7 43 08 00 00 00 	mov    QWORD PTR [rbx+0x8],0x0
    224c:	00 
    224d:	5b                   	pop    rbx
    224e:	c3                   	ret
    224f:	48 8d 0d 62 1e 00 00 	lea    rcx,[rip+0x1e62]        # 40b8 <_IO_stdin_used+0xb8>
    2256:	ba 8e 00 00 00       	mov    edx,0x8e
    225b:	48 8d 35 36 1e 00 00 	lea    rsi,[rip+0x1e36]        # 4098 <_IO_stdin_used+0x98>
    2262:	48 8d 3d 4a 1e 00 00 	lea    rdi,[rip+0x1e4a]        # 40b3 <_IO_stdin_used+0xb3>
    2269:	e8 02 ee ff ff       	call   1070 <__assert_fail@plt>
    226e:	66 90                	xchg   ax,ax

0000000000002270 <_Z10debugPrintP4List>:
    2270:	f3 0f 1e fa          	endbr64
    2274:	41 54                	push   r12
    2276:	55                   	push   rbp
    2277:	53                   	push   rbx
    2278:	48 85 ff             	test   rdi,rdi
    227b:	0f 84 f3 01 00 00    	je     2474 <_Z10debugPrintP4List+0x204>
    2281:	8b 57 0c             	mov    edx,DWORD PTR [rdi+0xc]
    2284:	48 89 fb             	mov    rbx,rdi
    2287:	48 8d 35 56 1e 00 00 	lea    rsi,[rip+0x1e56]        # 40e4 <_IO_stdin_used+0xe4>
    228e:	31 c0                	xor    eax,eax
    2290:	bf 02 00 00 00       	mov    edi,0x2
    2295:	e8 96 ed ff ff       	call   1030 <__printf_chk@plt>
    229a:	8b 53 08             	mov    edx,DWORD PTR [rbx+0x8]
    229d:	bf 02 00 00 00       	mov    edi,0x2
    22a2:	31 c0                	xor    eax,eax
    22a4:	48 8d 35 47 1e 00 00 	lea    rsi,[rip+0x1e47]        # 40f2 <_IO_stdin_used+0xf2>
    22ab:	e8 80 ed ff ff       	call   1030 <__printf_chk@plt>
    22b0:	8b 53 10             	mov    edx,DWORD PTR [rbx+0x10]
    22b3:	bf 02 00 00 00       	mov    edi,0x2
    22b8:	31 c0                	xor    eax,eax
    22ba:	48 8d 35 3f 1e 00 00 	lea    rsi,[rip+0x1e3f]        # 4100 <_IO_stdin_used+0x100>
    22c1:	e8 6a ed ff ff       	call   1030 <__printf_chk@plt>
    22c6:	bf 02 00 00 00       	mov    edi,0x2
    22cb:	48 8d 35 3c 1e 00 00 	lea    rsi,[rip+0x1e3c]        # 410e <_IO_stdin_used+0x10e>
    22d2:	31 c0                	xor    eax,eax
    22d4:	e8 57 ed ff ff       	call   1030 <__printf_chk@plt>
    22d9:	8b 7b 0c             	mov    edi,DWORD PTR [rbx+0xc]
    22dc:	85 ff                	test   edi,edi
    22de:	74 2c                	je     230c <_Z10debugPrintP4List+0x9c>
    22e0:	45 31 e4             	xor    r12d,r12d
    22e3:	48 8d 2d 2f 1e 00 00 	lea    rbp,[rip+0x1e2f]        # 4119 <_IO_stdin_used+0x119>
    22ea:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    22f0:	44 89 e2             	mov    edx,r12d
    22f3:	48 89 ee             	mov    rsi,rbp
    22f6:	bf 02 00 00 00       	mov    edi,0x2
    22fb:	31 c0                	xor    eax,eax
    22fd:	e8 2e ed ff ff       	call   1030 <__printf_chk@plt>
    2302:	41 83 c4 01          	add    r12d,0x1
    2306:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    230a:	72 e4                	jb     22f0 <_Z10debugPrintP4List+0x80>
    230c:	bf 0a 00 00 00       	mov    edi,0xa
    2311:	e8 1a ee ff ff       	call   1130 <putchar@plt>
    2316:	48 8d 35 00 1e 00 00 	lea    rsi,[rip+0x1e00]        # 411d <_IO_stdin_used+0x11d>
    231d:	bf 02 00 00 00       	mov    edi,0x2
    2322:	31 c0                	xor    eax,eax
    2324:	e8 07 ed ff ff       	call   1030 <__printf_chk@plt>
    2329:	8b 73 0c             	mov    esi,DWORD PTR [rbx+0xc]
    232c:	85 f6                	test   esi,esi
    232e:	74 35                	je     2365 <_Z10debugPrintP4List+0xf5>
    2330:	45 31 e4             	xor    r12d,r12d
    2333:	48 8d 2d df 1d 00 00 	lea    rbp,[rip+0x1ddf]        # 4119 <_IO_stdin_used+0x119>
    233a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2340:	4c 89 e0             	mov    rax,r12
    2343:	48 89 ee             	mov    rsi,rbp
    2346:	bf 02 00 00 00       	mov    edi,0x2
    234b:	49 83 c4 01          	add    r12,0x1
    234f:	48 c1 e0 05          	shl    rax,0x5
    2353:	48 03 03             	add    rax,QWORD PTR [rbx]
    2356:	8b 10                	mov    edx,DWORD PTR [rax]
    2358:	31 c0                	xor    eax,eax
    235a:	e8 d1 ec ff ff       	call   1030 <__printf_chk@plt>
    235f:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    2363:	72 db                	jb     2340 <_Z10debugPrintP4List+0xd0>
    2365:	bf 0a 00 00 00       	mov    edi,0xa
    236a:	e8 c1 ed ff ff       	call   1130 <putchar@plt>
    236f:	48 8d 35 b2 1d 00 00 	lea    rsi,[rip+0x1db2]        # 4128 <_IO_stdin_used+0x128>
    2376:	bf 02 00 00 00       	mov    edi,0x2
    237b:	31 c0                	xor    eax,eax
    237d:	e8 ae ec ff ff       	call   1030 <__printf_chk@plt>
    2382:	8b 4b 0c             	mov    ecx,DWORD PTR [rbx+0xc]
    2385:	85 c9                	test   ecx,ecx
    2387:	74 35                	je     23be <_Z10debugPrintP4List+0x14e>
    2389:	45 31 e4             	xor    r12d,r12d
    238c:	48 8d 2d 86 1d 00 00 	lea    rbp,[rip+0x1d86]        # 4119 <_IO_stdin_used+0x119>
    2393:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    2398:	4c 89 e0             	mov    rax,r12
    239b:	48 89 ee             	mov    rsi,rbp
    239e:	bf 02 00 00 00       	mov    edi,0x2
    23a3:	49 83 c4 01          	add    r12,0x1
    23a7:	48 c1 e0 05          	shl    rax,0x5
    23ab:	48 03 03             	add    rax,QWORD PTR [rbx]
    23ae:	8b 50 04             	mov    edx,DWORD PTR [rax+0x4]
    23b1:	31 c0                	xor    eax,eax
    23b3:	e8 78 ec ff ff       	call   1030 <__printf_chk@plt>
    23b8:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    23bc:	72 da                	jb     2398 <_Z10debugPrintP4List+0x128>
    23be:	bf 0a 00 00 00       	mov    edi,0xa
    23c3:	e8 68 ed ff ff       	call   1130 <putchar@plt>
    23c8:	48 8d 35 64 1d 00 00 	lea    rsi,[rip+0x1d64]        # 4133 <_IO_stdin_used+0x133>
    23cf:	bf 02 00 00 00       	mov    edi,0x2
    23d4:	31 c0                	xor    eax,eax
    23d6:	e8 55 ec ff ff       	call   1030 <__printf_chk@plt>
    23db:	8b 53 0c             	mov    edx,DWORD PTR [rbx+0xc]
    23de:	85 d2                	test   edx,edx
    23e0:	74 34                	je     2416 <_Z10debugPrintP4List+0x1a6>
    23e2:	45 31 e4             	xor    r12d,r12d
    23e5:	48 8d 2d 2d 1d 00 00 	lea    rbp,[rip+0x1d2d]        # 4119 <_IO_stdin_used+0x119>
    23ec:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    23f0:	4c 89 e0             	mov    rax,r12
    23f3:	48 89 ee             	mov    rsi,rbp
    23f6:	bf 02 00 00 00       	mov    edi,0x2
    23fb:	49 83 c4 01          	add    r12,0x1
    23ff:	48 c1 e0 05          	shl    rax,0x5
    2403:	48 03 03             	add    rax,QWORD PTR [rbx]
    2406:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    2409:	31 c0                	xor    eax,eax
    240b:	e8 20 ec ff ff       	call   1030 <__printf_chk@plt>
    2410:	44 3b 63 0c          	cmp    r12d,DWORD PTR [rbx+0xc]
    2414:	72 da                	jb     23f0 <_Z10debugPrintP4List+0x180>
    2416:	bf 0a 00 00 00       	mov    edi,0xa
    241b:	e8 10 ed ff ff       	call   1130 <putchar@plt>
    2420:	48 8d 3d 17 1d 00 00 	lea    rdi,[rip+0x1d17]        # 413e <_IO_stdin_used+0x13e>
    2427:	e8 34 ed ff ff       	call   1160 <puts@plt>
    242c:	8b 43 0c             	mov    eax,DWORD PTR [rbx+0xc]
    242f:	85 c0                	test   eax,eax
    2431:	74 33                	je     2466 <_Z10debugPrintP4List+0x1f6>
    2433:	31 ed                	xor    ebp,ebp
    2435:	4c 8d 25 07 1d 00 00 	lea    r12,[rip+0x1d07]        # 4143 <_IO_stdin_used+0x143>
    243c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    2440:	48 89 e8             	mov    rax,rbp
    2443:	4c 89 e6             	mov    rsi,r12
    2446:	bf 02 00 00 00       	mov    edi,0x2
    244b:	48 83 c5 01          	add    rbp,0x1
    244f:	48 c1 e0 05          	shl    rax,0x5
    2453:	48 03 03             	add    rax,QWORD PTR [rbx]
    2456:	48 8b 50 10          	mov    rdx,QWORD PTR [rax+0x10]
    245a:	31 c0                	xor    eax,eax
    245c:	e8 cf eb ff ff       	call   1030 <__printf_chk@plt>
    2461:	3b 6b 0c             	cmp    ebp,DWORD PTR [rbx+0xc]
    2464:	72 da                	jb     2440 <_Z10debugPrintP4List+0x1d0>
    2466:	5b                   	pop    rbx
    2467:	bf 0a 00 00 00       	mov    edi,0xa
    246c:	5d                   	pop    rbp
    246d:	41 5c                	pop    r12
    246f:	e9 bc ec ff ff       	jmp    1130 <putchar@plt>
    2474:	48 8d 0d 52 1c 00 00 	lea    rcx,[rip+0x1c52]        # 40cd <_IO_stdin_used+0xcd>
    247b:	ba 97 00 00 00       	mov    edx,0x97
    2480:	48 8d 35 11 1c 00 00 	lea    rsi,[rip+0x1c11]        # 4098 <_IO_stdin_used+0x98>
    2487:	48 8d 3d 25 1c 00 00 	lea    rdi,[rip+0x1c25]        # 40b3 <_IO_stdin_used+0xb3>
    248e:	e8 dd eb ff ff       	call   1070 <__assert_fail@plt>
    2493:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    249a:	00 00 00 
    249d:	0f 1f 00             	nop    DWORD PTR [rax]

00000000000024a0 <_Z8readFilePKcPm>:
    24a0:	f3 0f 1e fa          	endbr64
    24a4:	55                   	push   rbp
    24a5:	48 89 e5             	mov    rbp,rsp
    24a8:	41 55                	push   r13
    24aa:	41 54                	push   r12
    24ac:	53                   	push   rbx
    24ad:	48 81 ec a8 00 00 00 	sub    rsp,0xa8
    24b4:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    24bb:	00 00 
    24bd:	48 89 84 24 98 00 00 	mov    QWORD PTR [rsp+0x98],rax
    24c4:	00 
    24c5:	31 c0                	xor    eax,eax
    24c7:	48 85 ff             	test   rdi,rdi
    24ca:	0f 84 b4 00 00 00    	je     2584 <_Z8readFilePKcPm+0xe4>
    24d0:	c5 f9 ef c0          	vpxor  xmm0,xmm0,xmm0
    24d4:	49 89 f4             	mov    r12,rsi
    24d7:	48 89 e6             	mov    rsi,rsp
    24da:	48 89 fb             	mov    rbx,rdi
    24dd:	c5 fe 7f 04 24       	vmovdqu YMMWORD PTR [rsp],ymm0
    24e2:	c5 fe 7f 44 24 20    	vmovdqu YMMWORD PTR [rsp+0x20],ymm0
    24e8:	c5 fe 7f 44 24 40    	vmovdqu YMMWORD PTR [rsp+0x40],ymm0
    24ee:	c5 fe 7f 44 24 60    	vmovdqu YMMWORD PTR [rsp+0x60],ymm0
    24f4:	c5 f9 7f 84 24 80 00 	vmovdqa XMMWORD PTR [rsp+0x80],xmm0
    24fb:	00 00 
    24fd:	c5 f8 77             	vzeroupper
    2500:	e8 ab eb ff ff       	call   10b0 <stat@plt>
    2505:	83 f8 ff             	cmp    eax,0xffffffff
    2508:	74 76                	je     2580 <_Z8readFilePKcPm+0xe0>
    250a:	4c 8b 6c 24 30       	mov    r13,QWORD PTR [rsp+0x30]
    250f:	31 f6                	xor    esi,esi
    2511:	48 89 df             	mov    rdi,rbx
    2514:	31 c0                	xor    eax,eax
    2516:	4d 89 2c 24          	mov    QWORD PTR [r12],r13
    251a:	e8 71 eb ff ff       	call   1090 <open@plt>
    251f:	41 89 c4             	mov    r12d,eax
    2522:	83 f8 ff             	cmp    eax,0xffffffff
    2525:	74 59                	je     2580 <_Z8readFilePKcPm+0xe0>
    2527:	be 01 00 00 00       	mov    esi,0x1
    252c:	4c 89 ef             	mov    rdi,r13
    252f:	e8 4c eb ff ff       	call   1080 <calloc@plt>
    2534:	48 89 c3             	mov    rbx,rax
    2537:	48 85 c0             	test   rax,rax
    253a:	74 16                	je     2552 <_Z8readFilePKcPm+0xb2>
    253c:	44 89 e7             	mov    edi,r12d
    253f:	4c 89 ea             	mov    rdx,r13
    2542:	48 89 c6             	mov    rsi,rax
    2545:	e8 06 ec ff ff       	call   1150 <read@plt>
    254a:	44 89 e7             	mov    edi,r12d
    254d:	e8 5e ec ff ff       	call   11b0 <close@plt>
    2552:	48 8b 84 24 98 00 00 	mov    rax,QWORD PTR [rsp+0x98]
    2559:	00 
    255a:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2561:	00 00 
    2563:	75 3e                	jne    25a3 <_Z8readFilePKcPm+0x103>
    2565:	48 81 c4 a8 00 00 00 	add    rsp,0xa8
    256c:	48 89 d8             	mov    rax,rbx
    256f:	5b                   	pop    rbx
    2570:	41 5c                	pop    r12
    2572:	41 5d                	pop    r13
    2574:	5d                   	pop    rbp
    2575:	c3                   	ret
    2576:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    257d:	00 00 00 
    2580:	31 db                	xor    ebx,ebx
    2582:	eb ce                	jmp    2552 <_Z8readFilePKcPm+0xb2>
    2584:	48 8d 0d a5 1e 00 00 	lea    rcx,[rip+0x1ea5]        # 4430 <_IO_stdin_used+0x430>
    258b:	ba 0c 00 00 00       	mov    edx,0xc
    2590:	48 8d 35 b3 1b 00 00 	lea    rsi,[rip+0x1bb3]        # 414a <_IO_stdin_used+0x14a>
    2597:	48 8d 3d c8 1b 00 00 	lea    rdi,[rip+0x1bc8]        # 4166 <_IO_stdin_used+0x166>
    259e:	e8 cd ea ff ff       	call   1070 <__assert_fail@plt>
    25a3:	e8 38 eb ff ff       	call   10e0 <__stack_chk_fail@plt>
    25a8:	0f 1f 84 00 00 00 00 	nop    DWORD PTR [rax+rax*1+0x0]
    25af:	00 

00000000000025b0 <_Z10countLinesPcm>:
    25b0:	f3 0f 1e fa          	endbr64
    25b4:	41 54                	push   r12
    25b6:	55                   	push   rbp
    25b7:	53                   	push   rbx
    25b8:	48 85 ff             	test   rdi,rdi
    25bb:	74 36                	je     25f3 <_Z10countLinesPcm+0x43>
    25bd:	48 89 fd             	mov    rbp,rdi
    25c0:	49 89 f4             	mov    r12,rsi
    25c3:	31 db                	xor    ebx,ebx
    25c5:	48 85 f6             	test   rsi,rsi
    25c8:	74 22                	je     25ec <_Z10countLinesPcm+0x3c>
    25ca:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    25d0:	be 0a 00 00 00       	mov    esi,0xa
    25d5:	83 c3 01             	add    ebx,0x1
    25d8:	e8 73 ea ff ff       	call   1050 <strchr@plt>
    25dd:	48 8d 78 01          	lea    rdi,[rax+0x1]
    25e1:	48 89 f8             	mov    rax,rdi
    25e4:	48 29 e8             	sub    rax,rbp
    25e7:	4c 39 e0             	cmp    rax,r12
    25ea:	75 e4                	jne    25d0 <_Z10countLinesPcm+0x20>
    25ec:	89 d8                	mov    eax,ebx
    25ee:	5b                   	pop    rbx
    25ef:	5d                   	pop    rbp
    25f0:	41 5c                	pop    r12
    25f2:	c3                   	ret
    25f3:	48 8d 0d 5e 1e 00 00 	lea    rcx,[rip+0x1e5e]        # 4458 <_IO_stdin_used+0x458>
    25fa:	ba 22 00 00 00       	mov    edx,0x22
    25ff:	48 8d 35 44 1b 00 00 	lea    rsi,[rip+0x1b44]        # 414a <_IO_stdin_used+0x14a>
    2606:	48 8d 3d 10 1a 00 00 	lea    rdi,[rip+0x1a10]        # 401d <_IO_stdin_used+0x1d>
    260d:	e8 5e ea ff ff       	call   1070 <__assert_fail@plt>
    2612:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2619:	00 00 00 
    261c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000002620 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData>:
    2620:	f3 0f 1e fa          	endbr64
    2624:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    2629:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    262d:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    2631:	55                   	push   rbp
    2632:	48 89 e5             	mov    rbp,rsp
    2635:	41 57                	push   r15
    2637:	41 56                	push   r14
    2639:	41 55                	push   r13
    263b:	41 54                	push   r12
    263d:	41 52                	push   r10
    263f:	53                   	push   rbx
    2640:	48 83 ec 40          	sub    rsp,0x40
    2644:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    264b:	00 00 
    264d:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2651:	31 c0                	xor    eax,eax
    2653:	48 85 ff             	test   rdi,rdi
    2656:	0f 84 f3 03 00 00    	je     2a4f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x42f>
    265c:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2660:	49 89 fd             	mov    r13,rdi
    2663:	48 89 d3             	mov    rbx,rdx
    2666:	49 89 ce             	mov    r14,rcx
    2669:	ba 02 00 00 00       	mov    edx,0x2
    266e:	4c 89 e7             	mov    rdi,r12
    2671:	e8 ba ed ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2676:	45 85 f6             	test   r14d,r14d
    2679:	74 25                	je     26a0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x80>
    267b:	45 89 f6             	mov    r14d,r14d
    267e:	49 c1 e6 04          	shl    r14,0x4
    2682:	49 01 de             	add    r14,rbx
    2685:	0f 1f 00             	nop    DWORD PTR [rax]
    2688:	48 8b 33             	mov    rsi,QWORD PTR [rbx]
    268b:	48 8b 53 08          	mov    rdx,QWORD PTR [rbx+0x8]
    268f:	4c 89 e7             	mov    rdi,r12
    2692:	48 83 c3 10          	add    rbx,0x10
    2696:	e8 45 ee ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    269b:	49 39 de             	cmp    r14,rbx
    269e:	75 e8                	jne    2688 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x68>
    26a0:	4c 89 e9             	mov    rcx,r13
    26a3:	ba 19 00 00 00       	mov    edx,0x19
    26a8:	be 01 00 00 00       	mov    esi,0x1
    26ad:	48 8d 3d dc 1a 00 00 	lea    rdi,[rip+0x1adc]        # 4190 <_IO_stdin_used+0x190>
    26b4:	e8 e7 ea ff ff       	call   11a0 <fwrite@plt>
    26b9:	8b 45 b8             	mov    eax,DWORD PTR [rbp-0x48]
    26bc:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    26c0:	c5 f8 28 d0          	vmovaps xmm2,xmm0
    26c4:	85 c0                	test   eax,eax
    26c6:	74 69                	je     2731 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x111>
    26c8:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    26cc:	31 db                	xor    ebx,ebx
    26ce:	c5 e8 57 d2          	vxorps xmm2,xmm2,xmm2
    26d2:	4c 8d 3d d1 1a 00 00 	lea    r15,[rip+0x1ad1]        # 41aa <_IO_stdin_used+0x1aa>
    26d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    26e0:	4c 8d 34 5b          	lea    r14,[rbx+rbx*2]
    26e4:	89 d9                	mov    ecx,ebx
    26e6:	4c 89 fa             	mov    rdx,r15
    26e9:	be 02 00 00 00       	mov    esi,0x2
    26ee:	49 c1 e6 03          	shl    r14,0x3
    26f2:	4c 89 ef             	mov    rdi,r13
    26f5:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    26fa:	48 83 c3 01          	add    rbx,0x1
    26fe:	46 8b 44 30 10       	mov    r8d,DWORD PTR [rax+r14*1+0x10]
    2703:	31 c0                	xor    eax,eax
    2705:	e8 76 ea ff ff       	call   1180 <__fprintf_chk@plt>
    270a:	48 8b 45 b0          	mov    rax,QWORD PTR [rbp-0x50]
    270e:	c5 d8 57 e4          	vxorps xmm4,xmm4,xmm4
    2712:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    2717:	42 8b 54 30 10       	mov    edx,DWORD PTR [rax+r14*1+0x10]
    271c:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2721:	8b 55 b8             	mov    edx,DWORD PTR [rbp-0x48]
    2724:	c5 ea 58 d0          	vaddss xmm2,xmm2,xmm0
    2728:	39 d3                	cmp    ebx,edx
    272a:	72 b4                	jb     26e0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc0>
    272c:	c4 e1 da 2a c2       	vcvtsi2ss xmm0,xmm4,rdx
    2731:	c5 ea 5e d0          	vdivss xmm2,xmm2,xmm0
    2735:	bf 02 00 00 00       	mov    edi,0x2
    273a:	b8 01 00 00 00       	mov    eax,0x1
    273f:	48 8d 35 6b 1a 00 00 	lea    rsi,[rip+0x1a6b]        # 41b1 <_IO_stdin_used+0x1b1>
    2746:	c5 fa 11 55 90       	vmovss DWORD PTR [rbp-0x70],xmm2
    274b:	c5 ea 5a c2          	vcvtss2sd xmm0,xmm2,xmm2
    274f:	e8 dc e8 ff ff       	call   1030 <__printf_chk@plt>
    2754:	8b 75 b8             	mov    esi,DWORD PTR [rbp-0x48]
    2757:	85 f6                	test   esi,esi
    2759:	0f 84 c1 02 00 00    	je     2a20 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x400>
    275f:	8d 46 ff             	lea    eax,[rsi-0x1]
    2762:	48 8b 7d b0          	mov    rdi,QWORD PTR [rbp-0x50]
    2766:	c5 fa 10 55 90       	vmovss xmm2,DWORD PTR [rbp-0x70]
    276b:	83 f8 06             	cmp    eax,0x6
    276e:	0f 86 c1 02 00 00    	jbe    2a35 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x415>
    2774:	48 8d 47 10          	lea    rax,[rdi+0x10]
    2778:	c4 e2 7d 18 ea       	vbroadcastss ymm5,xmm2
    277d:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2781:	89 f2                	mov    edx,esi
    2783:	c4 e2 7d 18 25 84 18 	vbroadcastss ymm4,DWORD PTR [rip+0x1884]        # 4010 <_IO_stdin_used+0x10>
    278a:	00 00 
    278c:	c1 ea 03             	shr    edx,0x3
    278f:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    2796:	ff ff ff 
    2799:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    279d:	ba ff ff 00 00       	mov    edx,0xffff
    27a2:	49 c1 e0 06          	shl    r8,0x6
    27a6:	c5 f9 6e da          	vmovd  xmm3,edx
    27aa:	49 01 c0             	add    r8,rax
    27ad:	c4 e2 7d 58 db       	vpbroadcastd ymm3,xmm3
    27b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    27b8:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    27bb:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    27be:	c5 c9 ef f6          	vpxor  xmm6,xmm6,xmm6
    27c2:	48 05 c0 00 00 00    	add    rax,0xc0
    27c8:	c5 fd 7f 75 90       	vmovdqa YMMWORD PTR [rbp-0x70],ymm6
    27cd:	48 c1 e2 20          	shl    rdx,0x20
    27d1:	49 09 d1             	or     r9,rdx
    27d4:	48 8b 55 98          	mov    rdx,QWORD PTR [rbp-0x68]
    27d8:	4c 89 4d 90          	mov    QWORD PTR [rbp-0x70],r9
    27dc:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    27e3:	48 21 ca             	and    rdx,rcx
    27e6:	4c 09 ca             	or     rdx,r9
    27e9:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    27ed:	89 d2                	mov    edx,edx
    27ef:	49 c1 e1 20          	shl    r9,0x20
    27f3:	4c 09 ca             	or     rdx,r9
    27f6:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    27fa:	48 89 55 98          	mov    QWORD PTR [rbp-0x68],rdx
    27fe:	48 8b 55 a0          	mov    rdx,QWORD PTR [rbp-0x60]
    2802:	48 21 ca             	and    rdx,rcx
    2805:	4c 09 ca             	or     rdx,r9
    2808:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    280c:	89 d2                	mov    edx,edx
    280e:	49 c1 e1 20          	shl    r9,0x20
    2812:	4c 09 ca             	or     rdx,r9
    2815:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    2819:	48 89 55 a0          	mov    QWORD PTR [rbp-0x60],rdx
    281d:	48 8b 55 a8          	mov    rdx,QWORD PTR [rbp-0x58]
    2821:	48 21 ca             	and    rdx,rcx
    2824:	4c 09 ca             	or     rdx,r9
    2827:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    282b:	89 d2                	mov    edx,edx
    282d:	49 c1 e1 20          	shl    r9,0x20
    2831:	4c 09 ca             	or     rdx,r9
    2834:	48 89 55 a8          	mov    QWORD PTR [rbp-0x58],rdx
    2838:	c5 fd 6f 75 90       	vmovdqa ymm6,YMMWORD PTR [rbp-0x70]
    283d:	c5 e5 db 45 90       	vpand  ymm0,ymm3,YMMWORD PTR [rbp-0x70]
    2842:	c5 f5 72 d6 10       	vpsrld ymm1,ymm6,0x10
    2847:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    284b:	c5 f4 59 cc          	vmulps ymm1,ymm1,ymm4
    284f:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    2853:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    2857:	c5 fc 5c c5          	vsubps ymm0,ymm0,ymm5
    285b:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    285f:	c5 c2 58 c8          	vaddss xmm1,xmm7,xmm0
    2863:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    2868:	c5 f8 c6 f0 ff       	vshufps xmm6,xmm0,xmm0,0xff
    286d:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    2871:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    2875:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    287b:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    287f:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2883:	c5 f8 c6 f0 55       	vshufps xmm6,xmm0,xmm0,0x55
    2888:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    288c:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    2890:	c5 f8 15 f0          	vunpckhps xmm6,xmm0,xmm0
    2894:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    2899:	c5 f2 58 ce          	vaddss xmm1,xmm1,xmm6
    289d:	c5 f2 58 f8          	vaddss xmm7,xmm1,xmm0
    28a1:	49 39 c0             	cmp    r8,rax
    28a4:	0f 85 0e ff ff ff    	jne    27b8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x198>
    28aa:	89 f0                	mov    eax,esi
    28ac:	83 e0 f8             	and    eax,0xfffffff8
    28af:	40 f6 c6 07          	test   sil,0x7
    28b3:	0f 84 77 01 00 00    	je     2a30 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x410>
    28b9:	c5 f8 77             	vzeroupper
    28bc:	89 f1                	mov    ecx,esi
    28be:	29 c1                	sub    ecx,eax
    28c0:	8d 51 ff             	lea    edx,[rcx-0x1]
    28c3:	83 fa 02             	cmp    edx,0x2
    28c6:	0f 86 8b 00 00 00    	jbe    2957 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x337>
    28cc:	c4 e2 79 18 1d 3b 17 	vbroadcastss xmm3,DWORD PTR [rip+0x173b]        # 4010 <_IO_stdin_used+0x10>
    28d3:	00 00 
    28d5:	89 c2                	mov    edx,eax
    28d7:	bb ff ff 00 00       	mov    ebx,0xffff
    28dc:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    28e0:	c5 f9 6e cb          	vmovd  xmm1,ebx
    28e4:	c5 f9 6e 44 d7 10    	vmovd  xmm0,DWORD PTR [rdi+rdx*8+0x10]
    28ea:	c4 e3 79 22 44 d7 28 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x28],0x1
    28f1:	01 
    28f2:	c5 f9 70 c9 00       	vpshufd xmm1,xmm1,0x0
    28f7:	c4 e3 79 22 44 d7 40 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x40],0x2
    28fe:	02 
    28ff:	c4 e3 79 22 44 d7 58 	vpinsrd xmm0,xmm0,DWORD PTR [rdi+rdx*8+0x58],0x3
    2906:	03 
    2907:	89 ca                	mov    edx,ecx
    2909:	83 e2 fc             	and    edx,0xfffffffc
    290c:	c5 f9 db c9          	vpand  xmm1,xmm0,xmm1
    2910:	c5 f9 72 d0 10       	vpsrld xmm0,xmm0,0x10
    2915:	01 d0                	add    eax,edx
    2917:	83 e1 03             	and    ecx,0x3
    291a:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    291e:	c5 f8 59 c3          	vmulps xmm0,xmm0,xmm3
    2922:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    2926:	c5 f0 58 c8          	vaddps xmm1,xmm1,xmm0
    292a:	c5 e8 c6 c2 00       	vshufps xmm0,xmm2,xmm2,0x0
    292f:	c5 f0 5c c8          	vsubps xmm1,xmm1,xmm0
    2933:	c5 f0 59 c9          	vmulps xmm1,xmm1,xmm1
    2937:	c5 c2 58 c1          	vaddss xmm0,xmm7,xmm1
    293b:	c5 f0 c6 d9 55       	vshufps xmm3,xmm1,xmm1,0x55
    2940:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    2944:	c5 f0 15 d9          	vunpckhps xmm3,xmm1,xmm1
    2948:	c5 f0 c6 c9 ff       	vshufps xmm1,xmm1,xmm1,0xff
    294d:	c5 fa 58 c3          	vaddss xmm0,xmm0,xmm3
    2951:	c5 fa 58 f9          	vaddss xmm7,xmm0,xmm1
    2955:	74 5f                	je     29b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    2957:	89 c2                	mov    edx,eax
    2959:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    295d:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2961:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2965:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    296a:	8d 50 01             	lea    edx,[rax+0x1]
    296d:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2971:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2975:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2979:	39 f2                	cmp    edx,esi
    297b:	73 39                	jae    29b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    297d:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    2981:	83 c0 02             	add    eax,0x2
    2984:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    2988:	c4 e1 d2 2a c2       	vcvtsi2ss xmm0,xmm5,rdx
    298d:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    2991:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    2995:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    2999:	39 f0                	cmp    eax,esi
    299b:	73 19                	jae    29b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    299d:	48 8d 04 40          	lea    rax,[rax+rax*2]
    29a1:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    29a5:	c4 e1 d2 2a c0       	vcvtsi2ss xmm0,xmm5,rax
    29aa:	c5 fa 5c c2          	vsubss xmm0,xmm0,xmm2
    29ae:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    29b2:	c5 c2 58 f8          	vaddss xmm7,xmm7,xmm0
    29b6:	c5 d0 57 ed          	vxorps xmm5,xmm5,xmm5
    29ba:	c4 e1 d2 2a c6       	vcvtsi2ss xmm0,xmm5,rsi
    29bf:	c5 c2 5e f8          	vdivss xmm7,xmm7,xmm0
    29c3:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    29c7:	c5 f8 2e c7          	vucomiss xmm0,xmm7
    29cb:	77 73                	ja     2a40 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x420>
    29cd:	c5 c2 51 ff          	vsqrtss xmm7,xmm7,xmm7
    29d1:	bf 02 00 00 00       	mov    edi,0x2
    29d6:	48 8d 35 ee 17 00 00 	lea    rsi,[rip+0x17ee]        # 41cb <_IO_stdin_used+0x1cb>
    29dd:	b8 01 00 00 00       	mov    eax,0x1
    29e2:	c5 c2 5a c7          	vcvtss2sd xmm0,xmm7,xmm7
    29e6:	e8 45 e6 ff ff       	call   1030 <__printf_chk@plt>
    29eb:	4c 89 e7             	mov    rdi,r12
    29ee:	e8 fd ee ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    29f3:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    29f7:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    29fe:	00 00 
    2a00:	75 6c                	jne    2a6e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x44e>
    2a02:	48 83 c4 40          	add    rsp,0x40
    2a06:	5b                   	pop    rbx
    2a07:	41 5a                	pop    r10
    2a09:	41 5c                	pop    r12
    2a0b:	41 5d                	pop    r13
    2a0d:	41 5e                	pop    r14
    2a0f:	41 5f                	pop    r15
    2a11:	5d                   	pop    rbp
    2a12:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    2a16:	c3                   	ret
    2a17:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    2a1e:	00 00 
    2a20:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2a24:	c5 c2 5e ff          	vdivss xmm7,xmm7,xmm7
    2a28:	eb a3                	jmp    29cd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ad>
    2a2a:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    2a30:	c5 f8 77             	vzeroupper
    2a33:	eb 81                	jmp    29b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x396>
    2a35:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2a39:	31 c0                	xor    eax,eax
    2a3b:	e9 7c fe ff ff       	jmp    28bc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x29c>
    2a40:	c5 f8 28 c7          	vmovaps xmm0,xmm7
    2a44:	e8 47 e7 ff ff       	call   1190 <sqrtf@plt>
    2a49:	c5 f8 28 f8          	vmovaps xmm7,xmm0
    2a4d:	eb 82                	jmp    29d1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b1>
    2a4f:	48 8d 0d 2a 1a 00 00 	lea    rcx,[rip+0x1a2a]        # 4480 <_IO_stdin_used+0x480>
    2a56:	ba 44 00 00 00       	mov    edx,0x44
    2a5b:	48 8d 35 0d 17 00 00 	lea    rsi,[rip+0x170d]        # 416f <_IO_stdin_used+0x16f>
    2a62:	48 8d 3d 22 17 00 00 	lea    rdi,[rip+0x1722]        # 418b <_IO_stdin_used+0x18b>
    2a69:	e8 02 e6 ff ff       	call   1070 <__assert_fail@plt>
    2a6e:	e8 6d e6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2a73:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    2a7a:	00 00 00 00 
    2a7e:	66 90                	xchg   ax,ax

0000000000002a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>:
    2a80:	f3 0f 1e fa          	endbr64
    2a84:	41 55                	push   r13
    2a86:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    2a8b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    2a8f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    2a93:	55                   	push   rbp
    2a94:	48 89 e5             	mov    rbp,rsp
    2a97:	41 57                	push   r15
    2a99:	41 56                	push   r14
    2a9b:	41 55                	push   r13
    2a9d:	41 54                	push   r12
    2a9f:	53                   	push   rbx
    2aa0:	48 83 ec 68          	sub    rsp,0x68
    2aa4:	48 89 bd 78 ff ff ff 	mov    QWORD PTR [rbp-0x88],rdi
    2aab:	44 89 45 8c          	mov    DWORD PTR [rbp-0x74],r8d
    2aaf:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2ab6:	00 00 
    2ab8:	48 89 45 c8          	mov    QWORD PTR [rbp-0x38],rax
    2abc:	31 c0                	xor    eax,eax
    2abe:	48 85 ff             	test   rdi,rdi
    2ac1:	0f 84 d7 03 00 00    	je     2e9e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x41e>
    2ac7:	49 89 f7             	mov    r15,rsi
    2aca:	bf 0a 00 00 00       	mov    edi,0xa
    2acf:	4c 8d 65 b0          	lea    r12,[rbp-0x50]
    2ad3:	49 89 d5             	mov    r13,rdx
    2ad6:	48 89 cb             	mov    rbx,rcx
    2ad9:	41 89 ce             	mov    r14d,ecx
    2adc:	e8 df e5 ff ff       	call   10c0 <srand@plt>
    2ae1:	ba 02 00 00 00       	mov    edx,0x2
    2ae6:	4c 89 fe             	mov    rsi,r15
    2ae9:	4c 89 e7             	mov    rdi,r12
    2aec:	e8 3f e9 ff ff       	call   1430 <_Z11hashMapCtorPFj8string_tEj>
    2af1:	85 db                	test   ebx,ebx
    2af3:	74 24                	je     2b19 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x99>
    2af5:	89 db                	mov    ebx,ebx
    2af7:	4d 89 ef             	mov    r15,r13
    2afa:	48 c1 e3 04          	shl    rbx,0x4
    2afe:	4c 01 eb             	add    rbx,r13
    2b01:	49 8b 37             	mov    rsi,QWORD PTR [r15]
    2b04:	49 8b 57 08          	mov    rdx,QWORD PTR [r15+0x8]
    2b08:	4c 89 e7             	mov    rdi,r12
    2b0b:	49 83 c7 10          	add    r15,0x10
    2b0f:	e8 cc e9 ff ff       	call   14e0 <_Z17hashMapAddElementP7HashMap8string_t>
    2b14:	49 39 df             	cmp    r15,rbx
    2b17:	75 e8                	jne    2b01 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x81>
    2b19:	be 04 00 00 00       	mov    esi,0x4
    2b1e:	bf 40 42 0f 00       	mov    edi,0xf4240
    2b23:	e8 58 e5 ff ff       	call   1080 <calloc@plt>
    2b28:	be 08 00 00 00       	mov    esi,0x8
    2b2d:	48 89 45 98          	mov    QWORD PTR [rbp-0x68],rax
    2b31:	49 89 c7             	mov    r15,rax
    2b34:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2b37:	4c 89 fb             	mov    rbx,r15
    2b3a:	48 89 c7             	mov    rdi,rax
    2b3d:	48 89 45 80          	mov    QWORD PTR [rbp-0x80],rax
    2b41:	48 81 c3 00 09 3d 00 	add    rbx,0x3d0900
    2b48:	e8 33 e5 ff ff       	call   1080 <calloc@plt>
    2b4d:	48 89 45 90          	mov    QWORD PTR [rbp-0x70],rax
    2b51:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    2b58:	e8 e3 e4 ff ff       	call   1040 <rand@plt>
    2b5d:	31 d2                	xor    edx,edx
    2b5f:	49 83 c7 04          	add    r15,0x4
    2b63:	41 f7 f6             	div    r14d
    2b66:	41 89 57 fc          	mov    DWORD PTR [r15-0x4],edx
    2b6a:	49 39 df             	cmp    r15,rbx
    2b6d:	75 e9                	jne    2b58 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd8>
    2b6f:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2b72:	85 c0                	test   eax,eax
    2b74:	0f 84 b9 02 00 00    	je     2e33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b3>
    2b7a:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2b7e:	48 8b 45 80          	mov    rax,QWORD PTR [rbp-0x80]
    2b82:	49 8d 04 c6          	lea    rax,[r14+rax*8]
    2b86:	4c 89 b5 70 ff ff ff 	mov    QWORD PTR [rbp-0x90],r14
    2b8d:	48 89 45 a0          	mov    QWORD PTR [rbp-0x60],rax
    2b91:	e8 7a e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2b96:	4c 8b 7d 98          	mov    r15,QWORD PTR [rbp-0x68]
    2b9a:	48 89 45 a8          	mov    QWORD PTR [rbp-0x58],rax
    2b9e:	66 90                	xchg   ax,ax
    2ba0:	41 8b 07             	mov    eax,DWORD PTR [r15]
    2ba3:	4c 89 e7             	mov    rdi,r12
    2ba6:	49 83 c7 04          	add    r15,0x4
    2baa:	48 c1 e0 04          	shl    rax,0x4
    2bae:	4c 01 e8             	add    rax,r13
    2bb1:	48 8b 30             	mov    rsi,QWORD PTR [rax]
    2bb4:	48 8b 50 08          	mov    rdx,QWORD PTR [rax+0x8]
    2bb8:	e8 a3 ec ff ff       	call   1860 <_Z20hashMapSearchElementP7HashMap8string_t>
    2bbd:	4c 39 fb             	cmp    rbx,r15
    2bc0:	75 de                	jne    2ba0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x120>
    2bc2:	e8 49 e5 ff ff       	call   1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    2bc7:	48 8b 4d a8          	mov    rcx,QWORD PTR [rbp-0x58]
    2bcb:	c5 d1 57 ed          	vxorpd xmm5,xmm5,xmm5
    2bcf:	49 83 c6 08          	add    r14,0x8
    2bd3:	48 29 c8             	sub    rax,rcx
    2bd6:	48 89 c1             	mov    rcx,rax
    2bd9:	48 b8 cf f7 53 e3 a5 	movabs rax,0x20c49ba5e353f7cf
    2be0:	9b c4 20 
    2be3:	48 f7 e9             	imul   rcx
    2be6:	48 c1 f9 3f          	sar    rcx,0x3f
    2bea:	48 8b 45 a0          	mov    rax,QWORD PTR [rbp-0x60]
    2bee:	48 c1 fa 07          	sar    rdx,0x7
    2bf2:	48 29 ca             	sub    rdx,rcx
    2bf5:	c4 e1 d3 2a c2       	vcvtsi2sd xmm0,xmm5,rdx
    2bfa:	c4 c1 7b 11 46 f8    	vmovsd QWORD PTR [r14-0x8],xmm0
    2c00:	49 39 c6             	cmp    r14,rax
    2c03:	75 8c                	jne    2b91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x111>
    2c05:	4c 8b 85 70 ff ff ff 	mov    r8,QWORD PTR [rbp-0x90]
    2c0c:	4c 89 e7             	mov    rdi,r12
    2c0f:	48 8d 1d ee 15 00 00 	lea    rbx,[rip+0x15ee]        # 4204 <_IO_stdin_used+0x204>
    2c16:	45 31 e4             	xor    r12d,r12d
    2c19:	4c 89 45 a8          	mov    QWORD PTR [rbp-0x58],r8
    2c1d:	e8 ce ec ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    2c22:	ba 13 00 00 00       	mov    edx,0x13
    2c27:	4c 8b bd 78 ff ff ff 	mov    r15,QWORD PTR [rbp-0x88]
    2c2e:	be 01 00 00 00       	mov    esi,0x1
    2c33:	48 8d 3d ab 15 00 00 	lea    rdi,[rip+0x15ab]        # 41e5 <_IO_stdin_used+0x1e5>
    2c3a:	4c 89 f9             	mov    rcx,r15
    2c3d:	e8 5e e5 ff ff       	call   11a0 <fwrite@plt>
    2c42:	4c 8b 45 a8          	mov    r8,QWORD PTR [rbp-0x58]
    2c46:	4c 8b 6d 80          	mov    r13,QWORD PTR [rbp-0x80]
    2c4a:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2c4e:	4c 8b 75 90          	mov    r14,QWORD PTR [rbp-0x70]
    2c52:	4c 89 45 80          	mov    QWORD PTR [rbp-0x80],r8
    2c56:	c4 81 7b 10 04 e6    	vmovsd xmm0,QWORD PTR [r14+r12*8]
    2c5c:	44 89 e1             	mov    ecx,r12d
    2c5f:	48 89 da             	mov    rdx,rbx
    2c62:	4c 89 ff             	mov    rdi,r15
    2c65:	be 02 00 00 00       	mov    esi,0x2
    2c6a:	b8 01 00 00 00       	mov    eax,0x1
    2c6f:	c5 fb 11 55 a0       	vmovsd QWORD PTR [rbp-0x60],xmm2
    2c74:	49 83 c4 01          	add    r12,0x1
    2c78:	c5 fb 11 45 a8       	vmovsd QWORD PTR [rbp-0x58],xmm0
    2c7d:	e8 fe e4 ff ff       	call   1180 <__fprintf_chk@plt>
    2c82:	c5 fb 10 45 a8       	vmovsd xmm0,QWORD PTR [rbp-0x58]
    2c87:	c5 fb 10 55 a0       	vmovsd xmm2,QWORD PTR [rbp-0x60]
    2c8c:	c5 eb 58 d0          	vaddsd xmm2,xmm2,xmm0
    2c90:	4d 39 e5             	cmp    r13,r12
    2c93:	75 c1                	jne    2c56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1d6>
    2c95:	8b 4d 8c             	mov    ecx,DWORD PTR [rbp-0x74]
    2c98:	c5 c1 57 ff          	vxorpd xmm7,xmm7,xmm7
    2c9c:	4c 8b 45 80          	mov    r8,QWORD PTR [rbp-0x80]
    2ca0:	c5 c3 2a c1          	vcvtsi2sd xmm0,xmm7,ecx
    2ca4:	89 c8                	mov    eax,ecx
    2ca6:	83 e8 01             	sub    eax,0x1
    2ca9:	c5 eb 5e e8          	vdivsd xmm5,xmm2,xmm0
    2cad:	83 f8 02             	cmp    eax,0x2
    2cb0:	0f 86 be 01 00 00    	jbe    2e74 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f4>
    2cb6:	89 c8                	mov    eax,ecx
    2cb8:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2cbc:	c4 e2 7d 19 e5       	vbroadcastsd ymm4,xmm5
    2cc1:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2cc5:	c1 e8 02             	shr    eax,0x2
    2cc8:	48 c1 e0 05          	shl    rax,0x5
    2ccc:	48 01 c8             	add    rax,rcx
    2ccf:	c4 c1 7d 10 30       	vmovupd ymm6,YMMWORD PTR [r8]
    2cd4:	49 83 c0 20          	add    r8,0x20
    2cd8:	c5 cd 5c cc          	vsubpd ymm1,ymm6,ymm4
    2cdc:	c5 f5 59 d1          	vmulpd ymm2,ymm1,ymm1
    2ce0:	c5 eb 58 c0          	vaddsd xmm0,xmm2,xmm0
    2ce4:	c5 e9 15 da          	vunpckhpd xmm3,xmm2,xmm2
    2ce8:	c4 e3 7d 19 d1 01    	vextractf128 xmm1,ymm2,0x1
    2cee:	c5 e3 58 d8          	vaddsd xmm3,xmm3,xmm0
    2cf2:	c5 f3 58 c3          	vaddsd xmm0,xmm1,xmm3
    2cf6:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2cfa:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2cfe:	4c 39 c0             	cmp    rax,r8
    2d01:	75 cc                	jne    2ccf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x24f>
    2d03:	8b 45 8c             	mov    eax,DWORD PTR [rbp-0x74]
    2d06:	a8 03                	test   al,0x3
    2d08:	0f 84 1d 01 00 00    	je     2e2b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ab>
    2d0e:	83 e0 fc             	and    eax,0xfffffffc
    2d11:	c5 f8 77             	vzeroupper
    2d14:	8b 55 8c             	mov    edx,DWORD PTR [rbp-0x74]
    2d17:	29 c2                	sub    edx,eax
    2d19:	83 fa 01             	cmp    edx,0x1
    2d1c:	74 2d                	je     2d4b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2cb>
    2d1e:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2d22:	89 c1                	mov    ecx,eax
    2d24:	c5 fb 12 dd          	vmovddup xmm3,xmm5
    2d28:	c5 f9 10 0c cf       	vmovupd xmm1,XMMWORD PTR [rdi+rcx*8]
    2d2d:	c5 f1 5c cb          	vsubpd xmm1,xmm1,xmm3
    2d31:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    2d35:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2d39:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    2d3d:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    2d41:	f6 c2 01             	test   dl,0x1
    2d44:	74 1a                	je     2d60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2d46:	83 e2 fe             	and    edx,0xfffffffe
    2d49:	01 d0                	add    eax,edx
    2d4b:	48 8b 4d 90          	mov    rcx,QWORD PTR [rbp-0x70]
    2d4f:	c5 fb 10 0c c1       	vmovsd xmm1,QWORD PTR [rcx+rax*8]
    2d54:	c5 f3 5c cd          	vsubsd xmm1,xmm1,xmm5
    2d58:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    2d5c:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    2d60:	c5 c0 57 ff          	vxorps xmm7,xmm7,xmm7
    2d64:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    2d68:	c5 c2 2a 4d 8c       	vcvtsi2ss xmm1,xmm7,DWORD PTR [rbp-0x74]
    2d6d:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    2d71:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    2d75:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    2d79:	0f 87 43 01 00 00    	ja     2ec2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x442>
    2d7f:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    2d83:	c5 fa 5a f8          	vcvtss2sd xmm7,xmm0,xmm0
    2d87:	48 8d 35 7f 14 00 00 	lea    rsi,[rip+0x147f]        # 420d <_IO_stdin_used+0x20d>
    2d8e:	c4 e1 f9 7e fb       	vmovq  rbx,xmm7
    2d93:	c5 d3 10 c5          	vmovsd xmm0,xmm5,xmm5
    2d97:	bf 02 00 00 00       	mov    edi,0x2
    2d9c:	b8 01 00 00 00       	mov    eax,0x1
    2da1:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2da6:	e8 85 e2 ff ff       	call   1030 <__printf_chk@plt>
    2dab:	c4 e1 f9 6e c3       	vmovq  xmm0,rbx
    2db0:	bf 02 00 00 00       	mov    edi,0x2
    2db5:	48 8d 35 6f 14 00 00 	lea    rsi,[rip+0x146f]        # 422b <_IO_stdin_used+0x22b>
    2dbc:	b8 01 00 00 00       	mov    eax,0x1
    2dc1:	e8 6a e2 ff ff       	call   1030 <__printf_chk@plt>
    2dc6:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2dcb:	c4 e1 f9 6e e3       	vmovq  xmm4,rbx
    2dd0:	bf 02 00 00 00       	mov    edi,0x2
    2dd5:	48 8d 35 6d 14 00 00 	lea    rsi,[rip+0x146d]        # 4249 <_IO_stdin_used+0x249>
    2ddc:	b8 01 00 00 00       	mov    eax,0x1
    2de1:	c5 db 5e c5          	vdivsd xmm0,xmm4,xmm5
    2de5:	c5 fb 59 05 fb 18 00 	vmulsd xmm0,xmm0,QWORD PTR [rip+0x18fb]        # 46e8 <_IO_stdin_used+0x6e8>
    2dec:	00 
    2ded:	e8 3e e2 ff ff       	call   1030 <__printf_chk@plt>
    2df2:	48 8b 7d 90          	mov    rdi,QWORD PTR [rbp-0x70]
    2df6:	e8 05 e3 ff ff       	call   1100 <free@plt>
    2dfb:	48 8b 45 c8          	mov    rax,QWORD PTR [rbp-0x38]
    2dff:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    2e06:	00 00 
    2e08:	0f 85 af 00 00 00    	jne    2ebd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43d>
    2e0e:	48 8b 7d 98          	mov    rdi,QWORD PTR [rbp-0x68]
    2e12:	48 83 c4 68          	add    rsp,0x68
    2e16:	5b                   	pop    rbx
    2e17:	41 5c                	pop    r12
    2e19:	41 5d                	pop    r13
    2e1b:	41 5e                	pop    r14
    2e1d:	41 5f                	pop    r15
    2e1f:	5d                   	pop    rbp
    2e20:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    2e24:	41 5d                	pop    r13
    2e26:	e9 d5 e2 ff ff       	jmp    1100 <free@plt>
    2e2b:	c5 f8 77             	vzeroupper
    2e2e:	e9 2d ff ff ff       	jmp    2d60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2e33:	4c 89 e7             	mov    rdi,r12
    2e36:	e8 b5 ea ff ff       	call   18f0 <_Z11hashMapDtorP7HashMap>
    2e3b:	ba 13 00 00 00       	mov    edx,0x13
    2e40:	48 8b 8d 78 ff ff ff 	mov    rcx,QWORD PTR [rbp-0x88]
    2e47:	be 01 00 00 00       	mov    esi,0x1
    2e4c:	48 8d 3d 92 13 00 00 	lea    rdi,[rip+0x1392]        # 41e5 <_IO_stdin_used+0x1e5>
    2e53:	e8 48 e3 ff ff       	call   11a0 <fwrite@plt>
    2e58:	c5 e9 57 d2          	vxorpd xmm2,xmm2,xmm2
    2e5c:	48 83 7d 90 00       	cmp    QWORD PTR [rbp-0x70],0x0
    2e61:	c5 eb 5e ea          	vdivsd xmm5,xmm2,xmm2
    2e65:	74 18                	je     2e7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ff>
    2e67:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    2e6b:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    2e6f:	e9 0b ff ff ff       	jmp    2d7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ff>
    2e74:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    2e78:	31 c0                	xor    eax,eax
    2e7a:	e9 95 fe ff ff       	jmp    2d14 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x294>
    2e7f:	48 8d 0d 62 16 00 00 	lea    rcx,[rip+0x1662]        # 44e8 <_IO_stdin_used+0x4e8>
    2e86:	ba a9 00 00 00       	mov    edx,0xa9
    2e8b:	48 8d 35 dd 12 00 00 	lea    rsi,[rip+0x12dd]        # 416f <_IO_stdin_used+0x16f>
    2e92:	48 8d 3d 60 13 00 00 	lea    rdi,[rip+0x1360]        # 41f9 <_IO_stdin_used+0x1f9>
    2e99:	e8 d2 e1 ff ff       	call   1070 <__assert_fail@plt>
    2e9e:	48 8d 0d 0b 16 00 00 	lea    rcx,[rip+0x160b]        # 44b0 <_IO_stdin_used+0x4b0>
    2ea5:	ba 5e 00 00 00       	mov    edx,0x5e
    2eaa:	48 8d 35 be 12 00 00 	lea    rsi,[rip+0x12be]        # 416f <_IO_stdin_used+0x16f>
    2eb1:	48 8d 3d d3 12 00 00 	lea    rdi,[rip+0x12d3]        # 418b <_IO_stdin_used+0x18b>
    2eb8:	e8 b3 e1 ff ff       	call   1070 <__assert_fail@plt>
    2ebd:	e8 1e e2 ff ff       	call   10e0 <__stack_chk_fail@plt>
    2ec2:	c5 fb 11 6d a8       	vmovsd QWORD PTR [rbp-0x58],xmm5
    2ec7:	e8 c4 e2 ff ff       	call   1190 <sqrtf@plt>
    2ecc:	c5 fb 10 6d a8       	vmovsd xmm5,QWORD PTR [rbp-0x58]
    2ed1:	e9 ad fe ff ff       	jmp    2d83 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x303>
    2ed6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    2edd:	00 00 00 

0000000000002ee0 <_Z4testPFj8string_tE9Filenames8TestDataj>:
    2ee0:	f3 0f 1e fa          	endbr64
    2ee4:	41 56                	push   r14
    2ee6:	48 8d 35 77 13 00 00 	lea    rsi,[rip+0x1377]        # 4264 <_IO_stdin_used+0x264>
    2eed:	45 89 ce             	mov    r14d,r9d
    2ef0:	41 55                	push   r13
    2ef2:	49 89 cd             	mov    r13,rcx
    2ef5:	41 54                	push   r12
    2ef7:	4d 89 c4             	mov    r12,r8
    2efa:	55                   	push   rbp
    2efb:	48 89 fd             	mov    rbp,rdi
    2efe:	48 89 d7             	mov    rdi,rdx
    2f01:	53                   	push   rbx
    2f02:	e8 e9 e1 ff ff       	call   10f0 <fopen@plt>
    2f07:	45 89 f0             	mov    r8d,r14d
    2f0a:	4c 89 ea             	mov    rdx,r13
    2f0d:	4c 89 e1             	mov    rcx,r12
    2f10:	48 89 c3             	mov    rbx,rax
    2f13:	48 89 ee             	mov    rsi,rbp
    2f16:	48 89 c7             	mov    rdi,rax
    2f19:	e8 62 fb ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    2f1e:	48 89 df             	mov    rdi,rbx
    2f21:	5b                   	pop    rbx
    2f22:	5d                   	pop    rbp
    2f23:	41 5c                	pop    r12
    2f25:	41 5d                	pop    r13
    2f27:	41 5e                	pop    r14
    2f29:	e9 a2 e1 ff ff       	jmp    10d0 <fclose@plt>
    2f2e:	66 90                	xchg   ax,ax

0000000000002f30 <_Z7testAllPKcjS0_>:
    2f30:	f3 0f 1e fa          	endbr64
    2f34:	41 57                	push   r15
    2f36:	41 56                	push   r14
    2f38:	41 55                	push   r13
    2f3a:	41 54                	push   r12
    2f3c:	55                   	push   rbp
    2f3d:	53                   	push   rbx
    2f3e:	48 83 ec 28          	sub    rsp,0x28
    2f42:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    2f49:	00 00 
    2f4b:	48 89 44 24 18       	mov    QWORD PTR [rsp+0x18],rax
    2f50:	31 c0                	xor    eax,eax
    2f52:	48 85 ff             	test   rdi,rdi
    2f55:	0f 84 5f 07 00 00    	je     36ba <_Z7testAllPKcjS0_+0x78a>
    2f5b:	48 89 d3             	mov    rbx,rdx
    2f5e:	48 85 d2             	test   rdx,rdx
    2f61:	0f 84 34 07 00 00    	je     369b <_Z7testAllPKcjS0_+0x76b>
    2f67:	48 8d 3d a6 10 00 00 	lea    rdi,[rip+0x10a6]        # 4014 <_IO_stdin_used+0x14>
    2f6e:	41 89 f6             	mov    r14d,esi
    2f71:	48 8d 74 24 10       	lea    rsi,[rsp+0x10]
    2f76:	48 c7 44 24 10 00 00 	mov    QWORD PTR [rsp+0x10],0x0
    2f7d:	00 00 
    2f7f:	e8 1c f5 ff ff       	call   24a0 <_Z8readFilePKcPm>
    2f84:	48 8b 74 24 10       	mov    rsi,QWORD PTR [rsp+0x10]
    2f89:	48 89 c7             	mov    rdi,rax
    2f8c:	49 89 c7             	mov    r15,rax
    2f8f:	48 89 04 24          	mov    QWORD PTR [rsp],rax
    2f93:	e8 18 f6 ff ff       	call   25b0 <_Z10countLinesPcm>
    2f98:	4c 89 ff             	mov    rdi,r15
    2f9b:	41 89 c4             	mov    r12d,eax
    2f9e:	44 89 e6             	mov    esi,r12d
    2fa1:	e8 5a e3 ff ff       	call   1300 <_Z16buildStringArrayPcj>
    2fa6:	48 8d 35 c7 12 00 00 	lea    rsi,[rip+0x12c7]        # 4274 <_IO_stdin_used+0x274>
    2fad:	48 89 df             	mov    rdi,rbx
    2fb0:	48 89 c5             	mov    rbp,rax
    2fb3:	e8 88 e1 ff ff       	call   1140 <strcmp@plt>
    2fb8:	85 c0                	test   eax,eax
    2fba:	0f 84 e8 00 00 00    	je     30a8 <_Z7testAllPKcjS0_+0x178>
    2fc0:	4c 8d 2d a9 12 00 00 	lea    r13,[rip+0x12a9]        # 4270 <_IO_stdin_used+0x270>
    2fc7:	48 89 df             	mov    rdi,rbx
    2fca:	4c 89 ee             	mov    rsi,r13
    2fcd:	e8 6e e1 ff ff       	call   1140 <strcmp@plt>
    2fd2:	85 c0                	test   eax,eax
    2fd4:	0f 84 4e 06 00 00    	je     3628 <_Z7testAllPKcjS0_+0x6f8>
    2fda:	48 8d 35 99 12 00 00 	lea    rsi,[rip+0x1299]        # 427a <_IO_stdin_used+0x27a>
    2fe1:	48 89 df             	mov    rdi,rbx
    2fe4:	e8 57 e1 ff ff       	call   1140 <strcmp@plt>
    2fe9:	85 c0                	test   eax,eax
    2feb:	0f 84 bf 05 00 00    	je     35b0 <_Z7testAllPKcjS0_+0x680>
    2ff1:	48 8d 35 92 12 00 00 	lea    rsi,[rip+0x1292]        # 428a <_IO_stdin_used+0x28a>
    2ff8:	48 89 df             	mov    rdi,rbx
    2ffb:	e8 40 e1 ff ff       	call   1140 <strcmp@plt>
    3000:	85 c0                	test   eax,eax
    3002:	0f 84 30 05 00 00    	je     3538 <_Z7testAllPKcjS0_+0x608>
    3008:	48 8d 35 9c 12 00 00 	lea    rsi,[rip+0x129c]        # 42ab <_IO_stdin_used+0x2ab>
    300f:	48 89 df             	mov    rdi,rbx
    3012:	e8 29 e1 ff ff       	call   1140 <strcmp@plt>
    3017:	85 c0                	test   eax,eax
    3019:	0f 84 a1 04 00 00    	je     34c0 <_Z7testAllPKcjS0_+0x590>
    301f:	48 8d 35 8d 12 00 00 	lea    rsi,[rip+0x128d]        # 42b3 <_IO_stdin_used+0x2b3>
    3026:	48 89 df             	mov    rdi,rbx
    3029:	e8 12 e1 ff ff       	call   1140 <strcmp@plt>
    302e:	85 c0                	test   eax,eax
    3030:	0f 84 12 04 00 00    	je     3448 <_Z7testAllPKcjS0_+0x518>
    3036:	48 8d 35 97 12 00 00 	lea    rsi,[rip+0x1297]        # 42d4 <_IO_stdin_used+0x2d4>
    303d:	48 89 df             	mov    rdi,rbx
    3040:	e8 fb e0 ff ff       	call   1140 <strcmp@plt>
    3045:	85 c0                	test   eax,eax
    3047:	0f 84 83 03 00 00    	je     33d0 <_Z7testAllPKcjS0_+0x4a0>
    304d:	48 8d 35 90 12 00 00 	lea    rsi,[rip+0x1290]        # 42e4 <_IO_stdin_used+0x2e4>
    3054:	48 89 df             	mov    rdi,rbx
    3057:	e8 e4 e0 ff ff       	call   1140 <strcmp@plt>
    305c:	85 c0                	test   eax,eax
    305e:	0f 84 bc 00 00 00    	je     3120 <_Z7testAllPKcjS0_+0x1f0>
    3064:	48 8b 3c 24          	mov    rdi,QWORD PTR [rsp]
    3068:	e8 93 e0 ff ff       	call   1100 <free@plt>
    306d:	48 8b 7d 00          	mov    rdi,QWORD PTR [rbp+0x0]
    3071:	e8 8a e0 ff ff       	call   1100 <free@plt>
    3076:	48 89 ef             	mov    rdi,rbp
    3079:	e8 82 e0 ff ff       	call   1100 <free@plt>
    307e:	48 8b 44 24 18       	mov    rax,QWORD PTR [rsp+0x18]
    3083:	64 48 2b 04 25 28 00 	sub    rax,QWORD PTR fs:0x28
    308a:	00 00 
    308c:	0f 85 04 06 00 00    	jne    3696 <_Z7testAllPKcjS0_+0x766>
    3092:	48 83 c4 28          	add    rsp,0x28
    3096:	5b                   	pop    rbx
    3097:	5d                   	pop    rbp
    3098:	41 5c                	pop    r12
    309a:	41 5d                	pop    r13
    309c:	41 5e                	pop    r14
    309e:	41 5f                	pop    r15
    30a0:	c3                   	ret
    30a1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    30a8:	48 8d 3d a9 14 00 00 	lea    rdi,[rip+0x14a9]        # 4558 <_IO_stdin_used+0x558>
    30af:	45 89 e5             	mov    r13d,r12d
    30b2:	e8 a9 e0 ff ff       	call   1160 <puts@plt>
    30b7:	48 8d 3d b6 11 00 00 	lea    rdi,[rip+0x11b6]        # 4274 <_IO_stdin_used+0x274>
    30be:	e8 9d e0 ff ff       	call   1160 <puts@plt>
    30c3:	48 8d 3d ae 14 00 00 	lea    rdi,[rip+0x14ae]        # 4578 <_IO_stdin_used+0x578>
    30ca:	e8 91 e0 ff ff       	call   1160 <puts@plt>
    30cf:	48 8d 35 8e 11 00 00 	lea    rsi,[rip+0x118e]        # 4264 <_IO_stdin_used+0x264>
    30d6:	48 8d 3d bb 14 00 00 	lea    rdi,[rip+0x14bb]        # 4598 <_IO_stdin_used+0x598>
    30dd:	e8 0e e0 ff ff       	call   10f0 <fopen@plt>
    30e2:	45 89 f0             	mov    r8d,r14d
    30e5:	48 89 ea             	mov    rdx,rbp
    30e8:	4c 89 e9             	mov    rcx,r13
    30eb:	48 8d 35 2e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe92e]        # 1a20 <_Z15crc32HashString8string_t>
    30f2:	49 89 c7             	mov    r15,rax
    30f5:	48 89 c7             	mov    rdi,rax
    30f8:	e8 83 f9 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    30fd:	4c 89 ff             	mov    rdi,r15
    3100:	e8 cb df ff ff       	call   10d0 <fclose@plt>
    3105:	48 8d 3d b4 14 00 00 	lea    rdi,[rip+0x14b4]        # 45c0 <_IO_stdin_used+0x5c0>
    310c:	e8 4f e0 ff ff       	call   1160 <puts@plt>
    3111:	e9 aa fe ff ff       	jmp    2fc0 <_Z7testAllPKcjS0_+0x90>
    3116:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    311d:	00 00 00 
    3120:	4c 8d 3d 31 14 00 00 	lea    r15,[rip+0x1431]        # 4558 <_IO_stdin_used+0x558>
    3127:	4c 89 ff             	mov    rdi,r15
    312a:	e8 31 e0 ff ff       	call   1160 <puts@plt>
    312f:	48 8d 3d 3e 11 00 00 	lea    rdi,[rip+0x113e]        # 4274 <_IO_stdin_used+0x274>
    3136:	e8 25 e0 ff ff       	call   1160 <puts@plt>
    313b:	48 8d 3d 36 14 00 00 	lea    rdi,[rip+0x1436]        # 4578 <_IO_stdin_used+0x578>
    3142:	e8 19 e0 ff ff       	call   1160 <puts@plt>
    3147:	44 89 e0             	mov    eax,r12d
    314a:	48 8d 35 13 11 00 00 	lea    rsi,[rip+0x1113]        # 4264 <_IO_stdin_used+0x264>
    3151:	48 8d 3d 40 14 00 00 	lea    rdi,[rip+0x1440]        # 4598 <_IO_stdin_used+0x598>
    3158:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    315d:	e8 8e df ff ff       	call   10f0 <fopen@plt>
    3162:	45 89 f0             	mov    r8d,r14d
    3165:	48 89 ea             	mov    rdx,rbp
    3168:	4c 89 e1             	mov    rcx,r12
    316b:	48 8d 35 ae e8 ff ff 	lea    rsi,[rip+0xffffffffffffe8ae]        # 1a20 <_Z15crc32HashString8string_t>
    3172:	48 89 c3             	mov    rbx,rax
    3175:	48 89 c7             	mov    rdi,rax
    3178:	e8 03 f9 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    317d:	48 89 df             	mov    rdi,rbx
    3180:	48 8d 1d 39 14 00 00 	lea    rbx,[rip+0x1439]        # 45c0 <_IO_stdin_used+0x5c0>
    3187:	e8 44 df ff ff       	call   10d0 <fclose@plt>
    318c:	48 89 df             	mov    rdi,rbx
    318f:	e8 cc df ff ff       	call   1160 <puts@plt>
    3194:	4c 89 ff             	mov    rdi,r15
    3197:	e8 c4 df ff ff       	call   1160 <puts@plt>
    319c:	4c 89 ef             	mov    rdi,r13
    319f:	e8 bc df ff ff       	call   1160 <puts@plt>
    31a4:	48 8d 3d cd 13 00 00 	lea    rdi,[rip+0x13cd]        # 4578 <_IO_stdin_used+0x578>
    31ab:	e8 b0 df ff ff       	call   1160 <puts@plt>
    31b0:	4c 8b 64 24 08       	mov    r12,QWORD PTR [rsp+0x8]
    31b5:	48 8d 35 a8 10 00 00 	lea    rsi,[rip+0x10a8]        # 4264 <_IO_stdin_used+0x264>
    31bc:	48 8d 3d 1d 14 00 00 	lea    rdi,[rip+0x141d]        # 45e0 <_IO_stdin_used+0x5e0>
    31c3:	e8 28 df ff ff       	call   10f0 <fopen@plt>
    31c8:	48 8d 35 71 e9 ff ff 	lea    rsi,[rip+0xffffffffffffe971]        # 1b40 <_Z19_mm_crc32HashString8string_t>
    31cf:	45 89 f0             	mov    r8d,r14d
    31d2:	48 89 ea             	mov    rdx,rbp
    31d5:	4c 89 e1             	mov    rcx,r12
    31d8:	49 89 c5             	mov    r13,rax
    31db:	48 89 c7             	mov    rdi,rax
    31de:	e8 9d f8 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    31e3:	4c 89 ef             	mov    rdi,r13
    31e6:	e8 e5 de ff ff       	call   10d0 <fclose@plt>
    31eb:	48 89 df             	mov    rdi,rbx
    31ee:	e8 6d df ff ff       	call   1160 <puts@plt>
    31f3:	4c 89 ff             	mov    rdi,r15
    31f6:	e8 65 df ff ff       	call   1160 <puts@plt>
    31fb:	48 8d 3d d2 10 00 00 	lea    rdi,[rip+0x10d2]        # 42d4 <_IO_stdin_used+0x2d4>
    3202:	e8 59 df ff ff       	call   1160 <puts@plt>
    3207:	48 8d 3d 6a 13 00 00 	lea    rdi,[rip+0x136a]        # 4578 <_IO_stdin_used+0x578>
    320e:	e8 4d df ff ff       	call   1160 <puts@plt>
    3213:	48 8d 35 4a 10 00 00 	lea    rsi,[rip+0x104a]        # 4264 <_IO_stdin_used+0x264>
    321a:	48 8d 3d 3f 14 00 00 	lea    rdi,[rip+0x143f]        # 4660 <_IO_stdin_used+0x660>
    3221:	e8 ca de ff ff       	call   10f0 <fopen@plt>
    3226:	45 89 f0             	mov    r8d,r14d
    3229:	48 89 ea             	mov    rdx,rbp
    322c:	4c 89 e1             	mov    rcx,r12
    322f:	48 8d 35 5a e9 ff ff 	lea    rsi,[rip+0xffffffffffffe95a]        # 1b90 <_Z25_mm_crc32UnrollHashString8string_t>
    3236:	49 89 c5             	mov    r13,rax
    3239:	48 89 c7             	mov    rdi,rax
    323c:	e8 3f f8 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3241:	4c 89 ef             	mov    rdi,r13
    3244:	e8 87 de ff ff       	call   10d0 <fclose@plt>
    3249:	48 89 df             	mov    rdi,rbx
    324c:	e8 0f df ff ff       	call   1160 <puts@plt>
    3251:	4c 89 ff             	mov    rdi,r15
    3254:	e8 07 df ff ff       	call   1160 <puts@plt>
    3259:	48 8d 3d 22 10 00 00 	lea    rdi,[rip+0x1022]        # 4282 <_IO_stdin_used+0x282>
    3260:	e8 fb de ff ff       	call   1160 <puts@plt>
    3265:	48 8d 3d 0c 13 00 00 	lea    rdi,[rip+0x130c]        # 4578 <_IO_stdin_used+0x578>
    326c:	e8 ef de ff ff       	call   1160 <puts@plt>
    3271:	48 8d 35 ec 0f 00 00 	lea    rsi,[rip+0xfec]        # 4264 <_IO_stdin_used+0x264>
    3278:	48 8d 3d 91 13 00 00 	lea    rdi,[rip+0x1391]        # 4610 <_IO_stdin_used+0x610>
    327f:	e8 6c de ff ff       	call   10f0 <fopen@plt>
    3284:	45 89 f0             	mov    r8d,r14d
    3287:	48 89 ea             	mov    rdx,rbp
    328a:	4c 89 e1             	mov    rcx,r12
    328d:	48 8d 35 3c e9 ff ff 	lea    rsi,[rip+0xffffffffffffe93c]        # 1bd0 <_Z17murmur2HashString8string_t>
    3294:	49 89 c5             	mov    r13,rax
    3297:	48 89 c7             	mov    rdi,rax
    329a:	e8 e1 f7 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    329f:	4c 89 ef             	mov    rdi,r13
    32a2:	e8 29 de ff ff       	call   10d0 <fclose@plt>
    32a7:	48 89 df             	mov    rdi,rbx
    32aa:	e8 b1 de ff ff       	call   1160 <puts@plt>
    32af:	4c 89 ff             	mov    rdi,r15
    32b2:	e8 a9 de ff ff       	call   1160 <puts@plt>
    32b7:	48 8d 3d cc 0f 00 00 	lea    rdi,[rip+0xfcc]        # 428a <_IO_stdin_used+0x28a>
    32be:	e8 9d de ff ff       	call   1160 <puts@plt>
    32c3:	48 8d 3d ae 12 00 00 	lea    rdi,[rip+0x12ae]        # 4578 <_IO_stdin_used+0x578>
    32ca:	e8 91 de ff ff       	call   1160 <puts@plt>
    32cf:	48 8d 35 8e 0f 00 00 	lea    rsi,[rip+0xf8e]        # 4264 <_IO_stdin_used+0x264>
    32d6:	48 8d 3d b1 0f 00 00 	lea    rdi,[rip+0xfb1]        # 428e <_IO_stdin_used+0x28e>
    32dd:	e8 0e de ff ff       	call   10f0 <fopen@plt>
    32e2:	45 89 f0             	mov    r8d,r14d
    32e5:	48 89 ea             	mov    rdx,rbp
    32e8:	4c 89 e1             	mov    rcx,r12
    32eb:	48 8d 35 8e e9 ff ff 	lea    rsi,[rip+0xffffffffffffe98e]        # 1c80 <_Z13sumHashString8string_t>
    32f2:	49 89 c5             	mov    r13,rax
    32f5:	48 89 c7             	mov    rdi,rax
    32f8:	e8 83 f7 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    32fd:	4c 89 ef             	mov    rdi,r13
    3300:	e8 cb dd ff ff       	call   10d0 <fclose@plt>
    3305:	48 89 df             	mov    rdi,rbx
    3308:	e8 53 de ff ff       	call   1160 <puts@plt>
    330d:	4c 89 ff             	mov    rdi,r15
    3310:	e8 4b de ff ff       	call   1160 <puts@plt>
    3315:	48 8d 3d 8f 0f 00 00 	lea    rdi,[rip+0xf8f]        # 42ab <_IO_stdin_used+0x2ab>
    331c:	e8 3f de ff ff       	call   1160 <puts@plt>
    3321:	48 8d 3d 50 12 00 00 	lea    rdi,[rip+0x1250]        # 4578 <_IO_stdin_used+0x578>
    3328:	e8 33 de ff ff       	call   1160 <puts@plt>
    332d:	48 8d 35 30 0f 00 00 	lea    rsi,[rip+0xf30]        # 4264 <_IO_stdin_used+0x264>
    3334:	48 8d 3d fd 12 00 00 	lea    rdi,[rip+0x12fd]        # 4638 <_IO_stdin_used+0x638>
    333b:	e8 b0 dd ff ff       	call   10f0 <fopen@plt>
    3340:	45 89 f0             	mov    r8d,r14d
    3343:	48 89 ea             	mov    rdx,rbp
    3346:	4c 89 e1             	mov    rcx,r12
    3349:	48 8d 35 a0 ea ff ff 	lea    rsi,[rip+0xffffffffffffeaa0]        # 1df0 <_Z17adler32HashString8string_t>
    3350:	49 89 c5             	mov    r13,rax
    3353:	48 89 c7             	mov    rdi,rax
    3356:	e8 25 f7 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    335b:	4c 89 ef             	mov    rdi,r13
    335e:	e8 6d dd ff ff       	call   10d0 <fclose@plt>
    3363:	48 89 df             	mov    rdi,rbx
    3366:	e8 f5 dd ff ff       	call   1160 <puts@plt>
    336b:	4c 89 ff             	mov    rdi,r15
    336e:	e8 ed dd ff ff       	call   1160 <puts@plt>
    3373:	48 8d 3d 39 0f 00 00 	lea    rdi,[rip+0xf39]        # 42b3 <_IO_stdin_used+0x2b3>
    337a:	e8 e1 dd ff ff       	call   1160 <puts@plt>
    337f:	48 8d 3d f2 11 00 00 	lea    rdi,[rip+0x11f2]        # 4578 <_IO_stdin_used+0x578>
    3386:	e8 d5 dd ff ff       	call   1160 <puts@plt>
    338b:	48 8d 35 d2 0e 00 00 	lea    rsi,[rip+0xed2]        # 4264 <_IO_stdin_used+0x264>
    3392:	48 8d 3d 1e 0f 00 00 	lea    rdi,[rip+0xf1e]        # 42b7 <_IO_stdin_used+0x2b7>
    3399:	e8 52 dd ff ff       	call   10f0 <fopen@plt>
    339e:	45 89 f0             	mov    r8d,r14d
    33a1:	48 89 ea             	mov    rdx,rbp
    33a4:	4c 89 e1             	mov    rcx,r12
    33a7:	48 8d 35 c2 ea ff ff 	lea    rsi,[rip+0xffffffffffffeac2]        # 1e70 <_Z13elfHashString8string_t>
    33ae:	49 89 c5             	mov    r13,rax
    33b1:	48 89 c7             	mov    rdi,rax
    33b4:	e8 c7 f6 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    33b9:	4c 89 ef             	mov    rdi,r13
    33bc:	e8 0f dd ff ff       	call   10d0 <fclose@plt>
    33c1:	48 89 df             	mov    rdi,rbx
    33c4:	e8 97 dd ff ff       	call   1160 <puts@plt>
    33c9:	e9 96 fc ff ff       	jmp    3064 <_Z7testAllPKcjS0_+0x134>
    33ce:	66 90                	xchg   ax,ax
    33d0:	48 8d 3d 81 11 00 00 	lea    rdi,[rip+0x1181]        # 4558 <_IO_stdin_used+0x558>
    33d7:	45 89 e7             	mov    r15d,r12d
    33da:	e8 81 dd ff ff       	call   1160 <puts@plt>
    33df:	48 8d 3d ee 0e 00 00 	lea    rdi,[rip+0xeee]        # 42d4 <_IO_stdin_used+0x2d4>
    33e6:	e8 75 dd ff ff       	call   1160 <puts@plt>
    33eb:	48 8d 3d 86 11 00 00 	lea    rdi,[rip+0x1186]        # 4578 <_IO_stdin_used+0x578>
    33f2:	e8 69 dd ff ff       	call   1160 <puts@plt>
    33f7:	48 8d 35 66 0e 00 00 	lea    rsi,[rip+0xe66]        # 4264 <_IO_stdin_used+0x264>
    33fe:	48 8d 3d 5b 12 00 00 	lea    rdi,[rip+0x125b]        # 4660 <_IO_stdin_used+0x660>
    3405:	e8 e6 dc ff ff       	call   10f0 <fopen@plt>
    340a:	45 89 f0             	mov    r8d,r14d
    340d:	48 89 ea             	mov    rdx,rbp
    3410:	4c 89 f9             	mov    rcx,r15
    3413:	48 8d 35 76 e7 ff ff 	lea    rsi,[rip+0xffffffffffffe776]        # 1b90 <_Z25_mm_crc32UnrollHashString8string_t>
    341a:	48 89 c7             	mov    rdi,rax
    341d:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3422:	e8 59 f6 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3427:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    342c:	e8 9f dc ff ff       	call   10d0 <fclose@plt>
    3431:	48 8d 3d 88 11 00 00 	lea    rdi,[rip+0x1188]        # 45c0 <_IO_stdin_used+0x5c0>
    3438:	e8 23 dd ff ff       	call   1160 <puts@plt>
    343d:	e9 0b fc ff ff       	jmp    304d <_Z7testAllPKcjS0_+0x11d>
    3442:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3448:	48 8d 3d 09 11 00 00 	lea    rdi,[rip+0x1109]        # 4558 <_IO_stdin_used+0x558>
    344f:	45 89 e7             	mov    r15d,r12d
    3452:	e8 09 dd ff ff       	call   1160 <puts@plt>
    3457:	48 8d 3d 55 0e 00 00 	lea    rdi,[rip+0xe55]        # 42b3 <_IO_stdin_used+0x2b3>
    345e:	e8 fd dc ff ff       	call   1160 <puts@plt>
    3463:	48 8d 3d 0e 11 00 00 	lea    rdi,[rip+0x110e]        # 4578 <_IO_stdin_used+0x578>
    346a:	e8 f1 dc ff ff       	call   1160 <puts@plt>
    346f:	48 8d 35 ee 0d 00 00 	lea    rsi,[rip+0xdee]        # 4264 <_IO_stdin_used+0x264>
    3476:	48 8d 3d 3a 0e 00 00 	lea    rdi,[rip+0xe3a]        # 42b7 <_IO_stdin_used+0x2b7>
    347d:	e8 6e dc ff ff       	call   10f0 <fopen@plt>
    3482:	45 89 f0             	mov    r8d,r14d
    3485:	48 89 ea             	mov    rdx,rbp
    3488:	4c 89 f9             	mov    rcx,r15
    348b:	48 8d 35 de e9 ff ff 	lea    rsi,[rip+0xffffffffffffe9de]        # 1e70 <_Z13elfHashString8string_t>
    3492:	48 89 c7             	mov    rdi,rax
    3495:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    349a:	e8 e1 f5 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    349f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    34a4:	e8 27 dc ff ff       	call   10d0 <fclose@plt>
    34a9:	48 8d 3d 10 11 00 00 	lea    rdi,[rip+0x1110]        # 45c0 <_IO_stdin_used+0x5c0>
    34b0:	e8 ab dc ff ff       	call   1160 <puts@plt>
    34b5:	e9 7c fb ff ff       	jmp    3036 <_Z7testAllPKcjS0_+0x106>
    34ba:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    34c0:	48 8d 3d 91 10 00 00 	lea    rdi,[rip+0x1091]        # 4558 <_IO_stdin_used+0x558>
    34c7:	45 89 e7             	mov    r15d,r12d
    34ca:	e8 91 dc ff ff       	call   1160 <puts@plt>
    34cf:	48 8d 3d d5 0d 00 00 	lea    rdi,[rip+0xdd5]        # 42ab <_IO_stdin_used+0x2ab>
    34d6:	e8 85 dc ff ff       	call   1160 <puts@plt>
    34db:	48 8d 3d 96 10 00 00 	lea    rdi,[rip+0x1096]        # 4578 <_IO_stdin_used+0x578>
    34e2:	e8 79 dc ff ff       	call   1160 <puts@plt>
    34e7:	48 8d 35 76 0d 00 00 	lea    rsi,[rip+0xd76]        # 4264 <_IO_stdin_used+0x264>
    34ee:	48 8d 3d 43 11 00 00 	lea    rdi,[rip+0x1143]        # 4638 <_IO_stdin_used+0x638>
    34f5:	e8 f6 db ff ff       	call   10f0 <fopen@plt>
    34fa:	45 89 f0             	mov    r8d,r14d
    34fd:	48 89 ea             	mov    rdx,rbp
    3500:	4c 89 f9             	mov    rcx,r15
    3503:	48 8d 35 e6 e8 ff ff 	lea    rsi,[rip+0xffffffffffffe8e6]        # 1df0 <_Z17adler32HashString8string_t>
    350a:	48 89 c7             	mov    rdi,rax
    350d:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3512:	e8 69 f5 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3517:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    351c:	e8 af db ff ff       	call   10d0 <fclose@plt>
    3521:	48 8d 3d 98 10 00 00 	lea    rdi,[rip+0x1098]        # 45c0 <_IO_stdin_used+0x5c0>
    3528:	e8 33 dc ff ff       	call   1160 <puts@plt>
    352d:	e9 ed fa ff ff       	jmp    301f <_Z7testAllPKcjS0_+0xef>
    3532:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3538:	48 8d 3d 19 10 00 00 	lea    rdi,[rip+0x1019]        # 4558 <_IO_stdin_used+0x558>
    353f:	45 89 e7             	mov    r15d,r12d
    3542:	e8 19 dc ff ff       	call   1160 <puts@plt>
    3547:	48 8d 3d 3c 0d 00 00 	lea    rdi,[rip+0xd3c]        # 428a <_IO_stdin_used+0x28a>
    354e:	e8 0d dc ff ff       	call   1160 <puts@plt>
    3553:	48 8d 3d 1e 10 00 00 	lea    rdi,[rip+0x101e]        # 4578 <_IO_stdin_used+0x578>
    355a:	e8 01 dc ff ff       	call   1160 <puts@plt>
    355f:	48 8d 35 fe 0c 00 00 	lea    rsi,[rip+0xcfe]        # 4264 <_IO_stdin_used+0x264>
    3566:	48 8d 3d 21 0d 00 00 	lea    rdi,[rip+0xd21]        # 428e <_IO_stdin_used+0x28e>
    356d:	e8 7e db ff ff       	call   10f0 <fopen@plt>
    3572:	45 89 f0             	mov    r8d,r14d
    3575:	48 89 ea             	mov    rdx,rbp
    3578:	4c 89 f9             	mov    rcx,r15
    357b:	48 8d 35 fe e6 ff ff 	lea    rsi,[rip+0xffffffffffffe6fe]        # 1c80 <_Z13sumHashString8string_t>
    3582:	48 89 c7             	mov    rdi,rax
    3585:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    358a:	e8 f1 f4 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    358f:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3594:	e8 37 db ff ff       	call   10d0 <fclose@plt>
    3599:	48 8d 3d 20 10 00 00 	lea    rdi,[rip+0x1020]        # 45c0 <_IO_stdin_used+0x5c0>
    35a0:	e8 bb db ff ff       	call   1160 <puts@plt>
    35a5:	e9 5e fa ff ff       	jmp    3008 <_Z7testAllPKcjS0_+0xd8>
    35aa:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    35b0:	48 8d 3d a1 0f 00 00 	lea    rdi,[rip+0xfa1]        # 4558 <_IO_stdin_used+0x558>
    35b7:	45 89 e7             	mov    r15d,r12d
    35ba:	e8 a1 db ff ff       	call   1160 <puts@plt>
    35bf:	48 8d 3d bc 0c 00 00 	lea    rdi,[rip+0xcbc]        # 4282 <_IO_stdin_used+0x282>
    35c6:	e8 95 db ff ff       	call   1160 <puts@plt>
    35cb:	48 8d 3d a6 0f 00 00 	lea    rdi,[rip+0xfa6]        # 4578 <_IO_stdin_used+0x578>
    35d2:	e8 89 db ff ff       	call   1160 <puts@plt>
    35d7:	48 8d 35 86 0c 00 00 	lea    rsi,[rip+0xc86]        # 4264 <_IO_stdin_used+0x264>
    35de:	48 8d 3d 2b 10 00 00 	lea    rdi,[rip+0x102b]        # 4610 <_IO_stdin_used+0x610>
    35e5:	e8 06 db ff ff       	call   10f0 <fopen@plt>
    35ea:	45 89 f0             	mov    r8d,r14d
    35ed:	48 89 ea             	mov    rdx,rbp
    35f0:	4c 89 f9             	mov    rcx,r15
    35f3:	48 8d 35 d6 e5 ff ff 	lea    rsi,[rip+0xffffffffffffe5d6]        # 1bd0 <_Z17murmur2HashString8string_t>
    35fa:	48 89 c7             	mov    rdi,rax
    35fd:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3602:	e8 79 f4 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    3607:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    360c:	e8 bf da ff ff       	call   10d0 <fclose@plt>
    3611:	48 8d 3d a8 0f 00 00 	lea    rdi,[rip+0xfa8]        # 45c0 <_IO_stdin_used+0x5c0>
    3618:	e8 43 db ff ff       	call   1160 <puts@plt>
    361d:	e9 cf f9 ff ff       	jmp    2ff1 <_Z7testAllPKcjS0_+0xc1>
    3622:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    3628:	48 8d 3d 29 0f 00 00 	lea    rdi,[rip+0xf29]        # 4558 <_IO_stdin_used+0x558>
    362f:	45 89 e7             	mov    r15d,r12d
    3632:	e8 29 db ff ff       	call   1160 <puts@plt>
    3637:	4c 89 ef             	mov    rdi,r13
    363a:	e8 21 db ff ff       	call   1160 <puts@plt>
    363f:	48 8d 3d 32 0f 00 00 	lea    rdi,[rip+0xf32]        # 4578 <_IO_stdin_used+0x578>
    3646:	e8 15 db ff ff       	call   1160 <puts@plt>
    364b:	48 8d 35 12 0c 00 00 	lea    rsi,[rip+0xc12]        # 4264 <_IO_stdin_used+0x264>
    3652:	48 8d 3d 87 0f 00 00 	lea    rdi,[rip+0xf87]        # 45e0 <_IO_stdin_used+0x5e0>
    3659:	e8 92 da ff ff       	call   10f0 <fopen@plt>
    365e:	45 89 f0             	mov    r8d,r14d
    3661:	48 89 ea             	mov    rdx,rbp
    3664:	4c 89 f9             	mov    rcx,r15
    3667:	48 8d 35 d2 e4 ff ff 	lea    rsi,[rip+0xffffffffffffe4d2]        # 1b40 <_Z19_mm_crc32HashString8string_t>
    366e:	48 89 c7             	mov    rdi,rax
    3671:	48 89 44 24 08       	mov    QWORD PTR [rsp+0x8],rax
    3676:	e8 05 f4 ff ff       	call   2a80 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj>
    367b:	48 8b 7c 24 08       	mov    rdi,QWORD PTR [rsp+0x8]
    3680:	e8 4b da ff ff       	call   10d0 <fclose@plt>
    3685:	48 8d 3d 34 0f 00 00 	lea    rdi,[rip+0xf34]        # 45c0 <_IO_stdin_used+0x5c0>
    368c:	e8 cf da ff ff       	call   1160 <puts@plt>
    3691:	e9 44 f9 ff ff       	jmp    2fda <_Z7testAllPKcjS0_+0xaa>
    3696:	e8 45 da ff ff       	call   10e0 <__stack_chk_fail@plt>
    369b:	48 8d 0d 7e 0e 00 00 	lea    rcx,[rip+0xe7e]        # 4520 <_IO_stdin_used+0x520>
    36a2:	ba 13 00 00 00       	mov    edx,0x13
    36a7:	48 8d 35 c1 0a 00 00 	lea    rsi,[rip+0xac1]        # 416f <_IO_stdin_used+0x16f>
    36ae:	48 8d 3d b1 0b 00 00 	lea    rdi,[rip+0xbb1]        # 4266 <_IO_stdin_used+0x266>
    36b5:	e8 b6 d9 ff ff       	call   1070 <__assert_fail@plt>
    36ba:	48 8d 0d 5f 0e 00 00 	lea    rcx,[rip+0xe5f]        # 4520 <_IO_stdin_used+0x520>
    36c1:	ba 12 00 00 00       	mov    edx,0x12
    36c6:	48 8d 35 a2 0a 00 00 	lea    rsi,[rip+0xaa2]        # 416f <_IO_stdin_used+0x16f>
    36cd:	48 8d 3d 92 0a 00 00 	lea    rdi,[rip+0xa92]        # 4166 <_IO_stdin_used+0x166>
    36d4:	e8 97 d9 ff ff       	call   1070 <__assert_fail@plt>
    36d9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]

00000000000036e0 <_Z21standartDeviationTimePdjd>:
    36e0:	f3 0f 1e fa          	endbr64
    36e4:	4c 8d 54 24 08       	lea    r10,[rsp+0x8]
    36e9:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    36ed:	41 ff 72 f8          	push   QWORD PTR [r10-0x8]
    36f1:	55                   	push   rbp
    36f2:	48 89 e5             	mov    rbp,rsp
    36f5:	41 52                	push   r10
    36f7:	48 83 ec 08          	sub    rsp,0x8
    36fb:	48 85 ff             	test   rdi,rdi
    36fe:	0f 84 18 01 00 00    	je     381c <_Z21standartDeviationTimePdjd+0x13c>
    3704:	89 f1                	mov    ecx,esi
    3706:	85 c9                	test   ecx,ecx
    3708:	0f 84 f2 00 00 00    	je     3800 <_Z21standartDeviationTimePdjd+0x120>
    370e:	8d 41 ff             	lea    eax,[rcx-0x1]
    3711:	48 89 fa             	mov    rdx,rdi
    3714:	c5 fb 10 d8          	vmovsd xmm3,xmm0,xmm0
    3718:	83 f8 02             	cmp    eax,0x2
    371b:	0f 86 e9 00 00 00    	jbe    380a <_Z21standartDeviationTimePdjd+0x12a>
    3721:	89 ce                	mov    esi,ecx
    3723:	c4 e2 7d 19 e8       	vbroadcastsd ymm5,xmm0
    3728:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    372c:	48 89 f8             	mov    rax,rdi
    372f:	c1 ee 02             	shr    esi,0x2
    3732:	48 c1 e6 05          	shl    rsi,0x5
    3736:	48 01 fe             	add    rsi,rdi
    3739:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3740:	c5 fd 10 30          	vmovupd ymm6,YMMWORD PTR [rax]
    3744:	48 83 c0 20          	add    rax,0x20
    3748:	c5 cd 5c cd          	vsubpd ymm1,ymm6,ymm5
    374c:	c5 f5 59 c9          	vmulpd ymm1,ymm1,ymm1
    3750:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3754:	c5 f1 15 d1          	vunpckhpd xmm2,xmm1,xmm1
    3758:	c4 e3 7d 19 c9 01    	vextractf128 xmm1,ymm1,0x1
    375e:	c5 fb 58 c2          	vaddsd xmm0,xmm0,xmm2
    3762:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    3766:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    376a:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    376e:	48 39 f0             	cmp    rax,rsi
    3771:	75 cd                	jne    3740 <_Z21standartDeviationTimePdjd+0x60>
    3773:	89 c8                	mov    eax,ecx
    3775:	83 e0 fc             	and    eax,0xfffffffc
    3778:	f6 c1 03             	test   cl,0x3
    377b:	74 7b                	je     37f8 <_Z21standartDeviationTimePdjd+0x118>
    377d:	c5 f8 77             	vzeroupper
    3780:	89 ce                	mov    esi,ecx
    3782:	29 c6                	sub    esi,eax
    3784:	83 fe 01             	cmp    esi,0x1
    3787:	74 2a                	je     37b3 <_Z21standartDeviationTimePdjd+0xd3>
    3789:	89 c7                	mov    edi,eax
    378b:	c5 fb 12 d3          	vmovddup xmm2,xmm3
    378f:	c5 f9 10 0c fa       	vmovupd xmm1,XMMWORD PTR [rdx+rdi*8]
    3794:	c5 f1 5c ca          	vsubpd xmm1,xmm1,xmm2
    3798:	c5 f1 59 c9          	vmulpd xmm1,xmm1,xmm1
    379c:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    37a0:	c5 f1 15 c9          	vunpckhpd xmm1,xmm1,xmm1
    37a4:	c5 f3 58 c0          	vaddsd xmm0,xmm1,xmm0
    37a8:	40 f6 c6 01          	test   sil,0x1
    37ac:	74 16                	je     37c4 <_Z21standartDeviationTimePdjd+0xe4>
    37ae:	83 e6 fe             	and    esi,0xfffffffe
    37b1:	01 f0                	add    eax,esi
    37b3:	c5 fb 10 0c c2       	vmovsd xmm1,QWORD PTR [rdx+rax*8]
    37b8:	c5 f3 5c cb          	vsubsd xmm1,xmm1,xmm3
    37bc:	c5 f3 59 c9          	vmulsd xmm1,xmm1,xmm1
    37c0:	c5 fb 58 c1          	vaddsd xmm0,xmm0,xmm1
    37c4:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    37c8:	c5 fb 5a c0          	vcvtsd2ss xmm0,xmm0,xmm0
    37cc:	c4 e1 f2 2a c9       	vcvtsi2ss xmm1,xmm1,rcx
    37d1:	c5 fa 5e c1          	vdivss xmm0,xmm0,xmm1
    37d5:	c5 f0 57 c9          	vxorps xmm1,xmm1,xmm1
    37d9:	c5 f8 2e c8          	vucomiss xmm1,xmm0
    37dd:	77 36                	ja     3815 <_Z21standartDeviationTimePdjd+0x135>
    37df:	c5 fa 51 c0          	vsqrtss xmm0,xmm0,xmm0
    37e3:	4c 8b 55 f8          	mov    r10,QWORD PTR [rbp-0x8]
    37e7:	c5 fa 5a c0          	vcvtss2sd xmm0,xmm0,xmm0
    37eb:	c9                   	leave
    37ec:	49 8d 62 f8          	lea    rsp,[r10-0x8]
    37f0:	c3                   	ret
    37f1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    37f8:	c5 f8 77             	vzeroupper
    37fb:	eb c7                	jmp    37c4 <_Z21standartDeviationTimePdjd+0xe4>
    37fd:	0f 1f 00             	nop    DWORD PTR [rax]
    3800:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3804:	c5 fa 5e c0          	vdivss xmm0,xmm0,xmm0
    3808:	eb d5                	jmp    37df <_Z21standartDeviationTimePdjd+0xff>
    380a:	31 c0                	xor    eax,eax
    380c:	c5 f9 57 c0          	vxorpd xmm0,xmm0,xmm0
    3810:	e9 6b ff ff ff       	jmp    3780 <_Z21standartDeviationTimePdjd+0xa0>
    3815:	e8 76 d9 ff ff       	call   1190 <sqrtf@plt>
    381a:	eb c7                	jmp    37e3 <_Z21standartDeviationTimePdjd+0x103>
    381c:	48 8d 0d c5 0c 00 00 	lea    rcx,[rip+0xcc5]        # 44e8 <_IO_stdin_used+0x4e8>
    3823:	ba a9 00 00 00       	mov    edx,0xa9
    3828:	48 8d 35 40 09 00 00 	lea    rsi,[rip+0x940]        # 416f <_IO_stdin_used+0x16f>
    382f:	48 8d 3d c3 09 00 00 	lea    rdi,[rip+0x9c3]        # 41f9 <_IO_stdin_used+0x1f9>
    3836:	e8 35 d8 ff ff       	call   1070 <__assert_fail@plt>
    383b:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]

0000000000003840 <_Z27standartDeviationCollisionsP7HashMapf>:
    3840:	f3 0f 1e fa          	endbr64
    3844:	41 55                	push   r13
    3846:	4c 8d 6c 24 10       	lea    r13,[rsp+0x10]
    384b:	48 83 e4 e0          	and    rsp,0xffffffffffffffe0
    384f:	41 ff 75 f8          	push   QWORD PTR [r13-0x8]
    3853:	55                   	push   rbp
    3854:	48 89 e5             	mov    rbp,rsp
    3857:	41 55                	push   r13
    3859:	48 83 ec 28          	sub    rsp,0x28
    385d:	48 85 ff             	test   rdi,rdi
    3860:	0f 84 d7 02 00 00    	je     3b3d <_Z27standartDeviationCollisionsP7HashMapf+0x2fd>
    3866:	8b 77 08             	mov    esi,DWORD PTR [rdi+0x8]
    3869:	85 f6                	test   esi,esi
    386b:	0f 84 87 02 00 00    	je     3af8 <_Z27standartDeviationCollisionsP7HashMapf+0x2b8>
    3871:	8d 46 ff             	lea    eax,[rsi-0x1]
    3874:	48 8b 3f             	mov    rdi,QWORD PTR [rdi]
    3877:	c5 f8 28 e0          	vmovaps xmm4,xmm0
    387b:	c5 e0 57 db          	vxorps xmm3,xmm3,xmm3
    387f:	83 f8 06             	cmp    eax,0x6
    3882:	0f 86 95 02 00 00    	jbe    3b1d <_Z27standartDeviationCollisionsP7HashMapf+0x2dd>
    3888:	48 8d 47 10          	lea    rax,[rdi+0x10]
    388c:	c4 e2 7d 18 f0       	vbroadcastss ymm6,xmm0
    3891:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3896:	89 f2                	mov    edx,esi
    3898:	c4 e2 7d 18 2d 6f 07 	vbroadcastss ymm5,DWORD PTR [rip+0x76f]        # 4010 <_IO_stdin_used+0x10>
    389f:	00 00 
    38a1:	c1 ea 03             	shr    edx,0x3
    38a4:	48 b9 00 00 00 00 ff 	movabs rcx,0xffffffff00000000
    38ab:	ff ff ff 
    38ae:	4c 8d 04 52          	lea    r8,[rdx+rdx*2]
    38b2:	ba ff ff 00 00       	mov    edx,0xffff
    38b7:	49 c1 e0 06          	shl    r8,0x6
    38bb:	c5 f9 6e d2          	vmovd  xmm2,edx
    38bf:	49 01 c0             	add    r8,rax
    38c2:	c4 e2 7d 58 d2       	vpbroadcastd ymm2,xmm2
    38c7:	66 0f 1f 84 00 00 00 	nop    WORD PTR [rax+rax*1+0x0]
    38ce:	00 00 
    38d0:	8b 50 18             	mov    edx,DWORD PTR [rax+0x18]
    38d3:	44 8b 08             	mov    r9d,DWORD PTR [rax]
    38d6:	c5 c1 ef ff          	vpxor  xmm7,xmm7,xmm7
    38da:	48 05 c0 00 00 00    	add    rax,0xc0
    38e0:	c5 fd 7f 7d d0       	vmovdqa YMMWORD PTR [rbp-0x30],ymm7
    38e5:	48 c1 e2 20          	shl    rdx,0x20
    38e9:	49 09 d1             	or     r9,rdx
    38ec:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    38f0:	4c 89 4d d0          	mov    QWORD PTR [rbp-0x30],r9
    38f4:	44 8b 88 70 ff ff ff 	mov    r9d,DWORD PTR [rax-0x90]
    38fb:	48 21 ca             	and    rdx,rcx
    38fe:	4c 09 ca             	or     rdx,r9
    3901:	44 8b 48 88          	mov    r9d,DWORD PTR [rax-0x78]
    3905:	89 d2                	mov    edx,edx
    3907:	49 c1 e1 20          	shl    r9,0x20
    390b:	4c 09 ca             	or     rdx,r9
    390e:	44 8b 48 a0          	mov    r9d,DWORD PTR [rax-0x60]
    3912:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    3916:	48 8b 55 e0          	mov    rdx,QWORD PTR [rbp-0x20]
    391a:	48 21 ca             	and    rdx,rcx
    391d:	4c 09 ca             	or     rdx,r9
    3920:	44 8b 48 b8          	mov    r9d,DWORD PTR [rax-0x48]
    3924:	89 d2                	mov    edx,edx
    3926:	49 c1 e1 20          	shl    r9,0x20
    392a:	4c 09 ca             	or     rdx,r9
    392d:	44 8b 48 d0          	mov    r9d,DWORD PTR [rax-0x30]
    3931:	48 89 55 e0          	mov    QWORD PTR [rbp-0x20],rdx
    3935:	48 8b 55 e8          	mov    rdx,QWORD PTR [rbp-0x18]
    3939:	48 21 ca             	and    rdx,rcx
    393c:	4c 09 ca             	or     rdx,r9
    393f:	44 8b 48 e8          	mov    r9d,DWORD PTR [rax-0x18]
    3943:	89 d2                	mov    edx,edx
    3945:	49 c1 e1 20          	shl    r9,0x20
    3949:	4c 09 ca             	or     rdx,r9
    394c:	48 89 55 e8          	mov    QWORD PTR [rbp-0x18],rdx
    3950:	c5 fd 6f 7d d0       	vmovdqa ymm7,YMMWORD PTR [rbp-0x30]
    3955:	c5 ed db 45 d0       	vpand  ymm0,ymm2,YMMWORD PTR [rbp-0x30]
    395a:	c5 f5 72 d7 10       	vpsrld ymm1,ymm7,0x10
    395f:	c5 fc 5b c9          	vcvtdq2ps ymm1,ymm1
    3963:	c5 f4 59 cd          	vmulps ymm1,ymm1,ymm5
    3967:	c5 fc 5b c0          	vcvtdq2ps ymm0,ymm0
    396b:	c5 fc 58 c1          	vaddps ymm0,ymm0,ymm1
    396f:	c5 fc 5c c6          	vsubps ymm0,ymm0,ymm6
    3973:	c5 fc 59 c0          	vmulps ymm0,ymm0,ymm0
    3977:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    397b:	c5 78 c6 c0 55       	vshufps xmm8,xmm0,xmm0,0x55
    3980:	c5 f8 c6 f8 ff       	vshufps xmm7,xmm0,xmm0,0xff
    3985:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    398a:	c5 78 15 c0          	vunpckhps xmm8,xmm0,xmm0
    398e:	c4 e3 7d 19 c0 01    	vextractf128 xmm0,ymm0,0x1
    3994:	c4 c1 72 58 c8       	vaddss xmm1,xmm1,xmm8
    3999:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    399d:	c5 f8 c6 f8 55       	vshufps xmm7,xmm0,xmm0,0x55
    39a2:	c5 f2 58 c8          	vaddss xmm1,xmm1,xmm0
    39a6:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    39aa:	c5 f8 15 f8          	vunpckhps xmm7,xmm0,xmm0
    39ae:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    39b3:	c5 f2 58 cf          	vaddss xmm1,xmm1,xmm7
    39b7:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    39bb:	49 39 c0             	cmp    r8,rax
    39be:	0f 85 0c ff ff ff    	jne    38d0 <_Z27standartDeviationCollisionsP7HashMapf+0x90>
    39c4:	89 f0                	mov    eax,esi
    39c6:	83 e0 f8             	and    eax,0xfffffff8
    39c9:	40 f6 c6 07          	test   sil,0x7
    39cd:	0f 84 45 01 00 00    	je     3b18 <_Z27standartDeviationCollisionsP7HashMapf+0x2d8>
    39d3:	c5 f8 77             	vzeroupper
    39d6:	89 f1                	mov    ecx,esi
    39d8:	29 c1                	sub    ecx,eax
    39da:	8d 51 ff             	lea    edx,[rcx-0x1]
    39dd:	83 fa 02             	cmp    edx,0x2
    39e0:	0f 86 8b 00 00 00    	jbe    3a71 <_Z27standartDeviationCollisionsP7HashMapf+0x231>
    39e6:	c4 e2 79 18 15 21 06 	vbroadcastss xmm2,DWORD PTR [rip+0x621]        # 4010 <_IO_stdin_used+0x10>
    39ed:	00 00 
    39ef:	89 c2                	mov    edx,eax
    39f1:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    39f5:	c5 f9 6e 4c d7 10    	vmovd  xmm1,DWORD PTR [rdi+rdx*8+0x10]
    39fb:	c4 e3 71 22 4c d7 28 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x28],0x1
    3a02:	01 
    3a03:	c4 e3 71 22 4c d7 40 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x40],0x2
    3a0a:	02 
    3a0b:	c4 e3 71 22 4c d7 58 	vpinsrd xmm1,xmm1,DWORD PTR [rdi+rdx*8+0x58],0x3
    3a12:	03 
    3a13:	ba ff ff 00 00       	mov    edx,0xffff
    3a18:	c5 f9 6e c2          	vmovd  xmm0,edx
    3a1c:	89 ca                	mov    edx,ecx
    3a1e:	c5 f9 70 c0 00       	vpshufd xmm0,xmm0,0x0
    3a23:	83 e2 fc             	and    edx,0xfffffffc
    3a26:	c5 f1 db c0          	vpand  xmm0,xmm1,xmm0
    3a2a:	c5 f1 72 d1 10       	vpsrld xmm1,xmm1,0x10
    3a2f:	01 d0                	add    eax,edx
    3a31:	83 e1 03             	and    ecx,0x3
    3a34:	c5 f8 5b c9          	vcvtdq2ps xmm1,xmm1
    3a38:	c5 f0 59 ca          	vmulps xmm1,xmm1,xmm2
    3a3c:	c5 f8 5b c0          	vcvtdq2ps xmm0,xmm0
    3a40:	c5 f8 58 c1          	vaddps xmm0,xmm0,xmm1
    3a44:	c5 d8 c6 cc 00       	vshufps xmm1,xmm4,xmm4,0x0
    3a49:	c5 f8 5c c1          	vsubps xmm0,xmm0,xmm1
    3a4d:	c5 f8 59 c0          	vmulps xmm0,xmm0,xmm0
    3a51:	c5 ba 58 c8          	vaddss xmm1,xmm8,xmm0
    3a55:	c5 f8 c6 d0 55       	vshufps xmm2,xmm0,xmm0,0x55
    3a5a:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    3a5e:	c5 f8 15 d0          	vunpckhps xmm2,xmm0,xmm0
    3a62:	c5 f8 c6 c0 ff       	vshufps xmm0,xmm0,xmm0,0xff
    3a67:	c5 f2 58 ca          	vaddss xmm1,xmm1,xmm2
    3a6b:	c5 72 58 c0          	vaddss xmm8,xmm1,xmm0
    3a6f:	74 5b                	je     3acc <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a71:	89 c2                	mov    edx,eax
    3a73:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a77:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a7b:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3a80:	8d 50 01             	lea    edx,[rax+0x1]
    3a83:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3a87:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3a8b:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3a8f:	39 f2                	cmp    edx,esi
    3a91:	73 39                	jae    3acc <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3a93:	48 8d 14 52          	lea    rdx,[rdx+rdx*2]
    3a97:	83 c0 02             	add    eax,0x2
    3a9a:	8b 54 d7 10          	mov    edx,DWORD PTR [rdi+rdx*8+0x10]
    3a9e:	c4 e1 e2 2a c2       	vcvtsi2ss xmm0,xmm3,rdx
    3aa3:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3aa7:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3aab:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3aaf:	39 f0                	cmp    eax,esi
    3ab1:	73 19                	jae    3acc <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3ab3:	48 8d 04 40          	lea    rax,[rax+rax*2]
    3ab7:	8b 44 c7 10          	mov    eax,DWORD PTR [rdi+rax*8+0x10]
    3abb:	c4 e1 e2 2a c0       	vcvtsi2ss xmm0,xmm3,rax
    3ac0:	c5 fa 5c c4          	vsubss xmm0,xmm0,xmm4
    3ac4:	c5 fa 59 c0          	vmulss xmm0,xmm0,xmm0
    3ac8:	c5 3a 58 c0          	vaddss xmm8,xmm8,xmm0
    3acc:	c4 e1 e2 2a de       	vcvtsi2ss xmm3,xmm3,rsi
    3ad1:	c5 f8 57 c0          	vxorps xmm0,xmm0,xmm0
    3ad5:	c5 3a 5e c3          	vdivss xmm8,xmm8,xmm3
    3ad9:	c4 c1 78 2e c0       	vucomiss xmm0,xmm8
    3ade:	77 49                	ja     3b29 <_Z27standartDeviationCollisionsP7HashMapf+0x2e9>
    3ae0:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3ae4:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3ae9:	c9                   	leave
    3aea:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3aee:	41 5d                	pop    r13
    3af0:	c3                   	ret
    3af1:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    3af8:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3afd:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3b01:	c4 41 3a 5e c0       	vdivss xmm8,xmm8,xmm8
    3b06:	c9                   	leave
    3b07:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3b0b:	41 5d                	pop    r13
    3b0d:	c4 c1 3a 51 c0       	vsqrtss xmm0,xmm8,xmm8
    3b12:	c3                   	ret
    3b13:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
    3b18:	c5 f8 77             	vzeroupper
    3b1b:	eb af                	jmp    3acc <_Z27standartDeviationCollisionsP7HashMapf+0x28c>
    3b1d:	31 c0                	xor    eax,eax
    3b1f:	c4 41 38 57 c0       	vxorps xmm8,xmm8,xmm8
    3b24:	e9 ad fe ff ff       	jmp    39d6 <_Z27standartDeviationCollisionsP7HashMapf+0x196>
    3b29:	4c 8b 6d f8          	mov    r13,QWORD PTR [rbp-0x8]
    3b2d:	c5 78 29 c0          	vmovaps xmm0,xmm8
    3b31:	c9                   	leave
    3b32:	49 8d 65 f0          	lea    rsp,[r13-0x10]
    3b36:	41 5d                	pop    r13
    3b38:	e9 53 d6 ff ff       	jmp    1190 <sqrtf@plt>
    3b3d:	48 8d 0d 54 0b 00 00 	lea    rcx,[rip+0xb54]        # 4698 <_IO_stdin_used+0x698>
    3b44:	ba b5 00 00 00       	mov    edx,0xb5
    3b49:	48 8d 35 1f 06 00 00 	lea    rsi,[rip+0x61f]        # 416f <_IO_stdin_used+0x16f>
    3b50:	48 8d 3d cb 04 00 00 	lea    rdi,[rip+0x4cb]        # 4022 <_IO_stdin_used+0x22>
    3b57:	e8 14 d5 ff ff       	call   1070 <__assert_fail@plt>
    3b5c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000003b60 <my_strcmp>:
    3b60:	c5 fd 6f 07          	vmovdqa ymm0,YMMWORD PTR [rdi]
    3b64:	c5 fd 6f 0e          	vmovdqa ymm1,YMMWORD PTR [rsi]
    3b68:	c4 e2 7d 29 d1       	vpcmpeqq ymm2,ymm0,ymm1
    3b6d:	c5 fd d7 c2          	vpmovmskb eax,ymm2
    3b71:	f7 d0                	not    eax
    3b73:	c3                   	ret

Disassembly of section .fini:

0000000000003b74 <_fini>:
    3b74:	f3 0f 1e fa          	endbr64
    3b78:	48 83 ec 08          	sub    rsp,0x8
    3b7c:	48 83 c4 08          	add    rsp,0x8
    3b80:	c3                   	ret

Disassembly of section .rodata:

0000000000004000 <_IO_stdin_used>:
    4000:	01 00                	add    DWORD PTR [rax],eax
    4002:	02 00                	add    al,BYTE PTR [rax]
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	80 3f 00             	cmp    BYTE PTR [rdi],0x0
    4009:	00 70 41             	add    BYTE PTR [rax+0x41],dh
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	00 3f                	add    BYTE PTR [rdi],bh
    4010:	00 00                	add    BYTE PTR [rax],al
    4012:	80 47 62 6f          	add    BYTE PTR [rdi+0x62],0x6f
    4016:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4017:	6b 2e 74             	imul   ebp,DWORD PTR [rsi],0x74
    401a:	78 74                	js     4090 <_IO_stdin_used+0x90>
    401c:	00 74 65 78          	add    BYTE PTR [rbp+riz*2+0x78],dh
    4020:	74 00                	je     4022 <_IO_stdin_used+0x22>
    4022:	68 61 73 68 4d       	push   0x4d687361
    4027:	61                   	(bad)
    4028:	70 00                	jo     402a <_IO_stdin_used+0x2a>
    402a:	76 6f                	jbe    409b <_IO_stdin_used+0x9b>
    402c:	69 64 20 68 61 73 68 	imul   esp,DWORD PTR [rax+riz*1+0x68],0x4d687361
    4033:	4d 
    4034:	61                   	(bad)
    4035:	70 44                	jo     407b <_IO_stdin_used+0x7b>
    4037:	74 6f                	je     40a8 <_IO_stdin_used+0xa8>
    4039:	72 28                	jb     4063 <_IO_stdin_used+0x63>
    403b:	48 61                	rex.W (bad)
    403d:	73 68                	jae    40a7 <_IO_stdin_used+0xa7>
    403f:	4d 61                	rex.WRB (bad)
    4041:	70 2a                	jo     406d <_IO_stdin_used+0x6d>
    4043:	29 00                	sub    DWORD PTR [rax],eax
    4045:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404a:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    404f:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4054:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4059:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    405e:	3d 00 4e 55 4c       	cmp    eax,0x4c554e00
    4063:	4c 00 48 4d          	rex.WR add BYTE PTR [rax+0x4d],r9b
    4067:	20 43 41             	and    BYTE PTR [rbx+0x41],al
    406a:	50                   	push   rax
    406b:	41                   	rex.B
    406c:	43                   	rex.XB
    406d:	49 54                	rex.WB push r12
    406f:	59                   	pop    rcx
    4070:	3a 20                	cmp    ah,BYTE PTR [rax]
    4072:	25 64 0a 00 4c       	and    eax,0x4c000a64
    4077:	4f                   	rex.WRXB
    4078:	41                   	rex.B
    4079:	44 20 46 41          	and    BYTE PTR [rsi+0x41],r8b
    407d:	43 54                	rex.XB push r12
    407f:	4f 52                	rex.WRXB push r10
    4081:	3a 20                	cmp    ah,BYTE PTR [rax]
    4083:	25 66 0a 00 48       	and    eax,0x48000a66
    4088:	41 53                	push   r11
    408a:	48                   	rex.W
    408b:	4d                   	rex.WRB
    408c:	41 50                	push   r8
    408e:	20 49 4e             	and    BYTE PTR [rcx+0x4e],cl
    4091:	58                   	pop    rax
    4092:	3a 20                	cmp    ah,BYTE PTR [rax]
    4094:	25 64 0a 00 2f       	and    eax,0x2f000a64
    4099:	72 6f                	jb     410a <_IO_stdin_used+0x10a>
    409b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    409c:	74 2f                	je     40cd <_IO_stdin_used+0xcd>
    409e:	68 61 73 68 4d       	push   0x4d687361
    40a3:	61                   	(bad)
    40a4:	70 2f                	jo     40d5 <_IO_stdin_used+0xd5>
    40a6:	73 72                	jae    411a <_IO_stdin_used+0x11a>
    40a8:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    40aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    40ab:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
    40b2:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
    40b6:	74 00                	je     40b8 <_IO_stdin_used+0xb8>
    40b8:	76 6f                	jbe    4129 <_IO_stdin_used+0x129>
    40ba:	69 64 20 6c 69 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x44747369
    40c1:	44 
    40c2:	74 6f                	je     4133 <_IO_stdin_used+0x133>
    40c4:	72 28                	jb     40ee <_IO_stdin_used+0xee>
    40c6:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x7600292a
    40cd:	76 
    40ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40cf:	69 64 20 64 65 62 75 	imul   esp,DWORD PTR [rax+riz*1+0x64],0x67756265
    40d6:	67 
    40d7:	50                   	push   rax
    40d8:	72 69                	jb     4143 <_IO_stdin_used+0x143>
    40da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40db:	74 28                	je     4105 <_IO_stdin_used+0x105>
    40dd:	4c 69 73 74 2a 29 00 	imul   r14,QWORD PTR [rbx+0x74],0x4300292a
    40e4:	43 
    40e5:	41 50                	push   r8
    40e7:	41                   	rex.B
    40e8:	43                   	rex.XB
    40e9:	49 54                	rex.WB push r12
    40eb:	59                   	pop    rcx
    40ec:	3a 20                	cmp    ah,BYTE PTR [rax]
    40ee:	25 75 0a 00 54       	and    eax,0x54000a75
    40f3:	41                   	rex.B
    40f4:	49                   	rex.WB
    40f5:	4c 5f                	rex.WR pop rdi
    40f7:	49                   	rex.WB
    40f8:	4e 58                	rex.WRX pop rax
    40fa:	3a 20                	cmp    ah,BYTE PTR [rax]
    40fc:	25 75 0a 00 45       	and    eax,0x45000a75
    4101:	4c                   	rex.WR
    4102:	45                   	rex.RB
    4103:	4d 5f                	rex.WRB pop r15
    4105:	41                   	rex.B
    4106:	4d 20 3a             	rex.WRB and BYTE PTR [r10],r15b
    4109:	20 25 75 0a 00 49    	and    BYTE PTR [rip+0x49000a75],ah        # 49004b84 <_end+0x48ffeb6c>
    410f:	4e 58                	rex.WRX pop rax
    4111:	53                   	push   rbx
    4112:	3a 20                	cmp    ah,BYTE PTR [rax]
    4114:	20 20                	and    BYTE PTR [rax],ah
    4116:	20 20                	and    BYTE PTR [rax],ah
    4118:	00 25 75 20 00 4e    	add    BYTE PTR [rip+0x4e002075],ah        # 4e006193 <_end+0x4e00017b>
    411e:	45 58                	rex.RB pop r8
    4120:	54                   	push   rsp
    4121:	3a 20                	cmp    ah,BYTE PTR [rax]
    4123:	20 20                	and    BYTE PTR [rax],ah
    4125:	20 20                	and    BYTE PTR [rax],ah
    4127:	00 50 52             	add    BYTE PTR [rax+0x52],dl
    412a:	45 56                	rex.RB push r14
    412c:	3a 20                	cmp    ah,BYTE PTR [rax]
    412e:	20 20                	and    BYTE PTR [rax],ah
    4130:	20 20                	and    BYTE PTR [rax],ah
    4132:	00 48 41             	add    BYTE PTR [rax+0x41],cl
    4135:	53                   	push   rbx
    4136:	48 3a 20             	rex.W cmp spl,BYTE PTR [rax]
    4139:	20 20                	and    BYTE PTR [rax],ah
    413b:	20 20                	and    BYTE PTR [rax],ah
    413d:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    4140:	52                   	push   rdx
    4141:	3a 00                	cmp    al,BYTE PTR [rax]
    4143:	25 2d 33 32 73       	and    eax,0x7332332d
    4148:	0a 00                	or     al,BYTE PTR [rax]
    414a:	2f                   	(bad)
    414b:	72 6f                	jb     41bc <_IO_stdin_used+0x1bc>
    414d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    414e:	74 2f                	je     417f <_IO_stdin_used+0x17f>
    4150:	68 61 73 68 4d       	push   0x4d687361
    4155:	61                   	(bad)
    4156:	70 2f                	jo     4187 <_IO_stdin_used+0x187>
    4158:	73 72                	jae    41cc <_IO_stdin_used+0x1cc>
    415a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    415c:	75 74                	jne    41d2 <_IO_stdin_used+0x1d2>
    415e:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
    4165:	00 
    4166:	66 69 6c 65 6e 61 6d 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6d61
    416d:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
    4170:	72 6f                	jb     41e1 <_IO_stdin_used+0x1e1>
    4172:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4173:	74 2f                	je     41a4 <_IO_stdin_used+0x1a4>
    4175:	68 61 73 68 4d       	push   0x4d687361
    417a:	61                   	(bad)
    417b:	70 2f                	jo     41ac <_IO_stdin_used+0x1ac>
    417d:	73 72                	jae    41f1 <_IO_stdin_used+0x1f1>
    417f:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    4181:	74 65                	je     41e8 <_IO_stdin_used+0x1e8>
    4183:	73 74                	jae    41f9 <_IO_stdin_used+0x1f9>
    4185:	73 2e                	jae    41b5 <_IO_stdin_used+0x1b5>
    4187:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    418a:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    418d:	6c                   	ins    BYTE PTR es:[rdi],dx
    418e:	65 00 42 75          	add    BYTE PTR gs:[rdx+0x75],al
    4192:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    4195:	74 20                	je     41b7 <_IO_stdin_used+0x1b7>
    4197:	69 6e 64 65 78 2c 42 	imul   ebp,DWORD PTR [rsi+0x64],0x422c7865
    419e:	75 63                	jne    4203 <_IO_stdin_used+0x203>
    41a0:	6b 65 74 20          	imul   esp,DWORD PTR [rbp+0x74],0x20
    41a4:	73 69                	jae    420f <_IO_stdin_used+0x20f>
    41a6:	7a 65                	jp     420d <_IO_stdin_used+0x20d>
    41a8:	0a 00                	or     al,BYTE PTR [rax]
    41aa:	25 75 2c 25 75       	and    eax,0x75252c75
    41af:	0a 00                	or     al,BYTE PTR [rax]
    41b1:	41 56                	push   r14
    41b3:	45 52                	rex.RB push r10
    41b5:	41                   	rex.B
    41b6:	47                   	rex.RXB
    41b7:	45 20 43 4f          	and    BYTE PTR [r11+0x4f],r8b
    41bb:	4c                   	rex.WR
    41bc:	4c                   	rex.WR
    41bd:	49 53                	rex.WB push r11
    41bf:	49                   	rex.WB
    41c0:	4f                   	rex.WRXB
    41c1:	4e 53                	rex.WRX push rbx
    41c3:	3a 20                	cmp    ah,BYTE PTR [rax]
    41c5:	25 2e 32 66 0a       	and    eax,0xa66322e
    41ca:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    41cd:	41                   	rex.B
    41ce:	4e                   	rex.WRX
    41cf:	44                   	rex.R
    41d0:	41 52                	push   r10
    41d2:	54                   	push   rsp
    41d3:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    41d7:	49                   	rex.WB
    41d8:	41 54                	push   r12
    41da:	49                   	rex.WB
    41db:	4f                   	rex.WRXB
    41dc:	4e 3a 20             	rex.WRX cmp r12b,BYTE PTR [rax]
    41df:	25 2e 32 66 0a       	and    eax,0xa66322e
    41e4:	00 54 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dl
    41e8:	74 20                	je     420a <_IO_stdin_used+0x20a>
    41ea:	69 6e 64 65 78 2c 54 	imul   ebp,DWORD PTR [rsi+0x64],0x542c7865
    41f1:	69 6d 65 20 6d 73 0a 	imul   ebp,DWORD PTR [rbp+0x65],0xa736d20
    41f8:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    41fc:	65 5f                	gs pop rdi
    41fe:	61                   	(bad)
    41ff:	72 72                	jb     4273 <_IO_stdin_used+0x273>
    4201:	61                   	(bad)
    4202:	79 00                	jns    4204 <_IO_stdin_used+0x204>
    4204:	25 75 2c 25 2e       	and    eax,0x2e252c75
    4209:	32 66 0a             	xor    ah,BYTE PTR [rsi+0xa]
    420c:	00 41 56             	add    BYTE PTR [rcx+0x56],al
    420f:	45 52                	rex.RB push r10
    4211:	41                   	rex.B
    4212:	47                   	rex.RXB
    4213:	45 20 53 45          	and    BYTE PTR [r11+0x45],r10b
    4217:	41 52                	push   r10
    4219:	43                   	rex.XB
    421a:	48 20 54 49 4d       	rex.W and BYTE PTR [rcx+rcx*2+0x4d],dl
    421f:	45 3a 20             	cmp    r12b,BYTE PTR [r8]
    4222:	25 2e 32 66 20       	and    eax,0x2066322e
    4227:	6d                   	ins    DWORD PTR es:[rdi],dx
    4228:	73 0a                	jae    4234 <_IO_stdin_used+0x234>
    422a:	00 53 54             	add    BYTE PTR [rbx+0x54],dl
    422d:	41                   	rex.B
    422e:	4e                   	rex.WRX
    422f:	44                   	rex.R
    4230:	41 52                	push   r10
    4232:	54                   	push   rsp
    4233:	20 44 45 56          	and    BYTE PTR [rbp+rax*2+0x56],al
    4237:	49                   	rex.WB
    4238:	41 54                	push   r12
    423a:	49                   	rex.WB
    423b:	4f                   	rex.WRXB
    423c:	4e 20 3a             	rex.WRX and BYTE PTR [rdx],r15b
    423f:	20 25 2e 32 66 20    	and    BYTE PTR [rip+0x2066322e],ah        # 20667473 <_end+0x2066145b>
    4245:	6d                   	ins    DWORD PTR es:[rdi],dx
    4246:	73 0a                	jae    4252 <_IO_stdin_used+0x252>
    4248:	00 50 45             	add    BYTE PTR [rax+0x45],dl
    424b:	52                   	push   rdx
    424c:	43                   	rex.XB
    424d:	45                   	rex.RB
    424e:	4e 54                	rex.WRX push rsp
    4250:	41                   	rex.B
    4251:	47                   	rex.RXB
    4252:	45 20 4f 46          	and    BYTE PTR [r15+0x46],r9b
    4256:	20 45 52             	and    BYTE PTR [rbp+0x52],al
    4259:	52                   	push   rdx
    425a:	4f 52                	rex.WRXB push r10
    425c:	3a 20                	cmp    ah,BYTE PTR [rax]
    425e:	25 2e 32 66 0a       	and    eax,0xa66322e
    4263:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    4266:	74 65                	je     42cd <_IO_stdin_used+0x2cd>
    4268:	73 74                	jae    42de <_IO_stdin_used+0x2de>
    426a:	5f                   	pop    rdi
    426b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    426c:	61                   	(bad)
    426d:	6d                   	ins    DWORD PTR es:[rdi],dx
    426e:	65 00 5f 6d          	add    BYTE PTR gs:[rdi+0x6d],bl
    4272:	6d                   	ins    DWORD PTR es:[rdi],dx
    4273:	5f                   	pop    rdi
    4274:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    4277:	33 32                	xor    esi,DWORD PTR [rdx]
    4279:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    427c:	72 6d                	jb     42eb <_IO_stdin_used+0x2eb>
    427e:	75 72                	jne    42f2 <_IO_stdin_used+0x2f2>
    4280:	33 00                	xor    eax,DWORD PTR [rax]
    4282:	6d                   	ins    DWORD PTR es:[rdi],dx
    4283:	75 72                	jne    42f7 <_IO_stdin_used+0x2f7>
    4285:	6d                   	ins    DWORD PTR es:[rdi],dx
    4286:	75 72                	jne    42fa <_IO_stdin_used+0x2fa>
    4288:	32 00                	xor    al,BYTE PTR [rax]
    428a:	73 75                	jae    4301 <_IO_stdin_used+0x301>
    428c:	6d                   	ins    DWORD PTR es:[rdi],dx
    428d:	00 70 6c             	add    BYTE PTR [rax+0x6c],dh
    4290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4291:	74 2f                	je     42c2 <_IO_stdin_used+0x2c2>
    4293:	73 75                	jae    430a <_IO_stdin_used+0x30a>
    4295:	6d                   	ins    DWORD PTR es:[rdi],dx
    4296:	2f                   	(bad)
    4297:	73 75                	jae    430e <_IO_stdin_used+0x30e>
    4299:	6d                   	ins    DWORD PTR es:[rdi],dx
    429a:	5f                   	pop    rdi
    429b:	73 65                	jae    4302 <_IO_stdin_used+0x302>
    429d:	61                   	(bad)
    429e:	72 63                	jb     4303 <_IO_stdin_used+0x303>
    42a0:	68 5f 74 69 6d       	push   0x6d69745f
    42a5:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42aa:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    42ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    42ae:	65 72 33             	gs jb  42e4 <_IO_stdin_used+0x2e4>
    42b1:	32 00                	xor    al,BYTE PTR [rax]
    42b3:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42b5:	66 00 70 6c          	data16 add BYTE PTR [rax+0x6c],dh
    42b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42ba:	74 2f                	je     42eb <_IO_stdin_used+0x2eb>
    42bc:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42be:	66 2f                	data16 (bad)
    42c0:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    42c2:	66 5f                	pop    di
    42c4:	73 65                	jae    432b <_IO_stdin_used+0x32b>
    42c6:	61                   	(bad)
    42c7:	72 63                	jb     432c <_IO_stdin_used+0x32c>
    42c9:	68 5f 74 69 6d       	push   0x6d69745f
    42ce:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    42d3:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    42d6:	6d                   	ins    DWORD PTR es:[rdi],dx
    42d7:	5f                   	pop    rdi
    42d8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    42db:	33 32                	xor    esi,DWORD PTR [rdx]
    42dd:	55                   	push   rbp
    42de:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42df:	72 6f                	jb     4350 <_IO_stdin_used+0x350>
    42e1:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e2:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e3:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    42e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    42e7:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    42ea:	72 69                	jb     4355 <_IO_stdin_used+0x355>
    42ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    42ed:	67 5f                	addr32 pop rdi
    42ef:	74 2a                	je     431b <_IO_stdin_used+0x31b>
    42f1:	20 62 75             	and    BYTE PTR [rdx+0x75],ah
    42f4:	69 6c 64 53 74 72 69 	imul   ebp,DWORD PTR [rsp+riz*2+0x53],0x6e697274
    42fb:	6e 
    42fc:	67 41 72 72          	addr32 rex.B jb 4372 <_IO_stdin_used+0x372>
    4300:	61                   	(bad)
    4301:	79 28                	jns    432b <_IO_stdin_used+0x32b>
    4303:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4306:	72 2a                	jb     4332 <_IO_stdin_used+0x332>
    4308:	2c 20                	sub    al,0x20
    430a:	75 69                	jne    4375 <_IO_stdin_used+0x375>
    430c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    430d:	74 33                	je     4342 <_IO_stdin_used+0x342>
    430f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4312:	29 00                	sub    DWORD PTR [rax],eax
    4314:	00 00                	add    BYTE PTR [rax],al
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	2f                   	(bad)
    4319:	72 6f                	jb     438a <_IO_stdin_used+0x38a>
    431b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    431c:	74 2f                	je     434d <_IO_stdin_used+0x34d>
    431e:	68 61 73 68 4d       	push   0x4d687361
    4323:	61                   	(bad)
    4324:	70 2f                	jo     4355 <_IO_stdin_used+0x355>
    4326:	73 72                	jae    439a <_IO_stdin_used+0x39a>
    4328:	63 2f                	movsxd ebp,DWORD PTR [rdi]
    432a:	68 61 73 68 5f       	push   0x5f687361
    432f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4330:	61                   	(bad)
    4331:	70 2e                	jo     4361 <_IO_stdin_used+0x361>
    4333:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
    4336:	00 00                	add    BYTE PTR [rax],al
    4338:	75 69                	jne    43a3 <_IO_stdin_used+0x3a3>
    433a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    433b:	74 33                	je     4370 <_IO_stdin_used+0x370>
    433d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4340:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4343:	73 68                	jae    43ad <_IO_stdin_used+0x3ad>
    4345:	4d 61                	rex.WRB (bad)
    4347:	70 41                	jo     438a <_IO_stdin_used+0x38a>
    4349:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
    434d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    434f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4351:	74 28                	je     437b <_IO_stdin_used+0x37b>
    4353:	48 61                	rex.W (bad)
    4355:	73 68                	jae    43bf <_IO_stdin_used+0x3bf>
    4357:	4d 61                	rex.WRB (bad)
    4359:	70 2a                	jo     4385 <_IO_stdin_used+0x385>
    435b:	2c 20                	sub    al,0x20
    435d:	64 61                	fs (bad)
    435f:	74 61                	je     43c2 <_IO_stdin_used+0x3c2>
    4361:	5f                   	pop    rdi
    4362:	74 29                	je     438d <_IO_stdin_used+0x38d>
    4364:	00 00                	add    BYTE PTR [rax],al
    4366:	00 00                	add    BYTE PTR [rax],al
    4368:	75 69                	jne    43d3 <_IO_stdin_used+0x3d3>
    436a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    436b:	74 33                	je     43a0 <_IO_stdin_used+0x3a0>
    436d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4370:	20 68 61             	and    BYTE PTR [rax+0x61],ch
    4373:	73 68                	jae    43dd <_IO_stdin_used+0x3dd>
    4375:	4d 61                	rex.WRB (bad)
    4377:	70 50                	jo     43c9 <_IO_stdin_used+0x3c9>
    4379:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    437a:	70 45                	jo     43c1 <_IO_stdin_used+0x3c1>
    437c:	6c                   	ins    BYTE PTR es:[rdi],dx
    437d:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    437f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4381:	74 28                	je     43ab <_IO_stdin_used+0x3ab>
    4383:	48 61                	rex.W (bad)
    4385:	73 68                	jae    43ef <_IO_stdin_used+0x3ef>
    4387:	4d 61                	rex.WRB (bad)
    4389:	70 2a                	jo     43b5 <_IO_stdin_used+0x3b5>
    438b:	2c 20                	sub    al,0x20
    438d:	64 61                	fs (bad)
    438f:	74 61                	je     43f2 <_IO_stdin_used+0x3f2>
    4391:	5f                   	pop    rdi
    4392:	74 29                	je     43bd <_IO_stdin_used+0x3bd>
    4394:	00 00                	add    BYTE PTR [rax],al
    4396:	00 00                	add    BYTE PTR [rax],al
    4398:	62 6f 6f 6c 20       	(bad)
    439d:	68 61 73 68 4d       	push   0x4d687361
    43a2:	61                   	(bad)
    43a3:	70 53                	jo     43f8 <_IO_stdin_used+0x3f8>
    43a5:	65 61                	gs (bad)
    43a7:	72 63                	jb     440c <_IO_stdin_used+0x40c>
    43a9:	68 45 6c 65 6d       	push   0x6d656c45
    43ae:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43b0:	74 28                	je     43da <_IO_stdin_used+0x3da>
    43b2:	48 61                	rex.W (bad)
    43b4:	73 68                	jae    441e <_IO_stdin_used+0x41e>
    43b6:	4d 61                	rex.WRB (bad)
    43b8:	70 2a                	jo     43e4 <_IO_stdin_used+0x3e4>
    43ba:	2c 20                	sub    al,0x20
    43bc:	64 61                	fs (bad)
    43be:	74 61                	je     4421 <_IO_stdin_used+0x421>
    43c0:	5f                   	pop    rdi
    43c1:	74 29                	je     43ec <_IO_stdin_used+0x3ec>
    43c3:	00 00                	add    BYTE PTR [rax],al
    43c5:	00 00                	add    BYTE PTR [rax],al
    43c7:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    43ca:	74 20                	je     43ec <_IO_stdin_used+0x3ec>
    43cc:	73 65                	jae    4433 <_IO_stdin_used+0x433>
    43ce:	61                   	(bad)
    43cf:	72 63                	jb     4434 <_IO_stdin_used+0x434>
    43d1:	68 45 6c 65 6d       	push   0x6d656c45
    43d6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    43d8:	74 28                	je     4402 <_IO_stdin_used+0x402>
    43da:	4c 69 73 74 2a 2c 20 	imul   r14,QWORD PTR [rbx+0x74],0x64202c2a
    43e1:	64 
    43e2:	61                   	(bad)
    43e3:	74 61                	je     4446 <_IO_stdin_used+0x446>
    43e5:	5f                   	pop    rdi
    43e6:	74 29                	je     4411 <_IO_stdin_used+0x411>
	...
    43f0:	69 6e 74 20 70 75 73 	imul   ebp,DWORD PTR [rsi+0x74],0x73757020
    43f7:	68 4c 69 73 74       	push   0x7473694c
    43fc:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    43fe:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4400:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4404:	74 2a                	je     4430 <_IO_stdin_used+0x430>
    4406:	2c 20                	sub    al,0x20
    4408:	64 61                	fs (bad)
    440a:	74 61                	je     446d <_IO_stdin_used+0x46d>
    440c:	5f                   	pop    rdi
    440d:	74 29                	je     4438 <_IO_stdin_used+0x438>
    440f:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4412:	74 20                	je     4434 <_IO_stdin_used+0x434>
    4414:	70 6f                	jo     4485 <_IO_stdin_used+0x485>
    4416:	70 4c                	jo     4464 <_IO_stdin_used+0x464>
    4418:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
    441f:	28 4c 69 73          	sub    BYTE PTR [rcx+rbp*2+0x73],cl
    4423:	74 2a                	je     444f <_IO_stdin_used+0x44f>
    4425:	2c 20                	sub    al,0x20
    4427:	64 61                	fs (bad)
    4429:	74 61                	je     448c <_IO_stdin_used+0x48c>
    442b:	5f                   	pop    rdi
    442c:	74 29                	je     4457 <_IO_stdin_used+0x457>
    442e:	00 00                	add    BYTE PTR [rax],al
    4430:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4433:	72 2a                	jb     445f <_IO_stdin_used+0x45f>
    4435:	20 72 65             	and    BYTE PTR [rdx+0x65],dh
    4438:	61                   	(bad)
    4439:	64 46 69 6c 65 28 63 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x28],0x736e6f63
    4440:	6f 6e 73 
    4443:	74 20                	je     4465 <_IO_stdin_used+0x465>
    4445:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4448:	72 2a                	jb     4474 <_IO_stdin_used+0x474>
    444a:	2c 20                	sub    al,0x20
    444c:	73 69                	jae    44b7 <_IO_stdin_used+0x4b7>
    444e:	7a 65                	jp     44b5 <_IO_stdin_used+0x4b5>
    4450:	5f                   	pop    rdi
    4451:	74 2a                	je     447d <_IO_stdin_used+0x47d>
    4453:	29 00                	sub    DWORD PTR [rax],eax
    4455:	00 00                	add    BYTE PTR [rax],al
    4457:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    445a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    445b:	74 33                	je     4490 <_IO_stdin_used+0x490>
    445d:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4460:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    4463:	75 6e                	jne    44d3 <_IO_stdin_used+0x4d3>
    4465:	74 4c                	je     44b3 <_IO_stdin_used+0x4b3>
    4467:	69 6e 65 73 28 63 68 	imul   ebp,DWORD PTR [rsi+0x65],0x68632873
    446e:	61                   	(bad)
    446f:	72 2a                	jb     449b <_IO_stdin_used+0x49b>
    4471:	2c 20                	sub    al,0x20
    4473:	73 69                	jae    44de <_IO_stdin_used+0x4de>
    4475:	7a 65                	jp     44dc <_IO_stdin_used+0x4dc>
    4477:	5f                   	pop    rdi
    4478:	74 29                	je     44a3 <_IO_stdin_used+0x4a3>
    447a:	00 00                	add    BYTE PTR [rax],al
    447c:	00 00                	add    BYTE PTR [rax],al
    447e:	00 00                	add    BYTE PTR [rax],al
    4480:	76 6f                	jbe    44f1 <_IO_stdin_used+0x4f1>
    4482:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x43747365
    4489:	43 
    448a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    448b:	6c                   	ins    BYTE PTR es:[rdi],dx
    448c:	6c                   	ins    BYTE PTR es:[rdi],dx
    448d:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    4494:	46                   	rex.RX
    4495:	49                   	rex.WB
    4496:	4c                   	rex.WR
    4497:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    449b:	68 61 73 68 5f       	push   0x5f687361
    44a0:	74 2c                	je     44ce <_IO_stdin_used+0x4ce>
    44a2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44a6:	74 44                	je     44ec <_IO_stdin_used+0x4ec>
    44a8:	61                   	(bad)
    44a9:	74 61                	je     450c <_IO_stdin_used+0x50c>
    44ab:	29 00                	sub    DWORD PTR [rax],eax
    44ad:	00 00                	add    BYTE PTR [rax],al
    44af:	00 76 6f             	add    BYTE PTR [rsi+0x6f],dh
    44b2:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x53747365
    44b9:	53 
    44ba:	65 61                	gs (bad)
    44bc:	72 63                	jb     4521 <_IO_stdin_used+0x521>
    44be:	68 54 69 6d 65       	push   0x656d6954
    44c3:	28 46 49             	sub    BYTE PTR [rsi+0x49],al
    44c6:	4c                   	rex.WR
    44c7:	45 2a 2c 20          	sub    r13b,BYTE PTR [r8+riz*1]
    44cb:	68 61 73 68 5f       	push   0x5f687361
    44d0:	74 2c                	je     44fe <_IO_stdin_used+0x4fe>
    44d2:	20 54 65 73          	and    BYTE PTR [rbp+riz*2+0x73],dl
    44d6:	74 44                	je     451c <_IO_stdin_used+0x51c>
    44d8:	61                   	(bad)
    44d9:	74 61                	je     453c <_IO_stdin_used+0x53c>
    44db:	2c 20                	sub    al,0x20
    44dd:	75 69                	jne    4548 <_IO_stdin_used+0x548>
    44df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44e0:	74 33                	je     4515 <_IO_stdin_used+0x515>
    44e2:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    44e5:	29 00                	sub    DWORD PTR [rax],eax
    44e7:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    44eb:	62 6c 65             	(bad)
    44ee:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    44f1:	61                   	(bad)
    44f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44f3:	64 61                	fs (bad)
    44f5:	72 74                	jb     456b <_IO_stdin_used+0x56b>
    44f7:	44                   	rex.R
    44f8:	65 76 69             	gs jbe 4564 <_IO_stdin_used+0x564>
    44fb:	61                   	(bad)
    44fc:	74 69                	je     4567 <_IO_stdin_used+0x567>
    44fe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4500:	54                   	push   rsp
    4501:	69 6d 65 28 64 6f 75 	imul   ebp,DWORD PTR [rbp+0x65],0x756f6428
    4508:	62 6c 65             	(bad)  {k2}
    450b:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    450e:	75 69                	jne    4579 <_IO_stdin_used+0x579>
    4510:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4511:	74 33                	je     4546 <_IO_stdin_used+0x546>
    4513:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4516:	2c 20                	sub    al,0x20
    4518:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    451a:	75 62                	jne    457e <_IO_stdin_used+0x57e>
    451c:	6c                   	ins    BYTE PTR es:[rdi],dx
    451d:	65 29 00             	sub    DWORD PTR gs:[rax],eax
    4520:	76 6f                	jbe    4591 <_IO_stdin_used+0x591>
    4522:	69 64 20 74 65 73 74 	imul   esp,DWORD PTR [rax+riz*1+0x74],0x41747365
    4529:	41 
    452a:	6c                   	ins    BYTE PTR es:[rdi],dx
    452b:	6c                   	ins    BYTE PTR es:[rdi],dx
    452c:	28 63 6f             	sub    BYTE PTR [rbx+0x6f],ah
    452f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4530:	73 74                	jae    45a6 <_IO_stdin_used+0x5a6>
    4532:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    4535:	61                   	(bad)
    4536:	72 2a                	jb     4562 <_IO_stdin_used+0x562>
    4538:	2c 20                	sub    al,0x20
    453a:	75 69                	jne    45a5 <_IO_stdin_used+0x5a5>
    453c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    453d:	74 33                	je     4572 <_IO_stdin_used+0x572>
    453f:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4542:	2c 20                	sub    al,0x20
    4544:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4547:	73 74                	jae    45bd <_IO_stdin_used+0x5bd>
    4549:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    454c:	61                   	(bad)
    454d:	72 2a                	jb     4579 <_IO_stdin_used+0x579>
    454f:	29 00                	sub    DWORD PTR [rax],eax
    4551:	00 00                	add    BYTE PTR [rax],al
    4553:	00 00                	add    BYTE PTR [rax],al
    4555:	00 00                	add    BYTE PTR [rax],al
    4557:	00 0a                	add    BYTE PTR [rdx],cl
    4559:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    455e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4563:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4568:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    456d:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4572:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    4577:	00 2d 2d 2d 2d 2d    	add    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2d72aa <_end+0x2d2d1292>
    457d:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4582:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4587:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    458c:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4591:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    4596:	00 00                	add    BYTE PTR [rax],al
    4598:	70 6c                	jo     4606 <_IO_stdin_used+0x606>
    459a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    459b:	74 2f                	je     45cc <_IO_stdin_used+0x5cc>
    459d:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a0:	33 32                	xor    esi,DWORD PTR [rdx]
    45a2:	2f                   	(bad)
    45a3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45a6:	33 32                	xor    esi,DWORD PTR [rdx]
    45a8:	5f                   	pop    rdi
    45a9:	73 65                	jae    4610 <_IO_stdin_used+0x610>
    45ab:	61                   	(bad)
    45ac:	72 63                	jb     4611 <_IO_stdin_used+0x611>
    45ae:	68 5f 74 69 6d       	push   0x6d69745f
    45b3:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    45c0:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45c5:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45ca:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45cf:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d4:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45d9:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    45de:	00 00                	add    BYTE PTR [rax],al
    45e0:	70 6c                	jo     464e <_IO_stdin_used+0x64e>
    45e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45e3:	74 2f                	je     4614 <_IO_stdin_used+0x614>
    45e5:	5f                   	pop    rdi
    45e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e7:	6d                   	ins    DWORD PTR es:[rdi],dx
    45e8:	5f                   	pop    rdi
    45e9:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45ec:	33 32                	xor    esi,DWORD PTR [rdx]
    45ee:	2f                   	(bad)
    45ef:	5f                   	pop    rdi
    45f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f1:	6d                   	ins    DWORD PTR es:[rdi],dx
    45f2:	5f                   	pop    rdi
    45f3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    45f6:	33 32                	xor    esi,DWORD PTR [rdx]
    45f8:	5f                   	pop    rdi
    45f9:	73 65                	jae    4660 <_IO_stdin_used+0x660>
    45fb:	61                   	(bad)
    45fc:	72 63                	jb     4661 <_IO_stdin_used+0x661>
    45fe:	68 5f 74 69 6d       	push   0x6d69745f
    4603:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
	...
    4610:	70 6c                	jo     467e <_IO_stdin_used+0x67e>
    4612:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4613:	74 2f                	je     4644 <_IO_stdin_used+0x644>
    4615:	6d                   	ins    DWORD PTR es:[rdi],dx
    4616:	75 72                	jne    468a <_IO_stdin_used+0x68a>
    4618:	6d                   	ins    DWORD PTR es:[rdi],dx
    4619:	75 72                	jne    468d <_IO_stdin_used+0x68d>
    461b:	32 2f                	xor    ch,BYTE PTR [rdi]
    461d:	6d                   	ins    DWORD PTR es:[rdi],dx
    461e:	75 72                	jne    4692 <_IO_stdin_used+0x692>
    4620:	6d                   	ins    DWORD PTR es:[rdi],dx
    4621:	75 72                	jne    4695 <_IO_stdin_used+0x695>
    4623:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    4626:	65 61                	gs (bad)
    4628:	72 63                	jb     468d <_IO_stdin_used+0x68d>
    462a:	68 5f 74 69 6d       	push   0x6d69745f
    462f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4634:	00 00                	add    BYTE PTR [rax],al
    4636:	00 00                	add    BYTE PTR [rax],al
    4638:	70 6c                	jo     46a6 <_IO_stdin_used+0x6a6>
    463a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    463b:	74 2f                	je     466c <_IO_stdin_used+0x66c>
    463d:	61                   	(bad)
    463e:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4640:	65 72 33             	gs jb  4676 <_IO_stdin_used+0x676>
    4643:	32 2f                	xor    ch,BYTE PTR [rdi]
    4645:	61                   	(bad)
    4646:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    4648:	65 72 33             	gs jb  467e <_IO_stdin_used+0x67e>
    464b:	32 5f 73             	xor    bl,BYTE PTR [rdi+0x73]
    464e:	65 61                	gs (bad)
    4650:	72 63                	jb     46b5 <_IO_stdin_used+0x6b5>
    4652:	68 5f 74 69 6d       	push   0x6d69745f
    4657:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    465c:	00 00                	add    BYTE PTR [rax],al
    465e:	00 00                	add    BYTE PTR [rax],al
    4660:	70 6c                	jo     46ce <_IO_stdin_used+0x6ce>
    4662:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4663:	74 2f                	je     4694 <_IO_stdin_used+0x694>
    4665:	5f                   	pop    rdi
    4666:	6d                   	ins    DWORD PTR es:[rdi],dx
    4667:	6d                   	ins    DWORD PTR es:[rdi],dx
    4668:	5f                   	pop    rdi
    4669:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    466c:	33 32                	xor    esi,DWORD PTR [rdx]
    466e:	55                   	push   rbp
    466f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4670:	72 6f                	jb     46e1 <_IO_stdin_used+0x6e1>
    4672:	6c                   	ins    BYTE PTR es:[rdi],dx
    4673:	6c                   	ins    BYTE PTR es:[rdi],dx
    4674:	2f                   	(bad)
    4675:	5f                   	pop    rdi
    4676:	6d                   	ins    DWORD PTR es:[rdi],dx
    4677:	6d                   	ins    DWORD PTR es:[rdi],dx
    4678:	5f                   	pop    rdi
    4679:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    467c:	33 32                	xor    esi,DWORD PTR [rdx]
    467e:	55                   	push   rbp
    467f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4680:	72 6f                	jb     46f1 <__GNU_EH_FRAME_HDR+0x1>
    4682:	6c                   	ins    BYTE PTR es:[rdi],dx
    4683:	6c                   	ins    BYTE PTR es:[rdi],dx
    4684:	5f                   	pop    rdi
    4685:	73 65                	jae    46ec <_IO_stdin_used+0x6ec>
    4687:	61                   	(bad)
    4688:	72 63                	jb     46ed <_IO_stdin_used+0x6ed>
    468a:	68 5f 74 69 6d       	push   0x6d69745f
    468f:	65 2e 63 73 76       	gs movsxd esi,DWORD PTR gs:[rbx+0x76]
    4694:	00 00                	add    BYTE PTR [rax],al
    4696:	00 00                	add    BYTE PTR [rax],al
    4698:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    469a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    469b:	61                   	(bad)
    469c:	74 20                	je     46be <_IO_stdin_used+0x6be>
    469e:	73 74                	jae    4714 <__GNU_EH_FRAME_HDR+0x24>
    46a0:	61                   	(bad)
    46a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46a2:	64 61                	fs (bad)
    46a4:	72 74                	jb     471a <__GNU_EH_FRAME_HDR+0x2a>
    46a6:	44                   	rex.R
    46a7:	65 76 69             	gs jbe 4713 <__GNU_EH_FRAME_HDR+0x23>
    46aa:	61                   	(bad)
    46ab:	74 69                	je     4716 <__GNU_EH_FRAME_HDR+0x26>
    46ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46af:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    46b1:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    46b3:	69 73 69 6f 6e 73 28 	imul   esi,DWORD PTR [rbx+0x69],0x28736e6f
    46ba:	48 61                	rex.W (bad)
    46bc:	73 68                	jae    4726 <__GNU_EH_FRAME_HDR+0x36>
    46be:	4d 61                	rex.WRB (bad)
    46c0:	70 2a                	jo     46ec <_IO_stdin_used+0x6ec>
    46c2:	2c 20                	sub    al,0x20
    46c4:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    46c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46c7:	61                   	(bad)
    46c8:	74 29                	je     46f3 <__GNU_EH_FRAME_HDR+0x3>
    46ca:	00 00                	add    BYTE PTR [rax],al
    46cc:	00 00                	add    BYTE PTR [rax],al
    46ce:	00 00                	add    BYTE PTR [rax],al
    46d0:	02 00                	add    al,BYTE PTR [rax]
    46d2:	00 00                	add    BYTE PTR [rax],al
    46d4:	01 00                	add    DWORD PTR [rax],eax
    46d6:	00 00                	add    BYTE PTR [rax],al
    46d8:	03 00                	add    eax,DWORD PTR [rax]
    46da:	00 00                	add    BYTE PTR [rax],al
    46dc:	02 00                	add    al,BYTE PTR [rax]
    46de:	00 00                	add    BYTE PTR [rax],al
    46e0:	04 00                	add    al,0x0
    46e2:	00 00                	add    BYTE PTR [rax],al
    46e4:	03 00                	add    eax,DWORD PTR [rax]
	...
    46ee:	59                   	pop    rcx
    46ef:	40                   	rex

Disassembly of section .eh_frame_hdr:

00000000000046f0 <__GNU_EH_FRAME_HDR>:
    46f0:	01 1b                	add    DWORD PTR [rbx],ebx
    46f2:	03 3b                	add    edi,DWORD PTR [rbx]
    46f4:	14 01                	adc    al,0x1
    46f6:	00 00                	add    BYTE PTR [rax],al
    46f8:	21 00                	and    DWORD PTR [rax],eax
    46fa:	00 00                	add    BYTE PTR [rax],al
    46fc:	30 c9                	xor    cl,cl
    46fe:	ff                   	(bad)
    46ff:	ff 48 01             	dec    DWORD PTR [rax+0x1]
    4702:	00 00                	add    BYTE PTR [rax],al
    4704:	e0 ca                	loopne 46d0 <_IO_stdin_used+0x6d0>
    4706:	ff                   	(bad)
    4707:	ff 70 01             	push   QWORD PTR [rax+0x1]
    470a:	00 00                	add    BYTE PTR [rax],al
    470c:	f0 ca ff ff          	lock retf 0xffff
    4710:	88 01                	mov    BYTE PTR [rcx],al
    4712:	00 00                	add    BYTE PTR [rax],al
    4714:	20 cb                	and    bl,cl
    4716:	ff                   	(bad)
    4717:	ff 30                	push   QWORD PTR [rax]
    4719:	01 00                	add    DWORD PTR [rax],eax
    471b:	00 10                	add    BYTE PTR [rax],dl
    471d:	cc                   	int3
    471e:	ff                   	(bad)
    471f:	ff a8 01 00 00 40    	jmp    FWORD PTR [rax+0x40000001]
    4725:	cd ff                	int    0xff
    4727:	ff f4                	push   rsp
    4729:	01 00                	add    DWORD PTR [rax],eax
    472b:	00 f0                	add    al,dh
    472d:	cd ff                	int    0xff
    472f:	ff 20                	jmp    QWORD PTR [rax]
    4731:	02 00                	add    al,BYTE PTR [rax]
    4733:	00 a0 d0 ff ff 4c    	add    BYTE PTR [rax+0x4cffffd0],ah
    4739:	02 00                	add    al,BYTE PTR [rax]
    473b:	00 70 d1             	add    BYTE PTR [rax-0x2f],dh
    473e:	ff                   	(bad)
    473f:	ff 9c 02 00 00 00 d2 	call   FWORD PTR [rdx+rax*1-0x2e000000]
    4746:	ff                   	(bad)
    4747:	ff                   	(bad)
    4748:	b8 02 00 00 70       	mov    eax,0x70000002
    474d:	d2 ff                	sar    bh,cl
    474f:	ff e4                	jmp    rsp
    4751:	02 00                	add    al,BYTE PTR [rax]
    4753:	00 30                	add    BYTE PTR [rax],dh
    4755:	d3 ff                	sar    edi,cl
    4757:	ff 20                	jmp    QWORD PTR [rax]
    4759:	03 00                	add    eax,DWORD PTR [rax]
    475b:	00 50 d4             	add    BYTE PTR [rax-0x2c],dl
    475e:	ff                   	(bad)
    475f:	ff 40 03             	inc    DWORD PTR [rax+0x3]
    4762:	00 00                	add    BYTE PTR [rax],al
    4764:	a0 d4 ff ff 54 03 00 	movabs al,ds:0xe000000354ffffd4
    476b:	00 e0 
    476d:	d4                   	(bad)
    476e:	ff                   	(bad)
    476f:	ff 68 03             	jmp    FWORD PTR [rax+0x3]
    4772:	00 00                	add    BYTE PTR [rax],al
    4774:	90                   	nop
    4775:	d5 ff ff 7c 03 00    	ud0    r31,QWORD PTR [r27+r24*1+0x0]
    477b:	00 00                	add    BYTE PTR [rax],al
    477d:	d7                   	xlat   BYTE PTR ds:[rbx]
    477e:	ff                   	(bad)
    477f:	ff 90 03 00 00 80    	call   QWORD PTR [rax-0x7ffffffd]
    4785:	d7                   	xlat   BYTE PTR ds:[rbx]
    4786:	ff                   	(bad)
    4787:	ff a4 03 00 00 d0 d7 	jmp    QWORD PTR [rbx+rax*1-0x28300000]
    478e:	ff                   	(bad)
    478f:	ff                   	(bad)
    4790:	b8 03 00 00 00       	mov    eax,0x3
    4795:	d8 ff                	fdivr  st,st(7)
    4797:	ff d4                	call   rsp
    4799:	03 00                	add    eax,DWORD PTR [rax]
    479b:	00 60 d8             	add    BYTE PTR [rax-0x28],ah
    479e:	ff                   	(bad)
    479f:	ff f0                	push   rax
    47a1:	03 00                	add    eax,DWORD PTR [rax]
    47a3:	00 e0                	add    al,ah
    47a5:	d9 ff                	fcos
    47a7:	ff 40 04             	inc    DWORD PTR [rax+0x4]
    47aa:	00 00                	add    BYTE PTR [rax],al
    47ac:	c0 da ff             	rcr    dl,0xff
    47af:	ff 90 04 00 00 40    	call   QWORD PTR [rax+0x40000004]
    47b5:	db ff                	(bad)
    47b7:	ff e0                	jmp    rax
    47b9:	04 00                	add    al,0x0
    47bb:	00 80 db ff ff fc    	add    BYTE PTR [rax-0x3000025],al
    47c1:	04 00                	add    al,0x0
    47c3:	00 b0 dd ff ff 30    	add    BYTE PTR [rax+0x30ffffdd],dh
    47c9:	05 00 00 c0 de       	add    eax,0xdec00000
    47ce:	ff                   	(bad)
    47cf:	ff 58 05             	call   FWORD PTR [rax+0x5]
    47d2:	00 00                	add    BYTE PTR [rax],al
    47d4:	30 df                	xor    bh,bl
    47d6:	ff                   	(bad)
    47d7:	ff 88 05 00 00 90    	dec    DWORD PTR [rax-0x6ffffffb]
    47dd:	e3 ff                	jrcxz  47de <__GNU_EH_FRAME_HDR+0xee>
    47df:	ff d0                	call   rax
    47e1:	05 00 00 f0 e7       	add    eax,0xe7f00000
    47e6:	ff                   	(bad)
    47e7:	ff 1c 06             	call   FWORD PTR [rsi+rax*1]
    47ea:	00 00                	add    BYTE PTR [rax],al
    47ec:	40 e8 ff ff 58 06    	rex call 65947f1 <_end+0x658e7d9>
    47f2:	00 00                	add    BYTE PTR [rax],al
    47f4:	f0 ef                	lock out dx,eax
    47f6:	ff                   	(bad)
    47f7:	ff a4 06 00 00 50 f1 	jmp    QWORD PTR [rsi+rax*1-0xeb00000]
    47fe:	ff                   	(bad)
    47ff:	ff d4                	call   rsp
    4801:	06                   	(bad)
	...

Disassembly of section .eh_frame:

0000000000004808 <__FRAME_END__-0x610>:
    4808:	14 00                	adc    al,0x0
    480a:	00 00                	add    BYTE PTR [rax],al
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	00 00                	add    BYTE PTR [rax],al
    4810:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    4813:	00 01                	add    BYTE PTR [rcx],al
    4815:	78 10                	js     4827 <__GNU_EH_FRAME_HDR+0x137>
    4817:	01 1b                	add    DWORD PTR [rbx],ebx
    4819:	0c 07                	or     al,0x7
    481b:	08 90 01 00 00 14    	or     BYTE PTR [rax+0x14000001],dl
    4821:	00 00                	add    BYTE PTR [rax],al
    4823:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4826:	00 00                	add    BYTE PTR [rax],al
    4828:	e8 c9 ff ff 26       	call   270047f6 <_end+0x26ffe7de>
    482d:	00 00                	add    BYTE PTR [rax],al
    482f:	00 00                	add    BYTE PTR [rax],al
    4831:	44 07                	rex.R (bad)
    4833:	10 00                	adc    BYTE PTR [rax],al
    4835:	00 00                	add    BYTE PTR [rax],al
    4837:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    483a:	00 00                	add    BYTE PTR [rax],al
    483c:	34 00                	xor    al,0x0
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	e0 c7                	loopne 4809 <__GNU_EH_FRAME_HDR+0x119>
    4842:	ff                   	(bad)
    4843:	ff b0 01 00 00 00    	push   QWORD PTR [rax+0x1]
    4849:	0e                   	(bad)
    484a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    484d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    4850:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    4853:	80 00 3f             	add    BYTE PTR [rax],0x3f
    4856:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    4858:	2a 33                	sub    dh,BYTE PTR [rbx]
    485a:	24 22                	and    al,0x22
    485c:	00 00                	add    BYTE PTR [rax],al
    485e:	00 00                	add    BYTE PTR [rax],al
    4860:	14 00                	adc    al,0x0
    4862:	00 00                	add    BYTE PTR [rax],al
    4864:	5c                   	pop    rsp
    4865:	00 00                	add    BYTE PTR [rax],al
    4867:	00 68 c9             	add    BYTE PTR [rax-0x37],ch
    486a:	ff                   	(bad)
    486b:	ff 08                	dec    DWORD PTR [rax]
	...
    4875:	00 00                	add    BYTE PTR [rax],al
    4877:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    487a:	00 00                	add    BYTE PTR [rax],al
    487c:	74 00                	je     487e <__GNU_EH_FRAME_HDR+0x18e>
    487e:	00 00                	add    BYTE PTR [rax],al
    4880:	60                   	(bad)
    4881:	c9                   	leave
    4882:	ff                   	(bad)
    4883:	ff 2e                	jmp    FWORD PTR [rsi]
    4885:	00 00                	add    BYTE PTR [rax],al
    4887:	00 00                	add    BYTE PTR [rax],al
    4889:	45 0e                	rex.RB (bad)
    488b:	10 83 02 68 0e 08    	adc    BYTE PTR [rbx+0x80e6802],al
    4891:	00 00                	add    BYTE PTR [rax],al
    4893:	00 00                	add    BYTE PTR [rax],al
    4895:	00 00                	add    BYTE PTR [rax],al
    4897:	00 48 00             	add    BYTE PTR [rax+0x0],cl
    489a:	00 00                	add    BYTE PTR [rax],al
    489c:	94                   	xchg   esp,eax
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 60 ca             	add    BYTE PTR [rax-0x36],ah
    48a2:	ff                   	(bad)
    48a3:	ff 23                	jmp    QWORD PTR [rbx]
    48a5:	01 00                	add    DWORD PTR [rax],eax
    48a7:	00 00                	add    BYTE PTR [rax],al
    48a9:	46 0e                	rex.RX (bad)
    48ab:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    48b1:	8e 03                	mov    es,WORD PTR [rbx]
    48b3:	42 0e                	rex.X (bad)
    48b5:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    48bb:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305702 <_end+0xffffffff862ff6ea>
    48c1:	06                   	(bad)
    48c2:	41 0e                	rex.B (bad)
    48c4:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    48ca:	02 e4                	add    ah,ah
    48cc:	0a 0e                	or     cl,BYTE PTR [rsi]
    48ce:	38 44 0e 30          	cmp    BYTE PTR [rsi+rcx*1+0x30],al
    48d2:	41 0e                	rex.B (bad)
    48d4:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    48d7:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    48da:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    48dd:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    48e0:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    48e3:	00 28                	add    BYTE PTR [rax],ch
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	00 e0                	add    al,ah
    48e9:	00 00                	add    BYTE PTR [rax],al
    48eb:	00 44 cb ff          	add    BYTE PTR [rbx+rcx*8-0x1],al
    48ef:	ff a9 00 00 00 00    	jmp    FWORD PTR [rcx+0x0]
    48f5:	45 0e                	rex.RB (bad)
    48f7:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    48fd:	42 8e 03             	rex.X mov es,WORD PTR [rbx]
    4900:	47 8d 04 8c          	lea    r8d,[r12+r9*4]
    4904:	05 4c 83 06 02       	add    eax,0x206834c
    4909:	86 0a                	xchg   BYTE PTR [rdx],cl
    490b:	0c 07                	or     al,0x7
    490d:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4910:	28 00                	sub    BYTE PTR [rax],al
    4912:	00 00                	add    BYTE PTR [rax],al
    4914:	0c 01                	or     al,0x1
    4916:	00 00                	add    BYTE PTR [rax],al
    4918:	c8 cb ff ff          	enter  0xffcb,0xff
    491c:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    491d:	02 00                	add    al,BYTE PTR [rax]
    491f:	00 00                	add    BYTE PTR [rax],al
    4921:	45 0e                	rex.RB (bad)
    4923:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4929:	51                   	push   rcx
    492a:	8f 03                	pop    QWORD PTR [rbx]
    492c:	8e 04 8d 05 8c 06 83 	mov    es,WORD PTR [rcx*4-0x7cf973fb]
    4933:	07                   	(bad)
    4934:	02 a1 0a 0c 07 08    	add    ah,BYTE PTR [rcx+0x8070c0a]
    493a:	46 0b 4c 00 00       	or     r9d,DWORD PTR [rax+r8*1+0x0]
    493f:	00 38                	add    BYTE PTR [rax],bh
    4941:	01 00                	add    DWORD PTR [rax],eax
    4943:	00 4c ce ff          	add    BYTE PTR [rsi+rcx*8-0x1],cl
    4947:	ff c9                	dec    ecx
    4949:	00 00                	add    BYTE PTR [rax],al
    494b:	00 00                	add    BYTE PTR [rax],al
    494d:	46 0e                	rex.RX (bad)
    494f:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4955:	8c 03                	mov    WORD PTR [rbx],es
    4957:	41 0e                	rex.B (bad)
    4959:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    495f:	83 05 44 0e 30 02 7c 	add    DWORD PTR [rip+0x2300e44],0x7c        # 23057aa <_end+0x22ff792>
    4966:	0a 0e                	or     cl,BYTE PTR [rsi]
    4968:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    496b:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    496e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4971:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4974:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4977:	48 0a 0e             	rex.W or cl,BYTE PTR [rsi]
    497a:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    497d:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4980:	18 45 0e             	sbb    BYTE PTR [rbp+0xe],al
    4983:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4986:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4989:	00 00                	add    BYTE PTR [rax],al
    498b:	00 18                	add    BYTE PTR [rax],bl
    498d:	00 00                	add    BYTE PTR [rax],al
    498f:	00 88 01 00 00 cc    	add    BYTE PTR [rax-0x33ffffff],cl
    4995:	ce                   	(bad)
    4996:	ff                   	(bad)
    4997:	ff 84 00 00 00 00 48 	inc    DWORD PTR [rax+rax*1+0x48000000]
    499e:	0e                   	(bad)
    499f:	10 02                	adc    BYTE PTR [rdx],al
    49a1:	5c                   	pop    rsp
    49a2:	0a 0e                	or     cl,BYTE PTR [rsi]
    49a4:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    49a7:	00 28                	add    BYTE PTR [rax],ch
    49a9:	00 00                	add    BYTE PTR [rax],al
    49ab:	00 a4 01 00 00 40 cf 	add    BYTE PTR [rcx+rax*1-0x30c00000],ah
    49b2:	ff                   	(bad)
    49b3:	ff 68 00             	jmp    FWORD PTR [rax+0x0]
    49b6:	00 00                	add    BYTE PTR [rax],al
    49b8:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    49bb:	10 86 02 41 0e 18    	adc    BYTE PTR [rsi+0x180e4102],al
    49c1:	83 03 44             	add    DWORD PTR [rbx],0x44
    49c4:	0e                   	(bad)
    49c5:	20 78 0a             	and    BYTE PTR [rax+0xa],bh
    49c8:	0e                   	(bad)
    49c9:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    49cc:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    49cf:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    49d2:	00 00                	add    BYTE PTR [rax],al
    49d4:	38 00                	cmp    BYTE PTR [rax],al
    49d6:	00 00                	add    BYTE PTR [rax],al
    49d8:	d0 01                	rol    BYTE PTR [rcx],1
    49da:	00 00                	add    BYTE PTR [rax],al
    49dc:	84 cf                	test   bh,cl
    49de:	ff                   	(bad)
    49df:	ff                   	(bad)
    49e0:	be 00 00 00 00       	mov    esi,0x0
    49e5:	46 0e                	rex.RX (bad)
    49e7:	10 8d 02 49 0e 18    	adc    BYTE PTR [rbp+0x180e4902],cl
    49ed:	8c 03                	mov    WORD PTR [rbx],es
    49ef:	41 0e                	rex.B (bad)
    49f1:	20 86 04 47 0e 28    	and    BYTE PTR [rsi+0x280e4704],al
    49f7:	83 05 44 0e 30 02 84 	add    DWORD PTR [rip+0x2300e44],0xffffff84        # 2305842 <_end+0x22ff82a>
    49fe:	0a 0e                	or     cl,BYTE PTR [rsi]
    4a00:	28 44 0e 20          	sub    BYTE PTR [rsi+rcx*1+0x20],al
    4a04:	41 0e                	rex.B (bad)
    4a06:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4a09:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4a0c:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4a0f:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    4a12:	00 00                	add    BYTE PTR [rax],al
    4a14:	0c 02                	or     al,0x2
    4a16:	00 00                	add    BYTE PTR [rax],al
    4a18:	08 d0                	or     al,dl
    4a1a:	ff                   	(bad)
    4a1b:	ff 19                	call   FWORD PTR [rcx]
    4a1d:	01 00                	add    DWORD PTR [rax],eax
    4a1f:	00 00                	add    BYTE PTR [rax],al
    4a21:	55                   	push   rbp
    4a22:	0e                   	(bad)
    4a23:	10 83 02 03 00 01    	adc    BYTE PTR [rbx+0x1000302],al
    4a29:	0e                   	(bad)
    4a2a:	08 41 c3             	or     BYTE PTR [rcx-0x3d],al
    4a2d:	00 00                	add    BYTE PTR [rax],al
    4a2f:	00 10                	add    BYTE PTR [rax],dl
    4a31:	00 00                	add    BYTE PTR [rax],al
    4a33:	00 2c 02             	add    BYTE PTR [rdx+rax*1],ch
    4a36:	00 00                	add    BYTE PTR [rax],al
    4a38:	08 d1                	or     cl,dl
    4a3a:	ff                   	(bad)
    4a3b:	ff 4b 00             	dec    DWORD PTR [rbx+0x0]
    4a3e:	00 00                	add    BYTE PTR [rax],al
    4a40:	00 00                	add    BYTE PTR [rax],al
    4a42:	00 00                	add    BYTE PTR [rax],al
    4a44:	10 00                	adc    BYTE PTR [rax],al
    4a46:	00 00                	add    BYTE PTR [rax],al
    4a48:	40 02 00             	rex add al,BYTE PTR [rax]
    4a4b:	00 44 d1 ff          	add    BYTE PTR [rcx+rdx*8-0x1],al
    4a4f:	ff 31                	push   QWORD PTR [rcx]
    4a51:	00 00                	add    BYTE PTR [rax],al
    4a53:	00 00                	add    BYTE PTR [rax],al
    4a55:	00 00                	add    BYTE PTR [rax],al
    4a57:	00 10                	add    BYTE PTR [rax],dl
    4a59:	00 00                	add    BYTE PTR [rax],al
    4a5b:	00 54 02 00          	add    BYTE PTR [rdx+rax*1+0x0],dl
    4a5f:	00 70 d1             	add    BYTE PTR [rax-0x2f],dh
    4a62:	ff                   	(bad)
    4a63:	ff a4 00 00 00 00 00 	jmp    QWORD PTR [rax+rax*1+0x0]
    4a6a:	00 00                	add    BYTE PTR [rax],al
    4a6c:	10 00                	adc    BYTE PTR [rax],al
    4a6e:	00 00                	add    BYTE PTR [rax],al
    4a70:	68 02 00 00 0c       	push   0xc000002
    4a75:	d2 ff                	sar    bh,cl
    4a77:	ff 6e 01             	jmp    FWORD PTR [rsi+0x1]
    4a7a:	00 00                	add    BYTE PTR [rax],al
    4a7c:	00 00                	add    BYTE PTR [rax],al
    4a7e:	00 00                	add    BYTE PTR [rax],al
    4a80:	10 00                	adc    BYTE PTR [rax],al
    4a82:	00 00                	add    BYTE PTR [rax],al
    4a84:	7c 02                	jl     4a88 <__GNU_EH_FRAME_HDR+0x398>
    4a86:	00 00                	add    BYTE PTR [rax],al
    4a88:	68 d3 ff ff 76       	push   0x76ffffd3
    4a8d:	00 00                	add    BYTE PTR [rax],al
    4a8f:	00 00                	add    BYTE PTR [rax],al
    4a91:	00 00                	add    BYTE PTR [rax],al
    4a93:	00 10                	add    BYTE PTR [rax],dl
    4a95:	00 00                	add    BYTE PTR [rax],al
    4a97:	00 90 02 00 00 d4    	add    BYTE PTR [rax-0x2bfffffe],dl
    4a9d:	d3 ff                	sar    edi,cl
    4a9f:	ff 4a 00             	dec    DWORD PTR [rdx+0x0]
    4aa2:	00 00                	add    BYTE PTR [rax],al
    4aa4:	00 00                	add    BYTE PTR [rax],al
    4aa6:	00 00                	add    BYTE PTR [rax],al
    4aa8:	18 00                	sbb    BYTE PTR [rax],al
    4aaa:	00 00                	add    BYTE PTR [rax],al
    4aac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4aad:	02 00                	add    al,BYTE PTR [rax]
    4aaf:	00 10                	add    BYTE PTR [rax],dl
    4ab1:	d4                   	(bad)
    4ab2:	ff                   	(bad)
    4ab3:	ff 25 00 00 00 00    	jmp    QWORD PTR [rip+0x0]        # 4ab9 <__GNU_EH_FRAME_HDR+0x3c9>
    4ab9:	41 0e                	rex.B (bad)
    4abb:	10 41 0e             	adc    BYTE PTR [rcx+0xe],al
    4abe:	08 5e 0e             	or     BYTE PTR [rsi+0xe],bl
    4ac1:	10 00                	adc    BYTE PTR [rax],al
    4ac3:	00 18                	add    BYTE PTR [rax],bl
    4ac5:	00 00                	add    BYTE PTR [rax],al
    4ac7:	00 c0                	add    al,al
    4ac9:	02 00                	add    al,BYTE PTR [rax]
    4acb:	00 24 d4             	add    BYTE PTR [rsp+rdx*8],ah
    4ace:	ff                   	(bad)
    4acf:	ff 5d 00             	call   FWORD PTR [rbp+0x0]
    4ad2:	00 00                	add    BYTE PTR [rax],al
    4ad4:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
    4ad7:	10 83 02 02 57 0e    	adc    BYTE PTR [rbx+0xe570202],al
    4add:	08 00                	or     BYTE PTR [rax],al
    4adf:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
    4ae3:	00 dc                	add    ah,bl
    4ae5:	02 00                	add    al,BYTE PTR [rax]
    4ae7:	00 68 d4             	add    BYTE PTR [rax-0x2c],ch
    4aea:	ff                   	(bad)
    4aeb:	ff 73 01             	push   QWORD PTR [rbx+0x1]
    4aee:	00 00                	add    BYTE PTR [rax],al
    4af0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4af3:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4af9:	8c 03                	mov    WORD PTR [rbx],es
    4afb:	41 0e                	rex.B (bad)
    4afd:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4b03:	83 05 44 0e 30 02 d5 	add    DWORD PTR [rip+0x2300e44],0xffffffd5        # 230594e <_end+0x22ff936>
    4b0a:	0a 0e                	or     cl,BYTE PTR [rsi]
    4b0c:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4b0f:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b12:	18 44 0e 10          	sbb    BYTE PTR [rsi+rcx*1+0x10],al
    4b16:	42 0e                	rex.X (bad)
    4b18:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4b1b:	02 51 0a             	add    dl,BYTE PTR [rcx+0xa]
    4b1e:	0e                   	(bad)
    4b1f:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4b22:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b25:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b28:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b2b:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b2e:	00 00                	add    BYTE PTR [rax],al
    4b30:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4b33:	00 2c 03             	add    BYTE PTR [rbx+rax*1],ch
    4b36:	00 00                	add    BYTE PTR [rax],al
    4b38:	98                   	cwde
    4b39:	d5 ff ff dc          	{rex2 0xff} ud0 r27,r28
    4b3d:	00 00                	add    BYTE PTR [rax],al
    4b3f:	00 00                	add    BYTE PTR [rax],al
    4b41:	46 0e                	rex.RX (bad)
    4b43:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4b49:	8c 03                	mov    WORD PTR [rbx],es
    4b4b:	41 0e                	rex.B (bad)
    4b4d:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4b53:	83 05 44 0e 30 02 93 	add    DWORD PTR [rip+0x2300e44],0xffffff93        # 230599e <_end+0x22ff986>
    4b5a:	0a 0e                	or     cl,BYTE PTR [rsi]
    4b5c:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4b5f:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b62:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b65:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b68:	08 49 0b             	or     BYTE PTR [rcx+0xb],cl
    4b6b:	44 0a 0e             	or     r9b,BYTE PTR [rsi]
    4b6e:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4b71:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4b74:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4b77:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4b7a:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4b7d:	00 00                	add    BYTE PTR [rax],al
    4b7f:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
    4b83:	00 7c 03 00          	add    BYTE PTR [rbx+rax*1+0x0],bh
    4b87:	00 28                	add    BYTE PTR [rax],ch
    4b89:	d6                   	(bad)
    4b8a:	ff                   	(bad)
    4b8b:	ff 72 00             	push   QWORD PTR [rdx+0x0]
    4b8e:	00 00                	add    BYTE PTR [rax],al
    4b90:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4b93:	10 8d 02 42 0e 18    	adc    BYTE PTR [rbp+0x180e4202],cl
    4b99:	8c 03                	mov    WORD PTR [rbx],es
    4b9b:	41 0e                	rex.B (bad)
    4b9d:	20 86 04 41 0e 28    	and    BYTE PTR [rsi+0x280e4104],al
    4ba3:	83 05 44 0e 30 02 40 	add    DWORD PTR [rip+0x2300e44],0x40        # 23059ee <_end+0x22ff9d6>
    4baa:	0a 0e                	or     cl,BYTE PTR [rsi]
    4bac:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4baf:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4bb2:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4bb5:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4bb8:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
    4bbb:	44 0a 0e             	or     r9b,BYTE PTR [rsi]
    4bbe:	28 43 0e             	sub    BYTE PTR [rbx+0xe],al
    4bc1:	20 41 0e             	and    BYTE PTR [rcx+0xe],al
    4bc4:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4bc7:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4bca:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4bcd:	00 00                	add    BYTE PTR [rax],al
    4bcf:	00 18                	add    BYTE PTR [rax],bl
    4bd1:	00 00                	add    BYTE PTR [rax],al
    4bd3:	00 cc                	add    ah,cl
    4bd5:	03 00                	add    eax,DWORD PTR [rax]
    4bd7:	00 58 d6             	add    BYTE PTR [rax-0x2a],bl
    4bda:	ff                   	(bad)
    4bdb:	ff                   	(bad)
    4bdc:	3e 00 00             	ds add BYTE PTR [rax],al
    4bdf:	00 00                	add    BYTE PTR [rax],al
    4be1:	45 0e                	rex.RB (bad)
    4be3:	10 83 02 59 0a 0e    	adc    BYTE PTR [rbx+0xe0a5902],al
    4be9:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4bec:	30 00                	xor    BYTE PTR [rax],al
    4bee:	00 00                	add    BYTE PTR [rax],al
    4bf0:	e8 03 00 00 7c       	call   7c004bf8 <_end+0x7bffebe0>
    4bf5:	d6                   	(bad)
    4bf6:	ff                   	(bad)
    4bf7:	ff 23                	jmp    QWORD PTR [rbx]
    4bf9:	02 00                	add    al,BYTE PTR [rax]
    4bfb:	00 00                	add    BYTE PTR [rax],al
    4bfd:	46 0e                	rex.RX (bad)
    4bff:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4c06:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4c09:	20 83 04 03 ef 01    	and    BYTE PTR [rbx+0x1ef0304],al
    4c0f:	0a 0e                	or     cl,BYTE PTR [rsi]
    4c11:	18 46 0e             	sbb    BYTE PTR [rsi+0xe],al
    4c14:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c17:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4c1a:	00 00                	add    BYTE PTR [rax],al
    4c1c:	00 00                	add    BYTE PTR [rax],al
    4c1e:	00 00                	add    BYTE PTR [rax],al
    4c20:	24 00                	and    al,0x0
    4c22:	00 00                	add    BYTE PTR [rax],al
    4c24:	1c 04                	sbb    al,0x4
    4c26:	00 00                	add    BYTE PTR [rax],al
    4c28:	78 d8                	js     4c02 <__GNU_EH_FRAME_HDR+0x512>
    4c2a:	ff                   	(bad)
    4c2b:	ff 08                	dec    DWORD PTR [rax]
    4c2d:	01 00                	add    DWORD PTR [rax],eax
    4c2f:	00 00                	add    BYTE PTR [rax],al
    4c31:	45 0e                	rex.RB (bad)
    4c33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    4c39:	4c 8d 03             	lea    r8,[rbx]
    4c3c:	8c 04 83             	mov    WORD PTR [rbx+rax*4],es
    4c3f:	05 02 c1 0a 0c       	add    eax,0xc0ac102
    4c44:	07                   	(bad)
    4c45:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4c48:	2c 00                	sub    al,0x0
    4c4a:	00 00                	add    BYTE PTR [rax],al
    4c4c:	44 04 00             	rex.R add al,0x0
    4c4f:	00 60 d9             	add    BYTE PTR [rax-0x27],ah
    4c52:	ff                   	(bad)
    4c53:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    4c56:	00 00                	add    BYTE PTR [rax],al
    4c58:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4c5b:	10 8c 02 41 0e 18 86 	adc    BYTE PTR [rdx+rax*1-0x79e7f1bf],cl
    4c62:	03 41 0e             	add    eax,DWORD PTR [rcx+0xe]
    4c65:	20 83 04 77 0a 0e    	and    BYTE PTR [rbx+0xe0a7704],al
    4c6b:	18 41 0e             	sbb    BYTE PTR [rcx+0xe],al
    4c6e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4c71:	08 41 0b             	or     BYTE PTR [rcx+0xb],al
    4c74:	00 00                	add    BYTE PTR [rax],al
    4c76:	00 00                	add    BYTE PTR [rax],al
    4c78:	44 00 00             	add    BYTE PTR [rax],r8b
    4c7b:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    4c7f:	00 a0 d9 ff ff 53    	add    BYTE PTR [rax+0x53ffffd9],ah
    4c85:	04 00                	add    al,0x0
    4c87:	00 00                	add    BYTE PTR [rax],al
    4c89:	49 0c 0a             	rex.WB or al,0xa
    4c8c:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4c90:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4c93:	4a 0f 03 76 58       	rex.WX lsl rsi,WORD PTR [rsi+0x58]
    4c98:	06                   	(bad)
    4c99:	10 0f                	adc    BYTE PTR [rdi],cl
    4c9b:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4c9e:	10 0e                	adc    BYTE PTR [rsi],cl
    4ca0:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4ca3:	10 0d 02 76 68 10    	adc    BYTE PTR [rip+0x10687602],cl        # 1068c2ab <_end+0x10686293>
    4ca9:	0c 02                	or     al,0x2
    4cab:	76 60                	jbe    4d0d <__GNU_EH_FRAME_HDR+0x61d>
    4cad:	45 10 03             	adc    BYTE PTR [r11],r8b
    4cb0:	02 76 50             	add    dh,BYTE PTR [rsi+0x50]
    4cb3:	03 c5                	add    eax,ebp
    4cb5:	03 0a                	add    ecx,DWORD PTR [rdx]
    4cb7:	0c 0a                	or     al,0xa
    4cb9:	00 4d 0c             	add    BYTE PTR [rbp+0xc],cl
    4cbc:	07                   	(bad)
    4cbd:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
    4cc0:	48 00 00             	rex.W add BYTE PTR [rax],al
    4cc3:	00 bc 04 00 00 b8 dd 	add    BYTE PTR [rsp+rax*1-0x22480000],bh
    4cca:	ff                   	(bad)
    4ccb:	ff 56 04             	call   QWORD PTR [rsi+0x4]
    4cce:	00 00                	add    BYTE PTR [rax],al
    4cd0:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4cd3:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4cd9:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4cdd:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4ce0:	46 0f 03 76 68       	rex.RX lsl r14d,WORD PTR [rsi+0x68]
    4ce5:	06                   	(bad)
    4ce6:	10 0f                	adc    BYTE PTR [rdi],cl
    4ce8:	02 76 78             	add    dh,BYTE PTR [rsi+0x78]
    4ceb:	10 0e                	adc    BYTE PTR [rsi],cl
    4ced:	02 76 70             	add    dh,BYTE PTR [rsi+0x70]
    4cf0:	47 10 0c 02          	adc    BYTE PTR [r10+r8*1],r9b
    4cf4:	76 60                	jbe    4d56 <__GNU_EH_FRAME_HDR+0x666>
    4cf6:	10 03                	adc    BYTE PTR [rbx],al
    4cf8:	02 76 58             	add    dh,BYTE PTR [rsi+0x58]
    4cfb:	03 77 03             	add    esi,DWORD PTR [rdi+0x3]
    4cfe:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4d05:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d08:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
    4d0b:	00 38                	add    BYTE PTR [rax],bh
    4d0d:	00 00                	add    BYTE PTR [rax],al
    4d0f:	00 08                	add    BYTE PTR [rax],cl
    4d11:	05 00 00 cc e1       	add    eax,0xe1cc0000
    4d16:	ff                   	(bad)
    4d17:	ff 4e 00             	dec    DWORD PTR [rsi+0x0]
    4d1a:	00 00                	add    BYTE PTR [rax],al
    4d1c:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4d1f:	10 8e 02 4c 0e 18    	adc    BYTE PTR [rsi+0x180e4c02],cl
    4d25:	8d 03                	lea    eax,[rbx]
    4d27:	45 0e                	rex.RB (bad)
    4d29:	20 8c 04 44 0e 28 86 	and    BYTE PTR [rsp+rax*1-0x79d7f1bc],cl
    4d30:	05 47 0e 30 83       	add    eax,0x83300e47
    4d35:	06                   	(bad)
    4d36:	60                   	(bad)
    4d37:	0e                   	(bad)
    4d38:	28 41 0e             	sub    BYTE PTR [rcx+0xe],al
    4d3b:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4d3e:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4d41:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d44:	08 00                	or     BYTE PTR [rax],al
    4d46:	00 00                	add    BYTE PTR [rax],al
    4d48:	48 00 00             	rex.W add BYTE PTR [rax],al
    4d4b:	00 44 05 00          	add    BYTE PTR [rbp+rax*1+0x0],al
    4d4f:	00 e0                	add    al,ah
    4d51:	e1 ff                	loope  4d52 <__GNU_EH_FRAME_HDR+0x662>
    4d53:	ff a9 07 00 00 00    	jmp    FWORD PTR [rcx+0x7]
    4d59:	46 0e                	rex.RX (bad)
    4d5b:	10 8f 02 42 0e 18    	adc    BYTE PTR [rdi+0x180e4202],cl
    4d61:	8e 03                	mov    es,WORD PTR [rbx]
    4d63:	42 0e                	rex.X (bad)
    4d65:	20 8d 04 42 0e 28    	and    BYTE PTR [rbp+0x280e4204],cl
    4d6b:	8c 05 41 0e 30 86    	mov    WORD PTR [rip+0xffffffff86300e41],es        # ffffffff86305bb2 <_end+0xffffffff862ffb9a>
    4d71:	06                   	(bad)
    4d72:	41 0e                	rex.B (bad)
    4d74:	38 83 07 44 0e 60    	cmp    BYTE PTR [rbx+0x600e4407],al
    4d7a:	03 54 01 0a          	add    edx,DWORD PTR [rcx+rax*1+0xa]
    4d7e:	0e                   	(bad)
    4d7f:	38 41 0e             	cmp    BYTE PTR [rcx+0xe],al
    4d82:	30 41 0e             	xor    BYTE PTR [rcx+0xe],al
    4d85:	28 42 0e             	sub    BYTE PTR [rdx+0xe],al
    4d88:	20 42 0e             	and    BYTE PTR [rdx+0xe],al
    4d8b:	18 42 0e             	sbb    BYTE PTR [rdx+0xe],al
    4d8e:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4d91:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4d94:	2c 00                	sub    al,0x0
    4d96:	00 00                	add    BYTE PTR [rax],al
    4d98:	90                   	nop
    4d99:	05 00 00 44 e9       	add    eax,0xe9440000
    4d9e:	ff                   	(bad)
    4d9f:	ff 5b 01             	call   FWORD PTR [rbx+0x1]
    4da2:	00 00                	add    BYTE PTR [rax],al
    4da4:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4da7:	0a 00                	or     al,BYTE PTR [rax]
    4da9:	4c 10 06             	rex.WR adc BYTE PTR [rsi],r8b
    4dac:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4daf:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4db4:	06                   	(bad)
    4db5:	02 f0                	add    dh,al
    4db7:	0a 0c 0a             	or     cl,BYTE PTR [rdx+rcx*1]
    4dba:	00 49 0c             	add    BYTE PTR [rcx+0xc],cl
    4dbd:	07                   	(bad)
    4dbe:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4dc1:	00 00                	add    BYTE PTR [rax],al
    4dc3:	00 50 00             	add    BYTE PTR [rax+0x0],dl
    4dc6:	00 00                	add    BYTE PTR [rax],al
    4dc8:	c0 05 00 00 74 ea ff 	rol    BYTE PTR [rip+0xffffffffea740000],0xff        # ffffffffea744dcf <_end+0xffffffffea73edb7>
    4dcf:	ff 1c 03             	call   FWORD PTR [rbx+rax*1]
    4dd2:	00 00                	add    BYTE PTR [rax],al
    4dd4:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4dd7:	10 8d 02 45 0c 0d    	adc    BYTE PTR [rbp+0xd0c4502],cl
    4ddd:	00 4c 10 06          	add    BYTE PTR [rax+rdx*1+0x6],cl
    4de1:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    4de4:	42 0f 03 76 78       	rex.X lsl esi,WORD PTR [rsi+0x78]
    4de9:	06                   	(bad)
    4dea:	03 8b 02 0a 0c 0d    	add    ecx,DWORD PTR [rbx+0xd0c0a02]
    4df0:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    4df3:	07                   	(bad)
    4df4:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4df7:	08 48 0b             	or     BYTE PTR [rax+0xb],cl
    4dfa:	49 0a 0c 0d 00 4a 0c 	rex.WB or cl,BYTE PTR [rcx*1+0x70c4a00]
    4e01:	07 
    4e02:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4e05:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    4e08:	55                   	push   rbp
    4e09:	0a 0c 0d 00 49 0c 07 	or     cl,BYTE PTR [rcx*1+0x70c4900]
    4e10:	10 42 0e             	adc    BYTE PTR [rdx+0xe],al
    4e13:	08 45 0b             	or     BYTE PTR [rbp+0xb],al
	...

0000000000004e18 <__FRAME_END__>:
    4e18:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000005cd0 <__frame_dummy_init_array_entry>:
    5cd0:	f0 12 00             	lock adc al,BYTE PTR [rax]
    5cd3:	00 00                	add    BYTE PTR [rax],al
    5cd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .fini_array:

0000000000005cd8 <__do_global_dtors_aux_fini_array_entry>:
    5cd8:	b0 12                	mov    al,0x12
    5cda:	00 00                	add    BYTE PTR [rax],al
    5cdc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000005ce0 <_DYNAMIC>:
    5ce0:	01 00                	add    DWORD PTR [rax],eax
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	00 00                	add    BYTE PTR [rax],al
    5ce6:	00 00                	add    BYTE PTR [rax],al
    5ce8:	58                   	pop    rax
    5ce9:	01 00                	add    DWORD PTR [rax],eax
    5ceb:	00 00                	add    BYTE PTR [rax],al
    5ced:	00 00                	add    BYTE PTR [rax],al
    5cef:	00 01                	add    BYTE PTR [rcx],al
    5cf1:	00 00                	add    BYTE PTR [rax],al
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	00 00                	add    BYTE PTR [rax],al
    5cf7:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    5cfa:	00 00                	add    BYTE PTR [rax],al
    5cfc:	00 00                	add    BYTE PTR [rax],al
    5cfe:	00 00                	add    BYTE PTR [rax],al
    5d00:	01 00                	add    DWORD PTR [rax],eax
    5d02:	00 00                	add    BYTE PTR [rax],al
    5d04:	00 00                	add    BYTE PTR [rax],al
    5d06:	00 00                	add    BYTE PTR [rax],al
    5d08:	71 01                	jno    5d0b <_DYNAMIC+0x2b>
    5d0a:	00 00                	add    BYTE PTR [rax],al
    5d0c:	00 00                	add    BYTE PTR [rax],al
    5d0e:	00 00                	add    BYTE PTR [rax],al
    5d10:	0c 00                	or     al,0x0
    5d12:	00 00                	add    BYTE PTR [rax],al
    5d14:	00 00                	add    BYTE PTR [rax],al
    5d16:	00 00                	add    BYTE PTR [rax],al
    5d18:	00 10                	add    BYTE PTR [rax],dl
    5d1a:	00 00                	add    BYTE PTR [rax],al
    5d1c:	00 00                	add    BYTE PTR [rax],al
    5d1e:	00 00                	add    BYTE PTR [rax],al
    5d20:	0d 00 00 00 00       	or     eax,0x0
    5d25:	00 00                	add    BYTE PTR [rax],al
    5d27:	00 74 3b 00          	add    BYTE PTR [rbx+rdi*1+0x0],dh
    5d2b:	00 00                	add    BYTE PTR [rax],al
    5d2d:	00 00                	add    BYTE PTR [rax],al
    5d2f:	00 19                	add    BYTE PTR [rcx],bl
    5d31:	00 00                	add    BYTE PTR [rax],al
    5d33:	00 00                	add    BYTE PTR [rax],al
    5d35:	00 00                	add    BYTE PTR [rax],al
    5d37:	00 d0                	add    al,dl
    5d39:	5c                   	pop    rsp
    5d3a:	00 00                	add    BYTE PTR [rax],al
    5d3c:	00 00                	add    BYTE PTR [rax],al
    5d3e:	00 00                	add    BYTE PTR [rax],al
    5d40:	1b 00                	sbb    eax,DWORD PTR [rax]
    5d42:	00 00                	add    BYTE PTR [rax],al
    5d44:	00 00                	add    BYTE PTR [rax],al
    5d46:	00 00                	add    BYTE PTR [rax],al
    5d48:	08 00                	or     BYTE PTR [rax],al
    5d4a:	00 00                	add    BYTE PTR [rax],al
    5d4c:	00 00                	add    BYTE PTR [rax],al
    5d4e:	00 00                	add    BYTE PTR [rax],al
    5d50:	1a 00                	sbb    al,BYTE PTR [rax]
    5d52:	00 00                	add    BYTE PTR [rax],al
    5d54:	00 00                	add    BYTE PTR [rax],al
    5d56:	00 00                	add    BYTE PTR [rax],al
    5d58:	d8 5c 00 00          	fcomp  DWORD PTR [rax+rax*1+0x0]
    5d5c:	00 00                	add    BYTE PTR [rax],al
    5d5e:	00 00                	add    BYTE PTR [rax],al
    5d60:	1c 00                	sbb    al,0x0
    5d62:	00 00                	add    BYTE PTR [rax],al
    5d64:	00 00                	add    BYTE PTR [rax],al
    5d66:	00 00                	add    BYTE PTR [rax],al
    5d68:	08 00                	or     BYTE PTR [rax],al
    5d6a:	00 00                	add    BYTE PTR [rax],al
    5d6c:	00 00                	add    BYTE PTR [rax],al
    5d6e:	00 00                	add    BYTE PTR [rax],al
    5d70:	f5                   	cmc
    5d71:	fe                   	(bad)
    5d72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5d75:	00 00                	add    BYTE PTR [rax],al
    5d77:	00 a0 03 00 00 00    	add    BYTE PTR [rax+0x3],ah
    5d7d:	00 00                	add    BYTE PTR [rax],al
    5d7f:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 5d85 <_DYNAMIC+0xa5>
    5d85:	00 00                	add    BYTE PTR [rax],al
    5d87:	00 c8                	add    al,cl
    5d89:	06                   	(bad)
    5d8a:	00 00                	add    BYTE PTR [rax],al
    5d8c:	00 00                	add    BYTE PTR [rax],al
    5d8e:	00 00                	add    BYTE PTR [rax],al
    5d90:	06                   	(bad)
    5d91:	00 00                	add    BYTE PTR [rax],al
    5d93:	00 00                	add    BYTE PTR [rax],al
    5d95:	00 00                	add    BYTE PTR [rax],al
    5d97:	00 c8                	add    al,cl
    5d99:	03 00                	add    eax,DWORD PTR [rax]
    5d9b:	00 00                	add    BYTE PTR [rax],al
    5d9d:	00 00                	add    BYTE PTR [rax],al
    5d9f:	00 0a                	add    BYTE PTR [rdx],cl
    5da1:	00 00                	add    BYTE PTR [rax],al
    5da3:	00 00                	add    BYTE PTR [rax],al
    5da5:	00 00                	add    BYTE PTR [rax],al
    5da7:	00 d8                	add    al,bl
    5da9:	01 00                	add    DWORD PTR [rax],eax
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	00 00                	add    BYTE PTR [rax],al
    5daf:	00 0b                	add    BYTE PTR [rbx],cl
    5db1:	00 00                	add    BYTE PTR [rax],al
    5db3:	00 00                	add    BYTE PTR [rax],al
    5db5:	00 00                	add    BYTE PTR [rax],al
    5db7:	00 18                	add    BYTE PTR [rax],bl
    5db9:	00 00                	add    BYTE PTR [rax],al
    5dbb:	00 00                	add    BYTE PTR [rax],al
    5dbd:	00 00                	add    BYTE PTR [rax],al
    5dbf:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 5dc5 <_DYNAMIC+0xe5>
	...
    5dcd:	00 00                	add    BYTE PTR [rax],al
    5dcf:	00 03                	add    BYTE PTR [rbx],al
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	00 00                	add    BYTE PTR [rax],al
    5dd5:	00 00                	add    BYTE PTR [rax],al
    5dd7:	00 f0                	add    al,dh
    5dd9:	5e                   	pop    rsi
    5dda:	00 00                	add    BYTE PTR [rax],al
    5ddc:	00 00                	add    BYTE PTR [rax],al
    5dde:	00 00                	add    BYTE PTR [rax],al
    5de0:	02 00                	add    al,BYTE PTR [rax]
    5de2:	00 00                	add    BYTE PTR [rax],al
    5de4:	00 00                	add    BYTE PTR [rax],al
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	70 02                	jo     5dec <_DYNAMIC+0x10c>
    5dea:	00 00                	add    BYTE PTR [rax],al
    5dec:	00 00                	add    BYTE PTR [rax],al
    5dee:	00 00                	add    BYTE PTR [rax],al
    5df0:	14 00                	adc    al,0x0
    5df2:	00 00                	add    BYTE PTR [rax],al
    5df4:	00 00                	add    BYTE PTR [rax],al
    5df6:	00 00                	add    BYTE PTR [rax],al
    5df8:	07                   	(bad)
    5df9:	00 00                	add    BYTE PTR [rax],al
    5dfb:	00 00                	add    BYTE PTR [rax],al
    5dfd:	00 00                	add    BYTE PTR [rax],al
    5dff:	00 17                	add    BYTE PTR [rdi],dl
    5e01:	00 00                	add    BYTE PTR [rax],al
    5e03:	00 00                	add    BYTE PTR [rax],al
    5e05:	00 00                	add    BYTE PTR [rax],al
    5e07:	00 60 0a             	add    BYTE PTR [rax+0xa],ah
    5e0a:	00 00                	add    BYTE PTR [rax],al
    5e0c:	00 00                	add    BYTE PTR [rax],al
    5e0e:	00 00                	add    BYTE PTR [rax],al
    5e10:	07                   	(bad)
    5e11:	00 00                	add    BYTE PTR [rax],al
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	00 00                	add    BYTE PTR [rax],al
    5e17:	00 a0 09 00 00 00    	add    BYTE PTR [rax+0x9],ah
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	00 08                	add    BYTE PTR [rax],cl
    5e21:	00 00                	add    BYTE PTR [rax],al
    5e23:	00 00                	add    BYTE PTR [rax],al
    5e25:	00 00                	add    BYTE PTR [rax],al
    5e27:	00 c0                	add    al,al
    5e29:	00 00                	add    BYTE PTR [rax],al
    5e2b:	00 00                	add    BYTE PTR [rax],al
    5e2d:	00 00                	add    BYTE PTR [rax],al
    5e2f:	00 09                	add    BYTE PTR [rcx],cl
    5e31:	00 00                	add    BYTE PTR [rax],al
    5e33:	00 00                	add    BYTE PTR [rax],al
    5e35:	00 00                	add    BYTE PTR [rax],al
    5e37:	00 18                	add    BYTE PTR [rax],bl
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	00 00                	add    BYTE PTR [rax],al
    5e3d:	00 00                	add    BYTE PTR [rax],al
    5e3f:	00 1e                	add    BYTE PTR [rsi],bl
    5e41:	00 00                	add    BYTE PTR [rax],al
    5e43:	00 00                	add    BYTE PTR [rax],al
    5e45:	00 00                	add    BYTE PTR [rax],al
    5e47:	00 08                	add    BYTE PTR [rax],cl
    5e49:	00 00                	add    BYTE PTR [rax],al
    5e4b:	00 00                	add    BYTE PTR [rax],al
    5e4d:	00 00                	add    BYTE PTR [rax],al
    5e4f:	00 fb                	add    bl,bh
    5e51:	ff                   	(bad)
    5e52:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e55:	00 00                	add    BYTE PTR [rax],al
    5e57:	00 01                	add    BYTE PTR [rcx],al
    5e59:	00 00                	add    BYTE PTR [rax],al
    5e5b:	08 00                	or     BYTE PTR [rax],al
    5e5d:	00 00                	add    BYTE PTR [rax],al
    5e5f:	00 fe                	add    dh,bh
    5e61:	ff                   	(bad)
    5e62:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e65:	00 00                	add    BYTE PTR [rax],al
    5e67:	00 e0                	add    al,ah
    5e69:	08 00                	or     BYTE PTR [rax],al
    5e6b:	00 00                	add    BYTE PTR [rax],al
    5e6d:	00 00                	add    BYTE PTR [rax],al
    5e6f:	00 ff                	add    bh,bh
    5e71:	ff                   	(bad)
    5e72:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e75:	00 00                	add    BYTE PTR [rax],al
    5e77:	00 03                	add    BYTE PTR [rbx],al
    5e79:	00 00                	add    BYTE PTR [rax],al
    5e7b:	00 00                	add    BYTE PTR [rax],al
    5e7d:	00 00                	add    BYTE PTR [rax],al
    5e7f:	00 f0                	add    al,dh
    5e81:	ff                   	(bad)
    5e82:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e85:	00 00                	add    BYTE PTR [rax],al
    5e87:	00 a0 08 00 00 00    	add    BYTE PTR [rax+0x8],ah
    5e8d:	00 00                	add    BYTE PTR [rax],al
    5e8f:	00 f9                	add    cl,bh
    5e91:	ff                   	(bad)
    5e92:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    5e95:	00 00                	add    BYTE PTR [rax],al
    5e97:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000005ef0 <_GLOBAL_OFFSET_TABLE_>:
    5ef0:	e0 5c                	loopne 5f4e <_GLOBAL_OFFSET_TABLE_+0x5e>
	...
    5f06:	00 00                	add    BYTE PTR [rax],al
    5f08:	36 10 00             	ss adc BYTE PTR [rax],al
    5f0b:	00 00                	add    BYTE PTR [rax],al
    5f0d:	00 00                	add    BYTE PTR [rax],al
    5f0f:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    5f12:	00 00                	add    BYTE PTR [rax],al
    5f14:	00 00                	add    BYTE PTR [rax],al
    5f16:	00 00                	add    BYTE PTR [rax],al
    5f18:	56                   	push   rsi
    5f19:	10 00                	adc    BYTE PTR [rax],al
    5f1b:	00 00                	add    BYTE PTR [rax],al
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	00 66 10             	add    BYTE PTR [rsi+0x10],ah
    5f22:	00 00                	add    BYTE PTR [rax],al
    5f24:	00 00                	add    BYTE PTR [rax],al
    5f26:	00 00                	add    BYTE PTR [rax],al
    5f28:	76 10                	jbe    5f3a <_GLOBAL_OFFSET_TABLE_+0x4a>
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	00 00                	add    BYTE PTR [rax],al
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	86 10                	xchg   BYTE PTR [rax],dl
    5f32:	00 00                	add    BYTE PTR [rax],al
    5f34:	00 00                	add    BYTE PTR [rax],al
    5f36:	00 00                	add    BYTE PTR [rax],al
    5f38:	96                   	xchg   esi,eax
    5f39:	10 00                	adc    BYTE PTR [rax],al
    5f3b:	00 00                	add    BYTE PTR [rax],al
    5f3d:	00 00                	add    BYTE PTR [rax],al
    5f3f:	00 a6 10 00 00 00    	add    BYTE PTR [rsi+0x10],ah
    5f45:	00 00                	add    BYTE PTR [rax],al
    5f47:	00 b6 10 00 00 00    	add    BYTE PTR [rsi+0x10],dh
    5f4d:	00 00                	add    BYTE PTR [rax],al
    5f4f:	00 c6                	add    dh,al
    5f51:	10 00                	adc    BYTE PTR [rax],al
    5f53:	00 00                	add    BYTE PTR [rax],al
    5f55:	00 00                	add    BYTE PTR [rax],al
    5f57:	00 d6                	add    dh,dl
    5f59:	10 00                	adc    BYTE PTR [rax],al
    5f5b:	00 00                	add    BYTE PTR [rax],al
    5f5d:	00 00                	add    BYTE PTR [rax],al
    5f5f:	00 e6                	add    dh,ah
    5f61:	10 00                	adc    BYTE PTR [rax],al
    5f63:	00 00                	add    BYTE PTR [rax],al
    5f65:	00 00                	add    BYTE PTR [rax],al
    5f67:	00 f6                	add    dh,dh
    5f69:	10 00                	adc    BYTE PTR [rax],al
    5f6b:	00 00                	add    BYTE PTR [rax],al
    5f6d:	00 00                	add    BYTE PTR [rax],al
    5f6f:	00 06                	add    BYTE PTR [rsi],al
    5f71:	11 00                	adc    DWORD PTR [rax],eax
    5f73:	00 00                	add    BYTE PTR [rax],al
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	00 16                	add    BYTE PTR [rsi],dl
    5f79:	11 00                	adc    DWORD PTR [rax],eax
    5f7b:	00 00                	add    BYTE PTR [rax],al
    5f7d:	00 00                	add    BYTE PTR [rax],al
    5f7f:	00 26                	add    BYTE PTR [rsi],ah
    5f81:	11 00                	adc    DWORD PTR [rax],eax
    5f83:	00 00                	add    BYTE PTR [rax],al
    5f85:	00 00                	add    BYTE PTR [rax],al
    5f87:	00 36                	add    BYTE PTR [rsi],dh
    5f89:	11 00                	adc    DWORD PTR [rax],eax
    5f8b:	00 00                	add    BYTE PTR [rax],al
    5f8d:	00 00                	add    BYTE PTR [rax],al
    5f8f:	00 46 11             	add    BYTE PTR [rsi+0x11],al
    5f92:	00 00                	add    BYTE PTR [rax],al
    5f94:	00 00                	add    BYTE PTR [rax],al
    5f96:	00 00                	add    BYTE PTR [rax],al
    5f98:	56                   	push   rsi
    5f99:	11 00                	adc    DWORD PTR [rax],eax
    5f9b:	00 00                	add    BYTE PTR [rax],al
    5f9d:	00 00                	add    BYTE PTR [rax],al
    5f9f:	00 66 11             	add    BYTE PTR [rsi+0x11],ah
    5fa2:	00 00                	add    BYTE PTR [rax],al
    5fa4:	00 00                	add    BYTE PTR [rax],al
    5fa6:	00 00                	add    BYTE PTR [rax],al
    5fa8:	76 11                	jbe    5fbb <_GLOBAL_OFFSET_TABLE_+0xcb>
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	00 00                	add    BYTE PTR [rax],al
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	86 11                	xchg   BYTE PTR [rcx],dl
    5fb2:	00 00                	add    BYTE PTR [rax],al
    5fb4:	00 00                	add    BYTE PTR [rax],al
    5fb6:	00 00                	add    BYTE PTR [rax],al
    5fb8:	96                   	xchg   esi,eax
    5fb9:	11 00                	adc    DWORD PTR [rax],eax
    5fbb:	00 00                	add    BYTE PTR [rax],al
    5fbd:	00 00                	add    BYTE PTR [rax],al
    5fbf:	00 a6 11 00 00 00    	add    BYTE PTR [rsi+0x11],ah
    5fc5:	00 00                	add    BYTE PTR [rax],al
    5fc7:	00 b6 11 00 00 00    	add    BYTE PTR [rsi+0x11],dh
    5fcd:	00 00                	add    BYTE PTR [rax],al
    5fcf:	00 c6                	add    dh,al
    5fd1:	11 00                	adc    DWORD PTR [rax],eax
	...

Disassembly of section .data:

0000000000006000 <__data_start>:
	...

0000000000006008 <__dso_handle>:
    6008:	08 60 00             	or     BYTE PTR [rax+0x0],ah
    600b:	00 00                	add    BYTE PTR [rax],al
    600d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 55 62             	sub    BYTE PTR [rbp+0x62],dl
   8:	75 6e                	jne    78 <__abi_tag-0x304>
   a:	74 75                	je     81 <__abi_tag-0x2fb>
   c:	20 31                	and    BYTE PTR [rcx],dh
   e:	33 2e                	xor    ebp,DWORD PTR [rsi]
  10:	33 2e                	xor    ebp,DWORD PTR [rsi]
  12:	30 2d 36 75 62 75    	xor    BYTE PTR [rip+0x75627536],ch        # 7562754e <_end+0x75621536>
  18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  19:	74 75                	je     90 <__abi_tag-0x2ec>
  1b:	32 7e 32             	xor    bh,BYTE PTR [rsi+0x32]
  1e:	34 2e                	xor    al,0x2e
  20:	30 34 29             	xor    BYTE PTR [rcx+rbp*1],dh
  23:	20 31                	and    BYTE PTR [rcx],dh
  25:	33 2e                	xor    ebp,DWORD PTR [rsi]
  27:	33 2e                	xor    ebp,DWORD PTR [rsi]
  29:	30 00                	xor    BYTE PTR [rax],al

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	e0 11                	loopne 23 <__abi_tag-0x359>
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	2e 00 00             	cs add BYTE PTR [rax],al
	...
  2f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  32:	00 00                	add    BYTE PTR [rax],al
  34:	02 00                	add    al,BYTE PTR [rax]
  36:	ec                   	in     al,dx
  37:	08 00                	or     BYTE PTR [rax],al
  39:	00 08                	add    BYTE PTR [rax],cl
  3b:	00 00                	add    BYTE PTR [rax],al
  3d:	00 00                	add    BYTE PTR [rax],al
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	13 00                	adc    eax,DWORD PTR [rax]
  43:	00 00                	add    BYTE PTR [rax],al
  45:	00 00                	add    BYTE PTR [rax],al
  47:	00 1e                	add    BYTE PTR [rsi],bl
  49:	07                   	(bad)
	...
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	2c 00                	sub    al,0x0
  62:	00 00                	add    BYTE PTR [rax],al
  64:	02 00                	add    al,BYTE PTR [rax]
  66:	57                   	push   rdi
  67:	22 00                	and    al,BYTE PTR [rax]
  69:	00 08                	add    BYTE PTR [rax],cl
  6b:	00 00                	add    BYTE PTR [rax],al
  6d:	00 00                	add    BYTE PTR [rax],al
  6f:	00 20                	add    BYTE PTR [rax],ah
  71:	1a 00                	sbb    al,BYTE PTR [rax]
  73:	00 00                	add    BYTE PTR [rax],al
  75:	00 00                	add    BYTE PTR [rax],al
  77:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
	...
  8d:	00 00                	add    BYTE PTR [rax],al
  8f:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
  92:	00 00                	add    BYTE PTR [rax],al
  94:	02 00                	add    al,BYTE PTR [rax]
  96:	98                   	cwde
  97:	31 00                	xor    DWORD PTR [rax],eax
  99:	00 08                	add    BYTE PTR [rax],cl
  9b:	00 00                	add    BYTE PTR [rax],al
  9d:	00 00                	add    BYTE PTR [rax],al
  9f:	00 c0                	add    al,al
  a1:	1e                   	(bad)
  a2:	00 00                	add    BYTE PTR [rax],al
  a4:	00 00                	add    BYTE PTR [rax],al
  a6:	00 00                	add    BYTE PTR [rax],al
  a8:	d3 05 00 00 00 00    	rol    DWORD PTR [rip+0x0],cl        # ae <__abi_tag-0x2ce>
	...
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	2c 00                	sub    al,0x0
  c2:	00 00                	add    BYTE PTR [rax],al
  c4:	02 00                	add    al,BYTE PTR [rax]
  c6:	8e 48 00             	mov    cs,WORD PTR [rax+0x0]
  c9:	00 08                	add    BYTE PTR [rax],cl
  cb:	00 00                	add    BYTE PTR [rax],al
  cd:	00 00                	add    BYTE PTR [rax],al
  cf:	00 a0 24 00 00 00    	add    BYTE PTR [rax+0x24],ah
  d5:	00 00                	add    BYTE PTR [rax],al
  d7:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
	...
  ee:	00 00                	add    BYTE PTR [rax],al
  f0:	2c 00                	sub    al,0x0
  f2:	00 00                	add    BYTE PTR [rax],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	38 57 00             	cmp    BYTE PTR [rdi+0x0],dl
  f9:	00 08                	add    BYTE PTR [rax],cl
  fb:	00 00                	add    BYTE PTR [rax],al
  fd:	00 00                	add    BYTE PTR [rax],al
  ff:	00 20                	add    BYTE PTR [rax],ah
 101:	26 00 00             	es add BYTE PTR [rax],al
 104:	00 00                	add    BYTE PTR [rax],al
 106:	00 00                	add    BYTE PTR [rax],al
 108:	3c 15                	cmp    al,0x15
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	e8 08 00 00 05       	call   500000d <_end+0x4ff9ff5>
       5:	00 01                	add    BYTE PTR [rcx],al
       7:	08 00                	or     BYTE PTR [rax],al
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 14 14             	add    BYTE PTR [rsp+rdx*1],dl
       e:	01 00                	add    DWORD PTR [rax],eax
      10:	00 21                	add    BYTE PTR [rcx],ah
      12:	14 00                	adc    al,0x0
      14:	00 00                	add    BYTE PTR [rax],al
      16:	00 00                	add    BYTE PTR [rax],al
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	1c 00                	sbb    al,0x0
	...
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	08 d6                	or     dh,dl
      2c:	0a 00                	or     al,BYTE PTR [rax]
      2e:	00 03                	add    BYTE PTR [rbx],al
      30:	d6                   	(bad)
      31:	17                   	(bad)
      32:	36 00 00             	ss add BYTE PTR [rax],al
      35:	00 03                	add    BYTE PTR [rbx],al
      37:	08 07                	or     BYTE PTR [rdi],al
      39:	f3 00 00             	repz add BYTE PTR [rax],al
      3c:	00 03                	add    BYTE PTR [rbx],al
      3e:	04 07                	add    al,0x7
      40:	f8                   	clc
      41:	00 00                	add    BYTE PTR [rax],al
      43:	00 15 08 03 01 08    	add    BYTE PTR [rip+0x8010308],dl        # 8010351 <_end+0x800a339>
      49:	ff 01                	inc    DWORD PTR [rcx]
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	03 02                	add    eax,DWORD PTR [rdx]
      4f:	07                   	(bad)
      50:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
      53:	00 03                	add    BYTE PTR [rbx],al
      55:	01 06                	add    DWORD PTR [rsi],eax
      57:	01 02                	add    DWORD PTR [rdx],eax
      59:	00 00                	add    BYTE PTR [rax],al
      5b:	03 02                	add    eax,DWORD PTR [rdx]
      5d:	05 5b 00 00 00       	add    eax,0x5b
      62:	16                   	(bad)
      63:	04 05                	add    al,0x5
      65:	69 6e 74 00 09 62 00 	imul   ebp,DWORD PTR [rsi+0x74],0x620900
      6c:	00 00                	add    BYTE PTR [rax],al
      6e:	08 a9 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],ch
      74:	2a 16                	sub    dl,BYTE PTR [rsi]
      76:	3d 00 00 00 03       	cmp    eax,0x3000000
      7b:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 166 <__abi_tag-0x216>
      81:	05 86 00 00 00       	add    eax,0x86
      86:	03 01                	add    eax,DWORD PTR [rcx]
      88:	06                   	(bad)
      89:	08 02                	or     BYTE PTR [rdx],al
      8b:	00 00                	add    BYTE PTR [rax],al
      8d:	09 86 00 00 00 05    	or     DWORD PTR [rsi+0x5000000],eax
      93:	8d 00                	lea    eax,[rax]
      95:	00 00                	add    BYTE PTR [rax],al
      97:	03 08                	add    ecx,DWORD PTR [rax]
      99:	05 e0 00 00 00       	add    eax,0xe0
      9e:	03 10                	add    edx,DWORD PTR [rax]
      a0:	04 f3                	add    al,0xf3
      a2:	01 00                	add    DWORD PTR [rax],eax
      a4:	00 03                	add    BYTE PTR [rbx],al
      a6:	08 07                	or     BYTE PTR [rdi],al
      a8:	ee                   	out    dx,al
      a9:	00 00                	add    BYTE PTR [rax],al
      ab:	00 03                	add    BYTE PTR [rbx],al
      ad:	04 04                	add    al,0x4
      af:	d3 00                	rol    DWORD PTR [rax],cl
      b1:	00 00                	add    BYTE PTR [rax],al
      b3:	0c 08                	or     al,0x8
      b5:	3c dd                	cmp    al,0xdd
      b7:	02 00                	add    al,BYTE PTR [rax]
      b9:	00 d6                	add    dh,dl
      bb:	00 00                	add    BYTE PTR [rax],al
      bd:	00 0d 49 02 00 00    	add    BYTE PTR [rip+0x249],cl        # 30c <__abi_tag-0x70>
      c3:	3d 09 62 00 00       	cmp    eax,0x6209
      c8:	00 0e                	add    BYTE PTR [rsi],cl
      ca:	72 65                	jb     131 <__abi_tag-0x24b>
      cc:	6d                   	ins    DWORD PTR es:[rdi],dx
      cd:	00 3e                	add    BYTE PTR [rsi],bh
      cf:	09 62 00             	or     DWORD PTR [rdx+0x0],esp
      d2:	00 00                	add    BYTE PTR [rax],al
      d4:	04 00                	add    al,0x0
      d6:	08 de                	or     dh,bl
      d8:	02 00                	add    al,BYTE PTR [rax]
      da:	00 02                	add    BYTE PTR [rdx],al
      dc:	3f                   	(bad)
      dd:	05 b3 00 00 00       	add    eax,0xb3
      e2:	0c 10                	or     al,0x10
      e4:	44 09 00             	or     DWORD PTR [rax],r8d
      e7:	00 00                	add    BYTE PTR [rax],al
      e9:	05 01 00 00 0d       	add    eax,0xd000001
      ee:	49 02 00             	rex.WB add al,BYTE PTR [r8]
      f1:	00 45 0e             	add    BYTE PTR [rbp+0xe],al
      f4:	7a 00                	jp     f6 <__abi_tag-0x286>
      f6:	00 00                	add    BYTE PTR [rax],al
      f8:	0e                   	(bad)
      f9:	72 65                	jb     160 <__abi_tag-0x21c>
      fb:	6d                   	ins    DWORD PTR es:[rdi],dx
      fc:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
      ff:	7a 00                	jp     101 <__abi_tag-0x27b>
     101:	00 00                	add    BYTE PTR [rax],al
     103:	08 00                	or     BYTE PTR [rax],al
     105:	08 0a                	or     BYTE PTR [rdx],cl
     107:	00 00                	add    BYTE PTR [rax],al
     109:	00 02                	add    BYTE PTR [rdx],al
     10b:	47 05 e2 00 00 00    	rex.RXB add eax,0xe2
     111:	0c 10                	or     al,0x10
     113:	4e b4 00             	rex.WRX mov spl,0x0
     116:	00 00                	add    BYTE PTR [rax],al
     118:	34 01                	xor    al,0x1
     11a:	00 00                	add    BYTE PTR [rax],al
     11c:	0d 49 02 00 00       	or     eax,0x249
     121:	4f 13 97 00 00 00 0e 	rex.WRXB adc r10,QWORD PTR [r15+0xe000000]
     128:	72 65                	jb     18f <__abi_tag-0x1ed>
     12a:	6d                   	ins    DWORD PTR es:[rdi],dx
     12b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     12e:	97                   	xchg   edi,eax
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	00 08                	add    BYTE PTR [rax],cl
     133:	00 08                	add    BYTE PTR [rax],cl
     135:	b5 00                	mov    ch,0x0
     137:	00 00                	add    BYTE PTR [rax],al
     139:	02 51 05             	add    dl,BYTE PTR [rcx+0x5]
     13c:	11 01                	adc    DWORD PTR [rcx],eax
     13e:	00 00                	add    BYTE PTR [rax],al
     140:	17                   	(bad)
     141:	cf                   	iret
     142:	02 00                	add    al,BYTE PTR [rax]
     144:	00 02                	add    BYTE PTR [rdx],al
     146:	b4 03                	mov    ah,0x3
     148:	0f 4d 01             	cmovge eax,DWORD PTR [rcx]
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	05 52 01 00 00       	add    eax,0x152
     152:	18 62 00             	sbb    BYTE PTR [rdx+0x0],ah
     155:	00 00                	add    BYTE PTR [rax],al
     157:	66 01 00             	add    WORD PTR [rax],ax
     15a:	00 01                	add    BYTE PTR [rcx],al
     15c:	66 01 00             	add    WORD PTR [rax],ax
     15f:	00 01                	add    BYTE PTR [rcx],al
     161:	66 01 00             	add    WORD PTR [rax],ax
     164:	00 00                	add    BYTE PTR [rax],al
     166:	05 6b 01 00 00       	add    eax,0x16b
     16b:	19 1a                	sbb    DWORD PTR [rdx],ebx
     16d:	73 74                	jae    1e3 <__abi_tag-0x199>
     16f:	64 00 0e             	add    BYTE PTR fs:[rsi],cl
     172:	32 01                	xor    al,BYTE PTR [rcx]
     174:	0b 3c 03             	or     edi,DWORD PTR [rbx+rax*1]
     177:	00 00                	add    BYTE PTR [rax],al
     179:	02 05 83 0b d6 00    	add    al,BYTE PTR [rip+0xd60b83]        # d60d02 <_end+0xd5acea>
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	02 05 84 0b 05 01    	add    al,BYTE PTR [rip+0x1050b84]        # 1050d0b <_end+0x104acf3>
     187:	00 00                	add    BYTE PTR [rax],al
     189:	02 05 8a 0b 3c 03    	add    al,BYTE PTR [rip+0x33c0b8a]        # 33c0d19 <_end+0x33bad01>
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	02 05 8d 0b 58 03    	add    al,BYTE PTR [rip+0x3580b8d]        # 3580d24 <_end+0x357ad0c>
     197:	00 00                	add    BYTE PTR [rax],al
     199:	02 05 90 0b 73 03    	add    al,BYTE PTR [rip+0x3730b90]        # 3730d2f <_end+0x372ad17>
     19f:	00 00                	add    BYTE PTR [rax],al
     1a1:	02 05 91 0b 90 03    	add    al,BYTE PTR [rip+0x3900b91]        # 3900d38 <_end+0x38fad20>
     1a7:	00 00                	add    BYTE PTR [rax],al
     1a9:	02 05 92 0b b0 03    	add    al,BYTE PTR [rip+0x3b00b92]        # 3b00d41 <_end+0x3afad29>
     1af:	00 00                	add    BYTE PTR [rax],al
     1b1:	02 05 93 0b c6 03    	add    al,BYTE PTR [rip+0x3c60b93]        # 3c60d4a <_end+0x3c5ad32>
     1b7:	00 00                	add    BYTE PTR [rax],al
     1b9:	02 05 95 0b f0 03    	add    al,BYTE PTR [rip+0x3f00b95]        # 3f00d54 <_end+0x3efad3c>
     1bf:	00 00                	add    BYTE PTR [rax],al
     1c1:	02 05 98 0b 0c 04    	add    al,BYTE PTR [rip+0x40c0b98]        # 40c0d5f <_end+0x40bad47>
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	02 05 9a 0b 22 04    	add    al,BYTE PTR [rip+0x4220b9a]        # 4220d69 <_end+0x421ad51>
     1cf:	00 00                	add    BYTE PTR [rax],al
     1d1:	02 05 9d 0b 3d 04    	add    al,BYTE PTR [rip+0x43d0b9d]        # 43d0d74 <_end+0x43cad5c>
     1d7:	00 00                	add    BYTE PTR [rax],al
     1d9:	02 05 9e 0b 58 04    	add    al,BYTE PTR [rip+0x4580b9e]        # 4580d7d <_end+0x457ad65>
     1df:	00 00                	add    BYTE PTR [rax],al
     1e1:	02 05 9f 0b 89 04    	add    al,BYTE PTR [rip+0x4890b9f]        # 4890d86 <_end+0x488ad6e>
     1e7:	00 00                	add    BYTE PTR [rax],al
     1e9:	02 05 a1 0b a9 04    	add    al,BYTE PTR [rip+0x4a90ba1]        # 4a90d90 <_end+0x4a8ad78>
     1ef:	00 00                	add    BYTE PTR [rax],al
     1f1:	02 05 a4 0b c9 04    	add    al,BYTE PTR [rip+0x4c90ba4]        # 4c90d9b <_end+0x4c8ad83>
     1f7:	00 00                	add    BYTE PTR [rax],al
     1f9:	02 05 a7 0b dc 04    	add    al,BYTE PTR [rip+0x4dc0ba7]        # 4dc0da6 <_end+0x4dbad8e>
     1ff:	00 00                	add    BYTE PTR [rax],al
     201:	02 05 a9 0b e9 04    	add    al,BYTE PTR [rip+0x4e90ba9]        # 4e90db0 <_end+0x4e8ad98>
     207:	00 00                	add    BYTE PTR [rax],al
     209:	02 05 aa 0b fa 04    	add    al,BYTE PTR [rip+0x4fa0baa]        # 4fa0db9 <_end+0x4f9ada1>
     20f:	00 00                	add    BYTE PTR [rax],al
     211:	02 05 ab 0b 1a 05    	add    al,BYTE PTR [rip+0x51a0bab]        # 51a0dc2 <_end+0x519adaa>
     217:	00 00                	add    BYTE PTR [rax],al
     219:	02 05 ac 0b 3d 05    	add    al,BYTE PTR [rip+0x53d0bac]        # 53d0dcb <_end+0x53cadb3>
     21f:	00 00                	add    BYTE PTR [rax],al
     221:	02 05 ad 0b 60 05    	add    al,BYTE PTR [rip+0x5600bad]        # 5600dd4 <_end+0x55fadbc>
     227:	00 00                	add    BYTE PTR [rax],al
     229:	02 05 af 0b 76 05    	add    al,BYTE PTR [rip+0x5760baf]        # 5760dde <_end+0x575adc6>
     22f:	00 00                	add    BYTE PTR [rax],al
     231:	02 05 b0 0b 9b 05    	add    al,BYTE PTR [rip+0x59b0bb0]        # 59b0de7 <_end+0x59aadcf>
     237:	00 00                	add    BYTE PTR [rax],al
     239:	02 05 f4 16 34 01    	add    al,BYTE PTR [rip+0x13416f4]        # 1341933 <_end+0x133b91b>
     23f:	00 00                	add    BYTE PTR [rax],al
     241:	02 05 f9 16 fb 05    	add    al,BYTE PTR [rip+0x5fb16f9]        # 5fb1940 <_end+0x5fab928>
     247:	00 00                	add    BYTE PTR [rax],al
     249:	02 05 fa 16 15 06    	add    al,BYTE PTR [rip+0x61516fa]        # 6151949 <_end+0x614b931>
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	02 05 fc 16 30 06    	add    al,BYTE PTR [rip+0x63016fc]        # 6301953 <_end+0x62fb93b>
     257:	00 00                	add    BYTE PTR [rax],al
     259:	02 05 fd 16 8c 06    	add    al,BYTE PTR [rip+0x68c16fd]        # 68c195c <_end+0x68bb944>
     25f:	00 00                	add    BYTE PTR [rax],al
     261:	02 05 fe 16 46 06    	add    al,BYTE PTR [rip+0x64616fe]        # 6461965 <_end+0x645b94d>
     267:	00 00                	add    BYTE PTR [rax],al
     269:	02 05 ff 16 69 06    	add    al,BYTE PTR [rip+0x66916ff]        # 669196e <_end+0x668b956>
     26f:	00 00                	add    BYTE PTR [rax],al
     271:	1b 05 00 01 16 a7    	sbb    eax,DWORD PTR [rip+0xffffffffa7160100]        # ffffffffa7160377 <_end+0xffffffffa715a35f>
     277:	06                   	(bad)
     278:	00 00                	add    BYTE PTR [rax],al
     27a:	07                   	(bad)
     27b:	61                   	(bad)
     27c:	62 73 00 89 0f       	(bad)
     281:	03 00                	add    eax,DWORD PTR [rax]
     283:	00 ea                	add    dl,ch
     285:	06                   	(bad)
     286:	00 00                	add    BYTE PTR [rax],al
     288:	92                   	xchg   edx,eax
     289:	02 00                	add    al,BYTE PTR [rax]
     28b:	00 01                	add    BYTE PTR [rcx],al
     28d:	ea                   	(bad)
     28e:	06                   	(bad)
     28f:	00 00                	add    BYTE PTR [rax],al
     291:	00 07                	add    BYTE PTR [rdi],al
     293:	61                   	(bad)
     294:	62 73 00 55 1b       	(bad)
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	00 f9                	add    cl,bh
     29d:	06                   	(bad)
     29e:	00 00                	add    BYTE PTR [rax],al
     2a0:	aa                   	stos   BYTE PTR es:[rdi],al
     2a1:	02 00                	add    al,BYTE PTR [rax]
     2a3:	00 01                	add    BYTE PTR [rcx],al
     2a5:	f9                   	stc
     2a6:	06                   	(bad)
     2a7:	00 00                	add    BYTE PTR [rax],al
     2a9:	00 07                	add    BYTE PTR [rdi],al
     2ab:	61                   	(bad)
     2ac:	62 73 00 4f fb       	(bad)
     2b1:	02 00                	add    al,BYTE PTR [rax]
     2b3:	00 9e 00 00 00 c2    	add    BYTE PTR [rsi-0x3e000000],bl
     2b9:	02 00                	add    al,BYTE PTR [rax]
     2bb:	00 01                	add    BYTE PTR [rcx],al
     2bd:	9e                   	sahf
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	00 00                	add    BYTE PTR [rax],al
     2c2:	07                   	(bad)
     2c3:	61                   	(bad)
     2c4:	62 73 00 4b 05       	(bad)
     2c9:	03 00                	add    eax,DWORD PTR [rax]
     2cb:	00 ac 00 00 00 da 02 	add    BYTE PTR [rax+rax*1+0x2da0000],ch
     2d2:	00 00                	add    BYTE PTR [rax],al
     2d4:	01 ac 00 00 00 00 07 	add    DWORD PTR [rax+rax*1+0x7000000],ebp
     2db:	61                   	(bad)
     2dc:	62 73 00 47 f1       	(bad)
     2e1:	02 00                	add    al,BYTE PTR [rax]
     2e3:	00 89 03 00 00 f2    	add    BYTE PTR [rcx-0xdfffffd],cl
     2e9:	02 00                	add    al,BYTE PTR [rax]
     2eb:	00 01                	add    BYTE PTR [rcx],al
     2ed:	89 03                	mov    DWORD PTR [rbx],eax
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	00 07                	add    BYTE PTR [rdi],al
     2f3:	61                   	(bad)
     2f4:	62 73 00 3d 41       	(bad)
     2f9:	00 00                	add    BYTE PTR [rax],al
     2fb:	00 97 00 00 00 0a    	add    BYTE PTR [rdi+0xa000000],dl
     301:	03 00                	add    eax,DWORD PTR [rax]
     303:	00 01                	add    BYTE PTR [rcx],al
     305:	97                   	xchg   edi,eax
     306:	00 00                	add    BYTE PTR [rax],al
     308:	00 00                	add    BYTE PTR [rax],al
     30a:	07                   	(bad)
     30b:	61                   	(bad)
     30c:	62 73 00 38 11       	(bad)
     311:	00 00                	add    BYTE PTR [rax],al
     313:	00 7a 00             	add    BYTE PTR [rdx+0x0],bh
     316:	00 00                	add    BYTE PTR [rax],al
     318:	22 03                	and    al,BYTE PTR [rbx]
     31a:	00 00                	add    BYTE PTR [rax],al
     31c:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     31f:	00 00                	add    BYTE PTR [rax],al
     321:	00 10                	add    BYTE PTR [rax],dl
     323:	64 69 76 00 b5 74 00 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b5
     32a:	00 
     32b:	00 05 01 00 00 01    	add    BYTE PTR [rip+0x1000001],al        # 1000332 <_end+0xffa31a>
     331:	7a 00                	jp     333 <__abi_tag-0x49>
     333:	00 00                	add    BYTE PTR [rax],al
     335:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     338:	00 00                	add    BYTE PTR [rax],al
     33a:	00 00                	add    BYTE PTR [rax],al
     33c:	04 6d                	add    al,0x6d
     33e:	00 00                	add    BYTE PTR [rax],al
     340:	00 de                	add    dh,bl
     342:	02 0c 62             	add    cl,BYTE PTR [rdx+riz*2]
     345:	00 00                	add    BYTE PTR [rax],al
     347:	00 52 03             	add    BYTE PTR [rdx+0x3],dl
     34a:	00 00                	add    BYTE PTR [rax],al
     34c:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     34f:	00 00                	add    BYTE PTR [rax],al
     351:	00 05 57 03 00 00    	add    BYTE PTR [rip+0x357],al        # 6ae <__abi_tag+0x332>
     357:	1c 1d                	sbb    al,0x1d
     359:	33 00                	xor    eax,DWORD PTR [rax]
     35b:	00 00                	add    BYTE PTR [rax],al
     35d:	02 e3                	add    ah,bl
     35f:	02 12                	add    dl,BYTE PTR [rdx]
     361:	33 00                	xor    eax,DWORD PTR [rax]
     363:	00 00                	add    BYTE PTR [rax],al
     365:	62                   	(bad)
     366:	00 00                	add    BYTE PTR [rax],al
     368:	00 73 03             	add    BYTE PTR [rbx+0x3],dh
     36b:	00 00                	add    BYTE PTR [rax],al
     36d:	01 52 03             	add    DWORD PTR [rdx+0x3],edx
     370:	00 00                	add    BYTE PTR [rax],al
     372:	00 06                	add    BYTE PTR [rsi],al
     374:	cd 01                	int    0x1
     376:	00 00                	add    BYTE PTR [rax],al
     378:	07                   	(bad)
     379:	19 01                	sbb    DWORD PTR [rcx],eax
     37b:	89 03                	mov    DWORD PTR [rbx],eax
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	89 03                	mov    DWORD PTR [rbx],eax
     381:	00 00                	add    BYTE PTR [rax],al
     383:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     389:	03 08                	add    ecx,DWORD PTR [rax]
     38b:	04 f8                	add    al,0xf8
     38d:	01 00                	add    DWORD PTR [rax],eax
     38f:	00 1e                	add    BYTE PTR [rsi],bl
     391:	d2 01                	rol    BYTE PTR [rcx],cl
     393:	00 00                	add    BYTE PTR [rax],al
     395:	02 e1                	add    ah,cl
     397:	01 01                	add    DWORD PTR [rcx],eax
     399:	62                   	(bad)
     39a:	00 00                	add    BYTE PTR [rax],al
     39c:	00 03                	add    BYTE PTR [rbx],al
     39e:	b0 03                	mov    al,0x3
     3a0:	00 00                	add    BYTE PTR [rax],al
     3a2:	1f                   	(bad)
     3a3:	e4 02                	in     al,0x2
     3a5:	00 00                	add    BYTE PTR [rax],al
     3a7:	02 e1                	add    ah,cl
     3a9:	01 01                	add    DWORD PTR [rcx],eax
     3ab:	92                   	xchg   edx,eax
     3ac:	00 00                	add    BYTE PTR [rax],al
     3ae:	00 00                	add    BYTE PTR [rax],al
     3b0:	04 dc                	add    al,0xdc
     3b2:	01 00                	add    DWORD PTR [rax],eax
     3b4:	00 e6                	add    dh,ah
     3b6:	01 01                	add    DWORD PTR [rcx],eax
     3b8:	7a 00                	jp     3ba <__abi_tag+0x3e>
     3ba:	00 00                	add    BYTE PTR [rax],al
     3bc:	c6 03 00             	mov    BYTE PTR [rbx],0x0
     3bf:	00 01                	add    BYTE PTR [rcx],al
     3c1:	92                   	xchg   edx,eax
     3c2:	00 00                	add    BYTE PTR [rax],al
     3c4:	00 00                	add    BYTE PTR [rax],al
     3c6:	06                   	(bad)
     3c7:	65 00 00             	add    BYTE PTR gs:[rax],al
     3ca:	00 08                	add    BYTE PTR [rax],cl
     3cc:	14 01                	adc    al,0x1
     3ce:	44 00 00             	add    BYTE PTR [rax],r8b
     3d1:	00 f0                	add    al,dh
     3d3:	03 00                	add    eax,DWORD PTR [rax]
     3d5:	00 01                	add    BYTE PTR [rcx],al
     3d7:	66 01 00             	add    WORD PTR [rax],ax
     3da:	00 01                	add    BYTE PTR [rcx],al
     3dc:	66 01 00             	add    WORD PTR [rax],ax
     3df:	00 01                	add    BYTE PTR [rcx],al
     3e1:	2a 00                	sub    al,BYTE PTR [rax]
     3e3:	00 00                	add    BYTE PTR [rax],al
     3e5:	01 2a                	add    DWORD PTR [rdx],ebp
     3e7:	00 00                	add    BYTE PTR [rax],al
     3e9:	00 01                	add    BYTE PTR [rcx],al
     3eb:	40 01 00             	rex add DWORD PTR [rax],eax
     3ee:	00 00                	add    BYTE PTR [rax],al
     3f0:	20 64 69 76          	and    BYTE PTR [rcx+rbp*2+0x76],ah
     3f4:	00 02                	add    BYTE PTR [rdx],al
     3f6:	e0 03                	loopne 3fb <__abi_tag+0x7f>
     3f8:	0e                   	(bad)
     3f9:	d6                   	(bad)
     3fa:	00 00                	add    BYTE PTR [rax],al
     3fc:	00 0c 04             	add    BYTE PTR [rsp+rax*1],cl
     3ff:	00 00                	add    BYTE PTR [rax],al
     401:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     404:	00 00                	add    BYTE PTR [rax],al
     406:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     409:	00 00                	add    BYTE PTR [rax],al
     40b:	00 04 bd 00 00 00 05 	add    BYTE PTR [rdi*4+0x5000000],al
     412:	03 0e                	add    ecx,DWORD PTR [rsi]
     414:	81 00 00 00 22 04    	add    DWORD PTR [rax],0x4220000
     41a:	00 00                	add    BYTE PTR [rax],al
     41c:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     422:	04 c3                	add    al,0xc3
     424:	02 00                	add    al,BYTE PTR [rax]
     426:	00 e2                	add    dl,ah
     428:	03 0f                	add    ecx,DWORD PTR [rdi]
     42a:	05 01 00 00 3d       	add    eax,0x3d000001
     42f:	04 00                	add    al,0x0
     431:	00 01                	add    BYTE PTR [rcx],al
     433:	7a 00                	jp     435 <__abi_tag+0xb9>
     435:	00 00                	add    BYTE PTR [rax],al
     437:	01 7a 00             	add    DWORD PTR [rdx+0x0],edi
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
     43f:	02 00                	add    al,BYTE PTR [rax]
     441:	00 26                	add    BYTE PTR [rsi],ah
     443:	04 0c                	add    al,0xc
     445:	62                   	(bad)
     446:	00 00                	add    BYTE PTR [rax],al
     448:	00 58 04             	add    BYTE PTR [rax+0x4],bl
     44b:	00 00                	add    BYTE PTR [rax],al
     44d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     453:	2a 00                	sub    al,BYTE PTR [rax]
     455:	00 00                	add    BYTE PTR [rax],al
     457:	00 06                	add    BYTE PTR [rsi],al
     459:	39 02                	cmp    DWORD PTR [rdx],eax
     45b:	00 00                	add    BYTE PTR [rax],al
     45d:	09 75 01             	or     DWORD PTR [rbp+0x1],esi
     460:	2a 00                	sub    al,BYTE PTR [rax]
     462:	00 00                	add    BYTE PTR [rax],al
     464:	78 04                	js     46a <__abi_tag+0xee>
     466:	00 00                	add    BYTE PTR [rax],al
     468:	01 78 04             	add    DWORD PTR [rax+0x4],edi
     46b:	00 00                	add    BYTE PTR [rax],al
     46d:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     473:	2a 00                	sub    al,BYTE PTR [rax]
     475:	00 00                	add    BYTE PTR [rax],al
     477:	00 05 7d 04 00 00    	add    BYTE PTR [rip+0x47d],al        # 8fa <__abi_tag+0x57e>
     47d:	03 04 05 61 02 00 00 	add    eax,DWORD PTR [rax*1+0x261]
     484:	09 7d 04             	or     DWORD PTR [rbp+0x4],edi
     487:	00 00                	add    BYTE PTR [rax],al
     489:	04 d9                	add    al,0xd9
     48b:	00 00                	add    BYTE PTR [rax],al
     48d:	00 29                	add    BYTE PTR [rcx],ch
     48f:	04 0c                	add    al,0xc
     491:	62                   	(bad)
     492:	00 00                	add    BYTE PTR [rax],al
     494:	00 a9 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],ch
     49a:	78 04                	js     4a0 <__abi_tag+0x124>
     49c:	00 00                	add    BYTE PTR [rax],al
     49e:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     4a4:	2a 00                	sub    al,BYTE PTR [rax]
     4a6:	00 00                	add    BYTE PTR [rax],al
     4a8:	00 11                	add    BYTE PTR [rcx],dl
     4aa:	25 00 00 00 ca       	and    eax,0xca000000
     4af:	03 c9                	add    ecx,ecx
     4b1:	04 00                	add    al,0x0
     4b3:	00 01                	add    BYTE PTR [rcx],al
     4b5:	44 00 00             	add    BYTE PTR [rax],r8b
     4b8:	00 01                	add    BYTE PTR [rcx],al
     4ba:	2a 00                	sub    al,BYTE PTR [rax]
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	01 2a                	add    DWORD PTR [rdx],ebp
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	00 01                	add    BYTE PTR [rcx],al
     4c4:	40 01 00             	rex add DWORD PTR [rax],eax
     4c7:	00 00                	add    BYTE PTR [rax],al
     4c9:	21 36                	and    DWORD PTR [rsi],esi
     4cb:	00 00                	add    BYTE PTR [rax],al
     4cd:	00 02                	add    BYTE PTR [rdx],al
     4cf:	fa                   	cli
     4d0:	02 0d dc 04 00 00    	add    cl,BYTE PTR [rip+0x4dc]        # 9b2 <__abi_tag+0x636>
     4d6:	01 62 00             	add    DWORD PTR [rdx+0x0],esp
     4d9:	00 00                	add    BYTE PTR [rax],al
     4db:	00 22                	add    BYTE PTR [rdx],ah
     4dd:	ec                   	in     al,dx
     4de:	02 00                	add    al,BYTE PTR [rax]
     4e0:	00 02                	add    BYTE PTR [rdx],al
     4e2:	3d 02 0c 62 00       	cmp    eax,0x620c02
     4e7:	00 00                	add    BYTE PTR [rax],al
     4e9:	11 eb                	adc    ebx,ebp
     4eb:	02 00                	add    al,BYTE PTR [rax]
     4ed:	00 3f                	add    BYTE PTR [rdi],bh
     4ef:	02 fa                	add    bh,dl
     4f1:	04 00                	add    al,0x0
     4f3:	00 01                	add    BYTE PTR [rcx],al
     4f5:	3d 00 00 00 00       	cmp    eax,0x0
     4fa:	06                   	(bad)
     4fb:	05 01 00 00 02       	add    eax,0x2000001
     500:	76 0f                	jbe    511 <__abi_tag+0x195>
     502:	89 03                	mov    DWORD PTR [rbx],eax
     504:	00 00                	add    BYTE PTR [rax],al
     506:	15 05 00 00 01       	adc    eax,0x1000005
     50b:	92                   	xchg   edx,eax
     50c:	00 00                	add    BYTE PTR [rax],al
     50e:	00 01                	add    BYTE PTR [rcx],al
     510:	15 05 00 00 00       	adc    eax,0x5
     515:	05 81 00 00 00       	add    eax,0x81
     51a:	0a 54 00 00          	or     dl,BYTE PTR [rax+rax*1+0x0]
     51e:	00 d7                	add    bh,dl
     520:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     523:	00 00                	add    BYTE PTR [rax],al
     525:	7a 00                	jp     527 <__abi_tag+0x1ab>
     527:	00 00                	add    BYTE PTR [rax],al
     529:	3d 05 00 00 01       	cmp    eax,0x1000005
     52e:	92                   	xchg   edx,eax
     52f:	00 00                	add    BYTE PTR [rax],al
     531:	00 01                	add    BYTE PTR [rcx],al
     533:	15 05 00 00 01       	adc    eax,0x1000005
     538:	62                   	(bad)
     539:	00 00                	add    BYTE PTR [rax],al
     53b:	00 00                	add    BYTE PTR [rax],al
     53d:	0a 25 02 00 00 db    	or     ah,BYTE PTR [rip+0xffffffffdb000002]        # ffffffffdb000545 <_end+0xffffffffdaffa52d>
     543:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
     546:	00 00                	add    BYTE PTR [rax],al
     548:	36 00 00             	ss add BYTE PTR [rax],al
     54b:	00 60 05             	add    BYTE PTR [rax+0x5],ah
     54e:	00 00                	add    BYTE PTR [rax],al
     550:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     556:	15 05 00 00 01       	adc    eax,0x1000005
     55b:	62                   	(bad)
     55c:	00 00                	add    BYTE PTR [rax],al
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	04 db                	add    al,0xdb
     562:	25 00 00 9b 03       	and    eax,0x39b0000
     567:	0c 62                	or     al,0x62
     569:	00 00                	add    BYTE PTR [rax],al
     56b:	00 76 05             	add    BYTE PTR [rsi+0x5],dh
     56e:	00 00                	add    BYTE PTR [rax],al
     570:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     576:	06                   	(bad)
     577:	e1 01                	loope  57a <__abi_tag+0x1fe>
     579:	00 00                	add    BYTE PTR [rax],al
     57b:	09 8f 01 2a 00 00    	or     DWORD PTR [rdi+0x2a01],ecx
     581:	00 96 05 00 00 01    	add    BYTE PTR [rsi+0x1000005],dl
     587:	81 00 00 00 01 96    	add    DWORD PTR [rax],0x96010000
     58d:	05 00 00 01 2a       	add    eax,0x2a010000
     592:	00 00                	add    BYTE PTR [rax],al
     594:	00 00                	add    BYTE PTR [rax],al
     596:	05 84 04 00 00       	add    eax,0x484
     59b:	06                   	(bad)
     59c:	42 02 00             	rex.X add al,BYTE PTR [rax]
     59f:	00 09                	add    BYTE PTR [rcx],cl
     5a1:	4f 01 62 00          	rex.WRXB add QWORD PTR [r10+0x0],r12
     5a5:	00 00                	add    BYTE PTR [rax],al
     5a7:	b6 05                	mov    dh,0x5
     5a9:	00 00                	add    BYTE PTR [rax],al
     5ab:	01 81 00 00 00 01    	add    DWORD PTR [rcx+0x1000000],eax
     5b1:	7d 04                	jge    5b7 <__abi_tag+0x23b>
     5b3:	00 00                	add    BYTE PTR [rax],al
     5b5:	00 23                	add    BYTE PTR [rbx],ah
     5b7:	12 02                	adc    al,BYTE PTR [rdx]
     5b9:	00 00                	add    BYTE PTR [rax],al
     5bb:	0e                   	(bad)
     5bc:	57                   	push   rdi
     5bd:	01 0b                	add    DWORD PTR [rbx],ecx
     5bf:	15 06 00 00 02       	adc    eax,0x2000006
     5c4:	05 cc 0b 34 01       	add    eax,0x1340bcc
     5c9:	00 00                	add    BYTE PTR [rax],al
     5cb:	02 05 dc 0b 15 06    	add    al,BYTE PTR [rip+0x6150bdc]        # 61511ad <_end+0x614b195>
     5d1:	00 00                	add    BYTE PTR [rax],al
     5d3:	02 05 e7 0b 30 06    	add    al,BYTE PTR [rip+0x6300be7]        # 63011c0 <_end+0x62fb1a8>
     5d9:	00 00                	add    BYTE PTR [rax],al
     5db:	02 05 e8 0b 46 06    	add    al,BYTE PTR [rip+0x6460be8]        # 64611c9 <_end+0x645b1b1>
     5e1:	00 00                	add    BYTE PTR [rax],al
     5e3:	02 05 e9 0b 69 06    	add    al,BYTE PTR [rip+0x6690be9]        # 66911d2 <_end+0x668b1ba>
     5e9:	00 00                	add    BYTE PTR [rax],al
     5eb:	02 05 eb 0b 8c 06    	add    al,BYTE PTR [rip+0x68c0beb]        # 68c11dc <_end+0x68bb1c4>
     5f1:	00 00                	add    BYTE PTR [rax],al
     5f3:	02 05 ec 0b a7 06    	add    al,BYTE PTR [rip+0x6a70bec]        # 6a711e5 <_end+0x6a6b1cd>
     5f9:	00 00                	add    BYTE PTR [rax],al
     5fb:	10 64 69 76          	adc    BYTE PTR [rcx+rbp*2+0x76],ah
     5ff:	00 d9                	add    cl,bl
     601:	b8 01 00 00 34       	mov    eax,0x34000001
     606:	01 00                	add    DWORD PTR [rax],eax
     608:	00 01                	add    BYTE PTR [rcx],al
     60a:	97                   	xchg   edi,eax
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 01                	add    BYTE PTR [rcx],al
     60f:	97                   	xchg   edi,eax
     610:	00 00                	add    BYTE PTR [rax],al
     612:	00 00                	add    BYTE PTR [rax],al
     614:	00 04 c2             	add    BYTE PTR [rdx+rax*8],al
     617:	02 00                	add    al,BYTE PTR [rax]
     619:	00 e6                	add    dh,ah
     61b:	03 1e                	add    ebx,DWORD PTR [rsi]
     61d:	34 01                	xor    al,0x1
     61f:	00 00                	add    BYTE PTR [rax],al
     621:	30 06                	xor    BYTE PTR [rsi],al
     623:	00 00                	add    BYTE PTR [rax],al
     625:	01 97 00 00 00 01    	add    DWORD PTR [rdi+0x1000000],edx
     62b:	97                   	xchg   edi,eax
     62c:	00 00                	add    BYTE PTR [rax],al
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	04 2d                	add    al,0x2d
     632:	02 00                	add    al,BYTE PTR [rax]
     634:	00 ed                	add    ch,ch
     636:	01 01                	add    DWORD PTR [rcx],eax
     638:	97                   	xchg   edi,eax
     639:	00 00                	add    BYTE PTR [rax],al
     63b:	00 46 06             	add    BYTE PTR [rsi+0x6],al
     63e:	00 00                	add    BYTE PTR [rax],al
     640:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     646:	0a 88 00 00 00 ee    	or     cl,BYTE PTR [rax-0x12000000]
     64c:	16                   	(bad)
     64d:	7f 00                	jg     64f <__abi_tag+0x2d3>
     64f:	00 00                	add    BYTE PTR [rax],al
     651:	97                   	xchg   edi,eax
     652:	00 00                	add    BYTE PTR [rax],al
     654:	00 69 06             	add    BYTE PTR [rcx+0x6],ch
     657:	00 00                	add    BYTE PTR [rax],al
     659:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     65f:	15 05 00 00 01       	adc    eax,0x1000005
     664:	62                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	00 00                	add    BYTE PTR [rax],al
     669:	0a b9 02 00 00 f3    	or     bh,BYTE PTR [rcx-0xcfffffe]
     66f:	1f                   	(bad)
     670:	b0 02                	mov    al,0x2
     672:	00 00                	add    BYTE PTR [rax],al
     674:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     675:	00 00                	add    BYTE PTR [rax],al
     677:	00 8c 06 00 00 01 92 	add    BYTE PTR [rsi+rax*1-0x6dff0000],cl
     67e:	00 00                	add    BYTE PTR [rax],al
     680:	00 01                	add    BYTE PTR [rcx],al
     682:	15 05 00 00 01       	adc    eax,0x1000005
     687:	62                   	(bad)
     688:	00 00                	add    BYTE PTR [rax],al
     68a:	00 00                	add    BYTE PTR [rax],al
     68c:	06                   	(bad)
     68d:	97                   	xchg   edi,eax
     68e:	02 00                	add    al,BYTE PTR [rax]
     690:	00 02                	add    BYTE PTR [rdx],al
     692:	7c 0e                	jl     6a2 <__abi_tag+0x326>
     694:	ac                   	lods   al,BYTE PTR ds:[rsi]
     695:	00 00                	add    BYTE PTR [rax],al
     697:	00 a7 06 00 00 01    	add    BYTE PTR [rdi+0x1000006],ah
     69d:	92                   	xchg   edx,eax
     69e:	00 00                	add    BYTE PTR [rax],al
     6a0:	00 01                	add    BYTE PTR [rcx],al
     6a2:	15 05 00 00 00       	adc    eax,0x5
     6a7:	06                   	(bad)
     6a8:	2b 00                	sub    eax,DWORD PTR [rax]
     6aa:	00 00                	add    BYTE PTR [rax],al
     6ac:	02 7f 14             	add    bh,BYTE PTR [rdi+0x14]
     6af:	9e                   	sahf
     6b0:	00 00                	add    BYTE PTR [rax],al
     6b2:	00 c2                	add    dl,al
     6b4:	06                   	(bad)
     6b5:	00 00                	add    BYTE PTR [rax],al
     6b7:	01 92 00 00 00 01    	add    DWORD PTR [rdx+0x1000000],edx
     6bd:	15 05 00 00 00       	adc    eax,0x5
     6c2:	02 0a                	add    cl,BYTE PTR [rdx]
     6c4:	27                   	(bad)
     6c5:	0c 3c                	or     al,0x3c
     6c7:	03 00                	add    eax,DWORD PTR [rax]
     6c9:	00 02                	add    BYTE PTR [rdx],al
     6cb:	0a 2b                	or     ch,BYTE PTR [rbx]
     6cd:	0e                   	(bad)
     6ce:	58                   	pop    rax
     6cf:	03 00                	add    eax,DWORD PTR [rax]
     6d1:	00 02                	add    BYTE PTR [rdx],al
     6d3:	0a 2e                	or     ch,BYTE PTR [rsi]
     6d5:	0e                   	(bad)
     6d6:	c9                   	leave
     6d7:	04 00                	add    al,0x0
     6d9:	00 02                	add    BYTE PTR [rdx],al
     6db:	0a 36                	or     dh,BYTE PTR [rsi]
     6dd:	0c d6                	or     al,0xd6
     6df:	00 00                	add    BYTE PTR [rax],al
     6e1:	00 02                	add    BYTE PTR [rdx],al
     6e3:	0a 37                	or     dh,BYTE PTR [rdi]
     6e5:	0c 05                	or     al,0x5
     6e7:	01 00                	add    DWORD PTR [rax],eax
     6e9:	00 03                	add    BYTE PTR [rbx],al
     6eb:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
     6ee:	02 00                	add    al,BYTE PTR [rax]
     6f0:	00 02                	add    BYTE PTR [rdx],al
     6f2:	0a 39                	or     bh,BYTE PTR [rcx]
     6f4:	0c 7a                	or     al,0x7a
     6f6:	02 00                	add    al,BYTE PTR [rax]
     6f8:	00 03                	add    BYTE PTR [rbx],al
     6fa:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 8ea <__abi_tag+0x56e>
     700:	02 0a                	add    cl,BYTE PTR [rdx]
     702:	39 0c 92             	cmp    DWORD PTR [rdx+rdx*4],ecx
     705:	02 00                	add    al,BYTE PTR [rax]
     707:	00 02                	add    BYTE PTR [rdx],al
     709:	0a 39                	or     bh,BYTE PTR [rcx]
     70b:	0c aa                	or     al,0xaa
     70d:	02 00                	add    al,BYTE PTR [rax]
     70f:	00 02                	add    BYTE PTR [rdx],al
     711:	0a 39                	or     bh,BYTE PTR [rcx]
     713:	0c c2                	or     al,0xc2
     715:	02 00                	add    al,BYTE PTR [rax]
     717:	00 02                	add    BYTE PTR [rdx],al
     719:	0a 39                	or     bh,BYTE PTR [rcx]
     71b:	0c da                	or     al,0xda
     71d:	02 00                	add    al,BYTE PTR [rax]
     71f:	00 02                	add    BYTE PTR [rdx],al
     721:	0a 39                	or     bh,BYTE PTR [rcx]
     723:	0c f2                	or     al,0xf2
     725:	02 00                	add    al,BYTE PTR [rax]
     727:	00 02                	add    BYTE PTR [rdx],al
     729:	0a 39                	or     bh,BYTE PTR [rcx]
     72b:	0c 0a                	or     al,0xa
     72d:	03 00                	add    eax,DWORD PTR [rax]
     72f:	00 02                	add    BYTE PTR [rdx],al
     731:	0a 3a                	or     bh,BYTE PTR [rdx]
     733:	0c 73                	or     al,0x73
     735:	03 00                	add    eax,DWORD PTR [rax]
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	0a 3b                	or     bh,BYTE PTR [rbx]
     73b:	0c 90                	or     al,0x90
     73d:	03 00                	add    eax,DWORD PTR [rax]
     73f:	00 02                	add    BYTE PTR [rdx],al
     741:	0a 3c 0c             	or     bh,BYTE PTR [rsp+rcx*1]
     744:	b0 03                	mov    al,0x3
     746:	00 00                	add    BYTE PTR [rax],al
     748:	02 0a                	add    cl,BYTE PTR [rdx]
     74a:	3d 0c c6 03 00       	cmp    eax,0x3c60c
     74f:	00 02                	add    BYTE PTR [rdx],al
     751:	0a 3f                	or     bh,BYTE PTR [rdi]
     753:	0c fb                	or     al,0xfb
     755:	05 00 00 02 0a       	add    eax,0xa020000
     75a:	3f                   	(bad)
     75b:	0c 22                	or     al,0x22
     75d:	03 00                	add    eax,DWORD PTR [rax]
     75f:	00 02                	add    BYTE PTR [rdx],al
     761:	0a 3f                	or     bh,BYTE PTR [rdi]
     763:	0c f0                	or     al,0xf0
     765:	03 00                	add    eax,DWORD PTR [rax]
     767:	00 02                	add    BYTE PTR [rdx],al
     769:	0a 41 0c             	or     al,BYTE PTR [rcx+0xc]
     76c:	0c 04                	or     al,0x4
     76e:	00 00                	add    BYTE PTR [rax],al
     770:	02 0a                	add    cl,BYTE PTR [rdx]
     772:	43 0c 22             	rex.XB or al,0x22
     775:	04 00                	add    al,0x0
     777:	00 02                	add    BYTE PTR [rdx],al
     779:	0a 46 0c             	or     al,BYTE PTR [rsi+0xc]
     77c:	3d 04 00 00 02       	cmp    eax,0x2000004
     781:	0a 47 0c             	or     al,BYTE PTR [rdi+0xc]
     784:	58                   	pop    rax
     785:	04 00                	add    al,0x0
     787:	00 02                	add    BYTE PTR [rdx],al
     789:	0a 48 0c             	or     cl,BYTE PTR [rax+0xc]
     78c:	89 04 00             	mov    DWORD PTR [rax+rax*1],eax
     78f:	00 02                	add    BYTE PTR [rdx],al
     791:	0a 4a 0c             	or     cl,BYTE PTR [rdx+0xc]
     794:	a9 04 00 00 02       	test   eax,0x2000004
     799:	0a 4b 0c             	or     cl,BYTE PTR [rbx+0xc]
     79c:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
     79f:	00 02                	add    BYTE PTR [rdx],al
     7a1:	0a 4d 0c             	or     cl,BYTE PTR [rbp+0xc]
     7a4:	e9 04 00 00 02       	jmp    20007ad <_end+0x1ffa795>
     7a9:	0a 4e 0c             	or     cl,BYTE PTR [rsi+0xc]
     7ac:	fa                   	cli
     7ad:	04 00                	add    al,0x0
     7af:	00 02                	add    BYTE PTR [rdx],al
     7b1:	0a 4f 0c             	or     cl,BYTE PTR [rdi+0xc]
     7b4:	1a 05 00 00 02 0a    	sbb    al,BYTE PTR [rip+0xa020000]        # a0207ba <_end+0xa01a7a2>
     7ba:	50                   	push   rax
     7bb:	0c 3d                	or     al,0x3d
     7bd:	05 00 00 02 0a       	add    eax,0xa020000
     7c2:	51                   	push   rcx
     7c3:	0c 60                	or     al,0x60
     7c5:	05 00 00 02 0a       	add    eax,0xa020000
     7ca:	53                   	push   rbx
     7cb:	0c 76                	or     al,0x76
     7cd:	05 00 00 02 0a       	add    eax,0xa020000
     7d2:	54                   	push   rsp
     7d3:	0c 9b                	or     al,0x9b
     7d5:	05 00 00 03 02       	add    eax,0x2030000
     7da:	04 00                	add    al,0x0
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 03                	add    BYTE PTR [rbx],al
     7e0:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
     7e3:	02 00                	add    al,BYTE PTR [rax]
     7e5:	00 08                	add    BYTE PTR [rax],cl
     7e7:	ab                   	stos   DWORD PTR es:[rdi],eax
     7e8:	00 00                	add    BYTE PTR [rax],al
     7ea:	00 0b                	add    BYTE PTR [rbx],cl
     7ec:	1a 14 6e             	sbb    dl,BYTE PTR [rsi+rbp*2]
     7ef:	00 00                	add    BYTE PTR [rax],al
     7f1:	00 09                	add    BYTE PTR [rcx],cl
     7f3:	e6 07                	out    0x7,al
     7f5:	00 00                	add    BYTE PTR [rax],al
     7f7:	0f 69 02             	punpckhwd mm0,QWORD PTR [rdx]
     7fa:	00 00                	add    BYTE PTR [rax],al
     7fc:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
     7ff:	00 00                	add    BYTE PTR [rax],al
     801:	0f                   	(bad)
     802:	0f 75 02             	pcmpeqw mm0,QWORD PTR [rdx]
     805:	00 00                	add    BYTE PTR [rax],al
     807:	09 69 00             	or     DWORD PTR [rcx+0x0],ebp
     80a:	00 00                	add    BYTE PTR [rax],al
     80c:	02 0f                	add    cl,BYTE PTR [rdi]
     80e:	c4                   	(bad)
     80f:	00 00                	add    BYTE PTR [rax],al
     811:	00 0a                	add    BYTE PTR [rdx],cl
     813:	69 00 00 00 20 24    	imul   eax,DWORD PTR [rax],0x24200000
     819:	90                   	nop
     81a:	00 00                	add    BYTE PTR [rax],al
     81c:	00 0d 06 10 f2 07    	add    BYTE PTR [rip+0x7f21006],cl        # 7f21828 <_end+0x7f1b810>
     822:	00 00                	add    BYTE PTR [rax],al
     824:	40                   	rex
     825:	42 0f 00 25 0c 01 00 	rex.X verr WORD PTR [rip+0x10c]        # 939 <__abi_tag+0x5bd>
     82c:	00 
     82d:	0d 1d 06 9e 02       	or     eax,0x29e061d
     832:	00 00                	add    BYTE PTR [rax],al
     834:	48 08 00             	rex.W or BYTE PTR [rax],al
     837:	00 01                	add    BYTE PTR [rcx],al
     839:	92                   	xchg   edx,eax
     83a:	00 00                	add    BYTE PTR [rax],al
     83c:	00 01                	add    BYTE PTR [rcx],al
     83e:	e6 07                	out    0x7,al
     840:	00 00                	add    BYTE PTR [rax],al
     842:	01 92 00 00 00 00    	add    DWORD PTR [rdx+0x0],edx
     848:	26 a4                	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     84a:	00 00                	add    BYTE PTR [rax],al
     84c:	00 01                	add    BYTE PTR [rcx],al
     84e:	07                   	(bad)
     84f:	05 62 00 00 00       	add    eax,0x62
     854:	e0 11                	loopne 867 <__abi_tag+0x4eb>
     856:	00 00                	add    BYTE PTR [rax],al
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	00 00                	add    BYTE PTR [rax],al
     85c:	2e 00 00             	cs add BYTE PTR [rax],al
     85f:	00 00                	add    BYTE PTR [rax],al
     861:	00 00                	add    BYTE PTR [rax],al
     863:	00 01                	add    BYTE PTR [rcx],al
     865:	9c                   	pushf
     866:	12 0d 02 00 00 0e    	adc    cl,BYTE PTR [rip+0xe000002]        # e00086e <_end+0xdffa856>
     86c:	62                   	(bad)
     86d:	00 00                	add    BYTE PTR [rax],al
     86f:	00 10                	add    BYTE PTR [rax],dl
     871:	00 00                	add    BYTE PTR [rax],al
     873:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     876:	00 00                	add    BYTE PTR [rax],al
     878:	12 d7                	adc    dl,bh
     87a:	01 00                	add    DWORD PTR [rax],eax
     87c:	00 1a                	add    BYTE PTR [rdx],bl
     87e:	15 05 00 00 2b       	adc    eax,0x2b000005
     883:	00 00                	add    BYTE PTR [rax],al
     885:	00 27                	add    BYTE PTR [rdi],ah
     887:	00 00                	add    BYTE PTR [rax],al
     889:	00 27                	add    BYTE PTR [rdi],ah
     88b:	90                   	nop
     88c:	03 00                	add    eax,DWORD PTR [rax]
     88e:	00 f2                	add    dl,dh
     890:	11 00                	adc    DWORD PTR [rax],eax
     892:	00 00                	add    BYTE PTR [rax],al
     894:	00 00                	add    BYTE PTR [rax],al
     896:	00 00                	add    BYTE PTR [rax],al
     898:	0c 00                	or     al,0x0
     89a:	00 00                	add    BYTE PTR [rax],al
     89c:	01 08                	add    DWORD PTR [rax],ecx
     89e:	1d c9 08 00 00       	sbb    eax,0x8c9
     8a3:	28 a2 03 00 00 44    	sub    BYTE PTR [rdx+0x44000003],ah
     8a9:	00 00                	add    BYTE PTR [rax],al
     8ab:	00 42 00             	add    BYTE PTR [rdx+0x0],al
     8ae:	00 00                	add    BYTE PTR [rax],al
     8b0:	13 f9                	adc    edi,ecx
     8b2:	11 00                	adc    DWORD PTR [rax],eax
     8b4:	00 00                	add    BYTE PTR [rax],al
     8b6:	00 00                	add    BYTE PTR [rax],al
     8b8:	00 1a                	add    BYTE PTR [rdx],bl
     8ba:	05 00 00 0b 01       	add    eax,0x10b0000
     8bf:	54                   	push   rsp
     8c0:	01 30                	add    DWORD PTR [rax],esi
     8c2:	0b 01                	or     eax,DWORD PTR [rcx]
     8c4:	51                   	push   rcx
     8c5:	01 3a                	add    DWORD PTR [rdx],edi
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	13 0a                	adc    ecx,DWORD PTR [rdx]
     8cb:	12 00                	adc    al,BYTE PTR [rax]
     8cd:	00 00                	add    BYTE PTR [rax],al
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	00 28                	add    BYTE PTR [rax],ch
     8d3:	08 00                	or     BYTE PTR [rax],al
     8d5:	00 0b                	add    BYTE PTR [rbx],cl
     8d7:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
     8da:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
     8dd:	00 00                	add    BYTE PTR [rax],al
     8df:	00 00                	add    BYTE PTR [rax],al
     8e1:	00 00                	add    BYTE PTR [rax],al
     8e3:	0b 01                	or     eax,DWORD PTR [rcx]
     8e5:	51                   	push   rcx
     8e6:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
     8e9:	00 00                	add    BYTE PTR [rax],al
     8eb:	00 67 19             	add    BYTE PTR [rdi+0x19],ah
     8ee:	00 00                	add    BYTE PTR [rax],al
     8f0:	05 00 01 08 87       	add    eax,0x87080100
     8f5:	02 00                	add    al,BYTE PTR [rax]
     8f7:	00 3b                	add    BYTE PTR [rbx],bh
     8f9:	14 01                	adc    al,0x1
     8fb:	00 00                	add    BYTE PTR [rax],al
     8fd:	21 81 01 00 00 00    	and    DWORD PTR [rcx+0x1],eax
     903:	00 00                	add    BYTE PTR [rax],al
     905:	00 00                	add    BYTE PTR [rax],al
     907:	13 00                	adc    eax,DWORD PTR [rax]
     909:	00 00                	add    BYTE PTR [rax],al
     90b:	00 00                	add    BYTE PTR [rax],al
     90d:	00 1e                	add    BYTE PTR [rsi],bl
     90f:	07                   	(bad)
     910:	00 00                	add    BYTE PTR [rax],al
     912:	00 00                	add    BYTE PTR [rax],al
     914:	00 00                	add    BYTE PTR [rax],al
     916:	e7 00                	out    0x0,eax
     918:	00 00                	add    BYTE PTR [rax],al
     91a:	08 d6                	or     dh,dl
     91c:	0a 00                	or     al,BYTE PTR [rax]
     91e:	00 06                	add    BYTE PTR [rsi],al
     920:	d6                   	(bad)
     921:	17                   	(bad)
     922:	3a 00                	cmp    al,BYTE PTR [rax]
     924:	00 00                	add    BYTE PTR [rax],al
     926:	05 08 07 f3 00       	add    eax,0xf30708
     92b:	00 00                	add    BYTE PTR [rax],al
     92d:	22 08                	and    cl,BYTE PTR [rax]
     92f:	3c dd                	cmp    al,0xdd
     931:	02 00                	add    al,BYTE PTR [rax]
     933:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     936:	00 00                	add    BYTE PTR [rax],al
     938:	06                   	(bad)
     939:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     93c:	00 07                	add    BYTE PTR [rdi],al
     93e:	3d 09 66 00 00       	cmp    eax,0x6609
     943:	00 00                	add    BYTE PTR [rax],al
     945:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     948:	6d                   	ins    DWORD PTR es:[rdi],dx
     949:	00 3e                	add    BYTE PTR [rsi],bh
     94b:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
     94e:	00 00                	add    BYTE PTR [rax],al
     950:	04 00                	add    al,0x0
     952:	3c 04                	cmp    al,0x4
     954:	05 69 6e 74 00       	add    eax,0x746e69
     959:	12 66 00             	adc    ah,BYTE PTR [rsi+0x0]
     95c:	00 00                	add    BYTE PTR [rax],al
     95e:	08 de                	or     dh,bl
     960:	02 00                	add    al,BYTE PTR [rax]
     962:	00 07                	add    BYTE PTR [rdi],al
     964:	3f                   	(bad)
     965:	05 41 00 00 00       	add    eax,0x41
     96a:	22 10                	and    dl,BYTE PTR [rax]
     96c:	44 09 00             	or     DWORD PTR [rax],r8d
     96f:	00 00                	add    BYTE PTR [rax],al
     971:	a3 00 00 00 06 49 02 	movabs ds:0x24906000000,eax
     978:	00 00 
     97a:	07                   	(bad)
     97b:	45 0e                	rex.RB (bad)
     97d:	a3 00 00 00 00 23 72 	movabs ds:0x6d65722300000000,eax
     984:	65 6d 
     986:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
     989:	a3 00 00 00 08 00 05 	movabs ds:0x508050008000000,eax
     990:	08 05 
     992:	e5 00                	in     eax,0x0
     994:	00 00                	add    BYTE PTR [rax],al
     996:	08 0a                	or     BYTE PTR [rdx],cl
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	00 07                	add    BYTE PTR [rdi],al
     99c:	47 05 7e 00 00 00    	rex.RXB add eax,0x7e
     9a2:	22 10                	and    dl,BYTE PTR [rax]
     9a4:	4e b4 00             	rex.WRX mov spl,0x0
     9a7:	00 00                	add    BYTE PTR [rax],al
     9a9:	db 00                	fild   DWORD PTR [rax]
     9ab:	00 00                	add    BYTE PTR [rax],al
     9ad:	06                   	(bad)
     9ae:	49 02 00             	rex.WB add al,BYTE PTR [r8]
     9b1:	00 07                	add    BYTE PTR [rdi],al
     9b3:	4f 13 db             	rex.WRXB adc r11,r11
     9b6:	00 00                	add    BYTE PTR [rax],al
     9b8:	00 00                	add    BYTE PTR [rax],al
     9ba:	23 72 65             	and    esi,DWORD PTR [rdx+0x65]
     9bd:	6d                   	ins    DWORD PTR es:[rdi],dx
     9be:	00 50 13             	add    BYTE PTR [rax+0x13],dl
     9c1:	db 00                	fild   DWORD PTR [rax]
     9c3:	00 00                	add    BYTE PTR [rax],al
     9c5:	08 00                	or     BYTE PTR [rax],al
     9c7:	05 08 05 e0 00       	add    eax,0xe00508
     9cc:	00 00                	add    BYTE PTR [rax],al
     9ce:	08 b5 00 00 00 07    	or     BYTE PTR [rbp+0x7000000],dh
     9d4:	51                   	push   rcx
     9d5:	05 b6 00 00 00       	add    eax,0xb6
     9da:	05 02 07 4e 02       	add    eax,0x24e0702
     9df:	00 00                	add    BYTE PTR [rax],al
     9e1:	09 06                	or     DWORD PTR [rsi],eax
     9e3:	01 00                	add    DWORD PTR [rax],eax
     9e5:	00 2a                	add    BYTE PTR [rdx],ch
     9e7:	f5                   	cmc
     9e8:	00 00                	add    BYTE PTR [rax],al
     9ea:	00 05 01 06 08 02    	add    BYTE PTR [rip+0x2080601],al        # 2080ff1 <_end+0x207afd9>
     9f0:	00 00                	add    BYTE PTR [rax],al
     9f2:	12 ff                	adc    bh,bh
     9f4:	00 00                	add    BYTE PTR [rax],al
     9f6:	00 05 01 08 ff 01    	add    BYTE PTR [rip+0x1ff0801],al        # 1ff11fd <_end+0x1feb1e5>
     9fc:	00 00                	add    BYTE PTR [rax],al
     9fe:	05 04 07 f8 00       	add    eax,0xf80704
     a03:	00 00                	add    BYTE PTR [rax],al
     a05:	05 01 06 01 02       	add    eax,0x2010601
     a0a:	00 00                	add    BYTE PTR [rax],al
     a0c:	05 02 05 5b 00       	add    eax,0x5b0502
     a11:	00 00                	add    BYTE PTR [rax],al
     a13:	08 a9 00 00 00 08    	or     BYTE PTR [rcx+0x8000000],ch
     a19:	2a 16                	sub    dl,BYTE PTR [rsi]
     a1b:	12 01                	adc    al,BYTE PTR [rcx]
     a1d:	00 00                	add    BYTE PTR [rax],al
     a1f:	08 85 05 00 00 08    	or     BYTE PTR [rbp+0x8000005],al
     a25:	2d 1b 3a 00 00       	sub    eax,0x3a1b
     a2a:	00 3d 08 09 ff 00    	add    BYTE PTR [rip+0xff0908],bh        # ff1338 <_end+0xfeb320>
     a30:	00 00                	add    BYTE PTR [rax],al
     a32:	2a 41 01             	sub    al,BYTE PTR [rcx+0x1]
     a35:	00 00                	add    BYTE PTR [rax],al
     a37:	05 08 07 ee 00       	add    eax,0xee0708
     a3c:	00 00                	add    BYTE PTR [rax],al
     a3e:	3e cf                	ds iret
     a40:	02 00                	add    al,BYTE PTR [rax]
     a42:	00 07                	add    BYTE PTR [rdi],al
     a44:	b4 03                	mov    ah,0x3
     a46:	0f 5f 01             	maxps  xmm0,XMMWORD PTR [rcx]
     a49:	00 00                	add    BYTE PTR [rax],al
     a4b:	09 64 01 00          	or     DWORD PTR [rcx+rax*1+0x0],esp
     a4f:	00 2b                	add    BYTE PTR [rbx],ch
     a51:	66 00 00             	data16 add BYTE PTR [rax],al
     a54:	00 78 01             	add    BYTE PTR [rax+0x1],bh
     a57:	00 00                	add    BYTE PTR [rax],al
     a59:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a5c:	00 00                	add    BYTE PTR [rax],al
     a5e:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     a61:	00 00                	add    BYTE PTR [rax],al
     a63:	00 09                	add    BYTE PTR [rcx],cl
     a65:	7d 01                	jge    a68 <__abi_tag+0x6ec>
     a67:	00 00                	add    BYTE PTR [rax],al
     a69:	3f                   	(bad)
     a6a:	40 73 74             	rex jae ae1 <__abi_tag+0x765>
     a6d:	64 00 15 32 01 0b 4e 	add    BYTE PTR fs:[rip+0x4e0b0132],dl        # 4e0b0ba6 <_end+0x4e0aab8e>
     a74:	03 00                	add    eax,DWORD PTR [rax]
     a76:	00 02                	add    BYTE PTR [rdx],al
     a78:	09 83 0b 72 00 00    	or     DWORD PTR [rbx+0x720b],eax
     a7e:	00 02                	add    BYTE PTR [rdx],al
     a80:	09 84 0b aa 00 00 00 	or     DWORD PTR [rbx+rcx*1+0xaa],eax
     a87:	02 09                	add    cl,BYTE PTR [rcx]
     a89:	8a 0b                	mov    cl,BYTE PTR [rbx]
     a8b:	4e 03 00             	rex.WRX add r8,QWORD PTR [rax]
     a8e:	00 02                	add    BYTE PTR [rdx],al
     a90:	09 8d 0b 6a 03 00    	or     DWORD PTR [rbp+0x36a0b],ecx
     a96:	00 02                	add    BYTE PTR [rdx],al
     a98:	09 90 0b 85 03 00    	or     DWORD PTR [rax+0x3850b],edx
     a9e:	00 02                	add    BYTE PTR [rdx],al
     aa0:	09 91 0b a2 03 00    	or     DWORD PTR [rcx+0x3a20b],edx
     aa6:	00 02                	add    BYTE PTR [rdx],al
     aa8:	09 92 0b b8 03 00    	or     DWORD PTR [rdx+0x3b80b],edx
     aae:	00 02                	add    BYTE PTR [rdx],al
     ab0:	09 93 0b ce 03 00    	or     DWORD PTR [rbx+0x3ce0b],edx
     ab6:	00 02                	add    BYTE PTR [rdx],al
     ab8:	09 95 0b f8 03 00    	or     DWORD PTR [rbp+0x3f80b],edx
     abe:	00 02                	add    BYTE PTR [rdx],al
     ac0:	09 98 0b 14 04 00    	or     DWORD PTR [rax+0x4140b],ebx
     ac6:	00 02                	add    BYTE PTR [rdx],al
     ac8:	09 9a 0b 2a 04 00    	or     DWORD PTR [rdx+0x42a0b],ebx
     ace:	00 02                	add    BYTE PTR [rdx],al
     ad0:	09 9d 0b 45 04 00    	or     DWORD PTR [rbp+0x4450b],ebx
     ad6:	00 02                	add    BYTE PTR [rdx],al
     ad8:	09 9e 0b 60 04 00    	or     DWORD PTR [rsi+0x4600b],ebx
     ade:	00 02                	add    BYTE PTR [rdx],al
     ae0:	09 9f 0b 91 04 00    	or     DWORD PTR [rdi+0x4910b],ebx
     ae6:	00 02                	add    BYTE PTR [rdx],al
     ae8:	09 a1 0b b1 04 00    	or     DWORD PTR [rcx+0x4b10b],esp
     aee:	00 02                	add    BYTE PTR [rdx],al
     af0:	09 a4 0b d1 04 00 00 	or     DWORD PTR [rbx+rcx*1+0x4d1],esp
     af7:	02 09                	add    cl,BYTE PTR [rcx]
     af9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     afa:	0b e4                	or     esp,esp
     afc:	04 00                	add    al,0x0
     afe:	00 02                	add    BYTE PTR [rdx],al
     b00:	09 a9 0b f1 04 00    	or     DWORD PTR [rcx+0x4f10b],ebp
     b06:	00 02                	add    BYTE PTR [rdx],al
     b08:	09 aa 0b 02 05 00    	or     DWORD PTR [rdx+0x5020b],ebp
     b0e:	00 02                	add    BYTE PTR [rdx],al
     b10:	09 ab 0b 22 05 00    	or     DWORD PTR [rbx+0x5220b],ebp
     b16:	00 02                	add    BYTE PTR [rdx],al
     b18:	09 ac 0b 46 05 00 00 	or     DWORD PTR [rbx+rcx*1+0x546],ebp
     b1f:	02 09                	add    cl,BYTE PTR [rcx]
     b21:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     b22:	0b 6a 05             	or     ebp,DWORD PTR [rdx+0x5]
     b25:	00 00                	add    BYTE PTR [rax],al
     b27:	02 09                	add    cl,BYTE PTR [rcx]
     b29:	af                   	scas   eax,DWORD PTR es:[rdi]
     b2a:	0b 80 05 00 00 02    	or     eax,DWORD PTR [rax+0x2000005]
     b30:	09 b0 0b a5 05 00    	or     DWORD PTR [rax+0x5a50b],esi
     b36:	00 02                	add    BYTE PTR [rdx],al
     b38:	09 f4                	or     esp,esi
     b3a:	16                   	(bad)
     b3b:	e2 00                	loop   b3d <__abi_tag+0x7c1>
     b3d:	00 00                	add    BYTE PTR [rax],al
     b3f:	02 09                	add    cl,BYTE PTR [rcx]
     b41:	f9                   	stc
     b42:	16                   	(bad)
     b43:	05 06 00 00 02       	add    eax,0x2000006
     b48:	09 fa                	or     edx,edi
     b4a:	16                   	(bad)
     b4b:	1f                   	(bad)
     b4c:	06                   	(bad)
     b4d:	00 00                	add    BYTE PTR [rax],al
     b4f:	02 09                	add    cl,BYTE PTR [rcx]
     b51:	fc                   	cld
     b52:	16                   	(bad)
     b53:	3a 06                	cmp    al,BYTE PTR [rsi]
     b55:	00 00                	add    BYTE PTR [rax],al
     b57:	02 09                	add    cl,BYTE PTR [rcx]
     b59:	fd                   	std
     b5a:	16                   	(bad)
     b5b:	98                   	cwde
     b5c:	06                   	(bad)
     b5d:	00 00                	add    BYTE PTR [rax],al
     b5f:	02 09                	add    cl,BYTE PTR [rcx]
     b61:	fe                   	(bad)
     b62:	16                   	(bad)
     b63:	50                   	push   rax
     b64:	06                   	(bad)
     b65:	00 00                	add    BYTE PTR [rax],al
     b67:	02 09                	add    cl,BYTE PTR [rcx]
     b69:	ff 16                	call   QWORD PTR [rsi]
     b6b:	74 06                	je     b73 <__abi_tag+0x7f7>
     b6d:	00 00                	add    BYTE PTR [rax],al
     b6f:	41 09 00             	or     DWORD PTR [r8],eax
     b72:	01 16                	add    DWORD PTR [rsi],edx
     b74:	ba 06 00 00 13       	mov    edx,0x13000006
     b79:	61                   	(bad)
     b7a:	62 73 00 89 0f       	(bad)
     b7f:	03 00                	add    eax,DWORD PTR [rax]
     b81:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
     b84:	00 00                	add    BYTE PTR [rax],al
     b86:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     b87:	02 00                	add    al,BYTE PTR [rax]
     b89:	00 01                	add    BYTE PTR [rcx],al
     b8b:	04 07                	add    al,0x7
     b8d:	00 00                	add    BYTE PTR [rax],al
     b8f:	00 13                	add    BYTE PTR [rbx],dl
     b91:	61                   	(bad)
     b92:	62 73 00 55 1b       	(bad)
     b97:	00 00                	add    BYTE PTR [rax],al
     b99:	00 13                	add    BYTE PTR [rbx],dl
     b9b:	07                   	(bad)
     b9c:	00 00                	add    BYTE PTR [rax],al
     b9e:	bc 02 00 00 01       	mov    esp,0x1000002
     ba3:	13 07                	adc    eax,DWORD PTR [rdi]
     ba5:	00 00                	add    BYTE PTR [rax],al
     ba7:	00 13                	add    BYTE PTR [rbx],dl
     ba9:	61                   	(bad)
     baa:	62 73 00 4f fb       	(bad)
     baf:	02 00                	add    al,BYTE PTR [rax]
     bb1:	00 d5                	add    ch,dl
     bb3:	06                   	(bad)
     bb4:	00 00                	add    BYTE PTR [rax],al
     bb6:	d4                   	(bad)
     bb7:	02 00                	add    al,BYTE PTR [rax]
     bb9:	00 01                	add    BYTE PTR [rcx],al
     bbb:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     bbf:	00 13                	add    BYTE PTR [rbx],dl
     bc1:	61                   	(bad)
     bc2:	62 73 00 4b 05       	(bad)
     bc7:	03 00                	add    eax,DWORD PTR [rax]
     bc9:	00 b3 06 00 00 ec    	add    BYTE PTR [rbx-0x13fffffa],dh
     bcf:	02 00                	add    al,BYTE PTR [rax]
     bd1:	00 01                	add    BYTE PTR [rcx],al
     bd3:	b3 06                	mov    bl,0x6
     bd5:	00 00                	add    BYTE PTR [rax],al
     bd7:	00 13                	add    BYTE PTR [rbx],dl
     bd9:	61                   	(bad)
     bda:	62 73 00 47 f1       	(bad)
     bdf:	02 00                	add    al,BYTE PTR [rax]
     be1:	00 9b 03 00 00 04    	add    BYTE PTR [rbx+0x4000003],bl
     be7:	03 00                	add    eax,DWORD PTR [rax]
     be9:	00 01                	add    BYTE PTR [rcx],al
     beb:	9b                   	fwait
     bec:	03 00                	add    eax,DWORD PTR [rax]
     bee:	00 00                	add    BYTE PTR [rax],al
     bf0:	13 61 62             	adc    esp,DWORD PTR [rcx+0x62]
     bf3:	73 00                	jae    bf5 <__abi_tag+0x879>
     bf5:	3d 41 00 00 00       	cmp    eax,0x41
     bfa:	db 00                	fild   DWORD PTR [rax]
     bfc:	00 00                	add    BYTE PTR [rax],al
     bfe:	1c 03                	sbb    al,0x3
     c00:	00 00                	add    BYTE PTR [rax],al
     c02:	01 db                	add    ebx,ebx
     c04:	00 00                	add    BYTE PTR [rax],al
     c06:	00 00                	add    BYTE PTR [rax],al
     c08:	13 61 62             	adc    esp,DWORD PTR [rcx+0x62]
     c0b:	73 00                	jae    c0d <__abi_tag+0x891>
     c0d:	38 11                	cmp    BYTE PTR [rcx],dl
     c0f:	00 00                	add    BYTE PTR [rax],al
     c11:	00 a3 00 00 00 34    	add    BYTE PTR [rbx+0x34000000],ah
     c17:	03 00                	add    eax,DWORD PTR [rax]
     c19:	00 01                	add    BYTE PTR [rcx],al
     c1b:	a3 00 00 00 00 2c 64 	movabs ds:0x7669642c00000000,eax
     c22:	69 76 
     c24:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
     c2a:	aa                   	stos   BYTE PTR es:[rdi],al
     c2b:	00 00                	add    BYTE PTR [rax],al
     c2d:	00 01                	add    BYTE PTR [rcx],al
     c2f:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
     c36:	00 00 
     c38:	00 00                	add    BYTE PTR [rax],al
     c3a:	0b 6d 00             	or     ebp,DWORD PTR [rbp+0x0]
     c3d:	00 00                	add    BYTE PTR [rax],al
     c3f:	de 02                	fiadd  WORD PTR [rdx]
     c41:	0c 66                	or     al,0x66
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	00 64 03 00          	add    BYTE PTR [rbx+rax*1+0x0],ah
     c49:	00 01                	add    BYTE PTR [rcx],al
     c4b:	64 03 00             	add    eax,DWORD PTR fs:[rax]
     c4e:	00 00                	add    BYTE PTR [rax],al
     c50:	09 69 03             	or     DWORD PTR [rcx+0x3],ebp
     c53:	00 00                	add    BYTE PTR [rax],al
     c55:	42                   	rex.X
     c56:	43 33 00             	rex.XB xor eax,DWORD PTR [r8]
     c59:	00 00                	add    BYTE PTR [rax],al
     c5b:	07                   	(bad)
     c5c:	e3 02                	jrcxz  c60 <__abi_tag+0x8e4>
     c5e:	12 33                	adc    dh,BYTE PTR [rbx]
     c60:	00 00                	add    BYTE PTR [rax],al
     c62:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
     c65:	00 00                	add    BYTE PTR [rax],al
     c67:	85 03                	test   DWORD PTR [rbx],eax
     c69:	00 00                	add    BYTE PTR [rax],al
     c6b:	01 64 03 00          	add    DWORD PTR [rbx+rax*1+0x0],esp
     c6f:	00 00                	add    BYTE PTR [rax],al
     c71:	0f cd                	bswap  ebp
     c73:	01 00                	add    DWORD PTR [rax],eax
     c75:	00 0b                	add    BYTE PTR [rbx],cl
     c77:	19 01                	sbb    DWORD PTR [rcx],eax
     c79:	9b                   	fwait
     c7a:	03 00                	add    eax,DWORD PTR [rax]
     c7c:	00 9b 03 00 00 01    	add    BYTE PTR [rbx+0x1000003],bl
     c82:	f5                   	cmc
     c83:	00 00                	add    BYTE PTR [rax],al
     c85:	00 00                	add    BYTE PTR [rax],al
     c87:	05 08 04 f8 01       	add    eax,0x1f80408
     c8c:	00 00                	add    BYTE PTR [rax],al
     c8e:	0b d2                	or     edx,edx
     c90:	01 00                	add    DWORD PTR [rax],eax
     c92:	00 e1                	add    cl,ah
     c94:	01 01                	add    DWORD PTR [rcx],eax
     c96:	66 00 00             	data16 add BYTE PTR [rax],al
     c99:	00 b8 03 00 00 01    	add    BYTE PTR [rax+0x1000003],bh
     c9f:	f5                   	cmc
     ca0:	00 00                	add    BYTE PTR [rax],al
     ca2:	00 00                	add    BYTE PTR [rax],al
     ca4:	0b dc                	or     ebx,esp
     ca6:	01 00                	add    DWORD PTR [rax],eax
     ca8:	00 e6                	add    dh,ah
     caa:	01 01                	add    DWORD PTR [rcx],eax
     cac:	a3 00 00 00 ce 03 00 	movabs ds:0x1000003ce000000,eax
     cb3:	00 01 
     cb5:	f5                   	cmc
     cb6:	00 00                	add    BYTE PTR [rax],al
     cb8:	00 00                	add    BYTE PTR [rax],al
     cba:	0f 65 00             	pcmpgtw mm0,QWORD PTR [rax]
     cbd:	00 00                	add    BYTE PTR [rax],al
     cbf:	0c 14                	or     al,0x14
     cc1:	01 3f                	add    DWORD PTR [rdi],edi
     cc3:	01 00                	add    DWORD PTR [rax],eax
     cc5:	00 f8                	add    al,bh
     cc7:	03 00                	add    eax,DWORD PTR [rax]
     cc9:	00 01                	add    BYTE PTR [rcx],al
     ccb:	78 01                	js     cce <__abi_tag+0x952>
     ccd:	00 00                	add    BYTE PTR [rax],al
     ccf:	01 78 01             	add    DWORD PTR [rax+0x1],edi
     cd2:	00 00                	add    BYTE PTR [rax],al
     cd4:	01 2e                	add    DWORD PTR [rsi],ebp
     cd6:	00 00                	add    BYTE PTR [rax],al
     cd8:	00 01                	add    BYTE PTR [rcx],al
     cda:	2e 00 00             	cs add BYTE PTR [rax],al
     cdd:	00 01                	add    BYTE PTR [rcx],al
     cdf:	52                   	push   rdx
     ce0:	01 00                	add    DWORD PTR [rax],eax
     ce2:	00 00                	add    BYTE PTR [rax],al
     ce4:	44                   	rex.R
     ce5:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
     cec:	0e 
     ced:	72 00                	jb     cef <__abi_tag+0x973>
     cef:	00 00                	add    BYTE PTR [rax],al
     cf1:	14 04                	adc    al,0x4
     cf3:	00 00                	add    BYTE PTR [rax],al
     cf5:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     cf8:	00 00                	add    BYTE PTR [rax],al
     cfa:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     cfd:	00 00                	add    BYTE PTR [rax],al
     cff:	00 0b                	add    BYTE PTR [rbx],cl
     d01:	bd 00 00 00 05       	mov    ebp,0x5000000
     d06:	03 0e                	add    ecx,DWORD PTR [rsi]
     d08:	41 01 00             	add    DWORD PTR [r8],eax
     d0b:	00 2a                	add    BYTE PTR [rdx],ch
     d0d:	04 00                	add    al,0x0
     d0f:	00 01                	add    BYTE PTR [rcx],al
     d11:	f5                   	cmc
     d12:	00 00                	add    BYTE PTR [rax],al
     d14:	00 00                	add    BYTE PTR [rax],al
     d16:	0b c3                	or     eax,ebx
     d18:	02 00                	add    al,BYTE PTR [rax]
     d1a:	00 e2                	add    dl,ah
     d1c:	03 0f                	add    ecx,DWORD PTR [rdi]
     d1e:	aa                   	stos   BYTE PTR es:[rdi],al
     d1f:	00 00                	add    BYTE PTR [rax],al
     d21:	00 45 04             	add    BYTE PTR [rbp+0x4],al
     d24:	00 00                	add    BYTE PTR [rax],al
     d26:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
     d2c:	a3 00 00 00 00 0b 33 	movabs ds:0x2330b00000000,eax
     d33:	02 00 
     d35:	00 26                	add    BYTE PTR [rsi],ah
     d37:	04 0c                	add    al,0xc
     d39:	66 00 00             	data16 add BYTE PTR [rax],al
     d3c:	00 60 04             	add    BYTE PTR [rax+0x4],ah
     d3f:	00 00                	add    BYTE PTR [rax],al
     d41:	01 f5                	add    ebp,esi
     d43:	00 00                	add    BYTE PTR [rax],al
     d45:	00 01                	add    BYTE PTR [rcx],al
     d47:	2e 00 00             	cs add BYTE PTR [rax],al
     d4a:	00 00                	add    BYTE PTR [rax],al
     d4c:	0f 39                	(bad)
     d4e:	02 00                	add    al,BYTE PTR [rax]
     d50:	00 0d 75 01 2e 00    	add    BYTE PTR [rip+0x2e0175],cl        # 2e0ecb <_end+0x2daeb3>
     d56:	00 00                	add    BYTE PTR [rax],al
     d58:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d5c:	01 80 04 00 00 01    	add    DWORD PTR [rax+0x1000004],eax
     d62:	f5                   	cmc
     d63:	00 00                	add    BYTE PTR [rax],al
     d65:	00 01                	add    BYTE PTR [rcx],al
     d67:	2e 00 00             	cs add BYTE PTR [rax],al
     d6a:	00 00                	add    BYTE PTR [rax],al
     d6c:	09 85 04 00 00 05    	or     DWORD PTR [rbp+0x5000004],eax
     d72:	04 05                	add    al,0x5
     d74:	61                   	(bad)
     d75:	02 00                	add    al,BYTE PTR [rax]
     d77:	00 12                	add    BYTE PTR [rdx],dl
     d79:	85 04 00             	test   DWORD PTR [rax+rax*1],eax
     d7c:	00 0b                	add    BYTE PTR [rbx],cl
     d7e:	d9 00                	fld    DWORD PTR [rax]
     d80:	00 00                	add    BYTE PTR [rax],al
     d82:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
     d85:	66 00 00             	data16 add BYTE PTR [rax],al
     d88:	00 b1 04 00 00 01    	add    BYTE PTR [rcx+0x1000004],dh
     d8e:	80 04 00 00          	add    BYTE PTR [rax+rax*1],0x0
     d92:	01 f5                	add    ebp,esi
     d94:	00 00                	add    BYTE PTR [rax],al
     d96:	00 01                	add    BYTE PTR [rcx],al
     d98:	2e 00 00             	cs add BYTE PTR [rax],al
     d9b:	00 00                	add    BYTE PTR [rax],al
     d9d:	24 25                	and    al,0x25
     d9f:	00 00                	add    BYTE PTR [rax],al
     da1:	00 ca                	add    dl,cl
     da3:	03 d1                	add    edx,ecx
     da5:	04 00                	add    al,0x0
     da7:	00 01                	add    BYTE PTR [rcx],al
     da9:	3f                   	(bad)
     daa:	01 00                	add    DWORD PTR [rax],eax
     dac:	00 01                	add    BYTE PTR [rcx],al
     dae:	2e 00 00             	cs add BYTE PTR [rax],al
     db1:	00 01                	add    BYTE PTR [rcx],al
     db3:	2e 00 00             	cs add BYTE PTR [rax],al
     db6:	00 01                	add    BYTE PTR [rcx],al
     db8:	52                   	push   rdx
     db9:	01 00                	add    DWORD PTR [rax],eax
     dbb:	00 00                	add    BYTE PTR [rax],al
     dbd:	45                   	rex.RB
     dbe:	36 00 00             	ss add BYTE PTR [rax],al
     dc1:	00 07                	add    BYTE PTR [rdi],al
     dc3:	fa                   	cli
     dc4:	02 0d e4 04 00 00    	add    cl,BYTE PTR [rip+0x4e4]        # 12ae <register_tm_clones+0x3e>
     dca:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
     dcd:	00 00                	add    BYTE PTR [rax],al
     dcf:	00 46 ec             	add    BYTE PTR [rsi-0x14],al
     dd2:	02 00                	add    al,BYTE PTR [rax]
     dd4:	00 07                	add    BYTE PTR [rdi],al
     dd6:	3d 02 0c 66 00       	cmp    eax,0x660c02
     ddb:	00 00                	add    BYTE PTR [rax],al
     ddd:	24 eb                	and    al,0xeb
     ddf:	02 00                	add    al,BYTE PTR [rax]
     de1:	00 3f                	add    BYTE PTR [rdi],bh
     de3:	02 02                	add    al,BYTE PTR [rdx]
     de5:	05 00 00 01 12       	add    eax,0x12010000
     dea:	01 00                	add    DWORD PTR [rax],eax
     dec:	00 00                	add    BYTE PTR [rax],al
     dee:	0f 05                	syscall
     df0:	01 00                	add    DWORD PTR [rax],eax
     df2:	00 07                	add    BYTE PTR [rdi],al
     df4:	76 0f                	jbe    e05 <__abi_tag+0xa89>
     df6:	9b                   	fwait
     df7:	03 00                	add    eax,DWORD PTR [rax]
     df9:	00 1d 05 00 00 01    	add    BYTE PTR [rip+0x1000005],bl        # 1000e04 <_end+0xffadec>
     dff:	f5                   	cmc
     e00:	00 00                	add    BYTE PTR [rax],al
     e02:	00 01                	add    BYTE PTR [rcx],al
     e04:	1d 05 00 00 00       	sbb    eax,0x5
     e09:	09 41 01             	or     DWORD PTR [rcx+0x1],eax
     e0c:	00 00                	add    BYTE PTR [rax],al
     e0e:	14 54                	adc    al,0x54
     e10:	00 00                	add    BYTE PTR [rax],al
     e12:	00 07                	add    BYTE PTR [rdi],al
     e14:	d7                   	xlat   BYTE PTR ds:[rbx]
     e15:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
     e18:	00 00                	add    BYTE PTR [rax],al
     e1a:	a3 00 00 00 46 05 00 	movabs ds:0x100000546000000,eax
     e21:	00 01 
     e23:	f5                   	cmc
     e24:	00 00                	add    BYTE PTR [rax],al
     e26:	00 01                	add    BYTE PTR [rcx],al
     e28:	1d 05 00 00 01       	sbb    eax,0x1000005
     e2d:	66 00 00             	data16 add BYTE PTR [rax],al
     e30:	00 00                	add    BYTE PTR [rax],al
     e32:	14 25                	adc    al,0x25
     e34:	02 00                	add    al,BYTE PTR [rax]
     e36:	00 07                	add    BYTE PTR [rdi],al
     e38:	db 1a                	fistp  DWORD PTR [rdx]
     e3a:	1c 02                	sbb    al,0x2
     e3c:	00 00                	add    BYTE PTR [rax],al
     e3e:	3a 00                	cmp    al,BYTE PTR [rax]
     e40:	00 00                	add    BYTE PTR [rax],al
     e42:	6a 05                	push   0x5
     e44:	00 00                	add    BYTE PTR [rax],al
     e46:	01 f5                	add    ebp,esi
     e48:	00 00                	add    BYTE PTR [rax],al
     e4a:	00 01                	add    BYTE PTR [rcx],al
     e4c:	1d 05 00 00 01       	sbb    eax,0x1000005
     e51:	66 00 00             	data16 add BYTE PTR [rax],al
     e54:	00 00                	add    BYTE PTR [rax],al
     e56:	0b db                	or     ebx,ebx
     e58:	25 00 00 9b 03       	and    eax,0x39b0000
     e5d:	0c 66                	or     al,0x66
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	00 80 05 00 00 01    	add    BYTE PTR [rax+0x1000005],al
     e67:	f5                   	cmc
     e68:	00 00                	add    BYTE PTR [rax],al
     e6a:	00 00                	add    BYTE PTR [rax],al
     e6c:	0f e1 01             	psraw  mm0,QWORD PTR [rcx]
     e6f:	00 00                	add    BYTE PTR [rax],al
     e71:	0d 8f 01 2e 00       	or     eax,0x2e018f
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	a0 05 00 00 01 41 01 	movabs al,ds:0x14101000005
     e7f:	00 00 
     e81:	01 a0 05 00 00 01    	add    DWORD PTR [rax+0x1000005],esp
     e87:	2e 00 00             	cs add BYTE PTR [rax],al
     e8a:	00 00                	add    BYTE PTR [rax],al
     e8c:	09 8c 04 00 00 0f 42 	or     DWORD PTR [rsp+rax*1+0x420f0000],ecx
     e93:	02 00                	add    al,BYTE PTR [rax]
     e95:	00 0d 4f 01 66 00    	add    BYTE PTR [rip+0x66014f],cl        # 660fea <_end+0x65afd2>
     e9b:	00 00                	add    BYTE PTR [rax],al
     e9d:	c0 05 00 00 01 41 01 	rol    BYTE PTR [rip+0x41010000],0x1        # 41010ea4 <_end+0x4100ae8c>
     ea4:	00 00                	add    BYTE PTR [rax],al
     ea6:	01 85 04 00 00 00    	add    DWORD PTR [rbp+0x4],eax
     eac:	47 12 02             	rex.RXB adc r8b,BYTE PTR [r10]
     eaf:	00 00                	add    BYTE PTR [rax],al
     eb1:	15 57 01 0b 1f       	adc    eax,0x1f0b0157
     eb6:	06                   	(bad)
     eb7:	00 00                	add    BYTE PTR [rax],al
     eb9:	02 09                	add    cl,BYTE PTR [rcx]
     ebb:	cc                   	int3
     ebc:	0b e2                	or     esp,edx
     ebe:	00 00                	add    BYTE PTR [rax],al
     ec0:	00 02                	add    BYTE PTR [rdx],al
     ec2:	09 dc                	or     esp,ebx
     ec4:	0b 1f                	or     ebx,DWORD PTR [rdi]
     ec6:	06                   	(bad)
     ec7:	00 00                	add    BYTE PTR [rax],al
     ec9:	02 09                	add    cl,BYTE PTR [rcx]
     ecb:	e7 0b                	out    0xb,eax
     ecd:	3a 06                	cmp    al,BYTE PTR [rsi]
     ecf:	00 00                	add    BYTE PTR [rax],al
     ed1:	02 09                	add    cl,BYTE PTR [rcx]
     ed3:	e8 0b 50 06 00       	call   65ee3 <_end+0x5fecb>
     ed8:	00 02                	add    BYTE PTR [rdx],al
     eda:	09 e9                	or     ecx,ebp
     edc:	0b 74 06 00          	or     esi,DWORD PTR [rsi+rax*1+0x0]
     ee0:	00 02                	add    BYTE PTR [rdx],al
     ee2:	09 eb                	or     ebx,ebp
     ee4:	0b 98 06 00 00 02    	or     ebx,DWORD PTR [rax+0x2000006]
     eea:	09 ec                	or     esp,ebp
     eec:	0b ba 06 00 00 2c    	or     edi,DWORD PTR [rdx+0x2c000006]
     ef2:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
     ef9:	00 
     efa:	00 e2                	add    dl,ah
     efc:	00 00                	add    BYTE PTR [rax],al
     efe:	00 01                	add    BYTE PTR [rcx],al
     f00:	db 00                	fild   DWORD PTR [rax]
     f02:	00 00                	add    BYTE PTR [rax],al
     f04:	01 db                	add    ebx,ebx
     f06:	00 00                	add    BYTE PTR [rax],al
     f08:	00 00                	add    BYTE PTR [rax],al
     f0a:	00 0b                	add    BYTE PTR [rbx],cl
     f0c:	c2 02 00             	ret    0x2
     f0f:	00 e6                	add    dh,ah
     f11:	03 1e                	add    ebx,DWORD PTR [rsi]
     f13:	e2 00                	loop   f15 <__abi_tag+0xb99>
     f15:	00 00                	add    BYTE PTR [rax],al
     f17:	3a 06                	cmp    al,BYTE PTR [rsi]
     f19:	00 00                	add    BYTE PTR [rax],al
     f1b:	01 db                	add    ebx,ebx
     f1d:	00 00                	add    BYTE PTR [rax],al
     f1f:	00 01                	add    BYTE PTR [rcx],al
     f21:	db 00                	fild   DWORD PTR [rax]
     f23:	00 00                	add    BYTE PTR [rax],al
     f25:	00 0b                	add    BYTE PTR [rbx],cl
     f27:	2d 02 00 00 ed       	sub    eax,0xed000002
     f2c:	01 01                	add    DWORD PTR [rcx],eax
     f2e:	db 00                	fild   DWORD PTR [rax]
     f30:	00 00                	add    BYTE PTR [rax],al
     f32:	50                   	push   rax
     f33:	06                   	(bad)
     f34:	00 00                	add    BYTE PTR [rax],al
     f36:	01 f5                	add    ebp,esi
     f38:	00 00                	add    BYTE PTR [rax],al
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	14 88                	adc    al,0x88
     f3e:	00 00                	add    BYTE PTR [rax],al
     f40:	00 07                	add    BYTE PTR [rdi],al
     f42:	ee                   	out    dx,al
     f43:	16                   	(bad)
     f44:	7f 00                	jg     f46 <__abi_tag+0xbca>
     f46:	00 00                	add    BYTE PTR [rax],al
     f48:	db 00                	fild   DWORD PTR [rax]
     f4a:	00 00                	add    BYTE PTR [rax],al
     f4c:	74 06                	je     f54 <__abi_tag+0xbd8>
     f4e:	00 00                	add    BYTE PTR [rax],al
     f50:	01 f5                	add    ebp,esi
     f52:	00 00                	add    BYTE PTR [rax],al
     f54:	00 01                	add    BYTE PTR [rcx],al
     f56:	1d 05 00 00 01       	sbb    eax,0x1000005
     f5b:	66 00 00             	data16 add BYTE PTR [rax],al
     f5e:	00 00                	add    BYTE PTR [rax],al
     f60:	14 b9                	adc    al,0xb9
     f62:	02 00                	add    al,BYTE PTR [rax]
     f64:	00 07                	add    BYTE PTR [rdi],al
     f66:	f3 1f                	repz (bad)
     f68:	b0 02                	mov    al,0x2
     f6a:	00 00                	add    BYTE PTR [rax],al
     f6c:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
     f6f:	00 98 06 00 00 01    	add    BYTE PTR [rax+0x1000006],bl
     f75:	f5                   	cmc
     f76:	00 00                	add    BYTE PTR [rax],al
     f78:	00 01                	add    BYTE PTR [rcx],al
     f7a:	1d 05 00 00 01       	sbb    eax,0x1000005
     f7f:	66 00 00             	data16 add BYTE PTR [rax],al
     f82:	00 00                	add    BYTE PTR [rax],al
     f84:	0f 97 02             	seta   BYTE PTR [rdx]
     f87:	00 00                	add    BYTE PTR [rax],al
     f89:	07                   	(bad)
     f8a:	7c 0e                	jl     f9a <__abi_tag+0xc1e>
     f8c:	b3 06                	mov    bl,0x6
     f8e:	00 00                	add    BYTE PTR [rax],al
     f90:	b3 06                	mov    bl,0x6
     f92:	00 00                	add    BYTE PTR [rax],al
     f94:	01 f5                	add    ebp,esi
     f96:	00 00                	add    BYTE PTR [rax],al
     f98:	00 01                	add    BYTE PTR [rcx],al
     f9a:	1d 05 00 00 00       	sbb    eax,0x5
     f9f:	05 04 04 d3 00       	add    eax,0xd30404
     fa4:	00 00                	add    BYTE PTR [rax],al
     fa6:	0f 2b 00             	movntps XMMWORD PTR [rax],xmm0
     fa9:	00 00                	add    BYTE PTR [rax],al
     fab:	07                   	(bad)
     fac:	7f 14                	jg     fc2 <__abi_tag+0xc46>
     fae:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fb2:	d5 06 00 00          	{rex2 0x6} add BYTE PTR [rax],r8b
     fb6:	01 f5                	add    ebp,esi
     fb8:	00 00                	add    BYTE PTR [rax],al
     fba:	00 01                	add    BYTE PTR [rcx],al
     fbc:	1d 05 00 00 00       	sbb    eax,0x5
     fc1:	05 10 04 f3 01       	add    eax,0x1f30410
     fc6:	00 00                	add    BYTE PTR [rax],al
     fc8:	02 0e                	add    cl,BYTE PTR [rsi]
     fca:	27                   	(bad)
     fcb:	0c 4e                	or     al,0x4e
     fcd:	03 00                	add    eax,DWORD PTR [rax]
     fcf:	00 02                	add    BYTE PTR [rdx],al
     fd1:	0e                   	(bad)
     fd2:	2b 0e                	sub    ecx,DWORD PTR [rsi]
     fd4:	6a 03                	push   0x3
     fd6:	00 00                	add    BYTE PTR [rax],al
     fd8:	02 0e                	add    cl,BYTE PTR [rsi]
     fda:	2e 0e                	cs (bad)
     fdc:	d1 04 00             	rol    DWORD PTR [rax+rax*1],1
     fdf:	00 02                	add    BYTE PTR [rdx],al
     fe1:	0e                   	(bad)
     fe2:	36 0c 72             	ss or  al,0x72
     fe5:	00 00                	add    BYTE PTR [rax],al
     fe7:	00 02                	add    BYTE PTR [rdx],al
     fe9:	0e                   	(bad)
     fea:	37                   	(bad)
     feb:	0c aa                	or     al,0xaa
     fed:	00 00                	add    BYTE PTR [rax],al
     fef:	00 05 10 04 8c 02    	add    BYTE PTR [rip+0x28c0410],al        # 28c1405 <_end+0x28bb3ed>
     ff5:	00 00                	add    BYTE PTR [rax],al
     ff7:	02 0e                	add    cl,BYTE PTR [rsi]
     ff9:	39 0c 8c             	cmp    DWORD PTR [rsp+rcx*4],ecx
     ffc:	02 00                	add    al,BYTE PTR [rax]
     ffe:	00 05 10 05 ea 01    	add    BYTE PTR [rip+0x1ea0510],al        # 1ea1514 <_end+0x1e9b4fc>
    1004:	00 00                	add    BYTE PTR [rax],al
    1006:	02 0e                	add    cl,BYTE PTR [rsi]
    1008:	39 0c a4             	cmp    DWORD PTR [rsp+riz*4],ecx
    100b:	02 00                	add    al,BYTE PTR [rax]
    100d:	00 02                	add    BYTE PTR [rdx],al
    100f:	0e                   	(bad)
    1010:	39 0c bc             	cmp    DWORD PTR [rsp+rdi*4],ecx
    1013:	02 00                	add    al,BYTE PTR [rax]
    1015:	00 02                	add    BYTE PTR [rdx],al
    1017:	0e                   	(bad)
    1018:	39 0c d4             	cmp    DWORD PTR [rsp+rdx*8],ecx
    101b:	02 00                	add    al,BYTE PTR [rax]
    101d:	00 02                	add    BYTE PTR [rdx],al
    101f:	0e                   	(bad)
    1020:	39 0c ec             	cmp    DWORD PTR [rsp+rbp*8],ecx
    1023:	02 00                	add    al,BYTE PTR [rax]
    1025:	00 02                	add    BYTE PTR [rdx],al
    1027:	0e                   	(bad)
    1028:	39 0c 04             	cmp    DWORD PTR [rsp+rax*1],ecx
    102b:	03 00                	add    eax,DWORD PTR [rax]
    102d:	00 02                	add    BYTE PTR [rdx],al
    102f:	0e                   	(bad)
    1030:	39 0c 1c             	cmp    DWORD PTR [rsp+rbx*1],ecx
    1033:	03 00                	add    eax,DWORD PTR [rax]
    1035:	00 02                	add    BYTE PTR [rdx],al
    1037:	0e                   	(bad)
    1038:	3a 0c 85 03 00 00 02 	cmp    cl,BYTE PTR [rax*4+0x2000003]
    103f:	0e                   	(bad)
    1040:	3b 0c a2             	cmp    ecx,DWORD PTR [rdx+riz*4]
    1043:	03 00                	add    eax,DWORD PTR [rax]
    1045:	00 02                	add    BYTE PTR [rdx],al
    1047:	0e                   	(bad)
    1048:	3c 0c                	cmp    al,0xc
    104a:	b8 03 00 00 02       	mov    eax,0x2000003
    104f:	0e                   	(bad)
    1050:	3d 0c ce 03 00       	cmp    eax,0x3ce0c
    1055:	00 02                	add    BYTE PTR [rdx],al
    1057:	0e                   	(bad)
    1058:	3f                   	(bad)
    1059:	0c 05                	or     al,0x5
    105b:	06                   	(bad)
    105c:	00 00                	add    BYTE PTR [rax],al
    105e:	02 0e                	add    cl,BYTE PTR [rsi]
    1060:	3f                   	(bad)
    1061:	0c 34                	or     al,0x34
    1063:	03 00                	add    eax,DWORD PTR [rax]
    1065:	00 02                	add    BYTE PTR [rdx],al
    1067:	0e                   	(bad)
    1068:	3f                   	(bad)
    1069:	0c f8                	or     al,0xf8
    106b:	03 00                	add    eax,DWORD PTR [rax]
    106d:	00 02                	add    BYTE PTR [rdx],al
    106f:	0e                   	(bad)
    1070:	41 0c 14             	rex.B or al,0x14
    1073:	04 00                	add    al,0x0
    1075:	00 02                	add    BYTE PTR [rdx],al
    1077:	0e                   	(bad)
    1078:	43 0c 2a             	rex.XB or al,0x2a
    107b:	04 00                	add    al,0x0
    107d:	00 02                	add    BYTE PTR [rdx],al
    107f:	0e                   	(bad)
    1080:	46 0c 45             	rex.RX or al,0x45
    1083:	04 00                	add    al,0x0
    1085:	00 02                	add    BYTE PTR [rdx],al
    1087:	0e                   	(bad)
    1088:	47 0c 60             	rex.RXB or al,0x60
    108b:	04 00                	add    al,0x0
    108d:	00 02                	add    BYTE PTR [rdx],al
    108f:	0e                   	(bad)
    1090:	48 0c 91             	rex.W or al,0x91
    1093:	04 00                	add    al,0x0
    1095:	00 02                	add    BYTE PTR [rdx],al
    1097:	0e                   	(bad)
    1098:	4a 0c b1             	rex.WX or al,0xb1
    109b:	04 00                	add    al,0x0
    109d:	00 02                	add    BYTE PTR [rdx],al
    109f:	0e                   	(bad)
    10a0:	4b 0c e4             	rex.WXB or al,0xe4
    10a3:	04 00                	add    al,0x0
    10a5:	00 02                	add    BYTE PTR [rdx],al
    10a7:	0e                   	(bad)
    10a8:	4d 0c f1             	rex.WRB or al,0xf1
    10ab:	04 00                	add    al,0x0
    10ad:	00 02                	add    BYTE PTR [rdx],al
    10af:	0e                   	(bad)
    10b0:	4e 0c 02             	rex.WRX or al,0x2
    10b3:	05 00 00 02 0e       	add    eax,0xe020000
    10b8:	4f 0c 22             	rex.WRXB or al,0x22
    10bb:	05 00 00 02 0e       	add    eax,0xe020000
    10c0:	50                   	push   rax
    10c1:	0c 46                	or     al,0x46
    10c3:	05 00 00 02 0e       	add    eax,0xe020000
    10c8:	51                   	push   rcx
    10c9:	0c 6a                	or     al,0x6a
    10cb:	05 00 00 02 0e       	add    eax,0xe020000
    10d0:	53                   	push   rbx
    10d1:	0c 80                	or     al,0x80
    10d3:	05 00 00 02 0e       	add    eax,0xe020000
    10d8:	54                   	push   rsp
    10d9:	0c a5                	or     al,0xa5
    10db:	05 00 00 05 10       	add    eax,0x10050000
    10e0:	07                   	(bad)
    10e1:	66 07                	data16 (bad)
    10e3:	00 00                	add    BYTE PTR [rax],al
    10e5:	05 02 04 00 00       	add    eax,0x402
    10ea:	00 00                	add    BYTE PTR [rax],al
    10ec:	05 02 04 c8 02       	add    eax,0x2c80402
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	08 ab 00 00 00 0f    	or     BYTE PTR [rbx+0xf000000],ch
    10f9:	1a 14 27             	sbb    dl,BYTE PTR [rdi+riz*1]
    10fc:	01 00                	add    DWORD PTR [rax],eax
    10fe:	00 08                	add    BYTE PTR [rax],cl
    1100:	87 05 00 00 0f 1b    	xchg   DWORD PTR [rip+0x1b0f0000],eax        # 1b0f1106 <_end+0x1b0eb0ee>
    1106:	14 33                	adc    al,0x33
    1108:	01 00                	add    DWORD PTR [rax],eax
    110a:	00 1a                	add    BYTE PTR [rdx],bl
    110c:	40 08 00             	rex or BYTE PTR [rax],al
    110f:	00 10                	add    BYTE PTR [rax],dl
    1111:	10 07                	adc    BYTE PTR [rdi],al
    1113:	53                   	push   rbx
    1114:	08 00                	or     BYTE PTR [rax],al
    1116:	00 06                	add    BYTE PTR [rsi],al
    1118:	a3 03 00 00 10 08 0b 	movabs ds:0x1410b0810000003,eax
    111f:	41 01 
    1121:	00 00                	add    BYTE PTR [rax],al
    1123:	00 06                	add    BYTE PTR [rsi],al
    1125:	e5 05                	in     eax,0x5
    1127:	00 00                	add    BYTE PTR [rax],al
    1129:	10 09                	adc    BYTE PTR [rcx],cl
    112b:	0e                   	(bad)
    112c:	07                   	(bad)
    112d:	08 00                	or     BYTE PTR [rax],al
    112f:	00 08                	add    BYTE PTR [rax],cl
    1131:	06                   	(bad)
    1132:	ea                   	(bad)
    1133:	05 00 00 10 0a       	add    eax,0xa100000
    1138:	0e                   	(bad)
    1139:	07                   	(bad)
    113a:	08 00                	or     BYTE PTR [rax],al
    113c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    113f:	08 40 08             	or     BYTE PTR [rax+0x8],al
    1142:	00 00                	add    BYTE PTR [rax],al
    1144:	10 0b                	adc    BYTE PTR [rbx],cl
    1146:	03 1f                	add    ebx,DWORD PTR [rdi]
    1148:	08 00                	or     BYTE PTR [rax],al
    114a:	00 1b                	add    BYTE PTR [rbx],bl
    114c:	69 02 00 00 11 08    	imul   eax,DWORD PTR [rdx],0x8110000
    1152:	6d                   	ins    DWORD PTR es:[rdi],dx
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	00 0f                	add    BYTE PTR [rdi],cl
    1157:	1b 75 02             	sbb    esi,DWORD PTR [rbp+0x2]
    115a:	00 00                	add    BYTE PTR [rax],al
    115c:	11 09                	adc    DWORD PTR [rcx],ecx
    115e:	6d                   	ins    DWORD PTR es:[rdi],dx
    115f:	00 00                	add    BYTE PTR [rax],al
    1161:	00 02                	add    BYTE PTR [rdx],al
    1163:	1b c4                	sbb    eax,esp
    1165:	00 00                	add    BYTE PTR [rax],al
    1167:	00 11                	add    BYTE PTR [rcx],dl
    1169:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    116c:	00 00                	add    BYTE PTR [rax],al
    116e:	20 08                	and    BYTE PTR [rax],cl
    1170:	36 03 00             	ss add eax,DWORD PTR [rax]
    1173:	00 11                	add    BYTE PTR [rcx],dl
    1175:	0c 12                	or     al,0x12
    1177:	53                   	push   rbx
    1178:	08 00                	or     BYTE PTR [rax],al
    117a:	00 08                	add    BYTE PTR [rax],cl
    117c:	5f                   	pop    rdi
    117d:	07                   	(bad)
    117e:	00 00                	add    BYTE PTR [rax],al
    1180:	11 0d 14 9b 08 00    	adc    DWORD PTR [rip+0x89b14],ecx        # 8ac9a <_end+0x84c82>
    1186:	00 09                	add    BYTE PTR [rcx],cl
    1188:	a0 08 00 00 2b 07 08 	movabs al,ds:0x8072b000008
    118f:	00 00 
    1191:	af                   	scas   eax,DWORD PTR es:[rdi]
    1192:	08 00                	or     BYTE PTR [rax],al
    1194:	00 01                	add    BYTE PTR [rcx],al
    1196:	83 08 00             	or     DWORD PTR [rax],0x0
    1199:	00 00                	add    BYTE PTR [rax],al
    119b:	1a 42 05             	sbb    al,BYTE PTR [rdx+0x5]
    119e:	00 00                	add    BYTE PTR [rax],al
    11a0:	20 11                	and    BYTE PTR [rcx],dl
    11a2:	0f f0                	(bad)
    11a4:	08 00                	or     BYTE PTR [rax],al
    11a6:	00 06                	add    BYTE PTR [rsi],al
    11a8:	14 06                	adc    al,0x6
    11aa:	00 00                	add    BYTE PTR [rax],al
    11ac:	11 10                	adc    DWORD PTR [rax],edx
    11ae:	0e                   	(bad)
    11af:	07                   	(bad)
    11b0:	08 00                	or     BYTE PTR [rax],al
    11b2:	00 00                	add    BYTE PTR [rax],al
    11b4:	06                   	(bad)
    11b5:	95                   	xchg   ebp,eax
    11b6:	04 00                	add    al,0x0
    11b8:	00 11                	add    BYTE PTR [rcx],dl
    11ba:	11 0e                	adc    DWORD PTR [rsi],ecx
    11bc:	07                   	(bad)
    11bd:	08 00                	or     BYTE PTR [rax],al
    11bf:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    11c2:	d0 05 00 00 11 13    	rol    BYTE PTR [rip+0x13110000],1        # 131111c8 <_end+0x1310b1b0>
    11c8:	0e                   	(bad)
    11c9:	07                   	(bad)
    11ca:	08 00                	or     BYTE PTR [rax],al
    11cc:	00 08                	add    BYTE PTR [rax],cl
    11ce:	06                   	(bad)
    11cf:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    11d2:	00 11                	add    BYTE PTR [rcx],dl
    11d4:	15 0c 83 08 00       	adc    eax,0x8830c
    11d9:	00 10                	add    BYTE PTR [rax],dl
    11db:	00 08                	add    BYTE PTR [rax],cl
    11dd:	42 05 00 00 11 16    	rex.X add eax,0x16110000
    11e3:	03 af 08 00 00 1a    	add    ebp,DWORD PTR [rdi+0x1a000008]
    11e9:	60                   	(bad)
    11ea:	04 00                	add    al,0x0
    11ec:	00 18                	add    BYTE PTR [rax],bl
    11ee:	11 18                	adc    DWORD PTR [rax],ebx
    11f0:	3d 09 00 00 06       	cmp    eax,0x6000009
    11f5:	d8 05 00 00 11 19    	fadd   DWORD PTR [rip+0x19110000]        # 191111fb <_end+0x1910b1e3>
    11fb:	0f 3d                	(bad)
    11fd:	09 00                	or     DWORD PTR [rax],eax
    11ff:	00 00                	add    BYTE PTR [rax],al
    1201:	06                   	(bad)
    1202:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1203:	05 00 00 11 1a       	add    eax,0x1a110000
    1208:	0e                   	(bad)
    1209:	07                   	(bad)
    120a:	08 00                	or     BYTE PTR [rax],al
    120c:	00 08                	add    BYTE PTR [rax],cl
    120e:	06                   	(bad)
    120f:	19 03                	sbb    DWORD PTR [rbx],eax
    1211:	00 00                	add    BYTE PTR [rax],al
    1213:	11 1b                	adc    DWORD PTR [rbx],ebx
    1215:	0e                   	(bad)
    1216:	07                   	(bad)
    1217:	08 00                	or     BYTE PTR [rax],al
    1219:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    121c:	69 03 00 00 11 1c    	imul   eax,DWORD PTR [rbx],0x1c110000
    1222:	0e                   	(bad)
    1223:	07                   	(bad)
    1224:	08 00                	or     BYTE PTR [rax],al
    1226:	00 10                	add    BYTE PTR [rax],dl
    1228:	00 09                	add    BYTE PTR [rcx],cl
    122a:	f0 08 00             	lock or BYTE PTR [rax],al
    122d:	00 08                	add    BYTE PTR [rax],cl
    122f:	60                   	(bad)
    1230:	04 00                	add    al,0x0
    1232:	00 11                	add    BYTE PTR [rcx],dl
    1234:	1d 03 fc 08 00       	sbb    eax,0x8fc03
    1239:	00 1a                	add    BYTE PTR [rdx],bl
    123b:	8d 04 00             	lea    eax,[rax+rax*1]
    123e:	00 18                	add    BYTE PTR [rax],bl
    1240:	11 1f                	adc    DWORD PTR [rdi],ebx
    1242:	8f 09 00 00          	(bad)
    1246:	06                   	(bad)
    1247:	ef                   	out    dx,eax
    1248:	04 00                	add    al,0x0
    124a:	00 11                	add    BYTE PTR [rcx],dl
    124c:	20 0b                	and    BYTE PTR [rbx],cl
    124e:	8f 09 00 00          	(bad)
    1252:	00 06                	add    BYTE PTR [rsi],al
    1254:	19 03                	sbb    DWORD PTR [rbx],eax
    1256:	00 00                	add    BYTE PTR [rax],al
    1258:	11 21                	adc    DWORD PTR [rcx],esp
    125a:	0e                   	(bad)
    125b:	07                   	(bad)
    125c:	08 00                	or     BYTE PTR [rax],al
    125e:	00 08                	add    BYTE PTR [rax],cl
    1260:	06                   	(bad)
    1261:	45 07                	rex.RB (bad)
    1263:	00 00                	add    BYTE PTR [rax],al
    1265:	11 22                	adc    DWORD PTR [rdx],esp
    1267:	0b b3 06 00 00 0c    	or     esi,DWORD PTR [rbx+0xc000006]
    126d:	06                   	(bad)
    126e:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    1271:	00 11                	add    BYTE PTR [rcx],dl
    1273:	23 0c 8f             	and    ecx,DWORD PTR [rdi+rcx*4]
    1276:	08 00                	or     BYTE PTR [rax],al
    1278:	00 10                	add    BYTE PTR [rax],dl
    127a:	00 09                	add    BYTE PTR [rcx],cl
    127c:	42 09 00             	rex.X or DWORD PTR [rax],eax
    127f:	00 08                	add    BYTE PTR [rax],cl
    1281:	8d 04 00             	lea    eax,[rax+rax*1]
    1284:	00 11                	add    BYTE PTR [rcx],dl
    1286:	24 03                	and    al,0x3
    1288:	4e 09 00             	rex.WRX or QWORD PTR [rax],r8
    128b:	00 1b                	add    BYTE PTR [rbx],bl
    128d:	f8                   	clc
    128e:	06                   	(bad)
    128f:	00 00                	add    BYTE PTR [rax],al
    1291:	12 06                	adc    al,BYTE PTR [rsi]
    1293:	6d                   	ins    DWORD PTR es:[rdi],dx
    1294:	00 00                	add    BYTE PTR [rax],al
    1296:	00 04 0f             	add    BYTE PTR [rdi+rcx*1],al
    1299:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    129c:	00 13                	add    BYTE PTR [rbx],dl
    129e:	34 0c                	xor    al,0xc
    12a0:	66 00 00             	data16 add BYTE PTR [rax],al
    12a3:	00 c8                	add    al,cl
    12a5:	09 00                	or     DWORD PTR [rax],eax
    12a7:	00 01                	add    BYTE PTR [rcx],al
    12a9:	66 00 00             	data16 add BYTE PTR [rax],al
    12ac:	00 01                	add    BYTE PTR [rcx],al
    12ae:	f5                   	cmc
    12af:	00 00                	add    BYTE PTR [rax],al
    12b1:	00 2d 00 2e 0b 05    	add    BYTE PTR [rip+0x50b2e00],ch        # 50b40b7 <_end+0x50ae09f>
    12b7:	00 00                	add    BYTE PTR [rax],al
    12b9:	0e                   	(bad)
    12ba:	3d 03 00 00 dc       	cmp    eax,0xdc000003
    12bf:	09 00                	or     DWORD PTR [rax],eax
    12c1:	00 01                	add    BYTE PTR [rcx],al
    12c3:	8f 09 00 00          	(bad)
    12c7:	00 24 b0             	add    BYTE PTR [rax+rsi*4],ah
    12ca:	03 00                	add    eax,DWORD PTR [rax]
    12cc:	00 af 02 ed 09 00    	add    BYTE PTR [rdi+0x9ed02],ch
    12d2:	00 01                	add    BYTE PTR [rcx],al
    12d4:	3f                   	(bad)
    12d5:	01 00                	add    DWORD PTR [rax],eax
    12d7:	00 00                	add    BYTE PTR [rax],al
    12d9:	2e 9e                	cs sahf
    12db:	04 00                	add    al,0x0
    12dd:	00 0c 53             	add    BYTE PTR [rbx+rdx*2],cl
    12e0:	04 00                	add    al,0x0
    12e2:	00 01                	add    BYTE PTR [rcx],al
    12e4:	0a 00                	or     al,BYTE PTR [rax]
    12e6:	00 01                	add    BYTE PTR [rcx],al
    12e8:	8f 09 00 00          	(bad)
    12ec:	00 14 77             	add    BYTE PTR [rdi+rsi*2],dl
    12ef:	05 00 00 12 0b       	add    eax,0xb120000
    12f4:	05 16 05 00 00       	add    eax,0x516
    12f9:	66 00 00             	data16 add BYTE PTR [rax],al
    12fc:	00 20                	add    BYTE PTR [rax],ah
    12fe:	0a 00                	or     al,BYTE PTR [rax]
    1300:	00 01                	add    BYTE PTR [rcx],al
    1302:	8f 09 00 00          	(bad)
    1306:	01 83 08 00 00 00    	add    DWORD PTR [rbx+0x8],eax
    130c:	14 0f                	adc    al,0xf
    130e:	04 00                	add    al,0x0
    1310:	00 12                	add    BYTE PTR [rdx],dl
    1312:	0a 05 52 06 00 00    	or     al,BYTE PTR [rip+0x652]        # 196a <_Z17hashMapDebugPrintP7HashMap+0xa>
    1318:	66 00 00             	data16 add BYTE PTR [rax],al
    131b:	00 3f                	add    BYTE PTR [rdi],bh
    131d:	0a 00                	or     al,BYTE PTR [rax]
    131f:	00 01                	add    BYTE PTR [rcx],al
    1321:	8f 09 00 00          	(bad)
    1325:	01 83 08 00 00 00    	add    DWORD PTR [rbx+0x8],eax
    132b:	14 3e                	adc    al,0x3e
    132d:	05 00 00 12 09       	add    eax,0x9120000
    1332:	05 71 06 00 00       	add    eax,0x671
    1337:	66 00 00             	data16 add BYTE PTR [rax],al
    133a:	00 5e 0a             	add    BYTE PTR [rsi+0xa],bl
    133d:	00 00                	add    BYTE PTR [rax],al
    133f:	01 8f 09 00 00 01    	add    DWORD PTR [rdi+0x1000009],ecx
    1345:	83 08 00             	or     DWORD PTR [rax],0x0
    1348:	00 00                	add    BYTE PTR [rax],al
    134a:	48 f5                	rex.W cmc
    134c:	04 00                	add    al,0x0
    134e:	00 12                	add    BYTE PTR [rdx],dl
    1350:	08 06                	or     BYTE PTR [rsi],al
    1352:	fe 04 00             	inc    BYTE PTR [rax+rax*1]
    1355:	00 42 09             	add    BYTE PTR [rdx+0x9],al
    1358:	00 00                	add    BYTE PTR [rax],al
    135a:	0b e1                	or     esp,ecx
    135c:	04 00                	add    al,0x0
    135e:	00 d4                	add    ah,dl
    1360:	02 0e                	add    cl,BYTE PTR [rsi]
    1362:	3f                   	(bad)
    1363:	01 00                	add    DWORD PTR [rax],eax
    1365:	00 89 0a 00 00 01    	add    BYTE PTR [rcx+0x100000a],cl
    136b:	2e 00 00             	cs add BYTE PTR [rax],al
    136e:	00 01                	add    BYTE PTR [rcx],al
    1370:	2e 00 00             	cs add BYTE PTR [rax],al
    1373:	00 00                	add    BYTE PTR [rax],al
    1375:	0b 91 06 00 00 a3    	or     edx,DWORD PTR [rcx-0x5cfffffa]
    137b:	02 0e                	add    cl,BYTE PTR [rsi]
    137d:	3f                   	(bad)
    137e:	01 00                	add    DWORD PTR [rax],eax
    1380:	00 a4 0a 00 00 01 2e 	add    BYTE PTR [rdx+rcx*1+0x2e010000],ah
    1387:	00 00                	add    BYTE PTR [rax],al
    1389:	00 01                	add    BYTE PTR [rcx],al
    138b:	2e 00 00             	cs add BYTE PTR [rax],al
    138e:	00 00                	add    BYTE PTR [rax],al
    1390:	49 ad                	rex.WB lods rax,QWORD PTR ds:[rsi]
    1392:	05 00 00 14 45       	add    eax,0x45140000
    1397:	0d c5 0a 00 00       	or     eax,0xac5
    139c:	01 f5                	add    ebp,esi
    139e:	00 00                	add    BYTE PTR [rax],al
    13a0:	00 01                	add    BYTE PTR [rcx],al
    13a2:	f5                   	cmc
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	00 01                	add    BYTE PTR [rcx],al
    13a7:	12 01                	adc    al,BYTE PTR [rcx]
    13a9:	00 00                	add    BYTE PTR [rax],al
    13ab:	01 f5                	add    ebp,esi
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	00 00                	add    BYTE PTR [rax],al
    13b1:	4a 5c                	rex.WX pop rsp
    13b3:	05 00 00 01 ba       	add    eax,0xba010000
    13b8:	06                   	(bad)
    13b9:	25 04 00 00 60       	and    eax,0x60000004
    13be:	19 00                	sbb    DWORD PTR [rax],eax
    13c0:	00 00                	add    BYTE PTR [rax],al
    13c2:	00 00                	add    BYTE PTR [rax],al
    13c4:	00 be 00 00 00 00    	add    BYTE PTR [rsi+0x0],bh
    13ca:	00 00                	add    BYTE PTR [rax],al
    13cc:	00 01                	add    BYTE PTR [rcx],al
    13ce:	9c                   	pushf
    13cf:	0e                   	(bad)
    13d0:	0d 00 00 10 94       	or     eax,0x94100000
    13d5:	05 00 00 ba 21       	add    eax,0x21ba0000
    13da:	0e                   	(bad)
    13db:	0d 00 00 65 00       	or     eax,0x650000
    13e0:	00 00                	add    BYTE PTR [rax],al
    13e2:	5d                   	pop    rbp
    13e3:	00 00                	add    BYTE PTR [rax],al
    13e5:	00 2f                	add    BYTE PTR [rdi],ch
    13e7:	be 19 00 00 00       	mov    esi,0x19
    13ec:	00 00                	add    BYTE PTR [rax],al
    13ee:	00 3d 00 00 00 00    	add    BYTE PTR [rip+0x0],bh        # 13f4 <_Z16buildStringArrayPcj+0xf4>
    13f4:	00 00                	add    BYTE PTR [rax],al
    13f6:	00 7f 0b             	add    BYTE PTR [rdi+0xb],bh
    13f9:	00 00                	add    BYTE PTR [rax],al
    13fb:	15 69 00 c7 13       	adc    eax,0x13c70069
    1400:	07                   	(bad)
    1401:	08 00                	or     BYTE PTR [rax],al
    1403:	00 8b 00 00 00 85    	add    BYTE PTR [rbx-0x7b000000],cl
    1409:	00 00                	add    BYTE PTR [rax],al
    140b:	00 17                	add    BYTE PTR [rdi],dl
    140d:	97                   	xchg   edi,eax
    140e:	17                   	(bad)
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	d0 19                	rcr    BYTE PTR [rcx],1
    1413:	00 00                	add    BYTE PTR [rax],al
    1415:	00 00                	add    BYTE PTR [rax],al
    1417:	00 00                	add    BYTE PTR [rax],al
    1419:	01 d0                	add    eax,edx
    141b:	19 00                	sbb    DWORD PTR [rax],eax
    141d:	00 00                	add    BYTE PTR [rax],al
    141f:	00 00                	add    BYTE PTR [rax],al
    1421:	00 11                	add    BYTE PTR [rcx],dl
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	00 00                	add    BYTE PTR [rax],al
    1427:	00 00                	add    BYTE PTR [rax],al
    1429:	00 c8                	add    al,cl
    142b:	0f 71                	(bad)
    142d:	0b 00                	or     eax,DWORD PTR [rax]
    142f:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1432:	17                   	(bad)
    1433:	00 00                	add    BYTE PTR [rax],al
    1435:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1436:	00 00                	add    BYTE PTR [rax],al
    1438:	00 a4 00 00 00 07 e1 	add    BYTE PTR [rax+rax*1-0x1ef90000],ah
    143f:	19 00                	sbb    DWORD PTR [rax],eax
    1441:	00 00                	add    BYTE PTR [rax],al
    1443:	00 00                	add    BYTE PTR [rax],al
    1445:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    144c:	55                   	push   rbp
    144d:	01 32                	add    DWORD PTR [rdx],esi
    144f:	03 01                	add    eax,DWORD PTR [rcx]
    1451:	54                   	push   rsp
    1452:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    1456:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1459:	73 00                	jae    145b <_Z11hashMapCtorPFj8string_tEj+0x2b>
    145b:	00 00                	add    BYTE PTR [rax],al
    145d:	0d f6 19 00 00       	or     eax,0x19f6
    1462:	00 00                	add    BYTE PTR [rax],al
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	c8 09 00 00          	enter  0x9,0x0
    146a:	00 0e                	add    BYTE PTR [rsi],cl
    146c:	97                   	xchg   edi,eax
    146d:	17                   	(bad)
    146e:	00 00                	add    BYTE PTR [rax],al
    1470:	64 19 00             	sbb    DWORD PTR fs:[rax],eax
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	00 00                	add    BYTE PTR [rax],al
    1477:	00 01                	add    BYTE PTR [rcx],al
    1479:	f7 00 00 00 bb 0b    	test   DWORD PTR [rax],0xbbb0000
    147f:	b9 0b 00 00 04       	mov    ecx,0x400000b
    1484:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1485:	17                   	(bad)
    1486:	00 00                	add    BYTE PTR [rax],al
    1488:	b9 00 00 00 b7       	mov    ecx,0xb7000000
    148d:	00 00                	add    BYTE PTR [rax],al
    148f:	00 07                	add    BYTE PTR [rdi],al
    1491:	80 19 00             	sbb    BYTE PTR [rcx],0x0
    1494:	00 00                	add    BYTE PTR [rax],al
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	00 33                	add    BYTE PTR [rbx],dh
    149a:	19 00                	sbb    DWORD PTR [rax],eax
    149c:	00 03                	add    BYTE PTR [rbx],al
    149e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    14a1:	7d 00                	jge    14a3 <_Z11hashMapCtorPFj8string_tEj+0x73>
    14a3:	00 00                	add    BYTE PTR [rax],al
    14a5:	17                   	(bad)
    14a6:	97                   	xchg   edi,eax
    14a7:	17                   	(bad)
    14a8:	00 00                	add    BYTE PTR [rax],al
    14aa:	89 19                	mov    DWORD PTR [rcx],ebx
    14ac:	00 00                	add    BYTE PTR [rax],al
    14ae:	00 00                	add    BYTE PTR [rax],al
    14b0:	00 00                	add    BYTE PTR [rax],al
    14b2:	01 89 19 00 00 00    	add    DWORD PTR [rcx+0x19],ecx
    14b8:	00 00                	add    BYTE PTR [rax],al
    14ba:	00 16                	add    BYTE PTR [rsi],dl
    14bc:	00 00                	add    BYTE PTR [rax],al
    14be:	00 00                	add    BYTE PTR [rax],al
    14c0:	00 00                	add    BYTE PTR [rax],al
    14c2:	00 c4                	add    ah,al
    14c4:	0b 0b                	or     ecx,DWORD PTR [rbx]
    14c6:	0c 00                	or     al,0x0
    14c8:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    14cb:	17                   	(bad)
    14cc:	00 00                	add    BYTE PTR [rax],al
    14ce:	c8 00 00 00          	enter  0x0,0x0
    14d2:	c6 00 00             	mov    BYTE PTR [rax],0x0
    14d5:	00 07                	add    BYTE PTR [rdi],al
    14d7:	9f                   	lahf
    14d8:	19 00                	sbb    DWORD PTR [rax],eax
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    14e5:	55                   	push   rbp
    14e6:	01 32                	add    DWORD PTR [rdx],esi
    14e8:	03 01                	add    eax,DWORD PTR [rcx]
    14ea:	54                   	push   rsp
    14eb:	09 03                	or     DWORD PTR [rbx],eax
    14ed:	65 40 00 00          	rex add BYTE PTR gs:[rax],al
    14f1:	00 00                	add    BYTE PTR [rax],al
    14f3:	00 00                	add    BYTE PTR [rax],al
    14f5:	00 00                	add    BYTE PTR [rax],al
    14f7:	0e                   	(bad)
    14f8:	97                   	xchg   edi,eax
    14f9:	17                   	(bad)
    14fa:	00 00                	add    BYTE PTR [rax],al
    14fc:	9f                   	lahf
    14fd:	19 00                	sbb    DWORD PTR [rax],eax
    14ff:	00 00                	add    BYTE PTR [rax],al
    1501:	00 00                	add    BYTE PTR [rax],al
    1503:	00 02                	add    BYTE PTR [rdx],al
    1505:	0c 01                	or     al,0x1
    1507:	00 00                	add    BYTE PTR [rax],al
    1509:	c5 0b 51 0c 00       	vsqrtsd xmm9,xmm14,QWORD PTR [rax+rax*1]
    150e:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    1511:	17                   	(bad)
    1512:	00 00                	add    BYTE PTR [rax],al
    1514:	db 00                	fild   DWORD PTR [rax]
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	d9 00                	fld    DWORD PTR [rax]
    151a:	00 00                	add    BYTE PTR [rax],al
    151c:	07                   	(bad)
    151d:	be 19 00 00 00       	mov    esi,0x19
    1522:	00 00                	add    BYTE PTR [rax],al
    1524:	00 ac 09 00 00 03 01 	add    BYTE PTR [rcx+rcx*1+0x1030000],ch
    152b:	55                   	push   rbp
    152c:	01 32                	add    DWORD PTR [rdx],esi
    152e:	03 01                	add    eax,DWORD PTR [rcx]
    1530:	54                   	push   rsp
    1531:	09 03                	or     DWORD PTR [rbx],eax
    1533:	76 40                	jbe    1575 <_Z17hashMapAddElementP7HashMap8string_t+0x95>
	...
    153d:	0e                   	(bad)
    153e:	97                   	xchg   edi,eax
    153f:	17                   	(bad)
    1540:	00 00                	add    BYTE PTR [rax],al
    1542:	fb                   	sti
    1543:	19 00                	sbb    DWORD PTR [rax],eax
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	00 00                	add    BYTE PTR [rax],al
    1549:	00 02                	add    BYTE PTR [rdx],al
    154b:	1c 01                	sbb    al,0x1
    154d:	00 00                	add    BYTE PTR [rax],al
    154f:	cb                   	retf
    1550:	0b 92 0c 00 00 04    	or     edx,DWORD PTR [rdx+0x400000c]
    1556:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1557:	17                   	(bad)
    1558:	00 00                	add    BYTE PTR [rax],al
    155a:	ee                   	out    dx,al
    155b:	00 00                	add    BYTE PTR [rax],al
    155d:	00 ec                	add    ah,ch
    155f:	00 00                	add    BYTE PTR [rax],al
    1561:	00 4b 0d             	add    BYTE PTR [rbx+0xd],cl
    1564:	1a 00                	sbb    al,BYTE PTR [rax]
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	00 00                	add    BYTE PTR [rax],al
    156a:	00 33                	add    BYTE PTR [rbx],dh
    156c:	19 00                	sbb    DWORD PTR [rax],eax
    156e:	00 03                	add    BYTE PTR [rbx],al
    1570:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1573:	03 45 40             	add    eax,DWORD PTR [rbp+0x40]
	...
    157e:	17                   	(bad)
    157f:	97                   	xchg   edi,eax
    1580:	17                   	(bad)
    1581:	00 00                	add    BYTE PTR [rax],al
    1583:	10 1a                	adc    BYTE PTR [rdx],bl
    1585:	00 00                	add    BYTE PTR [rax],al
    1587:	00 00                	add    BYTE PTR [rax],al
    1589:	00 00                	add    BYTE PTR [rax],al
    158b:	02 10                	add    dl,BYTE PTR [rax]
    158d:	1a 00                	sbb    al,BYTE PTR [rax]
    158f:	00 00                	add    BYTE PTR [rax],al
    1591:	00 00                	add    BYTE PTR [rax],al
    1593:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	00 00                	add    BYTE PTR [rax],al
    159a:	00 00                	add    BYTE PTR [rax],al
    159c:	be 0f df 0c 00       	mov    esi,0xcdf0f
    15a1:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    15a4:	17                   	(bad)
    15a5:	00 00                	add    BYTE PTR [rax],al
    15a7:	fd                   	std
    15a8:	00 00                	add    BYTE PTR [rax],al
    15aa:	00 fb                	add    bl,bh
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	00 07                	add    BYTE PTR [rdi],al
    15b0:	1c 1a                	sbb    al,0x1a
    15b2:	00 00                	add    BYTE PTR [rax],al
    15b4:	00 00                	add    BYTE PTR [rax],al
    15b6:	00 00                	add    BYTE PTR [rax],al
    15b8:	33 19                	xor    ebx,DWORD PTR [rcx]
    15ba:	00 00                	add    BYTE PTR [rax],al
    15bc:	03 01                	add    eax,DWORD PTR [rcx]
    15be:	55                   	push   rbp
    15bf:	09 03                	or     DWORD PTR [rbx],eax
    15c1:	60                   	(bad)
    15c2:	40 00 00             	rex add BYTE PTR [rax],al
    15c5:	00 00                	add    BYTE PTR [rax],al
    15c7:	00 00                	add    BYTE PTR [rax],al
    15c9:	00 00                	add    BYTE PTR [rax],al
    15cb:	4c 97                	rex.WR xchg rdi,rax
    15cd:	17                   	(bad)
    15ce:	00 00                	add    BYTE PTR [rax],al
    15d0:	1c 1a                	sbb    al,0x1a
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	00 00                	add    BYTE PTR [rax],al
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	02 1c 1a             	add    bl,BYTE PTR [rdx+rbx*1]
    15db:	00 00                	add    BYTE PTR [rax],al
    15dd:	00 00                	add    BYTE PTR [rax],al
    15df:	00 00                	add    BYTE PTR [rax],al
    15e1:	02 00                	add    al,BYTE PTR [rax]
    15e3:	00 00                	add    BYTE PTR [rax],al
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	00 00                	add    BYTE PTR [rax],al
    15e9:	01 bf 0f 4d a6 17    	add    DWORD PTR [rdi+0x17a64d0f],edi
    15ef:	00 00                	add    BYTE PTR [rax],al
    15f1:	06                   	(bad)
    15f2:	a0 ff 21 00 00 00 00 	movabs al,ds:0x9000000000021ff
    15f9:	00 09 
    15fb:	94                   	xchg   esp,eax
    15fc:	09 00                	or     DWORD PTR [rax],eax
    15fe:	00 30                	add    BYTE PTR [rax],dh
    1600:	e3 05                	jrcxz  1607 <_Z17hashMapAddElementP7HashMap8string_t+0x127>
    1602:	00 00                	add    BYTE PTR [rax],al
    1604:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1605:	10 94 09 00 00 68 0d 	adc    BYTE PTR [rcx+rcx*1+0xd680000],dl
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	0a 94 05 00 00 01 a4 	or     dl,BYTE PTR [rbp+rax*1-0x5bff0000]
    1615:	20 0e                	and    BYTE PTR [rsi],cl
    1617:	0d 00 00 25 cd       	or     eax,0xcd250000
    161c:	03 00                	add    eax,DWORD PTR [rax]
    161e:	00 78 0d             	add    BYTE PTR [rax+0xd],bh
    1621:	00 00                	add    BYTE PTR [rax],al
    1623:	16                   	(bad)
    1624:	90                   	nop
    1625:	05 00 00 a7 0d       	add    eax,0xda70000
    162a:	94                   	xchg   esp,eax
    162b:	09 00                	or     DWORD PTR [rax],eax
    162d:	00 18                	add    BYTE PTR [rax],bl
    162f:	1c 69                	sbb    al,0x69
    1631:	00 aa 13 07 08 00    	add    BYTE PTR [rdx+0x80713],ch
    1637:	00 18                	add    BYTE PTR [rax],bl
    1639:	16                   	(bad)
    163a:	65 04 00             	gs add al,0x0
    163d:	00 ab 12 07 08 00    	add    BYTE PTR [rbx+0x80712],ch
    1643:	00 18                	add    BYTE PTR [rax],bl
    1645:	16                   	(bad)
    1646:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1649:	00 ae 14 83 08 00    	add    BYTE PTR [rsi+0x88314],ch
    164f:	00 00                	add    BYTE PTR [rax],al
    1651:	00 00                	add    BYTE PTR [rax],al
    1653:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 175f <_Z17hashMapAddElementP7HashMap8string_t+0x27f>
    1659:	78 0d                	js     1668 <_Z17hashMapAddElementP7HashMap8string_t+0x188>
    165b:	00 00                	add    BYTE PTR [rax],al
    165d:	1e                   	(bad)
    165e:	3a 00                	cmp    al,BYTE PTR [rax]
    1660:	00 00                	add    BYTE PTR [rax],al
    1662:	18 00                	sbb    BYTE PTR [rax],al
    1664:	12 68 0d             	adc    ch,BYTE PTR [rax+0xd]
    1667:	00 00                	add    BYTE PTR [rax],al
    1669:	30 9c 05 00 00 9a 11 	xor    BYTE PTR [rbp+rax*1+0x119a0000],bl
    1670:	07                   	(bad)
    1671:	08 00                	or     BYTE PTR [rax],al
    1673:	00 c4                	add    ah,al
    1675:	0d 00 00 0a 94       	or     eax,0x940a0000
    167a:	05 00 00 01 9a       	add    eax,0x9a010000
    167f:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    1681:	0d 00 00 0a d1       	or     eax,0xd10a0000
    1686:	14 00                	adc    al,0x0
    1688:	00 01                	add    BYTE PTR [rcx],al
    168a:	9a                   	(bad)
    168b:	3b 83 08 00 00 25    	cmp    eax,DWORD PTR [rbx+0x25000008]
    1691:	cd 03                	int    0x3
    1693:	00 00                	add    BYTE PTR [rax],al
    1695:	d4                   	(bad)
    1696:	0d 00 00 1c 69       	or     eax,0x691c0000
    169b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    169c:	78 00                	js     169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    169e:	9d                   	popf
    169f:	0e                   	(bad)
    16a0:	07                   	(bad)
    16a1:	08 00                	or     BYTE PTR [rax],al
    16a3:	00 16                	add    BYTE PTR [rsi],dl
    16a5:	d0 05 00 00 9f 0e    	rol    BYTE PTR [rip+0xe9f0000],1        # e9f16ab <_end+0xe9eb693>
    16ab:	07                   	(bad)
    16ac:	08 00                	or     BYTE PTR [rax],al
    16ae:	00 00                	add    BYTE PTR [rax],al
    16b0:	1d 06 01 00 00       	sbb    eax,0x106
    16b5:	d4                   	(bad)
    16b6:	0d 00 00 1e 3a       	or     eax,0x3a1e0000
    16bb:	00 00                	add    BYTE PTR [rax],al
    16bd:	00 2b                	add    BYTE PTR [rbx],ch
    16bf:	00 12                	add    BYTE PTR [rdx],dl
    16c1:	c4                   	(bad)
    16c2:	0d 00 00 4e 39       	or     eax,0x394e0000
    16c7:	07                   	(bad)
    16c8:	00 00                	add    BYTE PTR [rax],al
    16ca:	01 90 06 7c 04 00    	add    DWORD PTR [rax+0x47c06],edx
    16d0:	00 01                	add    BYTE PTR [rcx],al
    16d2:	18 0e                	sbb    BYTE PTR [rsi],cl
    16d4:	00 00                	add    BYTE PTR [rax],al
    16d6:	0a 94 05 00 00 01 90 	or     dl,BYTE PTR [rbp+rax*1-0x6fff0000]
    16dd:	1b 0e                	sbb    ecx,DWORD PTR [rsi]
    16df:	0d 00 00 25 cd       	or     eax,0xcd250000
    16e4:	03 00                	add    eax,DWORD PTR [rax]
    16e6:	00 28                	add    BYTE PTR [rax],ch
    16e8:	0e                   	(bad)
    16e9:	00 00                	add    BYTE PTR [rax],al
    16eb:	18 1c 69             	sbb    BYTE PTR [rcx+rbp*2],bl
    16ee:	00 93 13 07 08 00    	add    BYTE PTR [rbx+0x80713],dl
    16f4:	00 0d 25 19 00 00    	add    BYTE PTR [rip+0x1925],cl        # 301f <_Z7testAllPKcjS0_+0xef>
    16fa:	00 00                	add    BYTE PTR [rax],al
    16fc:	00 00                	add    BYTE PTR [rax],al
    16fe:	ed                   	in     eax,dx
    16ff:	09 00                	or     DWORD PTR [rax],eax
    1701:	00 00                	add    BYTE PTR [rax],al
    1703:	00 1d 06 01 00 00    	add    BYTE PTR [rip+0x106],bl        # 180f <_Z17hashMapPopElementP7HashMap8string_t+0x7f>
    1709:	28 0e                	sub    BYTE PTR [rsi],cl
    170b:	00 00                	add    BYTE PTR [rax],al
    170d:	1e                   	(bad)
    170e:	3a 00                	cmp    al,BYTE PTR [rax]
    1710:	00 00                	add    BYTE PTR [rax],al
    1712:	1a 00                	sbb    al,BYTE PTR [rax]
    1714:	12 18                	adc    bl,BYTE PTR [rax]
    1716:	0e                   	(bad)
    1717:	00 00                	add    BYTE PTR [rax],al
    1719:	31 bb 05 00 00 5b    	xor    DWORD PTR [rbx+0x5b000005],edi
    171f:	06                   	(bad)
    1720:	98                   	cwde
    1721:	06                   	(bad)
    1722:	00 00                	add    BYTE PTR [rax],al
    1724:	43 10 00             	rex.XB adc BYTE PTR [r8],al
    1727:	00 60 18             	add    BYTE PTR [rax+0x18],ah
    172a:	00 00                	add    BYTE PTR [rax],al
    172c:	00 00                	add    BYTE PTR [rax],al
    172e:	00 00                	add    BYTE PTR [rax],al
    1730:	84 00                	test   BYTE PTR [rax],al
    1732:	00 00                	add    BYTE PTR [rax],al
    1734:	00 00                	add    BYTE PTR [rax],al
    1736:	00 00                	add    BYTE PTR [rax],al
    1738:	01 9c 43 10 00 00 10 	add    DWORD PTR [rbx+rax*2+0x10000010],ebx
    173f:	94                   	xchg   esp,eax
    1740:	05 00 00 5b 24       	add    eax,0x245b0000
    1745:	0e                   	(bad)
    1746:	0d 00 00 12 01       	or     eax,0x1120000
    174b:	00 00                	add    BYTE PTR [rax],al
    174d:	0a 01                	or     al,BYTE PTR [rcx]
    174f:	00 00                	add    BYTE PTR [rax],al
    1751:	10 d1                	adc    cl,dl
    1753:	14 00                	adc    al,0x0
    1755:	00 5b 34             	add    BYTE PTR [rbx+0x34],bl
    1758:	83 08 00             	or     DWORD PTR [rax],0x0
    175b:	00 3b                	add    BYTE PTR [rbx],bh
    175d:	01 00                	add    DWORD PTR [rax],eax
    175f:	00 35 01 00 00 1f    	add    BYTE PTR [rip+0x1f000001],dh        # 1f001766 <_end+0x1effb74e>
    1765:	cd 03                	int    0x3
    1767:	00 00                	add    BYTE PTR [rax],al
    1769:	d4                   	(bad)
    176a:	0d 00 00 09 03       	or     eax,0x3090000
    176f:	98                   	cwde
    1770:	43 00 00             	rex.XB add BYTE PTR [r8],al
    1773:	00 00                	add    BYTE PTR [rax],al
    1775:	00 00                	add    BYTE PTR [rax],al
    1777:	0c e5                	or     al,0xe5
    1779:	05 00 00 6c 12       	add    eax,0x126c0000
    177e:	07                   	(bad)
    177f:	08 00                	or     BYTE PTR [rax],al
    1781:	00 62 01             	add    BYTE PTR [rdx+0x1],ah
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	60                   	(bad)
    1787:	01 00                	add    DWORD PTR [rax],eax
    1789:	00 0c 33             	add    BYTE PTR [rbx+rsi*1],cl
    178c:	07                   	(bad)
    178d:	00 00                	add    BYTE PTR [rax],al
    178f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1790:	12 07                	adc    al,BYTE PTR [rdi]
    1792:	08 00                	or     BYTE PTR [rax],al
    1794:	00 6d 01             	add    BYTE PTR [rbp+0x1],ch
    1797:	00 00                	add    BYTE PTR [rax],al
    1799:	6b 01 00             	imul   eax,DWORD PTR [rcx],0x0
    179c:	00 15 63 72 63 00    	add    BYTE PTR [rip+0x637263],dl        # 638a05 <_end+0x6329ed>
    17a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17a3:	12 13                	adc    dl,BYTE PTR [rbx]
    17a5:	08 00                	or     BYTE PTR [rax],al
    17a7:	00 78 01             	add    BYTE PTR [rax+0x1],bh
    17aa:	00 00                	add    BYTE PTR [rax],al
    17ac:	76 01                	jbe    17af <_Z17hashMapPopElementP7HashMap8string_t+0x1f>
    17ae:	00 00                	add    BYTE PTR [rax],al
    17b0:	0c b5                	or     al,0xb5
    17b2:	03 00                	add    eax,DWORD PTR [rax]
    17b4:	00 70 12             	add    BYTE PTR [rax+0x12],dh
    17b7:	13 08                	adc    ecx,DWORD PTR [rax]
    17b9:	00 00                	add    BYTE PTR [rax],al
    17bb:	8d 01                	lea    eax,[rcx]
    17bd:	00 00                	add    BYTE PTR [rax],al
    17bf:	89 01                	mov    DWORD PTR [rcx],eax
    17c1:	00 00                	add    BYTE PTR [rax],al
    17c3:	0c bb                	or     al,0xbb
    17c5:	03 00                	add    eax,DWORD PTR [rax]
    17c7:	00 71 12             	add    BYTE PTR [rcx+0x12],dh
    17ca:	13 08                	adc    ecx,DWORD PTR [rax]
    17cc:	00 00                	add    BYTE PTR [rax],al
    17ce:	a1 01 00 00 9d 01 00 	movabs eax,ds:0xc0000019d000001
    17d5:	00 0c 
    17d7:	c1 03 00             	rol    DWORD PTR [rbx],0x0
    17da:	00 72 12             	add    BYTE PTR [rdx+0x12],dh
    17dd:	13 08                	adc    ecx,DWORD PTR [rax]
    17df:	00 00                	add    BYTE PTR [rax],al
    17e1:	b5 01                	mov    ch,0x1
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	b1 01                	mov    cl,0x1
    17e7:	00 00                	add    BYTE PTR [rax],al
    17e9:	0c c7                	or     al,0xc7
    17eb:	03 00                	add    eax,DWORD PTR [rax]
    17ed:	00 73 12             	add    BYTE PTR [rbx+0x12],dh
    17f0:	13 08                	adc    ecx,DWORD PTR [rax]
    17f2:	00 00                	add    BYTE PTR [rax],al
    17f4:	c9                   	leave
    17f5:	01 00                	add    DWORD PTR [rax],eax
    17f7:	00 c5                	add    ch,al
    17f9:	01 00                	add    DWORD PTR [rax],eax
    17fb:	00 16                	add    BYTE PTR [rsi],dl
    17fd:	44 04 00             	rex.R add al,0x0
    1800:	00 83 16 07 08 00    	add    BYTE PTR [rbx+0x80716],al
    1806:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 788675 <_end+0x78265d>
    180c:	89 0e                	mov    DWORD PTR [rsi],ecx
    180e:	07                   	(bad)
    180f:	08 00                	or     BYTE PTR [rax],al
    1811:	00 db                	add    bl,bl
    1813:	01 00                	add    DWORD PTR [rax],eax
    1815:	00 d9                	add    cl,bl
    1817:	01 00                	add    DWORD PTR [rax],eax
    1819:	00 0e                	add    BYTE PTR [rsi],cl
    181b:	d8 16                	fcom   DWORD PTR [rsi]
    181d:	00 00                	add    BYTE PTR [rax],al
    181f:	70 18                	jo     1839 <_Z17hashMapPopElementP7HashMap8string_t+0xa9>
    1821:	00 00                	add    BYTE PTR [rax],al
    1823:	00 00                	add    BYTE PTR [rax],al
    1825:	00 00                	add    BYTE PTR [rax],al
    1827:	08 cb                	or     bl,cl
    1829:	00 00                	add    BYTE PTR [rax],al
    182b:	00 76 1e             	add    BYTE PTR [rsi+0x1e],dh
    182e:	61                   	(bad)
    182f:	0f 00 00             	sldt   WORD PTR [rax]
    1832:	04 f8                	add    al,0xf8
    1834:	16                   	(bad)
    1835:	00 00                	add    BYTE PTR [rax],al
    1837:	e5 01                	in     eax,0x1
    1839:	00 00                	add    BYTE PTR [rax],al
    183b:	e3 01                	jrcxz  183e <_Z17hashMapPopElementP7HashMap8string_t+0xae>
    183d:	00 00                	add    BYTE PTR [rax],al
    183f:	04 ee                	add    al,0xee
    1841:	16                   	(bad)
    1842:	00 00                	add    BYTE PTR [rax],al
    1844:	f0 01 00             	lock add DWORD PTR [rax],eax
    1847:	00 ee                	add    dh,ch
    1849:	01 00                	add    DWORD PTR [rax],eax
    184b:	00 00                	add    BYTE PTR [rax],al
    184d:	0e                   	(bad)
    184e:	d8 16                	fcom   DWORD PTR [rsi]
    1850:	00 00                	add    BYTE PTR [rax],al
    1852:	83 18 00             	sbb    DWORD PTR [rax],0x0
    1855:	00 00                	add    BYTE PTR [rax],al
    1857:	00 00                	add    BYTE PTR [rax],al
    1859:	00 02                	add    BYTE PTR [rdx],al
    185b:	d6                   	(bad)
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	00 77 1e             	add    BYTE PTR [rdi+0x1e],dh
    1861:	94                   	xchg   esp,eax
    1862:	0f 00 00             	sldt   WORD PTR [rax]
    1865:	04 f8                	add    al,0xf8
    1867:	16                   	(bad)
    1868:	00 00                	add    BYTE PTR [rax],al
    186a:	03 02                	add    eax,DWORD PTR [rdx]
    186c:	00 00                	add    BYTE PTR [rax],al
    186e:	01 02                	add    DWORD PTR [rdx],eax
    1870:	00 00                	add    BYTE PTR [rax],al
    1872:	04 ee                	add    al,0xee
    1874:	16                   	(bad)
    1875:	00 00                	add    BYTE PTR [rax],al
    1877:	0e                   	(bad)
    1878:	02 00                	add    al,BYTE PTR [rax]
    187a:	00 0c 02             	add    BYTE PTR [rdx+rax*1],cl
    187d:	00 00                	add    BYTE PTR [rax],al
    187f:	00 0e                	add    BYTE PTR [rsi],cl
    1881:	d8 16                	fcom   DWORD PTR [rsi]
    1883:	00 00                	add    BYTE PTR [rax],al
    1885:	8a 18                	mov    bl,BYTE PTR [rax]
    1887:	00 00                	add    BYTE PTR [rax],al
    1889:	00 00                	add    BYTE PTR [rax],al
    188b:	00 00                	add    BYTE PTR [rax],al
    188d:	02 e1                	add    ah,cl
    188f:	00 00                	add    BYTE PTR [rax],al
    1891:	00 78 1e             	add    BYTE PTR [rax+0x1e],bh
    1894:	c7                   	(bad)
    1895:	0f 00 00             	sldt   WORD PTR [rax]
    1898:	04 f8                	add    al,0xf8
    189a:	16                   	(bad)
    189b:	00 00                	add    BYTE PTR [rax],al
    189d:	21 02                	and    DWORD PTR [rdx],eax
    189f:	00 00                	add    BYTE PTR [rax],al
    18a1:	1f                   	(bad)
    18a2:	02 00                	add    al,BYTE PTR [rax]
    18a4:	00 04 ee             	add    BYTE PTR [rsi+rbp*8],al
    18a7:	16                   	(bad)
    18a8:	00 00                	add    BYTE PTR [rax],al
    18aa:	2c 02                	sub    al,0x2
    18ac:	00 00                	add    BYTE PTR [rax],al
    18ae:	2a 02                	sub    al,BYTE PTR [rdx]
    18b0:	00 00                	add    BYTE PTR [rax],al
    18b2:	00 0e                	add    BYTE PTR [rsi],cl
    18b4:	d8 16                	fcom   DWORD PTR [rsi]
    18b6:	00 00                	add    BYTE PTR [rax],al
    18b8:	91                   	xchg   ecx,eax
    18b9:	18 00                	sbb    BYTE PTR [rax],al
    18bb:	00 00                	add    BYTE PTR [rax],al
    18bd:	00 00                	add    BYTE PTR [rax],al
    18bf:	00 02                	add    BYTE PTR [rdx],al
    18c1:	ec                   	in     al,dx
    18c2:	00 00                	add    BYTE PTR [rax],al
    18c4:	00 79 1e             	add    BYTE PTR [rcx+0x1e],bh
    18c7:	fa                   	cli
    18c8:	0f 00 00             	sldt   WORD PTR [rax]
    18cb:	04 f8                	add    al,0xf8
    18cd:	16                   	(bad)
    18ce:	00 00                	add    BYTE PTR [rax],al
    18d0:	3f                   	(bad)
    18d1:	02 00                	add    al,BYTE PTR [rax]
    18d3:	00 3d 02 00 00 04    	add    BYTE PTR [rip+0x4000002],bh        # 40018db <_end+0x3ffb8c3>
    18d9:	ee                   	out    dx,al
    18da:	16                   	(bad)
    18db:	00 00                	add    BYTE PTR [rax],al
    18dd:	4a 02 00             	rex.WX add al,BYTE PTR [rax]
    18e0:	00 48 02             	add    BYTE PTR [rax+0x2],cl
    18e3:	00 00                	add    BYTE PTR [rax],al
    18e5:	00 0d bb 18 00 00    	add    BYTE PTR [rip+0x18bb],cl        # 31a6 <_Z7testAllPKcjS0_+0x276>
    18eb:	00 00                	add    BYTE PTR [rax],al
    18ed:	00 00                	add    BYTE PTR [rax],al
    18ef:	01 0a                	add    DWORD PTR [rdx],ecx
    18f1:	00 00                	add    BYTE PTR [rax],al
    18f3:	07                   	(bad)
    18f4:	e4 18                	in     al,0x18
    18f6:	00 00                	add    BYTE PTR [rax],al
    18f8:	00 00                	add    BYTE PTR [rax],al
    18fa:	00 00                	add    BYTE PTR [rax],al
    18fc:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    18fd:	0a 00                	or     al,BYTE PTR [rax]
    18ff:	00 03                	add    BYTE PTR [rbx],al
    1901:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1904:	03 22                	add    esp,DWORD PTR [rdx]
    1906:	40 00 00             	rex add BYTE PTR [rax],al
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	03 01                	add    eax,DWORD PTR [rcx]
    190f:	54                   	push   rsp
    1910:	09 03                	or     DWORD PTR [rbx],eax
    1912:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1915:	00 00                	add    BYTE PTR [rax],al
    1917:	00 00                	add    BYTE PTR [rax],al
    1919:	00 03                	add    BYTE PTR [rbx],al
    191b:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    191e:	08 5c 03 01          	or     BYTE PTR [rbx+rax*1+0x1],bl
    1922:	52                   	push   rdx
    1923:	09 03                	or     DWORD PTR [rbx],eax
    1925:	98                   	cwde
    1926:	43 00 00             	rex.XB add BYTE PTR [r8],al
    1929:	00 00                	add    BYTE PTR [rax],al
    192b:	00 00                	add    BYTE PTR [rax],al
    192d:	00 00                	add    BYTE PTR [rax],al
    192f:	05 01 02 dc 04       	add    eax,0x4dc0201
    1934:	00 00                	add    BYTE PTR [rax],al
    1936:	32 02                	xor    al,BYTE PTR [rdx]
    1938:	06                   	(bad)
    1939:	00 00                	add    BYTE PTR [rax],al
    193b:	4e 0b 07             	rex.WRX or r8,QWORD PTR [rdi]
    193e:	00 00                	add    BYTE PTR [rax],al
    1940:	07                   	(bad)
    1941:	08 00                	or     BYTE PTR [rax],al
    1943:	00 90 17 00 00 00    	add    BYTE PTR [rax+0x17],dl
    1949:	00 00                	add    BYTE PTR [rax],al
    194b:	00 c9                	add    cl,cl
    194d:	00 00                	add    BYTE PTR [rax],al
    194f:	00 00                	add    BYTE PTR [rax],al
    1951:	00 00                	add    BYTE PTR [rax],al
    1953:	00 01                	add    BYTE PTR [rcx],al
    1955:	9c                   	pushf
    1956:	03 11                	add    edx,DWORD PTR [rcx]
    1958:	00 00                	add    BYTE PTR [rax],al
    195a:	10 94 05 00 00 4e 25 	adc    BYTE PTR [rbp+rax*1+0x254e0000],dl
    1961:	0e                   	(bad)
    1962:	0d 00 00 69 02       	or     eax,0x2690000
    1967:	00 00                	add    BYTE PTR [rax],al
    1969:	5b                   	pop    rbx
    196a:	02 00                	add    al,BYTE PTR [rax]
    196c:	00 10                	add    BYTE PTR [rax],dl
    196e:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1971:	00 4e 35             	add    BYTE PTR [rsi+0x35],cl
    1974:	83 08 00             	or     DWORD PTR [rax],0x0
    1977:	00 ae 02 00 00 a4    	add    BYTE PTR [rsi-0x5bfffffe],ch
    197d:	02 00                	add    al,BYTE PTR [rax]
    197f:	00 1f                	add    BYTE PTR [rdi],bl
    1981:	cd 03                	int    0x3
    1983:	00 00                	add    BYTE PTR [rax],al
    1985:	13 11                	adc    edx,DWORD PTR [rcx]
    1987:	00 00                	add    BYTE PTR [rax],al
    1989:	09 03                	or     DWORD PTR [rbx],eax
    198b:	68 43 00 00 00       	push   0x43
    1990:	00 00                	add    BYTE PTR [rax],al
    1992:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 788801 <_end+0x7827e9>
    1998:	52                   	push   rdx
    1999:	0e                   	(bad)
    199a:	07                   	(bad)
    199b:	08 00                	or     BYTE PTR [rax],al
    199d:	00 f1                	add    cl,dh
    199f:	02 00                	add    al,BYTE PTR [rax]
    19a1:	00 eb                	add    bl,ch
    19a3:	02 00                	add    al,BYTE PTR [rax]
    19a5:	00 0d ed 17 00 00    	add    BYTE PTR [rip+0x17ed],cl        # 3198 <_Z7testAllPKcjS0_+0x268>
    19ab:	00 00                	add    BYTE PTR [rax],al
    19ad:	00 00                	add    BYTE PTR [rax],al
    19af:	20 0a                	and    BYTE PTR [rdx],cl
    19b1:	00 00                	add    BYTE PTR [rax],al
    19b3:	07                   	(bad)
    19b4:	59                   	pop    rcx
    19b5:	18 00                	sbb    BYTE PTR [rax],al
    19b7:	00 00                	add    BYTE PTR [rax],al
    19b9:	00 00                	add    BYTE PTR [rax],al
    19bb:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    19c2:	55                   	push   rbp
    19c3:	09 03                	or     DWORD PTR [rbx],eax
    19c5:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    19c8:	00 00                	add    BYTE PTR [rax],al
    19ca:	00 00                	add    BYTE PTR [rax],al
    19cc:	00 03                	add    BYTE PTR [rbx],al
    19ce:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    19d2:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    19d5:	00 00                	add    BYTE PTR [rax],al
    19d7:	00 00                	add    BYTE PTR [rax],al
    19d9:	00 03                	add    BYTE PTR [rbx],al
    19db:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    19de:	08 4f 03             	or     BYTE PTR [rdi+0x3],cl
    19e1:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    19e4:	03 68 43             	add    ebp,DWORD PTR [rax+0x43]
	...
    19ef:	1d 06 01 00 00       	sbb    eax,0x106
    19f4:	13 11                	adc    edx,DWORD PTR [rcx]
    19f6:	00 00                	add    BYTE PTR [rax],al
    19f8:	1e                   	(bad)
    19f9:	3a 00                	cmp    al,BYTE PTR [rax]
    19fb:	00 00                	add    BYTE PTR [rax],al
    19fd:	2c 00                	sub    al,0x0
    19ff:	12 03                	adc    al,BYTE PTR [rbx]
    1a01:	11 00                	adc    DWORD PTR [rax],eax
    1a03:	00 32                	add    BYTE PTR [rdx],dh
    1a05:	e1 03                	loope  1a0a <_Z17hashMapDebugPrintP7HashMap+0xaa>
    1a07:	00 00                	add    BYTE PTR [rax],al
    1a09:	3d d0 06 00 00       	cmp    eax,0x6d0
    1a0e:	07                   	(bad)
    1a0f:	08 00                	or     BYTE PTR [rax],al
    1a11:	00 e0                	add    al,ah
    1a13:	14 00                	adc    al,0x0
    1a15:	00 00                	add    BYTE PTR [rax],al
    1a17:	00 00                	add    BYTE PTR [rax],al
    1a19:	00 a7 02 00 00 00    	add    BYTE PTR [rdi+0x2],ah
    1a1f:	00 00                	add    BYTE PTR [rax],al
    1a21:	00 01                	add    BYTE PTR [rcx],al
    1a23:	9c                   	pushf
    1a24:	9f                   	lahf
    1a25:	13 00                	adc    eax,DWORD PTR [rax]
    1a27:	00 10                	add    BYTE PTR [rax],dl
    1a29:	94                   	xchg   esp,eax
    1a2a:	05 00 00 3d 25       	add    eax,0x253d0000
    1a2f:	0e                   	(bad)
    1a30:	0d 00 00 15 03       	or     eax,0x3150000
    1a35:	00 00                	add    BYTE PTR [rax],al
    1a37:	07                   	(bad)
    1a38:	03 00                	add    eax,DWORD PTR [rax]
    1a3a:	00 10                	add    BYTE PTR [rax],dl
    1a3c:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    1a3f:	00 3d 35 83 08 00    	add    BYTE PTR [rip+0x88335],bh        # 89d7a <_end+0x83d62>
    1a45:	00 59 03             	add    BYTE PTR [rcx+0x3],bl
    1a48:	00 00                	add    BYTE PTR [rax],al
    1a4a:	4d 03 00             	add    r8,QWORD PTR [r8]
    1a4d:	00 1f                	add    BYTE PTR [rdi],bl
    1a4f:	cd 03                	int    0x3
    1a51:	00 00                	add    BYTE PTR [rax],al
    1a53:	13 11                	adc    edx,DWORD PTR [rcx]
    1a55:	00 00                	add    BYTE PTR [rax],al
    1a57:	09 03                	or     DWORD PTR [rbx],eax
    1a59:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    1a5c:	00 00                	add    BYTE PTR [rax],al
    1a5e:	00 00                	add    BYTE PTR [rax],al
    1a60:	00 15 69 6e 78 00    	add    BYTE PTR [rip+0x786e69],dl        # 7888cf <_end+0x7828b7>
    1a66:	41 0e                	rex.B (bad)
    1a68:	07                   	(bad)
    1a69:	08 00                	or     BYTE PTR [rax],al
    1a6b:	00 ae 03 00 00 a2    	add    BYTE PTR [rsi-0x5dfffffd],ch
    1a71:	03 00                	add    eax,DWORD PTR [rax]
    1a73:	00 0c d0             	add    BYTE PTR [rax+rdx*8],cl
    1a76:	05 00 00 43 0e       	add    eax,0xe430000
    1a7b:	07                   	(bad)
    1a7c:	08 00                	or     BYTE PTR [rax],al
    1a7e:	00 ee                	add    dh,ch
    1a80:	03 00                	add    eax,DWORD PTR [rax]
    1a82:	00 ea                	add    dl,ch
    1a84:	03 00                	add    eax,DWORD PTR [rax]
    1a86:	00 0e                	add    BYTE PTR [rsi],cl
    1a88:	13 0d 00 00 e7 15    	adc    ecx,DWORD PTR [rip+0x15e70000]        # 15e71a8e <_end+0x15e6ba76>
    1a8e:	00 00                	add    BYTE PTR [rax],al
    1a90:	00 00                	add    BYTE PTR [rax],al
    1a92:	00 00                	add    BYTE PTR [rax],al
    1a94:	01 5f 00             	add    DWORD PTR [rdi+0x0],ebx
    1a97:	00 00                	add    BYTE PTR [rax],al
    1a99:	49 1a 45 13          	rex.WB sbb al,BYTE PTR [r13+0x13]
    1a9d:	00 00                	add    BYTE PTR [rax],al
    1a9f:	04 22                	add    al,0x22
    1aa1:	0d 00 00 ff 03       	or     eax,0x3ff0000
    1aa6:	00 00                	add    BYTE PTR [rax],al
    1aa8:	fd                   	std
    1aa9:	03 00                	add    eax,DWORD PTR [rax]
    1aab:	00 20                	add    BYTE PTR [rax],ah
    1aad:	5f                   	pop    rdi
    1aae:	00 00                	add    BYTE PTR [rax],al
    1ab0:	00 26                	add    BYTE PTR [rsi],ah
    1ab2:	37                   	(bad)
    1ab3:	0d 00 00 0e 9f       	or     eax,0x9f0e0000
    1ab8:	13 00                	adc    eax,DWORD PTR [rax]
    1aba:	00 f8                	add    al,bh
    1abc:	15 00 00 00 00       	adc    eax,0x0
    1ac1:	00 00                	add    BYTE PTR [rax],al
    1ac3:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
    1ac6:	00 00                	add    BYTE PTR [rax],al
    1ac8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1ac9:	26 51                	es push rcx
    1acb:	12 00                	adc    al,BYTE PTR [rax]
    1acd:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    1ad0:	13 00                	adc    eax,DWORD PTR [rax]
    1ad2:	00 0b                	add    BYTE PTR [rbx],cl
    1ad4:	04 00                	add    al,0x0
    1ad6:	00 07                	add    BYTE PTR [rdi],al
    1ad8:	04 00                	add    al,0x0
    1ada:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    1add:	13 00                	adc    eax,DWORD PTR [rax]
    1adf:	00 1e                	add    BYTE PTR [rsi],bl
    1ae1:	04 00                	add    al,0x0
    1ae3:	00 1a                	add    BYTE PTR [rdx],bl
    1ae5:	04 00                	add    al,0x0
    1ae7:	00 20                	add    BYTE PTR [rax],ah
    1ae9:	6a 00                	push   0x0
    1aeb:	00 00                	add    BYTE PTR [rax],al
    1aed:	26 cc                	es int3
    1aef:	13 00                	adc    eax,DWORD PTR [rax]
    1af1:	00 27                	add    BYTE PTR [rdi],ah
    1af3:	d7                   	xlat   BYTE PTR ds:[rbx]
    1af4:	13 00                	adc    eax,DWORD PTR [rax]
    1af6:	00 84 00 00 00 36 12 	add    BYTE PTR [rax+rax*1+0x12360000],al
    1afd:	00 00                	add    BYTE PTR [rax],al
    1aff:	11 d8                	adc    eax,ebx
    1b01:	13 00                	adc    eax,DWORD PTR [rax]
    1b03:	00 30                	add    BYTE PTR [rax],dh
    1b05:	04 00                	add    al,0x0
    1b07:	00 2e                	add    BYTE PTR [rsi],ch
    1b09:	04 00                	add    al,0x0
    1b0b:	00 07                	add    BYTE PTR [rdi],al
    1b0d:	3e 16                	ds (bad)
    1b0f:	00 00                	add    BYTE PTR [rax],al
    1b11:	00 00                	add    BYTE PTR [rax],al
    1b13:	00 00                	add    BYTE PTR [rax],al
    1b15:	5e                   	pop    rsi
    1b16:	0a 00                	or     al,BYTE PTR [rax]
    1b18:	00 03                	add    BYTE PTR [rbx],al
    1b1a:	01 55 03             	add    DWORD PTR [rbp+0x3],edx
    1b1d:	77 18                	ja     1b37 <_Z15crc32HashString8string_t+0x117>
    1b1f:	06                   	(bad)
    1b20:	00 00                	add    BYTE PTR [rax],al
    1b22:	07                   	(bad)
    1b23:	00 16                	add    BYTE PTR [rsi],dl
    1b25:	00 00                	add    BYTE PTR [rax],al
    1b27:	00 00                	add    BYTE PTR [rax],al
    1b29:	00 00                	add    BYTE PTR [rax],al
    1b2b:	89 0a                	mov    DWORD PTR [rdx],ecx
    1b2d:	00 00                	add    BYTE PTR [rax],al
    1b2f:	03 01                	add    eax,DWORD PTR [rcx]
    1b31:	55                   	push   rbp
    1b32:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    1b35:	03 01                	add    eax,DWORD PTR [rcx]
    1b37:	54                   	push   rsp
    1b38:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    1b3b:	00 00                	add    BYTE PTR [rax],al
    1b3d:	27                   	(bad)
    1b3e:	42 0d 00 00 8f 00    	rex.X or eax,0x8f0000
    1b44:	00 00                	add    BYTE PTR [rax],al
    1b46:	f6 12                	not    BYTE PTR [rdx]
    1b48:	00 00                	add    BYTE PTR [rax],al
    1b4a:	11 43 0d             	adc    DWORD PTR [rbx+0xd],eax
    1b4d:	00 00                	add    BYTE PTR [rax],al
    1b4f:	3f                   	(bad)
    1b50:	04 00                	add    al,0x0
    1b52:	00 39                	add    BYTE PTR [rcx],bh
    1b54:	04 00                	add    al,0x0
    1b56:	00 33                	add    BYTE PTR [rbx],dh
    1b58:	4c 0d 00 00 90 16    	rex.WR or rax,0x16900000
    1b5e:	00 00                	add    BYTE PTR [rax],al
    1b60:	00 00                	add    BYTE PTR [rax],al
    1b62:	00 00                	add    BYTE PTR [rax],al
    1b64:	66 00 00             	data16 add BYTE PTR [rax],al
    1b67:	00 00                	add    BYTE PTR [rax],al
    1b69:	00 00                	add    BYTE PTR [rax],al
    1b6b:	00 11                	add    BYTE PTR [rcx],dl
    1b6d:	4d 0d 00 00 61 04    	rex.WRB or rax,0x4610000
    1b73:	00 00                	add    BYTE PTR [rax],al
    1b75:	5d                   	pop    rbp
    1b76:	04 00                	add    al,0x0
    1b78:	00 33                	add    BYTE PTR [rbx],dh
    1b7a:	58                   	pop    rax
    1b7b:	0d 00 00 b0 16       	or     eax,0x16b00000
    1b80:	00 00                	add    BYTE PTR [rax],al
    1b82:	00 00                	add    BYTE PTR [rax],al
    1b84:	00 00                	add    BYTE PTR [rax],al
    1b86:	42 00 00             	rex.X add BYTE PTR [rax],al
    1b89:	00 00                	add    BYTE PTR [rax],al
    1b8b:	00 00                	add    BYTE PTR [rax],al
    1b8d:	00 11                	add    BYTE PTR [rcx],dl
    1b8f:	59                   	pop    rcx
    1b90:	0d 00 00 76 04       	or     eax,0x4760000
    1b95:	00 00                	add    BYTE PTR [rax],al
    1b97:	70 04                	jo     1b9d <_Z25_mm_crc32UnrollHashString8string_t+0xd>
    1b99:	00 00                	add    BYTE PTR [rax],al
    1b9b:	34 7d                	xor    al,0x7d
    1b9d:	0d 00 00 ce 16       	or     eax,0x16ce0000
    1ba2:	00 00                	add    BYTE PTR [rax],al
    1ba4:	00 00                	add    BYTE PTR [rax],al
    1ba6:	00 00                	add    BYTE PTR [rax],al
    1ba8:	01 9a 00 00 00 af    	add    DWORD PTR [rdx-0x51000000],ebx
    1bae:	1d 28 98 0d 00       	sbb    eax,0xd9828
    1bb3:	00 28                	add    BYTE PTR [rax],ch
    1bb5:	8c 0d 00 00 20 a5    	mov    WORD PTR [rip+0xffffffffa5200000],cs        # ffffffffa5201bbb <_end+0xffffffffa51fbba3>
    1bbb:	00 00                	add    BYTE PTR [rax],al
    1bbd:	00 11                	add    BYTE PTR [rcx],dl
    1bbf:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1bc0:	0d 00 00 a4 04       	or     eax,0x4a40000
    1bc5:	00 00                	add    BYTE PTR [rax],al
    1bc7:	a0 04 00 00 26 b8 0d 	movabs al,ds:0xdb826000004
    1bce:	00 00 
    1bd0:	0d e3 16 00 00       	or     eax,0x16e3
    1bd5:	00 00                	add    BYTE PTR [rax],al
    1bd7:	00 00                	add    BYTE PTR [rax],al
    1bd9:	3f                   	(bad)
    1bda:	0a 00                	or     al,BYTE PTR [rax]
    1bdc:	00 00                	add    BYTE PTR [rax],al
    1bde:	00 00                	add    BYTE PTR [rax],al
    1be0:	00 00                	add    BYTE PTR [rax],al
    1be2:	4f d9 0d 00 00 b5 00 	rex.WRXB (bad) [rip+0xb50000]        # b51be9 <_end+0xb4bbd1>
    1be9:	00 00                	add    BYTE PTR [rax],al
    1beb:	01 b5 10 28 ea 0d    	add    DWORD PTR [rbp+0xdea2810],esi
    1bf1:	00 00                	add    BYTE PTR [rax],al
    1bf3:	20 b5 00 00 00 27    	and    BYTE PTR [rbp+0x27000000],dh
    1bf9:	ff 0d 00 00 c0 00    	dec    DWORD PTR [rip+0xc00000]        # c01bff <_end+0xbfbbe7>
    1bff:	00 00                	add    BYTE PTR [rax],al
    1c01:	34 13                	xor    al,0x13
    1c03:	00 00                	add    BYTE PTR [rax],al
    1c05:	11 00                	adc    DWORD PTR [rax],eax
    1c07:	0e                   	(bad)
    1c08:	00 00                	add    BYTE PTR [rax],al
    1c0a:	c3                   	ret
    1c0b:	04 00                	add    al,0x0
    1c0d:	00 bd 04 00 00 0d    	add    BYTE PTR [rbp+0xd000004],bh
    1c13:	2e 17                	cs (bad)
    1c15:	00 00                	add    BYTE PTR [rax],al
    1c17:	00 00                	add    BYTE PTR [rax],al
    1c19:	00 00                	add    BYTE PTR [rax],al
    1c1b:	ed                   	in     eax,dx
    1c1c:	09 00                	or     DWORD PTR [rax],eax
    1c1e:	00 00                	add    BYTE PTR [rax],al
    1c20:	0d 3e 17 00 00       	or     eax,0x173e
    1c25:	00 00                	add    BYTE PTR [rax],al
    1c27:	00 00                	add    BYTE PTR [rax],al
    1c29:	dc 09                	fmul   QWORD PTR [rcx]
    1c2b:	00 00                	add    BYTE PTR [rax],al
    1c2d:	00 00                	add    BYTE PTR [rax],al
    1c2f:	00 00                	add    BYTE PTR [rax],al
    1c31:	0d 5e 15 00 00       	or     eax,0x155e
    1c36:	00 00                	add    BYTE PTR [rax],al
    1c38:	00 00                	add    BYTE PTR [rax],al
    1c3a:	3f                   	(bad)
    1c3b:	0a 00                	or     al,BYTE PTR [rax]
    1c3d:	00 21                	add    BYTE PTR [rcx],ah
    1c3f:	82                   	(bad)
    1c40:	17                   	(bad)
    1c41:	00 00                	add    BYTE PTR [rax],al
    1c43:	00 00                	add    BYTE PTR [rax],al
    1c45:	00 00                	add    BYTE PTR [rax],al
    1c47:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1c48:	0a 00                	or     al,BYTE PTR [rax]
    1c4a:	00 91 13 00 00 03    	add    BYTE PTR [rcx+0x3000013],dl
    1c50:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    1c53:	03 22                	add    esp,DWORD PTR [rdx]
    1c55:	40 00 00             	rex add BYTE PTR [rax],al
    1c58:	00 00                	add    BYTE PTR [rax],al
    1c5a:	00 00                	add    BYTE PTR [rax],al
    1c5c:	03 01                	add    eax,DWORD PTR [rcx]
    1c5e:	54                   	push   rsp
    1c5f:	09 03                	or     DWORD PTR [rbx],eax
    1c61:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1c64:	00 00                	add    BYTE PTR [rax],al
    1c66:	00 00                	add    BYTE PTR [rax],al
    1c68:	00 03                	add    BYTE PTR [rbx],al
    1c6a:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    1c6d:	08 3e                	or     BYTE PTR [rsi],bh
    1c6f:	03 01                	add    eax,DWORD PTR [rcx]
    1c71:	52                   	push   rdx
    1c72:	09 03                	or     DWORD PTR [rbx],eax
    1c74:	38 43 00             	cmp    BYTE PTR [rbx+0x0],al
    1c77:	00 00                	add    BYTE PTR [rax],al
    1c79:	00 00                	add    BYTE PTR [rax],al
    1c7b:	00 00                	add    BYTE PTR [rax],al
    1c7d:	0d 87 17 00 00       	or     eax,0x1787
    1c82:	00 00                	add    BYTE PTR [rax],al
    1c84:	00 00                	add    BYTE PTR [rax],al
    1c86:	46 19 00             	rex.RX sbb DWORD PTR [rax],r8d
    1c89:	00 00                	add    BYTE PTR [rax],al
    1c8b:	35 52 03 00 00       	xor    eax,0x352
    1c90:	01 2e                	add    DWORD PTR [rsi],ebp
    1c92:	09 1d 06 00 00 94    	or     DWORD PTR [rip+0xffffffff94000006],ebx        # ffffffff94001c9e <_end+0xffffffff93ffbc86>
    1c98:	09 00                	or     DWORD PTR [rax],eax
    1c9a:	00 01                	add    BYTE PTR [rcx],al
    1c9c:	f7 13                	not    DWORD PTR [rbx]
    1c9e:	00 00                	add    BYTE PTR [rax],al
    1ca0:	0a 1b                	or     bl,BYTE PTR [rbx]
    1ca2:	04 00                	add    al,0x0
    1ca4:	00 01                	add    BYTE PTR [rcx],al
    1ca6:	2e 1c 8f             	cs sbb al,0x8f
    1ca9:	08 00                	or     BYTE PTR [rax],al
    1cab:	00 0a                	add    BYTE PTR [rdx],cl
    1cad:	19 03                	sbb    DWORD PTR [rbx],eax
    1caf:	00 00                	add    BYTE PTR [rax],al
    1cb1:	01 2e                	add    DWORD PTR [rsi],ebp
    1cb3:	30 07                	xor    BYTE PTR [rdi],al
    1cb5:	08 00                	or     BYTE PTR [rax],al
    1cb7:	00 16                	add    BYTE PTR [rsi],dl
    1cb9:	94                   	xchg   esp,eax
    1cba:	05 00 00 2f 0d       	add    eax,0xd2f0000
    1cbf:	94                   	xchg   esp,eax
    1cc0:	09 00                	or     DWORD PTR [rax],eax
    1cc2:	00 18                	add    BYTE PTR [rax],bl
    1cc4:	1c 69                	sbb    al,0x69
    1cc6:	00 36                	add    BYTE PTR [rsi],dh
    1cc8:	13 07                	adc    eax,DWORD PTR [rdi]
    1cca:	08 00                	or     BYTE PTR [rax],al
    1ccc:	00 07                	add    BYTE PTR [rdi],al
    1cce:	9c                   	pushf
    1ccf:	14 00                	adc    al,0x0
    1cd1:	00 00                	add    BYTE PTR [rax],al
    1cd3:	00 00                	add    BYTE PTR [rax],al
    1cd5:	00 5e 0a             	add    BYTE PTR [rsi+0xa],bl
    1cd8:	00 00                	add    BYTE PTR [rax],al
    1cda:	03 01                	add    eax,DWORD PTR [rcx]
    1cdc:	55                   	push   rbp
    1cdd:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    1ce0:	00 00                	add    BYTE PTR [rax],al
    1ce2:	00 31                	add    BYTE PTR [rcx],dh
    1ce4:	41 06                	rex.B (bad)
    1ce6:	00 00                	add    BYTE PTR [rax],al
    1ce8:	14 0b                	adc    al,0xb
    1cea:	7e 03                	jle    1cef <_Z13sumHashString8string_t+0x6f>
    1cec:	00 00                	add    BYTE PTR [rax],al
    1cee:	d3 16                	rcl    DWORD PTR [rsi],cl
    1cf0:	00 00                	add    BYTE PTR [rax],al
    1cf2:	00 13                	add    BYTE PTR [rbx],dl
    1cf4:	00 00                	add    BYTE PTR [rax],al
    1cf6:	00 00                	add    BYTE PTR [rax],al
    1cf8:	00 00                	add    BYTE PTR [rax],al
    1cfa:	23 01                	and    eax,DWORD PTR [rcx]
    1cfc:	00 00                	add    BYTE PTR [rax],al
    1cfe:	00 00                	add    BYTE PTR [rax],al
    1d00:	00 00                	add    BYTE PTR [rax],al
    1d02:	01 9c d3 16 00 00 10 	add    DWORD PTR [rbx+rdx*8+0x10000016],ebx
    1d09:	9e                   	sahf
    1d0a:	03 00                	add    eax,DWORD PTR [rax]
    1d0c:	00 14 22             	add    BYTE PTR [rdx+riz*1],dl
    1d0f:	41 01 00             	add    DWORD PTR [r8],eax
    1d12:	00 e8                	add    al,ch
    1d14:	04 00                	add    al,0x0
    1d16:	00 dc                	add    ah,bl
    1d18:	04 00                	add    al,0x0
    1d1a:	00 10                	add    BYTE PTR [rax],dl
    1d1c:	be 04 00 00 14       	mov    esi,0x14000004
    1d21:	31 07                	xor    DWORD PTR [rdi],eax
    1d23:	08 00                	or     BYTE PTR [rax],al
    1d25:	00 19                	add    BYTE PTR [rcx],bl
    1d27:	05 00 00 0f 05       	add    eax,0x50f0000
    1d2c:	00 00                	add    BYTE PTR [rax],al
    1d2e:	1f                   	(bad)
    1d2f:	cd 03                	int    0x3
    1d31:	00 00                	add    BYTE PTR [rax],al
    1d33:	d4                   	(bad)
    1d34:	0d 00 00 09 03       	or     eax,0x3090000
    1d39:	e8 42 00 00 00       	call   1d80 <_Z13sumHashString8string_t+0x100>
    1d3e:	00 00                	add    BYTE PTR [rax],al
    1d40:	00 0c c3             	add    BYTE PTR [rbx+rax*8],cl
    1d43:	06                   	(bad)
    1d44:	00 00                	add    BYTE PTR [rax],al
    1d46:	17                   	(bad)
    1d47:	0f d3 16             	psrlq  mm2,QWORD PTR [rsi]
    1d4a:	00 00                	add    BYTE PTR [rax],al
    1d4c:	44 05 00 00 3e 05    	rex.R add eax,0x53e0000
    1d52:	00 00                	add    BYTE PTR [rax],al
    1d54:	0c 96                	or     al,0x96
    1d56:	03 00                	add    eax,DWORD PTR [rax]
    1d58:	00 18                	add    BYTE PTR [rax],bl
    1d5a:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1d5d:	00 00                	add    BYTE PTR [rax],al
    1d5f:	5b                   	pop    rbx
    1d60:	05 00 00 57 05       	add    eax,0x5570000
    1d65:	00 00                	add    BYTE PTR [rax],al
    1d67:	0c 5e                	or     al,0x5e
    1d69:	03 00                	add    eax,DWORD PTR [rax]
    1d6b:	00 19                	add    BYTE PTR [rcx],bl
    1d6d:	0b 41 01             	or     eax,DWORD PTR [rcx+0x1]
    1d70:	00 00                	add    BYTE PTR [rax],al
    1d72:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d73:	05 00 00 67 05       	add    eax,0x5670000
    1d78:	00 00                	add    BYTE PTR [rax],al
    1d7a:	0c ea                	or     al,0xea
    1d7c:	05 00 00 1a 0e       	add    eax,0xe1a0000
    1d81:	07                   	(bad)
    1d82:	08 00                	or     BYTE PTR [rax],al
    1d84:	00 83 05 00 00 7f    	add    BYTE PTR [rbx+0x7f000005],al
    1d8a:	05 00 00 2f 4a       	add    eax,0x4a2f0000
    1d8f:	13 00                	adc    eax,DWORD PTR [rax]
    1d91:	00 00                	add    BYTE PTR [rax],al
    1d93:	00 00                	add    BYTE PTR [rax],al
    1d95:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
    1d9b:	00 00                	add    BYTE PTR [rax],al
    1d9d:	00 5d 16             	add    BYTE PTR [rbp+0x16],bl
    1da0:	00 00                	add    BYTE PTR [rax],al
    1da2:	15 69 00 1c 13       	adc    eax,0x131c0069
    1da7:	07                   	(bad)
    1da8:	08 00                	or     BYTE PTR [rax],al
    1daa:	00 99 05 00 00 91    	add    BYTE PTR [rcx-0x6efffffb],bl
    1db0:	05 00 00 17 6b       	add    eax,0x6b170000
    1db5:	17                   	(bad)
    1db6:	00 00                	add    BYTE PTR [rax],al
    1db8:	60                   	(bad)
    1db9:	13 00                	adc    eax,DWORD PTR [rax]
    1dbb:	00 00                	add    BYTE PTR [rax],al
    1dbd:	00 00                	add    BYTE PTR [rax],al
    1dbf:	00 02                	add    BYTE PTR [rdx],al
    1dc1:	60                   	(bad)
    1dc2:	13 00                	adc    eax,DWORD PTR [rax]
    1dc4:	00 00                	add    BYTE PTR [rax],al
    1dc6:	00 00                	add    BYTE PTR [rax],al
    1dc8:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 1dce <_Z13sumHashString8string_t+0x14e>
    1dce:	00 00                	add    BYTE PTR [rax],al
    1dd0:	00 1f                	add    BYTE PTR [rdi],bl
    1dd2:	17                   	(bad)
    1dd3:	1f                   	(bad)
    1dd4:	15 00 00 04 8b       	adc    eax,0x8b040000
    1dd9:	17                   	(bad)
    1dda:	00 00                	add    BYTE PTR [rax],al
    1ddc:	c6 05 00 00 c4 05 00 	mov    BYTE PTR [rip+0x5c40000],0x0        # 5c41de3 <_end+0x5c3bdcb>
    1de3:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    1de6:	17                   	(bad)
    1de7:	00 00                	add    BYTE PTR [rax],al
    1de9:	cf                   	iret
    1dea:	05 00 00 cd 05       	add    eax,0x5cd0000
    1def:	00 00                	add    BYTE PTR [rax],al
    1df1:	07                   	(bad)
    1df2:	6d                   	ins    DWORD PTR es:[rdi],dx
    1df3:	13 00                	adc    eax,DWORD PTR [rax]
    1df5:	00 00                	add    BYTE PTR [rax],al
    1df7:	00 00                	add    BYTE PTR [rax],al
    1df9:	00 4f 19             	add    BYTE PTR [rdi+0x19],cl
    1dfc:	00 00                	add    BYTE PTR [rax],al
    1dfe:	03 01                	add    eax,DWORD PTR [rcx]
    1e00:	55                   	push   rbp
    1e01:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    1e04:	03 01                	add    eax,DWORD PTR [rcx]
    1e06:	54                   	push   rsp
    1e07:	01 3a                	add    DWORD PTR [rdx],edi
    1e09:	00 00                	add    BYTE PTR [rax],al
    1e0b:	0e                   	(bad)
    1e0c:	03 17                	add    edx,DWORD PTR [rdi]
    1e0e:	00 00                	add    BYTE PTR [rax],al
    1e10:	9b                   	fwait
    1e11:	13 00                	adc    eax,DWORD PTR [rax]
    1e13:	00 00                	add    BYTE PTR [rax],al
    1e15:	00 00                	add    BYTE PTR [rax],al
    1e17:	00 00                	add    BYTE PTR [rax],al
    1e19:	33 00                	xor    eax,DWORD PTR [rax]
    1e1b:	00 00                	add    BYTE PTR [rax],al
    1e1d:	24 10                	and    al,0x10
    1e1f:	ae                   	scas   al,BYTE PTR es:[rdi]
    1e20:	15 00 00 04 2a       	adc    eax,0x2a040000
    1e25:	17                   	(bad)
    1e26:	00 00                	add    BYTE PTR [rax],al
    1e28:	d9 05 00 00 d5 05    	fld    DWORD PTR [rip+0x5d50000]        # 5d51e2e <_end+0x5d4be16>
    1e2e:	00 00                	add    BYTE PTR [rax],al
    1e30:	04 1e                	add    al,0x1e
    1e32:	17                   	(bad)
    1e33:	00 00                	add    BYTE PTR [rax],al
    1e35:	ec                   	in     al,dx
    1e36:	05 00 00 ea 05       	add    eax,0x5ea0000
    1e3b:	00 00                	add    BYTE PTR [rax],al
    1e3d:	04 12                	add    al,0x12
    1e3f:	17                   	(bad)
    1e40:	00 00                	add    BYTE PTR [rax],al
    1e42:	f8                   	clc
    1e43:	05 00 00 f4 05       	add    eax,0x5f40000
    1e48:	00 00                	add    BYTE PTR [rax],al
    1e4a:	07                   	(bad)
    1e4b:	a8 13                	test   al,0x13
    1e4d:	00 00                	add    BYTE PTR [rax],al
    1e4f:	00 00                	add    BYTE PTR [rax],al
    1e51:	00 00                	add    BYTE PTR [rax],al
    1e53:	58                   	pop    rax
    1e54:	19 00                	sbb    DWORD PTR [rax],eax
    1e56:	00 03                	add    BYTE PTR [rbx],al
    1e58:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    1e5b:	91                   	xchg   ecx,eax
    1e5c:	a0 7f 06 03 01 51 04 	movabs al,ds:0xa89104510103067f
    1e63:	91 a8 
    1e65:	7f 06                	jg     1e6d <_Z17adler32HashString8string_t+0x7d>
    1e67:	03 01                	add    eax,DWORD PTR [rcx]
    1e69:	52                   	push   rdx
    1e6a:	2d 73 00 91 b0       	sub    eax,0xb0910073
    1e6f:	7f 06                	jg     1e77 <_Z13elfHashString8string_t+0x7>
    1e71:	73 00                	jae    1e73 <_Z13elfHashString8string_t+0x3>
    1e73:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1e79:	80 80 80 80 01 91 b0 	add    BYTE PTR [rax-0x6efe7f80],0xb0
    1e80:	7f 06                	jg     1e88 <_Z13elfHashString8string_t+0x18>
    1e82:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1e88:	80 80 80 80 01 2a 28 	add    BYTE PTR [rax+0x2a018080],0x28
    1e8f:	01 00                	add    DWORD PTR [rax],eax
    1e91:	16                   	(bad)
    1e92:	13 91 b0 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fb0]
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	34 37                	xor    al,0x37
    1e9c:	17                   	(bad)
    1e9d:	00 00                	add    BYTE PTR [rax],al
    1e9f:	b6 13                	mov    dh,0x13
    1ea1:	00 00                	add    BYTE PTR [rax],al
    1ea3:	00 00                	add    BYTE PTR [rax],al
    1ea5:	00 00                	add    BYTE PTR [rax],al
    1ea7:	00 4a 00             	add    BYTE PTR [rdx+0x0],cl
    1eaa:	00 00                	add    BYTE PTR [rax],al
    1eac:	25 0f 04 5e 17       	and    eax,0x175e040f
    1eb1:	00 00                	add    BYTE PTR [rax],al
    1eb3:	0f 06                	clts
    1eb5:	00 00                	add    BYTE PTR [rax],al
    1eb7:	09 06                	or     DWORD PTR [rsi],eax
    1eb9:	00 00                	add    BYTE PTR [rax],al
    1ebb:	04 52                	add    al,0x52
    1ebd:	17                   	(bad)
    1ebe:	00 00                	add    BYTE PTR [rax],al
    1ec0:	3d 06 00 00 3b       	cmp    eax,0x3b000006
    1ec5:	06                   	(bad)
    1ec6:	00 00                	add    BYTE PTR [rax],al
    1ec8:	04 46                	add    al,0x46
    1eca:	17                   	(bad)
    1ecb:	00 00                	add    BYTE PTR [rax],al
    1ecd:	4c 06                	rex.WR (bad)
    1ecf:	00 00                	add    BYTE PTR [rax],al
    1ed1:	46 06                	rex.RX (bad)
    1ed3:	00 00                	add    BYTE PTR [rax],al
    1ed5:	07                   	(bad)
    1ed6:	d5 13 00 00          	{rex2 0x13} add BYTE PTR [r24],al
    1eda:	00 00                	add    BYTE PTR [rax],al
    1edc:	00 00                	add    BYTE PTR [rax],al
    1ede:	61                   	(bad)
    1edf:	19 00                	sbb    DWORD PTR [rax],eax
    1ee1:	00 03                	add    BYTE PTR [rbx],al
    1ee3:	01 55 0c             	add    DWORD PTR [rbp+0xc],edx
    1ee6:	7e 00                	jle    1ee8 <_Z13searchElementP4List8string_t.part.0+0x28>
    1ee8:	91                   	xchg   ecx,eax
    1ee9:	a8 7f                	test   al,0x7f
    1eeb:	06                   	(bad)
    1eec:	22 91 b0 7f 06 22    	and    dl,BYTE PTR [rcx+0x22067fb0]
    1ef2:	03 01                	add    eax,DWORD PTR [rcx]
    1ef4:	54                   	push   rsp
    1ef5:	01 30                	add    DWORD PTR [rax],esi
    1ef7:	03 01                	add    eax,DWORD PTR [rcx]
    1ef9:	51                   	push   rcx
    1efa:	0b 08                	or     ecx,DWORD PTR [rax]
    1efc:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
    1f00:	0c ff                	or     al,0xff
    1f02:	ff                   	(bad)
    1f03:	ff                   	(bad)
    1f04:	ff 1a                	call   FWORD PTR [rdx]
    1f06:	03 01                	add    eax,DWORD PTR [rcx]
    1f08:	52                   	push   rdx
    1f09:	3c 73                	cmp    al,0x73
    1f0b:	00 91 a8 7f 06 91    	add    BYTE PTR [rcx-0x6ef98058],dl
    1f11:	b0 7f                	mov    al,0x7f
    1f13:	06                   	(bad)
    1f14:	22 73 00             	and    dh,BYTE PTR [rbx+0x0]
    1f17:	23 80 80 80 80 80    	and    eax,DWORD PTR [rax-0x7f7f7f80]
    1f1d:	80 80 80 80 01 91 a8 	add    BYTE PTR [rax-0x6efe7f80],0xa8
    1f24:	7f 06                	jg     1f2c <_Z8listCtorv+0x3c>
    1f26:	91                   	xchg   ecx,eax
    1f27:	b0 7f                	mov    al,0x7f
    1f29:	06                   	(bad)
    1f2a:	22 23                	and    ah,BYTE PTR [rbx]
    1f2c:	80 80 80 80 80 80 80 	add    BYTE PTR [rax-0x7f7f7f80],0x80
    1f33:	80 80 01 2a 28 01 00 	add    BYTE PTR [rax+0x1282a01],0x0
    1f3a:	16                   	(bad)
    1f3b:	13 91 a8 7f 06 1c    	adc    edx,DWORD PTR [rcx+0x1c067fa8]
    1f41:	91                   	xchg   ecx,eax
    1f42:	b0 7f                	mov    al,0x7f
    1f44:	06                   	(bad)
    1f45:	1c 00                	sbb    al,0x0
    1f47:	00 00                	add    BYTE PTR [rax],al
    1f49:	21 34 13             	and    DWORD PTR [rbx+rdx*1],esi
    1f4c:	00 00                	add    BYTE PTR [rax],al
    1f4e:	00 00                	add    BYTE PTR [rax],al
    1f50:	00 00                	add    BYTE PTR [rax],al
    1f52:	89 0a                	mov    DWORD PTR [rdx],ecx
    1f54:	00 00                	add    BYTE PTR [rax],al
    1f56:	7a 16                	jp     1f6e <_Z12pushListElemP4List8string_t+0x1e>
    1f58:	00 00                	add    BYTE PTR [rax],al
    1f5a:	03 01                	add    eax,DWORD PTR [rcx]
    1f5c:	55                   	push   rbp
    1f5d:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    1f60:	03 01                	add    eax,DWORD PTR [rcx]
    1f62:	54                   	push   rsp
    1f63:	01 40 00             	add    DWORD PTR [rax+0x0],eax
    1f66:	21 47 13             	and    DWORD PTR [rdi+0x13],eax
    1f69:	00 00                	add    BYTE PTR [rax],al
    1f6b:	00 00                	add    BYTE PTR [rax],al
    1f6d:	00 00                	add    BYTE PTR [rax],al
    1f6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f70:	0a 00                	or     al,BYTE PTR [rax]
    1f72:	00 98 16 00 00 03    	add    BYTE PTR [rax+0x3000016],bl
    1f78:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    1f7b:	08 20                	or     BYTE PTR [rax],ah
    1f7d:	03 01                	add    eax,DWORD PTR [rcx]
    1f7f:	54                   	push   rsp
    1f80:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    1f83:	00 07                	add    BYTE PTR [rdi],al
    1f85:	23 14 00             	and    edx,DWORD PTR [rax+rax*1]
    1f88:	00 00                	add    BYTE PTR [rax],al
    1f8a:	00 00                	add    BYTE PTR [rax],al
    1f8c:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    1f93:	55                   	push   rbp
    1f94:	09 03                	or     DWORD PTR [rbx],eax
    1f96:	1d 40 00 00 00       	sbb    eax,0x40
    1f9b:	00 00                	add    BYTE PTR [rax],al
    1f9d:	00 03                	add    BYTE PTR [rbx],al
    1f9f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    1fa3:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    1fa6:	00 00                	add    BYTE PTR [rax],al
    1fa8:	00 00                	add    BYTE PTR [rax],al
    1faa:	00 03                	add    BYTE PTR [rbx],al
    1fac:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    1faf:	45 03 01             	add    r8d,DWORD PTR [r9]
    1fb2:	52                   	push   rdx
    1fb3:	09 03                	or     DWORD PTR [rbx],eax
    1fb5:	e8 42 00 00 00       	call   1ffc <_Z12pushListElemP4List8string_t+0xac>
    1fba:	00 00                	add    BYTE PTR [rax],al
    1fbc:	00 00                	add    BYTE PTR [rax],al
    1fbe:	00 09                	add    BYTE PTR [rcx],cl
    1fc0:	53                   	push   rbx
    1fc1:	08 00                	or     BYTE PTR [rax],al
    1fc3:	00 50 51             	add    BYTE PTR [rax+0x51],dl
    1fc6:	07                   	(bad)
    1fc7:	00 00                	add    BYTE PTR [rax],al
    1fc9:	04 49                	add    al,0x49
    1fcb:	03 01                	add    eax,DWORD PTR [rcx]
    1fcd:	22 03                	and    al,BYTE PTR [rbx]
    1fcf:	00 00                	add    BYTE PTR [rax],al
    1fd1:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fd4:	00 03                	add    BYTE PTR [rbx],al
    1fd6:	03 17                	add    edx,DWORD PTR [rdi]
    1fd8:	00 00                	add    BYTE PTR [rax],al
    1fda:	36 5f                	ss pop rdi
    1fdc:	5f                   	pop    rdi
    1fdd:	43 00 23             	rex.XB add BYTE PTR [r11],spl
    1fe0:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fe3:	00 36                	add    BYTE PTR [rsi],dh
    1fe5:	5f                   	pop    rdi
    1fe6:	5f                   	pop    rdi
    1fe7:	56                   	push   rsi
    1fe8:	00 3b                	add    BYTE PTR [rbx],bh
    1fea:	4b 01 00             	rex.WXB add QWORD PTR [r8],rax
    1fed:	00 00                	add    BYTE PTR [rax],al
    1fef:	29 74 04 00          	sub    DWORD PTR [rsp+rax*1+0x0],esi
    1ff3:	00 03                	add    BYTE PTR [rbx],al
    1ff5:	5c                   	pop    rsp
    1ff6:	41 01 00             	add    DWORD PTR [r8],eax
    1ff9:	00 37                	add    BYTE PTR [rdi],dh
    1ffb:	17                   	(bad)
    1ffc:	00 00                	add    BYTE PTR [rax],al
    1ffe:	0a 37                	or     dh,BYTE PTR [rdi]
    2000:	05 00 00 03 5c       	add    eax,0x5c030000
    2005:	01 46 01             	add    DWORD PTR [rsi+0x1],eax
    2008:	00 00                	add    BYTE PTR [rax],al
    200a:	0a aa 03 00 00 03    	or     ch,BYTE PTR [rdx+0x3000003]
    2010:	5c                   	pop    rsp
    2011:	01 fa                	add    edx,edi
    2013:	00 00                	add    BYTE PTR [rax],al
    2015:	00 0a                	add    BYTE PTR [rdx],cl
    2017:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2018:	04 00                	add    al,0x0
    201a:	00 03                	add    BYTE PTR [rbx],al
    201c:	5c                   	pop    rsp
    201d:	01 2e                	add    DWORD PTR [rsi],ebp
    201f:	00 00                	add    BYTE PTR [rax],al
    2021:	00 00                	add    BYTE PTR [rax],al
    2023:	29 fe                	sub    esi,edi
    2025:	17                   	(bad)
    2026:	00 00                	add    BYTE PTR [rax],al
    2028:	03 39                	add    edi,DWORD PTR [rcx]
    202a:	3f                   	(bad)
    202b:	01 00                	add    DWORD PTR [rax],eax
    202d:	00 6b 17             	add    BYTE PTR [rbx+0x17],ch
    2030:	00 00                	add    BYTE PTR [rax],al
    2032:	0a 37                	or     dh,BYTE PTR [rdi]
    2034:	05 00 00 03 39       	add    eax,0x39030000
    2039:	01 3f                	add    DWORD PTR [rdi],edi
    203b:	01 00                	add    DWORD PTR [rax],eax
    203d:	00 0a                	add    BYTE PTR [rdx],cl
    203f:	79 03                	jns    2044 <_Z12pushListElemP4List8string_t+0xf4>
    2041:	00 00                	add    BYTE PTR [rax],al
    2043:	03 39                	add    edi,DWORD PTR [rcx]
    2045:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    2048:	00 00                	add    BYTE PTR [rax],al
    204a:	0a 6e 04             	or     ch,BYTE PTR [rsi+0x4]
    204d:	00 00                	add    BYTE PTR [rax],al
    204f:	03 39                	add    edi,DWORD PTR [rcx]
    2051:	01 2e                	add    DWORD PTR [rsi],ebp
    2053:	00 00                	add    BYTE PTR [rax],al
    2055:	00 00                	add    BYTE PTR [rax],al
    2057:	35 55 05 00 00       	xor    eax,0x555
    205c:	02 e9                	add    ch,cl
    205e:	01 55 05             	add    DWORD PTR [rbp+0x5],edx
    2061:	00 00                	add    BYTE PTR [rax],al
    2063:	41 01 00             	add    DWORD PTR [r8],eax
    2066:	00 03                	add    BYTE PTR [rbx],al
    2068:	97                   	xchg   edi,eax
    2069:	17                   	(bad)
    206a:	00 00                	add    BYTE PTR [rax],al
    206c:	37                   	(bad)
    206d:	5f                   	pop    rdi
    206e:	5f                   	pop    rdi
    206f:	73 00                	jae    2071 <_Z12pushListElemP4List8string_t+0x121>
    2071:	e9 0f 41 01 00       	jmp    16185 <_end+0x1016d>
    2076:	00 37                	add    BYTE PTR [rdi],dh
    2078:	5f                   	pop    rdi
    2079:	5f                   	pop    rdi
    207a:	63 00                	movsxd eax,DWORD PTR [rax]
    207c:	e9 18 66 00 00       	jmp    8699 <_end+0x2681>
    2081:	00 00                	add    BYTE PTR [rax],al
    2083:	29 a4 2d 00 00 05 54 	sub    DWORD PTR [rbp+rbp*1+0x54050000],esp
    208a:	66 00 00             	data16 add BYTE PTR [rax],al
    208d:	00 b4 17 00 00 0a 3b 	add    BYTE PTR [rdi+rdx*1+0x3b0a0000],dh
    2094:	06                   	(bad)
    2095:	00 00                	add    BYTE PTR [rax],al
    2097:	05 54 20 fa 00       	add    eax,0xfa2054
    209c:	00 00                	add    BYTE PTR [rax],al
    209e:	2d 00 38 9f 13       	sub    eax,0x139f3800
    20a3:	00 00                	add    BYTE PTR [rax],al
    20a5:	1d 06 00 00 30       	sbb    eax,0x30000006
    20aa:	14 00                	adc    al,0x0
    20ac:	00 00                	add    BYTE PTR [rax],al
    20ae:	00 00                	add    BYTE PTR [rax],al
    20b0:	00 a9 00 00 00 00    	add    BYTE PTR [rcx+0x0],ch
    20b6:	00 00                	add    BYTE PTR [rax],al
    20b8:	00 01                	add    BYTE PTR [rcx],al
    20ba:	9c                   	pushf
    20bb:	4c 18 00             	rex.WR sbb BYTE PTR [rax],r8b
    20be:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    20c1:	13 00                	adc    eax,DWORD PTR [rax]
    20c3:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    20c6:	00 00                	add    BYTE PTR [rax],al
    20c8:	73 06                	jae    20d0 <_Z11popListElemP4List8string_t>
    20ca:	00 00                	add    BYTE PTR [rax],al
    20cc:	04 c0                	add    al,0xc0
    20ce:	13 00                	adc    eax,DWORD PTR [rax]
    20d0:	00 a3 06 00 00 9d    	add    BYTE PTR [rbx-0x62fffffa],ah
    20d6:	06                   	(bad)
    20d7:	00 00                	add    BYTE PTR [rax],al
    20d9:	11 cc                	adc    esp,ecx
    20db:	13 00                	adc    eax,DWORD PTR [rax]
    20dd:	00 c4                	add    ah,al
    20df:	06                   	(bad)
    20e0:	00 00                	add    BYTE PTR [rax],al
    20e2:	bc 06 00 00 39       	mov    esp,0x39000006
    20e7:	d7                   	xlat   BYTE PTR ds:[rbx]
    20e8:	13 00                	adc    eax,DWORD PTR [rax]
    20ea:	00 7d 14             	add    BYTE PTR [rbp+0x14],bh
    20ed:	00 00                	add    BYTE PTR [rax],al
    20ef:	00 00                	add    BYTE PTR [rax],al
    20f1:	00 00                	add    BYTE PTR [rax],al
    20f3:	37                   	(bad)
    20f4:	00 00                	add    BYTE PTR [rax],al
    20f6:	00 00                	add    BYTE PTR [rax],al
    20f8:	00 00                	add    BYTE PTR [rax],al
    20fa:	00 21                	add    BYTE PTR [rcx],ah
    20fc:	18 00                	sbb    BYTE PTR [rax],al
    20fe:	00 11                	add    BYTE PTR [rcx],dl
    2100:	d8 13                	fcom   DWORD PTR [rbx]
    2102:	00 00                	add    BYTE PTR [rax],al
    2104:	e7 06                	out    0x6,eax
    2106:	00 00                	add    BYTE PTR [rax],al
    2108:	e5 06                	in     eax,0x6
    210a:	00 00                	add    BYTE PTR [rax],al
    210c:	00 21                	add    BYTE PTR [rcx],ah
    210e:	79 14                	jns    2124 <_Z11popListElemP4List8string_t+0x54>
    2110:	00 00                	add    BYTE PTR [rax],al
    2112:	00 00                	add    BYTE PTR [rax],al
    2114:	00 00                	add    BYTE PTR [rax],al
    2116:	89 0a                	mov    DWORD PTR [rdx],ecx
    2118:	00 00                	add    BYTE PTR [rax],al
    211a:	3e 18 00             	ds sbb BYTE PTR [rax],al
    211d:	00 03                	add    BYTE PTR [rbx],al
    211f:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    2122:	7e 00                	jle    2124 <_Z11popListElemP4List8string_t+0x54>
    2124:	03 01                	add    eax,DWORD PTR [rcx]
    2126:	54                   	push   rsp
    2127:	01 48 00             	add    DWORD PTR [rax+0x0],ecx
    212a:	0d d9 14 00 00       	or     eax,0x14d9
    212f:	00 00                	add    BYTE PTR [rax],al
    2131:	00 00                	add    BYTE PTR [rax],al
    2133:	46 19 00             	rex.RX sbb DWORD PTR [rax],r8d
    2136:	00 00                	add    BYTE PTR [rax],al
    2138:	38 d9                	cmp    cl,bl
    213a:	0d 00 00 7c 04       	or     eax,0x47c0000
    213f:	00 00                	add    BYTE PTR [rax],al
    2141:	f0 18 00             	lock sbb BYTE PTR [rax],al
    2144:	00 00                	add    BYTE PTR [rax],al
    2146:	00 00                	add    BYTE PTR [rax],al
    2148:	00 68 00             	add    BYTE PTR [rax+0x0],ch
    214b:	00 00                	add    BYTE PTR [rax],al
    214d:	00 00                	add    BYTE PTR [rax],al
    214f:	00 00                	add    BYTE PTR [rax],al
    2151:	01 9c 13 19 00 00 04 	add    DWORD PTR [rbx+rdx*1+0x4000019],ebx
    2158:	ea                   	(bad)
    2159:	0d 00 00 fa 06       	or     eax,0x6fa0000
    215e:	00 00                	add    BYTE PTR [rax],al
    2160:	f0 06                	lock (bad)
    2162:	00 00                	add    BYTE PTR [rax],al
    2164:	39 ff                	cmp    edi,edi
    2166:	0d 00 00 ff 18       	or     eax,0x18ff0000
    216b:	00 00                	add    BYTE PTR [rax],al
    216d:	00 00                	add    BYTE PTR [rax],al
    216f:	00 00                	add    BYTE PTR [rax],al
    2171:	2b 00                	sub    eax,DWORD PTR [rax]
    2173:	00 00                	add    BYTE PTR [rax],al
    2175:	00 00                	add    BYTE PTR [rax],al
    2177:	00 00                	add    BYTE PTR [rax],al
    2179:	9f                   	lahf
    217a:	18 00                	sbb    BYTE PTR [rax],al
    217c:	00 11                	add    BYTE PTR [rcx],dl
    217e:	00 0e                	add    BYTE PTR [rsi],cl
    2180:	00 00                	add    BYTE PTR [rax],al
    2182:	2a 07                	sub    al,BYTE PTR [rdi]
    2184:	00 00                	add    BYTE PTR [rax],al
    2186:	24 07                	and    al,0x7
    2188:	00 00                	add    BYTE PTR [rax],al
    218a:	00 17                	add    BYTE PTR [rdi],dl
    218c:	d9 0d 00 00 39 19    	(bad)  [rip+0x19390000]        # 19392192 <_end+0x1938c17a>
    2192:	00 00                	add    BYTE PTR [rax],al
    2194:	00 00                	add    BYTE PTR [rax],al
    2196:	00 00                	add    BYTE PTR [rax],al
    2198:	00 39                	add    BYTE PTR [rcx],bh
    219a:	19 00                	sbb    DWORD PTR [rax],eax
    219c:	00 00                	add    BYTE PTR [rax],al
    219e:	00 00                	add    BYTE PTR [rax],al
    21a0:	00 1f                	add    BYTE PTR [rdi],bl
    21a2:	00 00                	add    BYTE PTR [rax],al
    21a4:	00 00                	add    BYTE PTR [rax],al
    21a6:	00 00                	add    BYTE PTR [rax],al
    21a8:	00 90 06 05 19 00    	add    BYTE PTR [rax+0x190506],dl
    21ae:	00 51 ea             	add    BYTE PTR [rcx-0x16],dl
    21b1:	0d 00 00 00 07       	or     eax,0x7000000
    21b6:	58                   	pop    rax
    21b7:	19 00                	sbb    DWORD PTR [rax],eax
    21b9:	00 00                	add    BYTE PTR [rax],al
    21bb:	00 00                	add    BYTE PTR [rax],al
    21bd:	00 a4 0a 00 00 03 01 	add    BYTE PTR [rdx+rcx*1+0x1030000],ah
    21c4:	55                   	push   rbp
    21c5:	09 03                	or     DWORD PTR [rbx],eax
    21c7:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    21ca:	00 00                	add    BYTE PTR [rax],al
    21cc:	00 00                	add    BYTE PTR [rax],al
    21ce:	00 03                	add    BYTE PTR [rbx],al
    21d0:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    21d4:	18 43 00             	sbb    BYTE PTR [rbx+0x0],al
    21d7:	00 00                	add    BYTE PTR [rax],al
    21d9:	00 00                	add    BYTE PTR [rax],al
    21db:	00 03                	add    BYTE PTR [rbx],al
    21dd:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    21e0:	08 91 03 01 52 09    	or     BYTE PTR [rcx+0x9520103],dl
    21e6:	03 2a                	add    ebp,DWORD PTR [rdx]
    21e8:	40 00 00             	rex add BYTE PTR [rax],al
    21eb:	00 00                	add    BYTE PTR [rax],al
    21ed:	00 00                	add    BYTE PTR [rax],al
    21ef:	00 00                	add    BYTE PTR [rax],al
    21f1:	52                   	push   rdx
    21f2:	39 19                	cmp    DWORD PTR [rcx],ebx
    21f4:	00 00                	add    BYTE PTR [rax],al
    21f6:	00 00                	add    BYTE PTR [rax],al
    21f8:	00 00                	add    BYTE PTR [rax],al
    21fa:	dc 09                	fmul   QWORD PTR [rcx]
    21fc:	00 00                	add    BYTE PTR [rax],al
    21fe:	00 3a                	add    BYTE PTR [rdx],bh
    2200:	1e                   	(bad)
    2201:	9e                   	sahf
    2202:	1c 3d                	sbb    al,0x3d
    2204:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2209:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    220e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2213:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    2218:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    221d:	0a 00                	or     al,BYTE PTR [rax]
    221f:	19 fd                	sbb    ebp,edi
    2221:	03 00                	add    eax,DWORD PTR [rax]
    2223:	00 f3                	add    bl,dh
    2225:	03 00                	add    eax,DWORD PTR [rax]
    2227:	00 3a                	add    BYTE PTR [rdx],bh
    2229:	08 9e 06 4e 55 4c    	or     BYTE PTR [rsi+0x4c554e06],bl
    222f:	4c 0a 00             	rex.WR or r8b,BYTE PTR [rax]
    2232:	19 f1                	sbb    ecx,esi
    2234:	05 00 00 f1 05       	add    eax,0x5f10000
    2239:	00 00                	add    BYTE PTR [rax],al
    223b:	19 55 05             	sbb    DWORD PTR [rbp+0x5],edx
    223e:	00 00                	add    BYTE PTR [rax],al
    2240:	4b 05 00 00 19 ce    	rex.WXB add rax,0xffffffffce190000
    2246:	04 00                	add    al,0x0
    2248:	00 c4                	add    ah,al
    224a:	04 00                	add    al,0x0
    224c:	00 19                	add    BYTE PTR [rcx],bl
    224e:	b1 04                	mov    cl,0x4
    2250:	00 00                	add    BYTE PTR [rax],al
    2252:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2253:	04 00                	add    al,0x0
    2255:	00 00                	add    BYTE PTR [rax],al
    2257:	3d 0f 00 00 05       	cmp    eax,0x500000f
    225c:	00 01                	add    BYTE PTR [rcx],al
    225e:	08 87 07 00 00 22    	or     BYTE PTR [rdi+0x22000007],al
    2264:	14 01                	adc    al,0x1
    2266:	00 00                	add    BYTE PTR [rax],al
    2268:	21 fa                	and    edx,edi
    226a:	01 00                	add    DWORD PTR [rax],eax
    226c:	00 00                	add    BYTE PTR [rax],al
    226e:	00 00                	add    BYTE PTR [rax],al
    2270:	00 20                	add    BYTE PTR [rax],ah
    2272:	1a 00                	sbb    al,BYTE PTR [rax]
    2274:	00 00                	add    BYTE PTR [rax],al
    2276:	00 00                	add    BYTE PTR [rax],al
    2278:	00 9a 04 00 00 00    	add    BYTE PTR [rdx+0x4],bl
    227e:	00 00                	add    BYTE PTR [rax],al
    2280:	00 b0 08 00 00 04    	add    BYTE PTR [rax+0x4000008],dh
    2286:	01 08                	add    DWORD PTR [rax],ecx
    2288:	ff 01                	inc    DWORD PTR [rcx]
    228a:	00 00                	add    BYTE PTR [rax],al
    228c:	04 02                	add    al,0x2
    228e:	07                   	(bad)
    228f:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    2292:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    2295:	07                   	(bad)
    2296:	f8                   	clc
    2297:	00 00                	add    BYTE PTR [rax],al
    2299:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    229c:	07                   	(bad)
    229d:	f3 00 00             	repz add BYTE PTR [rax],al
    22a0:	00 04 01             	add    BYTE PTR [rcx+rax*1],al
    22a3:	06                   	(bad)
    22a4:	01 02                	add    DWORD PTR [rdx],eax
    22a6:	00 00                	add    BYTE PTR [rax],al
    22a8:	04 02                	add    al,0x2
    22aa:	05 5b 00 00 00       	add    eax,0x5b
    22af:	06                   	(bad)
    22b0:	e9 08 00 00 03       	jmp    30022bd <_end+0x2ffc2a5>
    22b5:	29 14 64             	sub    DWORD PTR [rsp+riz*2],edx
    22b8:	00 00                	add    BYTE PTR [rax],al
    22ba:	00 23                	add    BYTE PTR [rbx],ah
    22bc:	04 05                	add    al,0x5
    22be:	69 6e 74 00 06 a9 00 	imul   ebp,DWORD PTR [rsi+0x74],0xa90600
    22c5:	00 00                	add    BYTE PTR [rax],al
    22c7:	03 2a                	add    ebp,DWORD PTR [rdx]
    22c9:	16                   	(bad)
    22ca:	3c 00                	cmp    al,0x0
    22cc:	00 00                	add    BYTE PTR [rax],al
    22ce:	04 08                	add    al,0x8
    22d0:	05 e5 00 00 00       	add    eax,0xe5
    22d5:	06                   	(bad)
    22d6:	85 05 00 00 03 2d    	test   DWORD PTR [rip+0x2d030000],eax        # 2d0322dc <_end+0x2d02c2c4>
    22dc:	1b 43 00             	sbb    eax,DWORD PTR [rbx+0x0]
    22df:	00 00                	add    BYTE PTR [rax],al
    22e1:	24 08                	and    al,0x8
    22e3:	08 91 00 00 00 04    	or     BYTE PTR [rcx+0x4000000],dl
    22e9:	01 06                	add    DWORD PTR [rsi],eax
    22eb:	08 02                	or     BYTE PTR [rdx],al
    22ed:	00 00                	add    BYTE PTR [rax],al
    22ef:	1b 91 00 00 00 06    	sbb    edx,DWORD PTR [rcx+0x6000000]
    22f5:	eb 08                	jmp    22ff <_Z10debugPrintP4List+0x8f>
    22f7:	00 00                	add    BYTE PTR [rax],al
    22f9:	04 1a                	add    al,0x1a
    22fb:	13 58 00             	adc    ebx,DWORD PTR [rax+0x0]
    22fe:	00 00                	add    BYTE PTR [rax],al
    2300:	06                   	(bad)
    2301:	ab                   	stos   DWORD PTR es:[rdi],eax
    2302:	00 00                	add    BYTE PTR [rax],al
    2304:	00 05 1a 14 6b 00    	add    BYTE PTR [rip+0x6b141a],al        # 6b3724 <_end+0x6ad70c>
    230a:	00 00                	add    BYTE PTR [rax],al
    230c:	06                   	(bad)
    230d:	87 05 00 00 05 1b    	xchg   DWORD PTR [rip+0x1b050000],eax        # 1b052313 <_end+0x1b04c2fb>
    2313:	14 7e                	adc    al,0x7e
    2315:	00 00                	add    BYTE PTR [rax],al
    2317:	00 06                	add    BYTE PTR [rsi],al
    2319:	d6                   	(bad)
    231a:	0a 00                	or     al,BYTE PTR [rax]
    231c:	00 06                	add    BYTE PTR [rsi],al
    231e:	d6                   	(bad)
    231f:	17                   	(bad)
    2320:	43 00 00             	rex.XB add BYTE PTR [r8],al
    2323:	00 08                	add    BYTE PTR [rax],cl
    2325:	98                   	cwde
    2326:	00 00                	add    BYTE PTR [rax],al
    2328:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    232b:	05 e0 00 00 00       	add    eax,0xe0
    2330:	04 10                	add    al,0x10
    2332:	04 f3                	add    al,0xf3
    2334:	01 00                	add    DWORD PTR [rax],eax
    2336:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2339:	07                   	(bad)
    233a:	ee                   	out    dx,al
    233b:	00 00                	add    BYTE PTR [rax],al
    233d:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
    2340:	04 d3                	add    al,0xd3
    2342:	00 00                	add    BYTE PTR [rax],al
    2344:	00 17                	add    BYTE PTR [rdi],dl
    2346:	08 3c dd 02 00 00 13 	or     BYTE PTR [rbx*8+0x13000002],bh
    234d:	01 00                	add    DWORD PTR [rax],eax
    234f:	00 0e                	add    BYTE PTR [rsi],cl
    2351:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    2354:	00 07                	add    BYTE PTR [rdi],al
    2356:	3d 09 64 00 00       	cmp    eax,0x6409
    235b:	00 00                	add    BYTE PTR [rax],al
    235d:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    2360:	6d                   	ins    DWORD PTR es:[rdi],dx
    2361:	00 3e                	add    BYTE PTR [rsi],bh
    2363:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2367:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    236a:	06                   	(bad)
    236b:	de 02                	fiadd  WORD PTR [rdx]
    236d:	00 00                	add    BYTE PTR [rax],al
    236f:	07                   	(bad)
    2370:	3f                   	(bad)
    2371:	05 ee 00 00 00       	add    eax,0xee
    2376:	17                   	(bad)
    2377:	10 44 09 00          	adc    BYTE PTR [rcx+rcx*1+0x0],al
    237b:	00 00                	add    BYTE PTR [rax],al
    237d:	44 01 00             	add    DWORD PTR [rax],r8d
    2380:	00 0e                	add    BYTE PTR [rsi],cl
    2382:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    2385:	00 07                	add    BYTE PTR [rdi],al
    2387:	45 0e                	rex.RB (bad)
    2389:	77 00                	ja     238b <_Z10debugPrintP4List+0x11b>
    238b:	00 00                	add    BYTE PTR [rax],al
    238d:	00 18                	add    BYTE PTR [rax],bl
    238f:	72 65                	jb     23f6 <_Z10debugPrintP4List+0x186>
    2391:	6d                   	ins    DWORD PTR es:[rdi],dx
    2392:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    2395:	77 00                	ja     2397 <_Z10debugPrintP4List+0x127>
    2397:	00 00                	add    BYTE PTR [rax],al
    2399:	08 00                	or     BYTE PTR [rax],al
    239b:	06                   	(bad)
    239c:	0a 00                	or     al,BYTE PTR [rax]
    239e:	00 00                	add    BYTE PTR [rax],al
    23a0:	07                   	(bad)
    23a1:	47 05 1f 01 00 00    	rex.RXB add eax,0x11f
    23a7:	17                   	(bad)
    23a8:	10 4e b4             	adc    BYTE PTR [rsi-0x4c],cl
    23ab:	00 00                	add    BYTE PTR [rax],al
    23ad:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    23b0:	00 00                	add    BYTE PTR [rax],al
    23b2:	0e                   	(bad)
    23b3:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    23b6:	00 07                	add    BYTE PTR [rdi],al
    23b8:	4f 13 d2             	rex.WRXB adc r10,r10
    23bb:	00 00                	add    BYTE PTR [rax],al
    23bd:	00 00                	add    BYTE PTR [rax],al
    23bf:	18 72 65             	sbb    BYTE PTR [rdx+0x65],dh
    23c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    23c3:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    23c6:	d2 00                	rol    BYTE PTR [rax],cl
    23c8:	00 00                	add    BYTE PTR [rax],al
    23ca:	08 00                	or     BYTE PTR [rax],al
    23cc:	06                   	(bad)
    23cd:	b5 00                	mov    ch,0x0
    23cf:	00 00                	add    BYTE PTR [rax],al
    23d1:	07                   	(bad)
    23d2:	51                   	push   rcx
    23d3:	05 50 01 00 00       	add    eax,0x150
    23d8:	25 cf 02 00 00       	and    eax,0x2cf
    23dd:	07                   	(bad)
    23de:	b4 03                	mov    ah,0x3
    23e0:	0f 8e 01 00 00 08    	jle    80023e7 <_end+0x7ffc3cf>
    23e6:	93                   	xchg   ebx,eax
    23e7:	01 00                	add    DWORD PTR [rax],eax
    23e9:	00 26                	add    BYTE PTR [rsi],ah
    23eb:	64 00 00             	add    BYTE PTR fs:[rax],al
    23ee:	00 a7 01 00 00 02    	add    BYTE PTR [rdi+0x2000001],ah
    23f4:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    23f5:	01 00                	add    DWORD PTR [rax],eax
    23f7:	00 02                	add    BYTE PTR [rdx],al
    23f9:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    23fa:	01 00                	add    DWORD PTR [rax],eax
    23fc:	00 00                	add    BYTE PTR [rax],al
    23fe:	08 ac 01 00 00 27 28 	or     BYTE PTR [rcx+rax*1+0x28270000],ch
    2405:	73 74                	jae    247b <_Z10debugPrintP4List+0x20b>
    2407:	64 00 0f             	add    BYTE PTR fs:[rdi],cl
    240a:	32 01                	xor    al,BYTE PTR [rcx]
    240c:	0b 7d 03             	or     edi,DWORD PTR [rbp+0x3]
    240f:	00 00                	add    BYTE PTR [rax],al
    2411:	01 08                	add    DWORD PTR [rax],ecx
    2413:	83 0b 13             	or     DWORD PTR [rbx],0x13
    2416:	01 00                	add    DWORD PTR [rax],eax
    2418:	00 01                	add    BYTE PTR [rcx],al
    241a:	08 84 0b 44 01 00 00 	or     BYTE PTR [rbx+rcx*1+0x144],al
    2421:	01 08                	add    DWORD PTR [rax],ecx
    2423:	8a 0b                	mov    cl,BYTE PTR [rbx]
    2425:	7d 03                	jge    242a <_Z10debugPrintP4List+0x1ba>
    2427:	00 00                	add    BYTE PTR [rax],al
    2429:	01 08                	add    DWORD PTR [rax],ecx
    242b:	8d 0b                	lea    ecx,[rbx]
    242d:	99                   	cdq
    242e:	03 00                	add    eax,DWORD PTR [rax]
    2430:	00 01                	add    BYTE PTR [rcx],al
    2432:	08 90 0b b4 03 00    	or     BYTE PTR [rax+0x3b40b],dl
    2438:	00 01                	add    BYTE PTR [rcx],al
    243a:	08 91 0b d1 03 00    	or     BYTE PTR [rcx+0x3d10b],dl
    2440:	00 01                	add    BYTE PTR [rcx],al
    2442:	08 92 0b e7 03 00    	or     BYTE PTR [rdx+0x3e70b],dl
    2448:	00 01                	add    BYTE PTR [rcx],al
    244a:	08 93 0b fd 03 00    	or     BYTE PTR [rbx+0x3fd0b],dl
    2450:	00 01                	add    BYTE PTR [rcx],al
    2452:	08 95 0b 27 04 00    	or     BYTE PTR [rbp+0x4270b],dl
    2458:	00 01                	add    BYTE PTR [rcx],al
    245a:	08 98 0b 43 04 00    	or     BYTE PTR [rax+0x4430b],bl
    2460:	00 01                	add    BYTE PTR [rcx],al
    2462:	08 9a 0b 59 04 00    	or     BYTE PTR [rdx+0x4590b],bl
    2468:	00 01                	add    BYTE PTR [rcx],al
    246a:	08 9d 0b 74 04 00    	or     BYTE PTR [rbp+0x4740b],bl
    2470:	00 01                	add    BYTE PTR [rcx],al
    2472:	08 9e 0b 8f 04 00    	or     BYTE PTR [rsi+0x48f0b],bl
    2478:	00 01                	add    BYTE PTR [rcx],al
    247a:	08 9f 0b c0 04 00    	or     BYTE PTR [rdi+0x4c00b],bl
    2480:	00 01                	add    BYTE PTR [rcx],al
    2482:	08 a1 0b e0 04 00    	or     BYTE PTR [rcx+0x4e00b],ah
    2488:	00 01                	add    BYTE PTR [rcx],al
    248a:	08 a4 0b 00 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x500],ah
    2491:	01 08                	add    DWORD PTR [rax],ecx
    2493:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2494:	0b 13                	or     edx,DWORD PTR [rbx]
    2496:	05 00 00 01 08       	add    eax,0x8010000
    249b:	a9 0b 20 05 00       	test   eax,0x5200b
    24a0:	00 01                	add    BYTE PTR [rcx],al
    24a2:	08 aa 0b 31 05 00    	or     BYTE PTR [rdx+0x5310b],ch
    24a8:	00 01                	add    BYTE PTR [rcx],al
    24aa:	08 ab 0b 51 05 00    	or     BYTE PTR [rbx+0x5510b],ch
    24b0:	00 01                	add    BYTE PTR [rcx],al
    24b2:	08 ac 0b 74 05 00 00 	or     BYTE PTR [rbx+rcx*1+0x574],ch
    24b9:	01 08                	add    DWORD PTR [rax],ecx
    24bb:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    24bc:	0b 97 05 00 00 01    	or     edx,DWORD PTR [rdi+0x1000005]
    24c2:	08 af 0b ad 05 00    	or     BYTE PTR [rdi+0x5ad0b],ch
    24c8:	00 01                	add    BYTE PTR [rcx],al
    24ca:	08 b0 0b d2 05 00    	or     BYTE PTR [rax+0x5d20b],dh
    24d0:	00 01                	add    BYTE PTR [rcx],al
    24d2:	08 f4                	or     ah,dh
    24d4:	16                   	(bad)
    24d5:	75 01                	jne    24d8 <_Z8readFilePKcPm+0x38>
    24d7:	00 00                	add    BYTE PTR [rax],al
    24d9:	01 08                	add    DWORD PTR [rax],ecx
    24db:	f9                   	stc
    24dc:	16                   	(bad)
    24dd:	32 06                	xor    al,BYTE PTR [rsi]
    24df:	00 00                	add    BYTE PTR [rax],al
    24e1:	01 08                	add    DWORD PTR [rax],ecx
    24e3:	fa                   	cli
    24e4:	16                   	(bad)
    24e5:	4c 06                	rex.WR (bad)
    24e7:	00 00                	add    BYTE PTR [rax],al
    24e9:	01 08                	add    DWORD PTR [rax],ecx
    24eb:	fc                   	cld
    24ec:	16                   	(bad)
    24ed:	67 06                	addr32 (bad)
    24ef:	00 00                	add    BYTE PTR [rax],al
    24f1:	01 08                	add    DWORD PTR [rax],ecx
    24f3:	fd                   	std
    24f4:	16                   	(bad)
    24f5:	c3                   	ret
    24f6:	06                   	(bad)
    24f7:	00 00                	add    BYTE PTR [rax],al
    24f9:	01 08                	add    DWORD PTR [rax],ecx
    24fb:	fe                   	(bad)
    24fc:	16                   	(bad)
    24fd:	7d 06                	jge    2505 <_Z8readFilePKcPm+0x65>
    24ff:	00 00                	add    BYTE PTR [rax],al
    2501:	01 08                	add    DWORD PTR [rax],ecx
    2503:	ff 16                	call   QWORD PTR [rsi]
    2505:	a0 06 00 00 29 08 00 	movabs al,ds:0x1601000829000006
    250c:	01 16 
    250e:	de 06                	fiadd  WORD PTR [rsi]
    2510:	00 00                	add    BYTE PTR [rax],al
    2512:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    2515:	73 00                	jae    2517 <_Z8readFilePKcPm+0x77>
    2517:	89 0f                	mov    DWORD PTR [rdi],ecx
    2519:	03 00                	add    eax,DWORD PTR [rax]
    251b:	00 21                	add    BYTE PTR [rcx],ah
    251d:	07                   	(bad)
    251e:	00 00                	add    BYTE PTR [rax],al
    2520:	d3 02                	rol    DWORD PTR [rdx],cl
    2522:	00 00                	add    BYTE PTR [rax],al
    2524:	02 21                	add    ah,BYTE PTR [rcx]
    2526:	07                   	(bad)
    2527:	00 00                	add    BYTE PTR [rax],al
    2529:	00 0b                	add    BYTE PTR [rbx],cl
    252b:	61                   	(bad)
    252c:	62 73 00 55 1b       	(bad)
    2531:	00 00                	add    BYTE PTR [rax],al
    2533:	00 30                	add    BYTE PTR [rax],dh
    2535:	07                   	(bad)
    2536:	00 00                	add    BYTE PTR [rax],al
    2538:	eb 02                	jmp    253c <_Z8readFilePKcPm+0x9c>
    253a:	00 00                	add    BYTE PTR [rax],al
    253c:	02 30                	add    dh,BYTE PTR [rax]
    253e:	07                   	(bad)
    253f:	00 00                	add    BYTE PTR [rax],al
    2541:	00 0b                	add    BYTE PTR [rbx],cl
    2543:	61                   	(bad)
    2544:	62 73 00 4f fb       	(bad)
    2549:	02 00                	add    al,BYTE PTR [rax]
    254b:	00 d9                	add    cl,bl
    254d:	00 00                	add    BYTE PTR [rax],al
    254f:	00 03                	add    BYTE PTR [rbx],al
    2551:	03 00                	add    eax,DWORD PTR [rax]
    2553:	00 02                	add    BYTE PTR [rdx],al
    2555:	d9 00                	fld    DWORD PTR [rax]
    2557:	00 00                	add    BYTE PTR [rax],al
    2559:	00 0b                	add    BYTE PTR [rbx],cl
    255b:	61                   	(bad)
    255c:	62 73 00 4b 05       	(bad)
    2561:	03 00                	add    eax,DWORD PTR [rax]
    2563:	00 e7                	add    bh,ah
    2565:	00 00                	add    BYTE PTR [rax],al
    2567:	00 1b                	add    BYTE PTR [rbx],bl
    2569:	03 00                	add    eax,DWORD PTR [rax]
    256b:	00 02                	add    BYTE PTR [rdx],al
    256d:	e7 00                	out    0x0,eax
    256f:	00 00                	add    BYTE PTR [rax],al
    2571:	00 0b                	add    BYTE PTR [rbx],cl
    2573:	61                   	(bad)
    2574:	62 73 00 47 f1       	(bad)
    2579:	02 00                	add    al,BYTE PTR [rax]
    257b:	00 ca                	add    dl,cl
    257d:	03 00                	add    eax,DWORD PTR [rax]
    257f:	00 33                	add    BYTE PTR [rbx],dh
    2581:	03 00                	add    eax,DWORD PTR [rax]
    2583:	00 02                	add    BYTE PTR [rdx],al
    2585:	ca 03 00             	retf   0x3
    2588:	00 00                	add    BYTE PTR [rax],al
    258a:	0b 61 62             	or     esp,DWORD PTR [rcx+0x62]
    258d:	73 00                	jae    258f <_Z8readFilePKcPm+0xef>
    258f:	3d 41 00 00 00       	cmp    eax,0x41
    2594:	d2 00                	rol    BYTE PTR [rax],cl
    2596:	00 00                	add    BYTE PTR [rax],al
    2598:	4b 03 00             	rex.WXB add rax,QWORD PTR [r8]
    259b:	00 02                	add    BYTE PTR [rdx],al
    259d:	d2 00                	rol    BYTE PTR [rax],cl
    259f:	00 00                	add    BYTE PTR [rax],al
    25a1:	00 0b                	add    BYTE PTR [rbx],cl
    25a3:	61                   	(bad)
    25a4:	62 73 00 38 11       	(bad)
    25a9:	00 00                	add    BYTE PTR [rax],al
    25ab:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    25ae:	00 00                	add    BYTE PTR [rax],al
    25b0:	63 03                	movsxd eax,DWORD PTR [rbx]
    25b2:	00 00                	add    BYTE PTR [rax],al
    25b4:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    25b7:	00 00                	add    BYTE PTR [rax],al
    25b9:	00 1c 64             	add    BYTE PTR [rsp+riz*2],bl
    25bc:	69 76 00 b5 74 00 00 	imul   esi,DWORD PTR [rsi+0x0],0x74b5
    25c3:	00 44 01 00          	add    BYTE PTR [rcx+rax*1+0x0],al
    25c7:	00 02                	add    BYTE PTR [rdx],al
    25c9:	77 00                	ja     25cb <_Z10countLinesPcm+0x1b>
    25cb:	00 00                	add    BYTE PTR [rax],al
    25cd:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    25d0:	00 00                	add    BYTE PTR [rax],al
    25d2:	00 00                	add    BYTE PTR [rax],al
    25d4:	07                   	(bad)
    25d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    25d6:	00 00                	add    BYTE PTR [rax],al
    25d8:	00 de                	add    dh,bl
    25da:	02 0c 64             	add    cl,BYTE PTR [rsp+riz*2]
    25dd:	00 00                	add    BYTE PTR [rax],al
    25df:	00 93 03 00 00 02    	add    BYTE PTR [rbx+0x2000003],dl
    25e5:	93                   	xchg   ebx,eax
    25e6:	03 00                	add    eax,DWORD PTR [rax]
    25e8:	00 00                	add    BYTE PTR [rax],al
    25ea:	08 98 03 00 00 2a    	or     BYTE PTR [rax+0x2a000003],bl
    25f0:	2b 33                	sub    esi,DWORD PTR [rbx]
    25f2:	00 00                	add    BYTE PTR [rax],al
    25f4:	00 07                	add    BYTE PTR [rdi],al
    25f6:	e3 02                	jrcxz  25fa <_Z10countLinesPcm+0x4a>
    25f8:	12 33                	adc    dh,BYTE PTR [rbx]
    25fa:	00 00                	add    BYTE PTR [rax],al
    25fc:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
    2600:	00 b4 03 00 00 02 93 	add    BYTE PTR [rbx+rax*1-0x6cfe0000],dh
    2607:	03 00                	add    eax,DWORD PTR [rax]
    2609:	00 00                	add    BYTE PTR [rax],al
    260b:	09 cd                	or     ebp,ecx
    260d:	01 00                	add    DWORD PTR [rax],eax
    260f:	00 0a                	add    BYTE PTR [rdx],cl
    2611:	19 01                	sbb    DWORD PTR [rcx],eax
    2613:	ca 03 00             	retf   0x3
    2616:	00 ca                	add    dl,cl
    2618:	03 00                	add    eax,DWORD PTR [rax]
    261a:	00 02                	add    BYTE PTR [rdx],al
    261c:	cd 00                	int    0x0
    261e:	00 00                	add    BYTE PTR [rax],al
    2620:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
    2623:	04 f8                	add    al,0xf8
    2625:	01 00                	add    DWORD PTR [rax],eax
    2627:	00 07                	add    BYTE PTR [rdi],al
    2629:	d2 01                	rol    BYTE PTR [rcx],cl
    262b:	00 00                	add    BYTE PTR [rax],al
    262d:	e1 01                	loope  2630 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x10>
    262f:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    2633:	00 e7                	add    bh,ah
    2635:	03 00                	add    eax,DWORD PTR [rax]
    2637:	00 02                	add    BYTE PTR [rdx],al
    2639:	cd 00                	int    0x0
    263b:	00 00                	add    BYTE PTR [rax],al
    263d:	00 07                	add    BYTE PTR [rdi],al
    263f:	dc 01                	fadd   QWORD PTR [rcx]
    2641:	00 00                	add    BYTE PTR [rax],al
    2643:	e6 01                	out    0x1,al
    2645:	01 77 00             	add    DWORD PTR [rdi+0x0],esi
    2648:	00 00                	add    BYTE PTR [rax],al
    264a:	fd                   	std
    264b:	03 00                	add    eax,DWORD PTR [rax]
    264d:	00 02                	add    BYTE PTR [rdx],al
    264f:	cd 00                	int    0x0
    2651:	00 00                	add    BYTE PTR [rax],al
    2653:	00 09                	add    BYTE PTR [rcx],cl
    2655:	65 00 00             	add    BYTE PTR gs:[rax],al
    2658:	00 0b                	add    BYTE PTR [rbx],cl
    265a:	14 01                	adc    al,0x1
    265c:	8a 00                	mov    al,BYTE PTR [rax]
    265e:	00 00                	add    BYTE PTR [rax],al
    2660:	27                   	(bad)
    2661:	04 00                	add    al,0x0
    2663:	00 02                	add    BYTE PTR [rdx],al
    2665:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2666:	01 00                	add    DWORD PTR [rax],eax
    2668:	00 02                	add    BYTE PTR [rdx],al
    266a:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    266b:	01 00                	add    DWORD PTR [rax],eax
    266d:	00 02                	add    BYTE PTR [rdx],al
    266f:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2672:	00 02                	add    BYTE PTR [rdx],al
    2674:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2677:	00 02                	add    BYTE PTR [rdx],al
    2679:	81 01 00 00 00 2c    	add    DWORD PTR [rcx],0x2c000000
    267f:	64 69 76 00 07 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e007
    2686:	0e 
    2687:	13 01                	adc    eax,DWORD PTR [rcx]
    2689:	00 00                	add    BYTE PTR [rax],al
    268b:	43 04 00             	rex.XB add al,0x0
    268e:	00 02                	add    BYTE PTR [rdx],al
    2690:	64 00 00             	add    BYTE PTR fs:[rax],al
    2693:	00 02                	add    BYTE PTR [rdx],al
    2695:	64 00 00             	add    BYTE PTR fs:[rax],al
    2698:	00 00                	add    BYTE PTR [rax],al
    269a:	07                   	(bad)
    269b:	bd 00 00 00 05       	mov    ebp,0x5000000
    26a0:	03 0e                	add    ecx,DWORD PTR [rsi]
    26a2:	8c 00                	mov    WORD PTR [rax],es
    26a4:	00 00                	add    BYTE PTR [rax],al
    26a6:	59                   	pop    rcx
    26a7:	04 00                	add    al,0x0
    26a9:	00 02                	add    BYTE PTR [rdx],al
    26ab:	cd 00                	int    0x0
    26ad:	00 00                	add    BYTE PTR [rax],al
    26af:	00 07                	add    BYTE PTR [rdi],al
    26b1:	c3                   	ret
    26b2:	02 00                	add    al,BYTE PTR [rax]
    26b4:	00 e2                	add    dl,ah
    26b6:	03 0f                	add    ecx,DWORD PTR [rdi]
    26b8:	44 01 00             	add    DWORD PTR [rax],r8d
    26bb:	00 74 04 00          	add    BYTE PTR [rsp+rax*1+0x0],dh
    26bf:	00 02                	add    BYTE PTR [rdx],al
    26c1:	77 00                	ja     26c3 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa3>
    26c3:	00 00                	add    BYTE PTR [rax],al
    26c5:	02 77 00             	add    dh,BYTE PTR [rdi+0x0]
    26c8:	00 00                	add    BYTE PTR [rax],al
    26ca:	00 07                	add    BYTE PTR [rdi],al
    26cc:	33 02                	xor    eax,DWORD PTR [rdx]
    26ce:	00 00                	add    BYTE PTR [rax],al
    26d0:	26 04 0c             	es add al,0xc
    26d3:	64 00 00             	add    BYTE PTR fs:[rax],al
    26d6:	00 8f 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],cl
    26dc:	cd 00                	int    0x0
    26de:	00 00                	add    BYTE PTR [rax],al
    26e0:	02 c1                	add    al,cl
    26e2:	00 00                	add    BYTE PTR [rax],al
    26e4:	00 00                	add    BYTE PTR [rax],al
    26e6:	09 39                	or     DWORD PTR [rcx],edi
    26e8:	02 00                	add    al,BYTE PTR [rax]
    26ea:	00 0c 75 01 c1 00 00 	add    BYTE PTR [rsi*2+0xc101],cl
    26f1:	00 af 04 00 00 02    	add    BYTE PTR [rdi+0x2000004],ch
    26f7:	af                   	scas   eax,DWORD PTR es:[rdi]
    26f8:	04 00                	add    al,0x0
    26fa:	00 02                	add    BYTE PTR [rdx],al
    26fc:	cd 00                	int    0x0
    26fe:	00 00                	add    BYTE PTR [rax],al
    2700:	02 c1                	add    al,cl
    2702:	00 00                	add    BYTE PTR [rax],al
    2704:	00 00                	add    BYTE PTR [rax],al
    2706:	08 b4 04 00 00 04 04 	or     BYTE PTR [rsp+rax*1+0x4040000],dh
    270d:	05 61 02 00 00       	add    eax,0x261
    2712:	1b b4 04 00 00 07 d9 	sbb    esi,DWORD PTR [rsp+rax*1-0x26f90000]
    2719:	00 00                	add    BYTE PTR [rax],al
    271b:	00 29                	add    BYTE PTR [rcx],ch
    271d:	04 0c                	add    al,0xc
    271f:	64 00 00             	add    BYTE PTR fs:[rax],al
    2722:	00 e0                	add    al,ah
    2724:	04 00                	add    al,0x0
    2726:	00 02                	add    BYTE PTR [rdx],al
    2728:	af                   	scas   eax,DWORD PTR es:[rdi]
    2729:	04 00                	add    al,0x0
    272b:	00 02                	add    BYTE PTR [rdx],al
    272d:	cd 00                	int    0x0
    272f:	00 00                	add    BYTE PTR [rax],al
    2731:	02 c1                	add    al,cl
    2733:	00 00                	add    BYTE PTR [rax],al
    2735:	00 00                	add    BYTE PTR [rax],al
    2737:	1d 25 00 00 00       	sbb    eax,0x25
    273c:	ca 03 00             	retf   0x3
    273f:	05 00 00 02 8a       	add    eax,0x8a020000
    2744:	00 00                	add    BYTE PTR [rax],al
    2746:	00 02                	add    BYTE PTR [rdx],al
    2748:	c1 00 00             	rol    DWORD PTR [rax],0x0
    274b:	00 02                	add    BYTE PTR [rdx],al
    274d:	c1 00 00             	rol    DWORD PTR [rax],0x0
    2750:	00 02                	add    BYTE PTR [rdx],al
    2752:	81 01 00 00 00 2d    	add    DWORD PTR [rcx],0x2d000000
    2758:	36 00 00             	ss add BYTE PTR [rax],al
    275b:	00 07                	add    BYTE PTR [rdi],al
    275d:	fa                   	cli
    275e:	02 0d 13 05 00 00    	add    cl,BYTE PTR [rip+0x513]        # 2c77 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1f7>
    2764:	02 64 00 00          	add    ah,BYTE PTR [rax+rax*1+0x0]
    2768:	00 00                	add    BYTE PTR [rax],al
    276a:	2e ec                	cs in  al,dx
    276c:	02 00                	add    al,BYTE PTR [rax]
    276e:	00 07                	add    BYTE PTR [rdi],al
    2770:	3d 02 0c 64 00       	cmp    eax,0x640c02
    2775:	00 00                	add    BYTE PTR [rax],al
    2777:	1d eb 02 00 00       	sbb    eax,0x2eb
    277c:	3f                   	(bad)
    277d:	02 31                	add    dh,BYTE PTR [rcx]
    277f:	05 00 00 02 3c       	add    eax,0x3c020000
    2784:	00 00                	add    BYTE PTR [rax],al
    2786:	00 00                	add    BYTE PTR [rax],al
    2788:	09 05 01 00 00 07    	or     DWORD PTR [rip+0x7000001],eax        # 700278f <_end+0x6ffc777>
    278e:	76 0f                	jbe    279f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x17f>
    2790:	ca 03 00             	retf   0x3
    2793:	00 4c 05 00          	add    BYTE PTR [rbp+rax*1+0x0],cl
    2797:	00 02                	add    BYTE PTR [rdx],al
    2799:	cd 00                	int    0x0
    279b:	00 00                	add    BYTE PTR [rax],al
    279d:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    27a1:	00 00                	add    BYTE PTR [rax],al
    27a3:	08 8c 00 00 00 11 54 	or     BYTE PTR [rax+rax*1+0x54110000],cl
    27aa:	00 00                	add    BYTE PTR [rax],al
    27ac:	00 d7                	add    bh,dl
    27ae:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    27b1:	00 00                	add    BYTE PTR [rax],al
    27b3:	77 00                	ja     27b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x195>
    27b5:	00 00                	add    BYTE PTR [rax],al
    27b7:	74 05                	je     27be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19e>
    27b9:	00 00                	add    BYTE PTR [rax],al
    27bb:	02 cd                	add    cl,ch
    27bd:	00 00                	add    BYTE PTR [rax],al
    27bf:	00 02                	add    BYTE PTR [rdx],al
    27c1:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    27c7:	00 00                	add    BYTE PTR [rax],al
    27c9:	00 00                	add    BYTE PTR [rax],al
    27cb:	11 25 02 00 00 db    	adc    DWORD PTR [rip+0xffffffffdb000002],esp        # ffffffffdb0027d3 <_end+0xffffffffdaffc7bb>
    27d1:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    27d4:	00 00                	add    BYTE PTR [rax],al
    27d6:	43 00 00             	rex.XB add BYTE PTR [r8],al
    27d9:	00 97 05 00 00 02    	add    BYTE PTR [rdi+0x2000005],dl
    27df:	cd 00                	int    0x0
    27e1:	00 00                	add    BYTE PTR [rax],al
    27e3:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    27e7:	00 02                	add    BYTE PTR [rdx],al
    27e9:	64 00 00             	add    BYTE PTR fs:[rax],al
    27ec:	00 00                	add    BYTE PTR [rax],al
    27ee:	07                   	(bad)
    27ef:	db 25 00 00 9b 03    	(bad)  [rip+0x39b0000]        # 39b27f5 <_end+0x39ac7dd>
    27f5:	0c 64                	or     al,0x64
    27f7:	00 00                	add    BYTE PTR [rax],al
    27f9:	00 ad 05 00 00 02    	add    BYTE PTR [rbp+0x2000005],ch
    27ff:	cd 00                	int    0x0
    2801:	00 00                	add    BYTE PTR [rax],al
    2803:	00 09                	add    BYTE PTR [rcx],cl
    2805:	e1 01                	loope  2808 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1e8>
    2807:	00 00                	add    BYTE PTR [rax],al
    2809:	0c 8f                	or     al,0x8f
    280b:	01 c1                	add    ecx,eax
    280d:	00 00                	add    BYTE PTR [rax],al
    280f:	00 cd                	add    ch,cl
    2811:	05 00 00 02 8c       	add    eax,0x8c020000
    2816:	00 00                	add    BYTE PTR [rax],al
    2818:	00 02                	add    BYTE PTR [rdx],al
    281a:	cd 05                	int    0x5
    281c:	00 00                	add    BYTE PTR [rax],al
    281e:	02 c1                	add    al,cl
    2820:	00 00                	add    BYTE PTR [rax],al
    2822:	00 00                	add    BYTE PTR [rax],al
    2824:	08 bb 04 00 00 09    	or     BYTE PTR [rbx+0x9000004],bh
    282a:	42 02 00             	rex.X add al,BYTE PTR [rax]
    282d:	00 0c 4f             	add    BYTE PTR [rdi+rcx*2],cl
    2830:	01 64 00 00          	add    DWORD PTR [rax+rax*1+0x0],esp
    2834:	00 ed                	add    ch,ch
    2836:	05 00 00 02 8c       	add    eax,0x8c020000
    283b:	00 00                	add    BYTE PTR [rax],al
    283d:	00 02                	add    BYTE PTR [rdx],al
    283f:	b4 04                	mov    ah,0x4
    2841:	00 00                	add    BYTE PTR [rax],al
    2843:	00 2f                	add    BYTE PTR [rdi],ch
    2845:	12 02                	adc    al,BYTE PTR [rdx]
    2847:	00 00                	add    BYTE PTR [rax],al
    2849:	0f 57 01             	xorps  xmm0,XMMWORD PTR [rcx]
    284c:	0b 4c 06 00          	or     ecx,DWORD PTR [rsi+rax*1+0x0]
    2850:	00 01                	add    BYTE PTR [rcx],al
    2852:	08 cc                	or     ah,cl
    2854:	0b 75 01             	or     esi,DWORD PTR [rbp+0x1]
    2857:	00 00                	add    BYTE PTR [rax],al
    2859:	01 08                	add    DWORD PTR [rax],ecx
    285b:	dc 0b                	fmul   QWORD PTR [rbx]
    285d:	4c 06                	rex.WR (bad)
    285f:	00 00                	add    BYTE PTR [rax],al
    2861:	01 08                	add    DWORD PTR [rax],ecx
    2863:	e7 0b                	out    0xb,eax
    2865:	67 06                	addr32 (bad)
    2867:	00 00                	add    BYTE PTR [rax],al
    2869:	01 08                	add    DWORD PTR [rax],ecx
    286b:	e8 0b 7d 06 00       	call   6a57b <_end+0x64563>
    2870:	00 01                	add    BYTE PTR [rcx],al
    2872:	08 e9                	or     cl,ch
    2874:	0b a0 06 00 00 01    	or     esp,DWORD PTR [rax+0x1000006]
    287a:	08 eb                	or     bl,ch
    287c:	0b c3                	or     eax,ebx
    287e:	06                   	(bad)
    287f:	00 00                	add    BYTE PTR [rax],al
    2881:	01 08                	add    DWORD PTR [rax],ecx
    2883:	ec                   	in     al,dx
    2884:	0b de                	or     ebx,esi
    2886:	06                   	(bad)
    2887:	00 00                	add    BYTE PTR [rax],al
    2889:	1c 64                	sbb    al,0x64
    288b:	69 76 00 d9 b8 01 00 	imul   esi,DWORD PTR [rsi+0x0],0x1b8d9
    2892:	00 75 01             	add    BYTE PTR [rbp+0x1],dh
    2895:	00 00                	add    BYTE PTR [rax],al
    2897:	02 d2                	add    dl,dl
    2899:	00 00                	add    BYTE PTR [rax],al
    289b:	00 02                	add    BYTE PTR [rdx],al
    289d:	d2 00                	rol    BYTE PTR [rax],cl
    289f:	00 00                	add    BYTE PTR [rax],al
    28a1:	00 00                	add    BYTE PTR [rax],al
    28a3:	07                   	(bad)
    28a4:	c2 02 00             	ret    0x2
    28a7:	00 e6                	add    dh,ah
    28a9:	03 1e                	add    ebx,DWORD PTR [rsi]
    28ab:	75 01                	jne    28ae <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x28e>
    28ad:	00 00                	add    BYTE PTR [rax],al
    28af:	67 06                	addr32 (bad)
    28b1:	00 00                	add    BYTE PTR [rax],al
    28b3:	02 d2                	add    dl,dl
    28b5:	00 00                	add    BYTE PTR [rax],al
    28b7:	00 02                	add    BYTE PTR [rdx],al
    28b9:	d2 00                	rol    BYTE PTR [rax],cl
    28bb:	00 00                	add    BYTE PTR [rax],al
    28bd:	00 07                	add    BYTE PTR [rdi],al
    28bf:	2d 02 00 00 ed       	sub    eax,0xed000002
    28c4:	01 01                	add    DWORD PTR [rcx],eax
    28c6:	d2 00                	rol    BYTE PTR [rax],cl
    28c8:	00 00                	add    BYTE PTR [rax],al
    28ca:	7d 06                	jge    28d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b2>
    28cc:	00 00                	add    BYTE PTR [rax],al
    28ce:	02 cd                	add    cl,ch
    28d0:	00 00                	add    BYTE PTR [rax],al
    28d2:	00 00                	add    BYTE PTR [rax],al
    28d4:	11 88 00 00 00 ee    	adc    DWORD PTR [rax-0x12000000],ecx
    28da:	16                   	(bad)
    28db:	7f 00                	jg     28dd <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2bd>
    28dd:	00 00                	add    BYTE PTR [rax],al
    28df:	d2 00                	rol    BYTE PTR [rax],cl
    28e1:	00 00                	add    BYTE PTR [rax],al
    28e3:	a0 06 00 00 02 cd 00 	movabs al,ds:0xcd02000006
    28ea:	00 00 
    28ec:	02 4c 05 00          	add    cl,BYTE PTR [rbp+rax*1+0x0]
    28f0:	00 02                	add    BYTE PTR [rdx],al
    28f2:	64 00 00             	add    BYTE PTR fs:[rax],al
    28f5:	00 00                	add    BYTE PTR [rax],al
    28f7:	11 b9 02 00 00 f3    	adc    DWORD PTR [rcx-0xcfffffe],edi
    28fd:	1f                   	(bad)
    28fe:	b0 02                	mov    al,0x2
    2900:	00 00                	add    BYTE PTR [rax],al
    2902:	e0 00                	loopne 2904 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2e4>
    2904:	00 00                	add    BYTE PTR [rax],al
    2906:	c3                   	ret
    2907:	06                   	(bad)
    2908:	00 00                	add    BYTE PTR [rax],al
    290a:	02 cd                	add    cl,ch
    290c:	00 00                	add    BYTE PTR [rax],al
    290e:	00 02                	add    BYTE PTR [rdx],al
    2910:	4c 05 00 00 02 64    	rex.WR add rax,0x64020000
    2916:	00 00                	add    BYTE PTR [rax],al
    2918:	00 00                	add    BYTE PTR [rax],al
    291a:	09 97 02 00 00 07    	or     DWORD PTR [rdi+0x7000002],edx
    2920:	7c 0e                	jl     2930 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x310>
    2922:	e7 00                	out    0x0,eax
    2924:	00 00                	add    BYTE PTR [rax],al
    2926:	de 06                	fiadd  WORD PTR [rsi]
    2928:	00 00                	add    BYTE PTR [rax],al
    292a:	02 cd                	add    cl,ch
    292c:	00 00                	add    BYTE PTR [rax],al
    292e:	00 02                	add    BYTE PTR [rdx],al
    2930:	4c 05 00 00 00 09    	rex.WR add rax,0x9000000
    2936:	2b 00                	sub    eax,DWORD PTR [rax]
    2938:	00 00                	add    BYTE PTR [rax],al
    293a:	07                   	(bad)
    293b:	7f 14                	jg     2951 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x331>
    293d:	d9 00                	fld    DWORD PTR [rax]
    293f:	00 00                	add    BYTE PTR [rax],al
    2941:	f9                   	stc
    2942:	06                   	(bad)
    2943:	00 00                	add    BYTE PTR [rax],al
    2945:	02 cd                	add    cl,ch
    2947:	00 00                	add    BYTE PTR [rax],al
    2949:	00 02                	add    BYTE PTR [rdx],al
    294b:	4c 05 00 00 00 01    	rex.WR add rax,0x1000000
    2951:	0d 27 0c 7d 03       	or     eax,0x37d0c27
    2956:	00 00                	add    BYTE PTR [rax],al
    2958:	01 0d 2b 0e 99 03    	add    DWORD PTR [rip+0x3990e2b],ecx        # 3993789 <_end+0x398d771>
    295e:	00 00                	add    BYTE PTR [rax],al
    2960:	01 0d 2e 0e 00 05    	add    DWORD PTR [rip+0x5000e2e],ecx        # 5003794 <_end+0x4ffd77c>
    2966:	00 00                	add    BYTE PTR [rax],al
    2968:	01 0d 36 0c 13 01    	add    DWORD PTR [rip+0x1130c36],ecx        # 11335a4 <_end+0x112d58c>
    296e:	00 00                	add    BYTE PTR [rax],al
    2970:	01 0d 37 0c 44 01    	add    DWORD PTR [rip+0x1440c37],ecx        # 14435ad <_end+0x143d595>
    2976:	00 00                	add    BYTE PTR [rax],al
    2978:	04 10                	add    al,0x10
    297a:	04 8c                	add    al,0x8c
    297c:	02 00                	add    al,BYTE PTR [rax]
    297e:	00 01                	add    BYTE PTR [rcx],al
    2980:	0d 39 0c bb 02       	or     eax,0x2bb0c39
    2985:	00 00                	add    BYTE PTR [rax],al
    2987:	04 10                	add    al,0x10
    2989:	05 ea 01 00 00       	add    eax,0x1ea
    298e:	01 0d 39 0c d3 02    	add    DWORD PTR [rip+0x2d30c39],ecx        # 2d335cd <_end+0x2d2d5b5>
    2994:	00 00                	add    BYTE PTR [rax],al
    2996:	01 0d 39 0c eb 02    	add    DWORD PTR [rip+0x2eb0c39],ecx        # 2eb35d5 <_end+0x2ead5bd>
    299c:	00 00                	add    BYTE PTR [rax],al
    299e:	01 0d 39 0c 03 03    	add    DWORD PTR [rip+0x3030c39],ecx        # 30335dd <_end+0x302d5c5>
    29a4:	00 00                	add    BYTE PTR [rax],al
    29a6:	01 0d 39 0c 1b 03    	add    DWORD PTR [rip+0x31b0c39],ecx        # 31b35e5 <_end+0x31ad5cd>
    29ac:	00 00                	add    BYTE PTR [rax],al
    29ae:	01 0d 39 0c 33 03    	add    DWORD PTR [rip+0x3330c39],ecx        # 33335ed <_end+0x332d5d5>
    29b4:	00 00                	add    BYTE PTR [rax],al
    29b6:	01 0d 39 0c 4b 03    	add    DWORD PTR [rip+0x34b0c39],ecx        # 34b35f5 <_end+0x34ad5dd>
    29bc:	00 00                	add    BYTE PTR [rax],al
    29be:	01 0d 3a 0c b4 03    	add    DWORD PTR [rip+0x3b40c3a],ecx        # 3b435fe <_end+0x3b3d5e6>
    29c4:	00 00                	add    BYTE PTR [rax],al
    29c6:	01 0d 3b 0c d1 03    	add    DWORD PTR [rip+0x3d10c3b],ecx        # 3d13607 <_end+0x3d0d5ef>
    29cc:	00 00                	add    BYTE PTR [rax],al
    29ce:	01 0d 3c 0c e7 03    	add    DWORD PTR [rip+0x3e70c3c],ecx        # 3e73610 <_end+0x3e6d5f8>
    29d4:	00 00                	add    BYTE PTR [rax],al
    29d6:	01 0d 3d 0c fd 03    	add    DWORD PTR [rip+0x3fd0c3d],ecx        # 3fd3619 <_end+0x3fcd601>
    29dc:	00 00                	add    BYTE PTR [rax],al
    29de:	01 0d 3f 0c 32 06    	add    DWORD PTR [rip+0x6320c3f],ecx        # 6323623 <_end+0x631d60b>
    29e4:	00 00                	add    BYTE PTR [rax],al
    29e6:	01 0d 3f 0c 63 03    	add    DWORD PTR [rip+0x3630c3f],ecx        # 363362b <_end+0x362d613>
    29ec:	00 00                	add    BYTE PTR [rax],al
    29ee:	01 0d 3f 0c 27 04    	add    DWORD PTR [rip+0x4270c3f],ecx        # 4273633 <_end+0x426d61b>
    29f4:	00 00                	add    BYTE PTR [rax],al
    29f6:	01 0d 41 0c 43 04    	add    DWORD PTR [rip+0x4430c41],ecx        # 443363d <_end+0x442d625>
    29fc:	00 00                	add    BYTE PTR [rax],al
    29fe:	01 0d 43 0c 59 04    	add    DWORD PTR [rip+0x4590c43],ecx        # 4593647 <_end+0x458d62f>
    2a04:	00 00                	add    BYTE PTR [rax],al
    2a06:	01 0d 46 0c 74 04    	add    DWORD PTR [rip+0x4740c46],ecx        # 4743652 <_end+0x473d63a>
    2a0c:	00 00                	add    BYTE PTR [rax],al
    2a0e:	01 0d 47 0c 8f 04    	add    DWORD PTR [rip+0x48f0c47],ecx        # 48f365b <_end+0x48ed643>
    2a14:	00 00                	add    BYTE PTR [rax],al
    2a16:	01 0d 48 0c c0 04    	add    DWORD PTR [rip+0x4c00c48],ecx        # 4c03664 <_end+0x4bfd64c>
    2a1c:	00 00                	add    BYTE PTR [rax],al
    2a1e:	01 0d 4a 0c e0 04    	add    DWORD PTR [rip+0x4e00c4a],ecx        # 4e0366e <_end+0x4dfd656>
    2a24:	00 00                	add    BYTE PTR [rax],al
    2a26:	01 0d 4b 0c 13 05    	add    DWORD PTR [rip+0x5130c4b],ecx        # 5133677 <_end+0x512d65f>
    2a2c:	00 00                	add    BYTE PTR [rax],al
    2a2e:	01 0d 4d 0c 20 05    	add    DWORD PTR [rip+0x5200c4d],ecx        # 5203681 <_end+0x51fd669>
    2a34:	00 00                	add    BYTE PTR [rax],al
    2a36:	01 0d 4e 0c 31 05    	add    DWORD PTR [rip+0x5310c4e],ecx        # 531368a <_end+0x530d672>
    2a3c:	00 00                	add    BYTE PTR [rax],al
    2a3e:	01 0d 4f 0c 51 05    	add    DWORD PTR [rip+0x5510c4f],ecx        # 5513693 <_end+0x550d67b>
    2a44:	00 00                	add    BYTE PTR [rax],al
    2a46:	01 0d 50 0c 74 05    	add    DWORD PTR [rip+0x5740c50],ecx        # 574369c <_end+0x573d684>
    2a4c:	00 00                	add    BYTE PTR [rax],al
    2a4e:	01 0d 51 0c 97 05    	add    DWORD PTR [rip+0x5970c51],ecx        # 59736a5 <_end+0x596d68d>
    2a54:	00 00                	add    BYTE PTR [rax],al
    2a56:	01 0d 53 0c ad 05    	add    DWORD PTR [rip+0x5ad0c53],ecx        # 5ad36af <_end+0x5acd697>
    2a5c:	00 00                	add    BYTE PTR [rax],al
    2a5e:	01 0d 54 0c d2 05    	add    DWORD PTR [rip+0x5d20c54],ecx        # 5d236b8 <_end+0x5d1d6a0>
    2a64:	00 00                	add    BYTE PTR [rax],al
    2a66:	04 02                	add    al,0x2
    2a68:	04 00                	add    al,0x0
    2a6a:	00 00                	add    BYTE PTR [rax],al
    2a6c:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    2a6f:	04 c8                	add    al,0xc8
    2a71:	02 00                	add    al,BYTE PTR [rax]
    2a73:	00 30                	add    BYTE PTR [rax],dh
    2a75:	40 08 00             	rex or BYTE PTR [rax],al
    2a78:	00 10                	add    BYTE PTR [rax],dl
    2a7a:	0e                   	(bad)
    2a7b:	07                   	(bad)
    2a7c:	10 52 08             	adc    BYTE PTR [rdx+0x8],dl
    2a7f:	00 00                	add    BYTE PTR [rax],al
    2a81:	0e                   	(bad)
    2a82:	a3 03 00 00 0e 08 0b 	movabs ds:0x8c0b080e000003,eax
    2a89:	8c 00 
    2a8b:	00 00                	add    BYTE PTR [rax],al
    2a8d:	00 0e                	add    BYTE PTR [rsi],cl
    2a8f:	e5 05                	in     eax,0x5
    2a91:	00 00                	add    BYTE PTR [rax],al
    2a93:	0e                   	(bad)
    2a94:	09 0e                	or     DWORD PTR [rsi],ecx
    2a96:	a9 00 00 00 08       	test   eax,0x8000000
    2a9b:	0e                   	(bad)
    2a9c:	ea                   	(bad)
    2a9d:	05 00 00 0e 0a       	add    eax,0xa0e0000
    2aa2:	0e                   	(bad)
    2aa3:	a9 00 00 00 0c       	test   eax,0xc000000
    2aa8:	00 06                	add    BYTE PTR [rsi],al
    2aaa:	40 08 00             	rex or BYTE PTR [rax],al
    2aad:	00 0e                	add    BYTE PTR [rsi],cl
    2aaf:	0b 03                	or     eax,DWORD PTR [rbx]
    2ab1:	1d 08 00 00 1e       	sbb    eax,0x1e000008
    2ab6:	ab                   	stos   DWORD PTR es:[rdi],eax
    2ab7:	08 00                	or     BYTE PTR [rax],al
    2ab9:	00 a8 a9 00 00 00    	add    BYTE PTR [rax+0xa9],ch
    2abf:	bd 08 00 00 19       	mov    ebp,0x19000008
    2ac4:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    2ac7:	00 a8 24 a9 00 00    	add    BYTE PTR [rax+0xa924],ch
    2acd:	00 19                	add    BYTE PTR [rcx],bl
    2acf:	76 00                	jbe    2ad1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x51>
    2ad1:	a8 32                	test   al,0x32
    2ad3:	a9 00 00 00 12       	test   eax,0x12000000
    2ad8:	8b 07                	mov    eax,DWORD PTR [rdi]
    2ada:	00 00                	add    BYTE PTR [rax],al
    2adc:	a9 a9 00 00 00       	test   eax,0xa9
    2ae1:	12 86 07 00 00 aa    	adc    al,BYTE PTR [rsi-0x55fffff9]
    2ae7:	a9 00 00 00 1f       	test   eax,0x1f000000
    2aec:	74 6d                	je     2b5b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xdb>
    2aee:	70 00                	jo     2af0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x70>
    2af0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2af1:	b5 00                	mov    ch,0x0
    2af3:	00 00                	add    BYTE PTR [rax],al
    2af5:	12 9c 07 00 00 ae b5 	adc    bl,BYTE PTR [rdi+rax*1-0x4a520000]
    2afc:	00 00                	add    BYTE PTR [rax],al
    2afe:	00 12                	add    BYTE PTR [rdx],dl
    2b00:	38 09                	cmp    BYTE PTR [rcx],cl
    2b02:	00 00                	add    BYTE PTR [rax],al
    2b04:	b6 a9                	mov    dh,0xa9
    2b06:	00 00                	add    BYTE PTR [rax],al
    2b08:	00 31                	add    BYTE PTR [rcx],dh
    2b0a:	1f                   	(bad)
    2b0b:	69 00 b0 64 00 00    	imul   eax,DWORD PTR [rax],0x64b0
    2b11:	00 00                	add    BYTE PTR [rax],al
    2b13:	00 1e                	add    BYTE PTR [rsi],bl
    2b15:	90                   	nop
    2b16:	07                   	(bad)
    2b17:	00 00                	add    BYTE PTR [rax],al
    2b19:	9e                   	sahf
    2b1a:	a9 00 00 00 d7       	test   eax,0xd7000000
    2b1f:	08 00                	or     BYTE PTR [rax],al
    2b21:	00 19                	add    BYTE PTR [rcx],bl
    2b23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b24:	75 6d                	jne    2b93 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x113>
    2b26:	00 9e 26 a9 00 00    	add    BYTE PTR [rsi+0xa926],bl
    2b2c:	00 00                	add    BYTE PTR [rax],al
    2b2e:	0c b5                	or     al,0xb5
    2b30:	08 00                	or     BYTE PTR [rax],al
    2b32:	00 8f 5b 08 00 00    	add    BYTE PTR [rdi+0x85b],cl
    2b38:	a9 00 00 00 70       	test   eax,0x70000000
    2b3d:	1e                   	(bad)
    2b3e:	00 00                	add    BYTE PTR [rax],al
    2b40:	00 00                	add    BYTE PTR [rax],al
    2b42:	00 00                	add    BYTE PTR [rax],al
    2b44:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    2b47:	00 00                	add    BYTE PTR [rax],al
    2b49:	00 00                	add    BYTE PTR [rax],al
    2b4b:	00 01                	add    BYTE PTR [rcx],al
    2b4d:	9c                   	pushf
    2b4e:	4b 09 00             	rex.WXB or QWORD PTR [r8],rax
    2b51:	00 0d a3 03 00 00    	add    BYTE PTR [rip+0x3a3],cl        # 2efa <_Z4testPFj8string_tE9Filenames8TestDataj+0x1a>
    2b57:	8f                   	(bad)
    2b58:	21 52 08             	and    DWORD PTR [rdx+0x8],edx
    2b5b:	00 00                	add    BYTE PTR [rax],al
    2b5d:	51                   	push   rcx
    2b5e:	07                   	(bad)
    2b5f:	00 00                	add    BYTE PTR [rax],al
    2b61:	4f 07                	rex.WRXB (bad)
    2b63:	00 00                	add    BYTE PTR [rax],al
    2b65:	03 e5                	add    esp,ebp
    2b67:	05 00 00 90 0e       	add    eax,0xe900000
    2b6c:	a9 00 00 00 64       	test   eax,0x64000000
    2b71:	07                   	(bad)
    2b72:	00 00                	add    BYTE PTR [rax],al
    2b74:	5e                   	pop    rsi
    2b75:	07                   	(bad)
    2b76:	00 00                	add    BYTE PTR [rax],al
    2b78:	03 f3                	add    esi,ebx
    2b7a:	08 00                	or     BYTE PTR [rax],al
    2b7c:	00 91 0e a9 00 00    	add    BYTE PTR [rcx+0xa90e],dl
    2b82:	00 87 07 00 00 7b    	add    BYTE PTR [rdi+0x7b000007],al
    2b88:	07                   	(bad)
    2b89:	00 00                	add    BYTE PTR [rax],al
    2b8b:	0f e8 01             	psubsb mm0,QWORD PTR [rcx]
    2b8e:	00 00                	add    BYTE PTR [rax],al
    2b90:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2b93:	92                   	xchg   edx,eax
    2b94:	64 00 00             	add    BYTE PTR fs:[rax],al
    2b97:	00 bf 07 00 00 bd    	add    BYTE PTR [rdi-0x42fffff9],bh
    2b9d:	07                   	(bad)
    2b9e:	00 00                	add    BYTE PTR [rax],al
    2ba0:	00 00                	add    BYTE PTR [rax],al
    2ba2:	0c 49                	or     al,0x49
    2ba4:	08 00                	or     BYTE PTR [rax],al
    2ba6:	00 81 76 08 00 00    	add    BYTE PTR [rcx+0x876],al
    2bac:	a9 00 00 00 f0       	test   eax,0xf0000000
    2bb1:	1d 00 00 00 00       	sbb    eax,0x0
    2bb6:	00 00                	add    BYTE PTR [rax],al
    2bb8:	76 00                	jbe    2bba <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x13a>
    2bba:	00 00                	add    BYTE PTR [rax],al
    2bbc:	00 00                	add    BYTE PTR [rax],al
    2bbe:	00 00                	add    BYTE PTR [rax],al
    2bc0:	01 9c c7 09 00 00 0d 	add    DWORD PTR [rdi+rax*8+0xd000009],ebx
    2bc7:	a3 03 00 00 81 25 52 	movabs ds:0x8522581000003,eax
    2bce:	08 00 
    2bd0:	00 ca                	add    dl,cl
    2bd2:	07                   	(bad)
    2bd3:	00 00                	add    BYTE PTR [rax],al
    2bd5:	c8 07 00 00          	enter  0x7,0x0
    2bd9:	0a 41 00             	or     al,BYTE PTR [rcx+0x0]
    2bdc:	82                   	(bad)
    2bdd:	a9 00 00 00 df       	test   eax,0xdf000000
    2be2:	07                   	(bad)
    2be3:	00 00                	add    BYTE PTR [rax],al
    2be5:	d7                   	xlat   BYTE PTR ds:[rbx]
    2be6:	07                   	(bad)
    2be7:	00 00                	add    BYTE PTR [rax],al
    2be9:	0a 42 00             	or     al,BYTE PTR [rdx+0x0]
    2bec:	83 a9 00 00 00 08 08 	sub    DWORD PTR [rcx+0x8000000],0x8
    2bf3:	00 00                	add    BYTE PTR [rax],al
    2bf5:	fe 07                	inc    BYTE PTR [rdi]
    2bf7:	00 00                	add    BYTE PTR [rax],al
    2bf9:	32 d7                	xor    dl,bh
    2bfb:	08 00                	or     BYTE PTR [rax],al
    2bfd:	00 01                	add    BYTE PTR [rcx],al
    2bff:	84 0e                	test   BYTE PTR [rsi],cl
    2c01:	a9 00 00 00 f1       	test   eax,0xf1000000
    2c06:	ff 0f                	dec    DWORD PTR [rdi]
    2c08:	d8 01                	fadd   DWORD PTR [rcx]
    2c0a:	00 00                	add    BYTE PTR [rax],al
    2c0c:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2c0f:	86 64 00 00          	xchg   BYTE PTR [rax+rax*1+0x0],ah
    2c13:	00 37                	add    BYTE PTR [rdi],dh
    2c15:	08 00                	or     BYTE PTR [rax],al
    2c17:	00 33                	add    BYTE PTR [rbx],dh
    2c19:	08 00                	or     BYTE PTR [rax],al
    2c1b:	00 00                	add    BYTE PTR [rax],al
    2c1d:	00 0c 78             	add    BYTE PTR [rax+rdi*2],cl
    2c20:	07                   	(bad)
    2c21:	00 00                	add    BYTE PTR [rax],al
    2c23:	6b ad 07 00 00 a9 00 	imul   ebp,DWORD PTR [rbp-0x56fffff9],0x0
    2c2a:	00 00                	add    BYTE PTR [rax],al
    2c2c:	80 1c 00 00          	sbb    BYTE PTR [rax+rax*1],0x0
    2c30:	00 00                	add    BYTE PTR [rax],al
    2c32:	00 00                	add    BYTE PTR [rax],al
    2c34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c35:	01 00                	add    DWORD PTR [rax],eax
    2c37:	00 00                	add    BYTE PTR [rax],al
    2c39:	00 00                	add    BYTE PTR [rax],al
    2c3b:	00 01                	add    BYTE PTR [rcx],al
    2c3d:	9c                   	pushf
    2c3e:	82                   	(bad)
    2c3f:	0a 00                	or     al,BYTE PTR [rax]
    2c41:	00 0d a3 03 00 00    	add    BYTE PTR [rip+0x3a3],cl        # 2fea <_Z7testAllPKcjS0_+0xba>
    2c47:	6b 21 52             	imul   esp,DWORD PTR [rcx],0x52
    2c4a:	08 00                	or     BYTE PTR [rax],al
    2c4c:	00 4a 08             	add    BYTE PTR [rdx+0x8],cl
    2c4f:	00 00                	add    BYTE PTR [rax],al
    2c51:	48 08 00             	rex.W or BYTE PTR [rax],al
    2c54:	00 03                	add    BYTE PTR [rbx],al
    2c56:	e5 05                	in     eax,0x5
    2c58:	00 00                	add    BYTE PTR [rax],al
    2c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c5b:	0e                   	(bad)
    2c5c:	a9 00 00 00 6b       	test   eax,0x6b000000
    2c61:	08 00                	or     BYTE PTR [rax],al
    2c63:	00 57 08             	add    BYTE PTR [rdi+0x8],dl
    2c66:	00 00                	add    BYTE PTR [rax],al
    2c68:	03 33                	add    esi,DWORD PTR [rbx]
    2c6a:	07                   	(bad)
    2c6b:	00 00                	add    BYTE PTR [rax],al
    2c6d:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c6e:	0e                   	(bad)
    2c6f:	a9 00 00 00 f0       	test   eax,0xf0000000
    2c74:	08 00                	or     BYTE PTR [rax],al
    2c76:	00 c4                	add    ah,al
    2c78:	08 00                	or     BYTE PTR [rax],al
    2c7a:	00 03                	add    BYTE PTR [rbx],al
    2c7c:	c8 07 00 00          	enter  0x7,0x0
    2c80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c81:	09 64 00 00          	or     DWORD PTR [rax+rax*1+0x0],esp
    2c85:	00 11                	add    BYTE PTR [rcx],dl
    2c87:	0a 00                	or     al,BYTE PTR [rax]
    2c89:	00 07                	add    BYTE PTR [rdi],al
    2c8b:	0a 00                	or     al,BYTE PTR [rax]
    2c8d:	00 20                	add    BYTE PTR [rax],ah
    2c8f:	b3 01                	mov    bl,0x1
    2c91:	00 00                	add    BYTE PTR [rax],al
    2c93:	51                   	push   rcx
    2c94:	0a 00                	or     al,BYTE PTR [rax]
    2c96:	00 0a                	add    BYTE PTR [rdx],cl
    2c98:	69 00 76 64 00 00    	imul   eax,DWORD PTR [rax],0x6476
    2c9e:	00 3e                	add    BYTE PTR [rsi],bh
    2ca0:	0a 00                	or     al,BYTE PTR [rax]
    2ca2:	00 38                	add    BYTE PTR [rax],bh
    2ca4:	0a 00                	or     al,BYTE PTR [rax]
    2ca6:	00 00                	add    BYTE PTR [rax],al
    2ca8:	20 c3                	and    bl,al
    2caa:	01 00                	add    DWORD PTR [rax],eax
    2cac:	00 6b 0a             	add    BYTE PTR [rbx+0xa],ch
    2caf:	00 00                	add    BYTE PTR [rax],al
    2cb1:	0a 69 00             	or     ch,BYTE PTR [rcx+0x0]
    2cb4:	79 64                	jns    2d1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x29a>
    2cb6:	00 00                	add    BYTE PTR [rax],al
    2cb8:	00 62 0a             	add    BYTE PTR [rdx+0xa],ah
    2cbb:	00 00                	add    BYTE PTR [rax],al
    2cbd:	56                   	push   rsi
    2cbe:	0a 00                	or     al,BYTE PTR [rax]
    2cc0:	00 00                	add    BYTE PTR [rax],al
    2cc2:	21 01                	and    DWORD PTR [rcx],eax
    2cc4:	1d 00 00 00 00       	sbb    eax,0x0
    2cc9:	00 00                	add    BYTE PTR [rax],al
    2ccb:	01 30                	add    DWORD PTR [rax],esi
    2ccd:	21 e3                	and    ebx,esp
    2ccf:	1d 00 00 00 00       	sbb    eax,0x0
    2cd4:	00 00                	add    BYTE PTR [rax],al
    2cd6:	01 30                	add    DWORD PTR [rax],esi
    2cd8:	00 0c 95 08 00 00 3d 	add    BYTE PTR [rdx*4+0x3d000008],cl
    2cdf:	f8                   	clc
    2ce0:	08 00                	or     BYTE PTR [rax],al
    2ce2:	00 a9 00 00 00 d0    	add    BYTE PTR [rcx-0x30000000],ch
    2ce8:	1b 00                	sbb    eax,DWORD PTR [rax]
    2cea:	00 00                	add    BYTE PTR [rax],al
    2cec:	00 00                	add    BYTE PTR [rax],al
    2cee:	00 a4 00 00 00 00 00 	add    BYTE PTR [rax+rax*1+0x0],ah
    2cf5:	00 00                	add    BYTE PTR [rax],al
    2cf7:	01 9c 2c 0b 00 00 0d 	add    DWORD PTR [rsp+rbp*1+0xd00000b],ebx
    2cfe:	a3 03 00 00 3d 25 52 	movabs ds:0x852253d000003,eax
    2d05:	08 00 
    2d07:	00 a7 0a 00 00 a5    	add    BYTE PTR [rdi-0x5afffff6],ah
    2d0d:	0a 00                	or     al,BYTE PTR [rax]
    2d0f:	00 1a                	add    BYTE PTR [rdx],bl
    2d11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d12:	75 6d                	jne    2d81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x301>
    2d14:	00 3e                	add    BYTE PTR [rsi],bh
    2d16:	a9 00 00 00 95       	test   eax,0x95000000
    2d1b:	e9 d1 5b 13 e6       	jmp    ffffffffe61388f1 <_end+0xffffffffe61328d9>
    2d20:	07                   	(bad)
    2d21:	00 00                	add    BYTE PTR [rax],al
    2d23:	3f                   	(bad)
    2d24:	0e                   	(bad)
    2d25:	a9 00 00 00 00       	test   eax,0x0
    2d2a:	13 a7 07 00 00 40    	adc    esp,DWORD PTR [rdi+0x40000007]
    2d30:	0e                   	(bad)
    2d31:	9d                   	popf
    2d32:	00 00                	add    BYTE PTR [rax],al
    2d34:	00 18                	add    BYTE PTR [rax],bl
    2d36:	03 ea                	add    ebp,edx
    2d38:	05 00 00 41 0e       	add    eax,0xe410000
    2d3d:	a9 00 00 00 bc       	test   eax,0xbc000000
    2d42:	0a 00                	or     al,BYTE PTR [rax]
    2d44:	00 b4 0a 00 00 03 d1 	add    BYTE PTR [rdx+rcx*1-0x2efd0000],dh
    2d4b:	14 00                	adc    al,0x0
    2d4d:	00 42 14             	add    BYTE PTR [rdx+0x14],al
    2d50:	2c 0b                	sub    al,0xb
    2d52:	00 00                	add    BYTE PTR [rax],al
    2d54:	e3 0a                	jrcxz  2d60 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e0>
    2d56:	00 00                	add    BYTE PTR [rax],al
    2d58:	dd 0a                	fisttp QWORD PTR [rdx]
    2d5a:	00 00                	add    BYTE PTR [rax],al
    2d5c:	03 e5                	add    esp,ebp
    2d5e:	05 00 00 44 0e       	add    eax,0xe440000
    2d63:	a9 00 00 00 0b       	test   eax,0xb000000
    2d68:	0b 00                	or     eax,DWORD PTR [rax]
    2d6a:	00 fb                	add    bl,bh
    2d6c:	0a 00                	or     al,BYTE PTR [rax]
    2d6e:	00 03                	add    BYTE PTR [rbx],al
    2d70:	e1 08                	loope  2d7a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2fa>
    2d72:	00 00                	add    BYTE PTR [rax],al
    2d74:	45 0e                	rex.RB (bad)
    2d76:	a9 00 00 00 5f       	test   eax,0x5f000000
    2d7b:	0b 00                	or     eax,DWORD PTR [rax]
    2d7d:	00 49 0b             	add    BYTE PTR [rcx+0xb],cl
    2d80:	00 00                	add    BYTE PTR [rax],al
    2d82:	00 08                	add    BYTE PTR [rax],cl
    2d84:	2e 00 00             	cs add BYTE PTR [rax],al
    2d87:	00 0c 12             	add    BYTE PTR [rdx+rdx*1],cl
    2d8a:	08 00                	or     BYTE PTR [rax],al
    2d8c:	00 28                	add    BYTE PTR [rax],ch
    2d8e:	eb 07                	jmp    2d97 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x317>
    2d90:	00 00                	add    BYTE PTR [rax],al
    2d92:	a9 00 00 00 90       	test   eax,0x90000000
    2d97:	1b 00                	sbb    eax,DWORD PTR [rax]
    2d99:	00 00                	add    BYTE PTR [rax],al
    2d9b:	00 00                	add    BYTE PTR [rax],al
    2d9d:	00 31                	add    BYTE PTR [rcx],dh
    2d9f:	00 00                	add    BYTE PTR [rax],al
    2da1:	00 00                	add    BYTE PTR [rax],al
    2da3:	00 00                	add    BYTE PTR [rax],al
    2da5:	00 01                	add    BYTE PTR [rcx],al
    2da7:	9c                   	pushf
    2da8:	b0 0c                	mov    al,0xc
    2daa:	00 00                	add    BYTE PTR [rax],al
    2dac:	0d a3 03 00 00       	or     eax,0x3a3
    2db1:	28 2d 52 08 00 00    	sub    BYTE PTR [rip+0x852],ch        # 3609 <_Z7testAllPKcjS0_+0x6d9>
    2db7:	1e                   	(bad)
    2db8:	0c 00                	or     al,0x0
    2dba:	00 1c 0c             	add    BYTE PTR [rsp+rcx*1],bl
    2dbd:	00 00                	add    BYTE PTR [rax],al
    2dbf:	03 e5                	add    esp,ebp
    2dc1:	05 00 00 29 0e       	add    eax,0xe290000
    2dc6:	a9 00 00 00 2d       	test   eax,0x2d000000
    2dcb:	0c 00                	or     al,0x0
    2dcd:	00 2b                	add    BYTE PTR [rbx],ch
    2dcf:	0c 00                	or     al,0x0
    2dd1:	00 13                	add    BYTE PTR [rbx],dl
    2dd3:	33 07                	xor    eax,DWORD PTR [rdi]
    2dd5:	00 00                	add    BYTE PTR [rax],al
    2dd7:	2a 0e                	sub    cl,BYTE PTR [rsi]
    2dd9:	a9 00 00 00 00       	test   eax,0x0
    2dde:	33 63 72             	xor    esp,DWORD PTR [rbx+0x72]
    2de1:	63 00                	movsxd eax,DWORD PTR [rax]
    2de3:	01 2b                	add    DWORD PTR [rbx],ebp
    2de5:	0e                   	(bad)
    2de6:	b5 00                	mov    ch,0x0
    2de8:	00 00                	add    BYTE PTR [rax],al
    2dea:	11 11                	adc    DWORD PTR [rcx],edx
    2dec:	11 21                	adc    DWORD PTR [rcx],esp
    2dee:	11 12                	adc    DWORD PTR [rdx],edx
    2df0:	12 12                	adc    dl,BYTE PTR [rdx]
    2df2:	03 b5 03 00 00 2d    	add    esi,DWORD PTR [rbp+0x2d000003]
    2df8:	0e                   	(bad)
    2df9:	b5 00                	mov    ch,0x0
    2dfb:	00 00                	add    BYTE PTR [rax],al
    2dfd:	3a 0c 00             	cmp    cl,BYTE PTR [rax+rax*1]
    2e00:	00 36                	add    BYTE PTR [rsi],dh
    2e02:	0c 00                	or     al,0x0
    2e04:	00 03                	add    BYTE PTR [rbx],al
    2e06:	bb 03 00 00 2e       	mov    ebx,0x2e000003
    2e0b:	0e                   	(bad)
    2e0c:	b5 00                	mov    ch,0x0
    2e0e:	00 00                	add    BYTE PTR [rax],al
    2e10:	4e 0c 00             	rex.WRX or al,0x0
    2e13:	00 4a 0c             	add    BYTE PTR [rdx+0xc],cl
    2e16:	00 00                	add    BYTE PTR [rax],al
    2e18:	03 c1                	add    eax,ecx
    2e1a:	03 00                	add    eax,DWORD PTR [rax]
    2e1c:	00 2f                	add    BYTE PTR [rdi],ch
    2e1e:	0e                   	(bad)
    2e1f:	b5 00                	mov    ch,0x0
    2e21:	00 00                	add    BYTE PTR [rax],al
    2e23:	62 0c 00             	(bad)
    2e26:	00 5e 0c             	add    BYTE PTR [rsi+0xc],bl
    2e29:	00 00                	add    BYTE PTR [rax],al
    2e2b:	03 c7                	add    eax,edi
    2e2d:	03 00                	add    eax,DWORD PTR [rax]
    2e2f:	00 30                	add    BYTE PTR [rax],dh
    2e31:	0e                   	(bad)
    2e32:	b5 00                	mov    ch,0x0
    2e34:	00 00                	add    BYTE PTR [rax],al
    2e36:	76 0c                	jbe    2e44 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3c4>
    2e38:	00 00                	add    BYTE PTR [rax],al
    2e3a:	72 0c                	jb     2e48 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3c8>
    2e3c:	00 00                	add    BYTE PTR [rax],al
    2e3e:	14 e6                	adc    al,0xe6
    2e40:	0e                   	(bad)
    2e41:	00 00                	add    BYTE PTR [rax],al
    2e43:	94                   	xchg   esp,eax
    2e44:	1b 00                	sbb    eax,DWORD PTR [rax]
    2e46:	00 00                	add    BYTE PTR [rax],al
    2e48:	00 00                	add    BYTE PTR [rax],al
    2e4a:	00 08                	add    BYTE PTR [rax],cl
    2e4c:	87 01                	xchg   DWORD PTR [rcx],eax
    2e4e:	00 00                	add    BYTE PTR [rax],al
    2e50:	33 1a                	xor    ebx,DWORD PTR [rdx]
    2e52:	1a 0c 00             	sbb    cl,BYTE PTR [rax+rax*1]
    2e55:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3d63 <_fini+0x1ef>
    2e5b:	88 0c 00             	mov    BYTE PTR [rax+rax*1],cl
    2e5e:	00 86 0c 00 00 05    	add    BYTE PTR [rsi+0x500000c],al
    2e64:	fc                   	cld
    2e65:	0e                   	(bad)
    2e66:	00 00                	add    BYTE PTR [rax],al
    2e68:	93                   	xchg   ebx,eax
    2e69:	0c 00                	or     al,0x0
    2e6b:	00 91 0c 00 00 00    	add    BYTE PTR [rcx+0xc],dl
    2e71:	14 e6                	adc    al,0xe6
    2e73:	0e                   	(bad)
    2e74:	00 00                	add    BYTE PTR [rax],al
    2e76:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2e77:	1b 00                	sbb    eax,DWORD PTR [rax]
    2e79:	00 00                	add    BYTE PTR [rax],al
    2e7b:	00 00                	add    BYTE PTR [rax],al
    2e7d:	00 02                	add    BYTE PTR [rdx],al
    2e7f:	92                   	xchg   edx,eax
    2e80:	01 00                	add    DWORD PTR [rax],eax
    2e82:	00 34 1a             	add    BYTE PTR [rdx+rbx*1],dh
    2e85:	4d 0c 00             	rex.WRB or al,0x0
    2e88:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3d96 <_fini+0x222>
    2e8e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2e8f:	0c 00                	or     al,0x0
    2e91:	00 a4 0c 00 00 05 fc 	add    BYTE PTR [rsp+rcx*1-0x3fb0000],ah
    2e98:	0e                   	(bad)
    2e99:	00 00                	add    BYTE PTR [rax],al
    2e9b:	b1 0c                	mov    cl,0xc
    2e9d:	00 00                	add    BYTE PTR [rax],al
    2e9f:	af                   	scas   eax,DWORD PTR es:[rdi]
    2ea0:	0c 00                	or     al,0x0
    2ea2:	00 00                	add    BYTE PTR [rax],al
    2ea4:	14 e6                	adc    al,0xe6
    2ea6:	0e                   	(bad)
    2ea7:	00 00                	add    BYTE PTR [rax],al
    2ea9:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2eaa:	1b 00                	sbb    eax,DWORD PTR [rax]
    2eac:	00 00                	add    BYTE PTR [rax],al
    2eae:	00 00                	add    BYTE PTR [rax],al
    2eb0:	00 02                	add    BYTE PTR [rdx],al
    2eb2:	9d                   	popf
    2eb3:	01 00                	add    DWORD PTR [rax],eax
    2eb5:	00 35 1a 80 0c 00    	add    BYTE PTR [rip+0xc801a],dh        # caed5 <_end+0xc4ebd>
    2ebb:	00 05 08 0f 00 00    	add    BYTE PTR [rip+0xf08],al        # 3dc9 <_fini+0x255>
    2ec1:	c4                   	(bad)
    2ec2:	0c 00                	or     al,0x0
    2ec4:	00 c2                	add    dl,al
    2ec6:	0c 00                	or     al,0x0
    2ec8:	00 05 fc 0e 00 00    	add    BYTE PTR [rip+0xefc],al        # 3dca <_fini+0x256>
    2ece:	cf                   	iret
    2ecf:	0c 00                	or     al,0x0
    2ed1:	00 cd                	add    ch,cl
    2ed3:	0c 00                	or     al,0x0
    2ed5:	00 00                	add    BYTE PTR [rax],al
    2ed7:	15 e6 0e 00 00       	adc    eax,0xee6
    2edc:	b3 1b                	mov    bl,0x1b
    2ede:	00 00                	add    BYTE PTR [rax],al
    2ee0:	00 00                	add    BYTE PTR [rax],al
    2ee2:	00 00                	add    BYTE PTR [rax],al
    2ee4:	02 a8 01 00 00 36    	add    ch,BYTE PTR [rax+0x36000001]
    2eea:	1a 05 08 0f 00 00    	sbb    al,BYTE PTR [rip+0xf08]        # 3df8 <_fini+0x284>
    2ef0:	e2 0c                	loop   2efe <_Z4testPFj8string_tE9Filenames8TestDataj+0x1e>
    2ef2:	00 00                	add    BYTE PTR [rax],al
    2ef4:	e0 0c                	loopne 2f02 <_Z4testPFj8string_tE9Filenames8TestDataj+0x22>
    2ef6:	00 00                	add    BYTE PTR [rax],al
    2ef8:	05 fc 0e 00 00       	add    eax,0xefc
    2efd:	ed                   	in     eax,dx
    2efe:	0c 00                	or     al,0x0
    2f00:	00 eb                	add    bl,ch
    2f02:	0c 00                	or     al,0x0
    2f04:	00 00                	add    BYTE PTR [rax],al
    2f06:	00 0c c3             	add    BYTE PTR [rbx+rax*8],cl
    2f09:	08 00                	or     BYTE PTR [rax],al
    2f0b:	00 1a                	add    BYTE PTR [rdx],bl
    2f0d:	17                   	(bad)
    2f0e:	09 00                	or     DWORD PTR [rax],eax
    2f10:	00 a9 00 00 00 40    	add    BYTE PTR [rcx+0x40000000],ch
    2f16:	1b 00                	sbb    eax,DWORD PTR [rax]
    2f18:	00 00                	add    BYTE PTR [rax],al
    2f1a:	00 00                	add    BYTE PTR [rax],al
    2f1c:	00 4b 00             	add    BYTE PTR [rbx+0x0],cl
    2f1f:	00 00                	add    BYTE PTR [rax],al
    2f21:	00 00                	add    BYTE PTR [rax],al
    2f23:	00 00                	add    BYTE PTR [rax],al
    2f25:	01 9c 74 0d 00 00 0d 	add    DWORD PTR [rsp+rsi*2+0xd00000d],ebx
    2f2c:	a3 03 00 00 1a 27 52 	movabs ds:0x852271a000003,eax
    2f33:	08 00 
    2f35:	00 00                	add    BYTE PTR [rax],al
    2f37:	0d 00 00 fe 0c       	or     eax,0xcfe0000
    2f3c:	00 00                	add    BYTE PTR [rax],al
    2f3e:	03 e5                	add    esp,ebp
    2f40:	05 00 00 1b 0e       	add    eax,0xe1b0000
    2f45:	a9 00 00 00 13       	test   eax,0x13000000
    2f4a:	0d 00 00 0d 0d       	or     eax,0xd0d0000
    2f4f:	00 00                	add    BYTE PTR [rax],al
    2f51:	03 33                	add    esi,DWORD PTR [rbx]
    2f53:	07                   	(bad)
    2f54:	00 00                	add    BYTE PTR [rax],al
    2f56:	1c 0e                	sbb    al,0xe
    2f58:	a9 00 00 00 33       	test   eax,0x33000000
    2f5d:	0d 00 00 2b 0d       	or     eax,0xd2b0000
    2f62:	00 00                	add    BYTE PTR [rax],al
    2f64:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    2f67:	63 00                	movsxd eax,DWORD PTR [rax]
    2f69:	1d a9 00 00 00       	sbb    eax,0xa9
    2f6e:	11 11                	adc    DWORD PTR [rcx],edx
    2f70:	11 11                	adc    DWORD PTR [rcx],edx
    2f72:	03 ea                	add    ebp,edx
    2f74:	05 00 00 1e 09       	add    eax,0x91e0000
    2f79:	64 00 00             	add    BYTE PTR fs:[rax],al
    2f7c:	00 5a 0d             	add    BYTE PTR [rdx+0xd],bl
    2f7f:	00 00                	add    BYTE PTR [rax],al
    2f81:	54                   	push   rsp
    2f82:	0d 00 00 0f 6c       	or     eax,0x6c0f0000
    2f87:	01 00                	add    DWORD PTR [rax],eax
    2f89:	00 0a                	add    BYTE PTR [rdx],cl
    2f8b:	69 00 20 64 00 00    	imul   eax,DWORD PTR [rax],0x6420
    2f91:	00 76 0d             	add    BYTE PTR [rsi+0xd],dh
    2f94:	00 00                	add    BYTE PTR [rax],al
    2f96:	72 0d                	jb     2fa5 <_Z7testAllPKcjS0_+0x75>
    2f98:	00 00                	add    BYTE PTR [rax],al
    2f9a:	15 15 0f 00 00       	adc    eax,0xf15
    2f9f:	70 1b                	jo     2fbc <_Z7testAllPKcjS0_+0x8c>
    2fa1:	00 00                	add    BYTE PTR [rax],al
    2fa3:	00 00                	add    BYTE PTR [rax],al
    2fa5:	00 00                	add    BYTE PTR [rax],al
    2fa7:	02 77 01             	add    dh,BYTE PTR [rdi+0x1]
    2faa:	00 00                	add    BYTE PTR [rax],al
    2fac:	22 1e                	and    bl,BYTE PTR [rsi]
    2fae:	05 33 0f 00 00       	add    eax,0xf33
    2fb3:	8b 0d 00 00 87 0d    	mov    ecx,DWORD PTR [rip+0xd870000]        # d872fb9 <_end+0xd86cfa1>
    2fb9:	00 00                	add    BYTE PTR [rax],al
    2fbb:	05 27 0f 00 00       	add    eax,0xf27
    2fc0:	9e                   	sahf
    2fc1:	0d 00 00 9c 0d       	or     eax,0xd9c0000
    2fc6:	00 00                	add    BYTE PTR [rax],al
    2fc8:	00 00                	add    BYTE PTR [rax],al
    2fca:	00 0c c7             	add    BYTE PTR [rdi+rax*8],cl
    2fcd:	08 00                	or     BYTE PTR [rax],al
    2fcf:	00 0b                	add    BYTE PTR [rbx],cl
    2fd1:	2c 08                	sub    al,0x8
    2fd3:	00 00                	add    BYTE PTR [rax],al
    2fd5:	a9 00 00 00 20       	test   eax,0x20000000
    2fda:	1a 00                	sbb    al,BYTE PTR [rax]
    2fdc:	00 00                	add    BYTE PTR [rax],al
    2fde:	00 00                	add    BYTE PTR [rax],al
    2fe0:	00 19                	add    BYTE PTR [rcx],bl
    2fe2:	01 00                	add    DWORD PTR [rax],eax
    2fe4:	00 00                	add    BYTE PTR [rax],al
    2fe6:	00 00                	add    BYTE PTR [rax],al
    2fe8:	00 01                	add    BYTE PTR [rcx],al
    2fea:	9c                   	pushf
    2feb:	e6 0e                	out    0xe,al
    2fed:	00 00                	add    BYTE PTR [rax],al
    2fef:	0d a3 03 00 00       	or     eax,0x3a3
    2ff4:	0b 23                	or     esp,DWORD PTR [rbx]
    2ff6:	52                   	push   rdx
    2ff7:	08 00                	or     BYTE PTR [rax],al
    2ff9:	00 ad 0d 00 00 ab    	add    BYTE PTR [rbp-0x54fffff3],ch
    2fff:	0d 00 00 03 e5       	or     eax,0xe5030000
    3004:	05 00 00 0c 0e       	add    eax,0xe0c0000
    3009:	a9 00 00 00 be       	test   eax,0xbe000000
    300e:	0d 00 00 b8 0d       	or     eax,0xdb80000
    3013:	00 00                	add    BYTE PTR [rax],al
    3015:	03 33                	add    esi,DWORD PTR [rbx]
    3017:	07                   	(bad)
    3018:	00 00                	add    BYTE PTR [rax],al
    301a:	0d 0e a9 00 00       	or     eax,0xa90e
    301f:	00 dd                	add    ch,bl
    3021:	0d 00 00 d3 0d       	or     eax,0xdd30000
    3026:	00 00                	add    BYTE PTR [rax],al
    3028:	1a 63 72             	sbb    ah,BYTE PTR [rbx+0x72]
    302b:	63 00                	movsxd eax,DWORD PTR [rax]
    302d:	0e                   	(bad)
    302e:	a9 00 00 00 11       	test   eax,0x11000000
    3033:	11 11                	adc    DWORD PTR [rcx],edx
    3035:	11 13                	adc    DWORD PTR [rbx],edx
    3037:	c8 07 00 00          	enter  0x7,0x0
    303b:	0f 09                	wbinvd
    303d:	64 00 00             	add    BYTE PTR fs:[rax],al
    3040:	00 00                	add    BYTE PTR [rax],al
    3042:	03 ea                	add    ebp,edx
    3044:	05 00 00 10 09       	add    eax,0x9100000
    3049:	64 00 00             	add    BYTE PTR fs:[rax],al
    304c:	00 06                	add    BYTE PTR [rsi],al
    304e:	0e                   	(bad)
    304f:	00 00                	add    BYTE PTR [rax],al
    3051:	00 0e                	add    BYTE PTR [rsi],cl
    3053:	00 00                	add    BYTE PTR [rax],al
    3055:	0f 38 01 00          	phaddw mm0,QWORD PTR [rax]
    3059:	00 0a                	add    BYTE PTR [rdx],cl
    305b:	69 00 12 64 00 00    	imul   eax,DWORD PTR [rax],0x6412
    3061:	00 1e                	add    BYTE PTR [rsi],bl
    3063:	0e                   	(bad)
    3064:	00 00                	add    BYTE PTR [rax],al
    3066:	1a 0e                	sbb    cl,BYTE PTR [rsi]
    3068:	00 00                	add    BYTE PTR [rax],al
    306a:	15 5e 08 00 00       	adc    eax,0x85e
    306f:	6b 1a 00             	imul   ebx,DWORD PTR [rdx],0x0
    3072:	00 00                	add    BYTE PTR [rax],al
    3074:	00 00                	add    BYTE PTR [rax],al
    3076:	00 01                	add    BYTE PTR [rcx],al
    3078:	40 01 00             	rex add DWORD PTR [rax],eax
    307b:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    307e:	05 6c 08 00 00       	add    eax,0x86c
    3083:	2f                   	(bad)
    3084:	0e                   	(bad)
    3085:	00 00                	add    BYTE PTR [rax],al
    3087:	2d 0e 00 00 05       	sub    eax,0x500000e
    308c:	77 08                	ja     3096 <_Z7testAllPKcjS0_+0x166>
    308e:	00 00                	add    BYTE PTR [rax],al
    3090:	41 0e                	rex.B (bad)
    3092:	00 00                	add    BYTE PTR [rax],al
    3094:	3b 0e                	cmp    ecx,DWORD PTR [rsi]
    3096:	00 00                	add    BYTE PTR [rax],al
    3098:	0f 40 01             	cmovo  eax,DWORD PTR [rcx]
    309b:	00 00                	add    BYTE PTR [rax],al
    309d:	10 80 08 00 00 5c    	adc    BYTE PTR [rax+0x5c000008],al
    30a3:	0e                   	(bad)
    30a4:	00 00                	add    BYTE PTR [rax],al
    30a6:	56                   	push   rsi
    30a7:	0e                   	(bad)
    30a8:	00 00                	add    BYTE PTR [rax],al
    30aa:	10 8a 08 00 00 0e    	adc    BYTE PTR [rdx+0xe000008],cl
    30b0:	12 00                	adc    al,BYTE PTR [rax]
    30b2:	00 0c 12             	add    BYTE PTR [rdx+rdx*1],cl
    30b5:	00 00                	add    BYTE PTR [rax],al
    30b7:	10 94 08 00 00 1d 12 	adc    BYTE PTR [rax+rcx*1+0x121d0000],dl
    30be:	00 00                	add    BYTE PTR [rax],al
    30c0:	1b 12                	sbb    edx,DWORD PTR [rdx]
    30c2:	00 00                	add    BYTE PTR [rax],al
    30c4:	10 9e 08 00 00 27    	adc    BYTE PTR [rsi+0x27000008],bl
    30ca:	12 00                	adc    al,BYTE PTR [rax]
    30cc:	00 25 12 00 00 34    	add    BYTE PTR [rip+0x34000012],ah        # 340030e4 <_end+0x33ffd0cc>
    30d2:	a8 08                	test   al,0x8
    30d4:	00 00                	add    BYTE PTR [rax],al
    30d6:	35 b2 08 00 00       	xor    eax,0x8b2
    30db:	4d 01 00             	add    QWORD PTR [r8],r8
    30de:	00 9a 0e 00 00 10    	add    BYTE PTR [rdx+0x1000000e],bl
    30e4:	b3 08                	mov    bl,0x8
    30e6:	00 00                	add    BYTE PTR [rax],al
    30e8:	39 12                	cmp    DWORD PTR [rdx],edx
    30ea:	00 00                	add    BYTE PTR [rax],al
    30ec:	35 12 00 00 00       	xor    eax,0x12
    30f1:	14 bd                	adc    al,0xbd
    30f3:	08 00                	or     BYTE PTR [rax],al
    30f5:	00 6b 1a             	add    BYTE PTR [rbx+0x1a],ch
    30f8:	00 00                	add    BYTE PTR [rax],al
    30fa:	00 00                	add    BYTE PTR [rax],al
    30fc:	00 00                	add    BYTE PTR [rax],al
    30fe:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    3101:	00 00                	add    BYTE PTR [rax],al
    3103:	a9 20 c0 0e 00       	test   eax,0xec020
    3108:	00 05 cb 08 00 00    	add    BYTE PTR [rip+0x8cb],al        # 39d9 <_Z27standartDeviationCollisionsP7HashMapf+0x199>
    310e:	5f                   	pop    rdi
    310f:	12 00                	adc    al,BYTE PTR [rax]
    3111:	00 49 12             	add    BYTE PTR [rcx+0x12],cl
    3114:	00 00                	add    BYTE PTR [rax],al
    3116:	00 15 bd 08 00 00    	add    BYTE PTR [rip+0x8bd],dl        # 39d9 <_Z27standartDeviationCollisionsP7HashMapf+0x199>
    311c:	e3 1a                	jrcxz  3138 <_Z7testAllPKcjS0_+0x208>
    311e:	00 00                	add    BYTE PTR [rax],al
    3120:	00 00                	add    BYTE PTR [rax],al
    3122:	00 00                	add    BYTE PTR [rax],al
    3124:	02 61 01             	add    ah,BYTE PTR [rcx+0x1]
    3127:	00 00                	add    BYTE PTR [rax],al
    3129:	b6 22                	mov    dh,0x22
    312b:	05 cb 08 00 00       	add    eax,0x8cb
    3130:	f0 13 00             	lock adc eax,DWORD PTR [rax]
    3133:	00 e2                	add    dl,ah
    3135:	13 00                	adc    eax,DWORD PTR [rax]
    3137:	00 00                	add    BYTE PTR [rax],al
    3139:	00 00                	add    BYTE PTR [rax],al
    313b:	00 00                	add    BYTE PTR [rax],al
    313d:	36 51                	ss push rcx
    313f:	07                   	(bad)
    3140:	00 00                	add    BYTE PTR [rax],al
    3142:	02 49 03             	add    cl,BYTE PTR [rcx+0x3]
    3145:	01 22                	add    DWORD PTR [rdx],esp
    3147:	03 00                	add    eax,DWORD PTR [rax]
    3149:	00 e0                	add    al,ah
    314b:	00 00                	add    BYTE PTR [rax],al
    314d:	00 03                	add    BYTE PTR [rbx],al
    314f:	15 0f 00 00 16       	adc    eax,0x1600000f
    3154:	5f                   	pop    rdi
    3155:	5f                   	pop    rdi
    3156:	43 00 49 03          	rex.XB add BYTE PTR [r9+0x3],cl
    315a:	23 e0                	and    esp,eax
    315c:	00 00                	add    BYTE PTR [rax],al
    315e:	00 16                	add    BYTE PTR [rsi],dl
    3160:	5f                   	pop    rdi
    3161:	5f                   	pop    rdi
    3162:	56                   	push   rsi
    3163:	00 49 03             	add    BYTE PTR [rcx+0x3],cl
    3166:	3b e0                	cmp    esp,eax
    3168:	00 00                	add    BYTE PTR [rax],al
    316a:	00 00                	add    BYTE PTR [rax],al
    316c:	37                   	(bad)
    316d:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    316e:	08 00                	or     BYTE PTR [rax],al
    3170:	00 02                	add    BYTE PTR [rdx],al
    3172:	42 03 01             	rex.X add eax,DWORD PTR [rcx]
    3175:	d2 07                	rol    BYTE PTR [rdi],cl
    3177:	00 00                	add    BYTE PTR [rax],al
    3179:	3c 00                	cmp    al,0x0
    317b:	00 00                	add    BYTE PTR [rax],al
    317d:	03 16                	add    edx,DWORD PTR [rsi]
    317f:	5f                   	pop    rdi
    3180:	5f                   	pop    rdi
    3181:	43 00 42 03          	rex.XB add BYTE PTR [r10+0x3],al
    3185:	1d 3c 00 00 00       	sbb    eax,0x3c
    318a:	16                   	(bad)
    318b:	5f                   	pop    rdi
    318c:	5f                   	pop    rdi
    318d:	56                   	push   rsi
    318e:	00 42 03             	add    BYTE PTR [rdx+0x3],al
    3191:	2f                   	(bad)
    3192:	3c 00                	cmp    al,0x0
    3194:	00 00                	add    BYTE PTR [rax],al
    3196:	00 00                	add    BYTE PTR [rax],al
    3198:	f2 16                	repnz (bad)
    319a:	00 00                	add    BYTE PTR [rax],al
    319c:	05 00 01 08 00       	add    eax,0x80100
    31a1:	0b 00                	or     eax,DWORD PTR [rax]
    31a3:	00 2c 14             	add    BYTE PTR [rsp+rdx*1],ch
    31a6:	01 00                	add    DWORD PTR [rax],eax
    31a8:	00 21                	add    BYTE PTR [rcx],ah
    31aa:	29 02                	sub    DWORD PTR [rdx],eax
    31ac:	00 00                	add    BYTE PTR [rax],al
    31ae:	00 00                	add    BYTE PTR [rax],al
    31b0:	00 00                	add    BYTE PTR [rax],al
    31b2:	c0 1e 00             	rcr    BYTE PTR [rsi],0x0
    31b5:	00 00                	add    BYTE PTR [rax],al
    31b7:	00 00                	add    BYTE PTR [rax],al
    31b9:	00 d3                	add    bl,dl
    31bb:	05 00 00 00 00       	add    eax,0x0
    31c0:	00 00                	add    BYTE PTR [rax],al
    31c2:	ac                   	lods   al,BYTE PTR ds:[rsi]
    31c3:	0f 00 00             	sldt   WORD PTR [rax]
    31c6:	0b d6                	or     edx,esi
    31c8:	0a 00                	or     al,BYTE PTR [rax]
    31ca:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    31cd:	17                   	(bad)
    31ce:	3a 00                	cmp    al,BYTE PTR [rax]
    31d0:	00 00                	add    BYTE PTR [rax],al
    31d2:	06                   	(bad)
    31d3:	08 07                	or     BYTE PTR [rdi],al
    31d5:	f3 00 00             	repz add BYTE PTR [rax],al
    31d8:	00 1b                	add    BYTE PTR [rbx],bl
    31da:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
    31e1:	00 00                	add    BYTE PTR [rax],al
    31e3:	00 07                	add    BYTE PTR [rdi],al
    31e5:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    31e8:	00 05 3d 09 66 00    	add    BYTE PTR [rip+0x66093d],al        # 663b2b <_end+0x65db13>
    31ee:	00 00                	add    BYTE PTR [rax],al
    31f0:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    31f3:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    31f5:	00 3e                	add    BYTE PTR [rsi],bh
    31f7:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    31fa:	00 00                	add    BYTE PTR [rax],al
    31fc:	04 00                	add    al,0x0
    31fe:	2d 04 05 69 6e       	sub    eax,0x6e690504
    3203:	74 00                	je     3205 <_Z7testAllPKcjS0_+0x2d5>
    3205:	0e                   	(bad)
    3206:	66 00 00             	data16 add BYTE PTR [rax],al
    3209:	00 0b                	add    BYTE PTR [rbx],cl
    320b:	de 02                	fiadd  WORD PTR [rdx]
    320d:	00 00                	add    BYTE PTR [rax],al
    320f:	05 3f 05 41 00       	add    eax,0x41053f
    3214:	00 00                	add    BYTE PTR [rax],al
    3216:	1b 10                	sbb    edx,DWORD PTR [rax]
    3218:	44 09 00             	or     DWORD PTR [rax],r8d
    321b:	00 00                	add    BYTE PTR [rax],al
    321d:	a3 00 00 00 07 49 02 	movabs ds:0x24907000000,eax
    3224:	00 00 
    3226:	05 45 0e a3 00       	add    eax,0xa30e45
    322b:	00 00                	add    BYTE PTR [rax],al
    322d:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    3230:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    3232:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    3235:	a3 00 00 00 08 00 06 	movabs ds:0x508060008000000,eax
    323c:	08 05 
    323e:	e5 00                	in     eax,0x0
    3240:	00 00                	add    BYTE PTR [rax],al
    3242:	0b 0a                	or     ecx,DWORD PTR [rdx]
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	00 05 47 05 7e 00    	add    BYTE PTR [rip+0x7e0547],al        # 7e3793 <_end+0x7dd77b>
    324c:	00 00                	add    BYTE PTR [rax],al
    324e:	1b 10                	sbb    edx,DWORD PTR [rax]
    3250:	4e b4 00             	rex.WRX mov spl,0x0
    3253:	00 00                	add    BYTE PTR [rax],al
    3255:	db 00                	fild   DWORD PTR [rax]
    3257:	00 00                	add    BYTE PTR [rax],al
    3259:	07                   	(bad)
    325a:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    325d:	00 05 4f 13 db 00    	add    BYTE PTR [rip+0xdb134f],al        # db45b2 <_end+0xdae59a>
    3263:	00 00                	add    BYTE PTR [rax],al
    3265:	00 1c 72             	add    BYTE PTR [rdx+rsi*2],bl
    3268:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    326a:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    326d:	db 00                	fild   DWORD PTR [rax]
    326f:	00 00                	add    BYTE PTR [rax],al
    3271:	08 00                	or     BYTE PTR [rax],al
    3273:	06                   	(bad)
    3274:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 335a <_Z7testAllPKcjS0_+0x42a>
    327a:	0b b5 00 00 00 05    	or     esi,DWORD PTR [rbp+0x5000000]
    3280:	51                   	push   rcx
    3281:	05 b6 00 00 00       	add    eax,0xb6
    3286:	06                   	(bad)
    3287:	02 07                	add    al,BYTE PTR [rdi]
    3289:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    328c:	00 0a                	add    BYTE PTR [rdx],cl
    328e:	06                   	(bad)
    328f:	01 00                	add    DWORD PTR [rax],eax
    3291:	00 2e                	add    BYTE PTR [rsi],ch
    3293:	f5                   	cmc
    3294:	00 00                	add    BYTE PTR [rax],al
    3296:	00 06                	add    BYTE PTR [rsi],al
    3298:	01 06                	add    DWORD PTR [rsi],eax
    329a:	08 02                	or     BYTE PTR [rdx],al
    329c:	00 00                	add    BYTE PTR [rax],al
    329e:	0e                   	(bad)
    329f:	ff 00                	inc    DWORD PTR [rax]
    32a1:	00 00                	add    BYTE PTR [rax],al
    32a3:	06                   	(bad)
    32a4:	01 08                	add    DWORD PTR [rax],ecx
    32a6:	ff 01                	inc    DWORD PTR [rcx]
    32a8:	00 00                	add    BYTE PTR [rax],al
    32aa:	06                   	(bad)
    32ab:	04 07                	add    al,0x7
    32ad:	f8                   	clc
    32ae:	00 00                	add    BYTE PTR [rax],al
    32b0:	00 06                	add    BYTE PTR [rsi],al
    32b2:	01 06                	add    DWORD PTR [rsi],eax
    32b4:	01 02                	add    DWORD PTR [rdx],eax
    32b6:	00 00                	add    BYTE PTR [rax],al
    32b8:	06                   	(bad)
    32b9:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 331a <_Z7testAllPKcjS0_+0x3ea>
    32bf:	0b a9 00 00 00 06    	or     ebp,DWORD PTR [rcx+0x6000000]
    32c5:	2a 16                	sub    dl,BYTE PTR [rsi]
    32c7:	12 01                	adc    al,BYTE PTR [rcx]
    32c9:	00 00                	add    BYTE PTR [rax],al
    32cb:	2f                   	(bad)
    32cc:	08 0a                	or     BYTE PTR [rdx],cl
    32ce:	ff 00                	inc    DWORD PTR [rax]
    32d0:	00 00                	add    BYTE PTR [rax],al
    32d2:	06                   	(bad)
    32d3:	08 07                	or     BYTE PTR [rdi],al
    32d5:	ee                   	out    dx,al
    32d6:	00 00                	add    BYTE PTR [rax],al
    32d8:	00 30                	add    BYTE PTR [rax],dh
    32da:	cf                   	iret
    32db:	02 00                	add    al,BYTE PTR [rax]
    32dd:	00 05 b4 03 0f 4e    	add    BYTE PTR [rip+0x4e0f03b4],al        # 4e0f3697 <_end+0x4e0ed67f>
    32e3:	01 00                	add    DWORD PTR [rax],eax
    32e5:	00 0a                	add    BYTE PTR [rdx],cl
    32e7:	53                   	push   rbx
    32e8:	01 00                	add    DWORD PTR [rax],eax
    32ea:	00 31                	add    BYTE PTR [rcx],dh
    32ec:	66 00 00             	data16 add BYTE PTR [rax],al
    32ef:	00 67 01             	add    BYTE PTR [rdi+0x1],ah
    32f2:	00 00                	add    BYTE PTR [rax],al
    32f4:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    32f7:	00 00                	add    BYTE PTR [rax],al
    32f9:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    32fc:	00 00                	add    BYTE PTR [rax],al
    32fe:	00 0a                	add    BYTE PTR [rdx],cl
    3300:	6c                   	ins    BYTE PTR es:[rdi],dx
    3301:	01 00                	add    DWORD PTR [rax],eax
    3303:	00 32                	add    BYTE PTR [rdx],dh
    3305:	33 73 74             	xor    esi,DWORD PTR [rbx+0x74]
    3308:	64 00 13             	add    BYTE PTR fs:[rbx],dl
    330b:	32 01                	xor    al,BYTE PTR [rcx]
    330d:	0b 3d 03 00 00 02    	or     edi,DWORD PTR [rip+0x2000003]        # 2003316 <_end+0x1ffd2fe>
    3313:	07                   	(bad)
    3314:	83 0b 72             	or     DWORD PTR [rbx],0x72
    3317:	00 00                	add    BYTE PTR [rax],al
    3319:	00 02                	add    BYTE PTR [rdx],al
    331b:	07                   	(bad)
    331c:	84 0b                	test   BYTE PTR [rbx],cl
    331e:	aa                   	stos   BYTE PTR es:[rdi],al
    331f:	00 00                	add    BYTE PTR [rax],al
    3321:	00 02                	add    BYTE PTR [rdx],al
    3323:	07                   	(bad)
    3324:	8a 0b                	mov    cl,BYTE PTR [rbx]
    3326:	3d 03 00 00 02       	cmp    eax,0x2000003
    332b:	07                   	(bad)
    332c:	8d 0b                	lea    ecx,[rbx]
    332e:	59                   	pop    rcx
    332f:	03 00                	add    eax,DWORD PTR [rax]
    3331:	00 02                	add    BYTE PTR [rdx],al
    3333:	07                   	(bad)
    3334:	90                   	nop
    3335:	0b 74 03 00          	or     esi,DWORD PTR [rbx+rax*1+0x0]
    3339:	00 02                	add    BYTE PTR [rdx],al
    333b:	07                   	(bad)
    333c:	91                   	xchg   ecx,eax
    333d:	0b 91 03 00 00 02    	or     edx,DWORD PTR [rcx+0x2000003]
    3343:	07                   	(bad)
    3344:	92                   	xchg   edx,eax
    3345:	0b a7 03 00 00 02    	or     esp,DWORD PTR [rdi+0x2000003]
    334b:	07                   	(bad)
    334c:	93                   	xchg   ebx,eax
    334d:	0b bd 03 00 00 02    	or     edi,DWORD PTR [rbp+0x2000003]
    3353:	07                   	(bad)
    3354:	95                   	xchg   ebp,eax
    3355:	0b e7                	or     esp,edi
    3357:	03 00                	add    eax,DWORD PTR [rax]
    3359:	00 02                	add    BYTE PTR [rdx],al
    335b:	07                   	(bad)
    335c:	98                   	cwde
    335d:	0b 03                	or     eax,DWORD PTR [rbx]
    335f:	04 00                	add    al,0x0
    3361:	00 02                	add    BYTE PTR [rdx],al
    3363:	07                   	(bad)
    3364:	9a                   	(bad)
    3365:	0b 19                	or     ebx,DWORD PTR [rcx]
    3367:	04 00                	add    al,0x0
    3369:	00 02                	add    BYTE PTR [rdx],al
    336b:	07                   	(bad)
    336c:	9d                   	popf
    336d:	0b 34 04             	or     esi,DWORD PTR [rsp+rax*1]
    3370:	00 00                	add    BYTE PTR [rax],al
    3372:	02 07                	add    al,BYTE PTR [rdi]
    3374:	9e                   	sahf
    3375:	0b 4f 04             	or     ecx,DWORD PTR [rdi+0x4]
    3378:	00 00                	add    BYTE PTR [rax],al
    337a:	02 07                	add    al,BYTE PTR [rdi]
    337c:	9f                   	lahf
    337d:	0b 80 04 00 00 02    	or     eax,DWORD PTR [rax+0x2000004]
    3383:	07                   	(bad)
    3384:	a1 0b a0 04 00 00 02 	movabs eax,ds:0xa40702000004a00b
    338b:	07 a4 
    338d:	0b c0                	or     eax,eax
    338f:	04 00                	add    al,0x0
    3391:	00 02                	add    BYTE PTR [rdx],al
    3393:	07                   	(bad)
    3394:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3395:	0b d3                	or     edx,ebx
    3397:	04 00                	add    al,0x0
    3399:	00 02                	add    BYTE PTR [rdx],al
    339b:	07                   	(bad)
    339c:	a9 0b e0 04 00       	test   eax,0x4e00b
    33a1:	00 02                	add    BYTE PTR [rdx],al
    33a3:	07                   	(bad)
    33a4:	aa                   	stos   BYTE PTR es:[rdi],al
    33a5:	0b f1                	or     esi,ecx
    33a7:	04 00                	add    al,0x0
    33a9:	00 02                	add    BYTE PTR [rdx],al
    33ab:	07                   	(bad)
    33ac:	ab                   	stos   DWORD PTR es:[rdi],eax
    33ad:	0b 11                	or     edx,DWORD PTR [rcx]
    33af:	05 00 00 02 07       	add    eax,0x7020000
    33b4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    33b5:	0b 34 05 00 00 02 07 	or     esi,DWORD PTR [rax*1+0x7020000]
    33bc:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    33bd:	0b 57 05             	or     edx,DWORD PTR [rdi+0x5]
    33c0:	00 00                	add    BYTE PTR [rax],al
    33c2:	02 07                	add    al,BYTE PTR [rdi]
    33c4:	af                   	scas   eax,DWORD PTR es:[rdi]
    33c5:	0b 6d 05             	or     ebp,DWORD PTR [rbp+0x5]
    33c8:	00 00                	add    BYTE PTR [rax],al
    33ca:	02 07                	add    al,BYTE PTR [rdi]
    33cc:	b0 0b                	mov    al,0xb
    33ce:	92                   	xchg   edx,eax
    33cf:	05 00 00 02 07       	add    eax,0x7020000
    33d4:	f4                   	hlt
    33d5:	16                   	(bad)
    33d6:	e2 00                	loop   33d8 <_Z7testAllPKcjS0_+0x4a8>
    33d8:	00 00                	add    BYTE PTR [rax],al
    33da:	02 07                	add    al,BYTE PTR [rdi]
    33dc:	f9                   	stc
    33dd:	16                   	(bad)
    33de:	f2 05 00 00 02 07    	repnz add eax,0x7020000
    33e4:	fa                   	cli
    33e5:	16                   	(bad)
    33e6:	0c 06                	or     al,0x6
    33e8:	00 00                	add    BYTE PTR [rax],al
    33ea:	02 07                	add    al,BYTE PTR [rdi]
    33ec:	fc                   	cld
    33ed:	16                   	(bad)
    33ee:	27                   	(bad)
    33ef:	06                   	(bad)
    33f0:	00 00                	add    BYTE PTR [rax],al
    33f2:	02 07                	add    al,BYTE PTR [rdi]
    33f4:	fd                   	std
    33f5:	16                   	(bad)
    33f6:	83 06 00             	add    DWORD PTR [rsi],0x0
    33f9:	00 02                	add    BYTE PTR [rdx],al
    33fb:	07                   	(bad)
    33fc:	fe                   	(bad)
    33fd:	16                   	(bad)
    33fe:	3d 06 00 00 02       	cmp    eax,0x2000006
    3403:	07                   	(bad)
    3404:	ff 16                	call   QWORD PTR [rsi]
    3406:	60                   	(bad)
    3407:	06                   	(bad)
    3408:	00 00                	add    BYTE PTR [rax],al
    340a:	34 07                	xor    al,0x7
    340c:	00 01                	add    BYTE PTR [rcx],al
    340e:	16                   	(bad)
    340f:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    3410:	06                   	(bad)
    3411:	00 00                	add    BYTE PTR [rax],al
    3413:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    3416:	73 00                	jae    3418 <_Z7testAllPKcjS0_+0x4e8>
    3418:	89 0f                	mov    DWORD PTR [rdi],ecx
    341a:	03 00                	add    eax,DWORD PTR [rax]
    341c:	00 ef                	add    bh,ch
    341e:	06                   	(bad)
    341f:	00 00                	add    BYTE PTR [rax],al
    3421:	93                   	xchg   ebx,eax
    3422:	02 00                	add    al,BYTE PTR [rax]
    3424:	00 01                	add    BYTE PTR [rcx],al
    3426:	ef                   	out    dx,eax
    3427:	06                   	(bad)
    3428:	00 00                	add    BYTE PTR [rax],al
    342a:	00 10                	add    BYTE PTR [rax],dl
    342c:	61                   	(bad)
    342d:	62 73 00 55 1b       	(bad)
    3432:	00 00                	add    BYTE PTR [rax],al
    3434:	00 fe                	add    dh,bh
    3436:	06                   	(bad)
    3437:	00 00                	add    BYTE PTR [rax],al
    3439:	ab                   	stos   DWORD PTR es:[rdi],eax
    343a:	02 00                	add    al,BYTE PTR [rax]
    343c:	00 01                	add    BYTE PTR [rcx],al
    343e:	fe 06                	inc    BYTE PTR [rsi]
    3440:	00 00                	add    BYTE PTR [rax],al
    3442:	00 10                	add    BYTE PTR [rax],dl
    3444:	61                   	(bad)
    3445:	62 73 00 4f fb       	(bad)
    344a:	02 00                	add    al,BYTE PTR [rax]
    344c:	00 c0                	add    al,al
    344e:	06                   	(bad)
    344f:	00 00                	add    BYTE PTR [rax],al
    3451:	c3                   	ret
    3452:	02 00                	add    al,BYTE PTR [rax]
    3454:	00 01                	add    BYTE PTR [rcx],al
    3456:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    3459:	00 00                	add    BYTE PTR [rax],al
    345b:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    345e:	73 00                	jae    3460 <_Z7testAllPKcjS0_+0x530>
    3460:	4b 05 03 00 00 9e    	rex.WXB add rax,0xffffffff9e000003
    3466:	06                   	(bad)
    3467:	00 00                	add    BYTE PTR [rax],al
    3469:	db 02                	fild   DWORD PTR [rdx]
    346b:	00 00                	add    BYTE PTR [rax],al
    346d:	01 9e 06 00 00 00    	add    DWORD PTR [rsi+0x6],ebx
    3473:	10 61 62             	adc    BYTE PTR [rcx+0x62],ah
    3476:	73 00                	jae    3478 <_Z7testAllPKcjS0_+0x548>
    3478:	47 f1                	rex.RXB int1
    347a:	02 00                	add    al,BYTE PTR [rax]
    347c:	00 8a 03 00 00 f3    	add    BYTE PTR [rdx-0xcfffffd],cl
    3482:	02 00                	add    al,BYTE PTR [rax]
    3484:	00 01                	add    BYTE PTR [rcx],al
    3486:	8a 03                	mov    al,BYTE PTR [rbx]
    3488:	00 00                	add    BYTE PTR [rax],al
    348a:	00 10                	add    BYTE PTR [rax],dl
    348c:	61                   	(bad)
    348d:	62 73 00 3d 41       	(bad)
    3492:	00 00                	add    BYTE PTR [rax],al
    3494:	00 db                	add    bl,bl
    3496:	00 00                	add    BYTE PTR [rax],al
    3498:	00 0b                	add    BYTE PTR [rbx],cl
    349a:	03 00                	add    eax,DWORD PTR [rax]
    349c:	00 01                	add    BYTE PTR [rcx],al
    349e:	db 00                	fild   DWORD PTR [rax]
    34a0:	00 00                	add    BYTE PTR [rax],al
    34a2:	00 10                	add    BYTE PTR [rax],dl
    34a4:	61                   	(bad)
    34a5:	62 73 00 38 11       	(bad)
    34aa:	00 00                	add    BYTE PTR [rax],al
    34ac:	00 a3 00 00 00 23    	add    BYTE PTR [rbx+0x23000000],ah
    34b2:	03 00                	add    eax,DWORD PTR [rax]
    34b4:	00 01                	add    BYTE PTR [rcx],al
    34b6:	a3 00 00 00 00 22 64 	movabs ds:0x7669642200000000,eax
    34bd:	69 76 
    34bf:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    34c5:	aa                   	stos   BYTE PTR es:[rdi],al
    34c6:	00 00                	add    BYTE PTR [rax],al
    34c8:	00 01                	add    BYTE PTR [rcx],al
    34ca:	a3 00 00 00 01 a3 00 	movabs ds:0xa301000000,eax
    34d1:	00 00 
    34d3:	00 00                	add    BYTE PTR [rax],al
    34d5:	08 6d 00             	or     BYTE PTR [rbp+0x0],ch
    34d8:	00 00                	add    BYTE PTR [rax],al
    34da:	de 02                	fiadd  WORD PTR [rdx]
    34dc:	0c 66                	or     al,0x66
    34de:	00 00                	add    BYTE PTR [rax],al
    34e0:	00 53 03             	add    BYTE PTR [rbx+0x3],dl
    34e3:	00 00                	add    BYTE PTR [rax],al
    34e5:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    34e8:	00 00                	add    BYTE PTR [rax],al
    34ea:	00 0a                	add    BYTE PTR [rdx],cl
    34ec:	58                   	pop    rax
    34ed:	03 00                	add    eax,DWORD PTR [rax]
    34ef:	00 35 36 33 00 00    	add    BYTE PTR [rip+0x3336],dh        # 682b <_end+0x813>
    34f5:	00 05 e3 02 12 33    	add    BYTE PTR [rip+0x331202e3],al        # 331237de <_end+0x3311d7c6>
    34fb:	00 00                	add    BYTE PTR [rax],al
    34fd:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    3500:	00 00                	add    BYTE PTR [rax],al
    3502:	74 03                	je     3507 <_Z7testAllPKcjS0_+0x5d7>
    3504:	00 00                	add    BYTE PTR [rax],al
    3506:	01 53 03             	add    DWORD PTR [rbx+0x3],edx
    3509:	00 00                	add    BYTE PTR [rax],al
    350b:	00 0c cd 01 00 00 09 	add    BYTE PTR [rcx*8+0x9000001],cl
    3512:	19 01                	sbb    DWORD PTR [rcx],eax
    3514:	8a 03                	mov    al,BYTE PTR [rbx]
    3516:	00 00                	add    BYTE PTR [rax],al
    3518:	8a 03                	mov    al,BYTE PTR [rbx]
    351a:	00 00                	add    BYTE PTR [rax],al
    351c:	01 f5                	add    ebp,esi
    351e:	00 00                	add    BYTE PTR [rax],al
    3520:	00 00                	add    BYTE PTR [rax],al
    3522:	06                   	(bad)
    3523:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    3526:	01 00                	add    DWORD PTR [rax],eax
    3528:	00 08                	add    BYTE PTR [rax],cl
    352a:	d2 01                	rol    BYTE PTR [rcx],cl
    352c:	00 00                	add    BYTE PTR [rax],al
    352e:	e1 01                	loope  3531 <_Z7testAllPKcjS0_+0x601>
    3530:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3533:	00 00                	add    BYTE PTR [rax],al
    3535:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3536:	03 00                	add    eax,DWORD PTR [rax]
    3538:	00 01                	add    BYTE PTR [rcx],al
    353a:	f5                   	cmc
    353b:	00 00                	add    BYTE PTR [rax],al
    353d:	00 00                	add    BYTE PTR [rax],al
    353f:	08 dc                	or     ah,bl
    3541:	01 00                	add    DWORD PTR [rax],eax
    3543:	00 e6                	add    dh,ah
    3545:	01 01                	add    DWORD PTR [rcx],eax
    3547:	a3 00 00 00 bd 03 00 	movabs ds:0x1000003bd000000,eax
    354e:	00 01 
    3550:	f5                   	cmc
    3551:	00 00                	add    BYTE PTR [rax],al
    3553:	00 00                	add    BYTE PTR [rax],al
    3555:	0c 65                	or     al,0x65
    3557:	00 00                	add    BYTE PTR [rax],al
    3559:	00 0a                	add    BYTE PTR [rdx],cl
    355b:	14 01                	adc    al,0x1
    355d:	33 01                	xor    eax,DWORD PTR [rcx]
    355f:	00 00                	add    BYTE PTR [rax],al
    3561:	e7 03                	out    0x3,eax
    3563:	00 00                	add    BYTE PTR [rax],al
    3565:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    3568:	00 00                	add    BYTE PTR [rax],al
    356a:	01 67 01             	add    DWORD PTR [rdi+0x1],esp
    356d:	00 00                	add    BYTE PTR [rax],al
    356f:	01 2e                	add    DWORD PTR [rsi],ebp
    3571:	00 00                	add    BYTE PTR [rax],al
    3573:	00 01                	add    BYTE PTR [rcx],al
    3575:	2e 00 00             	cs add BYTE PTR [rax],al
    3578:	00 01                	add    BYTE PTR [rcx],al
    357a:	41 01 00             	add    DWORD PTR [r8],eax
    357d:	00 00                	add    BYTE PTR [rax],al
    357f:	37                   	(bad)
    3580:	64 69 76 00 05 e0 03 	imul   esi,DWORD PTR fs:[rsi+0x0],0xe03e005
    3587:	0e 
    3588:	72 00                	jb     358a <_Z7testAllPKcjS0_+0x65a>
    358a:	00 00                	add    BYTE PTR [rax],al
    358c:	03 04 00             	add    eax,DWORD PTR [rax+rax*1]
    358f:	00 01                	add    BYTE PTR [rcx],al
    3591:	66 00 00             	data16 add BYTE PTR [rax],al
    3594:	00 01                	add    BYTE PTR [rcx],al
    3596:	66 00 00             	data16 add BYTE PTR [rax],al
    3599:	00 00                	add    BYTE PTR [rax],al
    359b:	08 bd 00 00 00 05    	or     BYTE PTR [rbp+0x5000000],bh
    35a1:	03 0e                	add    ecx,DWORD PTR [rsi]
    35a3:	35 01 00 00 19       	xor    eax,0x19000001
    35a8:	04 00                	add    al,0x0
    35aa:	00 01                	add    BYTE PTR [rcx],al
    35ac:	f5                   	cmc
    35ad:	00 00                	add    BYTE PTR [rax],al
    35af:	00 00                	add    BYTE PTR [rax],al
    35b1:	08 c3                	or     bl,al
    35b3:	02 00                	add    al,BYTE PTR [rax]
    35b5:	00 e2                	add    dl,ah
    35b7:	03 0f                	add    ecx,DWORD PTR [rdi]
    35b9:	aa                   	stos   BYTE PTR es:[rdi],al
    35ba:	00 00                	add    BYTE PTR [rax],al
    35bc:	00 34 04             	add    BYTE PTR [rsp+rax*1],dh
    35bf:	00 00                	add    BYTE PTR [rax],al
    35c1:	01 a3 00 00 00 01    	add    DWORD PTR [rbx+0x1000000],esp
    35c7:	a3 00 00 00 00 08 33 	movabs ds:0x2330800000000,eax
    35ce:	02 00 
    35d0:	00 26                	add    BYTE PTR [rsi],ah
    35d2:	04 0c                	add    al,0xc
    35d4:	66 00 00             	data16 add BYTE PTR [rax],al
    35d7:	00 4f 04             	add    BYTE PTR [rdi+0x4],cl
    35da:	00 00                	add    BYTE PTR [rax],al
    35dc:	01 f5                	add    ebp,esi
    35de:	00 00                	add    BYTE PTR [rax],al
    35e0:	00 01                	add    BYTE PTR [rcx],al
    35e2:	2e 00 00             	cs add BYTE PTR [rax],al
    35e5:	00 00                	add    BYTE PTR [rax],al
    35e7:	0c 39                	or     al,0x39
    35e9:	02 00                	add    al,BYTE PTR [rax]
    35eb:	00 0b                	add    BYTE PTR [rbx],cl
    35ed:	75 01                	jne    35f0 <_Z7testAllPKcjS0_+0x6c0>
    35ef:	2e 00 00             	cs add BYTE PTR [rax],al
    35f2:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    35f5:	00 00                	add    BYTE PTR [rax],al
    35f7:	01 6f 04             	add    DWORD PTR [rdi+0x4],ebp
    35fa:	00 00                	add    BYTE PTR [rax],al
    35fc:	01 f5                	add    ebp,esi
    35fe:	00 00                	add    BYTE PTR [rax],al
    3600:	00 01                	add    BYTE PTR [rcx],al
    3602:	2e 00 00             	cs add BYTE PTR [rax],al
    3605:	00 00                	add    BYTE PTR [rax],al
    3607:	0a 74 04 00          	or     dh,BYTE PTR [rsp+rax*1+0x0]
    360b:	00 06                	add    BYTE PTR [rsi],al
    360d:	04 05                	add    al,0x5
    360f:	61                   	(bad)
    3610:	02 00                	add    al,BYTE PTR [rax]
    3612:	00 0e                	add    BYTE PTR [rsi],cl
    3614:	74 04                	je     361a <_Z7testAllPKcjS0_+0x6ea>
    3616:	00 00                	add    BYTE PTR [rax],al
    3618:	08 d9                	or     cl,bl
    361a:	00 00                	add    BYTE PTR [rax],al
    361c:	00 29                	add    BYTE PTR [rcx],ch
    361e:	04 0c                	add    al,0xc
    3620:	66 00 00             	data16 add BYTE PTR [rax],al
    3623:	00 a0 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ah
    3629:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    362a:	04 00                	add    al,0x0
    362c:	00 01                	add    BYTE PTR [rcx],al
    362e:	f5                   	cmc
    362f:	00 00                	add    BYTE PTR [rax],al
    3631:	00 01                	add    BYTE PTR [rcx],al
    3633:	2e 00 00             	cs add BYTE PTR [rax],al
    3636:	00 00                	add    BYTE PTR [rax],al
    3638:	1d 25 00 00 00       	sbb    eax,0x25
    363d:	ca 03 c0             	retf   0xc003
    3640:	04 00                	add    al,0x0
    3642:	00 01                	add    BYTE PTR [rcx],al
    3644:	33 01                	xor    eax,DWORD PTR [rcx]
    3646:	00 00                	add    BYTE PTR [rax],al
    3648:	01 2e                	add    DWORD PTR [rsi],ebp
    364a:	00 00                	add    BYTE PTR [rax],al
    364c:	00 01                	add    BYTE PTR [rcx],al
    364e:	2e 00 00             	cs add BYTE PTR [rax],al
    3651:	00 01                	add    BYTE PTR [rcx],al
    3653:	41 01 00             	add    DWORD PTR [r8],eax
    3656:	00 00                	add    BYTE PTR [rax],al
    3658:	38 36                	cmp    BYTE PTR [rsi],dh
    365a:	00 00                	add    BYTE PTR [rax],al
    365c:	00 05 fa 02 0d d3    	add    BYTE PTR [rip+0xffffffffd30d02fa],al        # ffffffffd30d395c <_end+0xffffffffd30cd944>
    3662:	04 00                	add    al,0x0
    3664:	00 01                	add    BYTE PTR [rcx],al
    3666:	66 00 00             	data16 add BYTE PTR [rax],al
    3669:	00 00                	add    BYTE PTR [rax],al
    366b:	39 ec                	cmp    esp,ebp
    366d:	02 00                	add    al,BYTE PTR [rax]
    366f:	00 05 3d 02 0c 66    	add    BYTE PTR [rip+0x660c023d],al        # 660c38b2 <_end+0x660bd89a>
    3675:	00 00                	add    BYTE PTR [rax],al
    3677:	00 1d eb 02 00 00    	add    BYTE PTR [rip+0x2eb],bl        # 3968 <_Z27standartDeviationCollisionsP7HashMapf+0x128>
    367d:	3f                   	(bad)
    367e:	02 f1                	add    dh,cl
    3680:	04 00                	add    al,0x0
    3682:	00 01                	add    BYTE PTR [rcx],al
    3684:	12 01                	adc    al,BYTE PTR [rcx]
    3686:	00 00                	add    BYTE PTR [rax],al
    3688:	00 0c 05 01 00 00 05 	add    BYTE PTR [rax*1+0x5000001],cl
    368f:	76 0f                	jbe    36a0 <_Z7testAllPKcjS0_+0x770>
    3691:	8a 03                	mov    al,BYTE PTR [rbx]
    3693:	00 00                	add    BYTE PTR [rax],al
    3695:	0c 05                	or     al,0x5
    3697:	00 00                	add    BYTE PTR [rax],al
    3699:	01 f5                	add    ebp,esi
    369b:	00 00                	add    BYTE PTR [rax],al
    369d:	00 01                	add    BYTE PTR [rcx],al
    369f:	0c 05                	or     al,0x5
    36a1:	00 00                	add    BYTE PTR [rax],al
    36a3:	00 0a                	add    BYTE PTR [rdx],cl
    36a5:	35 01 00 00 17       	xor    eax,0x17000001
    36aa:	54                   	push   rsp
    36ab:	00 00                	add    BYTE PTR [rax],al
    36ad:	00 d7                	add    bh,dl
    36af:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    36b2:	00 00                	add    BYTE PTR [rax],al
    36b4:	a3 00 00 00 34 05 00 	movabs ds:0x100000534000000,eax
    36bb:	00 01 
    36bd:	f5                   	cmc
    36be:	00 00                	add    BYTE PTR [rax],al
    36c0:	00 01                	add    BYTE PTR [rcx],al
    36c2:	0c 05                	or     al,0x5
    36c4:	00 00                	add    BYTE PTR [rax],al
    36c6:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    36c9:	00 00                	add    BYTE PTR [rax],al
    36cb:	00 17                	add    BYTE PTR [rdi],dl
    36cd:	25 02 00 00 db       	and    eax,0xdb000002
    36d2:	1a 1c 02             	sbb    bl,BYTE PTR [rdx+rax*1]
    36d5:	00 00                	add    BYTE PTR [rax],al
    36d7:	3a 00                	cmp    al,BYTE PTR [rax]
    36d9:	00 00                	add    BYTE PTR [rax],al
    36db:	57                   	push   rdi
    36dc:	05 00 00 01 f5       	add    eax,0xf5010000
    36e1:	00 00                	add    BYTE PTR [rax],al
    36e3:	00 01                	add    BYTE PTR [rcx],al
    36e5:	0c 05                	or     al,0x5
    36e7:	00 00                	add    BYTE PTR [rax],al
    36e9:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    36ec:	00 00                	add    BYTE PTR [rax],al
    36ee:	00 08                	add    BYTE PTR [rax],cl
    36f0:	db 25 00 00 9b 03    	(bad)  [rip+0x39b0000]        # 39b36f6 <_end+0x39ad6de>
    36f6:	0c 66                	or     al,0x66
    36f8:	00 00                	add    BYTE PTR [rax],al
    36fa:	00 6d 05             	add    BYTE PTR [rbp+0x5],ch
    36fd:	00 00                	add    BYTE PTR [rax],al
    36ff:	01 f5                	add    ebp,esi
    3701:	00 00                	add    BYTE PTR [rax],al
    3703:	00 00                	add    BYTE PTR [rax],al
    3705:	0c e1                	or     al,0xe1
    3707:	01 00                	add    DWORD PTR [rax],eax
    3709:	00 0b                	add    BYTE PTR [rbx],cl
    370b:	8f 01                	pop    QWORD PTR [rcx]
    370d:	2e 00 00             	cs add BYTE PTR [rax],al
    3710:	00 8d 05 00 00 01    	add    BYTE PTR [rbp+0x1000005],cl
    3716:	35 01 00 00 01       	xor    eax,0x1000001
    371b:	8d 05 00 00 01 2e    	lea    eax,[rip+0x2e010000]        # 2e013721 <_end+0x2e00d709>
    3721:	00 00                	add    BYTE PTR [rax],al
    3723:	00 00                	add    BYTE PTR [rax],al
    3725:	0a 7b 04             	or     bh,BYTE PTR [rbx+0x4]
    3728:	00 00                	add    BYTE PTR [rax],al
    372a:	0c 42                	or     al,0x42
    372c:	02 00                	add    al,BYTE PTR [rax]
    372e:	00 0b                	add    BYTE PTR [rbx],cl
    3730:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    3734:	00 00                	add    BYTE PTR [rax],al
    3736:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3737:	05 00 00 01 35       	add    eax,0x35010000
    373c:	01 00                	add    DWORD PTR [rax],eax
    373e:	00 01                	add    BYTE PTR [rcx],al
    3740:	74 04                	je     3746 <_Z21standartDeviationTimePdjd+0x66>
    3742:	00 00                	add    BYTE PTR [rax],al
    3744:	00 3a                	add    BYTE PTR [rdx],bh
    3746:	12 02                	adc    al,BYTE PTR [rdx]
    3748:	00 00                	add    BYTE PTR [rax],al
    374a:	13 57 01             	adc    edx,DWORD PTR [rdi+0x1]
    374d:	0b 0c 06             	or     ecx,DWORD PTR [rsi+rax*1]
    3750:	00 00                	add    BYTE PTR [rax],al
    3752:	02 07                	add    al,BYTE PTR [rdi]
    3754:	cc                   	int3
    3755:	0b e2                	or     esp,edx
    3757:	00 00                	add    BYTE PTR [rax],al
    3759:	00 02                	add    BYTE PTR [rdx],al
    375b:	07                   	(bad)
    375c:	dc 0b                	fmul   QWORD PTR [rbx]
    375e:	0c 06                	or     al,0x6
    3760:	00 00                	add    BYTE PTR [rax],al
    3762:	02 07                	add    al,BYTE PTR [rdi]
    3764:	e7 0b                	out    0xb,eax
    3766:	27                   	(bad)
    3767:	06                   	(bad)
    3768:	00 00                	add    BYTE PTR [rax],al
    376a:	02 07                	add    al,BYTE PTR [rdi]
    376c:	e8 0b 3d 06 00       	call   6747c <_end+0x61464>
    3771:	00 02                	add    BYTE PTR [rdx],al
    3773:	07                   	(bad)
    3774:	e9 0b 60 06 00       	jmp    69784 <_end+0x6376c>
    3779:	00 02                	add    BYTE PTR [rdx],al
    377b:	07                   	(bad)
    377c:	eb 0b                	jmp    3789 <_Z21standartDeviationTimePdjd+0xa9>
    377e:	83 06 00             	add    DWORD PTR [rsi],0x0
    3781:	00 02                	add    BYTE PTR [rdx],al
    3783:	07                   	(bad)
    3784:	ec                   	in     al,dx
    3785:	0b a5 06 00 00 22    	or     esp,DWORD PTR [rbp+0x22000006]
    378b:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    3792:	00 
    3793:	00 e2                	add    dl,ah
    3795:	00 00                	add    BYTE PTR [rax],al
    3797:	00 01                	add    BYTE PTR [rcx],al
    3799:	db 00                	fild   DWORD PTR [rax]
    379b:	00 00                	add    BYTE PTR [rax],al
    379d:	01 db                	add    ebx,ebx
    379f:	00 00                	add    BYTE PTR [rax],al
    37a1:	00 00                	add    BYTE PTR [rax],al
    37a3:	00 08                	add    BYTE PTR [rax],cl
    37a5:	c2 02 00             	ret    0x2
    37a8:	00 e6                	add    dh,ah
    37aa:	03 1e                	add    ebx,DWORD PTR [rsi]
    37ac:	e2 00                	loop   37ae <_Z21standartDeviationTimePdjd+0xce>
    37ae:	00 00                	add    BYTE PTR [rax],al
    37b0:	27                   	(bad)
    37b1:	06                   	(bad)
    37b2:	00 00                	add    BYTE PTR [rax],al
    37b4:	01 db                	add    ebx,ebx
    37b6:	00 00                	add    BYTE PTR [rax],al
    37b8:	00 01                	add    BYTE PTR [rcx],al
    37ba:	db 00                	fild   DWORD PTR [rax]
    37bc:	00 00                	add    BYTE PTR [rax],al
    37be:	00 08                	add    BYTE PTR [rax],cl
    37c0:	2d 02 00 00 ed       	sub    eax,0xed000002
    37c5:	01 01                	add    DWORD PTR [rcx],eax
    37c7:	db 00                	fild   DWORD PTR [rax]
    37c9:	00 00                	add    BYTE PTR [rax],al
    37cb:	3d 06 00 00 01       	cmp    eax,0x1000006
    37d0:	f5                   	cmc
    37d1:	00 00                	add    BYTE PTR [rax],al
    37d3:	00 00                	add    BYTE PTR [rax],al
    37d5:	17                   	(bad)
    37d6:	88 00                	mov    BYTE PTR [rax],al
    37d8:	00 00                	add    BYTE PTR [rax],al
    37da:	ee                   	out    dx,al
    37db:	16                   	(bad)
    37dc:	7f 00                	jg     37de <_Z21standartDeviationTimePdjd+0xfe>
    37de:	00 00                	add    BYTE PTR [rax],al
    37e0:	db 00                	fild   DWORD PTR [rax]
    37e2:	00 00                	add    BYTE PTR [rax],al
    37e4:	60                   	(bad)
    37e5:	06                   	(bad)
    37e6:	00 00                	add    BYTE PTR [rax],al
    37e8:	01 f5                	add    ebp,esi
    37ea:	00 00                	add    BYTE PTR [rax],al
    37ec:	00 01                	add    BYTE PTR [rcx],al
    37ee:	0c 05                	or     al,0x5
    37f0:	00 00                	add    BYTE PTR [rax],al
    37f2:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    37f5:	00 00                	add    BYTE PTR [rax],al
    37f7:	00 17                	add    BYTE PTR [rdi],dl
    37f9:	b9 02 00 00 f3       	mov    ecx,0xf3000002
    37fe:	1f                   	(bad)
    37ff:	b0 02                	mov    al,0x2
    3801:	00 00                	add    BYTE PTR [rax],al
    3803:	3a 01                	cmp    al,BYTE PTR [rcx]
    3805:	00 00                	add    BYTE PTR [rax],al
    3807:	83 06 00             	add    DWORD PTR [rsi],0x0
    380a:	00 01                	add    BYTE PTR [rcx],al
    380c:	f5                   	cmc
    380d:	00 00                	add    BYTE PTR [rax],al
    380f:	00 01                	add    BYTE PTR [rcx],al
    3811:	0c 05                	or     al,0x5
    3813:	00 00                	add    BYTE PTR [rax],al
    3815:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    3818:	00 00                	add    BYTE PTR [rax],al
    381a:	00 0c 97             	add    BYTE PTR [rdi+rdx*4],cl
    381d:	02 00                	add    al,BYTE PTR [rax]
    381f:	00 05 7c 0e 9e 06    	add    BYTE PTR [rip+0x69e0e7c],al        # 69e46a1 <_end+0x69de689>
    3825:	00 00                	add    BYTE PTR [rax],al
    3827:	9e                   	sahf
    3828:	06                   	(bad)
    3829:	00 00                	add    BYTE PTR [rax],al
    382b:	01 f5                	add    ebp,esi
    382d:	00 00                	add    BYTE PTR [rax],al
    382f:	00 01                	add    BYTE PTR [rcx],al
    3831:	0c 05                	or     al,0x5
    3833:	00 00                	add    BYTE PTR [rax],al
    3835:	00 06                	add    BYTE PTR [rsi],al
    3837:	04 04                	add    al,0x4
    3839:	d3 00                	rol    DWORD PTR [rax],cl
    383b:	00 00                	add    BYTE PTR [rax],al
    383d:	0c 2b                	or     al,0x2b
    383f:	00 00                	add    BYTE PTR [rax],al
    3841:	00 05 7f 14 c0 06    	add    BYTE PTR [rip+0x6c0147f],al        # 6c04cc6 <_end+0x6bfecae>
    3847:	00 00                	add    BYTE PTR [rax],al
    3849:	c0 06 00             	rol    BYTE PTR [rsi],0x0
    384c:	00 01                	add    BYTE PTR [rcx],al
    384e:	f5                   	cmc
    384f:	00 00                	add    BYTE PTR [rax],al
    3851:	00 01                	add    BYTE PTR [rcx],al
    3853:	0c 05                	or     al,0x5
    3855:	00 00                	add    BYTE PTR [rax],al
    3857:	00 06                	add    BYTE PTR [rsi],al
    3859:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    385c:	01 00                	add    DWORD PTR [rax],eax
    385e:	00 02                	add    BYTE PTR [rdx],al
    3860:	0c 27                	or     al,0x27
    3862:	0c 3d                	or     al,0x3d
    3864:	03 00                	add    eax,DWORD PTR [rax]
    3866:	00 02                	add    BYTE PTR [rdx],al
    3868:	0c 2b                	or     al,0x2b
    386a:	0e                   	(bad)
    386b:	59                   	pop    rcx
    386c:	03 00                	add    eax,DWORD PTR [rax]
    386e:	00 02                	add    BYTE PTR [rdx],al
    3870:	0c 2e                	or     al,0x2e
    3872:	0e                   	(bad)
    3873:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
    3877:	02 0c 36             	add    cl,BYTE PTR [rsi+rsi*1]
    387a:	0c 72                	or     al,0x72
    387c:	00 00                	add    BYTE PTR [rax],al
    387e:	00 02                	add    BYTE PTR [rdx],al
    3880:	0c 37                	or     al,0x37
    3882:	0c aa                	or     al,0xaa
    3884:	00 00                	add    BYTE PTR [rax],al
    3886:	00 06                	add    BYTE PTR [rsi],al
    3888:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    388b:	02 00                	add    al,BYTE PTR [rax]
    388d:	00 02                	add    BYTE PTR [rdx],al
    388f:	0c 39                	or     al,0x39
    3891:	0c 7b                	or     al,0x7b
    3893:	02 00                	add    al,BYTE PTR [rax]
    3895:	00 06                	add    BYTE PTR [rsi],al
    3897:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 3a87 <_Z27standartDeviationCollisionsP7HashMapf+0x247>
    389d:	02 0c 39             	add    cl,BYTE PTR [rcx+rdi*1]
    38a0:	0c 93                	or     al,0x93
    38a2:	02 00                	add    al,BYTE PTR [rax]
    38a4:	00 02                	add    BYTE PTR [rdx],al
    38a6:	0c 39                	or     al,0x39
    38a8:	0c ab                	or     al,0xab
    38aa:	02 00                	add    al,BYTE PTR [rax]
    38ac:	00 02                	add    BYTE PTR [rdx],al
    38ae:	0c 39                	or     al,0x39
    38b0:	0c c3                	or     al,0xc3
    38b2:	02 00                	add    al,BYTE PTR [rax]
    38b4:	00 02                	add    BYTE PTR [rdx],al
    38b6:	0c 39                	or     al,0x39
    38b8:	0c db                	or     al,0xdb
    38ba:	02 00                	add    al,BYTE PTR [rax]
    38bc:	00 02                	add    BYTE PTR [rdx],al
    38be:	0c 39                	or     al,0x39
    38c0:	0c f3                	or     al,0xf3
    38c2:	02 00                	add    al,BYTE PTR [rax]
    38c4:	00 02                	add    BYTE PTR [rdx],al
    38c6:	0c 39                	or     al,0x39
    38c8:	0c 0b                	or     al,0xb
    38ca:	03 00                	add    eax,DWORD PTR [rax]
    38cc:	00 02                	add    BYTE PTR [rdx],al
    38ce:	0c 3a                	or     al,0x3a
    38d0:	0c 74                	or     al,0x74
    38d2:	03 00                	add    eax,DWORD PTR [rax]
    38d4:	00 02                	add    BYTE PTR [rdx],al
    38d6:	0c 3b                	or     al,0x3b
    38d8:	0c 91                	or     al,0x91
    38da:	03 00                	add    eax,DWORD PTR [rax]
    38dc:	00 02                	add    BYTE PTR [rdx],al
    38de:	0c 3c                	or     al,0x3c
    38e0:	0c a7                	or     al,0xa7
    38e2:	03 00                	add    eax,DWORD PTR [rax]
    38e4:	00 02                	add    BYTE PTR [rdx],al
    38e6:	0c 3d                	or     al,0x3d
    38e8:	0c bd                	or     al,0xbd
    38ea:	03 00                	add    eax,DWORD PTR [rax]
    38ec:	00 02                	add    BYTE PTR [rdx],al
    38ee:	0c 3f                	or     al,0x3f
    38f0:	0c f2                	or     al,0xf2
    38f2:	05 00 00 02 0c       	add    eax,0xc020000
    38f7:	3f                   	(bad)
    38f8:	0c 23                	or     al,0x23
    38fa:	03 00                	add    eax,DWORD PTR [rax]
    38fc:	00 02                	add    BYTE PTR [rdx],al
    38fe:	0c 3f                	or     al,0x3f
    3900:	0c e7                	or     al,0xe7
    3902:	03 00                	add    eax,DWORD PTR [rax]
    3904:	00 02                	add    BYTE PTR [rdx],al
    3906:	0c 41                	or     al,0x41
    3908:	0c 03                	or     al,0x3
    390a:	04 00                	add    al,0x0
    390c:	00 02                	add    BYTE PTR [rdx],al
    390e:	0c 43                	or     al,0x43
    3910:	0c 19                	or     al,0x19
    3912:	04 00                	add    al,0x0
    3914:	00 02                	add    BYTE PTR [rdx],al
    3916:	0c 46                	or     al,0x46
    3918:	0c 34                	or     al,0x34
    391a:	04 00                	add    al,0x0
    391c:	00 02                	add    BYTE PTR [rdx],al
    391e:	0c 47                	or     al,0x47
    3920:	0c 4f                	or     al,0x4f
    3922:	04 00                	add    al,0x0
    3924:	00 02                	add    BYTE PTR [rdx],al
    3926:	0c 48                	or     al,0x48
    3928:	0c 80                	or     al,0x80
    392a:	04 00                	add    al,0x0
    392c:	00 02                	add    BYTE PTR [rdx],al
    392e:	0c 4a                	or     al,0x4a
    3930:	0c a0                	or     al,0xa0
    3932:	04 00                	add    al,0x0
    3934:	00 02                	add    BYTE PTR [rdx],al
    3936:	0c 4b                	or     al,0x4b
    3938:	0c d3                	or     al,0xd3
    393a:	04 00                	add    al,0x0
    393c:	00 02                	add    BYTE PTR [rdx],al
    393e:	0c 4d                	or     al,0x4d
    3940:	0c e0                	or     al,0xe0
    3942:	04 00                	add    al,0x0
    3944:	00 02                	add    BYTE PTR [rdx],al
    3946:	0c 4e                	or     al,0x4e
    3948:	0c f1                	or     al,0xf1
    394a:	04 00                	add    al,0x0
    394c:	00 02                	add    BYTE PTR [rdx],al
    394e:	0c 4f                	or     al,0x4f
    3950:	0c 11                	or     al,0x11
    3952:	05 00 00 02 0c       	add    eax,0xc020000
    3957:	50                   	push   rax
    3958:	0c 34                	or     al,0x34
    395a:	05 00 00 02 0c       	add    eax,0xc020000
    395f:	51                   	push   rcx
    3960:	0c 57                	or     al,0x57
    3962:	05 00 00 02 0c       	add    eax,0xc020000
    3967:	53                   	push   rbx
    3968:	0c 6d                	or     al,0x6d
    396a:	05 00 00 02 0c       	add    eax,0xc020000
    396f:	54                   	push   rsp
    3970:	0c 92                	or     al,0x92
    3972:	05 00 00 0b ab       	add    eax,0xab0b0000
    3977:	00 00                	add    BYTE PTR [rax],al
    3979:	00 0d 1a 14 27 01    	add    BYTE PTR [rip+0x127141a],cl        # 1274d99 <_end+0x126ed81>
    397f:	00 00                	add    BYTE PTR [rax],al
    3981:	06                   	(bad)
    3982:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    3985:	00 00                	add    BYTE PTR [rax],al
    3987:	00 06                	add    BYTE PTR [rsi],al
    3989:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    398c:	02 00                	add    al,BYTE PTR [rax]
    398e:	00 1e                	add    BYTE PTR [rsi],bl
    3990:	40 08 00             	rex or BYTE PTR [rax],al
    3993:	00 10                	add    BYTE PTR [rax],dl
    3995:	0e                   	(bad)
    3996:	07                   	(bad)
    3997:	2b 08                	sub    ecx,DWORD PTR [rax]
    3999:	00 00                	add    BYTE PTR [rax],al
    399b:	07                   	(bad)
    399c:	a3 03 00 00 0e 08 0b 	movabs ds:0x1350b080e000003,eax
    39a3:	35 01 
    39a5:	00 00                	add    BYTE PTR [rax],al
    39a7:	00 07                	add    BYTE PTR [rdi],al
    39a9:	e5 05                	in     eax,0x5
    39ab:	00 00                	add    BYTE PTR [rax],al
    39ad:	0e                   	(bad)
    39ae:	09 0e                	or     DWORD PTR [rsi],ecx
    39b0:	dd 07                	fld    QWORD PTR [rdi]
    39b2:	00 00                	add    BYTE PTR [rax],al
    39b4:	08 07                	or     BYTE PTR [rdi],al
    39b6:	ea                   	(bad)
    39b7:	05 00 00 0e 0a       	add    eax,0xa0e0000
    39bc:	0e                   	(bad)
    39bd:	dd 07                	fld    QWORD PTR [rdi]
    39bf:	00 00                	add    BYTE PTR [rax],al
    39c1:	0c 00                	or     al,0x0
    39c3:	0b 40 08             	or     eax,DWORD PTR [rax+0x8]
    39c6:	00 00                	add    BYTE PTR [rax],al
    39c8:	0e                   	(bad)
    39c9:	0b 03                	or     eax,DWORD PTR [rbx]
    39cb:	f7 07 00 00 18 69    	test   DWORD PTR [rdi],0x69180000
    39d1:	02 00                	add    al,BYTE PTR [rax]
    39d3:	00 0f                	add    BYTE PTR [rdi],cl
    39d5:	08 6d 00             	or     BYTE PTR [rbp+0x0],ch
    39d8:	00 00                	add    BYTE PTR [rax],al
    39da:	0f 18 75 02          	nop    DWORD PTR [rbp+0x2]
    39de:	00 00                	add    BYTE PTR [rax],al
    39e0:	0f 09                	wbinvd
    39e2:	6d                   	ins    DWORD PTR es:[rdi],dx
    39e3:	00 00                	add    BYTE PTR [rax],al
    39e5:	00 02                	add    BYTE PTR [rdx],al
    39e7:	18 c4                	sbb    ah,al
    39e9:	00 00                	add    BYTE PTR [rax],al
    39eb:	00 0f                	add    BYTE PTR [rdi],cl
    39ed:	0a 6d 00             	or     ch,BYTE PTR [rbp+0x0]
    39f0:	00 00                	add    BYTE PTR [rax],al
    39f2:	20 0b                	and    BYTE PTR [rbx],cl
    39f4:	36 03 00             	ss add eax,DWORD PTR [rax]
    39f7:	00 0f                	add    BYTE PTR [rdi],cl
    39f9:	0c 12                	or     al,0x12
    39fb:	2b 08                	sub    ecx,DWORD PTR [rax]
    39fd:	00 00                	add    BYTE PTR [rax],al
    39ff:	1e                   	(bad)
    3a00:	42 05 00 00 20 0f    	rex.X add eax,0xf200000
    3a06:	0f a8                	push   gs
    3a08:	08 00                	or     BYTE PTR [rax],al
    3a0a:	00 07                	add    BYTE PTR [rdi],al
    3a0c:	14 06                	adc    al,0x6
    3a0e:	00 00                	add    BYTE PTR [rax],al
    3a10:	0f 10 0e             	movups xmm1,XMMWORD PTR [rsi]
    3a13:	dd 07                	fld    QWORD PTR [rdi]
    3a15:	00 00                	add    BYTE PTR [rax],al
    3a17:	00 07                	add    BYTE PTR [rdi],al
    3a19:	95                   	xchg   ebp,eax
    3a1a:	04 00                	add    al,0x0
    3a1c:	00 0f                	add    BYTE PTR [rdi],cl
    3a1e:	11 0e                	adc    DWORD PTR [rsi],ecx
    3a20:	dd 07                	fld    QWORD PTR [rdi]
    3a22:	00 00                	add    BYTE PTR [rax],al
    3a24:	04 07                	add    al,0x7
    3a26:	d0 05 00 00 0f 13    	rol    BYTE PTR [rip+0x130f0000],1        # 130f3a2c <_end+0x130eda14>
    3a2c:	0e                   	(bad)
    3a2d:	dd 07                	fld    QWORD PTR [rdi]
    3a2f:	00 00                	add    BYTE PTR [rax],al
    3a31:	08 07                	or     BYTE PTR [rdi],al
    3a33:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    3a36:	00 0f                	add    BYTE PTR [rdi],cl
    3a38:	15 0c 5b 08 00       	adc    eax,0x85b0c
    3a3d:	00 10                	add    BYTE PTR [rax],dl
    3a3f:	00 0b                	add    BYTE PTR [rbx],cl
    3a41:	42 05 00 00 0f 16    	rex.X add eax,0x160f0000
    3a47:	03 67 08             	add    esp,DWORD PTR [rdi+0x8]
    3a4a:	00 00                	add    BYTE PTR [rax],al
    3a4c:	1e                   	(bad)
    3a4d:	60                   	(bad)
    3a4e:	04 00                	add    al,0x0
    3a50:	00 18                	add    BYTE PTR [rax],bl
    3a52:	0f 18 f5             	nop    ebp
    3a55:	08 00                	or     BYTE PTR [rax],al
    3a57:	00 07                	add    BYTE PTR [rdi],al
    3a59:	d8 05 00 00 0f 19    	fadd   DWORD PTR [rip+0x190f0000]        # 190f3a5f <_end+0x190eda47>
    3a5f:	0f f5 08             	pmaddwd mm1,QWORD PTR [rax]
    3a62:	00 00                	add    BYTE PTR [rax],al
    3a64:	00 07                	add    BYTE PTR [rdi],al
    3a66:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a67:	05 00 00 0f 1a       	add    eax,0x1a0f0000
    3a6c:	0e                   	(bad)
    3a6d:	dd 07                	fld    QWORD PTR [rdi]
    3a6f:	00 00                	add    BYTE PTR [rax],al
    3a71:	08 07                	or     BYTE PTR [rdi],al
    3a73:	19 03                	sbb    DWORD PTR [rbx],eax
    3a75:	00 00                	add    BYTE PTR [rax],al
    3a77:	0f 1b 0e             	bndstx [rsi],bnd1
    3a7a:	dd 07                	fld    QWORD PTR [rdi]
    3a7c:	00 00                	add    BYTE PTR [rax],al
    3a7e:	0c 07                	or     al,0x7
    3a80:	69 03 00 00 0f 1c    	imul   eax,DWORD PTR [rbx],0x1c0f0000
    3a86:	0e                   	(bad)
    3a87:	dd 07                	fld    QWORD PTR [rdi]
    3a89:	00 00                	add    BYTE PTR [rax],al
    3a8b:	10 00                	adc    BYTE PTR [rax],al
    3a8d:	0a a8 08 00 00 0b    	or     ch,BYTE PTR [rax+0xb000008]
    3a93:	60                   	(bad)
    3a94:	04 00                	add    al,0x0
    3a96:	00 0f                	add    BYTE PTR [rdi],cl
    3a98:	1d 03 b4 08 00       	sbb    eax,0x8b403
    3a9d:	00 0a                	add    BYTE PTR [rdx],cl
    3a9f:	fa                   	cli
    3aa0:	08 00                	or     BYTE PTR [rax],al
    3aa2:	00 18                	add    BYTE PTR [rax],bl
    3aa4:	f8                   	clc
    3aa5:	06                   	(bad)
    3aa6:	00 00                	add    BYTE PTR [rax],al
    3aa8:	10 06                	adc    BYTE PTR [rsi],al
    3aaa:	6d                   	ins    DWORD PTR es:[rdi],dx
    3aab:	00 00                	add    BYTE PTR [rax],al
    3aad:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
    3ab0:	02 04 00             	add    al,BYTE PTR [rax+rax*1]
    3ab3:	00 11                	add    BYTE PTR [rcx],dl
    3ab5:	34 0c                	xor    al,0xc
    3ab7:	66 00 00             	data16 add BYTE PTR [rax],al
    3aba:	00 33                	add    BYTE PTR [rbx],dh
    3abc:	09 00                	or     DWORD PTR [rax],eax
    3abe:	00 01                	add    BYTE PTR [rcx],al
    3ac0:	66 00 00             	data16 add BYTE PTR [rax],al
    3ac3:	00 01                	add    BYTE PTR [rcx],al
    3ac5:	f5                   	cmc
    3ac6:	00 00                	add    BYTE PTR [rax],al
    3ac8:	00 23                	add    BYTE PTR [rbx],ah
    3aca:	00 1d b0 03 00 00    	add    BYTE PTR [rip+0x3b0],bl        # 3e80 <_fini+0x30c>
    3ad0:	af                   	scas   eax,DWORD PTR es:[rdi]
    3ad1:	02 44 09 00          	add    al,BYTE PTR [rcx+rcx*1+0x0]
    3ad5:	00 01                	add    BYTE PTR [rcx],al
    3ad7:	33 01                	xor    eax,DWORD PTR [rcx]
    3ad9:	00 00                	add    BYTE PTR [rax],al
    3adb:	00 0c 7a             	add    BYTE PTR [rdx+rdi*2],cl
    3ade:	09 00                	or     DWORD PTR [rax],eax
    3ae0:	00 01                	add    BYTE PTR [rcx],al
    3ae2:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ae3:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    3ae6:	00 00                	add    BYTE PTR [rax],al
    3ae8:	5f                   	pop    rdi
    3ae9:	09 00                	or     DWORD PTR [rax],eax
    3aeb:	00 01                	add    BYTE PTR [rcx],al
    3aed:	f5                   	cmc
    3aee:	00 00                	add    BYTE PTR [rax],al
    3af0:	00 01                	add    BYTE PTR [rcx],al
    3af2:	f5                   	cmc
    3af3:	00 00                	add    BYTE PTR [rax],al
    3af5:	00 00                	add    BYTE PTR [rax],al
    3af7:	08 8a 09 00 00 ab    	or     BYTE PTR [rdx-0x54fffff7],cl
    3afd:	02 0e                	add    cl,BYTE PTR [rsi]
    3aff:	33 01                	xor    eax,DWORD PTR [rcx]
    3b01:	00 00                	add    BYTE PTR [rax],al
    3b03:	7a 09                	jp     3b0e <_Z27standartDeviationCollisionsP7HashMapf+0x2ce>
    3b05:	00 00                	add    BYTE PTR [rax],al
    3b07:	01 33                	add    DWORD PTR [rbx],esi
    3b09:	01 00                	add    DWORD PTR [rax],eax
    3b0b:	00 01                	add    BYTE PTR [rcx],al
    3b0d:	2e 00 00             	cs add BYTE PTR [rax],al
    3b10:	00 00                	add    BYTE PTR [rax],al
    3b12:	3b ad 05 00 00 12    	cmp    ebp,DWORD PTR [rbp+0x12000005]
    3b18:	45 0d 9b 09 00 00    	rex.RB or eax,0x99b
    3b1e:	01 f5                	add    ebp,esi
    3b20:	00 00                	add    BYTE PTR [rax],al
    3b22:	00 01                	add    BYTE PTR [rcx],al
    3b24:	f5                   	cmc
    3b25:	00 00                	add    BYTE PTR [rax],al
    3b27:	00 01                	add    BYTE PTR [rcx],al
    3b29:	12 01                	adc    al,BYTE PTR [rcx]
    3b2b:	00 00                	add    BYTE PTR [rax],al
    3b2d:	01 f5                	add    ebp,esi
    3b2f:	00 00                	add    BYTE PTR [rax],al
    3b31:	00 00                	add    BYTE PTR [rax],al
    3b33:	08 91 06 00 00 a3    	or     BYTE PTR [rcx-0x5cfffffa],dl
    3b39:	02 0e                	add    cl,BYTE PTR [rsi]
    3b3b:	33 01                	xor    eax,DWORD PTR [rcx]
    3b3d:	00 00                	add    BYTE PTR [rax],al
    3b3f:	b6 09                	mov    dh,0x9
    3b41:	00 00                	add    BYTE PTR [rax],al
    3b43:	01 2e                	add    DWORD PTR [rsi],ebp
    3b45:	00 00                	add    BYTE PTR [rax],al
    3b47:	00 01                	add    BYTE PTR [rcx],al
    3b49:	2e 00 00             	cs add BYTE PTR [rax],al
    3b4c:	00 00                	add    BYTE PTR [rax],al
    3b4e:	24 0b                	and    al,0xb
    3b50:	05 00 00 96 3d       	add    eax,0x3d960000
    3b55:	03 00                	add    eax,DWORD PTR [rax]
    3b57:	00 70 22             	add    BYTE PTR [rax+0x22],dh
    3b5a:	00 00                	add    BYTE PTR [rax],al
    3b5c:	00 00                	add    BYTE PTR [rax],al
    3b5e:	00 00                	add    BYTE PTR [rax],al
    3b60:	23 02                	and    eax,DWORD PTR [rdx]
    3b62:	00 00                	add    BYTE PTR [rax],al
    3b64:	00 00                	add    BYTE PTR [rax],al
    3b66:	00 00                	add    BYTE PTR [rax],al
    3b68:	01 9c 00 10 00 00 11 	add    DWORD PTR [rax+rax*1+0x11000010],ebx
    3b6f:	7b 21                	jnp    3b92 <_fini+0x1e>
    3b71:	00 00                	add    BYTE PTR [rax],al
    3b73:	96                   	xchg   esi,eax
    3b74:	17                   	(bad)
    3b75:	06                   	(bad)
    3b76:	09 00                	or     DWORD PTR [rax],eax
    3b78:	00 4d 14             	add    BYTE PTR [rbp+0x14],cl
    3b7b:	00 00                	add    BYTE PTR [rax],al
    3b7d:	43 14 00             	rex.XB adc al,0x0
    3b80:	00 19                	add    BYTE PTR [rcx],bl
    3b82:	cd 03                	int    0x3
    3b84:	00 00                	add    BYTE PTR [rax],al
    3b86:	10 10                	adc    BYTE PTR [rax],dl
    3b88:	00 00                	add    BYTE PTR [rax],al
    3b8a:	09 03                	or     DWORD PTR [rbx],eax
    3b8c:	cd 40                	int    0x40
    3b8e:	00 00                	add    BYTE PTR [rax],al
    3b90:	00 00                	add    BYTE PTR [rax],al
    3b92:	00 00                	add    BYTE PTR [rax],al
    3b94:	13 d9                	adc    ebx,ecx
    3b96:	22 00                	and    al,BYTE PTR [rax]
    3b98:	00 00                	add    BYTE PTR [rax],al
    3b9a:	00 00                	add    BYTE PTR [rax],al
    3b9c:	00 33                	add    BYTE PTR [rbx],dh
    3b9e:	00 00                	add    BYTE PTR [rax],al
    3ba0:	00 00                	add    BYTE PTR [rax],al
    3ba2:	00 00                	add    BYTE PTR [rax],al
    3ba4:	00 70 0a             	add    BYTE PTR [rax+0xa],dh
    3ba7:	00 00                	add    BYTE PTR [rax],al
    3ba9:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3bac:	9d                   	popf
    3bad:	0e                   	(bad)
    3bae:	66 00 00             	data16 add BYTE PTR [rax],al
    3bb1:	00 7b 14             	add    BYTE PTR [rbx+0x14],bh
    3bb4:	00 00                	add    BYTE PTR [rax],al
    3bb6:	77 14                	ja     3bcc <_fini+0x58>
    3bb8:	00 00                	add    BYTE PTR [rax],al
    3bba:	25 68 15 00 00       	and    eax,0x1568
    3bbf:	f0 22 00             	lock and al,BYTE PTR [rax]
    3bc2:	00 00                	add    BYTE PTR [rax],al
    3bc4:	00 00                	add    BYTE PTR [rax],al
    3bc6:	00 01                	add    BYTE PTR [rcx],al
    3bc8:	f0 22 00             	lock and al,BYTE PTR [rax]
    3bcb:	00 00                	add    BYTE PTR [rax],al
    3bcd:	00 00                	add    BYTE PTR [rax],al
    3bcf:	00 12                	add    BYTE PTR [rdx],dl
    3bd1:	00 00                	add    BYTE PTR [rax],al
    3bd3:	00 00                	add    BYTE PTR [rax],al
    3bd5:	00 00                	add    BYTE PTR [rax],al
    3bd7:	00 9e 0f 04 77 15    	add    BYTE PTR [rsi+0x1577040f],bl
    3bdd:	00 00                	add    BYTE PTR [rax],al
    3bdf:	8d 14 00             	lea    edx,[rax+rax*1]
    3be2:	00 8b 14 00 00 05    	add    BYTE PTR [rbx+0x5000014],cl
    3be8:	02 23                	add    ah,BYTE PTR [rbx]
    3bea:	00 00                	add    BYTE PTR [rax],al
    3bec:	00 00                	add    BYTE PTR [rax],al
    3bee:	00 00                	add    BYTE PTR [rax],al
    3bf0:	17                   	(bad)
    3bf1:	09 00                	or     DWORD PTR [rax],eax
    3bf3:	00 03                	add    BYTE PTR [rbx],al
    3bf5:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3bf8:	32 03                	xor    al,BYTE PTR [rbx]
    3bfa:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3bfe:	00 03                	add    BYTE PTR [rbx],al
    3c00:	01 51 02             	add    DWORD PTR [rcx+0x2],edx
    3c03:	7c 00                	jl     3c05 <_fini+0x91>
    3c05:	00 00                	add    BYTE PTR [rax],al
    3c07:	00 13                	add    BYTE PTR [rbx],dl
    3c09:	29 23                	sub    DWORD PTR [rbx],esp
    3c0b:	00 00                	add    BYTE PTR [rax],al
    3c0d:	00 00                	add    BYTE PTR [rax],al
    3c0f:	00 00                	add    BYTE PTR [rax],al
    3c11:	3c 00                	cmp    al,0x0
    3c13:	00 00                	add    BYTE PTR [rax],al
    3c15:	00 00                	add    BYTE PTR [rax],al
    3c17:	00 00                	add    BYTE PTR [rax],al
    3c19:	d2 0a                	ror    BYTE PTR [rdx],cl
    3c1b:	00 00                	add    BYTE PTR [rax],al
    3c1d:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3c20:	a2 0e 66 00 00 00 a6 	movabs ds:0x14a6000000660e,al
    3c27:	14 00 
    3c29:	00 9e 14 00 00 14    	add    BYTE PTR [rsi+0x14000014],bl
    3c2f:	68 15 00 00 40       	push   0x40000015
    3c34:	23 00                	and    eax,DWORD PTR [rax]
    3c36:	00 00                	add    BYTE PTR [rax],al
    3c38:	00 00                	add    BYTE PTR [rax],al
    3c3a:	00 01                	add    BYTE PTR [rcx],al
    3c3c:	6b 02 00             	imul   eax,DWORD PTR [rdx],0x0
    3c3f:	00 a3 0f 04 77 15    	add    BYTE PTR [rbx+0x1577040f],ah
    3c45:	00 00                	add    BYTE PTR [rax],al
    3c47:	c8 14 00 00          	enter  0x14,0x0
    3c4b:	c6                   	(bad)
    3c4c:	14 00                	adc    al,0x0
    3c4e:	00 05 5f 23 00 00    	add    BYTE PTR [rip+0x235f],al        # 5fb3 <_GLOBAL_OFFSET_TABLE_+0xc3>
    3c54:	00 00                	add    BYTE PTR [rax],al
    3c56:	00 00                	add    BYTE PTR [rax],al
    3c58:	17                   	(bad)
    3c59:	09 00                	or     DWORD PTR [rax],eax
    3c5b:	00 03                	add    BYTE PTR [rbx],al
    3c5d:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3c60:	32 03                	xor    al,BYTE PTR [rbx]
    3c62:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3c66:	00 00                	add    BYTE PTR [rax],al
    3c68:	00 00                	add    BYTE PTR [rax],al
    3c6a:	13 82 23 00 00 00    	adc    eax,DWORD PTR [rdx+0x23]
    3c70:	00 00                	add    BYTE PTR [rax],al
    3c72:	00 3c 00             	add    BYTE PTR [rax+rax*1],bh
    3c75:	00 00                	add    BYTE PTR [rax],al
    3c77:	00 00                	add    BYTE PTR [rax],al
    3c79:	00 00                	add    BYTE PTR [rax],al
    3c7b:	34 0b                	xor    al,0xb
    3c7d:	00 00                	add    BYTE PTR [rax],al
    3c7f:	0f 69 00             	punpckhwd mm0,QWORD PTR [rax]
    3c82:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    3c83:	0e                   	(bad)
    3c84:	66 00 00             	data16 add BYTE PTR [rax],al
    3c87:	00 e1                	add    cl,ah
    3c89:	14 00                	adc    al,0x0
    3c8b:	00 d9                	add    cl,bl
    3c8d:	14 00                	adc    al,0x0
    3c8f:	00 14 68             	add    BYTE PTR [rax+rbp*2],dl
    3c92:	15 00 00 98 23       	adc    eax,0x23980000
    3c97:	00 00                	add    BYTE PTR [rax],al
    3c99:	00 00                	add    BYTE PTR [rax],al
    3c9b:	00 00                	add    BYTE PTR [rax],al
    3c9d:	01 7b 02             	add    DWORD PTR [rbx+0x2],edi
    3ca0:	00 00                	add    BYTE PTR [rax],al
    3ca2:	a8 0f                	test   al,0xf
    3ca4:	04 77                	add    al,0x77
    3ca6:	15 00 00 03 15       	adc    eax,0x15030000
    3cab:	00 00                	add    BYTE PTR [rax],al
    3cad:	01 15 00 00 05 b8    	add    DWORD PTR [rip+0xffffffffb8050000],edx        # ffffffffb8053cb3 <_end+0xffffffffb804dc9b>
    3cb3:	23 00                	and    eax,DWORD PTR [rax]
    3cb5:	00 00                	add    BYTE PTR [rax],al
    3cb7:	00 00                	add    BYTE PTR [rax],al
    3cb9:	00 17                	add    BYTE PTR [rdi],dl
    3cbb:	09 00                	or     DWORD PTR [rax],eax
    3cbd:	00 03                	add    BYTE PTR [rbx],al
    3cbf:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3cc2:	32 03                	xor    al,BYTE PTR [rbx]
    3cc4:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3cc8:	00 00                	add    BYTE PTR [rax],al
    3cca:	00 00                	add    BYTE PTR [rax],al
    3ccc:	13 db                	adc    ebx,ebx
    3cce:	23 00                	and    eax,DWORD PTR [rax]
    3cd0:	00 00                	add    BYTE PTR [rax],al
    3cd2:	00 00                	add    BYTE PTR [rax],al
    3cd4:	00 3b                	add    BYTE PTR [rbx],bh
    3cd6:	00 00                	add    BYTE PTR [rax],al
    3cd8:	00 00                	add    BYTE PTR [rax],al
    3cda:	00 00                	add    BYTE PTR [rax],al
    3cdc:	00 96 0b 00 00 0f    	add    BYTE PTR [rsi+0xf00000b],dl
    3ce2:	69 00 ac 0e 66 00    	imul   eax,DWORD PTR [rax],0x660eac
    3ce8:	00 00                	add    BYTE PTR [rax],al
    3cea:	1c 15                	sbb    al,0x15
    3cec:	00 00                	add    BYTE PTR [rax],al
    3cee:	14 15                	adc    al,0x15
    3cf0:	00 00                	add    BYTE PTR [rax],al
    3cf2:	14 68                	adc    al,0x68
    3cf4:	15 00 00 f0 23       	adc    eax,0x23f00000
    3cf9:	00 00                	add    BYTE PTR [rax],al
    3cfb:	00 00                	add    BYTE PTR [rax],al
    3cfd:	00 00                	add    BYTE PTR [rax],al
    3cff:	01 8b 02 00 00 ad    	add    DWORD PTR [rbx-0x52fffffe],ecx
    3d05:	0f 04                	(bad)
    3d07:	77 15                	ja     3d1e <_fini+0x1aa>
    3d09:	00 00                	add    BYTE PTR [rax],al
    3d0b:	3e 15 00 00 3c 15    	ds adc eax,0x153c0000
    3d11:	00 00                	add    BYTE PTR [rax],al
    3d13:	05 10 24 00 00       	add    eax,0x2410
    3d18:	00 00                	add    BYTE PTR [rax],al
    3d1a:	00 00                	add    BYTE PTR [rax],al
    3d1c:	17                   	(bad)
    3d1d:	09 00                	or     DWORD PTR [rax],eax
    3d1f:	00 03                	add    BYTE PTR [rbx],al
    3d21:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3d24:	32 03                	xor    al,BYTE PTR [rbx]
    3d26:	01 54 02 76          	add    DWORD PTR [rdx+rax*1+0x76],edx
    3d2a:	00 00                	add    BYTE PTR [rax],al
    3d2c:	00 00                	add    BYTE PTR [rax],al
    3d2e:	13 2c 24             	adc    ebp,DWORD PTR [rsp]
    3d31:	00 00                	add    BYTE PTR [rax],al
    3d33:	00 00                	add    BYTE PTR [rax],al
    3d35:	00 00                	add    BYTE PTR [rax],al
    3d37:	3a 00                	cmp    al,BYTE PTR [rax]
    3d39:	00 00                	add    BYTE PTR [rax],al
    3d3b:	00 00                	add    BYTE PTR [rax],al
    3d3d:	00 00                	add    BYTE PTR [rax],al
    3d3f:	f8                   	clc
    3d40:	0b 00                	or     eax,DWORD PTR [rax]
    3d42:	00 0f                	add    BYTE PTR [rdi],cl
    3d44:	69 00 b1 0e 66 00    	imul   eax,DWORD PTR [rax],0x660eb1
    3d4a:	00 00                	add    BYTE PTR [rax],al
    3d4c:	57                   	push   rdi
    3d4d:	15 00 00 4f 15       	adc    eax,0x154f0000
    3d52:	00 00                	add    BYTE PTR [rax],al
    3d54:	14 68                	adc    al,0x68
    3d56:	15 00 00 40 24       	adc    eax,0x24400000
    3d5b:	00 00                	add    BYTE PTR [rax],al
    3d5d:	00 00                	add    BYTE PTR [rax],al
    3d5f:	00 00                	add    BYTE PTR [rax],al
    3d61:	01 9b 02 00 00 b2    	add    DWORD PTR [rbx-0x4dfffffe],ebx
    3d67:	0f 04                	(bad)
    3d69:	77 15                	ja     3d80 <_fini+0x20c>
    3d6b:	00 00                	add    BYTE PTR [rax],al
    3d6d:	79 15                	jns    3d84 <_fini+0x210>
    3d6f:	00 00                	add    BYTE PTR [rax],al
    3d71:	77 15                	ja     3d88 <_fini+0x214>
    3d73:	00 00                	add    BYTE PTR [rax],al
    3d75:	05 61 24 00 00       	add    eax,0x2461
    3d7a:	00 00                	add    BYTE PTR [rax],al
    3d7c:	00 00                	add    BYTE PTR [rax],al
    3d7e:	17                   	(bad)
    3d7f:	09 00                	or     DWORD PTR [rax],eax
    3d81:	00 03                	add    BYTE PTR [rbx],al
    3d83:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3d86:	32 03                	xor    al,BYTE PTR [rbx]
    3d88:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    3d8c:	00 00                	add    BYTE PTR [rax],al
    3d8e:	00 00                	add    BYTE PTR [rax],al
    3d90:	12 68 15             	adc    ch,BYTE PTR [rax+0x15]
    3d93:	00 00                	add    BYTE PTR [rax],al
    3d95:	87 22                	xchg   DWORD PTR [rdx],esp
    3d97:	00 00                	add    BYTE PTR [rax],al
    3d99:	00 00                	add    BYTE PTR [rax],al
    3d9b:	00 00                	add    BYTE PTR [rax],al
    3d9d:	01 60 02             	add    DWORD PTR [rax+0x2],esp
    3da0:	00 00                	add    BYTE PTR [rax],al
    3da2:	99                   	cdq
    3da3:	0b 3e                	or     edi,DWORD PTR [rsi]
    3da5:	0c 00                	or     al,0x0
    3da7:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3daa:	15 00 00 8c 15       	adc    eax,0x158c0000
    3daf:	00 00                	add    BYTE PTR [rax],al
    3db1:	8a 15 00 00 05 9a    	mov    dl,BYTE PTR [rip+0xffffffff9a050000]        # ffffffff9a053db7 <_end+0xffffffff9a04dd9f>
    3db7:	22 00                	and    al,BYTE PTR [rax]
    3db9:	00 00                	add    BYTE PTR [rax],al
    3dbb:	00 00                	add    BYTE PTR [rax],al
    3dbd:	00 17                	add    BYTE PTR [rdi],dl
    3dbf:	09 00                	or     DWORD PTR [rax],eax
    3dc1:	00 03                	add    BYTE PTR [rbx],al
    3dc3:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3dc6:	32 03                	xor    al,BYTE PTR [rbx]
    3dc8:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3dcc:	e4 40                	in     al,0x40
	...
    3dd6:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3dd9:	00 00                	add    BYTE PTR [rax],al
    3ddb:	9a                   	(bad)
    3ddc:	22 00                	and    al,BYTE PTR [rax]
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	00 00                	add    BYTE PTR [rax],al
    3de2:	00 02                	add    BYTE PTR [rdx],al
    3de4:	9a                   	(bad)
    3de5:	22 00                	and    al,BYTE PTR [rax]
    3de7:	00 00                	add    BYTE PTR [rax],al
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 16                	add    BYTE PTR [rsi],dl
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 00                	add    BYTE PTR [rax],al
    3df1:	00 00                	add    BYTE PTR [rax],al
    3df3:	00 9a 0b 90 0c 00    	add    BYTE PTR [rdx+0xc900b],bl
    3df9:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3dfc:	15 00 00 9f 15       	adc    eax,0x159f0000
    3e01:	00 00                	add    BYTE PTR [rax],al
    3e03:	9d                   	popf
    3e04:	15 00 00 05 b0       	adc    eax,0xb0050000
    3e09:	22 00                	and    al,BYTE PTR [rax]
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 17                	add    BYTE PTR [rdi],dl
    3e11:	09 00                	or     DWORD PTR [rax],eax
    3e13:	00 03                	add    BYTE PTR [rbx],al
    3e15:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3e18:	32 03                	xor    al,BYTE PTR [rbx]
    3e1a:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3e1e:	f2 40 00 00          	repnz rex add BYTE PTR [rax],al
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3e2b:	00 00                	add    BYTE PTR [rax],al
    3e2d:	b0 22                	mov    al,0x22
    3e2f:	00 00                	add    BYTE PTR [rax],al
    3e31:	00 00                	add    BYTE PTR [rax],al
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	02 b0 22 00 00 00    	add    dh,BYTE PTR [rax+0x22]
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 16                	add    BYTE PTR [rsi],dl
    3e3f:	00 00                	add    BYTE PTR [rax],al
    3e41:	00 00                	add    BYTE PTR [rax],al
    3e43:	00 00                	add    BYTE PTR [rax],al
    3e45:	00 9b 0b e2 0c 00    	add    BYTE PTR [rbx+0xce20b],bl
    3e4b:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3e4e:	15 00 00 b2 15       	adc    eax,0x15b20000
    3e53:	00 00                	add    BYTE PTR [rax],al
    3e55:	b0 15                	mov    al,0x15
    3e57:	00 00                	add    BYTE PTR [rax],al
    3e59:	05 c6 22 00 00       	add    eax,0x22c6
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	00 00                	add    BYTE PTR [rax],al
    3e62:	17                   	(bad)
    3e63:	09 00                	or     DWORD PTR [rax],eax
    3e65:	00 03                	add    BYTE PTR [rbx],al
    3e67:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3e6a:	32 03                	xor    al,BYTE PTR [rbx]
    3e6c:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3e70:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    3e73:	00 00                	add    BYTE PTR [rax],al
    3e75:	00 00                	add    BYTE PTR [rax],al
    3e77:	00 00                	add    BYTE PTR [rax],al
    3e79:	00 09                	add    BYTE PTR [rcx],cl
    3e7b:	68 15 00 00 c6       	push   0xffffffffc6000015
    3e80:	22 00                	and    al,BYTE PTR [rax]
    3e82:	00 00                	add    BYTE PTR [rax],al
    3e84:	00 00                	add    BYTE PTR [rax],al
    3e86:	00 02                	add    BYTE PTR [rdx],al
    3e88:	c6                   	(bad)
    3e89:	22 00                	and    al,BYTE PTR [rax]
    3e8b:	00 00                	add    BYTE PTR [rax],al
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 13                	add    BYTE PTR [rbx],dl
    3e91:	00 00                	add    BYTE PTR [rax],al
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 9c 0b 34 0d 00 00 	add    BYTE PTR [rbx+rcx*1+0xd34],bl
    3e9e:	04 77                	add    al,0x77
    3ea0:	15 00 00 c5 15       	adc    eax,0x15c50000
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	c3                   	ret
    3ea8:	15 00 00 05 d9       	adc    eax,0xd9050000
    3ead:	22 00                	and    al,BYTE PTR [rax]
    3eaf:	00 00                	add    BYTE PTR [rax],al
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 17                	add    BYTE PTR [rdi],dl
    3eb5:	09 00                	or     DWORD PTR [rax],eax
    3eb7:	00 03                	add    BYTE PTR [rbx],al
    3eb9:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3ebc:	32 03                	xor    al,BYTE PTR [rbx]
    3ebe:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3ec2:	0e                   	(bad)
    3ec3:	41 00 00             	add    BYTE PTR [r8],al
    3ec6:	00 00                	add    BYTE PTR [rax],al
    3ec8:	00 00                	add    BYTE PTR [rax],al
    3eca:	00 00                	add    BYTE PTR [rax],al
    3ecc:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3ecf:	00 00                	add    BYTE PTR [rax],al
    3ed1:	0c 23                	or     al,0x23
    3ed3:	00 00                	add    BYTE PTR [rax],al
    3ed5:	00 00                	add    BYTE PTR [rax],al
    3ed7:	00 00                	add    BYTE PTR [rax],al
    3ed9:	02 0c 23             	add    cl,BYTE PTR [rbx+riz*1]
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	00 00                	add    BYTE PTR [rax],al
    3ee2:	0a 00                	or     al,BYTE PTR [rax]
    3ee4:	00 00                	add    BYTE PTR [rax],al
    3ee6:	00 00                	add    BYTE PTR [rax],al
    3ee8:	00 00                	add    BYTE PTR [rax],al
    3eea:	a0 0b 79 0d 00 00 04 	movabs al,ds:0x15770400000d790b
    3ef1:	77 15 
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	d8 15 00 00 d6 15    	fcom   DWORD PTR [rip+0x15d60000]        # 15d63efb <_end+0x15d5dee3>
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	05 16 23 00 00       	add    eax,0x2316
    3f02:	00 00                	add    BYTE PTR [rax],al
    3f04:	00 00                	add    BYTE PTR [rax],al
    3f06:	d0 16                	rcl    BYTE PTR [rsi],1
    3f08:	00 00                	add    BYTE PTR [rax],al
    3f0a:	03 01                	add    eax,DWORD PTR [rcx]
    3f0c:	55                   	push   rbp
    3f0d:	01 3a                	add    DWORD PTR [rdx],edi
    3f0f:	00 00                	add    BYTE PTR [rax],al
    3f11:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3f14:	00 00                	add    BYTE PTR [rax],al
    3f16:	16                   	(bad)
    3f17:	23 00                	and    eax,DWORD PTR [rax]
    3f19:	00 00                	add    BYTE PTR [rax],al
    3f1b:	00 00                	add    BYTE PTR [rax],al
    3f1d:	00 02                	add    BYTE PTR [rdx],al
    3f1f:	16                   	(bad)
    3f20:	23 00                	and    eax,DWORD PTR [rax]
    3f22:	00 00                	add    BYTE PTR [rax],al
    3f24:	00 00                	add    BYTE PTR [rax],al
    3f26:	00 13                	add    BYTE PTR [rbx],dl
    3f28:	00 00                	add    BYTE PTR [rax],al
    3f2a:	00 00                	add    BYTE PTR [rax],al
    3f2c:	00 00                	add    BYTE PTR [rax],al
    3f2e:	00 a1 0b cb 0d 00    	add    BYTE PTR [rcx+0xdcb0b],ah
    3f34:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3f37:	15 00 00 e7 15       	adc    eax,0x15e70000
    3f3c:	00 00                	add    BYTE PTR [rax],al
    3f3e:	e5 15                	in     eax,0x15
    3f40:	00 00                	add    BYTE PTR [rax],al
    3f42:	05 29 23 00 00       	add    eax,0x2329
    3f47:	00 00                	add    BYTE PTR [rax],al
    3f49:	00 00                	add    BYTE PTR [rax],al
    3f4b:	17                   	(bad)
    3f4c:	09 00                	or     DWORD PTR [rax],eax
    3f4e:	00 03                	add    BYTE PTR [rbx],al
    3f50:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3f53:	32 03                	xor    al,BYTE PTR [rbx]
    3f55:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3f59:	1d 41 00 00 00       	sbb    eax,0x41
    3f5e:	00 00                	add    BYTE PTR [rax],al
    3f60:	00 00                	add    BYTE PTR [rax],al
    3f62:	00 09                	add    BYTE PTR [rcx],cl
    3f64:	68 15 00 00 65       	push   0x65000015
    3f69:	23 00                	and    eax,DWORD PTR [rax]
    3f6b:	00 00                	add    BYTE PTR [rax],al
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 02                	add    BYTE PTR [rdx],al
    3f71:	65 23 00             	and    eax,DWORD PTR gs:[rax]
    3f74:	00 00                	add    BYTE PTR [rax],al
    3f76:	00 00                	add    BYTE PTR [rax],al
    3f78:	00 0a                	add    BYTE PTR [rdx],cl
    3f7a:	00 00                	add    BYTE PTR [rax],al
    3f7c:	00 00                	add    BYTE PTR [rax],al
    3f7e:	00 00                	add    BYTE PTR [rax],al
    3f80:	00 a5 0b 10 0e 00    	add    BYTE PTR [rbp+0xe100b],ah
    3f86:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3f89:	15 00 00 fa 15       	adc    eax,0x15fa0000
    3f8e:	00 00                	add    BYTE PTR [rax],al
    3f90:	f8                   	clc
    3f91:	15 00 00 05 6f       	adc    eax,0x6f050000
    3f96:	23 00                	and    eax,DWORD PTR [rax]
    3f98:	00 00                	add    BYTE PTR [rax],al
    3f9a:	00 00                	add    BYTE PTR [rax],al
    3f9c:	00 d0                	add    al,dl
    3f9e:	16                   	(bad)
    3f9f:	00 00                	add    BYTE PTR [rax],al
    3fa1:	03 01                	add    eax,DWORD PTR [rcx]
    3fa3:	55                   	push   rbp
    3fa4:	01 3a                	add    DWORD PTR [rdx],edi
    3fa6:	00 00                	add    BYTE PTR [rax],al
    3fa8:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    3fab:	00 00                	add    BYTE PTR [rax],al
    3fad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fae:	23 00                	and    eax,DWORD PTR [rax]
    3fb0:	00 00                	add    BYTE PTR [rax],al
    3fb2:	00 00                	add    BYTE PTR [rax],al
    3fb4:	00 02                	add    BYTE PTR [rdx],al
    3fb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3fb7:	23 00                	and    eax,DWORD PTR [rax]
    3fb9:	00 00                	add    BYTE PTR [rax],al
    3fbb:	00 00                	add    BYTE PTR [rax],al
    3fbd:	00 13                	add    BYTE PTR [rbx],dl
    3fbf:	00 00                	add    BYTE PTR [rax],al
    3fc1:	00 00                	add    BYTE PTR [rax],al
    3fc3:	00 00                	add    BYTE PTR [rax],al
    3fc5:	00 a6 0b 62 0e 00    	add    BYTE PTR [rsi+0xe620b],ah
    3fcb:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    3fce:	15 00 00 09 16       	adc    eax,0x16090000
    3fd3:	00 00                	add    BYTE PTR [rax],al
    3fd5:	07                   	(bad)
    3fd6:	16                   	(bad)
    3fd7:	00 00                	add    BYTE PTR [rax],al
    3fd9:	05 82 23 00 00       	add    eax,0x2382
    3fde:	00 00                	add    BYTE PTR [rax],al
    3fe0:	00 00                	add    BYTE PTR [rax],al
    3fe2:	17                   	(bad)
    3fe3:	09 00                	or     DWORD PTR [rax],eax
    3fe5:	00 03                	add    BYTE PTR [rbx],al
    3fe7:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    3fea:	32 03                	xor    al,BYTE PTR [rbx]
    3fec:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    3ff0:	28 41 00             	sub    BYTE PTR [rcx+0x0],al
    3ff3:	00 00                	add    BYTE PTR [rax],al
    3ff5:	00 00                	add    BYTE PTR [rax],al
    3ff7:	00 00                	add    BYTE PTR [rax],al
    3ff9:	00 09                	add    BYTE PTR [rcx],cl
    3ffb:	68 15 00 00 be       	push   0xffffffffbe000015
    4000:	23 00                	and    eax,DWORD PTR [rax]
    4002:	00 00                	add    BYTE PTR [rax],al
    4004:	00 00                	add    BYTE PTR [rax],al
    4006:	00 02                	add    BYTE PTR [rdx],al
    4008:	be 23 00 00 00       	mov    esi,0x23
    400d:	00 00                	add    BYTE PTR [rax],al
    400f:	00 0a                	add    BYTE PTR [rdx],cl
    4011:	00 00                	add    BYTE PTR [rax],al
    4013:	00 00                	add    BYTE PTR [rax],al
    4015:	00 00                	add    BYTE PTR [rax],al
    4017:	00 aa 0b a7 0e 00    	add    BYTE PTR [rdx+0xea70b],ch
    401d:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    4020:	15 00 00 1c 16       	adc    eax,0x161c0000
    4025:	00 00                	add    BYTE PTR [rax],al
    4027:	1a 16                	sbb    dl,BYTE PTR [rsi]
    4029:	00 00                	add    BYTE PTR [rax],al
    402b:	05 c8 23 00 00       	add    eax,0x23c8
    4030:	00 00                	add    BYTE PTR [rax],al
    4032:	00 00                	add    BYTE PTR [rax],al
    4034:	d0 16                	rcl    BYTE PTR [rsi],1
    4036:	00 00                	add    BYTE PTR [rax],al
    4038:	03 01                	add    eax,DWORD PTR [rcx]
    403a:	55                   	push   rbp
    403b:	01 3a                	add    DWORD PTR [rdx],edi
    403d:	00 00                	add    BYTE PTR [rax],al
    403f:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    4042:	00 00                	add    BYTE PTR [rax],al
    4044:	c8 23 00 00          	enter  0x23,0x0
    4048:	00 00                	add    BYTE PTR [rax],al
    404a:	00 00                	add    BYTE PTR [rax],al
    404c:	02 c8                	add    cl,al
    404e:	23 00                	and    eax,DWORD PTR [rax]
    4050:	00 00                	add    BYTE PTR [rax],al
    4052:	00 00                	add    BYTE PTR [rax],al
    4054:	00 13                	add    BYTE PTR [rbx],dl
    4056:	00 00                	add    BYTE PTR [rax],al
    4058:	00 00                	add    BYTE PTR [rax],al
    405a:	00 00                	add    BYTE PTR [rax],al
    405c:	00 ab 0b f9 0e 00    	add    BYTE PTR [rbx+0xef90b],ch
    4062:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    4065:	15 00 00 2b 16       	adc    eax,0x162b0000
    406a:	00 00                	add    BYTE PTR [rax],al
    406c:	29 16                	sub    DWORD PTR [rsi],edx
    406e:	00 00                	add    BYTE PTR [rax],al
    4070:	05 db 23 00 00       	add    eax,0x23db
    4075:	00 00                	add    BYTE PTR [rax],al
    4077:	00 00                	add    BYTE PTR [rax],al
    4079:	17                   	(bad)
    407a:	09 00                	or     DWORD PTR [rax],eax
    407c:	00 03                	add    BYTE PTR [rbx],al
    407e:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    4081:	32 03                	xor    al,BYTE PTR [rbx]
    4083:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    4087:	33 41 00             	xor    eax,DWORD PTR [rcx+0x0]
    408a:	00 00                	add    BYTE PTR [rax],al
    408c:	00 00                	add    BYTE PTR [rax],al
    408e:	00 00                	add    BYTE PTR [rax],al
    4090:	00 09                	add    BYTE PTR [rcx],cl
    4092:	68 15 00 00 16       	push   0x16000015
    4097:	24 00                	and    al,0x0
    4099:	00 00                	add    BYTE PTR [rax],al
    409b:	00 00                	add    BYTE PTR [rax],al
    409d:	00 02                	add    BYTE PTR [rdx],al
    409f:	16                   	(bad)
    40a0:	24 00                	and    al,0x0
    40a2:	00 00                	add    BYTE PTR [rax],al
    40a4:	00 00                	add    BYTE PTR [rax],al
    40a6:	00 0a                	add    BYTE PTR [rdx],cl
    40a8:	00 00                	add    BYTE PTR [rax],al
    40aa:	00 00                	add    BYTE PTR [rax],al
    40ac:	00 00                	add    BYTE PTR [rax],al
    40ae:	00 af 0b 3e 0f 00    	add    BYTE PTR [rdi+0xf3e0b],ch
    40b4:	00 04 77             	add    BYTE PTR [rdi+rsi*2],al
    40b7:	15 00 00 3e 16       	adc    eax,0x163e0000
    40bc:	00 00                	add    BYTE PTR [rax],al
    40be:	3c 16                	cmp    al,0x16
    40c0:	00 00                	add    BYTE PTR [rax],al
    40c2:	05 20 24 00 00       	add    eax,0x2420
    40c7:	00 00                	add    BYTE PTR [rax],al
    40c9:	00 00                	add    BYTE PTR [rax],al
    40cb:	d0 16                	rcl    BYTE PTR [rsi],1
    40cd:	00 00                	add    BYTE PTR [rax],al
    40cf:	03 01                	add    eax,DWORD PTR [rcx]
    40d1:	55                   	push   rbp
    40d2:	01 3a                	add    DWORD PTR [rdx],edi
    40d4:	00 00                	add    BYTE PTR [rax],al
    40d6:	09 68 15             	or     DWORD PTR [rax+0x15],ebp
    40d9:	00 00                	add    BYTE PTR [rax],al
    40db:	20 24 00             	and    BYTE PTR [rax+rax*1],ah
    40de:	00 00                	add    BYTE PTR [rax],al
    40e0:	00 00                	add    BYTE PTR [rax],al
    40e2:	00 02                	add    BYTE PTR [rdx],al
    40e4:	20 24 00             	and    BYTE PTR [rax+rax*1],ah
    40e7:	00 00                	add    BYTE PTR [rax],al
    40e9:	00 00                	add    BYTE PTR [rax],al
    40eb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    40ee:	00 00                	add    BYTE PTR [rax],al
    40f0:	00 00                	add    BYTE PTR [rax],al
    40f2:	00 00                	add    BYTE PTR [rax],al
    40f4:	b0 0b                	mov    al,0xb
    40f6:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    40f8:	00 00                	add    BYTE PTR [rax],al
    40fa:	04 77                	add    al,0x77
    40fc:	15 00 00 4d 16       	adc    eax,0x164d0000
    4101:	00 00                	add    BYTE PTR [rax],al
    4103:	4b 16                	rex.WXB (bad)
    4105:	00 00                	add    BYTE PTR [rax],al
    4107:	05 2c 24 00 00       	add    eax,0x242c
    410c:	00 00                	add    BYTE PTR [rax],al
    410e:	00 00                	add    BYTE PTR [rax],al
    4110:	e3 16                	jrcxz  4128 <_IO_stdin_used+0x128>
    4112:	00 00                	add    BYTE PTR [rax],al
    4114:	03 01                	add    eax,DWORD PTR [rcx]
    4116:	55                   	push   rbp
    4117:	09 03                	or     DWORD PTR [rbx],eax
    4119:	3e 41 00 00          	ds add BYTE PTR [r8],al
    411d:	00 00                	add    BYTE PTR [rax],al
    411f:	00 00                	add    BYTE PTR [rax],al
    4121:	00 00                	add    BYTE PTR [rax],al
    4123:	12 68 15             	adc    ch,BYTE PTR [rax+0x15]
    4126:	00 00                	add    BYTE PTR [rax],al
    4128:	66 24 00             	data16 and al,0x0
    412b:	00 00                	add    BYTE PTR [rax],al
    412d:	00 00                	add    BYTE PTR [rax],al
    412f:	00 02                	add    BYTE PTR [rdx],al
    4131:	ab                   	stos   DWORD PTR es:[rdi],eax
    4132:	02 00                	add    al,BYTE PTR [rax]
    4134:	00 b4 0b c4 0f 00 00 	add    BYTE PTR [rbx+rcx*1+0xfc4],dh
    413b:	04 77                	add    al,0x77
    413d:	15 00 00 5c 16       	adc    eax,0x165c0000
    4142:	00 00                	add    BYTE PTR [rax],al
    4144:	5a                   	pop    rdx
    4145:	16                   	(bad)
    4146:	00 00                	add    BYTE PTR [rax],al
    4148:	3c 74                	cmp    al,0x74
    414a:	24 00                	and    al,0x0
    414c:	00 00                	add    BYTE PTR [rax],al
    414e:	00 00                	add    BYTE PTR [rax],al
    4150:	00 d0                	add    al,dl
    4152:	16                   	(bad)
    4153:	00 00                	add    BYTE PTR [rax],al
    4155:	03 01                	add    eax,DWORD PTR [rcx]
    4157:	55                   	push   rbp
    4158:	01 3a                	add    DWORD PTR [rdx],edi
    415a:	00 00                	add    BYTE PTR [rax],al
    415c:	05 93 24 00 00       	add    eax,0x2493
    4161:	00 00                	add    BYTE PTR [rax],al
    4163:	00 00                	add    BYTE PTR [rax],al
    4165:	7a 09                	jp     4170 <_IO_stdin_used+0x170>
    4167:	00 00                	add    BYTE PTR [rax],al
    4169:	03 01                	add    eax,DWORD PTR [rcx]
    416b:	55                   	push   rbp
    416c:	09 03                	or     DWORD PTR [rbx],eax
    416e:	b3 40                	mov    bl,0x40
    4170:	00 00                	add    BYTE PTR [rax],al
    4172:	00 00                	add    BYTE PTR [rax],al
    4174:	00 00                	add    BYTE PTR [rax],al
    4176:	03 01                	add    eax,DWORD PTR [rcx]
    4178:	54                   	push   rsp
    4179:	09 03                	or     DWORD PTR [rbx],eax
    417b:	98                   	cwde
    417c:	40 00 00             	rex add BYTE PTR [rax],al
    417f:	00 00                	add    BYTE PTR [rax],al
    4181:	00 00                	add    BYTE PTR [rax],al
    4183:	03 01                	add    eax,DWORD PTR [rcx]
    4185:	51                   	push   rcx
    4186:	02 08                	add    cl,BYTE PTR [rax]
    4188:	97                   	xchg   edi,eax
    4189:	03 01                	add    eax,DWORD PTR [rcx]
    418b:	52                   	push   rdx
    418c:	09 03                	or     DWORD PTR [rbx],eax
    418e:	cd 40                	int    0x40
	...
    4198:	15 06 01 00 00       	adc    eax,0x106
    419d:	10 10                	adc    BYTE PTR [rax],dl
    419f:	00 00                	add    BYTE PTR [rax],al
    41a1:	16                   	(bad)
    41a2:	3a 00                	cmp    al,BYTE PTR [rax]
    41a4:	00 00                	add    BYTE PTR [rax],al
    41a6:	16                   	(bad)
    41a7:	00 0e                	add    BYTE PTR [rsi],cl
    41a9:	00 10                	add    BYTE PTR [rax],dl
    41ab:	00 00                	add    BYTE PTR [rax],al
    41ad:	24 9e                	and    al,0x9e
    41af:	04 00                	add    al,0x0
    41b1:	00 8d 53 04 00 00    	add    BYTE PTR [rbp+0x453],cl
    41b7:	30 22                	xor    BYTE PTR [rdx],ah
    41b9:	00 00                	add    BYTE PTR [rax],al
    41bb:	00 00                	add    BYTE PTR [rax],al
    41bd:	00 00                	add    BYTE PTR [rax],al
    41bf:	3e 00 00             	ds add BYTE PTR [rax],al
    41c2:	00 00                	add    BYTE PTR [rax],al
    41c4:	00 00                	add    BYTE PTR [rax],al
    41c6:	00 01                	add    BYTE PTR [rcx],al
    41c8:	9c                   	pushf
    41c9:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    41ca:	10 00                	adc    BYTE PTR [rax],al
    41cc:	00 11                	add    BYTE PTR [rcx],dl
    41ce:	7b 21                	jnp    41f1 <_IO_stdin_used+0x1f1>
    41d0:	00 00                	add    BYTE PTR [rax],al
    41d2:	8d 15 06 09 00 00    	lea    edx,[rip+0x906]        # 4ade <__GNU_EH_FRAME_HDR+0x3ee>
    41d8:	73 16                	jae    41f0 <_IO_stdin_used+0x1f0>
    41da:	00 00                	add    BYTE PTR [rax],al
    41dc:	69 16 00 00 19 cd    	imul   edx,DWORD PTR [rsi],0xcd190000
    41e2:	03 00                	add    eax,DWORD PTR [rax]
    41e4:	00 b4 10 00 00 09 03 	add    BYTE PTR [rax+rdx*1+0x3090000],dh
    41eb:	b8 40 00 00 00       	mov    eax,0x40
    41f0:	00 00                	add    BYTE PTR [rax],al
    41f2:	00 3d 45 22 00 00    	add    BYTE PTR [rip+0x2245],bh        # 643d <_end+0x425>
    41f8:	00 00                	add    BYTE PTR [rax],al
    41fa:	00 00                	add    BYTE PTR [rax],al
    41fc:	33 09                	xor    ecx,DWORD PTR [rcx]
    41fe:	00 00                	add    BYTE PTR [rax],al
    4200:	05 6e 22 00 00       	add    eax,0x226e
    4205:	00 00                	add    BYTE PTR [rax],al
    4207:	00 00                	add    BYTE PTR [rax],al
    4209:	7a 09                	jp     4214 <_IO_stdin_used+0x214>
    420b:	00 00                	add    BYTE PTR [rax],al
    420d:	03 01                	add    eax,DWORD PTR [rcx]
    420f:	55                   	push   rbp
    4210:	09 03                	or     DWORD PTR [rbx],eax
    4212:	b3 40                	mov    bl,0x40
    4214:	00 00                	add    BYTE PTR [rax],al
    4216:	00 00                	add    BYTE PTR [rax],al
    4218:	00 00                	add    BYTE PTR [rax],al
    421a:	03 01                	add    eax,DWORD PTR [rcx]
    421c:	54                   	push   rsp
    421d:	09 03                	or     DWORD PTR [rbx],eax
    421f:	98                   	cwde
    4220:	40 00 00             	rex add BYTE PTR [rax],al
    4223:	00 00                	add    BYTE PTR [rax],al
    4225:	00 00                	add    BYTE PTR [rax],al
    4227:	03 01                	add    eax,DWORD PTR [rcx]
    4229:	51                   	push   rcx
    422a:	02 08                	add    cl,BYTE PTR [rax]
    422c:	8e 03                	mov    es,WORD PTR [rbx]
    422e:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4231:	03 b8 40 00 00 00    	add    edi,DWORD PTR [rax+0x40]
    4237:	00 00                	add    BYTE PTR [rax],al
    4239:	00 00                	add    BYTE PTR [rax],al
    423b:	00 15 06 01 00 00    	add    BYTE PTR [rip+0x106],dl        # 4347 <_IO_stdin_used+0x347>
    4241:	b4 10                	mov    ah,0x10
    4243:	00 00                	add    BYTE PTR [rax],al
    4245:	16                   	(bad)
    4246:	3a 00                	cmp    al,BYTE PTR [rax]
    4248:	00 00                	add    BYTE PTR [rax],al
    424a:	14 00                	adc    al,0x0
    424c:	0e                   	(bad)
    424d:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    424e:	10 00                	adc    BYTE PTR [rax],al
    4250:	00 3e                	add    BYTE PTR [rsi],bh
    4252:	3f                   	(bad)
    4253:	09 00                	or     DWORD PTR [rax],eax
    4255:	00 01                	add    BYTE PTR [rcx],al
    4257:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4258:	0c 66                	or     al,0x66
    425a:	00 00                	add    BYTE PTR [rax],al
    425c:	00 01                	add    BYTE PTR [rcx],al
    425e:	e3 10                	jrcxz  4270 <_IO_stdin_used+0x270>
    4260:	00 00                	add    BYTE PTR [rax],al
    4262:	0d 74 09 00 00       	or     eax,0x974
    4267:	01 6f 21             	add    DWORD PTR [rdi+0x21],ebp
    426a:	e3 10                	jrcxz  427c <_IO_stdin_used+0x27c>
    426c:	00 00                	add    BYTE PTR [rax],al
    426e:	0d 84 09 00 00       	or     eax,0x984
    4273:	01 6f 30             	add    DWORD PTR [rdi+0x30],ebp
    4276:	e3 10                	jrcxz  4288 <_IO_stdin_used+0x288>
    4278:	00 00                	add    BYTE PTR [rax],al
    427a:	00 0a                	add    BYTE PTR [rdx],cl
    427c:	5b                   	pop    rbx
    427d:	08 00                	or     BYTE PTR [rax],al
    427f:	00 3f                	add    BYTE PTR [rdi],bh
    4281:	4c 09 00             	or     QWORD PTR [rax],r8
    4284:	00 01                	add    BYTE PTR [rcx],al
    4286:	61                   	(bad)
    4287:	0d 01 0d 11 00       	or     eax,0x110d01
    428c:	00 0d 7b 21 00 00    	add    BYTE PTR [rip+0x217b],cl        # 640d <_end+0x3f5>
    4292:	01 61 1c             	add    DWORD PTR [rcx+0x1c],esp
    4295:	06                   	(bad)
    4296:	09 00                	or     DWORD PTR [rax],eax
    4298:	00 40 26             	add    BYTE PTR [rax+0x26],al
    429b:	69 00 65 13 dd 07    	imul   eax,DWORD PTR [rax],0x7dd1365
    42a1:	00 00                	add    BYTE PTR [rax],al
    42a3:	00 00                	add    BYTE PTR [rax],al
    42a5:	41 77 05             	rex.B ja 42ad <_IO_stdin_used+0x2ad>
    42a8:	00 00                	add    BYTE PTR [rax],al
    42aa:	01 53 05             	add    DWORD PTR [rbx+0x5],edx
    42ad:	16                   	(bad)
    42ae:	05 00 00 66 00       	add    eax,0x660000
    42b3:	00 00                	add    BYTE PTR [rax],al
    42b5:	01 4f 11             	add    DWORD PTR [rdi+0x11],ecx
    42b8:	00 00                	add    BYTE PTR [rax],al
    42ba:	0d 7b 21 00 00       	or     eax,0x217b
    42bf:	01 53 19             	add    DWORD PTR [rbx+0x19],edx
    42c2:	06                   	(bad)
    42c3:	09 00                	or     DWORD PTR [rax],eax
    42c5:	00 0d d1 14 00 00    	add    BYTE PTR [rip+0x14d1],cl        # 579c <__FRAME_END__+0x984>
    42cb:	01 53 26             	add    DWORD PTR [rbx+0x26],edx
    42ce:	5b                   	pop    rbx
    42cf:	08 00                	or     BYTE PTR [rax],al
    42d1:	00 42 cd             	add    BYTE PTR [rdx-0x33],al
    42d4:	03 00                	add    eax,DWORD PTR [rax]
    42d6:	00 5f 11             	add    BYTE PTR [rdi+0x11],bl
    42d9:	00 00                	add    BYTE PTR [rax],al
    42db:	26 69 6e 78 00 56 0e 	es imul ebp,DWORD PTR [rsi+0x78],0xdd0e5600
    42e2:	dd 
    42e3:	07                   	(bad)
    42e4:	00 00                	add    BYTE PTR [rax],al
    42e6:	00 15 06 01 00 00    	add    BYTE PTR [rip+0x106],dl        # 43f2 <_IO_stdin_used+0x3f2>
    42ec:	5f                   	pop    rdi
    42ed:	11 00                	adc    DWORD PTR [rax],eax
    42ef:	00 16                	add    BYTE PTR [rsi],dl
    42f1:	3a 00                	cmp    al,BYTE PTR [rax]
    42f3:	00 00                	add    BYTE PTR [rax],al
    42f5:	20 00                	and    BYTE PTR [rax],al
    42f7:	0e                   	(bad)
    42f8:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    42fb:	00 1f                	add    BYTE PTR [rdi],bl
    42fd:	0f 04                	(bad)
    42ff:	00 00                	add    BYTE PTR [rax],al
    4301:	3a 05 52 06 00 00    	cmp    al,BYTE PTR [rip+0x652]        # 4959 <__GNU_EH_FRAME_HDR+0x269>
    4307:	66 00 00             	data16 add BYTE PTR [rax],al
    430a:	00 d0                	add    al,dl
    430c:	20 00                	and    BYTE PTR [rax],al
    430e:	00 00                	add    BYTE PTR [rax],al
    4310:	00 00                	add    BYTE PTR [rax],al
    4312:	00 dc                	add    ah,bl
    4314:	00 00                	add    BYTE PTR [rax],al
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	00 00                	add    BYTE PTR [rax],al
    431a:	00 01                	add    BYTE PTR [rcx],al
    431c:	9c                   	pushf
    431d:	c0 12 00             	rcl    BYTE PTR [rdx],0x0
    4320:	00 11                	add    BYTE PTR [rcx],dl
    4322:	7b 21                	jnp    4345 <_IO_stdin_used+0x345>
    4324:	00 00                	add    BYTE PTR [rax],al
    4326:	3a 17                	cmp    dl,BYTE PTR [rdi]
    4328:	06                   	(bad)
    4329:	09 00                	or     DWORD PTR [rax],eax
    432b:	00 ab 16 00 00 9d    	add    BYTE PTR [rbx-0x62ffffea],ch
    4331:	16                   	(bad)
    4332:	00 00                	add    BYTE PTR [rax],al
    4334:	11 d1                	adc    ecx,edx
    4336:	14 00                	adc    al,0x0
    4338:	00 3a                	add    BYTE PTR [rdx],bh
    433a:	24 5b                	and    al,0x5b
    433c:	08 00                	or     BYTE PTR [rax],al
    433e:	00 f0                	add    al,dh
    4340:	16                   	(bad)
    4341:	00 00                	add    BYTE PTR [rax],al
    4343:	e6 16                	out    0x16,al
    4345:	00 00                	add    BYTE PTR [rax],al
    4347:	19 cd                	sbb    ebp,ecx
    4349:	03 00                	add    eax,DWORD PTR [rax]
    434b:	00 d0                	add    al,dl
    434d:	12 00                	adc    al,BYTE PTR [rax]
    434f:	00 09                	add    BYTE PTR [rcx],cl
    4351:	03 10                	add    edx,DWORD PTR [rax]
    4353:	44 00 00             	add    BYTE PTR [rax],r8b
    4356:	00 00                	add    BYTE PTR [rax],al
    4358:	00 00                	add    BYTE PTR [rax],al
    435a:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    435e:	00 3d 0e dd 07 00    	add    BYTE PTR [rip+0x7dd0e],bh        # 82072 <_end+0x7c05a>
    4364:	00 33                	add    BYTE PTR [rbx],dh
    4366:	17                   	(bad)
    4367:	00 00                	add    BYTE PTR [rax],al
    4369:	2d 17 00 00 20       	sub    eax,0x20000017
    436e:	95                   	xchg   ebp,eax
    436f:	04 00                	add    al,0x0
    4371:	00 44 0e dd          	add    BYTE PTR [rsi+rcx*1-0x23],al
    4375:	07                   	(bad)
    4376:	00 00                	add    BYTE PTR [rax],al
    4378:	4e 17                	rex.WRX (bad)
    437a:	00 00                	add    BYTE PTR [rax],al
    437c:	4a 17                	rex.WX (bad)
    437e:	00 00                	add    BYTE PTR [rax],al
    4380:	20 14 06             	and    BYTE PTR [rsi+rax*1],dl
    4383:	00 00                	add    BYTE PTR [rax],al
    4385:	45 0e                	rex.RB (bad)
    4387:	dd 07                	fld    QWORD PTR [rdi]
    4389:	00 00                	add    BYTE PTR [rax],al
    438b:	61                   	(bad)
    438c:	17                   	(bad)
    438d:	00 00                	add    BYTE PTR [rax],al
    438f:	5d                   	pop    rbp
    4390:	17                   	(bad)
    4391:	00 00                	add    BYTE PTR [rax],al
    4393:	12 0d 11 00 00 f0    	adc    cl,BYTE PTR [rip+0xfffffffff0000011]        # fffffffff00043aa <_end+0xffffffffefffe392>
    4399:	20 00                	and    BYTE PTR [rax],al
    439b:	00 00                	add    BYTE PTR [rax],al
    439d:	00 00                	add    BYTE PTR [rax],al
    439f:	00 02                	add    BYTE PTR [rdx],al
    43a1:	3a 02                	cmp    al,BYTE PTR [rdx]
    43a3:	00 00                	add    BYTE PTR [rax],al
    43a5:	3d 21 84 12 00       	cmp    eax,0x128421
    43aa:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    43ad:	11 00                	adc    DWORD PTR [rax],eax
    43af:	00 76 17             	add    BYTE PTR [rsi+0x17],dh
    43b2:	00 00                	add    BYTE PTR [rax],al
    43b4:	74 17                	je     43cd <_IO_stdin_used+0x3cd>
    43b6:	00 00                	add    BYTE PTR [rax],al
    43b8:	04 22                	add    al,0x22
    43ba:	11 00                	adc    DWORD PTR [rax],eax
    43bc:	00 86 17 00 00 82    	add    BYTE PTR [rsi-0x7dffffe9],al
    43c2:	17                   	(bad)
    43c3:	00 00                	add    BYTE PTR [rax],al
    43c5:	27                   	(bad)
    43c6:	3a 02                	cmp    al,BYTE PTR [rdx]
    43c8:	00 00                	add    BYTE PTR [rax],al
    43ca:	1a 43 11             	sbb    al,BYTE PTR [rbx+0x11]
    43cd:	00 00                	add    BYTE PTR [rax],al
    43cf:	97                   	xchg   edi,eax
    43d0:	17                   	(bad)
    43d1:	00 00                	add    BYTE PTR [rax],al
    43d3:	95                   	xchg   ebp,eax
    43d4:	17                   	(bad)
    43d5:	00 00                	add    BYTE PTR [rax],al
    43d7:	14 b9                	adc    al,0xb9
    43d9:	10 00                	adc    BYTE PTR [rax],al
    43db:	00 14 21             	add    BYTE PTR [rcx+riz*1],dl
    43de:	00 00                	add    BYTE PTR [rax],al
    43e0:	00 00                	add    BYTE PTR [rax],al
    43e2:	00 00                	add    BYTE PTR [rax],al
    43e4:	00 4a 02             	add    BYTE PTR [rdx+0x2],cl
    43e7:	00 00                	add    BYTE PTR [rax],al
    43e9:	59                   	pop    rcx
    43ea:	19 04 d6             	sbb    DWORD PTR [rsi+rdx*8],eax
    43ed:	10 00                	adc    BYTE PTR [rax],al
    43ef:	00 a1 17 00 00 9f    	add    BYTE PTR [rcx-0x60ffffe9],ah
    43f5:	17                   	(bad)
    43f6:	00 00                	add    BYTE PTR [rax],al
    43f8:	04 ca                	add    al,0xca
    43fa:	10 00                	adc    BYTE PTR [rax],al
    43fc:	00 b2 17 00 00 b0    	add    BYTE PTR [rdx-0x4fffffe9],dh
    4402:	17                   	(bad)
    4403:	00 00                	add    BYTE PTR [rax],al
    4405:	05 1e 21 00 00       	add    eax,0x211e
    440a:	00 00                	add    BYTE PTR [rax],al
    440c:	00 00                	add    BYTE PTR [rax],al
    440e:	44 09 00             	or     DWORD PTR [rax],r8d
    4411:	00 03                	add    BYTE PTR [rbx],al
    4413:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    4416:	7d 00                	jge    4418 <_IO_stdin_used+0x418>
    4418:	00 00                	add    BYTE PTR [rax],al
    441a:	00 00                	add    BYTE PTR [rax],al
    441c:	05 ac 21 00 00       	add    eax,0x21ac
    4421:	00 00                	add    BYTE PTR [rax],al
    4423:	00 00                	add    BYTE PTR [rax],al
    4425:	7a 09                	jp     4430 <_IO_stdin_used+0x430>
    4427:	00 00                	add    BYTE PTR [rax],al
    4429:	03 01                	add    eax,DWORD PTR [rcx]
    442b:	55                   	push   rbp
    442c:	09 03                	or     DWORD PTR [rbx],eax
    442e:	b3 40                	mov    bl,0x40
    4430:	00 00                	add    BYTE PTR [rax],al
    4432:	00 00                	add    BYTE PTR [rax],al
    4434:	00 00                	add    BYTE PTR [rax],al
    4436:	03 01                	add    eax,DWORD PTR [rcx]
    4438:	54                   	push   rsp
    4439:	09 03                	or     DWORD PTR [rbx],eax
    443b:	98                   	cwde
    443c:	40 00 00             	rex add BYTE PTR [rax],al
    443f:	00 00                	add    BYTE PTR [rax],al
    4441:	00 00                	add    BYTE PTR [rax],al
    4443:	03 01                	add    eax,DWORD PTR [rcx]
    4445:	51                   	push   rcx
    4446:	02 08                	add    cl,BYTE PTR [rax]
    4448:	3b 03                	cmp    eax,DWORD PTR [rbx]
    444a:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    444d:	03 10                	add    edx,DWORD PTR [rax]
    444f:	44 00 00             	add    BYTE PTR [rax],r8b
    4452:	00 00                	add    BYTE PTR [rax],al
    4454:	00 00                	add    BYTE PTR [rax],al
    4456:	00 00                	add    BYTE PTR [rax],al
    4458:	15 06 01 00 00       	adc    eax,0x106
    445d:	d0 12                	rcl    BYTE PTR [rdx],1
    445f:	00 00                	add    BYTE PTR [rax],al
    4461:	16                   	(bad)
    4462:	3a 00                	cmp    al,BYTE PTR [rax]
    4464:	00 00                	add    BYTE PTR [rax],al
    4466:	1e                   	(bad)
    4467:	00 0e                	add    BYTE PTR [rsi],cl
    4469:	c0 12 00             	rcl    BYTE PTR [rdx],0x0
    446c:	00 1f                	add    BYTE PTR [rdi],bl
    446e:	3e 05 00 00 1d 05    	ds add eax,0x51d0000
    4474:	71 06                	jno    447c <_IO_stdin_used+0x47c>
    4476:	00 00                	add    BYTE PTR [rax],al
    4478:	66 00 00             	data16 add BYTE PTR [rax],al
    447b:	00 50 1f             	add    BYTE PTR [rax+0x1f],dl
    447e:	00 00                	add    BYTE PTR [rax],al
    4480:	00 00                	add    BYTE PTR [rax],al
    4482:	00 00                	add    BYTE PTR [rax],al
    4484:	73 01                	jae    4487 <_IO_stdin_used+0x487>
    4486:	00 00                	add    BYTE PTR [rax],al
    4488:	00 00                	add    BYTE PTR [rax],al
    448a:	00 00                	add    BYTE PTR [rax],al
    448c:	01 9c e6 14 00 00 11 	add    DWORD PTR [rsi+riz*8+0x11000014],ebx
    4493:	7b 21                	jnp    44b6 <_IO_stdin_used+0x4b6>
    4495:	00 00                	add    BYTE PTR [rax],al
    4497:	1d 18 06 09 00       	sbb    eax,0x90618
    449c:	00 cf                	add    bh,cl
    449e:	17                   	(bad)
    449f:	00 00                	add    BYTE PTR [rax],al
    44a1:	bf 17 00 00 11       	mov    edi,0x11000017
    44a6:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    44a9:	00 1d 25 5b 08 00    	add    BYTE PTR [rip+0x85b25],bl        # 89fd4 <_end+0x83fbc>
    44af:	00 1b                	add    BYTE PTR [rbx],bl
    44b1:	18 00                	sbb    BYTE PTR [rax],al
    44b3:	00 11                	add    BYTE PTR [rcx],dl
    44b5:	18 00                	sbb    BYTE PTR [rax],al
    44b7:	00 19                	add    BYTE PTR [rcx],bl
    44b9:	cd 03                	int    0x3
    44bb:	00 00                	add    BYTE PTR [rax],al
    44bd:	f6 14 00             	not    BYTE PTR [rax+rax*1]
    44c0:	00 09                	add    BYTE PTR [rcx],cl
    44c2:	03 f0                	add    esi,eax
    44c4:	43 00 00             	rex.XB add BYTE PTR [r8],al
    44c7:	00 00                	add    BYTE PTR [rax],al
    44c9:	00 00                	add    BYTE PTR [rax],al
    44cb:	0f 69 6e 78          	punpckhwd mm5,QWORD PTR [rsi+0x78]
    44cf:	00 20                	add    BYTE PTR [rax],ah
    44d1:	0e                   	(bad)
    44d2:	dd 07                	fld    QWORD PTR [rdi]
    44d4:	00 00                	add    BYTE PTR [rax],al
    44d6:	5e                   	pop    rsi
    44d7:	18 00                	sbb    BYTE PTR [rax],al
    44d9:	00 58 18             	add    BYTE PTR [rax+0x18],bl
    44dc:	00 00                	add    BYTE PTR [rax],al
    44de:	28 1a                	sub    BYTE PTR [rdx],bl
    44e0:	02 00                	add    al,BYTE PTR [rax]
    44e2:	00 5e 13             	add    BYTE PTR [rsi+0x13],bl
    44e5:	00 00                	add    BYTE PTR [rax],al
    44e7:	43                   	rex.XB
    44e8:	67 09 00             	or     DWORD PTR [eax],eax
    44eb:	00 01                	add    BYTE PTR [rcx],al
    44ed:	28 12                	sub    BYTE PTR [rdx],dl
    44ef:	dd 07                	fld    QWORD PTR [rdi]
    44f1:	00 00                	add    BYTE PTR [rax],al
    44f3:	01 52 00             	add    DWORD PTR [rdx+0x0],edx
    44f6:	12 0d 11 00 00 73    	adc    cl,BYTE PTR [rip+0x73000011]        # 7300450d <_end+0x72ffe4f5>
    44fc:	1f                   	(bad)
    44fd:	00 00                	add    BYTE PTR [rax],al
    44ff:	00 00                	add    BYTE PTR [rax],al
    4501:	00 00                	add    BYTE PTR [rax],al
    4503:	02 0f                	add    cl,BYTE PTR [rdi]
    4505:	02 00                	add    al,BYTE PTR [rax]
    4507:	00 20                	add    BYTE PTR [rax],ah
    4509:	21 eb                	and    ebx,ebp
    450b:	13 00                	adc    eax,DWORD PTR [rax]
    450d:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    4510:	11 00                	adc    DWORD PTR [rax],eax
    4512:	00 77 18             	add    BYTE PTR [rdi+0x18],dh
    4515:	00 00                	add    BYTE PTR [rax],al
    4517:	75 18                	jne    4531 <_IO_stdin_used+0x531>
    4519:	00 00                	add    BYTE PTR [rax],al
    451b:	29 22                	sub    DWORD PTR [rdx],esp
    451d:	11 00                	adc    DWORD PTR [rax],eax
    451f:	00 27                	add    BYTE PTR [rdi],ah
    4521:	0f 02 00             	lar    eax,WORD PTR [rax]
    4524:	00 1a                	add    BYTE PTR [rdx],bl
    4526:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    4529:	00 89 18 00 00 83    	add    BYTE PTR [rcx-0x7cffffe8],cl
    452f:	18 00                	sbb    BYTE PTR [rax],al
    4531:	00 25 b9 10 00 00    	add    BYTE PTR [rip+0x10b9],ah        # 55f0 <__FRAME_END__+0x7d8>
    4537:	8f                   	(bad)
    4538:	1f                   	(bad)
    4539:	00 00                	add    BYTE PTR [rax],al
    453b:	00 00                	add    BYTE PTR [rax],al
    453d:	00 00                	add    BYTE PTR [rax],al
    453f:	00 8f 1f 00 00 00    	add    BYTE PTR [rdi+0x1f],cl
    4545:	00 00                	add    BYTE PTR [rax],al
    4547:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 454d <_IO_stdin_used+0x54d>
    454d:	00 00                	add    BYTE PTR [rax],al
    454f:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    4552:	04 d6                	add    al,0xd6
    4554:	10 00                	adc    BYTE PTR [rax],al
    4556:	00 a6 18 00 00 a4    	add    BYTE PTR [rsi-0x5bffffe8],ah
    455c:	18 00                	sbb    BYTE PTR [rax],al
    455e:	00 04 ca             	add    BYTE PTR [rdx+rcx*8],al
    4561:	10 00                	adc    BYTE PTR [rax],al
    4563:	00 b7 18 00 00 b5    	add    BYTE PTR [rdi-0x4affffe8],dh
    4569:	18 00                	sbb    BYTE PTR [rax],al
    456b:	00 05 9c 1f 00 00    	add    BYTE PTR [rip+0x1f9c],al        # 650d <_end+0x4f5>
    4571:	00 00                	add    BYTE PTR [rax],al
    4573:	00 00                	add    BYTE PTR [rax],al
    4575:	44 09 00             	or     DWORD PTR [rax],r8d
    4578:	00 03                	add    BYTE PTR [rbx],al
    457a:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    457d:	7c 00                	jl     457f <_IO_stdin_used+0x57f>
    457f:	00 00                	add    BYTE PTR [rax],al
    4581:	00 00                	add    BYTE PTR [rax],al
    4583:	09 e8                	or     eax,ebp
    4585:	10 00                	adc    BYTE PTR [rax],al
    4587:	00 bd 1f 00 00 00    	add    BYTE PTR [rbp+0x1f],bh
    458d:	00 00                	add    BYTE PTR [rax],al
    458f:	00 01                	add    BYTE PTR [rcx],al
    4591:	bd 1f 00 00 00       	mov    ebp,0x1f
    4596:	00 00                	add    BYTE PTR [rax],al
    4598:	00 6e 00             	add    BYTE PTR [rsi+0x0],ch
    459b:	00 00                	add    BYTE PTR [rax],al
    459d:	00 00                	add    BYTE PTR [rax],al
    459f:	00 00                	add    BYTE PTR [rax],al
    45a1:	35 33 ab 14 00       	xor    eax,0x14ab33
    45a6:	00 04 f5 10 00 00 c8 	add    BYTE PTR [rsi*8-0x37fffff0],al
    45ad:	18 00                	sbb    BYTE PTR [rax],al
    45af:	00 c4                	add    ah,al
    45b1:	18 00                	sbb    BYTE PTR [rax],al
    45b3:	00 12                	add    BYTE PTR [rdx],dl
    45b5:	85 15 00 00 e1 1f    	test   DWORD PTR [rip+0x1fe10000],edx        # 1fe145bb <_end+0x1fe0e5a3>
    45bb:	00 00                	add    BYTE PTR [rax],al
    45bd:	00 00                	add    BYTE PTR [rax],al
    45bf:	00 00                	add    BYTE PTR [rax],al
    45c1:	00 2a                	add    BYTE PTR [rdx],ch
    45c3:	02 00                	add    al,BYTE PTR [rax]
    45c5:	00 64 0b 6f          	add    BYTE PTR [rbx+rcx*1+0x6f],ah
    45c9:	14 00                	adc    al,0x0
    45cb:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    45ce:	15 00 00 d9 18       	adc    eax,0x18d90000
    45d3:	00 00                	add    BYTE PTR [rax],al
    45d5:	d7                   	xlat   BYTE PTR ds:[rbx]
    45d6:	18 00                	sbb    BYTE PTR [rax],al
    45d8:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    45db:	15 00 00 e3 18       	adc    eax,0x18e30000
    45e0:	00 00                	add    BYTE PTR [rax],al
    45e2:	e1 18                	loope  45fc <_IO_stdin_used+0x5fc>
    45e4:	00 00                	add    BYTE PTR [rax],al
    45e6:	04 94                	add    al,0x94
    45e8:	15 00 00 f0 18       	adc    eax,0x18f00000
    45ed:	00 00                	add    BYTE PTR [rax],al
    45ef:	ec                   	in     al,dx
    45f0:	18 00                	sbb    BYTE PTR [rax],al
    45f2:	00 05 f6 1f 00 00    	add    BYTE PTR [rip+0x1ff6],al        # 65ee <_end+0x5d6>
    45f8:	00 00                	add    BYTE PTR [rax],al
    45fa:	00 00                	add    BYTE PTR [rax],al
    45fc:	ec                   	in     al,dx
    45fd:	16                   	(bad)
    45fe:	00 00                	add    BYTE PTR [rax],al
    4600:	03 01                	add    eax,DWORD PTR [rcx]
    4602:	54                   	push   rsp
    4603:	01 30                	add    DWORD PTR [rax],esi
    4605:	00 00                	add    BYTE PTR [rax],al
    4607:	44 01 11             	add    DWORD PTR [rcx],r10d
    460a:	00 00                	add    BYTE PTR [rax],al
    460c:	f6 1f                	neg    BYTE PTR [rdi]
    460e:	00 00                	add    BYTE PTR [rax],al
    4610:	00 00                	add    BYTE PTR [rax],al
    4612:	00 00                	add    BYTE PTR [rax],al
    4614:	35 00 00 00 00       	xor    eax,0x0
    4619:	00 00                	add    BYTE PTR [rax],al
    461b:	00 96 14 00 00 1a    	add    BYTE PTR [rsi+0x1a000014],dl
    4621:	02 11                	add    dl,BYTE PTR [rcx]
    4623:	00 00                	add    BYTE PTR [rax],al
    4625:	0e                   	(bad)
    4626:	19 00                	sbb    DWORD PTR [rax],eax
    4628:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    462b:	00 00                	add    BYTE PTR [rax],al
    462d:	00 05 d1 1f 00 00    	add    BYTE PTR [rip+0x1fd1],al        # 6604 <_end+0x5ec>
    4633:	00 00                	add    BYTE PTR [rax],al
    4635:	00 00                	add    BYTE PTR [rax],al
    4637:	5f                   	pop    rdi
    4638:	09 00                	or     DWORD PTR [rax],eax
    463a:	00 03                	add    BYTE PTR [rbx],al
    463c:	01 54 02 7c          	add    DWORD PTR [rdx+rax*1+0x7c],edx
    4640:	00 00                	add    BYTE PTR [rax],al
    4642:	00 05 c3 20 00 00    	add    BYTE PTR [rip+0x20c3],al        # 670b <_end+0x6f3>
    4648:	00 00                	add    BYTE PTR [rax],al
    464a:	00 00                	add    BYTE PTR [rax],al
    464c:	7a 09                	jp     4657 <_IO_stdin_used+0x657>
    464e:	00 00                	add    BYTE PTR [rax],al
    4650:	03 01                	add    eax,DWORD PTR [rcx]
    4652:	55                   	push   rbp
    4653:	09 03                	or     DWORD PTR [rbx],eax
    4655:	b3 40                	mov    bl,0x40
    4657:	00 00                	add    BYTE PTR [rax],al
    4659:	00 00                	add    BYTE PTR [rax],al
    465b:	00 00                	add    BYTE PTR [rax],al
    465d:	03 01                	add    eax,DWORD PTR [rcx]
    465f:	54                   	push   rsp
    4660:	09 03                	or     DWORD PTR [rbx],eax
    4662:	98                   	cwde
    4663:	40 00 00             	rex add BYTE PTR [rax],al
    4666:	00 00                	add    BYTE PTR [rax],al
    4668:	00 00                	add    BYTE PTR [rax],al
    466a:	03 01                	add    eax,DWORD PTR [rcx]
    466c:	51                   	push   rcx
    466d:	01 4e 03             	add    DWORD PTR [rsi+0x3],ecx
    4670:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    4673:	03 f0                	add    esi,eax
    4675:	43 00 00             	rex.XB add BYTE PTR [r8],al
    4678:	00 00                	add    BYTE PTR [rax],al
    467a:	00 00                	add    BYTE PTR [rax],al
    467c:	00 00                	add    BYTE PTR [rax],al
    467e:	15 06 01 00 00       	adc    eax,0x106
    4683:	f6 14 00             	not    BYTE PTR [rax+rax*1]
    4686:	00 16                	add    BYTE PTR [rsi],dl
    4688:	3a 00                	cmp    al,BYTE PTR [rax]
    468a:	00 00                	add    BYTE PTR [rax],al
    468c:	1f                   	(bad)
    468d:	00 0e                	add    BYTE PTR [rsi],cl
    468f:	e6 14                	out    0x14,al
    4691:	00 00                	add    BYTE PTR [rax],al
    4693:	1f                   	(bad)
    4694:	f5                   	cmc
    4695:	04 00                	add    al,0x0
    4697:	00 0d 06 fe 04 00    	add    BYTE PTR [rip+0x4fe06],cl        # 544a3 <_end+0x4e48b>
    469d:	00 fa                	add    dl,bh
    469f:	08 00                	or     BYTE PTR [rax],al
    46a1:	00 f0                	add    al,dh
    46a3:	1e                   	(bad)
    46a4:	00 00                	add    BYTE PTR [rax],al
    46a6:	00 00                	add    BYTE PTR [rax],al
    46a8:	00 00                	add    BYTE PTR [rax],al
    46aa:	5d                   	pop    rbp
    46ab:	00 00                	add    BYTE PTR [rax],al
    46ad:	00 00                	add    BYTE PTR [rax],al
    46af:	00 00                	add    BYTE PTR [rax],al
    46b1:	00 01                	add    BYTE PTR [rcx],al
    46b3:	9c                   	pushf
    46b4:	68 15 00 00 20       	push   0x20000015
    46b9:	7b 21                	jnp    46dc <_IO_stdin_used+0x6dc>
    46bb:	00 00                	add    BYTE PTR [rax],al
    46bd:	0e                   	(bad)
    46be:	0a fa                	or     bh,dl
    46c0:	08 00                	or     BYTE PTR [rax],al
    46c2:	00 39                	add    BYTE PTR [rcx],bh
    46c4:	19 00                	sbb    DWORD PTR [rax],eax
    46c6:	00 33                	add    BYTE PTR [rbx],dh
    46c8:	19 00                	sbb    DWORD PTR [rax],eax
    46ca:	00 28                	add    BYTE PTR [rax],ch
    46cc:	ff 01                	inc    DWORD PTR [rcx]
    46ce:	00 00                	add    BYTE PTR [rax],al
    46d0:	4e 15 00 00 0f 69    	rex.WRX adc rax,0x690f0000
    46d6:	00 15 13 dd 07 00    	add    BYTE PTR [rip+0x7dd13],dl        # 823ef <_end+0x7c3d7>
    46dc:	00 57 19             	add    BYTE PTR [rdi+0x19],dl
    46df:	00 00                	add    BYTE PTR [rax],al
    46e1:	4f 19 00             	rex.WRXB sbb QWORD PTR [r8],r8
    46e4:	00 00                	add    BYTE PTR [rax],al
    46e6:	05 07 1f 00 00       	add    eax,0x1f07
    46eb:	00 00                	add    BYTE PTR [rax],al
    46ed:	00 00                	add    BYTE PTR [rax],al
    46ef:	9b                   	fwait
    46f0:	09 00                	or     DWORD PTR [rax],eax
    46f2:	00 03                	add    BYTE PTR [rbx],al
    46f4:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    46f7:	34 03                	xor    al,0x3
    46f9:	01 54 02 08          	add    DWORD PTR [rdx+rax*1+0x8],edx
    46fd:	20 00                	and    BYTE PTR [rax],al
    46ff:	00 2a                	add    BYTE PTR [rdx],ch
    4701:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    4702:	2d 00 00 03 54       	sub    eax,0x54030000
    4707:	66 00 00             	data16 add BYTE PTR [rax],al
    470a:	00 85 15 00 00 0d    	add    BYTE PTR [rbp+0xd000015],al
    4710:	3b 06                	cmp    eax,DWORD PTR [rsi]
    4712:	00 00                	add    BYTE PTR [rax],al
    4714:	03 54 20 fa          	add    edx,DWORD PTR [rax+riz*1-0x6]
    4718:	00 00                	add    BYTE PTR [rax],al
    471a:	00 23                	add    BYTE PTR [rbx],ah
    471c:	00 2a                	add    BYTE PTR [rdx],ch
    471e:	fe                   	(bad)
    471f:	17                   	(bad)
    4720:	00 00                	add    BYTE PTR [rax],al
    4722:	02 39                	add    bh,BYTE PTR [rcx]
    4724:	33 01                	xor    eax,DWORD PTR [rcx]
    4726:	00 00                	add    BYTE PTR [rax],al
    4728:	b9 15 00 00 0d       	mov    ecx,0xd000015
    472d:	37                   	(bad)
    472e:	05 00 00 02 39       	add    eax,0x39020000
    4733:	01 33                	add    DWORD PTR [rbx],esi
    4735:	01 00                	add    DWORD PTR [rax],eax
    4737:	00 0d 79 03 00 00    	add    BYTE PTR [rip+0x379],cl        # 4ab6 <__GNU_EH_FRAME_HDR+0x3c6>
    473d:	02 39                	add    bh,BYTE PTR [rcx]
    473f:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4742:	00 00                	add    BYTE PTR [rax],al
    4744:	0d 6e 04 00 00       	or     eax,0x46e
    4749:	02 39                	add    bh,BYTE PTR [rcx]
    474b:	01 2e                	add    DWORD PTR [rsi],ebp
    474d:	00 00                	add    BYTE PTR [rax],al
    474f:	00 00                	add    BYTE PTR [rax],al
    4751:	45 0d 11 00 00 c0    	rex.RB or eax,0xc0000011
    4757:	1e                   	(bad)
    4758:	00 00                	add    BYTE PTR [rax],al
    475a:	00 00                	add    BYTE PTR [rax],al
    475c:	00 00                	add    BYTE PTR [rax],al
    475e:	25 00 00 00 00       	and    eax,0x0
    4763:	00 00                	add    BYTE PTR [rax],al
    4765:	00 01                	add    BYTE PTR [rcx],al
    4767:	9c                   	pushf
    4768:	27                   	(bad)
    4769:	16                   	(bad)
    476a:	00 00                	add    BYTE PTR [rax],al
    476c:	46                   	rex.RX
    476d:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    4770:	00 29                	add    BYTE PTR [rcx],ch
    4772:	2e 11 00             	cs adc DWORD PTR [rax],eax
    4775:	00 04 22             	add    BYTE PTR [rdx+riz*1],al
    4778:	11 00                	adc    DWORD PTR [rax],eax
    477a:	00 75 19             	add    BYTE PTR [rbp+0x19],dh
    477d:	00 00                	add    BYTE PTR [rax],al
    477f:	73 19                	jae    479a <__GNU_EH_FRAME_HDR+0xaa>
    4781:	00 00                	add    BYTE PTR [rax],al
    4783:	05 e5 1e 00 00       	add    eax,0x1ee5
    4788:	00 00                	add    BYTE PTR [rax],al
    478a:	00 00                	add    BYTE PTR [rax],al
    478c:	7a 09                	jp     4797 <__GNU_EH_FRAME_HDR+0xa7>
    478e:	00 00                	add    BYTE PTR [rax],al
    4790:	03 01                	add    eax,DWORD PTR [rcx]
    4792:	55                   	push   rbp
    4793:	09 03                	or     DWORD PTR [rbx],eax
    4795:	b3 40                	mov    bl,0x40
    4797:	00 00                	add    BYTE PTR [rax],al
    4799:	00 00                	add    BYTE PTR [rax],al
    479b:	00 00                	add    BYTE PTR [rax],al
    479d:	03 01                	add    eax,DWORD PTR [rcx]
    479f:	54                   	push   rsp
    47a0:	09 03                	or     DWORD PTR [rbx],eax
    47a2:	98                   	cwde
    47a3:	40 00 00             	rex add BYTE PTR [rax],al
    47a6:	00 00                	add    BYTE PTR [rax],al
    47a8:	00 00                	add    BYTE PTR [rax],al
    47aa:	03 01                	add    eax,DWORD PTR [rcx]
    47ac:	51                   	push   rcx
    47ad:	02 08                	add    cl,BYTE PTR [rax]
    47af:	54                   	push   rsp
    47b0:	03 01                	add    eax,DWORD PTR [rcx]
    47b2:	52                   	push   rdx
    47b3:	09 03                	or     DWORD PTR [rbx],eax
    47b5:	c8 43 00 00          	enter  0x43,0x0
    47b9:	00 00                	add    BYTE PTR [rax],al
    47bb:	00 00                	add    BYTE PTR [rax],al
    47bd:	00 00                	add    BYTE PTR [rax],al
    47bf:	47 0d 11 00 00 16    	rex.RXB or eax,0x16000011
    47c5:	05 00 00 b0 21       	add    eax,0x21b00000
    47ca:	00 00                	add    BYTE PTR [rax],al
    47cc:	00 00                	add    BYTE PTR [rax],al
    47ce:	00 00                	add    BYTE PTR [rax],al
    47d0:	72 00                	jb     47d2 <__GNU_EH_FRAME_HDR+0xe2>
    47d2:	00 00                	add    BYTE PTR [rax],al
    47d4:	00 00                	add    BYTE PTR [rax],al
    47d6:	00 00                	add    BYTE PTR [rax],al
    47d8:	01 9c ca 16 00 00 04 	add    DWORD PTR [rdx+rcx*8+0x4000016],ebx
    47df:	22 11                	and    dl,BYTE PTR [rcx]
    47e1:	00 00                	add    BYTE PTR [rax],al
    47e3:	8e 19                	mov    ds,WORD PTR [rcx]
    47e5:	00 00                	add    BYTE PTR [rax],al
    47e7:	80 19 00             	sbb    BYTE PTR [rcx],0x0
    47ea:	00 04 2e             	add    BYTE PTR [rsi+rbp*1],al
    47ed:	11 00                	adc    DWORD PTR [rax],eax
    47ef:	00 d3                	add    bl,dl
    47f1:	19 00                	sbb    DWORD PTR [rax],eax
    47f3:	00 c9                	add    cl,cl
    47f5:	19 00                	sbb    DWORD PTR [rax],eax
    47f7:	00 1a                	add    BYTE PTR [rdx],bl
    47f9:	43 11 00             	rex.XB adc DWORD PTR [r8],eax
    47fc:	00 16                	add    BYTE PTR [rsi],dl
    47fe:	1a 00                	sbb    al,BYTE PTR [rax]
    4800:	00 10                	add    BYTE PTR [rax],dl
    4802:	1a 00                	sbb    al,BYTE PTR [rax]
    4804:	00 12                	add    BYTE PTR [rdx],dl
    4806:	b9 10 00 00 ec       	mov    ecx,0xec000010
    480b:	21 00                	and    DWORD PTR [rax],eax
    480d:	00 00                	add    BYTE PTR [rax],al
    480f:	00 00                	add    BYTE PTR [rax],al
    4811:	00 00                	add    BYTE PTR [rax],al
    4813:	55                   	push   rbp
    4814:	02 00                	add    al,BYTE PTR [rax]
    4816:	00 59 19             	add    BYTE PTR [rcx+0x19],bl
    4819:	b4 16                	mov    ah,0x16
    481b:	00 00                	add    BYTE PTR [rax],al
    481d:	04 d6                	add    al,0xd6
    481f:	10 00                	adc    BYTE PTR [rax],al
    4821:	00 2e                	add    BYTE PTR [rsi],ch
    4823:	1a 00                	sbb    al,BYTE PTR [rax]
    4825:	00 2c 1a             	add    BYTE PTR [rdx+rbx*1],ch
    4828:	00 00                	add    BYTE PTR [rax],al
    482a:	04 ca                	add    al,0xca
    482c:	10 00                	adc    BYTE PTR [rax],al
    482e:	00 3f                	add    BYTE PTR [rdi],bh
    4830:	1a 00                	sbb    al,BYTE PTR [rax]
    4832:	00 3d 1a 00 00 05    	add    BYTE PTR [rip+0x500001a],bh        # 5004852 <_end+0x4ffe83a>
    4838:	f6 21                	mul    BYTE PTR [rcx]
    483a:	00 00                	add    BYTE PTR [rax],al
    483c:	00 00                	add    BYTE PTR [rax],al
    483e:	00 00                	add    BYTE PTR [rax],al
    4840:	44 09 00             	or     DWORD PTR [rax],r8d
    4843:	00 03                	add    BYTE PTR [rbx],al
    4845:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    4848:	7d 00                	jge    484a <__GNU_EH_FRAME_HDR+0x15a>
    484a:	00 00                	add    BYTE PTR [rax],al
    484c:	05 22 22 00 00       	add    eax,0x2222
    4851:	00 00                	add    BYTE PTR [rax],al
    4853:	00 00                	add    BYTE PTR [rax],al
    4855:	b9 15 00 00 48       	mov    ecx,0x48000015
    485a:	22 11                	and    dl,BYTE PTR [rcx]
    485c:	00 00                	add    BYTE PTR [rax],al
    485e:	01 30                	add    DWORD PTR [rax],esi
    4860:	00 00                	add    BYTE PTR [rax],al
    4862:	2b 04 9e             	sub    eax,DWORD PTR [rsi+rbx*4]
    4865:	02 0a                	add    cl,BYTE PTR [rdx]
    4867:	00 21                	add    BYTE PTR [rcx],ah
    4869:	5f                   	pop    rdi
    486a:	09 00                	or     DWORD PTR [rax],eax
    486c:	00 55 09             	add    BYTE PTR [rbp+0x9],dl
    486f:	00 00                	add    BYTE PTR [rax],al
    4871:	2b 08                	sub    ecx,DWORD PTR [rax]
    4873:	9e                   	sahf
    4874:	06                   	(bad)
    4875:	53                   	push   rbx
    4876:	54                   	push   rsp
    4877:	52                   	push   rdx
    4878:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    487a:	00 21                	add    BYTE PTR [rcx],ah
    487c:	fd                   	std
    487d:	03 00                	add    eax,DWORD PTR [rax]
    487f:	00 f3                	add    bl,dh
    4881:	03 00                	add    eax,DWORD PTR [rax]
    4883:	00 21                	add    BYTE PTR [rcx],ah
    4885:	b1 04                	mov    cl,0x4
    4887:	00 00                	add    BYTE PTR [rax],al
    4889:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    488a:	04 00                	add    al,0x0
    488c:	00 00                	add    BYTE PTR [rax],al
    488e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    488f:	0e                   	(bad)
    4890:	00 00                	add    BYTE PTR [rax],al
    4892:	05 00 01 08 4f       	add    eax,0x4f080100
    4897:	0f 00 00             	sldt   WORD PTR [rax]
    489a:	22 14 01             	and    dl,BYTE PTR [rcx+rax*1]
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	21 44 02 00          	and    DWORD PTR [rdx+rax*1+0x0],eax
    48a3:	00 00                	add    BYTE PTR [rax],al
    48a5:	00 00                	add    BYTE PTR [rax],al
    48a7:	00 a0 24 00 00 00    	add    BYTE PTR [rax+0x24],ah
    48ad:	00 00                	add    BYTE PTR [rax],al
    48af:	00 72 01             	add    BYTE PTR [rdx+0x1],dh
    48b2:	00 00                	add    BYTE PTR [rax],al
    48b4:	00 00                	add    BYTE PTR [rax],al
    48b6:	00 00                	add    BYTE PTR [rax],al
    48b8:	15 18 00 00 04       	adc    eax,0x4000018
    48bd:	d6                   	(bad)
    48be:	0a 00                	or     al,BYTE PTR [rax]
    48c0:	00 05 d6 17 3a 00    	add    BYTE PTR [rip+0x3a17d6],al        # 3a609c <_end+0x3a0084>
    48c6:	00 00                	add    BYTE PTR [rax],al
    48c8:	06                   	(bad)
    48c9:	08 07                	or     BYTE PTR [rdi],al
    48cb:	f3 00 00             	repz add BYTE PTR [rax],al
    48ce:	00 13                	add    BYTE PTR [rbx],dl
    48d0:	08 3c dd 02 00 00 66 	or     BYTE PTR [rbx*8+0x66000002],bh
    48d7:	00 00                	add    BYTE PTR [rax],al
    48d9:	00 03                	add    BYTE PTR [rbx],al
    48db:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    48de:	00 06                	add    BYTE PTR [rsi],al
    48e0:	3d 09 66 00 00       	cmp    eax,0x6609
    48e5:	00 00                	add    BYTE PTR [rax],al
    48e7:	14 72                	adc    al,0x72
    48e9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    48eb:	00 3e                	add    BYTE PTR [rsi],bh
    48ed:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    48f0:	00 00                	add    BYTE PTR [rax],al
    48f2:	04 00                	add    al,0x0
    48f4:	23 04 05 69 6e 74 00 	and    eax,DWORD PTR [rax*1+0x746e69]
    48fb:	04 de                	add    al,0xde
    48fd:	02 00                	add    al,BYTE PTR [rax]
    48ff:	00 06                	add    BYTE PTR [rsi],al
    4901:	3f                   	(bad)
    4902:	05 41 00 00 00       	add    eax,0x41
    4907:	13 10                	adc    edx,DWORD PTR [rax]
    4909:	44 09 00             	or     DWORD PTR [rax],r8d
    490c:	00 00                	add    BYTE PTR [rax],al
    490e:	9e                   	sahf
    490f:	00 00                	add    BYTE PTR [rax],al
    4911:	00 03                	add    BYTE PTR [rbx],al
    4913:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    4916:	00 06                	add    BYTE PTR [rsi],al
    4918:	45 0e                	rex.RB (bad)
    491a:	9e                   	sahf
    491b:	00 00                	add    BYTE PTR [rax],al
    491d:	00 00                	add    BYTE PTR [rax],al
    491f:	14 72                	adc    al,0x72
    4921:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    4923:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    4926:	9e                   	sahf
    4927:	00 00                	add    BYTE PTR [rax],al
    4929:	00 08                	add    BYTE PTR [rax],cl
    492b:	00 06                	add    BYTE PTR [rsi],al
    492d:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 4a18 <__GNU_EH_FRAME_HDR+0x328>
    4933:	04 0a                	add    al,0xa
    4935:	00 00                	add    BYTE PTR [rax],al
    4937:	00 06                	add    BYTE PTR [rsi],al
    4939:	47 05 79 00 00 00    	rex.RXB add eax,0x79
    493f:	13 10                	adc    edx,DWORD PTR [rax]
    4941:	4e b4 00             	rex.WRX mov spl,0x0
    4944:	00 00                	add    BYTE PTR [rax],al
    4946:	d6                   	(bad)
    4947:	00 00                	add    BYTE PTR [rax],al
    4949:	00 03                	add    BYTE PTR [rbx],al
    494b:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    494e:	00 06                	add    BYTE PTR [rsi],al
    4950:	4f 13 d6             	rex.WRXB adc r10,r14
    4953:	00 00                	add    BYTE PTR [rax],al
    4955:	00 00                	add    BYTE PTR [rax],al
    4957:	14 72                	adc    al,0x72
    4959:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    495b:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    495e:	d6                   	(bad)
    495f:	00 00                	add    BYTE PTR [rax],al
    4961:	00 08                	add    BYTE PTR [rax],cl
    4963:	00 06                	add    BYTE PTR [rsi],al
    4965:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 4a4b <__GNU_EH_FRAME_HDR+0x35b>
    496b:	04 b5                	add    al,0xb5
    496d:	00 00                	add    BYTE PTR [rax],al
    496f:	00 06                	add    BYTE PTR [rsi],al
    4971:	51                   	push   rcx
    4972:	05 b1 00 00 00       	add    eax,0xb1
    4977:	06                   	(bad)
    4978:	02 07                	add    al,BYTE PTR [rdi]
    497a:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    497d:	00 09                	add    BYTE PTR [rcx],cl
    497f:	fc                   	cld
    4980:	00 00                	add    BYTE PTR [rax],al
    4982:	00 06                	add    BYTE PTR [rsi],al
    4984:	01 06                	add    DWORD PTR [rsi],eax
    4986:	08 02                	or     BYTE PTR [rdx],al
    4988:	00 00                	add    BYTE PTR [rax],al
    498a:	0f f5 00             	pmaddwd mm0,QWORD PTR [rax]
    498d:	00 00                	add    BYTE PTR [rax],al
    498f:	06                   	(bad)
    4990:	01 08                	add    DWORD PTR [rax],ecx
    4992:	ff 01                	inc    DWORD PTR [rcx]
    4994:	00 00                	add    BYTE PTR [rax],al
    4996:	06                   	(bad)
    4997:	04 07                	add    al,0x7
    4999:	f8                   	clc
    499a:	00 00                	add    BYTE PTR [rax],al
    499c:	00 06                	add    BYTE PTR [rsi],al
    499e:	01 06                	add    DWORD PTR [rsi],eax
    49a0:	01 02                	add    DWORD PTR [rdx],eax
    49a2:	00 00                	add    BYTE PTR [rax],al
    49a4:	06                   	(bad)
    49a5:	02 05 5b 00 00 00    	add    al,BYTE PTR [rip+0x5b]        # 4a06 <__GNU_EH_FRAME_HDR+0x316>
    49ab:	04 a9                	add    al,0xa9
    49ad:	00 00                	add    BYTE PTR [rax],al
    49af:	00 07                	add    BYTE PTR [rdi],al
    49b1:	2a 16                	sub    dl,BYTE PTR [rsi]
    49b3:	08 01                	or     BYTE PTR [rcx],al
    49b5:	00 00                	add    BYTE PTR [rax],al
    49b7:	04 a6                	add    al,0xa6
    49b9:	0a 00                	or     al,BYTE PTR [rax]
    49bb:	00 07                	add    BYTE PTR [rdi],al
    49bd:	91                   	xchg   ecx,eax
    49be:	19 3a                	sbb    DWORD PTR [rdx],edi
    49c0:	00 00                	add    BYTE PTR [rax],al
    49c2:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    49c5:	0b 00                	or     eax,DWORD PTR [rax]
    49c7:	00 07                	add    BYTE PTR [rdi],al
    49c9:	92                   	xchg   edx,eax
    49ca:	19 08                	sbb    DWORD PTR [rax],ecx
    49cc:	01 00                	add    DWORD PTR [rax],eax
    49ce:	00 04 92             	add    BYTE PTR [rdx+rdx*4],al
    49d1:	09 00                	or     DWORD PTR [rax],eax
    49d3:	00 07                	add    BYTE PTR [rdi],al
    49d5:	93                   	xchg   ebx,eax
    49d6:	19 08                	sbb    DWORD PTR [rax],ecx
    49d8:	01 00                	add    DWORD PTR [rax],eax
    49da:	00 04 18             	add    BYTE PTR [rax+rbx*1],al
    49dd:	0b 00                	or     eax,DWORD PTR [rax]
    49df:	00 07                	add    BYTE PTR [rdi],al
    49e1:	94                   	xchg   esp,eax
    49e2:	19 3a                	sbb    DWORD PTR [rdx],edi
    49e4:	00 00                	add    BYTE PTR [rax],al
    49e6:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    49e9:	0a 00                	or     al,BYTE PTR [rax]
    49eb:	00 07                	add    BYTE PTR [rdi],al
    49ed:	96                   	xchg   esi,eax
    49ee:	1a 08                	sbb    cl,BYTE PTR [rax]
    49f0:	01 00                	add    DWORD PTR [rax],eax
    49f2:	00 04 58             	add    BYTE PTR [rax+rbx*2],al
    49f5:	0a 00                	or     al,BYTE PTR [rax]
    49f7:	00 07                	add    BYTE PTR [rdi],al
    49f9:	97                   	xchg   edi,eax
    49fa:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    49fc:	00 00                	add    BYTE PTR [rax],al
    49fe:	00 04 4b             	add    BYTE PTR [rbx+rcx*2],al
    4a01:	0b 00                	or     eax,DWORD PTR [rax]
    4a03:	00 07                	add    BYTE PTR [rdi],al
    4a05:	98                   	cwde
    4a06:	19 9e 00 00 00 04    	sbb    DWORD PTR [rsi+0x4000000],ebx
    4a0c:	42 0b 00             	rex.X or eax,DWORD PTR [rax]
    4a0f:	00 07                	add    BYTE PTR [rdi],al
    4a11:	a0 1a 9e 00 00 00 24 	movabs al,ds:0x408240000009e1a
    4a18:	08 04 
    4a1a:	d1 0a                	ror    DWORD PTR [rdx],1
    4a1c:	00 00                	add    BYTE PTR [rax],al
    4a1e:	07                   	(bad)
    4a1f:	af                   	scas   eax,DWORD PTR es:[rdi]
    4a20:	1d 9e 00 00 00       	sbb    eax,0x9e
    4a25:	04 0f                	add    al,0xf
    4a27:	0a 00                	or     al,BYTE PTR [rax]
    4a29:	00 07                	add    BYTE PTR [rdi],al
    4a2b:	b4 1c                	mov    ah,0x1c
    4a2d:	9e                   	sahf
    4a2e:	00 00                	add    BYTE PTR [rax],al
    4a30:	00 04 1a             	add    BYTE PTR [rdx+rbx*1],al
    4a33:	0a 00                	or     al,BYTE PTR [rax]
    4a35:	00 07                	add    BYTE PTR [rdi],al
    4a37:	c2 1b 9e             	ret    0x9e1b
    4a3a:	00 00                	add    BYTE PTR [rax],al
    4a3c:	00 04 b5 0a 00 00 07 	add    BYTE PTR [rsi*4+0x700000a],al
    4a43:	c5 21 9e             	(bad)
    4a46:	00 00                	add    BYTE PTR [rax],al
    4a48:	00 09                	add    BYTE PTR [rcx],cl
    4a4a:	f5                   	cmc
    4a4b:	00 00                	add    BYTE PTR [rax],al
    4a4d:	00 04 1c             	add    BYTE PTR [rsp+rbx*1],al
    4a50:	0a 00                	or     al,BYTE PTR [rax]
    4a52:	00 08                	add    BYTE PTR [rax],cl
    4a54:	6c                   	ins    BYTE PTR es:[rdi],dx
    4a55:	13 a3 01 00 00 17    	adc    esp,DWORD PTR [rbx+0x17000001]
    4a5b:	0f 0b                	ud2
    4a5d:	00 00                	add    BYTE PTR [rax],al
    4a5f:	10 09                	adc    BYTE PTR [rcx],cl
    4a61:	0b f3                	or     esi,ebx
    4a63:	01 00                	add    DWORD PTR [rax],eax
    4a65:	00 03                	add    BYTE PTR [rbx],al
    4a67:	ae                   	scas   al,BYTE PTR es:[rdi]
    4a68:	0a 00                	or     al,BYTE PTR [rax]
    4a6a:	00 09                	add    BYTE PTR [rcx],cl
    4a6c:	10 0c 7d 01 00 00 00 	adc    BYTE PTR [rdi*2+0x1],cl
    4a73:	03 9e 0a 00 00 09    	add    ebx,DWORD PTR [rsi+0x900000a]
    4a79:	15 15 af 01 00       	adc    eax,0x1af15
    4a7e:	00 08                	add    BYTE PTR [rax],cl
    4a80:	00 06                	add    BYTE PTR [rsi],al
    4a82:	08 07                	or     BYTE PTR [rdi],al
    4a84:	ee                   	out    dx,al
    4a85:	00 00                	add    BYTE PTR [rax],al
    4a87:	00 25 cf 02 00 00    	add    BYTE PTR [rip+0x2cf],ah        # 4d5c <__GNU_EH_FRAME_HDR+0x66c>
    4a8d:	06                   	(bad)
    4a8e:	b4 03                	mov    ah,0x3
    4a90:	0f 07                	sysretd
    4a92:	02 00                	add    al,BYTE PTR [rax]
    4a94:	00 09                	add    BYTE PTR [rcx],cl
    4a96:	0c 02                	or     al,0x2
    4a98:	00 00                	add    BYTE PTR [rax],al
    4a9a:	26 66 00 00          	es data16 add BYTE PTR [rax],al
    4a9e:	00 20                	add    BYTE PTR [rax],ah
    4aa0:	02 00                	add    al,BYTE PTR [rax]
    4aa2:	00 01                	add    BYTE PTR [rcx],al
    4aa4:	20 02                	and    BYTE PTR [rdx],al
    4aa6:	00 00                	add    BYTE PTR [rax],al
    4aa8:	01 20                	add    DWORD PTR [rax],esp
    4aaa:	02 00                	add    al,BYTE PTR [rax]
    4aac:	00 00                	add    BYTE PTR [rax],al
    4aae:	09 25 02 00 00 27    	or     DWORD PTR [rip+0x27000002],esp        # 27004ab6 <_end+0x26ffea9e>
    4ab4:	28 73 74             	sub    BYTE PTR [rbx+0x74],dh
    4ab7:	64 00 16             	add    BYTE PTR fs:[rsi],dl
    4aba:	32 01                	xor    al,BYTE PTR [rcx]
    4abc:	0b f6                	or     esi,esi
    4abe:	03 00                	add    eax,DWORD PTR [rax]
    4ac0:	00 02                	add    BYTE PTR [rdx],al
    4ac2:	0a 83 0b 6d 00 00    	or     al,BYTE PTR [rbx+0x6d0b]
    4ac8:	00 02                	add    BYTE PTR [rdx],al
    4aca:	0a 84 0b a5 00 00 00 	or     al,BYTE PTR [rbx+rcx*1+0xa5]
    4ad1:	02 0a                	add    cl,BYTE PTR [rdx]
    4ad3:	8a 0b                	mov    cl,BYTE PTR [rbx]
    4ad5:	f6 03 00             	test   BYTE PTR [rbx],0x0
    4ad8:	00 02                	add    BYTE PTR [rdx],al
    4ada:	0a 8d 0b 13 04 00    	or     cl,BYTE PTR [rbp+0x4130b]
    4ae0:	00 02                	add    BYTE PTR [rdx],al
    4ae2:	0a 90 0b 2e 04 00    	or     dl,BYTE PTR [rax+0x42e0b]
    4ae8:	00 02                	add    BYTE PTR [rdx],al
    4aea:	0a 91 0b 4b 04 00    	or     dl,BYTE PTR [rcx+0x44b0b]
    4af0:	00 02                	add    BYTE PTR [rdx],al
    4af2:	0a 92 0b 62 04 00    	or     dl,BYTE PTR [rdx+0x4620b]
    4af8:	00 02                	add    BYTE PTR [rdx],al
    4afa:	0a 93 0b 79 04 00    	or     dl,BYTE PTR [rbx+0x4790b]
    4b00:	00 02                	add    BYTE PTR [rdx],al
    4b02:	0a 95 0b a3 04 00    	or     dl,BYTE PTR [rbp+0x4a30b]
    4b08:	00 02                	add    BYTE PTR [rdx],al
    4b0a:	0a 98 0b bf 04 00    	or     bl,BYTE PTR [rax+0x4bf0b]
    4b10:	00 02                	add    BYTE PTR [rdx],al
    4b12:	0a 9a 0b d6 04 00    	or     bl,BYTE PTR [rdx+0x4d60b]
    4b18:	00 02                	add    BYTE PTR [rdx],al
    4b1a:	0a 9d 0b f2 04 00    	or     bl,BYTE PTR [rbp+0x4f20b]
    4b20:	00 02                	add    BYTE PTR [rdx],al
    4b22:	0a 9e 0b 0e 05 00    	or     bl,BYTE PTR [rsi+0x50e0b]
    4b28:	00 02                	add    BYTE PTR [rdx],al
    4b2a:	0a 9f 0b 3f 05 00    	or     bl,BYTE PTR [rdi+0x53f0b]
    4b30:	00 02                	add    BYTE PTR [rdx],al
    4b32:	0a a1 0b 60 05 00    	or     ah,BYTE PTR [rcx+0x5600b]
    4b38:	00 02                	add    BYTE PTR [rdx],al
    4b3a:	0a a4 0b 80 05 00 00 	or     ah,BYTE PTR [rbx+rcx*1+0x580]
    4b41:	02 0a                	add    cl,BYTE PTR [rdx]
    4b43:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4b44:	0b 93 05 00 00 02    	or     edx,DWORD PTR [rbx+0x2000005]
    4b4a:	0a a9 0b a0 05 00    	or     ch,BYTE PTR [rcx+0x5a00b]
    4b50:	00 02                	add    BYTE PTR [rdx],al
    4b52:	0a aa 0b b1 05 00    	or     ch,BYTE PTR [rdx+0x5b10b]
    4b58:	00 02                	add    BYTE PTR [rdx],al
    4b5a:	0a ab 0b d1 05 00    	or     ch,BYTE PTR [rbx+0x5d10b]
    4b60:	00 02                	add    BYTE PTR [rdx],al
    4b62:	0a ac 0b f5 05 00 00 	or     ch,BYTE PTR [rbx+rcx*1+0x5f5]
    4b69:	02 0a                	add    cl,BYTE PTR [rdx]
    4b6b:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4b6c:	0b 19                	or     ebx,DWORD PTR [rcx]
    4b6e:	06                   	(bad)
    4b6f:	00 00                	add    BYTE PTR [rax],al
    4b71:	02 0a                	add    cl,BYTE PTR [rdx]
    4b73:	af                   	scas   eax,DWORD PTR es:[rdi]
    4b74:	0b 30                	or     esi,DWORD PTR [rax]
    4b76:	06                   	(bad)
    4b77:	00 00                	add    BYTE PTR [rax],al
    4b79:	02 0a                	add    cl,BYTE PTR [rdx]
    4b7b:	b0 0b                	mov    al,0xb
    4b7d:	55                   	push   rbp
    4b7e:	06                   	(bad)
    4b7f:	00 00                	add    BYTE PTR [rax],al
    4b81:	02 0a                	add    cl,BYTE PTR [rdx]
    4b83:	f4                   	hlt
    4b84:	16                   	(bad)
    4b85:	dd 00                	fld    QWORD PTR [rax]
    4b87:	00 00                	add    BYTE PTR [rax],al
    4b89:	02 0a                	add    cl,BYTE PTR [rdx]
    4b8b:	f9                   	stc
    4b8c:	16                   	(bad)
    4b8d:	b5 06                	mov    ch,0x6
    4b8f:	00 00                	add    BYTE PTR [rax],al
    4b91:	02 0a                	add    cl,BYTE PTR [rdx]
    4b93:	fa                   	cli
    4b94:	16                   	(bad)
    4b95:	cf                   	iret
    4b96:	06                   	(bad)
    4b97:	00 00                	add    BYTE PTR [rax],al
    4b99:	02 0a                	add    cl,BYTE PTR [rdx]
    4b9b:	fc                   	cld
    4b9c:	16                   	(bad)
    4b9d:	eb 06                	jmp    4ba5 <__GNU_EH_FRAME_HDR+0x4b5>
    4b9f:	00 00                	add    BYTE PTR [rax],al
    4ba1:	02 0a                	add    cl,BYTE PTR [rdx]
    4ba3:	fd                   	std
    4ba4:	16                   	(bad)
    4ba5:	4a 07                	rex.WX (bad)
    4ba7:	00 00                	add    BYTE PTR [rax],al
    4ba9:	02 0a                	add    cl,BYTE PTR [rdx]
    4bab:	fe                   	(bad)
    4bac:	16                   	(bad)
    4bad:	02 07                	add    al,BYTE PTR [rdi]
    4baf:	00 00                	add    BYTE PTR [rax],al
    4bb1:	02 0a                	add    cl,BYTE PTR [rdx]
    4bb3:	ff 16                	call   QWORD PTR [rsi]
    4bb5:	26 07                	es (bad)
    4bb7:	00 00                	add    BYTE PTR [rax],al
    4bb9:	29 0a                	sub    DWORD PTR [rdx],ecx
    4bbb:	00 01                	add    BYTE PTR [rcx],al
    4bbd:	16                   	(bad)
    4bbe:	6c                   	ins    BYTE PTR es:[rdi],dx
    4bbf:	07                   	(bad)
    4bc0:	00 00                	add    BYTE PTR [rax],al
    4bc2:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4bc5:	73 00                	jae    4bc7 <__GNU_EH_FRAME_HDR+0x4d7>
    4bc7:	89 0f                	mov    DWORD PTR [rdi],ecx
    4bc9:	03 00                	add    eax,DWORD PTR [rax]
    4bcb:	00 b6 07 00 00 4c    	add    BYTE PTR [rsi+0x4c000007],dh
    4bd1:	03 00                	add    eax,DWORD PTR [rax]
    4bd3:	00 01                	add    BYTE PTR [rcx],al
    4bd5:	b6 07                	mov    dh,0x7
    4bd7:	00 00                	add    BYTE PTR [rax],al
    4bd9:	00 0a                	add    BYTE PTR [rdx],cl
    4bdb:	61                   	(bad)
    4bdc:	62 73 00 55 1b       	(bad)
    4be1:	00 00                	add    BYTE PTR [rax],al
    4be3:	00 c5                	add    ch,al
    4be5:	07                   	(bad)
    4be6:	00 00                	add    BYTE PTR [rax],al
    4be8:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    4beb:	00 01                	add    BYTE PTR [rcx],al
    4bed:	c5 07 00             	(bad)
    4bf0:	00 00                	add    BYTE PTR [rax],al
    4bf2:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4bf5:	73 00                	jae    4bf7 <__GNU_EH_FRAME_HDR+0x507>
    4bf7:	4f fb                	rex.WRXB sti
    4bf9:	02 00                	add    al,BYTE PTR [rax]
    4bfb:	00 87 07 00 00 7c    	add    BYTE PTR [rdi+0x7c000007],al
    4c01:	03 00                	add    eax,DWORD PTR [rax]
    4c03:	00 01                	add    BYTE PTR [rcx],al
    4c05:	87 07                	xchg   DWORD PTR [rdi],eax
    4c07:	00 00                	add    BYTE PTR [rax],al
    4c09:	00 0a                	add    BYTE PTR [rdx],cl
    4c0b:	61                   	(bad)
    4c0c:	62 73 00 4b 05       	(bad)
    4c11:	03 00                	add    eax,DWORD PTR [rax]
    4c13:	00 65 07             	add    BYTE PTR [rbp+0x7],ah
    4c16:	00 00                	add    BYTE PTR [rax],al
    4c18:	94                   	xchg   esp,eax
    4c19:	03 00                	add    eax,DWORD PTR [rax]
    4c1b:	00 01                	add    BYTE PTR [rcx],al
    4c1d:	65 07                	gs (bad)
    4c1f:	00 00                	add    BYTE PTR [rax],al
    4c21:	00 0a                	add    BYTE PTR [rdx],cl
    4c23:	61                   	(bad)
    4c24:	62 73 00 47 f1       	(bad)
    4c29:	02 00                	add    al,BYTE PTR [rax]
    4c2b:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4c2f:	00 ac 03 00 00 01 44 	add    BYTE PTR [rbx+rax*1+0x44010000],ch
    4c36:	04 00                	add    al,0x0
    4c38:	00 00                	add    BYTE PTR [rax],al
    4c3a:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4c3d:	73 00                	jae    4c3f <__GNU_EH_FRAME_HDR+0x54f>
    4c3f:	3d 41 00 00 00       	cmp    eax,0x41
    4c44:	d6                   	(bad)
    4c45:	00 00                	add    BYTE PTR [rax],al
    4c47:	00 c4                	add    ah,al
    4c49:	03 00                	add    eax,DWORD PTR [rax]
    4c4b:	00 01                	add    BYTE PTR [rcx],al
    4c4d:	d6                   	(bad)
    4c4e:	00 00                	add    BYTE PTR [rax],al
    4c50:	00 00                	add    BYTE PTR [rax],al
    4c52:	0a 61 62             	or     ah,BYTE PTR [rcx+0x62]
    4c55:	73 00                	jae    4c57 <__GNU_EH_FRAME_HDR+0x567>
    4c57:	38 11                	cmp    BYTE PTR [rcx],dl
    4c59:	00 00                	add    BYTE PTR [rax],al
    4c5b:	00 9e 00 00 00 dc    	add    BYTE PTR [rsi-0x24000000],bl
    4c61:	03 00                	add    eax,DWORD PTR [rax]
    4c63:	00 01                	add    BYTE PTR [rcx],al
    4c65:	9e                   	sahf
    4c66:	00 00                	add    BYTE PTR [rax],al
    4c68:	00 00                	add    BYTE PTR [rax],al
    4c6a:	18 64 69 76          	sbb    BYTE PTR [rcx+rbp*2+0x76],ah
    4c6e:	00 b5 74 00 00 00    	add    BYTE PTR [rbp+0x74],dh
    4c74:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4c75:	00 00                	add    BYTE PTR [rax],al
    4c77:	00 01                	add    BYTE PTR [rcx],al
    4c79:	9e                   	sahf
    4c7a:	00 00                	add    BYTE PTR [rax],al
    4c7c:	00 01                	add    BYTE PTR [rcx],al
    4c7e:	9e                   	sahf
    4c7f:	00 00                	add    BYTE PTR [rax],al
    4c81:	00 00                	add    BYTE PTR [rax],al
    4c83:	00 07                	add    BYTE PTR [rdi],al
    4c85:	6d                   	ins    DWORD PTR es:[rdi],dx
    4c86:	00 00                	add    BYTE PTR [rax],al
    4c88:	00 06                	add    BYTE PTR [rsi],al
    4c8a:	de 02                	fiadd  WORD PTR [rdx]
    4c8c:	0c 66                	or     al,0x66
    4c8e:	00 00                	add    BYTE PTR [rax],al
    4c90:	00 0d 04 00 00 01    	add    BYTE PTR [rip+0x1000004],cl        # 1004c9a <_end+0xffec82>
    4c96:	0d 04 00 00 00       	or     eax,0x4
    4c9b:	09 12                	or     DWORD PTR [rdx],edx
    4c9d:	04 00                	add    al,0x0
    4c9f:	00 2a                	add    BYTE PTR [rdx],ch
    4ca1:	2b 33                	sub    esi,DWORD PTR [rbx]
    4ca3:	00 00                	add    BYTE PTR [rax],al
    4ca5:	00 06                	add    BYTE PTR [rsi],al
    4ca7:	e3 02                	jrcxz  4cab <__GNU_EH_FRAME_HDR+0x5bb>
    4ca9:	12 33                	adc    dh,BYTE PTR [rbx]
    4cab:	00 00                	add    BYTE PTR [rax],al
    4cad:	00 66 00             	add    BYTE PTR [rsi+0x0],ah
    4cb0:	00 00                	add    BYTE PTR [rax],al
    4cb2:	2e 04 00             	cs add al,0x0
    4cb5:	00 01                	add    BYTE PTR [rcx],al
    4cb7:	0d 04 00 00 00       	or     eax,0x4
    4cbc:	08 cd                	or     ch,cl
    4cbe:	01 00                	add    DWORD PTR [rax],eax
    4cc0:	00 0c 19             	add    BYTE PTR [rcx+rbx*1],cl
    4cc3:	01 44 04 00          	add    DWORD PTR [rsp+rax*1+0x0],eax
    4cc7:	00 44 04 00          	add    BYTE PTR [rsp+rax*1+0x0],al
    4ccb:	00 01                	add    BYTE PTR [rcx],al
    4ccd:	f0 00 00             	lock add BYTE PTR [rax],al
    4cd0:	00 00                	add    BYTE PTR [rax],al
    4cd2:	06                   	(bad)
    4cd3:	08 04 f8             	or     BYTE PTR [rax+rdi*8],al
    4cd6:	01 00                	add    DWORD PTR [rax],eax
    4cd8:	00 07                	add    BYTE PTR [rdi],al
    4cda:	d2 01                	rol    BYTE PTR [rcx],cl
    4cdc:	00 00                	add    BYTE PTR [rax],al
    4cde:	06                   	(bad)
    4cdf:	e1 01                	loope  4ce2 <__GNU_EH_FRAME_HDR+0x5f2>
    4ce1:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4ce4:	00 00                	add    BYTE PTR [rax],al
    4ce6:	62 04 00             	(bad)
    4ce9:	00 01                	add    BYTE PTR [rcx],al
    4ceb:	f0 00 00             	lock add BYTE PTR [rax],al
    4cee:	00 00                	add    BYTE PTR [rax],al
    4cf0:	07                   	(bad)
    4cf1:	dc 01                	fadd   QWORD PTR [rcx]
    4cf3:	00 00                	add    BYTE PTR [rax],al
    4cf5:	06                   	(bad)
    4cf6:	e6 01                	out    0x1,al
    4cf8:	01 9e 00 00 00 79    	add    DWORD PTR [rsi+0x79000000],ebx
    4cfe:	04 00                	add    al,0x0
    4d00:	00 01                	add    BYTE PTR [rcx],al
    4d02:	f0 00 00             	lock add BYTE PTR [rax],al
    4d05:	00 00                	add    BYTE PTR [rax],al
    4d07:	08 65 00             	or     BYTE PTR [rbp+0x0],ah
    4d0a:	00 00                	add    BYTE PTR [rax],al
    4d0c:	0d 14 01 89 01       	or     eax,0x1890114
    4d11:	00 00                	add    BYTE PTR [rax],al
    4d13:	a3 04 00 00 01 20 02 	movabs ds:0x22001000004,eax
    4d1a:	00 00 
    4d1c:	01 20                	add    DWORD PTR [rax],esp
    4d1e:	02 00                	add    al,BYTE PTR [rax]
    4d20:	00 01                	add    BYTE PTR [rcx],al
    4d22:	2e 00 00             	cs add BYTE PTR [rax],al
    4d25:	00 01                	add    BYTE PTR [rcx],al
    4d27:	2e 00 00             	cs add BYTE PTR [rax],al
    4d2a:	00 01                	add    BYTE PTR [rcx],al
    4d2c:	fa                   	cli
    4d2d:	01 00                	add    DWORD PTR [rax],eax
    4d2f:	00 00                	add    BYTE PTR [rax],al
    4d31:	2c 64                	sub    al,0x64
    4d33:	69 76 00 06 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e006
    4d3a:	6d                   	ins    DWORD PTR es:[rdi],dx
    4d3b:	00 00                	add    BYTE PTR [rax],al
    4d3d:	00 bf 04 00 00 01    	add    BYTE PTR [rdi+0x1000004],bh
    4d43:	66 00 00             	data16 add BYTE PTR [rax],al
    4d46:	00 01                	add    BYTE PTR [rcx],al
    4d48:	66 00 00             	data16 add BYTE PTR [rax],al
    4d4b:	00 00                	add    BYTE PTR [rax],al
    4d4d:	07                   	(bad)
    4d4e:	bd 00 00 00 06       	mov    ebp,0x6000000
    4d53:	05 03 0e bb 01       	add    eax,0x1bb0e03
    4d58:	00 00                	add    BYTE PTR [rax],al
    4d5a:	d6                   	(bad)
    4d5b:	04 00                	add    al,0x0
    4d5d:	00 01                	add    BYTE PTR [rcx],al
    4d5f:	f0 00 00             	lock add BYTE PTR [rax],al
    4d62:	00 00                	add    BYTE PTR [rax],al
    4d64:	07                   	(bad)
    4d65:	c3                   	ret
    4d66:	02 00                	add    al,BYTE PTR [rax]
    4d68:	00 06                	add    BYTE PTR [rsi],al
    4d6a:	e2 03                	loop   4d6f <__GNU_EH_FRAME_HDR+0x67f>
    4d6c:	0f a5 00             	shld   DWORD PTR [rax],eax,cl
    4d6f:	00 00                	add    BYTE PTR [rax],al
    4d71:	f2 04 00             	repnz add al,0x0
    4d74:	00 01                	add    BYTE PTR [rcx],al
    4d76:	9e                   	sahf
    4d77:	00 00                	add    BYTE PTR [rax],al
    4d79:	00 01                	add    BYTE PTR [rcx],al
    4d7b:	9e                   	sahf
    4d7c:	00 00                	add    BYTE PTR [rax],al
    4d7e:	00 00                	add    BYTE PTR [rax],al
    4d80:	07                   	(bad)
    4d81:	33 02                	xor    eax,DWORD PTR [rdx]
    4d83:	00 00                	add    BYTE PTR [rax],al
    4d85:	06                   	(bad)
    4d86:	26 04 0c             	es add al,0xc
    4d89:	66 00 00             	data16 add BYTE PTR [rax],al
    4d8c:	00 0e                	add    BYTE PTR [rsi],cl
    4d8e:	05 00 00 01 f0       	add    eax,0xf0010000
    4d93:	00 00                	add    BYTE PTR [rax],al
    4d95:	00 01                	add    BYTE PTR [rcx],al
    4d97:	2e 00 00             	cs add BYTE PTR [rax],al
    4d9a:	00 00                	add    BYTE PTR [rax],al
    4d9c:	08 39                	or     BYTE PTR [rcx],bh
    4d9e:	02 00                	add    al,BYTE PTR [rax]
    4da0:	00 0e                	add    BYTE PTR [rsi],cl
    4da2:	75 01                	jne    4da5 <__GNU_EH_FRAME_HDR+0x6b5>
    4da4:	2e 00 00             	cs add BYTE PTR [rax],al
    4da7:	00 2e                	add    BYTE PTR [rsi],ch
    4da9:	05 00 00 01 2e       	add    eax,0x2e010000
    4dae:	05 00 00 01 f0       	add    eax,0xf0010000
    4db3:	00 00                	add    BYTE PTR [rax],al
    4db5:	00 01                	add    BYTE PTR [rcx],al
    4db7:	2e 00 00             	cs add BYTE PTR [rax],al
    4dba:	00 00                	add    BYTE PTR [rax],al
    4dbc:	09 33                	or     DWORD PTR [rbx],esi
    4dbe:	05 00 00 06 04       	add    eax,0x4060000
    4dc3:	05 61 02 00 00       	add    eax,0x261
    4dc8:	0f 33                	rdpmc
    4dca:	05 00 00 07 d9       	add    eax,0xd9070000
    4dcf:	00 00                	add    BYTE PTR [rax],al
    4dd1:	00 06                	add    BYTE PTR [rsi],al
    4dd3:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    4dd6:	66 00 00             	data16 add BYTE PTR [rax],al
    4dd9:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    4ddc:	00 00                	add    BYTE PTR [rax],al
    4dde:	01 2e                	add    DWORD PTR [rsi],ebp
    4de0:	05 00 00 01 f0       	add    eax,0xf0010000
    4de5:	00 00                	add    BYTE PTR [rax],al
    4de7:	00 01                	add    BYTE PTR [rcx],al
    4de9:	2e 00 00             	cs add BYTE PTR [rax],al
    4dec:	00 00                	add    BYTE PTR [rax],al
    4dee:	19 25 00 00 00 ca    	sbb    DWORD PTR [rip+0xffffffffca000000],esp        # ffffffffca004df4 <_end+0xffffffffc9ffeddc>
    4df4:	03 80 05 00 00 01    	add    eax,DWORD PTR [rax+0x1000005]
    4dfa:	89 01                	mov    DWORD PTR [rcx],eax
    4dfc:	00 00                	add    BYTE PTR [rax],al
    4dfe:	01 2e                	add    DWORD PTR [rsi],ebp
    4e00:	00 00                	add    BYTE PTR [rax],al
    4e02:	00 01                	add    BYTE PTR [rcx],al
    4e04:	2e 00 00             	cs add BYTE PTR [rax],al
    4e07:	00 01                	add    BYTE PTR [rcx],al
    4e09:	fa                   	cli
    4e0a:	01 00                	add    DWORD PTR [rax],eax
    4e0c:	00 00                	add    BYTE PTR [rax],al
    4e0e:	2d 36 00 00 00       	sub    eax,0x36
    4e13:	06                   	(bad)
    4e14:	fa                   	cli
    4e15:	02 0d 93 05 00 00    	add    cl,BYTE PTR [rip+0x593]        # 53ae <__FRAME_END__+0x596>
    4e1b:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    4e1e:	00 00                	add    BYTE PTR [rax],al
    4e20:	00 2e                	add    BYTE PTR [rsi],ch
    4e22:	ec                   	in     al,dx
    4e23:	02 00                	add    al,BYTE PTR [rax]
    4e25:	00 06                	add    BYTE PTR [rsi],al
    4e27:	3d 02 0c 66 00       	cmp    eax,0x660c02
    4e2c:	00 00                	add    BYTE PTR [rax],al
    4e2e:	19 eb                	sbb    ebx,ebp
    4e30:	02 00                	add    al,BYTE PTR [rax]
    4e32:	00 3f                	add    BYTE PTR [rdi],bh
    4e34:	02 b1 05 00 00 01    	add    dh,BYTE PTR [rcx+0x1000005]
    4e3a:	08 01                	or     BYTE PTR [rcx],al
    4e3c:	00 00                	add    BYTE PTR [rax],al
    4e3e:	00 08                	add    BYTE PTR [rax],cl
    4e40:	05 01 00 00 06       	add    eax,0x6000001
    4e45:	76 0f                	jbe    4e56 <__FRAME_END__+0x3e>
    4e47:	44 04 00             	rex.R add al,0x0
    4e4a:	00 cc                	add    ah,cl
    4e4c:	05 00 00 01 f0       	add    eax,0xf0010000
    4e51:	00 00                	add    BYTE PTR [rax],al
    4e53:	00 01                	add    BYTE PTR [rcx],al
    4e55:	cc                   	int3
    4e56:	05 00 00 00 09       	add    eax,0x9000000
    4e5b:	bb 01 00 00 0b       	mov    ebx,0xb000001
    4e60:	54                   	push   rsp
    4e61:	00 00                	add    BYTE PTR [rax],al
    4e63:	00 06                	add    BYTE PTR [rsi],al
    4e65:	d7                   	xlat   BYTE PTR ds:[rbx]
    4e66:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    4e69:	00 00                	add    BYTE PTR [rax],al
    4e6b:	9e                   	sahf
    4e6c:	00 00                	add    BYTE PTR [rax],al
    4e6e:	00 f5                	add    ch,dh
    4e70:	05 00 00 01 f0       	add    eax,0xf0010000
    4e75:	00 00                	add    BYTE PTR [rax],al
    4e77:	00 01                	add    BYTE PTR [rcx],al
    4e79:	cc                   	int3
    4e7a:	05 00 00 01 66       	add    eax,0x66010000
    4e7f:	00 00                	add    BYTE PTR [rax],al
    4e81:	00 00                	add    BYTE PTR [rax],al
    4e83:	0b 25 02 00 00 06    	or     esp,DWORD PTR [rip+0x6000002]        # 6004e8b <_end+0x5ffee73>
    4e89:	db 1a                	fistp  DWORD PTR [rdx]
    4e8b:	1c 02                	sbb    al,0x2
    4e8d:	00 00                	add    BYTE PTR [rax],al
    4e8f:	3a 00                	cmp    al,BYTE PTR [rax]
    4e91:	00 00                	add    BYTE PTR [rax],al
    4e93:	19 06                	sbb    DWORD PTR [rsi],eax
    4e95:	00 00                	add    BYTE PTR [rax],al
    4e97:	01 f0                	add    eax,esi
    4e99:	00 00                	add    BYTE PTR [rax],al
    4e9b:	00 01                	add    BYTE PTR [rcx],al
    4e9d:	cc                   	int3
    4e9e:	05 00 00 01 66       	add    eax,0x66010000
    4ea3:	00 00                	add    BYTE PTR [rax],al
    4ea5:	00 00                	add    BYTE PTR [rax],al
    4ea7:	07                   	(bad)
    4ea8:	db 25 00 00 06 9b    	(bad)  [rip+0xffffffff9b060000]        # ffffffff9b064eae <_end+0xffffffff9b05ee96>
    4eae:	03 0c 66             	add    ecx,DWORD PTR [rsi+riz*2]
    4eb1:	00 00                	add    BYTE PTR [rax],al
    4eb3:	00 30                	add    BYTE PTR [rax],dh
    4eb5:	06                   	(bad)
    4eb6:	00 00                	add    BYTE PTR [rax],al
    4eb8:	01 f0                	add    eax,esi
    4eba:	00 00                	add    BYTE PTR [rax],al
    4ebc:	00 00                	add    BYTE PTR [rax],al
    4ebe:	08 e1                	or     cl,ah
    4ec0:	01 00                	add    DWORD PTR [rax],eax
    4ec2:	00 0e                	add    BYTE PTR [rsi],cl
    4ec4:	8f 01                	pop    QWORD PTR [rcx]
    4ec6:	2e 00 00             	cs add BYTE PTR [rax],al
    4ec9:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    4ecc:	00 00                	add    BYTE PTR [rax],al
    4ece:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4ed4:	50                   	push   rax
    4ed5:	06                   	(bad)
    4ed6:	00 00                	add    BYTE PTR [rax],al
    4ed8:	01 2e                	add    DWORD PTR [rsi],ebp
    4eda:	00 00                	add    BYTE PTR [rax],al
    4edc:	00 00                	add    BYTE PTR [rax],al
    4ede:	09 3a                	or     DWORD PTR [rdx],edi
    4ee0:	05 00 00 08 42       	add    eax,0x42080000
    4ee5:	02 00                	add    al,BYTE PTR [rax]
    4ee7:	00 0e                	add    BYTE PTR [rsi],cl
    4ee9:	4f 01 66 00          	rex.WRXB add QWORD PTR [r14+0x0],r12
    4eed:	00 00                	add    BYTE PTR [rax],al
    4eef:	70 06                	jo     4ef7 <__FRAME_END__+0xdf>
    4ef1:	00 00                	add    BYTE PTR [rax],al
    4ef3:	01 bb 01 00 00 01    	add    DWORD PTR [rbx+0x1000001],edi
    4ef9:	33 05 00 00 00 2f    	xor    eax,DWORD PTR [rip+0x2f000000]        # 2f004eff <_end+0x2effeee7>
    4eff:	12 02                	adc    al,BYTE PTR [rdx]
    4f01:	00 00                	add    BYTE PTR [rax],al
    4f03:	16                   	(bad)
    4f04:	57                   	push   rdi
    4f05:	01 0b                	add    DWORD PTR [rbx],ecx
    4f07:	cf                   	iret
    4f08:	06                   	(bad)
    4f09:	00 00                	add    BYTE PTR [rax],al
    4f0b:	02 0a                	add    cl,BYTE PTR [rdx]
    4f0d:	cc                   	int3
    4f0e:	0b dd                	or     ebx,ebp
    4f10:	00 00                	add    BYTE PTR [rax],al
    4f12:	00 02                	add    BYTE PTR [rdx],al
    4f14:	0a dc                	or     bl,ah
    4f16:	0b cf                	or     ecx,edi
    4f18:	06                   	(bad)
    4f19:	00 00                	add    BYTE PTR [rax],al
    4f1b:	02 0a                	add    cl,BYTE PTR [rdx]
    4f1d:	e7 0b                	out    0xb,eax
    4f1f:	eb 06                	jmp    4f27 <__FRAME_END__+0x10f>
    4f21:	00 00                	add    BYTE PTR [rax],al
    4f23:	02 0a                	add    cl,BYTE PTR [rdx]
    4f25:	e8 0b 02 07 00       	call   75135 <_end+0x6f11d>
    4f2a:	00 02                	add    BYTE PTR [rdx],al
    4f2c:	0a e9                	or     ch,cl
    4f2e:	0b 26                	or     esp,DWORD PTR [rsi]
    4f30:	07                   	(bad)
    4f31:	00 00                	add    BYTE PTR [rax],al
    4f33:	02 0a                	add    cl,BYTE PTR [rdx]
    4f35:	eb 0b                	jmp    4f42 <__FRAME_END__+0x12a>
    4f37:	4a 07                	rex.WX (bad)
    4f39:	00 00                	add    BYTE PTR [rax],al
    4f3b:	02 0a                	add    cl,BYTE PTR [rdx]
    4f3d:	ec                   	in     al,dx
    4f3e:	0b 6c 07 00          	or     ebp,DWORD PTR [rdi+rax*1+0x0]
    4f42:	00 18                	add    BYTE PTR [rax],bl
    4f44:	64 69 76 00 d9 b8 01 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d9
    4f4b:	00 
    4f4c:	00 dd                	add    ch,bl
    4f4e:	00 00                	add    BYTE PTR [rax],al
    4f50:	00 01                	add    BYTE PTR [rcx],al
    4f52:	d6                   	(bad)
    4f53:	00 00                	add    BYTE PTR [rax],al
    4f55:	00 01                	add    BYTE PTR [rcx],al
    4f57:	d6                   	(bad)
    4f58:	00 00                	add    BYTE PTR [rax],al
    4f5a:	00 00                	add    BYTE PTR [rax],al
    4f5c:	00 07                	add    BYTE PTR [rdi],al
    4f5e:	c2 02 00             	ret    0x2
    4f61:	00 06                	add    BYTE PTR [rsi],al
    4f63:	e6 03                	out    0x3,al
    4f65:	1e                   	(bad)
    4f66:	dd 00                	fld    QWORD PTR [rax]
    4f68:	00 00                	add    BYTE PTR [rax],al
    4f6a:	eb 06                	jmp    4f72 <__FRAME_END__+0x15a>
    4f6c:	00 00                	add    BYTE PTR [rax],al
    4f6e:	01 d6                	add    esi,edx
    4f70:	00 00                	add    BYTE PTR [rax],al
    4f72:	00 01                	add    BYTE PTR [rcx],al
    4f74:	d6                   	(bad)
    4f75:	00 00                	add    BYTE PTR [rax],al
    4f77:	00 00                	add    BYTE PTR [rax],al
    4f79:	07                   	(bad)
    4f7a:	2d 02 00 00 06       	sub    eax,0x6000002
    4f7f:	ed                   	in     eax,dx
    4f80:	01 01                	add    DWORD PTR [rcx],eax
    4f82:	d6                   	(bad)
    4f83:	00 00                	add    BYTE PTR [rax],al
    4f85:	00 02                	add    BYTE PTR [rdx],al
    4f87:	07                   	(bad)
    4f88:	00 00                	add    BYTE PTR [rax],al
    4f8a:	01 f0                	add    eax,esi
    4f8c:	00 00                	add    BYTE PTR [rax],al
    4f8e:	00 00                	add    BYTE PTR [rax],al
    4f90:	0b 88 00 00 00 06    	or     ecx,DWORD PTR [rax+0x6000000]
    4f96:	ee                   	out    dx,al
    4f97:	16                   	(bad)
    4f98:	7f 00                	jg     4f9a <__FRAME_END__+0x182>
    4f9a:	00 00                	add    BYTE PTR [rax],al
    4f9c:	d6                   	(bad)
    4f9d:	00 00                	add    BYTE PTR [rax],al
    4f9f:	00 26                	add    BYTE PTR [rsi],ah
    4fa1:	07                   	(bad)
    4fa2:	00 00                	add    BYTE PTR [rax],al
    4fa4:	01 f0                	add    eax,esi
    4fa6:	00 00                	add    BYTE PTR [rax],al
    4fa8:	00 01                	add    BYTE PTR [rcx],al
    4faa:	cc                   	int3
    4fab:	05 00 00 01 66       	add    eax,0x66010000
    4fb0:	00 00                	add    BYTE PTR [rax],al
    4fb2:	00 00                	add    BYTE PTR [rax],al
    4fb4:	0b b9 02 00 00 06    	or     edi,DWORD PTR [rcx+0x6000002]
    4fba:	f3 1f                	repz (bad)
    4fbc:	b0 02                	mov    al,0x2
    4fbe:	00 00                	add    BYTE PTR [rax],al
    4fc0:	f3 01 00             	repz add DWORD PTR [rax],eax
    4fc3:	00 4a 07             	add    BYTE PTR [rdx+0x7],cl
    4fc6:	00 00                	add    BYTE PTR [rax],al
    4fc8:	01 f0                	add    eax,esi
    4fca:	00 00                	add    BYTE PTR [rax],al
    4fcc:	00 01                	add    BYTE PTR [rcx],al
    4fce:	cc                   	int3
    4fcf:	05 00 00 01 66       	add    eax,0x66010000
    4fd4:	00 00                	add    BYTE PTR [rax],al
    4fd6:	00 00                	add    BYTE PTR [rax],al
    4fd8:	08 97 02 00 00 06    	or     BYTE PTR [rdi+0x6000002],dl
    4fde:	7c 0e                	jl     4fee <__FRAME_END__+0x1d6>
    4fe0:	65 07                	gs (bad)
    4fe2:	00 00                	add    BYTE PTR [rax],al
    4fe4:	65 07                	gs (bad)
    4fe6:	00 00                	add    BYTE PTR [rax],al
    4fe8:	01 f0                	add    eax,esi
    4fea:	00 00                	add    BYTE PTR [rax],al
    4fec:	00 01                	add    BYTE PTR [rcx],al
    4fee:	cc                   	int3
    4fef:	05 00 00 00 06       	add    eax,0x6000000
    4ff4:	04 04                	add    al,0x4
    4ff6:	d3 00                	rol    DWORD PTR [rax],cl
    4ff8:	00 00                	add    BYTE PTR [rax],al
    4ffa:	08 2b                	or     BYTE PTR [rbx],ch
    4ffc:	00 00                	add    BYTE PTR [rax],al
    4ffe:	00 06                	add    BYTE PTR [rsi],al
    5000:	7f 14                	jg     5016 <__FRAME_END__+0x1fe>
    5002:	87 07                	xchg   DWORD PTR [rdi],eax
    5004:	00 00                	add    BYTE PTR [rax],al
    5006:	87 07                	xchg   DWORD PTR [rdi],eax
    5008:	00 00                	add    BYTE PTR [rax],al
    500a:	01 f0                	add    eax,esi
    500c:	00 00                	add    BYTE PTR [rax],al
    500e:	00 01                	add    BYTE PTR [rcx],al
    5010:	cc                   	int3
    5011:	05 00 00 00 06       	add    eax,0x6000000
    5016:	10 04 f3             	adc    BYTE PTR [rbx+rsi*8],al
    5019:	01 00                	add    DWORD PTR [rax],eax
    501b:	00 02                	add    BYTE PTR [rdx],al
    501d:	0f 27                	(bad)
    501f:	0c f6                	or     al,0xf6
    5021:	03 00                	add    eax,DWORD PTR [rax]
    5023:	00 02                	add    BYTE PTR [rdx],al
    5025:	0f 2b 0e             	movntps XMMWORD PTR [rsi],xmm1
    5028:	13 04 00             	adc    eax,DWORD PTR [rax+rax*1]
    502b:	00 02                	add    BYTE PTR [rdx],al
    502d:	0f 2e 0e             	ucomiss xmm1,DWORD PTR [rsi]
    5030:	80 05 00 00 02 0f 36 	add    BYTE PTR [rip+0xf020000],0x36        # f025037 <_end+0xf01f01f>
    5037:	0c 6d                	or     al,0x6d
    5039:	00 00                	add    BYTE PTR [rax],al
    503b:	00 02                	add    BYTE PTR [rdx],al
    503d:	0f 37                	getsec
    503f:	0c a5                	or     al,0xa5
    5041:	00 00                	add    BYTE PTR [rax],al
    5043:	00 06                	add    BYTE PTR [rsi],al
    5045:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    5048:	02 00                	add    al,BYTE PTR [rax]
    504a:	00 02                	add    BYTE PTR [rdx],al
    504c:	0f 39                	(bad)
    504e:	0c 34                	or     al,0x34
    5050:	03 00                	add    eax,DWORD PTR [rax]
    5052:	00 06                	add    BYTE PTR [rsi],al
    5054:	10 05 ea 01 00 00    	adc    BYTE PTR [rip+0x1ea],al        # 5244 <__FRAME_END__+0x42c>
    505a:	02 0f                	add    cl,BYTE PTR [rdi]
    505c:	39 0c 4c             	cmp    DWORD PTR [rsp+rcx*2],ecx
    505f:	03 00                	add    eax,DWORD PTR [rax]
    5061:	00 02                	add    BYTE PTR [rdx],al
    5063:	0f 39                	(bad)
    5065:	0c 64                	or     al,0x64
    5067:	03 00                	add    eax,DWORD PTR [rax]
    5069:	00 02                	add    BYTE PTR [rdx],al
    506b:	0f 39                	(bad)
    506d:	0c 7c                	or     al,0x7c
    506f:	03 00                	add    eax,DWORD PTR [rax]
    5071:	00 02                	add    BYTE PTR [rdx],al
    5073:	0f 39                	(bad)
    5075:	0c 94                	or     al,0x94
    5077:	03 00                	add    eax,DWORD PTR [rax]
    5079:	00 02                	add    BYTE PTR [rdx],al
    507b:	0f 39                	(bad)
    507d:	0c ac                	or     al,0xac
    507f:	03 00                	add    eax,DWORD PTR [rax]
    5081:	00 02                	add    BYTE PTR [rdx],al
    5083:	0f 39                	(bad)
    5085:	0c c4                	or     al,0xc4
    5087:	03 00                	add    eax,DWORD PTR [rax]
    5089:	00 02                	add    BYTE PTR [rdx],al
    508b:	0f 3a 0c             	(bad)
    508e:	2e 04 00             	cs add al,0x0
    5091:	00 02                	add    BYTE PTR [rdx],al
    5093:	0f 3b                	(bad)
    5095:	0c 4b                	or     al,0x4b
    5097:	04 00                	add    al,0x0
    5099:	00 02                	add    BYTE PTR [rdx],al
    509b:	0f 3c                	(bad)
    509d:	0c 62                	or     al,0x62
    509f:	04 00                	add    al,0x0
    50a1:	00 02                	add    BYTE PTR [rdx],al
    50a3:	0f 3d                	(bad)
    50a5:	0c 79                	or     al,0x79
    50a7:	04 00                	add    al,0x0
    50a9:	00 02                	add    BYTE PTR [rdx],al
    50ab:	0f 3f                	(bad)
    50ad:	0c b5                	or     al,0xb5
    50af:	06                   	(bad)
    50b0:	00 00                	add    BYTE PTR [rax],al
    50b2:	02 0f                	add    cl,BYTE PTR [rdi]
    50b4:	3f                   	(bad)
    50b5:	0c dc                	or     al,0xdc
    50b7:	03 00                	add    eax,DWORD PTR [rax]
    50b9:	00 02                	add    BYTE PTR [rdx],al
    50bb:	0f 3f                	(bad)
    50bd:	0c a3                	or     al,0xa3
    50bf:	04 00                	add    al,0x0
    50c1:	00 02                	add    BYTE PTR [rdx],al
    50c3:	0f 41 0c bf          	cmovno ecx,DWORD PTR [rdi+rdi*4]
    50c7:	04 00                	add    al,0x0
    50c9:	00 02                	add    BYTE PTR [rdx],al
    50cb:	0f 43 0c d6          	cmovae ecx,DWORD PTR [rsi+rdx*8]
    50cf:	04 00                	add    al,0x0
    50d1:	00 02                	add    BYTE PTR [rdx],al
    50d3:	0f 46 0c f2          	cmovbe ecx,DWORD PTR [rdx+rsi*8]
    50d7:	04 00                	add    al,0x0
    50d9:	00 02                	add    BYTE PTR [rdx],al
    50db:	0f 47 0c 0e          	cmova  ecx,DWORD PTR [rsi+rcx*1]
    50df:	05 00 00 02 0f       	add    eax,0xf020000
    50e4:	48 0c 3f             	rex.W or al,0x3f
    50e7:	05 00 00 02 0f       	add    eax,0xf020000
    50ec:	4a 0c 60             	rex.WX or al,0x60
    50ef:	05 00 00 02 0f       	add    eax,0xf020000
    50f4:	4b 0c 93             	rex.WXB or al,0x93
    50f7:	05 00 00 02 0f       	add    eax,0xf020000
    50fc:	4d 0c a0             	rex.WRB or al,0xa0
    50ff:	05 00 00 02 0f       	add    eax,0xf020000
    5104:	4e 0c b1             	rex.WRX or al,0xb1
    5107:	05 00 00 02 0f       	add    eax,0xf020000
    510c:	4f 0c d1             	rex.WRXB or al,0xd1
    510f:	05 00 00 02 0f       	add    eax,0xf020000
    5114:	50                   	push   rax
    5115:	0c f5                	or     al,0xf5
    5117:	05 00 00 02 0f       	add    eax,0xf020000
    511c:	51                   	push   rcx
    511d:	0c 19                	or     al,0x19
    511f:	06                   	(bad)
    5120:	00 00                	add    BYTE PTR [rax],al
    5122:	02 0f                	add    cl,BYTE PTR [rdi]
    5124:	53                   	push   rbx
    5125:	0c 30                	or     al,0x30
    5127:	06                   	(bad)
    5128:	00 00                	add    BYTE PTR [rax],al
    512a:	02 0f                	add    cl,BYTE PTR [rdi]
    512c:	54                   	push   rsp
    512d:	0c 55                	or     al,0x55
    512f:	06                   	(bad)
    5130:	00 00                	add    BYTE PTR [rax],al
    5132:	17                   	(bad)
    5133:	cc                   	int3
    5134:	0a 00                	or     al,BYTE PTR [rax]
    5136:	00 90 10 1a 74 09    	add    BYTE PTR [rax+0x9741a10],dl
    513c:	00 00                	add    BYTE PTR [rax],al
    513e:	03 53 0b             	add    edx,DWORD PTR [rbx+0xb]
    5141:	00 00                	add    BYTE PTR [rax],al
    5143:	10 1f                	adc    BYTE PTR [rdi],bl
    5145:	0d 29 01 00 00       	or     eax,0x129
    514a:	00 03                	add    BYTE PTR [rbx],al
    514c:	ff 09                	dec    DWORD PTR [rcx]
    514e:	00 00                	add    BYTE PTR [rax],al
    5150:	10 24 0d 4d 01 00 00 	adc    BYTE PTR [rcx*1+0x14d],ah
    5157:	08 03                	or     BYTE PTR [rbx],al
    5159:	fb                   	sti
    515a:	0a 00                	or     al,BYTE PTR [rax]
    515c:	00 10                	add    BYTE PTR [rax],dl
    515e:	2c 0f                	sub    al,0xf
    5160:	65 01 00             	add    DWORD PTR gs:[rax],eax
    5163:	00 10                	add    BYTE PTR [rax],dl
    5165:	03 8e 0a 00 00 10    	add    ecx,DWORD PTR [rsi+0x1000000a]
    516b:	2d 0e 59 01 00       	sub    eax,0x1590e
    5170:	00 18                	add    BYTE PTR [rax],bl
    5172:	03 3d 0a 00 00 10    	add    edi,DWORD PTR [rip+0x1000000a]        # 10005182 <_end+0xffff16a>
    5178:	2f                   	(bad)
    5179:	0d 35 01 00 00       	or     eax,0x135
    517e:	1c 03                	sbb    al,0x3
    5180:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    5182:	00 00                	add    BYTE PTR [rax],al
    5184:	10 30                	adc    BYTE PTR [rax],dh
    5186:	0d 41 01 00 00       	or     eax,0x141
    518b:	20 03                	and    BYTE PTR [rbx],al
    518d:	e3 0a                	jrcxz  5199 <__FRAME_END__+0x381>
    518f:	00 00                	add    BYTE PTR [rax],al
    5191:	10 32                	adc    BYTE PTR [rdx],dh
    5193:	09 66 00             	or     DWORD PTR [rsi+0x0],esp
    5196:	00 00                	add    BYTE PTR [rax],al
    5198:	24 03                	and    al,0x3
    519a:	2b 0b                	sub    ecx,DWORD PTR [rbx]
    519c:	00 00                	add    BYTE PTR [rax],al
    519e:	10 34 0d 29 01 00 00 	adc    BYTE PTR [rcx*1+0x129],dh
    51a5:	28 03                	sub    BYTE PTR [rbx],al
    51a7:	7d 0a                	jge    51b3 <__FRAME_END__+0x39b>
    51a9:	00 00                	add    BYTE PTR [rax],al
    51ab:	10 39                	adc    BYTE PTR [rcx],bh
    51ad:	0d 71 01 00 00       	or     eax,0x171
    51b2:	30 03                	xor    BYTE PTR [rbx],al
    51b4:	04 0b                	add    al,0xb
    51b6:	00 00                	add    BYTE PTR [rax],al
    51b8:	10 3d 11 8b 01 00    	adc    BYTE PTR [rip+0x18b11],bh        # 1dccf <_end+0x17cb7>
    51be:	00 38                	add    BYTE PTR [rax],bh
    51c0:	03 2a                	add    ebp,DWORD PTR [rdx]
    51c2:	0a 00                	or     al,BYTE PTR [rax]
    51c4:	00 10                	add    BYTE PTR [rax],dl
    51c6:	3f                   	(bad)
    51c7:	10 97 01 00 00 40    	adc    BYTE PTR [rdi+0x40000001],dl
    51cd:	03 96 0a 00 00 10    	add    edx,DWORD PTR [rsi+0x1000000a]
    51d3:	4a 15 cc 01 00 00    	rex.WX adc rax,0x1cc
    51d9:	48 03 70 0b          	add    rsi,QWORD PTR [rax+0xb]
    51dd:	00 00                	add    BYTE PTR [rax],al
    51df:	10 4b 15             	adc    BYTE PTR [rbx+0x15],cl
    51e2:	cc                   	int3
    51e3:	01 00                	add    DWORD PTR [rax],eax
    51e5:	00 58 03             	add    BYTE PTR [rax+0x3],bl
    51e8:	9a                   	(bad)
    51e9:	09 00                	or     DWORD PTR [rax],eax
    51eb:	00 10                	add    BYTE PTR [rax],dl
    51ed:	4c 15 cc 01 00 00    	rex.WR adc rax,0x1cc
    51f3:	68 03 ea 0a 00       	push   0xaea03
    51f8:	00 10                	add    BYTE PTR [rax],dl
    51fa:	59                   	pop    rcx
    51fb:	17                   	(bad)
    51fc:	74 09                	je     5207 <__FRAME_END__+0x3ef>
    51fe:	00 00                	add    BYTE PTR [rax],al
    5200:	78 00                	js     5202 <__FRAME_END__+0x3ea>
    5202:	15 af 01 00 00       	adc    eax,0x1af
    5207:	84 09                	test   BYTE PTR [rcx],cl
    5209:	00 00                	add    BYTE PTR [rax],al
    520b:	16                   	(bad)
    520c:	3a 00                	cmp    al,BYTE PTR [rax]
    520e:	00 00                	add    BYTE PTR [rax],al
    5210:	02 00                	add    al,BYTE PTR [rax]
    5212:	06                   	(bad)
    5213:	10 07                	adc    BYTE PTR [rdi],al
    5215:	66 07                	data16 (bad)
    5217:	00 00                	add    BYTE PTR [rax],al
    5219:	04 ab                	add    al,0xab
    521b:	00 00                	add    BYTE PTR [rax],al
    521d:	00 11                	add    BYTE PTR [rcx],dl
    521f:	1a 14 1d 01 00 00 08 	sbb    dl,BYTE PTR [rbx*1+0x8000001]
    5226:	62 0a 00 00 12       	(bad)
    522b:	1a 10                	sbb    dl,BYTE PTR [rax]
    522d:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    5230:	00 bc 09 00 00 01 66 	add    BYTE PTR [rcx+rcx*1+0x66010000],bh
    5237:	00 00                	add    BYTE PTR [rax],al
    5239:	00 01                	add    BYTE PTR [rcx],al
    523b:	89 01                	mov    DWORD PTR [rcx],eax
    523d:	00 00                	add    BYTE PTR [rax],al
    523f:	01 2e                	add    DWORD PTR [rsi],ebp
    5241:	00 00                	add    BYTE PTR [rax],al
    5243:	00 01                	add    BYTE PTR [rcx],al
    5245:	2e 00 00             	cs add BYTE PTR [rax],al
    5248:	00 00                	add    BYTE PTR [rax],al
    524a:	0b 78 0b             	or     edi,DWORD PTR [rax+0xb]
    524d:	00 00                	add    BYTE PTR [rax],al
    524f:	12 20                	adc    ah,BYTE PTR [rax]
    5251:	10 62 0a             	adc    BYTE PTR [rdx+0xa],ah
    5254:	00 00                	add    BYTE PTR [rax],al
    5256:	c0 01 00             	rol    BYTE PTR [rcx],0x0
    5259:	00 e5                	add    ch,ah
    525b:	09 00                	or     DWORD PTR [rax],eax
    525d:	00 01                	add    BYTE PTR [rcx],al
    525f:	66 00 00             	data16 add BYTE PTR [rax],al
    5262:	00 01                	add    BYTE PTR [rcx],al
    5264:	89 01                	mov    DWORD PTR [rcx],eax
    5266:	00 00                	add    BYTE PTR [rax],al
    5268:	01 2e                	add    DWORD PTR [rsi],ebp
    526a:	00 00                	add    BYTE PTR [rax],al
    526c:	00 01                	add    BYTE PTR [rcx],al
    526e:	2e 00 00             	cs add BYTE PTR [rax],al
    5271:	00 00                	add    BYTE PTR [rax],al
    5273:	0b a2 09 00 00 12    	or     esp,DWORD PTR [rdx+0x12000009]
    5279:	1d 10 62 32 00       	sbb    eax,0x326210
    527e:	00 c0                	add    al,al
    5280:	01 00                	add    DWORD PTR [rax],eax
    5282:	00 09                	add    BYTE PTR [rcx],cl
    5284:	0a 00                	or     al,BYTE PTR [rax]
    5286:	00 01                	add    BYTE PTR [rcx],al
    5288:	66 00 00             	data16 add BYTE PTR [rax],al
    528b:	00 01                	add    BYTE PTR [rcx],al
    528d:	89 01                	mov    DWORD PTR [rcx],eax
    528f:	00 00                	add    BYTE PTR [rax],al
    5291:	01 2e                	add    DWORD PTR [rsi],ebp
    5293:	00 00                	add    BYTE PTR [rax],al
    5295:	00 00                	add    BYTE PTR [rax],al
    5297:	0b 5a 0b             	or     ebx,DWORD PTR [rdx+0xb]
    529a:	00 00                	add    BYTE PTR [rax],al
    529c:	02 1b                	add    bl,BYTE PTR [rbx]
    529e:	0c d3                	or     al,0xd3
    52a0:	2d 00 00 66 00       	sub    eax,0x660000
    52a5:	00 00                	add    BYTE PTR [rax],al
    52a7:	29 0a                	sub    DWORD PTR [rdx],ecx
    52a9:	00 00                	add    BYTE PTR [rax],al
    52ab:	01 f0                	add    eax,esi
    52ad:	00 00                	add    BYTE PTR [rax],al
    52af:	00 01                	add    BYTE PTR [rcx],al
    52b1:	66 00 00             	data16 add BYTE PTR [rax],al
    52b4:	00 1a                	add    BYTE PTR [rdx],bl
    52b6:	00 08                	add    BYTE PTR [rax],cl
    52b8:	85 0a                	test   DWORD PTR [rdx],ecx
    52ba:	00 00                	add    BYTE PTR [rax],al
    52bc:	02 1a                	add    bl,BYTE PTR [rdx]
    52be:	0c 66                	or     al,0x66
    52c0:	00 00                	add    BYTE PTR [rax],al
    52c2:	00 44 0a 00          	add    BYTE PTR [rdx+rcx*1+0x0],al
    52c6:	00 01                	add    BYTE PTR [rcx],al
    52c8:	f0 00 00             	lock add BYTE PTR [rax],al
    52cb:	00 01                	add    BYTE PTR [rcx],al
    52cd:	66 00 00             	data16 add BYTE PTR [rax],al
    52d0:	00 00                	add    BYTE PTR [rax],al
    52d2:	1b 44 0a 00          	sbb    eax,DWORD PTR [rdx+rcx*1+0x0]
    52d6:	00 25 1b e2 09 00    	add    BYTE PTR [rip+0x9e21b],ah        # a34f7 <_end+0x9d4df>
    52dc:	00 23                	add    BYTE PTR [rbx],ah
    52de:	07                   	(bad)
    52df:	83 15 00 00 13 66 01 	adc    DWORD PTR [rip+0x66130000],0x1        # 661352e6 <_end+0x6612f2ce>
    52e6:	0c 66                	or     al,0x66
    52e8:	00 00                	add    BYTE PTR [rax],al
    52ea:	00 67 0a             	add    BYTE PTR [rdi+0xa],ah
    52ed:	00 00                	add    BYTE PTR [rax],al
    52ef:	01 66 00             	add    DWORD PTR [rsi+0x0],esp
    52f2:	00 00                	add    BYTE PTR [rax],al
    52f4:	00 07                	add    BYTE PTR [rdi],al
    52f6:	91                   	xchg   ecx,eax
    52f7:	06                   	(bad)
    52f8:	00 00                	add    BYTE PTR [rax],al
    52fa:	06                   	(bad)
    52fb:	a3 02 0e 89 01 00 00 	movabs ds:0xa83000001890e02,eax
    5302:	83 0a 
    5304:	00 00                	add    BYTE PTR [rax],al
    5306:	01 2e                	add    DWORD PTR [rsi],ebp
    5308:	00 00                	add    BYTE PTR [rax],al
    530a:	00 01                	add    BYTE PTR [rcx],al
    530c:	2e 00 00             	cs add BYTE PTR [rax],al
    530f:	00 00                	add    BYTE PTR [rax],al
    5311:	08 cc                	or     ah,cl
    5313:	0a 00                	or     al,BYTE PTR [rax]
    5315:	00 14 cd 0c 66 00 00 	add    BYTE PTR [rcx*8+0x660c],dl
    531c:	00 9e 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],bl
    5322:	f0 00 00             	lock add BYTE PTR [rax],al
    5325:	00 01                	add    BYTE PTR [rcx],al
    5327:	9e                   	sahf
    5328:	0a 00                	or     al,BYTE PTR [rax]
    532a:	00 00                	add    BYTE PTR [rax],al
    532c:	09 a4 08 00 00 30 ad 	or     DWORD PTR [rax+rcx*1-0x52d00000],esp
    5333:	05 00 00 15 45       	add    eax,0x45150000
    5338:	0d c4 0a 00 00       	or     eax,0xac4
    533d:	01 f0                	add    eax,esi
    533f:	00 00                	add    BYTE PTR [rax],al
    5341:	00 01                	add    BYTE PTR [rcx],al
    5343:	f0 00 00             	lock add BYTE PTR [rax],al
    5346:	00 01                	add    BYTE PTR [rcx],al
    5348:	08 01                	or     BYTE PTR [rcx],al
    534a:	00 00                	add    BYTE PTR [rax],al
    534c:	01 f0                	add    eax,esi
    534e:	00 00                	add    BYTE PTR [rax],al
    5350:	00 00                	add    BYTE PTR [rax],al
    5352:	1c 6d                	sbb    al,0x6d
    5354:	0a 00                	or     al,BYTE PTR [rax]
    5356:	00 21                	add    BYTE PTR [rcx],ah
    5358:	0a b6 09 00 00 8b    	or     dh,BYTE PTR [rsi-0x74fffff7]
    535e:	09 00                	or     DWORD PTR [rax],eax
    5360:	00 b0 25 00 00 00    	add    BYTE PTR [rax+0x25],dh
    5366:	00 00                	add    BYTE PTR [rax],al
    5368:	00 62 00             	add    BYTE PTR [rdx+0x0],ah
    536b:	00 00                	add    BYTE PTR [rax],al
    536d:	00 00                	add    BYTE PTR [rax],al
    536f:	00 00                	add    BYTE PTR [rax],al
    5371:	01 9c ca 0b 00 00 10 	add    DWORD PTR [rdx+rcx*8+0x1000000b],ebx
    5378:	9e                   	sahf
    5379:	03 00                	add    eax,DWORD PTR [rax]
    537b:	00 21                	add    BYTE PTR [rcx],ah
    537d:	1b bb 01 00 00 62    	sbb    edi,DWORD PTR [rbx+0x62000001]
    5383:	1a 00                	sbb    al,BYTE PTR [rax]
    5385:	00 58 1a             	add    BYTE PTR [rax+0x1a],bl
    5388:	00 00                	add    BYTE PTR [rax],al
    538a:	10 88 0b 00 00 21    	adc    BYTE PTR [rax+0x2100000b],cl
    5390:	28 2e                	sub    BYTE PTR [rsi],ch
    5392:	00 00                	add    BYTE PTR [rax],al
    5394:	00 96 1a 00 00 8c    	add    BYTE PTR [rsi-0x73ffffe6],dl
    539a:	1a 00                	sbb    al,BYTE PTR [rax]
    539c:	00 1d cd 03 00 00    	add    BYTE PTR [rip+0x3cd],bl        # 576f <__FRAME_END__+0x957>
    53a2:	da 0b                	fimul  DWORD PTR [rbx]
    53a4:	00 00                	add    BYTE PTR [rax],al
    53a6:	09 03                	or     DWORD PTR [rbx],eax
    53a8:	58                   	pop    rax
    53a9:	44 00 00             	add    BYTE PTR [rax],r8b
    53ac:	00 00                	add    BYTE PTR [rax],al
    53ae:	00 00                	add    BYTE PTR [rax],al
    53b0:	0d 67 0b 00 00       	or     eax,0xb67
    53b5:	24 0b                	and    al,0xb
    53b7:	bb 01 00 00 c4       	mov    ebx,0xc4000001
    53bc:	1a 00                	sbb    al,BYTE PTR [rax]
    53be:	00 c0                	add    al,al
    53c0:	1a 00                	sbb    al,BYTE PTR [rax]
    53c2:	00 0d be 04 00 00    	add    BYTE PTR [rip+0x4be],cl        # 5886 <__FRAME_END__+0xa6e>
    53c8:	25 0e 8b 09 00       	and    eax,0x98b0e
    53cd:	00 d7                	add    bh,dl
    53cf:	1a 00                	sbb    al,BYTE PTR [rax]
    53d1:	00 d3                	add    bl,dl
    53d3:	1a 00                	sbb    al,BYTE PTR [rax]
    53d5:	00 1e                	add    BYTE PTR [rsi],bl
    53d7:	6b 0e 00             	imul   ecx,DWORD PTR [rsi],0x0
    53da:	00 d8                	add    al,bl
    53dc:	25 00 00 00 00       	and    eax,0x0
    53e1:	00 00                	add    BYTE PTR [rax],al
    53e3:	01 cf                	add    edi,ecx
    53e5:	02 00                	add    al,BYTE PTR [rax]
    53e7:	00 29                	add    BYTE PTR [rcx],ch
    53e9:	1b 8e 0b 00 00 0c    	sbb    ecx,DWORD PTR [rsi+0xc00000b]
    53ef:	8b 0e                	mov    ecx,DWORD PTR [rsi]
    53f1:	00 00                	add    BYTE PTR [rax],al
    53f3:	e9 1a 00 00 e7       	jmp    ffffffffe7005412 <_end+0xffffffffe6fff3fa>
    53f8:	1a 00                	sbb    al,BYTE PTR [rax]
    53fa:	00 0c 80             	add    BYTE PTR [rax+rax*4],cl
    53fd:	0e                   	(bad)
    53fe:	00 00                	add    BYTE PTR [rax],al
    5400:	f4                   	hlt
    5401:	1a 00                	sbb    al,BYTE PTR [rax]
    5403:	00 f2                	add    dl,dh
    5405:	1a 00                	sbb    al,BYTE PTR [rax]
    5407:	00 11                	add    BYTE PTR [rcx],dl
    5409:	dd 25 00 00 00 00    	frstor [rip+0x0]        # 540f <__FRAME_END__+0x5f7>
    540f:	00 00                	add    BYTE PTR [rax],al
    5411:	97                   	xchg   edi,eax
    5412:	0e                   	(bad)
    5413:	00 00                	add    BYTE PTR [rax],al
    5415:	05 01 54 01 3a       	add    eax,0x3a015401
    541a:	00 00                	add    BYTE PTR [rax],al
    541c:	11 12                	adc    DWORD PTR [rdx],edx
    541e:	26 00 00             	es add BYTE PTR [rax],al
    5421:	00 00                	add    BYTE PTR [rax],al
    5423:	00 00                	add    BYTE PTR [rax],al
    5425:	a3 0a 00 00 05 01 55 	movabs ds:0x30955010500000a,eax
    542c:	09 03 
    542e:	1d 40 00 00 00       	sbb    eax,0x40
    5433:	00 00                	add    BYTE PTR [rax],al
    5435:	00 05 01 54 09 03    	add    BYTE PTR [rip+0x3095401],al        # 309a83c <_end+0x3094824>
    543b:	4a                   	rex.WX
    543c:	41 00 00             	add    BYTE PTR [r8],al
    543f:	00 00                	add    BYTE PTR [rax],al
    5441:	00 00                	add    BYTE PTR [rax],al
    5443:	05 01 51 02 08       	add    eax,0x8025101
    5448:	22 05 01 52 09 03    	and    al,BYTE PTR [rip+0x3095201]        # 309a64f <_end+0x3094637>
    544e:	58                   	pop    rax
    544f:	44 00 00             	add    BYTE PTR [rax],r8b
    5452:	00 00                	add    BYTE PTR [rax],al
    5454:	00 00                	add    BYTE PTR [rax],al
    5456:	00 00                	add    BYTE PTR [rax],al
    5458:	15 fc 00 00 00       	adc    eax,0xfc
    545d:	da 0b                	fimul  DWORD PTR [rbx]
    545f:	00 00                	add    BYTE PTR [rax],al
    5461:	16                   	(bad)
    5462:	3a 00                	cmp    al,BYTE PTR [rax]
    5464:	00 00                	add    BYTE PTR [rax],al
    5466:	22 00                	and    al,BYTE PTR [rax]
    5468:	0f ca                	bswap  edx
    546a:	0b 00                	or     eax,DWORD PTR [rax]
    546c:	00 1c c8             	add    BYTE PTR [rax+rcx*8],bl
    546f:	09 00                	or     DWORD PTR [rax],eax
    5471:	00 0b                	add    BYTE PTR [rbx],cl
    5473:	07                   	(bad)
    5474:	d1 09                	ror    DWORD PTR [rcx],1
    5476:	00 00                	add    BYTE PTR [rax],al
    5478:	bb 01 00 00 a0       	mov    ebx,0xa0000001
    547d:	24 00                	and    al,0x0
    547f:	00 00                	add    BYTE PTR [rax],al
    5481:	00 00                	add    BYTE PTR [rax],al
    5483:	00 08                	add    BYTE PTR [rax],cl
    5485:	01 00                	add    DWORD PTR [rax],eax
    5487:	00 00                	add    BYTE PTR [rax],al
    5489:	00 00                	add    BYTE PTR [rax],al
    548b:	00 01                	add    BYTE PTR [rcx],al
    548d:	9c                   	pushf
    548e:	f4                   	hlt
    548f:	0d 00 00 10 57       	or     eax,0x57100000
    5494:	0e                   	(bad)
    5495:	00 00                	add    BYTE PTR [rax],al
    5497:	0b 1c f0             	or     ebx,DWORD PTR [rax+rsi*8]
    549a:	00 00                	add    BYTE PTR [rax],al
    549c:	00 0a                	add    BYTE PTR [rdx],cl
    549e:	1b 00                	sbb    eax,DWORD PTR [rax]
    54a0:	00 fc                	add    ah,bh
    54a2:	1a 00                	sbb    al,BYTE PTR [rax]
    54a4:	00 10                	add    BYTE PTR [rax],dl
    54a6:	8d 0b                	lea    ecx,[rbx]
    54a8:	00 00                	add    BYTE PTR [rax],al
    54aa:	0b 2e                	or     ebp,DWORD PTR [rsi]
    54ac:	f4                   	hlt
    54ad:	0d 00 00 4c 1b       	or     eax,0x1b4c0000
    54b2:	00 00                	add    BYTE PTR [rax],al
    54b4:	42 1b 00             	rex.X sbb eax,DWORD PTR [rax]
    54b7:	00 1d cd 03 00 00    	add    BYTE PTR [rip+0x3cd],bl        # 588a <__FRAME_END__+0xa72>
    54bd:	09 0e                	or     DWORD PTR [rsi],ecx
    54bf:	00 00                	add    BYTE PTR [rax],al
    54c1:	09 03                	or     DWORD PTR [rbx],eax
    54c3:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    54c7:	00 00                	add    BYTE PTR [rax],al
    54c9:	00 00                	add    BYTE PTR [rax],al
    54cb:	31 c7                	xor    edi,eax
    54cd:	0a 00                	or     al,BYTE PTR [rax]
    54cf:	00 01                	add    BYTE PTR [rcx],al
    54d1:	0e                   	(bad)
    54d2:	11 a4 08 00 00 02 77 	adc    DWORD PTR [rax+rcx*1+0x77020000],esp
    54d9:	00 0d 88 0b 00 00    	add    BYTE PTR [rip+0xb88],cl        # 6067 <_end+0x4f>
    54df:	11 0c 2e             	adc    DWORD PTR [rsi+rbp*1],ecx
    54e2:	00 00                	add    BYTE PTR [rax],al
    54e4:	00 75 1b             	add    BYTE PTR [rbp+0x1b],dh
    54e7:	00 00                	add    BYTE PTR [rax],al
    54e9:	73 1b                	jae    5506 <__FRAME_END__+0x6ee>
    54eb:	00 00                	add    BYTE PTR [rax],al
    54ed:	0d 20 0b 00 00       	or     eax,0xb20
    54f2:	14 09                	adc    al,0x9
    54f4:	66 00 00             	data16 add BYTE PTR [rax],al
    54f7:	00 80 1b 00 00 7c    	add    BYTE PTR [rax+0x7c00001b],al
    54fd:	1b 00                	sbb    eax,DWORD PTR [rax]
    54ff:	00 0d 9e 03 00 00    	add    BYTE PTR [rip+0x39e],cl        # 58a3 <__FRAME_END__+0xa8b>
    5505:	17                   	(bad)
    5506:	0b bb 01 00 00 93    	or     edi,DWORD PTR [rbx-0x6cffffff]
    550c:	1b 00                	sbb    eax,DWORD PTR [rax]
    550e:	00 8f 1b 00 00 32    	add    BYTE PTR [rdi+0x3200001b],cl
    5514:	24 0a                	and    al,0xa
    5516:	00 00                	add    BYTE PTR [rax],al
    5518:	01 1a                	add    DWORD PTR [rdx],ebx
    551a:	0d c0 01 00 00       	or     eax,0x1c0
    551f:	1e                   	(bad)
    5520:	0e                   	(bad)
    5521:	0e                   	(bad)
    5522:	00 00                	add    BYTE PTR [rax],al
    5524:	1a 25 00 00 00 00    	sbb    ah,BYTE PTR [rip+0x0]        # 552a <__FRAME_END__+0x712>
    552a:	00 00                	add    BYTE PTR [rax],al
    552c:	01 c7                	add    edi,eax
    552e:	02 00                	add    al,BYTE PTR [rax]
    5530:	00 14 1a             	add    BYTE PTR [rdx+rbx*1],dl
    5533:	dd 0c 00             	fisttp QWORD PTR [rax+rax*1]
    5536:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    5539:	0e                   	(bad)
    553a:	00 00                	add    BYTE PTR [rax],al
    553c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    553d:	1b 00                	sbb    eax,DWORD PTR [rax]
    553f:	00 a2 1b 00 00 0c    	add    BYTE PTR [rdx+0xc00001b],ah
    5545:	1d 0e 00 00 ae       	sbb    eax,0xae00000e
    554a:	1b 00                	sbb    eax,DWORD PTR [rax]
    554c:	00 ac 1b 00 00 11 1f 	add    BYTE PTR [rbx+rbx*1+0x1f110000],ch
    5553:	25 00 00 00 00       	and    eax,0x0
    5558:	00 00                	add    BYTE PTR [rax],al
    555a:	09 0a                	or     DWORD PTR [rdx],ecx
    555c:	00 00                	add    BYTE PTR [rax],al
    555e:	05 01 55 02 73       	add    eax,0x73025501
    5563:	00 05 01 54 01 30    	add    BYTE PTR [rip+0x30015401],al        # 3001a96a <_end+0x30014952>
    5569:	00 00                	add    BYTE PTR [rax],al
    556b:	33 37                	xor    esi,DWORD PTR [rdi]
    556d:	0e                   	(bad)
    556e:	00 00                	add    BYTE PTR [rax],al
    5570:	3c 25                	cmp    al,0x25
    5572:	00 00                	add    BYTE PTR [rax],al
    5574:	00 00                	add    BYTE PTR [rax],al
    5576:	00 00                	add    BYTE PTR [rax],al
    5578:	01 3c 25 00 00 00 00 	add    DWORD PTR ds:0x0,edi
    557f:	00 00                	add    BYTE PTR [rax],al
    5581:	0e                   	(bad)
    5582:	00 00                	add    BYTE PTR [rax],al
    5584:	00 00                	add    BYTE PTR [rax],al
    5586:	00 00                	add    BYTE PTR [rax],al
    5588:	00 01                	add    BYTE PTR [rcx],al
    558a:	1a 19                	sbb    bl,BYTE PTR [rcx]
    558c:	4a 0d 00 00 0c 5e    	rex.WX or rax,0x5e0c0000
    5592:	0e                   	(bad)
    5593:	00 00                	add    BYTE PTR [rax],al
    5595:	b7 1b                	mov    bh,0x1b
    5597:	00 00                	add    BYTE PTR [rax],al
    5599:	b5 1b                	mov    ch,0x1b
    559b:	00 00                	add    BYTE PTR [rax],al
    559d:	0c 52                	or     al,0x52
    559f:	0e                   	(bad)
    55a0:	00 00                	add    BYTE PTR [rax],al
    55a2:	c3                   	ret
    55a3:	1b 00                	sbb    eax,DWORD PTR [rax]
    55a5:	00 bf 1b 00 00 0c    	add    BYTE PTR [rdi+0xc00001b],bh
    55ab:	46 0e                	rex.RX (bad)
    55ad:	00 00                	add    BYTE PTR [rax],al
    55af:	d4                   	(bad)
    55b0:	1b 00                	sbb    eax,DWORD PTR [rax]
    55b2:	00 d2                	add    dl,dl
    55b4:	1b 00                	sbb    eax,DWORD PTR [rax]
    55b6:	00 11                	add    BYTE PTR [rcx],dl
    55b8:	4a 25 00 00 00 00    	rex.WX and rax,0x0
    55be:	00 00                	add    BYTE PTR [rax],al
    55c0:	e5 09                	in     eax,0x9
    55c2:	00 00                	add    BYTE PTR [rax],al
    55c4:	05 01 55 02 7c       	add    eax,0x7c025501
    55c9:	00 05 01 54 02 73    	add    BYTE PTR [rip+0x73025401],al        # 7302a9d0 <_end+0x730249b8>
    55cf:	00 05 01 51 02 7d    	add    BYTE PTR [rip+0x7d025101],al        # 7d02a6d6 <_end+0x7d0246be>
    55d5:	00 00                	add    BYTE PTR [rax],al
    55d7:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
    55da:	25 00 00 00 00       	and    eax,0x0
    55df:	00 00                	add    BYTE PTR [rax],al
    55e1:	01 30                	add    DWORD PTR [rax],esi
    55e3:	12 05 25 00 00 00    	adc    al,BYTE PTR [rip+0x25]        # 560e <__FRAME_END__+0x7f6>
    55e9:	00 00                	add    BYTE PTR [rax],al
    55eb:	00 83 0a 00 00 73    	add    BYTE PTR [rbx+0x7300000a],al
    55f1:	0d 00 00 05 01       	or     eax,0x1050000
    55f6:	55                   	push   rbp
    55f7:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    55fa:	05 01 54 02 77       	add    eax,0x77025401
    55ff:	00 00                	add    BYTE PTR [rax],al
    5601:	12 34 25 00 00 00 00 	adc    dh,BYTE PTR ds:0x0
    5608:	00 00                	add    BYTE PTR [rax],al
    560a:	67 0a 00             	or     al,BYTE PTR [eax]
    560d:	00 90 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],dl
    5613:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    5616:	7d 00                	jge    5618 <__FRAME_END__+0x800>
    5618:	05 01 54 01 31       	add    eax,0x31015401
    561d:	00 12                	add    BYTE PTR [rdx],dl
    561f:	52                   	push   rdx
    5620:	25 00 00 00 00       	and    eax,0x0
    5625:	00 00                	add    BYTE PTR [rax],al
    5627:	50                   	push   rax
    5628:	0a 00                	or     al,BYTE PTR [rax]
    562a:	00 a8 0d 00 00 05    	add    BYTE PTR [rax+0x500000d],ch
    5630:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    5633:	7c 00                	jl     5635 <__FRAME_END__+0x81d>
    5635:	00 12                	add    BYTE PTR [rdx],dl
    5637:	a3 25 00 00 00 00 00 	movabs ds:0xa300000000000025,eax
    563e:	00 a3 
    5640:	0a 00                	or     al,BYTE PTR [rax]
    5642:	00 e6                	add    dh,ah
    5644:	0d 00 00 05 01       	or     eax,0x1050000
    5649:	55                   	push   rbp
    564a:	09 03                	or     DWORD PTR [rbx],eax
    564c:	66 41 00 00          	data16 add BYTE PTR [r8],al
    5650:	00 00                	add    BYTE PTR [rax],al
    5652:	00 00                	add    BYTE PTR [rax],al
    5654:	05 01 54 09 03       	add    eax,0x3095401
    5659:	4a                   	rex.WX
    565a:	41 00 00             	add    BYTE PTR [r8],al
    565d:	00 00                	add    BYTE PTR [rax],al
    565f:	00 00                	add    BYTE PTR [rax],al
    5661:	05 01 51 01 3c       	add    eax,0x3c015101
    5666:	05 01 52 09 03       	add    eax,0x3095201
    566b:	30 44 00 00          	xor    BYTE PTR [rax+rax*1+0x0],al
    566f:	00 00                	add    BYTE PTR [rax],al
    5671:	00 00                	add    BYTE PTR [rax],al
    5673:	00 35 a8 25 00 00    	add    BYTE PTR [rip+0x25a8],dh        # 7c21 <_end+0x1c09>
    5679:	00 00                	add    BYTE PTR [rax],al
    567b:	00 00                	add    BYTE PTR [rax],al
    567d:	a0 0e 00 00 00 09 2e 	movabs al,ds:0x2e090000000e
    5684:	00 00 
    5686:	00 15 fc 00 00 00    	add    BYTE PTR [rip+0xfc],dl        # 5788 <__FRAME_END__+0x970>
    568c:	09 0e                	or     DWORD PTR [rsi],ecx
    568e:	00 00                	add    BYTE PTR [rax],al
    5690:	16                   	(bad)
    5691:	3a 00                	cmp    al,BYTE PTR [rax]
    5693:	00 00                	add    BYTE PTR [rax],al
    5695:	24 00                	and    al,0x0
    5697:	0f f9 0d 00 00 1f d3 	psubw  mm1,QWORD PTR [rip+0xffffffffd31f0000]        # ffffffffd31f569e <_end+0xffffffffd31ef686>
    569e:	2d 00 00 02 29       	sub    eax,0x29020000
    56a3:	66 00 00             	data16 add BYTE PTR [rax],al
    56a6:	00 37                	add    BYTE PTR [rdi],dh
    56a8:	0e                   	(bad)
    56a9:	00 00                	add    BYTE PTR [rax],al
    56ab:	0e                   	(bad)
    56ac:	af                   	scas   eax,DWORD PTR es:[rdi]
    56ad:	09 00                	or     DWORD PTR [rax],eax
    56af:	00 02                	add    BYTE PTR [rdx],al
    56b1:	29 13                	sub    DWORD PTR [rbx],edx
    56b3:	f0 00 00             	lock add BYTE PTR [rax],al
    56b6:	00 0e                	add    BYTE PTR [rsi],cl
    56b8:	f7 09 00 00 02 29    	test   DWORD PTR [rcx],0x29020000
    56be:	1f                   	(bad)
    56bf:	66 00 00             	data16 add BYTE PTR [rax],al
    56c2:	00 1a                	add    BYTE PTR [rdx],bl
    56c4:	00 1f                	add    BYTE PTR [rdi],bl
    56c6:	62 32 00 00 03       	(bad)
    56cb:	1a c0                	sbb    al,al
    56cd:	01 00                	add    DWORD PTR [rax],eax
    56cf:	00 6b 0e             	add    BYTE PTR [rbx+0xe],ch
    56d2:	00 00                	add    BYTE PTR [rax],al
    56d4:	0e                   	(bad)
    56d5:	78 0a                	js     56e1 <__FRAME_END__+0x8c9>
    56d7:	00 00                	add    BYTE PTR [rax],al
    56d9:	03 1a                	add    ebx,DWORD PTR [rdx]
    56db:	0b 66 00             	or     esp,DWORD PTR [rsi+0x0]
    56de:	00 00                	add    BYTE PTR [rax],al
    56e0:	0e                   	(bad)
    56e1:	dd 0a                	fisttp QWORD PTR [rdx]
    56e3:	00 00                	add    BYTE PTR [rax],al
    56e5:	03 1a                	add    ebx,DWORD PTR [rdx]
    56e7:	17                   	(bad)
    56e8:	89 01                	mov    DWORD PTR [rcx],eax
    56ea:	00 00                	add    BYTE PTR [rax],al
    56ec:	0e                   	(bad)
    56ed:	34 0a                	xor    al,0xa
    56ef:	00 00                	add    BYTE PTR [rax],al
    56f1:	03 1a                	add    ebx,DWORD PTR [rdx]
    56f3:	25 2e 00 00 00       	and    eax,0x2e
    56f8:	00 36                	add    BYTE PTR [rsi],dh
    56fa:	55                   	push   rbp
    56fb:	05 00 00 04 e9       	add    eax,0xe9040000
    5700:	01 55 05             	add    DWORD PTR [rbp+0x5],edx
    5703:	00 00                	add    BYTE PTR [rax],al
    5705:	bb 01 00 00 03       	mov    ebx,0x3000001
    570a:	97                   	xchg   edi,eax
    570b:	0e                   	(bad)
    570c:	00 00                	add    BYTE PTR [rax],al
    570e:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    5711:	73 00                	jae    5713 <__FRAME_END__+0x8fb>
    5713:	e9 0f bb 01 00       	jmp    21227 <_end+0x1b20f>
    5718:	00 20                	add    BYTE PTR [rax],ah
    571a:	5f                   	pop    rdi
    571b:	5f                   	pop    rdi
    571c:	63 00                	movsxd eax,DWORD PTR [rax]
    571e:	e9 18 66 00 00       	jmp    bd3b <_end+0x5d23>
    5723:	00 00                	add    BYTE PTR [rax],al
    5725:	21 55 05             	and    DWORD PTR [rbp+0x5],edx
    5728:	00 00                	add    BYTE PTR [rax],al
    572a:	4b 05 00 00 21 f1    	rex.WXB add rax,0xfffffffff1210000
    5730:	05 00 00 f1 05       	add    eax,0x5f10000
    5735:	00 00                	add    BYTE PTR [rax],al
    5737:	00 44 76 00          	add    BYTE PTR [rsi+rsi*2+0x0],al
    573b:	00 05 00 01 08 a2    	add    BYTE PTR [rip+0xffffffffa2080100],al        # ffffffffa2085841 <_end+0xffffffffa207f829>
    5741:	12 00                	adc    al,BYTE PTR [rax]
    5743:	00 66 14             	add    BYTE PTR [rsi+0x14],ah
    5746:	01 00                	add    DWORD PTR [rax],eax
    5748:	00 21                	add    BYTE PTR [rcx],ah
    574a:	eb 02                	jmp    574e <__FRAME_END__+0x936>
    574c:	00 00                	add    BYTE PTR [rax],al
    574e:	00 00                	add    BYTE PTR [rax],al
    5750:	00 00                	add    BYTE PTR [rax],al
    5752:	20 26                	and    BYTE PTR [rsi],ah
    5754:	00 00                	add    BYTE PTR [rax],al
    5756:	00 00                	add    BYTE PTR [rax],al
    5758:	00 00                	add    BYTE PTR [rax],al
    575a:	3c 15                	cmp    al,0x15
    575c:	00 00                	add    BYTE PTR [rax],al
    575e:	00 00                	add    BYTE PTR [rax],al
    5760:	00 00                	add    BYTE PTR [rax],al
    5762:	18 1a                	sbb    BYTE PTR [rdx],bl
    5764:	00 00                	add    BYTE PTR [rax],al
    5766:	12 08                	adc    cl,BYTE PTR [rax]
    5768:	04 f8                	add    al,0xf8
    576a:	01 00                	add    DWORD PTR [rax],eax
    576c:	00 12                	add    BYTE PTR [rdx],dl
    576e:	04 04                	add    al,0x4
    5770:	d3 00                	rol    DWORD PTR [rax],cl
    5772:	00 00                	add    BYTE PTR [rax],al
    5774:	67 73 74             	addr32 jae 57eb <__FRAME_END__+0x9d3>
    5777:	64 00 11             	add    BYTE PTR fs:[rcx],dl
    577a:	32 01                	xor    al,BYTE PTR [rcx]
    577c:	0b e3                	or     esp,ebx
    577e:	20 00                	and    BYTE PTR [rax],al
    5780:	00 18                	add    BYTE PTR [rax],bl
    5782:	03 59 07             	add    ebx,DWORD PTR [rcx+0x7]
    5785:	0b ff                	or     edi,edi
    5787:	22 00                	and    al,BYTE PTR [rax]
    5789:	00 18                	add    BYTE PTR [rax],bl
    578b:	03 5a 07             	add    ebx,DWORD PTR [rdx+0x7]
    578e:	0b f3                	or     esi,ebx
    5790:	22 00                	and    al,BYTE PTR [rax]
    5792:	00 4f bc             	add    BYTE PTR [rdi-0x44],cl
    5795:	2b 00                	sub    eax,DWORD PTR [rax]
    5797:	00 b0 0a 4f c4 2f    	add    BYTE PTR [rax+0x2fc44f0a],dh
    579d:	00 00                	add    BYTE PTR [rax],al
    579f:	06                   	(bad)
    57a0:	0b 3d d8 2d 00 00    	or     edi,DWORD PTR [rip+0x2dd8]        # 857e <_end+0x2566>
    57a6:	06                   	(bad)
    57a7:	32 0d 1a 61 62 73    	xor    cl,BYTE PTR [rip+0x7362611a]        # 7362b8c7 <_end+0x736258af>
    57ad:	00 07                	add    BYTE PTR [rdi],al
    57af:	89 0f                	mov    DWORD PTR [rdi],ecx
    57b1:	03 00                	add    eax,DWORD PTR [rax]
    57b3:	00 cb                	add    bl,cl
    57b5:	24 00                	and    al,0x0
    57b7:	00 8a 00 00 00 01    	add    BYTE PTR [rdx+0x1000000],cl
    57bd:	cb                   	retf
    57be:	24 00                	and    al,0x0
    57c0:	00 00                	add    BYTE PTR [rax],al
    57c2:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57c5:	73 00                	jae    57c7 <__FRAME_END__+0x9af>
    57c7:	07                   	(bad)
    57c8:	55                   	push   rbp
    57c9:	1b 00                	sbb    eax,DWORD PTR [rax]
    57cb:	00 00                	add    BYTE PTR [rax],al
    57cd:	95                   	xchg   ebp,eax
    57ce:	24 00                	and    al,0x0
    57d0:	00 a3 00 00 00 01    	add    BYTE PTR [rbx+0x1000000],ah
    57d6:	95                   	xchg   ebp,eax
    57d7:	24 00                	and    al,0x0
    57d9:	00 00                	add    BYTE PTR [rax],al
    57db:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57de:	73 00                	jae    57e0 <__FRAME_END__+0x9c8>
    57e0:	07                   	(bad)
    57e1:	4f fb                	rex.WRXB sti
    57e3:	02 00                	add    al,BYTE PTR [rax]
    57e5:	00 c5                	add    ch,al
    57e7:	21 00                	and    DWORD PTR [rax],eax
    57e9:	00 bc 00 00 00 01 c5 	add    BYTE PTR [rax+rax*1-0x3aff0000],bh
    57f0:	21 00                	and    DWORD PTR [rax],eax
    57f2:	00 00                	add    BYTE PTR [rax],al
    57f4:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    57f7:	73 00                	jae    57f9 <__FRAME_END__+0x9e1>
    57f9:	07                   	(bad)
    57fa:	4b 05 03 00 00 35    	rex.WXB add rax,0x35000003
    5800:	00 00                	add    BYTE PTR [rax],al
    5802:	00 d5                	add    ch,dl
    5804:	00 00                	add    BYTE PTR [rax],al
    5806:	00 01                	add    BYTE PTR [rcx],al
    5808:	35 00 00 00 00       	xor    eax,0x0
    580d:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5810:	73 00                	jae    5812 <__FRAME_END__+0x9fa>
    5812:	07                   	(bad)
    5813:	47 f1                	rex.RXB int1
    5815:	02 00                	add    al,BYTE PTR [rax]
    5817:	00 2e                	add    BYTE PTR [rsi],ch
    5819:	00 00                	add    BYTE PTR [rax],al
    581b:	00 ee                	add    dh,ch
    581d:	00 00                	add    BYTE PTR [rax],al
    581f:	00 01                	add    BYTE PTR [rcx],al
    5821:	2e 00 00             	cs add BYTE PTR [rax],al
    5824:	00 00                	add    BYTE PTR [rax],al
    5826:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5829:	73 00                	jae    582b <__FRAME_END__+0xa13>
    582b:	07                   	(bad)
    582c:	3d 41 00 00 00       	cmp    eax,0x41
    5831:	be 21 00 00 07       	mov    esi,0x7000021
    5836:	01 00                	add    DWORD PTR [rax],eax
    5838:	00 01                	add    BYTE PTR [rcx],al
    583a:	be 21 00 00 00       	mov    esi,0x21
    583f:	1a 61 62             	sbb    ah,BYTE PTR [rcx+0x62]
    5842:	73 00                	jae    5844 <__FRAME_END__+0xa2c>
    5844:	07                   	(bad)
    5845:	38 11                	cmp    BYTE PTR [rcx],dl
    5847:	00 00                	add    BYTE PTR [rax],al
    5849:	00 b2 21 00 00 20    	add    BYTE PTR [rdx+0x20000021],dh
    584f:	01 00                	add    DWORD PTR [rax],eax
    5851:	00 01                	add    BYTE PTR [rcx],al
    5853:	b2 21                	mov    dl,0x21
    5855:	00 00                	add    BYTE PTR [rax],al
    5857:	00 0f                	add    BYTE PTR [rdi],cl
    5859:	50                   	push   rax
    585a:	29 00                	sub    DWORD PTR [rax],eax
    585c:	00 03                	add    BYTE PTR [rbx],al
    585e:	5d                   	pop    rbp
    585f:	03 94 24 00 00 c5 21 	add    edx,DWORD PTR [rsp+0x21c50000]
    5866:	00 00                	add    BYTE PTR [rax],al
    5868:	3a 01                	cmp    al,BYTE PTR [rcx]
    586a:	00 00                	add    BYTE PTR [rax],al
    586c:	01 c5                	add    ebp,eax
    586e:	21 00                	and    DWORD PTR [rax],eax
    5870:	00 00                	add    BYTE PTR [rax],al
    5872:	0f                   	movmskps ebp,(bad)
    5873:	50                   	push   rax
    5874:	29 00                	sub    DWORD PTR [rax],eax
    5876:	00 03                	add    BYTE PTR [rbx],al
    5878:	59                   	pop    rcx
    5879:	03 9f 24 00 00 35    	add    ebx,DWORD PTR [rdi+0x35000024]
    587f:	00 00                	add    BYTE PTR [rax],al
    5881:	00 54 01 00          	add    BYTE PTR [rcx+rax*1+0x0],dl
    5885:	00 01                	add    BYTE PTR [rcx],al
    5887:	35 00 00 00 00       	xor    eax,0x0
    588c:	0f b8                	(bad)
    588e:	29 00                	sub    DWORD PTR [rax],eax
    5890:	00 03                	add    BYTE PTR [rbx],al
    5892:	70 03                	jo     5897 <__FRAME_END__+0xa7f>
    5894:	7d 18                	jge    58ae <__FRAME_END__+0xa96>
    5896:	00 00                	add    BYTE PTR [rax],al
    5898:	c5 21 00             	(bad)
    589b:	00 6e 01             	add    BYTE PTR [rsi+0x1],ch
    589e:	00 00                	add    BYTE PTR [rax],al
    58a0:	01 c5                	add    ebp,eax
    58a2:	21 00                	and    DWORD PTR [rax],eax
    58a4:	00 00                	add    BYTE PTR [rax],al
    58a6:	0f b8                	(bad)
    58a8:	29 00                	sub    DWORD PTR [rax],eax
    58aa:	00 03                	add    BYTE PTR [rbx],al
    58ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    58ad:	03 88 18 00 00 35    	add    ecx,DWORD PTR [rax+0x35000018]
    58b3:	00 00                	add    BYTE PTR [rax],al
    58b5:	00 88 01 00 00 01    	add    BYTE PTR [rax+0x1000001],cl
    58bb:	35 00 00 00 00       	xor    eax,0x0
    58c0:	0f a0                	push   fs
    58c2:	26 00 00             	es add BYTE PTR [rax],al
    58c5:	03 83 03 67 14 00    	add    eax,DWORD PTR [rbx+0x146703]
    58cb:	00 c5                	add    ch,al
    58cd:	21 00                	and    DWORD PTR [rax],eax
    58cf:	00 a2 01 00 00 01    	add    BYTE PTR [rdx+0x1000001],ah
    58d5:	c5 21 00             	(bad)
    58d8:	00 00                	add    BYTE PTR [rax],al
    58da:	0f a0                	push   fs
    58dc:	26 00 00             	es add BYTE PTR [rax],al
    58df:	03 7f 03             	add    edi,DWORD PTR [rdi+0x3]
    58e2:	72 14                	jb     58f8 <__FRAME_END__+0xae0>
    58e4:	00 00                	add    BYTE PTR [rax],al
    58e6:	35 00 00 00 bc       	xor    eax,0xbc000000
    58eb:	01 00                	add    DWORD PTR [rax],eax
    58ed:	00 01                	add    BYTE PTR [rcx],al
    58ef:	35 00 00 00 00       	xor    eax,0x0
    58f4:	0f 42 32             	cmovb  esi,DWORD PTR [rdx]
    58f7:	00 00                	add    BYTE PTR [rax],al
    58f9:	03 96 03 67 23 00    	add    edx,DWORD PTR [rsi+0x236703]
    58ff:	00 c5                	add    ch,al
    5901:	21 00                	and    DWORD PTR [rax],eax
    5903:	00 db                	add    bl,bl
    5905:	01 00                	add    DWORD PTR [rax],eax
    5907:	00 01                	add    BYTE PTR [rcx],al
    5909:	c5 21 00             	(bad)
    590c:	00 01                	add    BYTE PTR [rcx],al
    590e:	c5 21 00             	(bad)
    5911:	00 00                	add    BYTE PTR [rax],al
    5913:	0f 42 32             	cmovb  esi,DWORD PTR [rdx]
    5916:	00 00                	add    BYTE PTR [rax],al
    5918:	03 92 03 e5 24 00    	add    edx,DWORD PTR [rdx+0x24e503]
    591e:	00 35 00 00 00 fa    	add    BYTE PTR [rip+0xfffffffffa000000],dh        # fffffffffa005924 <_end+0xfffffffff9fff90c>
    5924:	01 00                	add    DWORD PTR [rax],eax
    5926:	00 01                	add    BYTE PTR [rcx],al
    5928:	35 00 00 00 01       	xor    eax,0x1000000
    592d:	35 00 00 00 00       	xor    eax,0x0
    5932:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    5935:	73 00                	jae    5937 <__FRAME_END__+0xb1f>
    5937:	03 b5 b0 25 00 00    	add    esi,DWORD PTR [rbp+0x25b0]
    593d:	c5 21 00             	(bad)
    5940:	00 13                	add    BYTE PTR [rbx],dl
    5942:	02 00                	add    al,BYTE PTR [rax]
    5944:	00 01                	add    BYTE PTR [rcx],al
    5946:	c5 21 00             	(bad)
    5949:	00 00                	add    BYTE PTR [rax],al
    594b:	1a 63 6f             	sbb    ah,BYTE PTR [rbx+0x6f]
    594e:	73 00                	jae    5950 <__FRAME_END__+0xb38>
    5950:	03 b1 ba 25 00 00    	add    esi,DWORD PTR [rcx+0x25ba]
    5956:	35 00 00 00 2c       	xor    eax,0x2c000000
    595b:	02 00                	add    al,BYTE PTR [rax]
    595d:	00 01                	add    BYTE PTR [rcx],al
    595f:	35 00 00 00 00       	xor    eax,0x0
    5964:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    5969:	94                   	xchg   esp,eax
    596a:	01 99 19 00 00 c5    	add    DWORD PTR [rcx-0x3affffe7],ebx
    5970:	21 00                	and    DWORD PTR [rax],eax
    5972:	00 45 02             	add    BYTE PTR [rbp+0x2],al
    5975:	00 00                	add    BYTE PTR [rax],al
    5977:	01 c5                	add    ebp,eax
    5979:	21 00                	and    DWORD PTR [rax],eax
    597b:	00 00                	add    BYTE PTR [rax],al
    597d:	1d 73 69 6e 00       	sbb    eax,0x6e6973
    5982:	90                   	nop
    5983:	01 a3 19 00 00 35    	add    DWORD PTR [rbx+0x35000019],esp
    5989:	00 00                	add    BYTE PTR [rax],al
    598b:	00 5e 02             	add    BYTE PTR [rsi+0x2],bl
    598e:	00 00                	add    BYTE PTR [rax],al
    5990:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5996 <__FRAME_END__+0xb7e>
    5996:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    599b:	cd 01                	int    0x1
    599d:	e4 31                	in     al,0x31
    599f:	00 00                	add    BYTE PTR [rax],al
    59a1:	c5 21 00             	(bad)
    59a4:	00 77 02             	add    BYTE PTR [rdi+0x2],dh
    59a7:	00 00                	add    BYTE PTR [rax],al
    59a9:	01 c5                	add    ebp,eax
    59ab:	21 00                	and    DWORD PTR [rax],eax
    59ad:	00 00                	add    BYTE PTR [rax],al
    59af:	1d 74 61 6e 00       	sbb    eax,0x6e6174
    59b4:	c9                   	leave
    59b5:	01 9a 15 00 00 35    	add    DWORD PTR [rdx+0x35000015],ebx
    59bb:	00 00                	add    BYTE PTR [rax],al
    59bd:	00 90 02 00 00 01    	add    BYTE PTR [rax+0x1000002],dl
    59c3:	35 00 00 00 00       	xor    eax,0x0
    59c8:	0f 1f 2a             	nop    DWORD PTR [rdx]
    59cb:	00 00                	add    BYTE PTR [rax],al
    59cd:	03 c8                	add    ecx,eax
    59cf:	03 8d 2d 00 00 c5    	add    ecx,DWORD PTR [rbp-0x3affffd3]
    59d5:	21 00                	and    DWORD PTR [rax],eax
    59d7:	00 aa 02 00 00 01    	add    BYTE PTR [rdx+0x1000002],ch
    59dd:	c5 21 00             	(bad)
    59e0:	00 00                	add    BYTE PTR [rax],al
    59e2:	0f 1f 2a             	nop    DWORD PTR [rdx]
    59e5:	00 00                	add    BYTE PTR [rax],al
    59e7:	03 c4                	add    eax,esp
    59e9:	03 98 2d 00 00 35    	add    ebx,DWORD PTR [rax+0x3500002d]
    59ef:	00 00                	add    BYTE PTR [rax],al
    59f1:	00 c4                	add    ah,al
    59f3:	02 00                	add    al,BYTE PTR [rax]
    59f5:	00 01                	add    BYTE PTR [rcx],al
    59f7:	35 00 00 00 00       	xor    eax,0x0
    59fc:	04 eb                	add    al,0xeb
    59fe:	1e                   	(bad)
    59ff:	00 00                	add    BYTE PTR [rax],al
    5a01:	03 a7 01 03 df 1e    	add    esp,DWORD PTR [rdi+0x1edf0301]
    5a07:	00 00                	add    BYTE PTR [rax],al
    5a09:	c5 21 00             	(bad)
    5a0c:	00 df                	add    bh,bl
    5a0e:	02 00                	add    al,BYTE PTR [rax]
    5a10:	00 01                	add    BYTE PTR [rcx],al
    5a12:	c5 21 00             	(bad)
    5a15:	00 00                	add    BYTE PTR [rax],al
    5a17:	04 eb                	add    al,0xeb
    5a19:	1e                   	(bad)
    5a1a:	00 00                	add    BYTE PTR [rax],al
    5a1c:	03 a3 01 03 48 17    	add    esp,DWORD PTR [rbx+0x17480301]
    5a22:	00 00                	add    BYTE PTR [rax],al
    5a24:	35 00 00 00 fa       	xor    eax,0xfa000000
    5a29:	02 00                	add    al,BYTE PTR [rax]
    5a2b:	00 01                	add    BYTE PTR [rcx],al
    5a2d:	35 00 00 00 00       	xor    eax,0x0
    5a32:	04 1b                	add    al,0x1b
    5a34:	25 00 00 03 e0       	and    eax,0xe0030000
    5a39:	01 03                	add    DWORD PTR [rbx],eax
    5a3b:	2c 10                	sub    al,0x10
    5a3d:	00 00                	add    BYTE PTR [rax],al
    5a3f:	c5 21 00             	(bad)
    5a42:	00 15 03 00 00 01    	add    BYTE PTR [rip+0x1000003],dl        # 1005a4b <_end+0xfffa33>
    5a48:	c5 21 00             	(bad)
    5a4b:	00 00                	add    BYTE PTR [rax],al
    5a4d:	04 1b                	add    al,0x1b
    5a4f:	25 00 00 03 dc       	and    eax,0xdc030000
    5a54:	01 03                	add    DWORD PTR [rbx],eax
    5a56:	37                   	(bad)
    5a57:	10 00                	adc    BYTE PTR [rax],al
    5a59:	00 35 00 00 00 30    	add    BYTE PTR [rip+0x30000000],dh        # 30005a5f <_end+0x2ffffa47>
    5a5f:	03 00                	add    eax,DWORD PTR [rax]
    5a61:	00 01                	add    BYTE PTR [rcx],al
    5a63:	35 00 00 00 00       	xor    eax,0x0
    5a68:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    5a6b:	70 00                	jo     5a6d <__FRAME_END__+0xc55>
    5a6d:	03 db                	add    ebx,ebx
    5a6f:	f4                   	hlt
    5a70:	0d 00 00 c5 21       	or     eax,0x21c50000
    5a75:	00 00                	add    BYTE PTR [rax],al
    5a77:	49 03 00             	add    rax,QWORD PTR [r8]
    5a7a:	00 01                	add    BYTE PTR [rcx],al
    5a7c:	c5 21 00             	(bad)
    5a7f:	00 00                	add    BYTE PTR [rax],al
    5a81:	1a 65 78             	sbb    ah,BYTE PTR [rbp+0x78]
    5a84:	70 00                	jo     5a86 <__FRAME_END__+0xc6e>
    5a86:	03 d7                	add    edx,edi
    5a88:	a2 1a 00 00 35 00 00 	movabs ds:0x620000003500001a,al
    5a8f:	00 62 
    5a91:	03 00                	add    eax,DWORD PTR [rax]
    5a93:	00 01                	add    BYTE PTR [rcx],al
    5a95:	35 00 00 00 00       	xor    eax,0x0
    5a9a:	04 b0                	add    al,0xb0
    5a9c:	27                   	(bad)
    5a9d:	00 00                	add    BYTE PTR [rax],al
    5a9f:	03 20                	add    esp,DWORD PTR [rax]
    5aa1:	01 03                	add    DWORD PTR [rbx],eax
    5aa3:	ca 1c 00             	retf   0x1c
    5aa6:	00 c5                	add    ch,al
    5aa8:	21 00                	and    DWORD PTR [rax],eax
    5aaa:	00 82 03 00 00 01    	add    BYTE PTR [rdx+0x1000003],al
    5ab0:	c5 21 00             	(bad)
    5ab3:	00 01                	add    BYTE PTR [rcx],al
    5ab5:	ba 25 00 00 00       	mov    edx,0x25
    5aba:	04 b0                	add    al,0xb0
    5abc:	27                   	(bad)
    5abd:	00 00                	add    BYTE PTR [rax],al
    5abf:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    5ac2:	03 64 24 00          	add    esp,DWORD PTR [rsp+0x0]
    5ac6:	00 35 00 00 00 a2    	add    BYTE PTR [rip+0xffffffffa2000000],dh        # ffffffffa2005acc <_end+0xffffffffa1fffab4>
    5acc:	03 00                	add    eax,DWORD PTR [rax]
    5ace:	00 01                	add    BYTE PTR [rcx],al
    5ad0:	35 00 00 00 01       	xor    eax,0x1000000
    5ad5:	ba 25 00 00 00       	mov    edx,0x25
    5ada:	04 a4                	add    al,0xa4
    5adc:	11 00                	adc    DWORD PTR [rax],eax
    5ade:	00 03                	add    BYTE PTR [rbx],al
    5ae0:	33 01                	xor    eax,DWORD PTR [rcx]
    5ae2:	03 fe                	add    edi,esi
    5ae4:	31 00                	xor    DWORD PTR [rax],eax
    5ae6:	00 c5                	add    ch,al
    5ae8:	21 00                	and    DWORD PTR [rax],eax
    5aea:	00 c2                	add    dl,al
    5aec:	03 00                	add    eax,DWORD PTR [rax]
    5aee:	00 01                	add    BYTE PTR [rcx],al
    5af0:	c5 21 00             	(bad)
    5af3:	00 01                	add    BYTE PTR [rcx],al
    5af5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5af6:	21 00                	and    DWORD PTR [rax],eax
    5af8:	00 00                	add    BYTE PTR [rax],al
    5afa:	04 a4                	add    al,0xa4
    5afc:	11 00                	adc    DWORD PTR [rax],eax
    5afe:	00 03                	add    BYTE PTR [rbx],al
    5b00:	2f                   	(bad)
    5b01:	01 03                	add    DWORD PTR [rbx],eax
    5b03:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b04:	1f                   	(bad)
    5b05:	00 00                	add    BYTE PTR [rax],al
    5b07:	35 00 00 00 e2       	xor    eax,0xe2000000
    5b0c:	03 00                	add    eax,DWORD PTR [rax]
    5b0e:	00 01                	add    BYTE PTR [rcx],al
    5b10:	35 00 00 00 01       	xor    eax,0x1000000
    5b15:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5b16:	21 00                	and    DWORD PTR [rax],eax
    5b18:	00 00                	add    BYTE PTR [rax],al
    5b1a:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    5b1f:	46 01 d0             	rex.RX add eax,r10d
    5b22:	2b 00                	sub    eax,DWORD PTR [rax]
    5b24:	00 c5                	add    ch,al
    5b26:	21 00                	and    DWORD PTR [rax],eax
    5b28:	00 fb                	add    bl,bh
    5b2a:	03 00                	add    eax,DWORD PTR [rax]
    5b2c:	00 01                	add    BYTE PTR [rcx],al
    5b2e:	c5 21 00             	(bad)
    5b31:	00 00                	add    BYTE PTR [rax],al
    5b33:	1d 6c 6f 67 00       	sbb    eax,0x676f6c
    5b38:	42 01 da             	rex.X add edx,ebx
    5b3b:	2b 00                	sub    eax,DWORD PTR [rax]
    5b3d:	00 35 00 00 00 14    	add    BYTE PTR [rip+0x14000000],dh        # 14005b43 <_end+0x13fffb2b>
    5b43:	04 00                	add    al,0x0
    5b45:	00 01                	add    BYTE PTR [rcx],al
    5b47:	35 00 00 00 00       	xor    eax,0x0
    5b4c:	04 7f                	add    al,0x7f
    5b4e:	17                   	(bad)
    5b4f:	00 00                	add    BYTE PTR [rax],al
    5b51:	03 59 01             	add    ebx,DWORD PTR [rcx+0x1]
    5b54:	03 71 0c             	add    esi,DWORD PTR [rcx+0xc]
    5b57:	00 00                	add    BYTE PTR [rax],al
    5b59:	c5 21 00             	(bad)
    5b5c:	00 2f                	add    BYTE PTR [rdi],ch
    5b5e:	04 00                	add    al,0x0
    5b60:	00 01                	add    BYTE PTR [rcx],al
    5b62:	c5 21 00             	(bad)
    5b65:	00 00                	add    BYTE PTR [rax],al
    5b67:	04 7f                	add    al,0x7f
    5b69:	17                   	(bad)
    5b6a:	00 00                	add    BYTE PTR [rax],al
    5b6c:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    5b6f:	03 7d 0c             	add    edi,DWORD PTR [rbp+0xc]
    5b72:	00 00                	add    BYTE PTR [rax],al
    5b74:	35 00 00 00 4a       	xor    eax,0x4a000000
    5b79:	04 00                	add    al,0x0
    5b7b:	00 01                	add    BYTE PTR [rcx],al
    5b7d:	35 00 00 00 00       	xor    eax,0x0
    5b82:	04 86                	add    al,0x86
    5b84:	14 00                	adc    al,0x0
    5b86:	00 03                	add    BYTE PTR [rbx],al
    5b88:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b89:	01 03                	add    DWORD PTR [rbx],eax
    5b8b:	75 15                	jne    5ba2 <__FRAME_END__+0xd8a>
    5b8d:	00 00                	add    BYTE PTR [rax],al
    5b8f:	c5 21 00             	(bad)
    5b92:	00 6a 04             	add    BYTE PTR [rdx+0x4],ch
    5b95:	00 00                	add    BYTE PTR [rax],al
    5b97:	01 c5                	add    ebp,eax
    5b99:	21 00                	and    DWORD PTR [rax],eax
    5b9b:	00 01                	add    BYTE PTR [rcx],al
    5b9d:	ff 25 00 00 00 04    	jmp    QWORD PTR [rip+0x4000000]        # 4005ba3 <_end+0x3fffb8b>
    5ba3:	86 14 00             	xchg   BYTE PTR [rax+rax*1],dl
    5ba6:	00 03                	add    BYTE PTR [rbx],al
    5ba8:	68 01 03 dc 1d       	push   0x1ddc0301
    5bad:	00 00                	add    BYTE PTR [rax],al
    5baf:	35 00 00 00 8a       	xor    eax,0x8a000000
    5bb4:	04 00                	add    al,0x0
    5bb6:	00 01                	add    BYTE PTR [rcx],al
    5bb8:	35 00 00 00 01       	xor    eax,0x1000000
    5bbd:	0c 26                	or     al,0x26
    5bbf:	00 00                	add    BYTE PTR [rax],al
    5bc1:	00 1d 70 6f 77 00    	add    BYTE PTR [rip+0x776f70],bl        # 77cb37 <_end+0x776b1f>
    5bc7:	78 01                	js     5bca <__FRAME_END__+0xdb2>
    5bc9:	3c 30                	cmp    al,0x30
    5bcb:	00 00                	add    BYTE PTR [rax],al
    5bcd:	c5 21 00             	(bad)
    5bd0:	00 a8 04 00 00 01    	add    BYTE PTR [rax+0x1000004],ch
    5bd6:	c5 21 00             	(bad)
    5bd9:	00 01                	add    BYTE PTR [rcx],al
    5bdb:	c5 21 00             	(bad)
    5bde:	00 00                	add    BYTE PTR [rax],al
    5be0:	1d 70 6f 77 00       	sbb    eax,0x776f70
    5be5:	74 01                	je     5be8 <__FRAME_END__+0xdd0>
    5be7:	4d 31 00             	xor    QWORD PTR [r8],r8
    5bea:	00 35 00 00 00 c6    	add    BYTE PTR [rip+0xffffffffc6000000],dh        # ffffffffc6005bf0 <_end+0xffffffffc5fffbd8>
    5bf0:	04 00                	add    al,0x0
    5bf2:	00 01                	add    BYTE PTR [rcx],al
    5bf4:	35 00 00 00 01       	xor    eax,0x1000000
    5bf9:	35 00 00 00 00       	xor    eax,0x0
    5bfe:	04 ef                	add    al,0xef
    5c00:	0d 00 00 03 ba       	or     eax,0xba030000
    5c05:	01 03                	add    DWORD PTR [rbx],eax
    5c07:	7c 22                	jl     5c2b <__FRAME_END__+0xe13>
    5c09:	00 00                	add    BYTE PTR [rax],al
    5c0b:	c5 21 00             	(bad)
    5c0e:	00 e1                	add    cl,ah
    5c10:	04 00                	add    al,0x0
    5c12:	00 01                	add    BYTE PTR [rcx],al
    5c14:	c5 21 00             	(bad)
    5c17:	00 00                	add    BYTE PTR [rax],al
    5c19:	04 ef                	add    al,0xef
    5c1b:	0d 00 00 03 b6       	or     eax,0xb6030000
    5c20:	01 03                	add    DWORD PTR [rbx],eax
    5c22:	87 22                	xchg   DWORD PTR [rdx],esp
    5c24:	00 00                	add    BYTE PTR [rax],al
    5c26:	35 00 00 00 fc       	xor    eax,0xfc000000
    5c2b:	04 00                	add    al,0x0
    5c2d:	00 01                	add    BYTE PTR [rcx],al
    5c2f:	35 00 00 00 00       	xor    eax,0x0
    5c34:	0f 0b                	ud2
    5c36:	32 00                	xor    al,BYTE PTR [rax]
    5c38:	00 03                	add    BYTE PTR [rbx],al
    5c3a:	a2 03 87 2b 00 00 c5 	movabs ds:0x21c500002b8703,al
    5c41:	21 00 
    5c43:	00 16                	add    BYTE PTR [rsi],dl
    5c45:	05 00 00 01 c5       	add    eax,0xc5010000
    5c4a:	21 00                	and    DWORD PTR [rax],eax
    5c4c:	00 00                	add    BYTE PTR [rax],al
    5c4e:	0f 0b                	ud2
    5c50:	32 00                	xor    al,BYTE PTR [rax]
    5c52:	00 03                	add    BYTE PTR [rbx],al
    5c54:	9e                   	sahf
    5c55:	03 92 2b 00 00 35    	add    edx,DWORD PTR [rdx+0x3500002b]
    5c5b:	00 00                	add    BYTE PTR [rax],al
    5c5d:	00 30                	add    BYTE PTR [rax],dh
    5c5f:	05 00 00 01 35       	add    eax,0x35010000
    5c64:	00 00                	add    BYTE PTR [rax],al
    5c66:	00 00                	add    BYTE PTR [rax],al
    5c68:	0f d8 1c 00          	psubusb mm3,QWORD PTR [rax+rax*1]
    5c6c:	00 03                	add    BYTE PTR [rbx],al
    5c6e:	ee                   	out    dx,al
    5c6f:	03 7a 33             	add    edi,DWORD PTR [rdx+0x33]
    5c72:	00 00                	add    BYTE PTR [rax],al
    5c74:	c5 21 00             	(bad)
    5c77:	00 4a 05             	add    BYTE PTR [rdx+0x5],cl
    5c7a:	00 00                	add    BYTE PTR [rax],al
    5c7c:	01 c5                	add    ebp,eax
    5c7e:	21 00                	and    DWORD PTR [rax],eax
    5c80:	00 00                	add    BYTE PTR [rax],al
    5c82:	0f d8 1c 00          	psubusb mm3,QWORD PTR [rax+rax*1]
    5c86:	00 03                	add    BYTE PTR [rbx],al
    5c88:	ea                   	(bad)
    5c89:	03 1c 14             	add    ebx,DWORD PTR [rsp+rdx*1]
    5c8c:	00 00                	add    BYTE PTR [rax],al
    5c8e:	35 00 00 00 64       	xor    eax,0x64000000
    5c93:	05 00 00 01 35       	add    eax,0x35010000
    5c98:	00 00                	add    BYTE PTR [rax],al
    5c9a:	00 00                	add    BYTE PTR [rax],al
    5c9c:	04 dd                	add    al,0xdd
    5c9e:	1b 00                	sbb    eax,DWORD PTR [rax]
    5ca0:	00 03                	add    BYTE PTR [rbx],al
    5ca2:	01 01                	add    DWORD PTR [rcx],eax
    5ca4:	03 3d 2f 00 00 c5    	add    edi,DWORD PTR [rip+0xffffffffc500002f]        # ffffffffc5005cd9 <_end+0xffffffffc4fffcc1>
    5caa:	21 00                	and    DWORD PTR [rax],eax
    5cac:	00 7f 05             	add    BYTE PTR [rdi+0x5],bh
    5caf:	00 00                	add    BYTE PTR [rax],al
    5cb1:	01 c5                	add    ebp,eax
    5cb3:	21 00                	and    DWORD PTR [rax],eax
    5cb5:	00 00                	add    BYTE PTR [rax],al
    5cb7:	0f dd 1b             	paddusw mm3,QWORD PTR [rbx]
    5cba:	00 00                	add    BYTE PTR [rax],al
    5cbc:	03 fd                	add    edi,ebp
    5cbe:	03 49 2f             	add    ecx,DWORD PTR [rcx+0x2f]
    5cc1:	00 00                	add    BYTE PTR [rax],al
    5cc3:	35 00 00 00 99       	xor    eax,0x99000000
    5cc8:	05 00 00 01 35       	add    eax,0x35010000
    5ccd:	00 00                	add    BYTE PTR [rax],al
    5ccf:	00 00                	add    BYTE PTR [rax],al
    5cd1:	04 3b                	add    al,0x3b
    5cd3:	16                   	(bad)
    5cd4:	00 00                	add    BYTE PTR [rax],al
    5cd6:	03 14 01             	add    edx,DWORD PTR [rcx+rax*1]
    5cd9:	03 97 0b 00 00 c5    	add    edx,DWORD PTR [rdi-0x3afffff5]
    5cdf:	21 00                	and    DWORD PTR [rax],eax
    5ce1:	00 b9 05 00 00 01    	add    BYTE PTR [rcx+0x1000005],bh
    5ce7:	c5 21 00             	(bad)
    5cea:	00 01                	add    BYTE PTR [rcx],al
    5cec:	c5 21 00             	(bad)
    5cef:	00 00                	add    BYTE PTR [rax],al
    5cf1:	04 3b                	add    al,0x3b
    5cf3:	16                   	(bad)
    5cf4:	00 00                	add    BYTE PTR [rax],al
    5cf6:	03 10                	add    edx,DWORD PTR [rax]
    5cf8:	01 03                	add    DWORD PTR [rbx],eax
    5cfa:	38 21                	cmp    BYTE PTR [rcx],ah
    5cfc:	00 00                	add    BYTE PTR [rax],al
    5cfe:	35 00 00 00 d9       	xor    eax,0xd9000000
    5d03:	05 00 00 01 35       	add    eax,0x35010000
    5d08:	00 00                	add    BYTE PTR [rax],al
    5d0a:	00 01                	add    BYTE PTR [rcx],al
    5d0c:	35 00 00 00 00       	xor    eax,0x0
    5d11:	04 0f                	add    al,0xf
    5d13:	15 00 00 03 53       	adc    eax,0x53030000
    5d18:	04 03                	add    al,0x3
    5d1a:	9d                   	popf
    5d1b:	14 00                	adc    al,0x0
    5d1d:	00 a6 21 00 00 f4    	add    BYTE PTR [rsi-0xbffffdf],ah
    5d23:	05 00 00 01 c5       	add    eax,0xc5010000
    5d28:	21 00                	and    DWORD PTR [rax],eax
    5d2a:	00 00                	add    BYTE PTR [rax],al
    5d2c:	04 0f                	add    al,0xf
    5d2e:	15 00 00 03 4e       	adc    eax,0x4e030000
    5d33:	04 03                	add    al,0x3
    5d35:	8b 14 00             	mov    edx,DWORD PTR [rax+rax*1]
    5d38:	00 a6 21 00 00 0f    	add    BYTE PTR [rsi+0xf000021],ah
    5d3e:	06                   	(bad)
    5d3f:	00 00                	add    BYTE PTR [rax],al
    5d41:	01 2e                	add    DWORD PTR [rsi],ebp
    5d43:	00 00                	add    BYTE PTR [rax],al
    5d45:	00 00                	add    BYTE PTR [rax],al
    5d47:	04 0f                	add    al,0xf
    5d49:	15 00 00 03 49       	adc    eax,0x49030000
    5d4e:	04 03                	add    al,0x3
    5d50:	af                   	scas   eax,DWORD PTR es:[rdi]
    5d51:	14 00                	adc    al,0x0
    5d53:	00 a6 21 00 00 2a    	add    BYTE PTR [rsi+0x2a000021],ah
    5d59:	06                   	(bad)
    5d5a:	00 00                	add    BYTE PTR [rax],al
    5d5c:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5d62 <_DYNAMIC+0x82>
    5d62:	04 32                	add    al,0x32
    5d64:	2e 00 00             	cs add BYTE PTR [rax],al
    5d67:	03 6a 04             	add    ebp,DWORD PTR [rdx+0x4]
    5d6a:	03 6f 26             	add    ebp,DWORD PTR [rdi+0x26]
    5d6d:	00 00                	add    BYTE PTR [rax],al
    5d6f:	ea                   	(bad)
    5d70:	20 00                	and    BYTE PTR [rax],al
    5d72:	00 45 06             	add    BYTE PTR [rbp+0x6],al
    5d75:	00 00                	add    BYTE PTR [rax],al
    5d77:	01 c5                	add    ebp,eax
    5d79:	21 00                	and    DWORD PTR [rax],eax
    5d7b:	00 00                	add    BYTE PTR [rax],al
    5d7d:	04 32                	add    al,0x32
    5d7f:	2e 00 00             	cs add BYTE PTR [rax],al
    5d82:	03 66 04             	add    esp,DWORD PTR [rsi+0x4]
    5d85:	03 6c 27 00          	add    ebp,DWORD PTR [rdi+riz*1+0x0]
    5d89:	00 ea                	add    dl,ch
    5d8b:	20 00                	and    BYTE PTR [rax],al
    5d8d:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    5d90:	00 00                	add    BYTE PTR [rax],al
    5d92:	01 2e                	add    DWORD PTR [rsi],ebp
    5d94:	00 00                	add    BYTE PTR [rax],al
    5d96:	00 00                	add    BYTE PTR [rax],al
    5d98:	04 32                	add    al,0x32
    5d9a:	2e 00 00             	cs add BYTE PTR [rax],al
    5d9d:	03 62 04             	add    esp,DWORD PTR [rdx+0x4]
    5da0:	03 8d 27 00 00 ea    	add    ecx,DWORD PTR [rbp-0x15ffffd9]
    5da6:	20 00                	and    BYTE PTR [rax],al
    5da8:	00 7b 06             	add    BYTE PTR [rbx+0x6],bh
    5dab:	00 00                	add    BYTE PTR [rax],al
    5dad:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5db3 <_DYNAMIC+0xd3>
    5db3:	04 09                	add    al,0x9
    5db5:	15 00 00 03 85       	adc    eax,0x85030000
    5dba:	04 03                	add    al,0x3
    5dbc:	60                   	(bad)
    5dbd:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5dc2:	00 00                	add    BYTE PTR [rax],al
    5dc4:	96                   	xchg   esi,eax
    5dc5:	06                   	(bad)
    5dc6:	00 00                	add    BYTE PTR [rax],al
    5dc8:	01 c5                	add    ebp,eax
    5dca:	21 00                	and    DWORD PTR [rax],eax
    5dcc:	00 00                	add    BYTE PTR [rax],al
    5dce:	04 09                	add    al,0x9
    5dd0:	15 00 00 03 80       	adc    eax,0x80030000
    5dd5:	04 03                	add    al,0x3
    5dd7:	54                   	push   rsp
    5dd8:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    5ddd:	00 00                	add    BYTE PTR [rax],al
    5ddf:	b1 06                	mov    cl,0x6
    5de1:	00 00                	add    BYTE PTR [rax],al
    5de3:	01 2e                	add    DWORD PTR [rsi],ebp
    5de5:	00 00                	add    BYTE PTR [rax],al
    5de7:	00 00                	add    BYTE PTR [rax],al
    5de9:	04 09                	add    al,0x9
    5deb:	15 00 00 03 78       	adc    eax,0x78030000
    5df0:	04 03                	add    al,0x3
    5df2:	39 18                	cmp    DWORD PTR [rax],ebx
    5df4:	00 00                	add    BYTE PTR [rax],al
    5df6:	ea                   	(bad)
    5df7:	20 00                	and    BYTE PTR [rax],al
    5df9:	00 cc                	add    ah,cl
    5dfb:	06                   	(bad)
    5dfc:	00 00                	add    BYTE PTR [rax],al
    5dfe:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5e04 <_DYNAMIC+0x124>
    5e04:	04 a6                	add    al,0xa6
    5e06:	1c 00                	sbb    al,0x0
    5e08:	00 03                	add    BYTE PTR [rbx],al
    5e0a:	a0 04 03 21 20 00 00 	movabs al,ds:0x20ea000020210304
    5e11:	ea 20 
    5e13:	00 00                	add    BYTE PTR [rax],al
    5e15:	e7 06                	out    0x6,eax
    5e17:	00 00                	add    BYTE PTR [rax],al
    5e19:	01 c5                	add    ebp,eax
    5e1b:	21 00                	and    DWORD PTR [rax],eax
    5e1d:	00 00                	add    BYTE PTR [rax],al
    5e1f:	04 a6                	add    al,0xa6
    5e21:	1c 00                	sbb    al,0x0
    5e23:	00 03                	add    BYTE PTR [rbx],al
    5e25:	9b                   	fwait
    5e26:	04 03                	add    al,0x3
    5e28:	15 20 00 00 ea       	adc    eax,0xea000020
    5e2d:	20 00                	and    BYTE PTR [rax],al
    5e2f:	00 02                	add    BYTE PTR [rdx],al
    5e31:	07                   	(bad)
    5e32:	00 00                	add    BYTE PTR [rax],al
    5e34:	01 2e                	add    DWORD PTR [rsi],ebp
    5e36:	00 00                	add    BYTE PTR [rax],al
    5e38:	00 00                	add    BYTE PTR [rax],al
    5e3a:	04 a6                	add    al,0xa6
    5e3c:	1c 00                	sbb    al,0x0
    5e3e:	00 03                	add    BYTE PTR [rbx],al
    5e40:	93                   	xchg   ebx,eax
    5e41:	04 03                	add    al,0x3
    5e43:	2d 20 00 00 ea       	sub    eax,0xea000020
    5e48:	20 00                	and    BYTE PTR [rax],al
    5e4a:	00 1d 07 00 00 01    	add    BYTE PTR [rip+0x1000007],bl        # 1005e57 <_end+0xfffe3f>
    5e50:	35 00 00 00 00       	xor    eax,0x0
    5e55:	04 9c                	add    al,0x9c
    5e57:	34 00                	xor    al,0x0
    5e59:	00 03                	add    BYTE PTR [rbx],al
    5e5b:	b6 04                	mov    dh,0x4
    5e5d:	03 cf                	add    ecx,edi
    5e5f:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5e64:	00 00                	add    BYTE PTR [rax],al
    5e66:	38 07                	cmp    BYTE PTR [rdi],al
    5e68:	00 00                	add    BYTE PTR [rax],al
    5e6a:	01 c5                	add    ebp,eax
    5e6c:	21 00                	and    DWORD PTR [rax],eax
    5e6e:	00 00                	add    BYTE PTR [rax],al
    5e70:	04 9c                	add    al,0x9c
    5e72:	34 00                	xor    al,0x0
    5e74:	00 03                	add    BYTE PTR [rbx],al
    5e76:	b2 04                	mov    dl,0x4
    5e78:	03 c0                	add    eax,eax
    5e7a:	15 00 00 ea 20       	adc    eax,0x20ea0000
    5e7f:	00 00                	add    BYTE PTR [rax],al
    5e81:	53                   	push   rbx
    5e82:	07                   	(bad)
    5e83:	00 00                	add    BYTE PTR [rax],al
    5e85:	01 2e                	add    DWORD PTR [rsi],ebp
    5e87:	00 00                	add    BYTE PTR [rax],al
    5e89:	00 00                	add    BYTE PTR [rax],al
    5e8b:	04 9c                	add    al,0x9c
    5e8d:	34 00                	xor    al,0x0
    5e8f:	00 03                	add    BYTE PTR [rbx],al
    5e91:	ae                   	scas   al,BYTE PTR es:[rdi]
    5e92:	04 03                	add    al,0x3
    5e94:	de 15 00 00 ea 20    	ficom  WORD PTR [rip+0x20ea0000]        # 20ea5e9a <_end+0x20e9fe82>
    5e9a:	00 00                	add    BYTE PTR [rax],al
    5e9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5e9d:	07                   	(bad)
    5e9e:	00 00                	add    BYTE PTR [rax],al
    5ea0:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 5ea6 <_DYNAMIC+0x1c6>
    5ea6:	04 3d                	add    al,0x3d
    5ea8:	33 00                	xor    eax,DWORD PTR [rax]
    5eaa:	00 03                	add    BYTE PTR [rbx],al
    5eac:	cd 04                	int    0x4
    5eae:	03 cf                	add    ecx,edi
    5eb0:	24 00                	and    al,0x0
    5eb2:	00 ea                	add    dl,ch
    5eb4:	20 00                	and    BYTE PTR [rax],al
    5eb6:	00 89 07 00 00 01    	add    BYTE PTR [rcx+0x1000007],cl
    5ebc:	c5 21 00             	(bad)
    5ebf:	00 00                	add    BYTE PTR [rax],al
    5ec1:	04 3d                	add    al,0x3d
    5ec3:	33 00                	xor    eax,DWORD PTR [rax]
    5ec5:	00 03                	add    BYTE PTR [rbx],al
    5ec7:	c9                   	leave
    5ec8:	04 03                	add    al,0x3
    5eca:	ef                   	out    dx,eax
    5ecb:	0b 00                	or     eax,DWORD PTR [rax]
    5ecd:	00 ea                	add    dl,ch
    5ecf:	20 00                	and    BYTE PTR [rax],al
    5ed1:	00 a4 07 00 00 01 2e 	add    BYTE PTR [rdi+rax*1+0x2e010000],ah
    5ed8:	00 00                	add    BYTE PTR [rax],al
    5eda:	00 00                	add    BYTE PTR [rax],al
    5edc:	04 3d                	add    al,0x3d
    5ede:	33 00                	xor    eax,DWORD PTR [rax]
    5ee0:	00 03                	add    BYTE PTR [rbx],al
    5ee2:	c5 04 03             	(bad)
    5ee5:	fd                   	std
    5ee6:	0b 00                	or     eax,DWORD PTR [rax]
    5ee8:	00 ea                	add    dl,ch
    5eea:	20 00                	and    BYTE PTR [rax],al
    5eec:	00 bf 07 00 00 01    	add    BYTE PTR [rdi+0x1000007],bh
    5ef2:	35 00 00 00 00       	xor    eax,0x0
    5ef7:	04 f9                	add    al,0xf9
    5ef9:	18 00                	sbb    BYTE PTR [rax],al
    5efb:	00 03                	add    BYTE PTR [rbx],al
    5efd:	e3 04                	jrcxz  5f03 <_GLOBAL_OFFSET_TABLE_+0x13>
    5eff:	03 0c 1d 00 00 ea 20 	add    ecx,DWORD PTR [rbx*1+0x20ea0000]
    5f06:	00 00                	add    BYTE PTR [rax],al
    5f08:	df 07                	fild   WORD PTR [rdi]
    5f0a:	00 00                	add    BYTE PTR [rax],al
    5f0c:	01 c5                	add    ebp,eax
    5f0e:	21 00                	and    DWORD PTR [rax],eax
    5f10:	00 01                	add    BYTE PTR [rcx],al
    5f12:	c5 21 00             	(bad)
    5f15:	00 00                	add    BYTE PTR [rax],al
    5f17:	04 f9                	add    al,0xf9
    5f19:	18 00                	sbb    BYTE PTR [rax],al
    5f1b:	00 03                	add    BYTE PTR [rbx],al
    5f1d:	df 04 03             	fild   WORD PTR [rbx+rax*1]
    5f20:	bd 1b 00 00 ea       	mov    ebp,0xea00001b
    5f25:	20 00                	and    BYTE PTR [rax],al
    5f27:	00 ff                	add    bh,bh
    5f29:	07                   	(bad)
    5f2a:	00 00                	add    BYTE PTR [rax],al
    5f2c:	01 2e                	add    DWORD PTR [rsi],ebp
    5f2e:	00 00                	add    BYTE PTR [rax],al
    5f30:	00 01                	add    BYTE PTR [rcx],al
    5f32:	2e 00 00             	cs add BYTE PTR [rax],al
    5f35:	00 00                	add    BYTE PTR [rax],al
    5f37:	04 f9                	add    al,0xf9
    5f39:	18 00                	sbb    BYTE PTR [rax],al
    5f3b:	00 03                	add    BYTE PTR [rbx],al
    5f3d:	db 04 03             	fild   DWORD PTR [rbx+rax*1]
    5f40:	5d                   	pop    rbp
    5f41:	29 00                	sub    DWORD PTR [rax],eax
    5f43:	00 ea                	add    dl,ch
    5f45:	20 00                	and    BYTE PTR [rax],al
    5f47:	00 1f                	add    BYTE PTR [rdi],bl
    5f49:	08 00                	or     BYTE PTR [rax],al
    5f4b:	00 01                	add    BYTE PTR [rcx],al
    5f4d:	35 00 00 00 01       	xor    eax,0x1000000
    5f52:	35 00 00 00 00       	xor    eax,0x0
    5f57:	04 e9                	add    al,0xe9
    5f59:	1d 00 00 03 fd       	sbb    eax,0xfd030000
    5f5e:	04 03                	add    al,0x3
    5f60:	26 2f                	es (bad)
    5f62:	00 00                	add    BYTE PTR [rax],al
    5f64:	ea                   	(bad)
    5f65:	20 00                	and    BYTE PTR [rax],al
    5f67:	00 3f                	add    BYTE PTR [rdi],bh
    5f69:	08 00                	or     BYTE PTR [rax],al
    5f6b:	00 01                	add    BYTE PTR [rcx],al
    5f6d:	c5 21 00             	(bad)
    5f70:	00 01                	add    BYTE PTR [rcx],al
    5f72:	c5 21 00             	(bad)
    5f75:	00 00                	add    BYTE PTR [rax],al
    5f77:	04 e9                	add    al,0xe9
    5f79:	1d 00 00 03 f9       	sbb    eax,0xf9030000
    5f7e:	04 03                	add    al,0x3
    5f80:	f7 2d 00 00 ea 20    	imul   DWORD PTR [rip+0x20ea0000]        # 20ea5f86 <_end+0x20e9ff6e>
    5f86:	00 00                	add    BYTE PTR [rax],al
    5f88:	5f                   	pop    rdi
    5f89:	08 00                	or     BYTE PTR [rax],al
    5f8b:	00 01                	add    BYTE PTR [rcx],al
    5f8d:	2e 00 00             	cs add BYTE PTR [rax],al
    5f90:	00 01                	add    BYTE PTR [rcx],al
    5f92:	2e 00 00             	cs add BYTE PTR [rax],al
    5f95:	00 00                	add    BYTE PTR [rax],al
    5f97:	04 e9                	add    al,0xe9
    5f99:	1d 00 00 03 f5       	sbb    eax,0xf5030000
    5f9e:	04 03                	add    al,0x3
    5fa0:	61                   	(bad)
    5fa1:	30 00                	xor    BYTE PTR [rax],al
    5fa3:	00 ea                	add    dl,ch
    5fa5:	20 00                	and    BYTE PTR [rax],al
    5fa7:	00 7f 08             	add    BYTE PTR [rdi+0x8],bh
    5faa:	00 00                	add    BYTE PTR [rax],al
    5fac:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1005fb2 <_end+0xffff9a>
    5fb2:	35 00 00 00 00       	xor    eax,0x0
    5fb7:	04 62                	add    al,0x62
    5fb9:	31 00                	xor    DWORD PTR [rax],eax
    5fbb:	00 03                	add    BYTE PTR [rbx],al
    5fbd:	17                   	(bad)
    5fbe:	05 03 87 2e 00       	add    eax,0x2e8703
    5fc3:	00 ea                	add    dl,ch
    5fc5:	20 00                	and    BYTE PTR [rax],al
    5fc7:	00 9f 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bl
    5fcd:	c5 21 00             	(bad)
    5fd0:	00 01                	add    BYTE PTR [rcx],al
    5fd2:	c5 21 00             	(bad)
    5fd5:	00 00                	add    BYTE PTR [rax],al
    5fd7:	04 62                	add    al,0x62
    5fd9:	31 00                	xor    DWORD PTR [rax],eax
    5fdb:	00 03                	add    BYTE PTR [rbx],al
    5fdd:	13 05 03 46 2d 00    	adc    eax,DWORD PTR [rip+0x2d4603]        # 2da5e6 <_end+0x2d45ce>
    5fe3:	00 ea                	add    dl,ch
    5fe5:	20 00                	and    BYTE PTR [rax],al
    5fe7:	00 bf 08 00 00 01    	add    BYTE PTR [rdi+0x1000008],bh
    5fed:	2e 00 00             	cs add BYTE PTR [rax],al
    5ff0:	00 01                	add    BYTE PTR [rcx],al
    5ff2:	2e 00 00             	cs add BYTE PTR [rax],al
    5ff5:	00 00                	add    BYTE PTR [rax],al
    5ff7:	04 62                	add    al,0x62
    5ff9:	31 00                	xor    DWORD PTR [rax],eax
    5ffb:	00 03                	add    BYTE PTR [rbx],al
    5ffd:	0f 05                	syscall
    5fff:	03 27                	add    esp,DWORD PTR [rdi]
    6001:	2d 00 00 ea 20       	sub    eax,0x20ea0000
    6006:	00 00                	add    BYTE PTR [rax],al
    6008:	df 08                	fisttp WORD PTR [rax]
    600a:	00 00                	add    BYTE PTR [rax],al
    600c:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 1006012 <_end+0xfffffa>
    6012:	35 00 00 00 00       	xor    eax,0x0
    6017:	04 b4                	add    al,0xb4
    6019:	15 00 00 03 31       	adc    eax,0x31030000
    601e:	05 03 cf 26 00       	add    eax,0x26cf03
    6023:	00 ea                	add    dl,ch
    6025:	20 00                	and    BYTE PTR [rax],al
    6027:	00 ff                	add    bh,bh
    6029:	08 00                	or     BYTE PTR [rax],al
    602b:	00 01                	add    BYTE PTR [rcx],al
    602d:	c5 21 00             	(bad)
    6030:	00 01                	add    BYTE PTR [rcx],al
    6032:	c5 21 00             	(bad)
    6035:	00 00                	add    BYTE PTR [rax],al
    6037:	04 b4                	add    al,0xb4
    6039:	15 00 00 03 2d       	adc    eax,0x2d030000
    603e:	05 03 08 14 00       	add    eax,0x140803
    6043:	00 ea                	add    dl,ch
    6045:	20 00                	and    BYTE PTR [rax],al
    6047:	00 1f                	add    BYTE PTR [rdi],bl
    6049:	09 00                	or     DWORD PTR [rax],eax
    604b:	00 01                	add    BYTE PTR [rcx],al
    604d:	2e 00 00             	cs add BYTE PTR [rax],al
    6050:	00 01                	add    BYTE PTR [rcx],al
    6052:	2e 00 00             	cs add BYTE PTR [rax],al
    6055:	00 00                	add    BYTE PTR [rax],al
    6057:	04 b4                	add    al,0xb4
    6059:	15 00 00 03 29       	adc    eax,0x29030000
    605e:	05 03 ed 28 00       	add    eax,0x28ed03
    6063:	00 ea                	add    dl,ch
    6065:	20 00                	and    BYTE PTR [rax],al
    6067:	00 3f                	add    BYTE PTR [rdi],bh
    6069:	09 00                	or     DWORD PTR [rax],eax
    606b:	00 01                	add    BYTE PTR [rcx],al
    606d:	35 00 00 00 01       	xor    eax,0x1000000
    6072:	35 00 00 00 00       	xor    eax,0x0
    6077:	04 57                	add    al,0x57
    6079:	18 00                	sbb    BYTE PTR [rax],al
    607b:	00 03                	add    BYTE PTR [rbx],al
    607d:	4b 05 03 4e 1b 00    	rex.WXB add rax,0x1b4e03
    6083:	00 ea                	add    dl,ch
    6085:	20 00                	and    BYTE PTR [rax],al
    6087:	00 5f 09             	add    BYTE PTR [rdi+0x9],bl
    608a:	00 00                	add    BYTE PTR [rax],al
    608c:	01 c5                	add    ebp,eax
    608e:	21 00                	and    DWORD PTR [rax],eax
    6090:	00 01                	add    BYTE PTR [rcx],al
    6092:	c5 21 00             	(bad)
    6095:	00 00                	add    BYTE PTR [rax],al
    6097:	04 57                	add    al,0x57
    6099:	18 00                	sbb    BYTE PTR [rax],al
    609b:	00 03                	add    BYTE PTR [rbx],al
    609d:	47 05 03 5a 19 00    	rex.RXB add eax,0x195a03
    60a3:	00 ea                	add    dl,ch
    60a5:	20 00                	and    BYTE PTR [rax],al
    60a7:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    60aa:	00 00                	add    BYTE PTR [rax],al
    60ac:	01 2e                	add    DWORD PTR [rsi],ebp
    60ae:	00 00                	add    BYTE PTR [rax],al
    60b0:	00 01                	add    BYTE PTR [rcx],al
    60b2:	2e 00 00             	cs add BYTE PTR [rax],al
    60b5:	00 00                	add    BYTE PTR [rax],al
    60b7:	04 57                	add    al,0x57
    60b9:	18 00                	sbb    BYTE PTR [rax],al
    60bb:	00 03                	add    BYTE PTR [rbx],al
    60bd:	43 05 03 b4 1c 00    	rex.XB add eax,0x1cb403
    60c3:	00 ea                	add    dl,ch
    60c5:	20 00                	and    BYTE PTR [rax],al
    60c7:	00 9f 09 00 00 01    	add    BYTE PTR [rdi+0x1000009],bl
    60cd:	35 00 00 00 01       	xor    eax,0x1000000
    60d2:	35 00 00 00 00       	xor    eax,0x0
    60d7:	04 49                	add    al,0x49
    60d9:	0f 00 00             	sldt   WORD PTR [rax]
    60dc:	03 65 05             	add    esp,DWORD PTR [rbp+0x5]
    60df:	03 9c 27 00 00 ea 20 	add    ebx,DWORD PTR [rdi+riz*1+0x20ea0000]
    60e6:	00 00                	add    BYTE PTR [rax],al
    60e8:	bf 09 00 00 01       	mov    edi,0x1000009
    60ed:	c5 21 00             	(bad)
    60f0:	00 01                	add    BYTE PTR [rcx],al
    60f2:	c5 21 00             	(bad)
    60f5:	00 00                	add    BYTE PTR [rax],al
    60f7:	04 49                	add    al,0x49
    60f9:	0f 00 00             	sldt   WORD PTR [rax]
    60fc:	03 61 05             	add    esp,DWORD PTR [rcx+0x5]
    60ff:	03 da                	add    ebx,edx
    6101:	10 00                	adc    BYTE PTR [rax],al
    6103:	00 ea                	add    dl,ch
    6105:	20 00                	and    BYTE PTR [rax],al
    6107:	00 df                	add    bh,bl
    6109:	09 00                	or     DWORD PTR [rax],eax
    610b:	00 01                	add    BYTE PTR [rcx],al
    610d:	2e 00 00             	cs add BYTE PTR [rax],al
    6110:	00 01                	add    BYTE PTR [rcx],al
    6112:	2e 00 00             	cs add BYTE PTR [rax],al
    6115:	00 00                	add    BYTE PTR [rax],al
    6117:	04 49                	add    al,0x49
    6119:	0f 00 00             	sldt   WORD PTR [rax]
    611c:	03 5d 05             	add    ebx,DWORD PTR [rbp+0x5]
    611f:	03 df                	add    ebx,edi
    6121:	2a 00                	sub    al,BYTE PTR [rax]
    6123:	00 ea                	add    dl,ch
    6125:	20 00                	and    BYTE PTR [rax],al
    6127:	00 ff                	add    bh,bh
    6129:	09 00                	or     DWORD PTR [rax],eax
    612b:	00 01                	add    BYTE PTR [rcx],al
    612d:	35 00 00 00 01       	xor    eax,0x1000000
    6132:	35 00 00 00 00       	xor    eax,0x0
    6137:	04 1e                	add    al,0x1e
    6139:	2a 00                	sub    al,BYTE PTR [rax]
    613b:	00 03                	add    BYTE PTR [rbx],al
    613d:	f2 07                	repnz (bad)
    613f:	03 dd                	add    ebx,ebp
    6141:	34 00                	xor    al,0x0
    6143:	00 c5                	add    ch,al
    6145:	21 00                	and    DWORD PTR [rax],eax
    6147:	00 1a                	add    BYTE PTR [rdx],bl
    6149:	0a 00                	or     al,BYTE PTR [rax]
    614b:	00 01                	add    BYTE PTR [rcx],al
    614d:	c5 21 00             	(bad)
    6150:	00 00                	add    BYTE PTR [rax],al
    6152:	04 1e                	add    al,0x1e
    6154:	2a 00                	sub    al,BYTE PTR [rax]
    6156:	00 03                	add    BYTE PTR [rbx],al
    6158:	ee                   	out    dx,al
    6159:	07                   	(bad)
    615a:	03 e9                	add    ebp,ecx
    615c:	34 00                	xor    al,0x0
    615e:	00 35 00 00 00 35    	add    BYTE PTR [rip+0x35000000],dh        # 35006164 <_end+0x3500014c>
    6164:	0a 00                	or     al,BYTE PTR [rax]
    6166:	00 01                	add    BYTE PTR [rcx],al
    6168:	35 00 00 00 00       	xor    eax,0x0
    616d:	04 ea                	add    al,0xea
    616f:	1e                   	(bad)
    6170:	00 00                	add    BYTE PTR [rax],al
    6172:	03 04 08             	add    eax,DWORD PTR [rax+rcx*1]
    6175:	03 6c 2d 00          	add    ebp,DWORD PTR [rbp+rbp*1+0x0]
    6179:	00 c5                	add    ch,al
    617b:	21 00                	and    DWORD PTR [rax],eax
    617d:	00 50 0a             	add    BYTE PTR [rax+0xa],dl
    6180:	00 00                	add    BYTE PTR [rax],al
    6182:	01 c5                	add    ebp,eax
    6184:	21 00                	and    DWORD PTR [rax],eax
    6186:	00 00                	add    BYTE PTR [rax],al
    6188:	04 ea                	add    al,0xea
    618a:	1e                   	(bad)
    618b:	00 00                	add    BYTE PTR [rax],al
    618d:	03 00                	add    eax,DWORD PTR [rax]
    618f:	08 03                	or     BYTE PTR [rbx],al
    6191:	78 2d                	js     61c0 <_end+0x1a8>
    6193:	00 00                	add    BYTE PTR [rax],al
    6195:	35 00 00 00 6b       	xor    eax,0x6b000000
    619a:	0a 00                	or     al,BYTE PTR [rax]
    619c:	00 01                	add    BYTE PTR [rcx],al
    619e:	35 00 00 00 00       	xor    eax,0x0
    61a3:	04 1a                	add    al,0x1a
    61a5:	25 00 00 03 16       	and    eax,0x16030000
    61aa:	08 03                	or     BYTE PTR [rbx],al
    61ac:	7c 24                	jl     61d2 <_end+0x1ba>
    61ae:	00 00                	add    BYTE PTR [rax],al
    61b0:	c5 21 00             	(bad)
    61b3:	00 86 0a 00 00 01    	add    BYTE PTR [rsi+0x100000a],al
    61b9:	c5 21 00             	(bad)
    61bc:	00 00                	add    BYTE PTR [rax],al
    61be:	04 1a                	add    al,0x1a
    61c0:	25 00 00 03 12       	and    eax,0x12030000
    61c5:	08 03                	or     BYTE PTR [rbx],al
    61c7:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    61ca:	00 35 00 00 00 a1    	add    BYTE PTR [rip+0xffffffffa1000000],dh        # ffffffffa10061d0 <_end+0xffffffffa10001b8>
    61d0:	0a 00                	or     al,BYTE PTR [rax]
    61d2:	00 01                	add    BYTE PTR [rcx],al
    61d4:	35 00 00 00 00       	xor    eax,0x0
    61d9:	04 ca                	add    al,0xca
    61db:	24 00                	and    al,0x0
    61dd:	00 03                	add    BYTE PTR [rbx],al
    61df:	28 08                	sub    BYTE PTR [rax],cl
    61e1:	03 99 1d 00 00 c5    	add    ebx,DWORD PTR [rcx-0x3affffe3]
    61e7:	21 00                	and    DWORD PTR [rax],eax
    61e9:	00 bc 0a 00 00 01 c5 	add    BYTE PTR [rdx+rcx*1-0x3aff0000],bh
    61f0:	21 00                	and    DWORD PTR [rax],eax
    61f2:	00 00                	add    BYTE PTR [rax],al
    61f4:	04 ca                	add    al,0xca
    61f6:	24 00                	and    al,0x0
    61f8:	00 03                	add    BYTE PTR [rbx],al
    61fa:	24 08                	and    al,0x8
    61fc:	03 a4 1d 00 00 35 00 	add    esp,DWORD PTR [rbp+rbx*1+0x350000]
    6203:	00 00                	add    BYTE PTR [rax],al
    6205:	d7                   	xlat   BYTE PTR ds:[rbx]
    6206:	0a 00                	or     al,BYTE PTR [rax]
    6208:	00 01                	add    BYTE PTR [rcx],al
    620a:	35 00 00 00 00       	xor    eax,0x0
    620f:	04 91                	add    al,0x91
    6211:	15 00 00 03 3a       	adc    eax,0x3a030000
    6216:	08 03                	or     BYTE PTR [rbx],al
    6218:	0c 18                	or     al,0x18
    621a:	00 00                	add    BYTE PTR [rax],al
    621c:	c5 21 00             	(bad)
    621f:	00 f7                	add    bh,dh
    6221:	0a 00                	or     al,BYTE PTR [rax]
    6223:	00 01                	add    BYTE PTR [rcx],al
    6225:	c5 21 00             	(bad)
    6228:	00 01                	add    BYTE PTR [rcx],al
    622a:	c5 21 00             	(bad)
    622d:	00 00                	add    BYTE PTR [rax],al
    622f:	04 91                	add    al,0x91
    6231:	15 00 00 03 36       	adc    eax,0x36030000
    6236:	08 03                	or     BYTE PTR [rbx],al
    6238:	29 18                	sub    DWORD PTR [rax],ebx
    623a:	00 00                	add    BYTE PTR [rax],al
    623c:	35 00 00 00 17       	xor    eax,0x17000000
    6241:	0b 00                	or     eax,DWORD PTR [rax]
    6243:	00 01                	add    BYTE PTR [rcx],al
    6245:	35 00 00 00 01       	xor    eax,0x1000000
    624a:	35 00 00 00 00       	xor    eax,0x0
    624f:	1d 65 72 66 00       	sbb    eax,0x667265
    6254:	44 08 15 2e 00 00 c5 	or     BYTE PTR [rip+0xffffffffc500002e],r10b        # ffffffffc5006289 <_end+0xffffffffc5000271>
    625b:	21 00                	and    DWORD PTR [rax],eax
    625d:	00 30                	add    BYTE PTR [rax],dh
    625f:	0b 00                	or     eax,DWORD PTR [rax]
    6261:	00 01                	add    BYTE PTR [rcx],al
    6263:	c5 21 00             	(bad)
    6266:	00 00                	add    BYTE PTR [rax],al
    6268:	1d 65 72 66 00       	sbb    eax,0x667265
    626d:	40 08 1f             	rex or BYTE PTR [rdi],bl
    6270:	2e 00 00             	cs add BYTE PTR [rax],al
    6273:	35 00 00 00 49       	xor    eax,0x49000000
    6278:	0b 00                	or     eax,DWORD PTR [rax]
    627a:	00 01                	add    BYTE PTR [rcx],al
    627c:	35 00 00 00 00       	xor    eax,0x0
    6281:	04 c1                	add    al,0xc1
    6283:	1e                   	(bad)
    6284:	00 00                	add    BYTE PTR [rax],al
    6286:	03 56 08             	add    edx,DWORD PTR [rsi+0x8]
    6289:	03 23                	add    esp,DWORD PTR [rbx]
    628b:	15 00 00 c5 21       	adc    eax,0x21c50000
    6290:	00 00                	add    BYTE PTR [rax],al
    6292:	64 0b 00             	or     eax,DWORD PTR fs:[rax]
    6295:	00 01                	add    BYTE PTR [rcx],al
    6297:	c5 21 00             	(bad)
    629a:	00 00                	add    BYTE PTR [rax],al
    629c:	04 c1                	add    al,0xc1
    629e:	1e                   	(bad)
    629f:	00 00                	add    BYTE PTR [rax],al
    62a1:	03 52 08             	add    edx,DWORD PTR [rdx+0x8]
    62a4:	03 2e                	add    ebp,DWORD PTR [rsi]
    62a6:	15 00 00 35 00       	adc    eax,0x350000
    62ab:	00 00                	add    BYTE PTR [rax],al
    62ad:	7f 0b                	jg     62ba <_end+0x2a2>
    62af:	00 00                	add    BYTE PTR [rax],al
    62b1:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 62b7 <_end+0x29f>
    62b7:	04 93                	add    al,0x93
    62b9:	33 00                	xor    eax,DWORD PTR [rax]
    62bb:	00 03                	add    BYTE PTR [rbx],al
    62bd:	68 08 03 7e 26       	push   0x267e0308
    62c2:	00 00                	add    BYTE PTR [rax],al
    62c4:	c5 21 00             	(bad)
    62c7:	00 9a 0b 00 00 01    	add    BYTE PTR [rdx+0x100000b],bl
    62cd:	c5 21 00             	(bad)
    62d0:	00 00                	add    BYTE PTR [rax],al
    62d2:	04 93                	add    al,0x93
    62d4:	33 00                	xor    eax,DWORD PTR [rax]
    62d6:	00 03                	add    BYTE PTR [rbx],al
    62d8:	64 08 03             	or     BYTE PTR fs:[rbx],al
    62db:	89 26                	mov    DWORD PTR [rsi],esp
    62dd:	00 00                	add    BYTE PTR [rax],al
    62df:	35 00 00 00 b5       	xor    eax,0xb5000000
    62e4:	0b 00                	or     eax,DWORD PTR [rax]
    62e6:	00 01                	add    BYTE PTR [rcx],al
    62e8:	35 00 00 00 00       	xor    eax,0x0
    62ed:	04 0a                	add    al,0xa
    62ef:	28 00                	sub    BYTE PTR [rax],al
    62f1:	00 03                	add    BYTE PTR [rbx],al
    62f3:	7a 08                	jp     62fd <_end+0x2e5>
    62f5:	03 79 19             	add    edi,DWORD PTR [rcx+0x19]
    62f8:	00 00                	add    BYTE PTR [rax],al
    62fa:	c5 21 00             	(bad)
    62fd:	00 d0                	add    al,dl
    62ff:	0b 00                	or     eax,DWORD PTR [rax]
    6301:	00 01                	add    BYTE PTR [rcx],al
    6303:	c5 21 00             	(bad)
    6306:	00 00                	add    BYTE PTR [rax],al
    6308:	04 0a                	add    al,0xa
    630a:	28 00                	sub    BYTE PTR [rax],al
    630c:	00 03                	add    BYTE PTR [rbx],al
    630e:	76 08                	jbe    6318 <_end+0x300>
    6310:	03 85 19 00 00 35    	add    eax,DWORD PTR [rbp+0x35000019]
    6316:	00 00                	add    BYTE PTR [rax],al
    6318:	00 eb                	add    bl,ch
    631a:	0b 00                	or     eax,DWORD PTR [rax]
    631c:	00 01                	add    BYTE PTR [rcx],al
    631e:	35 00 00 00 00       	xor    eax,0x0
    6323:	04 92                	add    al,0x92
    6325:	0b 00                	or     eax,DWORD PTR [rax]
    6327:	00 03                	add    BYTE PTR [rbx],al
    6329:	8c 08                	mov    WORD PTR [rax],cs
    632b:	03 64 13 00          	add    esp,DWORD PTR [rbx+rdx*1+0x0]
    632f:	00 c5                	add    ch,al
    6331:	21 00                	and    DWORD PTR [rax],eax
    6333:	00 0b                	add    BYTE PTR [rbx],cl
    6335:	0c 00                	or     al,0x0
    6337:	00 01                	add    BYTE PTR [rcx],al
    6339:	c5 21 00             	(bad)
    633c:	00 01                	add    BYTE PTR [rcx],al
    633e:	c5 21 00             	(bad)
    6341:	00 00                	add    BYTE PTR [rax],al
    6343:	04 92                	add    al,0x92
    6345:	0b 00                	or     eax,DWORD PTR [rax]
    6347:	00 03                	add    BYTE PTR [rbx],al
    6349:	88 08                	mov    BYTE PTR [rax],cl
    634b:	03 d6                	add    edx,esi
    634d:	14 00                	adc    al,0x0
    634f:	00 35 00 00 00 2b    	add    BYTE PTR [rip+0x2b000000],dh        # 2b006355 <_end+0x2b00033d>
    6355:	0c 00                	or     al,0x0
    6357:	00 01                	add    BYTE PTR [rcx],al
    6359:	35 00 00 00 01       	xor    eax,0x1000000
    635e:	35 00 00 00 00       	xor    eax,0x0
    6363:	1d 66 6d 61 00       	sbb    eax,0x616d66
    6368:	96                   	xchg   esi,eax
    6369:	08 65 0f             	or     BYTE PTR [rbp+0xf],ah
    636c:	00 00                	add    BYTE PTR [rax],al
    636e:	c5 21 00             	(bad)
    6371:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    6374:	00 00                	add    BYTE PTR [rax],al
    6376:	01 c5                	add    ebp,eax
    6378:	21 00                	and    DWORD PTR [rax],eax
    637a:	00 01                	add    BYTE PTR [rcx],al
    637c:	c5 21 00             	(bad)
    637f:	00 01                	add    BYTE PTR [rcx],al
    6381:	c5 21 00             	(bad)
    6384:	00 00                	add    BYTE PTR [rax],al
    6386:	1d 66 6d 61 00       	sbb    eax,0x616d66
    638b:	92                   	xchg   edx,eax
    638c:	08 93 18 00 00 35    	or     BYTE PTR [rbx+0x35000018],dl
    6392:	00 00                	add    BYTE PTR [rax],al
    6394:	00 71 0c             	add    BYTE PTR [rcx+0xc],dh
    6397:	00 00                	add    BYTE PTR [rax],al
    6399:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 100639f <_end+0x1000387>
    639f:	35 00 00 00 01       	xor    eax,0x1000000
    63a4:	35 00 00 00 00       	xor    eax,0x0
    63a9:	04 b1                	add    al,0xb1
    63ab:	2c 00                	sub    al,0x0
    63ad:	00 03                	add    BYTE PTR [rbx],al
    63af:	a0 08 03 c9 1a 00 00 	movabs al,ds:0x21c500001ac90308
    63b6:	c5 21 
    63b8:	00 00                	add    BYTE PTR [rax],al
    63ba:	91                   	xchg   ecx,eax
    63bb:	0c 00                	or     al,0x0
    63bd:	00 01                	add    BYTE PTR [rcx],al
    63bf:	c5 21 00             	(bad)
    63c2:	00 01                	add    BYTE PTR [rcx],al
    63c4:	c5 21 00             	(bad)
    63c7:	00 00                	add    BYTE PTR [rax],al
    63c9:	04 b1                	add    al,0xb1
    63cb:	2c 00                	sub    al,0x0
    63cd:	00 03                	add    BYTE PTR [rbx],al
    63cf:	9c                   	pushf
    63d0:	08 03                	or     BYTE PTR [rbx],al
    63d2:	72 34                	jb     6408 <_end+0x3f0>
    63d4:	00 00                	add    BYTE PTR [rax],al
    63d6:	35 00 00 00 b1       	xor    eax,0xb1000000
    63db:	0c 00                	or     al,0x0
    63dd:	00 01                	add    BYTE PTR [rcx],al
    63df:	35 00 00 00 01       	xor    eax,0x1000000
    63e4:	35 00 00 00 00       	xor    eax,0x0
    63e9:	04 26                	add    al,0x26
    63eb:	0e                   	(bad)
    63ec:	00 00                	add    BYTE PTR [rax],al
    63ee:	03 aa 08 03 42 34    	add    ebp,DWORD PTR [rdx+0x34420308]
    63f4:	00 00                	add    BYTE PTR [rax],al
    63f6:	c5 21 00             	(bad)
    63f9:	00 d1                	add    cl,dl
    63fb:	0c 00                	or     al,0x0
    63fd:	00 01                	add    BYTE PTR [rcx],al
    63ff:	c5 21 00             	(bad)
    6402:	00 01                	add    BYTE PTR [rcx],al
    6404:	c5 21 00             	(bad)
    6407:	00 00                	add    BYTE PTR [rax],al
    6409:	04 26                	add    al,0x26
    640b:	0e                   	(bad)
    640c:	00 00                	add    BYTE PTR [rax],al
    640e:	03 a6 08 03 65 0c    	add    esp,DWORD PTR [rsi+0xc650308]
    6414:	00 00                	add    BYTE PTR [rax],al
    6416:	35 00 00 00 f1       	xor    eax,0xf1000000
    641b:	0c 00                	or     al,0x0
    641d:	00 01                	add    BYTE PTR [rcx],al
    641f:	35 00 00 00 01       	xor    eax,0x1000000
    6424:	35 00 00 00 00       	xor    eax,0x0
    6429:	04 20                	add    al,0x20
    642b:	2f                   	(bad)
    642c:	00 00                	add    BYTE PTR [rax],al
    642e:	03 f6                	add    esi,esi
    6430:	0d 03 ea 13 00       	or     eax,0x13ea03
    6435:	00 c5                	add    ch,al
    6437:	21 00                	and    DWORD PTR [rax],eax
    6439:	00 16                	add    BYTE PTR [rsi],dl
    643b:	0d 00 00 01 c5       	or     eax,0xc5010000
    6440:	21 00                	and    DWORD PTR [rax],eax
    6442:	00 01                	add    BYTE PTR [rcx],al
    6444:	c5 21 00             	(bad)
    6447:	00 01                	add    BYTE PTR [rcx],al
    6449:	c5 21 00             	(bad)
    644c:	00 00                	add    BYTE PTR [rax],al
    644e:	04 20                	add    al,0x20
    6450:	2f                   	(bad)
    6451:	00 00                	add    BYTE PTR [rax],al
    6453:	03 f2                	add    esi,edx
    6455:	0d 03 85 33 00       	or     eax,0x338503
    645a:	00 2e                	add    BYTE PTR [rsi],ch
    645c:	00 00                	add    BYTE PTR [rax],al
    645e:	00 3b                	add    BYTE PTR [rbx],bh
    6460:	0d 00 00 01 2e       	or     eax,0x2e010000
    6465:	00 00                	add    BYTE PTR [rax],al
    6467:	00 01                	add    BYTE PTR [rcx],al
    6469:	2e 00 00             	cs add BYTE PTR [rax],al
    646c:	00 01                	add    BYTE PTR [rcx],al
    646e:	2e 00 00             	cs add BYTE PTR [rax],al
    6471:	00 00                	add    BYTE PTR [rax],al
    6473:	04 20                	add    al,0x20
    6475:	2f                   	(bad)
    6476:	00 00                	add    BYTE PTR [rax],al
    6478:	03 ee                	add    ebp,esi
    647a:	0d 03 2e 29 00       	or     eax,0x292e03
    647f:	00 35 00 00 00 60    	add    BYTE PTR [rip+0x60000000],dh        # 60006485 <_end+0x6000046d>
    6485:	0d 00 00 01 35       	or     eax,0x35010000
    648a:	00 00                	add    BYTE PTR [rax],al
    648c:	00 01                	add    BYTE PTR [rcx],al
    648e:	35 00 00 00 01       	xor    eax,0x1000000
    6493:	35 00 00 00 00       	xor    eax,0x0
    6498:	04 20                	add    al,0x20
    649a:	2f                   	(bad)
    649b:	00 00                	add    BYTE PTR [rax],al
    649d:	03 b4 08 03 8b 12 00 	add    esi,DWORD PTR [rax+rcx*1+0x128b03]
    64a4:	00 c5                	add    ch,al
    64a6:	21 00                	and    DWORD PTR [rax],eax
    64a8:	00 80 0d 00 00 01    	add    BYTE PTR [rax+0x100000d],al
    64ae:	c5 21 00             	(bad)
    64b1:	00 01                	add    BYTE PTR [rcx],al
    64b3:	c5 21 00             	(bad)
    64b6:	00 00                	add    BYTE PTR [rax],al
    64b8:	04 20                	add    al,0x20
    64ba:	2f                   	(bad)
    64bb:	00 00                	add    BYTE PTR [rax],al
    64bd:	03 b0 08 03 7a 13    	add    esi,DWORD PTR [rax+0x137a0308]
    64c3:	00 00                	add    BYTE PTR [rax],al
    64c5:	35 00 00 00 a0       	xor    eax,0xa0000000
    64ca:	0d 00 00 01 35       	or     eax,0x35010000
    64cf:	00 00                	add    BYTE PTR [rax],al
    64d1:	00 01                	add    BYTE PTR [rcx],al
    64d3:	35 00 00 00 00       	xor    eax,0x0
    64d8:	04 53                	add    al,0x53
    64da:	26 00 00             	es add BYTE PTR [rax],al
    64dd:	03 be 08 03 55 30    	add    edi,DWORD PTR [rsi+0x30550308]
    64e3:	00 00                	add    BYTE PTR [rax],al
    64e5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    64e6:	21 00                	and    DWORD PTR [rax],eax
    64e8:	00 bb 0d 00 00 01    	add    BYTE PTR [rbx+0x100000d],bh
    64ee:	c5 21 00             	(bad)
    64f1:	00 00                	add    BYTE PTR [rax],al
    64f3:	04 53                	add    al,0x53
    64f5:	26 00 00             	es add BYTE PTR [rax],al
    64f8:	03 ba 08 03 30 30    	add    edi,DWORD PTR [rdx+0x30300308]
    64fe:	00 00                	add    BYTE PTR [rax],al
    6500:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6501:	21 00                	and    DWORD PTR [rax],eax
    6503:	00 d6                	add    dh,dl
    6505:	0d 00 00 01 35       	or     eax,0x35010000
    650a:	00 00                	add    BYTE PTR [rax],al
    650c:	00 00                	add    BYTE PTR [rax],al
    650e:	04 3f                	add    al,0x3f
    6510:	2d 00 00 03 d1       	sub    eax,0xd1030000
    6515:	08 03                	or     BYTE PTR [rbx],al
    6517:	36 0e                	ss (bad)
    6519:	00 00                	add    BYTE PTR [rax],al
    651b:	c5 21 00             	(bad)
    651e:	00 f1                	add    cl,dh
    6520:	0d 00 00 01 c5       	or     eax,0xc5010000
    6525:	21 00                	and    DWORD PTR [rax],eax
    6527:	00 00                	add    BYTE PTR [rax],al
    6529:	04 3f                	add    al,0x3f
    652b:	2d 00 00 03 cd       	sub    eax,0xcd030000
    6530:	08 03                	or     BYTE PTR [rbx],al
    6532:	43 0e                	rex.XB (bad)
    6534:	00 00                	add    BYTE PTR [rax],al
    6536:	35 00 00 00 0c       	xor    eax,0xc000000
    653b:	0e                   	(bad)
    653c:	00 00                	add    BYTE PTR [rax],al
    653e:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6544 <_end+0x52c>
    6544:	04 02                	add    al,0x2
    6546:	34 00                	xor    al,0x0
    6548:	00 03                	add    BYTE PTR [rbx],al
    654a:	e3 08                	jrcxz  6554 <_end+0x53c>
    654c:	03 a3 2b 00 00 be    	add    esp,DWORD PTR [rbx-0x41ffffd5]
    6552:	21 00                	and    DWORD PTR [rax],eax
    6554:	00 27                	add    BYTE PTR [rdi],ah
    6556:	0e                   	(bad)
    6557:	00 00                	add    BYTE PTR [rax],al
    6559:	01 c5                	add    ebp,eax
    655b:	21 00                	and    DWORD PTR [rax],eax
    655d:	00 00                	add    BYTE PTR [rax],al
    655f:	04 02                	add    al,0x2
    6561:	34 00                	xor    al,0x0
    6563:	00 03                	add    BYTE PTR [rbx],al
    6565:	df 08                	fisttp WORD PTR [rax]
    6567:	03 0b                	add    ecx,DWORD PTR [rbx]
    6569:	33 00                	xor    eax,DWORD PTR [rax]
    656b:	00 be 21 00 00 42    	add    BYTE PTR [rsi+0x42000021],bh
    6571:	0e                   	(bad)
    6572:	00 00                	add    BYTE PTR [rax],al
    6574:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 657a <_end+0x562>
    657a:	04 1c                	add    al,0x1c
    657c:	23 00                	and    eax,DWORD PTR [rax]
    657e:	00 03                	add    BYTE PTR [rbx],al
    6580:	f5                   	cmc
    6581:	08 03                	or     BYTE PTR [rbx],al
    6583:	7b 1b                	jnp    65a0 <_end+0x588>
    6585:	00 00                	add    BYTE PTR [rax],al
    6587:	be 21 00 00 5d       	mov    esi,0x5d000021
    658c:	0e                   	(bad)
    658d:	00 00                	add    BYTE PTR [rax],al
    658f:	01 c5                	add    ebp,eax
    6591:	21 00                	and    DWORD PTR [rax],eax
    6593:	00 00                	add    BYTE PTR [rax],al
    6595:	04 1c                	add    al,0x1c
    6597:	23 00                	and    eax,DWORD PTR [rax]
    6599:	00 03                	add    BYTE PTR [rbx],al
    659b:	f1                   	int1
    659c:	08 03                	or     BYTE PTR [rbx],al
    659e:	89 1b                	mov    DWORD PTR [rbx],ebx
    65a0:	00 00                	add    BYTE PTR [rax],al
    65a2:	be 21 00 00 78       	mov    esi,0x78000021
    65a7:	0e                   	(bad)
    65a8:	00 00                	add    BYTE PTR [rax],al
    65aa:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 65b0 <_end+0x598>
    65b0:	04 f3                	add    al,0xf3
    65b2:	18 00                	sbb    BYTE PTR [rax],al
    65b4:	00 03                	add    BYTE PTR [rbx],al
    65b6:	07                   	(bad)
    65b7:	09 03                	or     DWORD PTR [rbx],eax
    65b9:	bd 11 00 00 c5       	mov    ebp,0xc5000011
    65be:	21 00                	and    DWORD PTR [rax],eax
    65c0:	00 93 0e 00 00 01    	add    BYTE PTR [rbx+0x100000e],dl
    65c6:	c5 21 00             	(bad)
    65c9:	00 00                	add    BYTE PTR [rax],al
    65cb:	04 f3                	add    al,0xf3
    65cd:	18 00                	sbb    BYTE PTR [rax],al
    65cf:	00 03                	add    BYTE PTR [rbx],al
    65d1:	03 09                	add    ecx,DWORD PTR [rcx]
    65d3:	03 ee                	add    ebp,esi
    65d5:	1c 00                	sbb    al,0x0
    65d7:	00 35 00 00 00 ae    	add    BYTE PTR [rip+0xffffffffae000000],dh        # ffffffffae0065dd <_end+0xffffffffae0005c5>
    65dd:	0e                   	(bad)
    65de:	00 00                	add    BYTE PTR [rax],al
    65e0:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 65e6 <_end+0x5ce>
    65e6:	04 88                	add    al,0x88
    65e8:	1c 00                	sbb    al,0x0
    65ea:	00 03                	add    BYTE PTR [rbx],al
    65ec:	1a 09                	sbb    cl,BYTE PTR [rcx]
    65ee:	03 e2                	add    esp,edx
    65f0:	14 00                	adc    al,0x0
    65f2:	00 c5                	add    ch,al
    65f4:	21 00                	and    DWORD PTR [rax],eax
    65f6:	00 c9                	add    cl,cl
    65f8:	0e                   	(bad)
    65f9:	00 00                	add    BYTE PTR [rax],al
    65fb:	01 c5                	add    ebp,eax
    65fd:	21 00                	and    DWORD PTR [rax],eax
    65ff:	00 00                	add    BYTE PTR [rax],al
    6601:	04 88                	add    al,0x88
    6603:	1c 00                	sbb    al,0x0
    6605:	00 03                	add    BYTE PTR [rbx],al
    6607:	16                   	(bad)
    6608:	09 03                	or     DWORD PTR [rbx],eax
    660a:	ed                   	in     eax,dx
    660b:	14 00                	adc    al,0x0
    660d:	00 35 00 00 00 e4    	add    BYTE PTR [rip+0xffffffffe4000000],dh        # ffffffffe4006613 <_end+0xffffffffe40005fb>
    6613:	0e                   	(bad)
    6614:	00 00                	add    BYTE PTR [rax],al
    6616:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 661c <_end+0x604>
    661c:	04 54                	add    al,0x54
    661e:	26 00 00             	es add BYTE PTR [rax],al
    6621:	03 2c 09             	add    ebp,DWORD PTR [rcx+rcx*1]
    6624:	03 fd                	add    edi,ebp
    6626:	2b 00                	sub    eax,DWORD PTR [rax]
    6628:	00 c5                	add    ch,al
    662a:	21 00                	and    DWORD PTR [rax],eax
    662c:	00 ff                	add    bh,bh
    662e:	0e                   	(bad)
    662f:	00 00                	add    BYTE PTR [rax],al
    6631:	01 c5                	add    ebp,eax
    6633:	21 00                	and    DWORD PTR [rax],eax
    6635:	00 00                	add    BYTE PTR [rax],al
    6637:	04 54                	add    al,0x54
    6639:	26 00 00             	es add BYTE PTR [rax],al
    663c:	03 28                	add    ebp,DWORD PTR [rax]
    663e:	09 03                	or     DWORD PTR [rbx],eax
    6640:	08 2c 00             	or     BYTE PTR [rax+rax*1],ch
    6643:	00 35 00 00 00 1a    	add    BYTE PTR [rip+0x1a000000],dh        # 1a006649 <_end+0x1a000631>
    6649:	0f 00 00             	sldt   WORD PTR [rax]
    664c:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6652 <_end+0x63a>
    6652:	04 03                	add    al,0x3
    6654:	34 00                	xor    al,0x0
    6656:	00 03                	add    BYTE PTR [rbx],al
    6658:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    665b:	b9 30 00 00 b2       	mov    ecx,0xb2000030
    6660:	21 00                	and    DWORD PTR [rax],eax
    6662:	00 35 0f 00 00 01    	add    BYTE PTR [rip+0x100000f],dh        # 1006677 <_end+0x100065f>
    6668:	c5 21 00             	(bad)
    666b:	00 00                	add    BYTE PTR [rax],al
    666d:	04 03                	add    al,0x3
    666f:	34 00                	xor    al,0x0
    6671:	00 03                	add    BYTE PTR [rbx],al
    6673:	3a 09                	cmp    cl,BYTE PTR [rcx]
    6675:	03 64 10 00          	add    esp,DWORD PTR [rax+rdx*1+0x0]
    6679:	00 b2 21 00 00 50    	add    BYTE PTR [rdx+0x50000021],dh
    667f:	0f 00 00             	sldt   WORD PTR [rax]
    6682:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 6688 <_end+0x670>
    6688:	04 1d                	add    al,0x1d
    668a:	23 00                	and    eax,DWORD PTR [rax]
    668c:	00 03                	add    BYTE PTR [rbx],al
    668e:	50                   	push   rax
    668f:	09 03                	or     DWORD PTR [rbx],eax
    6691:	fe                   	(bad)
    6692:	32 00                	xor    al,BYTE PTR [rax]
    6694:	00 b2 21 00 00 6b    	add    BYTE PTR [rdx+0x6b000021],dh
    669a:	0f 00 00             	sldt   WORD PTR [rax]
    669d:	01 c5                	add    ebp,eax
    669f:	21 00                	and    DWORD PTR [rax],eax
    66a1:	00 00                	add    BYTE PTR [rax],al
    66a3:	04 1d                	add    al,0x1d
    66a5:	23 00                	and    eax,DWORD PTR [rax]
    66a7:	00 03                	add    BYTE PTR [rbx],al
    66a9:	4c 09 03             	or     QWORD PTR [rbx],r8
    66ac:	72 17                	jb     66c5 <_end+0x6ad>
    66ae:	00 00                	add    BYTE PTR [rax],al
    66b0:	b2 21                	mov    dl,0x21
    66b2:	00 00                	add    BYTE PTR [rax],al
    66b4:	86 0f                	xchg   BYTE PTR [rdi],cl
    66b6:	00 00                	add    BYTE PTR [rax],al
    66b8:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 66be <_end+0x6a6>
    66be:	04 53                	add    al,0x53
    66c0:	14 00                	adc    al,0x0
    66c2:	00 03                	add    BYTE PTR [rbx],al
    66c4:	62 09 03 f8 13       	(bad)
    66c9:	00 00                	add    BYTE PTR [rax],al
    66cb:	c5 21 00             	(bad)
    66ce:	00 a1 0f 00 00 01    	add    BYTE PTR [rcx+0x100000f],ah
    66d4:	c5 21 00             	(bad)
    66d7:	00 00                	add    BYTE PTR [rax],al
    66d9:	04 53                	add    al,0x53
    66db:	14 00                	adc    al,0x0
    66dd:	00 03                	add    BYTE PTR [rbx],al
    66df:	5e                   	pop    rsi
    66e0:	09 03                	or     DWORD PTR [rbx],eax
    66e2:	d6                   	(bad)
    66e3:	16                   	(bad)
    66e4:	00 00                	add    BYTE PTR [rax],al
    66e6:	35 00 00 00 bc       	xor    eax,0xbc000000
    66eb:	0f 00 00             	sldt   WORD PTR [rax]
    66ee:	01 35 00 00 00 00    	add    DWORD PTR [rip+0x0],esi        # 66f4 <_end+0x6dc>
    66f4:	04 00                	add    al,0x0
    66f6:	28 00                	sub    BYTE PTR [rax],al
    66f8:	00 03                	add    BYTE PTR [rbx],al
    66fa:	74 09                	je     6705 <_end+0x6ed>
    66fc:	03 06                	add    eax,DWORD PTR [rsi]
    66fe:	0e                   	(bad)
    66ff:	00 00                	add    BYTE PTR [rax],al
    6701:	c5 21 00             	(bad)
    6704:	00 dc                	add    ah,bl
    6706:	0f 00 00             	sldt   WORD PTR [rax]
    6709:	01 c5                	add    ebp,eax
    670b:	21 00                	and    DWORD PTR [rax],eax
    670d:	00 01                	add    BYTE PTR [rcx],al
    670f:	c5 21 00             	(bad)
    6712:	00 00                	add    BYTE PTR [rax],al
    6714:	04 00                	add    al,0x0
    6716:	28 00                	sub    BYTE PTR [rax],al
    6718:	00 03                	add    BYTE PTR [rbx],al
    671a:	70 09                	jo     6725 <_end+0x70d>
    671c:	03 96 10 00 00 35    	add    edx,DWORD PTR [rsi+0x35000010]
    6722:	00 00                	add    BYTE PTR [rax],al
    6724:	00 fc                	add    ah,bh
    6726:	0f 00 00             	sldt   WORD PTR [rax]
    6729:	01 35 00 00 00 01    	add    DWORD PTR [rip+0x1000000],esi        # 100672f <_end+0x1000717>
    672f:	35 00 00 00 00       	xor    eax,0x0
    6734:	04 0b                	add    al,0xb
    6736:	12 00                	adc    al,BYTE PTR [rax]
    6738:	00 03                	add    BYTE PTR [rbx],al
    673a:	7e 09                	jle    6745 <_end+0x72d>
    673c:	03 20                	add    esp,DWORD PTR [rax]
    673e:	25 00 00 c5 21       	and    eax,0x21c50000
    6743:	00 00                	add    BYTE PTR [rax],al
    6745:	1c 10                	sbb    al,0x10
    6747:	00 00                	add    BYTE PTR [rax],al
    6749:	01 c5                	add    ebp,eax
    674b:	21 00                	and    DWORD PTR [rax],eax
    674d:	00 01                	add    BYTE PTR [rcx],al
    674f:	c5 21 00             	(bad)
    6752:	00 00                	add    BYTE PTR [rax],al
    6754:	04 0b                	add    al,0xb
    6756:	12 00                	adc    al,BYTE PTR [rax]
    6758:	00 03                	add    BYTE PTR [rbx],al
    675a:	7a 09                	jp     6765 <_end+0x74d>
    675c:	03 2a                	add    ebp,DWORD PTR [rdx]
    675e:	0f 00 00             	sldt   WORD PTR [rax]
    6761:	35 00 00 00 3c       	xor    eax,0x3c000000
    6766:	10 00                	adc    BYTE PTR [rax],al
    6768:	00 01                	add    BYTE PTR [rcx],al
    676a:	35 00 00 00 01       	xor    eax,0x1000000
    676f:	c5 21 00             	(bad)
    6772:	00 00                	add    BYTE PTR [rax],al
    6774:	04 c8                	add    al,0xc8
    6776:	07                   	(bad)
    6777:	00 00                	add    BYTE PTR [rax],al
    6779:	03 90 09 03 cd 30    	add    edx,DWORD PTR [rax+0x30cd0309]
    677f:	00 00                	add    BYTE PTR [rax],al
    6781:	c5 21 00             	(bad)
    6784:	00 5c 10 00          	add    BYTE PTR [rax+rdx*1+0x0],bl
    6788:	00 01                	add    BYTE PTR [rcx],al
    678a:	c5 21 00             	(bad)
    678d:	00 01                	add    BYTE PTR [rcx],al
    678f:	c5 21 00             	(bad)
    6792:	00 00                	add    BYTE PTR [rax],al
    6794:	04 c8                	add    al,0xc8
    6796:	07                   	(bad)
    6797:	00 00                	add    BYTE PTR [rax],al
    6799:	03 8c 09 03 31 32 00 	add    ecx,DWORD PTR [rcx+rcx*1+0x323103]
    67a0:	00 35 00 00 00 7c    	add    BYTE PTR [rip+0x7c000000],dh        # 7c0067a6 <_end+0x7c00078e>
    67a6:	10 00                	adc    BYTE PTR [rax],al
    67a8:	00 01                	add    BYTE PTR [rcx],al
    67aa:	35 00 00 00 01       	xor    eax,0x1000000
    67af:	35 00 00 00 00       	xor    eax,0x0
    67b4:	04 59                	add    al,0x59
    67b6:	23 00                	and    eax,DWORD PTR [rax]
    67b8:	00 03                	add    BYTE PTR [rbx],al
    67ba:	9a                   	(bad)
    67bb:	09 03                	or     DWORD PTR [rbx],eax
    67bd:	91                   	xchg   ecx,eax
    67be:	16                   	(bad)
    67bf:	00 00                	add    BYTE PTR [rax],al
    67c1:	c5 21 00             	(bad)
    67c4:	00 a1 10 00 00 01    	add    BYTE PTR [rcx+0x1000010],ah
    67ca:	c5 21 00             	(bad)
    67cd:	00 01                	add    BYTE PTR [rcx],al
    67cf:	c5 21 00             	(bad)
    67d2:	00 01                	add    BYTE PTR [rcx],al
    67d4:	ba 25 00 00 00       	mov    edx,0x25
    67d9:	04 59                	add    al,0x59
    67db:	23 00                	and    eax,DWORD PTR [rax]
    67dd:	00 03                	add    BYTE PTR [rbx],al
    67df:	96                   	xchg   esi,eax
    67e0:	09 03                	or     DWORD PTR [rbx],eax
    67e2:	dd 33                	fnsave [rbx]
    67e4:	00 00                	add    BYTE PTR [rax],al
    67e6:	35 00 00 00 c6       	xor    eax,0xc6000000
    67eb:	10 00                	adc    BYTE PTR [rax],al
    67ed:	00 01                	add    BYTE PTR [rcx],al
    67ef:	35 00 00 00 01       	xor    eax,0x1000000
    67f4:	35 00 00 00 01       	xor    eax,0x1000000
    67f9:	ba 25 00 00 00       	mov    edx,0x25
    67fe:	04 69                	add    al,0x69
    6800:	05 00 00 03 a4       	add    eax,0xa4030000
    6805:	09 03                	or     DWORD PTR [rbx],eax
    6807:	95                   	xchg   ebp,eax
    6808:	2e 00 00             	cs add BYTE PTR [rax],al
    680b:	c5 21 00             	(bad)
    680e:	00 e1                	add    cl,ah
    6810:	10 00                	adc    BYTE PTR [rax],al
    6812:	00 01                	add    BYTE PTR [rcx],al
    6814:	c5 21 00             	(bad)
    6817:	00 00                	add    BYTE PTR [rax],al
    6819:	04 69                	add    al,0x69
    681b:	05 00 00 03 a0       	add    eax,0xa0030000
    6820:	09 03                	or     DWORD PTR [rbx],eax
    6822:	a0 2e 00 00 35 00 00 	movabs al,ds:0xfc0000003500002e
    6829:	00 fc 
    682b:	10 00                	adc    BYTE PTR [rax],al
    682d:	00 01                	add    BYTE PTR [rcx],al
    682f:	35 00 00 00 00       	xor    eax,0x0
    6834:	04 1e                	add    al,0x1e
    6836:	23 00                	and    eax,DWORD PTR [rax]
    6838:	00 03                	add    BYTE PTR [rbx],al
    683a:	b6 09                	mov    dh,0x9
    683c:	03 06                	add    eax,DWORD PTR [rsi]
    683e:	1e                   	(bad)
    683f:	00 00                	add    BYTE PTR [rax],al
    6841:	c5 21 00             	(bad)
    6844:	00 17                	add    BYTE PTR [rdi],dl
    6846:	11 00                	adc    DWORD PTR [rax],eax
    6848:	00 01                	add    BYTE PTR [rcx],al
    684a:	c5 21 00             	(bad)
    684d:	00 00                	add    BYTE PTR [rax],al
    684f:	04 1e                	add    al,0x1e
    6851:	23 00                	and    eax,DWORD PTR [rax]
    6853:	00 03                	add    BYTE PTR [rbx],al
    6855:	b2 09                	mov    dl,0x9
    6857:	03 12                	add    edx,DWORD PTR [rdx]
    6859:	1e                   	(bad)
    685a:	00 00                	add    BYTE PTR [rax],al
    685c:	35 00 00 00 32       	xor    eax,0x32000000
    6861:	11 00                	adc    DWORD PTR [rax],eax
    6863:	00 01                	add    BYTE PTR [rcx],al
    6865:	35 00 00 00 00       	xor    eax,0x0
    686a:	04 33                	add    al,0x33
    686c:	25 00 00 03 c8       	and    eax,0xc8030000
    6871:	09 03                	or     DWORD PTR [rbx],eax
    6873:	e3 19                	jrcxz  688e <_end+0x876>
    6875:	00 00                	add    BYTE PTR [rax],al
    6877:	c5 21 00             	(bad)
    687a:	00 52 11             	add    BYTE PTR [rdx+0x11],dl
    687d:	00 00                	add    BYTE PTR [rax],al
    687f:	01 c5                	add    ebp,eax
    6881:	21 00                	and    DWORD PTR [rax],eax
    6883:	00 01                	add    BYTE PTR [rcx],al
    6885:	b2 21                	mov    dl,0x21
    6887:	00 00                	add    BYTE PTR [rax],al
    6889:	00 04 33             	add    BYTE PTR [rbx+rsi*1],al
    688c:	25 00 00 03 c4       	and    eax,0xc4030000
    6891:	09 03                	or     DWORD PTR [rbx],eax
    6893:	ae                   	scas   al,BYTE PTR es:[rdi]
    6894:	1b 00                	sbb    eax,DWORD PTR [rax]
    6896:	00 35 00 00 00 72    	add    BYTE PTR [rip+0x72000000],dh        # 7200689c <_end+0x72000884>
    689c:	11 00                	adc    DWORD PTR [rax],eax
    689e:	00 01                	add    BYTE PTR [rcx],al
    68a0:	35 00 00 00 01       	xor    eax,0x1000000
    68a5:	b2 21                	mov    dl,0x21
    68a7:	00 00                	add    BYTE PTR [rax],al
    68a9:	00 04 0e             	add    BYTE PTR [rsi+rcx*1],al
    68ac:	2e 00 00             	cs add BYTE PTR [rax],al
    68af:	03 da                	add    ebx,edx
    68b1:	09 03                	or     DWORD PTR [rbx],eax
    68b3:	0d 10 00 00 c5       	or     eax,0xc5000010
    68b8:	21 00                	and    DWORD PTR [rax],eax
    68ba:	00 92 11 00 00 01    	add    BYTE PTR [rdx+0x1000011],dl
    68c0:	c5 21 00             	(bad)
    68c3:	00 01                	add    BYTE PTR [rcx],al
    68c5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    68c6:	21 00                	and    DWORD PTR [rax],eax
    68c8:	00 00                	add    BYTE PTR [rax],al
    68ca:	04 0e                	add    al,0xe
    68cc:	2e 00 00             	cs add BYTE PTR [rax],al
    68cf:	03 d6                	add    edx,esi
    68d1:	09 03                	or     DWORD PTR [rbx],eax
    68d3:	e1 0b                	loope  68e0 <_end+0x8c8>
    68d5:	00 00                	add    BYTE PTR [rax],al
    68d7:	35 00 00 00 b2       	xor    eax,0xb2000000
    68dc:	11 00                	adc    DWORD PTR [rax],eax
    68de:	00 01                	add    BYTE PTR [rcx],al
    68e0:	35 00 00 00 01       	xor    eax,0x1000000
    68e5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    68e6:	21 00                	and    DWORD PTR [rax],eax
    68e8:	00 00                	add    BYTE PTR [rax],al
    68ea:	04 74                	add    al,0x74
    68ec:	1b 00                	sbb    eax,DWORD PTR [rax]
    68ee:	00 03                	add    BYTE PTR [rbx],al
    68f0:	ec                   	in     al,dx
    68f1:	09 03                	or     DWORD PTR [rbx],eax
    68f3:	f0 1e                	lock (bad)
    68f5:	00 00                	add    BYTE PTR [rax],al
    68f7:	c5 21 00             	(bad)
    68fa:	00 cd                	add    ch,cl
    68fc:	11 00                	adc    DWORD PTR [rax],eax
    68fe:	00 01                	add    BYTE PTR [rcx],al
    6900:	c5 21 00             	(bad)
    6903:	00 00                	add    BYTE PTR [rax],al
    6905:	04 74                	add    al,0x74
    6907:	1b 00                	sbb    eax,DWORD PTR [rax]
    6909:	00 03                	add    BYTE PTR [rbx],al
    690b:	e8 09 03 fd 1e       	call   1efd6c19 <_end+0x1efd0c01>
    6910:	00 00                	add    BYTE PTR [rax],al
    6912:	35 00 00 00 e8       	xor    eax,0xe8000000
    6917:	11 00                	adc    DWORD PTR [rax],eax
    6919:	00 01                	add    BYTE PTR [rcx],al
    691b:	35 00 00 00 00       	xor    eax,0x0
    6920:	04 24                	add    al,0x24
    6922:	2a 00                	sub    al,BYTE PTR [rax]
    6924:	00 03                	add    BYTE PTR [rbx],al
    6926:	fe 09                	dec    BYTE PTR [rcx]
    6928:	03 20                	add    esp,DWORD PTR [rax]
    692a:	21 00                	and    DWORD PTR [rax],eax
    692c:	00 c5                	add    ch,al
    692e:	21 00                	and    DWORD PTR [rax],eax
    6930:	00 03                	add    BYTE PTR [rbx],al
    6932:	12 00                	adc    al,BYTE PTR [rax]
    6934:	00 01                	add    BYTE PTR [rcx],al
    6936:	c5 21 00             	(bad)
    6939:	00 00                	add    BYTE PTR [rax],al
    693b:	04 24                	add    al,0x24
    693d:	2a 00                	sub    al,BYTE PTR [rax]
    693f:	00 03                	add    BYTE PTR [rbx],al
    6941:	fa                   	cli
    6942:	09 03                	or     DWORD PTR [rbx],eax
    6944:	2c 21                	sub    al,0x21
    6946:	00 00                	add    BYTE PTR [rax],al
    6948:	35 00 00 00 1e       	xor    eax,0x1e000000
    694d:	12 00                	adc    al,BYTE PTR [rax]
    694f:	00 01                	add    BYTE PTR [rcx],al
    6951:	35 00 00 00 00       	xor    eax,0x0
    6956:	02 08                	add    cl,BYTE PTR [rax]
    6958:	83 0b 61             	or     DWORD PTR [rbx],0x61
    695b:	23 00                	and    eax,DWORD PTR [rax]
    695d:	00 02                	add    BYTE PTR [rdx],al
    695f:	08 84 0b 94 23 00 00 	or     BYTE PTR [rbx+rcx*1+0x2394],al
    6966:	02 08                	add    cl,BYTE PTR [rax]
    6968:	8a 0b                	mov    cl,BYTE PTR [rbx]
    696a:	c2 2d 00             	ret    0x2d
    696d:	00 02                	add    BYTE PTR [rdx],al
    696f:	08 8d 0b df 2d 00    	or     BYTE PTR [rbp+0x2ddf0b],cl
    6975:	00 02                	add    BYTE PTR [rdx],al
    6977:	08 90 0b fa 2d 00    	or     BYTE PTR [rax+0x2dfa0b],dl
    697d:	00 02                	add    BYTE PTR [rdx],al
    697f:	08 91 0b 10 2e 00    	or     BYTE PTR [rcx+0x2e100b],dl
    6985:	00 02                	add    BYTE PTR [rdx],al
    6987:	08 92 0b 27 2e 00    	or     BYTE PTR [rdx+0x2e270b],dl
    698d:	00 02                	add    BYTE PTR [rdx],al
    698f:	08 93 0b 3e 2e 00    	or     BYTE PTR [rbx+0x2e3e0b],dl
    6995:	00 02                	add    BYTE PTR [rdx],al
    6997:	08 95 0b 68 2e 00    	or     BYTE PTR [rbp+0x2e680b],dl
    699d:	00 02                	add    BYTE PTR [rdx],al
    699f:	08 98 0b 84 2e 00    	or     BYTE PTR [rax+0x2e840b],bl
    69a5:	00 02                	add    BYTE PTR [rdx],al
    69a7:	08 9a 0b 9b 2e 00    	or     BYTE PTR [rdx+0x2e9b0b],bl
    69ad:	00 02                	add    BYTE PTR [rdx],al
    69af:	08 9d 0b b7 2e 00    	or     BYTE PTR [rbp+0x2eb70b],bl
    69b5:	00 02                	add    BYTE PTR [rdx],al
    69b7:	08 9e 0b d3 2e 00    	or     BYTE PTR [rsi+0x2ed30b],bl
    69bd:	00 02                	add    BYTE PTR [rdx],al
    69bf:	08 9f 0b f8 2e 00    	or     BYTE PTR [rdi+0x2ef80b],bl
    69c5:	00 02                	add    BYTE PTR [rdx],al
    69c7:	08 a1 0b 19 2f 00    	or     BYTE PTR [rcx+0x2f190b],ah
    69cd:	00 02                	add    BYTE PTR [rdx],al
    69cf:	08 a4 0b 3a 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2f3a],ah
    69d6:	02 08                	add    cl,BYTE PTR [rax]
    69d8:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    69d9:	0b 4d 2f             	or     ecx,DWORD PTR [rbp+0x2f]
    69dc:	00 00                	add    BYTE PTR [rax],al
    69de:	02 08                	add    cl,BYTE PTR [rax]
    69e0:	a9 0b 5a 2f 00       	test   eax,0x2f5a0b
    69e5:	00 02                	add    BYTE PTR [rdx],al
    69e7:	08 aa 0b 6c 2f 00    	or     BYTE PTR [rdx+0x2f6c0b],ch
    69ed:	00 02                	add    BYTE PTR [rdx],al
    69ef:	08 ab 0b 8c 2f 00    	or     BYTE PTR [rbx+0x2f8c0b],ch
    69f5:	00 02                	add    BYTE PTR [rdx],al
    69f7:	08 ac 0b b0 2f 00 00 	or     BYTE PTR [rbx+rcx*1+0x2fb0],ch
    69fe:	02 08                	add    cl,BYTE PTR [rax]
    6a00:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    6a01:	0b d4                	or     edx,esp
    6a03:	2f                   	(bad)
    6a04:	00 00                	add    BYTE PTR [rax],al
    6a06:	02 08                	add    cl,BYTE PTR [rax]
    6a08:	af                   	scas   eax,DWORD PTR es:[rdi]
    6a09:	0b eb                	or     ebp,ebx
    6a0b:	2f                   	(bad)
    6a0c:	00 00                	add    BYTE PTR [rax],al
    6a0e:	02 08                	add    cl,BYTE PTR [rax]
    6a10:	b0 0b                	mov    al,0xb
    6a12:	10 30                	adc    BYTE PTR [rax],dh
    6a14:	00 00                	add    BYTE PTR [rax],al
    6a16:	02 08                	add    cl,BYTE PTR [rax]
    6a18:	f4                   	hlt
    6a19:	16                   	(bad)
    6a1a:	c7                   	(bad)
    6a1b:	23 00                	and    eax,DWORD PTR [rax]
    6a1d:	00 02                	add    BYTE PTR [rdx],al
    6a1f:	08 f9                	or     cl,bh
    6a21:	16                   	(bad)
    6a22:	43 21 00             	rex.XB and DWORD PTR [r8],eax
    6a25:	00 02                	add    BYTE PTR [rdx],al
    6a27:	08 fa                	or     dl,bh
    6a29:	16                   	(bad)
    6a2a:	2b 30                	sub    esi,DWORD PTR [rax]
    6a2c:	00 00                	add    BYTE PTR [rax],al
    6a2e:	02 08                	add    cl,BYTE PTR [rax]
    6a30:	fc                   	cld
    6a31:	16                   	(bad)
    6a32:	47 30 00             	rex.RXB xor BYTE PTR [r8],r8b
    6a35:	00 02                	add    BYTE PTR [rdx],al
    6a37:	08 fd                	or     ch,bh
    6a39:	16                   	(bad)
    6a3a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6a3b:	30 00                	xor    BYTE PTR [rax],al
    6a3d:	00 02                	add    BYTE PTR [rdx],al
    6a3f:	08 fe                	or     dh,bh
    6a41:	16                   	(bad)
    6a42:	5e                   	pop    rsi
    6a43:	30 00                	xor    BYTE PTR [rax],al
    6a45:	00 02                	add    BYTE PTR [rdx],al
    6a47:	08 ff                	or     bh,bh
    6a49:	16                   	(bad)
    6a4a:	82                   	(bad)
    6a4b:	30 00                	xor    BYTE PTR [rax],al
    6a4d:	00 18                	add    BYTE PTR [rax],bl
    6a4f:	08 00                	or     BYTE PTR [rax],al
    6a51:	01 16                	add    DWORD PTR [rsi],edx
    6a53:	c1 30 00             	shl    DWORD PTR [rax],0x0
    6a56:	00 1a                	add    BYTE PTR [rdx],bl
    6a58:	64 69 76 00 08 b5 74 	imul   esi,DWORD PTR fs:[rsi+0x0],0x74b508
    6a5f:	00 
    6a60:	00 00                	add    BYTE PTR [rax],al
    6a62:	94                   	xchg   esp,eax
    6a63:	23 00                	and    eax,DWORD PTR [rax]
    6a65:	00 3d 13 00 00 01    	add    BYTE PTR [rip+0x1000013],bh        # 1006a7e <_end+0x1000a66>
    6a6b:	b2 21                	mov    dl,0x21
    6a6d:	00 00                	add    BYTE PTR [rax],al
    6a6f:	01 b2 21 00 00 00    	add    DWORD PTR [rdx+0x21],esi
    6a75:	02 09                	add    cl,BYTE PTR [rcx]
    6a77:	40 0b 3a             	rex or edi,DWORD PTR [rdx]
    6a7a:	32 00                	xor    al,BYTE PTR [rax]
    6a7c:	00 02                	add    BYTE PTR [rdx],al
    6a7e:	09 8d 0b 2e 32 00    	or     DWORD PTR [rbp+0x322e0b],ecx
    6a84:	00 02                	add    BYTE PTR [rdx],al
    6a86:	09 8f 0b 4b 32 00    	or     DWORD PTR [rdi+0x324b0b],ecx
    6a8c:	00 02                	add    BYTE PTR [rdx],al
    6a8e:	09 90 0b 62 32 00    	or     DWORD PTR [rax+0x32620b],edx
    6a94:	00 02                	add    BYTE PTR [rdx],al
    6a96:	09 91 0b 7e 32 00    	or     DWORD PTR [rcx+0x327e0b],edx
    6a9c:	00 02                	add    BYTE PTR [rdx],al
    6a9e:	09 92 0b 9e 32 00    	or     DWORD PTR [rdx+0x329e0b],edx
    6aa4:	00 02                	add    BYTE PTR [rdx],al
    6aa6:	09 93 0b ba 32 00    	or     DWORD PTR [rbx+0x32ba0b],edx
    6aac:	00 02                	add    BYTE PTR [rdx],al
    6aae:	09 94 0b d6 32 00 00 	or     DWORD PTR [rbx+rcx*1+0x32d6],edx
    6ab5:	02 09                	add    cl,BYTE PTR [rcx]
    6ab7:	95                   	xchg   ebp,eax
    6ab8:	0b f2                	or     esi,edx
    6aba:	32 00                	xor    al,BYTE PTR [rax]
    6abc:	00 02                	add    BYTE PTR [rdx],al
    6abe:	09 96 0b 0e 33 00    	or     DWORD PTR [rsi+0x330e0b],edx
    6ac4:	00 02                	add    BYTE PTR [rdx],al
    6ac6:	09 97 0b 2f 33 00    	or     DWORD PTR [rdi+0x332f0b],edx
    6acc:	00 02                	add    BYTE PTR [rdx],al
    6ace:	09 98 0b 46 33 00    	or     DWORD PTR [rax+0x33460b],ebx
    6ad4:	00 02                	add    BYTE PTR [rdx],al
    6ad6:	09 99 0b 53 33 00    	or     DWORD PTR [rcx+0x33530b],ebx
    6adc:	00 02                	add    BYTE PTR [rdx],al
    6ade:	09 9a 0b 79 33 00    	or     DWORD PTR [rdx+0x33790b],ebx
    6ae4:	00 02                	add    BYTE PTR [rdx],al
    6ae6:	09 9b 0b 9f 33 00    	or     DWORD PTR [rbx+0x339f0b],ebx
    6aec:	00 02                	add    BYTE PTR [rdx],al
    6aee:	09 9c 0b bb 33 00 00 	or     DWORD PTR [rbx+rcx*1+0x33bb],ebx
    6af5:	02 09                	add    cl,BYTE PTR [rcx]
    6af7:	9d                   	popf
    6af8:	0b e5                	or     esp,ebp
    6afa:	33 00                	xor    eax,DWORD PTR [rax]
    6afc:	00 02                	add    BYTE PTR [rdx],al
    6afe:	09 9e 0b 01 34 00    	or     DWORD PTR [rsi+0x34010b],ebx
    6b04:	00 02                	add    BYTE PTR [rdx],al
    6b06:	09 a0 0b 18 34 00    	or     DWORD PTR [rax+0x34180b],esp
    6b0c:	00 02                	add    BYTE PTR [rdx],al
    6b0e:	09 a2 0b 39 34 00    	or     DWORD PTR [rdx+0x34390b],esp
    6b14:	00 02                	add    BYTE PTR [rdx],al
    6b16:	09 a3 0b 5a 34 00    	or     DWORD PTR [rbx+0x345a0b],esp
    6b1c:	00 02                	add    BYTE PTR [rdx],al
    6b1e:	09 a4 0b 76 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x3476],esp
    6b25:	02 09                	add    cl,BYTE PTR [rcx]
    6b27:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6b28:	0b 9b 34 00 00 02    	or     ebx,DWORD PTR [rbx+0x2000034]
    6b2e:	09 a9 0b c0 34 00    	or     DWORD PTR [rcx+0x34c00b],ebp
    6b34:	00 02                	add    BYTE PTR [rdx],al
    6b36:	09 ac 0b e5 34 00 00 	or     DWORD PTR [rbx+rcx*1+0x34e5],ebp
    6b3d:	02 09                	add    cl,BYTE PTR [rcx]
    6b3f:	ae                   	scas   al,BYTE PTR es:[rdi]
    6b40:	0b 0a                	or     ecx,DWORD PTR [rdx]
    6b42:	35 00 00 02 09       	xor    eax,0x9020000
    6b47:	b0 0b                	mov    al,0xb
    6b49:	25 35 00 00 02       	and    eax,0x2000035
    6b4e:	09 b2 0b 45 35 00    	or     DWORD PTR [rdx+0x35450b],esi
    6b54:	00 02                	add    BYTE PTR [rdx],al
    6b56:	09 b3 0b 65 35 00    	or     DWORD PTR [rbx+0x35650b],esi
    6b5c:	00 02                	add    BYTE PTR [rdx],al
    6b5e:	09 b4 0b 80 35 00 00 	or     DWORD PTR [rbx+rcx*1+0x3580],esi
    6b65:	02 09                	add    cl,BYTE PTR [rcx]
    6b67:	b5 0b                	mov    ch,0xb
    6b69:	9b                   	fwait
    6b6a:	35 00 00 02 09       	xor    eax,0x9020000
    6b6f:	b6 0b                	mov    dh,0xb
    6b71:	b6 35                	mov    dh,0x35
    6b73:	00 00                	add    BYTE PTR [rax],al
    6b75:	02 09                	add    cl,BYTE PTR [rcx]
    6b77:	b7 0b                	mov    bh,0xb
    6b79:	d1 35 00 00 02 09    	shl    DWORD PTR [rip+0x9020000],1        # 9026b7f <_end+0x9020b67>
    6b7f:	b8 0b ec 35 00       	mov    eax,0x35ec0b
    6b84:	00 02                	add    BYTE PTR [rdx],al
    6b86:	09 b9 0b b9 36 00    	or     DWORD PTR [rcx+0x36b90b],edi
    6b8c:	00 02                	add    BYTE PTR [rdx],al
    6b8e:	09 ba 0b cf 36 00    	or     DWORD PTR [rdx+0x36cf0b],edi
    6b94:	00 02                	add    BYTE PTR [rdx],al
    6b96:	09 bb 0b ef 36 00    	or     DWORD PTR [rbx+0x36ef0b],edi
    6b9c:	00 02                	add    BYTE PTR [rdx],al
    6b9e:	09 bc 0b 0f 37 00 00 	or     DWORD PTR [rbx+rcx*1+0x370f],edi
    6ba5:	02 09                	add    cl,BYTE PTR [rcx]
    6ba7:	bd 0b 2f 37 00       	mov    ebp,0x372f0b
    6bac:	00 02                	add    BYTE PTR [rdx],al
    6bae:	09 be 0b 5a 37 00    	or     DWORD PTR [rsi+0x375a0b],edi
    6bb4:	00 02                	add    BYTE PTR [rdx],al
    6bb6:	09 bf 0b 75 37 00    	or     DWORD PTR [rdi+0x37750b],edi
    6bbc:	00 02                	add    BYTE PTR [rdx],al
    6bbe:	09 c1                	or     ecx,eax
    6bc0:	0b 96 37 00 00 02    	or     edx,DWORD PTR [rsi+0x2000037]
    6bc6:	09 c3                	or     ebx,eax
    6bc8:	0b b2 37 00 00 02    	or     esi,DWORD PTR [rdx+0x2000037]
    6bce:	09 c4                	or     esp,eax
    6bd0:	0b d2                	or     edx,edx
    6bd2:	37                   	(bad)
    6bd3:	00 00                	add    BYTE PTR [rax],al
    6bd5:	02 09                	add    cl,BYTE PTR [rcx]
    6bd7:	c5 0b f7             	(bad)
    6bda:	37                   	(bad)
    6bdb:	00 00                	add    BYTE PTR [rax],al
    6bdd:	02 09                	add    cl,BYTE PTR [rcx]
    6bdf:	c6                   	(bad)
    6be0:	0b 1c 38             	or     ebx,DWORD PTR [rax+rdi*1]
    6be3:	00 00                	add    BYTE PTR [rax],al
    6be5:	02 09                	add    cl,BYTE PTR [rcx]
    6be7:	c7                   	(bad)
    6be8:	0b 3c 38             	or     edi,DWORD PTR [rax+rdi*1]
    6beb:	00 00                	add    BYTE PTR [rax],al
    6bed:	02 09                	add    cl,BYTE PTR [rcx]
    6bef:	c8 0b 53 38          	enter  0x530b,0x38
    6bf3:	00 00                	add    BYTE PTR [rax],al
    6bf5:	02 09                	add    cl,BYTE PTR [rcx]
    6bf7:	c9                   	leave
    6bf8:	0b 74 38 00          	or     esi,DWORD PTR [rax+rdi*1+0x0]
    6bfc:	00 02                	add    BYTE PTR [rdx],al
    6bfe:	09 ca                	or     edx,ecx
    6c00:	0b 94 38 00 00 02 09 	or     edx,DWORD PTR [rax+rdi*1+0x9020000]
    6c07:	cb                   	retf
    6c08:	0b b4 38 00 00 02 09 	or     esi,DWORD PTR [rax+rdi*1+0x9020000]
    6c0f:	cc                   	int3
    6c10:	0b d4                	or     edx,esp
    6c12:	38 00                	cmp    BYTE PTR [rax],al
    6c14:	00 02                	add    BYTE PTR [rdx],al
    6c16:	09 cd                	or     ebp,ecx
    6c18:	0b eb                	or     ebp,ebx
    6c1a:	38 00                	cmp    BYTE PTR [rax],al
    6c1c:	00 02                	add    BYTE PTR [rdx],al
    6c1e:	09 ce                	or     esi,ecx
    6c20:	0b 07                	or     eax,DWORD PTR [rdi]
    6c22:	39 00                	cmp    DWORD PTR [rax],eax
    6c24:	00 02                	add    BYTE PTR [rdx],al
    6c26:	09 ce                	or     esi,ecx
    6c28:	0b 26                	or     esp,DWORD PTR [rsi]
    6c2a:	39 00                	cmp    DWORD PTR [rax],eax
    6c2c:	00 02                	add    BYTE PTR [rdx],al
    6c2e:	09 cf                	or     edi,ecx
    6c30:	0b 45 39             	or     eax,DWORD PTR [rbp+0x39]
    6c33:	00 00                	add    BYTE PTR [rax],al
    6c35:	02 09                	add    cl,BYTE PTR [rcx]
    6c37:	cf                   	iret
    6c38:	0b 64 39 00          	or     esp,DWORD PTR [rcx+rdi*1+0x0]
    6c3c:	00 02                	add    BYTE PTR [rdx],al
    6c3e:	09 d0                	or     eax,edx
    6c40:	0b 83 39 00 00 02    	or     eax,DWORD PTR [rbx+0x2000039]
    6c46:	09 d0                	or     eax,edx
    6c48:	0b a2 39 00 00 02    	or     esp,DWORD PTR [rdx+0x2000039]
    6c4e:	09 d1                	or     ecx,edx
    6c50:	0b c1                	or     eax,ecx
    6c52:	39 00                	cmp    DWORD PTR [rax],eax
    6c54:	00 02                	add    BYTE PTR [rdx],al
    6c56:	09 d1                	or     ecx,edx
    6c58:	0b e0                	or     esp,eax
    6c5a:	39 00                	cmp    DWORD PTR [rax],eax
    6c5c:	00 02                	add    BYTE PTR [rdx],al
    6c5e:	09 d2                	or     edx,edx
    6c60:	0b ff                	or     edi,edi
    6c62:	39 00                	cmp    DWORD PTR [rax],eax
    6c64:	00 02                	add    BYTE PTR [rdx],al
    6c66:	09 d2                	or     edx,edx
    6c68:	0b 24 3a             	or     esp,DWORD PTR [rdx+rdi*1]
    6c6b:	00 00                	add    BYTE PTR [rax],al
    6c6d:	18 09                	sbb    BYTE PTR [rcx],cl
    6c6f:	0b 01                	or     eax,DWORD PTR [rcx]
    6c71:	16                   	(bad)
    6c72:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6c75:	00 18                	add    BYTE PTR [rax],bl
    6c77:	09 0c 01             	or     DWORD PTR [rcx+rax*1],ecx
    6c7a:	16                   	(bad)
    6c7b:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6c7e:	00 18                	add    BYTE PTR [rax],bl
    6c80:	09 0d 01 16 8a 3a    	or     DWORD PTR [rip+0x3a8a1601],ecx        # 3a8a8287 <_end+0x3a8a226f>
    6c86:	00 00                	add    BYTE PTR [rax],al
    6c88:	18 09                	sbb    BYTE PTR [rcx],cl
    6c8a:	1b 01                	sbb    eax,DWORD PTR [rcx]
    6c8c:	0e                   	(bad)
    6c8d:	96                   	xchg   esi,eax
    6c8e:	37                   	(bad)
    6c8f:	00 00                	add    BYTE PTR [rax],al
    6c91:	18 09                	sbb    BYTE PTR [rcx],cl
    6c93:	1e                   	(bad)
    6c94:	01 0e                	add    DWORD PTR [rsi],ecx
    6c96:	9b                   	fwait
    6c97:	34 00                	xor    al,0x0
    6c99:	00 18                	add    BYTE PTR [rax],bl
    6c9b:	09 21                	or     DWORD PTR [rcx],esp
    6c9d:	01 0e                	add    DWORD PTR [rsi],ecx
    6c9f:	e5 34                	in     eax,0x34
    6ca1:	00 00                	add    BYTE PTR [rax],al
    6ca3:	18 09                	sbb    BYTE PTR [rcx],cl
    6ca5:	24 01                	and    al,0x1
    6ca7:	0e                   	(bad)
    6ca8:	25 35 00 00 18       	and    eax,0x18000035
    6cad:	09 28                	or     DWORD PTR [rax],ebp
    6caf:	01 0e                	add    DWORD PTR [rsi],ecx
    6cb1:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    6cb4:	00 18                	add    BYTE PTR [rax],bl
    6cb6:	09 29                	or     DWORD PTR [rcx],ebp
    6cb8:	01 0e                	add    DWORD PTR [rsi],ecx
    6cba:	65 3a 00             	cmp    al,BYTE PTR gs:[rax]
    6cbd:	00 18                	add    BYTE PTR [rax],bl
    6cbf:	09 2a                	or     DWORD PTR [rdx],ebp
    6cc1:	01 0e                	add    DWORD PTR [rsi],ecx
    6cc3:	8a 3a                	mov    bh,BYTE PTR [rdx]
    6cc5:	00 00                	add    BYTE PTR [rax],al
    6cc7:	02 0a                	add    cl,BYTE PTR [rdx]
    6cc9:	35 0b af 3a 00       	xor    eax,0x3aaf0b
    6cce:	00 02                	add    BYTE PTR [rdx],al
    6cd0:	0a 36                	or     dh,BYTE PTR [rsi]
    6cd2:	0b f5                	or     esi,ebp
    6cd4:	3b 00                	cmp    eax,DWORD PTR [rax]
    6cd6:	00 02                	add    BYTE PTR [rdx],al
    6cd8:	0a 37                	or     dh,BYTE PTR [rdi]
    6cda:	0b 10                	or     edx,DWORD PTR [rax]
    6cdc:	3c 00                	cmp    al,0x0
    6cde:	00 02                	add    BYTE PTR [rdx],al
    6ce0:	0b 62 0b             	or     esp,DWORD PTR [rdx+0xb]
    6ce3:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    6ce6:	00 02                	add    BYTE PTR [rdx],al
    6ce8:	0b 63 0b             	or     esp,DWORD PTR [rbx+0xb]
    6ceb:	7d 2c                	jge    6d19 <_end+0xd01>
    6ced:	00 00                	add    BYTE PTR [rax],al
    6cef:	02 0b                	add    cl,BYTE PTR [rbx]
    6cf1:	65 0b 21             	or     esp,DWORD PTR gs:[rcx]
    6cf4:	3c 00                	cmp    al,0x0
    6cf6:	00 02                	add    BYTE PTR [rdx],al
    6cf8:	0b 66 0b             	or     esp,DWORD PTR [rsi+0xb]
    6cfb:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    6cfe:	00 02                	add    BYTE PTR [rdx],al
    6d00:	0b 67 0b             	or     esp,DWORD PTR [rdi+0xb]
    6d03:	49 3c 00             	rex.WB cmp al,0x0
    6d06:	00 02                	add    BYTE PTR [rdx],al
    6d08:	0b 68 0b             	or     ebp,DWORD PTR [rax+0xb]
    6d0b:	60                   	(bad)
    6d0c:	3c 00                	cmp    al,0x0
    6d0e:	00 02                	add    BYTE PTR [rdx],al
    6d10:	0b 69 0b             	or     ebp,DWORD PTR [rcx+0xb]
    6d13:	77 3c                	ja     6d51 <_end+0xd39>
    6d15:	00 00                	add    BYTE PTR [rax],al
    6d17:	02 0b                	add    cl,BYTE PTR [rbx]
    6d19:	6a 0b                	push   0xb
    6d1b:	8d 3c 00             	lea    edi,[rax+rax*1]
    6d1e:	00 02                	add    BYTE PTR [rdx],al
    6d20:	0b 6b 0b             	or     ebp,DWORD PTR [rbx+0xb]
    6d23:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6d24:	3c 00                	cmp    al,0x0
    6d26:	00 02                	add    BYTE PTR [rdx],al
    6d28:	0b 6c 0b c5          	or     ebp,DWORD PTR [rbx+rcx*1-0x3b]
    6d2c:	3c 00                	cmp    al,0x0
    6d2e:	00 02                	add    BYTE PTR [rdx],al
    6d30:	0b 6d 0b             	or     ebp,DWORD PTR [rbp+0xb]
    6d33:	e5 3c                	in     eax,0x3c
    6d35:	00 00                	add    BYTE PTR [rax],al
    6d37:	02 0b                	add    cl,BYTE PTR [rbx]
    6d39:	71 0b                	jno    6d46 <_end+0xd2e>
    6d3b:	01 3d 00 00 02 0b    	add    DWORD PTR [rip+0xb020000],edi        # b026d41 <_end+0xb020d29>
    6d41:	72 0b                	jb     6d4e <_end+0xd36>
    6d43:	26 3d 00 00 02 0b    	es cmp eax,0xb020000
    6d49:	74 0b                	je     6d56 <_end+0xd3e>
    6d4b:	47 3d 00 00 02 0b    	rex.RXB cmp eax,0xb020000
    6d51:	75 0b                	jne    6d5e <_end+0xd46>
    6d53:	68 3d 00 00 02       	push   0x200003d
    6d58:	0b 76 0b             	or     esi,DWORD PTR [rsi+0xb]
    6d5b:	89 3d 00 00 02 0b    	mov    DWORD PTR [rip+0xb020000],edi        # b026d61 <_end+0xb020d49>
    6d61:	78 0b                	js     6d6e <_end+0xd56>
    6d63:	a0 3d 00 00 02 0b 79 	movabs al,ds:0xb70b790b0200003d
    6d6a:	0b b7 
    6d6c:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d71:	7e 0b                	jle    6d7e <_end+0xd66>
    6d73:	c3                   	ret
    6d74:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d79:	83 0b d5             	or     DWORD PTR [rbx],0xffffffd5
    6d7c:	3d 00 00 02 0b       	cmp    eax,0xb020000
    6d81:	84 0b                	test   BYTE PTR [rbx],cl
    6d83:	eb 3d                	jmp    6dc2 <_end+0xdaa>
    6d85:	00 00                	add    BYTE PTR [rax],al
    6d87:	02 0b                	add    cl,BYTE PTR [rbx]
    6d89:	85 0b                	test   DWORD PTR [rbx],ecx
    6d8b:	06                   	(bad)
    6d8c:	3e 00 00             	ds add BYTE PTR [rax],al
    6d8f:	02 0b                	add    cl,BYTE PTR [rbx]
    6d91:	87 0b                	xchg   DWORD PTR [rbx],ecx
    6d93:	18 3e                	sbb    BYTE PTR [rsi],bh
    6d95:	00 00                	add    BYTE PTR [rax],al
    6d97:	02 0b                	add    cl,BYTE PTR [rbx]
    6d99:	88 0b                	mov    BYTE PTR [rbx],cl
    6d9b:	2f                   	(bad)
    6d9c:	3e 00 00             	ds add BYTE PTR [rax],al
    6d9f:	02 0b                	add    cl,BYTE PTR [rbx]
    6da1:	8b 0b                	mov    ecx,DWORD PTR [rbx]
    6da3:	55                   	push   rbp
    6da4:	3e 00 00             	ds add BYTE PTR [rax],al
    6da7:	02 0b                	add    cl,BYTE PTR [rbx]
    6da9:	8d 0b                	lea    ecx,[rbx]
    6dab:	61                   	(bad)
    6dac:	3e 00 00             	ds add BYTE PTR [rax],al
    6daf:	02 0b                	add    cl,BYTE PTR [rbx]
    6db1:	8f                   	(bad)
    6db2:	0b 77 3e             	or     esi,DWORD PTR [rdi+0x3e]
    6db5:	00 00                	add    BYTE PTR [rax],al
    6db7:	50                   	push   rax
    6db8:	c4                   	(bad)
    6db9:	29 00                	sub    DWORD PTR [rax],eax
    6dbb:	00 11                	add    BYTE PTR [rcx],dl
    6dbd:	55                   	push   rbp
    6dbe:	01 41 02             	add    DWORD PTR [rcx+0x2],eax
    6dc1:	0c 3a                	or     al,0x3a
    6dc3:	0b 11                	or     edx,DWORD PTR [rcx]
    6dc5:	32 00                	xor    al,BYTE PTR [rax]
    6dc7:	00 68 70             	add    BYTE PTR [rax+0x70],ch
    6dca:	6d                   	ins    DWORD PTR es:[rdi],dx
    6dcb:	72 00                	jb     6dcd <_end+0xdb5>
    6dcd:	3c 35                	cmp    al,0x35
    6dcf:	0b 02                	or     eax,DWORD PTR [rdx]
    6dd1:	0d 33 0b fa 23       	or     eax,0x23fa0b33
    6dd6:	00 00                	add    BYTE PTR [rax],al
    6dd8:	02 0d 34 0b 06 24    	add    cl,BYTE PTR [rip+0x24060b34]        # 24067912 <_end+0x240618fa>
    6dde:	00 00                	add    BYTE PTR [rax],al
    6de0:	02 0d 35 0b 12 24    	add    cl,BYTE PTR [rip+0x24120b35]        # 2412791b <_end+0x24121903>
    6de6:	00 00                	add    BYTE PTR [rax],al
    6de8:	02 0d 36 0b 1e 24    	add    cl,BYTE PTR [rip+0x241e0b36]        # 241e7924 <_end+0x241e190c>
    6dee:	00 00                	add    BYTE PTR [rax],al
    6df0:	02 0d 38 0b 2d 2d    	add    cl,BYTE PTR [rip+0x2d2d0b38]        # 2d2d792e <_end+0x2d2d1916>
    6df6:	00 00                	add    BYTE PTR [rax],al
    6df8:	02 0d 39 0b 39 2d    	add    cl,BYTE PTR [rip+0x2d390b39]        # 2d397937 <_end+0x2d39191f>
    6dfe:	00 00                	add    BYTE PTR [rax],al
    6e00:	02 0d 3a 0b 45 2d    	add    cl,BYTE PTR [rip+0x2d450b3a]        # 2d457940 <_end+0x2d451928>
    6e06:	00 00                	add    BYTE PTR [rax],al
    6e08:	02 0d 3b 0b 51 2d    	add    cl,BYTE PTR [rip+0x2d510b3b]        # 2d517949 <_end+0x2d511931>
    6e0e:	00 00                	add    BYTE PTR [rax],al
    6e10:	02 0d 3d 0b cd 2c    	add    cl,BYTE PTR [rip+0x2ccd0b3d]        # 2ccd7953 <_end+0x2ccd193b>
    6e16:	00 00                	add    BYTE PTR [rax],al
    6e18:	02 0d 3e 0b d9 2c    	add    cl,BYTE PTR [rip+0x2cd90b3e]        # 2cd9795c <_end+0x2cd91944>
    6e1e:	00 00                	add    BYTE PTR [rax],al
    6e20:	02 0d 3f 0b e5 2c    	add    cl,BYTE PTR [rip+0x2ce50b3f]        # 2ce57965 <_end+0x2ce5194d>
    6e26:	00 00                	add    BYTE PTR [rax],al
    6e28:	02 0d 40 0b f1 2c    	add    cl,BYTE PTR [rip+0x2cf10b40]        # 2cf1796e <_end+0x2cf11956>
    6e2e:	00 00                	add    BYTE PTR [rax],al
    6e30:	02 0d 42 0b a5 2d    	add    cl,BYTE PTR [rip+0x2da50b42]        # 2da57978 <_end+0x2da51960>
    6e36:	00 00                	add    BYTE PTR [rax],al
    6e38:	02 0d 43 0b 8d 2d    	add    cl,BYTE PTR [rip+0x2d8d0b43]        # 2d8d7981 <_end+0x2d8d1969>
    6e3e:	00 00                	add    BYTE PTR [rax],al
    6e40:	02 0d 45 0b 98 2c    	add    cl,BYTE PTR [rip+0x2c980b45]        # 2c98798b <_end+0x2c981973>
    6e46:	00 00                	add    BYTE PTR [rax],al
    6e48:	02 0d 46 0b a4 2c    	add    cl,BYTE PTR [rip+0x2ca40b46]        # 2ca47994 <_end+0x2ca4197c>
    6e4e:	00 00                	add    BYTE PTR [rax],al
    6e50:	02 0d 47 0b b0 2c    	add    cl,BYTE PTR [rip+0x2cb00b47]        # 2cb0799d <_end+0x2cb01985>
    6e56:	00 00                	add    BYTE PTR [rax],al
    6e58:	02 0d 48 0b c1 2c    	add    cl,BYTE PTR [rip+0x2cc10b48]        # 2cc179a6 <_end+0x2cc1198e>
    6e5e:	00 00                	add    BYTE PTR [rax],al
    6e60:	02 0d 4a 0b 5d 2d    	add    cl,BYTE PTR [rip+0x2d5d0b4a]        # 2d5d79b0 <_end+0x2d5d1998>
    6e66:	00 00                	add    BYTE PTR [rax],al
    6e68:	02 0d 4b 0b 69 2d    	add    cl,BYTE PTR [rip+0x2d690b4b]        # 2d6979b9 <_end+0x2d6919a1>
    6e6e:	00 00                	add    BYTE PTR [rax],al
    6e70:	02 0d 4c 0b 75 2d    	add    cl,BYTE PTR [rip+0x2d750b4c]        # 2d7579c2 <_end+0x2d7519aa>
    6e76:	00 00                	add    BYTE PTR [rax],al
    6e78:	02 0d 4d 0b 81 2d    	add    cl,BYTE PTR [rip+0x2d810b4d]        # 2d8179cb <_end+0x2d8119b3>
    6e7e:	00 00                	add    BYTE PTR [rax],al
    6e80:	02 0d 4f 0b fd 2c    	add    cl,BYTE PTR [rip+0x2cfd0b4f]        # 2cfd79d5 <_end+0x2cfd19bd>
    6e86:	00 00                	add    BYTE PTR [rax],al
    6e88:	02 0d 50 0b 09 2d    	add    cl,BYTE PTR [rip+0x2d090b50]        # 2d0979de <_end+0x2d0919c6>
    6e8e:	00 00                	add    BYTE PTR [rax],al
    6e90:	02 0d 51 0b 15 2d    	add    cl,BYTE PTR [rip+0x2d150b51]        # 2d1579e7 <_end+0x2d1519cf>
    6e96:	00 00                	add    BYTE PTR [rax],al
    6e98:	02 0d 52 0b 21 2d    	add    cl,BYTE PTR [rip+0x2d210b52]        # 2d2179f0 <_end+0x2d2119d8>
    6e9e:	00 00                	add    BYTE PTR [rax],al
    6ea0:	02 0d 54 0b b6 2d    	add    cl,BYTE PTR [rip+0x2db60b54]        # 2db679fa <_end+0x2db619e2>
    6ea6:	00 00                	add    BYTE PTR [rax],al
    6ea8:	02 0d 55 0b 99 2d    	add    cl,BYTE PTR [rip+0x2d990b55]        # 2d997a03 <_end+0x2d9919eb>
    6eae:	00 00                	add    BYTE PTR [rax],al
    6eb0:	33 6d 32             	xor    ebp,DWORD PTR [rbp+0x32]
    6eb3:	00 00                	add    BYTE PTR [rax],al
    6eb5:	05 91 0d a0 17       	add    eax,0x17a00d91
    6eba:	00 00                	add    BYTE PTR [rax],al
    6ebc:	3e 29 19             	ds sub DWORD PTR [rcx],ebx
    6ebf:	00 00                	add    BYTE PTR [rax],al
    6ec1:	f1                   	int1
    6ec2:	20 00                	and    BYTE PTR [rax],al
    6ec4:	00 3e                	add    BYTE PTR [rsi],bh
    6ec6:	29 19                	sub    DWORD PTR [rcx],ebx
    6ec8:	00 00                	add    BYTE PTR [rax],al
    6eca:	f1                   	int1
    6ecb:	20 00                	and    BYTE PTR [rax],al
    6ecd:	00 3e                	add    BYTE PTR [rsi],bh
    6ecf:	29 19                	sub    DWORD PTR [rcx],ebx
    6ed1:	00 00                	add    BYTE PTR [rax],al
    6ed3:	f1                   	int1
    6ed4:	20 00                	and    BYTE PTR [rax],al
    6ed6:	00 00                	add    BYTE PTR [rax],al
    6ed8:	02 0f                	add    cl,BYTE PTR [rdi]
    6eda:	3c 0b                	cmp    al,0xb
    6edc:	dd 23                	frstor [rbx]
    6ede:	00 00                	add    BYTE PTR [rax],al
    6ee0:	02 0f                	add    cl,BYTE PTR [rdi]
    6ee2:	3d 0b e9 23 00       	cmp    eax,0x23e90b
    6ee7:	00 02                	add    BYTE PTR [rdx],al
    6ee9:	0f 3e                	(bad)
    6eeb:	0b 17                	or     edx,DWORD PTR [rdi]
    6eed:	36 00 00             	ss add BYTE PTR [rax],al
    6ef0:	02 0f                	add    cl,BYTE PTR [rdi]
    6ef2:	40 0b b7 3e 00 00 02 	rex or esi,DWORD PTR [rdi+0x200003e]
    6ef9:	0f 41 0b             	cmovno ecx,DWORD PTR [rbx]
    6efc:	c3                   	ret
    6efd:	3e 00 00             	ds add BYTE PTR [rax],al
    6f00:	02 0f                	add    cl,BYTE PTR [rdi]
    6f02:	42 0b de             	rex.X or ebx,esi
    6f05:	3e 00 00             	ds add BYTE PTR [rax],al
    6f08:	02 0f                	add    cl,BYTE PTR [rdi]
    6f0a:	43 0b f9             	rex.XB or edi,r9d
    6f0d:	3e 00 00             	ds add BYTE PTR [rax],al
    6f10:	02 0f                	add    cl,BYTE PTR [rdi]
    6f12:	44 0b 14 3f          	or     r10d,DWORD PTR [rdi+rdi*1]
    6f16:	00 00                	add    BYTE PTR [rax],al
    6f18:	02 0f                	add    cl,BYTE PTR [rdi]
    6f1a:	45 0b 2a             	or     r13d,DWORD PTR [r10]
    6f1d:	3f                   	(bad)
    6f1e:	00 00                	add    BYTE PTR [rax],al
    6f20:	02 0f                	add    cl,BYTE PTR [rdi]
    6f22:	46 0b 45 3f          	rex.RX or r8d,DWORD PTR [rbp+0x3f]
    6f26:	00 00                	add    BYTE PTR [rax],al
    6f28:	02 0f                	add    cl,BYTE PTR [rdi]
    6f2a:	47 0b 5b 3f          	rex.RXB or r11d,DWORD PTR [r11+0x3f]
    6f2e:	00 00                	add    BYTE PTR [rax],al
    6f30:	02 0f                	add    cl,BYTE PTR [rdi]
    6f32:	4f 0b 2a             	rex.WRXB or r13,QWORD PTR [r10]
    6f35:	24 00                	and    al,0x0
    6f37:	00 02                	add    BYTE PTR [rdx],al
    6f39:	0f                   	movmskps ecx,(bad)
    6f3a:	50                   	push   rax
    6f3b:	0b 71 3f             	or     esi,DWORD PTR [rcx+0x3f]
    6f3e:	00 00                	add    BYTE PTR [rax],al
    6f40:	33 25 13 00 00 04    	xor    esp,DWORD PTR [rip+0x4000013]        # 4006f59 <_end+0x4000f41>
    6f46:	37                   	(bad)
    6f47:	0d 94 1f 00 00       	or     eax,0x1f94
    6f4c:	3f                   	(bad)
    6f4d:	4d                   	rex.WRB
    6f4e:	2e 00 00             	cs add BYTE PTR [rax],al
    6f51:	ff 01                	inc    DWORD PTR [rcx]
    6f53:	94                   	xchg   esp,eax
    6f54:	1a 00                	sbb    al,BYTE PTR [rax]
    6f56:	00 04 1f             	add    BYTE PTR [rdi+rbx*1],al
    6f59:	0e                   	(bad)
    6f5a:	00 00                	add    BYTE PTR [rax],al
    6f5c:	04 0b                	add    al,0xb
    6f5e:	02 02                	add    al,BYTE PTR [rdx]
    6f60:	0a 2b                	or     ch,BYTE PTR [rbx]
    6f62:	00 00                	add    BYTE PTR [rax],al
    6f64:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6f65:	2d 00 00 3f 18       	sub    eax,0x183f0000
    6f6a:	00 00                	add    BYTE PTR [rax],al
    6f6c:	01 a5 2d 00 00 01    	add    DWORD PTR [rbp+0x100002d],esp
    6f72:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    6f73:	2d 00 00 00 2b       	sub    eax,0x2b000000
    6f78:	66 0d 00 00          	or     ax,0x0
    6f7c:	34 02                	xor    al,0x2
    6f7e:	0c af                	or     al,0xaf
    6f80:	17                   	(bad)
    6f81:	00 00                	add    BYTE PTR [rax],al
    6f83:	53                   	push   rbx
    6f84:	18 00                	sbb    BYTE PTR [rax],al
    6f86:	00 59 18             	add    BYTE PTR [rcx+0x18],bl
    6f89:	00 00                	add    BYTE PTR [rax],al
    6f8b:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    6f91:	2b 66 0d             	sub    esp,DWORD PTR [rsi+0xd]
    6f94:	00 00                	add    BYTE PTR [rax],al
    6f96:	36 02 02             	ss add al,BYTE PTR [rdx]
    6f99:	d5 1a 00 00          	{rex2 0x1a} add BYTE PTR [r16],al
    6f9d:	6d                   	ins    DWORD PTR es:[rdi],dx
    6f9e:	18 00                	sbb    BYTE PTR [rax],al
    6fa0:	00 78 18             	add    BYTE PTR [rax+0x18],bh
    6fa3:	00 00                	add    BYTE PTR [rax],al
    6fa5:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    6fab:	9c                   	pushf
    6fac:	3f                   	(bad)
    6fad:	00 00                	add    BYTE PTR [rax],al
    6faf:	00 2b                	add    BYTE PTR [rbx],ch
    6fb1:	7a 0d                	jp     6fc0 <_end+0xfa8>
    6fb3:	00 00                	add    BYTE PTR [rax],al
    6fb5:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    6fb8:	98                   	cwde
    6fb9:	12 00                	adc    al,BYTE PTR [rax]
    6fbb:	00 8c 18 00 00 97 18 	add    BYTE PTR [rax+rbx*1+0x18970000],cl
    6fc2:	00 00                	add    BYTE PTR [rax],al
    6fc4:	10 92 3f 00 00 10    	adc    BYTE PTR [rdx+0x1000003f],dl
    6fca:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    6fcb:	21 00                	and    DWORD PTR [rax],eax
    6fcd:	00 00                	add    BYTE PTR [rax],al
    6fcf:	51                   	push   rcx
    6fd0:	f8                   	clc
    6fd1:	14 00                	adc    al,0x0
    6fd3:	00 89 32 00 00 a1    	add    BYTE PTR [rcx-0x5effffce],cl
    6fd9:	3f                   	(bad)
    6fda:	00 00                	add    BYTE PTR [rax],al
    6fdc:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6fdd:	18 00                	sbb    BYTE PTR [rax],al
    6fdf:	00 b7 18 00 00 10    	add    BYTE PTR [rdi+0x10000018],dh
    6fe5:	92                   	xchg   edx,eax
    6fe6:	3f                   	(bad)
    6fe7:	00 00                	add    BYTE PTR [rax],al
    6fe9:	01 9c 3f 00 00 00 52 	add    DWORD PTR [rdi+rdi*1+0x52000000],ebx
    6ff0:	72 65                	jb     7057 <_end+0x103f>
    6ff2:	70 00                	jo     6ff4 <_end+0xfdc>
    6ff4:	b2 21                	mov    dl,0x21
    6ff6:	00 00                	add    BYTE PTR [rax],al
    6ff8:	13 b7 18 00 00 14    	adc    esi,DWORD PTR [rdi+0x14000018]
    6ffe:	f4                   	hlt
    6fff:	24 00                	and    al,0x0
    7001:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    7004:	11 1b                	adc    DWORD PTR [rbx],ebx
    7006:	00 00                	add    BYTE PTR [rax],al
    7008:	b7 18                	mov    bh,0x18
    700a:	00 00                	add    BYTE PTR [rax],al
    700c:	dc 18                	fcomp  QWORD PTR [rax]
    700e:	00 00                	add    BYTE PTR [rax],al
    7010:	e2 18                	loop   702a <_end+0x1012>
    7012:	00 00                	add    BYTE PTR [rax],al
    7014:	10 a6 3f 00 00 00    	adc    BYTE PTR [rsi+0x3f],ah
    701a:	14 5d                	adc    al,0x5d
    701c:	14 00                	adc    al,0x0
    701e:	00 53 02             	add    BYTE PTR [rbx+0x2],dl
    7021:	55                   	push   rbp
    7022:	2f                   	(bad)
    7023:	00 00                	add    BYTE PTR [rax],al
    7025:	14 18                	adc    al,0x18
    7027:	00 00                	add    BYTE PTR [rax],al
    7029:	f9                   	stc
    702a:	18 00                	sbb    BYTE PTR [rax],al
    702c:	00 ff                	add    bh,bh
    702e:	18 00                	sbb    BYTE PTR [rax],al
    7030:	00 10                	add    BYTE PTR [rax],dl
    7032:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7033:	3f                   	(bad)
    7034:	00 00                	add    BYTE PTR [rax],al
    7036:	00 14 db             	add    BYTE PTR [rbx+rbx*8],dl
    7039:	18 00                	sbb    BYTE PTR [rax],al
    703b:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    703e:	1d 1d 00 00 14       	sbb    eax,0x1400001d
    7043:	18 00                	sbb    BYTE PTR [rax],al
    7045:	00 16                	add    BYTE PTR [rsi],dl
    7047:	19 00                	sbb    DWORD PTR [rax],eax
    7049:	00 1c 19             	add    BYTE PTR [rcx+rbx*1],bl
    704c:	00 00                	add    BYTE PTR [rax],al
    704e:	10 a6 3f 00 00 00    	adc    BYTE PTR [rsi+0x3f],ah
    7054:	14 7c                	adc    al,0x7c
    7056:	2e 00 00             	cs add BYTE PTR [rax],al
    7059:	5b                   	pop    rbx
    705a:	02 d3                	add    dl,bl
    705c:	11 00                	adc    DWORD PTR [rax],eax
    705e:	00 a1 3f 00 00 33    	add    BYTE PTR [rcx+0x3300003f],ah
    7064:	19 00                	sbb    DWORD PTR [rax],eax
    7066:	00 39                	add    BYTE PTR [rcx],bh
    7068:	19 00                	sbb    DWORD PTR [rax],eax
    706a:	00 10                	add    BYTE PTR [rax],dl
    706c:	92                   	xchg   edx,eax
    706d:	3f                   	(bad)
    706e:	00 00                	add    BYTE PTR [rax],al
    7070:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    7073:	2e 00 00             	cs add BYTE PTR [rax],al
    7076:	62 02 6c 11 00       	(bad)
    707b:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    707e:	00 00                	add    BYTE PTR [rax],al
    7080:	50                   	push   rax
    7081:	19 00                	sbb    DWORD PTR [rax],eax
    7083:	00 5b 19             	add    BYTE PTR [rbx+0x19],bl
    7086:	00 00                	add    BYTE PTR [rax],al
    7088:	10 92 3f 00 00 01    	adc    BYTE PTR [rdx+0x100003f],dl
    708e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    708f:	21 00                	and    DWORD PTR [rax],eax
    7091:	00 00                	add    BYTE PTR [rax],al
    7093:	14 de                	adc    al,0xde
    7095:	30 00                	xor    BYTE PTR [rax],al
    7097:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    709a:	a3 0b 00 00 a1 3f 00 	movabs ds:0x7200003fa100000b,eax
    70a1:	00 72 
    70a3:	19 00                	sbb    DWORD PTR [rax],eax
    70a5:	00 78 19             	add    BYTE PTR [rax+0x19],bh
    70a8:	00 00                	add    BYTE PTR [rax],al
    70aa:	10 92 3f 00 00 00    	adc    BYTE PTR [rdx+0x3f],dl
    70b0:	14 de                	adc    al,0xde
    70b2:	30 00                	xor    BYTE PTR [rax],al
    70b4:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    70b7:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    70b8:	34 00                	xor    al,0x0
    70ba:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    70bd:	00 00                	add    BYTE PTR [rax],al
    70bf:	8f                   	(bad)
    70c0:	19 00                	sbb    DWORD PTR [rax],eax
    70c2:	00 9a 19 00 00 10    	add    BYTE PTR [rdx+0x10000019],bl
    70c8:	92                   	xchg   edx,eax
    70c9:	3f                   	(bad)
    70ca:	00 00                	add    BYTE PTR [rax],al
    70cc:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    70d2:	14 0c                	adc    al,0xc
    70d4:	2a 00                	sub    al,BYTE PTR [rax]
    70d6:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    70d9:	79 1f                	jns    70fa <_end+0x10e2>
    70db:	00 00                	add    BYTE PTR [rax],al
    70dd:	a1 3f 00 00 b1 19 00 	movabs eax,ds:0xbc000019b100003f
    70e4:	00 bc 
    70e6:	19 00                	sbb    DWORD PTR [rax],eax
    70e8:	00 10                	add    BYTE PTR [rax],dl
    70ea:	92                   	xchg   edx,eax
    70eb:	3f                   	(bad)
    70ec:	00 00                	add    BYTE PTR [rax],al
    70ee:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    70f5:	f9                   	stc
    70f6:	30 00                	xor    BYTE PTR [rax],al
    70f8:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    70fb:	71 0f                	jno    710c <_end+0x10f4>
    70fd:	00 00                	add    BYTE PTR [rax],al
    70ff:	a1 3f 00 00 d3 19 00 	movabs eax,ds:0xde000019d300003f
    7106:	00 de 
    7108:	19 00                	sbb    DWORD PTR [rax],eax
    710a:	00 10                	add    BYTE PTR [rax],dl
    710c:	92                   	xchg   edx,eax
    710d:	3f                   	(bad)
    710e:	00 00                	add    BYTE PTR [rax],al
    7110:	01 9c 3f 00 00 00 14 	add    DWORD PTR [rdi+rdi*1+0x14000000],ebx
    7117:	ab                   	stos   DWORD PTR es:[rdi],eax
    7118:	2d 00 00 7f 02       	sub    eax,0x27f0000
    711d:	13 0d 00 00 a1 3f    	adc    ecx,DWORD PTR [rip+0x3fa10000]        # 3fa17123 <_end+0x3fa1110b>
    7123:	00 00                	add    BYTE PTR [rax],al
    7125:	f5                   	cmc
    7126:	19 00                	sbb    DWORD PTR [rax],eax
    7128:	00 00                	add    BYTE PTR [rax],al
    712a:	1a 00                	sbb    al,BYTE PTR [rax]
    712c:	00 10                	add    BYTE PTR [rax],dl
    712e:	92                   	xchg   edx,eax
    712f:	3f                   	(bad)
    7130:	00 00                	add    BYTE PTR [rax],al
    7132:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    7138:	14 d2                	adc    al,0xd2
    713a:	33 00                	xor    eax,DWORD PTR [rax]
    713c:	00 86 02 98 33 00    	add    BYTE PTR [rsi+0x339802],al
    7142:	00 a1 3f 00 00 17    	add    BYTE PTR [rcx+0x1700003f],ah
    7148:	1a 00                	sbb    al,BYTE PTR [rax]
    714a:	00 22                	add    BYTE PTR [rdx],ah
    714c:	1a 00                	sbb    al,BYTE PTR [rax]
    714e:	00 10                	add    BYTE PTR [rax],dl
    7150:	92                   	xchg   edx,eax
    7151:	3f                   	(bad)
    7152:	00 00                	add    BYTE PTR [rax],al
    7154:	01 b0 3f 00 00 00    	add    DWORD PTR [rax+0x3f],esi
    715a:	53                   	push   rbx
    715b:	b8 23 00 00 ed       	mov    eax,0xed000023
    7160:	15 00 00 14 18       	adc    eax,0x18140000
    7165:	00 00                	add    BYTE PTR [rax],al
    7167:	2c 6d                	sub    al,0x6d
    7169:	69 6e 00 a5 02 0b 0c 	imul   ebp,DWORD PTR [rsi+0x0],0xc0b02a5
    7170:	00 00                	add    BYTE PTR [rax],al
    7172:	14 18                	adc    al,0x18
    7174:	00 00                	add    BYTE PTR [rax],al
    7176:	2c 6d                	sub    al,0x6d
    7178:	61                   	(bad)
    7179:	78 00                	js     717b <_end+0x1163>
    717b:	a9 02 f6 2f 00       	test   eax,0x2ff602
    7180:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    7183:	00 00                	add    BYTE PTR [rax],al
    7185:	40 5f                	rex pop rdi
    7187:	5f                   	pop    rdi
    7188:	72 00                	jb     718a <_end+0x1172>
    718a:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    718b:	02 06                	add    al,BYTE PTR [rsi]
    718d:	b7 18                	mov    bh,0x18
    718f:	00 00                	add    BYTE PTR [rax],al
    7191:	41 ca 2e 00          	rex.B retf 0x2e
    7195:	00 3d 02 17 48 2b    	add    BYTE PTR [rip+0x2b481702],bh        # 2b48889d <_end+0x2b482885>
    719b:	00 00                	add    BYTE PTR [rax],al
    719d:	76 1a                	jbe    71b9 <_end+0x11a1>
    719f:	00 00                	add    BYTE PTR [rax],al
    71a1:	81 1a 00 00 11 09    	sbb    DWORD PTR [rdx],0x9110000
    71a7:	19 00                	sbb    DWORD PTR [rax],eax
    71a9:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    71af:	92                   	xchg   edx,eax
    71b0:	3f                   	(bad)
    71b1:	00 00                	add    BYTE PTR [rax],al
    71b3:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    71b6:	00 00                	add    BYTE PTR [rax],al
    71b8:	00 11                	add    BYTE PTR [rcx],dl
    71ba:	84 32                	test   BYTE PTR [rdx],dh
    71bc:	00 00                	add    BYTE PTR [rax],al
    71be:	b2 21                	mov    dl,0x21
    71c0:	00 00                	add    BYTE PTR [rax],al
    71c2:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    71c5:	00 00                	add    BYTE PTR [rax],al
    71c7:	94                   	xchg   esp,eax
    71c8:	1f                   	(bad)
    71c9:	00 00                	add    BYTE PTR [rax],al
    71cb:	00 13                	add    BYTE PTR [rbx],dl
    71cd:	14 18                	adc    al,0x18
    71cf:	00 00                	add    BYTE PTR [rax],al
    71d1:	69 5f 56 32 00 04 c1 	imul   ebx,DWORD PTR [rdi+0x56],0xc1040032
    71d8:	04 01                	add    al,0x1
    71da:	e3 1a                	jrcxz  71f6 <_end+0x11de>
    71dc:	00 00                	add    BYTE PTR [rax],al
    71de:	6a bc                	push   0xffffffffffffffbc
    71e0:	10 00                	adc    BYTE PTR [rax],al
    71e2:	00 01                	add    BYTE PTR [rcx],al
    71e4:	04 f3                	add    al,0xf3
    71e6:	04 0c                	add    al,0xc
    71e8:	6b 6a 1b 00          	imul   ebp,DWORD PTR [rdx+0x1b],0x0
    71ec:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    71ef:	04 1d                	add    al,0x1d
    71f1:	85 17                	test   DWORD PTR [rdi],edx
    71f3:	00 00                	add    BYTE PTR [rax],al
    71f5:	f1                   	int1
    71f6:	20 00                	and    BYTE PTR [rax],al
    71f8:	00 01                	add    BYTE PTR [rcx],al
    71fa:	01 42 6f             	add    DWORD PTR [rdx+0x6f],eax
    71fd:	0d 00 00 04 f8       	or     eax,0xf8040000
    7202:	04 3a                	add    al,0x3a
    7204:	e3 1a                	jrcxz  7220 <_end+0x1208>
    7206:	00 00                	add    BYTE PTR [rax],al
    7208:	6c                   	ins    BYTE PTR es:[rdi],dx
    7209:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    720a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    720b:	77 00                	ja     720d <_end+0x11f5>
    720d:	04 fd                	add    al,0xfd
    720f:	04 07                	add    al,0x7
    7211:	18 33                	sbb    BYTE PTR [rbx],dh
    7213:	00 00                	add    BYTE PTR [rax],al
    7215:	c3                   	ret
    7216:	1a 00                	sbb    al,BYTE PTR [rax]
    7218:	00 00                	add    BYTE PTR [rax],al
    721a:	00 3f                	add    BYTE PTR [rdi],bh
    721c:	47 25 00 00 9a 03    	rex.RXB and eax,0x39a0000
    7222:	da 1b                	ficomp DWORD PTR [rbx]
    7224:	00 00                	add    BYTE PTR [rax],al
    7226:	6d                   	ins    DWORD PTR es:[rdi],dx
    7227:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7228:	0d 00 00 04 a5       	or     eax,0xa5040000
    722d:	03 0c ad 0f 00 00 01 	add    ecx,DWORD PTR [rbp*4+0x100000f]
    7234:	04 1b                	add    al,0x1b
    7236:	00 00                	add    BYTE PTR [rax],al
    7238:	0a 1b                	or     bl,BYTE PTR [rbx]
    723a:	00 00                	add    BYTE PTR [rax],al
    723c:	10 e7                	adc    bh,ah
    723e:	41 00 00             	add    BYTE PTR [r8],al
    7241:	00 41 6f             	add    BYTE PTR [rcx+0x6f],al
    7244:	0d 00 00 a8 03       	or     eax,0x3a80000
    7249:	15 89 0c 00 00       	adc    eax,0xc89
    724e:	1e                   	(bad)
    724f:	1b 00                	sbb    eax,DWORD PTR [rax]
    7251:	00 29                	add    BYTE PTR [rcx],ch
    7253:	1b 00                	sbb    eax,DWORD PTR [rax]
    7255:	00 10                	add    BYTE PTR [rax],dl
    7257:	e7 41                	out    0x41,eax
    7259:	00 00                	add    BYTE PTR [rax],al
    725b:	01 ec                	add    esp,ebp
    725d:	41 00 00             	add    BYTE PTR [r8],al
    7260:	00 6e 66             	add    BYTE PTR [rsi+0x66],ch
    7263:	0d 00 00 04 a1       	or     eax,0xa1040000
    7268:	03 14 14             	add    edx,DWORD PTR [rsp+rdx*1]
    726b:	18 00                	sbb    BYTE PTR [rax],al
    726d:	00 01                	add    BYTE PTR [rcx],al
    726f:	13 29                	adc    ebp,DWORD PTR [rcx]
    7271:	1b 00                	sbb    eax,DWORD PTR [rax]
    7273:	00 14 a7             	add    BYTE PTR [rdi+riz*4],dl
    7276:	23 00                	and    eax,DWORD PTR [rax]
    7278:	00 b5 03 b6 2c 00    	add    BYTE PTR [rbp+0x2cb603],dh
    727e:	00 29                	add    BYTE PTR [rcx],ch
    7280:	1b 00                	sbb    eax,DWORD PTR [rax]
    7282:	00 53 1b             	add    BYTE PTR [rbx+0x1b],dl
    7285:	00 00                	add    BYTE PTR [rax],al
    7287:	59                   	pop    rcx
    7288:	1b 00                	sbb    eax,DWORD PTR [rax]
    728a:	00 10                	add    BYTE PTR [rax],dl
    728c:	f1                   	int1
    728d:	41 00 00             	add    BYTE PTR [r8],al
    7290:	00 14 0c             	add    BYTE PTR [rsp+rcx*1],dl
    7293:	2a 00                	sub    al,BYTE PTR [rax]
    7295:	00 d2                	add    dl,dl
    7297:	03 08                	add    ecx,DWORD PTR [rax]
    7299:	11 00                	adc    DWORD PTR [rax],eax
    729b:	00 fb                	add    bl,bh
    729d:	41 00 00             	add    BYTE PTR [r8],al
    72a0:	70 1b                	jo     72bd <_end+0x12a5>
    72a2:	00 00                	add    BYTE PTR [rax],al
    72a4:	7b 1b                	jnp    72c1 <_end+0x12a9>
    72a6:	00 00                	add    BYTE PTR [rax],al
    72a8:	10 e7                	adc    bh,ah
    72aa:	41 00 00             	add    BYTE PTR [r8],al
    72ad:	01 ec                	add    esp,ebp
    72af:	41 00 00             	add    BYTE PTR [r8],al
    72b2:	00 14 f9             	add    BYTE PTR [rcx+rdi*8],dl
    72b5:	30 00                	xor    BYTE PTR [rax],al
    72b7:	00 d9                	add    cl,bl
    72b9:	03 60 0e             	add    esp,DWORD PTR [rax+0xe]
    72bc:	00 00                	add    BYTE PTR [rax],al
    72be:	fb                   	sti
    72bf:	41 00 00             	add    BYTE PTR [r8],al
    72c2:	92                   	xchg   edx,eax
    72c3:	1b 00                	sbb    eax,DWORD PTR [rax]
    72c5:	00 9d 1b 00 00 10    	add    BYTE PTR [rbp+0x1000001b],bl
    72cb:	e7 41                	out    0x41,eax
    72cd:	00 00                	add    BYTE PTR [rax],al
    72cf:	01 ec                	add    esp,ebp
    72d1:	41 00 00             	add    BYTE PTR [r8],al
    72d4:	00 2c 6d 69 6e 00 e1 	add    BYTE PTR [rbp*2-0x1eff9197],ch
    72db:	03 b9 20 00 00 e3    	add    edi,DWORD PTR [rcx-0x1cffffe0]
    72e1:	1a 00                	sbb    al,BYTE PTR [rax]
    72e3:	00 2c 6d 61 78 00 e5 	add    BYTE PTR [rbp*2-0x1aff879f],ch
    72ea:	03 0a                	add    ecx,DWORD PTR [rdx]
    72ec:	1f                   	(bad)
    72ed:	00 00                	add    BYTE PTR [rax],al
    72ef:	e3 1a                	jrcxz  730b <_end+0x12f3>
    72f1:	00 00                	add    BYTE PTR [rax],al
    72f3:	40 5f                	rex pop rdi
    72f5:	5f                   	pop    rdi
    72f6:	64 00 e9             	fs add cl,ch
    72f9:	03 0b                	add    ecx,DWORD PTR [rbx]
    72fb:	29 1b                	sub    DWORD PTR [rbx],ebx
    72fd:	00 00                	add    BYTE PTR [rax],al
    72ff:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    7305:	1a 00                	sbb    al,BYTE PTR [rax]
    7307:	00 11                	add    BYTE PTR [rcx],dl
    7309:	f9                   	stc
    730a:	25 00 00 14 18       	and    eax,0x18140000
    730f:	00 00                	add    BYTE PTR [rax],al
    7311:	00 13                	add    BYTE PTR [rbx],dl
    7313:	e3 1a                	jrcxz  732f <_end+0x1317>
    7315:	00 00                	add    BYTE PTR [rax],al
    7317:	3f                   	(bad)
    7318:	27                   	(bad)
    7319:	14 00                	adc    al,0x0
    731b:	00 ff                	add    bh,bh
    731d:	01 5f 1e             	add    DWORD PTR [rdi+0x1e],ebx
    7320:	00 00                	add    BYTE PTR [rax],al
    7322:	04 1f                	add    al,0x1f
    7324:	0e                   	(bad)
    7325:	00 00                	add    BYTE PTR [rax],al
    7327:	04 0b                	add    al,0xb
    7329:	02 02                	add    al,BYTE PTR [rdx]
    732b:	67 2a 00             	sub    al,BYTE PTR [eax]
    732e:	00 a5 2d 00 00 0a    	add    BYTE PTR [rbp+0xa00002d],ah
    7334:	1c 00                	sbb    al,0x0
    7336:	00 01                	add    BYTE PTR [rcx],al
    7338:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    7339:	2d 00 00 01 a5       	sub    eax,0xa5010000
    733e:	2d 00 00 00 2b       	sub    eax,0x2b000000
    7343:	66 0d 00 00          	or     ax,0x0
    7347:	34 02                	xor    al,0x2
    7349:	0c 8c                	or     al,0x8c
    734b:	1e                   	(bad)
    734c:	00 00                	add    BYTE PTR [rax],al
    734e:	1e                   	(bad)
    734f:	1c 00                	sbb    al,0x0
    7351:	00 24 1c             	add    BYTE PTR [rsp+rbx*1],ah
    7354:	00 00                	add    BYTE PTR [rax],al
    7356:	10 b5 3f 00 00 00    	adc    BYTE PTR [rbp+0x3f],dh
    735c:	2b 66 0d             	sub    esp,DWORD PTR [rsi+0xd]
    735f:	00 00                	add    BYTE PTR [rax],al
    7361:	36 02 02             	ss add al,BYTE PTR [rdx]
    7364:	c5 32 00             	(bad)
    7367:	00 38                	add    BYTE PTR [rax],bh
    7369:	1c 00                	sbb    al,0x0
    736b:	00 43 1c             	add    BYTE PTR [rbx+0x1c],al
    736e:	00 00                	add    BYTE PTR [rax],al
    7370:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    7376:	bf 3f 00 00 00       	mov    edi,0x3f
    737b:	2b 7a 0d             	sub    edi,DWORD PTR [rdx+0xd]
    737e:	00 00                	add    BYTE PTR [rax],al
    7380:	48 02 02             	rex.W add al,BYTE PTR [rdx]
    7383:	45 33 00             	xor    r8d,DWORD PTR [r8]
    7386:	00 57 1c             	add    BYTE PTR [rdi+0x1c],dl
    7389:	00 00                	add    BYTE PTR [rax],al
    738b:	62 1c 00             	(bad)
    738e:	00 10                	add    BYTE PTR [rax],dl
    7390:	b5 3f                	mov    ch,0x3f
    7392:	00 00                	add    BYTE PTR [rax],al
    7394:	10 a6 21 00 00 00    	adc    BYTE PTR [rsi+0x21],ah
    739a:	51                   	push   rcx
    739b:	f8                   	clc
    739c:	14 00                	adc    al,0x0
    739e:	00 43 22             	add    BYTE PTR [rbx+0x22],al
    73a1:	00 00                	add    BYTE PTR [rax],al
    73a3:	c4                   	(bad)
    73a4:	3f                   	(bad)
    73a5:	00 00                	add    BYTE PTR [rax],al
    73a7:	77 1c                	ja     73c5 <_end+0x13ad>
    73a9:	00 00                	add    BYTE PTR [rax],al
    73ab:	82                   	(bad)
    73ac:	1c 00                	sbb    al,0x0
    73ae:	00 10                	add    BYTE PTR [rax],dl
    73b0:	b5 3f                	mov    ch,0x3f
    73b2:	00 00                	add    BYTE PTR [rax],al
    73b4:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    73ba:	52                   	push   rdx
    73bb:	72 65                	jb     7422 <_end+0x140a>
    73bd:	70 00                	jo     73bf <_end+0x13a7>
    73bf:	b2 21                	mov    dl,0x21
    73c1:	00 00                	add    BYTE PTR [rax],al
    73c3:	13 82 1c 00 00 14    	adc    eax,DWORD PTR [rdx+0x1400001c]
    73c9:	f4                   	hlt
    73ca:	24 00                	and    al,0x0
    73cc:	00 4d 02             	add    BYTE PTR [rbp+0x2],cl
    73cf:	f6 16                	not    BYTE PTR [rsi]
    73d1:	00 00                	add    BYTE PTR [rax],al
    73d3:	82                   	(bad)
    73d4:	1c 00                	sbb    al,0x0
    73d6:	00 a7 1c 00 00 ad    	add    BYTE PTR [rdi-0x52ffffe4],ah
    73dc:	1c 00                	sbb    al,0x0
    73de:	00 10                	add    BYTE PTR [rax],dl
    73e0:	c9                   	leave
    73e1:	3f                   	(bad)
    73e2:	00 00                	add    BYTE PTR [rax],al
    73e4:	00 14 5d 14 00 00 53 	add    BYTE PTR [rbx*2+0x53000014],dl
    73eb:	02 a5 13 00 00 df    	add    ah,BYTE PTR [rbp-0x20ffffed]
    73f1:	1b 00                	sbb    eax,DWORD PTR [rax]
    73f3:	00 c4                	add    ah,al
    73f5:	1c 00                	sbb    al,0x0
    73f7:	00 ca                	add    dl,cl
    73f9:	1c 00                	sbb    al,0x0
    73fb:	00 10                	add    BYTE PTR [rax],dl
    73fd:	c9                   	leave
    73fe:	3f                   	(bad)
    73ff:	00 00                	add    BYTE PTR [rax],al
    7401:	00 14 db             	add    BYTE PTR [rbx+rbx*8],dl
    7404:	18 00                	sbb    BYTE PTR [rax],al
    7406:	00 57 02             	add    BYTE PTR [rdi+0x2],dl
    7409:	a9 2a 00 00 df       	test   eax,0xdf00002a
    740e:	1b 00                	sbb    eax,DWORD PTR [rax]
    7410:	00 e1                	add    cl,ah
    7412:	1c 00                	sbb    al,0x0
    7414:	00 e7                	add    bh,ah
    7416:	1c 00                	sbb    al,0x0
    7418:	00 10                	add    BYTE PTR [rax],dl
    741a:	c9                   	leave
    741b:	3f                   	(bad)
    741c:	00 00                	add    BYTE PTR [rax],al
    741e:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    7421:	2e 00 00             	cs add BYTE PTR [rax],al
    7424:	5b                   	pop    rbx
    7425:	02 4d 1e             	add    cl,BYTE PTR [rbp+0x1e]
    7428:	00 00                	add    BYTE PTR [rax],al
    742a:	c4                   	(bad)
    742b:	3f                   	(bad)
    742c:	00 00                	add    BYTE PTR [rax],al
    742e:	fe                   	(bad)
    742f:	1c 00                	sbb    al,0x0
    7431:	00 04 1d 00 00 10 b5 	add    BYTE PTR [rbx*1-0x4af00000],al
    7438:	3f                   	(bad)
    7439:	00 00                	add    BYTE PTR [rax],al
    743b:	00 14 7c             	add    BYTE PTR [rsp+rdi*2],dl
    743e:	2e 00 00             	cs add BYTE PTR [rax],al
    7441:	62 02 a1 16 00 00    	vpshufb xmm24{k6},xmm27,QWORD BCST [r8]
    7447:	df 1b                	fistp  WORD PTR [rbx]
    7449:	00 00                	add    BYTE PTR [rax],al
    744b:	1b 1d 00 00 26 1d    	sbb    ebx,DWORD PTR [rip+0x1d260000]        # 1d267451 <_end+0x1d261439>
    7451:	00 00                	add    BYTE PTR [rax],al
    7453:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    7459:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    745a:	21 00                	and    DWORD PTR [rax],eax
    745c:	00 00                	add    BYTE PTR [rax],al
    745e:	14 de                	adc    al,0xde
    7460:	30 00                	xor    BYTE PTR [rax],al
    7462:	00 66 02             	add    BYTE PTR [rsi+0x2],ah
    7465:	9f                   	lahf
    7466:	18 00                	sbb    BYTE PTR [rax],al
    7468:	00 c4                	add    ah,al
    746a:	3f                   	(bad)
    746b:	00 00                	add    BYTE PTR [rax],al
    746d:	3d 1d 00 00 43       	cmp    eax,0x4300001d
    7472:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    7477:	3f                   	(bad)
    7478:	00 00                	add    BYTE PTR [rax],al
    747a:	00 14 de             	add    BYTE PTR [rsi+rbx*8],dl
    747d:	30 00                	xor    BYTE PTR [rax],al
    747f:	00 6d 02             	add    BYTE PTR [rbp+0x2],ch
    7482:	d0 12                	rcl    BYTE PTR [rdx],1
    7484:	00 00                	add    BYTE PTR [rax],al
    7486:	df 1b                	fistp  WORD PTR [rbx]
    7488:	00 00                	add    BYTE PTR [rax],al
    748a:	5a                   	pop    rdx
    748b:	1d 00 00 65 1d       	sbb    eax,0x1d650000
    7490:	00 00                	add    BYTE PTR [rax],al
    7492:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    7498:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7499:	21 00                	and    DWORD PTR [rax],eax
    749b:	00 00                	add    BYTE PTR [rax],al
    749d:	14 0c                	adc    al,0xc
    749f:	2a 00                	sub    al,BYTE PTR [rax]
    74a1:	00 71 02             	add    BYTE PTR [rcx+0x2],dh
    74a4:	b6 0d                	mov    dh,0xd
    74a6:	00 00                	add    BYTE PTR [rax],al
    74a8:	c4                   	(bad)
    74a9:	3f                   	(bad)
    74aa:	00 00                	add    BYTE PTR [rax],al
    74ac:	7c 1d                	jl     74cb <_end+0x14b3>
    74ae:	00 00                	add    BYTE PTR [rax],al
    74b0:	87 1d 00 00 10 b5    	xchg   DWORD PTR [rip+0xffffffffb5100000],ebx        # ffffffffb51074b6 <_end+0xffffffffb510149e>
    74b6:	3f                   	(bad)
    74b7:	00 00                	add    BYTE PTR [rax],al
    74b9:	01 bf 3f 00 00 00    	add    DWORD PTR [rdi+0x3f],edi
    74bf:	14 f9                	adc    al,0xf9
    74c1:	30 00                	xor    BYTE PTR [rax],al
    74c3:	00 78 02             	add    BYTE PTR [rax+0x2],bh
    74c6:	09 34 00             	or     DWORD PTR [rax+rax*1],esi
    74c9:	00 c4                	add    ah,al
    74cb:	3f                   	(bad)
    74cc:	00 00                	add    BYTE PTR [rax],al
    74ce:	9e                   	sahf
    74cf:	1d 00 00 a9 1d       	sbb    eax,0x1da90000
    74d4:	00 00                	add    BYTE PTR [rax],al
    74d6:	10 b5 3f 00 00 01    	adc    BYTE PTR [rbp+0x100003f],dh
    74dc:	bf 3f 00 00 00       	mov    edi,0x3f
    74e1:	14 ab                	adc    al,0xab
    74e3:	2d 00 00 7f 02       	sub    eax,0x27f0000
    74e8:	82                   	(bad)
    74e9:	20 00                	and    BYTE PTR [rax],al
    74eb:	00 c4                	add    ah,al
    74ed:	3f                   	(bad)
    74ee:	00 00                	add    BYTE PTR [rax],al
    74f0:	c0 1d 00 00 cb 1d 00 	rcr    BYTE PTR [rip+0x1dcb0000],0x0        # 1dcb74f7 <_end+0x1dcb14df>
    74f7:	00 10                	add    BYTE PTR [rax],dl
    74f9:	b5 3f                	mov    ch,0x3f
    74fb:	00 00                	add    BYTE PTR [rax],al
    74fd:	01 d3                	add    ebx,edx
    74ff:	3f                   	(bad)
    7500:	00 00                	add    BYTE PTR [rax],al
    7502:	00 14 d2             	add    BYTE PTR [rdx+rdx*8],dl
    7505:	33 00                	xor    eax,DWORD PTR [rax]
    7507:	00 86 02 d5 29 00    	add    BYTE PTR [rsi+0x29d502],al
    750d:	00 c4                	add    ah,al
    750f:	3f                   	(bad)
    7510:	00 00                	add    BYTE PTR [rax],al
    7512:	e2 1d                	loop   7531 <_end+0x1519>
    7514:	00 00                	add    BYTE PTR [rax],al
    7516:	ed                   	in     eax,dx
    7517:	1d 00 00 10 b5       	sbb    eax,0xb5100000
    751c:	3f                   	(bad)
    751d:	00 00                	add    BYTE PTR [rax],al
    751f:	01 d3                	add    ebx,edx
    7521:	3f                   	(bad)
    7522:	00 00                	add    BYTE PTR [rax],al
    7524:	00 53 b8             	add    BYTE PTR [rbx-0x48],dl
    7527:	23 00                	and    eax,DWORD PTR [rax]
    7529:	00 4a 20             	add    BYTE PTR [rdx+0x20],cl
    752c:	00 00                	add    BYTE PTR [rax],al
    752e:	df 1b                	fistp  WORD PTR [rbx]
    7530:	00 00                	add    BYTE PTR [rax],al
    7532:	2c 6d                	sub    al,0x6d
    7534:	69 6e 00 a5 02 b6 27 	imul   ebp,DWORD PTR [rsi+0x0],0x27b602a5
    753b:	00 00                	add    BYTE PTR [rax],al
    753d:	df 1b                	fistp  WORD PTR [rbx]
    753f:	00 00                	add    BYTE PTR [rax],al
    7541:	2c 6d                	sub    al,0x6d
    7543:	61                   	(bad)
    7544:	78 00                	js     7546 <_end+0x152e>
    7546:	a9 02 f7 21 00       	test   eax,0x21f702
    754b:	00 df                	add    bh,bl
    754d:	1b 00                	sbb    eax,DWORD PTR [rax]
    754f:	00 40 5f             	add    BYTE PTR [rax+0x5f],al
    7552:	5f                   	pop    rdi
    7553:	72 00                	jb     7555 <_end+0x153d>
    7555:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    7556:	02 06                	add    al,BYTE PTR [rsi]
    7558:	82                   	(bad)
    7559:	1c 00                	sbb    al,0x0
    755b:	00 41 ca             	add    BYTE PTR [rcx-0x36],al
    755e:	2e 00 00             	cs add BYTE PTR [rax],al
    7561:	3d 02 17 7c 29       	cmp    eax,0x297c1702
    7566:	00 00                	add    BYTE PTR [rax],al
    7568:	41 1e                	rex.B (bad)
    756a:	00 00                	add    BYTE PTR [rax],al
    756c:	4c 1e                	rex.WR (bad)
    756e:	00 00                	add    BYTE PTR [rax],al
    7570:	11 09                	adc    DWORD PTR [rcx],ecx
    7572:	19 00                	sbb    DWORD PTR [rax],eax
    7574:	00 b2 21 00 00 10    	add    BYTE PTR [rdx+0x10000021],dh
    757a:	b5 3f                	mov    ch,0x3f
    757c:	00 00                	add    BYTE PTR [rax],al
    757e:	01 61 44             	add    DWORD PTR [rcx+0x44],esp
    7581:	00 00                	add    BYTE PTR [rax],al
    7583:	00 11                	add    BYTE PTR [rcx],dl
    7585:	84 32                	test   BYTE PTR [rdx],dh
    7587:	00 00                	add    BYTE PTR [rax],al
    7589:	b2 21                	mov    dl,0x21
    758b:	00 00                	add    BYTE PTR [rax],al
    758d:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    7590:	00 00                	add    BYTE PTR [rax],al
    7592:	3d 20 00 00 00       	cmp    eax,0x20
    7597:	13 df                	adc    ebx,edi
    7599:	1b 00                	sbb    eax,DWORD PTR [rax]
    759b:	00 6f 04             	add    BYTE PTR [rdi+0x4],ch
    759e:	9e                   	sahf
    759f:	05 1f 89 20 00       	add    eax,0x20891f
    75a4:	00 1b                	add    BYTE PTR [rbx],bl
    75a6:	69 31 00 00 01 04    	imul   esi,DWORD PTR [rcx],0x4010000
    75ac:	cc                   	int3
    75ad:	0e                   	(bad)
    75ae:	d6                   	(bad)
    75af:	1e                   	(bad)
    75b0:	00 00                	add    BYTE PTR [rax],al
    75b2:	0f 01                	(bad)
    75b4:	29 00                	sub    DWORD PTR [rax],eax
    75b6:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
    75b9:	04 1f                	add    al,0x1f
    75bb:	28 00                	sub    BYTE PTR [rax],al
    75bd:	00 df                	add    bh,bl
    75bf:	1b 00                	sbb    eax,DWORD PTR [rax]
    75c1:	00 a6 1e 00 00 11    	add    BYTE PTR [rsi+0x1100001e],ah
    75c7:	84 32                	test   BYTE PTR [rdx],dh
    75c9:	00 00                	add    BYTE PTR [rax],al
    75cb:	b2 21                	mov    dl,0x21
    75cd:	00 00                	add    BYTE PTR [rax],al
    75cf:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    75d2:	00 00                	add    BYTE PTR [rax],al
    75d4:	94                   	xchg   esp,eax
    75d5:	1f                   	(bad)
    75d6:	00 00                	add    BYTE PTR [rax],al
    75d8:	01 9c 3f 00 00 00 11 	add    DWORD PTR [rdi+rdi*1+0x11000000],ebx
    75df:	3c 22                	cmp    al,0x22
    75e1:	00 00                	add    BYTE PTR [rax],al
    75e3:	df 1b                	fistp  WORD PTR [rbx]
    75e5:	00 00                	add    BYTE PTR [rax],al
    75e7:	43 5f                	rex.XB pop r15
    75e9:	43                   	rex.XB
    75ea:	46 00 fd             	rex.RX add bpl,r15b
    75ed:	1f                   	(bad)
    75ee:	00 00                	add    BYTE PTR [rax],al
    75f0:	43 5f                	rex.XB pop r15
    75f2:	43 52                	rex.XB push r10
    75f4:	00 b2 21 00 00 2f    	add    BYTE PTR [rdx+0x2f000021],dh
    75fa:	35 2d 00 00 ea       	xor    eax,0xea00002d
    75ff:	20 00                	and    BYTE PTR [rax],al
    7601:	00 01                	add    BYTE PTR [rcx],al
    7603:	2f                   	(bad)
    7604:	72 24                	jb     762a <_end+0x1612>
    7606:	00 00                	add    BYTE PTR [rax],al
    7608:	ea                   	(bad)
    7609:	20 00                	and    BYTE PTR [rax],al
    760b:	00 00                	add    BYTE PTR [rax],al
    760d:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
    7610:	25 00 00 04 c6       	and    eax,0xc6040000
    7615:	02 07                	add    al,BYTE PTR [rdi]
    7617:	80 21 00             	and    BYTE PTR [rcx],0x0
    761a:	00 e0                	add    al,ah
    761c:	1f                   	(bad)
    761d:	00 00                	add    BYTE PTR [rax],al
    761f:	1a 1f                	sbb    bl,BYTE PTR [rdi]
    7621:	00 00                	add    BYTE PTR [rax],al
    7623:	11 03                	adc    DWORD PTR [rbx],eax
    7625:	19 00                	sbb    DWORD PTR [rax],eax
    7627:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    762d:	98                   	cwde
    762e:	22 00                	and    al,BYTE PTR [rax]
    7630:	00 94 1f 00 00 11 09 	add    BYTE PTR [rdi+rbx*1+0x9110000],dl
    7637:	19 00                	sbb    DWORD PTR [rax],eax
    7639:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    763f:	bb 2f 00 00 94       	mov    ebx,0x9400002f
    7644:	1f                   	(bad)
    7645:	00 00                	add    BYTE PTR [rax],al
    7647:	01 9c 3f 00 00 01 9c 	add    DWORD PTR [rdi+rdi*1-0x63ff0000],ebx
    764e:	3f                   	(bad)
    764f:	00 00                	add    BYTE PTR [rax],al
    7651:	00 08                	add    BYTE PTR [rax],cl
    7653:	57                   	push   rdi
    7654:	0d 00 00 04 f0       	or     eax,0xf0040000
    7659:	0d a8 20 00 00       	or     eax,0x20a8
    765e:	04 e3                	add    al,0xe3
    7660:	26 00 00             	es add BYTE PTR [rax],al
    7663:	04 11                	add    al,0x11
    7665:	01 07                	add    DWORD PTR [rdi],eax
    7667:	fc                   	cld
    7668:	19 00                	sbb    DWORD PTR [rax],eax
    766a:	00 1a                	add    BYTE PTR [rdx],bl
    766c:	1f                   	(bad)
    766d:	00 00                	add    BYTE PTR [rax],al
    766f:	5c                   	pop    rsp
    7670:	1f                   	(bad)
    7671:	00 00                	add    BYTE PTR [rax],al
    7673:	11 3c 22             	adc    DWORD PTR [rdx+riz*1],edi
    7676:	00 00                	add    BYTE PTR [rax],al
    7678:	df 1b                	fistp  WORD PTR [rbx]
    767a:	00 00                	add    BYTE PTR [rax],al
    767c:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    7683:	00 00                	add    BYTE PTR [rax],al
    7685:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    7688:	00 00                	add    BYTE PTR [rax],al
    768a:	94                   	xchg   esp,eax
    768b:	1f                   	(bad)
    768c:	00 00                	add    BYTE PTR [rax],al
    768e:	01 9c 3f 00 00 00 70 	add    DWORD PTR [rdi+rdi*1+0x70000000],ebx
    7695:	e3 1b                	jrcxz  76b2 <_end+0x169a>
    7697:	00 00                	add    BYTE PTR [rax],al
    7699:	04 75                	add    al,0x75
    769b:	04 07                	add    al,0x7
    769d:	13 2c 00             	adc    ebp,DWORD PTR [rax+rax*1]
    76a0:	00 e0                	add    al,ah
    76a2:	1f                   	(bad)
    76a3:	00 00                	add    BYTE PTR [rax],al
    76a5:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    76ab:	1a 00                	sbb    al,BYTE PTR [rax]
    76ad:	00 11                	add    BYTE PTR [rcx],dl
    76af:	ca 22 00             	retf   0x22
    76b2:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    76b5:	00 00                	add    BYTE PTR [rax],al
    76b7:	11 d0                	adc    eax,edx
    76b9:	22 00                	and    al,BYTE PTR [rax]
    76bb:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    76be:	00 00                	add    BYTE PTR [rax],al
    76c0:	01 84 4e 00 00 01 84 	add    DWORD PTR [rsi+rcx*2-0x7bff0000],eax
    76c7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    76ca:	00 00                	add    BYTE PTR [rax],al
    76cc:	44 c9                	rex.R leave
    76ce:	1f                   	(bad)
    76cf:	00 00                	add    BYTE PTR [rax],al
    76d1:	d3 1f                	rcr    DWORD PTR [rdi],cl
    76d3:	00 00                	add    BYTE PTR [rax],al
    76d5:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    76d7:	75 6d                	jne    7746 <_end+0x172e>
    76d9:	00 f1                	add    cl,dh
    76db:	1f                   	(bad)
    76dc:	00 00                	add    BYTE PTR [rax],al
    76de:	b1 2d                	mov    cl,0x2d
    76e0:	00 00                	add    BYTE PTR [rax],al
    76e2:	54                   	push   rsp
    76e3:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    76e6:	00 51 15             	add    BYTE PTR [rcx+0x15],dl
    76e9:	00 00                	add    BYTE PTR [rax],al
    76eb:	b1 2d                	mov    cl,0x2d
    76ed:	00 00                	add    BYTE PTR [rax],al
    76ef:	00 ca                	add    dl,cl
    76f1:	9a                   	(bad)
    76f2:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    76f4:	94                   	xchg   esp,eax
    76f5:	26 00 00             	es add BYTE PTR [rax],al
    76f8:	b2 21                	mov    dl,0x21
    76fa:	00 00                	add    BYTE PTR [rax],al
    76fc:	01 55 b8             	add    DWORD PTR [rbp-0x48],edx
    76ff:	11 00                	adc    DWORD PTR [rax],eax
    7701:	00 b2 21 00 00 00    	add    BYTE PTR [rdx+0x21],dh
    7707:	ca 9a 3b             	retf   0x3b9a
    770a:	00 1b                	add    BYTE PTR [rbx],bl
    770c:	dd 23                	frstor [rbx]
    770e:	00 00                	add    BYTE PTR [rax],al
    7710:	01 04 70             	add    DWORD PTR [rax+rsi*2],eax
    7713:	0c fd                	or     al,0xfd
    7715:	1f                   	(bad)
    7716:	00 00                	add    BYTE PTR [rax],al
    7718:	08 55 13             	or     BYTE PTR [rbp+0x13],dl
    771b:	00 00                	add    BYTE PTR [rax],al
    771d:	04 73                	add    al,0x73
    771f:	0d 14 18 00 00       	or     eax,0x1814
    7724:	71 5f                	jno    7785 <_end+0x176d>
    7726:	54                   	push   rsp
    7727:	70 00                	jo     7729 <_end+0x1711>
    7729:	56                   	push   rsi
    772a:	14 18                	adc    al,0x18
    772c:	00 00                	add    BYTE PTR [rax],al
    772e:	56                   	push   rsi
    772f:	14 18                	adc    al,0x18
    7731:	00 00                	add    BYTE PTR [rax],al
    7733:	00 00                	add    BYTE PTR [rax],al
    7735:	44 58                	rex.R pop rax
    7737:	2a 00                	sub    al,BYTE PTR [rax]
    7739:	00 3d 20 00 00 45    	add    BYTE PTR [rip+0x45000020],bh        # 4500775f <_end+0x45001747>
    773f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7740:	75 6d                	jne    77af <_end+0x1797>
    7742:	00 5e 1d             	add    BYTE PTR [rsi+0x1d],bl
    7745:	00 00                	add    BYTE PTR [rax],al
    7747:	b1 2d                	mov    cl,0x2d
    7749:	00 00                	add    BYTE PTR [rax],al
    774b:	72 64                	jb     77b1 <_end+0x1799>
    774d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    774f:	00 10                	add    BYTE PTR [rax],dl
    7751:	14 01                	adc    al,0x1
    7753:	21 87 13 00 00 b1    	and    DWORD PTR [rdi-0x4effffed],eax
    7759:	2d 00 00 e8 03       	sub    eax,0x3e80000
    775e:	01 2f                	add    DWORD PTR [rdi],ebp
    7760:	94                   	xchg   esp,eax
    7761:	26 00 00             	es add BYTE PTR [rax],al
    7764:	b2 21                	mov    dl,0x21
    7766:	00 00                	add    BYTE PTR [rax],al
    7768:	01 73 b8             	add    DWORD PTR [rbx-0x48],esi
    776b:	11 00                	adc    DWORD PTR [rax],eax
    776d:	00 b2 21 00 00 e8    	add    BYTE PTR [rdx-0x17ffffdf],dh
    7773:	03 00                	add    eax,DWORD PTR [rax]
    7775:	44 fa                	rex.R cli
    7777:	1c 00                	sbb    al,0x0
    7779:	00 7c 20 00          	add    BYTE PTR [rax+riz*1+0x0],bh
    777d:	00 45 6e             	add    BYTE PTR [rbp+0x6e],al
    7780:	75 6d                	jne    77ef <_end+0x17d7>
    7782:	00 ae 26 00 00 b1    	add    BYTE PTR [rsi-0x4effffda],ch
    7788:	2d 00 00 54 64       	sub    eax,0x64540000
    778d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    778f:	00 23                	add    BYTE PTR [rbx],ah
    7791:	1e                   	(bad)
    7792:	00 00                	add    BYTE PTR [rax],al
    7794:	b1 2d                	mov    cl,0x2d
    7796:	00 00                	add    BYTE PTR [rax],al
    7798:	40                   	rex
    7799:	42 0f 00 2f          	rex.X verw WORD PTR [rdi]
    779d:	94                   	xchg   esp,eax
    779e:	26 00 00             	es add BYTE PTR [rax],al
    77a1:	b2 21                	mov    dl,0x21
    77a3:	00 00                	add    BYTE PTR [rax],al
    77a5:	01 55 b8             	add    DWORD PTR [rbp-0x48],edx
    77a8:	11 00                	adc    DWORD PTR [rax],eax
    77aa:	00 b2 21 00 00 40    	add    BYTE PTR [rdx+0x40000021],dh
    77b0:	42 0f 00 00          	rex.X sldt WORD PTR [rax]
    77b4:	74 f4                	je     77aa <_end+0x1792>
    77b6:	0c 00                	or     al,0x0
    77b8:	00 3d 58 03 14 93    	add    BYTE PTR [rip+0xffffffff93140358],bh        # ffffffff93147b16 <_end+0xffffffff93141afe>
    77be:	20 00                	and    BYTE PTR [rax],al
    77c0:	00 50 ed             	add    BYTE PTR [rax-0x13],dl
    77c3:	0c 00                	or     al,0x0
    77c5:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
    77c8:	05 14 00 3d d7       	add    eax,0xd73d0014
    77cd:	25 00 00 04 34       	and    eax,0x34040000
    77d2:	0d 1b 16 12 00       	or     eax,0x12161b
    77d7:	00 01                	add    BYTE PTR [rcx],al
    77d9:	05 6f 0c be 20       	add    eax,0x20be0c6f
    77de:	00 00                	add    BYTE PTR [rax],al
    77e0:	08 55 13             	or     BYTE PTR [rbp+0x13],dl
    77e3:	00 00                	add    BYTE PTR [rax],al
    77e5:	05 70 13 df 1b       	add    eax,0x1bdf1370
    77ea:	00 00                	add    BYTE PTR [rax],al
    77ec:	43 5f                	rex.XB pop r15
    77ee:	54                   	push   rsp
    77ef:	70 00                	jo     77f1 <_end+0x17d9>
    77f1:	df 1b                	fistp  WORD PTR [rbx]
    77f3:	00 00                	add    BYTE PTR [rax],al
    77f5:	00 34 c3             	add    BYTE PTR [rbx+rax*8],dh
    77f8:	2d 00 00 f1 20       	sub    eax,0x20f10000
    77fd:	00 00                	add    BYTE PTR [rax],al
    77ff:	34 c3                	xor    al,0xc3
    7801:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7806:	00 00                	add    BYTE PTR [rax],al
    7808:	34 c3                	xor    al,0xc3
    780a:	2d 00 00 f1 20       	sub    eax,0x20f10000
    780f:	00 00                	add    BYTE PTR [rax],al
    7811:	34 c3                	xor    al,0xc3
    7813:	2d 00 00 f1 20       	sub    eax,0x20f10000
    7818:	00 00                	add    BYTE PTR [rax],al
    781a:	00 12                	add    BYTE PTR [rdx],dl
    781c:	04 07                	add    al,0x7
    781e:	f8                   	clc
    781f:	00 00                	add    BYTE PTR [rax],al
    7821:	00 12                	add    BYTE PTR [rdx],dl
    7823:	01 02                	add    DWORD PTR [rdx],eax
    7825:	dc 04 00             	fadd   QWORD PTR [rax+rax*1]
    7828:	00 13                	add    BYTE PTR [rbx],dl
    782a:	ea                   	(bad)
    782b:	20 00                	and    BYTE PTR [rax],al
    782d:	00 75 12             	add    BYTE PTR [rbp+0x12],dh
    7830:	02 00                	add    al,BYTE PTR [rax]
    7832:	00 11                	add    BYTE PTR [rcx],dl
    7834:	57                   	push   rdi
    7835:	01 0b                	add    DWORD PTR [rbx],ecx
    7837:	7c 21                	jl     785a <_end+0x1842>
    7839:	00 00                	add    BYTE PTR [rax],al
    783b:	3d 67 32 00 00       	cmp    eax,0x3267
    7840:	12 25 0b 02 08 cc    	adc    ah,BYTE PTR [rip+0xffffffffcc08020b]        # ffffffffcc087a51 <_end+0xffffffffcc081a39>
    7846:	0b c7                	or     eax,edi
    7848:	23 00                	and    eax,DWORD PTR [rax]
    784a:	00 02                	add    BYTE PTR [rdx],al
    784c:	08 dc                	or     ah,bl
    784e:	0b 2b                	or     ebp,DWORD PTR [rbx]
    7850:	30 00                	xor    BYTE PTR [rax],al
    7852:	00 02                	add    BYTE PTR [rdx],al
    7854:	08 e7                	or     bh,ah
    7856:	0b 47 30             	or     eax,DWORD PTR [rdi+0x30]
    7859:	00 00                	add    BYTE PTR [rax],al
    785b:	02 08                	add    cl,BYTE PTR [rax]
    785d:	e8 0b 5e 30 00       	call   30d66d <_end+0x307655>
    7862:	00 02                	add    BYTE PTR [rdx],al
    7864:	08 e9                	or     cl,ch
    7866:	0b 82 30 00 00 02    	or     eax,DWORD PTR [rdx+0x2000030]
    786c:	08 eb                	or     bl,ch
    786e:	0b a6 30 00 00 02    	or     esp,DWORD PTR [rsi+0x2000030]
    7874:	08 ec                	or     ah,ch
    7876:	0b c1                	or     eax,ecx
    7878:	30 00                	xor    BYTE PTR [rax],al
    787a:	00 1a                	add    BYTE PTR [rdx],bl
    787c:	64 69 76 00 08 d9 b8 	imul   esi,DWORD PTR fs:[rsi+0x0],0x1b8d908
    7883:	01 
    7884:	00 00                	add    BYTE PTR [rax],al
    7886:	c7                   	(bad)
    7887:	23 00                	and    eax,DWORD PTR [rax]
    7889:	00 61 21             	add    BYTE PTR [rcx+0x21],ah
    788c:	00 00                	add    BYTE PTR [rax],al
    788e:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    7894:	be 21 00 00 00       	mov    esi,0x21
    7899:	02 09                	add    cl,BYTE PTR [rcx]
    789b:	fb                   	sti
    789c:	0b 49 3a             	or     ecx,DWORD PTR [rcx+0x3a]
    789f:	00 00                	add    BYTE PTR [rax],al
    78a1:	18 09                	sbb    BYTE PTR [rcx],cl
    78a3:	04 01                	add    al,0x1
    78a5:	0b 65 3a             	or     esp,DWORD PTR [rbp+0x3a]
    78a8:	00 00                	add    BYTE PTR [rax],al
    78aa:	18 09                	sbb    BYTE PTR [rcx],cl
    78ac:	05 01 0b 8a 3a       	add    eax,0x3a8a0b01
    78b1:	00 00                	add    BYTE PTR [rax],al
    78b3:	00 12                	add    BYTE PTR [rdx],dl
    78b5:	01 08                	add    DWORD PTR [rax],ecx
    78b7:	ff 01                	inc    DWORD PTR [rcx]
    78b9:	00 00                	add    BYTE PTR [rax],al
    78bb:	12 02                	adc    al,BYTE PTR [rdx]
    78bd:	07                   	(bad)
    78be:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
    78c1:	00 12                	add    BYTE PTR [rdx],dl
    78c3:	08 07                	or     BYTE PTR [rdi],al
    78c5:	f3 00 00             	repz add BYTE PTR [rax],al
    78c8:	00 12                	add    BYTE PTR [rdx],dl
    78ca:	08 07                	or     BYTE PTR [rdi],al
    78cc:	ee                   	out    dx,al
    78cd:	00 00                	add    BYTE PTR [rax],al
    78cf:	00 12                	add    BYTE PTR [rdx],dl
    78d1:	01 06                	add    DWORD PTR [rsi],eax
    78d3:	01 02                	add    DWORD PTR [rdx],eax
    78d5:	00 00                	add    BYTE PTR [rax],al
    78d7:	12 02                	adc    al,BYTE PTR [rdx]
    78d9:	05 5b 00 00 00       	add    eax,0x5b
    78de:	76 04                	jbe    78e4 <_end+0x18cc>
    78e0:	05 69 6e 74 00       	add    eax,0x746e69
    78e5:	13 a6 21 00 00 12    	adc    esp,DWORD PTR [rsi+0x12000021]
    78eb:	08 05 e5 00 00 00    	or     BYTE PTR [rip+0xe5],al        # 79d6 <_end+0x19be>
    78f1:	13 b2 21 00 00 12    	adc    esi,DWORD PTR [rdx+0x12000021]
    78f7:	08 05 e0 00 00 00    	or     BYTE PTR [rip+0xe0],al        # 79dd <_end+0x19c5>
    78fd:	12 10                	adc    dl,BYTE PTR [rax]
    78ff:	04 f3                	add    al,0xf3
    7901:	01 00                	add    DWORD PTR [rax],eax
    7903:	00 08                	add    BYTE PTR [rax],cl
    7905:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    7906:	26 00 00             	es add BYTE PTR [rax],al
    7909:	13 25 15 98 21 00    	adc    esp,DWORD PTR [rip+0x219815]        # 221124 <_end+0x21b10c>
    790f:	00 08                	add    BYTE PTR [rax],cl
    7911:	c9                   	leave
    7912:	11 00                	adc    DWORD PTR [rax],eax
    7914:	00 13                	add    BYTE PTR [rbx],dl
    7916:	26 17                	es (bad)
    7918:	7c 21                	jl     793b <_end+0x1923>
    791a:	00 00                	add    BYTE PTR [rax],al
    791c:	08 2a                	or     BYTE PTR [rdx],ch
    791e:	2a 00                	sub    al,BYTE PTR [rax]
    7920:	00 13                	add    BYTE PTR [rbx],dl
    7922:	27                   	(bad)
    7923:	1a 9f 21 00 00 08    	sbb    bl,BYTE PTR [rdi+0x8000021]
    7929:	5e                   	pop    rsi
    792a:	17                   	(bad)
    792b:	00 00                	add    BYTE PTR [rax],al
    792d:	13 28                	adc    ebp,DWORD PTR [rax]
    792f:	1c 83                	sbb    al,0x83
    7931:	21 00                	and    DWORD PTR [rax],eax
    7933:	00 08                	add    BYTE PTR [rax],cl
    7935:	e9 08 00 00 13       	jmp    13007942 <_end+0x1300192a>
    793a:	29 14 a6             	sub    DWORD PTR [rsi+riz*4],edx
    793d:	21 00                	and    DWORD PTR [rax],eax
    793f:	00 08                	add    BYTE PTR [rax],cl
    7941:	a9 00 00 00 13       	test   eax,0x13000000
    7946:	2a 16                	sub    dl,BYTE PTR [rsi]
    7948:	e3 20                	jrcxz  796a <_end+0x1952>
    794a:	00 00                	add    BYTE PTR [rax],al
    794c:	08 e5                	or     ch,ah
    794e:	2f                   	(bad)
    794f:	00 00                	add    BYTE PTR [rax],al
    7951:	13 2c 19             	adc    ebp,DWORD PTR [rcx+rbx*1]
    7954:	b2 21                	mov    dl,0x21
    7956:	00 00                	add    BYTE PTR [rax],al
    7958:	08 85 05 00 00 13    	or     BYTE PTR [rbp+0x13000005],al
    795e:	2d 1b 8a 21 00       	sub    eax,0x218a1b
    7963:	00 08                	add    BYTE PTR [rax],cl
    7965:	fa                   	cli
    7966:	24 00                	and    al,0x0
    7968:	00 13                	add    BYTE PTR [rbx],dl
    796a:	34 12                	xor    al,0x12
    796c:	cc                   	int3
    796d:	21 00                	and    DWORD PTR [rax],eax
    796f:	00 08                	add    BYTE PTR [rax],cl
    7971:	99                   	cdq
    7972:	0d 00 00 13 35       	or     eax,0x35130000
    7977:	13 d8                	adc    ebx,eax
    7979:	21 00                	and    DWORD PTR [rax],eax
    797b:	00 08                	add    BYTE PTR [rax],cl
    797d:	c8 28 00 00          	enter  0x28,0x0
    7981:	13 36                	adc    esi,DWORD PTR [rsi]
    7983:	13 e4                	adc    esp,esp
    7985:	21 00                	and    DWORD PTR [rax],eax
    7987:	00 08                	add    BYTE PTR [rax],cl
    7989:	40 15 00 00 13 37    	rex adc eax,0x37130000
    798f:	14 f0                	adc    al,0xf0
    7991:	21 00                	and    DWORD PTR [rax],eax
    7993:	00 08                	add    BYTE PTR [rax],cl
    7995:	ee                   	out    dx,al
    7996:	31 00                	xor    DWORD PTR [rax],eax
    7998:	00 13                	add    BYTE PTR [rbx],dl
    799a:	38 13                	cmp    BYTE PTR [rbx],dl
    799c:	fc                   	cld
    799d:	21 00                	and    DWORD PTR [rax],eax
    799f:	00 08                	add    BYTE PTR [rax],cl
    79a1:	88 1d 00 00 13 39    	mov    BYTE PTR [rip+0x39130000],bl        # 391379a7 <_end+0x3913198f>
    79a7:	14 08                	adc    al,0x8
    79a9:	22 00                	and    al,BYTE PTR [rax]
    79ab:	00 08                	add    BYTE PTR [rax],cl
    79ad:	ba 2e 00 00 13       	mov    edx,0x1300002e
    79b2:	3a 13                	cmp    dl,BYTE PTR [rbx]
    79b4:	14 22                	adc    al,0x22
    79b6:	00 00                	add    BYTE PTR [rax],al
    79b8:	08 c1                	or     cl,al
    79ba:	19 00                	sbb    DWORD PTR [rax],eax
    79bc:	00 13                	add    BYTE PTR [rbx],dl
    79be:	3b 14 20             	cmp    edx,DWORD PTR [rax+riz*1]
    79c1:	22 00                	and    al,BYTE PTR [rax]
    79c3:	00 08                	add    BYTE PTR [rax],cl
    79c5:	fb                   	sti
    79c6:	22 00                	and    al,BYTE PTR [rax]
    79c8:	00 13                	add    BYTE PTR [rbx],dl
    79ca:	48 12 b2 21 00 00 08 	rex.W adc sil,BYTE PTR [rdx+0x8000021]
    79d1:	14 2f                	adc    al,0x2f
    79d3:	00 00                	add    BYTE PTR [rax],al
    79d5:	13 49 1b             	adc    ecx,DWORD PTR [rcx+0x1b]
    79d8:	8a 21                	mov    ah,BYTE PTR [rcx]
    79da:	00 00                	add    BYTE PTR [rax],al
    79dc:	08 4b 0b             	or     BYTE PTR [rbx+0xb],cl
    79df:	00 00                	add    BYTE PTR [rax],al
    79e1:	13 98 19 b2 21 00    	adc    ebx,DWORD PTR [rax+0x21b219]
    79e7:	00 08                	add    BYTE PTR [rax],cl
    79e9:	00 2b                	add    BYTE PTR [rbx],ch
    79eb:	00 00                	add    BYTE PTR [rax],al
    79ed:	13 99 1b b2 21 00    	adc    ebx,DWORD PTR [rcx+0x21b21b]
    79f3:	00 08                	add    BYTE PTR [rax],cl
    79f5:	aa                   	stos   BYTE PTR es:[rdi],al
    79f6:	24 00                	and    al,0x0
    79f8:	00 13                	add    BYTE PTR [rbx],dl
    79fa:	9c                   	pushf
    79fb:	1b b2 21 00 00 08    	sbb    esi,DWORD PTR [rdx+0x8000021]
    7a01:	42 0b 00             	rex.X or eax,DWORD PTR [rax]
    7a04:	00 13                	add    BYTE PTR [rbx],dl
    7a06:	a0 1a b2 21 00 00 77 	movabs al,ds:0x80877000021b21a
    7a0d:	08 08 
    7a0f:	b5 0a                	mov    ch,0xa
    7a11:	00 00                	add    BYTE PTR [rax],al
    7a13:	13 c5                	adc    eax,ebp
    7a15:	21 b2 21 00 00 0d    	and    DWORD PTR [rdx+0xd000021],esi
    7a1b:	e7 22                	out    0x22,eax
    7a1d:	00 00                	add    BYTE PTR [rax],al
    7a1f:	12 01                	adc    al,BYTE PTR [rcx]
    7a21:	06                   	(bad)
    7a22:	08 02                	or     BYTE PTR [rdx],al
    7a24:	00 00                	add    BYTE PTR [rax],al
    7a26:	13 e7                	adc    esp,edi
    7a28:	22 00                	and    al,BYTE PTR [rax]
    7a2a:	00 08                	add    BYTE PTR [rax],cl
    7a2c:	f1                   	int1
    7a2d:	25 00 00 14 a3       	and    eax,0xa3140000
    7a32:	0f 35                	sysexitd
    7a34:	00 00                	add    BYTE PTR [rax],al
    7a36:	00 08                	add    BYTE PTR [rax],cl
    7a38:	13 23                	adc    esp,DWORD PTR [rbx]
    7a3a:	00 00                	add    BYTE PTR [rax],al
    7a3c:	14 a4                	adc    al,0xa4
    7a3e:	10 2e                	adc    BYTE PTR [rsi],ch
    7a40:	00 00                	add    BYTE PTR [rax],al
    7a42:	00 12                	add    BYTE PTR [rdx],dl
    7a44:	04 04                	add    al,0x4
    7a46:	29 2e                	sub    DWORD PTR [rsi],ebp
    7a48:	00 00                	add    BYTE PTR [rax],al
    7a4a:	12 08                	adc    cl,BYTE PTR [rax]
    7a4c:	04 10                	add    al,0x10
    7a4e:	32 00                	xor    al,BYTE PTR [rax]
    7a50:	00 12                	add    BYTE PTR [rdx],dl
    7a52:	10 04 0c             	adc    BYTE PTR [rsp+rcx*1],al
    7a55:	31 00                	xor    DWORD PTR [rax],eax
    7a57:	00 12                	add    BYTE PTR [rdx],dl
    7a59:	08 04 ad 19 00 00 12 	or     BYTE PTR [rbp*4+0x12000019],al
    7a60:	10 04 5b             	adc    BYTE PTR [rbx+rbx*2],al
    7a63:	0c 00                	or     al,0x0
    7a65:	00 08                	add    BYTE PTR [rax],cl
    7a67:	d6                   	(bad)
    7a68:	0a 00                	or     al,BYTE PTR [rax]
    7a6a:	00 15 d6 17 8a 21    	add    BYTE PTR [rip+0x218a17d6],dl        # 218a9246 <_end+0x218a322e>
    7a70:	00 00                	add    BYTE PTR [rax],al
    7a72:	35 08 16 3c 03       	xor    eax,0x33c1608
    7a77:	dd 02                	fld    QWORD PTR [rdx]
    7a79:	00 00                	add    BYTE PTR [rax],al
    7a7b:	61                   	(bad)
    7a7c:	23 00                	and    eax,DWORD PTR [rax]
    7a7e:	00 06                	add    BYTE PTR [rsi],al
    7a80:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7a83:	00 16                	add    BYTE PTR [rsi],dl
    7a85:	3d 09 a6 21 00       	cmp    eax,0x21a609
    7a8a:	00 00                	add    BYTE PTR [rax],al
    7a8c:	46 72 65             	rex.RX jb 7af4 <_end+0x1adc>
    7a8f:	6d                   	ins    DWORD PTR es:[rdi],dx
    7a90:	00 3e                	add    BYTE PTR [rsi],bh
    7a92:	09 a6 21 00 00 04    	or     DWORD PTR [rsi+0x4000021],esp
    7a98:	00 08                	add    BYTE PTR [rax],cl
    7a9a:	de 02                	fiadd  WORD PTR [rdx]
    7a9c:	00 00                	add    BYTE PTR [rax],al
    7a9e:	16                   	(bad)
    7a9f:	3f                   	(bad)
    7aa0:	05 3a 23 00 00       	add    eax,0x233a
    7aa5:	35 10 16 44 03       	xor    eax,0x3441610
    7aaa:	09 00                	or     DWORD PTR [rax],eax
    7aac:	00 00                	add    BYTE PTR [rax],al
    7aae:	94                   	xchg   esp,eax
    7aaf:	23 00                	and    eax,DWORD PTR [rax]
    7ab1:	00 06                	add    BYTE PTR [rsi],al
    7ab3:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7ab6:	00 16                	add    BYTE PTR [rsi],dl
    7ab8:	45 0e                	rex.RB (bad)
    7aba:	b2 21                	mov    dl,0x21
    7abc:	00 00                	add    BYTE PTR [rax],al
    7abe:	00 46 72             	add    BYTE PTR [rsi+0x72],al
    7ac1:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    7ac3:	00 46 0e             	add    BYTE PTR [rsi+0xe],al
    7ac6:	b2 21                	mov    dl,0x21
    7ac8:	00 00                	add    BYTE PTR [rax],al
    7aca:	08 00                	or     BYTE PTR [rax],al
    7acc:	08 0a                	or     BYTE PTR [rdx],cl
    7ace:	00 00                	add    BYTE PTR [rax],al
    7ad0:	00 16                	add    BYTE PTR [rsi],dl
    7ad2:	47 05 6d 23 00 00    	rex.RXB add eax,0x236d
    7ad8:	35 10 16 4e 03       	xor    eax,0x34e1610
    7add:	b4 00                	mov    ah,0x0
    7adf:	00 00                	add    BYTE PTR [rax],al
    7ae1:	c7                   	(bad)
    7ae2:	23 00                	and    eax,DWORD PTR [rax]
    7ae4:	00 06                	add    BYTE PTR [rsi],al
    7ae6:	49 02 00             	rex.WB add al,BYTE PTR [r8]
    7ae9:	00 16                	add    BYTE PTR [rsi],dl
    7aeb:	4f 13 be 21 00 00 00 	rex.WRXB adc r15,QWORD PTR [r14+0x21]
    7af2:	46 72 65             	rex.RX jb 7b5a <_end+0x1b42>
    7af5:	6d                   	ins    DWORD PTR es:[rdi],dx
    7af6:	00 50 13             	add    BYTE PTR [rax+0x13],dl
    7af9:	be 21 00 00 08       	mov    esi,0x8000021
    7afe:	00 08                	add    BYTE PTR [rax],cl
    7b00:	b5 00                	mov    ch,0x0
    7b02:	00 00                	add    BYTE PTR [rax],al
    7b04:	16                   	(bad)
    7b05:	51                   	push   rcx
    7b06:	05 a0 23 00 00       	add    eax,0x23a0
    7b0b:	0d ee 22 00 00       	or     eax,0x22ee
    7b10:	57                   	push   rdi
    7b11:	d3 23                	shl    DWORD PTR [rbx],cl
    7b13:	00 00                	add    BYTE PTR [rax],al
    7b15:	08 ac 24 00 00 17 07 	or     BYTE PTR [rsp+0x7170000],ch
    7b1c:	13 bc 22 00 00 08 44 	adc    edi,DWORD PTR [rdx+riz*1+0x44080000]
    7b23:	0b 00                	or     eax,DWORD PTR [rax]
    7b25:	00 18                	add    BYTE PTR [rax],bl
    7b27:	0a 12                	or     dl,BYTE PTR [rdx]
    7b29:	c8 22 00 00          	enter  0x22,0x0
    7b2d:	13 e9                	adc    ebp,ecx
    7b2f:	23 00                	and    eax,DWORD PTR [rax]
    7b31:	00 08                	add    BYTE PTR [rax],cl
    7b33:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    7b34:	26 00 00             	es add BYTE PTR [rax],al
    7b37:	19 18                	sbb    DWORD PTR [rax],ebx
    7b39:	12 cc                	adc    cl,ah
    7b3b:	21 00                	and    DWORD PTR [rax],eax
    7b3d:	00 08                	add    BYTE PTR [rax],cl
    7b3f:	2c 2a                	sub    al,0x2a
    7b41:	00 00                	add    BYTE PTR [rax],al
    7b43:	19 19                	sbb    DWORD PTR [rcx],ebx
    7b45:	13 e4                	adc    esp,esp
    7b47:	21 00                	and    DWORD PTR [rax],eax
    7b49:	00 08                	add    BYTE PTR [rax],cl
    7b4b:	eb 08                	jmp    7b55 <_end+0x1b3d>
    7b4d:	00 00                	add    BYTE PTR [rax],al
    7b4f:	19 1a                	sbb    DWORD PTR [rdx],ebx
    7b51:	13 fc                	adc    edi,esp
    7b53:	21 00                	and    DWORD PTR [rax],eax
    7b55:	00 08                	add    BYTE PTR [rax],cl
    7b57:	e7 2f                	out    0x2f,eax
    7b59:	00 00                	add    BYTE PTR [rax],al
    7b5b:	19 1b                	sbb    DWORD PTR [rbx],ebx
    7b5d:	13 14 22             	adc    edx,DWORD PTR [rdx+riz*1]
    7b60:	00 00                	add    BYTE PTR [rax],al
    7b62:	1b 0f                	sbb    ecx,DWORD PTR [rdi]
    7b64:	0b 00                	or     eax,DWORD PTR [rax]
    7b66:	00 10                	add    BYTE PTR [rax],dl
    7b68:	1a 0b                	sbb    cl,BYTE PTR [rbx]
    7b6a:	08 52 24             	or     BYTE PTR [rdx+0x24],dl
    7b6d:	00 00                	add    BYTE PTR [rax],al
    7b6f:	06                   	(bad)
    7b70:	ae                   	scas   al,BYTE PTR es:[rdi]
    7b71:	0a 00                	or     al,BYTE PTR [rax]
    7b73:	00 1a                	add    BYTE PTR [rdx],bl
    7b75:	10 0c c8             	adc    BYTE PTR [rax+rcx*8],cl
    7b78:	22 00                	and    al,BYTE PTR [rax]
    7b7a:	00 00                	add    BYTE PTR [rax],al
    7b7c:	06                   	(bad)
    7b7d:	9e                   	sahf
    7b7e:	0a 00                	or     al,BYTE PTR [rax]
    7b80:	00 1a                	add    BYTE PTR [rdx],bl
    7b82:	15 15 d6 22 00       	adc    eax,0x22d615
    7b87:	00 08                	add    BYTE PTR [rax],cl
    7b89:	00 25 e7 22 00 00    	add    BYTE PTR [rip+0x22e7],ah        # 9e76 <_end+0x3e5e>
    7b8f:	62 24 00             	(bad)
    7b92:	00 26                	add    BYTE PTR [rsi],ah
    7b94:	8a 21                	mov    ah,BYTE PTR [rcx]
    7b96:	00 00                	add    BYTE PTR [rax],al
    7b98:	03 00                	add    eax,DWORD PTR [rax]
    7b9a:	42 cf                	rex.X iret
    7b9c:	02 00                	add    al,BYTE PTR [rax]
    7b9e:	00 16                	add    BYTE PTR [rsi],dl
    7ba0:	b4 03                	mov    ah,0x3
    7ba2:	0f 6f 24 00          	movq   mm4,QWORD PTR [rax+rax*1]
    7ba6:	00 0d 74 24 00 00    	add    BYTE PTR [rip+0x2474],cl        # a020 <_end+0x4008>
    7bac:	58                   	pop    rax
    7bad:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    7bae:	21 00                	and    DWORD PTR [rax],eax
    7bb0:	00 88 24 00 00 01    	add    BYTE PTR [rax+0x1000024],cl
    7bb6:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7bb9:	00 01                	add    BYTE PTR [rcx],al
    7bbb:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    7bbe:	00 00                	add    BYTE PTR [rax],al
    7bc0:	0d 8d 24 00 00       	or     eax,0x248d
    7bc5:	78 12                	js     7bd9 <_end+0x1bc1>
    7bc7:	10 07                	adc    BYTE PTR [rdi],al
    7bc9:	66 07                	data16 (bad)
    7bcb:	00 00                	add    BYTE PTR [rax],al
    7bcd:	12 10                	adc    dl,BYTE PTR [rax]
    7bcf:	05 ea 01 00 00       	add    eax,0x1ea
    7bd4:	12 04 05 61 02 00 00 	adc    al,BYTE PTR [rax*1+0x261]
    7bdb:	13 9c 24 00 00 12 02 	adc    ebx,DWORD PTR [rsp+0x2120000]
    7be2:	10 19                	adc    BYTE PTR [rcx],bl
    7be4:	32 00                	xor    al,BYTE PTR [rax]
    7be6:	00 12                	add    BYTE PTR [rdx],dl
    7be8:	04 10                	add    al,0x10
    7bea:	e4 2b                	in     al,0x2b
    7bec:	00 00                	add    BYTE PTR [rax],al
    7bee:	33 7c 1d 00          	xor    edi,DWORD PTR [rbp+rbx*1+0x0]
    7bf2:	00 06                	add    BYTE PTR [rsi],al
    7bf4:	38 0b                	cmp    BYTE PTR [rbx],cl
    7bf6:	cb                   	retf
    7bf7:	24 00                	and    al,0x0
    7bf9:	00 79 06             	add    BYTE PTR [rcx+0x6],bh
    7bfc:	3a 18                	cmp    bl,BYTE PTR [rax]
    7bfe:	69 00 00 00 00 12    	imul   eax,DWORD PTR [rax],0x12000000
    7c04:	10 04 8c             	adc    BYTE PTR [rsp+rcx*4],al
    7c07:	02 00                	add    al,BYTE PTR [rax]
    7c09:	00 02                	add    BYTE PTR [rdx],al
    7c0b:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c0d:	0c 71                	or     al,0x71
    7c0f:	00 00                	add    BYTE PTR [rax],al
    7c11:	00 02                	add    BYTE PTR [rdx],al
    7c13:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c15:	0c 8a                	or     al,0x8a
    7c17:	00 00                	add    BYTE PTR [rax],al
    7c19:	00 02                	add    BYTE PTR [rdx],al
    7c1b:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c1d:	0c a3                	or     al,0xa3
    7c1f:	00 00                	add    BYTE PTR [rax],al
    7c21:	00 02                	add    BYTE PTR [rdx],al
    7c23:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c25:	0c bc                	or     al,0xbc
    7c27:	00 00                	add    BYTE PTR [rax],al
    7c29:	00 02                	add    BYTE PTR [rdx],al
    7c2b:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c2d:	0c d5                	or     al,0xd5
    7c2f:	00 00                	add    BYTE PTR [rax],al
    7c31:	00 02                	add    BYTE PTR [rdx],al
    7c33:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c35:	0c ee                	or     al,0xee
    7c37:	00 00                	add    BYTE PTR [rax],al
    7c39:	00 02                	add    BYTE PTR [rdx],al
    7c3b:	1b 26                	sbb    esp,DWORD PTR [rsi]
    7c3d:	0c 07                	or     al,0x7
    7c3f:	01 00                	add    DWORD PTR [rax],eax
    7c41:	00 02                	add    BYTE PTR [rdx],al
    7c43:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7c45:	0c 20                	or     al,0x20
    7c47:	01 00                	add    DWORD PTR [rax],eax
    7c49:	00 02                	add    BYTE PTR [rdx],al
    7c4b:	1b 27                	sbb    esp,DWORD PTR [rdi]
    7c4d:	0c 3a                	or     al,0x3a
    7c4f:	01 00                	add    DWORD PTR [rax],eax
    7c51:	00 02                	add    BYTE PTR [rdx],al
    7c53:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7c55:	0c 54                	or     al,0x54
    7c57:	01 00                	add    DWORD PTR [rax],eax
    7c59:	00 02                	add    BYTE PTR [rdx],al
    7c5b:	1b 28                	sbb    ebp,DWORD PTR [rax]
    7c5d:	0c 6e                	or     al,0x6e
    7c5f:	01 00                	add    DWORD PTR [rax],eax
    7c61:	00 02                	add    BYTE PTR [rdx],al
    7c63:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7c65:	0c 88                	or     al,0x88
    7c67:	01 00                	add    DWORD PTR [rax],eax
    7c69:	00 02                	add    BYTE PTR [rdx],al
    7c6b:	1b 29                	sbb    ebp,DWORD PTR [rcx]
    7c6d:	0c a2                	or     al,0xa2
    7c6f:	01 00                	add    DWORD PTR [rax],eax
    7c71:	00 02                	add    BYTE PTR [rdx],al
    7c73:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7c75:	0c bc                	or     al,0xbc
    7c77:	01 00                	add    DWORD PTR [rax],eax
    7c79:	00 02                	add    BYTE PTR [rdx],al
    7c7b:	1b 2a                	sbb    ebp,DWORD PTR [rdx]
    7c7d:	0c db                	or     al,0xdb
    7c7f:	01 00                	add    DWORD PTR [rax],eax
    7c81:	00 02                	add    BYTE PTR [rdx],al
    7c83:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7c85:	0c fa                	or     al,0xfa
    7c87:	01 00                	add    DWORD PTR [rax],eax
    7c89:	00 02                	add    BYTE PTR [rdx],al
    7c8b:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    7c8d:	0c 13                	or     al,0x13
    7c8f:	02 00                	add    al,BYTE PTR [rax]
    7c91:	00 02                	add    BYTE PTR [rdx],al
    7c93:	1b 2c 0c             	sbb    ebp,DWORD PTR [rsp+rcx*1]
    7c96:	2c 02                	sub    al,0x2
    7c98:	00 00                	add    BYTE PTR [rax],al
    7c9a:	02 1b                	add    bl,BYTE PTR [rbx]
    7c9c:	2c 0c                	sub    al,0xc
    7c9e:	45 02 00             	add    r8b,BYTE PTR [r8]
    7ca1:	00 02                	add    BYTE PTR [rdx],al
    7ca3:	1b 2d 0c 5e 02 00    	sbb    ebp,DWORD PTR [rip+0x25e0c]        # 2dab5 <_end+0x27a9d>
    7ca9:	00 02                	add    BYTE PTR [rdx],al
    7cab:	1b 2d 0c 77 02 00    	sbb    ebp,DWORD PTR [rip+0x2770c]        # 2f3bd <_end+0x293a5>
    7cb1:	00 02                	add    BYTE PTR [rdx],al
    7cb3:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7cb5:	0c 90                	or     al,0x90
    7cb7:	02 00                	add    al,BYTE PTR [rax]
    7cb9:	00 02                	add    BYTE PTR [rdx],al
    7cbb:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    7cbd:	0c aa                	or     al,0xaa
    7cbf:	02 00                	add    al,BYTE PTR [rax]
    7cc1:	00 02                	add    BYTE PTR [rdx],al
    7cc3:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7cc5:	0c c4                	or     al,0xc4
    7cc7:	02 00                	add    al,BYTE PTR [rax]
    7cc9:	00 02                	add    BYTE PTR [rdx],al
    7ccb:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    7ccd:	0c df                	or     al,0xdf
    7ccf:	02 00                	add    al,BYTE PTR [rax]
    7cd1:	00 02                	add    BYTE PTR [rdx],al
    7cd3:	1b 30                	sbb    esi,DWORD PTR [rax]
    7cd5:	0c fa                	or     al,0xfa
    7cd7:	02 00                	add    al,BYTE PTR [rax]
    7cd9:	00 02                	add    BYTE PTR [rdx],al
    7cdb:	1b 30                	sbb    esi,DWORD PTR [rax]
    7cdd:	0c 15                	or     al,0x15
    7cdf:	03 00                	add    eax,DWORD PTR [rax]
    7ce1:	00 02                	add    BYTE PTR [rdx],al
    7ce3:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7ce5:	0c 30                	or     al,0x30
    7ce7:	03 00                	add    eax,DWORD PTR [rax]
    7ce9:	00 02                	add    BYTE PTR [rdx],al
    7ceb:	1b 31                	sbb    esi,DWORD PTR [rcx]
    7ced:	0c 49                	or     al,0x49
    7cef:	03 00                	add    eax,DWORD PTR [rax]
    7cf1:	00 0d a6 21 00 00    	add    BYTE PTR [rip+0x21a6],cl        # 9e9d <_end+0x3e85>
    7cf7:	02 1b                	add    bl,BYTE PTR [rbx]
    7cf9:	32 0c 62             	xor    cl,BYTE PTR [rdx+riz*2]
    7cfc:	03 00                	add    eax,DWORD PTR [rax]
    7cfe:	00 02                	add    BYTE PTR [rdx],al
    7d00:	1b 32                	sbb    esi,DWORD PTR [rdx]
    7d02:	0c 82                	or     al,0x82
    7d04:	03 00                	add    eax,DWORD PTR [rax]
    7d06:	00 02                	add    BYTE PTR [rdx],al
    7d08:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7d0a:	0c a2                	or     al,0xa2
    7d0c:	03 00                	add    eax,DWORD PTR [rax]
    7d0e:	00 02                	add    BYTE PTR [rdx],al
    7d10:	1b 33                	sbb    esi,DWORD PTR [rbx]
    7d12:	0c c2                	or     al,0xc2
    7d14:	03 00                	add    eax,DWORD PTR [rax]
    7d16:	00 02                	add    BYTE PTR [rdx],al
    7d18:	1b 34 0c             	sbb    esi,DWORD PTR [rsp+rcx*1]
    7d1b:	e2 03                	loop   7d20 <_end+0x1d08>
    7d1d:	00 00                	add    BYTE PTR [rax],al
    7d1f:	02 1b                	add    bl,BYTE PTR [rbx]
    7d21:	34 0c                	xor    al,0xc
    7d23:	fb                   	sti
    7d24:	03 00                	add    eax,DWORD PTR [rax]
    7d26:	00 02                	add    BYTE PTR [rdx],al
    7d28:	1b 35 0c 14 04 00    	sbb    esi,DWORD PTR [rip+0x4140c]        # 4913a <_end+0x43122>
    7d2e:	00 02                	add    BYTE PTR [rdx],al
    7d30:	1b 35 0c 2f 04 00    	sbb    esi,DWORD PTR [rip+0x42f0c]        # 4ac42 <_end+0x44c2a>
    7d36:	00 0d c5 21 00 00    	add    BYTE PTR [rip+0x21c5],cl        # 9f01 <_end+0x3ee9>
    7d3c:	02 1b                	add    bl,BYTE PTR [rbx]
    7d3e:	36 0c 4a             	ss or  al,0x4a
    7d41:	04 00                	add    al,0x0
    7d43:	00 0d 35 00 00 00    	add    BYTE PTR [rip+0x35],cl        # 7d7e <_end+0x1d66>
    7d49:	02 1b                	add    bl,BYTE PTR [rbx]
    7d4b:	36 0c 6a             	ss or  al,0x6a
    7d4e:	04 00                	add    al,0x0
    7d50:	00 02                	add    BYTE PTR [rdx],al
    7d52:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7d54:	0c 8a                	or     al,0x8a
    7d56:	04 00                	add    al,0x0
    7d58:	00 02                	add    BYTE PTR [rdx],al
    7d5a:	1b 37                	sbb    esi,DWORD PTR [rdi]
    7d5c:	0c a8                	or     al,0xa8
    7d5e:	04 00                	add    al,0x0
    7d60:	00 02                	add    BYTE PTR [rdx],al
    7d62:	1b 38                	sbb    edi,DWORD PTR [rax]
    7d64:	0c c6                	or     al,0xc6
    7d66:	04 00                	add    al,0x0
    7d68:	00 02                	add    BYTE PTR [rdx],al
    7d6a:	1b 38                	sbb    edi,DWORD PTR [rax]
    7d6c:	0c e1                	or     al,0xe1
    7d6e:	04 00                	add    al,0x0
    7d70:	00 02                	add    BYTE PTR [rdx],al
    7d72:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7d74:	0c fc                	or     al,0xfc
    7d76:	04 00                	add    al,0x0
    7d78:	00 02                	add    BYTE PTR [rdx],al
    7d7a:	1b 39                	sbb    edi,DWORD PTR [rcx]
    7d7c:	0c 16                	or     al,0x16
    7d7e:	05 00 00 02 1b       	add    eax,0x1b020000
    7d83:	3a 0c 30             	cmp    cl,BYTE PTR [rax+rsi*1]
    7d86:	05 00 00 02 1b       	add    eax,0x1b020000
    7d8b:	3a 0c 4a             	cmp    cl,BYTE PTR [rdx+rcx*2]
    7d8e:	05 00 00 02 1b       	add    eax,0x1b020000
    7d93:	3b 0c 64             	cmp    ecx,DWORD PTR [rsp+riz*2]
    7d96:	05 00 00 02 1b       	add    eax,0x1b020000
    7d9b:	3b 0c 7f             	cmp    ecx,DWORD PTR [rdi+rdi*2]
    7d9e:	05 00 00 02 1b       	add    eax,0x1b020000
    7da3:	3c 0c                	cmp    al,0xc
    7da5:	99                   	cdq
    7da6:	05 00 00 02 1b       	add    eax,0x1b020000
    7dab:	3c 0c                	cmp    al,0xc
    7dad:	b9 05 00 00 02       	mov    ecx,0x2000005
    7db2:	1b 3f                	sbb    edi,DWORD PTR [rdi]
    7db4:	0c d9                	or     al,0xd9
    7db6:	05 00 00 02 1b       	add    eax,0x1b020000
    7dbb:	3f                   	(bad)
    7dbc:	0c f4                	or     al,0xf4
    7dbe:	05 00 00 02 1b       	add    eax,0x1b020000
    7dc3:	3f                   	(bad)
    7dc4:	0c 0f                	or     al,0xf
    7dc6:	06                   	(bad)
    7dc7:	00 00                	add    BYTE PTR [rax],al
    7dc9:	02 1b                	add    bl,BYTE PTR [rbx]
    7dcb:	40 0c 2a             	rex or al,0x2a
    7dce:	06                   	(bad)
    7dcf:	00 00                	add    BYTE PTR [rax],al
    7dd1:	02 1b                	add    bl,BYTE PTR [rbx]
    7dd3:	40 0c 45             	rex or al,0x45
    7dd6:	06                   	(bad)
    7dd7:	00 00                	add    BYTE PTR [rax],al
    7dd9:	02 1b                	add    bl,BYTE PTR [rbx]
    7ddb:	40 0c 60             	rex or al,0x60
    7dde:	06                   	(bad)
    7ddf:	00 00                	add    BYTE PTR [rax],al
    7de1:	02 1b                	add    bl,BYTE PTR [rbx]
    7de3:	41 0c 7b             	rex.B or al,0x7b
    7de6:	06                   	(bad)
    7de7:	00 00                	add    BYTE PTR [rax],al
    7de9:	02 1b                	add    bl,BYTE PTR [rbx]
    7deb:	41 0c 96             	rex.B or al,0x96
    7dee:	06                   	(bad)
    7def:	00 00                	add    BYTE PTR [rax],al
    7df1:	02 1b                	add    bl,BYTE PTR [rbx]
    7df3:	41 0c b1             	rex.B or al,0xb1
    7df6:	06                   	(bad)
    7df7:	00 00                	add    BYTE PTR [rax],al
    7df9:	02 1b                	add    bl,BYTE PTR [rbx]
    7dfb:	42 0c cc             	rex.X or al,0xcc
    7dfe:	06                   	(bad)
    7dff:	00 00                	add    BYTE PTR [rax],al
    7e01:	02 1b                	add    bl,BYTE PTR [rbx]
    7e03:	42 0c e7             	rex.X or al,0xe7
    7e06:	06                   	(bad)
    7e07:	00 00                	add    BYTE PTR [rax],al
    7e09:	02 1b                	add    bl,BYTE PTR [rbx]
    7e0b:	42 0c 02             	rex.X or al,0x2
    7e0e:	07                   	(bad)
    7e0f:	00 00                	add    BYTE PTR [rax],al
    7e11:	02 1b                	add    bl,BYTE PTR [rbx]
    7e13:	43 0c 1d             	rex.XB or al,0x1d
    7e16:	07                   	(bad)
    7e17:	00 00                	add    BYTE PTR [rax],al
    7e19:	02 1b                	add    bl,BYTE PTR [rbx]
    7e1b:	43 0c 38             	rex.XB or al,0x38
    7e1e:	07                   	(bad)
    7e1f:	00 00                	add    BYTE PTR [rax],al
    7e21:	02 1b                	add    bl,BYTE PTR [rbx]
    7e23:	43 0c 53             	rex.XB or al,0x53
    7e26:	07                   	(bad)
    7e27:	00 00                	add    BYTE PTR [rax],al
    7e29:	02 1b                	add    bl,BYTE PTR [rbx]
    7e2b:	44 0c 6e             	rex.R or al,0x6e
    7e2e:	07                   	(bad)
    7e2f:	00 00                	add    BYTE PTR [rax],al
    7e31:	02 1b                	add    bl,BYTE PTR [rbx]
    7e33:	44 0c 89             	rex.R or al,0x89
    7e36:	07                   	(bad)
    7e37:	00 00                	add    BYTE PTR [rax],al
    7e39:	02 1b                	add    bl,BYTE PTR [rbx]
    7e3b:	44 0c a4             	rex.R or al,0xa4
    7e3e:	07                   	(bad)
    7e3f:	00 00                	add    BYTE PTR [rax],al
    7e41:	02 1b                	add    bl,BYTE PTR [rbx]
    7e43:	45 0c bf             	rex.RB or al,0xbf
    7e46:	07                   	(bad)
    7e47:	00 00                	add    BYTE PTR [rax],al
    7e49:	02 1b                	add    bl,BYTE PTR [rbx]
    7e4b:	45 0c df             	rex.RB or al,0xdf
    7e4e:	07                   	(bad)
    7e4f:	00 00                	add    BYTE PTR [rax],al
    7e51:	02 1b                	add    bl,BYTE PTR [rbx]
    7e53:	45 0c ff             	rex.RB or al,0xff
    7e56:	07                   	(bad)
    7e57:	00 00                	add    BYTE PTR [rax],al
    7e59:	02 1b                	add    bl,BYTE PTR [rbx]
    7e5b:	46 0c 1f             	rex.RX or al,0x1f
    7e5e:	08 00                	or     BYTE PTR [rax],al
    7e60:	00 02                	add    BYTE PTR [rdx],al
    7e62:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7e65:	3f                   	(bad)
    7e66:	08 00                	or     BYTE PTR [rax],al
    7e68:	00 02                	add    BYTE PTR [rdx],al
    7e6a:	1b 46 0c             	sbb    eax,DWORD PTR [rsi+0xc]
    7e6d:	5f                   	pop    rdi
    7e6e:	08 00                	or     BYTE PTR [rax],al
    7e70:	00 02                	add    BYTE PTR [rdx],al
    7e72:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7e75:	7f 08                	jg     7e7f <_end+0x1e67>
    7e77:	00 00                	add    BYTE PTR [rax],al
    7e79:	02 1b                	add    bl,BYTE PTR [rbx]
    7e7b:	47 0c 9f             	rex.RXB or al,0x9f
    7e7e:	08 00                	or     BYTE PTR [rax],al
    7e80:	00 02                	add    BYTE PTR [rdx],al
    7e82:	1b 47 0c             	sbb    eax,DWORD PTR [rdi+0xc]
    7e85:	bf 08 00 00 02       	mov    edi,0x2000008
    7e8a:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7e8d:	df 08                	fisttp WORD PTR [rax]
    7e8f:	00 00                	add    BYTE PTR [rax],al
    7e91:	02 1b                	add    bl,BYTE PTR [rbx]
    7e93:	48 0c ff             	rex.W or al,0xff
    7e96:	08 00                	or     BYTE PTR [rax],al
    7e98:	00 02                	add    BYTE PTR [rdx],al
    7e9a:	1b 48 0c             	sbb    ecx,DWORD PTR [rax+0xc]
    7e9d:	1f                   	(bad)
    7e9e:	09 00                	or     DWORD PTR [rax],eax
    7ea0:	00 02                	add    BYTE PTR [rdx],al
    7ea2:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7ea5:	3f                   	(bad)
    7ea6:	09 00                	or     DWORD PTR [rax],eax
    7ea8:	00 02                	add    BYTE PTR [rdx],al
    7eaa:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7ead:	5f                   	pop    rdi
    7eae:	09 00                	or     DWORD PTR [rax],eax
    7eb0:	00 02                	add    BYTE PTR [rdx],al
    7eb2:	1b 49 0c             	sbb    ecx,DWORD PTR [rcx+0xc]
    7eb5:	7f 09                	jg     7ec0 <_end+0x1ea8>
    7eb7:	00 00                	add    BYTE PTR [rax],al
    7eb9:	02 1b                	add    bl,BYTE PTR [rbx]
    7ebb:	4a 0c 9f             	rex.WX or al,0x9f
    7ebe:	09 00                	or     DWORD PTR [rax],eax
    7ec0:	00 02                	add    BYTE PTR [rdx],al
    7ec2:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7ec5:	bf 09 00 00 02       	mov    edi,0x2000009
    7eca:	1b 4a 0c             	sbb    ecx,DWORD PTR [rdx+0xc]
    7ecd:	df 09                	fisttp WORD PTR [rcx]
    7ecf:	00 00                	add    BYTE PTR [rax],al
    7ed1:	02 1b                	add    bl,BYTE PTR [rbx]
    7ed3:	4e 0c ff             	rex.WRX or al,0xff
    7ed6:	09 00                	or     DWORD PTR [rax],eax
    7ed8:	00 02                	add    BYTE PTR [rdx],al
    7eda:	1b 4e 0c             	sbb    ecx,DWORD PTR [rsi+0xc]
    7edd:	1a 0a                	sbb    cl,BYTE PTR [rdx]
    7edf:	00 00                	add    BYTE PTR [rax],al
    7ee1:	02 1b                	add    bl,BYTE PTR [rbx]
    7ee3:	4f 0c 35             	rex.WRXB or al,0x35
    7ee6:	0a 00                	or     al,BYTE PTR [rax]
    7ee8:	00 02                	add    BYTE PTR [rdx],al
    7eea:	1b 4f 0c             	sbb    ecx,DWORD PTR [rdi+0xc]
    7eed:	50                   	push   rax
    7eee:	0a 00                	or     al,BYTE PTR [rax]
    7ef0:	00 02                	add    BYTE PTR [rdx],al
    7ef2:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7ef5:	6b 0a 00             	imul   ecx,DWORD PTR [rdx],0x0
    7ef8:	00 02                	add    BYTE PTR [rdx],al
    7efa:	1b 50 0c             	sbb    edx,DWORD PTR [rax+0xc]
    7efd:	86 0a                	xchg   BYTE PTR [rdx],cl
    7eff:	00 00                	add    BYTE PTR [rax],al
    7f01:	02 1b                	add    bl,BYTE PTR [rbx]
    7f03:	51                   	push   rcx
    7f04:	0c a1                	or     al,0xa1
    7f06:	0a 00                	or     al,BYTE PTR [rax]
    7f08:	00 02                	add    BYTE PTR [rdx],al
    7f0a:	1b 51 0c             	sbb    edx,DWORD PTR [rcx+0xc]
    7f0d:	bc 0a 00 00 02       	mov    esp,0x200000a
    7f12:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7f15:	d7                   	xlat   BYTE PTR ds:[rbx]
    7f16:	0a 00                	or     al,BYTE PTR [rax]
    7f18:	00 02                	add    BYTE PTR [rdx],al
    7f1a:	1b 52 0c             	sbb    edx,DWORD PTR [rdx+0xc]
    7f1d:	f7 0a 00 00 02 1b    	test   DWORD PTR [rdx],0x1b020000
    7f23:	53                   	push   rbx
    7f24:	0c 17                	or     al,0x17
    7f26:	0b 00                	or     eax,DWORD PTR [rax]
    7f28:	00 02                	add    BYTE PTR [rdx],al
    7f2a:	1b 53 0c             	sbb    edx,DWORD PTR [rbx+0xc]
    7f2d:	30 0b                	xor    BYTE PTR [rbx],cl
    7f2f:	00 00                	add    BYTE PTR [rax],al
    7f31:	02 1b                	add    bl,BYTE PTR [rbx]
    7f33:	54                   	push   rsp
    7f34:	0c 49                	or     al,0x49
    7f36:	0b 00                	or     eax,DWORD PTR [rax]
    7f38:	00 02                	add    BYTE PTR [rdx],al
    7f3a:	1b 54 0c 64          	sbb    edx,DWORD PTR [rsp+rcx*1+0x64]
    7f3e:	0b 00                	or     eax,DWORD PTR [rax]
    7f40:	00 02                	add    BYTE PTR [rdx],al
    7f42:	1b 55 0c             	sbb    edx,DWORD PTR [rbp+0xc]
    7f45:	7f 0b                	jg     7f52 <_end+0x1f3a>
    7f47:	00 00                	add    BYTE PTR [rax],al
    7f49:	02 1b                	add    bl,BYTE PTR [rbx]
    7f4b:	55                   	push   rbp
    7f4c:	0c 9a                	or     al,0x9a
    7f4e:	0b 00                	or     eax,DWORD PTR [rax]
    7f50:	00 02                	add    BYTE PTR [rdx],al
    7f52:	1b 56 0c             	sbb    edx,DWORD PTR [rsi+0xc]
    7f55:	b5 0b                	mov    ch,0xb
    7f57:	00 00                	add    BYTE PTR [rax],al
    7f59:	02 1b                	add    bl,BYTE PTR [rbx]
    7f5b:	56                   	push   rsi
    7f5c:	0c d0                	or     al,0xd0
    7f5e:	0b 00                	or     eax,DWORD PTR [rax]
    7f60:	00 02                	add    BYTE PTR [rdx],al
    7f62:	1b 57 0c             	sbb    edx,DWORD PTR [rdi+0xc]
    7f65:	eb 0b                	jmp    7f72 <_end+0x1f5a>
    7f67:	00 00                	add    BYTE PTR [rax],al
    7f69:	02 1b                	add    bl,BYTE PTR [rbx]
    7f6b:	57                   	push   rdi
    7f6c:	0c 0b                	or     al,0xb
    7f6e:	0c 00                	or     al,0x0
    7f70:	00 02                	add    BYTE PTR [rdx],al
    7f72:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7f75:	2b 0c 00             	sub    ecx,DWORD PTR [rax+rax*1]
    7f78:	00 02                	add    BYTE PTR [rdx],al
    7f7a:	1b 58 0c             	sbb    ebx,DWORD PTR [rax+0xc]
    7f7d:	4e 0c 00             	rex.WRX or al,0x0
    7f80:	00 02                	add    BYTE PTR [rdx],al
    7f82:	1b 59 0c             	sbb    ebx,DWORD PTR [rcx+0xc]
    7f85:	71 0c                	jno    7f93 <_end+0x1f7b>
    7f87:	00 00                	add    BYTE PTR [rax],al
    7f89:	02 1b                	add    bl,BYTE PTR [rbx]
    7f8b:	59                   	pop    rcx
    7f8c:	0c 91                	or     al,0x91
    7f8e:	0c 00                	or     al,0x0
    7f90:	00 02                	add    BYTE PTR [rdx],al
    7f92:	1b 5a 0c             	sbb    ebx,DWORD PTR [rdx+0xc]
    7f95:	b1 0c                	mov    cl,0xc
    7f97:	00 00                	add    BYTE PTR [rax],al
    7f99:	02 1b                	add    bl,BYTE PTR [rbx]
    7f9b:	5a                   	pop    rdx
    7f9c:	0c d1                	or     al,0xd1
    7f9e:	0c 00                	or     al,0x0
    7fa0:	00 02                	add    BYTE PTR [rdx],al
    7fa2:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7fa5:	f1                   	int1
    7fa6:	0c 00                	or     al,0x0
    7fa8:	00 02                	add    BYTE PTR [rdx],al
    7faa:	1b 5b 0c             	sbb    ebx,DWORD PTR [rbx+0xc]
    7fad:	16                   	(bad)
    7fae:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fb3:	5b                   	pop    rbx
    7fb4:	0c 3b                	or     al,0x3b
    7fb6:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fbb:	5b                   	pop    rbx
    7fbc:	0c 60                	or     al,0x60
    7fbe:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fc3:	5b                   	pop    rbx
    7fc4:	0c 80                	or     al,0x80
    7fc6:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fcb:	5c                   	pop    rsp
    7fcc:	0c a0                	or     al,0xa0
    7fce:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fd3:	5c                   	pop    rsp
    7fd4:	0c bb                	or     al,0xbb
    7fd6:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fdb:	5d                   	pop    rbp
    7fdc:	0c d6                	or     al,0xd6
    7fde:	0d 00 00 02 1b       	or     eax,0x1b020000
    7fe3:	5d                   	pop    rbp
    7fe4:	0c f1                	or     al,0xf1
    7fe6:	0d 00 00 02 1b       	or     eax,0x1b020000
    7feb:	5e                   	pop    rsi
    7fec:	0c 0c                	or     al,0xc
    7fee:	0e                   	(bad)
    7fef:	00 00                	add    BYTE PTR [rax],al
    7ff1:	02 1b                	add    bl,BYTE PTR [rbx]
    7ff3:	5e                   	pop    rsi
    7ff4:	0c 27                	or     al,0x27
    7ff6:	0e                   	(bad)
    7ff7:	00 00                	add    BYTE PTR [rax],al
    7ff9:	02 1b                	add    bl,BYTE PTR [rbx]
    7ffb:	5f                   	pop    rdi
    7ffc:	0c 42                	or     al,0x42
    7ffe:	0e                   	(bad)
    7fff:	00 00                	add    BYTE PTR [rax],al
    8001:	02 1b                	add    bl,BYTE PTR [rbx]
    8003:	5f                   	pop    rdi
    8004:	0c 5d                	or     al,0x5d
    8006:	0e                   	(bad)
    8007:	00 00                	add    BYTE PTR [rax],al
    8009:	02 1b                	add    bl,BYTE PTR [rbx]
    800b:	60                   	(bad)
    800c:	0c 78                	or     al,0x78
    800e:	0e                   	(bad)
    800f:	00 00                	add    BYTE PTR [rax],al
    8011:	02 1b                	add    bl,BYTE PTR [rbx]
    8013:	60                   	(bad)
    8014:	0c 93                	or     al,0x93
    8016:	0e                   	(bad)
    8017:	00 00                	add    BYTE PTR [rax],al
    8019:	02 1b                	add    bl,BYTE PTR [rbx]
    801b:	61                   	(bad)
    801c:	0c ae                	or     al,0xae
    801e:	0e                   	(bad)
    801f:	00 00                	add    BYTE PTR [rax],al
    8021:	02 1b                	add    bl,BYTE PTR [rbx]
    8023:	61                   	(bad)
    8024:	0c c9                	or     al,0xc9
    8026:	0e                   	(bad)
    8027:	00 00                	add    BYTE PTR [rax],al
    8029:	02 1b                	add    bl,BYTE PTR [rbx]
    802b:	62 0c e4             	(bad)  {k6}
    802e:	0e                   	(bad)
    802f:	00 00                	add    BYTE PTR [rax],al
    8031:	02 1b                	add    bl,BYTE PTR [rbx]
    8033:	62 0c ff             	(bad)  {k6}
    8036:	0e                   	(bad)
    8037:	00 00                	add    BYTE PTR [rax],al
    8039:	02 1b                	add    bl,BYTE PTR [rbx]
    803b:	63 0c 1a             	movsxd ecx,DWORD PTR [rdx+rbx*1]
    803e:	0f 00 00             	sldt   WORD PTR [rax]
    8041:	02 1b                	add    bl,BYTE PTR [rbx]
    8043:	63 0c 35 0f 00 00 02 	movsxd ecx,DWORD PTR [rsi*1+0x200000f]
    804a:	1b 64 0c 50          	sbb    esp,DWORD PTR [rsp+rcx*1+0x50]
    804e:	0f 00 00             	sldt   WORD PTR [rax]
    8051:	02 1b                	add    bl,BYTE PTR [rbx]
    8053:	64 0c 6b             	fs or  al,0x6b
    8056:	0f 00 00             	sldt   WORD PTR [rax]
    8059:	02 1b                	add    bl,BYTE PTR [rbx]
    805b:	65 0c 86             	gs or  al,0x86
    805e:	0f 00 00             	sldt   WORD PTR [rax]
    8061:	02 1b                	add    bl,BYTE PTR [rbx]
    8063:	65 0c a1             	gs or  al,0xa1
    8066:	0f 00 00             	sldt   WORD PTR [rax]
    8069:	02 1b                	add    bl,BYTE PTR [rbx]
    806b:	66 0c bc             	data16 or al,0xbc
    806e:	0f 00 00             	sldt   WORD PTR [rax]
    8071:	02 1b                	add    bl,BYTE PTR [rbx]
    8073:	66 0c dc             	data16 or al,0xdc
    8076:	0f 00 00             	sldt   WORD PTR [rax]
    8079:	02 1b                	add    bl,BYTE PTR [rbx]
    807b:	67 0c fc             	addr32 or al,0xfc
    807e:	0f 00 00             	sldt   WORD PTR [rax]
    8081:	02 1b                	add    bl,BYTE PTR [rbx]
    8083:	67 0c 1c             	addr32 or al,0x1c
    8086:	10 00                	adc    BYTE PTR [rax],al
    8088:	00 02                	add    BYTE PTR [rdx],al
    808a:	1b 68 0c             	sbb    ebp,DWORD PTR [rax+0xc]
    808d:	3c 10                	cmp    al,0x10
    808f:	00 00                	add    BYTE PTR [rax],al
    8091:	02 1b                	add    bl,BYTE PTR [rbx]
    8093:	68 0c 5c 10 00       	push   0x105c0c
    8098:	00 02                	add    BYTE PTR [rdx],al
    809a:	1b 69 0c             	sbb    ebp,DWORD PTR [rcx+0xc]
    809d:	7c 10                	jl     80af <_end+0x2097>
    809f:	00 00                	add    BYTE PTR [rax],al
    80a1:	02 1b                	add    bl,BYTE PTR [rbx]
    80a3:	69 0c a1 10 00 00 02 	imul   ecx,DWORD PTR [rcx+riz*4],0x2000010
    80aa:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    80ad:	c6                   	(bad)
    80ae:	10 00                	adc    BYTE PTR [rax],al
    80b0:	00 02                	add    BYTE PTR [rdx],al
    80b2:	1b 6a 0c             	sbb    ebp,DWORD PTR [rdx+0xc]
    80b5:	e1 10                	loope  80c7 <_end+0x20af>
    80b7:	00 00                	add    BYTE PTR [rax],al
    80b9:	02 1b                	add    bl,BYTE PTR [rbx]
    80bb:	6b 0c fc 10          	imul   ecx,DWORD PTR [rsp+rdi*8],0x10
    80bf:	00 00                	add    BYTE PTR [rax],al
    80c1:	02 1b                	add    bl,BYTE PTR [rbx]
    80c3:	6b 0c 17 11          	imul   ecx,DWORD PTR [rdi+rdx*1],0x11
    80c7:	00 00                	add    BYTE PTR [rax],al
    80c9:	02 1b                	add    bl,BYTE PTR [rbx]
    80cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    80cc:	0c 32                	or     al,0x32
    80ce:	11 00                	adc    DWORD PTR [rax],eax
    80d0:	00 02                	add    BYTE PTR [rdx],al
    80d2:	1b 6c 0c 52          	sbb    ebp,DWORD PTR [rsp+rcx*1+0x52]
    80d6:	11 00                	adc    DWORD PTR [rax],eax
    80d8:	00 02                	add    BYTE PTR [rdx],al
    80da:	1b 6d 0c             	sbb    ebp,DWORD PTR [rbp+0xc]
    80dd:	72 11                	jb     80f0 <_end+0x20d8>
    80df:	00 00                	add    BYTE PTR [rax],al
    80e1:	02 1b                	add    bl,BYTE PTR [rbx]
    80e3:	6d                   	ins    DWORD PTR es:[rdi],dx
    80e4:	0c 92                	or     al,0x92
    80e6:	11 00                	adc    DWORD PTR [rax],eax
    80e8:	00 02                	add    BYTE PTR [rdx],al
    80ea:	1b 6e 0c             	sbb    ebp,DWORD PTR [rsi+0xc]
    80ed:	b2 11                	mov    dl,0x11
    80ef:	00 00                	add    BYTE PTR [rax],al
    80f1:	02 1b                	add    bl,BYTE PTR [rbx]
    80f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    80f4:	0c cd                	or     al,0xcd
    80f6:	11 00                	adc    DWORD PTR [rax],eax
    80f8:	00 02                	add    BYTE PTR [rdx],al
    80fa:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    80fd:	e8 11 00 00 02       	call   2008113 <_end+0x20020fb>
    8102:	1b 6f 0c             	sbb    ebp,DWORD PTR [rdi+0xc]
    8105:	03 12                	add    edx,DWORD PTR [rdx]
    8107:	00 00                	add    BYTE PTR [rax],al
    8109:	7a 4e                	jp     8159 <_end+0x2141>
    810b:	34 00                	xor    al,0x0
    810d:	00 18                	add    BYTE PTR [rax],bl
    810f:	1c 00                	sbb    al,0x0
    8111:	06                   	(bad)
    8112:	2a 00                	sub    al,BYTE PTR [rax]
    8114:	00 36                	add    BYTE PTR [rsi],dh
    8116:	30 17                	xor    BYTE PTR [rdi],dl
    8118:	00 00                	add    BYTE PTR [rax],al
    811a:	e3 20                	jrcxz  813c <_end+0x2124>
    811c:	00 00                	add    BYTE PTR [rax],al
    811e:	00 36                	add    BYTE PTR [rsi],dh
    8120:	6d                   	ins    DWORD PTR es:[rdi],dx
    8121:	18 00                	sbb    BYTE PTR [rax],al
    8123:	00 e3                	add    bl,ah
    8125:	20 00                	and    BYTE PTR [rax],al
    8127:	00 04 36             	add    BYTE PTR [rsi+rsi*1],al
    812a:	bd 23 00 00 d4       	mov    ebp,0xd4000023
    812f:	22 00                	and    al,BYTE PTR [rax]
    8131:	00 08                	add    BYTE PTR [rax],cl
    8133:	36 f8                	ss clc
    8135:	1d 00 00 d4 22       	sbb    eax,0x22d40000
    813a:	00 00                	add    BYTE PTR [rax],al
    813c:	10 00                	adc    BYTE PTR [rax],al
    813e:	35 08 1d 0e 01       	xor    eax,0x10e1d08
    8143:	9d                   	popf
    8144:	2f                   	(bad)
    8145:	00 00                	add    BYTE PTR [rax],al
    8147:	4e 2a 00             	rex.WRX sub r8b,BYTE PTR [rax]
    814a:	00 7b 04             	add    BYTE PTR [rbx+0x4],bh
    814d:	1d 11 03 33 2a       	sbb    eax,0x2a330311
    8152:	00 00                	add    BYTE PTR [rax],al
    8154:	59                   	pop    rcx
    8155:	6b 12 00             	imul   edx,DWORD PTR [rdx],0x0
    8158:	00 12                	add    BYTE PTR [rdx],dl
    815a:	13 e3                	adc    esp,ebx
    815c:	20 00                	and    BYTE PTR [rax],al
    815e:	00 59 99             	add    BYTE PTR [rcx-0x67],bl
    8161:	26 00 00             	es add BYTE PTR [rax],al
    8164:	13 0a                	adc    ecx,DWORD PTR [rdx]
    8166:	52                   	push   rdx
    8167:	24 00                	and    al,0x0
    8169:	00 00                	add    BYTE PTR [rax],al
    816b:	06                   	(bad)
    816c:	f2 24 00             	repnz and al,0x0
    816f:	00 1d 0f 07 a6 21    	add    BYTE PTR [rip+0x21a6070f],bl        # 21a68884 <_end+0x21a6286c>
    8175:	00 00                	add    BYTE PTR [rax],al
    8177:	00 06                	add    BYTE PTR [rsi],al
    8179:	53                   	push   rbx
    817a:	0c 00                	or     al,0x0
    817c:	00 1d 14 05 13 2a    	add    BYTE PTR [rip+0x2a130514],bl        # 2a138696 <_end+0x2a13267e>
    8182:	00 00                	add    BYTE PTR [rax],al
    8184:	04 00                	add    al,0x0
    8186:	08 9f 2f 00 00 1d    	or     BYTE PTR [rdi+0x1d00002f],bl
    818c:	15 03 06 2a 00       	adc    eax,0x2a0603
    8191:	00 1b                	add    BYTE PTR [rbx],bl
    8193:	b7 19                	mov    bh,0x19
    8195:	00 00                	add    BYTE PTR [rax],al
    8197:	10 1e                	adc    BYTE PTR [rsi],bl
    8199:	0a 10                	or     dl,BYTE PTR [rax]
    819b:	82                   	(bad)
    819c:	2a 00                	sub    al,BYTE PTR [rax]
    819e:	00 06                	add    BYTE PTR [rsi],al
    81a0:	af                   	scas   eax,DWORD PTR es:[rdi]
    81a1:	10 00                	adc    BYTE PTR [rax],al
    81a3:	00 1e                	add    BYTE PTR [rsi],bl
    81a5:	0c 0b                	or     al,0xb
    81a7:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    81a8:	22 00                	and    al,BYTE PTR [rax]
    81aa:	00 00                	add    BYTE PTR [rax],al
    81ac:	06                   	(bad)
    81ad:	45                   	rex.RB
    81ae:	2e 00 00             	cs add BYTE PTR [rax],al
    81b1:	1e                   	(bad)
    81b2:	0d 0f 4e 2a 00       	or     eax,0x2a4e0f
    81b7:	00 08                	add    BYTE PTR [rax],cl
    81b9:	00 08                	add    BYTE PTR [rax],cl
    81bb:	cc                   	int3
    81bc:	29 00                	sub    DWORD PTR [rax],eax
    81be:	00 1e                	add    BYTE PTR [rsi],bl
    81c0:	0e                   	(bad)
    81c1:	03 5a 2a             	add    ebx,DWORD PTR [rdx+0x2a]
    81c4:	00 00                	add    BYTE PTR [rax],al
    81c6:	08 17                	or     BYTE PTR [rdi],dl
    81c8:	2a 00                	sub    al,BYTE PTR [rax]
    81ca:	00 1f                	add    BYTE PTR [rdi],bl
    81cc:	05 19 9a 2a 00       	add    eax,0x2a9a19
    81d1:	00 1b                	add    BYTE PTR [rbx],bl
    81d3:	7d 14                	jge    81e9 <_end+0x21d1>
    81d5:	00 00                	add    BYTE PTR [rax],al
    81d7:	d8 20                	fsub   DWORD PTR [rax]
    81d9:	31 08                	xor    DWORD PTR [rax],ecx
    81db:	21 2c 00             	and    DWORD PTR [rax+rax*1],ebp
    81de:	00 06                	add    BYTE PTR [rsi],al
    81e0:	d6                   	(bad)
    81e1:	23 00                	and    eax,DWORD PTR [rax]
    81e3:	00 20                	add    BYTE PTR [rax],ah
    81e5:	33 07                	xor    eax,DWORD PTR [rdi]
    81e7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    81e8:	21 00                	and    DWORD PTR [rax],eax
    81ea:	00 00                	add    BYTE PTR [rax],al
    81ec:	06                   	(bad)
    81ed:	1c 18                	sbb    al,0x18
    81ef:	00 00                	add    BYTE PTR [rax],al
    81f1:	20 36                	and    BYTE PTR [rsi],dh
    81f3:	09 e2                	or     edx,esp
    81f5:	22 00                	and    al,BYTE PTR [rax]
    81f7:	00 08                	add    BYTE PTR [rax],cl
    81f9:	06                   	(bad)
    81fa:	ac                   	lods   al,BYTE PTR ds:[rsi]
    81fb:	30 00                	xor    BYTE PTR [rax],al
    81fd:	00 20                	add    BYTE PTR [rax],ah
    81ff:	37                   	(bad)
    8200:	09 e2                	or     edx,esp
    8202:	22 00                	and    al,BYTE PTR [rax]
    8204:	00 10                	add    BYTE PTR [rax],dl
    8206:	06                   	(bad)
    8207:	af                   	scas   eax,DWORD PTR es:[rdi]
    8208:	1d 00 00 20 38       	sbb    eax,0x38200000
    820d:	09 e2                	or     edx,esp
    820f:	22 00                	and    al,BYTE PTR [rax]
    8211:	00 18                	add    BYTE PTR [rax],bl
    8213:	06                   	(bad)
    8214:	14 0f                	adc    al,0xf
    8216:	00 00                	add    BYTE PTR [rax],al
    8218:	20 39                	and    BYTE PTR [rcx],bh
    821a:	09 e2                	or     edx,esp
    821c:	22 00                	and    al,BYTE PTR [rax]
    821e:	00 20                	add    BYTE PTR [rax],ah
    8220:	06                   	(bad)
    8221:	76 32                	jbe    8255 <_end+0x223d>
    8223:	00 00                	add    BYTE PTR [rax],al
    8225:	20 3a                	and    BYTE PTR [rdx],bh
    8227:	09 e2                	or     edx,esp
    8229:	22 00                	and    al,BYTE PTR [rax]
    822b:	00 28                	add    BYTE PTR [rax],ch
    822d:	06                   	(bad)
    822e:	2e 22 00             	cs and al,BYTE PTR [rax]
    8231:	00 20                	add    BYTE PTR [rax],ah
    8233:	3b 09                	cmp    ecx,DWORD PTR [rcx]
    8235:	e2 22                	loop   8259 <_end+0x2241>
    8237:	00 00                	add    BYTE PTR [rax],al
    8239:	30 06                	xor    BYTE PTR [rsi],al
    823b:	06                   	(bad)
    823c:	23 00                	and    eax,DWORD PTR [rax]
    823e:	00 20                	add    BYTE PTR [rax],ah
    8240:	3c 09                	cmp    al,0x9
    8242:	e2 22                	loop   8266 <_end+0x224e>
    8244:	00 00                	add    BYTE PTR [rax],al
    8246:	38 06                	cmp    BYTE PTR [rsi],al
    8248:	42 10 00             	rex.X adc BYTE PTR [rax],al
    824b:	00 20                	add    BYTE PTR [rax],ah
    824d:	3d 09 e2 22 00       	cmp    eax,0x22e209
    8252:	00 40 06             	add    BYTE PTR [rax+0x6],al
    8255:	4e 10 00             	rex.WRX adc BYTE PTR [rax],r8b
    8258:	00 20                	add    BYTE PTR [rax],ah
    825a:	40 09 e2             	rex or edx,esp
    825d:	22 00                	and    al,BYTE PTR [rax]
    825f:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    8262:	34 2a                	xor    al,0x2a
    8264:	00 00                	add    BYTE PTR [rax],al
    8266:	20 41 09             	and    BYTE PTR [rcx+0x9],al
    8269:	e2 22                	loop   828d <_end+0x2275>
    826b:	00 00                	add    BYTE PTR [rax],al
    826d:	50                   	push   rax
    826e:	06                   	(bad)
    826f:	a9 0d 00 00 20       	test   eax,0x2000000d
    8274:	42 09 e2             	rex.X or edx,esp
    8277:	22 00                	and    al,BYTE PTR [rax]
    8279:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    827c:	70 19                	jo     8297 <_end+0x227f>
    827e:	00 00                	add    BYTE PTR [rax],al
    8280:	20 44 16 3a          	and    BYTE PTR [rsi+rdx*1+0x3a],al
    8284:	2c 00                	sub    al,0x0
    8286:	00 60 06             	add    BYTE PTR [rax+0x6],ah
    8289:	b5 10                	mov    ch,0x10
    828b:	00 00                	add    BYTE PTR [rax],al
    828d:	20 46 14             	and    BYTE PTR [rsi+0x14],al
    8290:	3f                   	(bad)
    8291:	2c 00                	sub    al,0x0
    8293:	00 68 06             	add    BYTE PTR [rax+0x6],ch
    8296:	04 31                	add    al,0x31
    8298:	00 00                	add    BYTE PTR [rax],al
    829a:	20 48 07             	and    BYTE PTR [rax+0x7],cl
    829d:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    829e:	21 00                	and    DWORD PTR [rax],eax
    82a0:	00 70 06             	add    BYTE PTR [rax+0x6],dh
    82a3:	56                   	push   rsi
    82a4:	1d 00 00 20 49       	sbb    eax,0x49200000
    82a9:	07                   	(bad)
    82aa:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    82ab:	21 00                	and    DWORD PTR [rax],eax
    82ad:	00 74 06 b5          	add    BYTE PTR [rsi+rax*1-0x4b],dh
    82b1:	1f                   	(bad)
    82b2:	00 00                	add    BYTE PTR [rax],al
    82b4:	20 4a 0b             	and    BYTE PTR [rdx+0xb],cl
    82b7:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    82b8:	22 00                	and    al,BYTE PTR [rax]
    82ba:	00 78 06             	add    BYTE PTR [rax+0x6],bh
    82bd:	ee                   	out    dx,al
    82be:	10 00                	adc    BYTE PTR [rax],al
    82c0:	00 20                	add    BYTE PTR [rax],ah
    82c2:	4d 12 83 21 00 00 80 	rex.WRB adc r8b,BYTE PTR [r11-0x7fffffdf]
    82c9:	06                   	(bad)
    82ca:	e2 25                	loop   82f1 <_end+0x22d9>
    82cc:	00 00                	add    BYTE PTR [rax],al
    82ce:	20 4e 0f             	and    BYTE PTR [rsi+0xf],cl
    82d1:	98                   	cwde
    82d2:	21 00                	and    DWORD PTR [rax],eax
    82d4:	00 82 06 4e 2a 00    	add    BYTE PTR [rdx+0x2a4e06],al
    82da:	00 20                	add    BYTE PTR [rax],ah
    82dc:	4f 08 44 2c 00       	rex.WRXB or BYTE PTR [r12+r13*1+0x0],r8b
    82e1:	00 83 06 43 0f 00    	add    BYTE PTR [rbx+0xf4306],al
    82e7:	00 20                	add    BYTE PTR [rax],ah
    82e9:	51                   	push   rcx
    82ea:	0f 54 2c 00          	andps  xmm5,XMMWORD PTR [rax+rax*1]
    82ee:	00 88 06 b9 1f 00    	add    BYTE PTR [rax+0x1fb906],cl
    82f4:	00 20                	add    BYTE PTR [rax],ah
    82f6:	59                   	pop    rcx
    82f7:	0d b0 22 00 00       	or     eax,0x22b0
    82fc:	90                   	nop
    82fd:	06                   	(bad)
    82fe:	f7 27                	mul    DWORD PTR [rdi]
    8300:	00 00                	add    BYTE PTR [rax],al
    8302:	20 5b 17             	and    BYTE PTR [rbx+0x17],bl
    8305:	5e                   	pop    rsi
    8306:	2c 00                	sub    al,0x0
    8308:	00 98 06 cb 14 00    	add    BYTE PTR [rax+0x14cb06],bl
    830e:	00 20                	add    BYTE PTR [rax],ah
    8310:	5c                   	pop    rsp
    8311:	19 68 2c             	sbb    DWORD PTR [rax+0x2c],ebp
    8314:	00 00                	add    BYTE PTR [rax],al
    8316:	a0 06 72 21 00 00 20 	movabs al,ds:0x145d200000217206
    831d:	5d 14 
    831f:	3f                   	(bad)
    8320:	2c 00                	sub    al,0x0
    8322:	00 a8 06 d8 28 00    	add    BYTE PTR [rax+0x28d806],ch
    8328:	00 20                	add    BYTE PTR [rax],ah
    832a:	5e                   	pop    rsi
    832b:	09 d4                	or     esp,edx
    832d:	22 00                	and    al,BYTE PTR [rax]
    832f:	00 b0 06 42 23 00    	add    BYTE PTR [rax+0x234206],dh
    8335:	00 20                	add    BYTE PTR [rax],ah
    8337:	5f                   	pop    rdi
    8338:	0a 2e                	or     ch,BYTE PTR [rsi]
    833a:	23 00                	and    eax,DWORD PTR [rax]
    833c:	00 b8 06 52 0a 00    	add    BYTE PTR [rax+0xa5206],bh
    8342:	00 20                	add    BYTE PTR [rax],ah
    8344:	60                   	(bad)
    8345:	07                   	(bad)
    8346:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8347:	21 00                	and    DWORD PTR [rax],eax
    8349:	00 c0                	add    al,al
    834b:	06                   	(bad)
    834c:	44 1e                	rex.R (bad)
    834e:	00 00                	add    BYTE PTR [rax],al
    8350:	20 62 08             	and    BYTE PTR [rdx+0x8],ah
    8353:	6d                   	ins    DWORD PTR es:[rdi],dx
    8354:	2c 00                	sub    al,0x0
    8356:	00 c4                	add    ah,al
    8358:	00 08                	add    BYTE PTR [rax],cl
    835a:	81 14 00 00 21 07 19 	adc    DWORD PTR [rax+rax*1],0x19072100
    8361:	9a                   	(bad)
    8362:	2a 00                	sub    al,BYTE PTR [rax]
    8364:	00 7c 53 17          	add    BYTE PTR [rbx+rdx*2+0x17],bh
    8368:	00 00                	add    BYTE PTR [rax],al
    836a:	20 2b                	and    BYTE PTR [rbx],ch
    836c:	0e                   	(bad)
    836d:	47 31 13             	rex.RXB xor DWORD PTR [r11],r10d
    8370:	00 00                	add    BYTE PTR [rax],al
    8372:	0d 35 2c 00 00       	or     eax,0x2c35
    8377:	0d 9a 2a 00 00       	or     eax,0x2a9a
    837c:	25 e7 22 00 00       	and    eax,0x22e7
    8381:	54                   	push   rsp
    8382:	2c 00                	sub    al,0x0
    8384:	00 26                	add    BYTE PTR [rsi],ah
    8386:	8a 21                	mov    ah,BYTE PTR [rcx]
    8388:	00 00                	add    BYTE PTR [rax],al
    838a:	00 00                	add    BYTE PTR [rax],al
    838c:	0d 2d 2c 00 00       	or     eax,0x2c2d
    8391:	47 f4                	rex.RXB hlt
    8393:	27                   	(bad)
    8394:	00 00                	add    BYTE PTR [rax],al
    8396:	0d 59 2c 00 00       	or     eax,0x2c59
    839b:	47 c8 14 00 00       	rex.RXB enter 0x14,0x0
    83a0:	0d 63 2c 00 00       	or     eax,0x2c63
    83a5:	25 e7 22 00 00       	and    eax,0x22e7
    83aa:	7d 2c                	jge    83d8 <_end+0x23c0>
    83ac:	00 00                	add    BYTE PTR [rax],al
    83ae:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    83b1:	00 00                	add    BYTE PTR [rax],al
    83b3:	13 00                	adc    eax,DWORD PTR [rax]
    83b5:	08 ba 19 00 00 22    	or     BYTE PTR [rdx+0x22000019],bh
    83bb:	55                   	push   rbp
    83bc:	12 82 2a 00 00 13    	adc    al,BYTE PTR [rdx+0x1300002a]
    83c2:	7d 2c                	jge    83f0 <_end+0x23d8>
    83c4:	00 00                	add    BYTE PTR [rax],al
    83c6:	0d 21 2c 00 00       	or     eax,0x2c21
    83cb:	57                   	push   rdi
    83cc:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    83cf:	00 08                	add    BYTE PTR [rax],cl
    83d1:	cb                   	retf
    83d2:	11 00                	adc    DWORD PTR [rax],eax
    83d4:	00 23                	add    BYTE PTR [rbx],ah
    83d6:	18 13                	sbb    BYTE PTR [rbx],dl
    83d8:	d8 21                	fsub   DWORD PTR [rcx]
    83da:	00 00                	add    BYTE PTR [rax],al
    83dc:	08 60 17             	or     BYTE PTR [rax+0x17],ah
    83df:	00 00                	add    BYTE PTR [rax],al
    83e1:	23 19                	and    ebx,DWORD PTR [rcx]
    83e3:	14 f0                	adc    al,0xf0
    83e5:	21 00                	and    DWORD PTR [rax],eax
    83e7:	00 08                	add    BYTE PTR [rax],cl
    83e9:	ab                   	stos   DWORD PTR es:[rdi],eax
    83ea:	00 00                	add    BYTE PTR [rax],al
    83ec:	00 23                	add    BYTE PTR [rbx],ah
    83ee:	1a 14 08             	sbb    dl,BYTE PTR [rax+rcx*1]
    83f1:	22 00                	and    al,BYTE PTR [rax]
    83f3:	00 13                	add    BYTE PTR [rbx],dl
    83f5:	b0 2c                	mov    al,0x2c
    83f7:	00 00                	add    BYTE PTR [rax],al
    83f9:	08 87 05 00 00 23    	or     BYTE PTR [rdi+0x23000005],al
    83ff:	1b 14 20             	sbb    edx,DWORD PTR [rax+riz*1]
    8402:	22 00                	and    al,BYTE PTR [rax]
    8404:	00 08                	add    BYTE PTR [rax],cl
    8406:	fc                   	cld
    8407:	24 00                	and    al,0x0
    8409:	00 24 19             	add    BYTE PTR [rcx+rbx*1],ah
    840c:	18 2c 22             	sbb    BYTE PTR [rdx+riz*1],ch
    840f:	00 00                	add    BYTE PTR [rax],al
    8411:	08 ca                	or     dl,cl
    8413:	28 00                	sub    BYTE PTR [rax],al
    8415:	00 24 1a             	add    BYTE PTR [rdx+rbx*1],ah
    8418:	19 44 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],eax
    841c:	00 08                	add    BYTE PTR [rax],cl
    841e:	f0 31 00             	lock xor DWORD PTR [rax],eax
    8421:	00 24 1b             	add    BYTE PTR [rbx+rbx*1],ah
    8424:	19 5c 22 00          	sbb    DWORD PTR [rdx+riz*1+0x0],ebx
    8428:	00 08                	add    BYTE PTR [rax],cl
    842a:	bc 2e 00 00 24       	mov    esp,0x2400002e
    842f:	1c 19                	sbb    al,0x19
    8431:	74 22                	je     8455 <_end+0x243d>
    8433:	00 00                	add    BYTE PTR [rax],al
    8435:	08 9b 0d 00 00 24    	or     BYTE PTR [rbx+0x2400000d],bl
    843b:	1f                   	(bad)
    843c:	19 38                	sbb    DWORD PTR [rax],edi
    843e:	22 00                	and    al,BYTE PTR [rax]
    8440:	00 08                	add    BYTE PTR [rax],cl
    8442:	42 15 00 00 24 20    	rex.X adc eax,0x20240000
    8448:	1a 50 22             	sbb    dl,BYTE PTR [rax+0x22]
    844b:	00 00                	add    BYTE PTR [rax],al
    844d:	08 8a 1d 00 00 24    	or     BYTE PTR [rdx+0x2400001d],cl
    8453:	21 1a                	and    DWORD PTR [rdx],ebx
    8455:	68 22 00 00 08       	push   0x8000022
    845a:	c3                   	ret
    845b:	19 00                	sbb    DWORD PTR [rax],eax
    845d:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    8460:	1a 80 22 00 00 08    	sbb    al,BYTE PTR [rax+0x8000022]
    8466:	b7 2d                	mov    bh,0x2d
    8468:	00 00                	add    BYTE PTR [rax],al
    846a:	25 2f 16 98 21       	and    eax,0x2198162f
    846f:	00 00                	add    BYTE PTR [rax],al
    8471:	08 40 31             	or     BYTE PTR [rax+0x31],al
    8474:	00 00                	add    BYTE PTR [rax],al
    8476:	25 31 13 b2 21       	and    eax,0x21b21331
    847b:	00 00                	add    BYTE PTR [rax],al
    847d:	08 fb                	or     bl,bh
    847f:	10 00                	adc    BYTE PTR [rax],al
    8481:	00 25 32 13 b2 21    	add    BYTE PTR [rip+0x21b21332],ah        # 21b297b9 <_end+0x21b237a1>
    8487:	00 00                	add    BYTE PTR [rax],al
    8489:	08 8c 0d 00 00 25 33 	or     BYTE PTR [rbp+rcx*1+0x33250000],cl
    8490:	13 b2 21 00 00 08    	adc    esi,DWORD PTR [rdx+0x8000021]
    8496:	b6 2d                	mov    dh,0x2d
    8498:	00 00                	add    BYTE PTR [rax],al
    849a:	25 3c 18 7c 21       	and    eax,0x217c183c
    849f:	00 00                	add    BYTE PTR [rax],al
    84a1:	08 3f                	or     BYTE PTR [rdi],bh
    84a3:	31 00                	xor    DWORD PTR [rax],eax
    84a5:	00 25 3e 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3e],ah        # 218a9fe9 <_end+0x218a3fd1>
    84ab:	00 00                	add    BYTE PTR [rax],al
    84ad:	08 fa                	or     dl,bh
    84af:	10 00                	adc    BYTE PTR [rax],al
    84b1:	00 25 3f 1b 8a 21    	add    BYTE PTR [rip+0x218a1b3f],ah        # 218a9ff6 <_end+0x218a3fde>
    84b7:	00 00                	add    BYTE PTR [rax],al
    84b9:	08 8b 0d 00 00 25    	or     BYTE PTR [rbx+0x2500000d],cl
    84bf:	40 1b 8a 21 00 00 08 	rex sbb ecx,DWORD PTR [rdx+0x8000021]
    84c6:	d6                   	(bad)
    84c7:	1e                   	(bad)
    84c8:	00 00                	add    BYTE PTR [rax],al
    84ca:	25 4c 13 b2 21       	and    eax,0x21b2134c
    84cf:	00 00                	add    BYTE PTR [rax],al
    84d1:	08 d5                	or     ch,dl
    84d3:	1e                   	(bad)
    84d4:	00 00                	add    BYTE PTR [rax],al
    84d6:	25 4f 1b 8a 21       	and    eax,0x218a1b4f
    84db:	00 00                	add    BYTE PTR [rax],al
    84dd:	08 fd                	or     ch,bh
    84df:	22 00                	and    al,BYTE PTR [rax]
    84e1:	00 25 5a 15 8c 22    	add    BYTE PTR [rip+0x228c155a],ah        # 228c9a41 <_end+0x228c3a29>
    84e7:	00 00                	add    BYTE PTR [rax],al
    84e9:	13 a5 2d 00 00 08    	adc    esp,DWORD PTR [rbp+0x800002d]
    84ef:	16                   	(bad)
    84f0:	2f                   	(bad)
    84f1:	00 00                	add    BYTE PTR [rax],al
    84f3:	25 5b 16 98 22       	and    eax,0x2298165b
    84f8:	00 00                	add    BYTE PTR [rax],al
    84fa:	0e                   	(bad)
    84fb:	6d                   	ins    DWORD PTR es:[rdi],dx
    84fc:	00 00                	add    BYTE PTR [rax],al
    84fe:	00 16                	add    BYTE PTR [rsi],dl
    8500:	de 02                	fiadd  WORD PTR [rdx]
    8502:	0c a6                	or     al,0xa6
    8504:	21 00                	and    DWORD PTR [rax],eax
    8506:	00 d9                	add    cl,bl
    8508:	2d 00 00 01 d9       	sub    eax,0xd9010000
    850d:	2d 00 00 00 0d       	sub    eax,0xd000000
    8512:	de 2d 00 00 7d 04    	fisubr WORD PTR [rip+0x47d0000]        # 47d8518 <_end+0x47d2500>
    8518:	33 00                	xor    eax,DWORD PTR [rax]
    851a:	00 00                	add    BYTE PTR [rax],al
    851c:	16                   	(bad)
    851d:	e3 02                	jrcxz  8521 <_end+0x2509>
    851f:	12 33                	adc    dh,BYTE PTR [rbx]
    8521:	00 00                	add    BYTE PTR [rax],al
    8523:	00 a6 21 00 00 fa    	add    BYTE PTR [rsi-0x5ffffdf],ah
    8529:	2d 00 00 01 d9       	sub    eax,0xd9010000
    852e:	2d 00 00 00 0c       	sub    eax,0xc000000
    8533:	cd 01                	int    0x1
    8535:	00 00                	add    BYTE PTR [rax],al
    8537:	26 19 01             	es sbb DWORD PTR [rcx],eax
    853a:	2e 00 00             	cs add BYTE PTR [rax],al
    853d:	00 10                	add    BYTE PTR [rax],dl
    853f:	2e 00 00             	cs add BYTE PTR [rax],al
    8542:	01 d3                	add    ebx,edx
    8544:	23 00                	and    eax,DWORD PTR [rax]
    8546:	00 00                	add    BYTE PTR [rax],al
    8548:	0e                   	(bad)
    8549:	d2 01                	rol    BYTE PTR [rcx],cl
    854b:	00 00                	add    BYTE PTR [rax],al
    854d:	16                   	(bad)
    854e:	e1 01                	loope  8551 <_end+0x2539>
    8550:	01 a6 21 00 00 27    	add    DWORD PTR [rsi+0x27000021],esp
    8556:	2e 00 00             	cs add BYTE PTR [rax],al
    8559:	01 d3                	add    ebx,edx
    855b:	23 00                	and    eax,DWORD PTR [rax]
    855d:	00 00                	add    BYTE PTR [rax],al
    855f:	0e                   	(bad)
    8560:	dc 01                	fadd   QWORD PTR [rcx]
    8562:	00 00                	add    BYTE PTR [rax],al
    8564:	16                   	(bad)
    8565:	e6 01                	out    0x1,al
    8567:	01 b2 21 00 00 3e    	add    DWORD PTR [rdx+0x3e000021],esi
    856d:	2e 00 00             	cs add BYTE PTR [rax],al
    8570:	01 d3                	add    ebx,edx
    8572:	23 00                	and    eax,DWORD PTR [rax]
    8574:	00 00                	add    BYTE PTR [rax],al
    8576:	0c 65                	or     al,0x65
    8578:	00 00                	add    BYTE PTR [rax],al
    857a:	00 27                	add    BYTE PTR [rdi],ah
    857c:	14 01                	adc    al,0x1
    857e:	d4                   	(bad)
    857f:	22 00                	and    al,BYTE PTR [rax]
    8581:	00 68 2e             	add    BYTE PTR [rax+0x2e],ch
    8584:	00 00                	add    BYTE PTR [rax],al
    8586:	01 88 24 00 00 01    	add    DWORD PTR [rax+0x1000024],ecx
    858c:	88 24 00             	mov    BYTE PTR [rax+rax*1],ah
    858f:	00 01                	add    BYTE PTR [rcx],al
    8591:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8594:	00 01                	add    BYTE PTR [rcx],al
    8596:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8599:	00 01                	add    BYTE PTR [rcx],al
    859b:	62 24 00             	(bad)
    859e:	00 00                	add    BYTE PTR [rax],al
    85a0:	7e 64                	jle    8606 <_end+0x25ee>
    85a2:	69 76 00 16 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e016
    85a9:	61                   	(bad)
    85aa:	23 00                	and    eax,DWORD PTR [rax]
    85ac:	00 84 2e 00 00 01 a6 	add    BYTE PTR [rsi+rbp*1-0x59ff0000],al
    85b3:	21 00                	and    DWORD PTR [rax],eax
    85b5:	00 01                	add    BYTE PTR [rcx],al
    85b7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    85b8:	21 00                	and    DWORD PTR [rax],eax
    85ba:	00 00                	add    BYTE PTR [rax],al
    85bc:	0e                   	(bad)
    85bd:	bd 00 00 00 16       	mov    ebp,0x16000000
    85c2:	05 03 0e e2 22       	add    eax,0x22e20e03
    85c7:	00 00                	add    BYTE PTR [rax],al
    85c9:	9b                   	fwait
    85ca:	2e 00 00             	cs add BYTE PTR [rax],al
    85cd:	01 d3                	add    ebx,edx
    85cf:	23 00                	and    eax,DWORD PTR [rax]
    85d1:	00 00                	add    BYTE PTR [rax],al
    85d3:	0e                   	(bad)
    85d4:	c3                   	ret
    85d5:	02 00                	add    al,BYTE PTR [rax]
    85d7:	00 16                	add    BYTE PTR [rsi],dl
    85d9:	e2 03                	loop   85de <_end+0x25c6>
    85db:	0f 94 23             	sete   BYTE PTR [rbx]
    85de:	00 00                	add    BYTE PTR [rax],al
    85e0:	b7 2e                	mov    bh,0x2e
    85e2:	00 00                	add    BYTE PTR [rax],al
    85e4:	01 b2 21 00 00 01    	add    DWORD PTR [rdx+0x1000021],esi
    85ea:	b2 21                	mov    dl,0x21
    85ec:	00 00                	add    BYTE PTR [rax],al
    85ee:	00 0e                	add    BYTE PTR [rsi],cl
    85f0:	33 02                	xor    eax,DWORD PTR [rdx]
    85f2:	00 00                	add    BYTE PTR [rax],al
    85f4:	16                   	(bad)
    85f5:	26 04 0c             	es add al,0xc
    85f8:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    85f9:	21 00                	and    DWORD PTR [rax],eax
    85fb:	00 d3                	add    bl,dl
    85fd:	2e 00 00             	cs add BYTE PTR [rax],al
    8600:	01 d3                	add    ebx,edx
    8602:	23 00                	and    eax,DWORD PTR [rax]
    8604:	00 01                	add    BYTE PTR [rcx],al
    8606:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8609:	00 00                	add    BYTE PTR [rax],al
    860b:	0c 39                	or     al,0x39
    860d:	02 00                	add    al,BYTE PTR [rax]
    860f:	00 28                	add    BYTE PTR [rax],ch
    8611:	75 01                	jne    8614 <_end+0x25fc>
    8613:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8616:	00 f3                	add    bl,dh
    8618:	2e 00 00             	cs add BYTE PTR [rax],al
    861b:	01 f3                	add    ebx,esi
    861d:	2e 00 00             	cs add BYTE PTR [rax],al
    8620:	01 d3                	add    ebx,edx
    8622:	23 00                	and    eax,DWORD PTR [rax]
    8624:	00 01                	add    BYTE PTR [rcx],al
    8626:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8629:	00 00                	add    BYTE PTR [rax],al
    862b:	0d 9c 24 00 00       	or     eax,0x249c
    8630:	0e                   	(bad)
    8631:	d9 00                	fld    DWORD PTR [rax]
    8633:	00 00                	add    BYTE PTR [rax],al
    8635:	16                   	(bad)
    8636:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    8639:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    863a:	21 00                	and    DWORD PTR [rax],eax
    863c:	00 19                	add    BYTE PTR [rcx],bl
    863e:	2f                   	(bad)
    863f:	00 00                	add    BYTE PTR [rax],al
    8641:	01 f3                	add    ebx,esi
    8643:	2e 00 00             	cs add BYTE PTR [rax],al
    8646:	01 d3                	add    ebx,edx
    8648:	23 00                	and    eax,DWORD PTR [rax]
    864a:	00 01                	add    BYTE PTR [rcx],al
    864c:	2e 23 00             	cs and eax,DWORD PTR [rax]
    864f:	00 00                	add    BYTE PTR [rax],al
    8651:	28 25 00 00 00 16    	sub    BYTE PTR [rip+0x16000000],ah        # 16008657 <_end+0x1600263f>
    8657:	ca 03 3a             	retf   0x3a03
    865a:	2f                   	(bad)
    865b:	00 00                	add    BYTE PTR [rax],al
    865d:	01 d4                	add    esp,edx
    865f:	22 00                	and    al,BYTE PTR [rax]
    8661:	00 01                	add    BYTE PTR [rcx],al
    8663:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8666:	00 01                	add    BYTE PTR [rcx],al
    8668:	2e 23 00             	cs and eax,DWORD PTR [rax]
    866b:	00 01                	add    BYTE PTR [rcx],al
    866d:	62 24 00             	(bad)
    8670:	00 00                	add    BYTE PTR [rax],al
    8672:	7f 36                	jg     86aa <_end+0x2692>
    8674:	00 00                	add    BYTE PTR [rax],al
    8676:	00 16                	add    BYTE PTR [rsi],dl
    8678:	fa                   	cli
    8679:	02 0d 4d 2f 00 00    	add    cl,BYTE PTR [rip+0x2f4d]        # b5cc <_end+0x55b4>
    867f:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8685:	5a                   	pop    rdx
    8686:	ec                   	in     al,dx
    8687:	02 00                	add    al,BYTE PTR [rax]
    8689:	00 16                	add    BYTE PTR [rsi],dl
    868b:	3d 02 0c a6 21       	cmp    eax,0x21a60c02
    8690:	00 00                	add    BYTE PTR [rax],al
    8692:	28 eb                	sub    bl,ch
    8694:	02 00                	add    al,BYTE PTR [rax]
    8696:	00 16                	add    BYTE PTR [rsi],dl
    8698:	3f                   	(bad)
    8699:	02 6c 2f 00          	add    ch,BYTE PTR [rdi+rbp*1+0x0]
    869d:	00 01                	add    BYTE PTR [rcx],al
    869f:	e3 20                	jrcxz  86c1 <_end+0x26a9>
    86a1:	00 00                	add    BYTE PTR [rax],al
    86a3:	00 0c 05 01 00 00 16 	add    BYTE PTR [rax*1+0x16000001],cl
    86aa:	76 0f                	jbe    86bb <_end+0x26a3>
    86ac:	2e 00 00             	cs add BYTE PTR [rax],al
    86af:	00 87 2f 00 00 01    	add    BYTE PTR [rdi+0x100002f],al
    86b5:	d3 23                	shl    DWORD PTR [rbx],cl
    86b7:	00 00                	add    BYTE PTR [rax],al
    86b9:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    86bf:	0d e2 22 00 00       	or     eax,0x22e2
    86c4:	0f 54 00             	andps  xmm0,XMMWORD PTR [rax]
    86c7:	00 00                	add    BYTE PTR [rax],al
    86c9:	16                   	(bad)
    86ca:	d7                   	xlat   BYTE PTR ds:[rbx]
    86cb:	11 4b 00             	adc    DWORD PTR [rbx+0x0],ecx
    86ce:	00 00                	add    BYTE PTR [rax],al
    86d0:	b2 21                	mov    dl,0x21
    86d2:	00 00                	add    BYTE PTR [rax],al
    86d4:	b0 2f                	mov    al,0x2f
    86d6:	00 00                	add    BYTE PTR [rax],al
    86d8:	01 d3                	add    ebx,edx
    86da:	23 00                	and    eax,DWORD PTR [rax]
    86dc:	00 01                	add    BYTE PTR [rcx],al
    86de:	87 2f                	xchg   DWORD PTR [rdi],ebp
    86e0:	00 00                	add    BYTE PTR [rax],al
    86e2:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    86e8:	0f 25                	(bad)
    86ea:	02 00                	add    al,BYTE PTR [rax]
    86ec:	00 16                	add    BYTE PTR [rsi],dl
    86ee:	db 1a                	fistp  DWORD PTR [rdx]
    86f0:	1c 02                	sbb    al,0x2
    86f2:	00 00                	add    BYTE PTR [rax],al
    86f4:	8a 21                	mov    ah,BYTE PTR [rcx]
    86f6:	00 00                	add    BYTE PTR [rax],al
    86f8:	d4                   	(bad)
    86f9:	2f                   	(bad)
    86fa:	00 00                	add    BYTE PTR [rax],al
    86fc:	01 d3                	add    ebx,edx
    86fe:	23 00                	and    eax,DWORD PTR [rax]
    8700:	00 01                	add    BYTE PTR [rcx],al
    8702:	87 2f                	xchg   DWORD PTR [rdi],ebp
    8704:	00 00                	add    BYTE PTR [rax],al
    8706:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    870c:	0e                   	(bad)
    870d:	db 25 00 00 16 9b    	(bad)  [rip+0xffffffff9b160000]        # ffffffff9b168713 <_end+0xffffffff9b1626fb>
    8713:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    8716:	21 00                	and    DWORD PTR [rax],eax
    8718:	00 eb                	add    bl,ch
    871a:	2f                   	(bad)
    871b:	00 00                	add    BYTE PTR [rax],al
    871d:	01 d3                	add    ebx,edx
    871f:	23 00                	and    eax,DWORD PTR [rax]
    8721:	00 00                	add    BYTE PTR [rax],al
    8723:	0c e1                	or     al,0xe1
    8725:	01 00                	add    DWORD PTR [rax],eax
    8727:	00 28                	add    BYTE PTR [rax],ch
    8729:	8f 01                	pop    QWORD PTR [rcx]
    872b:	2e 23 00             	cs and eax,DWORD PTR [rax]
    872e:	00 0b                	add    BYTE PTR [rbx],cl
    8730:	30 00                	xor    BYTE PTR [rax],al
    8732:	00 01                	add    BYTE PTR [rcx],al
    8734:	e2 22                	loop   8758 <_end+0x2740>
    8736:	00 00                	add    BYTE PTR [rax],al
    8738:	01 0b                	add    DWORD PTR [rbx],ecx
    873a:	30 00                	xor    BYTE PTR [rax],al
    873c:	00 01                	add    BYTE PTR [rcx],al
    873e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8741:	00 00                	add    BYTE PTR [rax],al
    8743:	0d a3 24 00 00       	or     eax,0x24a3
    8748:	0c 42                	or     al,0x42
    874a:	02 00                	add    al,BYTE PTR [rax]
    874c:	00 28                	add    BYTE PTR [rax],ch
    874e:	4f 01 a6 21 00 00 2b 	rex.WRXB add QWORD PTR [r14+0x2b000021],r12
    8755:	30 00                	xor    BYTE PTR [rax],al
    8757:	00 01                	add    BYTE PTR [rcx],al
    8759:	e2 22                	loop   877d <_end+0x2765>
    875b:	00 00                	add    BYTE PTR [rax],al
    875d:	01 9c 24 00 00 00 0e 	add    DWORD PTR [rsp+0xe000000],ebx
    8764:	c2 02 00             	ret    0x2
    8767:	00 16                	add    BYTE PTR [rsi],dl
    8769:	e6 03                	out    0x3,al
    876b:	1e                   	(bad)
    876c:	c7                   	(bad)
    876d:	23 00                	and    eax,DWORD PTR [rax]
    876f:	00 47 30             	add    BYTE PTR [rdi+0x30],al
    8772:	00 00                	add    BYTE PTR [rax],al
    8774:	01 be 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],edi
    877a:	be 21 00 00 00       	mov    esi,0x21
    877f:	0e                   	(bad)
    8780:	2d 02 00 00 16       	sub    eax,0x16000002
    8785:	ed                   	in     eax,dx
    8786:	01 01                	add    DWORD PTR [rcx],eax
    8788:	be 21 00 00 5e       	mov    esi,0x5e000021
    878d:	30 00                	xor    BYTE PTR [rax],al
    878f:	00 01                	add    BYTE PTR [rcx],al
    8791:	d3 23                	shl    DWORD PTR [rbx],cl
    8793:	00 00                	add    BYTE PTR [rax],al
    8795:	00 0f                	add    BYTE PTR [rdi],cl
    8797:	88 00                	mov    BYTE PTR [rax],al
    8799:	00 00                	add    BYTE PTR [rax],al
    879b:	16                   	(bad)
    879c:	ee                   	out    dx,al
    879d:	16                   	(bad)
    879e:	7f 00                	jg     87a0 <_end+0x2788>
    87a0:	00 00                	add    BYTE PTR [rax],al
    87a2:	be 21 00 00 82       	mov    esi,0x82000021
    87a7:	30 00                	xor    BYTE PTR [rax],al
    87a9:	00 01                	add    BYTE PTR [rcx],al
    87ab:	d3 23                	shl    DWORD PTR [rbx],cl
    87ad:	00 00                	add    BYTE PTR [rax],al
    87af:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    87b5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    87b6:	21 00                	and    DWORD PTR [rax],eax
    87b8:	00 00                	add    BYTE PTR [rax],al
    87ba:	0f b9 02             	ud1    eax,DWORD PTR [rdx]
    87bd:	00 00                	add    BYTE PTR [rax],al
    87bf:	16                   	(bad)
    87c0:	f3 1f                	repz (bad)
    87c2:	b0 02                	mov    al,0x2
    87c4:	00 00                	add    BYTE PTR [rax],al
    87c6:	91                   	xchg   ecx,eax
    87c7:	21 00                	and    DWORD PTR [rax],eax
    87c9:	00 a6 30 00 00 01    	add    BYTE PTR [rsi+0x1000030],ah
    87cf:	d3 23                	shl    DWORD PTR [rbx],cl
    87d1:	00 00                	add    BYTE PTR [rax],al
    87d3:	01 87 2f 00 00 01    	add    DWORD PTR [rdi+0x100002f],eax
    87d9:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    87da:	21 00                	and    DWORD PTR [rax],eax
    87dc:	00 00                	add    BYTE PTR [rax],al
    87de:	0c 97                	or     al,0x97
    87e0:	02 00                	add    al,BYTE PTR [rax]
    87e2:	00 16                	add    BYTE PTR [rsi],dl
    87e4:	7c 0e                	jl     87f4 <_end+0x27dc>
    87e6:	35 00 00 00 c1       	xor    eax,0xc1000000
    87eb:	30 00                	xor    BYTE PTR [rax],al
    87ed:	00 01                	add    BYTE PTR [rcx],al
    87ef:	d3 23                	shl    DWORD PTR [rbx],cl
    87f1:	00 00                	add    BYTE PTR [rax],al
    87f3:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    87f9:	0c 2b                	or     al,0x2b
    87fb:	00 00                	add    BYTE PTR [rax],al
    87fd:	00 16                	add    BYTE PTR [rsi],dl
    87ff:	7f 14                	jg     8815 <_end+0x27fd>
    8801:	c5 21 00             	(bad)
    8804:	00 dc                	add    ah,bl
    8806:	30 00                	xor    BYTE PTR [rax],al
    8808:	00 01                	add    BYTE PTR [rcx],al
    880a:	d3 23                	shl    DWORD PTR [rbx],cl
    880c:	00 00                	add    BYTE PTR [rax],al
    880e:	01 87 2f 00 00 00    	add    DWORD PTR [rdi+0x2f],eax
    8814:	02 29                	add    ch,BYTE PTR [rcx]
    8816:	27                   	(bad)
    8817:	0c c2                	or     al,0xc2
    8819:	2d 00 00 02 29       	sub    eax,0x29020000
    881e:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    8820:	df 2d 00 00 02 29    	fild   QWORD PTR [rip+0x29020000]        # 29028826 <_end+0x2902280e>
    8826:	2e 0e                	cs (bad)
    8828:	3a 2f                	cmp    ch,BYTE PTR [rdi]
    882a:	00 00                	add    BYTE PTR [rax],al
    882c:	02 29                	add    ch,BYTE PTR [rcx]
    882e:	36 0c 61             	ss or  al,0x61
    8831:	23 00                	and    eax,DWORD PTR [rax]
    8833:	00 02                	add    BYTE PTR [rdx],al
    8835:	29 37                	sub    DWORD PTR [rdi],esi
    8837:	0c 94                	or     al,0x94
    8839:	23 00                	and    eax,DWORD PTR [rax]
    883b:	00 02                	add    BYTE PTR [rdx],al
    883d:	29 39                	sub    DWORD PTR [rcx],edi
    883f:	0c 71                	or     al,0x71
    8841:	00 00                	add    BYTE PTR [rax],al
    8843:	00 02                	add    BYTE PTR [rdx],al
    8845:	29 39                	sub    DWORD PTR [rcx],edi
    8847:	0c 8a                	or     al,0x8a
    8849:	00 00                	add    BYTE PTR [rax],al
    884b:	00 02                	add    BYTE PTR [rdx],al
    884d:	29 39                	sub    DWORD PTR [rcx],edi
    884f:	0c a3                	or     al,0xa3
    8851:	00 00                	add    BYTE PTR [rax],al
    8853:	00 02                	add    BYTE PTR [rdx],al
    8855:	29 39                	sub    DWORD PTR [rcx],edi
    8857:	0c bc                	or     al,0xbc
    8859:	00 00                	add    BYTE PTR [rax],al
    885b:	00 02                	add    BYTE PTR [rdx],al
    885d:	29 39                	sub    DWORD PTR [rcx],edi
    885f:	0c d5                	or     al,0xd5
    8861:	00 00                	add    BYTE PTR [rax],al
    8863:	00 02                	add    BYTE PTR [rdx],al
    8865:	29 39                	sub    DWORD PTR [rcx],edi
    8867:	0c ee                	or     al,0xee
    8869:	00 00                	add    BYTE PTR [rax],al
    886b:	00 02                	add    BYTE PTR [rdx],al
    886d:	29 39                	sub    DWORD PTR [rcx],edi
    886f:	0c 07                	or     al,0x7
    8871:	01 00                	add    DWORD PTR [rax],eax
    8873:	00 02                	add    BYTE PTR [rdx],al
    8875:	29 3a                	sub    DWORD PTR [rdx],edi
    8877:	0c fa                	or     al,0xfa
    8879:	2d 00 00 02 29       	sub    eax,0x29020000
    887e:	3b 0c 10             	cmp    ecx,DWORD PTR [rax+rdx*1]
    8881:	2e 00 00             	cs add BYTE PTR [rax],al
    8884:	02 29                	add    ch,BYTE PTR [rcx]
    8886:	3c 0c                	cmp    al,0xc
    8888:	27                   	(bad)
    8889:	2e 00 00             	cs add BYTE PTR [rax],al
    888c:	02 29                	add    ch,BYTE PTR [rcx]
    888e:	3d 0c 3e 2e 00       	cmp    eax,0x2e3e0c
    8893:	00 02                	add    BYTE PTR [rdx],al
    8895:	29 3f                	sub    DWORD PTR [rdi],edi
    8897:	0c 43                	or     al,0x43
    8899:	21 00                	and    DWORD PTR [rax],eax
    889b:	00 02                	add    BYTE PTR [rdx],al
    889d:	29 3f                	sub    DWORD PTR [rdi],edi
    889f:	0c 1f                	or     al,0x1f
    88a1:	13 00                	adc    eax,DWORD PTR [rax]
    88a3:	00 02                	add    BYTE PTR [rdx],al
    88a5:	29 3f                	sub    DWORD PTR [rdi],edi
    88a7:	0c 68                	or     al,0x68
    88a9:	2e 00 00             	cs add BYTE PTR [rax],al
    88ac:	02 29                	add    ch,BYTE PTR [rcx]
    88ae:	41 0c 84             	rex.B or al,0x84
    88b1:	2e 00 00             	cs add BYTE PTR [rax],al
    88b4:	02 29                	add    ch,BYTE PTR [rcx]
    88b6:	43 0c 9b             	rex.XB or al,0x9b
    88b9:	2e 00 00             	cs add BYTE PTR [rax],al
    88bc:	02 29                	add    ch,BYTE PTR [rcx]
    88be:	46 0c b7             	rex.RX or al,0xb7
    88c1:	2e 00 00             	cs add BYTE PTR [rax],al
    88c4:	02 29                	add    ch,BYTE PTR [rcx]
    88c6:	47 0c d3             	rex.RXB or al,0xd3
    88c9:	2e 00 00             	cs add BYTE PTR [rax],al
    88cc:	02 29                	add    ch,BYTE PTR [rcx]
    88ce:	48 0c f8             	rex.W or al,0xf8
    88d1:	2e 00 00             	cs add BYTE PTR [rax],al
    88d4:	02 29                	add    ch,BYTE PTR [rcx]
    88d6:	4a 0c 19             	rex.WX or al,0x19
    88d9:	2f                   	(bad)
    88da:	00 00                	add    BYTE PTR [rax],al
    88dc:	02 29                	add    ch,BYTE PTR [rcx]
    88de:	4b 0c 4d             	rex.WXB or al,0x4d
    88e1:	2f                   	(bad)
    88e2:	00 00                	add    BYTE PTR [rax],al
    88e4:	02 29                	add    ch,BYTE PTR [rcx]
    88e6:	4d 0c 5a             	rex.WRB or al,0x5a
    88e9:	2f                   	(bad)
    88ea:	00 00                	add    BYTE PTR [rax],al
    88ec:	02 29                	add    ch,BYTE PTR [rcx]
    88ee:	4e 0c 6c             	rex.WRX or al,0x6c
    88f1:	2f                   	(bad)
    88f2:	00 00                	add    BYTE PTR [rax],al
    88f4:	02 29                	add    ch,BYTE PTR [rcx]
    88f6:	4f 0c 8c             	rex.WRXB or al,0x8c
    88f9:	2f                   	(bad)
    88fa:	00 00                	add    BYTE PTR [rax],al
    88fc:	02 29                	add    ch,BYTE PTR [rcx]
    88fe:	50                   	push   rax
    88ff:	0c b0                	or     al,0xb0
    8901:	2f                   	(bad)
    8902:	00 00                	add    BYTE PTR [rax],al
    8904:	02 29                	add    ch,BYTE PTR [rcx]
    8906:	51                   	push   rcx
    8907:	0c d4                	or     al,0xd4
    8909:	2f                   	(bad)
    890a:	00 00                	add    BYTE PTR [rax],al
    890c:	02 29                	add    ch,BYTE PTR [rcx]
    890e:	53                   	push   rbx
    890f:	0c eb                	or     al,0xeb
    8911:	2f                   	(bad)
    8912:	00 00                	add    BYTE PTR [rax],al
    8914:	02 29                	add    ch,BYTE PTR [rcx]
    8916:	54                   	push   rsp
    8917:	0c 10                	or     al,0x10
    8919:	30 00                	xor    BYTE PTR [rax],al
    891b:	00 80 01 20 10 15    	add    BYTE PTR [rax+0x15102001],al
    8921:	a9 01 10 70 10       	test   eax,0x10701001
    8926:	00 00                	add    BYTE PTR [rax],al
    8928:	11 32                	adc    DWORD PTR [rdx],esi
    892a:	00 00                	add    BYTE PTR [rax],al
    892c:	5b                   	pop    rbx
    892d:	b4 24                	mov    ah,0x24
    892f:	00 00                	add    BYTE PTR [rax],al
    8931:	aa                   	stos   BYTE PTR es:[rdi],al
    8932:	01 0d be 21 00 00    	add    DWORD PTR [rip+0x21be],ecx        # aaf6 <_end+0x4ade>
    8938:	08 00                	or     BYTE PTR [rax],al
    893a:	5b                   	pop    rbx
    893b:	10 28                	adc    BYTE PTR [rax],ch
    893d:	00 00                	add    BYTE PTR [rax],al
    893f:	ab                   	stos   DWORD PTR es:[rdi],eax
    8940:	01 0f                	add    DWORD PTR [rdi],ecx
    8942:	c5 21 00             	(bad)
    8945:	00 10                	add    BYTE PTR [rax],dl
    8947:	10 00                	adc    BYTE PTR [rax],al
    8949:	81 01 72 10 00 00    	add    DWORD PTR [rcx],0x1072
    894f:	15 b4 01 03 e4       	adc    eax,0xe40301b4
    8954:	31 00                	xor    DWORD PTR [rax],eax
    8956:	00 10                	add    BYTE PTR [rax],dl
    8958:	12 02                	adc    al,BYTE PTR [rdx]
    895a:	04 00                	add    al,0x0
    895c:	00 00                	add    BYTE PTR [rax],al
    895e:	00 12                	add    BYTE PTR [rdx],dl
    8960:	02 04 c8             	add    al,BYTE PTR [rax+rcx*8]
    8963:	02 00                	add    al,BYTE PTR [rax]
    8965:	00 08                	add    BYTE PTR [rax],cl
    8967:	a2 2a 00 00 2a 14 17 	movabs ds:0x20e317142a00002a,al
    896e:	e3 20 
    8970:	00 00                	add    BYTE PTR [rax],al
    8972:	08 a1 2f 00 00 2b    	or     BYTE PTR [rcx+0x2b00002f],ah
    8978:	06                   	(bad)
    8979:	15 4e 2a 00 00       	adc    eax,0x2a4e
    897e:	13 3a                	adc    edi,DWORD PTR [rdx]
    8980:	32 00                	xor    al,BYTE PTR [rax]
    8982:	00 0e                	add    BYTE PTR [rsi],cl
    8984:	da 00                	fiadd  DWORD PTR [rax]
    8986:	00 00                	add    BYTE PTR [rax],al
    8988:	2c 57                	sub    al,0x57
    898a:	01 01                	add    DWORD PTR [rcx],eax
    898c:	2e 32 00             	cs xor al,BYTE PTR [rax]
    898f:	00 62 32             	add    BYTE PTR [rdx+0x32],ah
    8992:	00 00                	add    BYTE PTR [rax],al
    8994:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    899a:	0e                   	(bad)
    899b:	02 15 00 00 2c a7    	add    dl,BYTE PTR [rip+0xffffffffa72c0000]        # ffffffffa72c89a1 <_end+0xffffffffa72c2989>
    89a1:	03 0f                	add    ecx,DWORD PTR [rdi]
    89a3:	2e 32 00             	cs xor al,BYTE PTR [rax]
    89a6:	00 79 32             	add    BYTE PTR [rcx+0x32],bh
    89a9:	00 00                	add    BYTE PTR [rax],al
    89ab:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    89ae:	00 00                	add    BYTE PTR [rax],al
    89b0:	00 0d 8e 2a 00 00    	add    BYTE PTR [rip+0x2a8e],cl        # b444 <_end+0x542c>
    89b6:	0c 39                	or     al,0x39
    89b8:	15 00 00 2d d3       	adc    eax,0xd32d0000
    89bd:	01 f3                	add    ebx,esi
    89bf:	2e 00 00             	cs add BYTE PTR [rax],al
    89c2:	9e                   	sahf
    89c3:	32 00                	xor    al,BYTE PTR [rax]
    89c5:	00 01                	add    BYTE PTR [rcx],al
    89c7:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    89cb:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    89d1:	79 32                	jns    8a05 <_end+0x29ed>
    89d3:	00 00                	add    BYTE PTR [rax],al
    89d5:	00 0e                	add    BYTE PTR [rsi],cl
    89d7:	22 32                	and    dh,BYTE PTR [rdx]
    89d9:	00 00                	add    BYTE PTR [rax],al
    89db:	2c b5                	sub    al,0xb5
    89dd:	03 0f                	add    ecx,DWORD PTR [rdi]
    89df:	2e 32 00             	cs xor al,BYTE PTR [rax]
    89e2:	00 ba 32 00 00 01    	add    BYTE PTR [rdx+0x1000032],bh
    89e8:	9c                   	pushf
    89e9:	24 00                	and    al,0x0
    89eb:	00 01                	add    BYTE PTR [rcx],al
    89ed:	79 32                	jns    8a21 <_end+0x2a09>
    89ef:	00 00                	add    BYTE PTR [rax],al
    89f1:	00 0e                	add    BYTE PTR [rsi],cl
    89f3:	84 0d 00 00 2c cb    	test   BYTE PTR [rip+0xffffffffcb2c0000],cl        # ffffffffcb2c89f9 <_end+0xffffffffcb2c29e1>
    89f9:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    89fc:	21 00                	and    DWORD PTR [rax],eax
    89fe:	00 d6                	add    dh,dl
    8a00:	32 00                	xor    al,BYTE PTR [rax]
    8a02:	00 01                	add    BYTE PTR [rcx],al
    8a04:	0b 30                	or     esi,DWORD PTR [rax]
    8a06:	00 00                	add    BYTE PTR [rax],al
    8a08:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8a0b:	00 00                	add    BYTE PTR [rax],al
    8a0d:	00 0e                	add    BYTE PTR [rsi],cl
    8a0f:	64 1b 00             	sbb    eax,DWORD PTR fs:[rax]
    8a12:	00 2c d5 02 0c a6 21 	add    BYTE PTR [rdx*8+0x21a60c02],ch
    8a19:	00 00                	add    BYTE PTR [rax],al
    8a1b:	f2 32 00             	repnz xor al,BYTE PTR [rax]
    8a1e:	00 01                	add    BYTE PTR [rcx],al
    8a20:	79 32                	jns    8a54 <_end+0x2a3c>
    8a22:	00 00                	add    BYTE PTR [rax],al
    8a24:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8a2a:	0c f2                	or     al,0xf2
    8a2c:	22 00                	and    al,BYTE PTR [rax]
    8a2e:	00 2d b8 01 a6 21    	add    BYTE PTR [rip+0x21a601b8],ch        # 21a68bec <_end+0x21a62bd4>
    8a34:	00 00                	add    BYTE PTR [rax],al
    8a36:	0e                   	(bad)
    8a37:	33 00                	xor    eax,DWORD PTR [rax]
    8a39:	00 01                	add    BYTE PTR [rcx],al
    8a3b:	79 32                	jns    8a6f <_end+0x2a57>
    8a3d:	00 00                	add    BYTE PTR [rax],al
    8a3f:	01 0b                	add    DWORD PTR [rbx],ecx
    8a41:	30 00                	xor    BYTE PTR [rax],al
    8a43:	00 21                	add    BYTE PTR [rcx],ah
    8a45:	00 04 55 21 00 00 2c 	add    BYTE PTR [rdx*2+0x2c000021],al
    8a4c:	1b 03                	sbb    eax,DWORD PTR [rbx]
    8a4e:	0c 4c                	or     al,0x4c
    8a50:	21 00                	and    DWORD PTR [rax],eax
    8a52:	00 a6 21 00 00 2f    	add    BYTE PTR [rsi+0x2f000021],ah
    8a58:	33 00                	xor    eax,DWORD PTR [rax]
    8a5a:	00 01                	add    BYTE PTR [rcx],al
    8a5c:	79 32                	jns    8a90 <_end+0x2a78>
    8a5e:	00 00                	add    BYTE PTR [rax],al
    8a60:	01 0b                	add    DWORD PTR [rbx],ecx
    8a62:	30 00                	xor    BYTE PTR [rax],al
    8a64:	00 21                	add    BYTE PTR [rcx],ah
    8a66:	00 0e                	add    BYTE PTR [rsi],cl
    8a68:	03 15 00 00 2c a8    	add    edx,DWORD PTR [rip+0xffffffffa82c0000]        # ffffffffa82c8a6e <_end+0xffffffffa82c2a56>
    8a6e:	03 0f                	add    ecx,DWORD PTR [rdi]
    8a70:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8a73:	00 46 33             	add    BYTE PTR [rsi+0x33],al
    8a76:	00 00                	add    BYTE PTR [rax],al
    8a78:	01 79 32             	add    DWORD PTR [rcx+0x32],edi
    8a7b:	00 00                	add    BYTE PTR [rax],al
    8a7d:	00 5a 1a             	add    BYTE PTR [rdx+0x1a],bl
    8a80:	15 00 00 2c ae       	adc    eax,0xae2c0000
    8a85:	03 0f                	add    ecx,DWORD PTR [rdi]
    8a87:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8a8a:	00 0e                	add    BYTE PTR [rsi],cl
    8a8c:	d4                   	(bad)
    8a8d:	18 00                	sbb    BYTE PTR [rax],al
    8a8f:	00 2c 62             	add    BYTE PTR [rdx+riz*2],ch
    8a92:	01 01                	add    DWORD PTR [rcx],eax
    8a94:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8a97:	00 74 33 00          	add    BYTE PTR [rbx+rsi*1+0x0],dh
    8a9b:	00 01                	add    BYTE PTR [rcx],al
    8a9d:	d3 23                	shl    DWORD PTR [rbx],cl
    8a9f:	00 00                	add    BYTE PTR [rax],al
    8aa1:	01 2e                	add    DWORD PTR [rsi],ebp
    8aa3:	23 00                	and    eax,DWORD PTR [rax]
    8aa5:	00 01                	add    BYTE PTR [rcx],al
    8aa7:	74 33                	je     8adc <_end+0x2ac4>
    8aa9:	00 00                	add    BYTE PTR [rax],al
    8aab:	00 0d 3a 32 00 00    	add    BYTE PTR [rip+0x323a],cl        # bceb <_end+0x5cd3>
    8ab1:	0e                   	(bad)
    8ab2:	5c                   	pop    rsp
    8ab3:	10 00                	adc    BYTE PTR [rax],al
    8ab5:	00 2c 41             	add    BYTE PTR [rcx+rax*2],ch
    8ab8:	01 0f                	add    DWORD PTR [rdi],ecx
    8aba:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8abd:	00 9f 33 00 00 01    	add    BYTE PTR [rdi+0x1000033],bl
    8ac3:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8ac7:	01 d3                	add    ebx,edx
    8ac9:	23 00                	and    eax,DWORD PTR [rax]
    8acb:	00 01                	add    BYTE PTR [rcx],al
    8acd:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8ad0:	00 01                	add    BYTE PTR [rcx],al
    8ad2:	74 33                	je     8b07 <_end+0x2aef>
    8ad4:	00 00                	add    BYTE PTR [rax],al
    8ad6:	00 0e                	add    BYTE PTR [rsi],cl
    8ad8:	48 29 00             	sub    QWORD PTR [rax],rax
    8adb:	00 2c 3d 01 0c a6 21 	add    BYTE PTR [rdi*1+0x21a60c01],ch
    8ae2:	00 00                	add    BYTE PTR [rax],al
    8ae4:	b6 33                	mov    dh,0x33
    8ae6:	00 00                	add    BYTE PTR [rax],al
    8ae8:	01 b6 33 00 00 00    	add    DWORD PTR [rsi+0x33],esi
    8aee:	0d 46 32 00 00       	or     eax,0x3246
    8af3:	0c 58                	or     al,0x58
    8af5:	31 00                	xor    DWORD PTR [rax],eax
    8af7:	00 2d fd 01 2e 23    	add    BYTE PTR [rip+0x232e01fd],ch        # 232e8cfa <_end+0x232e2ce2>
    8afd:	00 00                	add    BYTE PTR [rax],al
    8aff:	e0 33                	loopne 8b34 <_end+0x2b1c>
    8b01:	00 00                	add    BYTE PTR [rax],al
    8b03:	01 f3                	add    ebx,esi
    8b05:	2e 00 00             	cs add BYTE PTR [rax],al
    8b08:	01 e0                	add    eax,esp
    8b0a:	33 00                	xor    eax,DWORD PTR [rax]
    8b0c:	00 01                	add    BYTE PTR [rcx],al
    8b0e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8b11:	00 01                	add    BYTE PTR [rcx],al
    8b13:	74 33                	je     8b48 <_end+0x2b30>
    8b15:	00 00                	add    BYTE PTR [rax],al
    8b17:	00 0d d3 23 00 00    	add    BYTE PTR [rip+0x23d3],cl        # aef0 <_end+0x4ed8>
    8b1d:	0e                   	(bad)
    8b1e:	23 32                	and    esi,DWORD PTR [rdx]
    8b20:	00 00                	add    BYTE PTR [rax],al
    8b22:	2c b6                	sub    al,0xb6
    8b24:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b26:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8b29:	00 01                	add    BYTE PTR [rcx],al
    8b2b:	34 00                	xor    al,0x0
    8b2d:	00 01                	add    BYTE PTR [rcx],al
    8b2f:	9c                   	pushf
    8b30:	24 00                	and    al,0x0
    8b32:	00 01                	add    BYTE PTR [rcx],al
    8b34:	79 32                	jns    8b68 <_end+0x2b50>
    8b36:	00 00                	add    BYTE PTR [rax],al
    8b38:	00 0e                	add    BYTE PTR [rsi],cl
    8b3a:	8d 1c 00             	lea    ebx,[rax+rax*1]
    8b3d:	00 2c bc             	add    BYTE PTR [rsp+rdi*4],ch
    8b40:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b42:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8b45:	00 18                	add    BYTE PTR [rax],bl
    8b47:	34 00                	xor    al,0x0
    8b49:	00 01                	add    BYTE PTR [rcx],al
    8b4b:	9c                   	pushf
    8b4c:	24 00                	and    al,0x0
    8b4e:	00 00                	add    BYTE PTR [rax],al
    8b50:	0c f3                	or     al,0xf3
    8b52:	19 00                	sbb    DWORD PTR [rax],eax
    8b54:	00 2d 90 01 a6 21    	add    BYTE PTR [rip+0x21a60190],ch        # 21a68cea <_end+0x21a62cd2>
    8b5a:	00 00                	add    BYTE PTR [rax],al
    8b5c:	39 34 00             	cmp    DWORD PTR [rax+rax*1],esi
    8b5f:	00 01                	add    BYTE PTR [rcx],al
    8b61:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8b65:	01 2e                	add    DWORD PTR [rsi],ebp
    8b67:	23 00                	and    eax,DWORD PTR [rax]
    8b69:	00 01                	add    BYTE PTR [rcx],al
    8b6b:	0b 30                	or     esi,DWORD PTR [rax]
    8b6d:	00 00                	add    BYTE PTR [rax],al
    8b6f:	21 00                	and    DWORD PTR [rax],eax
    8b71:	04 42                	add    al,0x42
    8b73:	20 00                	and    BYTE PTR [rax],al
    8b75:	00 2c 22             	add    BYTE PTR [rdx+riz*1],ch
    8b78:	03 0c 39             	add    ecx,DWORD PTR [rcx+rdi*1]
    8b7b:	20 00                	and    BYTE PTR [rax],al
    8b7d:	00 a6 21 00 00 5a    	add    BYTE PTR [rsi+0x5a000021],ah
    8b83:	34 00                	xor    al,0x0
    8b85:	00 01                	add    BYTE PTR [rcx],al
    8b87:	0b 30                	or     esi,DWORD PTR [rax]
    8b89:	00 00                	add    BYTE PTR [rax],al
    8b8b:	01 0b                	add    DWORD PTR [rbx],ecx
    8b8d:	30 00                	xor    BYTE PTR [rax],al
    8b8f:	00 21                	add    BYTE PTR [rcx],ah
    8b91:	00 0e                	add    BYTE PTR [rsi],cl
    8b93:	65 18 00             	sbb    BYTE PTR gs:[rax],al
    8b96:	00 2c d3             	add    BYTE PTR [rbx+rdx*8],ch
    8b99:	03 0f                	add    ecx,DWORD PTR [rdi]
    8b9b:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8b9e:	00 76 34             	add    BYTE PTR [rsi+0x34],dh
    8ba1:	00 00                	add    BYTE PTR [rax],al
    8ba3:	01 2e                	add    DWORD PTR [rsi],ebp
    8ba5:	32 00                	xor    al,BYTE PTR [rax]
    8ba7:	00 01                	add    BYTE PTR [rcx],al
    8ba9:	79 32                	jns    8bdd <_end+0x2bc5>
    8bab:	00 00                	add    BYTE PTR [rax],al
    8bad:	00 0c f1             	add    BYTE PTR [rcx+rsi*8],cl
    8bb0:	22 00                	and    al,BYTE PTR [rax]
    8bb2:	00 2d cb 01 a6 21    	add    BYTE PTR [rip+0x21a601cb],ch        # 21a68d83 <_end+0x21a62d6b>
    8bb8:	00 00                	add    BYTE PTR [rax],al
    8bba:	96                   	xchg   esi,eax
    8bbb:	34 00                	xor    al,0x0
    8bbd:	00 01                	add    BYTE PTR [rcx],al
    8bbf:	79 32                	jns    8bf3 <_end+0x2bdb>
    8bc1:	00 00                	add    BYTE PTR [rax],al
    8bc3:	01 0b                	add    DWORD PTR [rbx],ecx
    8bc5:	30 00                	xor    BYTE PTR [rax],al
    8bc7:	00 01                	add    BYTE PTR [rcx],al
    8bc9:	96                   	xchg   esi,eax
    8bca:	34 00                	xor    al,0x0
    8bcc:	00 00                	add    BYTE PTR [rax],al
    8bce:	0d d1 29 00 00       	or     eax,0x29d1
    8bd3:	04 b5                	add    al,0xb5
    8bd5:	1a 00                	sbb    al,BYTE PTR [rax]
    8bd7:	00 2c 6b             	add    BYTE PTR [rbx+rbp*2],ch
    8bda:	03 0c ac             	add    ecx,DWORD PTR [rsp+rbp*4]
    8bdd:	1a 00                	sbb    al,BYTE PTR [rax]
    8bdf:	00 a6 21 00 00 c0    	add    BYTE PTR [rsi-0x3fffffdf],ah
    8be5:	34 00                	xor    al,0x0
    8be7:	00 01                	add    BYTE PTR [rcx],al
    8be9:	79 32                	jns    8c1d <_end+0x2c05>
    8beb:	00 00                	add    BYTE PTR [rax],al
    8bed:	01 0b                	add    DWORD PTR [rbx],ecx
    8bef:	30 00                	xor    BYTE PTR [rax],al
    8bf1:	00 01                	add    BYTE PTR [rcx],al
    8bf3:	96                   	xchg   esi,eax
    8bf4:	34 00                	xor    al,0x0
    8bf6:	00 00                	add    BYTE PTR [rax],al
    8bf8:	0c f2                	or     al,0xf2
    8bfa:	19 00                	sbb    DWORD PTR [rax],eax
    8bfc:	00 2d a3 01 a6 21    	add    BYTE PTR [rip+0x21a601a3],ch        # 21a68da5 <_end+0x21a62d8d>
    8c02:	00 00                	add    BYTE PTR [rax],al
    8c04:	e5 34                	in     eax,0x34
    8c06:	00 00                	add    BYTE PTR [rax],al
    8c08:	01 f3                	add    ebx,esi
    8c0a:	2e 00 00             	cs add BYTE PTR [rax],al
    8c0d:	01 2e                	add    DWORD PTR [rsi],ebp
    8c0f:	23 00                	and    eax,DWORD PTR [rax]
    8c11:	00 01                	add    BYTE PTR [rcx],al
    8c13:	0b 30                	or     esi,DWORD PTR [rax]
    8c15:	00 00                	add    BYTE PTR [rax],al
    8c17:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c1d:	04 51                	add    al,0x51
    8c1f:	19 00                	sbb    DWORD PTR [rax],eax
    8c21:	00 2c 72             	add    BYTE PTR [rdx+rsi*2],ch
    8c24:	03 0c 48             	add    ecx,DWORD PTR [rax+rcx*2]
    8c27:	19 00                	sbb    DWORD PTR [rax],eax
    8c29:	00 a6 21 00 00 0a    	add    BYTE PTR [rsi+0xa000021],ah
    8c2f:	35 00 00 01 0b       	xor    eax,0xb010000
    8c34:	30 00                	xor    BYTE PTR [rax],al
    8c36:	00 01                	add    BYTE PTR [rcx],al
    8c38:	0b 30                	or     esi,DWORD PTR [rax]
    8c3a:	00 00                	add    BYTE PTR [rax],al
    8c3c:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c42:	0c 0e                	or     al,0xe
    8c44:	13 00                	adc    eax,DWORD PTR [rax]
    8c46:	00 2d c5 01 a6 21    	add    BYTE PTR [rip+0x21a601c5],ch        # 21a68e11 <_end+0x21a62df9>
    8c4c:	00 00                	add    BYTE PTR [rax],al
    8c4e:	25 35 00 00 01       	and    eax,0x1000035
    8c53:	0b 30                	or     esi,DWORD PTR [rax]
    8c55:	00 00                	add    BYTE PTR [rax],al
    8c57:	01 96 34 00 00 00    	add    DWORD PTR [rsi+0x34],edx
    8c5d:	04 12                	add    al,0x12
    8c5f:	25 00 00 2c 6f       	and    eax,0x6f2c0000
    8c64:	03 0c 09             	add    ecx,DWORD PTR [rcx+rcx*1]
    8c67:	25 00 00 a6 21       	and    eax,0x21a60000
    8c6c:	00 00                	add    BYTE PTR [rax],al
    8c6e:	45 35 00 00 01 0b    	rex.RB xor eax,0xb010000
    8c74:	30 00                	xor    BYTE PTR [rax],al
    8c76:	00 01                	add    BYTE PTR [rcx],al
    8c78:	96                   	xchg   esi,eax
    8c79:	34 00                	xor    al,0x0
    8c7b:	00 00                	add    BYTE PTR [rax],al
    8c7d:	0c 47                	or     al,0x47
    8c7f:	30 00                	xor    BYTE PTR [rax],al
    8c81:	00 2d ec 01 2e 23    	add    BYTE PTR [rip+0x232e01ec],ch        # 232e8e73 <_end+0x232e2e5b>
    8c87:	00 00                	add    BYTE PTR [rax],al
    8c89:	65 35 00 00 01 e2    	gs xor eax,0xe2010000
    8c8f:	22 00                	and    al,BYTE PTR [rax]
    8c91:	00 01                	add    BYTE PTR [rcx],al
    8c93:	9c                   	pushf
    8c94:	24 00                	and    al,0x0
    8c96:	00 01                	add    BYTE PTR [rcx],al
    8c98:	74 33                	je     8ccd <_end+0x2cb5>
    8c9a:	00 00                	add    BYTE PTR [rax],al
    8c9c:	00 0c 8e             	add    BYTE PTR [rsi+rcx*4],cl
    8c9f:	2f                   	(bad)
    8ca0:	00 00                	add    BYTE PTR [rax],al
    8ca2:	2d 60 01 f3 2e       	sub    eax,0x2ef30160
    8ca7:	00 00                	add    BYTE PTR [rax],al
    8ca9:	80 35 00 00 01 f3 2e 	xor    BYTE PTR [rip+0xfffffffff3010000],0x2e        # fffffffff3018cb0 <_end+0xfffffffff3012c98>
    8cb0:	00 00                	add    BYTE PTR [rax],al
    8cb2:	01 0b                	add    DWORD PTR [rbx],ecx
    8cb4:	30 00                	xor    BYTE PTR [rax],al
    8cb6:	00 00                	add    BYTE PTR [rax],al
    8cb8:	0c 40                	or     al,0x40
    8cba:	16                   	(bad)
    8cbb:	00 00                	add    BYTE PTR [rax],al
    8cbd:	2c 82                	sub    al,0x82
    8cbf:	0c a6                	or     al,0xa6
    8cc1:	21 00                	and    DWORD PTR [rax],eax
    8cc3:	00 9b 35 00 00 01    	add    BYTE PTR [rbx+0x1000035],bl
    8cc9:	0b 30                	or     esi,DWORD PTR [rax]
    8ccb:	00 00                	add    BYTE PTR [rax],al
    8ccd:	01 0b                	add    DWORD PTR [rbx],ecx
    8ccf:	30 00                	xor    BYTE PTR [rax],al
    8cd1:	00 00                	add    BYTE PTR [rax],al
    8cd3:	0c c9                	or     al,0xc9
    8cd5:	10 00                	adc    BYTE PTR [rax],al
    8cd7:	00 2c 9b             	add    BYTE PTR [rbx+rbx*4],ch
    8cda:	0c a6                	or     al,0xa6
    8cdc:	21 00                	and    DWORD PTR [rax],eax
    8cde:	00 b6 35 00 00 01    	add    BYTE PTR [rsi+0x1000035],dh
    8ce4:	0b 30                	or     esi,DWORD PTR [rax]
    8ce6:	00 00                	add    BYTE PTR [rax],al
    8ce8:	01 0b                	add    DWORD PTR [rbx],ecx
    8cea:	30 00                	xor    BYTE PTR [rax],al
    8cec:	00 00                	add    BYTE PTR [rax],al
    8cee:	0c dc                	or     al,0xdc
    8cf0:	19 00                	sbb    DWORD PTR [rax],eax
    8cf2:	00 2d 3c 01 f3 2e    	add    BYTE PTR [rip+0x2ef3013c],ch        # 2ef38e34 <_end+0x2ef32e1c>
    8cf8:	00 00                	add    BYTE PTR [rax],al
    8cfa:	d1 35 00 00 01 f3    	shl    DWORD PTR [rip+0xfffffffff3010000],1        # fffffffff3018d00 <_end+0xfffffffff3012ce8>
    8d00:	2e 00 00             	cs add BYTE PTR [rax],al
    8d03:	01 0b                	add    DWORD PTR [rbx],ecx
    8d05:	30 00                	xor    BYTE PTR [rax],al
    8d07:	00 00                	add    BYTE PTR [rax],al
    8d09:	0c 17                	or     al,0x17
    8d0b:	0e                   	(bad)
    8d0c:	00 00                	add    BYTE PTR [rax],al
    8d0e:	2c d4                	sub    al,0xd4
    8d10:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8d13:	00 00                	add    BYTE PTR [rax],al
    8d15:	ec                   	in     al,dx
    8d16:	35 00 00 01 0b       	xor    eax,0xb010000
    8d1b:	30 00                	xor    BYTE PTR [rax],al
    8d1d:	00 01                	add    BYTE PTR [rcx],al
    8d1f:	0b 30                	or     esi,DWORD PTR [rax]
    8d21:	00 00                	add    BYTE PTR [rax],al
    8d23:	00 0e                	add    BYTE PTR [rsi],cl
    8d25:	84 2d 00 00 2c 13    	test   BYTE PTR [rip+0x132c0000],ch        # 132c8d2b <_end+0x132c2d13>
    8d2b:	04 0f                	add    al,0xf
    8d2d:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8d30:	00 12                	add    BYTE PTR [rdx],dl
    8d32:	36 00 00             	ss add BYTE PTR [rax],al
    8d35:	01 f3                	add    ebx,esi
    8d37:	2e 00 00             	cs add BYTE PTR [rax],al
    8d3a:	01 2e                	add    DWORD PTR [rsi],ebp
    8d3c:	23 00                	and    eax,DWORD PTR [rax]
    8d3e:	00 01                	add    BYTE PTR [rcx],al
    8d40:	0b 30                	or     esi,DWORD PTR [rax]
    8d42:	00 00                	add    BYTE PTR [rax],al
    8d44:	01 12                	add    DWORD PTR [rdx],edx
    8d46:	36 00 00             	ss add BYTE PTR [rax],al
    8d49:	00 0d b4 36 00 00    	add    BYTE PTR [rip+0x36b4],cl        # c403 <_end+0x63eb>
    8d4f:	82                   	(bad)
    8d50:	01 74 6d 00          	add    DWORD PTR [rbp+rbp*2+0x0],esi
    8d54:	38 2e                	cmp    BYTE PTR [rsi],ch
    8d56:	07                   	(bad)
    8d57:	08 b4 36 00 00 06 97 	or     BYTE PTR [rsi+rsi*1-0x68fa0000],dh
    8d5e:	1b 00                	sbb    eax,DWORD PTR [rax]
    8d60:	00 2e                	add    BYTE PTR [rsi],ch
    8d62:	09 07                	or     DWORD PTR [rdi],eax
    8d64:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d65:	21 00                	and    DWORD PTR [rax],eax
    8d67:	00 00                	add    BYTE PTR [rax],al
    8d69:	06                   	(bad)
    8d6a:	05 18 00 00 2e       	add    eax,0x2e000018
    8d6f:	0a 07                	or     al,BYTE PTR [rdi]
    8d71:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d72:	21 00                	and    DWORD PTR [rax],eax
    8d74:	00 04 06             	add    BYTE PTR [rsi+rax*1],al
    8d77:	4b 0c 00             	rex.WXB or al,0x0
    8d7a:	00 2e                	add    BYTE PTR [rsi],ch
    8d7c:	0b 07                	or     eax,DWORD PTR [rdi]
    8d7e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d7f:	21 00                	and    DWORD PTR [rax],eax
    8d81:	00 08                	add    BYTE PTR [rax],cl
    8d83:	06                   	(bad)
    8d84:	91                   	xchg   ecx,eax
    8d85:	19 00                	sbb    DWORD PTR [rax],eax
    8d87:	00 2e                	add    BYTE PTR [rsi],ch
    8d89:	0c 07                	or     al,0x7
    8d8b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8d8c:	21 00                	and    DWORD PTR [rax],eax
    8d8e:	00 0c 06             	add    BYTE PTR [rsi+rax*1],cl
    8d91:	5d                   	pop    rbp
    8d92:	21 00                	and    DWORD PTR [rax],eax
    8d94:	00 2e                	add    BYTE PTR [rsi],ch
    8d96:	0d 07 a6 21 00       	or     eax,0x21a607
    8d9b:	00 10                	add    BYTE PTR [rax],dl
    8d9d:	06                   	(bad)
    8d9e:	29 32                	sub    DWORD PTR [rdx],esi
    8da0:	00 00                	add    BYTE PTR [rax],al
    8da2:	2e 0e                	cs (bad)
    8da4:	07                   	(bad)
    8da5:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8da6:	21 00                	and    DWORD PTR [rax],eax
    8da8:	00 14 06             	add    BYTE PTR [rsi+rax*1],dl
    8dab:	e5 28                	in     eax,0x28
    8dad:	00 00                	add    BYTE PTR [rax],al
    8daf:	2e 0f 07             	cs sysretd
    8db2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8db3:	21 00                	and    DWORD PTR [rax],eax
    8db5:	00 18                	add    BYTE PTR [rax],bl
    8db7:	06                   	(bad)
    8db8:	55                   	push   rbp
    8db9:	29 00                	sub    DWORD PTR [rax],eax
    8dbb:	00 2e                	add    BYTE PTR [rsi],ch
    8dbd:	10 07                	adc    BYTE PTR [rdi],al
    8dbf:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8dc0:	21 00                	and    DWORD PTR [rax],eax
    8dc2:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    8dc5:	05 13 00 00 2e       	add    eax,0x2e000013
    8dca:	11 07                	adc    DWORD PTR [rdi],eax
    8dcc:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    8dcd:	21 00                	and    DWORD PTR [rax],eax
    8dcf:	00 20                	add    BYTE PTR [rax],ah
    8dd1:	06                   	(bad)
    8dd2:	82                   	(bad)
    8dd3:	1e                   	(bad)
    8dd4:	00 00                	add    BYTE PTR [rax],al
    8dd6:	2e 14 0c             	cs adc al,0xc
    8dd9:	b2 21                	mov    dl,0x21
    8ddb:	00 00                	add    BYTE PTR [rax],al
    8ddd:	28 06                	sub    BYTE PTR [rsi],al
    8ddf:	dd 2f                	(bad)  [rdi]
    8de1:	00 00                	add    BYTE PTR [rax],al
    8de3:	2e 15 0f d3 23 00    	cs adc eax,0x23d30f
    8de9:	00 30                	add    BYTE PTR [rax],dh
    8deb:	00 13                	add    BYTE PTR [rbx],dl
    8ded:	17                   	(bad)
    8dee:	36 00 00             	ss add BYTE PTR [rax],al
    8df1:	0c c3                	or     al,0xc3
    8df3:	24 00                	and    al,0x0
    8df5:	00 2c f7             	add    BYTE PTR [rdi+rsi*8],ch
    8df8:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8dfb:	00 00                	add    BYTE PTR [rax],al
    8dfd:	cf                   	iret
    8dfe:	36 00 00             	ss add BYTE PTR [rax],al
    8e01:	01 0b                	add    DWORD PTR [rbx],ecx
    8e03:	30 00                	xor    BYTE PTR [rax],al
    8e05:	00 00                	add    BYTE PTR [rax],al
    8e07:	0c c5                	or     al,0xc5
    8e09:	30 00                	xor    BYTE PTR [rax],al
    8e0b:	00 2d 69 01 f3 2e    	add    BYTE PTR [rip+0x2ef30169],ch        # 2ef38f7a <_end+0x2ef32f62>
    8e11:	00 00                	add    BYTE PTR [rax],al
    8e13:	ef                   	out    dx,eax
    8e14:	36 00 00             	ss add BYTE PTR [rax],al
    8e17:	01 f3                	add    ebx,esi
    8e19:	2e 00 00             	cs add BYTE PTR [rax],al
    8e1c:	01 0b                	add    DWORD PTR [rbx],ecx
    8e1e:	30 00                	xor    BYTE PTR [rax],al
    8e20:	00 01                	add    BYTE PTR [rcx],al
    8e22:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e25:	00 00                	add    BYTE PTR [rax],al
    8e27:	0c 40                	or     al,0x40
    8e29:	17                   	(bad)
    8e2a:	00 00                	add    BYTE PTR [rax],al
    8e2c:	2c 85                	sub    al,0x85
    8e2e:	0c a6                	or     al,0xa6
    8e30:	21 00                	and    DWORD PTR [rax],eax
    8e32:	00 0f                	add    BYTE PTR [rdi],cl
    8e34:	37                   	(bad)
    8e35:	00 00                	add    BYTE PTR [rax],al
    8e37:	01 0b                	add    DWORD PTR [rbx],ecx
    8e39:	30 00                	xor    BYTE PTR [rax],al
    8e3b:	00 01                	add    BYTE PTR [rcx],al
    8e3d:	0b 30                	or     esi,DWORD PTR [rax]
    8e3f:	00 00                	add    BYTE PTR [rax],al
    8e41:	01 2e                	add    DWORD PTR [rsi],ebp
    8e43:	23 00                	and    eax,DWORD PTR [rax]
    8e45:	00 00                	add    BYTE PTR [rax],al
    8e47:	0c d5                	or     al,0xd5
    8e49:	1b 00                	sbb    eax,DWORD PTR [rax]
    8e4b:	00 2d 4e 01 f3 2e    	add    BYTE PTR [rip+0x2ef3014e],ch        # 2ef38f9f <_end+0x2ef32f87>
    8e51:	00 00                	add    BYTE PTR [rax],al
    8e53:	2f                   	(bad)
    8e54:	37                   	(bad)
    8e55:	00 00                	add    BYTE PTR [rax],al
    8e57:	01 f3                	add    ebx,esi
    8e59:	2e 00 00             	cs add BYTE PTR [rax],al
    8e5c:	01 0b                	add    DWORD PTR [rbx],ecx
    8e5e:	30 00                	xor    BYTE PTR [rax],al
    8e60:	00 01                	add    BYTE PTR [rcx],al
    8e62:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e65:	00 00                	add    BYTE PTR [rax],al
    8e67:	0e                   	(bad)
    8e68:	be 28 00 00 2d       	mov    esi,0x2d000028
    8e6d:	06                   	(bad)
    8e6e:	01 01                	add    DWORD PTR [rcx],eax
    8e70:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8e73:	00 55 37             	add    BYTE PTR [rbp+0x37],dl
    8e76:	00 00                	add    BYTE PTR [rax],al
    8e78:	01 e2                	add    edx,esp
    8e7a:	22 00                	and    al,BYTE PTR [rax]
    8e7c:	00 01                	add    BYTE PTR [rcx],al
    8e7e:	55                   	push   rbp
    8e7f:	37                   	(bad)
    8e80:	00 00                	add    BYTE PTR [rax],al
    8e82:	01 2e                	add    DWORD PTR [rsi],ebp
    8e84:	23 00                	and    eax,DWORD PTR [rax]
    8e86:	00 01                	add    BYTE PTR [rcx],al
    8e88:	74 33                	je     8ebd <_end+0x2ea5>
    8e8a:	00 00                	add    BYTE PTR [rax],al
    8e8c:	00 0d 0b 30 00 00    	add    BYTE PTR [rip+0x300b],cl        # be9d <_end+0x5e85>
    8e92:	0c 35                	or     al,0x35
    8e94:	23 00                	and    eax,DWORD PTR [rax]
    8e96:	00 2c d8             	add    BYTE PTR [rax+rbx*8],ch
    8e99:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8e9c:	00 00                	add    BYTE PTR [rax],al
    8e9e:	75 37                	jne    8ed7 <_end+0x2ebf>
    8ea0:	00 00                	add    BYTE PTR [rax],al
    8ea2:	01 0b                	add    DWORD PTR [rbx],ecx
    8ea4:	30 00                	xor    BYTE PTR [rax],al
    8ea6:	00 01                	add    BYTE PTR [rcx],al
    8ea8:	0b 30                	or     esi,DWORD PTR [rax]
    8eaa:	00 00                	add    BYTE PTR [rax],al
    8eac:	00 0e                	add    BYTE PTR [rsi],cl
    8eae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8eaf:	29 00                	sub    DWORD PTR [rax],eax
    8eb1:	00 2c 92             	add    BYTE PTR [rdx+rdx*4],ch
    8eb4:	01 0f                	add    DWORD PTR [rdi],ecx
    8eb6:	2e 00 00             	cs add BYTE PTR [rax],al
    8eb9:	00 91 37 00 00 01    	add    BYTE PTR [rcx+0x1000037],dl
    8ebf:	0b 30                	or     esi,DWORD PTR [rax]
    8ec1:	00 00                	add    BYTE PTR [rax],al
    8ec3:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    8ec9:	0d f3 2e 00 00       	or     eax,0x2ef3
    8ece:	0e                   	(bad)
    8ecf:	75 29                	jne    8efa <_end+0x2ee2>
    8ed1:	00 00                	add    BYTE PTR [rax],al
    8ed3:	2c 97                	sub    al,0x97
    8ed5:	01 0e                	add    DWORD PTR [rsi],ecx
    8ed7:	35 00 00 00 b2       	xor    eax,0xb2000000
    8edc:	37                   	(bad)
    8edd:	00 00                	add    BYTE PTR [rax],al
    8edf:	01 0b                	add    DWORD PTR [rbx],ecx
    8ee1:	30 00                	xor    BYTE PTR [rax],al
    8ee3:	00 01                	add    BYTE PTR [rcx],al
    8ee5:	91                   	xchg   ecx,eax
    8ee6:	37                   	(bad)
    8ee7:	00 00                	add    BYTE PTR [rax],al
    8ee9:	00 0c bd 29 00 00 2c 	add    BYTE PTR [rdi*4+0x2c000029],cl
    8ef0:	f2 11 f3             	repnz adc ebx,esi
    8ef3:	2e 00 00             	cs add BYTE PTR [rax],al
    8ef6:	d2 37                	shl    BYTE PTR [rdi],cl
    8ef8:	00 00                	add    BYTE PTR [rax],al
    8efa:	01 f3                	add    ebx,esi
    8efc:	2e 00 00             	cs add BYTE PTR [rax],al
    8eff:	01 0b                	add    DWORD PTR [rbx],ecx
    8f01:	30 00                	xor    BYTE PTR [rax],al
    8f03:	00 01                	add    BYTE PTR [rcx],al
    8f05:	91                   	xchg   ecx,eax
    8f06:	37                   	(bad)
    8f07:	00 00                	add    BYTE PTR [rax],al
    8f09:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    8f0c:	1b 00                	sbb    eax,DWORD PTR [rax]
    8f0e:	00 2c f4             	add    BYTE PTR [rsp+rsi*8],ch
    8f11:	01 11                	add    DWORD PTR [rcx],edx
    8f13:	9e                   	sahf
    8f14:	1b 00                	sbb    eax,DWORD PTR [rax]
    8f16:	00 b2 21 00 00 f7    	add    BYTE PTR [rdx-0x8ffffdf],dh
    8f1c:	37                   	(bad)
    8f1d:	00 00                	add    BYTE PTR [rax],al
    8f1f:	01 0b                	add    DWORD PTR [rbx],ecx
    8f21:	30 00                	xor    BYTE PTR [rax],al
    8f23:	00 01                	add    BYTE PTR [rcx],al
    8f25:	91                   	xchg   ecx,eax
    8f26:	37                   	(bad)
    8f27:	00 00                	add    BYTE PTR [rax],al
    8f29:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8f2f:	04 cd                	add    al,0xcd
    8f31:	0e                   	(bad)
    8f32:	00 00                	add    BYTE PTR [rax],al
    8f34:	2c f7                	sub    al,0xf7
    8f36:	01 1a                	add    DWORD PTR [rdx],ebx
    8f38:	c4                   	(bad)
    8f39:	0e                   	(bad)
    8f3a:	00 00                	add    BYTE PTR [rax],al
    8f3c:	8a 21                	mov    ah,BYTE PTR [rcx]
    8f3e:	00 00                	add    BYTE PTR [rax],al
    8f40:	1c 38                	sbb    al,0x38
    8f42:	00 00                	add    BYTE PTR [rax],al
    8f44:	01 0b                	add    DWORD PTR [rbx],ecx
    8f46:	30 00                	xor    BYTE PTR [rax],al
    8f48:	00 01                	add    BYTE PTR [rcx],al
    8f4a:	91                   	xchg   ecx,eax
    8f4b:	37                   	(bad)
    8f4c:	00 00                	add    BYTE PTR [rax],al
    8f4e:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    8f54:	0c 7e                	or     al,0x7e
    8f56:	10 00                	adc    BYTE PTR [rax],al
    8f58:	00 2c 9f             	add    BYTE PTR [rdi+rbx*4],ch
    8f5b:	0f 2e 23             	ucomiss xmm4,DWORD PTR [rbx]
    8f5e:	00 00                	add    BYTE PTR [rax],al
    8f60:	3c 38                	cmp    al,0x38
    8f62:	00 00                	add    BYTE PTR [rax],al
    8f64:	01 f3                	add    ebx,esi
    8f66:	2e 00 00             	cs add BYTE PTR [rax],al
    8f69:	01 0b                	add    DWORD PTR [rbx],ecx
    8f6b:	30 00                	xor    BYTE PTR [rax],al
    8f6d:	00 01                	add    BYTE PTR [rcx],al
    8f6f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8f72:	00 00                	add    BYTE PTR [rax],al
    8f74:	0e                   	(bad)
    8f75:	92                   	xchg   edx,eax
    8f76:	22 00                	and    al,BYTE PTR [rax]
    8f78:	00 2c 5d 01 01 a6 21 	add    BYTE PTR [rbx*2+0x21a60101],ch
    8f7f:	00 00                	add    BYTE PTR [rax],al
    8f81:	53                   	push   rbx
    8f82:	38 00                	cmp    BYTE PTR [rax],al
    8f84:	00 01                	add    BYTE PTR [rcx],al
    8f86:	2e 32 00             	cs xor al,BYTE PTR [rax]
    8f89:	00 00                	add    BYTE PTR [rax],al
    8f8b:	0e                   	(bad)
    8f8c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    8f8d:	1c 00                	sbb    al,0x0
    8f8f:	00 2c 1b             	add    BYTE PTR [rbx+rbx*1],ch
    8f92:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    8f95:	21 00                	and    DWORD PTR [rax],eax
    8f97:	00 74 38 00          	add    BYTE PTR [rax+rdi*1+0x0],dh
    8f9b:	00 01                	add    BYTE PTR [rcx],al
    8f9d:	0b 30                	or     esi,DWORD PTR [rax]
    8f9f:	00 00                	add    BYTE PTR [rax],al
    8fa1:	01 0b                	add    DWORD PTR [rbx],ecx
    8fa3:	30 00                	xor    BYTE PTR [rax],al
    8fa5:	00 01                	add    BYTE PTR [rcx],al
    8fa7:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8faa:	00 00                	add    BYTE PTR [rax],al
    8fac:	0c 44                	or     al,0x44
    8fae:	21 00                	and    DWORD PTR [rax],eax
    8fb0:	00 2d 18 01 f3 2e    	add    BYTE PTR [rip+0x2ef30118],ch        # 2ef390ce <_end+0x2ef330b6>
    8fb6:	00 00                	add    BYTE PTR [rax],al
    8fb8:	94                   	xchg   esp,eax
    8fb9:	38 00                	cmp    BYTE PTR [rax],al
    8fbb:	00 01                	add    BYTE PTR [rcx],al
    8fbd:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    8fc1:	01 0b                	add    DWORD PTR [rbx],ecx
    8fc3:	30 00                	xor    BYTE PTR [rax],al
    8fc5:	00 01                	add    BYTE PTR [rcx],al
    8fc7:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fca:	00 00                	add    BYTE PTR [rax],al
    8fcc:	0c 69                	or     al,0x69
    8fce:	17                   	(bad)
    8fcf:	00 00                	add    BYTE PTR [rax],al
    8fd1:	2d 21 01 f3 2e       	sub    eax,0x2ef30121
    8fd6:	00 00                	add    BYTE PTR [rax],al
    8fd8:	b4 38                	mov    ah,0x38
    8fda:	00 00                	add    BYTE PTR [rax],al
    8fdc:	01 f3                	add    ebx,esi
    8fde:	2e 00 00             	cs add BYTE PTR [rax],al
    8fe1:	01 0b                	add    DWORD PTR [rbx],ecx
    8fe3:	30 00                	xor    BYTE PTR [rax],al
    8fe5:	00 01                	add    BYTE PTR [rcx],al
    8fe7:	2e 23 00             	cs and eax,DWORD PTR [rax]
    8fea:	00 00                	add    BYTE PTR [rax],al
    8fec:	0c fd                	or     al,0xfd
    8fee:	17                   	(bad)
    8fef:	00 00                	add    BYTE PTR [rax],al
    8ff1:	2d 34 01 f3 2e       	sub    eax,0x2ef30134
    8ff6:	00 00                	add    BYTE PTR [rax],al
    8ff8:	d4                   	(bad)
    8ff9:	38 00                	cmp    BYTE PTR [rax],al
    8ffb:	00 01                	add    BYTE PTR [rcx],al
    8ffd:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9001:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    9008:	23 00                	and    eax,DWORD PTR [rax]
    900a:	00 00                	add    BYTE PTR [rax],al
    900c:	0c f3                	or     al,0xf3
    900e:	22 00                	and    al,BYTE PTR [rax]
    9010:	00 2d b2 01 a6 21    	add    BYTE PTR [rip+0x21a601b2],ch        # 21a691c8 <_end+0x21a631b0>
    9016:	00 00                	add    BYTE PTR [rax],al
    9018:	eb 38                	jmp    9052 <_end+0x303a>
    901a:	00 00                	add    BYTE PTR [rax],al
    901c:	01 0b                	add    DWORD PTR [rbx],ecx
    901e:	30 00                	xor    BYTE PTR [rax],al
    9020:	00 21                	add    BYTE PTR [rcx],ah
    9022:	00 04 ef             	add    BYTE PTR [rdi+rbp*8],al
    9025:	16                   	(bad)
    9026:	00 00                	add    BYTE PTR [rax],al
    9028:	2c 1f                	sub    al,0x1f
    902a:	03 0c e6             	add    ecx,DWORD PTR [rsi+riz*8]
    902d:	16                   	(bad)
    902e:	00 00                	add    BYTE PTR [rax],al
    9030:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9031:	21 00                	and    DWORD PTR [rax],eax
    9033:	00 07                	add    BYTE PTR [rdi],al
    9035:	39 00                	cmp    DWORD PTR [rax],eax
    9037:	00 01                	add    BYTE PTR [rcx],al
    9039:	0b 30                	or     esi,DWORD PTR [rax]
    903b:	00 00                	add    BYTE PTR [rax],al
    903d:	21 00                	and    DWORD PTR [rax],eax
    903f:	0f 4e 13             	cmovle edx,DWORD PTR [rbx]
    9042:	00 00                	add    BYTE PTR [rax],al
    9044:	2c ba                	sub    al,0xba
    9046:	1d 4e 13 00 00       	sbb    eax,0x134e
    904b:	0b 30                	or     esi,DWORD PTR [rax]
    904d:	00 00                	add    BYTE PTR [rax],al
    904f:	26 39 00             	es cmp DWORD PTR [rax],eax
    9052:	00 01                	add    BYTE PTR [rcx],al
    9054:	0b 30                	or     esi,DWORD PTR [rax]
    9056:	00 00                	add    BYTE PTR [rax],al
    9058:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    905f:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    9062:	00 2c b8             	add    BYTE PTR [rax+rdi*4],ch
    9065:	17                   	(bad)
    9066:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    9069:	00 f3                	add    bl,dh
    906b:	2e 00 00             	cs add BYTE PTR [rax],al
    906e:	45 39 00             	cmp    DWORD PTR [r8],r8d
    9071:	00 01                	add    BYTE PTR [rcx],al
    9073:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9077:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    907e:	4d 16                	rex.WRB (bad)
    9080:	00 00                	add    BYTE PTR [rax],al
    9082:	2c de                	sub    al,0xde
    9084:	1d 4d 16 00 00       	sbb    eax,0x164d
    9089:	0b 30                	or     esi,DWORD PTR [rax]
    908b:	00 00                	add    BYTE PTR [rax],al
    908d:	64 39 00             	cmp    DWORD PTR fs:[rax],eax
    9090:	00 01                	add    BYTE PTR [rcx],al
    9092:	0b 30                	or     esi,DWORD PTR [rax]
    9094:	00 00                	add    BYTE PTR [rax],al
    9096:	01 0b                	add    DWORD PTR [rbx],ecx
    9098:	30 00                	xor    BYTE PTR [rax],al
    909a:	00 00                	add    BYTE PTR [rax],al
    909c:	0f 4d 16             	cmovge edx,DWORD PTR [rsi]
    909f:	00 00                	add    BYTE PTR [rax],al
    90a1:	2c dc                	sub    al,0xdc
    90a3:	17                   	(bad)
    90a4:	4d 16                	rex.WRB (bad)
    90a6:	00 00                	add    BYTE PTR [rax],al
    90a8:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90ac:	83 39 00             	cmp    DWORD PTR [rcx],0x0
    90af:	00 01                	add    BYTE PTR [rcx],al
    90b1:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90b5:	01 0b                	add    DWORD PTR [rbx],ecx
    90b7:	30 00                	xor    BYTE PTR [rax],al
    90b9:	00 00                	add    BYTE PTR [rax],al
    90bb:	0f 71                	psrlw  (bad),0x71
    90bd:	12 00                	adc    al,BYTE PTR [rax]
    90bf:	00 2c c4             	add    BYTE PTR [rsp+rax*8],ch
    90c2:	1d 71 12 00 00       	sbb    eax,0x1271
    90c7:	0b 30                	or     esi,DWORD PTR [rax]
    90c9:	00 00                	add    BYTE PTR [rax],al
    90cb:	a2 39 00 00 01 0b 30 	movabs ds:0x300b01000039,al
    90d2:	00 00 
    90d4:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    90db:	71 12                	jno    90ef <_end+0x30d7>
    90dd:	00 00                	add    BYTE PTR [rax],al
    90df:	2c c2                	sub    al,0xc2
    90e1:	17                   	(bad)
    90e2:	71 12                	jno    90f6 <_end+0x30de>
    90e4:	00 00                	add    BYTE PTR [rax],al
    90e6:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90ea:	c1 39 00             	sar    DWORD PTR [rcx],0x0
    90ed:	00 01                	add    BYTE PTR [rcx],al
    90ef:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    90f3:	01 9c 24 00 00 00 0f 	add    DWORD PTR [rsp+0xf000000],ebx
    90fa:	ed                   	in     eax,dx
    90fb:	27                   	(bad)
    90fc:	00 00                	add    BYTE PTR [rax],al
    90fe:	2c e9                	sub    al,0xe9
    9100:	1d ed 27 00 00       	sbb    eax,0x27ed
    9105:	0b 30                	or     esi,DWORD PTR [rax]
    9107:	00 00                	add    BYTE PTR [rax],al
    9109:	e0 39                	loopne 9144 <_end+0x312c>
    910b:	00 00                	add    BYTE PTR [rax],al
    910d:	01 0b                	add    DWORD PTR [rbx],ecx
    910f:	30 00                	xor    BYTE PTR [rax],al
    9111:	00 01                	add    BYTE PTR [rcx],al
    9113:	0b 30                	or     esi,DWORD PTR [rax]
    9115:	00 00                	add    BYTE PTR [rax],al
    9117:	00 0f                	add    BYTE PTR [rdi],cl
    9119:	ed                   	in     eax,dx
    911a:	27                   	(bad)
    911b:	00 00                	add    BYTE PTR [rax],al
    911d:	2c e7                	sub    al,0xe7
    911f:	17                   	(bad)
    9120:	ed                   	in     eax,dx
    9121:	27                   	(bad)
    9122:	00 00                	add    BYTE PTR [rax],al
    9124:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9128:	ff                   	(bad)
    9129:	39 00                	cmp    DWORD PTR [rax],eax
    912b:	00 01                	add    BYTE PTR [rcx],al
    912d:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9131:	01 0b                	add    DWORD PTR [rbx],ecx
    9133:	30 00                	xor    BYTE PTR [rax],al
    9135:	00 00                	add    BYTE PTR [rax],al
    9137:	04 89                	add    al,0x89
    9139:	15 00 00 2c 12       	adc    eax,0x122c0000
    913e:	01 1d 89 15 00 00    	add    DWORD PTR [rip+0x1589],ebx        # a6cd <_end+0x46b5>
    9144:	0b 30                	or     esi,DWORD PTR [rax]
    9146:	00 00                	add    BYTE PTR [rax],al
    9148:	24 3a                	and    al,0x3a
    914a:	00 00                	add    BYTE PTR [rax],al
    914c:	01 0b                	add    DWORD PTR [rbx],ecx
    914e:	30 00                	xor    BYTE PTR [rax],al
    9150:	00 01                	add    BYTE PTR [rcx],al
    9152:	9c                   	pushf
    9153:	24 00                	and    al,0x0
    9155:	00 01                	add    BYTE PTR [rcx],al
    9157:	2e 23 00             	cs and eax,DWORD PTR [rax]
    915a:	00 00                	add    BYTE PTR [rax],al
    915c:	04 89                	add    al,0x89
    915e:	15 00 00 2c 10       	adc    eax,0x102c0000
    9163:	01 17                	add    DWORD PTR [rdi],edx
    9165:	89 15 00 00 f3 2e    	mov    DWORD PTR [rip+0x2ef30000],edx        # 2ef3916b <_end+0x2ef33153>
    916b:	00 00                	add    BYTE PTR [rax],al
    916d:	49 3a 00             	rex.WB cmp al,BYTE PTR [r8]
    9170:	00 01                	add    BYTE PTR [rcx],al
    9172:	f3 2e 00 00          	repz cs add BYTE PTR [rax],al
    9176:	01 9c 24 00 00 01 2e 	add    DWORD PTR [rsp+0x2e010000],ebx
    917d:	23 00                	and    eax,DWORD PTR [rax]
    917f:	00 00                	add    BYTE PTR [rax],al
    9181:	0e                   	(bad)
    9182:	51                   	push   rcx
    9183:	27                   	(bad)
    9184:	00 00                	add    BYTE PTR [rax],al
    9186:	2c 99                	sub    al,0x99
    9188:	01 14 c5 21 00 00 65 	add    DWORD PTR [rax*8+0x65000021],edx
    918f:	3a 00                	cmp    al,BYTE PTR [rax]
    9191:	00 01                	add    BYTE PTR [rcx],al
    9193:	0b 30                	or     esi,DWORD PTR [rax]
    9195:	00 00                	add    BYTE PTR [rax],al
    9197:	01 91 37 00 00 00    	add    DWORD PTR [rcx+0x37],edx
    919d:	04 c6                	add    al,0xc6
    919f:	1d 00 00 2c fc       	sbb    eax,0xfc2c0000
    91a4:	01 16                	add    DWORD PTR [rsi],edx
    91a6:	bd 1d 00 00 be       	mov    ebp,0xbe00001d
    91ab:	21 00                	and    DWORD PTR [rax],eax
    91ad:	00 8a 3a 00 00 01    	add    BYTE PTR [rdx+0x100003a],cl
    91b3:	0b 30                	or     esi,DWORD PTR [rax]
    91b5:	00 00                	add    BYTE PTR [rax],al
    91b7:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    91bd:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91be:	21 00                	and    DWORD PTR [rax],eax
    91c0:	00 00                	add    BYTE PTR [rax],al
    91c2:	04 58                	add    al,0x58
    91c4:	32 00                	xor    al,BYTE PTR [rax]
    91c6:	00 2c 01             	add    BYTE PTR [rcx+rax*1],ch
    91c9:	02 1f                	add    bl,BYTE PTR [rdi]
    91cb:	4f 32 00             	rex.WRXB xor r8b,BYTE PTR [r8]
    91ce:	00 91 21 00 00 af    	add    BYTE PTR [rcx-0x50ffffdf],dl
    91d4:	3a 00                	cmp    al,BYTE PTR [rax]
    91d6:	00 01                	add    BYTE PTR [rcx],al
    91d8:	0b 30                	or     esi,DWORD PTR [rax]
    91da:	00 00                	add    BYTE PTR [rax],al
    91dc:	01 91 37 00 00 01    	add    DWORD PTR [rcx+0x1000037],edx
    91e2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    91e3:	21 00                	and    DWORD PTR [rax],eax
    91e5:	00 00                	add    BYTE PTR [rax],al
    91e7:	1b 4f 30             	sbb    ecx,DWORD PTR [rdi+0x30]
    91ea:	00 00                	add    BYTE PTR [rax],al
    91ec:	60                   	(bad)
    91ed:	2f                   	(bad)
    91ee:	33 08                	xor    ecx,DWORD PTR [rax]
    91f0:	f5                   	cmc
    91f1:	3b 00                	cmp    eax,DWORD PTR [rax]
    91f3:	00 06                	add    BYTE PTR [rsi],al
    91f5:	7d 12                	jge    9209 <_end+0x31f1>
    91f7:	00 00                	add    BYTE PTR [rax],al
    91f9:	2f                   	(bad)
    91fa:	37                   	(bad)
    91fb:	09 e2                	or     edx,esp
    91fd:	22 00                	and    al,BYTE PTR [rax]
    91ff:	00 00                	add    BYTE PTR [rax],al
    9201:	06                   	(bad)
    9202:	49 18 00             	rex.WB sbb BYTE PTR [r8],al
    9205:	00 2f                	add    BYTE PTR [rdi],ch
    9207:	38 09                	cmp    BYTE PTR [rcx],cl
    9209:	e2 22                	loop   922d <_end+0x3215>
    920b:	00 00                	add    BYTE PTR [rax],al
    920d:	08 06                	or     BYTE PTR [rsi],al
    920f:	e1 2e                	loope  923f <_end+0x3227>
    9211:	00 00                	add    BYTE PTR [rax],al
    9213:	2f                   	(bad)
    9214:	3e 09 e2             	ds or  edx,esp
    9217:	22 00                	and    al,BYTE PTR [rax]
    9219:	00 10                	add    BYTE PTR [rax],dl
    921b:	06                   	(bad)
    921c:	55                   	push   rbp
    921d:	0f 00 00             	sldt   WORD PTR [rax]
    9220:	2f                   	(bad)
    9221:	44 09 e2             	or     edx,r12d
    9224:	22 00                	and    al,BYTE PTR [rax]
    9226:	00 18                	add    BYTE PTR [rax],bl
    9228:	06                   	(bad)
    9229:	e7 2d                	out    0x2d,eax
    922b:	00 00                	add    BYTE PTR [rax],al
    922d:	2f                   	(bad)
    922e:	45 09 e2             	or     r10d,r12d
    9231:	22 00                	and    al,BYTE PTR [rax]
    9233:	00 20                	add    BYTE PTR [rax],ah
    9235:	06                   	(bad)
    9236:	79 12                	jns    924a <_end+0x3232>
    9238:	00 00                	add    BYTE PTR [rax],al
    923a:	2f                   	(bad)
    923b:	46 09 e2             	rex.RX or edx,r12d
    923e:	22 00                	and    al,BYTE PTR [rax]
    9240:	00 28                	add    BYTE PTR [rax],ch
    9242:	06                   	(bad)
    9243:	45 18 00             	sbb    BYTE PTR [r8],r8b
    9246:	00 2f                	add    BYTE PTR [rdi],ch
    9248:	47 09 e2             	rex.RXB or r10d,r12d
    924b:	22 00                	and    al,BYTE PTR [rax]
    924d:	00 30                	add    BYTE PTR [rax],dh
    924f:	06                   	(bad)
    9250:	dd 2e                	(bad)  [rsi]
    9252:	00 00                	add    BYTE PTR [rax],al
    9254:	2f                   	(bad)
    9255:	48 09 e2             	or     rdx,rsp
    9258:	22 00                	and    al,BYTE PTR [rax]
    925a:	00 38                	add    BYTE PTR [rax],bh
    925c:	06                   	(bad)
    925d:	aa                   	stos   BYTE PTR es:[rdi],al
    925e:	11 00                	adc    DWORD PTR [rax],eax
    9260:	00 2f                	add    BYTE PTR [rdi],ch
    9262:	49 09 e2             	or     r10,rsp
    9265:	22 00                	and    al,BYTE PTR [rax]
    9267:	00 40 06             	add    BYTE PTR [rax+0x6],al
    926a:	e5 18                	in     eax,0x18
    926c:	00 00                	add    BYTE PTR [rax],al
    926e:	2f                   	(bad)
    926f:	4a 09 e2             	rex.WX or rdx,rsp
    9272:	22 00                	and    al,BYTE PTR [rax]
    9274:	00 48 06             	add    BYTE PTR [rax+0x6],cl
    9277:	86 10                	xchg   BYTE PTR [rax],dl
    9279:	00 00                	add    BYTE PTR [rax],al
    927b:	2f                   	(bad)
    927c:	4b 08 e7             	rex.WXB or r15b,spl
    927f:	22 00                	and    al,BYTE PTR [rax]
    9281:	00 50 06             	add    BYTE PTR [rax+0x6],dl
    9284:	8a 10                	mov    dl,BYTE PTR [rax]
    9286:	00 00                	add    BYTE PTR [rax],al
    9288:	2f                   	(bad)
    9289:	4c 08 e7             	rex.WR or dil,r12b
    928c:	22 00                	and    al,BYTE PTR [rax]
    928e:	00 51 06             	add    BYTE PTR [rcx+0x6],dl
    9291:	13 19                	adc    ebx,DWORD PTR [rcx]
    9293:	00 00                	add    BYTE PTR [rax],al
    9295:	2f                   	(bad)
    9296:	4e 08 e7             	rex.WRX or dil,r12b
    9299:	22 00                	and    al,BYTE PTR [rax]
    929b:	00 52 06             	add    BYTE PTR [rdx+0x6],dl
    929e:	5d                   	pop    rbp
    929f:	27                   	(bad)
    92a0:	00 00                	add    BYTE PTR [rax],al
    92a2:	2f                   	(bad)
    92a3:	50                   	push   rax
    92a4:	08 e7                	or     bh,ah
    92a6:	22 00                	and    al,BYTE PTR [rax]
    92a8:	00 53 06             	add    BYTE PTR [rbx+0x6],dl
    92ab:	40 13 00             	rex adc eax,DWORD PTR [rax]
    92ae:	00 2f                	add    BYTE PTR [rdi],ch
    92b0:	52                   	push   rdx
    92b1:	08 e7                	or     bh,ah
    92b3:	22 00                	and    al,BYTE PTR [rax]
    92b5:	00 54 06 e2          	add    BYTE PTR [rsi+rax*1-0x1e],dl
    92b9:	1f                   	(bad)
    92ba:	00 00                	add    BYTE PTR [rax],al
    92bc:	2f                   	(bad)
    92bd:	54                   	push   rsp
    92be:	08 e7                	or     bh,ah
    92c0:	22 00                	and    al,BYTE PTR [rax]
    92c2:	00 55 06             	add    BYTE PTR [rbp+0x6],dl
    92c5:	af                   	scas   eax,DWORD PTR es:[rdi]
    92c6:	2f                   	(bad)
    92c7:	00 00                	add    BYTE PTR [rax],al
    92c9:	2f                   	(bad)
    92ca:	5b                   	pop    rbx
    92cb:	08 e7                	or     bh,ah
    92cd:	22 00                	and    al,BYTE PTR [rax]
    92cf:	00 56 06             	add    BYTE PTR [rsi+0x6],dl
    92d2:	ed                   	in     eax,dx
    92d3:	30 00                	xor    BYTE PTR [rax],al
    92d5:	00 2f                	add    BYTE PTR [rdi],ch
    92d7:	5c                   	pop    rsp
    92d8:	08 e7                	or     bh,ah
    92da:	22 00                	and    al,BYTE PTR [rax]
    92dc:	00 57 06             	add    BYTE PTR [rdi+0x6],dl
    92df:	0f 19 00             	nop    DWORD PTR [rax]
    92e2:	00 2f                	add    BYTE PTR [rdi],ch
    92e4:	5f                   	pop    rdi
    92e5:	08 e7                	or     bh,ah
    92e7:	22 00                	and    al,BYTE PTR [rax]
    92e9:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    92ec:	59                   	pop    rcx
    92ed:	27                   	(bad)
    92ee:	00 00                	add    BYTE PTR [rax],al
    92f0:	2f                   	(bad)
    92f1:	61                   	(bad)
    92f2:	08 e7                	or     bh,ah
    92f4:	22 00                	and    al,BYTE PTR [rax]
    92f6:	00 59 06             	add    BYTE PTR [rcx+0x6],bl
    92f9:	3c 13                	cmp    al,0x13
    92fb:	00 00                	add    BYTE PTR [rax],al
    92fd:	2f                   	(bad)
    92fe:	63 08                	movsxd ecx,DWORD PTR [rax]
    9300:	e7 22                	out    0x22,eax
    9302:	00 00                	add    BYTE PTR [rax],al
    9304:	5a                   	pop    rdx
    9305:	06                   	(bad)
    9306:	de 1f                	ficomp WORD PTR [rdi]
    9308:	00 00                	add    BYTE PTR [rax],al
    930a:	2f                   	(bad)
    930b:	65 08 e7             	gs or  bh,ah
    930e:	22 00                	and    al,BYTE PTR [rax]
    9310:	00 5b 06             	add    BYTE PTR [rbx+0x6],bl
    9313:	ab                   	stos   DWORD PTR es:[rdi],eax
    9314:	2f                   	(bad)
    9315:	00 00                	add    BYTE PTR [rax],al
    9317:	2f                   	(bad)
    9318:	6c                   	ins    BYTE PTR es:[rdi],dx
    9319:	08 e7                	or     bh,ah
    931b:	22 00                	and    al,BYTE PTR [rax]
    931d:	00 5c 06 e9          	add    BYTE PTR [rsi+rax*1-0x17],bl
    9321:	30 00                	xor    BYTE PTR [rax],al
    9323:	00 2f                	add    BYTE PTR [rdi],ch
    9325:	6d                   	ins    DWORD PTR es:[rdi],dx
    9326:	08 e7                	or     bh,ah
    9328:	22 00                	and    al,BYTE PTR [rax]
    932a:	00 5d 00             	add    BYTE PTR [rbp+0x0],bl
    932d:	0c 44                	or     al,0x44
    932f:	2a 00                	sub    al,BYTE PTR [rax]
    9331:	00 2f                	add    BYTE PTR [rdi],ch
    9333:	7a 0e                	jp     9343 <_end+0x332b>
    9335:	e2 22                	loop   9359 <_end+0x3341>
    9337:	00 00                	add    BYTE PTR [rax],al
    9339:	10 3c 00             	adc    BYTE PTR [rax+rax*1],bh
    933c:	00 01                	add    BYTE PTR [rcx],al
    933e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    933f:	21 00                	and    DWORD PTR [rax],eax
    9341:	00 01                	add    BYTE PTR [rcx],al
    9343:	d3 23                	shl    DWORD PTR [rbx],cl
    9345:	00 00                	add    BYTE PTR [rax],al
    9347:	00 37                	add    BYTE PTR [rdi],dh
    9349:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    934b:	00 00                	add    BYTE PTR [rax],al
    934d:	2f                   	(bad)
    934e:	7d 16                	jge    9366 <_end+0x334e>
    9350:	1c 3c                	sbb    al,0x3c
    9352:	00 00                	add    BYTE PTR [rax],al
    9354:	0d af 3a 00 00       	or     eax,0x3aaf
    9359:	28 d1                	sub    cl,dl
    935b:	10 00                	adc    BYTE PTR [rax],al
    935d:	00 22                	add    BYTE PTR [rdx],ah
    935f:	5c                   	pop    rsp
    9360:	03 33                	add    esi,DWORD PTR [rbx]
    9362:	3c 00                	cmp    al,0x0
    9364:	00 01                	add    BYTE PTR [rcx],al
    9366:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9369:	00 00                	add    BYTE PTR [rax],al
    936b:	0c 82                	or     al,0x82
    936d:	15 00 00 22 b8       	adc    eax,0xb8220000
    9372:	0c a6                	or     al,0xa6
    9374:	21 00                	and    DWORD PTR [rax],eax
    9376:	00 49 3c             	add    BYTE PTR [rcx+0x3c],cl
    9379:	00 00                	add    BYTE PTR [rax],al
    937b:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9381:	0e                   	(bad)
    9382:	42 25 00 00 22 5e    	rex.X and eax,0x5e220000
    9388:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    938b:	21 00                	and    DWORD PTR [rax],eax
    938d:	00 60 3c             	add    BYTE PTR [rax+0x3c],ah
    9390:	00 00                	add    BYTE PTR [rax],al
    9392:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9398:	0e                   	(bad)
    9399:	e0 2d                	loopne 93c8 <_end+0x33b0>
    939b:	00 00                	add    BYTE PTR [rax],al
    939d:	22 60 03             	and    ah,BYTE PTR [rax+0x3]
    93a0:	0c a6                	or     al,0xa6
    93a2:	21 00                	and    DWORD PTR [rax],eax
    93a4:	00 77 3c             	add    BYTE PTR [rdi+0x3c],dh
    93a7:	00 00                	add    BYTE PTR [rax],al
    93a9:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    93af:	0c fb                	or     al,0xfb
    93b1:	33 00                	xor    eax,DWORD PTR [rax]
    93b3:	00 22                	add    BYTE PTR [rdx],ah
    93b5:	ec                   	in     al,dx
    93b6:	0c a6                	or     al,0xa6
    93b8:	21 00                	and    DWORD PTR [rax],eax
    93ba:	00 8d 3c 00 00 01    	add    BYTE PTR [rbp+0x100003c],cl
    93c0:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    93c3:	00 00                	add    BYTE PTR [rax],al
    93c5:	0e                   	(bad)
    93c6:	db 0b                	fisttp DWORD PTR [rbx]
    93c8:	00 00                	add    BYTE PTR [rax],al
    93ca:	22 3f                	and    bh,BYTE PTR [rdi]
    93cc:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    93cf:	21 00                	and    DWORD PTR [rax],eax
    93d1:	00 a4 3c 00 00 01 8e 	add    BYTE PTR [rsp+rdi*1-0x71ff0000],ah
    93d8:	2c 00                	sub    al,0x0
    93da:	00 00                	add    BYTE PTR [rax],al
    93dc:	0e                   	(bad)
    93dd:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    93de:	10 00                	adc    BYTE PTR [rax],al
    93e0:	00 22                	add    BYTE PTR [rdx],ah
    93e2:	3d 03 0c a6 21       	cmp    eax,0x21a60c03
    93e7:	00 00                	add    BYTE PTR [rax],al
    93e9:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    93ed:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    93f3:	c0 3c 00 00          	sar    BYTE PTR [rax+rax*1],0x0
    93f7:	00 0d 7d 2c 00 00    	add    BYTE PTR [rip+0x2c7d],cl        # c07a <_end+0x6062>
    93fd:	0c 45                	or     al,0x45
    93ff:	0c 00                	or     al,0x0
    9401:	00 02                	add    BYTE PTR [rdx],al
    9403:	c4 01 e2 22          	(bad)
    9407:	00 00                	add    BYTE PTR [rax],al
    9409:	e5 3c                	in     eax,0x3c
    940b:	00 00                	add    BYTE PTR [rax],al
    940d:	01 e2                	add    edx,esp
    940f:	22 00                	and    al,BYTE PTR [rax]
    9411:	00 01                	add    BYTE PTR [rcx],al
    9413:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9414:	21 00                	and    DWORD PTR [rax],eax
    9416:	00 01                	add    BYTE PTR [rcx],al
    9418:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    941b:	00 00                	add    BYTE PTR [rax],al
    941d:	0e                   	(bad)
    941e:	9d                   	popf
    941f:	2b 00                	sub    eax,DWORD PTR [rax]
    9421:	00 22                	add    BYTE PTR [rdx],ah
    9423:	08 01                	or     BYTE PTR [rcx],al
    9425:	0e                   	(bad)
    9426:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9429:	00 01                	add    BYTE PTR [rcx],al
    942b:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    9430:	23 00                	and    eax,DWORD PTR [rax]
    9432:	00 01                	add    BYTE PTR [rcx],al
    9434:	d3 23                	shl    DWORD PTR [rbx],cl
    9436:	00 00                	add    BYTE PTR [rax],al
    9438:	00 0c 61             	add    BYTE PTR [rcx+riz*2],cl
    943b:	32 00                	xor    al,BYTE PTR [rax]
    943d:	00 02                	add    BYTE PTR [rdx],al
    943f:	cf                   	iret
    9440:	01 2e                	add    DWORD PTR [rsi],ebp
    9442:	23 00                	and    eax,DWORD PTR [rax]
    9444:	00 26                	add    BYTE PTR [rsi],ah
    9446:	3d 00 00 01 d4       	cmp    eax,0xd4010000
    944b:	22 00                	and    al,BYTE PTR [rax]
    944d:	00 01                	add    BYTE PTR [rcx],al
    944f:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9452:	00 01                	add    BYTE PTR [rcx],al
    9454:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9457:	00 01                	add    BYTE PTR [rcx],al
    9459:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    945c:	00 00                	add    BYTE PTR [rax],al
    945e:	0e                   	(bad)
    945f:	d0 2d 00 00 22 0f    	shr    BYTE PTR [rip+0xf220000],1        # f229465 <_end+0xf22344d>
    9465:	01 0e                	add    DWORD PTR [rsi],ecx
    9467:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    946a:	00 47 3d             	add    BYTE PTR [rdi+0x3d],al
    946d:	00 00                	add    BYTE PTR [rax],al
    946f:	01 d3                	add    ebx,edx
    9471:	23 00                	and    eax,DWORD PTR [rax]
    9473:	00 01                	add    BYTE PTR [rcx],al
    9475:	d3 23                	shl    DWORD PTR [rbx],cl
    9477:	00 00                	add    BYTE PTR [rax],al
    9479:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    947f:	0e                   	(bad)
    9480:	3c 23                	cmp    al,0x23
    9482:	00 00                	add    BYTE PTR [rax],al
    9484:	22 0b                	and    cl,BYTE PTR [rbx]
    9486:	03 0c a6             	add    ecx,DWORD PTR [rsi+riz*4]
    9489:	21 00                	and    DWORD PTR [rax],eax
    948b:	00 68 3d             	add    BYTE PTR [rax+0x3d],ch
    948e:	00 00                	add    BYTE PTR [rax],al
    9490:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9496:	b2 21                	mov    dl,0x21
    9498:	00 00                	add    BYTE PTR [rax],al
    949a:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    94a0:	0e                   	(bad)
    94a1:	c1 1f 00             	rcr    DWORD PTR [rdi],0x0
    94a4:	00 22                	add    BYTE PTR [rdx],ah
    94a6:	43 03 0c a6          	add    ecx,DWORD PTR [r14+r12*4]
    94aa:	21 00                	and    DWORD PTR [rax],eax
    94ac:	00 84 3d 00 00 01 8e 	add    BYTE PTR [rbp+rdi*1-0x71ff0000],al
    94b3:	2c 00                	sub    al,0x0
    94b5:	00 01                	add    BYTE PTR [rcx],al
    94b7:	84 3d 00 00 00 0d    	test   BYTE PTR [rip+0xd000000],bh        # d0094bd <_end+0xd0034a5>
    94bd:	89 2c 00             	mov    DWORD PTR [rax+rax*1],ebp
    94c0:	00 0e                	add    BYTE PTR [rsi],cl
    94c2:	77 18                	ja     94dc <_end+0x34c4>
    94c4:	00 00                	add    BYTE PTR [rax],al
    94c6:	22 11                	and    dl,BYTE PTR [rcx]
    94c8:	03 11                	add    edx,DWORD PTR [rcx]
    94ca:	b2 21                	mov    dl,0x21
    94cc:	00 00                	add    BYTE PTR [rax],al
    94ce:	a0 3d 00 00 01 8e 2c 	movabs al,ds:0x2c8e0100003d
    94d5:	00 00 
    94d7:	00 0e                	add    BYTE PTR [rsi],cl
    94d9:	dc 0b                	fmul   QWORD PTR [rbx]
    94db:	00 00                	add    BYTE PTR [rax],al
    94dd:	22 40 02             	and    al,BYTE PTR [rax+0x2]
    94e0:	0c a6                	or     al,0xa6
    94e2:	21 00                	and    DWORD PTR [rax],eax
    94e4:	00 b7 3d 00 00 01    	add    BYTE PTR [rdi+0x100003d],dh
    94ea:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    94ed:	00 00                	add    BYTE PTR [rax],al
    94ef:	37                   	(bad)
    94f0:	dd 24 00             	frstor [rax+rax*1]
    94f3:	00 30                	add    BYTE PTR [rax],dh
    94f5:	2f                   	(bad)
    94f6:	01 a6 21 00 00 28    	add    DWORD PTR [rsi+0x28000021],esp
    94fc:	24 23                	and    al,0x23
    94fe:	00 00                	add    BYTE PTR [rax],al
    9500:	22 6e 03             	and    ch,BYTE PTR [rsi+0x3]
    9503:	d5 3d 00 00          	{rex2 0x3d} add BYTE PTR [r24],r8b
    9507:	01 d3                	add    ebx,edx
    9509:	23 00                	and    eax,DWORD PTR [rax]
    950b:	00 00                	add    BYTE PTR [rax],al
    950d:	0c c1                	or     al,0xc1
    950f:	14 00                	adc    al,0x0
    9511:	00 22                	add    BYTE PTR [rdx],ah
    9513:	9e                   	sahf
    9514:	0c a6                	or     al,0xa6
    9516:	21 00                	and    DWORD PTR [rax],eax
    9518:	00 eb                	add    bl,ch
    951a:	3d 00 00 01 d3       	cmp    eax,0xd3010000
    951f:	23 00                	and    eax,DWORD PTR [rax]
    9521:	00 00                	add    BYTE PTR [rax],al
    9523:	0c cf                	or     al,0xcf
    9525:	23 00                	and    eax,DWORD PTR [rax]
    9527:	00 22                	add    BYTE PTR [rdx],ah
    9529:	a0 0c a6 21 00 00 06 	movabs al,ds:0x3e06000021a60c
    9530:	3e 00 
    9532:	00 01                	add    BYTE PTR [rcx],al
    9534:	d3 23                	shl    DWORD PTR [rbx],cl
    9536:	00 00                	add    BYTE PTR [rax],al
    9538:	01 d3                	add    ebx,edx
    953a:	23 00                	and    eax,DWORD PTR [rax]
    953c:	00 00                	add    BYTE PTR [rax],al
    953e:	28 ed                	sub    ch,ch
    9540:	2b 00                	sub    eax,DWORD PTR [rax]
    9542:	00 22                	add    BYTE PTR [rdx],ah
    9544:	16                   	(bad)
    9545:	03 18                	add    ebx,DWORD PTR [rax]
    9547:	3e 00 00             	ds add BYTE PTR [rax],al
    954a:	01 8e 2c 00 00 00    	add    DWORD PTR [rsi+0x2c],ecx
    9550:	28 3b                	sub    BYTE PTR [rbx],bh
    9552:	25 00 00 22 4e       	and    eax,0x4e220000
    9557:	01 2f                	add    DWORD PTR [rdi],ebp
    9559:	3e 00 00             	ds add BYTE PTR [rax],al
    955c:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    9562:	e2 22                	loop   9586 <_end+0x356e>
    9564:	00 00                	add    BYTE PTR [rax],al
    9566:	00 0e                	add    BYTE PTR [rsi],cl
    9568:	49 23 00             	and    rax,QWORD PTR [r8]
    956b:	00 22                	add    BYTE PTR [rdx],ah
    956d:	53                   	push   rbx
    956e:	01 0c a6             	add    DWORD PTR [rsi+riz*4],ecx
    9571:	21 00                	and    DWORD PTR [rax],eax
    9573:	00 55 3e             	add    BYTE PTR [rbp+0x3e],dl
    9576:	00 00                	add    BYTE PTR [rax],al
    9578:	01 8e 2c 00 00 01    	add    DWORD PTR [rsi+0x100002c],ecx
    957e:	e2 22                	loop   95a2 <_end+0x358a>
    9580:	00 00                	add    BYTE PTR [rax],al
    9582:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    9588:	2e 23 00             	cs and eax,DWORD PTR [rax]
    958b:	00 00                	add    BYTE PTR [rax],al
    958d:	37                   	(bad)
    958e:	95                   	xchg   ebp,eax
    958f:	2f                   	(bad)
    9590:	00 00                	add    BYTE PTR [rax],al
    9592:	22 c2                	and    al,dl
    9594:	0e                   	(bad)
    9595:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    9598:	00 0c 23             	add    BYTE PTR [rbx+riz*1],cl
    959b:	0f 00 00             	sldt   WORD PTR [rax]
    959e:	22 d3                	and    dl,bl
    95a0:	0e                   	(bad)
    95a1:	e2 22                	loop   95c5 <_end+0x35ad>
    95a3:	00 00                	add    BYTE PTR [rax],al
    95a5:	77 3e                	ja     95e5 <_end+0x35cd>
    95a7:	00 00                	add    BYTE PTR [rax],al
    95a9:	01 e2                	add    edx,esp
    95ab:	22 00                	and    al,BYTE PTR [rax]
    95ad:	00 00                	add    BYTE PTR [rax],al
    95af:	0e                   	(bad)
    95b0:	ef                   	out    dx,eax
    95b1:	2f                   	(bad)
    95b2:	00 00                	add    BYTE PTR [rax],al
    95b4:	22 db                	and    bl,bl
    95b6:	02 0c a6             	add    cl,BYTE PTR [rsi+riz*4]
    95b9:	21 00                	and    DWORD PTR [rax],eax
    95bb:	00 93 3e 00 00 01    	add    BYTE PTR [rbx+0x100003e],dl
    95c1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    95c2:	21 00                	and    DWORD PTR [rax],eax
    95c4:	00 01                	add    BYTE PTR [rcx],al
    95c6:	8e 2c 00             	mov    gs,WORD PTR [rax+rax*1]
    95c9:	00 00                	add    BYTE PTR [rax],al
    95cb:	0d 2e 00 00 00       	or     eax,0x2e
    95d0:	33 ce                	xor    ecx,esi
    95d2:	1b 00                	sbb    eax,DWORD PTR [rax]
    95d4:	00 31                	add    BYTE PTR [rcx],dh
    95d6:	0f 0b                	ud2
    95d8:	b7 3e                	mov    bh,0x3e
    95da:	00 00                	add    BYTE PTR [rax],al
    95dc:	83 01 70             	add    DWORD PTR [rcx],0x70
    95df:	13 00                	adc    eax,DWORD PTR [rax]
    95e1:	00 31                	add    BYTE PTR [rcx],dh
    95e3:	11 0b                	adc    DWORD PTR [rbx],ecx
    95e5:	84 01                	test   BYTE PTR [rcx],al
    95e7:	76 31                	jbe    961a <_end+0x3602>
    95e9:	00 31                	add    BYTE PTR [rcx],dh
    95eb:	13 12                	adc    edx,DWORD PTR [rdx]
    95ed:	00 00                	add    BYTE PTR [rax],al
    95ef:	37                   	(bad)
    95f0:	c3                   	ret
    95f1:	10 00                	adc    BYTE PTR [rax],al
    95f3:	00 32                	add    BYTE PTR [rdx],dh
    95f5:	48 10 dd             	rex.W adc bpl,bl
    95f8:	23 00                	and    eax,DWORD PTR [rax]
    95fa:	00 0c 1b             	add    BYTE PTR [rbx+rbx*1],cl
    95fd:	10 00                	adc    BYTE PTR [rax],al
    95ff:	00 32                	add    BYTE PTR [rdx],dh
    9601:	4f 0f 2e 00          	rex.WRXB ucomiss xmm8,DWORD PTR [r8]
    9605:	00 00                	add    BYTE PTR [rax],al
    9607:	de 3e                	fidivr WORD PTR [rsi]
    9609:	00 00                	add    BYTE PTR [rax],al
    960b:	01 e9                	add    ecx,ebp
    960d:	23 00                	and    eax,DWORD PTR [rax]
    960f:	00 01                	add    BYTE PTR [rcx],al
    9611:	e9 23 00 00 00       	jmp    9639 <_end+0x3621>
    9616:	0c 60                	or     al,0x60
    9618:	23 00                	and    eax,DWORD PTR [rax]
    961a:	00 32                	add    BYTE PTR [rdx],dh
    961c:	53                   	push   rbx
    961d:	0f e9 23             	psubsw mm4,QWORD PTR [rbx]
    9620:	00 00                	add    BYTE PTR [rax],al
    9622:	f4                   	hlt
    9623:	3e 00 00             	ds add BYTE PTR [rax],al
    9626:	01 f4                	add    esp,esi
    9628:	3e 00 00             	ds add BYTE PTR [rax],al
    962b:	00 0d 17 36 00 00    	add    BYTE PTR [rip+0x3617],cl        # cc48 <_end+0x6c30>
    9631:	0c a9                	or     al,0xa9
    9633:	22 00                	and    al,BYTE PTR [rax]
    9635:	00 32                	add    BYTE PTR [rdx],dh
    9637:	4c 0f e9 23          	rex.WR psubsw mm4,QWORD PTR [rbx]
    963b:	00 00                	add    BYTE PTR [rax],al
    963d:	0f 3f                	(bad)
    963f:	00 00                	add    BYTE PTR [rax],al
    9641:	01 0f                	add    DWORD PTR [rdi],ecx
    9643:	3f                   	(bad)
    9644:	00 00                	add    BYTE PTR [rax],al
    9646:	00 0d e9 23 00 00    	add    BYTE PTR [rip+0x23e9],cl        # ba35 <_end+0x5a1d>
    964c:	0c fe                	or     al,0xfe
    964e:	0d 00 00 32 b4       	or     eax,0xb4320000
    9653:	0e                   	(bad)
    9654:	e2 22                	loop   9678 <_end+0x3660>
    9656:	00 00                	add    BYTE PTR [rax],al
    9658:	2a 3f                	sub    bh,BYTE PTR [rdi]
    965a:	00 00                	add    BYTE PTR [rax],al
    965c:	01 12                	add    DWORD PTR [rdx],edx
    965e:	36 00 00             	ss add BYTE PTR [rax],al
    9661:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    9664:	0e                   	(bad)
    9665:	00 00                	add    BYTE PTR [rax],al
    9667:	32 b8 0e e2 22 00    	xor    bh,BYTE PTR [rax+0x22e20e]
    966d:	00 40 3f             	add    BYTE PTR [rax+0x3f],al
    9670:	00 00                	add    BYTE PTR [rax],al
    9672:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    9675:	00 00                	add    BYTE PTR [rax],al
    9677:	00 0d f5 23 00 00    	add    BYTE PTR [rip+0x23f5],cl        # ba72 <_end+0x5a5a>
    967d:	0c 48                	or     al,0x48
    967f:	32 00                	xor    al,BYTE PTR [rax]
    9681:	00 32                	add    BYTE PTR [rdx],dh
    9683:	85 13                	test   DWORD PTR [rbx],edx
    9685:	f4                   	hlt
    9686:	3e 00 00             	ds add BYTE PTR [rax],al
    9689:	5b                   	pop    rbx
    968a:	3f                   	(bad)
    968b:	00 00                	add    BYTE PTR [rax],al
    968d:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    9690:	00 00                	add    BYTE PTR [rax],al
    9692:	00 0c d2             	add    BYTE PTR [rdx+rdx*8],cl
    9695:	19 00                	sbb    DWORD PTR [rax],eax
    9697:	00 32                	add    BYTE PTR [rdx],dh
    9699:	89 13                	mov    DWORD PTR [rbx],edx
    969b:	f4                   	hlt
    969c:	3e 00 00             	ds add BYTE PTR [rax],al
    969f:	71 3f                	jno    96e0 <_end+0x36c8>
    96a1:	00 00                	add    BYTE PTR [rax],al
    96a3:	01 40 3f             	add    DWORD PTR [rax+0x3f],eax
    96a6:	00 00                	add    BYTE PTR [rax],al
    96a8:	00 0e                	add    BYTE PTR [rsi],cl
    96aa:	f3 2a 00             	repz sub al,BYTE PTR [rax]
    96ad:	00 32                	add    BYTE PTR [rdx],dh
    96af:	80 01 0c             	add    BYTE PTR [rcx],0xc
    96b2:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    96b3:	21 00                	and    DWORD PTR [rax],eax
    96b5:	00 8d 3f 00 00 01    	add    BYTE PTR [rbp+0x100003f],cl
    96bb:	8d 3f                	lea    edi,[rdi]
    96bd:	00 00                	add    BYTE PTR [rax],al
    96bf:	01 a6 21 00 00 00    	add    DWORD PTR [rsi+0x21],esp
    96c5:	0d 2a 24 00 00       	or     eax,0x242a
    96ca:	0d 14 18 00 00       	or     eax,0x1814
    96cf:	13 92 3f 00 00 22    	adc    edx,DWORD PTR [rdx+0x2200003f]
    96d5:	94                   	xchg   esp,eax
    96d6:	1a 00                	sbb    al,BYTE PTR [rax]
    96d8:	00 22                	add    BYTE PTR [rdx],ah
    96da:	14 18                	adc    al,0x18
    96dc:	00 00                	add    BYTE PTR [rax],al
    96de:	0d 94 1a 00 00       	or     eax,0x1a94
    96e3:	13 a6 3f 00 00 22    	adc    esp,DWORD PTR [rsi+0x2200003f]
    96e9:	c0 18 00             	rcr    BYTE PTR [rax],0x0
    96ec:	00 0d df 1b 00 00    	add    BYTE PTR [rip+0x1bdf],cl        # b2d1 <_end+0x52b9>
    96f2:	13 b5 3f 00 00 22    	adc    esi,DWORD PTR [rbp+0x2200003f]
    96f8:	5f                   	pop    rdi
    96f9:	1e                   	(bad)
    96fa:	00 00                	add    BYTE PTR [rax],al
    96fc:	22 df                	and    bl,bh
    96fe:	1b 00                	sbb    eax,DWORD PTR [rax]
    9700:	00 0d 5f 1e 00 00    	add    BYTE PTR [rip+0x1e5f],cl        # b565 <_end+0x554d>
    9706:	13 c9                	adc    ecx,ecx
    9708:	3f                   	(bad)
    9709:	00 00                	add    BYTE PTR [rax],al
    970b:	22 8b 1c 00 00 1b    	and    cl,BYTE PTR [rbx+0x1b00001c]
    9711:	40 08 00             	rex or BYTE PTR [rax],al
    9714:	00 10                	add    BYTE PTR [rax],dl
    9716:	33 07                	xor    eax,DWORD PTR [rdi]
    9718:	10 0d 40 00 00 06    	adc    BYTE PTR [rip+0x6000040],cl        # 600975e <_end+0x6003746>
    971e:	a3 03 00 00 33 08 0b 	movabs ds:0x22e20b0833000003,eax
    9725:	e2 22 
    9727:	00 00                	add    BYTE PTR [rax],al
    9729:	00 06                	add    BYTE PTR [rsi],al
    972b:	e5 05                	in     eax,0x5
    972d:	00 00                	add    BYTE PTR [rax],al
    972f:	33 09                	xor    ecx,DWORD PTR [rcx]
    9731:	0e                   	(bad)
    9732:	b0 2c                	mov    al,0x2c
    9734:	00 00                	add    BYTE PTR [rax],al
    9736:	08 06                	or     BYTE PTR [rsi],al
    9738:	ea                   	(bad)
    9739:	05 00 00 33 0a       	add    eax,0xa330000
    973e:	0e                   	(bad)
    973f:	b0 2c                	mov    al,0x2c
    9741:	00 00                	add    BYTE PTR [rax],al
    9743:	0c 00                	or     al,0x0
    9745:	08 40 08             	or     BYTE PTR [rax+0x8],al
    9748:	00 00                	add    BYTE PTR [rax],al
    974a:	33 0b                	xor    ecx,DWORD PTR [rbx]
    974c:	03 d8                	add    ebx,eax
    974e:	3f                   	(bad)
    974f:	00 00                	add    BYTE PTR [rax],al
    9751:	38 69 02             	cmp    BYTE PTR [rcx+0x2],ch
    9754:	00 00                	add    BYTE PTR [rax],al
    9756:	34 08                	xor    al,0x8
    9758:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9759:	21 00                	and    DWORD PTR [rax],eax
    975b:	00 0f                	add    BYTE PTR [rdi],cl
    975d:	38 75 02             	cmp    BYTE PTR [rbp+0x2],dh
    9760:	00 00                	add    BYTE PTR [rax],al
    9762:	34 09                	xor    al,0x9
    9764:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9765:	21 00                	and    DWORD PTR [rax],eax
    9767:	00 02                	add    BYTE PTR [rdx],al
    9769:	38 c4                	cmp    ah,al
    976b:	00 00                	add    BYTE PTR [rax],al
    976d:	00 34 0a             	add    BYTE PTR [rdx+rcx*1],dh
    9770:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9771:	21 00                	and    DWORD PTR [rax],eax
    9773:	00 20                	add    BYTE PTR [rax],ah
    9775:	08 36                	or     BYTE PTR [rsi],dh
    9777:	03 00                	add    eax,DWORD PTR [rax]
    9779:	00 34 0c             	add    BYTE PTR [rsp+rcx*1],dh
    977c:	12 0d 40 00 00 08    	adc    cl,BYTE PTR [rip+0x8000040]        # 80097c2 <_end+0x80037aa>
    9782:	5f                   	pop    rdi
    9783:	07                   	(bad)
    9784:	00 00                	add    BYTE PTR [rax],al
    9786:	34 0d                	xor    al,0xd
    9788:	14 55                	adc    al,0x55
    978a:	40 00 00             	rex add BYTE PTR [rax],al
    978d:	0d 5a 40 00 00       	or     eax,0x405a
    9792:	58                   	pop    rax
    9793:	b0 2c                	mov    al,0x2c
    9795:	00 00                	add    BYTE PTR [rax],al
    9797:	69 40 00 00 01 3d 40 	imul   eax,DWORD PTR [rax+0x0],0x403d0100
    979e:	00 00                	add    BYTE PTR [rax],al
    97a0:	00 1b                	add    BYTE PTR [rbx],bl
    97a2:	42 05 00 00 20 34    	rex.X add eax,0x34200000
    97a8:	0f 10 ab 40 00 00 06 	movups xmm5,XMMWORD PTR [rbx+0x6000040]
    97af:	14 06                	adc    al,0x6
    97b1:	00 00                	add    BYTE PTR [rax],al
    97b3:	34 10                	xor    al,0x10
    97b5:	0e                   	(bad)
    97b6:	b0 2c                	mov    al,0x2c
    97b8:	00 00                	add    BYTE PTR [rax],al
    97ba:	00 06                	add    BYTE PTR [rsi],al
    97bc:	95                   	xchg   ebp,eax
    97bd:	04 00                	add    al,0x0
    97bf:	00 34 11             	add    BYTE PTR [rcx+rdx*1],dh
    97c2:	0e                   	(bad)
    97c3:	b0 2c                	mov    al,0x2c
    97c5:	00 00                	add    BYTE PTR [rax],al
    97c7:	04 06                	add    al,0x6
    97c9:	d0 05 00 00 34 13    	rol    BYTE PTR [rip+0x13340000],1        # 133497cf <_end+0x133437b7>
    97cf:	0e                   	(bad)
    97d0:	b0 2c                	mov    al,0x2c
    97d2:	00 00                	add    BYTE PTR [rax],al
    97d4:	08 06                	or     BYTE PTR [rsi],al
    97d6:	d1 14 00             	rcl    DWORD PTR [rax+rax*1],1
    97d9:	00 34 15 0c 3d 40 00 	add    BYTE PTR [rdx*1+0x403d0c],dh
    97e0:	00 10                	add    BYTE PTR [rax],dl
    97e2:	00 08                	add    BYTE PTR [rax],cl
    97e4:	42 05 00 00 34 16    	rex.X add eax,0x16340000
    97ea:	03 69 40             	add    ebp,DWORD PTR [rcx+0x40]
    97ed:	00 00                	add    BYTE PTR [rax],al
    97ef:	1b 60 04             	sbb    esp,DWORD PTR [rax+0x4]
    97f2:	00 00                	add    BYTE PTR [rax],al
    97f4:	18 34 18             	sbb    BYTE PTR [rax+rbx*1],dh
    97f7:	10 f9                	adc    cl,bh
    97f9:	40 00 00             	rex add BYTE PTR [rax],al
    97fc:	06                   	(bad)
    97fd:	d8 05 00 00 34 19    	fadd   DWORD PTR [rip+0x19340000]        # 19349803 <_end+0x193437eb>
    9803:	0f f9 40 00          	psubw  mm0,QWORD PTR [rax+0x0]
    9807:	00 00                	add    BYTE PTR [rax],al
    9809:	06                   	(bad)
    980a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    980b:	05 00 00 34 1a       	add    eax,0x1a340000
    9810:	0e                   	(bad)
    9811:	b0 2c                	mov    al,0x2c
    9813:	00 00                	add    BYTE PTR [rax],al
    9815:	08 06                	or     BYTE PTR [rsi],al
    9817:	19 03                	sbb    DWORD PTR [rbx],eax
    9819:	00 00                	add    BYTE PTR [rax],al
    981b:	34 1b                	xor    al,0x1b
    981d:	0e                   	(bad)
    981e:	b0 2c                	mov    al,0x2c
    9820:	00 00                	add    BYTE PTR [rax],al
    9822:	0c 06                	or     al,0x6
    9824:	69 03 00 00 34 1c    	imul   eax,DWORD PTR [rbx],0x1c340000
    982a:	0e                   	(bad)
    982b:	b0 2c                	mov    al,0x2c
    982d:	00 00                	add    BYTE PTR [rax],al
    982f:	10 00                	adc    BYTE PTR [rax],al
    9831:	0d ab 40 00 00       	or     eax,0x40ab
    9836:	08 60 04             	or     BYTE PTR [rax+0x4],ah
    9839:	00 00                	add    BYTE PTR [rax],al
    983b:	34 1d                	xor    al,0x1d
    983d:	03 b7 40 00 00 1b    	add    esi,DWORD PTR [rdi+0x1b000040]
    9843:	8d 04 00             	lea    eax,[rax+rax*1]
    9846:	00 18                	add    BYTE PTR [rax],bl
    9848:	34 1f                	xor    al,0x1f
    984a:	10 4c 41 00          	adc    BYTE PTR [rcx+rax*2+0x0],cl
    984e:	00 06                	add    BYTE PTR [rsi],al
    9850:	ef                   	out    dx,eax
    9851:	04 00                	add    al,0x0
    9853:	00 34 20             	add    BYTE PTR [rax+riz*1],dh
    9856:	0b 4c 41 00          	or     ecx,DWORD PTR [rcx+rax*2+0x0]
    985a:	00 00                	add    BYTE PTR [rax],al
    985c:	06                   	(bad)
    985d:	19 03                	sbb    DWORD PTR [rbx],eax
    985f:	00 00                	add    BYTE PTR [rax],al
    9861:	34 21                	xor    al,0x21
    9863:	0e                   	(bad)
    9864:	b0 2c                	mov    al,0x2c
    9866:	00 00                	add    BYTE PTR [rax],al
    9868:	08 06                	or     BYTE PTR [rsi],al
    986a:	45 07                	rex.RB (bad)
    986c:	00 00                	add    BYTE PTR [rax],al
    986e:	34 22                	xor    al,0x22
    9870:	0b 35 00 00 00 0c    	or     esi,DWORD PTR [rip+0xc000000]        # c009876 <_end+0xc00385e>
    9876:	06                   	(bad)
    9877:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    987a:	00 34 23             	add    BYTE PTR [rbx+riz*1],dh
    987d:	0c 49                	or     al,0x49
    987f:	40 00 00             	rex add BYTE PTR [rax],al
    9882:	10 00                	adc    BYTE PTR [rax],al
    9884:	0d fe 40 00 00       	or     eax,0x40fe
    9889:	08 8d 04 00 00 34    	or     BYTE PTR [rbp+0x34000004],cl
    988f:	24 03                	and    al,0x3
    9891:	0a 41 00             	or     al,BYTE PTR [rcx+0x0]
    9894:	00 38                	add    BYTE PTR [rax],bh
    9896:	f8                   	clc
    9897:	06                   	(bad)
    9898:	00 00                	add    BYTE PTR [rax],al
    989a:	35 06 ad 21 00       	xor    eax,0x21ad06
    989f:	00 04 85 01 90 00 00 	add    BYTE PTR [rax*4+0x9001],al
    98a6:	00 36                	add    BYTE PTR [rsi],dh
    98a8:	06                   	(bad)
    98a9:	10 bc 2c 00 00 40 42 	adc    BYTE PTR [rsp+rbp*1+0x42400000],bh
    98b0:	0f 00 1b             	ltr    WORD PTR [rbx]
    98b3:	9e                   	sahf
    98b4:	23 00                	and    eax,DWORD PTR [rax]
    98b6:	00 10                	add    BYTE PTR [rax],dl
    98b8:	36 08 10             	ss or  BYTE PTR [rax],dl
    98bb:	a2 41 00 00 06 be 1a 	movabs ds:0x1abe06000041,al
    98c2:	00 00 
    98c4:	36 09 0d a2 41 00 00 	ss or  DWORD PTR [rip+0x41a2],ecx        # da6d <_end+0x7a55>
    98cb:	00 06                	add    BYTE PTR [rsi],al
    98cd:	be 04 00 00 36       	mov    esi,0x36000004
    98d2:	0a 0e                	or     cl,BYTE PTR [rsi]
    98d4:	b0 2c                	mov    al,0x2c
    98d6:	00 00                	add    BYTE PTR [rax],al
    98d8:	08 00                	or     BYTE PTR [rax],al
    98da:	0d 3d 40 00 00       	or     eax,0x403d
    98df:	08 9e 23 00 00 36    	or     BYTE PTR [rsi+0x36000023],bl
    98e5:	0b 03                	or     eax,DWORD PTR [rbx]
    98e7:	7a 41                	jp     992a <_end+0x3912>
    98e9:	00 00                	add    BYTE PTR [rax],al
    98eb:	1b 5a 13             	sbb    ebx,DWORD PTR [rdx+0x13]
    98ee:	00 00                	add    BYTE PTR [rax],al
    98f0:	10 36                	adc    BYTE PTR [rsi],dh
    98f2:	0d 10 db 41 00       	or     eax,0x41db10
    98f7:	00 06                	add    BYTE PTR [rsi],al
    98f9:	c4                   	(bad)
    98fa:	25 00 00 36 0e       	and    eax,0xe360000
    98ff:	11 d3                	adc    ebx,edx
    9901:	23 00                	and    eax,DWORD PTR [rax]
    9903:	00 00                	add    BYTE PTR [rax],al
    9905:	06                   	(bad)
    9906:	50                   	push   rax
    9907:	0e                   	(bad)
    9908:	00 00                	add    BYTE PTR [rax],al
    990a:	36 0f 11 d3          	ss movups xmm3,xmm2
    990e:	23 00                	and    eax,DWORD PTR [rax]
    9910:	00 08                	add    BYTE PTR [rax],cl
    9912:	00 08                	add    BYTE PTR [rax],cl
    9914:	5a                   	pop    rdx
    9915:	13 00                	adc    eax,DWORD PTR [rax]
    9917:	00 36                	add    BYTE PTR [rsi],dh
    9919:	10 03                	adc    BYTE PTR [rbx],al
    991b:	b3 41                	mov    bl,0x41
    991d:	00 00                	add    BYTE PTR [rax],al
    991f:	0d e3 1a 00 00       	or     eax,0x1ae3
    9924:	22 37                	and    dh,BYTE PTR [rdi]
    9926:	1b 00                	sbb    eax,DWORD PTR [rax]
    9928:	00 0d da 1b 00 00    	add    BYTE PTR [rip+0x1bda],cl        # b508 <_end+0x54f0>
    992e:	13 f1                	adc    esi,ecx
    9930:	41 00 00             	add    BYTE PTR [r8],al
    9933:	22 e3                	and    ah,bl
    9935:	1a 00                	sbb    al,BYTE PTR [rax]
    9937:	00 29                	add    BYTE PTR [rcx],ch
    9939:	84 17                	test   BYTE PTR [rdi],dl
    993b:	00 00                	add    BYTE PTR [rax],al
    993d:	29 8d 17 00 00 29    	sub    DWORD PTR [rbp+0x29000017],ecx
    9943:	96                   	xchg   esi,eax
    9944:	17                   	(bad)
    9945:	00 00                	add    BYTE PTR [rax],al
    9947:	29 be 20 00 00 29    	sub    DWORD PTR [rsi+0x29000020],edi
    994d:	c7                   	(bad)
    994e:	20 00                	and    BYTE PTR [rax],al
    9950:	00 29                	add    BYTE PTR [rcx],ch
    9952:	d0 20                	shl    BYTE PTR [rax],1
    9954:	00 00                	add    BYTE PTR [rax],al
    9956:	29 d9                	sub    ecx,ebx
    9958:	20 00                	and    BYTE PTR [rax],al
    995a:	00 0f                	add    BYTE PTR [rdi],cl
    995c:	bb 05 00 00 34       	mov    ebx,0x34000005
    9961:	2a 06                	sub    al,BYTE PTR [rsi]
    9963:	98                   	cwde
    9964:	06                   	(bad)
    9965:	00 00                	add    BYTE PTR [rax],al
    9967:	ea                   	(bad)
    9968:	20 00                	and    BYTE PTR [rax],al
    996a:	00 42 42             	add    BYTE PTR [rdx+0x42],al
    996d:	00 00                	add    BYTE PTR [rax],al
    996f:	01 42 42             	add    DWORD PTR [rdx+0x42],eax
    9972:	00 00                	add    BYTE PTR [rax],al
    9974:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 99ba <_end+0x39a2>
    997a:	0d 51 41 00 00       	or     eax,0x4151
    997f:	0e                   	(bad)
    9980:	91                   	xchg   ecx,eax
    9981:	06                   	(bad)
    9982:	00 00                	add    BYTE PTR [rax],al
    9984:	16                   	(bad)
    9985:	a3 02 0e d4 22 00 00 	movabs ds:0x4263000022d40e02,eax
    998c:	63 42 
    998e:	00 00                	add    BYTE PTR [rax],al
    9990:	01 2e                	add    DWORD PTR [rsi],ebp
    9992:	23 00                	and    eax,DWORD PTR [rax]
    9994:	00 01                	add    BYTE PTR [rcx],al
    9996:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9999:	00 00                	add    BYTE PTR [rax],al
    999b:	0c 17                	or     al,0x17
    999d:	13 00                	adc    eax,DWORD PTR [rax]
    999f:	00 37                	add    BYTE PTR [rdi],dh
    99a1:	31 0c a6             	xor    DWORD PTR [rsi+riz*4],ecx
    99a4:	21 00                	and    DWORD PTR [rax],eax
    99a6:	00 84 42 00 00 01 8e 	add    BYTE PTR [rdx+rax*2-0x71ff0000],al
    99ad:	2c 00                	sub    al,0x0
    99af:	00 01                	add    BYTE PTR [rcx],al
    99b1:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    99b2:	21 00                	and    DWORD PTR [rax],eax
    99b4:	00 01                	add    BYTE PTR [rcx],al
    99b6:	d3 23                	shl    DWORD PTR [rbx],cl
    99b8:	00 00                	add    BYTE PTR [rax],al
    99ba:	21 00                	and    DWORD PTR [rax],eax
    99bc:	86 01                	xchg   BYTE PTR [rcx],al
    99be:	39 07                	cmp    DWORD PTR [rdi],eax
    99c0:	00 00                	add    BYTE PTR [rax],al
    99c2:	34 2b                	xor    al,0x2b
    99c4:	06                   	(bad)
    99c5:	7c 04                	jl     99cb <_end+0x39b3>
    99c7:	00 00                	add    BYTE PTR [rax],al
    99c9:	9b                   	fwait
    99ca:	42 00 00             	rex.X add BYTE PTR [rax],al
    99cd:	01 42 42             	add    DWORD PTR [rdx+0x42],eax
    99d0:	00 00                	add    BYTE PTR [rax],al
    99d2:	00 0f                	add    BYTE PTR [rdi],cl
    99d4:	e1 03                	loope  99d9 <_end+0x39c1>
    99d6:	00 00                	add    BYTE PTR [rax],al
    99d8:	34 28                	xor    al,0x28
    99da:	0a d0                	or     dl,al
    99dc:	06                   	(bad)
    99dd:	00 00                	add    BYTE PTR [rax],al
    99df:	b0 2c                	mov    al,0x2c
    99e1:	00 00                	add    BYTE PTR [rax],al
    99e3:	ba 42 00 00 01       	mov    edx,0x1000042
    99e8:	42                   	rex.X
    99e9:	42 00 00             	rex.X add BYTE PTR [rax],al
    99ec:	01 3d 40 00 00 00    	add    DWORD PTR [rip+0x40],edi        # 9a32 <_end+0x3a1a>
    99f2:	0f 52 03             	rsqrtps xmm0,XMMWORD PTR [rbx]
    99f5:	00 00                	add    BYTE PTR [rax],al
    99f7:	34 27                	xor    al,0x27
    99f9:	09 1d 06 00 00 51    	or     DWORD PTR [rip+0x51000006],ebx        # 51009a05 <_end+0x510039ed>
    99ff:	41 00 00             	add    BYTE PTR [r8],al
    9a02:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    9a05:	00 01                	add    BYTE PTR [rcx],al
    9a07:	49                   	rex.WB
    9a08:	40 00 00             	rex add BYTE PTR [rax],al
    9a0b:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9a11:	0c 02                	or     al,0x2
    9a13:	04 00                	add    al,0x0
    9a15:	00 37                	add    BYTE PTR [rdi],dh
    9a17:	34 0c                	xor    al,0xc
    9a19:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9a1a:	21 00                	and    DWORD PTR [rax],eax
    9a1c:	00 f5                	add    ch,dh
    9a1e:	42 00 00             	rex.X add BYTE PTR [rax],al
    9a21:	01 a6 21 00 00 01    	add    DWORD PTR [rsi+0x1000021],esp
    9a27:	d3 23                	shl    DWORD PTR [rbx],cl
    9a29:	00 00                	add    BYTE PTR [rax],al
    9a2b:	21 00                	and    DWORD PTR [rax],eax
    9a2d:	28 b0 03 00 00 16    	sub    BYTE PTR [rax+0x16000003],dh
    9a33:	af                   	scas   eax,DWORD PTR es:[rdi]
    9a34:	02 07                	add    al,BYTE PTR [rdi]
    9a36:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9a39:	01 d4                	add    esp,edx
    9a3b:	22 00                	and    al,BYTE PTR [rax]
    9a3d:	00 00                	add    BYTE PTR [rax],al
    9a3f:	0f 12 08             	movlps xmm1,QWORD PTR [rax]
    9a42:	00 00                	add    BYTE PTR [rax],al
    9a44:	38 0a                	cmp    BYTE PTR [rdx],cl
    9a46:	0a eb                	or     ch,bl
    9a48:	07                   	(bad)
    9a49:	00 00                	add    BYTE PTR [rax],al
    9a4b:	b0 2c                	mov    al,0x2c
    9a4d:	00 00                	add    BYTE PTR [rax],al
    9a4f:	21 43 00             	and    DWORD PTR [rbx+0x0],eax
    9a52:	00 01                	add    BYTE PTR [rcx],al
    9a54:	0d 40 00 00 00       	or     eax,0x40
    9a59:	0f b5 08             	lgs    ecx,FWORD PTR [rax]
    9a5c:	00 00                	add    BYTE PTR [rax],al
    9a5e:	38 0e                	cmp    BYTE PTR [rsi],cl
    9a60:	0a 5b 08             	or     bl,BYTE PTR [rbx+0x8]
    9a63:	00 00                	add    BYTE PTR [rax],al
    9a65:	b0 2c                	mov    al,0x2c
    9a67:	00 00                	add    BYTE PTR [rax],al
    9a69:	3b 43 00             	cmp    eax,DWORD PTR [rbx+0x0]
    9a6c:	00 01                	add    BYTE PTR [rcx],al
    9a6e:	0d 40 00 00 00       	or     eax,0x40
    9a73:	0f 49 08             	cmovns ecx,DWORD PTR [rax]
    9a76:	00 00                	add    BYTE PTR [rax],al
    9a78:	38 0d 0a 76 08 00    	cmp    BYTE PTR [rip+0x8760a],cl        # 91088 <_end+0x8b070>
    9a7e:	00 b0 2c 00 00 55    	add    BYTE PTR [rax+0x5500002c],dh
    9a84:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9a87:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9acd <_end+0x3ab5>
    9a8d:	0f 78 07             	vmread QWORD PTR [rdi],rax
    9a90:	00 00                	add    BYTE PTR [rax],al
    9a92:	38 0c 0a             	cmp    BYTE PTR [rdx+rcx*1],cl
    9a95:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9a96:	07                   	(bad)
    9a97:	00 00                	add    BYTE PTR [rax],al
    9a99:	b0 2c                	mov    al,0x2c
    9a9b:	00 00                	add    BYTE PTR [rax],al
    9a9d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9a9e:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9aa1:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9ae7 <_end+0x3acf>
    9aa7:	0f 95 08             	setne  BYTE PTR [rax]
    9aaa:	00 00                	add    BYTE PTR [rax],al
    9aac:	38 0b                	cmp    BYTE PTR [rbx],cl
    9aae:	0a f8                	or     bh,al
    9ab0:	08 00                	or     BYTE PTR [rax],al
    9ab2:	00 b0 2c 00 00 89    	add    BYTE PTR [rax-0x76ffffd4],dh
    9ab8:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9abb:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9b01 <_end+0x3ae9>
    9ac1:	0f c3 08             	movnti DWORD PTR [rax],ecx
    9ac4:	00 00                	add    BYTE PTR [rax],al
    9ac6:	38 09                	cmp    BYTE PTR [rcx],cl
    9ac8:	0a 17                	or     dl,BYTE PTR [rdi]
    9aca:	09 00                	or     DWORD PTR [rax],eax
    9acc:	00 b0 2c 00 00 a3    	add    BYTE PTR [rax-0x5cffffd4],dh
    9ad2:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9ad5:	01 0d 40 00 00 00    	add    DWORD PTR [rip+0x40],ecx        # 9b1b <_end+0x3b03>
    9adb:	0f c7 08             	cmpxchg8b QWORD PTR [rax]
    9ade:	00 00                	add    BYTE PTR [rax],al
    9ae0:	38 08                	cmp    BYTE PTR [rax],cl
    9ae2:	0a 2c 08             	or     ch,BYTE PTR [rax+rcx*1]
    9ae5:	00 00                	add    BYTE PTR [rax],al
    9ae7:	b0 2c                	mov    al,0x2c
    9ae9:	00 00                	add    BYTE PTR [rax],al
    9aeb:	bd 43 00 00 01       	mov    ebp,0x1000043
    9af0:	0d 40 00 00 00       	or     eax,0x40
    9af5:	0c 7d                	or     al,0x7d
    9af7:	09 00                	or     DWORD PTR [rax],eax
    9af9:	00 39                	add    BYTE PTR [rcx],bh
    9afb:	9c                   	pushf
    9afc:	0c a6                	or     al,0xa6
    9afe:	21 00                	and    DWORD PTR [rax],eax
    9b00:	00 d8                	add    al,bl
    9b02:	43 00 00             	rex.XB add BYTE PTR [r8],al
    9b05:	01 d3                	add    ebx,edx
    9b07:	23 00                	and    eax,DWORD PTR [rax]
    9b09:	00 01                	add    BYTE PTR [rcx],al
    9b0b:	d3 23                	shl    DWORD PTR [rbx],cl
    9b0d:	00 00                	add    BYTE PTR [rax],al
    9b0f:	00 0f                	add    BYTE PTR [rdi],cl
    9b11:	41 06                	rex.B (bad)
    9b13:	00 00                	add    BYTE PTR [rax],al
    9b15:	34 26                	xor    al,0x26
    9b17:	0b 7e 03             	or     edi,DWORD PTR [rsi+0x3]
    9b1a:	00 00                	add    BYTE PTR [rax],al
    9b1c:	f7 43 00 00 f7 43 00 	test   DWORD PTR [rbx+0x0],0x43f700
    9b23:	00 01                	add    BYTE PTR [rcx],al
    9b25:	e2 22                	loop   9b49 <_end+0x3b31>
    9b27:	00 00                	add    BYTE PTR [rax],al
    9b29:	01 b0 2c 00 00 00    	add    DWORD PTR [rax+0x2c],esi
    9b2f:	0d 0d 40 00 00       	or     eax,0x400d
    9b34:	0f 6d                	(bad)
    9b36:	0a 00                	or     al,BYTE PTR [rax]
    9b38:	00 3a                	add    BYTE PTR [rdx],bh
    9b3a:	07                   	(bad)
    9b3b:	0a b6 09 00 00 b0    	or     dh,BYTE PTR [rsi-0x4ffffff7]
    9b41:	2c 00                	sub    al,0x0
    9b43:	00 1b                	add    BYTE PTR [rbx],bl
    9b45:	44 00 00             	add    BYTE PTR [rax],r8b
    9b48:	01 e2                	add    edx,esp
    9b4a:	22 00                	and    al,BYTE PTR [rax]
    9b4c:	00 01                	add    BYTE PTR [rcx],al
    9b4e:	2e 23 00             	cs and eax,DWORD PTR [rax]
    9b51:	00 00                	add    BYTE PTR [rax],al
    9b53:	0f c8                	bswap  eax
    9b55:	09 00                	or     DWORD PTR [rax],eax
    9b57:	00 3a                	add    BYTE PTR [rdx],bh
    9b59:	06                   	(bad)
    9b5a:	07                   	(bad)
    9b5b:	d1 09                	ror    DWORD PTR [rcx],1
    9b5d:	00 00                	add    BYTE PTR [rax],al
    9b5f:	e2 22                	loop   9b83 <_end+0x3b6b>
    9b61:	00 00                	add    BYTE PTR [rax],al
    9b63:	3a 44 00 00          	cmp    al,BYTE PTR [rax+rax*1+0x0]
    9b67:	01 d3                	add    ebx,edx
    9b69:	23 00                	and    eax,DWORD PTR [rax]
    9b6b:	00 01                	add    BYTE PTR [rcx],al
    9b6d:	3a 44 00 00          	cmp    al,BYTE PTR [rax+rax*1+0x0]
    9b71:	00 0d 2e 23 00 00    	add    BYTE PTR [rip+0x232e],cl        # bea5 <_end+0x5e8d>
    9b77:	87 01                	xchg   DWORD PTR [rcx],eax
    9b79:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9b7a:	05 00 00 3b 45       	add    eax,0x453b0000
    9b7f:	0d 61 44 00 00       	or     eax,0x4461
    9b84:	01 d3                	add    ebx,edx
    9b86:	23 00                	and    eax,DWORD PTR [rax]
    9b88:	00 01                	add    BYTE PTR [rcx],al
    9b8a:	d3 23                	shl    DWORD PTR [rbx],cl
    9b8c:	00 00                	add    BYTE PTR [rax],al
    9b8e:	01 e3                	add    ebx,esp
    9b90:	20 00                	and    BYTE PTR [rax],al
    9b92:	00 01                	add    BYTE PTR [rcx],al
    9b94:	d3 23                	shl    DWORD PTR [rbx],cl
    9b96:	00 00                	add    BYTE PTR [rax],al
    9b98:	00 22                	add    BYTE PTR [rdx],ah
    9b9a:	b9 21 00 00 30       	mov    ecx,0x30000021
    9b9f:	24 1e                	and    al,0x1e
    9ba1:	00 00                	add    BYTE PTR [rax],al
    9ba3:	7d 44                	jge    9be9 <_end+0x3bd1>
    9ba5:	00 00                	add    BYTE PTR [rax],al
    9ba7:	02 93 44 00 00 11    	add    dl,BYTE PTR [rbx+0x11000044]
    9bad:	09 19                	or     DWORD PTR [rcx],ebx
    9baf:	00 00                	add    BYTE PTR [rax],al
    9bb1:	b2 21                	mov    dl,0x21
    9bb3:	00 00                	add    BYTE PTR [rax],al
    9bb5:	31 1e                	xor    DWORD PTR [rsi],ebx
    9bb7:	1e                   	(bad)
    9bb8:	00 00                	add    BYTE PTR [rax],al
    9bba:	ba 3f 00 00 2d       	mov    edx,0x2d00003f
    9bbf:	47 16                	rex.RXB (bad)
    9bc1:	00 00                	add    BYTE PTR [rax],al
    9bc3:	3d 02 2d 61 44       	cmp    eax,0x44612d02
    9bc8:	00 00                	add    BYTE PTR [rax],al
    9bca:	00 5c 66 44          	add    BYTE PTR [rsi+riz*2+0x44],bl
    9bce:	00 00                	add    BYTE PTR [rax],al
    9bd0:	55                   	push   rbp
    9bd1:	16                   	(bad)
    9bd2:	00 00                	add    BYTE PTR [rax],al
    9bd4:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    9bd5:	44 00 00             	add    BYTE PTR [rax],r8b
    9bd8:	b8 44 00 00 11       	mov    eax,0x11000044
    9bdd:	09 19                	or     DWORD PTR [rcx],ebx
    9bdf:	00 00                	add    BYTE PTR [rax],al
    9be1:	b2 21                	mov    dl,0x21
    9be3:	00 00                	add    BYTE PTR [rax],al
    9be5:	0b 7d 44             	or     edi,DWORD PTR [rbp+0x44]
    9be8:	00 00                	add    BYTE PTR [rax],al
    9bea:	0b 86 44 00 00 00    	or     eax,DWORD PTR [rsi+0x44]
    9bf0:	32 7a 1e             	xor    bh,BYTE PTR [rdx+0x1e]
    9bf3:	00 00                	add    BYTE PTR [rax],al
    9bf5:	ed                   	in     eax,dx
    9bf6:	44 00 00             	add    BYTE PTR [rax],r8b
    9bf9:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    9c00:	00 00                	add    BYTE PTR [rax],al
    9c02:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    9c05:	00 00                	add    BYTE PTR [rax],al
    9c07:	94                   	xchg   esp,eax
    9c08:	1f                   	(bad)
    9c09:	00 00                	add    BYTE PTR [rax],al
    9c0b:	88 01                	mov    BYTE PTR [rcx],al
    9c0d:	5f                   	pop    rdi
    9c0e:	5f                   	pop    rdi
    9c0f:	64 00 04 d0          	add    BYTE PTR fs:[rax+rdx*8],al
    9c13:	2a 9c 3f 00 00 08 e8 	sub    bl,BYTE PTR [rdi+rdi*1-0x17f80000]
    9c1a:	22 00                	and    al,BYTE PTR [rax]
    9c1c:	00 04 d2             	add    BYTE PTR [rdx+rdx*8],al
    9c1f:	25 82 1c 00 00       	and    eax,0x1c82
    9c24:	00 32                	add    BYTE PTR [rdx],dh
    9c26:	d6                   	(bad)
    9c27:	1e                   	(bad)
    9c28:	00 00                	add    BYTE PTR [rax],al
    9c2a:	40                   	rex
    9c2b:	45 00 00             	add    BYTE PTR [r8],r8b
    9c2e:	11 03                	adc    DWORD PTR [rbx],eax
    9c30:	19 00                	sbb    DWORD PTR [rax],eax
    9c32:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9c38:	98                   	cwde
    9c39:	22 00                	and    al,BYTE PTR [rax]
    9c3b:	00 94 1f 00 00 11 09 	add    BYTE PTR [rdi+rbx*1+0x9110000],dl
    9c42:	19 00                	sbb    DWORD PTR [rax],eax
    9c44:	00 b2 21 00 00 11    	add    BYTE PTR [rdx+0x11000021],dh
    9c4a:	bb 2f 00 00 94       	mov    ebx,0x9400002f
    9c4f:	1f                   	(bad)
    9c50:	00 00                	add    BYTE PTR [rax],al
    9c52:	2d 3d 0f 00 00       	sub    eax,0xf3d
    9c57:	c6 02 32             	mov    BYTE PTR [rdx],0x32
    9c5a:	9c                   	pushf
    9c5b:	3f                   	(bad)
    9c5c:	00 00                	add    BYTE PTR [rax],al
    9c5e:	2d 3a 17 00 00       	sub    eax,0x173a
    9c63:	c7 02 24 9c 3f 00    	mov    DWORD PTR [rdx],0x3f9c24
    9c69:	00 42 1b             	add    BYTE PTR [rdx+0x1b],al
    9c6c:	21 00                	and    DWORD PTR [rax],eax
    9c6e:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    9c71:	02 34 e0             	add    dh,BYTE PTR [rax+riz*8]
    9c74:	1f                   	(bad)
    9c75:	00 00                	add    BYTE PTR [rax],al
    9c77:	00 32                	add    BYTE PTR [rdx],dh
    9c79:	26 1f                	es (bad)
    9c7b:	00 00                	add    BYTE PTR [rax],al
    9c7d:	74 45                	je     9cc4 <_end+0x3cac>
    9c7f:	00 00                	add    BYTE PTR [rax],al
    9c81:	11 3c 22             	adc    DWORD PTR [rdx+riz*1],edi
    9c84:	00 00                	add    BYTE PTR [rax],al
    9c86:	df 1b                	fistp  WORD PTR [rbx]
    9c88:	00 00                	add    BYTE PTR [rax],al
    9c8a:	11 84 32 00 00 b2 21 	adc    DWORD PTR [rdx+rsi*1+0x21b20000],eax
    9c91:	00 00                	add    BYTE PTR [rax],al
    9c93:	11 51 23             	adc    DWORD PTR [rcx+0x23],edx
    9c96:	00 00                	add    BYTE PTR [rax],al
    9c98:	94                   	xchg   esp,eax
    9c99:	1f                   	(bad)
    9c9a:	00 00                	add    BYTE PTR [rax],al
    9c9c:	5d                   	pop    rbp
    9c9d:	5f                   	pop    rdi
    9c9e:	5f                   	pop    rdi
    9c9f:	64 00 04 11          	add    BYTE PTR fs:[rcx+rdx*1],al
    9ca3:	01 34 9c             	add    DWORD PTR [rsp+rbx*4],esi
    9ca6:	3f                   	(bad)
    9ca7:	00 00                	add    BYTE PTR [rax],al
    9ca9:	89 01                	mov    DWORD PTR [rcx],eax
    9cab:	00 5e ae             	add    BYTE PTR [rsi-0x52],bl
    9cae:	22 00                	and    al,BYTE PTR [rax]
    9cb0:	00 b4 07 ea 2e 00 00 	add    BYTE PTR [rdi+rax*1+0x2eea],dh
    9cb7:	35 00 00 00 cc       	xor    eax,0xcc000000
    9cbc:	45 00 00             	add    BYTE PTR [r8],r8b
    9cbf:	1e                   	(bad)
    9cc0:	94                   	xchg   esp,eax
    9cc1:	05 00 00 01 b4       	add    eax,0xb4010000
    9cc6:	2c 42                	sub    al,0x42
    9cc8:	42 00 00             	rex.X add BYTE PTR [rax],al
    9ccb:	1e                   	(bad)
    9ccc:	24 10                	and    al,0x10
    9cce:	00 00                	add    BYTE PTR [rax],al
    9cd0:	01 b4 3b 35 00 00 00 	add    DWORD PTR [rbx+rdi*1+0x35],esi
    9cd7:	5f                   	pop    rdi
    9cd8:	cd 03                	int    0x3
    9cda:	00 00                	add    BYTE PTR [rax],al
    9cdc:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9cdf:	00 17                	add    BYTE PTR [rdi],dl
    9ce1:	28 16                	sub    BYTE PTR [rsi],dl
    9ce3:	00 00                	add    BYTE PTR [rax],al
    9ce5:	b7 0b                	mov    bh,0xb
    9ce7:	35 00 00 00 48       	xor    eax,0x48000000
    9cec:	49 69 00 b8 13 b0 2c 	imul   rax,QWORD PTR [r8],0x2cb013b8
    9cf3:	00 00                	add    BYTE PTR [rax],al
    9cf5:	48 17                	rex.W (bad)
    9cf7:	dd 05 00 00 b9 12    	fld    QWORD PTR [rip+0x12b90000]        # 12b99cfd <_end+0x12b93ce5>
    9cfd:	b0 2c                	mov    al,0x2c
    9cff:	00 00                	add    BYTE PTR [rax],al
    9d01:	00 00                	add    BYTE PTR [rax],al
    9d03:	00 25 ee 22 00 00    	add    BYTE PTR [rip+0x22ee],ah        # bff7 <_end+0x5fdf>
    9d09:	dc 45 00             	fadd   QWORD PTR [rbp+0x0]
    9d0c:	00 26                	add    BYTE PTR [rsi],ah
    9d0e:	8a 21                	mov    ah,BYTE PTR [rcx]
    9d10:	00 00                	add    BYTE PTR [rax],al
    9d12:	32 00                	xor    al,BYTE PTR [rax]
    9d14:	13 cc                	adc    ecx,esp
    9d16:	45 00 00             	add    BYTE PTR [r8],r8b
    9d19:	5e                   	pop    rsi
    9d1a:	59                   	pop    rcx
    9d1b:	26 00 00             	es add BYTE PTR [rax],al
    9d1e:	a8 08                	test   al,0x8
    9d20:	7e 34                	jle    9d56 <_end+0x3d3e>
    9d22:	00 00                	add    BYTE PTR [rax],al
    9d24:	2e 00 00             	cs add BYTE PTR [rax],al
    9d27:	00 38                	add    BYTE PTR [rax],bh
    9d29:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9d2c:	1e                   	(bad)
    9d2d:	dd 22                	frstor [rdx]
    9d2f:	00 00                	add    BYTE PTR [rax],al
    9d31:	01 a8 26 93 3e 00    	add    DWORD PTR [rax+0x3e9326],ebp
    9d37:	00 1e                	add    BYTE PTR [rsi],bl
    9d39:	ea                   	(bad)
    9d3a:	05 00 00 01 a8       	add    eax,0xa8010000
    9d3f:	3b b0 2c 00 00 1e    	cmp    esi,DWORD PTR [rax+0x1e00002c]
    9d45:	24 10                	and    al,0x10
    9d47:	00 00                	add    BYTE PTR [rax],al
    9d49:	01 a8 4a 2e 00 00    	add    DWORD PTR [rax+0x2e4a],ebp
    9d4f:	00 5f cd             	add    BYTE PTR [rdi-0x33],bl
    9d52:	03 00                	add    eax,DWORD PTR [rax]
    9d54:	00 48 46             	add    BYTE PTR [rax+0x46],cl
    9d57:	00 00                	add    BYTE PTR [rax],al
    9d59:	17                   	(bad)
    9d5a:	28 16                	sub    BYTE PTR [rsi],dl
    9d5c:	00 00                	add    BYTE PTR [rax],al
    9d5e:	ab                   	stos   DWORD PTR es:[rdi],eax
    9d5f:	0c 2e                	or     al,0x2e
    9d61:	00 00                	add    BYTE PTR [rax],al
    9d63:	00 48 49             	add    BYTE PTR [rax+0x49],cl
    9d66:	69 00 ac 13 b0 2c    	imul   eax,DWORD PTR [rax],0x2cb013ac
    9d6c:	00 00                	add    BYTE PTR [rax],al
    9d6e:	00 00                	add    BYTE PTR [rax],al
    9d70:	25 ee 22 00 00       	and    eax,0x22ee
    9d75:	48                   	rex.W
    9d76:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    9d79:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    9d7c:	00 00                	add    BYTE PTR [rax],al
    9d7e:	37                   	(bad)
    9d7f:	00 13                	add    BYTE PTR [rbx],dl
    9d81:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    9d84:	00 4a db             	add    BYTE PTR [rdx-0x25],cl
    9d87:	13 00                	adc    eax,DWORD PTR [rax]
    9d89:	00 5d 78             	add    BYTE PTR [rbp+0x78],bl
    9d8c:	30 00                	xor    BYTE PTR [rax],al
    9d8e:	00 80 2a 00 00 00    	add    BYTE PTR [rax+0x2a],al
    9d94:	00 00                	add    BYTE PTR [rax],al
    9d96:	00 56 04             	add    BYTE PTR [rsi+0x4],dl
    9d99:	00 00                	add    BYTE PTR [rax],al
    9d9b:	00 00                	add    BYTE PTR [rax],al
    9d9d:	00 00                	add    BYTE PTR [rax],al
    9d9f:	01 9c 3a 4e 00 00 23 	add    DWORD PTR [rdx+rdi*1+0x2300004e],ebx
    9da6:	b7 2b                	mov    bh,0x2b
    9da8:	00 00                	add    BYTE PTR [rax],al
    9daa:	5d                   	pop    rbp
    9dab:	1b 8e 2c 00 00 f4    	sbb    ecx,DWORD PTR [rsi-0xbffffd4]
    9db1:	1b 00                	sbb    eax,DWORD PTR [rax]
    9db3:	00 e8                	add    al,ch
    9db5:	1b 00                	sbb    eax,DWORD PTR [rax]
    9db7:	00 23                	add    BYTE PTR [rbx],ah
    9db9:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    9dbc:	00 5d 28             	add    BYTE PTR [rbp+0x28],bl
    9dbf:	49                   	rex.WB
    9dc0:	40 00 00             	rex add BYTE PTR [rax],al
    9dc3:	36 1c 00             	ss sbb al,0x0
    9dc6:	00 2c 1c             	add    BYTE PTR [rsp+rbx*1],ch
    9dc9:	00 00                	add    BYTE PTR [rax],al
    9dcb:	23 09                	and    ecx,DWORD PTR [rcx]
    9dcd:	0d 00 00 5d 3c       	or     eax,0x3c5d0000
    9dd2:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    9dd3:	41 00 00             	add    BYTE PTR [r8],al
    9dd6:	68 1c 00 00 60       	push   0x6000001c
    9ddb:	1c 00                	sbb    al,0x0
    9ddd:	00 23                	add    BYTE PTR [rbx],ah
    9ddf:	3c 29                	cmp    al,0x29
    9de1:	00 00                	add    BYTE PTR [rax],al
    9de3:	5d                   	pop    rbp
    9de4:	50                   	push   rax
    9de5:	b0 2c                	mov    al,0x2c
    9de7:	00 00                	add    BYTE PTR [rax],al
    9de9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    9dea:	1c 00                	sbb    al,0x0
    9dec:	00 99 1c 00 00 4b    	add    BYTE PTR [rcx+0x4b00001c],bl
    9df2:	cd 03                	int    0x3
    9df4:	00 00                	add    BYTE PTR [rax],al
    9df6:	4a                   	rex.WX
    9df7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9dfa:	09 03                	or     DWORD PTR [rbx],eax
    9dfc:	b0 44                	mov    al,0x44
    9dfe:	00 00                	add    BYTE PTR [rax],al
    9e00:	00 00                	add    BYTE PTR [rax],al
    9e02:	00 00                	add    BYTE PTR [rax],al
    9e04:	4c 94                	rex.WR xchg rsp,rax
    9e06:	05 00 00 61 0d       	add    eax,0xd610000
    9e0b:	51                   	push   rcx
    9e0c:	41 00 00             	add    BYTE PTR [r8],al
    9e0f:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    9e12:	7f 1f                	jg     9e33 <_end+0x3e1b>
    9e14:	fd                   	std
    9e15:	0c 00                	or     al,0x0
    9e17:	00 66 0f             	add    BYTE PTR [rsi+0xf],ah
    9e1a:	4f                   	rex.WRXB
    9e1b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9e1e:	e9 1c 00 00 dd       	jmp    ffffffffdd009e3f <_end+0xffffffffdd003e27>
    9e23:	1c 00                	sbb    al,0x0
    9e25:	00 1f                	add    BYTE PTR [rdi],bl
    9e27:	d6                   	(bad)
    9e28:	22 00                	and    al,BYTE PTR [rax]
    9e2a:	00 67 0d             	add    BYTE PTR [rdi+0xd],ah
    9e2d:	93                   	xchg   ebx,eax
    9e2e:	3e 00 00             	ds add BYTE PTR [rax],al
    9e31:	2b 1d 00 00 21 1d    	sub    ebx,DWORD PTR [rip+0x1d210000]        # 1d219e37 <_end+0x1d213e1f>
    9e37:	00 00                	add    BYTE PTR [rax],al
    9e39:	1f                   	(bad)
    9e3a:	f4                   	hlt
    9e3b:	2b 00                	sub    eax,DWORD PTR [rax]
    9e3d:	00 68 0e             	add    BYTE PTR [rax+0xe],ch
    9e40:	b0 2c                	mov    al,0x2c
    9e42:	00 00                	add    BYTE PTR [rax],al
    9e44:	60                   	(bad)
    9e45:	1d 00 00 5c 1d       	sbb    eax,0x1d5c0000
    9e4a:	00 00                	add    BYTE PTR [rax],al
    9e4c:	1f                   	(bad)
    9e4d:	a1 22 00 00 95 0c 2e 	movabs eax,ds:0x2e0c95000022
    9e54:	00 00 
    9e56:	00 8f 1d 00 00 79    	add    BYTE PTR [rdi+0x7900001d],cl
    9e5c:	1d 00 00 1f 64       	sbb    eax,0x641f0000
    9e61:	21 00                	and    DWORD PTR [rax],eax
    9e63:	00 9e 0c 2e 00 00    	add    BYTE PTR [rsi+0x2e0c],bl
    9e69:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    9e6c:	00 00                	add    BYTE PTR [rax],al
    9e6e:	00 1e                	add    BYTE PTR [rsi],bl
    9e70:	00 00                	add    BYTE PTR [rax],al
    9e72:	16                   	(bad)
    9e73:	f1                   	int1
    9e74:	2a 00                	sub    al,BYTE PTR [rax]
    9e76:	00 00                	add    BYTE PTR [rax],al
    9e78:	00 00                	add    BYTE PTR [rax],al
    9e7a:	00 28                	add    BYTE PTR [rax],ch
    9e7c:	00 00                	add    BYTE PTR [rax],al
    9e7e:	00 00                	add    BYTE PTR [rax],al
    9e80:	00 00                	add    BYTE PTR [rax],al
    9e82:	00 75 47             	add    BYTE PTR [rbp+0x47],dh
    9e85:	00 00                	add    BYTE PTR [rax],al
    9e87:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9e8a:	62 0e a6 21 00       	(bad)
    9e8f:	00 15 1e 00 00 13    	add    BYTE PTR [rip+0x1300001e],dl        # 13009eb3 <_end+0x13003e9b>
    9e95:	1e                   	(bad)
    9e96:	00 00                	add    BYTE PTR [rax],al
    9e98:	07                   	(bad)
    9e99:	14 2b                	adc    al,0x2b
    9e9b:	00 00                	add    BYTE PTR [rax],al
    9e9d:	00 00                	add    BYTE PTR [rax],al
    9e9f:	00 00                	add    BYTE PTR [rax],al
    9ea1:	9b                   	fwait
    9ea2:	42 00 00             	rex.X add BYTE PTR [rax],al
    9ea5:	03 01                	add    eax,DWORD PTR [rcx]
    9ea7:	55                   	push   rbp
    9ea8:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9eac:	00 16                	add    BYTE PTR [rsi],dl
    9eae:	51                   	push   rcx
    9eaf:	2b 00                	sub    eax,DWORD PTR [rax]
    9eb1:	00 00                	add    BYTE PTR [rax],al
    9eb3:	00 00                	add    BYTE PTR [rax],al
    9eb5:	00 1e                	add    BYTE PTR [rsi],bl
    9eb7:	00 00                	add    BYTE PTR [rax],al
    9eb9:	00 00                	add    BYTE PTR [rax],al
    9ebb:	00 00                	add    BYTE PTR [rax],al
    9ebd:	00 a9 47 00 00 2a    	add    BYTE PTR [rcx+0x2a000047],ch
    9ec3:	6a 00                	push   0x0
    9ec5:	6a 0e                	push   0xe
    9ec7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9ec8:	21 00                	and    DWORD PTR [rax],eax
    9eca:	00 20                	add    BYTE PTR [rax],ah
    9ecc:	1e                   	(bad)
    9ecd:	00 00                	add    BYTE PTR [rax],al
    9ecf:	1e                   	(bad)
    9ed0:	1e                   	(bad)
    9ed1:	00 00                	add    BYTE PTR [rax],al
    9ed3:	20 5d 2b             	and    BYTE PTR [rbp+0x2b],bl
    9ed6:	00 00                	add    BYTE PTR [rax],al
    9ed8:	00 00                	add    BYTE PTR [rax],al
    9eda:	00 00                	add    BYTE PTR [rax],al
    9edc:	4d 2f                	rex.WRB (bad)
    9ede:	00 00                	add    BYTE PTR [rax],al
    9ee0:	00 16                	add    BYTE PTR [rsi],dl
    9ee2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9ee3:	2b 00                	sub    eax,DWORD PTR [rax]
    9ee5:	00 00                	add    BYTE PTR [rax],al
    9ee7:	00 00                	add    BYTE PTR [rax],al
    9ee9:	00 9d 00 00 00 00    	add    BYTE PTR [rbp+0x0],bl
    9eef:	00 00                	add    BYTE PTR [rax],al
    9ef1:	00 c2                	add    dl,al
    9ef3:	49 00 00             	rex.WB add BYTE PTR [r8],al
    9ef6:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    9ef9:	86 0e                	xchg   BYTE PTR [rsi],cl
    9efb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9efc:	21 00                	and    DWORD PTR [rax],eax
    9efe:	00 2f                	add    BYTE PTR [rdi],ch
    9f00:	1e                   	(bad)
    9f01:	00 00                	add    BYTE PTR [rax],al
    9f03:	29 1e                	sub    DWORD PTR [rsi],ebx
    9f05:	00 00                	add    BYTE PTR [rax],al
    9f07:	2e 70 03             	cs jo  9f0d <_end+0x3ef5>
    9f0a:	00 00                	add    BYTE PTR [rax],al
    9f0c:	1f                   	(bad)
    9f0d:	ab                   	stos   DWORD PTR es:[rdi],eax
    9f0e:	2e 00 00             	cs add BYTE PTR [rax],al
    9f11:	87 0e                	xchg   DWORD PTR [rsi],ecx
    9f13:	e3 1a                	jrcxz  9f2f <_end+0x3f17>
    9f15:	00 00                	add    BYTE PTR [rax],al
    9f17:	4a 1e                	rex.WX (bad)
    9f19:	00 00                	add    BYTE PTR [rax],al
    9f1b:	48 1e                	rex.W (bad)
    9f1d:	00 00                	add    BYTE PTR [rax],al
    9f1f:	49                   	rex.WB
    9f20:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    9f22:	64 00 8d 0e e3 1a 00 	add    BYTE PTR fs:[rbp+0x1ae30e],cl
    9f29:	00 1f                	add    BYTE PTR [rdi],bl
    9f2b:	21 19                	and    DWORD PTR [rcx],ebx
    9f2d:	00 00                	add    BYTE PTR [rax],al
    9f2f:	8e 0e                	mov    cs,WORD PTR [rsi]
    9f31:	df 1b                	fistp  WORD PTR [rbx]
    9f33:	00 00                	add    BYTE PTR [rax],al
    9f35:	55                   	push   rbp
    9f36:	1e                   	(bad)
    9f37:	00 00                	add    BYTE PTR [rax],al
    9f39:	53                   	push   rbx
    9f3a:	1e                   	(bad)
    9f3b:	00 00                	add    BYTE PTR [rax],al
    9f3d:	16                   	(bad)
    9f3e:	9e                   	sahf
    9f3f:	2b 00                	sub    eax,DWORD PTR [rax]
    9f41:	00 00                	add    BYTE PTR [rax],al
    9f43:	00 00                	add    BYTE PTR [rax],al
    9f45:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
    9f48:	00 00                	add    BYTE PTR [rax],al
    9f4a:	00 00                	add    BYTE PTR [rax],al
    9f4c:	00 00                	add    BYTE PTR [rax],al
    9f4e:	40                   	rex
    9f4f:	48 00 00             	rex.W add BYTE PTR [rax],al
    9f52:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    9f55:	89 12                	mov    DWORD PTR [rdx],edx
    9f57:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    9f58:	21 00                	and    DWORD PTR [rax],eax
    9f5a:	00 6c 1e 00          	add    BYTE PTR [rsi+rbx*1+0x0],ch
    9f5e:	00 6a 1e             	add    BYTE PTR [rdx+0x1e],ch
    9f61:	00 00                	add    BYTE PTR [rax],al
    9f63:	07                   	(bad)
    9f64:	bd 2b 00 00 00       	mov    ebp,0x2b
    9f69:	00 00                	add    BYTE PTR [rax],al
    9f6b:	00 23                	add    BYTE PTR [rbx],ah
    9f6d:	42 00 00             	rex.X add BYTE PTR [rax],al
    9f70:	03 01                	add    eax,DWORD PTR [rcx]
    9f72:	55                   	push   rbp
    9f73:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    9f77:	00 1c 40             	add    BYTE PTR [rax+rax*2],bl
    9f7a:	45 00 00             	add    BYTE PTR [r8],r8b
    9f7d:	c7                   	(bad)
    9f7e:	2b 00                	sub    eax,DWORD PTR [rax]
    9f80:	00 00                	add    BYTE PTR [rax],al
    9f82:	00 00                	add    BYTE PTR [rax],al
    9f84:	00 09                	add    BYTE PTR [rcx],cl
    9f86:	00 80 03 00 00 8e    	add    BYTE PTR [rax-0x71fffffd],al
    9f8c:	4d b8 48 00 00 0b 64 	rex.WRB movabs r8,0x45640b000048
    9f93:	45 00 00 
    9f96:	4d 71 45             	rex.WRB jno 9fde <_end+0x3fc6>
    9f99:	00 00                	add    BYTE PTR [rax],al
    9f9b:	80 03 00             	add    BYTE PTR [rbx],0x0
    9f9e:	00 60 b8             	add    BYTE PTR [rax-0x48],ah
    9fa1:	44 00 00             	add    BYTE PTR [rax],r8b
    9fa4:	c7                   	(bad)
    9fa5:	2b 00                	sub    eax,DWORD PTR [rax]
    9fa7:	00 00                	add    BYTE PTR [rax],al
    9fa9:	00 00                	add    BYTE PTR [rax],al
    9fab:	00 0a                	add    BYTE PTR [rdx],cl
    9fad:	00 80 03 00 00 1f    	add    BYTE PTR [rax+0x1f000003],al
    9fb3:	01 17                	add    DWORD PTR [rdi],edx
    9fb5:	0b d3                	or     edx,ebx
    9fb7:	44 00 00             	add    BYTE PTR [rax],r8b
    9fba:	2e 80 03 00          	cs add BYTE PTR [rbx],0x0
    9fbe:	00 19                	add    BYTE PTR [rcx],bl
    9fc0:	66 44 00 00          	data16 add BYTE PTR [rax],r8b
    9fc4:	c7                   	(bad)
    9fc5:	2b 00                	sub    eax,DWORD PTR [rax]
    9fc7:	00 00                	add    BYTE PTR [rax],al
    9fc9:	00 00                	add    BYTE PTR [rax],al
    9fcb:	00 0b                	add    BYTE PTR [rbx],cl
    9fcd:	00 c7                	add    bh,al
    9fcf:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    9fdd:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    9fe0:	0d 0b 86 44 00       	or     eax,0x44860b
    9fe5:	00 0b                	add    BYTE PTR [rbx],cl
    9fe7:	7d 44                	jge    a02d <_end+0x4015>
    9fe9:	00 00                	add    BYTE PTR [rax],al
    9feb:	00 00                	add    BYTE PTR [rax],al
    9fed:	00 00                	add    BYTE PTR [rax],al
    9fef:	00 1c 89             	add    BYTE PTR [rcx+rcx*4],bl
    9ff2:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    9ff5:	c7                   	(bad)
    9ff6:	2b 00                	sub    eax,DWORD PTR [rax]
    9ff8:	00 00                	add    BYTE PTR [rax],al
    9ffa:	00 00                	add    BYTE PTR [rax],al
    9ffc:	00 01                	add    BYTE PTR [rcx],al
    9ffe:	00 95 03 00 00 8e    	add    BYTE PTR [rbp-0x71fffffd],dl
    a004:	54                   	push   rsp
    a005:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a006:	49 00 00             	rex.WB add BYTE PTR [r8],al
    a009:	05 b9 4e 00 00       	add    eax,0x4eb9
    a00e:	77 1e                	ja     a02e <_end+0x4016>
    a010:	00 00                	add    BYTE PTR [rax],al
    a012:	75 1e                	jne    a032 <_end+0x401a>
    a014:	00 00                	add    BYTE PTR [rax],al
    a016:	05 ad 4e 00 00       	add    eax,0x4ead
    a01b:	86 1e                	xchg   BYTE PTR [rsi],bl
    a01d:	00 00                	add    BYTE PTR [rax],al
    a01f:	84 1e                	test   BYTE PTR [rsi],bl
    a021:	00 00                	add    BYTE PTR [rax],al
    a023:	61                   	(bad)
    a024:	6c                   	ins    BYTE PTR es:[rdi],dx
    a025:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a028:	c7                   	(bad)
    a029:	2b 00                	sub    eax,DWORD PTR [rax]
    a02b:	00 00                	add    BYTE PTR [rax],al
    a02d:	00 00                	add    BYTE PTR [rax],al
    a02f:	00 02                	add    BYTE PTR [rdx],al
    a031:	00 c7                	add    bh,al
    a033:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    a041:	00 41 1d             	add    BYTE PTR [rcx+0x1d],al
    a044:	49 00 00             	rex.WB add BYTE PTR [r8],al
    a047:	05 7a 4e 00 00       	add    eax,0x4e7a
    a04c:	95                   	xchg   ebp,eax
    a04d:	1e                   	(bad)
    a04e:	00 00                	add    BYTE PTR [rax],al
    a050:	93                   	xchg   ebx,eax
    a051:	1e                   	(bad)
    a052:	00 00                	add    BYTE PTR [rax],al
    a054:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    a057:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a05a:	c7                   	(bad)
    a05b:	2b 00                	sub    eax,DWORD PTR [rax]
    a05d:	00 00                	add    BYTE PTR [rax],al
    a05f:	00 00                	add    BYTE PTR [rax],al
    a061:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    a064:	c7                   	(bad)
    a065:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    a073:	00 26                	add    BYTE PTR [rsi],ah
    a075:	4f                   	rex.WRXB
    a076:	49 00 00             	rex.WB add BYTE PTR [r8],al
    a079:	05 7a 4e 00 00       	add    eax,0x4e7a
    a07e:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    a07f:	1e                   	(bad)
    a080:	00 00                	add    BYTE PTR [rax],al
    a082:	a2 1e 00 00 00 60 ed 	movabs ds:0x44ed600000001e,al
    a089:	44 00 
    a08b:	00 c7                	add    bh,al
    a08d:	2b 00                	sub    eax,DWORD PTR [rax]
    a08f:	00 00                	add    BYTE PTR [rax],al
    a091:	00 00                	add    BYTE PTR [rax],al
    a093:	00 06                	add    BYTE PTR [rsi],al
    a095:	00 a5 03 00 00 77    	add    BYTE PTR [rbp+0x77000003],ah
    a09b:	04 29                	add    al,0x29
    a09d:	0b 26                	or     esp,DWORD PTR [rsi]
    a09f:	45 00 00             	add    BYTE PTR [r8],r8b
    a0a2:	0b 1a                	or     ebx,DWORD PTR [rdx]
    a0a4:	45 00 00             	add    BYTE PTR [r8],r8b
    a0a7:	2e a5                	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a0a9:	03 00                	add    eax,DWORD PTR [rax]
    a0ab:	00 8a 01 84 71 00    	add    BYTE PTR [rdx+0x718401],cl
    a0b1:	00 c7                	add    bh,al
    a0b3:	2b 00                	sub    eax,DWORD PTR [rax]
    a0b5:	00 00                	add    BYTE PTR [rax],al
    a0b7:	00 00                	add    BYTE PTR [rax],al
    a0b9:	00 07                	add    BYTE PTR [rdi],al
    a0bb:	00 c7                	add    bh,al
    a0bd:	2b 00                	sub    eax,DWORD PTR [rax]
	...
    a0cb:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    a0ce:	02 09                	add    cl,BYTE PTR [rcx]
    a0d0:	0b a4 71 00 00 0b 9b 	or     esp,DWORD PTR [rcx+rsi*2-0x64f50000]
    a0d7:	71 00                	jno    a0d9 <_end+0x40c1>
    a0d9:	00 00                	add    BYTE PTR [rax],al
    a0db:	00 00                	add    BYTE PTR [rax],al
    a0dd:	00 20                	add    BYTE PTR [rax],ah
    a0df:	96                   	xchg   esi,eax
    a0e0:	2b 00                	sub    eax,DWORD PTR [rax]
    a0e2:	00 00                	add    BYTE PTR [rax],al
    a0e4:	00 00                	add    BYTE PTR [rax],al
    a0e6:	00 d0                	add    al,dl
    a0e8:	1a 00                	sbb    al,BYTE PTR [rax]
    a0ea:	00 20                	add    BYTE PTR [rax],ah
    a0ec:	c7                   	(bad)
    a0ed:	2b 00                	sub    eax,DWORD PTR [rax]
    a0ef:	00 00                	add    BYTE PTR [rax],al
    a0f1:	00 00                	add    BYTE PTR [rax],al
    a0f3:	00 d0                	add    al,dl
    a0f5:	1a 00                	sbb    al,BYTE PTR [rax]
    a0f7:	00 00                	add    BYTE PTR [rax],al
    a0f9:	00 62 c5             	add    BYTE PTR [rdx-0x3b],ah
    a0fc:	03 00                	add    eax,DWORD PTR [rax]
    a0fe:	00 38                	add    BYTE PTR [rax],bh
    a100:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a103:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a106:	98                   	cwde
    a107:	13 b0 2c 00 00 b9    	adc    esi,DWORD PTR [rax-0x46ffffd4]
    a10d:	1e                   	(bad)
    a10e:	00 00                	add    BYTE PTR [rax],al
    a110:	b1 1e                	mov    cl,0x1e
    a112:	00 00                	add    BYTE PTR [rax],al
    a114:	39 f2                	cmp    edx,esi
    a116:	71 00                	jno    a118 <_end+0x4100>
    a118:	00 74 2c 00          	add    BYTE PTR [rsp+rbp*1+0x0],dh
    a11c:	00 00                	add    BYTE PTR [rax],al
    a11e:	00 00                	add    BYTE PTR [rax],al
    a120:	00 02                	add    BYTE PTR [rdx],al
    a122:	00 d5                	add    ch,dl
    a124:	03 00                	add    eax,DWORD PTR [rax]
    a126:	00 99 10 05 0c 72    	add    BYTE PTR [rcx+0x720c0510],bl
    a12c:	00 00                	add    BYTE PTR [rax],al
    a12e:	db 1e                	fistp  DWORD PTR [rsi]
    a130:	00 00                	add    BYTE PTR [rax],al
    a132:	d9 1e                	fstp   DWORD PTR [rsi]
    a134:	00 00                	add    BYTE PTR [rax],al
    a136:	05 00 72 00 00       	add    eax,0x7200
    a13b:	f0 1e                	lock (bad)
    a13d:	00 00                	add    BYTE PTR [rax],al
    a13f:	ec                   	in     al,dx
    a140:	1e                   	(bad)
    a141:	00 00                	add    BYTE PTR [rax],al
    a143:	07                   	(bad)
    a144:	82                   	(bad)
    a145:	2c 00                	sub    al,0x0
    a147:	00 00                	add    BYTE PTR [rax],al
    a149:	00 00                	add    BYTE PTR [rax],al
    a14b:	00 63 42             	add    BYTE PTR [rbx+0x42],ah
    a14e:	00 00                	add    BYTE PTR [rax],al
    a150:	03 01                	add    eax,DWORD PTR [rcx]
    a152:	55                   	push   rbp
    a153:	04 76                	add    al,0x76
    a155:	f8                   	clc
    a156:	7e 06                	jle    a15e <_end+0x4146>
    a158:	03 01                	add    eax,DWORD PTR [rcx]
    a15a:	54                   	push   rsp
    a15b:	01 32                	add    DWORD PTR [rdx],esi
    a15d:	03 01                	add    eax,DWORD PTR [rcx]
    a15f:	51                   	push   rcx
    a160:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    a163:	03 01                	add    eax,DWORD PTR [rcx]
    a165:	61                   	(bad)
    a166:	06                   	(bad)
    a167:	76 a8                	jbe    a111 <_end+0x40f9>
    a169:	7f a6                	jg     a111 <_end+0x40f9>
    a16b:	08 2e                	or     BYTE PTR [rsi],ch
    a16d:	00 00                	add    BYTE PTR [rax],al
    a16f:	00 1c f2             	add    BYTE PTR [rdx+rsi*8],bl
    a172:	71 00                	jno    a174 <_end+0x415c>
    a174:	00 22                	add    BYTE PTR [rdx],ah
    a176:	2c 00                	sub    al,0x0
    a178:	00 00                	add    BYTE PTR [rax],al
    a17a:	00 00                	add    BYTE PTR [rax],al
    a17c:	00 02                	add    BYTE PTR [rdx],al
    a17e:	00 b5 03 00 00 97    	add    BYTE PTR [rbp-0x68fffffd],dh
    a184:	0c ca                	or     al,0xca
    a186:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    a189:	05 0c 72 00 00       	add    eax,0x720c
    a18e:	05 1f 00 00 01       	add    eax,0x100001f
    a193:	1f                   	(bad)
    a194:	00 00                	add    BYTE PTR [rax],al
    a196:	05 00 72 00 00       	add    eax,0x7200
    a19b:	2a 1f                	sub    bl,BYTE PTR [rdi]
    a19d:	00 00                	add    BYTE PTR [rax],al
    a19f:	26 1f                	es (bad)
    a1a1:	00 00                	add    BYTE PTR [rax],al
    a1a3:	0a 42 2c             	or     al,BYTE PTR [rdx+0x2c]
    a1a6:	00 00                	add    BYTE PTR [rax],al
    a1a8:	00 00                	add    BYTE PTR [rax],al
    a1aa:	00 00                	add    BYTE PTR [rax],al
    a1ac:	5b                   	pop    rbx
    a1ad:	75 00                	jne    a1af <_end+0x4197>
    a1af:	00 9c 4a 00 00 03 01 	add    BYTE PTR [rdx+rcx*2+0x1030000],bl
    a1b6:	55                   	push   rbp
    a1b7:	09 03                	or     DWORD PTR [rbx],eax
    a1b9:	e5 41                	in     eax,0x41
    a1bb:	00 00                	add    BYTE PTR [rax],al
    a1bd:	00 00                	add    BYTE PTR [rax],al
    a1bf:	00 00                	add    BYTE PTR [rax],al
    a1c1:	03 01                	add    eax,DWORD PTR [rcx]
    a1c3:	54                   	push   rsp
    a1c4:	01 31                	add    DWORD PTR [rcx],esi
    a1c6:	03 01                	add    eax,DWORD PTR [rcx]
    a1c8:	51                   	push   rcx
    a1c9:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a1cc:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a1cf:	76 f8                	jbe    a1c9 <_end+0x41b1>
    a1d1:	7e 06                	jle    a1d9 <_end+0x41c1>
    a1d3:	00 07                	add    BYTE PTR [rdi],al
    a1d5:	58                   	pop    rax
    a1d6:	2e 00 00             	cs add BYTE PTR [rax],al
    a1d9:	00 00                	add    BYTE PTR [rax],al
    a1db:	00 00                	add    BYTE PTR [rax],al
    a1dd:	5b                   	pop    rbx
    a1de:	75 00                	jne    a1e0 <_end+0x41c8>
    a1e0:	00 03                	add    BYTE PTR [rbx],al
    a1e2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a1e5:	03 e5                	add    esp,ebp
    a1e7:	41 00 00             	add    BYTE PTR [r8],al
    a1ea:	00 00                	add    BYTE PTR [rax],al
    a1ec:	00 00                	add    BYTE PTR [rax],al
    a1ee:	03 01                	add    eax,DWORD PTR [rcx]
    a1f0:	54                   	push   rsp
    a1f1:	01 31                	add    DWORD PTR [rcx],esi
    a1f3:	03 01                	add    eax,DWORD PTR [rcx]
    a1f5:	51                   	push   rcx
    a1f6:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    a1f9:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
    a1fc:	76 f8                	jbe    a1f6 <_end+0x41de>
    a1fe:	7e 06                	jle    a206 <_end+0x41ee>
    a200:	00 00                	add    BYTE PTR [rax],al
    a202:	1c e1                	sbb    al,0xe1
    a204:	45 00 00             	add    BYTE PTR [r8],r8b
    a207:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    a208:	2c 00                	sub    al,0x0
    a20a:	00 00                	add    BYTE PTR [rax],al
    a20c:	00 00                	add    BYTE PTR [rax],al
    a20e:	00 01                	add    BYTE PTR [rcx],al
    a210:	00 e5                	add    ch,ah
    a212:	03 00                	add    eax,DWORD PTR [rax]
    a214:	00 9e 31 e7 4b 00    	add    BYTE PTR [rsi+0x4be731],bl
    a21a:	00 05 0c 46 00 00    	add    BYTE PTR [rip+0x460c],al        # e82c <_end+0x8814>
    a220:	49 1f                	rex.WB (bad)
    a222:	00 00                	add    BYTE PTR [rax],al
    a224:	3d 1f 00 00 05       	cmp    eax,0x500001f
    a229:	00 46 00             	add    BYTE PTR [rsi+0x0],al
    a22c:	00 93 1f 00 00 83    	add    BYTE PTR [rbx-0x7cffffe1],dl
    a232:	1f                   	(bad)
    a233:	00 00                	add    BYTE PTR [rax],al
    a235:	05 f4 45 00 00       	add    eax,0x45f4
    a23a:	dc 1f                	fcomp  QWORD PTR [rdi]
    a23c:	00 00                	add    BYTE PTR [rax],al
    a23e:	d4                   	(bad)
    a23f:	1f                   	(bad)
    a240:	00 00                	add    BYTE PTR [rax],al
    a242:	2e e5 03             	cs in  eax,0x3
    a245:	00 00                	add    BYTE PTR [rax],al
    a247:	15 21 46 00 00       	adc    eax,0x4621
    a24c:	0b 20                	or     esp,DWORD PTR [rax]
    a24e:	00 00                	add    BYTE PTR [rax],al
    a250:	ff 1f                	call   FWORD PTR [rdi]
    a252:	00 00                	add    BYTE PTR [rax],al
    a254:	3a 2c 46             	cmp    ch,BYTE PTR [rsi+rax*2]
    a257:	00 00                	add    BYTE PTR [rax],al
    a259:	ff 03                	inc    DWORD PTR [rbx]
    a25b:	00 00                	add    BYTE PTR [rax],al
    a25d:	2f                   	(bad)
    a25e:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    a261:	3b 2d 46 00 00 00    	cmp    ebp,DWORD PTR [rip+0x46]        # a2ad <_end+0x4295>
    a267:	1c 1a                	sbb    al,0x1a
    a269:	72 00                	jb     a26b <_end+0x4253>
    a26b:	00 71 2d             	add    BYTE PTR [rcx+0x2d],dh
	...
    a276:	0a 04 00             	or     al,BYTE PTR [rax+rax*1]
    a279:	00 af 1e 63 4b 00    	add    BYTE PTR [rdi+0x4b631e],ch
    a27f:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 114a8 <_end+0xb490>
    a285:	3c 20                	cmp    al,0x20
    a287:	00 00                	add    BYTE PTR [rax],al
    a289:	36 20 00             	ss and BYTE PTR [rax],al
    a28c:	00 20                	add    BYTE PTR [rax],ah
    a28e:	cc                   	int3
    a28f:	2e 00 00             	cs add BYTE PTR [rax],al
    a292:	00 00                	add    BYTE PTR [rax],al
    a294:	00 00                	add    BYTE PTR [rax],al
    a296:	64 75 00             	fs jne a299 <_end+0x4281>
    a299:	00 00                	add    BYTE PTR [rax],al
    a29b:	19 e1                	sbb    ecx,esp
    a29d:	45 00 00             	add    BYTE PTR [r8],r8b
    a2a0:	7f 2e                	jg     a2d0 <_end+0x42b8>
    a2a2:	00 00                	add    BYTE PTR [rax],al
    a2a4:	00 00                	add    BYTE PTR [rax],al
    a2a6:	00 00                	add    BYTE PTR [rax],al
    a2a8:	01 00                	add    DWORD PTR [rax],eax
    a2aa:	7f 2e                	jg     a2da <_end+0x42c2>
    a2ac:	00 00                	add    BYTE PTR [rax],al
    a2ae:	00 00                	add    BYTE PTR [rax],al
    a2b0:	00 00                	add    BYTE PTR [rax],al
    a2b2:	1f                   	(bad)
    a2b3:	00 00                	add    BYTE PTR [rax],al
    a2b5:	00 00                	add    BYTE PTR [rax],al
    a2b7:	00 00                	add    BYTE PTR [rax],al
    a2b9:	00 01                	add    BYTE PTR [rcx],al
    a2bb:	a8 08                	test   al,0x8
    a2bd:	05 f4 45 00 00       	add    eax,0x45f4
    a2c2:	54                   	push   rsp
    a2c3:	20 00                	and    BYTE PTR [rax],al
    a2c5:	00 52 20             	add    BYTE PTR [rdx+0x20],dl
    a2c8:	00 00                	add    BYTE PTR [rax],al
    a2ca:	05 00 46 00 00       	add    eax,0x4600
    a2cf:	54                   	push   rsp
    a2d0:	20 00                	and    BYTE PTR [rax],al
    a2d2:	00 52 20             	add    BYTE PTR [rdx+0x20],dl
    a2d5:	00 00                	add    BYTE PTR [rax],al
    a2d7:	0b 0c 46             	or     ecx,DWORD PTR [rsi+rax*2]
    a2da:	00 00                	add    BYTE PTR [rax],al
    a2dc:	3b 21                	cmp    esp,DWORD PTR [rcx]
    a2de:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    a2e1:	07                   	(bad)
    a2e2:	9e                   	sahf
    a2e3:	2e 00 00             	cs add BYTE PTR [rax],al
    a2e6:	00 00                	add    BYTE PTR [rax],al
    a2e8:	00 00                	add    BYTE PTR [rax],al
    a2ea:	3f                   	(bad)
    a2eb:	44 00 00             	add    BYTE PTR [rax],r8b
    a2ee:	03 01                	add    eax,DWORD PTR [rcx]
    a2f0:	55                   	push   rbp
    a2f1:	09 03                	or     DWORD PTR [rbx],eax
    a2f3:	f9                   	stc
    a2f4:	41 00 00             	add    BYTE PTR [r8],al
    a2f7:	00 00                	add    BYTE PTR [rax],al
    a2f9:	00 00                	add    BYTE PTR [rax],al
    a2fb:	03 01                	add    eax,DWORD PTR [rcx]
    a2fd:	54                   	push   rsp
    a2fe:	09 03                	or     DWORD PTR [rbx],eax
    a300:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a301:	41 00 00             	add    BYTE PTR [r8],al
    a304:	00 00                	add    BYTE PTR [rax],al
    a306:	00 00                	add    BYTE PTR [rax],al
    a308:	03 01                	add    eax,DWORD PTR [rcx]
    a30a:	51                   	push   rcx
    a30b:	02 08                	add    cl,BYTE PTR [rax]
    a30d:	a9 03 01 52 09       	test   eax,0x9520103
    a312:	03 e8                	add    ebp,eax
    a314:	44 00 00             	add    BYTE PTR [rax],r8b
	...
    a31f:	1c d6                	sbb    al,0xd6
    a321:	71 00                	jno    a323 <_end+0x430b>
    a323:	00 93 2d 00 00 00    	add    BYTE PTR [rbx+0x2d],dl
    a329:	00 00                	add    BYTE PTR [rax],al
    a32b:	00 03                	add    BYTE PTR [rbx],al
    a32d:	00 1a                	add    BYTE PTR [rdx],bl
    a32f:	04 00                	add    al,0x0
    a331:	00 a0 0b 38 4c 00    	add    BYTE PTR [rax+0x4c380b],ah
    a337:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11521 <_end+0xb509>
    a33d:	5f                   	pop    rdi
    a33e:	20 00                	and    BYTE PTR [rax],al
    a340:	00 5d 20             	add    BYTE PTR [rbp+0x20],bl
    a343:	00 00                	add    BYTE PTR [rax],al
    a345:	07                   	(bad)
    a346:	ab                   	stos   DWORD PTR es:[rdi],eax
    a347:	2d 00 00 00 00       	sub    eax,0x0
    a34c:	00 00                	add    BYTE PTR [rax],al
    a34e:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a351:	00 03                	add    BYTE PTR [rbx],al
    a353:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a356:	32 03                	xor    al,BYTE PTR [rbx]
    a358:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a35c:	0d 42 00 00 00       	or     eax,0x42
    a361:	00 00                	add    BYTE PTR [rax],al
    a363:	00 03                	add    BYTE PTR [rbx],al
    a365:	01 61 06             	add    DWORD PTR [rcx+0x6],esp
    a368:	76 a8                	jbe    a312 <_end+0x42fa>
    a36a:	7f a6                	jg     a312 <_end+0x42fa>
    a36c:	08 2e                	or     BYTE PTR [rsi],ch
    a36e:	00 00                	add    BYTE PTR [rax],al
    a370:	09 d6                	or     esi,edx
    a372:	71 00                	jno    a374 <_end+0x435c>
    a374:	00 ab 2d 00 00 00    	add    BYTE PTR [rbx+0x2d],ch
    a37a:	00 00                	add    BYTE PTR [rax],al
    a37c:	00 02                	add    BYTE PTR [rdx],al
    a37e:	00 ab 2d 00 00 00    	add    BYTE PTR [rbx+0x2d],ch
    a384:	00 00                	add    BYTE PTR [rax],al
    a386:	00 1b                	add    BYTE PTR [rbx],bl
    a388:	00 00                	add    BYTE PTR [rax],al
    a38a:	00 00                	add    BYTE PTR [rax],al
    a38c:	00 00                	add    BYTE PTR [rax],al
    a38e:	00 a1 0b 92 4c 00    	add    BYTE PTR [rcx+0x4c920b],ah
    a394:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 1157e <_end+0xb566>
    a39a:	72 20                	jb     a3bc <_end+0x43a4>
    a39c:	00 00                	add    BYTE PTR [rax],al
    a39e:	70 20                	jo     a3c0 <_end+0x43a8>
    a3a0:	00 00                	add    BYTE PTR [rax],al
    a3a2:	07                   	(bad)
    a3a3:	c6                   	(bad)
    a3a4:	2d 00 00 00 00       	sub    eax,0x0
    a3a9:	00 00                	add    BYTE PTR [rax],al
    a3ab:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a3ae:	00 03                	add    BYTE PTR [rbx],al
    a3b0:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a3b3:	32 03                	xor    al,BYTE PTR [rbx]
    a3b5:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a3b9:	2b 42 00             	sub    eax,DWORD PTR [rdx+0x0]
    a3bc:	00 00                	add    BYTE PTR [rax],al
    a3be:	00 00                	add    BYTE PTR [rax],al
    a3c0:	00 03                	add    BYTE PTR [rbx],al
    a3c2:	01 61 03             	add    DWORD PTR [rcx+0x3],esp
    a3c5:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a3c6:	03 2e                	add    ebp,DWORD PTR [rsi]
    a3c8:	00 00                	add    BYTE PTR [rax],al
    a3ca:	1c d6                	sbb    al,0xd6
    a3cc:	71 00                	jno    a3ce <_end+0x43b6>
    a3ce:	00 c6                	add    dh,al
    a3d0:	2d 00 00 00 00       	sub    eax,0x0
    a3d5:	00 00                	add    BYTE PTR [rax],al
    a3d7:	02 00                	add    al,BYTE PTR [rax]
    a3d9:	25 04 00 00 a2       	and    eax,0xa2000004
    a3de:	0b f3                	or     esi,ebx
    a3e0:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    a3e3:	05 e4 71 00 00       	add    eax,0x71e4
    a3e8:	85 20                	test   DWORD PTR [rax],esp
    a3ea:	00 00                	add    BYTE PTR [rax],al
    a3ec:	83 20 00             	and    DWORD PTR [rax],0x0
    a3ef:	00 07                	add    BYTE PTR [rdi],al
    a3f1:	f2 2d 00 00 00 00    	repnz sub eax,0x0
    a3f7:	00 00                	add    BYTE PTR [rax],al
    a3f9:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a3fc:	00 03                	add    BYTE PTR [rbx],al
    a3fe:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a401:	32 03                	xor    al,BYTE PTR [rbx]
    a403:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a407:	49                   	rex.WB
    a408:	42 00 00             	rex.X add BYTE PTR [rax],al
    a40b:	00 00                	add    BYTE PTR [rax],al
    a40d:	00 00                	add    BYTE PTR [rax],al
    a40f:	03 01                	add    eax,DWORD PTR [rcx]
    a411:	61                   	(bad)
    a412:	16                   	(bad)
    a413:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    a414:	03 2e                	add    ebp,DWORD PTR [rsi]
    a416:	76 a8                	jbe    a3c0 <_end+0x43a8>
    a418:	7f a6                	jg     a3c0 <_end+0x43a8>
    a41a:	08 2e                	or     BYTE PTR [rsi],ch
    a41c:	1b a4 2e 08 00 00 00 	sbb    esp,DWORD PTR [rsi+rbp*1+0x8]
    a423:	00 00                	add    BYTE PTR [rax],al
    a425:	00 59 40             	add    BYTE PTR [rcx+0x40],bl
    a428:	1e                   	(bad)
    a429:	00 00                	add    BYTE PTR [rax],al
    a42b:	0a e1                	or     ah,cl
    a42d:	2a 00                	sub    al,BYTE PTR [rax]
    a42f:	00 00                	add    BYTE PTR [rax],al
    a431:	00 00                	add    BYTE PTR [rax],al
    a433:	00 5a 2f             	add    BYTE PTR [rdx+0x2f],bl
    a436:	00 00                	add    BYTE PTR [rax],al
    a438:	0a 4d 00             	or     cl,BYTE PTR [rbp+0x0]
    a43b:	00 03                	add    BYTE PTR [rbx],al
    a43d:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a440:	3a 00                	cmp    al,BYTE PTR [rax]
    a442:	0a f1                	or     dh,cl
    a444:	2a 00                	sub    al,BYTE PTR [rax]
    a446:	00 00                	add    BYTE PTR [rax],al
    a448:	00 00                	add    BYTE PTR [rax],al
    a44a:	00 ba 42 00 00 2d    	add    BYTE PTR [rdx+0x2d000042],bh
    a450:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a453:	03 01                	add    eax,DWORD PTR [rcx]
    a455:	55                   	push   rbp
    a456:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a45a:	01 54 02 7f          	add    DWORD PTR [rdx+rax*1+0x7f],edx
    a45e:	00 03                	add    BYTE PTR [rbx],al
    a460:	01 51 01             	add    DWORD PTR [rcx+0x1],edx
    a463:	32 00                	xor    al,BYTE PTR [rax]
    a465:	0a 28                	or     ch,BYTE PTR [rax]
    a467:	2b 00                	sub    eax,DWORD PTR [rax]
    a469:	00 00                	add    BYTE PTR [rax],al
    a46b:	00 00                	add    BYTE PTR [rax],al
    a46d:	00 47 42             	add    BYTE PTR [rdi+0x42],al
    a470:	00 00                	add    BYTE PTR [rax],al
    a472:	4d                   	rex.WRB
    a473:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a476:	03 01                	add    eax,DWORD PTR [rcx]
    a478:	55                   	push   rbp
    a479:	05 0c 40 42 0f       	add    eax,0xf42400c
    a47e:	00 03                	add    BYTE PTR [rbx],al
    a480:	01 54 01 34          	add    DWORD PTR [rcx+rax*1+0x34],edx
    a484:	00 0a                	add    BYTE PTR [rdx],cl
    a486:	4d 2b 00             	sub    r8,QWORD PTR [r8]
    a489:	00 00                	add    BYTE PTR [rax],al
    a48b:	00 00                	add    BYTE PTR [rax],al
    a48d:	00 47 42             	add    BYTE PTR [rdi+0x42],al
    a490:	00 00                	add    BYTE PTR [rax],al
    a492:	6c                   	ins    BYTE PTR es:[rdi],dx
    a493:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a496:	03 01                	add    eax,DWORD PTR [rcx]
    a498:	55                   	push   rbp
    a499:	04 76                	add    al,0x76
    a49b:	80 7f 06 03          	cmp    BYTE PTR [rdi+0x6],0x3
    a49f:	01 54 01 38          	add    DWORD PTR [rcx+rax*1+0x38],edx
    a4a3:	00 0a                	add    BYTE PTR [rdx],cl
    a4a5:	22 2c 00             	and    ch,BYTE PTR [rax+rax*1]
    a4a8:	00 00                	add    BYTE PTR [rax],al
    a4aa:	00 00                	add    BYTE PTR [rax],al
    a4ac:	00 84 42 00 00 85 4d 	add    BYTE PTR [rdx+rax*2+0x4d850000],al
    a4b3:	00 00                	add    BYTE PTR [rax],al
    a4b5:	03 01                	add    eax,DWORD PTR [rcx]
    a4b7:	55                   	push   rbp
    a4b8:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a4bb:	7f 00                	jg     a4bd <_end+0x44a5>
    a4bd:	27                   	(bad)
    a4be:	14 2d                	adc    al,0x2d
    a4c0:	00 00                	add    BYTE PTR [rax],al
    a4c2:	00 00                	add    BYTE PTR [rax],al
    a4c4:	00 00                	add    BYTE PTR [rax],al
    a4c6:	01 30                	add    DWORD PTR [rax],esi
    a4c8:	0a fb                	or     bh,bl
    a4ca:	2d 00 00 00 00       	sub    eax,0x0
    a4cf:	00 00                	add    BYTE PTR [rax],al
    a4d1:	f5                   	cmc
    a4d2:	42 00 00             	rex.X add BYTE PTR [rax],al
    a4d5:	aa                   	stos   BYTE PTR es:[rdi],al
    a4d6:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a4d9:	03 01                	add    eax,DWORD PTR [rcx]
    a4db:	55                   	push   rbp
    a4dc:	04 76                	add    al,0x76
    a4de:	90                   	nop
    a4df:	7f 06                	jg     a4e7 <_end+0x44cf>
    a4e1:	00 8b 01 2b 2e 00    	add    BYTE PTR [rbx+0x2e2b01],cl
    a4e7:	00 00                	add    BYTE PTR [rax],al
    a4e9:	00 00                	add    BYTE PTR [rax],al
    a4eb:	00 f5                	add    ch,dh
    a4ed:	42 00 00             	rex.X add BYTE PTR [rax],al
    a4f0:	ca 4d 00             	retf   0x4d
    a4f3:	00 03                	add    BYTE PTR [rbx],al
    a4f5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a4f8:	91                   	xchg   ecx,eax
    a4f9:	70 09                	jo     a504 <_end+0x44ec>
    a4fb:	e0 1a                	loopne a517 <_end+0x44ff>
    a4fd:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    a500:	06                   	(bad)
    a501:	00 27                	add    BYTE PTR [rdi],ah
    a503:	2e 2e 00 00          	cs cs add BYTE PTR [rax],al
    a507:	00 00                	add    BYTE PTR [rax],al
    a509:	00 00                	add    BYTE PTR [rax],al
    a50b:	01 30                	add    DWORD PTR [rax],esi
    a50d:	0a 3b                	or     bh,BYTE PTR [rbx]
    a50f:	2e 00 00             	cs add BYTE PTR [rax],al
    a512:	00 00                	add    BYTE PTR [rax],al
    a514:	00 00                	add    BYTE PTR [rax],al
    a516:	84 42 00             	test   BYTE PTR [rdx+0x0],al
    a519:	00 ed                	add    ch,ch
    a51b:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    a51e:	03 01                	add    eax,DWORD PTR [rcx]
    a520:	55                   	push   rbp
    a521:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a525:	0a bd 2e 00 00 00    	or     bh,BYTE PTR [rbp+0x2e]
    a52b:	00 00                	add    BYTE PTR [rax],al
    a52d:	00 3f                	add    BYTE PTR [rdi],bh
    a52f:	44 00 00             	add    BYTE PTR [rax],r8b
    a532:	2c 4e                	sub    al,0x4e
    a534:	00 00                	add    BYTE PTR [rax],al
    a536:	03 01                	add    eax,DWORD PTR [rcx]
    a538:	55                   	push   rbp
    a539:	09 03                	or     DWORD PTR [rbx],eax
    a53b:	8b 41 00             	mov    eax,DWORD PTR [rcx+0x0]
    a53e:	00 00                	add    BYTE PTR [rax],al
    a540:	00 00                	add    BYTE PTR [rax],al
    a542:	00 03                	add    BYTE PTR [rbx],al
    a544:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a548:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a549:	41 00 00             	add    BYTE PTR [r8],al
    a54c:	00 00                	add    BYTE PTR [rax],al
    a54e:	00 00                	add    BYTE PTR [rax],al
    a550:	03 01                	add    eax,DWORD PTR [rcx]
    a552:	51                   	push   rcx
    a553:	02 08                	add    cl,BYTE PTR [rax]
    a555:	5e                   	pop    rsi
    a556:	03 01                	add    eax,DWORD PTR [rcx]
    a558:	52                   	push   rdx
    a559:	09 03                	or     DWORD PTR [rbx],eax
    a55b:	b0 44                	mov    al,0x44
    a55d:	00 00                	add    BYTE PTR [rax],al
    a55f:	00 00                	add    BYTE PTR [rax],al
    a561:	00 00                	add    BYTE PTR [rax],al
    a563:	00 20                	add    BYTE PTR [rax],ah
    a565:	c2 2e 00             	ret    0x2e
    a568:	00 00                	add    BYTE PTR [rax],al
    a56a:	00 00                	add    BYTE PTR [rax],al
    a56c:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    a56f:	00 00                	add    BYTE PTR [rax],al
    a571:	00 25 ee 22 00 00    	add    BYTE PTR [rip+0x22ee],ah        # c865 <_end+0x684d>
    a577:	4a                   	rex.WX
    a578:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a57b:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a57e:	00 00                	add    BYTE PTR [rax],al
    a580:	36 00 13             	ss add BYTE PTR [rbx],dl
    a583:	3a 4e 00             	cmp    cl,BYTE PTR [rsi+0x0]
    a586:	00 0d b0 2c 00 00    	add    BYTE PTR [rip+0x2cb0],cl        # d23c <_end+0x7224>
    a58c:	30 90 1c 00 00 62    	xor    BYTE PTR [rax+0x6200001c],dl
    a592:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a595:	03 6c 4e 00          	add    ebp,DWORD PTR [rsi+rcx*2+0x0]
    a599:	00 31                	add    BYTE PTR [rcx],dh
    a59b:	1e                   	(bad)
    a59c:	1e                   	(bad)
    a59d:	00 00                	add    BYTE PTR [rax],al
    a59f:	ce                   	(bad)
    a5a0:	3f                   	(bad)
    a5a1:	00 00                	add    BYTE PTR [rax],al
    a5a3:	00 30                	add    BYTE PTR [rax],dh
    a5a5:	3c 1b                	cmp    al,0x1b
    a5a7:	00 00                	add    BYTE PTR [rax],al
    a5a9:	7a 4e                	jp     a5f9 <_end+0x45e1>
    a5ab:	00 00                	add    BYTE PTR [rax],al
    a5ad:	03 84 4e 00 00 31 1e 	add    eax,DWORD PTR [rsi+rcx*2+0x1e310000]
    a5b4:	1e                   	(bad)
    a5b5:	00 00                	add    BYTE PTR [rax],al
    a5b7:	f6 41 00 00          	test   BYTE PTR [rcx+0x0],0x0
    a5bb:	00 22                	add    BYTE PTR [rdx],ah
    a5bd:	da 1b                	ficomp DWORD PTR [rbx]
    a5bf:	00 00                	add    BYTE PTR [rax],al
    a5c1:	32 5c 1f 00          	xor    bl,BYTE PTR [rdi+rbx*1+0x0]
    a5c5:	00 c6                	add    dh,al
    a5c7:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a5ca:	11 b7 28 00 00 a6    	adc    DWORD PTR [rdi-0x59ffffd8],esi
    a5d0:	1a 00                	sbb    al,BYTE PTR [rax]
    a5d2:	00 11                	add    BYTE PTR [rcx],dl
    a5d4:	ca 22 00             	retf   0x22
    a5d7:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a5da:	00 00                	add    BYTE PTR [rax],al
    a5dc:	11 d0                	adc    eax,edx
    a5de:	22 00                	and    al,BYTE PTR [rax]
    a5e0:	00 14 18             	add    BYTE PTR [rax+rbx*1],dl
    a5e3:	00 00                	add    BYTE PTR [rax],al
    a5e5:	2d 3d 0f 00 00       	sub    eax,0xf3d
    a5ea:	75 04                	jne    a5f0 <_end+0x45d8>
    a5ec:	32 84 4e 00 00 2d 3a 	xor    al,BYTE PTR [rsi+rcx*2+0x3a2d0000]
    a5f3:	17                   	(bad)
    a5f4:	00 00                	add    BYTE PTR [rax],al
    a5f6:	76 04                	jbe    a5fc <_end+0x45e4>
    a5f8:	24 84                	and    al,0x84
    a5fa:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    a5fd:	00 4a c6             	add    BYTE PTR [rdx-0x3a],cl
    a600:	1e                   	(bad)
    a601:	00 00                	add    BYTE PTR [rax],al
    a603:	43 74 23             	rex.XB je a629 <_end+0x4611>
    a606:	00 00                	add    BYTE PTR [rax],al
    a608:	20 26                	and    BYTE PTR [rsi],ah
    a60a:	00 00                	add    BYTE PTR [rax],al
    a60c:	00 00                	add    BYTE PTR [rax],al
    a60e:	00 00                	add    BYTE PTR [rax],al
    a610:	53                   	push   rbx
    a611:	04 00                	add    al,0x0
    a613:	00 00                	add    BYTE PTR [rax],al
    a615:	00 00                	add    BYTE PTR [rax],al
    a617:	00 01                	add    BYTE PTR [rcx],al
    a619:	9c                   	pushf
    a61a:	46 52                	rex.RX push rdx
    a61c:	00 00                	add    BYTE PTR [rax],al
    a61e:	23 b7 2b 00 00 43    	and    esi,DWORD PTR [rdi+0x4300002b]
    a624:	1b 8e 2c 00 00 a4    	sbb    ecx,DWORD PTR [rsi-0x5bffffd4]
    a62a:	20 00                	and    BYTE PTR [rax],al
    a62c:	00 96 20 00 00 23    	add    BYTE PTR [rsi+0x23000020],dl
    a632:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    a635:	00 43 28             	add    BYTE PTR [rbx+0x28],al
    a638:	49                   	rex.WB
    a639:	40 00 00             	rex add BYTE PTR [rax],al
    a63c:	e1 20                	loope  a65e <_end+0x4646>
    a63e:	00 00                	add    BYTE PTR [rax],al
    a640:	d9 20                	fldenv [rax]
    a642:	00 00                	add    BYTE PTR [rax],al
    a644:	23 09                	and    ecx,DWORD PTR [rcx]
    a646:	0d 00 00 43 3c       	or     eax,0x3c430000
    a64b:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    a64c:	41 00 00             	add    BYTE PTR [r8],al
    a64f:	11 21                	adc    DWORD PTR [rcx],esp
    a651:	00 00                	add    BYTE PTR [rax],al
    a653:	01 21                	add    DWORD PTR [rcx],esp
    a655:	00 00                	add    BYTE PTR [rax],al
    a657:	4b cd 03             	rex.WXB int 0x3
    a65a:	00 00                	add    BYTE PTR [rax],al
    a65c:	56                   	push   rsi
    a65d:	52                   	push   rdx
    a65e:	00 00                	add    BYTE PTR [rax],al
    a660:	09 03                	or     DWORD PTR [rbx],eax
    a662:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a667:	00 00                	add    BYTE PTR [rax],al
    a669:	00 4c 94 05          	add    BYTE PTR [rsp+rdx*4+0x5],cl
    a66d:	00 00                	add    BYTE PTR [rax],al
    a66f:	46 0d 51 41 00 00    	rex.RX or eax,0x4151
    a675:	03 76 b0             	add    esi,DWORD PTR [rsi-0x50]
    a678:	7f 1f                	jg     a699 <_end+0x4681>
    a67a:	7b 27                	jnp    a6a3 <_end+0x468b>
    a67c:	00 00                	add    BYTE PTR [rax],al
    a67e:	4c 0b 35 00 00 00 7e 	or     r14,QWORD PTR [rip+0x7e000000]        # 7e00a685 <_end+0x7e00466d>
    a685:	21 00                	and    DWORD PTR [rax],eax
    a687:	00 6e 21             	add    BYTE PTR [rsi+0x21],ch
    a68a:	00 00                	add    BYTE PTR [rax],al
    a68c:	16                   	(bad)
    a68d:	76 26                	jbe    a6b5 <_end+0x469d>
    a68f:	00 00                	add    BYTE PTR [rax],al
    a691:	00 00                	add    BYTE PTR [rax],al
    a693:	00 00                	add    BYTE PTR [rax],al
    a695:	2a 00                	sub    al,BYTE PTR [rax]
    a697:	00 00                	add    BYTE PTR [rax],al
    a699:	00 00                	add    BYTE PTR [rax],al
    a69b:	00 00                	add    BYTE PTR [rax],al
    a69d:	8f                   	(bad)
    a69e:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a6a1:	2a 6a 00             	sub    ch,BYTE PTR [rdx+0x0]
    a6a4:	48 0e                	rex.W (bad)
    a6a6:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    a6a7:	21 00                	and    DWORD PTR [rax],eax
    a6a9:	00 c6                	add    dh,al
    a6ab:	21 00                	and    DWORD PTR [rax],eax
    a6ad:	00 c4                	add    ah,al
    a6af:	21 00                	and    DWORD PTR [rax],eax
    a6b1:	00 07                	add    BYTE PTR [rdi],al
    a6b3:	9b                   	fwait
    a6b4:	26 00 00             	es add BYTE PTR [rax],al
    a6b7:	00 00                	add    BYTE PTR [rax],al
    a6b9:	00 00                	add    BYTE PTR [rax],al
    a6bb:	9b                   	fwait
    a6bc:	42 00 00             	rex.X add BYTE PTR [rax],al
    a6bf:	03 01                	add    eax,DWORD PTR [rcx]
    a6c1:	55                   	push   rbp
    a6c2:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a6c6:	00 62 e6             	add    BYTE PTR [rdx-0x1a],ah
    a6c9:	02 00                	add    al,BYTE PTR [rax]
    a6cb:	00 f9                	add    cl,bh
    a6cd:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    a6d0:	2a 69 00             	sub    ch,BYTE PTR [rcx+0x0]
    a6d3:	50                   	push   rax
    a6d4:	13 b0 2c 00 00 d1    	adc    esi,DWORD PTR [rax-0x2effffd4]
    a6da:	21 00                	and    DWORD PTR [rax],eax
    a6dc:	00 cd                	add    ch,cl
    a6de:	21 00                	and    DWORD PTR [rax],eax
    a6e0:	00 39                	add    BYTE PTR [rcx],bh
    a6e2:	f2 71 00             	bnd jno a6e5 <_end+0x46cd>
    a6e5:	00 fa                	add    dl,bh
    a6e7:	26 00 00             	es add BYTE PTR [rax],al
    a6ea:	00 00                	add    BYTE PTR [rax],al
    a6ec:	00 00                	add    BYTE PTR [rax],al
    a6ee:	02 00                	add    al,BYTE PTR [rax]
    a6f0:	f6 02 00             	test   BYTE PTR [rdx],0x0
    a6f3:	00 51 10             	add    BYTE PTR [rcx+0x10],dl
    a6f6:	05 0c 72 00 00       	add    eax,0x720c
    a6fb:	e3 21                	jrcxz  a71e <_end+0x4706>
    a6fd:	00 00                	add    BYTE PTR [rax],al
    a6ff:	e1 21                	loope  a722 <_end+0x470a>
    a701:	00 00                	add    BYTE PTR [rax],al
    a703:	05 00 72 00 00       	add    eax,0x7200
    a708:	f8                   	clc
    a709:	21 00                	and    DWORD PTR [rax],eax
    a70b:	00 f4                	add    ah,dh
    a70d:	21 00                	and    DWORD PTR [rax],eax
    a70f:	00 07                	add    BYTE PTR [rdi],al
    a711:	0a 27                	or     ah,BYTE PTR [rdi]
    a713:	00 00                	add    BYTE PTR [rax],al
    a715:	00 00                	add    BYTE PTR [rax],al
    a717:	00 00                	add    BYTE PTR [rax],al
    a719:	63 42 00             	movsxd eax,DWORD PTR [rdx+0x0]
    a71c:	00 03                	add    BYTE PTR [rbx],al
    a71e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    a721:	7d 00                	jge    a723 <_end+0x470b>
    a723:	03 01                	add    eax,DWORD PTR [rcx]
    a725:	54                   	push   rsp
    a726:	01 32                	add    DWORD PTR [rdx],esi
    a728:	03 01                	add    eax,DWORD PTR [rcx]
    a72a:	51                   	push   rcx
    a72b:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    a72e:	00 00                	add    BYTE PTR [rax],al
    a730:	00 09                	add    BYTE PTR [rcx],cl
    a732:	f2 71 00             	bnd jno a735 <_end+0x471d>
    a735:	00 a0 26 00 00 00    	add    BYTE PTR [rax+0x26],ah
    a73b:	00 00                	add    BYTE PTR [rax],al
    a73d:	00 03                	add    BYTE PTR [rbx],al
    a73f:	00 a0 26 00 00 00    	add    BYTE PTR [rax+0x26],ah
    a745:	00 00                	add    BYTE PTR [rax],al
    a747:	00 19                	add    BYTE PTR [rcx],bl
    a749:	00 00                	add    BYTE PTR [rax],al
    a74b:	00 00                	add    BYTE PTR [rax],al
    a74d:	00 00                	add    BYTE PTR [rax],al
    a74f:	00 4e 0c             	add    BYTE PTR [rsi+0xc],cl
    a752:	64 50                	fs push rax
    a754:	00 00                	add    BYTE PTR [rax],al
    a756:	05 0c 72 00 00       	add    eax,0x720c
    a75b:	09 22                	or     DWORD PTR [rdx],esp
    a75d:	00 00                	add    BYTE PTR [rax],al
    a75f:	07                   	(bad)
    a760:	22 00                	and    al,BYTE PTR [rax]
    a762:	00 05 00 72 00 00    	add    BYTE PTR [rip+0x7200],al        # 11968 <_end+0xb950>
    a768:	1c 22                	sbb    al,0x22
    a76a:	00 00                	add    BYTE PTR [rax],al
    a76c:	1a 22                	sbb    ah,BYTE PTR [rdx]
    a76e:	00 00                	add    BYTE PTR [rax],al
    a770:	07                   	(bad)
    a771:	b9 26 00 00 00       	mov    ecx,0x26
    a776:	00 00                	add    BYTE PTR [rax],al
    a778:	00 5b 75             	add    BYTE PTR [rbx+0x75],bl
    a77b:	00 00                	add    BYTE PTR [rax],al
    a77d:	03 01                	add    eax,DWORD PTR [rcx]
    a77f:	55                   	push   rbp
    a780:	09 03                	or     DWORD PTR [rbx],eax
    a782:	90                   	nop
    a783:	41 00 00             	add    BYTE PTR [r8],al
    a786:	00 00                	add    BYTE PTR [rax],al
    a788:	00 00                	add    BYTE PTR [rax],al
    a78a:	03 01                	add    eax,DWORD PTR [rcx]
    a78c:	54                   	push   rsp
    a78d:	01 31                	add    DWORD PTR [rcx],esi
    a78f:	03 01                	add    eax,DWORD PTR [rcx]
    a791:	51                   	push   rcx
    a792:	01 49 03             	add    DWORD PTR [rcx+0x3],ecx
    a795:	01 52 02             	add    DWORD PTR [rdx+0x2],edx
    a798:	7d 00                	jge    a79a <_end+0x4782>
    a79a:	00 00                	add    BYTE PTR [rax],al
    a79c:	1c d6                	sbb    al,0xd6
    a79e:	71 00                	jno    a7a0 <_end+0x4788>
    a7a0:	00 35 27 00 00 00    	add    BYTE PTR [rip+0x27],dh        # a7cd <_end+0x47b5>
    a7a6:	00 00                	add    BYTE PTR [rax],al
    a7a8:	00 01                	add    BYTE PTR [rcx],al
    a7aa:	00 06                	add    BYTE PTR [rsi],al
    a7ac:	03 00                	add    eax,DWORD PTR [rax]
    a7ae:	00 57 0b             	add    BYTE PTR [rdi+0xb],dl
    a7b1:	b7 50                	mov    bh,0x50
    a7b3:	00 00                	add    BYTE PTR [rax],al
    a7b5:	05 e4 71 00 00       	add    eax,0x71e4
    a7ba:	26 22 00             	es and al,BYTE PTR [rax]
    a7bd:	00 24 22             	add    BYTE PTR [rdx+riz*1],ah
    a7c0:	00 00                	add    BYTE PTR [rax],al
    a7c2:	07                   	(bad)
    a7c3:	54                   	push   rsp
    a7c4:	27                   	(bad)
    a7c5:	00 00                	add    BYTE PTR [rax],al
    a7c7:	00 00                	add    BYTE PTR [rax],al
    a7c9:	00 00                	add    BYTE PTR [rax],al
    a7cb:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a7ce:	00 03                	add    BYTE PTR [rbx],al
    a7d0:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a7d3:	32 03                	xor    al,BYTE PTR [rbx]
    a7d5:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a7d9:	b1 41                	mov    cl,0x41
    a7db:	00 00                	add    BYTE PTR [rax],al
    a7dd:	00 00                	add    BYTE PTR [rax],al
    a7df:	00 00                	add    BYTE PTR [rax],al
    a7e1:	03 01                	add    eax,DWORD PTR [rcx]
    a7e3:	61                   	(bad)
    a7e4:	08 76 90             	or     BYTE PTR [rsi-0x70],dh
    a7e7:	7f a6                	jg     a78f <_end+0x4777>
    a7e9:	04 35                	add    al,0x35
    a7eb:	a8 2e                	test   al,0x2e
    a7ed:	00 00                	add    BYTE PTR [rax],al
    a7ef:	1c 74                	sbb    al,0x74
    a7f1:	45 00 00             	add    BYTE PTR [r8],r8b
    a7f4:	54                   	push   rsp
    a7f5:	27                   	(bad)
    a7f6:	00 00                	add    BYTE PTR [rax],al
    a7f8:	00 00                	add    BYTE PTR [rax],al
    a7fa:	00 00                	add    BYTE PTR [rax],al
    a7fc:	02 00                	add    al,BYTE PTR [rax]
    a7fe:	11 03                	adc    DWORD PTR [rbx],eax
    a800:	00 00                	add    BYTE PTR [rax],al
    a802:	58                   	pop    rax
    a803:	45 60                	rex.RB (bad)
    a805:	51                   	push   rcx
    a806:	00 00                	add    BYTE PTR [rax],al
    a808:	05 93 45 00 00       	add    eax,0x4593
    a80d:	3f                   	(bad)
    a80e:	22 00                	and    al,BYTE PTR [rax]
    a810:	00 37                	add    BYTE PTR [rdi],dh
    a812:	22 00                	and    al,BYTE PTR [rax]
    a814:	00 05 87 45 00 00    	add    BYTE PTR [rip+0x4587],al        # eda1 <_end+0x8d89>
    a81a:	64 22 00             	and    al,BYTE PTR fs:[rax]
    a81d:	00 60 22             	add    BYTE PTR [rax+0x22],ah
    a820:	00 00                	add    BYTE PTR [rax],al
    a822:	2e 11 03             	cs adc DWORD PTR [rbx],eax
    a825:	00 00                	add    BYTE PTR [rax],al
    a827:	15 a8 45 00 00       	adc    eax,0x45a8
    a82c:	87 22                	xchg   DWORD PTR [rdx],esp
    a82e:	00 00                	add    BYTE PTR [rax],al
    a830:	79 22                	jns    a854 <_end+0x483c>
    a832:	00 00                	add    BYTE PTR [rax],al
    a834:	3a b3 45 00 00 1c    	cmp    dh,BYTE PTR [rbx+0x1c000045]
    a83a:	03 00                	add    eax,DWORD PTR [rax]
    a83c:	00 2e                	add    BYTE PTR [rsi],ch
    a83e:	51                   	push   rcx
    a83f:	00 00                	add    BYTE PTR [rax],al
    a841:	15 b4 45 00 00       	adc    eax,0x45b4
    a846:	d4                   	(bad)
    a847:	22 00                	and    al,BYTE PTR [rax]
    a849:	00 c8                	add    al,cl
    a84b:	22 00                	and    al,BYTE PTR [rax]
    a84d:	00 4d bd             	add    BYTE PTR [rbp-0x43],cl
    a850:	45 00 00             	add    BYTE PTR [r8],r8b
    a853:	2c 03                	sub    al,0x3
    a855:	00 00                	add    BYTE PTR [rax],al
    a857:	15 be 45 00 00       	adc    eax,0x45be
    a85c:	0a 23                	or     ah,BYTE PTR [rbx]
    a85e:	00 00                	add    BYTE PTR [rax],al
    a860:	04 23                	add    al,0x23
    a862:	00 00                	add    BYTE PTR [rax],al
    a864:	00 00                	add    BYTE PTR [rax],al
    a866:	39 1a                	cmp    DWORD PTR [rdx],ebx
    a868:	72 00                	jb     a86a <_end+0x4852>
    a86a:	00 c3                	add    bl,al
    a86c:	29 00                	sub    DWORD PTR [rax],eax
    a86e:	00 00                	add    BYTE PTR [rax],al
    a870:	00 00                	add    BYTE PTR [rax],al
    a872:	00 00                	add    BYTE PTR [rax],al
    a874:	00 55 03             	add    BYTE PTR [rbp+0x3],dl
    a877:	00 00                	add    BYTE PTR [rax],al
    a879:	bc 1e 05 23 72       	mov    esp,0x7223051e
    a87e:	00 00                	add    BYTE PTR [rax],al
    a880:	50                   	push   rax
    a881:	23 00                	and    eax,DWORD PTR [rax]
    a883:	00 4a 23             	add    BYTE PTR [rdx+0x23],cl
    a886:	00 00                	add    BYTE PTR [rax],al
    a888:	20 49 2a             	and    BYTE PTR [rcx+0x2a],cl
    a88b:	00 00                	add    BYTE PTR [rax],al
    a88d:	00 00                	add    BYTE PTR [rax],al
    a88f:	00 00                	add    BYTE PTR [rax],al
    a891:	64 75 00             	fs jne a894 <_end+0x487c>
    a894:	00 00                	add    BYTE PTR [rax],al
    a896:	00 00                	add    BYTE PTR [rax],al
    a898:	1c d6                	sbb    al,0xd6
    a89a:	71 00                	jno    a89c <_end+0x4884>
    a89c:	00 d1                	add    cl,dl
    a89e:	29 00                	sub    DWORD PTR [rax],eax
    a8a0:	00 00                	add    BYTE PTR [rax],al
    a8a2:	00 00                	add    BYTE PTR [rax],al
    a8a4:	00 03                	add    BYTE PTR [rbx],al
    a8a6:	00 65 03             	add    BYTE PTR [rbp+0x3],ah
    a8a9:	00 00                	add    BYTE PTR [rax],al
    a8ab:	58                   	pop    rax
    a8ac:	0b a7 51 00 00 05    	or     esp,DWORD PTR [rdi+0x5000051]
    a8b2:	e4 71                	in     al,0x71
    a8b4:	00 00                	add    BYTE PTR [rax],al
    a8b6:	68 23 00 00 66       	push   0x66000023
    a8bb:	23 00                	and    eax,DWORD PTR [rax]
    a8bd:	00 07                	add    BYTE PTR [rdi],al
    a8bf:	eb 29                	jmp    a8ea <_end+0x48d2>
    a8c1:	00 00                	add    BYTE PTR [rax],al
    a8c3:	00 00                	add    BYTE PTR [rax],al
    a8c5:	00 00                	add    BYTE PTR [rax],al
    a8c7:	d9 42 00             	fld    DWORD PTR [rdx+0x0]
    a8ca:	00 03                	add    BYTE PTR [rbx],al
    a8cc:	01 55 01             	add    DWORD PTR [rbp+0x1],edx
    a8cf:	32 03                	xor    al,BYTE PTR [rbx]
    a8d1:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a8d5:	cb                   	retf
    a8d6:	41 00 00             	add    BYTE PTR [r8],al
    a8d9:	00 00                	add    BYTE PTR [rax],al
    a8db:	00 00                	add    BYTE PTR [rax],al
    a8dd:	00 00                	add    BYTE PTR [rax],al
    a8df:	0a 76 26             	or     dh,BYTE PTR [rsi+0x26]
    a8e2:	00 00                	add    BYTE PTR [rax],al
    a8e4:	00 00                	add    BYTE PTR [rax],al
    a8e6:	00 00                	add    BYTE PTR [rax],al
    a8e8:	ba 42 00 00 cb       	mov    edx,0xcb000042
    a8ed:	51                   	push   rcx
    a8ee:	00 00                	add    BYTE PTR [rax],al
    a8f0:	03 01                	add    eax,DWORD PTR [rcx]
    a8f2:	55                   	push   rbp
    a8f3:	02 7c 00 03          	add    bh,BYTE PTR [rax+rax*1+0x3]
    a8f7:	01 54 03 a3          	add    DWORD PTR [rbx+rax*1-0x5d],edx
    a8fb:	01 54 03 01          	add    DWORD PTR [rbx+rax*1+0x1],edx
    a8ff:	51                   	push   rcx
    a900:	01 32                	add    DWORD PTR [rdx],esi
    a902:	00 27                	add    BYTE PTR [rdi],ah
    a904:	bc 28 00 00 00       	mov    esp,0x28
    a909:	00 00                	add    BYTE PTR [rax],al
    a90b:	00 01                	add    BYTE PTR [rcx],al
    a90d:	30 0a                	xor    BYTE PTR [rdx],cl
    a90f:	f3 29 00             	repz sub DWORD PTR [rax],eax
    a912:	00 00                	add    BYTE PTR [rax],al
    a914:	00 00                	add    BYTE PTR [rax],al
    a916:	00 84 42 00 00 ee 51 	add    BYTE PTR [rdx+rax*2+0x51ee0000],al
    a91d:	00 00                	add    BYTE PTR [rax],al
    a91f:	03 01                	add    eax,DWORD PTR [rcx]
    a921:	55                   	push   rbp
    a922:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    a926:	27                   	(bad)
    a927:	33 2a                	xor    ebp,DWORD PTR [rdx]
    a929:	00 00                	add    BYTE PTR [rax],al
    a92b:	00 00                	add    BYTE PTR [rax],al
    a92d:	00 00                	add    BYTE PTR [rax],al
    a92f:	01 30                	add    DWORD PTR [rax],esi
    a931:	0a 6e 2a             	or     ch,BYTE PTR [rsi+0x2a]
    a934:	00 00                	add    BYTE PTR [rax],al
    a936:	00 00                	add    BYTE PTR [rax],al
    a938:	00 00                	add    BYTE PTR [rax],al
    a93a:	3f                   	(bad)
    a93b:	44 00 00             	add    BYTE PTR [rax],r8b
    a93e:	38 52 00             	cmp    BYTE PTR [rdx+0x0],dl
    a941:	00 03                	add    BYTE PTR [rbx],al
    a943:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    a946:	03 8b 41 00 00 00    	add    ecx,DWORD PTR [rbx+0x41]
    a94c:	00 00                	add    BYTE PTR [rax],al
    a94e:	00 03                	add    BYTE PTR [rbx],al
    a950:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    a954:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    a955:	41 00 00             	add    BYTE PTR [r8],al
    a958:	00 00                	add    BYTE PTR [rax],al
    a95a:	00 00                	add    BYTE PTR [rax],al
    a95c:	03 01                	add    eax,DWORD PTR [rcx]
    a95e:	51                   	push   rcx
    a95f:	02 08                	add    cl,BYTE PTR [rax]
    a961:	44 03 01             	add    r8d,DWORD PTR [rcx]
    a964:	52                   	push   rdx
    a965:	09 03                	or     DWORD PTR [rbx],eax
    a967:	80 44 00 00 00       	add    BYTE PTR [rax+rax*1+0x0],0x0
    a96c:	00 00                	add    BYTE PTR [rax],al
    a96e:	00 00                	add    BYTE PTR [rax],al
    a970:	20 73 2a             	and    BYTE PTR [rbx+0x2a],dh
    a973:	00 00                	add    BYTE PTR [rax],al
    a975:	00 00                	add    BYTE PTR [rax],al
    a977:	00 00                	add    BYTE PTR [rax],al
    a979:	6d                   	ins    DWORD PTR es:[rdi],dx
    a97a:	75 00                	jne    a97c <_end+0x4964>
    a97c:	00 00                	add    BYTE PTR [rax],al
    a97e:	25 ee 22 00 00       	and    eax,0x22ee
    a983:	56                   	push   rsi
    a984:	52                   	push   rdx
    a985:	00 00                	add    BYTE PTR [rax],al
    a987:	26 8a 21             	es mov ah,BYTE PTR [rcx]
    a98a:	00 00                	add    BYTE PTR [rax],al
    a98c:	2c 00                	sub    al,0x0
    a98e:	13 46 52             	adc    eax,DWORD PTR [rsi+0x52]
    a991:	00 00                	add    BYTE PTR [rax],al
    a993:	8c 01                	mov    WORD PTR [rcx],es
    a995:	2c 13                	sub    al,0x13
    a997:	00 00                	add    BYTE PTR [rax],al
    a999:	01 33                	add    DWORD PTR [rbx],esi
    a99b:	06                   	(bad)
    a99c:	16                   	(bad)
    a99d:	31 00                	xor    DWORD PTR [rax],eax
    a99f:	00 01                	add    BYTE PTR [rcx],al
    a9a1:	a9 52 00 00 1e       	test   eax,0x1e000052
    a9a6:	1b 04 00             	sbb    eax,DWORD PTR [rax+rax*1]
    a9a9:	00 01                	add    BYTE PTR [rcx],al
    a9ab:	33 12                	xor    edx,DWORD PTR [rdx]
    a9ad:	49                   	rex.WB
    a9ae:	40 00 00             	rex add BYTE PTR [rax],al
    a9b1:	1e                   	(bad)
    a9b2:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
    a9b4:	00 00                	add    BYTE PTR [rax],al
    a9b6:	01 33                	add    DWORD PTR [rbx],esi
    a9b8:	27                   	(bad)
    a9b9:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    a9bc:	00 1e                	add    BYTE PTR [rsi],bl
    a9be:	09 0d 00 00 01 33    	or     DWORD PTR [rip+0x33010000],ecx        # 3301a9c4 <_end+0x330149ac>
    a9c4:	3b a7 41 00 00 1e    	cmp    esp,DWORD PTR [rdi+0x1e000041]
    a9ca:	3c 29                	cmp    al,0x29
    a9cc:	00 00                	add    BYTE PTR [rax],al
    a9ce:	01 33                	add    DWORD PTR [rbx],esi
    a9d0:	4f b0 2c             	rex.WRXB mov r8b,0x2c
    a9d3:	00 00                	add    BYTE PTR [rax],al
    a9d5:	17                   	(bad)
    a9d6:	b0 2b                	mov    al,0x2b
    a9d8:	00 00                	add    BYTE PTR [rax],al
    a9da:	3e 0b 8e 2c 00 00 00 	ds or  ecx,DWORD PTR [rsi+0x2c]
    a9e1:	4a 0c 01             	rex.WX or al,0x1
    a9e4:	00 00                	add    BYTE PTR [rax],al
    a9e6:	11 9e 02 00 00 30    	adc    DWORD PTR [rsi+0x30000002],ebx
    a9ec:	2f                   	(bad)
    a9ed:	00 00                	add    BYTE PTR [rax],al
    a9ef:	00 00                	add    BYTE PTR [rax],al
    a9f1:	00 00                	add    BYTE PTR [rax],al
    a9f3:	a9 07 00 00 00       	test   eax,0x7
    a9f8:	00 00                	add    BYTE PTR [rax],al
    a9fa:	00 01                	add    BYTE PTR [rcx],al
    a9fc:	9c                   	pushf
    a9fd:	57                   	push   rdi
    a9fe:	71 00                	jno    aa00 <_end+0x49e8>
    aa00:	00 23                	add    BYTE PTR [rbx],ah
    aa02:	57                   	push   rdi
    aa03:	0e                   	(bad)
    aa04:	00 00                	add    BYTE PTR [rax],al
    aa06:	11 1a                	adc    DWORD PTR [rdx],ebx
    aa08:	d3 23                	shl    DWORD PTR [rbx],cl
    aa0a:	00 00                	add    BYTE PTR [rax],al
    aa0c:	85 23                	test   DWORD PTR [rbx],esp
    aa0e:	00 00                	add    BYTE PTR [rax],al
    aa10:	79 23                	jns    aa35 <_end+0x4a1d>
    aa12:	00 00                	add    BYTE PTR [rax],al
    aa14:	23 3c 29             	and    edi,DWORD PTR [rcx+rbp*1]
    aa17:	00 00                	add    BYTE PTR [rax],al
    aa19:	11 2d b0 2c 00 00    	adc    DWORD PTR [rip+0x2cb0],ebp        # d6cf <_end+0x76b7>
    aa1f:	c9                   	leave
    aa20:	23 00                	and    eax,DWORD PTR [rax]
    aa22:	00 b9 23 00 00 23    	add    BYTE PTR [rcx+0x23000023],bh
    aa28:	2b 23                	sub    esp,DWORD PTR [rbx]
    aa2a:	00 00                	add    BYTE PTR [rax],al
    aa2c:	11 46 d3             	adc    DWORD PTR [rsi-0x2d],eax
    aa2f:	23 00                	and    eax,DWORD PTR [rax]
    aa31:	00 21                	add    BYTE PTR [rcx],ah
    aa33:	24 00                	and    al,0x0
    aa35:	00 0b                	add    BYTE PTR [rbx],cl
    aa37:	24 00                	and    al,0x0
    aa39:	00 4b cd             	add    BYTE PTR [rbx-0x33],cl
    aa3c:	03 00                	add    eax,DWORD PTR [rax]
    aa3e:	00 67 71             	add    BYTE PTR [rdi+0x71],ah
    aa41:	00 00                	add    BYTE PTR [rax],al
    aa43:	09 03                	or     DWORD PTR [rbx],eax
    aa45:	20 45 00             	and    BYTE PTR [rbp+0x0],al
    aa48:	00 00                	add    BYTE PTR [rax],al
    aa4a:	00 00                	add    BYTE PTR [rax],al
    aa4c:	00 4c 88 0b          	add    BYTE PTR [rax+rcx*4+0xb],cl
    aa50:	00 00                	add    BYTE PTR [rax],al
    aa52:	15 0c 2e 23 00       	adc    eax,0x232e0c
    aa57:	00 03                	add    BYTE PTR [rbx],al
    aa59:	91                   	xchg   ecx,eax
    aa5a:	b0 7f                	mov    al,0x7f
    aa5c:	1f                   	(bad)
    aa5d:	9e                   	sahf
    aa5e:	03 00                	add    eax,DWORD PTR [rax]
    aa60:	00 16                	add    BYTE PTR [rsi],dl
    aa62:	0b e2                	or     esp,edx
    aa64:	22 00                	and    al,BYTE PTR [rax]
    aa66:	00 85 24 00 00 7b    	add    BYTE PTR [rbp+0x7b000024],al
    aa6c:	24 00                	and    al,0x0
    aa6e:	00 1f                	add    BYTE PTR [rdi],bl
    aa70:	be 04 00 00 18       	mov    esi,0x18000004
    aa75:	0e                   	(bad)
    aa76:	b0 2c                	mov    al,0x2c
    aa78:	00 00                	add    BYTE PTR [rax],al
    aa7a:	b5 24                	mov    ch,0x24
    aa7c:	00 00                	add    BYTE PTR [rax],al
    aa7e:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    aa7f:	24 00                	and    al,0x0
    aa81:	00 1f                	add    BYTE PTR [rdi],bl
    aa83:	09 0d 00 00 1a 0e    	or     DWORD PTR [rip+0xe1a0000],ecx        # e1aaa89 <_end+0xe1a4a71>
    aa89:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    aa8a:	41 00 00             	add    BYTE PTR [r8],al
    aa8d:	ee                   	out    dx,al
    aa8e:	24 00                	and    al,0x0
    aa90:	00 d4                	add    ah,dl
    aa92:	24 00                	and    al,0x0
    aa94:	00 16                	add    BYTE PTR [rsi],dl
    aa96:	a8 30                	test   al,0x30
    aa98:	00 00                	add    BYTE PTR [rax],al
    aa9a:	00 00                	add    BYTE PTR [rax],al
    aa9c:	00 00                	add    BYTE PTR [rax],al
    aa9e:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
    aaa4:	00 00                	add    BYTE PTR [rax],al
    aaa6:	60                   	(bad)
    aaa7:	55                   	push   rbp
    aaa8:	00 00                	add    BYTE PTR [rax],al
    aaaa:	17                   	(bad)
    aaab:	a8 15                	test   al,0x15
    aaad:	00 00                	add    BYTE PTR [rax],al
    aaaf:	1d 34 db 41 00       	sbb    eax,0x41db34
    aab4:	00 09                	add    BYTE PTR [rcx],cl
    aab6:	d6                   	(bad)
    aab7:	71 00                	jno    aab9 <_end+0x4aa1>
    aab9:	00 a8 30 00 00 00    	add    BYTE PTR [rax+0x30],ch
    aabf:	00 00                	add    BYTE PTR [rax],al
    aac1:	00 01                	add    BYTE PTR [rcx],al
    aac3:	00 a8 30 00 00 00    	add    BYTE PTR [rax+0x30],ch
    aac9:	00 00                	add    BYTE PTR [rax],al
    aacb:	00 0f                	add    BYTE PTR [rdi],cl
    aacd:	00 00                	add    BYTE PTR [rax],al
    aacf:	00 00                	add    BYTE PTR [rax],al
    aad1:	00 00                	add    BYTE PTR [rax],al
    aad3:	00 1d 34 cb 53 00    	add    BYTE PTR [rip+0x53cb34],bl        # 54760d <_end+0x5415f5>
    aad9:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11cc3 <_end+0xbcab>
    aadf:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    aae0:	25 00 00 a3 25       	and    eax,0x25a30000
    aae5:	00 00                	add    BYTE PTR [rax],al
    aae7:	07                   	(bad)
    aae8:	b7 30                	mov    bh,0x30
    aaea:	00 00                	add    BYTE PTR [rax],al
    aaec:	00 00                	add    BYTE PTR [rax],al
    aaee:	00 00                	add    BYTE PTR [rax],al
    aaf0:	9b                   	fwait
    aaf1:	75 00                	jne    aaf3 <_end+0x4adb>
    aaf3:	00 03                	add    BYTE PTR [rbx],al
    aaf5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aaf8:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ab03:	09 d6                	or     esi,edx
    ab05:	71 00                	jno    ab07 <_end+0x4aef>
    ab07:	00 b7 30 00 00 00    	add    BYTE PTR [rdi+0x30],dh
    ab0d:	00 00                	add    BYTE PTR [rax],al
    ab0f:	00 02                	add    BYTE PTR [rdx],al
    ab11:	00 b7 30 00 00 00    	add    BYTE PTR [rdi+0x30],dh
    ab17:	00 00                	add    BYTE PTR [rax],al
    ab19:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ab1c:	00 00                	add    BYTE PTR [rax],al
    ab1e:	00 00                	add    BYTE PTR [rax],al
    ab20:	00 00                	add    BYTE PTR [rax],al
    ab22:	1d 34 19 54 00       	sbb    eax,0x541934
    ab27:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11d11 <_end+0xbcf9>
    ab2d:	b4 25                	mov    ah,0x25
    ab2f:	00 00                	add    BYTE PTR [rax],al
    ab31:	b2 25                	mov    dl,0x25
    ab33:	00 00                	add    BYTE PTR [rax],al
    ab35:	07                   	(bad)
    ab36:	c3                   	ret
    ab37:	30 00                	xor    BYTE PTR [rax],al
    ab39:	00 00                	add    BYTE PTR [rax],al
    ab3b:	00 00                	add    BYTE PTR [rax],al
    ab3d:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ab43:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab46:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    ab4a:	00 00                	add    BYTE PTR [rax],al
    ab4c:	00 00                	add    BYTE PTR [rax],al
    ab4e:	00 00                	add    BYTE PTR [rax],al
    ab50:	00 09                	add    BYTE PTR [rcx],cl
    ab52:	d6                   	(bad)
    ab53:	71 00                	jno    ab55 <_end+0x4b3d>
    ab55:	00 c3                	add    bl,al
    ab57:	30 00                	xor    BYTE PTR [rax],al
    ab59:	00 00                	add    BYTE PTR [rax],al
    ab5b:	00 00                	add    BYTE PTR [rax],al
    ab5d:	00 02                	add    BYTE PTR [rdx],al
    ab5f:	00 c3                	add    bl,al
    ab61:	30 00                	xor    BYTE PTR [rax],al
    ab63:	00 00                	add    BYTE PTR [rax],al
    ab65:	00 00                	add    BYTE PTR [rax],al
    ab67:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ab6a:	00 00                	add    BYTE PTR [rax],al
    ab6c:	00 00                	add    BYTE PTR [rax],al
    ab6e:	00 00                	add    BYTE PTR [rax],al
    ab70:	1d 34 67 54 00       	sbb    eax,0x546734
    ab75:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 11d5f <_end+0xbd47>
    ab7b:	c3                   	ret
    ab7c:	25 00 00 c1 25       	and    eax,0x25c10000
    ab81:	00 00                	add    BYTE PTR [rax],al
    ab83:	07                   	(bad)
    ab84:	cf                   	iret
    ab85:	30 00                	xor    BYTE PTR [rax],al
    ab87:	00 00                	add    BYTE PTR [rax],al
    ab89:	00 00                	add    BYTE PTR [rax],al
    ab8b:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ab91:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ab94:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ab9f:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    aba2:	00 00                	add    BYTE PTR [rax],al
    aba4:	cf                   	iret
    aba5:	30 00                	xor    BYTE PTR [rax],al
    aba7:	00 00                	add    BYTE PTR [rax],al
    aba9:	00 00                	add    BYTE PTR [rax],al
    abab:	00 03                	add    BYTE PTR [rbx],al
    abad:	00 cf                	add    bh,cl
    abaf:	30 00                	xor    BYTE PTR [rax],al
    abb1:	00 00                	add    BYTE PTR [rax],al
    abb3:	00 00                	add    BYTE PTR [rax],al
    abb5:	00 36                	add    BYTE PTR [rsi],dh
    abb7:	00 00                	add    BYTE PTR [rax],al
    abb9:	00 00                	add    BYTE PTR [rax],al
    abbb:	00 00                	add    BYTE PTR [rax],al
    abbd:	00 1d 34 14 55 00    	add    BYTE PTR [rip+0x551434],bl        # 55bff7 <_end+0x555fdf>
    abc3:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # fe5a <_end+0x9e42>
    abc9:	d2 25 00 00 d0 25    	shl    BYTE PTR [rip+0x25d00000],cl        # 25d0abcf <_end+0x25d04bb7>
    abcf:	00 00                	add    BYTE PTR [rax],al
    abd1:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    abd7:	79 52                	jns    ac2b <_end+0x4c13>
    abd9:	00 00                	add    BYTE PTR [rax],al
    abdb:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    abde:	00 00                	add    BYTE PTR [rax],al
    abe0:	15 9d 52 00 00       	adc    eax,0x529d
    abe5:	de 25 00 00 da 25    	fisub  WORD PTR [rip+0x25da0000]        # 25daabeb <_end+0x25da4bd3>
    abeb:	00 00                	add    BYTE PTR [rax],al
    abed:	0a e2                	or     ah,dl
    abef:	30 00                	xor    BYTE PTR [rax],al
    abf1:	00 00                	add    BYTE PTR [rax],al
    abf3:	00 00                	add    BYTE PTR [rax],al
    abf5:	00 e5                	add    ch,ah
    abf7:	3c 00                	cmp    al,0x0
    abf9:	00 e1                	add    cl,ah
    abfb:	54                   	push   rsp
    abfc:	00 00                	add    BYTE PTR [rax],al
    abfe:	03 01                	add    eax,DWORD PTR [rcx]
    ac00:	55                   	push   rbp
    ac01:	09 03                	or     DWORD PTR [rbx],eax
    ac03:	98                   	cwde
    ac04:	45 00 00             	add    BYTE PTR [r8],r8b
    ac07:	00 00                	add    BYTE PTR [rax],al
    ac09:	00 00                	add    BYTE PTR [rax],al
    ac0b:	03 01                	add    eax,DWORD PTR [rcx]
    ac0d:	54                   	push   rsp
    ac0e:	09 03                	or     DWORD PTR [rbx],eax
    ac10:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ac14:	00 00                	add    BYTE PTR [rax],al
    ac16:	00 00                	add    BYTE PTR [rax],al
    ac18:	00 0a                	add    BYTE PTR [rdx],cl
    ac1a:	fd                   	std
    ac1b:	30 00                	xor    BYTE PTR [rax],al
    ac1d:	00 00                	add    BYTE PTR [rax],al
    ac1f:	00 00                	add    BYTE PTR [rax],al
    ac21:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    ac24:	00 00                	add    BYTE PTR [rax],al
    ac26:	ff 54 00 00          	call   QWORD PTR [rax+rax*1+0x0]
    ac2a:	03 01                	add    eax,DWORD PTR [rcx]
    ac2c:	55                   	push   rbp
    ac2d:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    ac30:	03 01                	add    eax,DWORD PTR [rcx]
    ac32:	58                   	pop    rax
    ac33:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ac36:	00 07                	add    BYTE PTR [rdi],al
    ac38:	05 31 00 00 00       	add    eax,0x31
    ac3d:	00 00                	add    BYTE PTR [rax],al
    ac3f:	00 33                	add    BYTE PTR [rbx],dh
    ac41:	3c 00                	cmp    al,0x0
    ac43:	00 03                	add    BYTE PTR [rbx],al
    ac45:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ac48:	7f 00                	jg     ac4a <_end+0x4c32>
    ac4a:	00 00                	add    BYTE PTR [rax],al
    ac4c:	19 d6                	sbb    esi,edx
    ac4e:	71 00                	jno    ac50 <_end+0x4c38>
    ac50:	00 05 31 00 00 00    	add    BYTE PTR [rip+0x31],al        # ac87 <_end+0x4c6f>
    ac56:	00 00                	add    BYTE PTR [rax],al
    ac58:	00 02                	add    BYTE PTR [rdx],al
    ac5a:	00 05 31 00 00 00    	add    BYTE PTR [rip+0x31],al        # ac91 <_end+0x4c79>
    ac60:	00 00                	add    BYTE PTR [rax],al
    ac62:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ac65:	00 00                	add    BYTE PTR [rax],al
    ac67:	00 00                	add    BYTE PTR [rax],al
    ac69:	00 00                	add    BYTE PTR [rax],al
    ac6b:	01 1d 34 05 e4 71    	add    DWORD PTR [rip+0x71e40534],ebx        # 71e4b1a5 <_end+0x71e4518d>
    ac71:	00 00                	add    BYTE PTR [rax],al
    ac73:	ef                   	out    dx,eax
    ac74:	25 00 00 ed 25       	and    eax,0x25ed0000
    ac79:	00 00                	add    BYTE PTR [rax],al
    ac7b:	07                   	(bad)
    ac7c:	11 31                	adc    DWORD PTR [rcx],esi
    ac7e:	00 00                	add    BYTE PTR [rax],al
    ac80:	00 00                	add    BYTE PTR [rax],al
    ac82:	00 00                	add    BYTE PTR [rax],al
    ac84:	9b                   	fwait
    ac85:	75 00                	jne    ac87 <_end+0x4c6f>
    ac87:	00 03                	add    BYTE PTR [rbx],al
    ac89:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ac8c:	03 c0                	add    eax,eax
    ac8e:	45 00 00             	add    BYTE PTR [r8],r8b
    ac91:	00 00                	add    BYTE PTR [rax],al
    ac93:	00 00                	add    BYTE PTR [rax],al
    ac95:	00 00                	add    BYTE PTR [rax],al
    ac97:	00 16                	add    BYTE PTR [rsi],dl
    ac99:	28 36                	sub    BYTE PTR [rsi],dh
    ac9b:	00 00                	add    BYTE PTR [rax],al
    ac9d:	00 00                	add    BYTE PTR [rax],al
    ac9f:	00 00                	add    BYTE PTR [rax],al
    aca1:	69 00 00 00 00 00    	imul   eax,DWORD PTR [rax],0x0
    aca7:	00 00                	add    BYTE PTR [rax],al
    aca9:	60                   	(bad)
    acaa:	57                   	push   rdi
    acab:	00 00                	add    BYTE PTR [rax],al
    acad:	17                   	(bad)
    acae:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    acaf:	15 00 00 1e 34       	adc    eax,0x341e0000
    acb4:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    acb7:	00 09                	add    BYTE PTR [rcx],cl
    acb9:	d6                   	(bad)
    acba:	71 00                	jno    acbc <_end+0x4ca4>
    acbc:	00 28                	add    BYTE PTR [rax],ch
    acbe:	36 00 00             	ss add BYTE PTR [rax],al
    acc1:	00 00                	add    BYTE PTR [rax],al
    acc3:	00 00                	add    BYTE PTR [rax],al
    acc5:	02 00                	add    al,BYTE PTR [rax]
    acc7:	28 36                	sub    BYTE PTR [rsi],dh
    acc9:	00 00                	add    BYTE PTR [rax],al
    accb:	00 00                	add    BYTE PTR [rax],al
    accd:	00 00                	add    BYTE PTR [rax],al
    accf:	0f 00 00             	sldt   WORD PTR [rax]
    acd2:	00 00                	add    BYTE PTR [rax],al
    acd4:	00 00                	add    BYTE PTR [rax],al
    acd6:	00 1e                	add    BYTE PTR [rsi],bl
    acd8:	34 ce                	xor    al,0xce
    acda:	55                   	push   rbp
    acdb:	00 00                	add    BYTE PTR [rax],al
    acdd:	05 e4 71 00 00       	add    eax,0x71e4
    ace2:	fe                   	(bad)
    ace3:	25 00 00 fc 25       	and    eax,0x25fc0000
    ace8:	00 00                	add    BYTE PTR [rax],al
    acea:	07                   	(bad)
    aceb:	37                   	(bad)
    acec:	36 00 00             	ss add BYTE PTR [rax],al
    acef:	00 00                	add    BYTE PTR [rax],al
    acf1:	00 00                	add    BYTE PTR [rax],al
    acf3:	9b                   	fwait
    acf4:	75 00                	jne    acf6 <_end+0x4cde>
    acf6:	00 03                	add    BYTE PTR [rbx],al
    acf8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    acfb:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    ad06:	09 d6                	or     esi,edx
    ad08:	71 00                	jno    ad0a <_end+0x4cf2>
    ad0a:	00 37                	add    BYTE PTR [rdi],dh
    ad0c:	36 00 00             	ss add BYTE PTR [rax],al
    ad0f:	00 00                	add    BYTE PTR [rax],al
    ad11:	00 00                	add    BYTE PTR [rax],al
    ad13:	02 00                	add    al,BYTE PTR [rax]
    ad15:	37                   	(bad)
    ad16:	36 00 00             	ss add BYTE PTR [rax],al
    ad19:	00 00                	add    BYTE PTR [rax],al
    ad1b:	00 00                	add    BYTE PTR [rax],al
    ad1d:	08 00                	or     BYTE PTR [rax],al
    ad1f:	00 00                	add    BYTE PTR [rax],al
    ad21:	00 00                	add    BYTE PTR [rax],al
    ad23:	00 00                	add    BYTE PTR [rax],al
    ad25:	1e                   	(bad)
    ad26:	34 15                	xor    al,0x15
    ad28:	56                   	push   rsi
    ad29:	00 00                	add    BYTE PTR [rax],al
    ad2b:	05 e4 71 00 00       	add    eax,0x71e4
    ad30:	0d 26 00 00 0b       	or     eax,0xb000026
    ad35:	26 00 00             	es add BYTE PTR [rax],al
    ad38:	07                   	(bad)
    ad39:	3f                   	(bad)
    ad3a:	36 00 00             	ss add BYTE PTR [rax],al
    ad3d:	00 00                	add    BYTE PTR [rax],al
    ad3f:	00 00                	add    BYTE PTR [rax],al
    ad41:	9b                   	fwait
    ad42:	75 00                	jne    ad44 <_end+0x4d2c>
    ad44:	00 03                	add    BYTE PTR [rbx],al
    ad46:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ad49:	7d 00                	jge    ad4b <_end+0x4d33>
    ad4b:	00 00                	add    BYTE PTR [rax],al
    ad4d:	09 d6                	or     esi,edx
    ad4f:	71 00                	jno    ad51 <_end+0x4d39>
    ad51:	00 3f                	add    BYTE PTR [rdi],bh
    ad53:	36 00 00             	ss add BYTE PTR [rax],al
    ad56:	00 00                	add    BYTE PTR [rax],al
    ad58:	00 00                	add    BYTE PTR [rax],al
    ad5a:	02 00                	add    al,BYTE PTR [rax]
    ad5c:	3f                   	(bad)
    ad5d:	36 00 00             	ss add BYTE PTR [rax],al
    ad60:	00 00                	add    BYTE PTR [rax],al
    ad62:	00 00                	add    BYTE PTR [rax],al
    ad64:	0c 00                	or     al,0x0
    ad66:	00 00                	add    BYTE PTR [rax],al
    ad68:	00 00                	add    BYTE PTR [rax],al
    ad6a:	00 00                	add    BYTE PTR [rax],al
    ad6c:	1e                   	(bad)
    ad6d:	34 63                	xor    al,0x63
    ad6f:	56                   	push   rsi
    ad70:	00 00                	add    BYTE PTR [rax],al
    ad72:	05 e4 71 00 00       	add    eax,0x71e4
    ad77:	1c 26                	sbb    al,0x26
    ad79:	00 00                	add    BYTE PTR [rax],al
    ad7b:	1a 26                	sbb    ah,BYTE PTR [rsi]
    ad7d:	00 00                	add    BYTE PTR [rax],al
    ad7f:	07                   	(bad)
    ad80:	4b                   	rex.WXB
    ad81:	36 00 00             	ss add BYTE PTR [rax],al
    ad84:	00 00                	add    BYTE PTR [rax],al
    ad86:	00 00                	add    BYTE PTR [rax],al
    ad88:	9b                   	fwait
    ad89:	75 00                	jne    ad8b <_end+0x4d73>
    ad8b:	00 03                	add    BYTE PTR [rbx],al
    ad8d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ad90:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    ad9b:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    ad9e:	00 00                	add    BYTE PTR [rax],al
    ada0:	4b                   	rex.WXB
    ada1:	36 00 00             	ss add BYTE PTR [rax],al
    ada4:	00 00                	add    BYTE PTR [rax],al
    ada6:	00 00                	add    BYTE PTR [rax],al
    ada8:	03 00                	add    eax,DWORD PTR [rax]
    adaa:	4b                   	rex.WXB
    adab:	36 00 00             	ss add BYTE PTR [rax],al
    adae:	00 00                	add    BYTE PTR [rax],al
    adb0:	00 00                	add    BYTE PTR [rax],al
    adb2:	3a 00                	cmp    al,BYTE PTR [rax]
    adb4:	00 00                	add    BYTE PTR [rax],al
    adb6:	00 00                	add    BYTE PTR [rax],al
    adb8:	00 00                	add    BYTE PTR [rax],al
    adba:	1e                   	(bad)
    adbb:	34 14                	xor    al,0x14
    adbd:	57                   	push   rdi
    adbe:	00 00                	add    BYTE PTR [rax],al
    adc0:	05 91 52 00 00       	add    eax,0x5291
    adc5:	2b 26                	sub    esp,DWORD PTR [rsi]
    adc7:	00 00                	add    BYTE PTR [rax],al
    adc9:	29 26                	sub    DWORD PTR [rsi],esp
    adcb:	00 00                	add    BYTE PTR [rax],al
    adcd:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    add3:	79 52                	jns    ae27 <_end+0x4e0f>
    add5:	00 00                	add    BYTE PTR [rax],al
    add7:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    adda:	00 00                	add    BYTE PTR [rax],al
    addc:	15 9d 52 00 00       	adc    eax,0x529d
    ade1:	37                   	(bad)
    ade2:	26 00 00             	es add BYTE PTR [rax],al
    ade5:	33 26                	xor    esp,DWORD PTR [rsi]
    ade7:	00 00                	add    BYTE PTR [rax],al
    ade9:	0a 5e 36             	or     bl,BYTE PTR [rsi+0x36]
    adec:	00 00                	add    BYTE PTR [rax],al
    adee:	00 00                	add    BYTE PTR [rax],al
    adf0:	00 00                	add    BYTE PTR [rax],al
    adf2:	e5 3c                	in     eax,0x3c
    adf4:	00 00                	add    BYTE PTR [rax],al
    adf6:	dd 56 00             	fst    QWORD PTR [rsi+0x0]
    adf9:	00 03                	add    BYTE PTR [rbx],al
    adfb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    adfe:	03 e0                	add    esp,eax
    ae00:	45 00 00             	add    BYTE PTR [r8],r8b
    ae03:	00 00                	add    BYTE PTR [rax],al
    ae05:	00 00                	add    BYTE PTR [rax],al
    ae07:	03 01                	add    eax,DWORD PTR [rcx]
    ae09:	54                   	push   rsp
    ae0a:	09 03                	or     DWORD PTR [rbx],eax
    ae0c:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ae10:	00 00                	add    BYTE PTR [rax],al
    ae12:	00 00                	add    BYTE PTR [rax],al
    ae14:	00 0a                	add    BYTE PTR [rdx],cl
    ae16:	7b 36                	jnp    ae4e <_end+0x4e36>
    ae18:	00 00                	add    BYTE PTR [rax],al
    ae1a:	00 00                	add    BYTE PTR [rax],al
    ae1c:	00 00                	add    BYTE PTR [rax],al
    ae1e:	4d                   	rex.WRB
    ae1f:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ae22:	fd                   	std
    ae23:	56                   	push   rsi
    ae24:	00 00                	add    BYTE PTR [rax],al
    ae26:	03 01                	add    eax,DWORD PTR [rcx]
    ae28:	55                   	push   rbp
    ae29:	04 91                	add    al,0x91
    ae2b:	a8 7f                	test   al,0x7f
    ae2d:	06                   	(bad)
    ae2e:	03 01                	add    eax,DWORD PTR [rcx]
    ae30:	58                   	pop    rax
    ae31:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ae34:	00 07                	add    BYTE PTR [rdi],al
    ae36:	85 36                	test   DWORD PTR [rsi],esi
    ae38:	00 00                	add    BYTE PTR [rax],al
    ae3a:	00 00                	add    BYTE PTR [rax],al
    ae3c:	00 00                	add    BYTE PTR [rax],al
    ae3e:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    ae41:	00 03                	add    BYTE PTR [rbx],al
    ae43:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    ae46:	91                   	xchg   ecx,eax
    ae47:	a8 7f                	test   al,0x7f
    ae49:	06                   	(bad)
    ae4a:	00 00                	add    BYTE PTR [rax],al
    ae4c:	19 d6                	sbb    esi,edx
    ae4e:	71 00                	jno    ae50 <_end+0x4e38>
    ae50:	00 85 36 00 00 00    	add    BYTE PTR [rbp+0x36],al
    ae56:	00 00                	add    BYTE PTR [rax],al
    ae58:	00 02                	add    BYTE PTR [rdx],al
    ae5a:	00 85 36 00 00 00    	add    BYTE PTR [rbp+0x36],al
    ae60:	00 00                	add    BYTE PTR [rax],al
    ae62:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    ae65:	00 00                	add    BYTE PTR [rax],al
    ae67:	00 00                	add    BYTE PTR [rax],al
    ae69:	00 00                	add    BYTE PTR [rax],al
    ae6b:	01 1e                	add    DWORD PTR [rsi],ebx
    ae6d:	34 05                	xor    al,0x5
    ae6f:	e4 71                	in     al,0x71
    ae71:	00 00                	add    BYTE PTR [rax],al
    ae73:	4a                   	rex.WX
    ae74:	26 00 00             	es add BYTE PTR [rax],al
    ae77:	48                   	rex.W
    ae78:	26 00 00             	es add BYTE PTR [rax],al
    ae7b:	07                   	(bad)
    ae7c:	91                   	xchg   ecx,eax
    ae7d:	36 00 00             	ss add BYTE PTR [rax],al
    ae80:	00 00                	add    BYTE PTR [rax],al
    ae82:	00 00                	add    BYTE PTR [rax],al
    ae84:	9b                   	fwait
    ae85:	75 00                	jne    ae87 <_end+0x4e6f>
    ae87:	00 03                	add    BYTE PTR [rbx],al
    ae89:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    ae8c:	03 c0                	add    eax,eax
    ae8e:	45 00 00             	add    BYTE PTR [r8],r8b
    ae91:	00 00                	add    BYTE PTR [rax],al
    ae93:	00 00                	add    BYTE PTR [rax],al
    ae95:	00 00                	add    BYTE PTR [rax],al
    ae97:	00 16                	add    BYTE PTR [rsi],dl
    ae99:	b0 35                	mov    al,0x35
    ae9b:	00 00                	add    BYTE PTR [rax],al
    ae9d:	00 00                	add    BYTE PTR [rax],al
    ae9f:	00 00                	add    BYTE PTR [rax],al
    aea1:	6d                   	ins    DWORD PTR es:[rdi],dx
    aea2:	00 00                	add    BYTE PTR [rax],al
    aea4:	00 00                	add    BYTE PTR [rax],al
    aea6:	00 00                	add    BYTE PTR [rax],al
    aea8:	00 67 59             	add    BYTE PTR [rdi+0x59],ah
    aeab:	00 00                	add    BYTE PTR [rax],al
    aead:	17                   	(bad)
    aeae:	ce                   	(bad)
    aeaf:	1d 00 00 1f 34       	sbb    eax,0x341f0000
    aeb4:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    aeb7:	00 09                	add    BYTE PTR [rcx],cl
    aeb9:	d6                   	(bad)
    aeba:	71 00                	jno    aebc <_end+0x4ea4>
    aebc:	00 b0 35 00 00 00    	add    BYTE PTR [rax+0x35],dh
    aec2:	00 00                	add    BYTE PTR [rax],al
    aec4:	00 02                	add    BYTE PTR [rdx],al
    aec6:	00 b0 35 00 00 00    	add    BYTE PTR [rax+0x35],dh
    aecc:	00 00                	add    BYTE PTR [rax],al
    aece:	00 0f                	add    BYTE PTR [rdi],cl
    aed0:	00 00                	add    BYTE PTR [rax],al
    aed2:	00 00                	add    BYTE PTR [rax],al
    aed4:	00 00                	add    BYTE PTR [rax],al
    aed6:	00 1f                	add    BYTE PTR [rdi],bl
    aed8:	34 ce                	xor    al,0xce
    aeda:	57                   	push   rdi
    aedb:	00 00                	add    BYTE PTR [rax],al
    aedd:	05 e4 71 00 00       	add    eax,0x71e4
    aee2:	59                   	pop    rcx
    aee3:	26 00 00             	es add BYTE PTR [rax],al
    aee6:	57                   	push   rdi
    aee7:	26 00 00             	es add BYTE PTR [rax],al
    aeea:	07                   	(bad)
    aeeb:	bf 35 00 00 00       	mov    edi,0x35
    aef0:	00 00                	add    BYTE PTR [rax],al
    aef2:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    aef8:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    aefb:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    af06:	09 d6                	or     esi,edx
    af08:	71 00                	jno    af0a <_end+0x4ef2>
    af0a:	00 bf 35 00 00 00    	add    BYTE PTR [rdi+0x35],bh
    af10:	00 00                	add    BYTE PTR [rax],al
    af12:	00 02                	add    BYTE PTR [rdx],al
    af14:	00 bf 35 00 00 00    	add    BYTE PTR [rdi+0x35],bh
    af1a:	00 00                	add    BYTE PTR [rax],al
    af1c:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    af1f:	00 00                	add    BYTE PTR [rax],al
    af21:	00 00                	add    BYTE PTR [rax],al
    af23:	00 00                	add    BYTE PTR [rax],al
    af25:	1f                   	(bad)
    af26:	34 1c                	xor    al,0x1c
    af28:	58                   	pop    rax
    af29:	00 00                	add    BYTE PTR [rax],al
    af2b:	05 e4 71 00 00       	add    eax,0x71e4
    af30:	68 26 00 00 66       	push   0x66000026
    af35:	26 00 00             	es add BYTE PTR [rax],al
    af38:	07                   	(bad)
    af39:	cb                   	retf
    af3a:	35 00 00 00 00       	xor    eax,0x0
    af3f:	00 00                	add    BYTE PTR [rax],al
    af41:	9b                   	fwait
    af42:	75 00                	jne    af44 <_end+0x4f2c>
    af44:	00 03                	add    BYTE PTR [rbx],al
    af46:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af49:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    af4f:	00 00                	add    BYTE PTR [rax],al
    af51:	00 00                	add    BYTE PTR [rax],al
    af53:	00 09                	add    BYTE PTR [rcx],cl
    af55:	d6                   	(bad)
    af56:	71 00                	jno    af58 <_end+0x4f40>
    af58:	00 cb                	add    bl,cl
    af5a:	35 00 00 00 00       	xor    eax,0x0
    af5f:	00 00                	add    BYTE PTR [rax],al
    af61:	02 00                	add    al,BYTE PTR [rax]
    af63:	cb                   	retf
    af64:	35 00 00 00 00       	xor    eax,0x0
    af69:	00 00                	add    BYTE PTR [rax],al
    af6b:	0c 00                	or     al,0x0
    af6d:	00 00                	add    BYTE PTR [rax],al
    af6f:	00 00                	add    BYTE PTR [rax],al
    af71:	00 00                	add    BYTE PTR [rax],al
    af73:	1f                   	(bad)
    af74:	34 6a                	xor    al,0x6a
    af76:	58                   	pop    rax
    af77:	00 00                	add    BYTE PTR [rax],al
    af79:	05 e4 71 00 00       	add    eax,0x71e4
    af7e:	77 26                	ja     afa6 <_end+0x4f8e>
    af80:	00 00                	add    BYTE PTR [rax],al
    af82:	75 26                	jne    afaa <_end+0x4f92>
    af84:	00 00                	add    BYTE PTR [rax],al
    af86:	07                   	(bad)
    af87:	d7                   	xlat   BYTE PTR ds:[rbx]
    af88:	35 00 00 00 00       	xor    eax,0x0
    af8d:	00 00                	add    BYTE PTR [rax],al
    af8f:	9b                   	fwait
    af90:	75 00                	jne    af92 <_end+0x4f7a>
    af92:	00 03                	add    BYTE PTR [rbx],al
    af94:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    af97:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    afa2:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    afa5:	00 00                	add    BYTE PTR [rax],al
    afa7:	d7                   	xlat   BYTE PTR ds:[rbx]
    afa8:	35 00 00 00 00       	xor    eax,0x0
    afad:	00 00                	add    BYTE PTR [rax],al
    afaf:	03 00                	add    eax,DWORD PTR [rax]
    afb1:	d7                   	xlat   BYTE PTR ds:[rbx]
    afb2:	35 00 00 00 00       	xor    eax,0x0
    afb7:	00 00                	add    BYTE PTR [rax],al
    afb9:	3a 00                	cmp    al,BYTE PTR [rax]
    afbb:	00 00                	add    BYTE PTR [rax],al
    afbd:	00 00                	add    BYTE PTR [rax],al
    afbf:	00 00                	add    BYTE PTR [rax],al
    afc1:	1f                   	(bad)
    afc2:	34 1b                	xor    al,0x1b
    afc4:	59                   	pop    rcx
    afc5:	00 00                	add    BYTE PTR [rax],al
    afc7:	05 91 52 00 00       	add    eax,0x5291
    afcc:	86 26                	xchg   BYTE PTR [rsi],ah
    afce:	00 00                	add    BYTE PTR [rax],al
    afd0:	84 26                	test   BYTE PTR [rsi],ah
    afd2:	00 00                	add    BYTE PTR [rax],al
    afd4:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    afda:	79 52                	jns    b02e <_end+0x5016>
    afdc:	00 00                	add    BYTE PTR [rax],al
    afde:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    afe1:	00 00                	add    BYTE PTR [rax],al
    afe3:	15 9d 52 00 00       	adc    eax,0x529d
    afe8:	92                   	xchg   edx,eax
    afe9:	26 00 00             	es add BYTE PTR [rax],al
    afec:	8e 26                	mov    fs,WORD PTR [rsi]
    afee:	00 00                	add    BYTE PTR [rax],al
    aff0:	0a ea                	or     ch,dl
    aff2:	35 00 00 00 00       	xor    eax,0x0
    aff7:	00 00                	add    BYTE PTR [rax],al
    aff9:	e5 3c                	in     eax,0x3c
    affb:	00 00                	add    BYTE PTR [rax],al
    affd:	e4 58                	in     al,0x58
    afff:	00 00                	add    BYTE PTR [rax],al
    b001:	03 01                	add    eax,DWORD PTR [rcx]
    b003:	55                   	push   rbp
    b004:	09 03                	or     DWORD PTR [rbx],eax
    b006:	10 46 00             	adc    BYTE PTR [rsi+0x0],al
    b009:	00 00                	add    BYTE PTR [rax],al
    b00b:	00 00                	add    BYTE PTR [rax],al
    b00d:	00 03                	add    BYTE PTR [rbx],al
    b00f:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b013:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b017:	00 00                	add    BYTE PTR [rax],al
    b019:	00 00                	add    BYTE PTR [rax],al
    b01b:	00 0a                	add    BYTE PTR [rdx],cl
    b01d:	07                   	(bad)
    b01e:	36 00 00             	ss add BYTE PTR [rax],al
    b021:	00 00                	add    BYTE PTR [rax],al
    b023:	00 00                	add    BYTE PTR [rax],al
    b025:	4d                   	rex.WRB
    b026:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b029:	04 59                	add    al,0x59
    b02b:	00 00                	add    BYTE PTR [rax],al
    b02d:	03 01                	add    eax,DWORD PTR [rcx]
    b02f:	55                   	push   rbp
    b030:	04 91                	add    al,0x91
    b032:	a8 7f                	test   al,0x7f
    b034:	06                   	(bad)
    b035:	03 01                	add    eax,DWORD PTR [rcx]
    b037:	58                   	pop    rax
    b038:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b03b:	00 07                	add    BYTE PTR [rdi],al
    b03d:	11 36                	adc    DWORD PTR [rsi],esi
    b03f:	00 00                	add    BYTE PTR [rax],al
    b041:	00 00                	add    BYTE PTR [rax],al
    b043:	00 00                	add    BYTE PTR [rax],al
    b045:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b048:	00 03                	add    BYTE PTR [rbx],al
    b04a:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b04d:	91                   	xchg   ecx,eax
    b04e:	a8 7f                	test   al,0x7f
    b050:	06                   	(bad)
    b051:	00 00                	add    BYTE PTR [rax],al
    b053:	19 d6                	sbb    esi,edx
    b055:	71 00                	jno    b057 <_end+0x503f>
    b057:	00 11                	add    BYTE PTR [rcx],dl
    b059:	36 00 00             	ss add BYTE PTR [rax],al
    b05c:	00 00                	add    BYTE PTR [rax],al
    b05e:	00 00                	add    BYTE PTR [rax],al
    b060:	02 00                	add    al,BYTE PTR [rax]
    b062:	11 36                	adc    DWORD PTR [rsi],esi
    b064:	00 00                	add    BYTE PTR [rax],al
    b066:	00 00                	add    BYTE PTR [rax],al
    b068:	00 00                	add    BYTE PTR [rax],al
    b06a:	0c 00                	or     al,0x0
    b06c:	00 00                	add    BYTE PTR [rax],al
    b06e:	00 00                	add    BYTE PTR [rax],al
    b070:	00 00                	add    BYTE PTR [rax],al
    b072:	01 1f                	add    DWORD PTR [rdi],ebx
    b074:	34 05                	xor    al,0x5
    b076:	e4 71                	in     al,0x71
    b078:	00 00                	add    BYTE PTR [rax],al
    b07a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    b07b:	26 00 00             	es add BYTE PTR [rax],al
    b07e:	a3 26 00 00 07 1d 36 	movabs ds:0x361d07000026,eax
    b085:	00 00 
    b087:	00 00                	add    BYTE PTR [rax],al
    b089:	00 00                	add    BYTE PTR [rax],al
    b08b:	9b                   	fwait
    b08c:	75 00                	jne    b08e <_end+0x5076>
    b08e:	00 03                	add    BYTE PTR [rbx],al
    b090:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b093:	03 c0                	add    eax,eax
    b095:	45 00 00             	add    BYTE PTR [r8],r8b
    b098:	00 00                	add    BYTE PTR [rax],al
    b09a:	00 00                	add    BYTE PTR [rax],al
    b09c:	00 00                	add    BYTE PTR [rax],al
    b09e:	00 16                	add    BYTE PTR [rsi],dl
    b0a0:	38 35 00 00 00 00    	cmp    BYTE PTR [rip+0x0],dh        # b0a6 <_end+0x508e>
    b0a6:	00 00                	add    BYTE PTR [rax],al
    b0a8:	6d                   	ins    DWORD PTR es:[rdi],dx
    b0a9:	00 00                	add    BYTE PTR [rax],al
    b0ab:	00 00                	add    BYTE PTR [rax],al
    b0ad:	00 00                	add    BYTE PTR [rax],al
    b0af:	00 6e 5b             	add    BYTE PTR [rsi+0x5b],ch
    b0b2:	00 00                	add    BYTE PTR [rax],al
    b0b4:	17                   	(bad)
    b0b5:	4d 0d 00 00 20 34    	rex.WRB or rax,0x34200000
    b0bb:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    b0be:	00 09                	add    BYTE PTR [rcx],cl
    b0c0:	d6                   	(bad)
    b0c1:	71 00                	jno    b0c3 <_end+0x50ab>
    b0c3:	00 38                	add    BYTE PTR [rax],bh
    b0c5:	35 00 00 00 00       	xor    eax,0x0
    b0ca:	00 00                	add    BYTE PTR [rax],al
    b0cc:	02 00                	add    al,BYTE PTR [rax]
    b0ce:	38 35 00 00 00 00    	cmp    BYTE PTR [rip+0x0],dh        # b0d4 <_end+0x50bc>
    b0d4:	00 00                	add    BYTE PTR [rax],al
    b0d6:	0f 00 00             	sldt   WORD PTR [rax]
    b0d9:	00 00                	add    BYTE PTR [rax],al
    b0db:	00 00                	add    BYTE PTR [rax],al
    b0dd:	00 20                	add    BYTE PTR [rax],ah
    b0df:	34 d5                	xor    al,0xd5
    b0e1:	59                   	pop    rcx
    b0e2:	00 00                	add    BYTE PTR [rax],al
    b0e4:	05 e4 71 00 00       	add    eax,0x71e4
    b0e9:	b4 26                	mov    ah,0x26
    b0eb:	00 00                	add    BYTE PTR [rax],al
    b0ed:	b2 26                	mov    dl,0x26
    b0ef:	00 00                	add    BYTE PTR [rax],al
    b0f1:	07                   	(bad)
    b0f2:	47 35 00 00 00 00    	rex.RXB xor eax,0x0
    b0f8:	00 00                	add    BYTE PTR [rax],al
    b0fa:	9b                   	fwait
    b0fb:	75 00                	jne    b0fd <_end+0x50e5>
    b0fd:	00 03                	add    BYTE PTR [rbx],al
    b0ff:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b102:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b10d:	09 d6                	or     esi,edx
    b10f:	71 00                	jno    b111 <_end+0x50f9>
    b111:	00 47 35             	add    BYTE PTR [rdi+0x35],al
    b114:	00 00                	add    BYTE PTR [rax],al
    b116:	00 00                	add    BYTE PTR [rax],al
    b118:	00 00                	add    BYTE PTR [rax],al
    b11a:	02 00                	add    al,BYTE PTR [rax]
    b11c:	47 35 00 00 00 00    	rex.RXB xor eax,0x0
    b122:	00 00                	add    BYTE PTR [rax],al
    b124:	0c 00                	or     al,0x0
    b126:	00 00                	add    BYTE PTR [rax],al
    b128:	00 00                	add    BYTE PTR [rax],al
    b12a:	00 00                	add    BYTE PTR [rax],al
    b12c:	20 34 23             	and    BYTE PTR [rbx+riz*1],dh
    b12f:	5a                   	pop    rdx
    b130:	00 00                	add    BYTE PTR [rax],al
    b132:	05 e4 71 00 00       	add    eax,0x71e4
    b137:	c3                   	ret
    b138:	26 00 00             	es add BYTE PTR [rax],al
    b13b:	c1 26 00             	shl    DWORD PTR [rsi],0x0
    b13e:	00 07                	add    BYTE PTR [rdi],al
    b140:	53                   	push   rbx
    b141:	35 00 00 00 00       	xor    eax,0x0
    b146:	00 00                	add    BYTE PTR [rax],al
    b148:	9b                   	fwait
    b149:	75 00                	jne    b14b <_end+0x5133>
    b14b:	00 03                	add    BYTE PTR [rbx],al
    b14d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b150:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    b156:	00 00                	add    BYTE PTR [rax],al
    b158:	00 00                	add    BYTE PTR [rax],al
    b15a:	00 09                	add    BYTE PTR [rcx],cl
    b15c:	d6                   	(bad)
    b15d:	71 00                	jno    b15f <_end+0x5147>
    b15f:	00 53 35             	add    BYTE PTR [rbx+0x35],dl
    b162:	00 00                	add    BYTE PTR [rax],al
    b164:	00 00                	add    BYTE PTR [rax],al
    b166:	00 00                	add    BYTE PTR [rax],al
    b168:	02 00                	add    al,BYTE PTR [rax]
    b16a:	53                   	push   rbx
    b16b:	35 00 00 00 00       	xor    eax,0x0
    b170:	00 00                	add    BYTE PTR [rax],al
    b172:	0c 00                	or     al,0x0
    b174:	00 00                	add    BYTE PTR [rax],al
    b176:	00 00                	add    BYTE PTR [rax],al
    b178:	00 00                	add    BYTE PTR [rax],al
    b17a:	20 34 71             	and    BYTE PTR [rcx+rsi*2],dh
    b17d:	5a                   	pop    rdx
    b17e:	00 00                	add    BYTE PTR [rax],al
    b180:	05 e4 71 00 00       	add    eax,0x71e4
    b185:	d2 26                	shl    BYTE PTR [rsi],cl
    b187:	00 00                	add    BYTE PTR [rax],al
    b189:	d0 26                	shl    BYTE PTR [rsi],1
    b18b:	00 00                	add    BYTE PTR [rax],al
    b18d:	07                   	(bad)
    b18e:	5f                   	pop    rdi
    b18f:	35 00 00 00 00       	xor    eax,0x0
    b194:	00 00                	add    BYTE PTR [rax],al
    b196:	9b                   	fwait
    b197:	75 00                	jne    b199 <_end+0x5181>
    b199:	00 03                	add    BYTE PTR [rbx],al
    b19b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b19e:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b1a9:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b1ac:	00 00                	add    BYTE PTR [rax],al
    b1ae:	5f                   	pop    rdi
    b1af:	35 00 00 00 00       	xor    eax,0x0
    b1b4:	00 00                	add    BYTE PTR [rax],al
    b1b6:	03 00                	add    eax,DWORD PTR [rax]
    b1b8:	5f                   	pop    rdi
    b1b9:	35 00 00 00 00       	xor    eax,0x0
    b1be:	00 00                	add    BYTE PTR [rax],al
    b1c0:	3a 00                	cmp    al,BYTE PTR [rax]
    b1c2:	00 00                	add    BYTE PTR [rax],al
    b1c4:	00 00                	add    BYTE PTR [rax],al
    b1c6:	00 00                	add    BYTE PTR [rax],al
    b1c8:	20 34 22             	and    BYTE PTR [rdx+riz*1],dh
    b1cb:	5b                   	pop    rbx
    b1cc:	00 00                	add    BYTE PTR [rax],al
    b1ce:	05 91 52 00 00       	add    eax,0x5291
    b1d3:	e1 26                	loope  b1fb <_end+0x51e3>
    b1d5:	00 00                	add    BYTE PTR [rax],al
    b1d7:	df 26                	fbld   TBYTE PTR [rsi]
    b1d9:	00 00                	add    BYTE PTR [rax],al
    b1db:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b1e1:	79 52                	jns    b235 <_end+0x521d>
    b1e3:	00 00                	add    BYTE PTR [rax],al
    b1e5:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b1e8:	00 00                	add    BYTE PTR [rax],al
    b1ea:	15 9d 52 00 00       	adc    eax,0x529d
    b1ef:	ed                   	in     eax,dx
    b1f0:	26 00 00             	es add BYTE PTR [rax],al
    b1f3:	e9 26 00 00 0a       	jmp    a00b21e <_end+0xa005206>
    b1f8:	72 35                	jb     b22f <_end+0x5217>
    b1fa:	00 00                	add    BYTE PTR [rax],al
    b1fc:	00 00                	add    BYTE PTR [rax],al
    b1fe:	00 00                	add    BYTE PTR [rax],al
    b200:	e5 3c                	in     eax,0x3c
    b202:	00 00                	add    BYTE PTR [rax],al
    b204:	eb 5a                	jmp    b260 <_end+0x5248>
    b206:	00 00                	add    BYTE PTR [rax],al
    b208:	03 01                	add    eax,DWORD PTR [rcx]
    b20a:	55                   	push   rbp
    b20b:	09 03                	or     DWORD PTR [rbx],eax
    b20d:	8e 42 00             	mov    es,WORD PTR [rdx+0x0]
    b210:	00 00                	add    BYTE PTR [rax],al
    b212:	00 00                	add    BYTE PTR [rax],al
    b214:	00 03                	add    BYTE PTR [rbx],al
    b216:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b21a:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b21e:	00 00                	add    BYTE PTR [rax],al
    b220:	00 00                	add    BYTE PTR [rax],al
    b222:	00 0a                	add    BYTE PTR [rdx],cl
    b224:	8f                   	(bad)
    b225:	35 00 00 00 00       	xor    eax,0x0
    b22a:	00 00                	add    BYTE PTR [rax],al
    b22c:	4d                   	rex.WRB
    b22d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b230:	0b 5b 00             	or     ebx,DWORD PTR [rbx+0x0]
    b233:	00 03                	add    BYTE PTR [rbx],al
    b235:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b238:	91                   	xchg   ecx,eax
    b239:	a8 7f                	test   al,0x7f
    b23b:	06                   	(bad)
    b23c:	03 01                	add    eax,DWORD PTR [rcx]
    b23e:	58                   	pop    rax
    b23f:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b242:	00 07                	add    BYTE PTR [rdi],al
    b244:	99                   	cdq
    b245:	35 00 00 00 00       	xor    eax,0x0
    b24a:	00 00                	add    BYTE PTR [rax],al
    b24c:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b24f:	00 03                	add    BYTE PTR [rbx],al
    b251:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b254:	91                   	xchg   ecx,eax
    b255:	a8 7f                	test   al,0x7f
    b257:	06                   	(bad)
    b258:	00 00                	add    BYTE PTR [rax],al
    b25a:	19 d6                	sbb    esi,edx
    b25c:	71 00                	jno    b25e <_end+0x5246>
    b25e:	00 99 35 00 00 00    	add    BYTE PTR [rcx+0x35],bl
    b264:	00 00                	add    BYTE PTR [rax],al
    b266:	00 02                	add    BYTE PTR [rdx],al
    b268:	00 99 35 00 00 00    	add    BYTE PTR [rcx+0x35],bl
    b26e:	00 00                	add    BYTE PTR [rax],al
    b270:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b273:	00 00                	add    BYTE PTR [rax],al
    b275:	00 00                	add    BYTE PTR [rax],al
    b277:	00 00                	add    BYTE PTR [rax],al
    b279:	01 20                	add    DWORD PTR [rax],esp
    b27b:	34 05                	xor    al,0x5
    b27d:	e4 71                	in     al,0x71
    b27f:	00 00                	add    BYTE PTR [rax],al
    b281:	00 27                	add    BYTE PTR [rdi],ah
    b283:	00 00                	add    BYTE PTR [rax],al
    b285:	fe                   	(bad)
    b286:	26 00 00             	es add BYTE PTR [rax],al
    b289:	07                   	(bad)
    b28a:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    b28b:	35 00 00 00 00       	xor    eax,0x0
    b290:	00 00                	add    BYTE PTR [rax],al
    b292:	9b                   	fwait
    b293:	75 00                	jne    b295 <_end+0x527d>
    b295:	00 03                	add    BYTE PTR [rbx],al
    b297:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b29a:	03 c0                	add    eax,eax
    b29c:	45 00 00             	add    BYTE PTR [r8],r8b
    b29f:	00 00                	add    BYTE PTR [rax],al
    b2a1:	00 00                	add    BYTE PTR [rax],al
    b2a3:	00 00                	add    BYTE PTR [rax],al
    b2a5:	00 16                	add    BYTE PTR [rsi],dl
    b2a7:	c0 34 00 00          	shl    BYTE PTR [rax+rax*1],0x0
    b2ab:	00 00                	add    BYTE PTR [rax],al
    b2ad:	00 00                	add    BYTE PTR [rax],al
    b2af:	6d                   	ins    DWORD PTR es:[rdi],dx
    b2b0:	00 00                	add    BYTE PTR [rax],al
    b2b2:	00 00                	add    BYTE PTR [rax],al
    b2b4:	00 00                	add    BYTE PTR [rax],al
    b2b6:	00 75 5d             	add    BYTE PTR [rbp+0x5d],dh
    b2b9:	00 00                	add    BYTE PTR [rax],al
    b2bb:	17                   	(bad)
    b2bc:	ed                   	in     eax,dx
    b2bd:	33 00                	xor    eax,DWORD PTR [rax]
    b2bf:	00 21                	add    BYTE PTR [rcx],ah
    b2c1:	34 db                	xor    al,0xdb
    b2c3:	41 00 00             	add    BYTE PTR [r8],al
    b2c6:	09 d6                	or     esi,edx
    b2c8:	71 00                	jno    b2ca <_end+0x52b2>
    b2ca:	00 c0                	add    al,al
    b2cc:	34 00                	xor    al,0x0
    b2ce:	00 00                	add    BYTE PTR [rax],al
    b2d0:	00 00                	add    BYTE PTR [rax],al
    b2d2:	00 02                	add    BYTE PTR [rdx],al
    b2d4:	00 c0                	add    al,al
    b2d6:	34 00                	xor    al,0x0
    b2d8:	00 00                	add    BYTE PTR [rax],al
    b2da:	00 00                	add    BYTE PTR [rax],al
    b2dc:	00 0f                	add    BYTE PTR [rdi],cl
    b2de:	00 00                	add    BYTE PTR [rax],al
    b2e0:	00 00                	add    BYTE PTR [rax],al
    b2e2:	00 00                	add    BYTE PTR [rax],al
    b2e4:	00 21                	add    BYTE PTR [rcx],ah
    b2e6:	34 dc                	xor    al,0xdc
    b2e8:	5b                   	pop    rbx
    b2e9:	00 00                	add    BYTE PTR [rax],al
    b2eb:	05 e4 71 00 00       	add    eax,0x71e4
    b2f0:	0f 27                	(bad)
    b2f2:	00 00                	add    BYTE PTR [rax],al
    b2f4:	0d 27 00 00 07       	or     eax,0x7000027
    b2f9:	cf                   	iret
    b2fa:	34 00                	xor    al,0x0
    b2fc:	00 00                	add    BYTE PTR [rax],al
    b2fe:	00 00                	add    BYTE PTR [rax],al
    b300:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b306:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b309:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b314:	09 d6                	or     esi,edx
    b316:	71 00                	jno    b318 <_end+0x5300>
    b318:	00 cf                	add    bh,cl
    b31a:	34 00                	xor    al,0x0
    b31c:	00 00                	add    BYTE PTR [rax],al
    b31e:	00 00                	add    BYTE PTR [rax],al
    b320:	00 02                	add    BYTE PTR [rdx],al
    b322:	00 cf                	add    bh,cl
    b324:	34 00                	xor    al,0x0
    b326:	00 00                	add    BYTE PTR [rax],al
    b328:	00 00                	add    BYTE PTR [rax],al
    b32a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b32d:	00 00                	add    BYTE PTR [rax],al
    b32f:	00 00                	add    BYTE PTR [rax],al
    b331:	00 00                	add    BYTE PTR [rax],al
    b333:	21 34 2a             	and    DWORD PTR [rdx+rbp*1],esi
    b336:	5c                   	pop    rsp
    b337:	00 00                	add    BYTE PTR [rax],al
    b339:	05 e4 71 00 00       	add    eax,0x71e4
    b33e:	1e                   	(bad)
    b33f:	27                   	(bad)
    b340:	00 00                	add    BYTE PTR [rax],al
    b342:	1c 27                	sbb    al,0x27
    b344:	00 00                	add    BYTE PTR [rax],al
    b346:	07                   	(bad)
    b347:	db 34 00             	(bad)  [rax+rax*1]
    b34a:	00 00                	add    BYTE PTR [rax],al
    b34c:	00 00                	add    BYTE PTR [rax],al
    b34e:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b354:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b357:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    b35d:	00 00                	add    BYTE PTR [rax],al
    b35f:	00 00                	add    BYTE PTR [rax],al
    b361:	00 09                	add    BYTE PTR [rcx],cl
    b363:	d6                   	(bad)
    b364:	71 00                	jno    b366 <_end+0x534e>
    b366:	00 db                	add    bl,bl
    b368:	34 00                	xor    al,0x0
    b36a:	00 00                	add    BYTE PTR [rax],al
    b36c:	00 00                	add    BYTE PTR [rax],al
    b36e:	00 02                	add    BYTE PTR [rdx],al
    b370:	00 db                	add    bl,bl
    b372:	34 00                	xor    al,0x0
    b374:	00 00                	add    BYTE PTR [rax],al
    b376:	00 00                	add    BYTE PTR [rax],al
    b378:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b37b:	00 00                	add    BYTE PTR [rax],al
    b37d:	00 00                	add    BYTE PTR [rax],al
    b37f:	00 00                	add    BYTE PTR [rax],al
    b381:	21 34 78             	and    DWORD PTR [rax+rdi*2],esi
    b384:	5c                   	pop    rsp
    b385:	00 00                	add    BYTE PTR [rax],al
    b387:	05 e4 71 00 00       	add    eax,0x71e4
    b38c:	2d 27 00 00 2b       	sub    eax,0x2b000027
    b391:	27                   	(bad)
    b392:	00 00                	add    BYTE PTR [rax],al
    b394:	07                   	(bad)
    b395:	e7 34                	out    0x34,eax
    b397:	00 00                	add    BYTE PTR [rax],al
    b399:	00 00                	add    BYTE PTR [rax],al
    b39b:	00 00                	add    BYTE PTR [rax],al
    b39d:	9b                   	fwait
    b39e:	75 00                	jne    b3a0 <_end+0x5388>
    b3a0:	00 03                	add    BYTE PTR [rbx],al
    b3a2:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b3a5:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b3b0:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b3b3:	00 00                	add    BYTE PTR [rax],al
    b3b5:	e7 34                	out    0x34,eax
    b3b7:	00 00                	add    BYTE PTR [rax],al
    b3b9:	00 00                	add    BYTE PTR [rax],al
    b3bb:	00 00                	add    BYTE PTR [rax],al
    b3bd:	03 00                	add    eax,DWORD PTR [rax]
    b3bf:	e7 34                	out    0x34,eax
    b3c1:	00 00                	add    BYTE PTR [rax],al
    b3c3:	00 00                	add    BYTE PTR [rax],al
    b3c5:	00 00                	add    BYTE PTR [rax],al
    b3c7:	3a 00                	cmp    al,BYTE PTR [rax]
    b3c9:	00 00                	add    BYTE PTR [rax],al
    b3cb:	00 00                	add    BYTE PTR [rax],al
    b3cd:	00 00                	add    BYTE PTR [rax],al
    b3cf:	21 34 29             	and    DWORD PTR [rcx+rbp*1],esi
    b3d2:	5d                   	pop    rbp
    b3d3:	00 00                	add    BYTE PTR [rax],al
    b3d5:	05 91 52 00 00       	add    eax,0x5291
    b3da:	3c 27                	cmp    al,0x27
    b3dc:	00 00                	add    BYTE PTR [rax],al
    b3de:	3a 27                	cmp    ah,BYTE PTR [rdi]
    b3e0:	00 00                	add    BYTE PTR [rax],al
    b3e2:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b3e8:	79 52                	jns    b43c <_end+0x5424>
    b3ea:	00 00                	add    BYTE PTR [rax],al
    b3ec:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b3ef:	00 00                	add    BYTE PTR [rax],al
    b3f1:	15 9d 52 00 00       	adc    eax,0x529d
    b3f6:	48 27                	rex.W (bad)
    b3f8:	00 00                	add    BYTE PTR [rax],al
    b3fa:	44 27                	rex.R (bad)
    b3fc:	00 00                	add    BYTE PTR [rax],al
    b3fe:	0a fa                	or     bh,dl
    b400:	34 00                	xor    al,0x0
    b402:	00 00                	add    BYTE PTR [rax],al
    b404:	00 00                	add    BYTE PTR [rax],al
    b406:	00 e5                	add    ch,ah
    b408:	3c 00                	cmp    al,0x0
    b40a:	00 f2                	add    dl,dh
    b40c:	5c                   	pop    rsp
    b40d:	00 00                	add    BYTE PTR [rax],al
    b40f:	03 01                	add    eax,DWORD PTR [rcx]
    b411:	55                   	push   rbp
    b412:	09 03                	or     DWORD PTR [rbx],eax
    b414:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    b417:	00 00                	add    BYTE PTR [rax],al
    b419:	00 00                	add    BYTE PTR [rax],al
    b41b:	00 03                	add    BYTE PTR [rbx],al
    b41d:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    b421:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b425:	00 00                	add    BYTE PTR [rax],al
    b427:	00 00                	add    BYTE PTR [rax],al
    b429:	00 0a                	add    BYTE PTR [rdx],cl
    b42b:	17                   	(bad)
    b42c:	35 00 00 00 00       	xor    eax,0x0
    b431:	00 00                	add    BYTE PTR [rax],al
    b433:	4d                   	rex.WRB
    b434:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b437:	12 5d 00             	adc    bl,BYTE PTR [rbp+0x0]
    b43a:	00 03                	add    BYTE PTR [rbx],al
    b43c:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b43f:	91                   	xchg   ecx,eax
    b440:	a8 7f                	test   al,0x7f
    b442:	06                   	(bad)
    b443:	03 01                	add    eax,DWORD PTR [rcx]
    b445:	58                   	pop    rax
    b446:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b449:	00 07                	add    BYTE PTR [rdi],al
    b44b:	21 35 00 00 00 00    	and    DWORD PTR [rip+0x0],esi        # b451 <_end+0x5439>
    b451:	00 00                	add    BYTE PTR [rax],al
    b453:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    b456:	00 03                	add    BYTE PTR [rbx],al
    b458:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b45b:	91                   	xchg   ecx,eax
    b45c:	a8 7f                	test   al,0x7f
    b45e:	06                   	(bad)
    b45f:	00 00                	add    BYTE PTR [rax],al
    b461:	19 d6                	sbb    esi,edx
    b463:	71 00                	jno    b465 <_end+0x544d>
    b465:	00 21                	add    BYTE PTR [rcx],ah
    b467:	35 00 00 00 00       	xor    eax,0x0
    b46c:	00 00                	add    BYTE PTR [rax],al
    b46e:	02 00                	add    al,BYTE PTR [rax]
    b470:	21 35 00 00 00 00    	and    DWORD PTR [rip+0x0],esi        # b476 <_end+0x545e>
    b476:	00 00                	add    BYTE PTR [rax],al
    b478:	0c 00                	or     al,0x0
    b47a:	00 00                	add    BYTE PTR [rax],al
    b47c:	00 00                	add    BYTE PTR [rax],al
    b47e:	00 00                	add    BYTE PTR [rax],al
    b480:	01 21                	add    DWORD PTR [rcx],esp
    b482:	34 05                	xor    al,0x5
    b484:	e4 71                	in     al,0x71
    b486:	00 00                	add    BYTE PTR [rax],al
    b488:	5b                   	pop    rbx
    b489:	27                   	(bad)
    b48a:	00 00                	add    BYTE PTR [rax],al
    b48c:	59                   	pop    rcx
    b48d:	27                   	(bad)
    b48e:	00 00                	add    BYTE PTR [rax],al
    b490:	07                   	(bad)
    b491:	2d 35 00 00 00       	sub    eax,0x35
    b496:	00 00                	add    BYTE PTR [rax],al
    b498:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b49e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b4a1:	03 c0                	add    eax,eax
    b4a3:	45 00 00             	add    BYTE PTR [r8],r8b
    b4a6:	00 00                	add    BYTE PTR [rax],al
    b4a8:	00 00                	add    BYTE PTR [rax],al
    b4aa:	00 00                	add    BYTE PTR [rax],al
    b4ac:	00 16                	add    BYTE PTR [rsi],dl
    b4ae:	48 34 00             	rex.W xor al,0x0
    b4b1:	00 00                	add    BYTE PTR [rax],al
    b4b3:	00 00                	add    BYTE PTR [rax],al
    b4b5:	00 6d 00             	add    BYTE PTR [rbp+0x0],ch
    b4b8:	00 00                	add    BYTE PTR [rax],al
    b4ba:	00 00                	add    BYTE PTR [rax],al
    b4bc:	00 00                	add    BYTE PTR [rax],al
    b4be:	7c 5f                	jl     b51f <_end+0x5507>
    b4c0:	00 00                	add    BYTE PTR [rax],al
    b4c2:	17                   	(bad)
    b4c3:	61                   	(bad)
    b4c4:	12 00                	adc    al,BYTE PTR [rax]
    b4c6:	00 22                	add    BYTE PTR [rdx],ah
    b4c8:	34 db                	xor    al,0xdb
    b4ca:	41 00 00             	add    BYTE PTR [r8],al
    b4cd:	09 d6                	or     esi,edx
    b4cf:	71 00                	jno    b4d1 <_end+0x54b9>
    b4d1:	00 48 34             	add    BYTE PTR [rax+0x34],cl
    b4d4:	00 00                	add    BYTE PTR [rax],al
    b4d6:	00 00                	add    BYTE PTR [rax],al
    b4d8:	00 00                	add    BYTE PTR [rax],al
    b4da:	02 00                	add    al,BYTE PTR [rax]
    b4dc:	48 34 00             	rex.W xor al,0x0
    b4df:	00 00                	add    BYTE PTR [rax],al
    b4e1:	00 00                	add    BYTE PTR [rax],al
    b4e3:	00 0f                	add    BYTE PTR [rdi],cl
    b4e5:	00 00                	add    BYTE PTR [rax],al
    b4e7:	00 00                	add    BYTE PTR [rax],al
    b4e9:	00 00                	add    BYTE PTR [rax],al
    b4eb:	00 22                	add    BYTE PTR [rdx],ah
    b4ed:	34 e3                	xor    al,0xe3
    b4ef:	5d                   	pop    rbp
    b4f0:	00 00                	add    BYTE PTR [rax],al
    b4f2:	05 e4 71 00 00       	add    eax,0x71e4
    b4f7:	6a 27                	push   0x27
    b4f9:	00 00                	add    BYTE PTR [rax],al
    b4fb:	68 27 00 00 07       	push   0x7000027
    b500:	57                   	push   rdi
    b501:	34 00                	xor    al,0x0
    b503:	00 00                	add    BYTE PTR [rax],al
    b505:	00 00                	add    BYTE PTR [rax],al
    b507:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b50d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b510:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b51b:	09 d6                	or     esi,edx
    b51d:	71 00                	jno    b51f <_end+0x5507>
    b51f:	00 57 34             	add    BYTE PTR [rdi+0x34],dl
    b522:	00 00                	add    BYTE PTR [rax],al
    b524:	00 00                	add    BYTE PTR [rax],al
    b526:	00 00                	add    BYTE PTR [rax],al
    b528:	02 00                	add    al,BYTE PTR [rax]
    b52a:	57                   	push   rdi
    b52b:	34 00                	xor    al,0x0
    b52d:	00 00                	add    BYTE PTR [rax],al
    b52f:	00 00                	add    BYTE PTR [rax],al
    b531:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b534:	00 00                	add    BYTE PTR [rax],al
    b536:	00 00                	add    BYTE PTR [rax],al
    b538:	00 00                	add    BYTE PTR [rax],al
    b53a:	22 34 31             	and    dh,BYTE PTR [rcx+rsi*1]
    b53d:	5e                   	pop    rsi
    b53e:	00 00                	add    BYTE PTR [rax],al
    b540:	05 e4 71 00 00       	add    eax,0x71e4
    b545:	79 27                	jns    b56e <_end+0x5556>
    b547:	00 00                	add    BYTE PTR [rax],al
    b549:	77 27                	ja     b572 <_end+0x555a>
    b54b:	00 00                	add    BYTE PTR [rax],al
    b54d:	07                   	(bad)
    b54e:	63 34 00             	movsxd esi,DWORD PTR [rax+rax*1]
    b551:	00 00                	add    BYTE PTR [rax],al
    b553:	00 00                	add    BYTE PTR [rax],al
    b555:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b55b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b55e:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    b564:	00 00                	add    BYTE PTR [rax],al
    b566:	00 00                	add    BYTE PTR [rax],al
    b568:	00 09                	add    BYTE PTR [rcx],cl
    b56a:	d6                   	(bad)
    b56b:	71 00                	jno    b56d <_end+0x5555>
    b56d:	00 63 34             	add    BYTE PTR [rbx+0x34],ah
    b570:	00 00                	add    BYTE PTR [rax],al
    b572:	00 00                	add    BYTE PTR [rax],al
    b574:	00 00                	add    BYTE PTR [rax],al
    b576:	02 00                	add    al,BYTE PTR [rax]
    b578:	63 34 00             	movsxd esi,DWORD PTR [rax+rax*1]
    b57b:	00 00                	add    BYTE PTR [rax],al
    b57d:	00 00                	add    BYTE PTR [rax],al
    b57f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b582:	00 00                	add    BYTE PTR [rax],al
    b584:	00 00                	add    BYTE PTR [rax],al
    b586:	00 00                	add    BYTE PTR [rax],al
    b588:	22 34 7f             	and    dh,BYTE PTR [rdi+rdi*2]
    b58b:	5e                   	pop    rsi
    b58c:	00 00                	add    BYTE PTR [rax],al
    b58e:	05 e4 71 00 00       	add    eax,0x71e4
    b593:	88 27                	mov    BYTE PTR [rdi],ah
    b595:	00 00                	add    BYTE PTR [rax],al
    b597:	86 27                	xchg   BYTE PTR [rdi],ah
    b599:	00 00                	add    BYTE PTR [rax],al
    b59b:	07                   	(bad)
    b59c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b59d:	34 00                	xor    al,0x0
    b59f:	00 00                	add    BYTE PTR [rax],al
    b5a1:	00 00                	add    BYTE PTR [rax],al
    b5a3:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b5a9:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b5ac:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b5b7:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b5ba:	00 00                	add    BYTE PTR [rax],al
    b5bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    b5bd:	34 00                	xor    al,0x0
    b5bf:	00 00                	add    BYTE PTR [rax],al
    b5c1:	00 00                	add    BYTE PTR [rax],al
    b5c3:	00 03                	add    BYTE PTR [rbx],al
    b5c5:	00 6f 34             	add    BYTE PTR [rdi+0x34],ch
    b5c8:	00 00                	add    BYTE PTR [rax],al
    b5ca:	00 00                	add    BYTE PTR [rax],al
    b5cc:	00 00                	add    BYTE PTR [rax],al
    b5ce:	3a 00                	cmp    al,BYTE PTR [rax]
    b5d0:	00 00                	add    BYTE PTR [rax],al
    b5d2:	00 00                	add    BYTE PTR [rax],al
    b5d4:	00 00                	add    BYTE PTR [rax],al
    b5d6:	22 34 30             	and    dh,BYTE PTR [rax+rsi*1]
    b5d9:	5f                   	pop    rdi
    b5da:	00 00                	add    BYTE PTR [rax],al
    b5dc:	05 91 52 00 00       	add    eax,0x5291
    b5e1:	97                   	xchg   edi,eax
    b5e2:	27                   	(bad)
    b5e3:	00 00                	add    BYTE PTR [rax],al
    b5e5:	95                   	xchg   ebp,eax
    b5e6:	27                   	(bad)
    b5e7:	00 00                	add    BYTE PTR [rax],al
    b5e9:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b5ef:	79 52                	jns    b643 <_end+0x562b>
    b5f1:	00 00                	add    BYTE PTR [rax],al
    b5f3:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b5f6:	00 00                	add    BYTE PTR [rax],al
    b5f8:	15 9d 52 00 00       	adc    eax,0x529d
    b5fd:	a3 27 00 00 9f 27 00 	movabs ds:0xa0000279f000027,eax
    b604:	00 0a 
    b606:	82                   	(bad)
    b607:	34 00                	xor    al,0x0
    b609:	00 00                	add    BYTE PTR [rax],al
    b60b:	00 00                	add    BYTE PTR [rax],al
    b60d:	00 e5                	add    ch,ah
    b60f:	3c 00                	cmp    al,0x0
    b611:	00 f9                	add    cl,bh
    b613:	5e                   	pop    rsi
    b614:	00 00                	add    BYTE PTR [rax],al
    b616:	03 01                	add    eax,DWORD PTR [rcx]
    b618:	55                   	push   rbp
    b619:	09 03                	or     DWORD PTR [rbx],eax
    b61b:	b7 42                	mov    bh,0x42
    b61d:	00 00                	add    BYTE PTR [rax],al
    b61f:	00 00                	add    BYTE PTR [rax],al
    b621:	00 00                	add    BYTE PTR [rax],al
    b623:	03 01                	add    eax,DWORD PTR [rcx]
    b625:	54                   	push   rsp
    b626:	09 03                	or     DWORD PTR [rbx],eax
    b628:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b62c:	00 00                	add    BYTE PTR [rax],al
    b62e:	00 00                	add    BYTE PTR [rax],al
    b630:	00 0a                	add    BYTE PTR [rdx],cl
    b632:	9f                   	lahf
    b633:	34 00                	xor    al,0x0
    b635:	00 00                	add    BYTE PTR [rax],al
    b637:	00 00                	add    BYTE PTR [rax],al
    b639:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b63c:	00 00                	add    BYTE PTR [rax],al
    b63e:	19 5f 00             	sbb    DWORD PTR [rdi+0x0],ebx
    b641:	00 03                	add    BYTE PTR [rbx],al
    b643:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b646:	91                   	xchg   ecx,eax
    b647:	a8 7f                	test   al,0x7f
    b649:	06                   	(bad)
    b64a:	03 01                	add    eax,DWORD PTR [rcx]
    b64c:	58                   	pop    rax
    b64d:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b650:	00 07                	add    BYTE PTR [rdi],al
    b652:	a9 34 00 00 00       	test   eax,0x34
    b657:	00 00                	add    BYTE PTR [rax],al
    b659:	00 33                	add    BYTE PTR [rbx],dh
    b65b:	3c 00                	cmp    al,0x0
    b65d:	00 03                	add    BYTE PTR [rbx],al
    b65f:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b662:	91                   	xchg   ecx,eax
    b663:	a8 7f                	test   al,0x7f
    b665:	06                   	(bad)
    b666:	00 00                	add    BYTE PTR [rax],al
    b668:	19 d6                	sbb    esi,edx
    b66a:	71 00                	jno    b66c <_end+0x5654>
    b66c:	00 a9 34 00 00 00    	add    BYTE PTR [rcx+0x34],ch
    b672:	00 00                	add    BYTE PTR [rax],al
    b674:	00 02                	add    BYTE PTR [rdx],al
    b676:	00 a9 34 00 00 00    	add    BYTE PTR [rcx+0x34],ch
    b67c:	00 00                	add    BYTE PTR [rax],al
    b67e:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b681:	00 00                	add    BYTE PTR [rax],al
    b683:	00 00                	add    BYTE PTR [rax],al
    b685:	00 00                	add    BYTE PTR [rax],al
    b687:	01 22                	add    DWORD PTR [rdx],esp
    b689:	34 05                	xor    al,0x5
    b68b:	e4 71                	in     al,0x71
    b68d:	00 00                	add    BYTE PTR [rax],al
    b68f:	b6 27                	mov    dh,0x27
    b691:	00 00                	add    BYTE PTR [rax],al
    b693:	b4 27                	mov    ah,0x27
    b695:	00 00                	add    BYTE PTR [rax],al
    b697:	07                   	(bad)
    b698:	b5 34                	mov    ch,0x34
    b69a:	00 00                	add    BYTE PTR [rax],al
    b69c:	00 00                	add    BYTE PTR [rax],al
    b69e:	00 00                	add    BYTE PTR [rax],al
    b6a0:	9b                   	fwait
    b6a1:	75 00                	jne    b6a3 <_end+0x568b>
    b6a3:	00 03                	add    BYTE PTR [rbx],al
    b6a5:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b6a8:	03 c0                	add    eax,eax
    b6aa:	45 00 00             	add    BYTE PTR [r8],r8b
    b6ad:	00 00                	add    BYTE PTR [rax],al
    b6af:	00 00                	add    BYTE PTR [rax],al
    b6b1:	00 00                	add    BYTE PTR [rax],al
    b6b3:	00 16                	add    BYTE PTR [rsi],dl
    b6b5:	d0 33                	shl    BYTE PTR [rbx],1
    b6b7:	00 00                	add    BYTE PTR [rax],al
    b6b9:	00 00                	add    BYTE PTR [rax],al
    b6bb:	00 00                	add    BYTE PTR [rax],al
    b6bd:	6d                   	ins    DWORD PTR es:[rdi],dx
    b6be:	00 00                	add    BYTE PTR [rax],al
    b6c0:	00 00                	add    BYTE PTR [rax],al
    b6c2:	00 00                	add    BYTE PTR [rax],al
    b6c4:	00 83 61 00 00 17    	add    BYTE PTR [rbx+0x17000061],al
    b6ca:	e7 17                	out    0x17,eax
    b6cc:	00 00                	add    BYTE PTR [rax],al
    b6ce:	23 34 db             	and    esi,DWORD PTR [rbx+rbx*8]
    b6d1:	41 00 00             	add    BYTE PTR [r8],al
    b6d4:	09 d6                	or     esi,edx
    b6d6:	71 00                	jno    b6d8 <_end+0x56c0>
    b6d8:	00 d0                	add    al,dl
    b6da:	33 00                	xor    eax,DWORD PTR [rax]
    b6dc:	00 00                	add    BYTE PTR [rax],al
    b6de:	00 00                	add    BYTE PTR [rax],al
    b6e0:	00 02                	add    BYTE PTR [rdx],al
    b6e2:	00 d0                	add    al,dl
    b6e4:	33 00                	xor    eax,DWORD PTR [rax]
    b6e6:	00 00                	add    BYTE PTR [rax],al
    b6e8:	00 00                	add    BYTE PTR [rax],al
    b6ea:	00 0f                	add    BYTE PTR [rdi],cl
    b6ec:	00 00                	add    BYTE PTR [rax],al
    b6ee:	00 00                	add    BYTE PTR [rax],al
    b6f0:	00 00                	add    BYTE PTR [rax],al
    b6f2:	00 23                	add    BYTE PTR [rbx],ah
    b6f4:	34 ea                	xor    al,0xea
    b6f6:	5f                   	pop    rdi
    b6f7:	00 00                	add    BYTE PTR [rax],al
    b6f9:	05 e4 71 00 00       	add    eax,0x71e4
    b6fe:	c5 27 00             	(bad)
    b701:	00 c3                	add    bl,al
    b703:	27                   	(bad)
    b704:	00 00                	add    BYTE PTR [rax],al
    b706:	07                   	(bad)
    b707:	df 33                	fbstp  TBYTE PTR [rbx]
    b709:	00 00                	add    BYTE PTR [rax],al
    b70b:	00 00                	add    BYTE PTR [rax],al
    b70d:	00 00                	add    BYTE PTR [rax],al
    b70f:	9b                   	fwait
    b710:	75 00                	jne    b712 <_end+0x56fa>
    b712:	00 03                	add    BYTE PTR [rbx],al
    b714:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b717:	03 58 45             	add    ebx,DWORD PTR [rax+0x45]
	...
    b722:	09 d6                	or     esi,edx
    b724:	71 00                	jno    b726 <_end+0x570e>
    b726:	00 df                	add    bh,bl
    b728:	33 00                	xor    eax,DWORD PTR [rax]
    b72a:	00 00                	add    BYTE PTR [rax],al
    b72c:	00 00                	add    BYTE PTR [rax],al
    b72e:	00 02                	add    BYTE PTR [rdx],al
    b730:	00 df                	add    bh,bl
    b732:	33 00                	xor    eax,DWORD PTR [rax]
    b734:	00 00                	add    BYTE PTR [rax],al
    b736:	00 00                	add    BYTE PTR [rax],al
    b738:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b73b:	00 00                	add    BYTE PTR [rax],al
    b73d:	00 00                	add    BYTE PTR [rax],al
    b73f:	00 00                	add    BYTE PTR [rax],al
    b741:	23 34 38             	and    esi,DWORD PTR [rax+rdi*1]
    b744:	60                   	(bad)
    b745:	00 00                	add    BYTE PTR [rax],al
    b747:	05 e4 71 00 00       	add    eax,0x71e4
    b74c:	d4                   	(bad)
    b74d:	27                   	(bad)
    b74e:	00 00                	add    BYTE PTR [rax],al
    b750:	d2 27                	shl    BYTE PTR [rdi],cl
    b752:	00 00                	add    BYTE PTR [rax],al
    b754:	07                   	(bad)
    b755:	eb 33                	jmp    b78a <_end+0x5772>
    b757:	00 00                	add    BYTE PTR [rax],al
    b759:	00 00                	add    BYTE PTR [rax],al
    b75b:	00 00                	add    BYTE PTR [rax],al
    b75d:	9b                   	fwait
    b75e:	75 00                	jne    b760 <_end+0x5748>
    b760:	00 03                	add    BYTE PTR [rbx],al
    b762:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b765:	03 d4                	add    edx,esp
    b767:	42 00 00             	rex.X add BYTE PTR [rax],al
    b76a:	00 00                	add    BYTE PTR [rax],al
    b76c:	00 00                	add    BYTE PTR [rax],al
    b76e:	00 00                	add    BYTE PTR [rax],al
    b770:	09 d6                	or     esi,edx
    b772:	71 00                	jno    b774 <_end+0x575c>
    b774:	00 eb                	add    bl,ch
    b776:	33 00                	xor    eax,DWORD PTR [rax]
    b778:	00 00                	add    BYTE PTR [rax],al
    b77a:	00 00                	add    BYTE PTR [rax],al
    b77c:	00 02                	add    BYTE PTR [rdx],al
    b77e:	00 eb                	add    bl,ch
    b780:	33 00                	xor    eax,DWORD PTR [rax]
    b782:	00 00                	add    BYTE PTR [rax],al
    b784:	00 00                	add    BYTE PTR [rax],al
    b786:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b789:	00 00                	add    BYTE PTR [rax],al
    b78b:	00 00                	add    BYTE PTR [rax],al
    b78d:	00 00                	add    BYTE PTR [rax],al
    b78f:	23 34 86             	and    esi,DWORD PTR [rsi+rax*4]
    b792:	60                   	(bad)
    b793:	00 00                	add    BYTE PTR [rax],al
    b795:	05 e4 71 00 00       	add    eax,0x71e4
    b79a:	e3 27                	jrcxz  b7c3 <_end+0x57ab>
    b79c:	00 00                	add    BYTE PTR [rax],al
    b79e:	e1 27                	loope  b7c7 <_end+0x57af>
    b7a0:	00 00                	add    BYTE PTR [rax],al
    b7a2:	07                   	(bad)
    b7a3:	f7 33                	div    DWORD PTR [rbx]
    b7a5:	00 00                	add    BYTE PTR [rax],al
    b7a7:	00 00                	add    BYTE PTR [rax],al
    b7a9:	00 00                	add    BYTE PTR [rax],al
    b7ab:	9b                   	fwait
    b7ac:	75 00                	jne    b7ae <_end+0x5796>
    b7ae:	00 03                	add    BYTE PTR [rbx],al
    b7b0:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b7b3:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b7be:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    b7c1:	00 00                	add    BYTE PTR [rax],al
    b7c3:	f7 33                	div    DWORD PTR [rbx]
    b7c5:	00 00                	add    BYTE PTR [rax],al
    b7c7:	00 00                	add    BYTE PTR [rax],al
    b7c9:	00 00                	add    BYTE PTR [rax],al
    b7cb:	03 00                	add    eax,DWORD PTR [rax]
    b7cd:	f7 33                	div    DWORD PTR [rbx]
    b7cf:	00 00                	add    BYTE PTR [rax],al
    b7d1:	00 00                	add    BYTE PTR [rax],al
    b7d3:	00 00                	add    BYTE PTR [rax],al
    b7d5:	3a 00                	cmp    al,BYTE PTR [rax]
    b7d7:	00 00                	add    BYTE PTR [rax],al
    b7d9:	00 00                	add    BYTE PTR [rax],al
    b7db:	00 00                	add    BYTE PTR [rax],al
    b7dd:	23 34 37             	and    esi,DWORD PTR [rdi+rsi*1]
    b7e0:	61                   	(bad)
    b7e1:	00 00                	add    BYTE PTR [rax],al
    b7e3:	05 91 52 00 00       	add    eax,0x5291
    b7e8:	f2 27                	repnz (bad)
    b7ea:	00 00                	add    BYTE PTR [rax],al
    b7ec:	f0 27                	lock (bad)
    b7ee:	00 00                	add    BYTE PTR [rax],al
    b7f0:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b7f6:	79 52                	jns    b84a <_end+0x5832>
    b7f8:	00 00                	add    BYTE PTR [rax],al
    b7fa:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b7fd:	00 00                	add    BYTE PTR [rax],al
    b7ff:	15 9d 52 00 00       	adc    eax,0x529d
    b804:	fe                   	(bad)
    b805:	27                   	(bad)
    b806:	00 00                	add    BYTE PTR [rax],al
    b808:	fa                   	cli
    b809:	27                   	(bad)
    b80a:	00 00                	add    BYTE PTR [rax],al
    b80c:	0a 0a                	or     cl,BYTE PTR [rdx]
    b80e:	34 00                	xor    al,0x0
    b810:	00 00                	add    BYTE PTR [rax],al
    b812:	00 00                	add    BYTE PTR [rax],al
    b814:	00 e5                	add    ch,ah
    b816:	3c 00                	cmp    al,0x0
    b818:	00 00                	add    BYTE PTR [rax],al
    b81a:	61                   	(bad)
    b81b:	00 00                	add    BYTE PTR [rax],al
    b81d:	03 01                	add    eax,DWORD PTR [rcx]
    b81f:	55                   	push   rbp
    b820:	09 03                	or     DWORD PTR [rbx],eax
    b822:	60                   	(bad)
    b823:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    b826:	00 00                	add    BYTE PTR [rax],al
    b828:	00 00                	add    BYTE PTR [rax],al
    b82a:	03 01                	add    eax,DWORD PTR [rcx]
    b82c:	54                   	push   rsp
    b82d:	09 03                	or     DWORD PTR [rbx],eax
    b82f:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    b833:	00 00                	add    BYTE PTR [rax],al
    b835:	00 00                	add    BYTE PTR [rax],al
    b837:	00 0a                	add    BYTE PTR [rdx],cl
    b839:	27                   	(bad)
    b83a:	34 00                	xor    al,0x0
    b83c:	00 00                	add    BYTE PTR [rax],al
    b83e:	00 00                	add    BYTE PTR [rax],al
    b840:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    b843:	00 00                	add    BYTE PTR [rax],al
    b845:	20 61 00             	and    BYTE PTR [rcx+0x0],ah
    b848:	00 03                	add    BYTE PTR [rbx],al
    b84a:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b84d:	91                   	xchg   ecx,eax
    b84e:	a8 7f                	test   al,0x7f
    b850:	06                   	(bad)
    b851:	03 01                	add    eax,DWORD PTR [rcx]
    b853:	58                   	pop    rax
    b854:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    b857:	00 07                	add    BYTE PTR [rdi],al
    b859:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    b85c:	00 00                	add    BYTE PTR [rax],al
    b85e:	00 00                	add    BYTE PTR [rax],al
    b860:	00 33                	add    BYTE PTR [rbx],dh
    b862:	3c 00                	cmp    al,0x0
    b864:	00 03                	add    BYTE PTR [rbx],al
    b866:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    b869:	91                   	xchg   ecx,eax
    b86a:	a8 7f                	test   al,0x7f
    b86c:	06                   	(bad)
    b86d:	00 00                	add    BYTE PTR [rax],al
    b86f:	19 d6                	sbb    esi,edx
    b871:	71 00                	jno    b873 <_end+0x585b>
    b873:	00 31                	add    BYTE PTR [rcx],dh
    b875:	34 00                	xor    al,0x0
    b877:	00 00                	add    BYTE PTR [rax],al
    b879:	00 00                	add    BYTE PTR [rax],al
    b87b:	00 02                	add    BYTE PTR [rdx],al
    b87d:	00 31                	add    BYTE PTR [rcx],dh
    b87f:	34 00                	xor    al,0x0
    b881:	00 00                	add    BYTE PTR [rax],al
    b883:	00 00                	add    BYTE PTR [rax],al
    b885:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b888:	00 00                	add    BYTE PTR [rax],al
    b88a:	00 00                	add    BYTE PTR [rax],al
    b88c:	00 00                	add    BYTE PTR [rax],al
    b88e:	01 23                	add    DWORD PTR [rbx],esp
    b890:	34 05                	xor    al,0x5
    b892:	e4 71                	in     al,0x71
    b894:	00 00                	add    BYTE PTR [rax],al
    b896:	11 28                	adc    DWORD PTR [rax],ebp
    b898:	00 00                	add    BYTE PTR [rax],al
    b89a:	0f 28 00             	movaps xmm0,XMMWORD PTR [rax]
    b89d:	00 07                	add    BYTE PTR [rdi],al
    b89f:	3d 34 00 00 00       	cmp    eax,0x34
    b8a4:	00 00                	add    BYTE PTR [rax],al
    b8a6:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b8ac:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b8af:	03 c0                	add    eax,eax
    b8b1:	45 00 00             	add    BYTE PTR [r8],r8b
    b8b4:	00 00                	add    BYTE PTR [rax],al
    b8b6:	00 00                	add    BYTE PTR [rax],al
    b8b8:	00 00                	add    BYTE PTR [rax],al
    b8ba:	00 16                	add    BYTE PTR [rsi],dl
    b8bc:	20 31                	and    BYTE PTR [rcx],dh
    b8be:	00 00                	add    BYTE PTR [rax],al
    b8c0:	00 00                	add    BYTE PTR [rax],al
    b8c2:	00 00                	add    BYTE PTR [rax],al
    b8c4:	74 00                	je     b8c6 <_end+0x58ae>
    b8c6:	00 00                	add    BYTE PTR [rax],al
    b8c8:	00 00                	add    BYTE PTR [rax],al
    b8ca:	00 00                	add    BYTE PTR [rax],al
    b8cc:	5e                   	pop    rsi
    b8cd:	63 00                	movsxd eax,DWORD PTR [rax]
    b8cf:	00 17                	add    BYTE PTR [rdi],dl
    b8d1:	a8 15                	test   al,0x15
    b8d3:	00 00                	add    BYTE PTR [rax],al
    b8d5:	25 09 db 41 00       	and    eax,0x41db09
    b8da:	00 09                	add    BYTE PTR [rcx],cl
    b8dc:	d6                   	(bad)
    b8dd:	71 00                	jno    b8df <_end+0x58c7>
    b8df:	00 20                	add    BYTE PTR [rax],ah
    b8e1:	31 00                	xor    DWORD PTR [rax],eax
    b8e3:	00 00                	add    BYTE PTR [rax],al
    b8e5:	00 00                	add    BYTE PTR [rax],al
    b8e7:	00 03                	add    BYTE PTR [rbx],al
    b8e9:	00 20                	add    BYTE PTR [rax],ah
    b8eb:	31 00                	xor    DWORD PTR [rax],eax
    b8ed:	00 00                	add    BYTE PTR [rax],al
    b8ef:	00 00                	add    BYTE PTR [rax],al
    b8f1:	00 0f                	add    BYTE PTR [rdi],cl
    b8f3:	00 00                	add    BYTE PTR [rax],al
    b8f5:	00 00                	add    BYTE PTR [rax],al
    b8f7:	00 00                	add    BYTE PTR [rax],al
    b8f9:	00 25 09 ea 61 00    	add    BYTE PTR [rip+0x61ea09],ah        # 62a308 <_end+0x6242f0>
    b8ff:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12ae9 <_end+0xcad1>
    b905:	20 28                	and    BYTE PTR [rax],ch
    b907:	00 00                	add    BYTE PTR [rax],al
    b909:	1e                   	(bad)
    b90a:	28 00                	sub    BYTE PTR [rax],al
    b90c:	00 07                	add    BYTE PTR [rdi],al
    b90e:	2f                   	(bad)
    b90f:	31 00                	xor    DWORD PTR [rax],eax
    b911:	00 00                	add    BYTE PTR [rax],al
    b913:	00 00                	add    BYTE PTR [rax],al
    b915:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b91b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    b91e:	7f 00                	jg     b920 <_end+0x5908>
    b920:	00 00                	add    BYTE PTR [rax],al
    b922:	09 d6                	or     esi,edx
    b924:	71 00                	jno    b926 <_end+0x590e>
    b926:	00 2f                	add    BYTE PTR [rdi],ch
    b928:	31 00                	xor    DWORD PTR [rax],eax
    b92a:	00 00                	add    BYTE PTR [rax],al
    b92c:	00 00                	add    BYTE PTR [rax],al
    b92e:	00 02                	add    BYTE PTR [rdx],al
    b930:	00 2f                	add    BYTE PTR [rdi],ch
    b932:	31 00                	xor    DWORD PTR [rax],eax
    b934:	00 00                	add    BYTE PTR [rax],al
    b936:	00 00                	add    BYTE PTR [rax],al
    b938:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b93b:	00 00                	add    BYTE PTR [rax],al
    b93d:	00 00                	add    BYTE PTR [rax],al
    b93f:	00 00                	add    BYTE PTR [rax],al
    b941:	25 09 38 62 00       	and    eax,0x623809
    b946:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12b30 <_end+0xcb18>
    b94c:	2f                   	(bad)
    b94d:	28 00                	sub    BYTE PTR [rax],al
    b94f:	00 2d 28 00 00 07    	add    BYTE PTR [rip+0x7000028],ch        # 700b97d <_end+0x7005965>
    b955:	3b 31                	cmp    esi,DWORD PTR [rcx]
    b957:	00 00                	add    BYTE PTR [rax],al
    b959:	00 00                	add    BYTE PTR [rax],al
    b95b:	00 00                	add    BYTE PTR [rax],al
    b95d:	9b                   	fwait
    b95e:	75 00                	jne    b960 <_end+0x5948>
    b960:	00 03                	add    BYTE PTR [rbx],al
    b962:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b965:	03 74 42 00          	add    esi,DWORD PTR [rdx+rax*2+0x0]
    b969:	00 00                	add    BYTE PTR [rax],al
    b96b:	00 00                	add    BYTE PTR [rax],al
    b96d:	00 00                	add    BYTE PTR [rax],al
    b96f:	00 09                	add    BYTE PTR [rcx],cl
    b971:	d6                   	(bad)
    b972:	71 00                	jno    b974 <_end+0x595c>
    b974:	00 3b                	add    BYTE PTR [rbx],bh
    b976:	31 00                	xor    DWORD PTR [rax],eax
    b978:	00 00                	add    BYTE PTR [rax],al
    b97a:	00 00                	add    BYTE PTR [rax],al
    b97c:	00 02                	add    BYTE PTR [rdx],al
    b97e:	00 3b                	add    BYTE PTR [rbx],bh
    b980:	31 00                	xor    DWORD PTR [rax],eax
    b982:	00 00                	add    BYTE PTR [rax],al
    b984:	00 00                	add    BYTE PTR [rax],al
    b986:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    b989:	00 00                	add    BYTE PTR [rax],al
    b98b:	00 00                	add    BYTE PTR [rax],al
    b98d:	00 00                	add    BYTE PTR [rax],al
    b98f:	25 09 86 62 00       	and    eax,0x628609
    b994:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12b7e <_end+0xcb66>
    b99a:	3e 28 00             	ds sub BYTE PTR [rax],al
    b99d:	00 3c 28             	add    BYTE PTR [rax+rbp*1],bh
    b9a0:	00 00                	add    BYTE PTR [rax],al
    b9a2:	07                   	(bad)
    b9a3:	47 31 00             	rex.RXB xor DWORD PTR [r8],r8d
    b9a6:	00 00                	add    BYTE PTR [rax],al
    b9a8:	00 00                	add    BYTE PTR [rax],al
    b9aa:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    b9b0:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    b9b3:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    b9be:	1c 5b                	sbb    al,0x5b
    b9c0:	52                   	push   rdx
    b9c1:	00 00                	add    BYTE PTR [rax],al
    b9c3:	47 31 00             	rex.RXB xor DWORD PTR [r8],r8d
    b9c6:	00 00                	add    BYTE PTR [rax],al
    b9c8:	00 00                	add    BYTE PTR [rax],al
    b9ca:	00 03                	add    BYTE PTR [rbx],al
    b9cc:	00 35 04 00 00 25    	add    BYTE PTR [rip+0x25000004],dh        # 2500b9d6 <_end+0x250059be>
    b9d2:	09 26                	or     DWORD PTR [rsi],esp
    b9d4:	63 00                	movsxd eax,DWORD PTR [rax]
    b9d6:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 10c6d <_end+0xac55>
    b9dc:	4d 28 00             	rex.WRB sub BYTE PTR [r8],r8b
    b9df:	00 4b 28             	add    BYTE PTR [rbx+0x28],cl
    b9e2:	00 00                	add    BYTE PTR [rax],al
    b9e4:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    b9ea:	79 52                	jns    ba3e <_end+0x5a26>
    b9ec:	00 00                	add    BYTE PTR [rax],al
    b9ee:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    b9f1:	00 00                	add    BYTE PTR [rax],al
    b9f3:	2e 35 04 00 00 15    	cs xor eax,0x15000004
    b9f9:	9d                   	popf
    b9fa:	52                   	push   rdx
    b9fb:	00 00                	add    BYTE PTR [rax],al
    b9fd:	5b                   	pop    rbx
    b9fe:	28 00                	sub    BYTE PTR [rax],al
    ba00:	00 55 28             	add    BYTE PTR [rbp+0x28],dl
    ba03:	00 00                	add    BYTE PTR [rax],al
    ba05:	0a 62 31             	or     ah,BYTE PTR [rdx+0x31]
    ba08:	00 00                	add    BYTE PTR [rax],al
    ba0a:	00 00                	add    BYTE PTR [rax],al
    ba0c:	00 00                	add    BYTE PTR [rax],al
    ba0e:	e5 3c                	in     eax,0x3c
    ba10:	00 00                	add    BYTE PTR [rax],al
    ba12:	f9                   	stc
    ba13:	62                   	(bad)
    ba14:	00 00                	add    BYTE PTR [rax],al
    ba16:	03 01                	add    eax,DWORD PTR [rcx]
    ba18:	55                   	push   rbp
    ba19:	09 03                	or     DWORD PTR [rbx],eax
    ba1b:	98                   	cwde
    ba1c:	45 00 00             	add    BYTE PTR [r8],r8b
    ba1f:	00 00                	add    BYTE PTR [rax],al
    ba21:	00 00                	add    BYTE PTR [rax],al
    ba23:	03 01                	add    eax,DWORD PTR [rcx]
    ba25:	54                   	push   rsp
    ba26:	09 03                	or     DWORD PTR [rbx],eax
    ba28:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    ba2c:	00 00                	add    BYTE PTR [rax],al
    ba2e:	00 00                	add    BYTE PTR [rax],al
    ba30:	00 0a                	add    BYTE PTR [rdx],cl
    ba32:	7d 31                	jge    ba65 <_end+0x5a4d>
    ba34:	00 00                	add    BYTE PTR [rax],al
    ba36:	00 00                	add    BYTE PTR [rax],al
    ba38:	00 00                	add    BYTE PTR [rax],al
    ba3a:	4d                   	rex.WRB
    ba3b:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    ba3e:	17                   	(bad)
    ba3f:	63 00                	movsxd eax,DWORD PTR [rax]
    ba41:	00 03                	add    BYTE PTR [rbx],al
    ba43:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ba46:	73 00                	jae    ba48 <_end+0x5a30>
    ba48:	03 01                	add    eax,DWORD PTR [rcx]
    ba4a:	58                   	pop    rax
    ba4b:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ba4e:	00 20                	add    BYTE PTR [rax],ah
    ba50:	8c 31                	mov    WORD PTR [rcx],?
    ba52:	00 00                	add    BYTE PTR [rax],al
    ba54:	00 00                	add    BYTE PTR [rax],al
    ba56:	00 00                	add    BYTE PTR [rax],al
    ba58:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    ba5b:	00 00                	add    BYTE PTR [rax],al
    ba5d:	00 39                	add    BYTE PTR [rcx],bh
    ba5f:	d6                   	(bad)
    ba60:	71 00                	jno    ba62 <_end+0x5a4a>
    ba62:	00 8c 31 00 00 00 00 	add    BYTE PTR [rcx+rsi*1+0x0],cl
    ba69:	00 00                	add    BYTE PTR [rax],al
    ba6b:	02 00                	add    al,BYTE PTR [rax]
    ba6d:	40 04 00             	rex add al,0x0
    ba70:	00 25 09 05 e4 71    	add    BYTE PTR [rip+0x71e40509],ah        # 71e4bf7f <_end+0x71e45f67>
    ba76:	00 00                	add    BYTE PTR [rax],al
    ba78:	73 28                	jae    baa2 <_end+0x5a8a>
    ba7a:	00 00                	add    BYTE PTR [rax],al
    ba7c:	71 28                	jno    baa6 <_end+0x5a8e>
    ba7e:	00 00                	add    BYTE PTR [rax],al
    ba80:	07                   	(bad)
    ba81:	94                   	xchg   esp,eax
    ba82:	31 00                	xor    DWORD PTR [rax],eax
    ba84:	00 00                	add    BYTE PTR [rax],al
    ba86:	00 00                	add    BYTE PTR [rax],al
    ba88:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    ba8e:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    ba91:	73 00                	jae    ba93 <_end+0x5a7b>
    ba93:	00 00                	add    BYTE PTR [rax],al
    ba95:	00 16                	add    BYTE PTR [rsi],dl
    ba97:	94                   	xchg   esp,eax
    ba98:	31 00                	xor    DWORD PTR [rax],eax
    ba9a:	00 00                	add    BYTE PTR [rax],al
    ba9c:	00 00                	add    BYTE PTR [rax],al
    ba9e:	00 5f 00             	add    BYTE PTR [rdi+0x0],bl
    baa1:	00 00                	add    BYTE PTR [rax],al
    baa3:	00 00                	add    BYTE PTR [rax],al
    baa5:	00 00                	add    BYTE PTR [rax],al
    baa7:	4c                   	rex.WR
    baa8:	65 00 00             	add    BYTE PTR gs:[rax],al
    baab:	17                   	(bad)
    baac:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    baad:	15 00 00 26 09       	adc    eax,0x9260000
    bab2:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    bab5:	00 09                	add    BYTE PTR [rcx],cl
    bab7:	d6                   	(bad)
    bab8:	71 00                	jno    baba <_end+0x5aa2>
    baba:	00 94 31 00 00 00 00 	add    BYTE PTR [rcx+rsi*1+0x0],dl
    bac1:	00 00                	add    BYTE PTR [rax],al
    bac3:	04 00                	add    al,0x0
    bac5:	94                   	xchg   esp,eax
    bac6:	31 00                	xor    DWORD PTR [rax],eax
    bac8:	00 00                	add    BYTE PTR [rax],al
    baca:	00 00                	add    BYTE PTR [rax],al
    bacc:	00 08                	add    BYTE PTR [rax],cl
    bace:	00 00                	add    BYTE PTR [rax],al
    bad0:	00 00                	add    BYTE PTR [rax],al
    bad2:	00 00                	add    BYTE PTR [rax],al
    bad4:	00 26                	add    BYTE PTR [rsi],ah
    bad6:	09 c5                	or     ebp,eax
    bad8:	63 00                	movsxd eax,DWORD PTR [rax]
    bada:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 12cc4 <_end+0xccac>
    bae0:	82                   	(bad)
    bae1:	28 00                	sub    BYTE PTR [rax],al
    bae3:	00 80 28 00 00 07    	add    BYTE PTR [rax+0x7000028],al
    bae9:	9c                   	pushf
    baea:	31 00                	xor    DWORD PTR [rax],eax
    baec:	00 00                	add    BYTE PTR [rax],al
    baee:	00 00                	add    BYTE PTR [rax],al
    baf0:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    baf6:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    baf9:	7f 00                	jg     bafb <_end+0x5ae3>
    bafb:	00 00                	add    BYTE PTR [rax],al
    bafd:	09 d6                	or     esi,edx
    baff:	71 00                	jno    bb01 <_end+0x5ae9>
    bb01:	00 9c 31 00 00 00 00 	add    BYTE PTR [rcx+rsi*1+0x0],bl
    bb08:	00 00                	add    BYTE PTR [rax],al
    bb0a:	02 00                	add    al,BYTE PTR [rax]
    bb0c:	9c                   	pushf
    bb0d:	31 00                	xor    DWORD PTR [rax],eax
    bb0f:	00 00                	add    BYTE PTR [rax],al
    bb11:	00 00                	add    BYTE PTR [rax],al
    bb13:	00 08                	add    BYTE PTR [rax],cl
    bb15:	00 00                	add    BYTE PTR [rax],al
    bb17:	00 00                	add    BYTE PTR [rax],al
    bb19:	00 00                	add    BYTE PTR [rax],al
    bb1b:	00 26                	add    BYTE PTR [rsi],ah
    bb1d:	09 0c 64             	or     DWORD PTR [rsp+riz*2],ecx
    bb20:	00 00                	add    BYTE PTR [rax],al
    bb22:	05 e4 71 00 00       	add    eax,0x71e4
    bb27:	91                   	xchg   ecx,eax
    bb28:	28 00                	sub    BYTE PTR [rax],al
    bb2a:	00 8f 28 00 00 07    	add    BYTE PTR [rdi+0x7000028],cl
    bb30:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    bb31:	31 00                	xor    DWORD PTR [rax],eax
    bb33:	00 00                	add    BYTE PTR [rax],al
    bb35:	00 00                	add    BYTE PTR [rax],al
    bb37:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bb3d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bb40:	7d 00                	jge    bb42 <_end+0x5b2a>
    bb42:	00 00                	add    BYTE PTR [rax],al
    bb44:	09 d6                	or     esi,edx
    bb46:	71 00                	jno    bb48 <_end+0x5b30>
    bb48:	00 a4 31 00 00 00 00 	add    BYTE PTR [rcx+rsi*1+0x0],ah
    bb4f:	00 00                	add    BYTE PTR [rax],al
    bb51:	02 00                	add    al,BYTE PTR [rax]
    bb53:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    bb54:	31 00                	xor    DWORD PTR [rax],eax
    bb56:	00 00                	add    BYTE PTR [rax],al
    bb58:	00 00                	add    BYTE PTR [rax],al
    bb5a:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bb5d:	00 00                	add    BYTE PTR [rax],al
    bb5f:	00 00                	add    BYTE PTR [rax],al
    bb61:	00 00                	add    BYTE PTR [rax],al
    bb63:	26 09 5a 64          	es or  DWORD PTR [rdx+0x64],ebx
    bb67:	00 00                	add    BYTE PTR [rax],al
    bb69:	05 e4 71 00 00       	add    eax,0x71e4
    bb6e:	a0 28 00 00 9e 28 00 	movabs al,ds:0x70000289e000028
    bb75:	00 07 
    bb77:	b0 31                	mov    al,0x31
    bb79:	00 00                	add    BYTE PTR [rax],al
    bb7b:	00 00                	add    BYTE PTR [rax],al
    bb7d:	00 00                	add    BYTE PTR [rax],al
    bb7f:	9b                   	fwait
    bb80:	75 00                	jne    bb82 <_end+0x5b6a>
    bb82:	00 03                	add    BYTE PTR [rbx],al
    bb84:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bb87:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bb92:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bb95:	00 00                	add    BYTE PTR [rax],al
    bb97:	b5 31                	mov    ch,0x31
	...
    bba1:	b5 31                	mov    ch,0x31
    bba3:	00 00                	add    BYTE PTR [rax],al
    bba5:	00 00                	add    BYTE PTR [rax],al
    bba7:	00 00                	add    BYTE PTR [rax],al
    bba9:	36 00 00             	ss add BYTE PTR [rax],al
    bbac:	00 00                	add    BYTE PTR [rax],al
    bbae:	00 00                	add    BYTE PTR [rax],al
    bbb0:	00 26                	add    BYTE PTR [rsi],ah
    bbb2:	09 07                	or     DWORD PTR [rdi],eax
    bbb4:	65 00 00             	add    BYTE PTR gs:[rax],al
    bbb7:	05 91 52 00 00       	add    eax,0x5291
    bbbc:	af                   	scas   eax,DWORD PTR es:[rdi]
    bbbd:	28 00                	sub    BYTE PTR [rax],al
    bbbf:	00 ad 28 00 00 0b    	add    BYTE PTR [rbp+0xb000028],ch
    bbc5:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    bbc8:	00 0b                	add    BYTE PTR [rbx],cl
    bbca:	79 52                	jns    bc1e <_end+0x5c06>
    bbcc:	00 00                	add    BYTE PTR [rax],al
    bbce:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bbd1:	00 00                	add    BYTE PTR [rax],al
    bbd3:	15 9d 52 00 00       	adc    eax,0x529d
    bbd8:	bb 28 00 00 b7       	mov    ebx,0xb7000028
    bbdd:	28 00                	sub    BYTE PTR [rax],al
    bbdf:	00 0a                	add    BYTE PTR [rdx],cl
    bbe1:	c8 31 00 00          	enter  0x31,0x0
    bbe5:	00 00                	add    BYTE PTR [rax],al
    bbe7:	00 00                	add    BYTE PTR [rax],al
    bbe9:	e5 3c                	in     eax,0x3c
    bbeb:	00 00                	add    BYTE PTR [rax],al
    bbed:	d4                   	(bad)
    bbee:	64 00 00             	add    BYTE PTR fs:[rax],al
    bbf1:	03 01                	add    eax,DWORD PTR [rcx]
    bbf3:	55                   	push   rbp
    bbf4:	09 03                	or     DWORD PTR [rbx],eax
    bbf6:	e0 45                	loopne bc3d <_end+0x5c25>
    bbf8:	00 00                	add    BYTE PTR [rax],al
    bbfa:	00 00                	add    BYTE PTR [rax],al
    bbfc:	00 00                	add    BYTE PTR [rax],al
    bbfe:	03 01                	add    eax,DWORD PTR [rcx]
    bc00:	54                   	push   rsp
    bc01:	09 03                	or     DWORD PTR [rbx],eax
    bc03:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bc07:	00 00                	add    BYTE PTR [rax],al
    bc09:	00 00                	add    BYTE PTR [rax],al
    bc0b:	00 0a                	add    BYTE PTR [rdx],cl
    bc0d:	e3 31                	jrcxz  bc40 <_end+0x5c28>
    bc0f:	00 00                	add    BYTE PTR [rax],al
    bc11:	00 00                	add    BYTE PTR [rax],al
    bc13:	00 00                	add    BYTE PTR [rax],al
    bc15:	4d                   	rex.WRB
    bc16:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bc19:	f2 64 00 00          	repnz add BYTE PTR fs:[rax],al
    bc1d:	03 01                	add    eax,DWORD PTR [rcx]
    bc1f:	55                   	push   rbp
    bc20:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    bc23:	03 01                	add    eax,DWORD PTR [rcx]
    bc25:	58                   	pop    rax
    bc26:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    bc29:	00 07                	add    BYTE PTR [rdi],al
    bc2b:	eb 31                	jmp    bc5e <_end+0x5c46>
    bc2d:	00 00                	add    BYTE PTR [rax],al
    bc2f:	00 00                	add    BYTE PTR [rax],al
    bc31:	00 00                	add    BYTE PTR [rax],al
    bc33:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    bc36:	00 03                	add    BYTE PTR [rbx],al
    bc38:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bc3b:	7d 00                	jge    bc3d <_end+0x5c25>
    bc3d:	00 00                	add    BYTE PTR [rax],al
    bc3f:	19 d6                	sbb    esi,edx
    bc41:	71 00                	jno    bc43 <_end+0x5c2b>
    bc43:	00 eb                	add    bl,ch
    bc45:	31 00                	xor    DWORD PTR [rax],eax
    bc47:	00 00                	add    BYTE PTR [rax],al
    bc49:	00 00                	add    BYTE PTR [rax],al
    bc4b:	00 02                	add    BYTE PTR [rdx],al
    bc4d:	00 eb                	add    bl,ch
    bc4f:	31 00                	xor    DWORD PTR [rax],eax
    bc51:	00 00                	add    BYTE PTR [rax],al
    bc53:	00 00                	add    BYTE PTR [rax],al
    bc55:	00 08                	add    BYTE PTR [rax],cl
    bc57:	00 00                	add    BYTE PTR [rax],al
    bc59:	00 00                	add    BYTE PTR [rax],al
    bc5b:	00 00                	add    BYTE PTR [rax],al
    bc5d:	00 01                	add    BYTE PTR [rcx],al
    bc5f:	26 09 05 e4 71 00 00 	es or  DWORD PTR [rip+0x71e4],eax        # 12e4a <_end+0xce32>
    bc66:	cc                   	int3
    bc67:	28 00                	sub    BYTE PTR [rax],al
    bc69:	00 ca                	add    dl,cl
    bc6b:	28 00                	sub    BYTE PTR [rax],al
    bc6d:	00 07                	add    BYTE PTR [rdi],al
    bc6f:	f3 31 00             	repz xor DWORD PTR [rax],eax
    bc72:	00 00                	add    BYTE PTR [rax],al
    bc74:	00 00                	add    BYTE PTR [rax],al
    bc76:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bc7c:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bc7f:	73 00                	jae    bc81 <_end+0x5c69>
    bc81:	00 00                	add    BYTE PTR [rax],al
    bc83:	00 16                	add    BYTE PTR [rsi],dl
    bc85:	f3 31 00             	repz xor DWORD PTR [rax],eax
    bc88:	00 00                	add    BYTE PTR [rax],al
    bc8a:	00 00                	add    BYTE PTR [rax],al
    bc8c:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    bc8f:	00 00                	add    BYTE PTR [rax],al
    bc91:	00 00                	add    BYTE PTR [rax],al
    bc93:	00 00                	add    BYTE PTR [rax],al
    bc95:	41                   	rex.B
    bc96:	67 00 00             	add    BYTE PTR [eax],al
    bc99:	17                   	(bad)
    bc9a:	e7 17                	out    0x17,eax
    bc9c:	00 00                	add    BYTE PTR [rax],al
    bc9e:	27                   	(bad)
    bc9f:	09 db                	or     ebx,ebx
    bca1:	41 00 00             	add    BYTE PTR [r8],al
    bca4:	09 d6                	or     esi,edx
    bca6:	71 00                	jno    bca8 <_end+0x5c90>
    bca8:	00 f3                	add    bl,dh
    bcaa:	31 00                	xor    DWORD PTR [rax],eax
    bcac:	00 00                	add    BYTE PTR [rax],al
    bcae:	00 00                	add    BYTE PTR [rax],al
    bcb0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    bcb3:	f3 31 00             	repz xor DWORD PTR [rax],eax
    bcb6:	00 00                	add    BYTE PTR [rax],al
    bcb8:	00 00                	add    BYTE PTR [rax],al
    bcba:	00 08                	add    BYTE PTR [rax],cl
    bcbc:	00 00                	add    BYTE PTR [rax],al
    bcbe:	00 00                	add    BYTE PTR [rax],al
    bcc0:	00 00                	add    BYTE PTR [rax],al
    bcc2:	00 27                	add    BYTE PTR [rdi],ah
    bcc4:	09 b3 65 00 00 05    	or     DWORD PTR [rbx+0x5000065],esi
    bcca:	e4 71                	in     al,0x71
    bccc:	00 00                	add    BYTE PTR [rax],al
    bcce:	db 28                	fld    TBYTE PTR [rax]
    bcd0:	00 00                	add    BYTE PTR [rax],al
    bcd2:	d9 28                	fldcw  WORD PTR [rax]
    bcd4:	00 00                	add    BYTE PTR [rax],al
    bcd6:	07                   	(bad)
    bcd7:	fb                   	sti
    bcd8:	31 00                	xor    DWORD PTR [rax],eax
    bcda:	00 00                	add    BYTE PTR [rax],al
    bcdc:	00 00                	add    BYTE PTR [rax],al
    bcde:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bce4:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bce7:	7f 00                	jg     bce9 <_end+0x5cd1>
    bce9:	00 00                	add    BYTE PTR [rax],al
    bceb:	09 d6                	or     esi,edx
    bced:	71 00                	jno    bcef <_end+0x5cd7>
    bcef:	00 fb                	add    bl,bh
    bcf1:	31 00                	xor    DWORD PTR [rax],eax
    bcf3:	00 00                	add    BYTE PTR [rax],al
    bcf5:	00 00                	add    BYTE PTR [rax],al
    bcf7:	00 02                	add    BYTE PTR [rdx],al
    bcf9:	00 fb                	add    bl,bh
    bcfb:	31 00                	xor    DWORD PTR [rax],eax
    bcfd:	00 00                	add    BYTE PTR [rax],al
    bcff:	00 00                	add    BYTE PTR [rax],al
    bd01:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd04:	00 00                	add    BYTE PTR [rax],al
    bd06:	00 00                	add    BYTE PTR [rax],al
    bd08:	00 00                	add    BYTE PTR [rax],al
    bd0a:	27                   	(bad)
    bd0b:	09 01                	or     DWORD PTR [rcx],eax
    bd0d:	66 00 00             	data16 add BYTE PTR [rax],al
    bd10:	05 e4 71 00 00       	add    eax,0x71e4
    bd15:	ea                   	(bad)
    bd16:	28 00                	sub    BYTE PTR [rax],al
    bd18:	00 e8                	add    al,ch
    bd1a:	28 00                	sub    BYTE PTR [rax],al
    bd1c:	00 07                	add    BYTE PTR [rdi],al
    bd1e:	07                   	(bad)
    bd1f:	32 00                	xor    al,BYTE PTR [rax]
    bd21:	00 00                	add    BYTE PTR [rax],al
    bd23:	00 00                	add    BYTE PTR [rax],al
    bd25:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bd2b:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bd2e:	03 d4                	add    edx,esp
    bd30:	42 00 00             	rex.X add BYTE PTR [rax],al
    bd33:	00 00                	add    BYTE PTR [rax],al
    bd35:	00 00                	add    BYTE PTR [rax],al
    bd37:	00 00                	add    BYTE PTR [rax],al
    bd39:	09 d6                	or     esi,edx
    bd3b:	71 00                	jno    bd3d <_end+0x5d25>
    bd3d:	00 07                	add    BYTE PTR [rdi],al
    bd3f:	32 00                	xor    al,BYTE PTR [rax]
    bd41:	00 00                	add    BYTE PTR [rax],al
    bd43:	00 00                	add    BYTE PTR [rax],al
    bd45:	00 02                	add    BYTE PTR [rdx],al
    bd47:	00 07                	add    BYTE PTR [rdi],al
    bd49:	32 00                	xor    al,BYTE PTR [rax]
    bd4b:	00 00                	add    BYTE PTR [rax],al
    bd4d:	00 00                	add    BYTE PTR [rax],al
    bd4f:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bd52:	00 00                	add    BYTE PTR [rax],al
    bd54:	00 00                	add    BYTE PTR [rax],al
    bd56:	00 00                	add    BYTE PTR [rax],al
    bd58:	27                   	(bad)
    bd59:	09 4f 66             	or     DWORD PTR [rdi+0x66],ecx
    bd5c:	00 00                	add    BYTE PTR [rax],al
    bd5e:	05 e4 71 00 00       	add    eax,0x71e4
    bd63:	f9                   	stc
    bd64:	28 00                	sub    BYTE PTR [rax],al
    bd66:	00 f7                	add    bh,dh
    bd68:	28 00                	sub    BYTE PTR [rax],al
    bd6a:	00 07                	add    BYTE PTR [rdi],al
    bd6c:	13 32                	adc    esi,DWORD PTR [rdx]
    bd6e:	00 00                	add    BYTE PTR [rax],al
    bd70:	00 00                	add    BYTE PTR [rax],al
    bd72:	00 00                	add    BYTE PTR [rax],al
    bd74:	9b                   	fwait
    bd75:	75 00                	jne    bd77 <_end+0x5d5f>
    bd77:	00 03                	add    BYTE PTR [rbx],al
    bd79:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bd7c:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bd87:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bd8a:	00 00                	add    BYTE PTR [rax],al
    bd8c:	13 32                	adc    esi,DWORD PTR [rdx]
    bd8e:	00 00                	add    BYTE PTR [rax],al
    bd90:	00 00                	add    BYTE PTR [rax],al
    bd92:	00 00                	add    BYTE PTR [rax],al
    bd94:	03 00                	add    eax,DWORD PTR [rax]
    bd96:	13 32                	adc    esi,DWORD PTR [rdx]
    bd98:	00 00                	add    BYTE PTR [rax],al
    bd9a:	00 00                	add    BYTE PTR [rax],al
    bd9c:	00 00                	add    BYTE PTR [rax],al
    bd9e:	36 00 00             	ss add BYTE PTR [rax],al
    bda1:	00 00                	add    BYTE PTR [rax],al
    bda3:	00 00                	add    BYTE PTR [rax],al
    bda5:	00 27                	add    BYTE PTR [rdi],ah
    bda7:	09 fc                	or     esp,edi
    bda9:	66 00 00             	data16 add BYTE PTR [rax],al
    bdac:	05 91 52 00 00       	add    eax,0x5291
    bdb1:	08 29                	or     BYTE PTR [rcx],ch
    bdb3:	00 00                	add    BYTE PTR [rax],al
    bdb5:	06                   	(bad)
    bdb6:	29 00                	sub    DWORD PTR [rax],eax
    bdb8:	00 0b                	add    BYTE PTR [rbx],cl
    bdba:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    bdbd:	00 0b                	add    BYTE PTR [rbx],cl
    bdbf:	79 52                	jns    be13 <_end+0x5dfb>
    bdc1:	00 00                	add    BYTE PTR [rax],al
    bdc3:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bdc6:	00 00                	add    BYTE PTR [rax],al
    bdc8:	15 9d 52 00 00       	adc    eax,0x529d
    bdcd:	14 29                	adc    al,0x29
    bdcf:	00 00                	add    BYTE PTR [rax],al
    bdd1:	10 29                	adc    BYTE PTR [rcx],ch
    bdd3:	00 00                	add    BYTE PTR [rax],al
    bdd5:	0a 26                	or     ah,BYTE PTR [rsi]
    bdd7:	32 00                	xor    al,BYTE PTR [rax]
    bdd9:	00 00                	add    BYTE PTR [rax],al
    bddb:	00 00                	add    BYTE PTR [rax],al
    bddd:	00 e5                	add    ch,ah
    bddf:	3c 00                	cmp    al,0x0
    bde1:	00 c9                	add    cl,cl
    bde3:	66 00 00             	data16 add BYTE PTR [rax],al
    bde6:	03 01                	add    eax,DWORD PTR [rcx]
    bde8:	55                   	push   rbp
    bde9:	09 03                	or     DWORD PTR [rbx],eax
    bdeb:	60                   	(bad)
    bdec:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bdef:	00 00                	add    BYTE PTR [rax],al
    bdf1:	00 00                	add    BYTE PTR [rax],al
    bdf3:	03 01                	add    eax,DWORD PTR [rcx]
    bdf5:	54                   	push   rsp
    bdf6:	09 03                	or     DWORD PTR [rbx],eax
    bdf8:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bdfc:	00 00                	add    BYTE PTR [rax],al
    bdfe:	00 00                	add    BYTE PTR [rax],al
    be00:	00 0a                	add    BYTE PTR [rdx],cl
    be02:	41 32 00             	xor    al,BYTE PTR [r8]
    be05:	00 00                	add    BYTE PTR [rax],al
    be07:	00 00                	add    BYTE PTR [rax],al
    be09:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    be0c:	00 00                	add    BYTE PTR [rax],al
    be0e:	e7 66                	out    0x66,eax
    be10:	00 00                	add    BYTE PTR [rax],al
    be12:	03 01                	add    eax,DWORD PTR [rcx]
    be14:	55                   	push   rbp
    be15:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    be18:	03 01                	add    eax,DWORD PTR [rcx]
    be1a:	58                   	pop    rax
    be1b:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    be1e:	00 07                	add    BYTE PTR [rdi],al
    be20:	49 32 00             	rex.WB xor al,BYTE PTR [r8]
    be23:	00 00                	add    BYTE PTR [rax],al
    be25:	00 00                	add    BYTE PTR [rax],al
    be27:	00 33                	add    BYTE PTR [rbx],dh
    be29:	3c 00                	cmp    al,0x0
    be2b:	00 03                	add    BYTE PTR [rbx],al
    be2d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be30:	7d 00                	jge    be32 <_end+0x5e1a>
    be32:	00 00                	add    BYTE PTR [rax],al
    be34:	19 d6                	sbb    esi,edx
    be36:	71 00                	jno    be38 <_end+0x5e20>
    be38:	00 49 32             	add    BYTE PTR [rcx+0x32],cl
    be3b:	00 00                	add    BYTE PTR [rax],al
    be3d:	00 00                	add    BYTE PTR [rax],al
    be3f:	00 00                	add    BYTE PTR [rax],al
    be41:	02 00                	add    al,BYTE PTR [rax]
    be43:	49 32 00             	rex.WB xor al,BYTE PTR [r8]
    be46:	00 00                	add    BYTE PTR [rax],al
    be48:	00 00                	add    BYTE PTR [rax],al
    be4a:	00 08                	add    BYTE PTR [rax],cl
    be4c:	00 00                	add    BYTE PTR [rax],al
    be4e:	00 00                	add    BYTE PTR [rax],al
    be50:	00 00                	add    BYTE PTR [rax],al
    be52:	00 01                	add    BYTE PTR [rcx],al
    be54:	27                   	(bad)
    be55:	09 05 e4 71 00 00    	or     DWORD PTR [rip+0x71e4],eax        # 1303f <_end+0xd027>
    be5b:	25 29 00 00 23       	and    eax,0x23000029
    be60:	29 00                	sub    DWORD PTR [rax],eax
    be62:	00 07                	add    BYTE PTR [rdi],al
    be64:	51                   	push   rcx
    be65:	32 00                	xor    al,BYTE PTR [rax]
    be67:	00 00                	add    BYTE PTR [rax],al
    be69:	00 00                	add    BYTE PTR [rax],al
    be6b:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    be71:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    be74:	73 00                	jae    be76 <_end+0x5e5e>
    be76:	00 00                	add    BYTE PTR [rax],al
    be78:	00 16                	add    BYTE PTR [rsi],dl
    be7a:	51                   	push   rcx
    be7b:	32 00                	xor    al,BYTE PTR [rax]
    be7d:	00 00                	add    BYTE PTR [rax],al
    be7f:	00 00                	add    BYTE PTR [rax],al
    be81:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    be84:	00 00                	add    BYTE PTR [rax],al
    be86:	00 00                	add    BYTE PTR [rax],al
    be88:	00 00                	add    BYTE PTR [rax],al
    be8a:	36 69 00 00 17 ce 1d 	ss imul eax,DWORD PTR [rax],0x1dce1700
    be91:	00 00                	add    BYTE PTR [rax],al
    be93:	28 09                	sub    BYTE PTR [rcx],cl
    be95:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    be98:	00 09                	add    BYTE PTR [rcx],cl
    be9a:	d6                   	(bad)
    be9b:	71 00                	jno    be9d <_end+0x5e85>
    be9d:	00 51 32             	add    BYTE PTR [rcx+0x32],dl
    bea0:	00 00                	add    BYTE PTR [rax],al
    bea2:	00 00                	add    BYTE PTR [rax],al
    bea4:	00 00                	add    BYTE PTR [rax],al
    bea6:	04 00                	add    al,0x0
    bea8:	51                   	push   rcx
    bea9:	32 00                	xor    al,BYTE PTR [rax]
    beab:	00 00                	add    BYTE PTR [rax],al
    bead:	00 00                	add    BYTE PTR [rax],al
    beaf:	00 08                	add    BYTE PTR [rax],cl
    beb1:	00 00                	add    BYTE PTR [rax],al
    beb3:	00 00                	add    BYTE PTR [rax],al
    beb5:	00 00                	add    BYTE PTR [rax],al
    beb7:	00 28                	add    BYTE PTR [rax],ch
    beb9:	09 a8 67 00 00 05    	or     DWORD PTR [rax+0x5000067],ebp
    bebf:	e4 71                	in     al,0x71
    bec1:	00 00                	add    BYTE PTR [rax],al
    bec3:	34 29                	xor    al,0x29
    bec5:	00 00                	add    BYTE PTR [rax],al
    bec7:	32 29                	xor    ch,BYTE PTR [rcx]
    bec9:	00 00                	add    BYTE PTR [rax],al
    becb:	07                   	(bad)
    becc:	59                   	pop    rcx
    becd:	32 00                	xor    al,BYTE PTR [rax]
    becf:	00 00                	add    BYTE PTR [rax],al
    bed1:	00 00                	add    BYTE PTR [rax],al
    bed3:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bed9:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    bedc:	7f 00                	jg     bede <_end+0x5ec6>
    bede:	00 00                	add    BYTE PTR [rax],al
    bee0:	09 d6                	or     esi,edx
    bee2:	71 00                	jno    bee4 <_end+0x5ecc>
    bee4:	00 59 32             	add    BYTE PTR [rcx+0x32],bl
    bee7:	00 00                	add    BYTE PTR [rax],al
    bee9:	00 00                	add    BYTE PTR [rax],al
    beeb:	00 00                	add    BYTE PTR [rax],al
    beed:	02 00                	add    al,BYTE PTR [rax]
    beef:	59                   	pop    rcx
    bef0:	32 00                	xor    al,BYTE PTR [rax]
    bef2:	00 00                	add    BYTE PTR [rax],al
    bef4:	00 00                	add    BYTE PTR [rax],al
    bef6:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bef9:	00 00                	add    BYTE PTR [rax],al
    befb:	00 00                	add    BYTE PTR [rax],al
    befd:	00 00                	add    BYTE PTR [rax],al
    beff:	28 09                	sub    BYTE PTR [rcx],cl
    bf01:	f6 67 00             	mul    BYTE PTR [rdi+0x0]
    bf04:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 130ee <_end+0xd0d6>
    bf0a:	43 29 00             	rex.XB sub DWORD PTR [r8],eax
    bf0d:	00 41 29             	add    BYTE PTR [rcx+0x29],al
    bf10:	00 00                	add    BYTE PTR [rax],al
    bf12:	07                   	(bad)
    bf13:	65 32 00             	xor    al,BYTE PTR gs:[rax]
    bf16:	00 00                	add    BYTE PTR [rax],al
    bf18:	00 00                	add    BYTE PTR [rax],al
    bf1a:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    bf20:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf23:	03 82 42 00 00 00    	add    eax,DWORD PTR [rdx+0x42]
    bf29:	00 00                	add    BYTE PTR [rax],al
    bf2b:	00 00                	add    BYTE PTR [rax],al
    bf2d:	00 09                	add    BYTE PTR [rcx],cl
    bf2f:	d6                   	(bad)
    bf30:	71 00                	jno    bf32 <_end+0x5f1a>
    bf32:	00 65 32             	add    BYTE PTR [rbp+0x32],ah
    bf35:	00 00                	add    BYTE PTR [rax],al
    bf37:	00 00                	add    BYTE PTR [rax],al
    bf39:	00 00                	add    BYTE PTR [rax],al
    bf3b:	02 00                	add    al,BYTE PTR [rax]
    bf3d:	65 32 00             	xor    al,BYTE PTR gs:[rax]
    bf40:	00 00                	add    BYTE PTR [rax],al
    bf42:	00 00                	add    BYTE PTR [rax],al
    bf44:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    bf47:	00 00                	add    BYTE PTR [rax],al
    bf49:	00 00                	add    BYTE PTR [rax],al
    bf4b:	00 00                	add    BYTE PTR [rax],al
    bf4d:	28 09                	sub    BYTE PTR [rcx],cl
    bf4f:	44 68 00 00 05 e4    	rex.R push 0xffffffffe4050000
    bf55:	71 00                	jno    bf57 <_end+0x5f3f>
    bf57:	00 52 29             	add    BYTE PTR [rdx+0x29],dl
    bf5a:	00 00                	add    BYTE PTR [rax],al
    bf5c:	50                   	push   rax
    bf5d:	29 00                	sub    DWORD PTR [rax],eax
    bf5f:	00 07                	add    BYTE PTR [rdi],al
    bf61:	71 32                	jno    bf95 <_end+0x5f7d>
    bf63:	00 00                	add    BYTE PTR [rax],al
    bf65:	00 00                	add    BYTE PTR [rax],al
    bf67:	00 00                	add    BYTE PTR [rax],al
    bf69:	9b                   	fwait
    bf6a:	75 00                	jne    bf6c <_end+0x5f54>
    bf6c:	00 03                	add    BYTE PTR [rbx],al
    bf6e:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bf71:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    bf7c:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    bf7f:	00 00                	add    BYTE PTR [rax],al
    bf81:	71 32                	jno    bfb5 <_end+0x5f9d>
    bf83:	00 00                	add    BYTE PTR [rax],al
    bf85:	00 00                	add    BYTE PTR [rax],al
    bf87:	00 00                	add    BYTE PTR [rax],al
    bf89:	03 00                	add    eax,DWORD PTR [rax]
    bf8b:	71 32                	jno    bfbf <_end+0x5fa7>
    bf8d:	00 00                	add    BYTE PTR [rax],al
    bf8f:	00 00                	add    BYTE PTR [rax],al
    bf91:	00 00                	add    BYTE PTR [rax],al
    bf93:	36 00 00             	ss add BYTE PTR [rax],al
    bf96:	00 00                	add    BYTE PTR [rax],al
    bf98:	00 00                	add    BYTE PTR [rax],al
    bf9a:	00 28                	add    BYTE PTR [rax],ch
    bf9c:	09 f1                	or     ecx,esi
    bf9e:	68 00 00 05 91       	push   0xffffffff91050000
    bfa3:	52                   	push   rdx
    bfa4:	00 00                	add    BYTE PTR [rax],al
    bfa6:	61                   	(bad)
    bfa7:	29 00                	sub    DWORD PTR [rax],eax
    bfa9:	00 5f 29             	add    BYTE PTR [rdi+0x29],bl
    bfac:	00 00                	add    BYTE PTR [rax],al
    bfae:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    bfb4:	79 52                	jns    c008 <_end+0x5ff0>
    bfb6:	00 00                	add    BYTE PTR [rax],al
    bfb8:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    bfbb:	00 00                	add    BYTE PTR [rax],al
    bfbd:	15 9d 52 00 00       	adc    eax,0x529d
    bfc2:	6d                   	ins    DWORD PTR es:[rdi],dx
    bfc3:	29 00                	sub    DWORD PTR [rax],eax
    bfc5:	00 69 29             	add    BYTE PTR [rcx+0x29],ch
    bfc8:	00 00                	add    BYTE PTR [rax],al
    bfca:	0a 84 32 00 00 00 00 	or     al,BYTE PTR [rdx+rsi*1+0x0]
    bfd1:	00 00                	add    BYTE PTR [rax],al
    bfd3:	e5 3c                	in     eax,0x3c
    bfd5:	00 00                	add    BYTE PTR [rax],al
    bfd7:	be 68 00 00 03       	mov    esi,0x3000068
    bfdc:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    bfdf:	03 10                	add    edx,DWORD PTR [rax]
    bfe1:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    bfe4:	00 00                	add    BYTE PTR [rax],al
    bfe6:	00 00                	add    BYTE PTR [rax],al
    bfe8:	03 01                	add    eax,DWORD PTR [rcx]
    bfea:	54                   	push   rsp
    bfeb:	09 03                	or     DWORD PTR [rbx],eax
    bfed:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    bff1:	00 00                	add    BYTE PTR [rax],al
    bff3:	00 00                	add    BYTE PTR [rax],al
    bff5:	00 0a                	add    BYTE PTR [rdx],cl
    bff7:	9f                   	lahf
    bff8:	32 00                	xor    al,BYTE PTR [rax]
    bffa:	00 00                	add    BYTE PTR [rax],al
    bffc:	00 00                	add    BYTE PTR [rax],al
    bffe:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c001:	00 00                	add    BYTE PTR [rax],al
    c003:	dc 68 00             	fsubr  QWORD PTR [rax+0x0]
    c006:	00 03                	add    BYTE PTR [rbx],al
    c008:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c00b:	7d 00                	jge    c00d <_end+0x5ff5>
    c00d:	03 01                	add    eax,DWORD PTR [rcx]
    c00f:	58                   	pop    rax
    c010:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c013:	00 07                	add    BYTE PTR [rdi],al
    c015:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    c016:	32 00                	xor    al,BYTE PTR [rax]
    c018:	00 00                	add    BYTE PTR [rax],al
    c01a:	00 00                	add    BYTE PTR [rax],al
    c01c:	00 33                	add    BYTE PTR [rbx],dh
    c01e:	3c 00                	cmp    al,0x0
    c020:	00 03                	add    BYTE PTR [rbx],al
    c022:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c025:	7d 00                	jge    c027 <_end+0x600f>
    c027:	00 00                	add    BYTE PTR [rax],al
    c029:	19 d6                	sbb    esi,edx
    c02b:	71 00                	jno    c02d <_end+0x6015>
    c02d:	00 a7 32 00 00 00    	add    BYTE PTR [rdi+0x32],ah
    c033:	00 00                	add    BYTE PTR [rax],al
    c035:	00 02                	add    BYTE PTR [rdx],al
    c037:	00 a7 32 00 00 00    	add    BYTE PTR [rdi+0x32],ah
    c03d:	00 00                	add    BYTE PTR [rax],al
    c03f:	00 08                	add    BYTE PTR [rax],cl
    c041:	00 00                	add    BYTE PTR [rax],al
    c043:	00 00                	add    BYTE PTR [rax],al
    c045:	00 00                	add    BYTE PTR [rax],al
    c047:	00 01                	add    BYTE PTR [rcx],al
    c049:	28 09                	sub    BYTE PTR [rcx],cl
    c04b:	05 e4 71 00 00       	add    eax,0x71e4
    c050:	7e 29                	jle    c07b <_end+0x6063>
    c052:	00 00                	add    BYTE PTR [rax],al
    c054:	7c 29                	jl     c07f <_end+0x6067>
    c056:	00 00                	add    BYTE PTR [rax],al
    c058:	07                   	(bad)
    c059:	af                   	scas   eax,DWORD PTR es:[rdi]
    c05a:	32 00                	xor    al,BYTE PTR [rax]
    c05c:	00 00                	add    BYTE PTR [rax],al
    c05e:	00 00                	add    BYTE PTR [rax],al
    c060:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c066:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c069:	73 00                	jae    c06b <_end+0x6053>
    c06b:	00 00                	add    BYTE PTR [rax],al
    c06d:	00 16                	add    BYTE PTR [rsi],dl
    c06f:	af                   	scas   eax,DWORD PTR es:[rdi]
    c070:	32 00                	xor    al,BYTE PTR [rax]
    c072:	00 00                	add    BYTE PTR [rax],al
    c074:	00 00                	add    BYTE PTR [rax],al
    c076:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c079:	00 00                	add    BYTE PTR [rax],al
    c07b:	00 00                	add    BYTE PTR [rax],al
    c07d:	00 00                	add    BYTE PTR [rax],al
    c07f:	2b 6b 00             	sub    ebp,DWORD PTR [rbx+0x0]
    c082:	00 17                	add    BYTE PTR [rdi],dl
    c084:	4d 0d 00 00 29 09    	rex.WRB or rax,0x9290000
    c08a:	db 41 00             	fild   DWORD PTR [rcx+0x0]
    c08d:	00 09                	add    BYTE PTR [rcx],cl
    c08f:	d6                   	(bad)
    c090:	71 00                	jno    c092 <_end+0x607a>
    c092:	00 af 32 00 00 00    	add    BYTE PTR [rdi+0x32],ch
    c098:	00 00                	add    BYTE PTR [rax],al
    c09a:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c09d:	af                   	scas   eax,DWORD PTR es:[rdi]
    c09e:	32 00                	xor    al,BYTE PTR [rax]
    c0a0:	00 00                	add    BYTE PTR [rax],al
    c0a2:	00 00                	add    BYTE PTR [rax],al
    c0a4:	00 08                	add    BYTE PTR [rax],cl
    c0a6:	00 00                	add    BYTE PTR [rax],al
    c0a8:	00 00                	add    BYTE PTR [rax],al
    c0aa:	00 00                	add    BYTE PTR [rax],al
    c0ac:	00 29                	add    BYTE PTR [rcx],ch
    c0ae:	09 9d 69 00 00 05    	or     DWORD PTR [rbp+0x5000069],ebx
    c0b4:	e4 71                	in     al,0x71
    c0b6:	00 00                	add    BYTE PTR [rax],al
    c0b8:	8d 29                	lea    ebp,[rcx]
    c0ba:	00 00                	add    BYTE PTR [rax],al
    c0bc:	8b 29                	mov    ebp,DWORD PTR [rcx]
    c0be:	00 00                	add    BYTE PTR [rax],al
    c0c0:	07                   	(bad)
    c0c1:	b7 32                	mov    bh,0x32
    c0c3:	00 00                	add    BYTE PTR [rax],al
    c0c5:	00 00                	add    BYTE PTR [rax],al
    c0c7:	00 00                	add    BYTE PTR [rax],al
    c0c9:	9b                   	fwait
    c0ca:	75 00                	jne    c0cc <_end+0x60b4>
    c0cc:	00 03                	add    BYTE PTR [rbx],al
    c0ce:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c0d1:	7f 00                	jg     c0d3 <_end+0x60bb>
    c0d3:	00 00                	add    BYTE PTR [rax],al
    c0d5:	09 d6                	or     esi,edx
    c0d7:	71 00                	jno    c0d9 <_end+0x60c1>
    c0d9:	00 b7 32 00 00 00    	add    BYTE PTR [rdi+0x32],dh
    c0df:	00 00                	add    BYTE PTR [rax],al
    c0e1:	00 02                	add    BYTE PTR [rdx],al
    c0e3:	00 b7 32 00 00 00    	add    BYTE PTR [rdi+0x32],dh
    c0e9:	00 00                	add    BYTE PTR [rax],al
    c0eb:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c0ee:	00 00                	add    BYTE PTR [rax],al
    c0f0:	00 00                	add    BYTE PTR [rax],al
    c0f2:	00 00                	add    BYTE PTR [rax],al
    c0f4:	29 09                	sub    DWORD PTR [rcx],ecx
    c0f6:	eb 69                	jmp    c161 <_end+0x6149>
    c0f8:	00 00                	add    BYTE PTR [rax],al
    c0fa:	05 e4 71 00 00       	add    eax,0x71e4
    c0ff:	9c                   	pushf
    c100:	29 00                	sub    DWORD PTR [rax],eax
    c102:	00 9a 29 00 00 07    	add    BYTE PTR [rdx+0x7000029],bl
    c108:	c3                   	ret
    c109:	32 00                	xor    al,BYTE PTR [rax]
    c10b:	00 00                	add    BYTE PTR [rax],al
    c10d:	00 00                	add    BYTE PTR [rax],al
    c10f:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c115:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c118:	03 8a 42 00 00 00    	add    ecx,DWORD PTR [rdx+0x42]
    c11e:	00 00                	add    BYTE PTR [rax],al
    c120:	00 00                	add    BYTE PTR [rax],al
    c122:	00 09                	add    BYTE PTR [rcx],cl
    c124:	d6                   	(bad)
    c125:	71 00                	jno    c127 <_end+0x610f>
    c127:	00 c3                	add    bl,al
    c129:	32 00                	xor    al,BYTE PTR [rax]
    c12b:	00 00                	add    BYTE PTR [rax],al
    c12d:	00 00                	add    BYTE PTR [rax],al
    c12f:	00 02                	add    BYTE PTR [rdx],al
    c131:	00 c3                	add    bl,al
    c133:	32 00                	xor    al,BYTE PTR [rax]
    c135:	00 00                	add    BYTE PTR [rax],al
    c137:	00 00                	add    BYTE PTR [rax],al
    c139:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c13c:	00 00                	add    BYTE PTR [rax],al
    c13e:	00 00                	add    BYTE PTR [rax],al
    c140:	00 00                	add    BYTE PTR [rax],al
    c142:	29 09                	sub    DWORD PTR [rcx],ecx
    c144:	39 6a 00             	cmp    DWORD PTR [rdx+0x0],ebp
    c147:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 13331 <_end+0xd319>
    c14d:	ab                   	stos   DWORD PTR es:[rdi],eax
    c14e:	29 00                	sub    DWORD PTR [rax],eax
    c150:	00 a9 29 00 00 07    	add    BYTE PTR [rcx+0x7000029],ch
    c156:	cf                   	iret
    c157:	32 00                	xor    al,BYTE PTR [rax]
    c159:	00 00                	add    BYTE PTR [rax],al
    c15b:	00 00                	add    BYTE PTR [rax],al
    c15d:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c163:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c166:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c171:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c174:	00 00                	add    BYTE PTR [rax],al
    c176:	cf                   	iret
    c177:	32 00                	xor    al,BYTE PTR [rax]
    c179:	00 00                	add    BYTE PTR [rax],al
    c17b:	00 00                	add    BYTE PTR [rax],al
    c17d:	00 03                	add    BYTE PTR [rbx],al
    c17f:	00 cf                	add    bh,cl
    c181:	32 00                	xor    al,BYTE PTR [rax]
    c183:	00 00                	add    BYTE PTR [rax],al
    c185:	00 00                	add    BYTE PTR [rax],al
    c187:	00 36                	add    BYTE PTR [rsi],dh
    c189:	00 00                	add    BYTE PTR [rax],al
    c18b:	00 00                	add    BYTE PTR [rax],al
    c18d:	00 00                	add    BYTE PTR [rax],al
    c18f:	00 29                	add    BYTE PTR [rcx],ch
    c191:	09 e6                	or     esi,esp
    c193:	6a 00                	push   0x0
    c195:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 1142c <_end+0xb414>
    c19b:	ba 29 00 00 b8       	mov    edx,0xb8000029
    c1a0:	29 00                	sub    DWORD PTR [rax],eax
    c1a2:	00 0b                	add    BYTE PTR [rbx],cl
    c1a4:	85 52 00             	test   DWORD PTR [rdx+0x0],edx
    c1a7:	00 0b                	add    BYTE PTR [rbx],cl
    c1a9:	79 52                	jns    c1fd <_end+0x61e5>
    c1ab:	00 00                	add    BYTE PTR [rax],al
    c1ad:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c1b0:	00 00                	add    BYTE PTR [rax],al
    c1b2:	15 9d 52 00 00       	adc    eax,0x529d
    c1b7:	c6                   	(bad)
    c1b8:	29 00                	sub    DWORD PTR [rax],eax
    c1ba:	00 c2                	add    dl,al
    c1bc:	29 00                	sub    DWORD PTR [rax],eax
    c1be:	00 0a                	add    BYTE PTR [rdx],cl
    c1c0:	e2 32                	loop   c1f4 <_end+0x61dc>
    c1c2:	00 00                	add    BYTE PTR [rax],al
    c1c4:	00 00                	add    BYTE PTR [rax],al
    c1c6:	00 00                	add    BYTE PTR [rax],al
    c1c8:	e5 3c                	in     eax,0x3c
    c1ca:	00 00                	add    BYTE PTR [rax],al
    c1cc:	b3 6a                	mov    bl,0x6a
    c1ce:	00 00                	add    BYTE PTR [rax],al
    c1d0:	03 01                	add    eax,DWORD PTR [rcx]
    c1d2:	55                   	push   rbp
    c1d3:	09 03                	or     DWORD PTR [rbx],eax
    c1d5:	8e 42 00             	mov    es,WORD PTR [rdx+0x0]
    c1d8:	00 00                	add    BYTE PTR [rax],al
    c1da:	00 00                	add    BYTE PTR [rax],al
    c1dc:	00 03                	add    BYTE PTR [rbx],al
    c1de:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c1e2:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c1e6:	00 00                	add    BYTE PTR [rax],al
    c1e8:	00 00                	add    BYTE PTR [rax],al
    c1ea:	00 0a                	add    BYTE PTR [rdx],cl
    c1ec:	fd                   	std
    c1ed:	32 00                	xor    al,BYTE PTR [rax]
    c1ef:	00 00                	add    BYTE PTR [rax],al
    c1f1:	00 00                	add    BYTE PTR [rax],al
    c1f3:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c1f6:	00 00                	add    BYTE PTR [rax],al
    c1f8:	d1 6a 00             	shr    DWORD PTR [rdx+0x0],1
    c1fb:	00 03                	add    BYTE PTR [rbx],al
    c1fd:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c200:	7d 00                	jge    c202 <_end+0x61ea>
    c202:	03 01                	add    eax,DWORD PTR [rcx]
    c204:	58                   	pop    rax
    c205:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c208:	00 07                	add    BYTE PTR [rdi],al
    c20a:	05 33 00 00 00       	add    eax,0x33
    c20f:	00 00                	add    BYTE PTR [rax],al
    c211:	00 33                	add    BYTE PTR [rbx],dh
    c213:	3c 00                	cmp    al,0x0
    c215:	00 03                	add    BYTE PTR [rbx],al
    c217:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c21a:	7d 00                	jge    c21c <_end+0x6204>
    c21c:	00 00                	add    BYTE PTR [rax],al
    c21e:	19 d6                	sbb    esi,edx
    c220:	71 00                	jno    c222 <_end+0x620a>
    c222:	00 05 33 00 00 00    	add    BYTE PTR [rip+0x33],al        # c25b <_end+0x6243>
    c228:	00 00                	add    BYTE PTR [rax],al
    c22a:	00 02                	add    BYTE PTR [rdx],al
    c22c:	00 05 33 00 00 00    	add    BYTE PTR [rip+0x33],al        # c265 <_end+0x624d>
    c232:	00 00                	add    BYTE PTR [rax],al
    c234:	00 08                	add    BYTE PTR [rax],cl
    c236:	00 00                	add    BYTE PTR [rax],al
    c238:	00 00                	add    BYTE PTR [rax],al
    c23a:	00 00                	add    BYTE PTR [rax],al
    c23c:	00 01                	add    BYTE PTR [rcx],al
    c23e:	29 09                	sub    DWORD PTR [rcx],ecx
    c240:	05 e4 71 00 00       	add    eax,0x71e4
    c245:	d7                   	xlat   BYTE PTR ds:[rbx]
    c246:	29 00                	sub    DWORD PTR [rax],eax
    c248:	00 d5                	add    ch,dl
    c24a:	29 00                	sub    DWORD PTR [rax],eax
    c24c:	00 07                	add    BYTE PTR [rdi],al
    c24e:	0d 33 00 00 00       	or     eax,0x33
    c253:	00 00                	add    BYTE PTR [rax],al
    c255:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c25b:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c25e:	73 00                	jae    c260 <_end+0x6248>
    c260:	00 00                	add    BYTE PTR [rax],al
    c262:	00 16                	add    BYTE PTR [rsi],dl
    c264:	0d 33 00 00 00       	or     eax,0x33
    c269:	00 00                	add    BYTE PTR [rax],al
    c26b:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c26e:	00 00                	add    BYTE PTR [rax],al
    c270:	00 00                	add    BYTE PTR [rax],al
    c272:	00 00                	add    BYTE PTR [rax],al
    c274:	20 6d 00             	and    BYTE PTR [rbp+0x0],ch
    c277:	00 17                	add    BYTE PTR [rdi],dl
    c279:	ed                   	in     eax,dx
    c27a:	33 00                	xor    eax,DWORD PTR [rax]
    c27c:	00 2a                	add    BYTE PTR [rdx],ch
    c27e:	09 db                	or     ebx,ebx
    c280:	41 00 00             	add    BYTE PTR [r8],al
    c283:	09 d6                	or     esi,edx
    c285:	71 00                	jno    c287 <_end+0x626f>
    c287:	00 0d 33 00 00 00    	add    BYTE PTR [rip+0x33],cl        # c2c0 <_end+0x62a8>
    c28d:	00 00                	add    BYTE PTR [rax],al
    c28f:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    c292:	0d 33 00 00 00       	or     eax,0x33
    c297:	00 00                	add    BYTE PTR [rax],al
    c299:	00 08                	add    BYTE PTR [rax],cl
    c29b:	00 00                	add    BYTE PTR [rax],al
    c29d:	00 00                	add    BYTE PTR [rax],al
    c29f:	00 00                	add    BYTE PTR [rax],al
    c2a1:	00 2a                	add    BYTE PTR [rdx],ch
    c2a3:	09 92 6b 00 00 05    	or     DWORD PTR [rdx+0x500006b],edx
    c2a9:	e4 71                	in     al,0x71
    c2ab:	00 00                	add    BYTE PTR [rax],al
    c2ad:	e6 29                	out    0x29,al
    c2af:	00 00                	add    BYTE PTR [rax],al
    c2b1:	e4 29                	in     al,0x29
    c2b3:	00 00                	add    BYTE PTR [rax],al
    c2b5:	07                   	(bad)
    c2b6:	15 33 00 00 00       	adc    eax,0x33
    c2bb:	00 00                	add    BYTE PTR [rax],al
    c2bd:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c2c3:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c2c6:	7f 00                	jg     c2c8 <_end+0x62b0>
    c2c8:	00 00                	add    BYTE PTR [rax],al
    c2ca:	09 d6                	or     esi,edx
    c2cc:	71 00                	jno    c2ce <_end+0x62b6>
    c2ce:	00 15 33 00 00 00    	add    BYTE PTR [rip+0x33],dl        # c307 <_end+0x62ef>
    c2d4:	00 00                	add    BYTE PTR [rax],al
    c2d6:	00 02                	add    BYTE PTR [rdx],al
    c2d8:	00 15 33 00 00 00    	add    BYTE PTR [rip+0x33],dl        # c311 <_end+0x62f9>
    c2de:	00 00                	add    BYTE PTR [rax],al
    c2e0:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c2e3:	00 00                	add    BYTE PTR [rax],al
    c2e5:	00 00                	add    BYTE PTR [rax],al
    c2e7:	00 00                	add    BYTE PTR [rax],al
    c2e9:	2a 09                	sub    cl,BYTE PTR [rcx]
    c2eb:	e0 6b                	loopne c358 <_end+0x6340>
    c2ed:	00 00                	add    BYTE PTR [rax],al
    c2ef:	05 e4 71 00 00       	add    eax,0x71e4
    c2f4:	f5                   	cmc
    c2f5:	29 00                	sub    DWORD PTR [rax],eax
    c2f7:	00 f3                	add    bl,dh
    c2f9:	29 00                	sub    DWORD PTR [rax],eax
    c2fb:	00 07                	add    BYTE PTR [rdi],al
    c2fd:	21 33                	and    DWORD PTR [rbx],esi
    c2ff:	00 00                	add    BYTE PTR [rax],al
    c301:	00 00                	add    BYTE PTR [rax],al
    c303:	00 00                	add    BYTE PTR [rax],al
    c305:	9b                   	fwait
    c306:	75 00                	jne    c308 <_end+0x62f0>
    c308:	00 03                	add    BYTE PTR [rbx],al
    c30a:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c30d:	03 ab 42 00 00 00    	add    ebp,DWORD PTR [rbx+0x42]
    c313:	00 00                	add    BYTE PTR [rax],al
    c315:	00 00                	add    BYTE PTR [rax],al
    c317:	00 09                	add    BYTE PTR [rcx],cl
    c319:	d6                   	(bad)
    c31a:	71 00                	jno    c31c <_end+0x6304>
    c31c:	00 21                	add    BYTE PTR [rcx],ah
    c31e:	33 00                	xor    eax,DWORD PTR [rax]
    c320:	00 00                	add    BYTE PTR [rax],al
    c322:	00 00                	add    BYTE PTR [rax],al
    c324:	00 02                	add    BYTE PTR [rdx],al
    c326:	00 21                	add    BYTE PTR [rcx],ah
    c328:	33 00                	xor    eax,DWORD PTR [rax]
    c32a:	00 00                	add    BYTE PTR [rax],al
    c32c:	00 00                	add    BYTE PTR [rax],al
    c32e:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    c331:	00 00                	add    BYTE PTR [rax],al
    c333:	00 00                	add    BYTE PTR [rax],al
    c335:	00 00                	add    BYTE PTR [rax],al
    c337:	2a 09                	sub    cl,BYTE PTR [rcx]
    c339:	2e 6c                	cs ins BYTE PTR es:[rdi],dx
    c33b:	00 00                	add    BYTE PTR [rax],al
    c33d:	05 e4 71 00 00       	add    eax,0x71e4
    c342:	04 2a                	add    al,0x2a
    c344:	00 00                	add    BYTE PTR [rax],al
    c346:	02 2a                	add    ch,BYTE PTR [rdx]
    c348:	00 00                	add    BYTE PTR [rax],al
    c34a:	07                   	(bad)
    c34b:	2d 33 00 00 00       	sub    eax,0x33
    c350:	00 00                	add    BYTE PTR [rax],al
    c352:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c358:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c35b:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c366:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c369:	00 00                	add    BYTE PTR [rax],al
    c36b:	2d 33 00 00 00       	sub    eax,0x33
    c370:	00 00                	add    BYTE PTR [rax],al
    c372:	00 03                	add    BYTE PTR [rbx],al
    c374:	00 2d 33 00 00 00    	add    BYTE PTR [rip+0x33],ch        # c3ad <_end+0x6395>
    c37a:	00 00                	add    BYTE PTR [rax],al
    c37c:	00 36                	add    BYTE PTR [rsi],dh
    c37e:	00 00                	add    BYTE PTR [rax],al
    c380:	00 00                	add    BYTE PTR [rax],al
    c382:	00 00                	add    BYTE PTR [rax],al
    c384:	00 2a                	add    BYTE PTR [rdx],ch
    c386:	09 db                	or     ebx,ebx
    c388:	6c                   	ins    BYTE PTR es:[rdi],dx
    c389:	00 00                	add    BYTE PTR [rax],al
    c38b:	05 91 52 00 00       	add    eax,0x5291
    c390:	13 2a                	adc    ebp,DWORD PTR [rdx]
    c392:	00 00                	add    BYTE PTR [rax],al
    c394:	11 2a                	adc    DWORD PTR [rdx],ebp
    c396:	00 00                	add    BYTE PTR [rax],al
    c398:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    c39e:	79 52                	jns    c3f2 <_end+0x63da>
    c3a0:	00 00                	add    BYTE PTR [rax],al
    c3a2:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c3a5:	00 00                	add    BYTE PTR [rax],al
    c3a7:	15 9d 52 00 00       	adc    eax,0x529d
    c3ac:	1f                   	(bad)
    c3ad:	2a 00                	sub    al,BYTE PTR [rax]
    c3af:	00 1b                	add    BYTE PTR [rbx],bl
    c3b1:	2a 00                	sub    al,BYTE PTR [rax]
    c3b3:	00 0a                	add    BYTE PTR [rdx],cl
    c3b5:	40 33 00             	rex xor eax,DWORD PTR [rax]
    c3b8:	00 00                	add    BYTE PTR [rax],al
    c3ba:	00 00                	add    BYTE PTR [rax],al
    c3bc:	00 e5                	add    ch,ah
    c3be:	3c 00                	cmp    al,0x0
    c3c0:	00 a8 6c 00 00 03    	add    BYTE PTR [rax+0x300006c],ch
    c3c6:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c3c9:	03 38                	add    edi,DWORD PTR [rax]
    c3cb:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c3ce:	00 00                	add    BYTE PTR [rax],al
    c3d0:	00 00                	add    BYTE PTR [rax],al
    c3d2:	03 01                	add    eax,DWORD PTR [rcx]
    c3d4:	54                   	push   rsp
    c3d5:	09 03                	or     DWORD PTR [rbx],eax
    c3d7:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c3db:	00 00                	add    BYTE PTR [rax],al
    c3dd:	00 00                	add    BYTE PTR [rax],al
    c3df:	00 0a                	add    BYTE PTR [rdx],cl
    c3e1:	5b                   	pop    rbx
    c3e2:	33 00                	xor    eax,DWORD PTR [rax]
    c3e4:	00 00                	add    BYTE PTR [rax],al
    c3e6:	00 00                	add    BYTE PTR [rax],al
    c3e8:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c3eb:	00 00                	add    BYTE PTR [rax],al
    c3ed:	c6                   	(bad)
    c3ee:	6c                   	ins    BYTE PTR es:[rdi],dx
    c3ef:	00 00                	add    BYTE PTR [rax],al
    c3f1:	03 01                	add    eax,DWORD PTR [rcx]
    c3f3:	55                   	push   rbp
    c3f4:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c3f7:	03 01                	add    eax,DWORD PTR [rcx]
    c3f9:	58                   	pop    rax
    c3fa:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c3fd:	00 07                	add    BYTE PTR [rdi],al
    c3ff:	63 33                	movsxd esi,DWORD PTR [rbx]
    c401:	00 00                	add    BYTE PTR [rax],al
    c403:	00 00                	add    BYTE PTR [rax],al
    c405:	00 00                	add    BYTE PTR [rax],al
    c407:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    c40a:	00 03                	add    BYTE PTR [rbx],al
    c40c:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c40f:	7d 00                	jge    c411 <_end+0x63f9>
    c411:	00 00                	add    BYTE PTR [rax],al
    c413:	19 d6                	sbb    esi,edx
    c415:	71 00                	jno    c417 <_end+0x63ff>
    c417:	00 63 33             	add    BYTE PTR [rbx+0x33],ah
    c41a:	00 00                	add    BYTE PTR [rax],al
    c41c:	00 00                	add    BYTE PTR [rax],al
    c41e:	00 00                	add    BYTE PTR [rax],al
    c420:	02 00                	add    al,BYTE PTR [rax]
    c422:	63 33                	movsxd esi,DWORD PTR [rbx]
    c424:	00 00                	add    BYTE PTR [rax],al
    c426:	00 00                	add    BYTE PTR [rax],al
    c428:	00 00                	add    BYTE PTR [rax],al
    c42a:	08 00                	or     BYTE PTR [rax],al
    c42c:	00 00                	add    BYTE PTR [rax],al
    c42e:	00 00                	add    BYTE PTR [rax],al
    c430:	00 00                	add    BYTE PTR [rax],al
    c432:	01 2a                	add    DWORD PTR [rdx],ebp
    c434:	09 05 e4 71 00 00    	or     DWORD PTR [rip+0x71e4],eax        # 1361e <_end+0xd606>
    c43a:	30 2a                	xor    BYTE PTR [rdx],ch
    c43c:	00 00                	add    BYTE PTR [rax],al
    c43e:	2e 2a 00             	cs sub al,BYTE PTR [rax]
    c441:	00 07                	add    BYTE PTR [rdi],al
    c443:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    c446:	00 00                	add    BYTE PTR [rax],al
    c448:	00 00                	add    BYTE PTR [rax],al
    c44a:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c450:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c453:	73 00                	jae    c455 <_end+0x643d>
    c455:	00 00                	add    BYTE PTR [rax],al
    c457:	00 16                	add    BYTE PTR [rsi],dl
    c459:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    c45c:	00 00                	add    BYTE PTR [rax],al
    c45e:	00 00                	add    BYTE PTR [rax],al
    c460:	00 5e 00             	add    BYTE PTR [rsi+0x0],bl
    c463:	00 00                	add    BYTE PTR [rax],al
    c465:	00 00                	add    BYTE PTR [rax],al
    c467:	00 00                	add    BYTE PTR [rax],al
    c469:	15 6f 00 00 17       	adc    eax,0x1700006f
    c46e:	61                   	(bad)
    c46f:	12 00                	adc    al,BYTE PTR [rax]
    c471:	00 2b                	add    BYTE PTR [rbx],ch
    c473:	09 db                	or     ebx,ebx
    c475:	41 00 00             	add    BYTE PTR [r8],al
    c478:	09 d6                	or     esi,edx
    c47a:	71 00                	jno    c47c <_end+0x6464>
    c47c:	00 6b 33             	add    BYTE PTR [rbx+0x33],ch
    c47f:	00 00                	add    BYTE PTR [rax],al
    c481:	00 00                	add    BYTE PTR [rax],al
    c483:	00 00                	add    BYTE PTR [rax],al
    c485:	04 00                	add    al,0x0
    c487:	6b 33 00             	imul   esi,DWORD PTR [rbx],0x0
    c48a:	00 00                	add    BYTE PTR [rax],al
    c48c:	00 00                	add    BYTE PTR [rax],al
    c48e:	00 08                	add    BYTE PTR [rax],cl
    c490:	00 00                	add    BYTE PTR [rax],al
    c492:	00 00                	add    BYTE PTR [rax],al
    c494:	00 00                	add    BYTE PTR [rax],al
    c496:	00 2b                	add    BYTE PTR [rbx],ch
    c498:	09 87 6d 00 00 05    	or     DWORD PTR [rdi+0x500006d],eax
    c49e:	e4 71                	in     al,0x71
    c4a0:	00 00                	add    BYTE PTR [rax],al
    c4a2:	3f                   	(bad)
    c4a3:	2a 00                	sub    al,BYTE PTR [rax]
    c4a5:	00 3d 2a 00 00 07    	add    BYTE PTR [rip+0x700002a],bh        # 700c4d5 <_end+0x70064bd>
    c4ab:	73 33                	jae    c4e0 <_end+0x64c8>
    c4ad:	00 00                	add    BYTE PTR [rax],al
    c4af:	00 00                	add    BYTE PTR [rax],al
    c4b1:	00 00                	add    BYTE PTR [rax],al
    c4b3:	9b                   	fwait
    c4b4:	75 00                	jne    c4b6 <_end+0x649e>
    c4b6:	00 03                	add    BYTE PTR [rbx],al
    c4b8:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c4bb:	7f 00                	jg     c4bd <_end+0x64a5>
    c4bd:	00 00                	add    BYTE PTR [rax],al
    c4bf:	09 d6                	or     esi,edx
    c4c1:	71 00                	jno    c4c3 <_end+0x64ab>
    c4c3:	00 73 33             	add    BYTE PTR [rbx+0x33],dh
    c4c6:	00 00                	add    BYTE PTR [rax],al
    c4c8:	00 00                	add    BYTE PTR [rax],al
    c4ca:	00 00                	add    BYTE PTR [rax],al
    c4cc:	02 00                	add    al,BYTE PTR [rax]
    c4ce:	73 33                	jae    c503 <_end+0x64eb>
    c4d0:	00 00                	add    BYTE PTR [rax],al
    c4d2:	00 00                	add    BYTE PTR [rax],al
    c4d4:	00 00                	add    BYTE PTR [rax],al
    c4d6:	0c 00                	or     al,0x0
    c4d8:	00 00                	add    BYTE PTR [rax],al
    c4da:	00 00                	add    BYTE PTR [rax],al
    c4dc:	00 00                	add    BYTE PTR [rax],al
    c4de:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c4e0:	d5 6d 00 00          	{rex2 0x6d} add BYTE PTR [r8],r24b
    c4e4:	05 e4 71 00 00       	add    eax,0x71e4
    c4e9:	4e 2a 00             	rex.WRX sub r8b,BYTE PTR [rax]
    c4ec:	00 4c 2a 00          	add    BYTE PTR [rdx+rbp*1+0x0],cl
    c4f0:	00 07                	add    BYTE PTR [rdi],al
    c4f2:	7f 33                	jg     c527 <_end+0x650f>
    c4f4:	00 00                	add    BYTE PTR [rax],al
    c4f6:	00 00                	add    BYTE PTR [rax],al
    c4f8:	00 00                	add    BYTE PTR [rax],al
    c4fa:	9b                   	fwait
    c4fb:	75 00                	jne    c4fd <_end+0x64e5>
    c4fd:	00 03                	add    BYTE PTR [rbx],al
    c4ff:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c502:	03 b3 42 00 00 00    	add    esi,DWORD PTR [rbx+0x42]
    c508:	00 00                	add    BYTE PTR [rax],al
    c50a:	00 00                	add    BYTE PTR [rax],al
    c50c:	00 09                	add    BYTE PTR [rcx],cl
    c50e:	d6                   	(bad)
    c50f:	71 00                	jno    c511 <_end+0x64f9>
    c511:	00 7f 33             	add    BYTE PTR [rdi+0x33],bh
    c514:	00 00                	add    BYTE PTR [rax],al
    c516:	00 00                	add    BYTE PTR [rax],al
    c518:	00 00                	add    BYTE PTR [rax],al
    c51a:	02 00                	add    al,BYTE PTR [rax]
    c51c:	7f 33                	jg     c551 <_end+0x6539>
    c51e:	00 00                	add    BYTE PTR [rax],al
    c520:	00 00                	add    BYTE PTR [rax],al
    c522:	00 00                	add    BYTE PTR [rax],al
    c524:	0c 00                	or     al,0x0
    c526:	00 00                	add    BYTE PTR [rax],al
    c528:	00 00                	add    BYTE PTR [rax],al
    c52a:	00 00                	add    BYTE PTR [rax],al
    c52c:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c52e:	23 6e 00             	and    ebp,DWORD PTR [rsi+0x0]
    c531:	00 05 e4 71 00 00    	add    BYTE PTR [rip+0x71e4],al        # 1371b <_end+0xd703>
    c537:	5d                   	pop    rbp
    c538:	2a 00                	sub    al,BYTE PTR [rax]
    c53a:	00 5b 2a             	add    BYTE PTR [rbx+0x2a],bl
    c53d:	00 00                	add    BYTE PTR [rax],al
    c53f:	07                   	(bad)
    c540:	8b 33                	mov    esi,DWORD PTR [rbx]
    c542:	00 00                	add    BYTE PTR [rax],al
    c544:	00 00                	add    BYTE PTR [rax],al
    c546:	00 00                	add    BYTE PTR [rax],al
    c548:	9b                   	fwait
    c549:	75 00                	jne    c54b <_end+0x6533>
    c54b:	00 03                	add    BYTE PTR [rbx],al
    c54d:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c550:	03 78 45             	add    edi,DWORD PTR [rax+0x45]
	...
    c55b:	09 5b 52             	or     DWORD PTR [rbx+0x52],ebx
    c55e:	00 00                	add    BYTE PTR [rax],al
    c560:	8b 33                	mov    esi,DWORD PTR [rbx]
    c562:	00 00                	add    BYTE PTR [rax],al
    c564:	00 00                	add    BYTE PTR [rax],al
    c566:	00 00                	add    BYTE PTR [rax],al
    c568:	03 00                	add    eax,DWORD PTR [rax]
    c56a:	8b 33                	mov    esi,DWORD PTR [rbx]
    c56c:	00 00                	add    BYTE PTR [rax],al
    c56e:	00 00                	add    BYTE PTR [rax],al
    c570:	00 00                	add    BYTE PTR [rax],al
    c572:	36 00 00             	ss add BYTE PTR [rax],al
    c575:	00 00                	add    BYTE PTR [rax],al
    c577:	00 00                	add    BYTE PTR [rax],al
    c579:	00 2b                	add    BYTE PTR [rbx],ch
    c57b:	09 d0                	or     eax,edx
    c57d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    c57e:	00 00                	add    BYTE PTR [rax],al
    c580:	05 91 52 00 00       	add    eax,0x5291
    c585:	6c                   	ins    BYTE PTR es:[rdi],dx
    c586:	2a 00                	sub    al,BYTE PTR [rax]
    c588:	00 6a 2a             	add    BYTE PTR [rdx+0x2a],ch
    c58b:	00 00                	add    BYTE PTR [rax],al
    c58d:	0b 85 52 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000052]
    c593:	79 52                	jns    c5e7 <_end+0x65cf>
    c595:	00 00                	add    BYTE PTR [rax],al
    c597:	0b 6d 52             	or     ebp,DWORD PTR [rbp+0x52]
    c59a:	00 00                	add    BYTE PTR [rax],al
    c59c:	15 9d 52 00 00       	adc    eax,0x529d
    c5a1:	78 2a                	js     c5cd <_end+0x65b5>
    c5a3:	00 00                	add    BYTE PTR [rax],al
    c5a5:	74 2a                	je     c5d1 <_end+0x65b9>
    c5a7:	00 00                	add    BYTE PTR [rax],al
    c5a9:	0a 9e 33 00 00 00    	or     bl,BYTE PTR [rsi+0x33]
    c5af:	00 00                	add    BYTE PTR [rax],al
    c5b1:	00 e5                	add    ch,ah
    c5b3:	3c 00                	cmp    al,0x0
    c5b5:	00 9d 6e 00 00 03    	add    BYTE PTR [rbp+0x300006e],bl
    c5bb:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c5be:	03 b7 42 00 00 00    	add    esi,DWORD PTR [rdi+0x42]
    c5c4:	00 00                	add    BYTE PTR [rax],al
    c5c6:	00 03                	add    BYTE PTR [rbx],al
    c5c8:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    c5cc:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c5d0:	00 00                	add    BYTE PTR [rax],al
    c5d2:	00 00                	add    BYTE PTR [rax],al
    c5d4:	00 0a                	add    BYTE PTR [rdx],cl
    c5d6:	b9 33 00 00 00       	mov    ecx,0x33
    c5db:	00 00                	add    BYTE PTR [rax],al
    c5dd:	00 4d 46             	add    BYTE PTR [rbp+0x46],cl
    c5e0:	00 00                	add    BYTE PTR [rax],al
    c5e2:	bb 6e 00 00 03       	mov    ebx,0x300006e
    c5e7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c5ea:	7d 00                	jge    c5ec <_end+0x65d4>
    c5ec:	03 01                	add    eax,DWORD PTR [rcx]
    c5ee:	58                   	pop    rax
    c5ef:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    c5f2:	00 07                	add    BYTE PTR [rdi],al
    c5f4:	c1 33 00             	shl    DWORD PTR [rbx],0x0
    c5f7:	00 00                	add    BYTE PTR [rax],al
    c5f9:	00 00                	add    BYTE PTR [rax],al
    c5fb:	00 33                	add    BYTE PTR [rbx],dh
    c5fd:	3c 00                	cmp    al,0x0
    c5ff:	00 03                	add    BYTE PTR [rbx],al
    c601:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c604:	7d 00                	jge    c606 <_end+0x65ee>
    c606:	00 00                	add    BYTE PTR [rax],al
    c608:	19 d6                	sbb    esi,edx
    c60a:	71 00                	jno    c60c <_end+0x65f4>
    c60c:	00 c1                	add    cl,al
    c60e:	33 00                	xor    eax,DWORD PTR [rax]
    c610:	00 00                	add    BYTE PTR [rax],al
    c612:	00 00                	add    BYTE PTR [rax],al
    c614:	00 02                	add    BYTE PTR [rdx],al
    c616:	00 c1                	add    cl,al
    c618:	33 00                	xor    eax,DWORD PTR [rax]
    c61a:	00 00                	add    BYTE PTR [rax],al
    c61c:	00 00                	add    BYTE PTR [rax],al
    c61e:	00 08                	add    BYTE PTR [rax],cl
    c620:	00 00                	add    BYTE PTR [rax],al
    c622:	00 00                	add    BYTE PTR [rax],al
    c624:	00 00                	add    BYTE PTR [rax],al
    c626:	00 01                	add    BYTE PTR [rcx],al
    c628:	2b 09                	sub    ecx,DWORD PTR [rcx]
    c62a:	05 e4 71 00 00       	add    eax,0x71e4
    c62f:	89 2a                	mov    DWORD PTR [rdx],ebp
    c631:	00 00                	add    BYTE PTR [rax],al
    c633:	87 2a                	xchg   DWORD PTR [rdx],ebp
    c635:	00 00                	add    BYTE PTR [rax],al
    c637:	07                   	(bad)
    c638:	c9                   	leave
    c639:	33 00                	xor    eax,DWORD PTR [rax]
    c63b:	00 00                	add    BYTE PTR [rax],al
    c63d:	00 00                	add    BYTE PTR [rax],al
    c63f:	00 9b 75 00 00 03    	add    BYTE PTR [rbx+0x3000075],bl
    c645:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c648:	73 00                	jae    c64a <_end+0x6632>
    c64a:	00 00                	add    BYTE PTR [rax],al
    c64c:	00 0a                	add    BYTE PTR [rdx],cl
    c64e:	84 2f                	test   BYTE PTR [rdi],ch
    c650:	00 00                	add    BYTE PTR [rax],al
    c652:	00 00                	add    BYTE PTR [rax],al
    c654:	00 00                	add    BYTE PTR [rax],al
    c656:	1b 44 00 00          	sbb    eax,DWORD PTR [rax+rax*1+0x0]
    c65a:	3b 6f 00             	cmp    ebp,DWORD PTR [rdi+0x0]
    c65d:	00 03                	add    BYTE PTR [rbx],al
    c65f:	01 55 09             	add    DWORD PTR [rbp+0x9],edx
    c662:	03 14 40             	add    edx,DWORD PTR [rax+rax*2]
    c665:	00 00                	add    BYTE PTR [rax],al
    c667:	00 00                	add    BYTE PTR [rax],al
    c669:	00 00                	add    BYTE PTR [rax],al
    c66b:	03 01                	add    eax,DWORD PTR [rcx]
    c66d:	54                   	push   rsp
    c66e:	03 91 b0 7f 00 0a    	add    edx,DWORD PTR [rcx+0xa007fb0]
    c674:	98                   	cwde
    c675:	2f                   	(bad)
    c676:	00 00                	add    BYTE PTR [rax],al
    c678:	00 00                	add    BYTE PTR [rax],al
    c67a:	00 00                	add    BYTE PTR [rax],al
    c67c:	fc                   	cld
    c67d:	43 00 00             	rex.XB add BYTE PTR [r8],al
    c680:	53                   	push   rbx
    c681:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c682:	00 00                	add    BYTE PTR [rax],al
    c684:	03 01                	add    eax,DWORD PTR [rcx]
    c686:	55                   	push   rbp
    c687:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c68a:	00 0a                	add    BYTE PTR [rdx],cl
    c68c:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    c68d:	2f                   	(bad)
    c68e:	00 00                	add    BYTE PTR [rax],al
    c690:	00 00                	add    BYTE PTR [rax],al
    c692:	00 00                	add    BYTE PTR [rax],al
    c694:	d8 43 00             	fadd   DWORD PTR [rbx+0x0]
    c697:	00 71 6f             	add    BYTE PTR [rcx+0x6f],dh
    c69a:	00 00                	add    BYTE PTR [rax],al
    c69c:	03 01                	add    eax,DWORD PTR [rcx]
    c69e:	55                   	push   rbp
    c69f:	02 7f 00             	add    bh,BYTE PTR [rdi+0x0]
    c6a2:	03 01                	add    eax,DWORD PTR [rcx]
    c6a4:	54                   	push   rsp
    c6a5:	02 7c 00 00          	add    bh,BYTE PTR [rax+rax*1+0x0]
    c6a9:	0a b8 2f 00 00 00    	or     bh,BYTE PTR [rax+0x2f]
    c6af:	00 00                	add    BYTE PTR [rax],al
    c6b1:	00 bd 43 00 00 96    	add    BYTE PTR [rbp-0x69ffffbd],bh
    c6b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6b8:	00 00                	add    BYTE PTR [rax],al
    c6ba:	03 01                	add    eax,DWORD PTR [rcx]
    c6bc:	55                   	push   rbp
    c6bd:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c6c0:	03 01                	add    eax,DWORD PTR [rcx]
    c6c2:	54                   	push   rsp
    c6c3:	09 03                	or     DWORD PTR [rbx],eax
    c6c5:	74 42                	je     c709 <_end+0x66f1>
    c6c7:	00 00                	add    BYTE PTR [rax],al
    c6c9:	00 00                	add    BYTE PTR [rax],al
    c6cb:	00 00                	add    BYTE PTR [rax],al
    c6cd:	00 0a                	add    BYTE PTR [rdx],cl
    c6cf:	d2 2f                	shr    BYTE PTR [rdi],cl
    c6d1:	00 00                	add    BYTE PTR [rax],al
    c6d3:	00 00                	add    BYTE PTR [rax],al
    c6d5:	00 00                	add    BYTE PTR [rax],al
    c6d7:	bd 43 00 00 b4       	mov    ebp,0xb4000043
    c6dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6dd:	00 00                	add    BYTE PTR [rax],al
    c6df:	03 01                	add    eax,DWORD PTR [rcx]
    c6e1:	55                   	push   rbp
    c6e2:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c6e5:	03 01                	add    eax,DWORD PTR [rcx]
    c6e7:	54                   	push   rsp
    c6e8:	02 7d 00             	add    bh,BYTE PTR [rbp+0x0]
    c6eb:	00 0a                	add    BYTE PTR [rdx],cl
    c6ed:	e9 2f 00 00 00       	jmp    c721 <_end+0x6709>
    c6f2:	00 00                	add    BYTE PTR [rax],al
    c6f4:	00 bd 43 00 00 d9    	add    BYTE PTR [rbp-0x26ffffbd],bh
    c6fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c6fb:	00 00                	add    BYTE PTR [rax],al
    c6fd:	03 01                	add    eax,DWORD PTR [rcx]
    c6ff:	55                   	push   rbp
    c700:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c703:	03 01                	add    eax,DWORD PTR [rcx]
    c705:	54                   	push   rsp
    c706:	09 03                	or     DWORD PTR [rbx],eax
    c708:	7a 42                	jp     c74c <_end+0x6734>
    c70a:	00 00                	add    BYTE PTR [rax],al
    c70c:	00 00                	add    BYTE PTR [rax],al
    c70e:	00 00                	add    BYTE PTR [rax],al
    c710:	00 0a                	add    BYTE PTR [rdx],cl
    c712:	00 30                	add    BYTE PTR [rax],dh
    c714:	00 00                	add    BYTE PTR [rax],al
    c716:	00 00                	add    BYTE PTR [rax],al
    c718:	00 00                	add    BYTE PTR [rax],al
    c71a:	bd 43 00 00 fe       	mov    ebp,0xfe000043
    c71f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c720:	00 00                	add    BYTE PTR [rax],al
    c722:	03 01                	add    eax,DWORD PTR [rcx]
    c724:	55                   	push   rbp
    c725:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    c728:	03 01                	add    eax,DWORD PTR [rcx]
    c72a:	54                   	push   rsp
    c72b:	09 03                	or     DWORD PTR [rbx],eax
    c72d:	8a 42 00             	mov    al,BYTE PTR [rdx+0x0]
    c730:	00 00                	add    BYTE PTR [rax],al
    c732:	00 00                	add    BYTE PTR [rax],al
    c734:	00 00                	add    BYTE PTR [rax],al
    c736:	0a 17                	or     dl,BYTE PTR [rdi]
    c738:	30 00                	xor    BYTE PTR [rax],al
    c73a:	00 00                	add    BYTE PTR [rax],al
    c73c:	00 00                	add    BYTE PTR [rax],al
    c73e:	00 bd 43 00 00 23    	add    BYTE PTR [rbp+0x23000043],bh
    c744:	70 00                	jo     c746 <_end+0x672e>
    c746:	00 03                	add    BYTE PTR [rbx],al
    c748:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c74b:	73 00                	jae    c74d <_end+0x6735>
    c74d:	03 01                	add    eax,DWORD PTR [rcx]
    c74f:	54                   	push   rsp
    c750:	09 03                	or     DWORD PTR [rbx],eax
    c752:	ab                   	stos   DWORD PTR es:[rdi],eax
    c753:	42 00 00             	rex.X add BYTE PTR [rax],al
    c756:	00 00                	add    BYTE PTR [rax],al
    c758:	00 00                	add    BYTE PTR [rax],al
    c75a:	00 0a                	add    BYTE PTR [rdx],cl
    c75c:	2e 30 00             	cs xor BYTE PTR [rax],al
    c75f:	00 00                	add    BYTE PTR [rax],al
    c761:	00 00                	add    BYTE PTR [rax],al
    c763:	00 bd 43 00 00 48    	add    BYTE PTR [rbp+0x48000043],bh
    c769:	70 00                	jo     c76b <_end+0x6753>
    c76b:	00 03                	add    BYTE PTR [rbx],al
    c76d:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c770:	73 00                	jae    c772 <_end+0x675a>
    c772:	03 01                	add    eax,DWORD PTR [rcx]
    c774:	54                   	push   rsp
    c775:	09 03                	or     DWORD PTR [rbx],eax
    c777:	b3 42                	mov    bl,0x42
    c779:	00 00                	add    BYTE PTR [rax],al
    c77b:	00 00                	add    BYTE PTR [rax],al
    c77d:	00 00                	add    BYTE PTR [rax],al
    c77f:	00 0a                	add    BYTE PTR [rdx],cl
    c781:	45 30 00             	xor    BYTE PTR [r8],r8b
    c784:	00 00                	add    BYTE PTR [rax],al
    c786:	00 00                	add    BYTE PTR [rax],al
    c788:	00 bd 43 00 00 6d    	add    BYTE PTR [rbp+0x6d000043],bh
    c78e:	70 00                	jo     c790 <_end+0x6778>
    c790:	00 03                	add    BYTE PTR [rbx],al
    c792:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c795:	73 00                	jae    c797 <_end+0x677f>
    c797:	03 01                	add    eax,DWORD PTR [rcx]
    c799:	54                   	push   rsp
    c79a:	09 03                	or     DWORD PTR [rbx],eax
    c79c:	d4                   	(bad)
    c79d:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7a0:	00 00                	add    BYTE PTR [rax],al
    c7a2:	00 00                	add    BYTE PTR [rax],al
    c7a4:	00 0a                	add    BYTE PTR [rdx],cl
    c7a6:	5c                   	pop    rsp
    c7a7:	30 00                	xor    BYTE PTR [rax],al
    c7a9:	00 00                	add    BYTE PTR [rax],al
    c7ab:	00 00                	add    BYTE PTR [rax],al
    c7ad:	00 bd 43 00 00 92    	add    BYTE PTR [rbp-0x6dffffbd],bh
    c7b3:	70 00                	jo     c7b5 <_end+0x679d>
    c7b5:	00 03                	add    BYTE PTR [rbx],al
    c7b7:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c7ba:	73 00                	jae    c7bc <_end+0x67a4>
    c7bc:	03 01                	add    eax,DWORD PTR [rcx]
    c7be:	54                   	push   rsp
    c7bf:	09 03                	or     DWORD PTR [rbx],eax
    c7c1:	e4 42                	in     al,0x42
    c7c3:	00 00                	add    BYTE PTR [rax],al
    c7c5:	00 00                	add    BYTE PTR [rax],al
    c7c7:	00 00                	add    BYTE PTR [rax],al
    c7c9:	00 0a                	add    BYTE PTR [rdx],cl
    c7cb:	6d                   	ins    DWORD PTR es:[rdi],dx
    c7cc:	30 00                	xor    BYTE PTR [rax],al
    c7ce:	00 00                	add    BYTE PTR [rax],al
    c7d0:	00 00                	add    BYTE PTR [rax],al
    c7d2:	00 f5                	add    ch,dh
    c7d4:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7d7:	ac                   	lods   al,BYTE PTR ds:[rsi]
    c7d8:	70 00                	jo     c7da <_end+0x67c2>
    c7da:	00 03                	add    BYTE PTR [rbx],al
    c7dc:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    c7df:	91                   	xchg   ecx,eax
    c7e0:	a0 7f 06 00 20 76 30 	movabs al,ds:0x30762000067f
    c7e7:	00 00 
    c7e9:	00 00                	add    BYTE PTR [rax],al
    c7eb:	00 00                	add    BYTE PTR [rax],al
    c7ed:	f5                   	cmc
    c7ee:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7f1:	0a 7e 30             	or     bh,BYTE PTR [rsi+0x30]
    c7f4:	00 00                	add    BYTE PTR [rax],al
    c7f6:	00 00                	add    BYTE PTR [rax],al
    c7f8:	00 00                	add    BYTE PTR [rax],al
    c7fa:	f5                   	cmc
    c7fb:	42 00 00             	rex.X add BYTE PTR [rax],al
    c7fe:	d1 70 00             	shl    DWORD PTR [rax+0x0],1
    c801:	00 03                	add    BYTE PTR [rbx],al
    c803:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c806:	76 00                	jbe    c808 <_end+0x67f0>
    c808:	00 20                	add    BYTE PTR [rax],ah
    c80a:	9b                   	fwait
    c80b:	36 00 00             	ss add BYTE PTR [rax],al
    c80e:	00 00                	add    BYTE PTR [rax],al
    c810:	00 00                	add    BYTE PTR [rax],al
    c812:	6d                   	ins    DWORD PTR es:[rdi],dx
    c813:	75 00                	jne    c815 <_end+0x67fd>
    c815:	00 0a                	add    BYTE PTR [rdx],cl
    c817:	ba 36 00 00 00       	mov    edx,0x36
    c81c:	00 00                	add    BYTE PTR [rax],al
    c81e:	00 3f                	add    BYTE PTR [rdi],bh
    c820:	44 00 00             	add    BYTE PTR [rax],r8b
    c823:	1c 71                	sbb    al,0x71
    c825:	00 00                	add    BYTE PTR [rax],al
    c827:	03 01                	add    eax,DWORD PTR [rcx]
    c829:	55                   	push   rbp
    c82a:	09 03                	or     DWORD PTR [rbx],eax
    c82c:	66 42 00 00          	data16 rex.X add BYTE PTR [rax],al
    c830:	00 00                	add    BYTE PTR [rax],al
    c832:	00 00                	add    BYTE PTR [rax],al
    c834:	03 01                	add    eax,DWORD PTR [rcx]
    c836:	54                   	push   rsp
    c837:	09 03                	or     DWORD PTR [rbx],eax
    c839:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c83a:	41 00 00             	add    BYTE PTR [r8],al
    c83d:	00 00                	add    BYTE PTR [rax],al
    c83f:	00 00                	add    BYTE PTR [rax],al
    c841:	03 01                	add    eax,DWORD PTR [rcx]
    c843:	51                   	push   rcx
    c844:	01 43 03             	add    DWORD PTR [rbx+0x3],eax
    c847:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c84a:	03 20                	add    esp,DWORD PTR [rax]
    c84c:	45 00 00             	add    BYTE PTR [r8],r8b
    c84f:	00 00                	add    BYTE PTR [rax],al
    c851:	00 00                	add    BYTE PTR [rax],al
    c853:	00 07                	add    BYTE PTR [rdi],al
    c855:	d9 36                	fnstenv [rsi]
    c857:	00 00                	add    BYTE PTR [rax],al
    c859:	00 00                	add    BYTE PTR [rax],al
    c85b:	00 00                	add    BYTE PTR [rax],al
    c85d:	3f                   	(bad)
    c85e:	44 00 00             	add    BYTE PTR [rax],r8b
    c861:	03 01                	add    eax,DWORD PTR [rcx]
    c863:	55                   	push   rbp
    c864:	09 03                	or     DWORD PTR [rbx],eax
    c866:	66 41 00 00          	data16 add BYTE PTR [r8],al
    c86a:	00 00                	add    BYTE PTR [rax],al
    c86c:	00 00                	add    BYTE PTR [rax],al
    c86e:	03 01                	add    eax,DWORD PTR [rcx]
    c870:	54                   	push   rsp
    c871:	09 03                	or     DWORD PTR [rbx],eax
    c873:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    c874:	41 00 00             	add    BYTE PTR [r8],al
    c877:	00 00                	add    BYTE PTR [rax],al
    c879:	00 00                	add    BYTE PTR [rax],al
    c87b:	03 01                	add    eax,DWORD PTR [rcx]
    c87d:	51                   	push   rcx
    c87e:	01 42 03             	add    DWORD PTR [rdx+0x3],eax
    c881:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    c884:	03 20                	add    esp,DWORD PTR [rax]
    c886:	45 00 00             	add    BYTE PTR [r8],r8b
    c889:	00 00                	add    BYTE PTR [rax],al
    c88b:	00 00                	add    BYTE PTR [rax],al
    c88d:	00 00                	add    BYTE PTR [rax],al
    c88f:	25 ee 22 00 00       	and    eax,0x22ee
    c894:	67 71 00             	addr32 jno c897 <_end+0x687f>
    c897:	00 26                	add    BYTE PTR [rsi],ah
    c899:	8a 21                	mov    ah,BYTE PTR [rcx]
    c89b:	00 00                	add    BYTE PTR [rax],al
    c89d:	30 00                	xor    BYTE PTR [rax],al
    c89f:	13 57 71             	adc    edx,DWORD PTR [rdi+0x71]
    c8a2:	00 00                	add    BYTE PTR [rax],al
    c8a4:	30 c5                	xor    ch,al
    c8a6:	18 00                	sbb    BYTE PTR [rax],al
    c8a8:	00 7a 71             	add    BYTE PTR [rdx+0x71],bh
    c8ab:	00 00                	add    BYTE PTR [rax],al
    c8ad:	03 84 71 00 00 31 1e 	add    eax,DWORD PTR [rcx+rsi*2+0x1e310000]
    c8b4:	1e                   	(bad)
    c8b5:	00 00                	add    BYTE PTR [rax],al
    c8b7:	ab                   	stos   DWORD PTR es:[rdi],eax
    c8b8:	3f                   	(bad)
    c8b9:	00 00                	add    BYTE PTR [rax],al
    c8bb:	00 30                	add    BYTE PTR [rax],dh
    c8bd:	59                   	pop    rcx
    c8be:	1a 00                	sbb    al,BYTE PTR [rax]
    c8c0:	00 9b 71 00 00 02    	add    BYTE PTR [rbx+0x2000071],bl
    c8c6:	b1 71                	mov    cl,0x71
    c8c8:	00 00                	add    BYTE PTR [rax],al
    c8ca:	11 09                	adc    DWORD PTR [rcx],ecx
    c8cc:	19 00                	sbb    DWORD PTR [rax],eax
    c8ce:	00 b2 21 00 00 31    	add    BYTE PTR [rdx+0x31000021],dh
    c8d4:	1e                   	(bad)
    c8d5:	1e                   	(bad)
    c8d6:	00 00                	add    BYTE PTR [rax],al
    c8d8:	97                   	xchg   edi,eax
    c8d9:	3f                   	(bad)
    c8da:	00 00                	add    BYTE PTR [rax],al
    c8dc:	2d 47 16 00 00       	sub    eax,0x1647
    c8e1:	3d 02 2d 61 44       	cmp    eax,0x44612d02
    c8e6:	00 00                	add    BYTE PTR [rax],al
    c8e8:	00 5c 84 71          	add    BYTE PTR [rsp+rax*4+0x71],bl
    c8ec:	00 00                	add    BYTE PTR [rax],al
    c8ee:	d5 0e 00 00          	{rex2 0xe} add BYTE PTR [rax],r8b
    c8f2:	cb                   	retf
    c8f3:	71 00                	jno    c8f5 <_end+0x68dd>
    c8f5:	00 d6                	add    dh,dl
    c8f7:	71 00                	jno    c8f9 <_end+0x68e1>
    c8f9:	00 11                	add    BYTE PTR [rcx],dl
    c8fb:	09 19                	or     DWORD PTR [rcx],ebx
    c8fd:	00 00                	add    BYTE PTR [rax],al
    c8ff:	b2 21                	mov    dl,0x21
    c901:	00 00                	add    BYTE PTR [rax],al
    c903:	0b 9b 71 00 00 0b    	or     ebx,DWORD PTR [rbx+0xb000071]
    c909:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    c90a:	71 00                	jno    c90c <_end+0x68f4>
    c90c:	00 00                	add    BYTE PTR [rax],al
    c90e:	63 a4 2d 00 00 54 a6 	movsxd esp,DWORD PTR [rbp+rbp*1-0x59ac0000]
    c915:	21 00                	and    DWORD PTR [rax],eax
    c917:	00 f2                	add    dl,dh
    c919:	71 00                	jno    c91b <_end+0x6903>
    c91b:	00 1e                	add    BYTE PTR [rsi],bl
    c91d:	3b 06                	cmp    eax,DWORD PTR [rsi]
    c91f:	00 00                	add    BYTE PTR [rax],al
    c921:	02 54 20 d8          	add    dl,BYTE PTR [rax+riz*1-0x28]
    c925:	23 00                	and    eax,DWORD PTR [rax]
    c927:	00 21                	add    BYTE PTR [rcx],ah
    c929:	00 63 a3             	add    BYTE PTR [rbx-0x5d],ah
    c92c:	2d 00 00 4d a6       	sub    eax,0xa64d0000
    c931:	21 00                	and    DWORD PTR [rax],eax
    c933:	00 1a                	add    BYTE PTR [rdx],bl
    c935:	72 00                	jb     c937 <_end+0x691f>
    c937:	00 1e                	add    BYTE PTR [rsi],bl
    c939:	b1 2e                	mov    cl,0x2e
    c93b:	00 00                	add    BYTE PTR [rax],al
    c93d:	02 4d 1b             	add    cl,BYTE PTR [rbp+0x1b]
    c940:	93                   	xchg   ebx,eax
    c941:	2c 00                	sub    al,0x0
    c943:	00 1e                	add    BYTE PTR [rsi],bl
    c945:	3b 06                	cmp    eax,DWORD PTR [rsi]
    c947:	00 00                	add    BYTE PTR [rax],al
    c949:	02 4d 3c             	add    cl,BYTE PTR [rbp+0x3c]
    c94c:	d8 23                	fsub   DWORD PTR [rbx]
    c94e:	00 00                	add    BYTE PTR [rax],al
    c950:	21 00                	and    DWORD PTR [rax],eax
    c952:	32 e1                	xor    ah,cl
    c954:	04 00                	add    al,0x0
    c956:	00 31                	add    BYTE PTR [rcx],dh
    c958:	72 00                	jb     c95a <_end+0x6942>
    c95a:	00 5d 5f             	add    BYTE PTR [rbp+0x5f],bl
    c95d:	5f                   	pop    rdi
    c95e:	78 00                	js     c960 <_end+0x6948>
    c960:	03 b6 01 0e 35 00    	add    esi,DWORD PTR [rsi+0x350e01]
    c966:	00 00                	add    BYTE PTR [rax],al
    c968:	00 4e 5b             	add    BYTE PTR [rsi+0x5b],cl
    c96b:	52                   	push   rdx
    c96c:	00 00                	add    BYTE PTR [rax],al
    c96e:	16                   	(bad)
    c96f:	31 00                	xor    DWORD PTR [rax],eax
    c971:	00 e0                	add    al,ah
    c973:	2e 00 00             	cs add BYTE PTR [rax],al
    c976:	00 00                	add    BYTE PTR [rax],al
    c978:	00 00                	add    BYTE PTR [rax],al
    c97a:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    c97d:	00 00                	add    BYTE PTR [rax],al
    c97f:	00 00                	add    BYTE PTR [rax],al
    c981:	00 01                	add    BYTE PTR [rcx],al
    c983:	9c                   	pushf
    c984:	e2 72                	loop   c9f8 <_end+0x69e0>
    c986:	00 00                	add    BYTE PTR [rax],al
    c988:	05 6d 52 00 00       	add    eax,0x526d
    c98d:	9c                   	pushf
    c98e:	2a 00                	sub    al,BYTE PTR [rax]
    c990:	00 96 2a 00 00 05    	add    BYTE PTR [rsi+0x500002a],dl
    c996:	79 52                	jns    c9ea <_end+0x69d2>
    c998:	00 00                	add    BYTE PTR [rax],al
    c99a:	b7 2a                	mov    bh,0x2a
    c99c:	00 00                	add    BYTE PTR [rax],al
    c99e:	b5 2a                	mov    ch,0x2a
    c9a0:	00 00                	add    BYTE PTR [rax],al
    c9a2:	05 85 52 00 00       	add    eax,0x5285
    c9a7:	ca 2a 00             	retf   0x2a
    c9aa:	00 c4                	add    ah,al
    c9ac:	2a 00                	sub    al,BYTE PTR [rax]
    c9ae:	00 05 91 52 00 00    	add    BYTE PTR [rip+0x5291],al        # 11c45 <_end+0xbc2d>
    c9b4:	f5                   	cmc
    c9b5:	2a 00                	sub    al,BYTE PTR [rax]
    c9b7:	00 ef                	add    bh,ch
    c9b9:	2a 00                	sub    al,BYTE PTR [rax]
    c9bb:	00 15 9d 52 00 00    	add    BYTE PTR [rip+0x529d],dl        # 11c5e <_end+0xbc46>
    c9c1:	14 2b                	adc    al,0x2b
    c9c3:	00 00                	add    BYTE PTR [rax],al
    c9c5:	0e                   	(bad)
    c9c6:	2b 00                	sub    eax,DWORD PTR [rax]
    c9c8:	00 0a                	add    BYTE PTR [rdx],cl
    c9ca:	07                   	(bad)
    c9cb:	2f                   	(bad)
    c9cc:	00 00                	add    BYTE PTR [rax],al
    c9ce:	00 00                	add    BYTE PTR [rax],al
    c9d0:	00 00                	add    BYTE PTR [rax],al
    c9d2:	e5 3c                	in     eax,0x3c
    c9d4:	00 00                	add    BYTE PTR [rax],al
    c9d6:	b0 72                	mov    al,0x72
    c9d8:	00 00                	add    BYTE PTR [rax],al
    c9da:	03 01                	add    eax,DWORD PTR [rcx]
    c9dc:	54                   	push   rsp
    c9dd:	09 03                	or     DWORD PTR [rbx],eax
    c9df:	64 42 00 00          	rex.X add BYTE PTR fs:[rax],al
    c9e3:	00 00                	add    BYTE PTR [rax],al
    c9e5:	00 00                	add    BYTE PTR [rax],al
    c9e7:	00 0a                	add    BYTE PTR [rdx],cl
    c9e9:	1e                   	(bad)
    c9ea:	2f                   	(bad)
    c9eb:	00 00                	add    BYTE PTR [rax],al
    c9ed:	00 00                	add    BYTE PTR [rax],al
    c9ef:	00 00                	add    BYTE PTR [rax],al
    c9f1:	4d                   	rex.WRB
    c9f2:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    c9f5:	d4                   	(bad)
    c9f6:	72 00                	jb     c9f8 <_end+0x69e0>
    c9f8:	00 03                	add    BYTE PTR [rbx],al
    c9fa:	01 55 02             	add    DWORD PTR [rbp+0x2],edx
    c9fd:	73 00                	jae    c9ff <_end+0x69e7>
    c9ff:	03 01                	add    eax,DWORD PTR [rcx]
    ca01:	54                   	push   rsp
    ca02:	02 76 00             	add    dh,BYTE PTR [rsi+0x0]
    ca05:	03 01                	add    eax,DWORD PTR [rcx]
    ca07:	58                   	pop    rax
    ca08:	02 7e 00             	add    bh,BYTE PTR [rsi+0x0]
    ca0b:	00 64 2e 2f          	add    BYTE PTR [rsi+rbp*1+0x2f],ah
    ca0f:	00 00                	add    BYTE PTR [rax],al
    ca11:	00 00                	add    BYTE PTR [rax],al
    ca13:	00 00                	add    BYTE PTR [rax],al
    ca15:	33 3c 00             	xor    edi,DWORD PTR [rax+rax*1]
    ca18:	00 00                	add    BYTE PTR [rax],al
    ca1a:	4e e1 45             	rex.WRX loope ca62 <_end+0x6a4a>
    ca1d:	00 00                	add    BYTE PTR [rax],al
    ca1f:	7e 34                	jle    ca55 <_end+0x6a3d>
    ca21:	00 00                	add    BYTE PTR [rax],al
    ca23:	e0 36                	loopne ca5b <_end+0x6a43>
    ca25:	00 00                	add    BYTE PTR [rax],al
    ca27:	00 00                	add    BYTE PTR [rax],al
    ca29:	00 00                	add    BYTE PTR [rax],al
    ca2b:	5b                   	pop    rbx
    ca2c:	01 00                	add    DWORD PTR [rax],eax
    ca2e:	00 00                	add    BYTE PTR [rax],al
    ca30:	00 00                	add    BYTE PTR [rax],al
    ca32:	00 01                	add    BYTE PTR [rcx],al
    ca34:	9c                   	pushf
    ca35:	20 74 00 00          	and    BYTE PTR [rax+rax*1+0x0],dh
    ca39:	05 f4 45 00 00       	add    eax,0x45f4
    ca3e:	3c 2b                	cmp    al,0x2b
    ca40:	00 00                	add    BYTE PTR [rax],al
    ca42:	2a 2b                	sub    ch,BYTE PTR [rbx]
    ca44:	00 00                	add    BYTE PTR [rax],al
    ca46:	05 00 46 00 00       	add    eax,0x4600
    ca4b:	95                   	xchg   ebp,eax
    ca4c:	2b 00                	sub    eax,DWORD PTR [rax]
    ca4e:	00 85 2b 00 00 05    	add    BYTE PTR [rbp+0x500002b],al
    ca54:	0c 46                	or     al,0x46
    ca56:	00 00                	add    BYTE PTR [rax],al
    ca58:	ed                   	in     eax,dx
    ca59:	2b 00                	sub    eax,DWORD PTR [rax]
    ca5b:	00 d7                	add    bh,dl
    ca5d:	2b 00                	sub    eax,DWORD PTR [rax]
    ca5f:	00 15 21 46 00 00    	add    BYTE PTR [rip+0x4621],dl        # 11086 <_end+0xb06e>
    ca65:	5f                   	pop    rdi
    ca66:	2c 00                	sub    al,0x0
    ca68:	00 4f 2c             	add    BYTE PTR [rdi+0x2c],cl
    ca6b:	00 00                	add    BYTE PTR [rax],al
    ca6d:	3a 2c 46             	cmp    ch,BYTE PTR [rsi+rax*2]
    ca70:	00 00                	add    BYTE PTR [rax],al
    ca72:	4b 04 00             	rex.WXB add al,0x0
    ca75:	00 50 73             	add    BYTE PTR [rax+0x73],dl
    ca78:	00 00                	add    BYTE PTR [rax],al
    ca7a:	15 2d 46 00 00       	adc    eax,0x462d
    ca7f:	b3 2c                	mov    bl,0x2c
    ca81:	00 00                	add    BYTE PTR [rax],al
    ca83:	af                   	scas   eax,DWORD PTR es:[rdi]
    ca84:	2c 00                	sub    al,0x0
    ca86:	00 00                	add    BYTE PTR [rax],al
    ca88:	1c 1a                	sbb    al,0x1a
    ca8a:	72 00                	jb     ca8c <_end+0x6a74>
    ca8c:	00 d5                	add    ch,dl
    ca8e:	37                   	(bad)
	...
    ca97:	5b                   	pop    rbx
    ca98:	04 00                	add    al,0x0
    ca9a:	00 af 1e 84 73 00    	add    BYTE PTR [rdi+0x73841e],ch
    caa0:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13cc9 <_end+0xdcb1>
    caa6:	ca 2c 00             	retf   0x2c
    caa9:	00 c4                	add    ah,al
    caab:	2c 00                	sub    al,0x0
    caad:	00 20                	add    BYTE PTR [rax],ah
    caaf:	1a 38                	sbb    bh,BYTE PTR [rax]
    cab1:	00 00                	add    BYTE PTR [rax],al
    cab3:	00 00                	add    BYTE PTR [rax],al
    cab5:	00 00                	add    BYTE PTR [rax],al
    cab7:	64 75 00             	fs jne caba <_end+0x6aa2>
    caba:	00 00                	add    BYTE PTR [rax],al
    cabc:	09 e1                	or     ecx,esp
    cabe:	45 00 00             	add    BYTE PTR [r8],r8b
    cac1:	1c 38                	sbb    al,0x38
    cac3:	00 00                	add    BYTE PTR [rax],al
    cac5:	00 00                	add    BYTE PTR [rax],al
    cac7:	00 00                	add    BYTE PTR [rax],al
    cac9:	01 00                	add    DWORD PTR [rax],eax
    cacb:	1c 38                	sbb    al,0x38
    cacd:	00 00                	add    BYTE PTR [rax],al
    cacf:	00 00                	add    BYTE PTR [rax],al
    cad1:	00 00                	add    BYTE PTR [rax],al
    cad3:	1f                   	(bad)
    cad4:	00 00                	add    BYTE PTR [rax],al
    cad6:	00 00                	add    BYTE PTR [rax],al
    cad8:	00 00                	add    BYTE PTR [rax],al
    cada:	00 a8 08 09 74 00    	add    BYTE PTR [rax+0x740908],ch
    cae0:	00 65 f4             	add    BYTE PTR [rbp-0xc],ah
    cae3:	45 00 00             	add    BYTE PTR [r8],r8b
    cae6:	05 00 46 00 00       	add    eax,0x4600
    caeb:	e4 2c                	in     al,0x2c
    caed:	00 00                	add    BYTE PTR [rax],al
    caef:	e0 2c                	loopne cb1d <_end+0x6b05>
    caf1:	00 00                	add    BYTE PTR [rax],al
    caf3:	05 0c 46 00 00       	add    eax,0x460c
    caf8:	fa                   	cli
    caf9:	2c 00                	sub    al,0x0
    cafb:	00 f6                	add    dh,dh
    cafd:	2c 00                	sub    al,0x0
    caff:	00 3b                	add    BYTE PTR [rbx],bh
    cb01:	21 46 00             	and    DWORD PTR [rsi+0x0],eax
    cb04:	00 07                	add    BYTE PTR [rdi],al
    cb06:	3b 38                	cmp    edi,DWORD PTR [rax]
    cb08:	00 00                	add    BYTE PTR [rax],al
    cb0a:	00 00                	add    BYTE PTR [rax],al
    cb0c:	00 00                	add    BYTE PTR [rax],al
    cb0e:	3f                   	(bad)
    cb0f:	44 00 00             	add    BYTE PTR [rax],r8b
    cb12:	03 01                	add    eax,DWORD PTR [rcx]
    cb14:	55                   	push   rbp
    cb15:	09 03                	or     DWORD PTR [rbx],eax
    cb17:	f9                   	stc
    cb18:	41 00 00             	add    BYTE PTR [r8],al
    cb1b:	00 00                	add    BYTE PTR [rax],al
    cb1d:	00 00                	add    BYTE PTR [rax],al
    cb1f:	03 01                	add    eax,DWORD PTR [rcx]
    cb21:	54                   	push   rsp
    cb22:	09 03                	or     DWORD PTR [rbx],eax
    cb24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cb25:	41 00 00             	add    BYTE PTR [r8],al
    cb28:	00 00                	add    BYTE PTR [rax],al
    cb2a:	00 00                	add    BYTE PTR [rax],al
    cb2c:	03 01                	add    eax,DWORD PTR [rcx]
    cb2e:	51                   	push   rcx
    cb2f:	02 08                	add    cl,BYTE PTR [rax]
    cb31:	a9 03 01 52 09       	test   eax,0x9520103
    cb36:	03 e8                	add    ebp,eax
    cb38:	44 00 00             	add    BYTE PTR [rax],r8b
    cb3b:	00 00                	add    BYTE PTR [rax],al
    cb3d:	00 00                	add    BYTE PTR [rax],al
    cb3f:	00 00                	add    BYTE PTR [rax],al
    cb41:	27                   	(bad)
    cb42:	80 37 00             	xor    BYTE PTR [rdi],0x0
    cb45:	00 00                	add    BYTE PTR [rax],al
    cb47:	00 00                	add    BYTE PTR [rax],al
    cb49:	00 01                	add    BYTE PTR [rcx],al
    cb4b:	30 27                	xor    BYTE PTR [rdi],ah
    cb4d:	fb                   	sti
    cb4e:	37                   	(bad)
    cb4f:	00 00                	add    BYTE PTR [rax],al
    cb51:	00 00                	add    BYTE PTR [rax],al
    cb53:	00 00                	add    BYTE PTR [rax],al
    cb55:	01 30                	add    DWORD PTR [rax],esi
    cb57:	00 4e 74             	add    BYTE PTR [rsi+0x74],cl
    cb5a:	45 00 00             	add    BYTE PTR [r8],r8b
    cb5d:	ea                   	(bad)
    cb5e:	2e 00 00             	cs add BYTE PTR [rax],al
    cb61:	40 38 00             	rex cmp BYTE PTR [rax],al
    cb64:	00 00                	add    BYTE PTR [rax],al
    cb66:	00 00                	add    BYTE PTR [rax],al
    cb68:	00 1c 03             	add    BYTE PTR [rbx+rax*1],bl
    cb6b:	00 00                	add    BYTE PTR [rax],al
    cb6d:	00 00                	add    BYTE PTR [rax],al
    cb6f:	00 00                	add    BYTE PTR [rax],al
    cb71:	01 9c 5b 75 00 00 05 	add    DWORD PTR [rbx+rbx*2+0x5000075],ebx
    cb78:	87 45 00             	xchg   DWORD PTR [rbp+0x0],eax
    cb7b:	00 1a                	add    BYTE PTR [rdx],bl
    cb7d:	2d 00 00 0e 2d       	sub    eax,0x2d0e0000
    cb82:	00 00                	add    BYTE PTR [rax],al
    cb84:	05 93 45 00 00       	add    eax,0x4593
    cb89:	62 2d 00 00 4e       	(bad)
    cb8e:	2d 00 00 15 a8       	sub    eax,0xa8150000
    cb93:	45 00 00             	add    BYTE PTR [r8],r8b
    cb96:	c6                   	(bad)
    cb97:	2d 00 00 b8 2d       	sub    eax,0x2db80000
    cb9c:	00 00                	add    BYTE PTR [rax],al
    cb9e:	3a b3 45 00 00 6b    	cmp    dh,BYTE PTR [rbx+0x6b000045]
    cba4:	04 00                	add    al,0x0
    cba6:	00 98 74 00 00 15    	add    BYTE PTR [rax+0x15000074],bl
    cbac:	b4 45                	mov    ah,0x45
    cbae:	00 00                	add    BYTE PTR [rax],al
    cbb0:	13 2e                	adc    ebp,DWORD PTR [rsi]
    cbb2:	00 00                	add    BYTE PTR [rax],al
    cbb4:	07                   	(bad)
    cbb5:	2e 00 00             	cs add BYTE PTR [rax],al
    cbb8:	4d bd 45 00 00 7b 04 	rex.WRB movabs r13,0x150000047b000045
    cbbf:	00 00 15 
    cbc2:	be 45 00 00 49       	mov    esi,0x49000045
    cbc7:	2e 00 00             	cs add BYTE PTR [rax],al
    cbca:	43                   	rex.XB
    cbcb:	2e 00 00             	cs add BYTE PTR [rax],al
    cbce:	00 00                	add    BYTE PTR [rax],al
    cbd0:	1c 1a                	sbb    al,0x1a
    cbd2:	72 00                	jb     cbd4 <_end+0x6bbc>
    cbd4:	00 d9                	add    cl,bl
    cbd6:	3a 00                	cmp    al,BYTE PTR [rax]
    cbd8:	00 00                	add    BYTE PTR [rax],al
    cbda:	00 00                	add    BYTE PTR [rax],al
    cbdc:	00 00                	add    BYTE PTR [rax],al
    cbde:	00 a4 04 00 00 bc 1e 	add    BYTE PTR [rsp+rax*1+0x1ebc0000],ah
    cbe5:	cc                   	int3
    cbe6:	74 00                	je     cbe8 <_end+0x6bd0>
    cbe8:	00 05 23 72 00 00    	add    BYTE PTR [rip+0x7223],al        # 13e11 <_end+0xddf9>
    cbee:	8f                   	(bad)
    cbef:	2e 00 00             	cs add BYTE PTR [rax],al
    cbf2:	89 2e                	mov    DWORD PTR [rsi],ebp
    cbf4:	00 00                	add    BYTE PTR [rax],al
    cbf6:	64 3d 3b 00 00 00    	fs cmp eax,0x3b
    cbfc:	00 00                	add    BYTE PTR [rax],al
    cbfe:	00 64 75 00          	add    BYTE PTR [rbp+rsi*2+0x0],ah
    cc02:	00 00                	add    BYTE PTR [rax],al
    cc04:	09 74 45 00          	or     DWORD PTR [rbp+rax*2+0x0],esi
    cc08:	00 3d 3b 00 00 00    	add    BYTE PTR [rip+0x3b],bh        # cc49 <_end+0x6c31>
    cc0e:	00 00                	add    BYTE PTR [rax],al
    cc10:	00 01                	add    BYTE PTR [rcx],al
    cc12:	00 3d 3b 00 00 00    	add    BYTE PTR [rip+0x3b],bh        # cc53 <_end+0x6c3b>
    cc18:	00 00                	add    BYTE PTR [rax],al
    cc1a:	00 1f                	add    BYTE PTR [rdi],bl
    cc1c:	00 00                	add    BYTE PTR [rax],al
    cc1e:	00 00                	add    BYTE PTR [rax],al
    cc20:	00 00                	add    BYTE PTR [rax],al
    cc22:	00 b4 07 44 75 00 00 	add    BYTE PTR [rdi+rax*1+0x7544],dh
    cc29:	65 87 45 00          	xchg   DWORD PTR gs:[rbp+0x0],eax
    cc2d:	00 05 93 45 00 00    	add    BYTE PTR [rip+0x4593],al        # 111c6 <_end+0xb1ae>
    cc33:	a9 2e 00 00 a5       	test   eax,0xa500002e
    cc38:	2e 00 00             	cs add BYTE PTR [rax],al
    cc3b:	3b a8 45 00 00 07    	cmp    ebp,DWORD PTR [rax+0x7000045]
    cc41:	5c                   	pop    rsp
    cc42:	3b 00                	cmp    eax,DWORD PTR [rax]
    cc44:	00 00                	add    BYTE PTR [rax],al
    cc46:	00 00                	add    BYTE PTR [rax],al
    cc48:	00 3f                	add    BYTE PTR [rdi],bh
    cc4a:	44 00 00             	add    BYTE PTR [rax],r8b
    cc4d:	03 01                	add    eax,DWORD PTR [rcx]
    cc4f:	55                   	push   rbp
    cc50:	09 03                	or     DWORD PTR [rbx],eax
    cc52:	22 40 00             	and    al,BYTE PTR [rax+0x0]
    cc55:	00 00                	add    BYTE PTR [rax],al
    cc57:	00 00                	add    BYTE PTR [rax],al
    cc59:	00 03                	add    BYTE PTR [rbx],al
    cc5b:	01 54 09 03          	add    DWORD PTR [rcx+rcx*1+0x3],edx
    cc5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    cc60:	41 00 00             	add    BYTE PTR [r8],al
    cc63:	00 00                	add    BYTE PTR [rax],al
    cc65:	00 00                	add    BYTE PTR [rax],al
    cc67:	03 01                	add    eax,DWORD PTR [rcx]
    cc69:	51                   	push   rcx
    cc6a:	02 08                	add    cl,BYTE PTR [rax]
    cc6c:	b5 03                	mov    ch,0x3
    cc6e:	01 52 09             	add    DWORD PTR [rdx+0x9],edx
    cc71:	03 98 46 00 00 00    	add    ebx,DWORD PTR [rax+0x46]
    cc77:	00 00                	add    BYTE PTR [rax],al
    cc79:	00 00                	add    BYTE PTR [rax],al
    cc7b:	00 27                	add    BYTE PTR [rdi],ah
    cc7d:	d6                   	(bad)
    cc7e:	39 00                	cmp    DWORD PTR [rax],eax
    cc80:	00 00                	add    BYTE PTR [rax],al
    cc82:	00 00                	add    BYTE PTR [rax],al
    cc84:	00 01                	add    BYTE PTR [rcx],al
    cc86:	30 27                	xor    BYTE PTR [rdi],ah
    cc88:	1b 3b                	sbb    edi,DWORD PTR [rbx]
    cc8a:	00 00                	add    BYTE PTR [rax],al
    cc8c:	00 00                	add    BYTE PTR [rax],al
    cc8e:	00 00                	add    BYTE PTR [rax],al
    cc90:	01 30                	add    DWORD PTR [rax],esi
    cc92:	00 3c e7             	add    BYTE PTR [rdi+riz*8],bh
    cc95:	1c 00                	sbb    al,0x0
    cc97:	00 dd                	add    ch,bl
    cc99:	1c 00                	sbb    al,0x0
    cc9b:	00 3c 8c             	add    BYTE PTR [rsp+rcx*4],bh
    cc9e:	22 00                	and    al,BYTE PTR [rax]
    cca0:	00 96 1c 00 00 3c    	add    BYTE PTR [rsi+0x3c00001c],dl
    cca6:	f1                   	int1
    cca7:	05 00 00 f1 05       	add    eax,0x5f10000
    ccac:	00 00                	add    BYTE PTR [rax],al
    ccae:	24 23                	and    al,0x23
    ccb0:	9e                   	sahf
    ccb1:	21 0a                	and    DWORD PTR [rdx],ecx
    ccb3:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccb8:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccbd:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccc2:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccc7:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cccc:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    ccd1:	0a 00                	or     al,BYTE PTR [rax]
    ccd3:	3c fd                	cmp    al,0xfd
    ccd5:	03 00                	add    eax,DWORD PTR [rax]
    ccd7:	00 f3                	add    bl,dh
    ccd9:	03 00                	add    eax,DWORD PTR [rax]
    ccdb:	00 24 09             	add    BYTE PTR [rcx+rcx*1],ah
    ccde:	9e                   	sahf
    ccdf:	07                   	(bad)
    cce0:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cce3:	33 32                	xor    esi,DWORD PTR [rdx]
    cce5:	0a 00                	or     al,BYTE PTR [rax]
    cce7:	24 22                	and    al,0x22
    cce9:	9e                   	sahf
    ccea:	20 2d 2d 2d 2d 2d    	and    BYTE PTR [rip+0x2d2d2d2d],ch        # 2d2dfa1d <_end+0x2d2d9a05>
    ccf0:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    ccf5:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    ccfa:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    ccff:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cd04:	2d 2d 2d 2d 2d       	sub    eax,0x2d2d2d2d
    cd09:	0a 00                	or     al,BYTE PTR [rax]
    cd0b:	24 22                	and    al,0x22
    cd0d:	9e                   	sahf
    cd0e:	20 3d 3d 3d 3d 3d    	and    BYTE PTR [rip+0x3d3d3d3d],bh        # 3d3e0a51 <_end+0x3d3daa39>
    cd14:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd19:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd1e:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd23:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd28:	3d 3d 3d 3d 3d       	cmp    eax,0x3d3d3d3d
    cd2d:	0a 00                	or     al,BYTE PTR [rax]
    cd2f:	24 0d                	and    al,0xd
    cd31:	9e                   	sahf
    cd32:	0b 5f 6d             	or     ebx,DWORD PTR [rdi+0x6d]
    cd35:	6d                   	ins    DWORD PTR es:[rdi],dx
    cd36:	5f                   	pop    rdi
    cd37:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cd3a:	33 32                	xor    esi,DWORD PTR [rdx]
    cd3c:	0a 00                	or     al,BYTE PTR [rax]
    cd3e:	24 0b                	and    al,0xb
    cd40:	9e                   	sahf
    cd41:	09 6d 75             	or     DWORD PTR [rbp+0x75],ebp
    cd44:	72 6d                	jb     cdb3 <_end+0x6d9b>
    cd46:	75 72                	jne    cdba <_end+0x6da2>
    cd48:	32 0a                	xor    cl,BYTE PTR [rdx]
    cd4a:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cd4d:	9e                   	sahf
    cd4e:	05 73 75 6d 0a       	add    eax,0xa6d7573
    cd53:	00 24 0b             	add    BYTE PTR [rbx+rcx*1],ah
    cd56:	9e                   	sahf
    cd57:	09 61 64             	or     DWORD PTR [rcx+0x64],esp
    cd5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd5b:	65 72 33             	gs jb  cd91 <_end+0x6d79>
    cd5e:	32 0a                	xor    cl,BYTE PTR [rdx]
    cd60:	00 24 07             	add    BYTE PTR [rdi+rax*1],ah
    cd63:	9e                   	sahf
    cd64:	05 65 6c 66 0a       	add    eax,0xa666c65
    cd69:	00 24 13             	add    BYTE PTR [rbx+rdx*1],ah
    cd6c:	9e                   	sahf
    cd6d:	11 5f 6d             	adc    DWORD PTR [rdi+0x6d],ebx
    cd70:	6d                   	ins    DWORD PTR es:[rdi],dx
    cd71:	5f                   	pop    rdi
    cd72:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    cd75:	33 32                	xor    esi,DWORD PTR [rdx]
    cd77:	55                   	push   rbp
    cd78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    cd79:	72 6f                	jb     cdea <_end+0x6dd2>
    cd7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd7c:	6c                   	ins    BYTE PTR es:[rdi],dx
    cd7d:	0a 00                	or     al,BYTE PTR [rax]
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
       0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <_end+0x12e8ee>
       6:	00 02                	add    BYTE PTR [rdx],al
       8:	08 00                	or     BYTE PTR [rax],al
       a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
       c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
       e:	39 0b                	cmp    DWORD PTR [rbx],ecx
      10:	18 13                	sbb    BYTE PTR [rbx],dl
      12:	00 00                	add    BYTE PTR [rax],al
      14:	03 24 00             	add    esp,DWORD PTR [rax+rax*1]
      17:	0b 0b                	or     ecx,DWORD PTR [rbx]
      19:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
      1c:	0e                   	(bad)
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	04 2e                	add    al,0x2e
      21:	01 3f                	add    DWORD PTR [rdi],edi
      23:	19 03                	sbb    DWORD PTR [rbx],eax
      25:	0e                   	(bad)
      26:	3a 21                	cmp    ah,BYTE PTR [rcx]
      28:	02 3b                	add    bh,BYTE PTR [rbx]
      2a:	05 39 0b 49 13       	add    eax,0x13490b39
      2f:	3c 19                	cmp    al,0x19
      31:	01 13                	add    DWORD PTR [rbx],edx
      33:	00 00                	add    BYTE PTR [rax],al
      35:	05 0f 00 0b 21       	add    eax,0x210b000f
      3a:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
      3d:	00 00                	add    BYTE PTR [rax],al
      3f:	06                   	(bad)
      40:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      43:	19 03                	sbb    DWORD PTR [rbx],eax
      45:	0e                   	(bad)
      46:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      48:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      4a:	39 0b                	cmp    DWORD PTR [rbx],ecx
      4c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      50:	01 13                	add    DWORD PTR [rbx],edx
      52:	00 00                	add    BYTE PTR [rax],al
      54:	07                   	(bad)
      55:	2e 01 3f             	cs add DWORD PTR [rdi],edi
      58:	19 03                	sbb    DWORD PTR [rbx],eax
      5a:	08 3a                	or     BYTE PTR [rdx],bh
      5c:	21 06                	and    DWORD PTR [rsi],eax
      5e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      60:	39 21                	cmp    DWORD PTR [rcx],esp
      62:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      65:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      69:	01 13                	add    DWORD PTR [rbx],edx
      6b:	00 00                	add    BYTE PTR [rax],al
      6d:	08 16                	or     BYTE PTR [rsi],dl
      6f:	00 03                	add    BYTE PTR [rbx],al
      71:	0e                   	(bad)
      72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
      74:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      76:	39 0b                	cmp    DWORD PTR [rbx],ecx
      78:	49 13 00             	adc    rax,QWORD PTR [r8]
      7b:	00 09                	add    BYTE PTR [rcx],cl
      7d:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
      81:	00 00                	add    BYTE PTR [rax],al
      83:	0a 2e                	or     ch,BYTE PTR [rsi]
      85:	01 3f                	add    DWORD PTR [rdi],edi
      87:	19 03                	sbb    DWORD PTR [rbx],eax
      89:	0e                   	(bad)
      8a:	3a 21                	cmp    ah,BYTE PTR [rcx]
      8c:	02 3b                	add    bh,BYTE PTR [rbx]
      8e:	0b 39                	or     edi,DWORD PTR [rcx]
      90:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
      93:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
      97:	01 13                	add    DWORD PTR [rbx],edx
      99:	00 00                	add    BYTE PTR [rax],al
      9b:	0b 49 00             	or     ecx,DWORD PTR [rcx+0x0]
      9e:	02 18                	add    bl,BYTE PTR [rax]
      a0:	7e 18                	jle    ba <__abi_tag-0x2c2>
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	0c 13                	or     al,0x13
      a6:	01 0b                	add    DWORD PTR [rbx],ecx
      a8:	0b 3a                	or     edi,DWORD PTR [rdx]
      aa:	21 02                	and    DWORD PTR [rdx],eax
      ac:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      ae:	39 21                	cmp    DWORD PTR [rcx],esp
      b0:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
      b3:	01 13                	add    DWORD PTR [rbx],edx
      b5:	00 00                	add    BYTE PTR [rax],al
      b7:	0d 0d 00 03 0e       	or     eax,0xe03000d
      bc:	3a 21                	cmp    ah,BYTE PTR [rcx]
      be:	02 3b                	add    bh,BYTE PTR [rbx]
      c0:	0b 39                	or     edi,DWORD PTR [rcx]
      c2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
      c5:	38 21                	cmp    BYTE PTR [rcx],ah
      c7:	00 00                	add    BYTE PTR [rax],al
      c9:	00 0e                	add    BYTE PTR [rsi],cl
      cb:	0d 00 03 08 3a       	or     eax,0x3a080300
      d0:	21 02                	and    DWORD PTR [rdx],eax
      d2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
      d4:	39 0b                	cmp    DWORD PTR [rbx],ecx
      d6:	49 13 38             	adc    rdi,QWORD PTR [r8]
      d9:	0b 00                	or     eax,DWORD PTR [rax]
      db:	00 0f                	add    BYTE PTR [rdi],cl
      dd:	34 00                	xor    al,0x0
      df:	03 0e                	add    ecx,DWORD PTR [rsi]
      e1:	3a 21                	cmp    ah,BYTE PTR [rcx]
      e3:	0c 3b                	or     al,0x3b
      e5:	0b 39                	or     edi,DWORD PTR [rcx]
      e7:	21 0b                	and    DWORD PTR [rbx],ecx
      e9:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
      ed:	00 00                	add    BYTE PTR [rax],al
      ef:	10 2e                	adc    BYTE PTR [rsi],ch
      f1:	01 3f                	add    DWORD PTR [rdi],edi
      f3:	19 03                	sbb    DWORD PTR [rbx],eax
      f5:	08 3a                	or     BYTE PTR [rdx],bh
      f7:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 21390c38 <_end+0x2138ac20>
      fd:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     100:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     104:	00 00                	add    BYTE PTR [rax],al
     106:	11 2e                	adc    DWORD PTR [rsi],ebp
     108:	01 3f                	add    DWORD PTR [rdi],edi
     10a:	19 03                	sbb    DWORD PTR [rbx],eax
     10c:	0e                   	(bad)
     10d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     10f:	02 3b                	add    bh,BYTE PTR [rbx]
     111:	05 39 21 0d 3c       	add    eax,0x3c0d2139
     116:	19 01                	sbb    DWORD PTR [rcx],eax
     118:	13 00                	adc    eax,DWORD PTR [rax]
     11a:	00 12                	add    BYTE PTR [rdx],dl
     11c:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     121:	21 01                	and    DWORD PTR [rcx],eax
     123:	3b 21                	cmp    esp,DWORD PTR [rcx]
     125:	07                   	(bad)
     126:	39 0b                	cmp    DWORD PTR [rbx],ecx
     128:	49 13 02             	adc    rax,QWORD PTR [r10]
     12b:	17                   	(bad)
     12c:	b7 42                	mov    bh,0x42
     12e:	17                   	(bad)
     12f:	00 00                	add    BYTE PTR [rax],al
     131:	13 48 01             	adc    ecx,DWORD PTR [rax+0x1]
     134:	7d 01                	jge    137 <__abi_tag-0x245>
     136:	7f 13                	jg     14b <__abi_tag-0x231>
     138:	00 00                	add    BYTE PTR [rax],al
     13a:	14 11                	adc    al,0x11
     13c:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1450 <_end+0x30ab438>
     142:	1f                   	(bad)
     143:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     145:	55                   	push   rbp
     146:	17                   	(bad)
     147:	11 01                	adc    DWORD PTR [rcx],eax
     149:	10 17                	adc    BYTE PTR [rdi],dl
     14b:	00 00                	add    BYTE PTR [rax],al
     14d:	15 0f 00 0b 0b       	adc    eax,0xb0b000f
     152:	00 00                	add    BYTE PTR [rax],al
     154:	16                   	(bad)
     155:	24 00                	and    al,0x0
     157:	0b 0b                	or     ecx,DWORD PTR [rbx]
     159:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     15c:	08 00                	or     BYTE PTR [rax],al
     15e:	00 17                	add    BYTE PTR [rdi],dl
     160:	16                   	(bad)
     161:	00 03                	add    BYTE PTR [rbx],al
     163:	0e                   	(bad)
     164:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     166:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490ca5 <_end+0x1348ac8d>
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	18 15 01 49 13 01    	sbb    BYTE PTR [rip+0x1134901],dl        # 1134a75 <_end+0x112ea5d>
     174:	13 00                	adc    eax,DWORD PTR [rax]
     176:	00 19                	add    BYTE PTR [rcx],bl
     178:	26 00 00             	es add BYTE PTR [rax],al
     17b:	00 1a                	add    BYTE PTR [rdx],bl
     17d:	39 01                	cmp    DWORD PTR [rcx],eax
     17f:	03 08                	add    ecx,DWORD PTR [rax]
     181:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     183:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010cc2 <_end+0x1300acaa>
     189:	00 00                	add    BYTE PTR [rax],al
     18b:	1b 08                	sbb    ecx,DWORD PTR [rax]
     18d:	00 3a                	add    BYTE PTR [rdx],bh
     18f:	0b 3b                	or     edi,DWORD PTR [rbx]
     191:	05 39 0b 18 13       	add    eax,0x13180b39
     196:	00 00                	add    BYTE PTR [rax],al
     198:	1c 15                	sbb    al,0x15
     19a:	00 00                	add    BYTE PTR [rax],al
     19c:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f02d0 <_end+0x193ea2b8>
     1a2:	03 0e                	add    ecx,DWORD PTR [rsi]
     1a4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1a6:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0ce5 <_end+0xe6daccd>
     1ac:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     1b0:	01 13                	add    DWORD PTR [rbx],edx
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	1e                   	(bad)
     1b5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     1b8:	19 03                	sbb    DWORD PTR [rbx],eax
     1ba:	0e                   	(bad)
     1bb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1bd:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cfc <_end+0x1348ace4>
     1c3:	20 0b                	and    BYTE PTR [rbx],cl
     1c5:	01 13                	add    DWORD PTR [rbx],edx
     1c7:	00 00                	add    BYTE PTR [rax],al
     1c9:	1f                   	(bad)
     1ca:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     1cf:	0b 3b                	or     edi,DWORD PTR [rbx]
     1d1:	05 39 0b 49 13       	add    eax,0x13490b39
     1d6:	00 00                	add    BYTE PTR [rax],al
     1d8:	20 2e                	and    BYTE PTR [rsi],ch
     1da:	01 3f                	add    DWORD PTR [rdi],edi
     1dc:	19 03                	sbb    DWORD PTR [rbx],eax
     1de:	08 3a                	or     BYTE PTR [rdx],bh
     1e0:	0b 3b                	or     edi,DWORD PTR [rbx]
     1e2:	05 39 0b 49 13       	add    eax,0x13490b39
     1e7:	3c 19                	cmp    al,0x19
     1e9:	01 13                	add    DWORD PTR [rbx],edx
     1eb:	00 00                	add    BYTE PTR [rax],al
     1ed:	21 2e                	and    DWORD PTR [rsi],ebp
     1ef:	01 3f                	add    DWORD PTR [rdi],edi
     1f1:	19 03                	sbb    DWORD PTR [rbx],eax
     1f3:	0e                   	(bad)
     1f4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     1f6:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1870d35 <_end+0x186ad1d>
     1fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     1ff:	01 13                	add    DWORD PTR [rbx],edx
     201:	00 00                	add    BYTE PTR [rax],al
     203:	22 2e                	and    ch,BYTE PTR [rsi]
     205:	00 3f                	add    BYTE PTR [rdi],bh
     207:	19 03                	sbb    DWORD PTR [rbx],eax
     209:	0e                   	(bad)
     20a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     20c:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d4b <_end+0x1348ad33>
     212:	3c 19                	cmp    al,0x19
     214:	00 00                	add    BYTE PTR [rax],al
     216:	23 39                	and    edi,DWORD PTR [rcx]
     218:	01 03                	add    DWORD PTR [rbx],eax
     21a:	0e                   	(bad)
     21b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     21d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010d5c <_end+0x1300ad44>
     223:	00 00                	add    BYTE PTR [rax],al
     225:	24 34                	and    al,0x34
     227:	00 03                	add    BYTE PTR [rbx],al
     229:	0e                   	(bad)
     22a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     22c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     22e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     230:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     234:	00 00                	add    BYTE PTR [rax],al
     236:	25 2e 01 3f 19       	and    eax,0x193f012e
     23b:	03 0e                	add    ecx,DWORD PTR [rsi]
     23d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     23f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     241:	39 0b                	cmp    DWORD PTR [rbx],ecx
     243:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     244:	0e                   	(bad)
     245:	3c 19                	cmp    al,0x19
     247:	01 13                	add    DWORD PTR [rbx],edx
     249:	00 00                	add    BYTE PTR [rax],al
     24b:	26 2e 01 3f          	es cs add DWORD PTR [rdi],edi
     24f:	19 03                	sbb    DWORD PTR [rbx],eax
     251:	0e                   	(bad)
     252:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     254:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     256:	39 0b                	cmp    DWORD PTR [rbx],ecx
     258:	49 13 11             	adc    rdx,QWORD PTR [r9]
     25b:	01 12                	add    DWORD PTR [rdx],edx
     25d:	07                   	(bad)
     25e:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     262:	00 00                	add    BYTE PTR [rax],al
     264:	27                   	(bad)
     265:	1d 01 31 13 52       	sbb    eax,0x52133101
     26a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     270:	58                   	pop    rax
     271:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     274:	57                   	push   rdi
     275:	0b 01                	or     eax,DWORD PTR [rcx]
     277:	13 00                	adc    eax,DWORD PTR [rax]
     279:	00 28                	add    BYTE PTR [rax],ch
     27b:	05 00 31 13 02       	add    eax,0x2133100
     280:	17                   	(bad)
     281:	b7 42                	mov    bh,0x42
     283:	17                   	(bad)
     284:	00 00                	add    BYTE PTR [rax],al
     286:	00 01                	add    BYTE PTR [rcx],al
     288:	05 00 49 13 00       	add    eax,0x134900
     28d:	00 02                	add    BYTE PTR [rdx],al
     28f:	08 00                	or     BYTE PTR [rax],al
     291:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     293:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     295:	39 0b                	cmp    DWORD PTR [rbx],ecx
     297:	18 13                	sbb    BYTE PTR [rbx],dl
     299:	00 00                	add    BYTE PTR [rax],al
     29b:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     29e:	02 18                	add    bl,BYTE PTR [rax]
     2a0:	7e 18                	jle    2ba <__abi_tag-0xc2>
     2a2:	00 00                	add    BYTE PTR [rax],al
     2a4:	04 05                	add    al,0x5
     2a6:	00 31                	add    BYTE PTR [rcx],dh
     2a8:	13 02                	adc    eax,DWORD PTR [rdx]
     2aa:	17                   	(bad)
     2ab:	b7 42                	mov    bh,0x42
     2ad:	17                   	(bad)
     2ae:	00 00                	add    BYTE PTR [rax],al
     2b0:	05 24 00 0b 0b       	add    eax,0xb0b0024
     2b5:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     2b8:	0e                   	(bad)
     2b9:	00 00                	add    BYTE PTR [rax],al
     2bb:	06                   	(bad)
     2bc:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     2c1:	0b 3b                	or     edi,DWORD PTR [rbx]
     2c3:	0b 39                	or     edi,DWORD PTR [rcx]
     2c5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2c8:	38 0b                	cmp    BYTE PTR [rbx],cl
     2ca:	00 00                	add    BYTE PTR [rax],al
     2cc:	07                   	(bad)
     2cd:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     2d1:	7f 13                	jg     2e6 <__abi_tag-0x96>
     2d3:	00 00                	add    BYTE PTR [rax],al
     2d5:	08 16                	or     BYTE PTR [rsi],dl
     2d7:	00 03                	add    BYTE PTR [rbx],al
     2d9:	0e                   	(bad)
     2da:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     2dc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     2de:	39 0b                	cmp    DWORD PTR [rbx],ecx
     2e0:	49 13 00             	adc    rax,QWORD PTR [r8]
     2e3:	00 09                	add    BYTE PTR [rcx],cl
     2e5:	0f 00 0b             	str    WORD PTR [rbx]
     2e8:	21 08                	and    DWORD PTR [rax],ecx
     2ea:	49 13 00             	adc    rax,QWORD PTR [r8]
     2ed:	00 0a                	add    BYTE PTR [rdx],cl
     2ef:	05 00 03 0e 3a       	add    eax,0x3a0e0300
     2f4:	0b 3b                	or     edi,DWORD PTR [rbx]
     2f6:	0b 39                	or     edi,DWORD PTR [rcx]
     2f8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     2fb:	00 00                	add    BYTE PTR [rax],al
     2fd:	0b 2e                	or     ebp,DWORD PTR [rsi]
     2ff:	01 3f                	add    DWORD PTR [rdi],edi
     301:	19 03                	sbb    DWORD PTR [rbx],eax
     303:	0e                   	(bad)
     304:	3a 21                	cmp    ah,BYTE PTR [rcx]
     306:	07                   	(bad)
     307:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490e46 <_end+0x1348ae2e>
     30d:	3c 19                	cmp    al,0x19
     30f:	01 13                	add    DWORD PTR [rbx],edx
     311:	00 00                	add    BYTE PTR [rax],al
     313:	0c 34                	or     al,0x34
     315:	00 03                	add    BYTE PTR [rbx],al
     317:	0e                   	(bad)
     318:	3a 21                	cmp    ah,BYTE PTR [rcx]
     31a:	01 3b                	add    DWORD PTR [rbx],edi
     31c:	0b 39                	or     edi,DWORD PTR [rcx]
     31e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     321:	02 17                	add    dl,BYTE PTR [rdi]
     323:	b7 42                	mov    bh,0x42
     325:	17                   	(bad)
     326:	00 00                	add    BYTE PTR [rax],al
     328:	0d 48 00 7d 01       	or     eax,0x17d0048
     32d:	7f 13                	jg     342 <__abi_tag-0x3a>
     32f:	00 00                	add    BYTE PTR [rax],al
     331:	0e                   	(bad)
     332:	1d 01 31 13 52       	sbb    eax,0x52133101
     337:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     33d:	58                   	pop    rax
     33e:	21 01                	and    DWORD PTR [rcx],eax
     340:	59                   	pop    rcx
     341:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     344:	01 13                	add    DWORD PTR [rbx],edx
     346:	00 00                	add    BYTE PTR [rax],al
     348:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
     34b:	3f                   	(bad)
     34c:	19 03                	sbb    DWORD PTR [rbx],eax
     34e:	0e                   	(bad)
     34f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     351:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     353:	39 0b                	cmp    DWORD PTR [rbx],ecx
     355:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     359:	01 13                	add    DWORD PTR [rbx],edx
     35b:	00 00                	add    BYTE PTR [rax],al
     35d:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e0663 <_end+0x3a0da64b>
     363:	21 01                	and    DWORD PTR [rcx],eax
     365:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     367:	39 0b                	cmp    DWORD PTR [rbx],ecx
     369:	49 13 02             	adc    rax,QWORD PTR [r10]
     36c:	17                   	(bad)
     36d:	b7 42                	mov    bh,0x42
     36f:	17                   	(bad)
     370:	00 00                	add    BYTE PTR [rax],al
     372:	11 34 00             	adc    DWORD PTR [rax+rax*1],esi
     375:	31 13                	xor    DWORD PTR [rbx],edx
     377:	02 17                	add    dl,BYTE PTR [rdi]
     379:	b7 42                	mov    bh,0x42
     37b:	17                   	(bad)
     37c:	00 00                	add    BYTE PTR [rax],al
     37e:	12 26                	adc    ah,BYTE PTR [rsi]
     380:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     383:	00 00                	add    BYTE PTR [rax],al
     385:	13 2e                	adc    ebp,DWORD PTR [rsi]
     387:	01 3f                	add    DWORD PTR [rdi],edi
     389:	19 03                	sbb    DWORD PTR [rbx],eax
     38b:	08 3a                	or     BYTE PTR [rdx],bh
     38d:	21 0a                	and    DWORD PTR [rdx],ecx
     38f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     391:	39 21                	cmp    DWORD PTR [rcx],esp
     393:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     396:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     39a:	01 13                	add    DWORD PTR [rbx],edx
     39c:	00 00                	add    BYTE PTR [rax],al
     39e:	14 2e                	adc    al,0x2e
     3a0:	01 3f                	add    DWORD PTR [rdi],edi
     3a2:	19 03                	sbb    DWORD PTR [rbx],eax
     3a4:	0e                   	(bad)
     3a5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     3a7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     3a9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     3ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3ac:	0e                   	(bad)
     3ad:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     3b1:	01 13                	add    DWORD PTR [rbx],edx
     3b3:	00 00                	add    BYTE PTR [rax],al
     3b5:	15 34 00 03 08       	adc    eax,0x8030034
     3ba:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3bc:	01 3b                	add    DWORD PTR [rbx],edi
     3be:	0b 39                	or     edi,DWORD PTR [rcx]
     3c0:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3c3:	02 17                	add    dl,BYTE PTR [rdi]
     3c5:	b7 42                	mov    bh,0x42
     3c7:	17                   	(bad)
     3c8:	00 00                	add    BYTE PTR [rax],al
     3ca:	16                   	(bad)
     3cb:	34 00                	xor    al,0x0
     3cd:	03 0e                	add    ecx,DWORD PTR [rsi]
     3cf:	3a 21                	cmp    ah,BYTE PTR [rcx]
     3d1:	01 3b                	add    DWORD PTR [rbx],edi
     3d3:	0b 39                	or     edi,DWORD PTR [rcx]
     3d5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     3d8:	00 00                	add    BYTE PTR [rax],al
     3da:	17                   	(bad)
     3db:	1d 01 31 13 52       	sbb    eax,0x52133101
     3e0:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     3e6:	12 07                	adc    al,BYTE PTR [rdi]
     3e8:	58                   	pop    rax
     3e9:	21 01                	and    DWORD PTR [rcx],eax
     3eb:	59                   	pop    rcx
     3ec:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     3ef:	01 13                	add    DWORD PTR [rbx],edx
     3f1:	00 00                	add    BYTE PTR [rax],al
     3f3:	18 0b                	sbb    BYTE PTR [rbx],cl
     3f5:	01 00                	add    DWORD PTR [rax],eax
     3f7:	00 19                	add    BYTE PTR [rcx],bl
     3f9:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     3fc:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     3ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     400:	0e                   	(bad)
     401:	03 0e                	add    ecx,DWORD PTR [rsi]
     403:	00 00                	add    BYTE PTR [rax],al
     405:	1a 13                	sbb    dl,BYTE PTR [rbx]
     407:	01 03                	add    DWORD PTR [rbx],eax
     409:	0e                   	(bad)
     40a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     40c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     40e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     410:	39 21                	cmp    DWORD PTR [rcx],esp
     412:	10 01                	adc    BYTE PTR [rcx],al
     414:	13 00                	adc    eax,DWORD PTR [rax]
     416:	00 1b                	add    BYTE PTR [rbx],bl
     418:	34 00                	xor    al,0x0
     41a:	03 0e                	add    ecx,DWORD PTR [rsi]
     41c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     41e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     420:	39 21                	cmp    DWORD PTR [rcx],esp
     422:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     425:	1c 0b                	sbb    al,0xb
     427:	00 00                	add    BYTE PTR [rax],al
     429:	1c 34                	sbb    al,0x34
     42b:	00 03                	add    BYTE PTR [rbx],al
     42d:	08 3a                	or     BYTE PTR [rdx],bh
     42f:	21 01                	and    DWORD PTR [rcx],eax
     431:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     433:	39 0b                	cmp    DWORD PTR [rbx],ecx
     435:	49 13 00             	adc    rax,QWORD PTR [r8]
     438:	00 1d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],bl        # 1349053f <_end+0x1348a527>
     43e:	01 13                	add    DWORD PTR [rbx],edx
     440:	00 00                	add    BYTE PTR [rax],al
     442:	1e                   	(bad)
     443:	21 00                	and    DWORD PTR [rax],eax
     445:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     448:	0b 00                	or     eax,DWORD PTR [rax]
     44a:	00 1f                	add    BYTE PTR [rdi],bl
     44c:	34 00                	xor    al,0x0
     44e:	03 0e                	add    ecx,DWORD PTR [rsi]
     450:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     454:	6c                   	ins    BYTE PTR es:[rdi],dx
     455:	19 02                	sbb    DWORD PTR [rdx],eax
     457:	18 00                	sbb    BYTE PTR [rax],al
     459:	00 20                	add    BYTE PTR [rax],ah
     45b:	0b 01                	or     eax,DWORD PTR [rcx]
     45d:	55                   	push   rbp
     45e:	17                   	(bad)
     45f:	00 00                	add    BYTE PTR [rax],al
     461:	21 48 01             	and    DWORD PTR [rax+0x1],ecx
     464:	7d 01                	jge    467 <__abi_tag+0xeb>
     466:	7f 13                	jg     47b <__abi_tag+0xff>
     468:	01 13                	add    DWORD PTR [rbx],edx
     46a:	00 00                	add    BYTE PTR [rax],al
     46c:	22 13                	and    dl,BYTE PTR [rbx]
     46e:	01 0b                	add    DWORD PTR [rbx],ecx
     470:	0b 3a                	or     edi,DWORD PTR [rdx]
     472:	21 07                	and    DWORD PTR [rdi],eax
     474:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     476:	39 21                	cmp    DWORD PTR [rcx],esp
     478:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     47b:	01 13                	add    DWORD PTR [rbx],edx
     47d:	00 00                	add    BYTE PTR [rax],al
     47f:	23 0d 00 03 08 3a    	and    ecx,DWORD PTR [rip+0x3a080300]        # 3a080785 <_end+0x3a07a76d>
     485:	21 07                	and    DWORD PTR [rdi],eax
     487:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     489:	39 0b                	cmp    DWORD PTR [rbx],ecx
     48b:	49 13 38             	adc    rdi,QWORD PTR [r8]
     48e:	0b 00                	or     eax,DWORD PTR [rax]
     490:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     493:	01 3f                	add    DWORD PTR [rdi],edi
     495:	19 03                	sbb    DWORD PTR [rbx],eax
     497:	0e                   	(bad)
     498:	3a 21                	cmp    ah,BYTE PTR [rcx]
     49a:	07                   	(bad)
     49b:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d25da <_end+0x3c0cc5c2>
     4a1:	19 01                	sbb    DWORD PTR [rcx],eax
     4a3:	13 00                	adc    eax,DWORD PTR [rax]
     4a5:	00 25 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],ah        # e0304df <_end+0xe02a4c7>
     4ab:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     4af:	6c                   	ins    BYTE PTR es:[rdi],dx
     4b0:	19 00                	sbb    DWORD PTR [rax],eax
     4b2:	00 26                	add    BYTE PTR [rsi],ah
     4b4:	34 00                	xor    al,0x0
     4b6:	31 13                	xor    DWORD PTR [rbx],edx
     4b8:	00 00                	add    BYTE PTR [rax],al
     4ba:	27                   	(bad)
     4bb:	0b 01                	or     eax,DWORD PTR [rcx]
     4bd:	31 13                	xor    DWORD PTR [rbx],edx
     4bf:	55                   	push   rbp
     4c0:	17                   	(bad)
     4c1:	01 13                	add    DWORD PTR [rbx],edx
     4c3:	00 00                	add    BYTE PTR [rax],al
     4c5:	28 05 00 31 13 00    	sub    BYTE PTR [rip+0x133100],al        # 1335cb <_end+0x12d5b3>
     4cb:	00 29                	add    BYTE PTR [rcx],ch
     4cd:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     4d0:	19 03                	sbb    DWORD PTR [rbx],eax
     4d2:	0e                   	(bad)
     4d3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     4d5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     4d7:	39 21                	cmp    DWORD PTR [rcx],esp
     4d9:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     4dc:	20 21                	and    BYTE PTR [rcx],ah
     4de:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     4e1:	01 13                	add    DWORD PTR [rbx],edx
     4e3:	00 00                	add    BYTE PTR [rax],al
     4e5:	2a 37                	sub    dh,BYTE PTR [rdi]
     4e7:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     4ea:	00 00                	add    BYTE PTR [rax],al
     4ec:	2b 15 01 49 13 01    	sub    edx,DWORD PTR [rip+0x1134901]        # 1134df3 <_end+0x112eddb>
     4f2:	13 00                	adc    eax,DWORD PTR [rax]
     4f4:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
     4f7:	01 3f                	add    DWORD PTR [rdi],edi
     4f9:	19 03                	sbb    DWORD PTR [rbx],eax
     4fb:	08 3a                	or     BYTE PTR [rdx],bh
     4fd:	21 09                	and    DWORD PTR [rcx],ecx
     4ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     501:	39 21                	cmp    DWORD PTR [rcx],esp
     503:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     506:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     50a:	00 00                	add    BYTE PTR [rax],al
     50c:	2d 18 00 00 00       	sub    eax,0x18
     511:	2e 2e 01 3f          	cs cs add DWORD PTR [rdi],edi
     515:	19 03                	sbb    DWORD PTR [rbx],eax
     517:	0e                   	(bad)
     518:	3a 21                	cmp    ah,BYTE PTR [rcx]
     51a:	12 3b                	adc    bh,BYTE PTR [rbx]
     51c:	0b 39                	or     edi,DWORD PTR [rcx]
     51e:	21 06                	and    DWORD PTR [rsi],eax
     520:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     521:	0e                   	(bad)
     522:	3c 19                	cmp    al,0x19
     524:	01 13                	add    DWORD PTR [rbx],edx
     526:	00 00                	add    BYTE PTR [rax],al
     528:	2f                   	(bad)
     529:	0b 01                	or     eax,DWORD PTR [rcx]
     52b:	11 01                	adc    DWORD PTR [rcx],eax
     52d:	12 07                	adc    al,BYTE PTR [rdi]
     52f:	01 13                	add    DWORD PTR [rbx],edx
     531:	00 00                	add    BYTE PTR [rax],al
     533:	30 2e                	xor    BYTE PTR [rsi],ch
     535:	01 03                	add    DWORD PTR [rbx],eax
     537:	0e                   	(bad)
     538:	3a 21                	cmp    ah,BYTE PTR [rcx]
     53a:	01 3b                	add    DWORD PTR [rbx],edi
     53c:	0b 39                	or     edi,DWORD PTR [rcx]
     53e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     541:	20 21                	and    BYTE PTR [rcx],ah
     543:	01 01                	add    DWORD PTR [rcx],eax
     545:	13 00                	adc    eax,DWORD PTR [rax]
     547:	00 31                	add    BYTE PTR [rcx],dh
     549:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     54c:	19 03                	sbb    DWORD PTR [rbx],eax
     54e:	0e                   	(bad)
     54f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     551:	01 3b                	add    DWORD PTR [rbx],edi
     553:	0b 39                	or     edi,DWORD PTR [rcx]
     555:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     558:	49 13 11             	adc    rdx,QWORD PTR [r9]
     55b:	01 12                	add    DWORD PTR [rdx],edx
     55d:	07                   	(bad)
     55e:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     562:	01 13                	add    DWORD PTR [rbx],edx
     564:	00 00                	add    BYTE PTR [rax],al
     566:	32 2e                	xor    ch,BYTE PTR [rsi]
     568:	01 3f                	add    DWORD PTR [rdi],edi
     56a:	19 03                	sbb    DWORD PTR [rbx],eax
     56c:	0e                   	(bad)
     56d:	3a 21                	cmp    ah,BYTE PTR [rcx]
     56f:	01 3b                	add    DWORD PTR [rbx],edi
     571:	0b 39                	or     edi,DWORD PTR [rcx]
     573:	21 0a                	and    DWORD PTR [rdx],ecx
     575:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     576:	0e                   	(bad)
     577:	49 13 11             	adc    rdx,QWORD PTR [r9]
     57a:	01 12                	add    DWORD PTR [rdx],edx
     57c:	07                   	(bad)
     57d:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
     582:	13 00                	adc    eax,DWORD PTR [rax]
     584:	00 33                	add    BYTE PTR [rbx],dh
     586:	0b 01                	or     eax,DWORD PTR [rcx]
     588:	31 13                	xor    DWORD PTR [rbx],edx
     58a:	11 01                	adc    DWORD PTR [rcx],eax
     58c:	12 07                	adc    al,BYTE PTR [rdi]
     58e:	00 00                	add    BYTE PTR [rax],al
     590:	34 1d                	xor    al,0x1d
     592:	01 31                	add    DWORD PTR [rcx],esi
     594:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     597:	b8 42 0b 55 17       	mov    eax,0x17550b42
     59c:	58                   	pop    rax
     59d:	21 01                	and    DWORD PTR [rcx],eax
     59f:	59                   	pop    rcx
     5a0:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     5a3:	00 00                	add    BYTE PTR [rax],al
     5a5:	35 2e 01 3f 19       	xor    eax,0x193f012e
     5aa:	03 0e                	add    ecx,DWORD PTR [rsi]
     5ac:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     5ae:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5b0:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5b3:	0e                   	(bad)
     5b4:	49 13 20             	adc    rsp,QWORD PTR [r8]
     5b7:	0b 01                	or     eax,DWORD PTR [rcx]
     5b9:	13 00                	adc    eax,DWORD PTR [rax]
     5bb:	00 36                	add    BYTE PTR [rsi],dh
     5bd:	05 00 03 08 3a       	add    eax,0x3a080300
     5c2:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
     5c5:	21 c9                	and    ecx,ecx
     5c7:	06                   	(bad)
     5c8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5ca:	49 13 00             	adc    rax,QWORD PTR [r8]
     5cd:	00 37                	add    BYTE PTR [rdi],dh
     5cf:	05 00 03 08 3a       	add    eax,0x3a080300
     5d4:	21 02                	and    DWORD PTR [rdx],eax
     5d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     5d8:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5da:	49 13 00             	adc    rax,QWORD PTR [r8]
     5dd:	00 38                	add    BYTE PTR [rax],bh
     5df:	2e 01 31             	cs add DWORD PTR [rcx],esi
     5e2:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     5e5:	11 01                	adc    DWORD PTR [rcx],eax
     5e7:	12 07                	adc    al,BYTE PTR [rdi]
     5e9:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     5ed:	01 13                	add    DWORD PTR [rbx],edx
     5ef:	00 00                	add    BYTE PTR [rax],al
     5f1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     5f3:	01 31                	add    DWORD PTR [rcx],esi
     5f5:	13 11                	adc    edx,DWORD PTR [rcx]
     5f7:	01 12                	add    DWORD PTR [rdx],edx
     5f9:	07                   	(bad)
     5fa:	01 13                	add    DWORD PTR [rbx],edx
     5fc:	00 00                	add    BYTE PTR [rax],al
     5fe:	3a 36                	cmp    dh,BYTE PTR [rsi]
     600:	00 02                	add    BYTE PTR [rdx],al
     602:	18 00                	sbb    BYTE PTR [rax],al
     604:	00 3b                	add    BYTE PTR [rbx],bh
     606:	11 01                	adc    DWORD PTR [rcx],eax
     608:	25 0e 13 0b 03       	and    eax,0x30b130e
     60d:	1f                   	(bad)
     60e:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     610:	11 01                	adc    DWORD PTR [rcx],eax
     612:	12 07                	adc    al,BYTE PTR [rdi]
     614:	10 17                	adc    BYTE PTR [rdi],dl
     616:	00 00                	add    BYTE PTR [rax],al
     618:	3c 24                	cmp    al,0x24
     61a:	00 0b                	add    BYTE PTR [rbx],cl
     61c:	0b 3e                	or     edi,DWORD PTR [rsi]
     61e:	0b 03                	or     eax,DWORD PTR [rbx]
     620:	08 00                	or     BYTE PTR [rax],al
     622:	00 3d 0f 00 0b 0b    	add    BYTE PTR [rip+0xb0b000f],bh        # b0b0637 <_end+0xb0aa61f>
     628:	00 00                	add    BYTE PTR [rax],al
     62a:	3e 16                	ds (bad)
     62c:	00 03                	add    BYTE PTR [rbx],al
     62e:	0e                   	(bad)
     62f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     631:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491170 <_end+0x1348b158>
     637:	00 00                	add    BYTE PTR [rax],al
     639:	3f                   	(bad)
     63a:	26 00 00             	es add BYTE PTR [rax],al
     63d:	00 40 39             	add    BYTE PTR [rax+0x39],al
     640:	01 03                	add    DWORD PTR [rbx],eax
     642:	08 3a                	or     BYTE PTR [rdx],bh
     644:	0b 3b                	or     edi,DWORD PTR [rbx]
     646:	05 39 0b 01 13       	add    eax,0x13010b39
     64b:	00 00                	add    BYTE PTR [rax],al
     64d:	41 08 00             	or     BYTE PTR [r8],al
     650:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     652:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 13181191 <_end+0x1317b179>
     658:	00 00                	add    BYTE PTR [rax],al
     65a:	42 15 00 00 00 43    	rex.X adc eax,0x43000000
     660:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     663:	19 03                	sbb    DWORD PTR [rbx],eax
     665:	0e                   	(bad)
     666:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     668:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e11a7 <_end+0xe6db18f>
     66e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     672:	01 13                	add    DWORD PTR [rbx],edx
     674:	00 00                	add    BYTE PTR [rax],al
     676:	44                   	rex.R
     677:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     67a:	19 03                	sbb    DWORD PTR [rbx],eax
     67c:	08 3a                	or     BYTE PTR [rdx],bh
     67e:	0b 3b                	or     edi,DWORD PTR [rbx]
     680:	05 39 0b 49 13       	add    eax,0x13490b39
     685:	3c 19                	cmp    al,0x19
     687:	01 13                	add    DWORD PTR [rbx],edx
     689:	00 00                	add    BYTE PTR [rax],al
     68b:	45                   	rex.RB
     68c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     68f:	19 03                	sbb    DWORD PTR [rbx],eax
     691:	0e                   	(bad)
     692:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     694:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18711d3 <_end+0x186b1bb>
     69a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     69d:	01 13                	add    DWORD PTR [rbx],edx
     69f:	00 00                	add    BYTE PTR [rax],al
     6a1:	46                   	rex.RX
     6a2:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6a5:	19 03                	sbb    DWORD PTR [rbx],eax
     6a7:	0e                   	(bad)
     6a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6aa:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134911e9 <_end+0x1348b1d1>
     6b0:	3c 19                	cmp    al,0x19
     6b2:	00 00                	add    BYTE PTR [rax],al
     6b4:	47 39 01             	rex.RXB cmp DWORD PTR [r9],r8d
     6b7:	03 0e                	add    ecx,DWORD PTR [rsi]
     6b9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6bb:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130111fa <_end+0x1300b1e2>
     6c1:	00 00                	add    BYTE PTR [rax],al
     6c3:	48                   	rex.W
     6c4:	2e 00 3f             	cs add BYTE PTR [rdi],bh
     6c7:	19 03                	sbb    DWORD PTR [rbx],eax
     6c9:	0e                   	(bad)
     6ca:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6cc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6ce:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6d1:	0e                   	(bad)
     6d2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     6d6:	00 00                	add    BYTE PTR [rax],al
     6d8:	49                   	rex.WB
     6d9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6dc:	19 03                	sbb    DWORD PTR [rbx],eax
     6de:	0e                   	(bad)
     6df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6e1:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6e3:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6e5:	87 01                	xchg   DWORD PTR [rcx],eax
     6e7:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     6ea:	01 13                	add    DWORD PTR [rbx],edx
     6ec:	00 00                	add    BYTE PTR [rax],al
     6ee:	4a                   	rex.WX
     6ef:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     6f2:	19 03                	sbb    DWORD PTR [rbx],eax
     6f4:	0e                   	(bad)
     6f5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     6f7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     6f9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     6fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6fc:	0e                   	(bad)
     6fd:	11 01                	adc    DWORD PTR [rcx],eax
     6ff:	12 07                	adc    al,BYTE PTR [rdi]
     701:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     705:	01 13                	add    DWORD PTR [rbx],edx
     707:	00 00                	add    BYTE PTR [rax],al
     709:	4b                   	rex.WXB
     70a:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
     70e:	82                   	(bad)
     70f:	01 19                	add    DWORD PTR [rcx],ebx
     711:	7f 13                	jg     726 <__abi_tag+0x3aa>
     713:	00 00                	add    BYTE PTR [rax],al
     715:	4c 1d 01 31 13 52    	rex.WR sbb rax,0x52133101
     71b:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     721:	12 07                	adc    al,BYTE PTR [rdi]
     723:	58                   	pop    rax
     724:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     727:	57                   	push   rdi
     728:	0b 00                	or     eax,DWORD PTR [rax]
     72a:	00 4d 05             	add    BYTE PTR [rbp+0x5],cl
     72d:	00 31                	add    BYTE PTR [rcx],dh
     72f:	13 02                	adc    eax,DWORD PTR [rdx]
     731:	18 00                	sbb    BYTE PTR [rax],al
     733:	00 4e 2e             	add    BYTE PTR [rsi+0x2e],cl
     736:	01 3f                	add    DWORD PTR [rdi],edi
     738:	19 03                	sbb    DWORD PTR [rbx],eax
     73a:	0e                   	(bad)
     73b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     73d:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     73f:	39 0b                	cmp    DWORD PTR [rbx],ecx
     741:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     742:	0e                   	(bad)
     743:	20 0b                	and    BYTE PTR [rbx],cl
     745:	01 13                	add    DWORD PTR [rbx],edx
     747:	00 00                	add    BYTE PTR [rax],al
     749:	4f 1d 01 31 13 55    	rex.WRXB sbb rax,0x55133101
     74f:	17                   	(bad)
     750:	58                   	pop    rax
     751:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
     754:	57                   	push   rdi
     755:	0b 00                	or     eax,DWORD PTR [rax]
     757:	00 50 2e             	add    BYTE PTR [rax+0x2e],dl
     75a:	01 3f                	add    DWORD PTR [rdi],edi
     75c:	19 03                	sbb    DWORD PTR [rbx],eax
     75e:	0e                   	(bad)
     75f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     761:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e12a0 <_end+0xe6db288>
     767:	49 13 20             	adc    rsp,QWORD PTR [r8]
     76a:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     76d:	01 13                	add    DWORD PTR [rbx],edx
     76f:	00 00                	add    BYTE PTR [rax],al
     771:	51                   	push   rcx
     772:	05 00 31 13 1c       	add    eax,0x1c133100
     777:	0b 00                	or     eax,DWORD PTR [rax]
     779:	00 52 48             	add    BYTE PTR [rdx+0x48],dl
     77c:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
     77f:	82                   	(bad)
     780:	01 19                	add    DWORD PTR [rcx],ebx
     782:	7f 13                	jg     797 <__abi_tag+0x41b>
     784:	00 00                	add    BYTE PTR [rax],al
     786:	00 01                	add    BYTE PTR [rcx],al
     788:	08 00                	or     BYTE PTR [rax],al
     78a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     78c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     78e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     790:	18 13                	sbb    BYTE PTR [rbx],dl
     792:	00 00                	add    BYTE PTR [rax],al
     794:	02 05 00 49 13 00    	add    al,BYTE PTR [rip+0x134900]        # 13509a <_end+0x12f082>
     79a:	00 03                	add    BYTE PTR [rbx],al
     79c:	34 00                	xor    al,0x0
     79e:	03 0e                	add    ecx,DWORD PTR [rsi]
     7a0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7a2:	01 3b                	add    DWORD PTR [rbx],edi
     7a4:	0b 39                	or     edi,DWORD PTR [rcx]
     7a6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     7a9:	02 17                	add    dl,BYTE PTR [rdi]
     7ab:	b7 42                	mov    bh,0x42
     7ad:	17                   	(bad)
     7ae:	00 00                	add    BYTE PTR [rax],al
     7b0:	04 24                	add    al,0x24
     7b2:	00 0b                	add    BYTE PTR [rbx],cl
     7b4:	0b 3e                	or     edi,DWORD PTR [rsi]
     7b6:	0b 03                	or     eax,DWORD PTR [rbx]
     7b8:	0e                   	(bad)
     7b9:	00 00                	add    BYTE PTR [rax],al
     7bb:	05 05 00 31 13       	add    eax,0x13310005
     7c0:	02 17                	add    dl,BYTE PTR [rdi]
     7c2:	b7 42                	mov    bh,0x42
     7c4:	17                   	(bad)
     7c5:	00 00                	add    BYTE PTR [rax],al
     7c7:	06                   	(bad)
     7c8:	16                   	(bad)
     7c9:	00 03                	add    BYTE PTR [rbx],al
     7cb:	0e                   	(bad)
     7cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7ce:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     7d0:	39 0b                	cmp    DWORD PTR [rbx],ecx
     7d2:	49 13 00             	adc    rax,QWORD PTR [r8]
     7d5:	00 07                	add    BYTE PTR [rdi],al
     7d7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7da:	19 03                	sbb    DWORD PTR [rbx],eax
     7dc:	0e                   	(bad)
     7dd:	3a 21                	cmp    ah,BYTE PTR [rcx]
     7df:	07                   	(bad)
     7e0:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349131f <_end+0x1348b307>
     7e6:	3c 19                	cmp    al,0x19
     7e8:	01 13                	add    DWORD PTR [rbx],edx
     7ea:	00 00                	add    BYTE PTR [rax],al
     7ec:	08 0f                	or     BYTE PTR [rdi],cl
     7ee:	00 0b                	add    BYTE PTR [rbx],cl
     7f0:	21 08                	and    DWORD PTR [rax],ecx
     7f2:	49 13 00             	adc    rax,QWORD PTR [r8]
     7f5:	00 09                	add    BYTE PTR [rcx],cl
     7f7:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     7fa:	19 03                	sbb    DWORD PTR [rbx],eax
     7fc:	0e                   	(bad)
     7fd:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     7ff:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     801:	39 0b                	cmp    DWORD PTR [rbx],ecx
     803:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     807:	01 13                	add    DWORD PTR [rbx],edx
     809:	00 00                	add    BYTE PTR [rax],al
     80b:	0a 34 00             	or     dh,BYTE PTR [rax+rax*1]
     80e:	03 08                	add    ecx,DWORD PTR [rax]
     810:	3a 21                	cmp    ah,BYTE PTR [rcx]
     812:	01 3b                	add    DWORD PTR [rbx],edi
     814:	0b 39                	or     edi,DWORD PTR [rcx]
     816:	21 0e                	and    DWORD PTR [rsi],ecx
     818:	49 13 02             	adc    rax,QWORD PTR [r10]
     81b:	17                   	(bad)
     81c:	b7 42                	mov    bh,0x42
     81e:	17                   	(bad)
     81f:	00 00                	add    BYTE PTR [rax],al
     821:	0b 2e                	or     ebp,DWORD PTR [rsi]
     823:	01 3f                	add    DWORD PTR [rdi],edi
     825:	19 03                	sbb    DWORD PTR [rbx],eax
     827:	08 3a                	or     BYTE PTR [rdx],bh
     829:	21 09                	and    DWORD PTR [rcx],ecx
     82b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     82d:	39 21                	cmp    DWORD PTR [rcx],esp
     82f:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     832:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     836:	01 13                	add    DWORD PTR [rbx],edx
     838:	00 00                	add    BYTE PTR [rax],al
     83a:	0c 2e                	or     al,0x2e
     83c:	01 3f                	add    DWORD PTR [rdi],edi
     83e:	19 03                	sbb    DWORD PTR [rbx],eax
     840:	0e                   	(bad)
     841:	3a 21                	cmp    ah,BYTE PTR [rcx]
     843:	01 3b                	add    DWORD PTR [rbx],edi
     845:	0b 39                	or     edi,DWORD PTR [rcx]
     847:	21 0a                	and    DWORD PTR [rdx],ecx
     849:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     84a:	0e                   	(bad)
     84b:	49 13 11             	adc    rdx,QWORD PTR [r9]
     84e:	01 12                	add    DWORD PTR [rdx],edx
     850:	07                   	(bad)
     851:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     855:	01 13                	add    DWORD PTR [rbx],edx
     857:	00 00                	add    BYTE PTR [rax],al
     859:	0d 05 00 03 0e       	or     eax,0xe030005
     85e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     860:	01 3b                	add    DWORD PTR [rbx],edi
     862:	0b 39                	or     edi,DWORD PTR [rcx]
     864:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     867:	02 17                	add    dl,BYTE PTR [rdi]
     869:	b7 42                	mov    bh,0x42
     86b:	17                   	(bad)
     86c:	00 00                	add    BYTE PTR [rax],al
     86e:	0e                   	(bad)
     86f:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     874:	0b 3b                	or     edi,DWORD PTR [rbx]
     876:	0b 39                	or     edi,DWORD PTR [rcx]
     878:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     87b:	38 0b                	cmp    BYTE PTR [rbx],cl
     87d:	00 00                	add    BYTE PTR [rax],al
     87f:	0f 0b                	ud2
     881:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     884:	00 00                	add    BYTE PTR [rax],al
     886:	10 34 00             	adc    BYTE PTR [rax+rax*1],dh
     889:	31 13                	xor    DWORD PTR [rbx],edx
     88b:	02 17                	add    dl,BYTE PTR [rdi]
     88d:	b7 42                	mov    bh,0x42
     88f:	17                   	(bad)
     890:	00 00                	add    BYTE PTR [rax],al
     892:	11 2e                	adc    DWORD PTR [rsi],ebp
     894:	01 3f                	add    DWORD PTR [rdi],edi
     896:	19 03                	sbb    DWORD PTR [rbx],eax
     898:	0e                   	(bad)
     899:	3a 21                	cmp    ah,BYTE PTR [rcx]
     89b:	07                   	(bad)
     89c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     89e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     8a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8a1:	0e                   	(bad)
     8a2:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     8a6:	01 13                	add    DWORD PTR [rbx],edx
     8a8:	00 00                	add    BYTE PTR [rax],al
     8aa:	12 34 00             	adc    dh,BYTE PTR [rax+rax*1]
     8ad:	03 0e                	add    ecx,DWORD PTR [rsi]
     8af:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8b1:	01 3b                	add    DWORD PTR [rbx],edi
     8b3:	0b 39                	or     edi,DWORD PTR [rcx]
     8b5:	21 0e                	and    DWORD PTR [rsi],ecx
     8b7:	49 13 00             	adc    rax,QWORD PTR [r8]
     8ba:	00 13                	add    BYTE PTR [rbx],dl
     8bc:	34 00                	xor    al,0x0
     8be:	03 0e                	add    ecx,DWORD PTR [rsi]
     8c0:	3a 21                	cmp    ah,BYTE PTR [rcx]
     8c2:	01 3b                	add    DWORD PTR [rbx],edi
     8c4:	0b 39                	or     edi,DWORD PTR [rcx]
     8c6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     8c9:	1c 0b                	sbb    al,0xb
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	14 1d                	adc    al,0x1d
     8cf:	01 31                	add    DWORD PTR [rcx],esi
     8d1:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     8d4:	b8 42 0b 55 17       	mov    eax,0x17550b42
     8d9:	58                   	pop    rax
     8da:	21 01                	and    DWORD PTR [rcx],eax
     8dc:	59                   	pop    rcx
     8dd:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8e0:	01 13                	add    DWORD PTR [rbx],edx
     8e2:	00 00                	add    BYTE PTR [rax],al
     8e4:	15 1d 01 31 13       	adc    eax,0x1331011d
     8e9:	52                   	push   rdx
     8ea:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     8f0:	58                   	pop    rax
     8f1:	21 01                	and    DWORD PTR [rcx],eax
     8f3:	59                   	pop    rcx
     8f4:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     8f7:	00 00                	add    BYTE PTR [rax],al
     8f9:	16                   	(bad)
     8fa:	05 00 03 08 3a       	add    eax,0x3a080300
     8ff:	21 02                	and    DWORD PTR [rdx],eax
     901:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491440 <_end+0x1348b428>
     907:	00 00                	add    BYTE PTR [rax],al
     909:	17                   	(bad)
     90a:	13 01                	adc    eax,DWORD PTR [rcx]
     90c:	0b 0b                	or     ecx,DWORD PTR [rbx]
     90e:	3a 21                	cmp    ah,BYTE PTR [rcx]
     910:	07                   	(bad)
     911:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     913:	39 21                	cmp    DWORD PTR [rcx],esp
     915:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     918:	01 13                	add    DWORD PTR [rbx],edx
     91a:	00 00                	add    BYTE PTR [rax],al
     91c:	18 0d 00 03 08 3a    	sbb    BYTE PTR [rip+0x3a080300],cl        # 3a080c22 <_end+0x3a07ac0a>
     922:	21 07                	and    DWORD PTR [rdi],eax
     924:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     926:	39 0b                	cmp    DWORD PTR [rbx],ecx
     928:	49 13 38             	adc    rdi,QWORD PTR [r8]
     92b:	0b 00                	or     eax,DWORD PTR [rax]
     92d:	00 19                	add    BYTE PTR [rcx],bl
     92f:	05 00 03 08 3a       	add    eax,0x3a080300
     934:	21 01                	and    DWORD PTR [rcx],eax
     936:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     938:	39 0b                	cmp    DWORD PTR [rbx],ecx
     93a:	49 13 00             	adc    rax,QWORD PTR [r8]
     93d:	00 1a                	add    BYTE PTR [rdx],bl
     93f:	34 00                	xor    al,0x0
     941:	03 08                	add    ecx,DWORD PTR [rax]
     943:	3a 21                	cmp    ah,BYTE PTR [rcx]
     945:	01 3b                	add    DWORD PTR [rbx],edi
     947:	0b 39                	or     edi,DWORD PTR [rcx]
     949:	21 0e                	and    DWORD PTR [rsi],ecx
     94b:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
     94f:	00 00                	add    BYTE PTR [rax],al
     951:	1b 26                	sbb    esp,DWORD PTR [rsi]
     953:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     956:	00 00                	add    BYTE PTR [rax],al
     958:	1c 2e                	sbb    al,0x2e
     95a:	01 3f                	add    DWORD PTR [rdi],edi
     95c:	19 03                	sbb    DWORD PTR [rbx],eax
     95e:	08 3a                	or     BYTE PTR [rdx],bh
     960:	21 08                	and    DWORD PTR [rax],ecx
     962:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     964:	39 21                	cmp    DWORD PTR [rcx],esp
     966:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     969:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     96d:	00 00                	add    BYTE PTR [rax],al
     96f:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
     974:	03 0e                	add    ecx,DWORD PTR [rsi]
     976:	3a 21                	cmp    ah,BYTE PTR [rcx]
     978:	07                   	(bad)
     979:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2ab8 <_end+0x3c0ccaa0>
     97f:	19 01                	sbb    DWORD PTR [rcx],eax
     981:	13 00                	adc    eax,DWORD PTR [rax]
     983:	00 1e                	add    BYTE PTR [rsi],bl
     985:	2e 01 03             	cs add DWORD PTR [rbx],eax
     988:	0e                   	(bad)
     989:	3a 21                	cmp    ah,BYTE PTR [rcx]
     98b:	01 3b                	add    DWORD PTR [rbx],edi
     98d:	0b 39                	or     edi,DWORD PTR [rcx]
     98f:	21 11                	and    DWORD PTR [rcx],edx
     991:	49 13 20             	adc    rsp,QWORD PTR [r8]
     994:	21 01                	and    DWORD PTR [rcx],eax
     996:	01 13                	add    DWORD PTR [rbx],edx
     998:	00 00                	add    BYTE PTR [rax],al
     99a:	1f                   	(bad)
     99b:	34 00                	xor    al,0x0
     99d:	03 08                	add    ecx,DWORD PTR [rax]
     99f:	3a 21                	cmp    ah,BYTE PTR [rcx]
     9a1:	01 3b                	add    DWORD PTR [rbx],edi
     9a3:	0b 39                	or     edi,DWORD PTR [rcx]
     9a5:	21 0e                	and    DWORD PTR [rsi],ecx
     9a7:	49 13 00             	adc    rax,QWORD PTR [r8]
     9aa:	00 20                	add    BYTE PTR [rax],ah
     9ac:	0b 01                	or     eax,DWORD PTR [rcx]
     9ae:	55                   	push   rbp
     9af:	17                   	(bad)
     9b0:	01 13                	add    DWORD PTR [rbx],edx
     9b2:	00 00                	add    BYTE PTR [rax],al
     9b4:	21 48 00             	and    DWORD PTR [rax+0x0],ecx
     9b7:	7d 01                	jge    9ba <__abi_tag+0x63e>
     9b9:	83 01 18             	add    DWORD PTR [rcx],0x18
     9bc:	00 00                	add    BYTE PTR [rax],al
     9be:	22 11                	and    dl,BYTE PTR [rcx]
     9c0:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b1cd4 <_end+0x30abcbc>
     9c6:	1f                   	(bad)
     9c7:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     9c9:	11 01                	adc    DWORD PTR [rcx],eax
     9cb:	12 07                	adc    al,BYTE PTR [rdi]
     9cd:	10 17                	adc    BYTE PTR [rdi],dl
     9cf:	00 00                	add    BYTE PTR [rax],al
     9d1:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
     9d4:	0b 0b                	or     ecx,DWORD PTR [rbx]
     9d6:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     9d9:	08 00                	or     BYTE PTR [rax],al
     9db:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
     9de:	00 0b                	add    BYTE PTR [rbx],cl
     9e0:	0b 00                	or     eax,DWORD PTR [rax]
     9e2:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0309fe <_end+0xe02a9e6>
     9e8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     9ea:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491529 <_end+0x1348b511>
     9f0:	00 00                	add    BYTE PTR [rax],al
     9f2:	26 15 01 49 13 01    	es adc eax,0x1134901
     9f8:	13 00                	adc    eax,DWORD PTR [rax]
     9fa:	00 27                	add    BYTE PTR [rdi],ah
     9fc:	26 00 00             	es add BYTE PTR [rax],al
     9ff:	00 28                	add    BYTE PTR [rax],ch
     a01:	39 01                	cmp    DWORD PTR [rcx],eax
     a03:	03 08                	add    ecx,DWORD PTR [rax]
     a05:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a07:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011546 <_end+0x1300b52e>
     a0d:	00 00                	add    BYTE PTR [rax],al
     a0f:	29 08                	sub    DWORD PTR [rax],ecx
     a11:	00 3a                	add    BYTE PTR [rdx],bh
     a13:	0b 3b                	or     edi,DWORD PTR [rbx]
     a15:	05 39 0b 18 13       	add    eax,0x13180b39
     a1a:	00 00                	add    BYTE PTR [rax],al
     a1c:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b000a22 <_end+0x2affaa0a>
     a22:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     a25:	19 03                	sbb    DWORD PTR [rbx],eax
     a27:	0e                   	(bad)
     a28:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a2a:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1569 <_end+0xe6db551>
     a30:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     a34:	01 13                	add    DWORD PTR [rbx],edx
     a36:	00 00                	add    BYTE PTR [rax],al
     a38:	2c 2e                	sub    al,0x2e
     a3a:	01 3f                	add    DWORD PTR [rdi],edi
     a3c:	19 03                	sbb    DWORD PTR [rbx],eax
     a3e:	08 3a                	or     BYTE PTR [rdx],bh
     a40:	0b 3b                	or     edi,DWORD PTR [rbx]
     a42:	05 39 0b 49 13       	add    eax,0x13490b39
     a47:	3c 19                	cmp    al,0x19
     a49:	01 13                	add    DWORD PTR [rbx],edx
     a4b:	00 00                	add    BYTE PTR [rax],al
     a4d:	2d 2e 01 3f 19       	sub    eax,0x193f012e
     a52:	03 0e                	add    ecx,DWORD PTR [rsi]
     a54:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a56:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871595 <_end+0x186b57d>
     a5c:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     a5f:	01 13                	add    DWORD PTR [rbx],edx
     a61:	00 00                	add    BYTE PTR [rax],al
     a63:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
     a67:	19 03                	sbb    DWORD PTR [rbx],eax
     a69:	0e                   	(bad)
     a6a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a6c:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134915ab <_end+0x1348b593>
     a72:	3c 19                	cmp    al,0x19
     a74:	00 00                	add    BYTE PTR [rax],al
     a76:	2f                   	(bad)
     a77:	39 01                	cmp    DWORD PTR [rcx],eax
     a79:	03 0e                	add    ecx,DWORD PTR [rsi]
     a7b:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a7d:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130115bc <_end+0x1300b5a4>
     a83:	00 00                	add    BYTE PTR [rax],al
     a85:	30 13                	xor    BYTE PTR [rbx],dl
     a87:	01 03                	add    DWORD PTR [rbx],eax
     a89:	0e                   	(bad)
     a8a:	0b 0b                	or     ecx,DWORD PTR [rbx]
     a8c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     a8e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     a90:	39 0b                	cmp    DWORD PTR [rbx],ecx
     a92:	01 13                	add    DWORD PTR [rbx],edx
     a94:	00 00                	add    BYTE PTR [rax],al
     a96:	31 0b                	xor    DWORD PTR [rbx],ecx
     a98:	01 00                	add    DWORD PTR [rax],eax
     a9a:	00 32                	add    BYTE PTR [rdx],dh
     a9c:	34 00                	xor    al,0x0
     a9e:	03 0e                	add    ecx,DWORD PTR [rsi]
     aa0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     aa2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     aa4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     aa6:	49 13 1c 05 00 00 33 	adc    rbx,QWORD PTR [rax*1+0x34330000]
     aad:	34 
     aae:	00 03                	add    BYTE PTR [rbx],al
     ab0:	08 3a                	or     BYTE PTR [rdx],bh
     ab2:	0b 3b                	or     edi,DWORD PTR [rbx]
     ab4:	0b 39                	or     edi,DWORD PTR [rcx]
     ab6:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     ab9:	1c 07                	sbb    al,0x7
     abb:	00 00                	add    BYTE PTR [rax],al
     abd:	34 34                	xor    al,0x34
     abf:	00 31                	add    BYTE PTR [rcx],dh
     ac1:	13 00                	adc    eax,DWORD PTR [rax]
     ac3:	00 35 0b 01 31 13    	add    BYTE PTR [rip+0x1331010b],dh        # 13310bd4 <_end+0x1330abbc>
     ac9:	55                   	push   rbp
     aca:	17                   	(bad)
     acb:	01 13                	add    DWORD PTR [rbx],edx
     acd:	00 00                	add    BYTE PTR [rax],al
     acf:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     ad3:	19 03                	sbb    DWORD PTR [rbx],eax
     ad5:	0e                   	(bad)
     ad6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ad8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1617 <_end+0xe6db5ff>
     ade:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ae1:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     ae4:	01 13                	add    DWORD PTR [rbx],edx
     ae6:	00 00                	add    BYTE PTR [rax],al
     ae8:	37                   	(bad)
     ae9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     aec:	19 03                	sbb    DWORD PTR [rbx],eax
     aee:	0e                   	(bad)
     aef:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     af1:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1630 <_end+0xe6db618>
     af7:	49 13 20             	adc    rsp,QWORD PTR [r8]
     afa:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
     afd:	00 00                	add    BYTE PTR [rax],al
     aff:	00 01                	add    BYTE PTR [rcx],al
     b01:	05 00 49 13 00       	add    eax,0x134900
     b06:	00 02                	add    BYTE PTR [rdx],al
     b08:	08 00                	or     BYTE PTR [rax],al
     b0a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b0c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b0e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b10:	18 13                	sbb    BYTE PTR [rbx],dl
     b12:	00 00                	add    BYTE PTR [rax],al
     b14:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
     b17:	02 18                	add    bl,BYTE PTR [rax]
     b19:	7e 18                	jle    b33 <__abi_tag+0x7b7>
     b1b:	00 00                	add    BYTE PTR [rax],al
     b1d:	04 05                	add    al,0x5
     b1f:	00 31                	add    BYTE PTR [rcx],dh
     b21:	13 02                	adc    eax,DWORD PTR [rdx]
     b23:	17                   	(bad)
     b24:	b7 42                	mov    bh,0x42
     b26:	17                   	(bad)
     b27:	00 00                	add    BYTE PTR [rax],al
     b29:	05 48 01 7d 01       	add    eax,0x17d0148
     b2e:	7f 13                	jg     b43 <__abi_tag+0x7c7>
     b30:	00 00                	add    BYTE PTR [rax],al
     b32:	06                   	(bad)
     b33:	24 00                	and    al,0x0
     b35:	0b 0b                	or     ecx,DWORD PTR [rbx]
     b37:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     b3a:	0e                   	(bad)
     b3b:	00 00                	add    BYTE PTR [rax],al
     b3d:	07                   	(bad)
     b3e:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
     b43:	0b 3b                	or     edi,DWORD PTR [rbx]
     b45:	0b 39                	or     edi,DWORD PTR [rcx]
     b47:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     b4a:	38 0b                	cmp    BYTE PTR [rbx],cl
     b4c:	00 00                	add    BYTE PTR [rax],al
     b4e:	08 2e                	or     BYTE PTR [rsi],ch
     b50:	01 3f                	add    DWORD PTR [rdi],edi
     b52:	19 03                	sbb    DWORD PTR [rbx],eax
     b54:	0e                   	(bad)
     b55:	3a 21                	cmp    ah,BYTE PTR [rcx]
     b57:	05 3b 05 39 0b       	add    eax,0xb39053b
     b5c:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     b60:	01 13                	add    DWORD PTR [rbx],edx
     b62:	00 00                	add    BYTE PTR [rax],al
     b64:	09 1d 01 31 13 52    	or     DWORD PTR [rip+0x52133101],ebx        # 52133c6b <_end+0x5212dc53>
     b6a:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     b70:	12 07                	adc    al,BYTE PTR [rdi]
     b72:	58                   	pop    rax
     b73:	21 01                	and    DWORD PTR [rcx],eax
     b75:	59                   	pop    rcx
     b76:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     b79:	01 13                	add    DWORD PTR [rbx],edx
     b7b:	00 00                	add    BYTE PTR [rax],al
     b7d:	0a 0f                	or     cl,BYTE PTR [rdi]
     b7f:	00 0b                	add    BYTE PTR [rbx],cl
     b81:	21 08                	and    DWORD PTR [rax],ecx
     b83:	49 13 00             	adc    rax,QWORD PTR [r8]
     b86:	00 0b                	add    BYTE PTR [rbx],cl
     b88:	16                   	(bad)
     b89:	00 03                	add    BYTE PTR [rbx],al
     b8b:	0e                   	(bad)
     b8c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b8e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     b90:	39 0b                	cmp    DWORD PTR [rbx],ecx
     b92:	49 13 00             	adc    rax,QWORD PTR [r8]
     b95:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
     b98:	01 3f                	add    DWORD PTR [rdi],edi
     b9a:	19 03                	sbb    DWORD PTR [rbx],eax
     b9c:	0e                   	(bad)
     b9d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     b9f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ba1:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ba3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ba7:	01 13                	add    DWORD PTR [rbx],edx
     ba9:	00 00                	add    BYTE PTR [rax],al
     bab:	0d 05 00 03 0e       	or     eax,0xe030005
     bb0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     bb2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bb4:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bb6:	49 13 00             	adc    rax,QWORD PTR [r8]
     bb9:	00 0e                	add    BYTE PTR [rsi],cl
     bbb:	26 00 49 13          	es add BYTE PTR [rcx+0x13],cl
     bbf:	00 00                	add    BYTE PTR [rax],al
     bc1:	0f 34                	sysenter
     bc3:	00 03                	add    BYTE PTR [rbx],al
     bc5:	08 3a                	or     BYTE PTR [rdx],bh
     bc7:	21 01                	and    DWORD PTR [rcx],eax
     bc9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bcb:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bcd:	49 13 02             	adc    rax,QWORD PTR [r10]
     bd0:	17                   	(bad)
     bd1:	b7 42                	mov    bh,0x42
     bd3:	17                   	(bad)
     bd4:	00 00                	add    BYTE PTR [rax],al
     bd6:	10 2e                	adc    BYTE PTR [rsi],ch
     bd8:	01 3f                	add    DWORD PTR [rdi],edi
     bda:	19 03                	sbb    DWORD PTR [rbx],eax
     bdc:	08 3a                	or     BYTE PTR [rdx],bh
     bde:	21 08                	and    DWORD PTR [rax],ecx
     be0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     be2:	39 21                	cmp    DWORD PTR [rcx],esp
     be4:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     be7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     beb:	01 13                	add    DWORD PTR [rbx],edx
     bed:	00 00                	add    BYTE PTR [rax],al
     bef:	11 05 00 03 0e 3a    	adc    DWORD PTR [rip+0x3a0e0300],eax        # 3a0e0ef5 <_end+0x3a0daedd>
     bf5:	21 01                	and    DWORD PTR [rcx],eax
     bf7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     bf9:	39 0b                	cmp    DWORD PTR [rbx],ecx
     bfb:	49 13 02             	adc    rax,QWORD PTR [r10]
     bfe:	17                   	(bad)
     bff:	b7 42                	mov    bh,0x42
     c01:	17                   	(bad)
     c02:	00 00                	add    BYTE PTR [rax],al
     c04:	12 1d 01 31 13 52    	adc    bl,BYTE PTR [rip+0x52133101]        # 52133d0b <_end+0x5212dcf3>
     c0a:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
     c10:	58                   	pop    rax
     c11:	21 01                	and    DWORD PTR [rcx],eax
     c13:	59                   	pop    rcx
     c14:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     c17:	01 13                	add    DWORD PTR [rbx],edx
     c19:	00 00                	add    BYTE PTR [rax],al
     c1b:	13 0b                	adc    ecx,DWORD PTR [rbx]
     c1d:	01 11                	add    DWORD PTR [rcx],edx
     c1f:	01 12                	add    DWORD PTR [rdx],edx
     c21:	07                   	(bad)
     c22:	01 13                	add    DWORD PTR [rbx],edx
     c24:	00 00                	add    BYTE PTR [rax],al
     c26:	14 1d                	adc    al,0x1d
     c28:	01 31                	add    DWORD PTR [rcx],esi
     c2a:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
     c2d:	b8 42 0b 55 17       	mov    eax,0x17550b42
     c32:	58                   	pop    rax
     c33:	21 01                	and    DWORD PTR [rcx],eax
     c35:	59                   	pop    rcx
     c36:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     c39:	00 00                	add    BYTE PTR [rax],al
     c3b:	15 01 01 49 13       	adc    eax,0x13490101
     c40:	01 13                	add    DWORD PTR [rbx],edx
     c42:	00 00                	add    BYTE PTR [rax],al
     c44:	16                   	(bad)
     c45:	21 00                	and    DWORD PTR [rax],eax
     c47:	49 13 2f             	adc    rbp,QWORD PTR [r15]
     c4a:	0b 00                	or     eax,DWORD PTR [rax]
     c4c:	00 17                	add    BYTE PTR [rdi],dl
     c4e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     c51:	19 03                	sbb    DWORD PTR [rbx],eax
     c53:	0e                   	(bad)
     c54:	3a 21                	cmp    ah,BYTE PTR [rcx]
     c56:	05 3b 0b 39 0b       	add    eax,0xb390b3b
     c5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c5c:	0e                   	(bad)
     c5d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     c61:	01 13                	add    DWORD PTR [rbx],edx
     c63:	00 00                	add    BYTE PTR [rax],al
     c65:	18 34 00             	sbb    BYTE PTR [rax+rax*1],dh
     c68:	03 0e                	add    ecx,DWORD PTR [rsi]
     c6a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     c6c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     c6e:	39 21                	cmp    DWORD PTR [rcx],esp
     c70:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     c73:	1c 0b                	sbb    al,0xb
     c75:	00 00                	add    BYTE PTR [rax],al
     c77:	19 34 00             	sbb    DWORD PTR [rax+rax*1],esi
     c7a:	03 0e                	add    ecx,DWORD PTR [rsi]
     c7c:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     c80:	6c                   	ins    BYTE PTR es:[rdi],dx
     c81:	19 02                	sbb    DWORD PTR [rdx],eax
     c83:	18 00                	sbb    BYTE PTR [rax],al
     c85:	00 1a                	add    BYTE PTR [rdx],bl
     c87:	34 00                	xor    al,0x0
     c89:	31 13                	xor    DWORD PTR [rbx],edx
     c8b:	02 17                	add    dl,BYTE PTR [rdi]
     c8d:	b7 42                	mov    bh,0x42
     c8f:	17                   	(bad)
     c90:	00 00                	add    BYTE PTR [rax],al
     c92:	1b 13                	sbb    edx,DWORD PTR [rbx]
     c94:	01 0b                	add    DWORD PTR [rbx],ecx
     c96:	0b 3a                	or     edi,DWORD PTR [rdx]
     c98:	21 05 3b 0b 39 21    	and    DWORD PTR [rip+0x21390b3b],eax        # 213917d9 <_end+0x2138b7c1>
     c9e:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     ca1:	01 13                	add    DWORD PTR [rbx],edx
     ca3:	00 00                	add    BYTE PTR [rax],al
     ca5:	1c 0d                	sbb    al,0xd
     ca7:	00 03                	add    BYTE PTR [rbx],al
     ca9:	08 3a                	or     BYTE PTR [rdx],bh
     cab:	21 05 3b 0b 39 0b    	and    DWORD PTR [rip+0xb390b3b],eax        # b3917ec <_end+0xb38b7d4>
     cb1:	49 13 38             	adc    rdi,QWORD PTR [r8]
     cb4:	0b 00                	or     eax,DWORD PTR [rax]
     cb6:	00 1d 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],bl        # 193f0dea <_end+0x193eadd2>
     cbc:	03 0e                	add    ecx,DWORD PTR [rsi]
     cbe:	3a 21                	cmp    ah,BYTE PTR [rcx]
     cc0:	05 3b 05 39 21       	add    eax,0x2139053b
     cc5:	0d 3c 19 01 13       	or     eax,0x1301193c
     cca:	00 00                	add    BYTE PTR [rax],al
     ccc:	1e                   	(bad)
     ccd:	13 01                	adc    eax,DWORD PTR [rcx]
     ccf:	03 0e                	add    ecx,DWORD PTR [rsi]
     cd1:	0b 0b                	or     ecx,DWORD PTR [rbx]
     cd3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     cd5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     cd7:	39 21                	cmp    DWORD PTR [rcx],esp
     cd9:	10 01                	adc    BYTE PTR [rcx],al
     cdb:	13 00                	adc    eax,DWORD PTR [rax]
     cdd:	00 1f                	add    BYTE PTR [rdi],bl
     cdf:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     ce2:	19 03                	sbb    DWORD PTR [rbx],eax
     ce4:	0e                   	(bad)
     ce5:	3a 21                	cmp    ah,BYTE PTR [rcx]
     ce7:	01 3b                	add    DWORD PTR [rbx],edi
     ce9:	0b 39                	or     edi,DWORD PTR [rcx]
     ceb:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
     cee:	49 13 11             	adc    rdx,QWORD PTR [r9]
     cf1:	01 12                	add    DWORD PTR [rdx],edx
     cf3:	07                   	(bad)
     cf4:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     cf8:	01 13                	add    DWORD PTR [rbx],edx
     cfa:	00 00                	add    BYTE PTR [rax],al
     cfc:	20 34 00             	and    BYTE PTR [rax+rax*1],dh
     cff:	03 0e                	add    ecx,DWORD PTR [rsi]
     d01:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d03:	01 3b                	add    DWORD PTR [rbx],edi
     d05:	0b 39                	or     edi,DWORD PTR [rcx]
     d07:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d0a:	02 17                	add    dl,BYTE PTR [rdi]
     d0c:	b7 42                	mov    bh,0x42
     d0e:	17                   	(bad)
     d0f:	00 00                	add    BYTE PTR [rax],al
     d11:	21 2e                	and    DWORD PTR [rsi],ebp
     d13:	00 3f                	add    BYTE PTR [rdi],bh
     d15:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     d18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d19:	0e                   	(bad)
     d1a:	03 0e                	add    ecx,DWORD PTR [rsi]
     d1c:	00 00                	add    BYTE PTR [rax],al
     d1e:	22 2e                	and    ch,BYTE PTR [rsi]
     d20:	01 3f                	add    DWORD PTR [rdi],edi
     d22:	19 03                	sbb    DWORD PTR [rbx],eax
     d24:	08 3a                	or     BYTE PTR [rdx],bh
     d26:	21 07                	and    DWORD PTR [rdi],eax
     d28:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     d2a:	39 21                	cmp    DWORD PTR [rcx],esp
     d2c:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     d2f:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     d33:	00 00                	add    BYTE PTR [rax],al
     d35:	23 18                	and    ebx,DWORD PTR [rax]
     d37:	00 00                	add    BYTE PTR [rax],al
     d39:	00 24 2e             	add    BYTE PTR [rsi+rbp*1],ah
     d3c:	01 3f                	add    DWORD PTR [rdi],edi
     d3e:	19 03                	sbb    DWORD PTR [rbx],eax
     d40:	0e                   	(bad)
     d41:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d43:	01 3b                	add    DWORD PTR [rbx],edi
     d45:	0b 39                	or     edi,DWORD PTR [rcx]
     d47:	21 06                	and    DWORD PTR [rsi],eax
     d49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d4a:	0e                   	(bad)
     d4b:	11 01                	adc    DWORD PTR [rcx],eax
     d4d:	12 07                	adc    al,BYTE PTR [rdi]
     d4f:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     d53:	01 13                	add    DWORD PTR [rbx],edx
     d55:	00 00                	add    BYTE PTR [rax],al
     d57:	25 1d 01 31 13       	and    eax,0x1331011d
     d5c:	52                   	push   rdx
     d5d:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
     d63:	12 07                	adc    al,BYTE PTR [rdi]
     d65:	58                   	pop    rax
     d66:	21 01                	and    DWORD PTR [rcx],eax
     d68:	59                   	pop    rcx
     d69:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
     d6c:	00 00                	add    BYTE PTR [rax],al
     d6e:	26 34 00             	es xor al,0x0
     d71:	03 08                	add    ecx,DWORD PTR [rax]
     d73:	3a 21                	cmp    ah,BYTE PTR [rcx]
     d75:	01 3b                	add    DWORD PTR [rbx],edi
     d77:	0b 39                	or     edi,DWORD PTR [rcx]
     d79:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     d7c:	00 00                	add    BYTE PTR [rax],al
     d7e:	27                   	(bad)
     d7f:	0b 01                	or     eax,DWORD PTR [rcx]
     d81:	55                   	push   rbp
     d82:	17                   	(bad)
     d83:	00 00                	add    BYTE PTR [rax],al
     d85:	28 0b                	sub    BYTE PTR [rbx],cl
     d87:	01 55 17             	add    DWORD PTR [rbp+0x17],edx
     d8a:	01 13                	add    DWORD PTR [rbx],edx
     d8c:	00 00                	add    BYTE PTR [rax],al
     d8e:	29 05 00 31 13 00    	sub    DWORD PTR [rip+0x133100],eax        # 133e94 <_end+0x12de7c>
     d94:	00 2a                	add    BYTE PTR [rdx],ch
     d96:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     d99:	19 03                	sbb    DWORD PTR [rbx],eax
     d9b:	0e                   	(bad)
     d9c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     d9e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     da0:	39 21                	cmp    DWORD PTR [rcx],esp
     da2:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
     da5:	20 21                	and    BYTE PTR [rcx],ah
     da7:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
     daa:	01 13                	add    DWORD PTR [rbx],edx
     dac:	00 00                	add    BYTE PTR [rax],al
     dae:	2b 36                	sub    esi,DWORD PTR [rsi]
     db0:	00 02                	add    BYTE PTR [rdx],al
     db2:	18 00                	sbb    BYTE PTR [rax],al
     db4:	00 2c 11             	add    BYTE PTR [rcx+rdx*1],ch
     db7:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b20cb <_end+0x30ac0b3>
     dbd:	1f                   	(bad)
     dbe:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
     dc0:	11 01                	adc    DWORD PTR [rcx],eax
     dc2:	12 07                	adc    al,BYTE PTR [rdi]
     dc4:	10 17                	adc    BYTE PTR [rdi],dl
     dc6:	00 00                	add    BYTE PTR [rax],al
     dc8:	2d 24 00 0b 0b       	sub    eax,0xb0b0024
     dcd:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     dd0:	08 00                	or     BYTE PTR [rax],al
     dd2:	00 2e                	add    BYTE PTR [rsi],ch
     dd4:	37                   	(bad)
     dd5:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
     dd8:	00 00                	add    BYTE PTR [rax],al
     dda:	2f                   	(bad)
     ddb:	0f 00 0b             	str    WORD PTR [rbx]
     dde:	0b 00                	or     eax,DWORD PTR [rax]
     de0:	00 30                	add    BYTE PTR [rax],dh
     de2:	16                   	(bad)
     de3:	00 03                	add    BYTE PTR [rbx],al
     de5:	0e                   	(bad)
     de6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     de8:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491927 <_end+0x1348b90f>
     dee:	00 00                	add    BYTE PTR [rax],al
     df0:	31 15 01 49 13 01    	xor    DWORD PTR [rip+0x1134901],edx        # 11356f7 <_end+0x112f6df>
     df6:	13 00                	adc    eax,DWORD PTR [rax]
     df8:	00 32                	add    BYTE PTR [rdx],dh
     dfa:	26 00 00             	es add BYTE PTR [rax],al
     dfd:	00 33                	add    BYTE PTR [rbx],dh
     dff:	39 01                	cmp    DWORD PTR [rcx],eax
     e01:	03 08                	add    ecx,DWORD PTR [rax]
     e03:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e05:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011944 <_end+0x1300b92c>
     e0b:	00 00                	add    BYTE PTR [rax],al
     e0d:	34 08                	xor    al,0x8
     e0f:	00 3a                	add    BYTE PTR [rdx],bh
     e11:	0b 3b                	or     edi,DWORD PTR [rbx]
     e13:	05 39 0b 18 13       	add    eax,0x13180b39
     e18:	00 00                	add    BYTE PTR [rax],al
     e1a:	35 15 00 00 00       	xor    eax,0x15
     e1f:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
     e23:	19 03                	sbb    DWORD PTR [rbx],eax
     e25:	0e                   	(bad)
     e26:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e28:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1967 <_end+0xe6db94f>
     e2e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     e32:	01 13                	add    DWORD PTR [rbx],edx
     e34:	00 00                	add    BYTE PTR [rax],al
     e36:	37                   	(bad)
     e37:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     e3a:	19 03                	sbb    DWORD PTR [rbx],eax
     e3c:	08 3a                	or     BYTE PTR [rdx],bh
     e3e:	0b 3b                	or     edi,DWORD PTR [rbx]
     e40:	05 39 0b 49 13       	add    eax,0x13490b39
     e45:	3c 19                	cmp    al,0x19
     e47:	01 13                	add    DWORD PTR [rbx],edx
     e49:	00 00                	add    BYTE PTR [rax],al
     e4b:	38 2e                	cmp    BYTE PTR [rsi],ch
     e4d:	01 3f                	add    DWORD PTR [rdi],edi
     e4f:	19 03                	sbb    DWORD PTR [rbx],eax
     e51:	0e                   	(bad)
     e52:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e54:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871993 <_end+0x186b97b>
     e5a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e5d:	01 13                	add    DWORD PTR [rbx],edx
     e5f:	00 00                	add    BYTE PTR [rax],al
     e61:	39 2e                	cmp    DWORD PTR [rsi],ebp
     e63:	00 3f                	add    BYTE PTR [rdi],bh
     e65:	19 03                	sbb    DWORD PTR [rbx],eax
     e67:	0e                   	(bad)
     e68:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e6a:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134919a9 <_end+0x1348b991>
     e70:	3c 19                	cmp    al,0x19
     e72:	00 00                	add    BYTE PTR [rax],al
     e74:	3a 39                	cmp    bh,BYTE PTR [rcx]
     e76:	01 03                	add    DWORD PTR [rbx],eax
     e78:	0e                   	(bad)
     e79:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e7b:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130119ba <_end+0x1300b9a2>
     e81:	00 00                	add    BYTE PTR [rax],al
     e83:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     e85:	01 3f                	add    DWORD PTR [rdi],edi
     e87:	19 03                	sbb    DWORD PTR [rbx],eax
     e89:	0e                   	(bad)
     e8a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     e8c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     e8e:	39 0b                	cmp    DWORD PTR [rbx],ecx
     e90:	87 01                	xchg   DWORD PTR [rcx],eax
     e92:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
     e95:	01 13                	add    DWORD PTR [rbx],edx
     e97:	00 00                	add    BYTE PTR [rax],al
     e99:	3c 48                	cmp    al,0x48
     e9b:	01 7d 01             	add    DWORD PTR [rbp+0x1],edi
     e9e:	82                   	(bad)
     e9f:	01 19                	add    DWORD PTR [rcx],ebx
     ea1:	7f 13                	jg     eb6 <__abi_tag+0xb3a>
     ea3:	00 00                	add    BYTE PTR [rax],al
     ea5:	3d 48 00 7d 01       	cmp    eax,0x17d0048
     eaa:	7f 13                	jg     ebf <__abi_tag+0xb43>
     eac:	00 00                	add    BYTE PTR [rax],al
     eae:	3e 2e 01 03          	ds cs add DWORD PTR [rbx],eax
     eb2:	0e                   	(bad)
     eb3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     eb5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     eb7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     eb9:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ebc:	0b 01                	or     eax,DWORD PTR [rcx]
     ebe:	13 00                	adc    eax,DWORD PTR [rax]
     ec0:	00 3f                	add    BYTE PTR [rdi],bh
     ec2:	2e 01 03             	cs add DWORD PTR [rbx],eax
     ec5:	0e                   	(bad)
     ec6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ec8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     eca:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ecc:	20 0b                	and    BYTE PTR [rbx],cl
     ece:	01 13                	add    DWORD PTR [rbx],edx
     ed0:	00 00                	add    BYTE PTR [rax],al
     ed2:	40 0b 01             	rex or eax,DWORD PTR [rcx]
     ed5:	00 00                	add    BYTE PTR [rax],al
     ed7:	41                   	rex.B
     ed8:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     edb:	19 03                	sbb    DWORD PTR [rbx],eax
     edd:	0e                   	(bad)
     ede:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     ee0:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     ee2:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ee4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ee5:	0e                   	(bad)
     ee6:	49 13 20             	adc    rsp,QWORD PTR [r8]
     ee9:	0b 01                	or     eax,DWORD PTR [rcx]
     eeb:	13 00                	adc    eax,DWORD PTR [rax]
     eed:	00 42 34             	add    BYTE PTR [rdx+0x34],al
     ef0:	00 03                	add    BYTE PTR [rbx],al
     ef2:	0e                   	(bad)
     ef3:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
     ef7:	6c                   	ins    BYTE PTR es:[rdi],dx
     ef8:	19 00                	sbb    DWORD PTR [rax],eax
     efa:	00 43 34             	add    BYTE PTR [rbx+0x34],al
     efd:	00 03                	add    BYTE PTR [rbx],al
     eff:	0e                   	(bad)
     f00:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f02:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f04:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f06:	49 13 02             	adc    rax,QWORD PTR [r10]
     f09:	18 00                	sbb    BYTE PTR [rax],al
     f0b:	00 44 0b 01          	add    BYTE PTR [rbx+rcx*1+0x1],al
     f0f:	31 13                	xor    DWORD PTR [rbx],edx
     f11:	11 01                	adc    DWORD PTR [rcx],eax
     f13:	12 07                	adc    al,BYTE PTR [rdi]
     f15:	01 13                	add    DWORD PTR [rbx],edx
     f17:	00 00                	add    BYTE PTR [rax],al
     f19:	45                   	rex.RB
     f1a:	2e 01 31             	cs add DWORD PTR [rcx],esi
     f1d:	13 11                	adc    edx,DWORD PTR [rcx]
     f1f:	01 12                	add    DWORD PTR [rdx],edx
     f21:	07                   	(bad)
     f22:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f26:	01 13                	add    DWORD PTR [rbx],edx
     f28:	00 00                	add    BYTE PTR [rax],al
     f2a:	46 34 00             	rex.RX xor al,0x0
     f2d:	31 13                	xor    DWORD PTR [rbx],edx
     f2f:	00 00                	add    BYTE PTR [rax],al
     f31:	47                   	rex.RXB
     f32:	2e 01 31             	cs add DWORD PTR [rcx],esi
     f35:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
     f38:	11 01                	adc    DWORD PTR [rcx],eax
     f3a:	12 07                	adc    al,BYTE PTR [rdi]
     f3c:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
     f40:	01 13                	add    DWORD PTR [rbx],edx
     f42:	00 00                	add    BYTE PTR [rax],al
     f44:	48                   	rex.W
     f45:	49 00 80 01 13 7e 18 	rex.WB add BYTE PTR [r8+0x187e1301],al
     f4c:	00 00                	add    BYTE PTR [rax],al
     f4e:	00 01                	add    BYTE PTR [rcx],al
     f50:	05 00 49 13 00       	add    eax,0x134900
     f55:	00 02                	add    BYTE PTR [rdx],al
     f57:	08 00                	or     BYTE PTR [rax],al
     f59:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f5b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f5d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f5f:	18 13                	sbb    BYTE PTR [rbx],dl
     f61:	00 00                	add    BYTE PTR [rax],al
     f63:	03 0d 00 03 0e 3a    	add    ecx,DWORD PTR [rip+0x3a0e0300]        # 3a0e1269 <_end+0x3a0db251>
     f69:	0b 3b                	or     edi,DWORD PTR [rbx]
     f6b:	0b 39                	or     edi,DWORD PTR [rcx]
     f6d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
     f70:	38 0b                	cmp    BYTE PTR [rbx],cl
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	04 16                	add    al,0x16
     f76:	00 03                	add    BYTE PTR [rbx],al
     f78:	0e                   	(bad)
     f79:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     f7b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     f7d:	39 0b                	cmp    DWORD PTR [rbx],ecx
     f7f:	49 13 00             	adc    rax,QWORD PTR [r8]
     f82:	00 05 49 00 02 18    	add    BYTE PTR [rip+0x18020049],al        # 18020fd1 <_end+0x1801afb9>
     f88:	7e 18                	jle    fa2 <__abi_tag+0xc26>
     f8a:	00 00                	add    BYTE PTR [rax],al
     f8c:	06                   	(bad)
     f8d:	24 00                	and    al,0x0
     f8f:	0b 0b                	or     ecx,DWORD PTR [rbx]
     f91:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
     f94:	0e                   	(bad)
     f95:	00 00                	add    BYTE PTR [rax],al
     f97:	07                   	(bad)
     f98:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     f9b:	19 03                	sbb    DWORD PTR [rbx],eax
     f9d:	0e                   	(bad)
     f9e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fa0:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491adf <_end+0x1348bac7>
     fa6:	3c 19                	cmp    al,0x19
     fa8:	01 13                	add    DWORD PTR [rbx],edx
     faa:	00 00                	add    BYTE PTR [rax],al
     fac:	08 2e                	or     BYTE PTR [rsi],ch
     fae:	01 3f                	add    DWORD PTR [rdi],edi
     fb0:	19 03                	sbb    DWORD PTR [rbx],eax
     fb2:	0e                   	(bad)
     fb3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fb5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fb7:	39 0b                	cmp    DWORD PTR [rbx],ecx
     fb9:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fbd:	01 13                	add    DWORD PTR [rbx],edx
     fbf:	00 00                	add    BYTE PTR [rax],al
     fc1:	09 0f                	or     DWORD PTR [rdi],ecx
     fc3:	00 0b                	add    BYTE PTR [rbx],cl
     fc5:	21 08                	and    DWORD PTR [rax],ecx
     fc7:	49 13 00             	adc    rax,QWORD PTR [r8]
     fca:	00 0a                	add    BYTE PTR [rdx],cl
     fcc:	2e 01 3f             	cs add DWORD PTR [rdi],edi
     fcf:	19 03                	sbb    DWORD PTR [rbx],eax
     fd1:	08 3a                	or     BYTE PTR [rdx],bh
     fd3:	21 0b                	and    DWORD PTR [rbx],ecx
     fd5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fd7:	39 21                	cmp    DWORD PTR [rcx],esp
     fd9:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
     fdc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     fe0:	01 13                	add    DWORD PTR [rbx],edx
     fe2:	00 00                	add    BYTE PTR [rax],al
     fe4:	0b 2e                	or     ebp,DWORD PTR [rsi]
     fe6:	01 3f                	add    DWORD PTR [rdi],edi
     fe8:	19 03                	sbb    DWORD PTR [rbx],eax
     fea:	0e                   	(bad)
     feb:	3a 0b                	cmp    cl,BYTE PTR [rbx]
     fed:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
     fef:	39 0b                	cmp    DWORD PTR [rbx],ecx
     ff1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ff2:	0e                   	(bad)
     ff3:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
     ff7:	01 13                	add    DWORD PTR [rbx],edx
     ff9:	00 00                	add    BYTE PTR [rax],al
     ffb:	0c 05                	or     al,0x5
     ffd:	00 31                	add    BYTE PTR [rcx],dh
     fff:	13 02                	adc    eax,DWORD PTR [rdx]
    1001:	17                   	(bad)
    1002:	b7 42                	mov    bh,0x42
    1004:	17                   	(bad)
    1005:	00 00                	add    BYTE PTR [rax],al
    1007:	0d 34 00 03 0e       	or     eax,0xe030034
    100c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    100e:	01 3b                	add    DWORD PTR [rbx],edi
    1010:	0b 39                	or     edi,DWORD PTR [rcx]
    1012:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1015:	02 17                	add    dl,BYTE PTR [rdi]
    1017:	b7 42                	mov    bh,0x42
    1019:	17                   	(bad)
    101a:	00 00                	add    BYTE PTR [rax],al
    101c:	0e                   	(bad)
    101d:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    1022:	0b 3b                	or     edi,DWORD PTR [rbx]
    1024:	0b 39                	or     edi,DWORD PTR [rcx]
    1026:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1029:	00 00                	add    BYTE PTR [rax],al
    102b:	0f 26                	(bad)
    102d:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1030:	00 00                	add    BYTE PTR [rax],al
    1032:	10 05 00 03 0e 3a    	adc    BYTE PTR [rip+0x3a0e0300],al        # 3a0e1338 <_end+0x3a0db320>
    1038:	21 01                	and    DWORD PTR [rcx],eax
    103a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    103c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    103e:	49 13 02             	adc    rax,QWORD PTR [r10]
    1041:	17                   	(bad)
    1042:	b7 42                	mov    bh,0x42
    1044:	17                   	(bad)
    1045:	00 00                	add    BYTE PTR [rax],al
    1047:	11 48 01             	adc    DWORD PTR [rax+0x1],ecx
    104a:	7d 01                	jge    104d <rand@plt+0xd>
    104c:	7f 13                	jg     1061 <__strncpy_chk@plt+0x1>
    104e:	00 00                	add    BYTE PTR [rax],al
    1050:	12 48 01             	adc    cl,BYTE PTR [rax+0x1]
    1053:	7d 01                	jge    1056 <strchr@plt+0x6>
    1055:	7f 13                	jg     106a <__strncpy_chk@plt+0xa>
    1057:	01 13                	add    DWORD PTR [rbx],edx
    1059:	00 00                	add    BYTE PTR [rax],al
    105b:	13 13                	adc    edx,DWORD PTR [rbx]
    105d:	01 0b                	add    DWORD PTR [rbx],ecx
    105f:	0b 3a                	or     edi,DWORD PTR [rdx]
    1061:	21 06                	and    DWORD PTR [rsi],eax
    1063:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1065:	39 21                	cmp    DWORD PTR [rcx],esp
    1067:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    106a:	01 13                	add    DWORD PTR [rbx],edx
    106c:	00 00                	add    BYTE PTR [rax],al
    106e:	14 0d                	adc    al,0xd
    1070:	00 03                	add    BYTE PTR [rbx],al
    1072:	08 3a                	or     BYTE PTR [rdx],bh
    1074:	21 06                	and    DWORD PTR [rsi],eax
    1076:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1078:	39 0b                	cmp    DWORD PTR [rbx],ecx
    107a:	49 13 38             	adc    rdi,QWORD PTR [r8]
    107d:	0b 00                	or     eax,DWORD PTR [rax]
    107f:	00 15 01 01 49 13    	add    BYTE PTR [rip+0x13490101],dl        # 13491186 <_end+0x1348b16e>
    1085:	01 13                	add    DWORD PTR [rbx],edx
    1087:	00 00                	add    BYTE PTR [rax],al
    1089:	16                   	(bad)
    108a:	21 00                	and    DWORD PTR [rax],eax
    108c:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    108f:	0b 00                	or     eax,DWORD PTR [rax]
    1091:	00 17                	add    BYTE PTR [rdi],dl
    1093:	13 01                	adc    eax,DWORD PTR [rcx]
    1095:	03 0e                	add    ecx,DWORD PTR [rsi]
    1097:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1099:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    109b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    109d:	39 21                	cmp    DWORD PTR [rcx],esp
    109f:	08 01                	or     BYTE PTR [rcx],al
    10a1:	13 00                	adc    eax,DWORD PTR [rax]
    10a3:	00 18                	add    BYTE PTR [rax],bl
    10a5:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    10a8:	19 03                	sbb    DWORD PTR [rbx],eax
    10aa:	08 3a                	or     BYTE PTR [rdx],bh
    10ac:	21 0a                	and    DWORD PTR [rdx],ecx
    10ae:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    10b0:	39 21                	cmp    DWORD PTR [rcx],esp
    10b2:	03 6e 0e             	add    ebp,DWORD PTR [rsi+0xe]
    10b5:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    10b9:	00 00                	add    BYTE PTR [rax],al
    10bb:	19 2e                	sbb    DWORD PTR [rsi],ebp
    10bd:	01 3f                	add    DWORD PTR [rdi],edi
    10bf:	19 03                	sbb    DWORD PTR [rbx],eax
    10c1:	0e                   	(bad)
    10c2:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10c4:	06                   	(bad)
    10c5:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3204 <_end+0x3c0cd1ec>
    10cb:	19 01                	sbb    DWORD PTR [rcx],eax
    10cd:	13 00                	adc    eax,DWORD PTR [rax]
    10cf:	00 1a                	add    BYTE PTR [rdx],bl
    10d1:	18 00                	sbb    BYTE PTR [rax],al
    10d3:	00 00                	add    BYTE PTR [rax],al
    10d5:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
    10d7:	00 3f                	add    BYTE PTR [rdi],bh
    10d9:	19 03                	sbb    DWORD PTR [rbx],eax
    10db:	0e                   	(bad)
    10dc:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10de:	02 3b                	add    bh,BYTE PTR [rbx]
    10e0:	0b 39                	or     edi,DWORD PTR [rcx]
    10e2:	21 01                	and    DWORD PTR [rcx],eax
    10e4:	3c 19                	cmp    al,0x19
    10e6:	00 00                	add    BYTE PTR [rax],al
    10e8:	1c 2e                	sbb    al,0x2e
    10ea:	01 3f                	add    DWORD PTR [rdi],edi
    10ec:	19 03                	sbb    DWORD PTR [rbx],eax
    10ee:	0e                   	(bad)
    10ef:	3a 21                	cmp    ah,BYTE PTR [rcx]
    10f1:	01 3b                	add    DWORD PTR [rbx],edi
    10f3:	0b 39                	or     edi,DWORD PTR [rcx]
    10f5:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    10f8:	49 13 11             	adc    rdx,QWORD PTR [r9]
    10fb:	01 12                	add    DWORD PTR [rdx],edx
    10fd:	07                   	(bad)
    10fe:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    1102:	01 13                	add    DWORD PTR [rbx],edx
    1104:	00 00                	add    BYTE PTR [rax],al
    1106:	1d 34 00 03 0e       	sbb    eax,0xe030034
    110b:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    110f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1110:	19 02                	sbb    DWORD PTR [rdx],eax
    1112:	18 00                	sbb    BYTE PTR [rax],al
    1114:	00 1e                	add    BYTE PTR [rsi],bl
    1116:	1d 01 31 13 52       	sbb    eax,0x52133101
    111b:	01 b8 42 0b 55 17    	add    DWORD PTR [rax+0x17550b42],edi
    1121:	58                   	pop    rax
    1122:	21 01                	and    DWORD PTR [rcx],eax
    1124:	59                   	pop    rcx
    1125:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1128:	01 13                	add    DWORD PTR [rbx],edx
    112a:	00 00                	add    BYTE PTR [rax],al
    112c:	1f                   	(bad)
    112d:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1130:	19 03                	sbb    DWORD PTR [rbx],eax
    1132:	0e                   	(bad)
    1133:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1135:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1137:	39 21                	cmp    DWORD PTR [rcx],esp
    1139:	01 49 13             	add    DWORD PTR [rcx+0x13],ecx
    113c:	20 21                	and    BYTE PTR [rcx],ah
    113e:	03 34 19             	add    esi,DWORD PTR [rcx+rbx*1]
    1141:	01 13                	add    DWORD PTR [rbx],edx
    1143:	00 00                	add    BYTE PTR [rax],al
    1145:	20 05 00 03 08 3a    	and    BYTE PTR [rip+0x3a080300],al        # 3a08144b <_end+0x3a07b433>
    114b:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    114e:	0b 39                	or     edi,DWORD PTR [rcx]
    1150:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1153:	00 00                	add    BYTE PTR [rax],al
    1155:	21 2e                	and    DWORD PTR [rsi],ebp
    1157:	00 3f                	add    BYTE PTR [rdi],bh
    1159:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    115c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    115d:	0e                   	(bad)
    115e:	03 0e                	add    ecx,DWORD PTR [rsi]
    1160:	00 00                	add    BYTE PTR [rax],al
    1162:	22 11                	and    dl,BYTE PTR [rcx]
    1164:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b2478 <_end+0x30ac460>
    116a:	1f                   	(bad)
    116b:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    116d:	11 01                	adc    DWORD PTR [rcx],eax
    116f:	12 07                	adc    al,BYTE PTR [rdi]
    1171:	10 17                	adc    BYTE PTR [rdi],dl
    1173:	00 00                	add    BYTE PTR [rax],al
    1175:	23 24 00             	and    esp,DWORD PTR [rax+rax*1]
    1178:	0b 0b                	or     ecx,DWORD PTR [rbx]
    117a:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    117d:	08 00                	or     BYTE PTR [rax],al
    117f:	00 24 0f             	add    BYTE PTR [rdi+rcx*1],ah
    1182:	00 0b                	add    BYTE PTR [rbx],cl
    1184:	0b 00                	or     eax,DWORD PTR [rax]
    1186:	00 25 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],ah        # e0311a2 <_end+0xe02b18a>
    118c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    118e:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491ccd <_end+0x1348bcb5>
    1194:	00 00                	add    BYTE PTR [rax],al
    1196:	26 15 01 49 13 01    	es adc eax,0x1134901
    119c:	13 00                	adc    eax,DWORD PTR [rax]
    119e:	00 27                	add    BYTE PTR [rdi],ah
    11a0:	26 00 00             	es add BYTE PTR [rax],al
    11a3:	00 28                	add    BYTE PTR [rax],ch
    11a5:	39 01                	cmp    DWORD PTR [rcx],eax
    11a7:	03 08                	add    ecx,DWORD PTR [rax]
    11a9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11ab:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011cea <_end+0x1300bcd2>
    11b1:	00 00                	add    BYTE PTR [rax],al
    11b3:	29 08                	sub    DWORD PTR [rax],ecx
    11b5:	00 3a                	add    BYTE PTR [rdx],bh
    11b7:	0b 3b                	or     edi,DWORD PTR [rbx]
    11b9:	05 39 0b 18 13       	add    eax,0x13180b39
    11be:	00 00                	add    BYTE PTR [rax],al
    11c0:	2a 15 00 00 00 2b    	sub    dl,BYTE PTR [rip+0x2b000000]        # 2b0011c6 <_end+0x2affb1ae>
    11c6:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    11c9:	19 03                	sbb    DWORD PTR [rbx],eax
    11cb:	0e                   	(bad)
    11cc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11ce:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1d0d <_end+0xe6dbcf5>
    11d4:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    11d8:	01 13                	add    DWORD PTR [rbx],edx
    11da:	00 00                	add    BYTE PTR [rax],al
    11dc:	2c 2e                	sub    al,0x2e
    11de:	01 3f                	add    DWORD PTR [rdi],edi
    11e0:	19 03                	sbb    DWORD PTR [rbx],eax
    11e2:	08 3a                	or     BYTE PTR [rdx],bh
    11e4:	0b 3b                	or     edi,DWORD PTR [rbx]
    11e6:	05 39 0b 49 13       	add    eax,0x13490b39
    11eb:	3c 19                	cmp    al,0x19
    11ed:	01 13                	add    DWORD PTR [rbx],edx
    11ef:	00 00                	add    BYTE PTR [rax],al
    11f1:	2d 2e 01 3f 19       	sub    eax,0x193f012e
    11f6:	03 0e                	add    ecx,DWORD PTR [rsi]
    11f8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    11fa:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871d39 <_end+0x186bd21>
    1200:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1203:	01 13                	add    DWORD PTR [rbx],edx
    1205:	00 00                	add    BYTE PTR [rax],al
    1207:	2e 2e 00 3f          	cs cs add BYTE PTR [rdi],bh
    120b:	19 03                	sbb    DWORD PTR [rbx],eax
    120d:	0e                   	(bad)
    120e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1210:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491d4f <_end+0x1348bd37>
    1216:	3c 19                	cmp    al,0x19
    1218:	00 00                	add    BYTE PTR [rax],al
    121a:	2f                   	(bad)
    121b:	39 01                	cmp    DWORD PTR [rcx],eax
    121d:	03 0e                	add    ecx,DWORD PTR [rsi]
    121f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1221:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011d60 <_end+0x1300bd48>
    1227:	00 00                	add    BYTE PTR [rax],al
    1229:	30 2e                	xor    BYTE PTR [rsi],ch
    122b:	01 3f                	add    DWORD PTR [rdi],edi
    122d:	19 03                	sbb    DWORD PTR [rbx],eax
    122f:	0e                   	(bad)
    1230:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1232:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1234:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1236:	87 01                	xchg   DWORD PTR [rcx],eax
    1238:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    123b:	01 13                	add    DWORD PTR [rbx],edx
    123d:	00 00                	add    BYTE PTR [rax],al
    123f:	31 34 00             	xor    DWORD PTR [rax+rax*1],esi
    1242:	03 0e                	add    ecx,DWORD PTR [rsi]
    1244:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1246:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1248:	39 0b                	cmp    DWORD PTR [rbx],ecx
    124a:	49 13 02             	adc    rax,QWORD PTR [r10]
    124d:	18 00                	sbb    BYTE PTR [rax],al
    124f:	00 32                	add    BYTE PTR [rdx],dh
    1251:	34 00                	xor    al,0x0
    1253:	03 0e                	add    ecx,DWORD PTR [rsi]
    1255:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1257:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1259:	39 0b                	cmp    DWORD PTR [rbx],ecx
    125b:	49 13 00             	adc    rax,QWORD PTR [r8]
    125e:	00 33                	add    BYTE PTR [rbx],dh
    1260:	1d 01 31 13 52       	sbb    eax,0x52133101
    1265:	01 b8 42 0b 11 01    	add    DWORD PTR [rax+0x1110b42],edi
    126b:	12 07                	adc    al,BYTE PTR [rdi]
    126d:	58                   	pop    rax
    126e:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1271:	57                   	push   rdi
    1272:	0b 01                	or     eax,DWORD PTR [rcx]
    1274:	13 00                	adc    eax,DWORD PTR [rax]
    1276:	00 34 48             	add    BYTE PTR [rax+rcx*2],dh
    1279:	00 7d 01             	add    BYTE PTR [rbp+0x1],bh
    127c:	83 01 18             	add    DWORD PTR [rcx],0x18
    127f:	00 00                	add    BYTE PTR [rax],al
    1281:	35 48 00 7d 01       	xor    eax,0x17d0048
    1286:	7f 13                	jg     129b <register_tm_clones+0x2b>
    1288:	00 00                	add    BYTE PTR [rax],al
    128a:	36 2e 01 3f          	ss cs add DWORD PTR [rdi],edi
    128e:	19 03                	sbb    DWORD PTR [rbx],eax
    1290:	0e                   	(bad)
    1291:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1293:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1295:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1297:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1298:	0e                   	(bad)
    1299:	49 13 20             	adc    rsp,QWORD PTR [r8]
    129c:	0b 01                	or     eax,DWORD PTR [rcx]
    129e:	13 00                	adc    eax,DWORD PTR [rax]
    12a0:	00 00                	add    BYTE PTR [rax],al
    12a2:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 135ba8 <_end+0x12fb90>
    12a8:	00 02                	add    BYTE PTR [rdx],al
    12aa:	08 00                	or     BYTE PTR [rax],al
    12ac:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12ae:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    12b0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    12b2:	18 13                	sbb    BYTE PTR [rbx],dl
    12b4:	00 00                	add    BYTE PTR [rax],al
    12b6:	03 49 00             	add    ecx,DWORD PTR [rcx+0x0]
    12b9:	02 18                	add    bl,BYTE PTR [rax]
    12bb:	7e 18                	jle    12d5 <__do_global_dtors_aux+0x25>
    12bd:	00 00                	add    BYTE PTR [rax],al
    12bf:	04 2e                	add    al,0x2e
    12c1:	01 3f                	add    DWORD PTR [rdi],edi
    12c3:	19 03                	sbb    DWORD PTR [rbx],eax
    12c5:	0e                   	(bad)
    12c6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    12c8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1e07 <_end+0xe6dbdef>
    12ce:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    12d2:	01 13                	add    DWORD PTR [rbx],edx
    12d4:	00 00                	add    BYTE PTR [rax],al
    12d6:	05 05 00 31 13       	add    eax,0x13310005
    12db:	02 17                	add    dl,BYTE PTR [rdi]
    12dd:	b7 42                	mov    bh,0x42
    12df:	17                   	(bad)
    12e0:	00 00                	add    BYTE PTR [rax],al
    12e2:	06                   	(bad)
    12e3:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    12e8:	0b 3b                	or     edi,DWORD PTR [rbx]
    12ea:	0b 39                	or     edi,DWORD PTR [rcx]
    12ec:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    12ef:	38 0b                	cmp    BYTE PTR [rbx],cl
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	07                   	(bad)
    12f4:	48 01 7d 01          	add    QWORD PTR [rbp+0x1],rdi
    12f8:	7f 13                	jg     130d <_Z16buildStringArrayPcj+0xd>
    12fa:	00 00                	add    BYTE PTR [rax],al
    12fc:	08 16                	or     BYTE PTR [rsi],dl
    12fe:	00 03                	add    BYTE PTR [rbx],al
    1300:	0e                   	(bad)
    1301:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1303:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1305:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1307:	49 13 00             	adc    rax,QWORD PTR [r8]
    130a:	00 09                	add    BYTE PTR [rcx],cl
    130c:	1d 01 31 13 52       	sbb    eax,0x52133101
    1311:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1317:	12 07                	adc    al,BYTE PTR [rdi]
    1319:	58                   	pop    rax
    131a:	21 01                	and    DWORD PTR [rcx],eax
    131c:	59                   	pop    rcx
    131d:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1320:	01 13                	add    DWORD PTR [rbx],edx
    1322:	00 00                	add    BYTE PTR [rax],al
    1324:	0a 48 01             	or     cl,BYTE PTR [rax+0x1]
    1327:	7d 01                	jge    132a <_Z16buildStringArrayPcj+0x2a>
    1329:	7f 13                	jg     133e <_Z16buildStringArrayPcj+0x3e>
    132b:	01 13                	add    DWORD PTR [rbx],edx
    132d:	00 00                	add    BYTE PTR [rax],al
    132f:	0b 05 00 31 13 00    	or     eax,DWORD PTR [rip+0x133100]        # 134435 <_end+0x12e41d>
    1335:	00 0c 2e             	add    BYTE PTR [rsi+rbp*1],cl
    1338:	01 3f                	add    DWORD PTR [rdi],edi
    133a:	19 03                	sbb    DWORD PTR [rbx],eax
    133c:	0e                   	(bad)
    133d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    133f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1341:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1343:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1347:	01 13                	add    DWORD PTR [rbx],edx
    1349:	00 00                	add    BYTE PTR [rax],al
    134b:	0d 0f 00 0b 21       	or     eax,0x210b000f
    1350:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    1353:	00 00                	add    BYTE PTR [rax],al
    1355:	0e                   	(bad)
    1356:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1359:	19 03                	sbb    DWORD PTR [rbx],eax
    135b:	0e                   	(bad)
    135c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    135e:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13491e9d <_end+0x1348be85>
    1364:	3c 19                	cmp    al,0x19
    1366:	01 13                	add    DWORD PTR [rbx],edx
    1368:	00 00                	add    BYTE PTR [rax],al
    136a:	0f 2e 01             	ucomiss xmm0,DWORD PTR [rcx]
    136d:	3f                   	(bad)
    136e:	19 03                	sbb    DWORD PTR [rbx],eax
    1370:	0e                   	(bad)
    1371:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1373:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1375:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1377:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1378:	0e                   	(bad)
    1379:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    137d:	01 13                	add    DWORD PTR [rbx],edx
    137f:	00 00                	add    BYTE PTR [rax],al
    1381:	10 05 00 49 13 34    	adc    BYTE PTR [rip+0x34134900],al        # 34135c87 <_end+0x3412fc6f>
    1387:	19 00                	sbb    DWORD PTR [rax],eax
    1389:	00 11                	add    BYTE PTR [rcx],dl
    138b:	2f                   	(bad)
    138c:	00 03                	add    BYTE PTR [rbx],al
    138e:	0e                   	(bad)
    138f:	49 13 00             	adc    rax,QWORD PTR [r8]
    1392:	00 12                	add    BYTE PTR [rdx],dl
    1394:	24 00                	and    al,0x0
    1396:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1398:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
    139b:	0e                   	(bad)
    139c:	00 00                	add    BYTE PTR [rax],al
    139e:	13 26                	adc    esp,DWORD PTR [rsi]
    13a0:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    13a3:	00 00                	add    BYTE PTR [rax],al
    13a5:	14 2e                	adc    al,0x2e
    13a7:	01 3f                	add    DWORD PTR [rdi],edi
    13a9:	19 03                	sbb    DWORD PTR [rbx],eax
    13ab:	0e                   	(bad)
    13ac:	3a 21                	cmp    ah,BYTE PTR [rcx]
    13ae:	04 3b                	add    al,0x3b
    13b0:	05 39 21 02 6e       	add    eax,0x6e022139
    13b5:	0e                   	(bad)
    13b6:	49 13 32             	adc    rsi,QWORD PTR [r10]
    13b9:	21 01                	and    DWORD PTR [rcx],eax
    13bb:	3c 19                	cmp    al,0x19
    13bd:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    13c0:	13 00                	adc    eax,DWORD PTR [rax]
    13c2:	00 15 34 00 31 13    	add    BYTE PTR [rip+0x13310034],dl        # 133113fc <_end+0x1330b3e4>
    13c8:	02 17                	add    dl,BYTE PTR [rdi]
    13ca:	b7 42                	mov    bh,0x42
    13cc:	17                   	(bad)
    13cd:	00 00                	add    BYTE PTR [rax],al
    13cf:	16                   	(bad)
    13d0:	0b 01                	or     eax,DWORD PTR [rcx]
    13d2:	11 01                	adc    DWORD PTR [rcx],eax
    13d4:	12 07                	adc    al,BYTE PTR [rdi]
    13d6:	01 13                	add    DWORD PTR [rbx],edx
    13d8:	00 00                	add    BYTE PTR [rax],al
    13da:	17                   	(bad)
    13db:	34 00                	xor    al,0x0
    13dd:	03 0e                	add    ecx,DWORD PTR [rsi]
    13df:	3a 21                	cmp    ah,BYTE PTR [rcx]
    13e1:	01 3b                	add    DWORD PTR [rbx],edi
    13e3:	0b 39                	or     edi,DWORD PTR [rcx]
    13e5:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    13e8:	00 00                	add    BYTE PTR [rax],al
    13ea:	18 08                	sbb    BYTE PTR [rax],cl
    13ec:	00 3a                	add    BYTE PTR [rdx],bh
    13ee:	0b 3b                	or     edi,DWORD PTR [rbx]
    13f0:	05 39 0b 18 13       	add    eax,0x13180b39
    13f5:	00 00                	add    BYTE PTR [rax],al
    13f7:	19 1d 01 31 13 52    	sbb    DWORD PTR [rip+0x52133101],ebx        # 521344fe <_end+0x5212e4e6>
    13fd:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1403:	12 07                	adc    al,BYTE PTR [rdi]
    1405:	58                   	pop    rax
    1406:	0b 59 0b             	or     ebx,DWORD PTR [rcx+0xb]
    1409:	57                   	push   rdi
    140a:	0b 00                	or     eax,DWORD PTR [rax]
    140c:	00 1a                	add    BYTE PTR [rdx],bl
    140e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1411:	19 03                	sbb    DWORD PTR [rbx],eax
    1413:	08 3a                	or     BYTE PTR [rdx],bh
    1415:	0b 3b                	or     edi,DWORD PTR [rbx]
    1417:	0b 39                	or     edi,DWORD PTR [rcx]
    1419:	21 03                	and    DWORD PTR [rbx],eax
    141b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    141c:	0e                   	(bad)
    141d:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1421:	01 13                	add    DWORD PTR [rbx],edx
    1423:	00 00                	add    BYTE PTR [rax],al
    1425:	1b 13                	sbb    edx,DWORD PTR [rbx]
    1427:	01 03                	add    DWORD PTR [rbx],eax
    1429:	0e                   	(bad)
    142a:	0b 0b                	or     ecx,DWORD PTR [rbx]
    142c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    142e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1430:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1432:	01 13                	add    DWORD PTR [rbx],edx
    1434:	00 00                	add    BYTE PTR [rax],al
    1436:	1c 1d                	sbb    al,0x1d
    1438:	01 31                	add    DWORD PTR [rcx],esi
    143a:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    143d:	b8 42 05 55 17       	mov    eax,0x17550542
    1442:	58                   	pop    rax
    1443:	21 01                	and    DWORD PTR [rcx],eax
    1445:	59                   	pop    rcx
    1446:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    1449:	01 13                	add    DWORD PTR [rbx],edx
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	1d 2e 01 3f 19       	sbb    eax,0x193f012e
    1452:	03 08                	add    ecx,DWORD PTR [rax]
    1454:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1456:	03 3b                	add    edi,DWORD PTR [rbx]
    1458:	05 39 21 03 6e       	add    eax,0x6e032139
    145d:	0e                   	(bad)
    145e:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1462:	01 13                	add    DWORD PTR [rbx],edx
    1464:	00 00                	add    BYTE PTR [rax],al
    1466:	1e                   	(bad)
    1467:	05 00 03 0e 3a       	add    eax,0x3a0e0300
    146c:	0b 3b                	or     edi,DWORD PTR [rbx]
    146e:	0b 39                	or     edi,DWORD PTR [rcx]
    1470:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1473:	00 00                	add    BYTE PTR [rax],al
    1475:	1f                   	(bad)
    1476:	34 00                	xor    al,0x0
    1478:	03 0e                	add    ecx,DWORD PTR [rsi]
    147a:	3a 21                	cmp    ah,BYTE PTR [rcx]
    147c:	01 3b                	add    DWORD PTR [rbx],edi
    147e:	0b 39                	or     edi,DWORD PTR [rcx]
    1480:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1483:	02 17                	add    dl,BYTE PTR [rdi]
    1485:	b7 42                	mov    bh,0x42
    1487:	17                   	(bad)
    1488:	00 00                	add    BYTE PTR [rax],al
    148a:	20 48 00             	and    BYTE PTR [rax+0x0],cl
    148d:	7d 01                	jge    1490 <_Z11hashMapCtorPFj8string_tEj+0x60>
    148f:	7f 13                	jg     14a4 <_Z11hashMapCtorPFj8string_tEj+0x74>
    1491:	00 00                	add    BYTE PTR [rax],al
    1493:	21 18                	and    DWORD PTR [rax],ebx
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 22                	add    BYTE PTR [rdx],ah
    1499:	10 00                	adc    BYTE PTR [rax],al
    149b:	0b 21                	or     esp,DWORD PTR [rcx]
    149d:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    14a0:	00 00                	add    BYTE PTR [rax],al
    14a2:	23 05 00 03 0e 3a    	and    eax,DWORD PTR [rip+0x3a0e0300]        # 3a0e17a8 <_end+0x3a0db790>
    14a8:	21 01                	and    DWORD PTR [rcx],eax
    14aa:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    14ac:	39 0b                	cmp    DWORD PTR [rbx],ecx
    14ae:	49 13 02             	adc    rax,QWORD PTR [r10]
    14b1:	17                   	(bad)
    14b2:	b7 42                	mov    bh,0x42
    14b4:	17                   	(bad)
    14b5:	00 00                	add    BYTE PTR [rax],al
    14b7:	24 36                	and    al,0x36
    14b9:	00 02                	add    BYTE PTR [rdx],al
    14bb:	18 00                	sbb    BYTE PTR [rax],al
    14bd:	00 25 01 01 49 13    	add    BYTE PTR [rip+0x13490101],ah        # 134915c4 <_end+0x1348b5ac>
    14c3:	01 13                	add    DWORD PTR [rbx],edx
    14c5:	00 00                	add    BYTE PTR [rax],al
    14c7:	26 21 00             	es and DWORD PTR [rax],eax
    14ca:	49 13 2f             	adc    rbp,QWORD PTR [r15]
    14cd:	0b 00                	or     eax,DWORD PTR [rax]
    14cf:	00 27                	add    BYTE PTR [rdi],ah
    14d1:	48 00 7d 01          	rex.W add BYTE PTR [rbp+0x1],dil
    14d5:	83 01 18             	add    DWORD PTR [rcx],0x18
    14d8:	00 00                	add    BYTE PTR [rax],al
    14da:	28 2e                	sub    BYTE PTR [rsi],ch
    14dc:	01 3f                	add    DWORD PTR [rdi],edi
    14de:	19 03                	sbb    DWORD PTR [rbx],eax
    14e0:	0e                   	(bad)
    14e1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    14e3:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d3622 <_end+0x3c0cd60a>
    14e9:	19 01                	sbb    DWORD PTR [rcx],eax
    14eb:	13 00                	adc    eax,DWORD PTR [rax]
    14ed:	00 29                	add    BYTE PTR [rcx],ch
    14ef:	34 00                	xor    al,0x0
    14f1:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    14f4:	00 2a                	add    BYTE PTR [rdx],ch
    14f6:	34 00                	xor    al,0x0
    14f8:	03 08                	add    ecx,DWORD PTR [rax]
    14fa:	3a 21                	cmp    ah,BYTE PTR [rcx]
    14fc:	01 3b                	add    DWORD PTR [rbx],edi
    14fe:	0b 39                	or     edi,DWORD PTR [rcx]
    1500:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1503:	02 17                	add    dl,BYTE PTR [rdi]
    1505:	b7 42                	mov    bh,0x42
    1507:	17                   	(bad)
    1508:	00 00                	add    BYTE PTR [rax],al
    150a:	2b 2e                	sub    ebp,DWORD PTR [rsi]
    150c:	01 3f                	add    DWORD PTR [rdi],edi
    150e:	19 03                	sbb    DWORD PTR [rbx],eax
    1510:	0e                   	(bad)
    1511:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1513:	04 3b                	add    al,0x3b
    1515:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    151a:	32 21                	xor    ah,BYTE PTR [rcx]
    151c:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    151f:	8b 01                	mov    eax,DWORD PTR [rcx]
    1521:	21 01                	and    DWORD PTR [rcx],eax
    1523:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1526:	13 00                	adc    eax,DWORD PTR [rax]
    1528:	00 2c 2e             	add    BYTE PTR [rsi+rbp*1],ch
    152b:	00 3f                	add    BYTE PTR [rdi],bh
    152d:	19 03                	sbb    DWORD PTR [rbx],eax
    152f:	08 3a                	or     BYTE PTR [rdx],bh
    1531:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1534:	05 39 21 02 6e       	add    eax,0x6e022139
    1539:	0e                   	(bad)
    153a:	49 13 32             	adc    rsi,QWORD PTR [r10]
    153d:	21 01                	and    DWORD PTR [rcx],eax
    153f:	3c 19                	cmp    al,0x19
    1541:	00 00                	add    BYTE PTR [rax],al
    1543:	2d 05 00 03 0e       	sub    eax,0xe030005
    1548:	3a 21                	cmp    ah,BYTE PTR [rcx]
    154a:	04 3b                	add    al,0x3b
    154c:	05 39 0b 49 13       	add    eax,0x13490b39
    1551:	00 00                	add    BYTE PTR [rax],al
    1553:	2e 0b 01             	cs or  eax,DWORD PTR [rcx]
    1556:	55                   	push   rbp
    1557:	17                   	(bad)
    1558:	00 00                	add    BYTE PTR [rax],al
    155a:	2f                   	(bad)
    155b:	30 00                	xor    BYTE PTR [rax],al
    155d:	03 0e                	add    ecx,DWORD PTR [rsi]
    155f:	49 13 1c 0b          	adc    rbx,QWORD PTR [r11+rcx*1]
    1563:	00 00                	add    BYTE PTR [rax],al
    1565:	30 2e                	xor    BYTE PTR [rsi],ch
    1567:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    156a:	64 13 20             	adc    esp,DWORD PTR fs:[rax]
    156d:	0b 01                	or     eax,DWORD PTR [rcx]
    156f:	13 00                	adc    eax,DWORD PTR [rax]
    1571:	00 31                	add    BYTE PTR [rcx],dh
    1573:	05 00 03 0e 49       	add    eax,0x490e0300
    1578:	13 34 19             	adc    esi,DWORD PTR [rcx+rbx*1]
    157b:	00 00                	add    BYTE PTR [rax],al
    157d:	32 2e                	xor    ch,BYTE PTR [rsi]
    157f:	01 47 13             	add    DWORD PTR [rdi+0x13],eax
    1582:	20 21                	and    BYTE PTR [rcx],ah
    1584:	03 01                	add    eax,DWORD PTR [rcx]
    1586:	13 00                	adc    eax,DWORD PTR [rax]
    1588:	00 33                	add    BYTE PTR [rbx],dh
    158a:	39 01                	cmp    DWORD PTR [rcx],eax
    158c:	03 0e                	add    ecx,DWORD PTR [rsi]
    158e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1590:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1592:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1594:	01 13                	add    DWORD PTR [rbx],edx
    1596:	00 00                	add    BYTE PTR [rax],al
    1598:	34 34                	xor    al,0x34
    159a:	00 03                	add    BYTE PTR [rbx],al
    159c:	0e                   	(bad)
    159d:	3a 21                	cmp    ah,BYTE PTR [rcx]
    159f:	10 3b                	adc    BYTE PTR [rbx],bh
    15a1:	21 b2 02 39 21 14    	and    DWORD PTR [rdx+0x14213902],esi
    15a7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15ab:	1c 21                	sbb    al,0x21
    15ad:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    15b1:	00 35 13 01 0b 0b    	add    BYTE PTR [rip+0xb0b0113],dh        # b0b16ca <_end+0xb0ab6b2>
    15b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15b9:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15bb:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15be:	0e                   	(bad)
    15bf:	01 13                	add    DWORD PTR [rbx],edx
    15c1:	00 00                	add    BYTE PTR [rax],al
    15c3:	36 0d 00 03 0e 3a    	ss or  eax,0x3a0e0300
    15c9:	21 1c 3b             	and    DWORD PTR [rbx+rdi*1],ebx
    15cc:	21 00                	and    DWORD PTR [rax],eax
    15ce:	49 13 38             	adc    rdi,QWORD PTR [r8]
    15d1:	0b 00                	or     eax,DWORD PTR [rax]
    15d3:	00 37                	add    BYTE PTR [rdi],dh
    15d5:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    15d8:	19 03                	sbb    DWORD PTR [rbx],eax
    15da:	0e                   	(bad)
    15db:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15dd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15df:	39 0b                	cmp    DWORD PTR [rbx],ecx
    15e1:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    15e5:	00 00                	add    BYTE PTR [rax],al
    15e7:	38 34 00             	cmp    BYTE PTR [rax+rax*1],dh
    15ea:	03 0e                	add    ecx,DWORD PTR [rsi]
    15ec:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    15ee:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    15f0:	39 21                	cmp    DWORD PTR [rcx],esp
    15f2:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    15f5:	1c 0b                	sbb    al,0xb
    15f7:	00 00                	add    BYTE PTR [rax],al
    15f9:	39 1d 01 31 13 52    	cmp    DWORD PTR [rip+0x52133101],ebx        # 52134700 <_end+0x5212e6e8>
    15ff:	01 b8 42 05 55 17    	add    DWORD PTR [rax+0x17550542],edi
    1605:	58                   	pop    rax
    1606:	21 01                	and    DWORD PTR [rcx],eax
    1608:	59                   	pop    rcx
    1609:	0b 57 0b             	or     edx,DWORD PTR [rdi+0xb]
    160c:	00 00                	add    BYTE PTR [rax],al
    160e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1610:	01 31                	add    DWORD PTR [rcx],esi
    1612:	13 55 17             	adc    edx,DWORD PTR [rbp+0x17]
    1615:	01 13                	add    DWORD PTR [rbx],edx
    1617:	00 00                	add    BYTE PTR [rax],al
    1619:	3b 34 00             	cmp    esi,DWORD PTR [rax+rax*1]
    161c:	31 13                	xor    DWORD PTR [rbx],edx
    161e:	00 00                	add    BYTE PTR [rax],al
    1620:	3c 2e                	cmp    al,0x2e
    1622:	00 3f                	add    BYTE PTR [rdi],bh
    1624:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1627:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1628:	0e                   	(bad)
    1629:	03 0e                	add    ecx,DWORD PTR [rsi]
    162b:	00 00                	add    BYTE PTR [rax],al
    162d:	3d 39 00 03 0e       	cmp    eax,0xe030039
    1632:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1634:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1636:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1638:	00 00                	add    BYTE PTR [rax],al
    163a:	3e 34 00             	ds xor al,0x0
    163d:	03 0e                	add    ecx,DWORD PTR [rsi]
    163f:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1641:	0e                   	(bad)
    1642:	3b 21                	cmp    esp,DWORD PTR [rcx]
    1644:	30 39                	xor    BYTE PTR [rcx],bh
    1646:	21 14 49             	and    DWORD PTR [rcx+rcx*2],edx
    1649:	13 3c 19             	adc    edi,DWORD PTR [rcx+rbx*1]
    164c:	1c 21                	sbb    al,0x21
    164e:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
    1652:	00 3f                	add    BYTE PTR [rdi],bh
    1654:	02 01                	add    al,BYTE PTR [rcx]
    1656:	03 0e                	add    ecx,DWORD PTR [rsi]
    1658:	0b 21                	or     esp,DWORD PTR [rcx]
    165a:	08 3a                	or     BYTE PTR [rdx],bh
    165c:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    165f:	05 39 21 0d 01       	add    eax,0x10d2139
    1664:	13 00                	adc    eax,DWORD PTR [rax]
    1666:	00 40 0d             	add    BYTE PTR [rax+0xd],al
    1669:	00 03                	add    BYTE PTR [rbx],al
    166b:	08 3a                	or     BYTE PTR [rdx],bh
    166d:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    1670:	05 39 0b 49 13       	add    eax,0x13490b39
    1675:	38 21                	cmp    BYTE PTR [rcx],ah
    1677:	00 00                	add    BYTE PTR [rax],al
    1679:	00 41 2e             	add    BYTE PTR [rcx+0x2e],al
    167c:	01 3f                	add    DWORD PTR [rdi],edi
    167e:	19 03                	sbb    DWORD PTR [rbx],eax
    1680:	0e                   	(bad)
    1681:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1683:	04 3b                	add    al,0x3b
    1685:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    168a:	32 21                	xor    ah,BYTE PTR [rcx]
    168c:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
    168f:	63 19                	movsxd ebx,DWORD PTR [rcx]
    1691:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1694:	13 00                	adc    eax,DWORD PTR [rax]
    1696:	00 42 16             	add    BYTE PTR [rdx+0x16],al
    1699:	00 03                	add    BYTE PTR [rbx],al
    169b:	0e                   	(bad)
    169c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    169e:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134921dd <_end+0x1348c1c5>
    16a4:	00 00                	add    BYTE PTR [rax],al
    16a6:	43 2f                	rex.XB (bad)
    16a8:	00 03                	add    BYTE PTR [rbx],al
    16aa:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
    16ad:	00 00                	add    BYTE PTR [rax],al
    16af:	44 13 01             	adc    r8d,DWORD PTR [rcx]
    16b2:	03 0e                	add    ecx,DWORD PTR [rsi]
    16b4:	0b 21                	or     esp,DWORD PTR [rcx]
    16b6:	01 3a                	add    DWORD PTR [rdx],edi
    16b8:	21 10                	and    DWORD PTR [rax],edx
    16ba:	3b 21                	cmp    esp,DWORD PTR [rcx]
    16bc:	8a 02                	mov    al,BYTE PTR [rdx]
    16be:	39 21                	cmp    DWORD PTR [rcx],esp
    16c0:	0c 01                	or     al,0x1
    16c2:	13 00                	adc    eax,DWORD PTR [rax]
    16c4:	00 45 34             	add    BYTE PTR [rbp+0x34],al
    16c7:	00 03                	add    BYTE PTR [rbx],al
    16c9:	08 3a                	or     BYTE PTR [rdx],bh
    16cb:	21 10                	and    DWORD PTR [rax],edx
    16cd:	3b 21                	cmp    esp,DWORD PTR [rcx]
    16cf:	91                   	xchg   ecx,eax
    16d0:	02 39                	add    bh,BYTE PTR [rcx]
    16d2:	21 21                	and    DWORD PTR [rcx],esp
    16d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16d5:	0e                   	(bad)
    16d6:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    16d9:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    16dc:	1c 21                	sbb    al,0x21
    16de:	01 6c 19 20          	add    DWORD PTR [rcx+rbx*1+0x20],ebp
    16e2:	21 01                	and    DWORD PTR [rcx],eax
    16e4:	00 00                	add    BYTE PTR [rax],al
    16e6:	46 0d 00 03 08 3a    	rex.RX or eax,0x3a080300
    16ec:	21 16                	and    DWORD PTR [rsi],edx
    16ee:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    16f0:	39 0b                	cmp    DWORD PTR [rbx],ecx
    16f2:	49 13 38             	adc    rdi,QWORD PTR [r8]
    16f5:	0b 00                	or     eax,DWORD PTR [rax]
    16f7:	00 47 13             	add    BYTE PTR [rdi+0x13],al
    16fa:	00 03                	add    BYTE PTR [rbx],al
    16fc:	0e                   	(bad)
    16fd:	3c 19                	cmp    al,0x19
    16ff:	00 00                	add    BYTE PTR [rax],al
    1701:	48 0b 01             	or     rax,QWORD PTR [rcx]
    1704:	00 00                	add    BYTE PTR [rax],al
    1706:	49 34 00             	rex.WB xor al,0x0
    1709:	03 08                	add    ecx,DWORD PTR [rax]
    170b:	3a 21                	cmp    ah,BYTE PTR [rcx]
    170d:	01 3b                	add    DWORD PTR [rbx],edi
    170f:	0b 39                	or     edi,DWORD PTR [rcx]
    1711:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1714:	00 00                	add    BYTE PTR [rax],al
    1716:	4a                   	rex.WX
    1717:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    171a:	19 03                	sbb    DWORD PTR [rbx],eax
    171c:	0e                   	(bad)
    171d:	3a 21                	cmp    ah,BYTE PTR [rcx]
    171f:	01 3b                	add    DWORD PTR [rbx],edi
    1721:	0b 39                	or     edi,DWORD PTR [rcx]
    1723:	21 06                	and    DWORD PTR [rsi],eax
    1725:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1726:	0e                   	(bad)
    1727:	11 01                	adc    DWORD PTR [rcx],eax
    1729:	12 07                	adc    al,BYTE PTR [rdi]
    172b:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    172f:	01 13                	add    DWORD PTR [rbx],edx
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	4b 34 00             	rex.WXB xor al,0x0
    1736:	03 0e                	add    ecx,DWORD PTR [rsi]
    1738:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    173c:	6c                   	ins    BYTE PTR es:[rdi],dx
    173d:	19 02                	sbb    DWORD PTR [rdx],eax
    173f:	18 00                	sbb    BYTE PTR [rax],al
    1741:	00 4c 34 00          	add    BYTE PTR [rsp+rsi*1+0x0],cl
    1745:	03 0e                	add    ecx,DWORD PTR [rsi]
    1747:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1749:	01 3b                	add    DWORD PTR [rbx],edi
    174b:	0b 39                	or     edi,DWORD PTR [rcx]
    174d:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1750:	02 18                	add    bl,BYTE PTR [rax]
    1752:	00 00                	add    BYTE PTR [rax],al
    1754:	4d 0b 01             	or     r8,QWORD PTR [r9]
    1757:	31 13                	xor    DWORD PTR [rbx],edx
    1759:	55                   	push   rbp
    175a:	17                   	(bad)
    175b:	00 00                	add    BYTE PTR [rax],al
    175d:	4e                   	rex.WRX
    175e:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1761:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1764:	11 01                	adc    DWORD PTR [rcx],eax
    1766:	12 07                	adc    al,BYTE PTR [rdi]
    1768:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
    176c:	01 13                	add    DWORD PTR [rbx],edx
    176e:	00 00                	add    BYTE PTR [rax],al
    1770:	4f 39 00             	rex.WRXB cmp QWORD PTR [r8],r8
    1773:	03 0e                	add    ecx,DWORD PTR [rsi]
    1775:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1777:	05 3b 05 39 21       	add    eax,0x2139053b
    177c:	0d 00 00 50 39       	or     eax,0x39500000
    1781:	00 03                	add    BYTE PTR [rbx],al
    1783:	0e                   	(bad)
    1784:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1786:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 18922c5 <_end+0x188c2ad>
    178c:	19 00                	sbb    DWORD PTR [rax],eax
    178e:	00 51 2e             	add    BYTE PTR [rcx+0x2e],dl
    1791:	01 3f                	add    DWORD PTR [rdi],edi
    1793:	19 03                	sbb    DWORD PTR [rbx],eax
    1795:	0e                   	(bad)
    1796:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1798:	04 3b                	add    al,0x3b
    179a:	21 c9                	and    ecx,ecx
    179c:	04 39                	add    al,0x39
    179e:	21 0c 6e             	and    DWORD PTR [rsi+rbp*2],ecx
    17a1:	0e                   	(bad)
    17a2:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17a5:	21 01                	and    DWORD PTR [rcx],eax
    17a7:	3c 19                	cmp    al,0x19
    17a9:	8b 01                	mov    eax,DWORD PTR [rcx]
    17ab:	21 01                	and    DWORD PTR [rcx],eax
    17ad:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    17b0:	13 00                	adc    eax,DWORD PTR [rax]
    17b2:	00 52 16             	add    BYTE PTR [rdx+0x16],dl
    17b5:	00 03                	add    BYTE PTR [rbx],al
    17b7:	08 3a                	or     BYTE PTR [rdx],bh
    17b9:	21 04 3b             	and    DWORD PTR [rbx+rdi*1],eax
    17bc:	21 b0 04 39 21 08    	and    DWORD PTR [rax+0x8213904],esi
    17c2:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17c5:	21 01                	and    DWORD PTR [rcx],eax
    17c7:	00 00                	add    BYTE PTR [rax],al
    17c9:	53                   	push   rbx
    17ca:	2e 00 3f             	cs add BYTE PTR [rdi],bh
    17cd:	19 03                	sbb    DWORD PTR [rbx],eax
    17cf:	0e                   	(bad)
    17d0:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17d2:	04 3b                	add    al,0x3b
    17d4:	21 a1 05 39 21 02    	and    DWORD PTR [rcx+0x2213905],esp
    17da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17db:	0e                   	(bad)
    17dc:	49 13 32             	adc    rsi,QWORD PTR [r10]
    17df:	21 01                	and    DWORD PTR [rcx],eax
    17e1:	3c 19                	cmp    al,0x19
    17e3:	00 00                	add    BYTE PTR [rax],al
    17e5:	54                   	push   rsp
    17e6:	34 00                	xor    al,0x0
    17e8:	03 08                	add    ecx,DWORD PTR [rax]
    17ea:	3a 21                	cmp    ah,BYTE PTR [rcx]
    17ec:	10 3b                	adc    BYTE PTR [rbx],bh
    17ee:	21 94 02 39 21 21 6e 	and    DWORD PTR [rdx+rax*1+0x6e212139],edx
    17f5:	0e                   	(bad)
    17f6:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    17f9:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    17fc:	1c 06                	sbb    al,0x6
    17fe:	6c                   	ins    BYTE PTR es:[rdi],dx
    17ff:	19 20                	sbb    DWORD PTR [rax],esp
    1801:	21 01                	and    DWORD PTR [rcx],eax
    1803:	00 00                	add    BYTE PTR [rax],al
    1805:	55                   	push   rbp
    1806:	30 00                	xor    BYTE PTR [rax],al
    1808:	03 0e                	add    ecx,DWORD PTR [rsi]
    180a:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    180e:	00 00                	add    BYTE PTR [rax],al
    1810:	56                   	push   rsi
    1811:	2f                   	(bad)
    1812:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    1815:	00 00                	add    BYTE PTR [rax],al
    1817:	57                   	push   rdi
    1818:	37                   	(bad)
    1819:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
    181c:	00 00                	add    BYTE PTR [rax],al
    181e:	58                   	pop    rax
    181f:	15 01 49 13 01       	adc    eax,0x1134901
    1824:	13 00                	adc    eax,DWORD PTR [rax]
    1826:	00 59 0d             	add    BYTE PTR [rcx+0xd],bl
    1829:	00 03                	add    BYTE PTR [rbx],al
    182b:	0e                   	(bad)
    182c:	3a 21                	cmp    ah,BYTE PTR [rcx]
    182e:	1d 3b 0b 39 0b       	sbb    eax,0xb390b3b
    1833:	49 13 00             	adc    rax,QWORD PTR [r8]
    1836:	00 5a 2e             	add    BYTE PTR [rdx+0x2e],bl
    1839:	00 3f                	add    BYTE PTR [rdi],bh
    183b:	19 03                	sbb    DWORD PTR [rbx],eax
    183d:	0e                   	(bad)
    183e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1840:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349237f <_end+0x1348c367>
    1846:	3c 19                	cmp    al,0x19
    1848:	00 00                	add    BYTE PTR [rax],al
    184a:	5b                   	pop    rbx
    184b:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
    1850:	21 15 3b 05 39 0b    	and    DWORD PTR [rip+0xb39053b],edx        # b391d91 <_end+0xb38bd79>
    1856:	49 13 88 01 0b 38 0b 	adc    rcx,QWORD PTR [r8+0xb380b01]
    185d:	00 00                	add    BYTE PTR [rax],al
    185f:	5c                   	pop    rsp
    1860:	2e 01 31             	cs add DWORD PTR [rcx],esi
    1863:	13 6e 0e             	adc    ebp,DWORD PTR [rsi+0xe]
    1866:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    1869:	13 00                	adc    eax,DWORD PTR [rax]
    186b:	00 5d 05             	add    BYTE PTR [rbp+0x5],bl
    186e:	00 03                	add    BYTE PTR [rbx],al
    1870:	08 3a                	or     BYTE PTR [rdx],bh
    1872:	0b 3b                	or     edi,DWORD PTR [rbx]
    1874:	05 39 0b 49 13       	add    eax,0x13490b39
    1879:	00 00                	add    BYTE PTR [rax],al
    187b:	5e                   	pop    rsi
    187c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    187f:	19 03                	sbb    DWORD PTR [rbx],eax
    1881:	0e                   	(bad)
    1882:	3a 21                	cmp    ah,BYTE PTR [rcx]
    1884:	01 3b                	add    DWORD PTR [rbx],edi
    1886:	0b 39                	or     edi,DWORD PTR [rcx]
    1888:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
    188b:	49 13 20             	adc    rsp,QWORD PTR [r8]
    188e:	21 01                	and    DWORD PTR [rcx],eax
    1890:	01 13                	add    DWORD PTR [rbx],edx
    1892:	00 00                	add    BYTE PTR [rax],al
    1894:	5f                   	pop    rdi
    1895:	34 00                	xor    al,0x0
    1897:	03 0e                	add    ecx,DWORD PTR [rsi]
    1899:	49 13 34 19          	adc    rsi,QWORD PTR [r9+rbx*1]
    189d:	6c                   	ins    BYTE PTR es:[rdi],dx
    189e:	19 00                	sbb    DWORD PTR [rax],eax
    18a0:	00 60 1d             	add    BYTE PTR [rax+0x1d],ah
    18a3:	01 31                	add    DWORD PTR [rcx],esi
    18a5:	13 52 01             	adc    edx,DWORD PTR [rdx+0x1]
    18a8:	b8 42 05 55 17       	mov    eax,0x17550542
    18ad:	58                   	pop    rax
    18ae:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    18b1:	05 57 0b 00 00       	add    eax,0xb57
    18b6:	61                   	(bad)
    18b7:	1d 01 31 13 52       	sbb    eax,0x52133101
    18bc:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    18c2:	12 07                	adc    al,BYTE PTR [rdi]
    18c4:	58                   	pop    rax
    18c5:	21 04 59             	and    DWORD PTR [rcx+rbx*2],eax
    18c8:	21 f7                	and    edi,esi
    18ca:	08 57 0b             	or     BYTE PTR [rdi+0xb],dl
    18cd:	01 13                	add    DWORD PTR [rbx],edx
    18cf:	00 00                	add    BYTE PTR [rax],al
    18d1:	62 0b 01 55 17       	(bad)
    18d6:	01 13                	add    DWORD PTR [rbx],edx
    18d8:	00 00                	add    BYTE PTR [rax],al
    18da:	63 2e                	movsxd ebp,DWORD PTR [rsi]
    18dc:	01 3f                	add    DWORD PTR [rdi],edi
    18de:	19 03                	sbb    DWORD PTR [rbx],eax
    18e0:	0e                   	(bad)
    18e1:	3a 21                	cmp    ah,BYTE PTR [rcx]
    18e3:	02 3b                	add    bh,BYTE PTR [rbx]
    18e5:	0b 39                	or     edi,DWORD PTR [rcx]
    18e7:	21 01                	and    DWORD PTR [rcx],eax
    18e9:	49 13 20             	adc    rsp,QWORD PTR [r8]
    18ec:	21 03                	and    DWORD PTR [rbx],eax
    18ee:	34 19                	xor    al,0x19
    18f0:	01 13                	add    DWORD PTR [rbx],edx
    18f2:	00 00                	add    BYTE PTR [rax],al
    18f4:	64 48 00 7d 01       	rex.W add BYTE PTR fs:[rbp+0x1],dil
    18f9:	82                   	(bad)
    18fa:	01 19                	add    DWORD PTR [rcx],ebx
    18fc:	7f 13                	jg     1911 <_Z11hashMapDtorP7HashMap+0x21>
    18fe:	00 00                	add    BYTE PTR [rax],al
    1900:	65 05 00 31 13 1c    	gs add eax,0x1c133100
    1906:	21 00                	and    DWORD PTR [rax],eax
    1908:	00 00                	add    BYTE PTR [rax],al
    190a:	66 11 01             	adc    WORD PTR [rcx],ax
    190d:	25 0e 13 0b 03       	and    eax,0x30b130e
    1912:	1f                   	(bad)
    1913:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
    1915:	11 01                	adc    DWORD PTR [rcx],eax
    1917:	12 07                	adc    al,BYTE PTR [rdi]
    1919:	10 17                	adc    BYTE PTR [rdi],dl
    191b:	00 00                	add    BYTE PTR [rax],al
    191d:	67 39 01             	cmp    DWORD PTR [ecx],eax
    1920:	03 08                	add    ecx,DWORD PTR [rax]
    1922:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1924:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13012463 <_end+0x1300c44b>
    192a:	00 00                	add    BYTE PTR [rax],al
    192c:	68 39 00 03 08       	push   0x8030039
    1931:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1933:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1935:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1937:	00 00                	add    BYTE PTR [rax],al
    1939:	69 39 01 03 08 3a    	imul   edi,DWORD PTR [rcx],0x3a080301
    193f:	0b 3b                	or     edi,DWORD PTR [rbx]
    1941:	05 39 0b 89 01       	add    eax,0x1890b39
    1946:	19 01                	sbb    DWORD PTR [rcx],eax
    1948:	13 00                	adc    eax,DWORD PTR [rax]
    194a:	00 6a 13             	add    BYTE PTR [rdx+0x13],ch
    194d:	01 03                	add    DWORD PTR [rbx],eax
    194f:	0e                   	(bad)
    1950:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1952:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1954:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # 2493 <_Z10debugPrintP4List+0x223>
    195a:	6b 34 00 03          	imul   esi,DWORD PTR [rax+rax*1],0x3
    195e:	0e                   	(bad)
    195f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1961:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e24a0 <_end+0xe6dc488>
    1967:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    196a:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    196d:	1c 0b                	sbb    al,0xb
    196f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1970:	19 20                	sbb    DWORD PTR [rax],esp
    1972:	0b 00                	or     eax,DWORD PTR [rax]
    1974:	00 6c 2e 00          	add    BYTE PTR [rsi+rbp*1+0x0],ch
    1978:	3f                   	(bad)
    1979:	19 03                	sbb    DWORD PTR [rbx],eax
    197b:	08 3a                	or     BYTE PTR [rdx],bh
    197d:	0b 3b                	or     edi,DWORD PTR [rbx]
    197f:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    1984:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    1988:	00 00                	add    BYTE PTR [rax],al
    198a:	6d                   	ins    DWORD PTR es:[rdi],dx
    198b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    198e:	19 03                	sbb    DWORD PTR [rbx],eax
    1990:	0e                   	(bad)
    1991:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1993:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e24d2 <_end+0xe6dc4ba>
    1999:	32 0b                	xor    cl,BYTE PTR [rbx]
    199b:	3c 19                	cmp    al,0x19
    199d:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
    19a0:	13 00                	adc    eax,DWORD PTR [rax]
    19a2:	00 6e 16             	add    BYTE PTR [rsi+0x16],ch
    19a5:	00 03                	add    BYTE PTR [rbx],al
    19a7:	0e                   	(bad)
    19a8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19aa:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 134924e9 <_end+0x1348c4d1>
    19b0:	32 0b                	xor    cl,BYTE PTR [rbx]
    19b2:	00 00                	add    BYTE PTR [rax],al
    19b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19b5:	3a 00                	cmp    al,BYTE PTR [rax]
    19b7:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19b9:	3b 05 39 0b 18 13    	cmp    eax,DWORD PTR [rip+0x13180b39]        # 131824f8 <_end+0x1317c4e0>
    19bf:	00 00                	add    BYTE PTR [rax],al
    19c1:	70 2e                	jo     19f1 <_Z17hashMapDebugPrintP7HashMap+0x91>
    19c3:	01 3f                	add    DWORD PTR [rdi],edi
    19c5:	19 03                	sbb    DWORD PTR [rbx],eax
    19c7:	0e                   	(bad)
    19c8:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    19ca:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e2509 <_end+0xe6dc4f1>
    19d0:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
    19d4:	00 00                	add    BYTE PTR [rax],al
    19d6:	71 87                	jno    195f <_Z11hashMapDtorP7HashMap+0x6f>
    19d8:	82                   	(bad)
    19d9:	01 01                	add    DWORD PTR [rcx],eax
    19db:	03 08                	add    ecx,DWORD PTR [rax]
    19dd:	00 00                	add    BYTE PTR [rax],al
    19df:	72 34                	jb     1a15 <_Z17hashMapDebugPrintP7HashMap+0xb5>
    19e1:	00 03                	add    BYTE PTR [rbx],al
    19e3:	08 3a                	or     BYTE PTR [rdx],bh
    19e5:	0b 3b                	or     edi,DWORD PTR [rbx]
    19e7:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
    19ec:	49 13 3f             	adc    rdi,QWORD PTR [r15]
    19ef:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    19f2:	1c 05                	sbb    al,0x5
    19f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    19f5:	19 20                	sbb    DWORD PTR [rax],esp
    19f7:	0b 00                	or     eax,DWORD PTR [rax]
    19f9:	00 73 30             	add    BYTE PTR [rbx+0x30],dh
    19fc:	00 03                	add    BYTE PTR [rbx],al
    19fe:	0e                   	(bad)
    19ff:	49 13 1c 05 00 00 74 	adc    rbx,QWORD PTR [rax*1+0x39740000]
    1a06:	39 
    1a07:	01 03                	add    DWORD PTR [rbx],eax
    1a09:	0e                   	(bad)
    1a0a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a0c:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 189254b <_end+0x188c533>
    1a12:	19 01                	sbb    DWORD PTR [rcx],eax
    1a14:	13 00                	adc    eax,DWORD PTR [rax]
    1a16:	00 75 39             	add    BYTE PTR [rbp+0x39],dh
    1a19:	01 03                	add    DWORD PTR [rbx],eax
    1a1b:	0e                   	(bad)
    1a1c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a1e:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 1301255d <_end+0x1300c545>
    1a24:	00 00                	add    BYTE PTR [rax],al
    1a26:	76 24                	jbe    1a4c <_Z15crc32HashString8string_t+0x2c>
    1a28:	00 0b                	add    BYTE PTR [rbx],cl
    1a2a:	0b 3e                	or     edi,DWORD PTR [rsi]
    1a2c:	0b 03                	or     eax,DWORD PTR [rbx]
    1a2e:	08 00                	or     BYTE PTR [rax],al
    1a30:	00 77 0f             	add    BYTE PTR [rdi+0xf],dh
    1a33:	00 0b                	add    BYTE PTR [rbx],cl
    1a35:	0b 00                	or     eax,DWORD PTR [rax]
    1a37:	00 78 26             	add    BYTE PTR [rax+0x26],bh
    1a3a:	00 00                	add    BYTE PTR [rax],al
    1a3c:	00 79 3a             	add    BYTE PTR [rcx+0x3a],bh
    1a3f:	00 3a                	add    BYTE PTR [rdx],bh
    1a41:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a43:	0b 39                	or     edi,DWORD PTR [rcx]
    1a45:	0b 18                	or     ebx,DWORD PTR [rax]
    1a47:	13 00                	adc    eax,DWORD PTR [rax]
    1a49:	00 7a 13             	add    BYTE PTR [rdx+0x13],bh
    1a4c:	01 03                	add    DWORD PTR [rbx],eax
    1a4e:	0e                   	(bad)
    1a4f:	0b 0b                	or     ecx,DWORD PTR [rbx]
    1a51:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a53:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a55:	01 13                	add    DWORD PTR [rbx],edx
    1a57:	00 00                	add    BYTE PTR [rax],al
    1a59:	7b 17                	jnp    1a72 <_Z15crc32HashString8string_t+0x52>
    1a5b:	01 0b                	add    DWORD PTR [rbx],ecx
    1a5d:	0b 3a                	or     edi,DWORD PTR [rdx]
    1a5f:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a61:	0b 39                	or     edi,DWORD PTR [rcx]
    1a63:	0b 01                	or     eax,DWORD PTR [rcx]
    1a65:	13 00                	adc    eax,DWORD PTR [rax]
    1a67:	00 7c 16 00          	add    BYTE PTR [rsi+rdx*1+0x0],bh
    1a6b:	03 0e                	add    ecx,DWORD PTR [rsi]
    1a6d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a6f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1a71:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1a73:	00 00                	add    BYTE PTR [rax],al
    1a75:	7d 15                	jge    1a8c <_Z15crc32HashString8string_t+0x6c>
    1a77:	00 00                	add    BYTE PTR [rax],al
    1a79:	00 7e 2e             	add    BYTE PTR [rsi+0x2e],bh
    1a7c:	01 3f                	add    DWORD PTR [rdi],edi
    1a7e:	19 03                	sbb    DWORD PTR [rbx],eax
    1a80:	08 3a                	or     BYTE PTR [rdx],bh
    1a82:	0b 3b                	or     edi,DWORD PTR [rbx]
    1a84:	05 39 0b 49 13       	add    eax,0x13490b39
    1a89:	3c 19                	cmp    al,0x19
    1a8b:	01 13                	add    DWORD PTR [rbx],edx
    1a8d:	00 00                	add    BYTE PTR [rax],al
    1a8f:	7f 2e                	jg     1abf <_Z15crc32HashString8string_t+0x9f>
    1a91:	01 3f                	add    DWORD PTR [rdi],edi
    1a93:	19 03                	sbb    DWORD PTR [rbx],eax
    1a95:	0e                   	(bad)
    1a96:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1a98:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 18725d7 <_end+0x186c5bf>
    1a9e:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1aa1:	01 13                	add    DWORD PTR [rbx],edx
    1aa3:	00 00                	add    BYTE PTR [rax],al
    1aa5:	80 01 13             	add    BYTE PTR [rcx],0x13
    1aa8:	01 0b                	add    DWORD PTR [rbx],ecx
    1aaa:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
    1ab0:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e25ef <_end+0xe6dc5d7>
    1ab6:	01 13                	add    DWORD PTR [rbx],edx
    1ab8:	00 00                	add    BYTE PTR [rax],al
    1aba:	81 01 16 00 03 0e    	add    DWORD PTR [rcx],0xe030016
    1ac0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ac2:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13492601 <_end+0x1348c5e9>
    1ac8:	88 01                	mov    BYTE PTR [rcx],al
    1aca:	0b 00                	or     eax,DWORD PTR [rax]
    1acc:	00 82 01 13 01 03    	add    BYTE PTR [rdx+0x3011301],al
    1ad2:	08 0b                	or     BYTE PTR [rbx],cl
    1ad4:	0b 3a                	or     edi,DWORD PTR [rdx]
    1ad6:	0b 3b                	or     edi,DWORD PTR [rbx]
    1ad8:	0b 39                	or     edi,DWORD PTR [rcx]
    1ada:	0b 01                	or     eax,DWORD PTR [rcx]
    1adc:	13 00                	adc    eax,DWORD PTR [rax]
    1ade:	00 83 01 39 01 03    	add    BYTE PTR [rbx+0x3013901],al
    1ae4:	0e                   	(bad)
    1ae5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1ae7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1ae9:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1aeb:	00 00                	add    BYTE PTR [rax],al
    1aed:	84 01                	test   BYTE PTR [rcx],al
    1aef:	39 00                	cmp    DWORD PTR [rax],eax
    1af1:	03 08                	add    ecx,DWORD PTR [rax]
    1af3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1af5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1af7:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1af9:	89 01                	mov    DWORD PTR [rcx],eax
    1afb:	19 00                	sbb    DWORD PTR [rax],eax
    1afd:	00 85 01 34 00 03    	add    BYTE PTR [rbp+0x3003401],al
    1b03:	0e                   	(bad)
    1b04:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b06:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b08:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b0a:	49 13 1c 06          	adc    rbx,QWORD PTR [r14+rax*1]
    1b0e:	00 00                	add    BYTE PTR [rax],al
    1b10:	86 01                	xchg   BYTE PTR [rcx],al
    1b12:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b15:	19 03                	sbb    DWORD PTR [rbx],eax
    1b17:	0e                   	(bad)
    1b18:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b1a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b1c:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b1f:	0e                   	(bad)
    1b20:	3c 19                	cmp    al,0x19
    1b22:	01 13                	add    DWORD PTR [rbx],edx
    1b24:	00 00                	add    BYTE PTR [rax],al
    1b26:	87 01                	xchg   DWORD PTR [rcx],eax
    1b28:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b2b:	19 03                	sbb    DWORD PTR [rbx],eax
    1b2d:	0e                   	(bad)
    1b2e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b30:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b32:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b34:	87 01                	xchg   DWORD PTR [rcx],eax
    1b36:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
    1b39:	01 13                	add    DWORD PTR [rbx],edx
    1b3b:	00 00                	add    BYTE PTR [rax],al
    1b3d:	88 01                	mov    BYTE PTR [rcx],al
    1b3f:	05 00 03 08 3a       	add    eax,0x3a080300
    1b44:	0b 3b                	or     edi,DWORD PTR [rbx]
    1b46:	0b 39                	or     edi,DWORD PTR [rcx]
    1b48:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
    1b4b:	00 00                	add    BYTE PTR [rax],al
    1b4d:	89 01                	mov    DWORD PTR [rcx],eax
    1b4f:	0b 00                	or     eax,DWORD PTR [rax]
    1b51:	00 00                	add    BYTE PTR [rax],al
    1b53:	8a 01                	mov    al,BYTE PTR [rcx]
    1b55:	1d 01 31 13 52       	sbb    eax,0x52133101
    1b5a:	01 b8 42 05 11 01    	add    DWORD PTR [rax+0x1110542],edi
    1b60:	12 07                	adc    al,BYTE PTR [rdi]
    1b62:	58                   	pop    rax
    1b63:	0b 59 05             	or     ebx,DWORD PTR [rcx+0x5]
    1b66:	57                   	push   rdi
    1b67:	0b 00                	or     eax,DWORD PTR [rax]
    1b69:	00 8b 01 48 01 7d    	add    BYTE PTR [rbx+0x7d014801],cl
    1b6f:	01 82 01 19 7f 13    	add    DWORD PTR [rdx+0x137f1901],eax
    1b75:	01 13                	add    DWORD PTR [rbx],edx
    1b77:	00 00                	add    BYTE PTR [rax],al
    1b79:	8c 01                	mov    WORD PTR [rcx],es
    1b7b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
    1b7e:	19 03                	sbb    DWORD PTR [rbx],eax
    1b80:	0e                   	(bad)
    1b81:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    1b83:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    1b85:	39 0b                	cmp    DWORD PTR [rbx],ecx
    1b87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b88:	0e                   	(bad)
    1b89:	20 0b                	and    BYTE PTR [rbx],cl
    1b8b:	01 13                	add    DWORD PTR [rbx],edx
    1b8d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
       0:	e3 00                	jrcxz  2 <__abi_tag-0x37a>
       2:	00 00                	add    BYTE PTR [rax],al
       4:	05 00 08 00 8b       	add    eax,0x8b000800
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 01                	add    BYTE PTR [rcx],al
       d:	01 01                	add    DWORD PTR [rcx],eax
       f:	fb                   	sti
      10:	0e                   	(bad)
      11:	0d 00 01 01 01       	or     eax,0x1010100
      16:	01 00                	add    DWORD PTR [rax],eax
      18:	00 00                	add    BYTE PTR [rax],al
      1a:	01 00                	add    DWORD PTR [rax],eax
      1c:	00 01                	add    BYTE PTR [rcx],al
      1e:	01 01                	add    DWORD PTR [rcx],eax
      20:	1f                   	(bad)
      21:	09 00                	or     DWORD PTR [rax],eax
      23:	00 00                	add    BYTE PTR [rax],al
      25:	00 2f                	add    BYTE PTR [rdi],ch
      27:	00 00                	add    BYTE PTR [rax],al
      29:	00 41 00             	add    BYTE PTR [rcx+0x0],al
      2c:	00 00                	add    BYTE PTR [rax],al
      2e:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
      31:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
      34:	00 00                	add    BYTE PTR [rax],al
      36:	9a                   	(bad)
      37:	00 00                	add    BYTE PTR [rax],al
      39:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	00 dd                	add    ch,bl
      43:	00 00                	add    BYTE PTR [rax],al
      45:	00 02                	add    BYTE PTR [rdx],al
      47:	01 1f                	add    DWORD PTR [rdi],ebx
      49:	02 0f                	add    cl,BYTE PTR [rdi]
      4b:	0f 26                	(bad)
      4d:	00 00                	add    BYTE PTR [rax],al
      4f:	00 01                	add    BYTE PTR [rcx],al
      51:	26 00 00             	es add BYTE PTR [rax],al
      54:	00 01                	add    BYTE PTR [rcx],al
      56:	07                   	(bad)
      57:	01 00                	add    DWORD PTR [rax],eax
      59:	00 02                	add    BYTE PTR [rdx],al
      5b:	10 01                	adc    BYTE PTR [rcx],al
      5d:	00 00                	add    BYTE PTR [rax],al
      5f:	03 19                	add    ebx,DWORD PTR [rcx]
      61:	01 00                	add    DWORD PTR [rax],eax
      63:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
      66:	01 00                	add    DWORD PTR [rax],eax
      68:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 197 <__abi_tag-0x1e5>
      6e:	06                   	(bad)
      6f:	33 01                	xor    eax,DWORD PTR [rcx]
      71:	00 00                	add    BYTE PTR [rax],al
      73:	04 42                	add    al,0x42
      75:	01 00                	add    DWORD PTR [rax],eax
      77:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7a:	01 00                	add    DWORD PTR [rax],eax
      7c:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
      7f:	01 00                	add    DWORD PTR [rax],eax
      81:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1da <__abi_tag-0x1a2>
      87:	04 62                	add    al,0x62
      89:	01 00                	add    DWORD PTR [rax],eax
      8b:	00 07                	add    BYTE PTR [rdi],al
      8d:	6d                   	ins    DWORD PTR es:[rdi],dx
      8e:	01 00                	add    DWORD PTR [rax],eax
      90:	00 07                	add    BYTE PTR [rdi],al
      92:	75 01                	jne    95 <__abi_tag-0x2e7>
      94:	00 00                	add    BYTE PTR [rax],al
      96:	08 05 21 00 09 02    	or     BYTE PTR [rip+0x2090021],al        # 20900bd <_end+0x208a0a5>
      9c:	e0 11                	loopne af <__abi_tag-0x2cd>
      9e:	00 00                	add    BYTE PTR [rax],al
      a0:	00 00                	add    BYTE PTR [rax],al
      a2:	00 00                	add    BYTE PTR [rax],al
      a4:	18 06                	sbb    BYTE PTR [rsi],al
      a6:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b06b1 <_end+0x54aa699>
      ac:	21 06                	and    DWORD PTR [rsi],eax
      ae:	11 04 02             	adc    DWORD PTR [rdx+rax*1],eax
      b1:	05 17 03 dc 03       	add    eax,0x3dc0317
      b6:	20 4a 04             	and    BYTE PTR [rdx+0x4],cl
      b9:	01 05 0c 03 a5 7c    	add    DWORD PTR [rip+0x7ca5030c],eax        # 7ca503cb <_end+0x7ca4a3b3>
      bf:	58                   	pop    rax
      c0:	04 02                	add    al,0x2
      c2:	05 01 06 03 d9       	add    eax,0xd9030601
      c7:	03 4a 05             	add    ecx,DWORD PTR [rdx+0x5]
      ca:	03 14 05 17 06 01 2e 	add    edx,DWORD PTR [rax*1+0x2e010617]
      d1:	58                   	pop    rax
      d2:	04 01                	add    al,0x1
      d4:	05 0c 00 02 04       	add    eax,0x402000c
      d9:	01 03                	add    DWORD PTR [rbx],eax
      db:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
      dc:	7c 01                	jl     df <__abi_tag-0x29d>
      de:	05 01 08 13 02       	add    eax,0x2130801
      e3:	04 00                	add    al,0x0
      e5:	01 01                	add    DWORD PTR [rcx],eax
      e7:	c5 07 00             	(bad)
      ea:	00 05 00 08 00 ae    	add    BYTE PTR [rip+0xffffffffae000800],al        # ffffffffae0008f0 <_end+0xffffffffadffa8d8>
      f0:	00 00                	add    BYTE PTR [rax],al
      f2:	00 01                	add    BYTE PTR [rcx],al
      f4:	01 01                	add    DWORD PTR [rcx],eax
      f6:	fb                   	sti
      f7:	0e                   	(bad)
      f8:	0d 00 01 01 01       	or     eax,0x1010100
      fd:	01 00                	add    DWORD PTR [rax],eax
      ff:	00 00                	add    BYTE PTR [rax],al
     101:	01 00                	add    DWORD PTR [rax],eax
     103:	00 01                	add    BYTE PTR [rcx],al
     105:	01 01                	add    DWORD PTR [rcx],eax
     107:	1f                   	(bad)
     108:	09 00                	or     DWORD PTR [rax],eax
     10a:	00 00                	add    BYTE PTR [rax],al
     10c:	00 2f                	add    BYTE PTR [rdi],ch
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     113:	00 00                	add    BYTE PTR [rax],al
     115:	77 00                	ja     117 <__abi_tag-0x265>
     117:	00 00                	add    BYTE PTR [rax],al
     119:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     11c:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     122:	00 00                	add    BYTE PTR [rax],al
     124:	00 c7                	add    bh,al
     126:	00 00                	add    BYTE PTR [rax],al
     128:	00 dd                	add    ch,bl
     12a:	00 00                	add    BYTE PTR [rax],al
     12c:	00 02                	add    BYTE PTR [rdx],al
     12e:	01 1f                	add    DWORD PTR [rdi],ebx
     130:	02 0f                	add    cl,BYTE PTR [rdi]
     132:	16                   	(bad)
     133:	93                   	xchg   ebx,eax
     134:	01 00                	add    DWORD PTR [rax],eax
     136:	00 01                	add    BYTE PTR [rcx],al
     138:	93                   	xchg   ebx,eax
     139:	01 00                	add    DWORD PTR [rax],eax
     13b:	00 01                	add    BYTE PTR [rcx],al
     13d:	a0 01 00 00 02 a9 01 	movabs al,ds:0x1a902000001
     144:	00 00 
     146:	03 bc 01 00 00 04 c8 	add    edi,DWORD PTR [rcx+rax*1-0x37fc0000]
     14d:	01 00                	add    DWORD PTR [rax],eax
     14f:	00 03                	add    BYTE PTR [rbx],al
     151:	10 01                	adc    BYTE PTR [rcx],al
     153:	00 00                	add    BYTE PTR [rax],al
     155:	04 07                	add    al,0x7
     157:	01 00                	add    DWORD PTR [rax],eax
     159:	00 02                	add    BYTE PTR [rdx],al
     15b:	19 01                	sbb    DWORD PTR [rcx],eax
     15d:	00 00                	add    BYTE PTR [rax],al
     15f:	03 21                	add    esp,DWORD PTR [rcx]
     161:	01 00                	add    DWORD PTR [rax],eax
     163:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 292 <__abi_tag-0xea>
     169:	06                   	(bad)
     16a:	33 01                	xor    eax,DWORD PTR [rcx]
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     171:	00 00                	add    BYTE PTR [rax],al
     173:	03 07                	add    eax,DWORD PTR [rdi]
     175:	01 00                	add    DWORD PTR [rax],eax
     177:	00 03                	add    BYTE PTR [rbx],al
     179:	07                   	(bad)
     17a:	01 00                	add    DWORD PTR [rax],eax
     17c:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 2d5 <__abi_tag-0xa7>
     182:	03 d1                	add    edx,ecx
     184:	01 00                	add    DWORD PTR [rax],eax
     186:	00 07                	add    BYTE PTR [rdi],al
     188:	62 01 00 00 07       	(bad)
     18d:	dc 01                	fadd   QWORD PTR [rcx]
     18f:	00 00                	add    BYTE PTR [rax],al
     191:	07                   	(bad)
     192:	e3 01                	jrcxz  195 <__abi_tag-0x1e7>
     194:	00 00                	add    BYTE PTR [rax],al
     196:	03 f1                	add    esi,ecx
     198:	01 00                	add    DWORD PTR [rax],eax
     19a:	00 02                	add    BYTE PTR [rdx],al
     19c:	75 01                	jne    19f <__abi_tag-0x1dd>
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	08 05 37 00 09 02    	or     BYTE PTR [rip+0x2090037],al        # 20901dd <_end+0x208a1c5>
     1a6:	00 13                	add    BYTE PTR [rbx],dl
     1a8:	00 00                	add    BYTE PTR [rax],al
     1aa:	00 00                	add    BYTE PTR [rax],al
     1ac:	00 00                	add    BYTE PTR [rax],al
     1ae:	03 13                	add    edx,DWORD PTR [rbx]
     1b0:	01 06                	add    DWORD PTR [rsi],eax
     1b2:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b07bd <_end+0x54aa7a5>
     1b8:	37                   	(bad)
     1b9:	06                   	(bad)
     1ba:	11 05 05 d7 06 bc    	adc    DWORD PTR [rip+0xffffffffbc06d705],eax        # ffffffffbc06d8c5 <_end+0xffffffffbc0678ad>
     1c0:	05 2f 06 01 05       	add    eax,0x501062f
     1c5:	52                   	push   rdx
     1c6:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     1c7:	05 2f 3b 3c 05       	add    eax,0x53c3b2f
     1cc:	52                   	push   rdx
     1cd:	59                   	pop    rcx
     1ce:	05 32 3c 05 2f       	add    eax,0x2f053c32
     1d3:	81 05 05 06 3d 05 32 	add    DWORD PTR [rip+0x53d0605],0x58010632        # 53d07e2 <_end+0x53ca7ca>
     1da:	06 01 58 
     1dd:	05 05 06 3d 13       	add    eax,0x133d0605
     1e2:	14 05                	adc    al,0x5
     1e4:	1c 00                	sbb    al,0x0
     1e6:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     1e9:	01 05 09 08 59 14    	add    DWORD PTR [rip+0x14590809],eax        # 145909f8 <_end+0x1458a9e0>
     1ef:	04 02                	add    al,0x2
     1f1:	05 01 03 ca 01       	add    eax,0x1ca0301
     1f6:	01 05 03 14 05 1b    	add    DWORD PTR [rip+0x1b051403],eax        # 1b0515ff <_end+0x1b04b5e7>
     1fc:	06                   	(bad)
     1fd:	01 c8                	add    eax,ecx
     1ff:	04 01                	add    al,0x1
     201:	05 09 06 03 b5       	add    eax,0xb5030609
     206:	7e 01                	jle    209 <__abi_tag-0x173>
     208:	05 23 06 40 05       	add    eax,0x5400623
     20d:	0d 46 05 09 06       	or     eax,0x6090546
     212:	4c 04 03             	rex.WR add al,0x3
     215:	05 22 00 02 04       	add    eax,0x4020022
     21a:	01 06                	add    DWORD PTR [rsi],eax
     21c:	03 3d 01 04 01 05    	add    edi,DWORD PTR [rip+0x5010401]        # 5010623 <_end+0x500a60b>
     222:	10 03                	adc    BYTE PTR [rbx],al
     224:	45 3c 04             	rex.RB cmp al,0x4
     227:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 402024f <_end+0x401a237>
     22d:	01 03                	add    DWORD PTR [rbx],eax
     22f:	3b 4a 04             	cmp    ecx,DWORD PTR [rdx+0x4]
     232:	01 05 17 03 43 58    	add    DWORD PTR [rip+0x58430317],eax        # 5843054f <_end+0x5842a537>
     238:	04 03                	add    al,0x3
     23a:	05 22 00 02 04       	add    eax,0x4020022
     23f:	01 03                	add    DWORD PTR [rbx],eax
     241:	3d 3c 04 01 05       	cmp    eax,0x501043c
     246:	17                   	(bad)
     247:	03 43 74             	add    eax,DWORD PTR [rbx+0x74]
     24a:	05 09 06 3e 04       	add    eax,0x43e0609
     24f:	03 05 22 00 02 04    	add    eax,DWORD PTR [rip+0x4020022]        # 4020277 <_end+0x401a25f>
     255:	01 06                	add    DWORD PTR [rsi],eax
     257:	03 3b                	add    edi,DWORD PTR [rbx]
     259:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     25c:	05 10 03 45 74       	add    eax,0x74450310
     261:	04 03                	add    al,0x3
     263:	05 01 06 03 38       	add    eax,0x38030601
     268:	3c 05                	cmp    al,0x5
     26a:	03 15 05 22 00 02    	add    edx,DWORD PTR [rip+0x2002205]        # 2002475 <_end+0x1ffc45d>
     270:	04 01                	add    al,0x1
     272:	06                   	(bad)
     273:	01 00                	add    DWORD PTR [rax],eax
     275:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     278:	c8 04 01 05          	enter  0x104,0x5
     27c:	09 06                	or     DWORD PTR [rsi],eax
     27e:	03 46 01             	add    eax,DWORD PTR [rsi+0x1]
     281:	05 26 06 01 04       	add    eax,0x4010626
     286:	03 05 01 06 03 14    	add    eax,DWORD PTR [rip+0x14030601]        # 1403088d <_end+0x1402a875>
     28c:	d6                   	(bad)
     28d:	05 03 14 04 01       	add    eax,0x1041403
     292:	05 0f 06 03 6a       	add    eax,0x6a03060f
     297:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
     29a:	05 21 00 02 04       	add    eax,0x4020021
     29f:	01 03                	add    DWORD PTR [rbx],eax
     2a1:	16                   	(bad)
     2a2:	58                   	pop    rax
     2a3:	04 01                	add    al,0x1
     2a5:	05 0f 03 6a 9e       	add    eax,0x9e6a030f
     2aa:	04 03                	add    al,0x3
     2ac:	05 21 00 02 04       	add    eax,0x4020021
     2b1:	01 03                	add    DWORD PTR [rbx],eax
     2b3:	16                   	(bad)
     2b4:	3c 04                	cmp    al,0x4
     2b6:	01 05 26 03 6a 58    	add    DWORD PTR [rip+0x586a0326],eax        # 586a05e2 <_end+0x5869a5ca>
     2bc:	04 03                	add    al,0x3
     2be:	05 21 00 02 04       	add    eax,0x4020021
     2c3:	01 03                	add    DWORD PTR [rbx],eax
     2c5:	16                   	(bad)
     2c6:	3c 00                	cmp    al,0x0
     2c8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2cb:	58                   	pop    rax
     2cc:	04 01                	add    al,0x1
     2ce:	05 09 06 03 6c       	add    eax,0x6c030609
     2d3:	01 05 20 06 01 4b    	add    DWORD PTR [rip+0x4b010620],eax        # 4b0108f9 <_end+0x4b00a8e1>
     2d9:	57                   	push   rdi
     2da:	05 09 06 59 05       	add    eax,0x5590609
     2df:	05 00 02 04 03       	add    eax,0x3040200
     2e4:	03 74 01 05          	add    esi,DWORD PTR [rcx+rax*1+0x5]
     2e8:	1c 00                	sbb    al,0x0
     2ea:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2ed:	01 00                	add    DWORD PTR [rax],eax
     2ef:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     2f2:	06                   	(bad)
     2f3:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     2f6:	04 01                	add    al,0x1
     2f8:	ac                   	lods   al,BYTE PTR ds:[rsi]
     2f9:	05 01 03 10 01       	add    eax,0x1100301
     2fe:	90                   	nop
     2ff:	4a                   	rex.WX
     300:	2e 05 05 00 02 04    	cs add eax,0x4020005
     306:	01 03                	add    DWORD PTR [rbx],eax
     308:	69 3c 00 02 04 01 08 	imul   edi,DWORD PTR [rax+rax*1],0x8010402
     30f:	2e 00 02             	cs add BYTE PTR [rdx],al
     312:	04 01                	add    al,0x1
     314:	74 05                	je     31b <__abi_tag-0x61>
     316:	39 06                	cmp    DWORD PTR [rsi],eax
     318:	03 19                	add    ebx,DWORD PTR [rcx]
     31a:	08 20                	or     BYTE PTR [rax],ah
     31c:	06                   	(bad)
     31d:	01 08                	add    DWORD PTR [rax],ecx
     31f:	ba 05 05 06 f3       	mov    edx,0xf3060505
     324:	05 2e 06 15 05       	add    eax,0x515062e
     329:	05 06 4c 05 22       	add    eax,0x22054c06
     32e:	06                   	(bad)
     32f:	01 05 0d 53 05 2e    	add    DWORD PTR [rip+0x2e05530d],eax        # 2e055642 <_end+0x2e04f62a>
     335:	77 05                	ja     33c <__abi_tag-0x40>
     337:	22 4c 3c 05          	and    cl,BYTE PTR [rsp+rdi*1+0x5]
     33b:	13 00                	adc    eax,DWORD PTR [rax]
     33d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     340:	58                   	pop    rax
     341:	05 05 06 4c 05       	add    eax,0x54c0605
     346:	1c 00                	sbb    al,0x0
     348:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     34b:	01 05 09 08 2f 05    	add    DWORD PTR [rip+0x52f0809],eax        # 52f0b5a <_end+0x52eab42>
     351:	24 06                	and    al,0x6
     353:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4020375 <_end+0x401a35d>
     359:	01 3b                	add    DWORD PTR [rbx],edi
     35b:	05 24 4b 05 05       	add    eax,0x5054b24
     360:	00 02                	add    BYTE PTR [rdx],al
     362:	04 03                	add    al,0x3
     364:	06                   	(bad)
     365:	08 73 05             	or     BYTE PTR [rbx+0x5],dh
     368:	1c 00                	sbb    al,0x0
     36a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     36d:	01 05 01 06 5d 08    	add    DWORD PTR [rip+0x85d0601],eax        # 85d0974 <_end+0x85ca95c>
     373:	90                   	nop
     374:	66 05 3a 06          	add    ax,0x63a
     378:	bc 06 01 08 82       	mov    esp,0x82080106
     37d:	05 05 06 f3 e6       	add    eax,0xe6f30605
     382:	05 23 06 01 3c       	add    eax,0x3c010623
     387:	3c 05                	cmp    al,0x5
     389:	0e                   	(bad)
     38a:	83 05 24 30 05 23 39 	add    DWORD PTR [rip+0x23053024],0x39        # 230533b5 <_end+0x2304d39d>
     391:	05 05 06 2f 05       	add    eax,0x52f0605
     396:	0e                   	(bad)
     397:	06                   	(bad)
     398:	01 05 36 76 05 0e    	add    DWORD PTR [rip+0xe057636],eax        # e0579d4 <_end+0xe0519bc>
     39e:	2c 05                	sub    al,0x5
     3a0:	05 06 4c 05 34       	add    eax,0x34054c06
     3a5:	06                   	(bad)
     3a6:	01 05 24 4a 08 4a    	add    DWORD PTR [rip+0x4a084a24],eax        # 4a084dd0 <_end+0x4a07edb8>
     3ac:	05 05 06 ae 05       	add    eax,0x5ae0605
     3b1:	2a 06                	sub    al,BYTE PTR [rsi]
     3b3:	59                   	pop    rcx
     3b4:	05 05 06 76 05       	add    eax,0x5760605
     3b9:	01 06                	add    DWORD PTR [rsi],eax
     3bb:	a2 08 ac 20 2e 2e 58 	movabs ds:0x905582e2e20ac08,al
     3c2:	05 09 
     3c4:	06                   	(bad)
     3c5:	03 7a 66             	add    edi,DWORD PTR [rdx+0x66]
     3c8:	05 36 06 01 58       	add    eax,0x58010636
     3cd:	05 4a f2 05 4f       	add    eax,0x4f05f24a
     3d2:	82                   	(bad)
     3d3:	05 05 4c 05 1e       	add    eax,0x1e054c05
     3d8:	80 05 05 06 76 05 44 	add    BYTE PTR [rip+0x5760605],0x44        # 57609e4 <_end+0x575a9cc>
     3df:	06                   	(bad)
     3e0:	03 df                	add    ebx,edi
     3e2:	00 2e                	add    BYTE PTR [rsi],ch
     3e4:	05 26 58 05 22       	add    eax,0x22055826
     3e9:	03 8d 7f 58 05 09    	add    ecx,DWORD PTR [rbp+0x905587f]
     3ef:	06                   	(bad)
     3f0:	03 15 ac 05 10 03    	add    edx,DWORD PTR [rip+0x31005ac]        # 31009a2 <_end+0x30fa98a>
     3f6:	db 00                	fild   DWORD PTR [rax]
     3f8:	01 05 05 13 14 05    	add    DWORD PTR [rip+0x5141305],eax        # 5141703 <_end+0x513b6eb>
     3fe:	26 06                	es (bad)
     400:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     403:	22 03                	and    al,BYTE PTR [rbx]
     405:	8d 7f 58             	lea    edi,[rdi+0x58]
     408:	05 26 03 f3 00       	add    eax,0xf30326
     40d:	3c 05                	cmp    al,0x5
     40f:	09 06                	or     DWORD PTR [rsi],eax
     411:	03 87 7f 58 05 05    	add    eax,DWORD PTR [rdi+0x505587f]
     417:	13 17                	adc    edx,DWORD PTR [rdi]
     419:	05 26 06 03 f3       	add    eax,0xf3030626
     41e:	00 01                	add    BYTE PTR [rcx],al
     420:	05 22 03 8d 7f       	add    eax,0x7f8d0322
     425:	3c 05                	cmp    al,0x5
     427:	1c 00                	sbb    al,0x0
     429:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     42c:	5a                   	pop    rdx
     42d:	05 22 d4 05 05       	add    eax,0x505d422
     432:	06                   	(bad)
     433:	3e 05 1c 00 02 04    	ds add eax,0x402001c
     439:	01 01                	add    DWORD PTR [rcx],eax
     43b:	00 02                	add    BYTE PTR [rdx],al
     43d:	04 01                	add    al,0x1
     43f:	06                   	(bad)
     440:	d6                   	(bad)
     441:	05 09 06 08 13       	add    eax,0x13080609
     446:	05 24 06 01 05       	add    eax,0x5010624
     44b:	1c 00                	sbb    al,0x0
     44d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     450:	57                   	push   rdi
     451:	05 24 4b 05 05       	add    eax,0x5054b24
     456:	00 02                	add    BYTE PTR [rdx],al
     458:	04 03                	add    al,0x3
     45a:	06                   	(bad)
     45b:	08 8f 05 1c 00 02    	or     BYTE PTR [rdi+0x2001c05],cl
     461:	04 01                	add    al,0x1
     463:	01 05 27 00 02 04    	add    DWORD PTR [rip+0x4020027],eax        # 4020490 <_end+0x401a478>
     469:	01 06                	add    DWORD PTR [rsi],eax
     46b:	03 f4                	add    esi,esp
     46d:	00 58 05             	add    BYTE PTR [rax+0x5],bl
     470:	28 56 05             	sub    BYTE PTR [rsi+0x5],dl
     473:	05 06 03 92 7f       	add    eax,0x7f920306
     478:	74 06                	je     480 <__abi_tag+0x104>
     47a:	01 06                	add    DWORD PTR [rsi],eax
     47c:	03 ee                	add    ebp,esi
     47e:	00 01                	add    BYTE PTR [rcx],al
     480:	05 34 06 01 05       	add    eax,0x5010634
     485:	13 03                	adc    eax,DWORD PTR [rbx]
     487:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     488:	82                   	(bad)
     489:	05 34 03 11 74       	add    eax,0x74110334
     48e:	05 05 06 68 05       	add    eax,0x5680605
     493:	1c 00                	sbb    al,0x0
     495:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     498:	01 05 09 08 67 05    	add    DWORD PTR [rip+0x5670809],eax        # 5670ca7 <_end+0x566ac8f>
     49e:	33 06                	xor    eax,DWORD PTR [rsi]
     4a0:	08 12                	or     BYTE PTR [rdx],dl
     4a2:	05 12 4a 05 09       	add    eax,0x9054a12
     4a7:	06                   	(bad)
     4a8:	30 05 19 01 05 0d    	xor    BYTE PTR [rip+0xd050119],al        # d0505c7 <_end+0xd04a5af>
     4ae:	91                   	xchg   ecx,eax
     4af:	05 44 06 01 05       	add    eax,0x5010644
     4b4:	36 03 71 4a          	ss add esi,DWORD PTR [rcx+0x4a]
     4b8:	05 44 03 0f 2e       	add    eax,0x2e0f0344
     4bd:	3c 05                	cmp    al,0x5
     4bf:	14 3c                	adc    al,0x3c
     4c1:	05 0d 06 59 06       	add    eax,0x659060d
     4c6:	01 05 0e 03 6e 4a    	add    DWORD PTR [rip+0x4a6e030e],eax        # 4a6e07da <_end+0x4a6da7c2>
     4cc:	4a 58                	rex.WX pop rax
     4ce:	05 11 06 0f 05       	add    eax,0x50f0611
     4d3:	05 13 14 14 05       	add    eax,0x5141413
     4d8:	36 06                	ss (bad)
     4da:	01 05 34 2e 05 24    	add    DWORD PTR [rip+0x24052e34],eax        # 24053314 <_end+0x2404d2fc>
     4e0:	4a 9e                	rex.WX sahf
     4e2:	05 05 06 5a 06       	add    eax,0x65a0605
     4e7:	01 05 0d 06 03 10    	add    DWORD PTR [rip+0x1003060d],eax        # 10030afa <_end+0x1002aae2>
     4ed:	01 05 22 06 01 05    	add    DWORD PTR [rip+0x5010622],eax        # 5010b15 <_end+0x500aafd>
     4f3:	2e 4a 05 22 4a 05 16 	cs rex.WX add rax,0x16054a22
     4fa:	3c 4a                	cmp    al,0x4a
     4fc:	05 19 06 0e 05       	add    eax,0x50e0619
     501:	27                   	(bad)
     502:	00 02                	add    BYTE PTR [rdx],al
     504:	04 01                	add    al,0x1
     506:	06                   	(bad)
     507:	47 05 05 00 02 04    	rex.RXB add eax,0x4020005
     50d:	02 06                	add    al,BYTE PTR [rsi]
     50f:	58                   	pop    rax
     510:	05 1c 00 02 04       	add    eax,0x402001c
     515:	01 01                	add    DWORD PTR [rcx],eax
     517:	00 02                	add    BYTE PTR [rdx],al
     519:	04 01                	add    al,0x1
     51b:	06                   	(bad)
     51c:	66 00 02             	data16 add BYTE PTR [rdx],al
     51f:	04 01                	add    al,0x1
     521:	9e                   	sahf
     522:	00 02                	add    BYTE PTR [rdx],al
     524:	04 01                	add    al,0x1
     526:	06                   	(bad)
     527:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
     52a:	00 02                	add    BYTE PTR [rdx],al
     52c:	04 01                	add    al,0x1
     52e:	06                   	(bad)
     52f:	c8 05 13 16          	enter  0x1305,0x16
     533:	05 09 06 47 05       	add    eax,0x5470609
     538:	11 06                	adc    DWORD PTR [rsi],eax
     53a:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 402055c <_end+0x401a544>
     540:	01 57 05             	add    DWORD PTR [rdi+0x5],edx
     543:	11 4b 05             	adc    DWORD PTR [rbx+0x5],ecx
     546:	05 00 02 04 03       	add    eax,0x3040200
     54b:	06                   	(bad)
     54c:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 402056e <_end+0x401a556>
     552:	01 01                	add    DWORD PTR [rcx],eax
     554:	00 02                	add    BYTE PTR [rdx],al
     556:	04 01                	add    al,0x1
     558:	06                   	(bad)
     559:	ac                   	lods   al,BYTE PTR ds:[rsi]
     55a:	05 05 06 16 05       	add    eax,0x5160605
     55f:	09 06                	or     DWORD PTR [rsi],eax
     561:	01 05 05 06 03 20    	add    DWORD PTR [rip+0x20030605],eax        # 20030b6c <_end+0x2002ab54>
     567:	58                   	pop    rax
     568:	06                   	(bad)
     569:	01 05 1a 03 92 7f    	add    DWORD PTR [rip+0x7f92031a],eax        # 7f920889 <_end+0x7f91a871>
     56f:	01 05 05 06 08 84    	add    DWORD PTR [rip+0xffffffff84080605],eax        # ffffffff84080b7a <_end+0xffffffff8407ab62>
     575:	05 1a 06 10 05       	add    eax,0x510061a
     57a:	0c 76                	or     al,0x76
     57c:	05 05 00 02 04       	add    eax,0x4020005
     581:	01 03                	add    DWORD PTR [rbx],eax
     583:	73 58                	jae    5dd <__abi_tag+0x261>
     585:	00 02                	add    BYTE PTR [rdx],al
     587:	04 01                	add    al,0x1
     589:	ba 00 02 04 01       	mov    edx,0x1040200
     58e:	74 00                	je     590 <__abi_tag+0x214>
     590:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     593:	74 05                	je     59a <__abi_tag+0x21e>
     595:	01 03                	add    DWORD PTR [rbx],eax
     597:	0e                   	(bad)
     598:	58                   	pop    rax
     599:	05 3a 06 d8 06       	add    eax,0x6d8063a
     59e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0ba9 <_end+0x54aab91>
     5a4:	3a 06                	cmp    al,BYTE PTR [rsi]
     5a6:	11 05 05 9f 06 e6    	adc    DWORD PTR [rip+0xffffffffe6069f05],eax        # ffffffffe606a4b1 <_end+0xffffffffe6064499>
     5ac:	05 23 06 01 3c       	add    eax,0x3c010623
     5b1:	3c 05                	cmp    al,0x5
     5b3:	0e                   	(bad)
     5b4:	67 05 14 30 05 23    	addr32 add eax,0x23053014
     5ba:	39 05 05 06 2f 05    	cmp    DWORD PTR [rip+0x52f0605],eax        # 52f0bc5 <_end+0x52eabad>
     5c0:	0e                   	(bad)
     5c1:	06                   	(bad)
     5c2:	01 05 24 76 05 0e    	add    DWORD PTR [rip+0xe057624],eax        # e057bec <_end+0xe051bd4>
     5c8:	48 05 05 06 3e 05    	add    rax,0x53e0605
     5ce:	14 06                	adc    al,0x6
     5d0:	01 3c 08             	add    DWORD PTR [rax+rcx*1],edi
     5d3:	3c 3c                	cmp    al,0x3c
     5d5:	05 05 00 02 04       	add    eax,0x4020005
     5da:	01 58 06             	add    DWORD PTR [rax+0x6],ebx
     5dd:	4c 05 32 06 01 05    	rex.WR add rax,0x5010632
     5e3:	01 08                	add    DWORD PTR [rax],ecx
     5e5:	15 05 46 39 05       	adc    eax,0x5394605
     5ea:	4b 82                	rex.WXB (bad)
     5ec:	05 1a 4a 05 05       	add    eax,0x5054a1a
     5f1:	06                   	(bad)
     5f2:	5a                   	pop    rdx
     5f3:	05 01 06 13 58       	add    eax,0x58130601
     5f8:	3c 2e                	cmp    al,0x2e
     5fa:	05 37 00 02 04       	add    eax,0x4020037
     5ff:	01 06                	add    DWORD PTR [rsi],eax
     601:	7d 05                	jge    608 <__abi_tag+0x28c>
     603:	47 00 02             	rex.RXB add BYTE PTR [r10],r8b
     606:	04 01                	add    al,0x1
     608:	06                   	(bad)
     609:	01 05 01 4f 58 82    	add    DWORD PTR [rip+0xffffffff82584f01],eax        # ffffffff82585510 <_end+0xffffffff8257f4f8>
     60f:	05 05 00 02 04       	add    eax,0x4020005
     614:	01 03                	add    DWORD PTR [rbx],eax
     616:	76 20                	jbe    638 <__abi_tag+0x2bc>
     618:	00 02                	add    BYTE PTR [rdx],al
     61a:	04 01                	add    al,0x1
     61c:	ba 00 02 04 01       	mov    edx,0x1040200
     621:	74 00                	je     623 <__abi_tag+0x2a7>
     623:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     626:	74 05                	je     62d <__abi_tag+0x2b1>
     628:	39 06                	cmp    DWORD PTR [rsi],eax
     62a:	03 0c ba             	add    ecx,DWORD PTR [rdx+rdi*4]
     62d:	06                   	(bad)
     62e:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0c39 <_end+0x54aac21>
     634:	39 06                	cmp    DWORD PTR [rsi],eax
     636:	11 05 05 4b 05 09    	adc    DWORD PTR [rip+0x9054b05],eax        # 9055141 <_end+0x904f129>
     63c:	06                   	(bad)
     63d:	03 10                	add    edx,DWORD PTR [rax]
     63f:	82                   	(bad)
     640:	13 13                	adc    edx,DWORD PTR [rbx]
     642:	14 13                	adc    al,0x13
     644:	13 13                	adc    edx,DWORD PTR [rbx]
     646:	15 04 04 05 01       	adc    eax,0x1050404
     64b:	03 d3                	add    edx,ebx
     64d:	05 01 05 03 14       	add    eax,0x14030501
     652:	05 21 06 01 08       	add    eax,0x8010621
     657:	2e 04 01             	cs add al,0x1
     65a:	05 09 06 03 ac       	add    eax,0xac030609
     65f:	7a 01                	jp     662 <__abi_tag+0x2e6>
     661:	04 04                	add    al,0x4
     663:	05 01 03 d2 05       	add    eax,0x5d20301
     668:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a71 <_end+0x2104ba59>
     66e:	06                   	(bad)
     66f:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     673:	05 09 06 03 ad       	add    eax,0xad030609
     678:	7a 01                	jp     67b <__abi_tag+0x2ff>
     67a:	04 04                	add    al,0x4
     67c:	05 01 03 d1 05       	add    eax,0x5d10301
     681:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051a8a <_end+0x2104ba72>
     687:	06                   	(bad)
     688:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     68c:	05 09 06 03 ae       	add    eax,0xae030609
     691:	7a 01                	jp     694 <__abi_tag+0x318>
     693:	04 04                	add    al,0x4
     695:	05 01 03 d0 05       	add    eax,0x5d00301
     69a:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041aa3 <_end+0x103ba8b>
     6a0:	05 17 06 03 b0       	add    eax,0xb0030617
     6a5:	7a 01                	jp     6a8 <__abi_tag+0x32c>
     6a7:	04 04                	add    al,0x4
     6a9:	05 21 03 d0 05       	add    eax,0x5d00321
     6ae:	3c 74                	cmp    al,0x74
     6b0:	04 01                	add    al,0x1
     6b2:	05 09 06 03 b0       	add    eax,0xb0030609
     6b7:	7a 01                	jp     6ba <__abi_tag+0x33e>
     6b9:	05 0d 1a 05 05       	add    eax,0x5051a0d
     6be:	18 05 1f 06 03 72    	sbb    BYTE PTR [rip+0x7203061f],al        # 72030ce3 <_end+0x7202accb>
     6c4:	01 05 0f 3c 05 41    	add    DWORD PTR [rip+0x41053c0f],eax        # 410542d9 <_end+0x4104e2c1>
     6ca:	36 3c 05             	ss cmp al,0x5
     6cd:	32 42 05             	xor    al,BYTE PTR [rdx+0x5]
     6d0:	40                   	rex
     6d1:	2e 05 21 4a 74 05    	cs add eax,0x5744a21
     6d7:	05 06 84 05 01       	add    eax,0x1058406
     6dc:	06                   	(bad)
     6dd:	5b                   	pop    rbx
     6de:	05 05 00 02 04       	add    eax,0x4020005
     6e3:	01 03                	add    DWORD PTR [rbx],eax
     6e5:	4e 58                	rex.WRX pop rax
     6e7:	00 02                	add    BYTE PTR [rdx],al
     6e9:	04 01                	add    al,0x1
     6eb:	ba 00 02 04 01       	mov    edx,0x1040200
     6f0:	74 00                	je     6f2 <__abi_tag+0x376>
     6f2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     6f5:	74 05                	je     6fc <__abi_tag+0x380>
     6f7:	23 06                	and    eax,DWORD PTR [rsi]
     6f9:	03 34 08             	add    esi,DWORD PTR [rax+rcx*1]
     6fc:	12 06                	adc    al,BYTE PTR [rsi]
     6fe:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b0d09 <_end+0x54aacf1>
     704:	23 06                	and    eax,DWORD PTR [rsi]
     706:	11 05 05 67 05 1c    	adc    DWORD PTR [rip+0x1c056705],eax        # 1c056e11 <_end+0x1c050df9>
     70c:	00 02                	add    BYTE PTR [rdx],al
     70e:	04 01                	add    al,0x1
     710:	5a                   	pop    rdx
     711:	00 02                	add    BYTE PTR [rdx],al
     713:	04 01                	add    al,0x1
     715:	06                   	(bad)
     716:	66 05 09 ad          	add    ax,0xad09
     71a:	05 11 06 01 05       	add    eax,0x5010611
     71f:	1c 00                	sbb    al,0x0
     721:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     724:	81 05 11 4b 05 05 00 	add    DWORD PTR [rip+0x5054b11],0x3040200        # 505523f <_end+0x504f227>
     72b:	02 04 03 
     72e:	06                   	(bad)
     72f:	8f 05 1c 00 02 04    	pop    QWORD PTR [rip+0x402001c]        # 4020751 <_end+0x401a739>
     735:	01 01                	add    DWORD PTR [rcx],eax
     737:	00 02                	add    BYTE PTR [rdx],al
     739:	04 01                	add    al,0x1
     73b:	06                   	(bad)
     73c:	58                   	pop    rax
     73d:	05 05 06 16 05       	add    eax,0x5160605
     742:	09 06                	or     DWORD PTR [rsi],eax
     744:	01 05 01 4b 05 09    	add    DWORD PTR [rip+0x9054b01],eax        # 905524b <_end+0x904f233>
     74a:	65 05 06 06 03 79    	gs add eax,0x79030606
     750:	58                   	pop    rax
     751:	05 05 00 02 04       	add    eax,0x4020005
     756:	01 06                	add    DWORD PTR [rsi],eax
     758:	13 00                	adc    eax,DWORD PTR [rax]
     75a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     75d:	08 90 05 29 06 03    	or     BYTE PTR [rax+0x3062905],dl
     763:	29 c8                	sub    eax,ecx
     765:	06                   	(bad)
     766:	01 05 05 06 4b 04    	add    DWORD PTR [rip+0x44b0605],eax        # 44b0d71 <_end+0x44aad59>
     76c:	05 05 01 03 99       	add    eax,0x99030105
     771:	7f 01                	jg     774 <__abi_tag+0x3f8>
     773:	05 03 14 04 01       	add    eax,0x1041403
     778:	05 29 06 03 e4       	add    eax,0xe4030629
     77d:	00 01                	add    BYTE PTR [rcx],al
     77f:	04 05                	add    al,0x5
     781:	05 17 03 9c 7f       	add    eax,0x7f9c0317
     786:	2e 04 01             	cs add al,0x1
     789:	05 29 03 e4 00       	add    eax,0xe40329
     78e:	74 04                	je     794 <__abi_tag+0x418>
     790:	05 05 17 03 9c       	add    eax,0x9c031705
     795:	7f 66                	jg     7fd <__abi_tag+0x481>
     797:	3c 04                	cmp    al,0x4
     799:	01 05 29 03 e4 00    	add    DWORD PTR [rip+0xe40329],eax        # e40ac8 <_end+0xe3aab0>
     79f:	01 04 05 05 17 03 9c 	add    DWORD PTR [rax*1-0x63fce8fb],eax
     7a6:	7f 58                	jg     800 <__abi_tag+0x484>
     7a8:	58                   	pop    rax
     7a9:	04 01                	add    al,0x1
     7ab:	05 05 06 03 e7       	add    eax,0xe7030605
     7b0:	00 01                	add    BYTE PTR [rcx],al
     7b2:	97                   	xchg   edi,eax
     7b3:	04 05                	add    al,0x5
     7b5:	05 01 03 90 7f       	add    eax,0x7f900301
     7ba:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051bc3 <_end+0x1704bbab>
     7c0:	06                   	(bad)
     7c1:	01 08                	add    DWORD PTR [rax],ecx
     7c3:	58                   	pop    rax
     7c4:	04 01                	add    al,0x1
     7c6:	05 05 06 03 ef       	add    eax,0xef030605
     7cb:	00 01                	add    BYTE PTR [rcx],al
     7cd:	04 05                	add    al,0x5
     7cf:	05 01 03 8f 7f       	add    eax,0x7f8f0301
     7d4:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041bdd <_end+0x103bbc5>
     7da:	05 0b 06 03 ef       	add    eax,0xef03060b
     7df:	00 01                	add    BYTE PTR [rcx],al
     7e1:	04 05                	add    al,0x5
     7e3:	05 17 03 91 7f       	add    eax,0x7f910317
     7e8:	4a 04 01             	rex.WX add al,0x1
     7eb:	05 0b 03 ef 00       	add    eax,0xef030b
     7f0:	08 12                	or     BYTE PTR [rdx],dl
     7f2:	04 05                	add    al,0x5
     7f4:	05 17 03 91 7f       	add    eax,0x7f910317
     7f9:	58                   	pop    rax
     7fa:	58                   	pop    rax
     7fb:	04 01                	add    al,0x1
     7fd:	05 05 06 03 f1       	add    eax,0xf1030605
     802:	00 01                	add    BYTE PTR [rcx],al
     804:	05 1c 00 02 04       	add    eax,0x402001c
     809:	01 01                	add    DWORD PTR [rcx],eax
     80b:	05 09 08 21 04       	add    eax,0x4210809
     810:	05 05 01 03 8c       	add    eax,0x8c030105
     815:	7f 01                	jg     818 <__abi_tag+0x49c>
     817:	05 03 14 05 17       	add    eax,0x17051403
     81c:	06                   	(bad)
     81d:	01 08                	add    DWORD PTR [rax],ecx
     81f:	12 04 01             	adc    al,BYTE PTR [rcx+rax*1]
     822:	05 09 06 03 f3       	add    eax,0xf3030609
     827:	00 01                	add    BYTE PTR [rcx],al
     829:	05 13 06 01 05       	add    eax,0x5010613
     82e:	1c 00                	sbb    al,0x0
     830:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     833:	80 05 13 4c 05 05 00 	add    BYTE PTR [rip+0x5054c13],0x0        # 505544d <_end+0x504f435>
     83a:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
     83d:	06                   	(bad)
     83e:	8e 05 1c 00 02 04    	mov    es,WORD PTR [rip+0x402001c]        # 4020860 <_end+0x401a848>
     844:	01 01                	add    DWORD PTR [rcx],eax
     846:	00 02                	add    BYTE PTR [rdx],al
     848:	04 01                	add    al,0x1
     84a:	06                   	(bad)
     84b:	58                   	pop    rax
     84c:	05 05 06 16 04       	add    eax,0x4160605
     851:	05 05 01 03 89       	add    eax,0x89030105
     856:	7f 01                	jg     859 <__abi_tag+0x4dd>
     858:	05 03 14 04 01       	add    eax,0x1041403
     85d:	05 01 06 03 f6       	add    eax,0xf6030601
     862:	00 01                	add    BYTE PTR [rcx],al
     864:	04 05                	add    al,0x5
     866:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     86b:	4a 04 01             	rex.WX add al,0x1
     86e:	05 01 03 f6 00       	add    eax,0xf60301
     873:	3c 2e                	cmp    al,0x2e
     875:	04 05                	add    al,0x5
     877:	05 17 03 8a 7f       	add    eax,0x7f8a0317
     87c:	4a 82                	rex.WX (bad)
     87e:	04 01                	add    al,0x1
     880:	05 09 06 03 e8       	add    eax,0xe8030609
     885:	00 01                	add    BYTE PTR [rcx],al
     887:	04 05                	add    al,0x5
     889:	05 01 03 96 7f       	add    eax,0x7f960301
     88e:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17051c97 <_end+0x1704bc7f>
     894:	06                   	(bad)
     895:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
     89b:	06                   	(bad)
     89c:	03 e9                	add    ebp,ecx
     89e:	00 01                	add    BYTE PTR [rcx],al
     8a0:	04 05                	add    al,0x5
     8a2:	05 01 03 95 7f       	add    eax,0x7f950301
     8a7:	01 05 03 14 02 02    	add    DWORD PTR [rip+0x2021403],eax        # 2021cb0 <_end+0x201bc98>
     8ad:	00 01                	add    BYTE PTR [rcx],al
     8af:	01 f8                	add    eax,edi
     8b1:	06                   	(bad)
     8b2:	00 00                	add    BYTE PTR [rax],al
     8b4:	05 00 08 00 90       	add    eax,0x90000800
     8b9:	00 00                	add    BYTE PTR [rax],al
     8bb:	00 01                	add    BYTE PTR [rcx],al
     8bd:	01 01                	add    DWORD PTR [rcx],eax
     8bf:	fb                   	sti
     8c0:	0e                   	(bad)
     8c1:	0d 00 01 01 01       	or     eax,0x1010100
     8c6:	01 00                	add    DWORD PTR [rax],eax
     8c8:	00 00                	add    BYTE PTR [rax],al
     8ca:	01 00                	add    DWORD PTR [rax],eax
     8cc:	00 01                	add    BYTE PTR [rcx],al
     8ce:	01 01                	add    DWORD PTR [rcx],eax
     8d0:	1f                   	(bad)
     8d1:	09 00                	or     DWORD PTR [rax],eax
     8d3:	00 00                	add    BYTE PTR [rax],al
     8d5:	00 2f                	add    BYTE PTR [rdi],ch
     8d7:	00 00                	add    BYTE PTR [rax],al
     8d9:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
     8dc:	00 00                	add    BYTE PTR [rax],al
     8de:	77 00                	ja     8e0 <__abi_tag+0x564>
     8e0:	00 00                	add    BYTE PTR [rax],al
     8e2:	41 00 00             	add    BYTE PTR [r8],al
     8e5:	00 9a 00 00 00 ae    	add    BYTE PTR [rdx-0x52000000],bl
     8eb:	00 00                	add    BYTE PTR [rax],al
     8ed:	00 c7                	add    bh,al
     8ef:	00 00                	add    BYTE PTR [rax],al
     8f1:	00 dd                	add    ch,bl
     8f3:	00 00                	add    BYTE PTR [rax],al
     8f5:	00 02                	add    BYTE PTR [rdx],al
     8f7:	01 1f                	add    DWORD PTR [rdi],ebx
     8f9:	02 0f                	add    cl,BYTE PTR [rdi]
     8fb:	10 0c 02             	adc    BYTE PTR [rdx+rax*1],cl
     8fe:	00 00                	add    BYTE PTR [rax],al
     900:	01 0c 02             	add    DWORD PTR [rdx+rax*1],ecx
     903:	00 00                	add    BYTE PTR [rax],al
     905:	01 bc 01 00 00 02 19 	add    DWORD PTR [rcx+rax*1+0x19020000],edi
     90c:	01 00                	add    DWORD PTR [rax],eax
     90e:	00 03                	add    BYTE PTR [rbx],al
     910:	1b 02                	sbb    eax,DWORD PTR [rdx]
     912:	00 00                	add    BYTE PTR [rax],al
     914:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
     917:	00 00                	add    BYTE PTR [rax],al
     919:	03 10                	add    edx,DWORD PTR [rax]
     91b:	01 00                	add    DWORD PTR [rax],eax
     91d:	00 02                	add    BYTE PTR [rdx],al
     91f:	07                   	(bad)
     920:	01 00                	add    DWORD PTR [rax],eax
     922:	00 04 21             	add    BYTE PTR [rcx+riz*1],al
     925:	01 00                	add    DWORD PTR [rax],eax
     927:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # a56 <__abi_tag+0x6da>
     92d:	06                   	(bad)
     92e:	33 01                	xor    eax,DWORD PTR [rcx]
     930:	00 00                	add    BYTE PTR [rax],al
     932:	03 42 01             	add    eax,DWORD PTR [rdx+0x1]
     935:	00 00                	add    BYTE PTR [rax],al
     937:	03 07                	add    eax,DWORD PTR [rdi]
     939:	01 00                	add    DWORD PTR [rax],eax
     93b:	00 03                	add    BYTE PTR [rbx],al
     93d:	07                   	(bad)
     93e:	01 00                	add    DWORD PTR [rax],eax
     940:	00 05 d1 01 00 00    	add    BYTE PTR [rip+0x1d1],al        # b17 <__abi_tag+0x79b>
     946:	07                   	(bad)
     947:	75 01                	jne    94a <__abi_tag+0x5ce>
     949:	00 00                	add    BYTE PTR [rax],al
     94b:	08 05 2a 00 09 02    	or     BYTE PTR [rip+0x209002a],al        # 209097b <_end+0x208a963>
     951:	20 1a                	and    BYTE PTR [rdx],bl
     953:	00 00                	add    BYTE PTR [rax],al
     955:	00 00                	add    BYTE PTR [rax],al
     957:	00 00                	add    BYTE PTR [rax],al
     959:	03 0a                	add    ecx,DWORD PTR [rdx]
     95b:	01 06                	add    DWORD PTR [rsi],eax
     95d:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b0f68 <_end+0x134aaf50>
     963:	13 13                	adc    edx,DWORD PTR [rbx]
     965:	13 05 22 06 01 05    	adc    eax,DWORD PTR [rip+0x5010622]        # 5010f8d <_end+0x500af75>
     96b:	05 06 4c 05 17       	add    eax,0x17054c06
     970:	00 02                	add    BYTE PTR [rdx],al
     972:	04 01                	add    al,0x1
     974:	01 00                	add    DWORD PTR [rax],eax
     976:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     979:	06                   	(bad)
     97a:	ba 05 2a 03 79       	mov    edx,0x79032a05
     97f:	01 05 0e 4b 05 27    	add    DWORD PTR [rip+0x27054b0e],eax        # 27055493 <_end+0x2704f47b>
     985:	03 a6 01 66 05 19    	add    esp,DWORD PTR [rsi+0x19056601]
     98b:	c7 05 20 e5 d6 05 09 	mov    DWORD PTR [rip+0x5d6e520],0xe1030609        # 5d6eeb5 <_end+0x5d68e9d>
     992:	06 03 e1 
     995:	7e 01                	jle    998 <__abi_tag+0x61c>
     997:	05 0f 06 01 05       	add    eax,0x501060f
     99c:	09 06                	or     DWORD PTR [rsi],eax
     99e:	3d 05 11 03 94       	cmp    eax,0x94031105
     9a3:	01 01                	add    DWORD PTR [rcx],eax
     9a5:	05 05 13 05 11       	add    eax,0x11051305
     9aa:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
     9ad:	05 05 13 05 3b       	add    eax,0x3b051305
     9b2:	06                   	(bad)
     9b3:	01 05 1f 3c 2e 05    	add    DWORD PTR [rip+0x52e3c1f],eax        # 52e45d8 <_end+0x52de5c0>
     9b9:	3b 66 05             	cmp    esp,DWORD PTR [rsi+0x5]
     9bc:	09 58 05             	or     DWORD PTR [rax+0x5],ebx
     9bf:	05 06 2f 05 1f       	add    eax,0x1f052f06
     9c4:	06                   	(bad)
     9c5:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f053806 <_end+0x1f04d7ee>
     9cb:	3c 05                	cmp    al,0x5
     9cd:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     9d4:	66 05 05 06          	add    ax,0x605
     9d8:	2f                   	(bad)
     9d9:	05 1f 06 01 05       	add    eax,0x501061f
     9de:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     9e0:	3c 05                	cmp    al,0x5
     9e2:	1f                   	(bad)
     9e3:	2e 3c 05             	cs cmp al,0x5
     9e6:	0e                   	(bad)
     9e7:	03 0f                	add    ecx,DWORD PTR [rdi]
     9e9:	01 05 1f 03 71 2e    	add    DWORD PTR [rip+0x2e71031f],eax        # 2e710d0e <_end+0x2e70acf6>
     9ef:	05 3b 66 05 09       	add    eax,0x905663b
     9f4:	66 05 05 06          	add    ax,0x605
     9f8:	2f                   	(bad)
     9f9:	13 30                	adc    esi,DWORD PTR [rax]
     9fb:	06                   	(bad)
     9fc:	01 06                	add    DWORD PTR [rsi],eax
     9fe:	17                   	(bad)
     9ff:	14 05                	adc    al,0x5
     a01:	2b 06                	sub    eax,DWORD PTR [rsi]
     a03:	01 05 0e 66 05 05    	add    DWORD PTR [rip+0x505660e],eax        # 5057017 <_end+0x5050fff>
     a09:	06                   	(bad)
     a0a:	4c 14 05             	rex.WR adc al,0x5
     a0d:	17                   	(bad)
     a0e:	00 02                	add    BYTE PTR [rdx],al
     a10:	04 01                	add    al,0x1
     a12:	01 05 09 83 05 19    	add    DWORD PTR [rip+0x19058309],eax        # 19058d21 <_end+0x19052d09>
     a18:	06                   	(bad)
     a19:	01 05 09 82 05 0d    	add    DWORD PTR [rip+0xd058209],eax        # d058c28 <_end+0xd052c10>
     a1f:	06                   	(bad)
     a20:	59                   	pop    rcx
     a21:	05 27 06 01 05       	add    eax,0x5010627
     a26:	20 3c 05 27 3c 05 20 	and    BYTE PTR [rax*1+0x20053c27],bh
     a2d:	2e 05 11 3c 05 05    	cs add eax,0x5053c11
     a33:	00 02                	add    BYTE PTR [rdx],al
     a35:	04 02                	add    al,0x2
     a37:	06                   	(bad)
     a38:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 4020a55 <_end+0x401aa3d>
     a3e:	01 3c 00             	add    DWORD PTR [rax+rax*1],edi
     a41:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     a44:	06                   	(bad)
     a45:	58                   	pop    rax
     a46:	05 05 06 18 05       	add    eax,0x5180605
     a4b:	11 03                	adc    DWORD PTR [rbx],eax
     a4d:	68 01 05 05 13       	push   0x13050501
     a52:	05 3b 06 01 05       	add    eax,0x501063b
     a57:	1f                   	(bad)
     a58:	3c 2e                	cmp    al,0x2e
     a5a:	05 17 00 02 04       	add    eax,0x4020017
     a5f:	01 03                	add    DWORD PTR [rbx],eax
     a61:	f3 7e 01             	repz jle a65 <__abi_tag+0x6e9>
     a64:	05 1f 03 8d 01       	add    eax,0x18d031f
     a69:	4a 05 3b 66 05 09    	rex.WX add rax,0x905663b
     a6f:	58                   	pop    rax
     a70:	05 05 06 2f 05       	add    eax,0x52f0605
     a75:	1f                   	(bad)
     a76:	06                   	(bad)
     a77:	01 05 3b 2e 05 1f    	add    DWORD PTR [rip+0x1f052e3b],eax        # 1f0538b8 <_end+0x1f04d8a0>
     a7d:	3c 05                	cmp    al,0x5
     a7f:	3b 3c 05 1f 58 05 09 	cmp    edi,DWORD PTR [rax*1+0x905581f]
     a86:	66 05 05 06          	add    ax,0x605
     a8a:	2f                   	(bad)
     a8b:	05 1f 06 01 05       	add    eax,0x501061f
     a90:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
     a92:	05 1f 3c 05 3b       	add    eax,0x3b053c1f
     a97:	3c 05                	cmp    al,0x5
     a99:	1f                   	(bad)
     a9a:	58                   	pop    rax
     a9b:	05 09 66 05 05       	add    eax,0x5056609
     aa0:	06                   	(bad)
     aa1:	2f                   	(bad)
     aa2:	13 30                	adc    esi,DWORD PTR [rax]
     aa4:	06                   	(bad)
     aa5:	01 06                	add    DWORD PTR [rsi],eax
     aa7:	03 13                	add    edx,DWORD PTR [rbx]
     aa9:	01 06                	add    DWORD PTR [rsi],eax
     aab:	01 05 0e 00 02 04    	add    DWORD PTR [rip+0x402000e],eax        # 4020abf <_end+0x401aaa7>
     ab1:	01 03                	add    DWORD PTR [rbx],eax
     ab3:	dc 7e 01             	fdivr  QWORD PTR [rsi+0x1]
     ab6:	05 05 00 02 04       	add    eax,0x4020005
     abb:	03 06                	add    eax,DWORD PTR [rsi]
     abd:	3a 05 17 00 02 04    	cmp    al,BYTE PTR [rip+0x4020017]        # 4020ada <_end+0x401aac2>
     ac3:	01 01                	add    DWORD PTR [rcx],eax
     ac5:	05 01 06 96 58       	add    eax,0x58960601
     aca:	05 2e 06 a0 06       	add    eax,0x6a0062e
     acf:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b10da <_end+0x134ab0c2>
     ad5:	13 13                	adc    edx,DWORD PTR [rbx]
     ad7:	05 22 06 01 05       	add    eax,0x5010622
     adc:	05 06 4c 05 17       	add    eax,0x17054c06
     ae1:	00 02                	add    BYTE PTR [rdx],al
     ae3:	04 01                	add    al,0x1
     ae5:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     ae8:	05 21 06 03 a4       	add    eax,0xa4030621
     aed:	06                   	(bad)
     aee:	82                   	(bad)
     aef:	82                   	(bad)
     af0:	ba 04 01 05 0e       	mov    edx,0xe050104
     af5:	03 d7                	add    edx,edi
     af7:	79 01                	jns    afa <__abi_tag+0x77e>
     af9:	05 09 06 c0 13       	add    eax,0x13c00609
     afe:	04 02                	add    al,0x2
     b00:	05 01 03 a0 06       	add    eax,0x6a00301
     b05:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f0e <_end+0x2104bef6>
     b0b:	06                   	(bad)
     b0c:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
     b0f:	05 17 00 02 04       	add    eax,0x4020017
     b14:	01 03                	add    DWORD PTR [rbx],eax
     b16:	dc 79 2e             	fdivr  QWORD PTR [rcx+0x2e]
     b19:	04 02                	add    al,0x2
     b1b:	05 21 03 a4 06       	add    eax,0x6a40321
     b20:	4a                   	rex.WX
     b21:	66 04 01             	data16 add al,0x1
     b24:	05 0e 00 02 04       	add    eax,0x402000e
     b29:	01 03                	add    DWORD PTR [rbx],eax
     b2b:	de 79 01             	fidivr WORD PTR [rcx+0x1]
     b2e:	05 05 00 02 04       	add    eax,0x4020005
     b33:	03 06                	add    eax,DWORD PTR [rsi]
     b35:	2c 05                	sub    al,0x5
     b37:	17                   	(bad)
     b38:	00 02                	add    BYTE PTR [rdx],al
     b3a:	04 01                	add    al,0x1
     b3c:	01 00                	add    DWORD PTR [rax],eax
     b3e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     b41:	06                   	(bad)
     b42:	9e                   	sahf
     b43:	05 0e 0d 05 05       	add    eax,0x5050d0e
     b48:	06                   	(bad)
     b49:	03 0a                	add    ecx,DWORD PTR [rdx]
     b4b:	2e 05 01 06 13 05    	cs add eax,0x5130601
     b51:	34 06                	xor    al,0x6
     b53:	68 06 01 05 05       	push   0x5050106
     b58:	06                   	(bad)
     b59:	4b 13 13             	rex.WXB adc rdx,QWORD PTR [r11]
     b5c:	14 13                	adc    al,0x13
     b5e:	13 13                	adc    edx,DWORD PTR [rbx]
     b60:	15 04 02 05 01       	adc    eax,0x1050204
     b65:	03 96 06 01 05 03    	add    edx,DWORD PTR [rsi+0x3050106]
     b6b:	14 05                	adc    al,0x5
     b6d:	21 06                	and    DWORD PTR [rsi],eax
     b6f:	01 90 82 04 01 05    	add    DWORD PTR [rax+0x5010482],edx
     b75:	05 06 03 e9 79       	add    eax,0x79e90306
     b7a:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
     b7d:	05 01 03 95 06       	add    eax,0x6950301
     b82:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051f8b <_end+0x2104bf73>
     b88:	06                   	(bad)
     b89:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     b8d:	05 05 06 03 ea       	add    eax,0xea030605
     b92:	79 01                	jns    b95 <__abi_tag+0x819>
     b94:	04 02                	add    al,0x2
     b96:	05 01 03 94 06       	add    eax,0x6940301
     b9b:	01 05 03 14 05 21    	add    DWORD PTR [rip+0x21051403],eax        # 21051fa4 <_end+0x2104bf8c>
     ba1:	06                   	(bad)
     ba2:	01 74 04 01          	add    DWORD PTR [rsp+rax*1+0x1],esi
     ba6:	05 05 06 03 eb       	add    eax,0xeb030605
     bab:	79 01                	jns    bae <__abi_tag+0x832>
     bad:	04 02                	add    al,0x2
     baf:	05 01 03 93 06       	add    eax,0x6930301
     bb4:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1041fbd <_end+0x103bfa5>
     bba:	05 13 06 03 ed       	add    eax,0xed030613
     bbf:	79 01                	jns    bc2 <__abi_tag+0x846>
     bc1:	04 02                	add    al,0x2
     bc3:	05 21 03 93 06       	add    eax,0x6930321
     bc8:	2e 74 04             	cs je  bcf <__abi_tag+0x853>
     bcb:	01 05 05 06 03 ed    	add    DWORD PTR [rip+0xffffffffed030605],eax        # ffffffffed0311d6 <_end+0xffffffffed02b1be>
     bd1:	79 01                	jns    bd4 <__abi_tag+0x858>
     bd3:	14 05                	adc    al,0x5
     bd5:	1b 06                	sbb    eax,DWORD PTR [rsi]
     bd7:	10 05 0b 2e 05 01    	adc    BYTE PTR [rip+0x1052e0b],al        # 10539e8 <_end+0x104d9d0>
     bdd:	31 05 2c 06 f4 06    	xor    DWORD PTR [rip+0x6f4062c],eax        # 6f4120f <_end+0x6f3b1f7>
     be3:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b11ee <_end+0x134ab1d6>
     be9:	13 13                	adc    edx,DWORD PTR [rbx]
     beb:	05 0e 06 01 05       	add    eax,0x501060e
     bf0:	14 4b                	adc    al,0x4b
     bf2:	05 0e 3b 05 05       	add    eax,0x5053b0e
     bf7:	06                   	(bad)
     bf8:	2f                   	(bad)
     bf9:	14 13                	adc    al,0x13
     bfb:	14 05                	adc    al,0x5
     bfd:	13 01                	adc    eax,DWORD PTR [rcx]
     bff:	05 0e 06 b7 05       	add    eax,0x5b7060e
     c04:	09 06                	or     DWORD PTR [rsi],eax
     c06:	e9 13 13 13 14       	jmp    14131f1e <_end+0x1412bf06>
     c0b:	05 11 06 01 05       	add    eax,0x5010611
     c10:	09 06                	or     DWORD PTR [rsi],eax
     c12:	75 05                	jne    c19 <__abi_tag+0x89d>
     c14:	0e                   	(bad)
     c15:	06                   	(bad)
     c16:	18 47 05             	sbb    BYTE PTR [rdi+0x5],al
     c19:	1c 63                	sbb    al,0x63
     c1b:	05 11 66 05 09       	add    eax,0x9056611
     c20:	06                   	(bad)
     c21:	3d 14 13 05 11       	cmp    eax,0x11051314
     c26:	06                   	(bad)
     c27:	0f 05                	syscall
     c29:	0e                   	(bad)
     c2a:	69 05 09 06 30 13 05 	imul   eax,DWORD PTR [rip+0x13300609],0x71031305        # 1330123d <_end+0x132fb225>
     c31:	13 03 71 
     c34:	01 06                	add    DWORD PTR [rsi],eax
     c36:	58                   	pop    rax
     c37:	2e 05 05 06 03 12    	cs add eax,0x12030605
     c3d:	3c 05                	cmp    al,0x5
     c3f:	06                   	(bad)
     c40:	03 09                	add    ecx,DWORD PTR [rcx]
     c42:	e4 05                	in     al,0x5
     c44:	05 14 05 12 06       	add    eax,0x6120514
     c49:	01 05 0a 58 05 05    	add    DWORD PTR [rip+0x505580a],eax        # 5056459 <_end+0x5050441>
     c4f:	06                   	(bad)
     c50:	2f                   	(bad)
     c51:	05 0a 06 01 05       	add    eax,0x501060a
     c56:	05 06 67 05 12       	add    eax,0x12056706
     c5b:	06                   	(bad)
     c5c:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a1267 <_end+0x559b24f>
     c62:	0a 06                	or     al,BYTE PTR [rsi]
     c64:	10 05 01 31 05 09    	adc    BYTE PTR [rip+0x9053101],al        # 9053d6b <_end+0x904dd53>
     c6a:	06                   	(bad)
     c6b:	03 72 90             	add    esi,DWORD PTR [rdx-0x70]
     c6e:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 501128d <_end+0x500b275>
     c74:	0e                   	(bad)
     c75:	74 05                	je     c7c <__abi_tag+0x900>
     c77:	09 06                	or     DWORD PTR [rsi],eax
     c79:	2f                   	(bad)
     c7a:	13 05 19 06 01 05    	adc    eax,DWORD PTR [rip+0x5010619]        # 5011299 <_end+0x500b281>
     c80:	0e                   	(bad)
     c81:	74 05                	je     c88 <__abi_tag+0x90c>
     c83:	09 06                	or     DWORD PTR [rsi],eax
     c85:	2f                   	(bad)
     c86:	13 05 17 06 01 05    	adc    eax,DWORD PTR [rip+0x5010617]        # 50112a3 <_end+0x500b28b>
     c8c:	0e                   	(bad)
     c8d:	3c 05                	cmp    al,0x5
     c8f:	09 06                	or     DWORD PTR [rsi],eax
     c91:	2f                   	(bad)
     c92:	05 0e 06 01 66       	add    eax,0x6601060e
     c97:	03 63 3c             	add    esp,DWORD PTR [rbx+0x3c]
     c9a:	05 28 06 03 27       	add    eax,0x27030628
     c9f:	f2 06                	repnz (bad)
     ca1:	01 82 05 05 06 3d    	add    DWORD PTR [rdx+0x3d060505],eax
     ca7:	13 13                	adc    edx,DWORD PTR [rbx]
     ca9:	14 05                	adc    al,0x5
     cab:	16                   	(bad)
     cac:	00 02                	add    BYTE PTR [rdx],al
     cae:	04 01                	add    al,0x1
     cb0:	01 05 2b 00 02 04    	add    DWORD PTR [rip+0x402002b],eax        # 4020ce1 <_end+0x401acc9>
     cb6:	01 06                	add    DWORD PTR [rsi],eax
     cb8:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020cd4 <_end+0x401acbc>
     cbe:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
     cc1:	09 06                	or     DWORD PTR [rsi],eax
     cc3:	02 31                	add    dh,BYTE PTR [rcx]
     cc5:	13 13                	adc    edx,DWORD PTR [rbx]
     cc7:	05 0e 06 01 05       	add    eax,0x501060e
     ccc:	05 00 02 04 02       	add    eax,0x2040200
     cd1:	06                   	(bad)
     cd2:	48 05 16 00 02 04    	add    rax,0x4020016
     cd8:	01 01                	add    DWORD PTR [rcx],eax
     cda:	05 09 02 3d 13       	add    eax,0x133d0209
     cdf:	13 05 2e 06 11 05    	adc    eax,DWORD PTR [rip+0x511062e]        # 5111313 <_end+0x510b2fb>
     ce5:	0e                   	(bad)
     ce6:	3d 05 05 00 02       	cmp    eax,0x2000505
     ceb:	04 02                	add    al,0x2
     ced:	06                   	(bad)
     cee:	48 05 3a 00 02 04    	add    rax,0x402003a
     cf4:	02 06                	add    al,BYTE PTR [rsi]
     cf6:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d12 <_end+0x401acfa>
     cfc:	01 06                	add    DWORD PTR [rsi],eax
     cfe:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d04:	2e 06                	cs (bad)
     d06:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a1a <_end+0x504ea02>
     d0c:	00 02                	add    BYTE PTR [rdx],al
     d0e:	04 02                	add    al,0x2
     d10:	06                   	(bad)
     d11:	48 05 3a 00 02 04    	add    rax,0x402003a
     d17:	02 06                	add    al,BYTE PTR [rsi]
     d19:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d35 <_end+0x401ad1d>
     d1f:	01 06                	add    DWORD PTR [rsi],eax
     d21:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d27:	2e 06                	cs (bad)
     d29:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a3d <_end+0x504ea25>
     d2f:	00 02                	add    BYTE PTR [rdx],al
     d31:	04 02                	add    al,0x2
     d33:	06                   	(bad)
     d34:	48 05 3a 00 02 04    	add    rax,0x402003a
     d3a:	02 06                	add    al,BYTE PTR [rsi]
     d3c:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d58 <_end+0x401ad40>
     d42:	01 06                	add    DWORD PTR [rsi],eax
     d44:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d4a:	2e 06                	cs (bad)
     d4c:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a60 <_end+0x504ea48>
     d52:	00 02                	add    BYTE PTR [rdx],al
     d54:	04 02                	add    al,0x2
     d56:	06                   	(bad)
     d57:	48 05 3a 00 02 04    	add    rax,0x402003a
     d5d:	02 06                	add    al,BYTE PTR [rsi]
     d5f:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d7b <_end+0x401ad63>
     d65:	01 06                	add    DWORD PTR [rsi],eax
     d67:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d6d:	2e 06                	cs (bad)
     d6f:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054a83 <_end+0x504ea6b>
     d75:	00 02                	add    BYTE PTR [rdx],al
     d77:	04 02                	add    al,0x2
     d79:	06                   	(bad)
     d7a:	48 05 3a 00 02 04    	add    rax,0x402003a
     d80:	02 06                	add    al,BYTE PTR [rsi]
     d82:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 4020d9e <_end+0x401ad86>
     d88:	01 06                	add    DWORD PTR [rsi],eax
     d8a:	4a 05 09 59 13 05    	rex.WX add rax,0x5135909
     d90:	2e 06                	cs (bad)
     d92:	11 05 3a 00 02 04    	adc    DWORD PTR [rip+0x402003a],eax        # 4020dd2 <_end+0x401adba>
     d98:	02 3b                	add    bh,BYTE PTR [rbx]
     d9a:	05 0e 3e 05 05       	add    eax,0x5053e0e
     d9f:	00 02                	add    BYTE PTR [rdx],al
     da1:	04 02                	add    al,0x2
     da3:	06                   	(bad)
     da4:	48 05 16 00 02 04    	add    rax,0x4020016
     daa:	01 01                	add    DWORD PTR [rcx],eax
     dac:	05 09 59 13 05       	add    eax,0x5135909
     db1:	2e 06                	cs (bad)
     db3:	11 05 0e 3d 05 05    	adc    DWORD PTR [rip+0x5053d0e],eax        # 5054ac7 <_end+0x504eaaf>
     db9:	00 02                	add    BYTE PTR [rdx],al
     dbb:	04 02                	add    al,0x2
     dbd:	06                   	(bad)
     dbe:	3a 05 16 00 02 04    	cmp    al,BYTE PTR [rip+0x4020016]        # 4020dda <_end+0x401adc2>
     dc4:	01 01                	add    DWORD PTR [rcx],eax
     dc6:	00 02                	add    BYTE PTR [rdx],al
     dc8:	04 01                	add    al,0x1
     dca:	06                   	(bad)
     dcb:	01 05 1d 00 02 04    	add    DWORD PTR [rip+0x402001d],eax        # 4020dee <_end+0x401add6>
     dd1:	01 42 05             	add    DWORD PTR [rdx+0x5],eax
     dd4:	1f                   	(bad)
     dd5:	00 02                	add    BYTE PTR [rdx],al
     dd7:	04 01                	add    al,0x1
     dd9:	06                   	(bad)
     dda:	2e 05 24 06 15 05    	cs add eax,0x5150624
     de0:	1f                   	(bad)
     de1:	00 02                	add    BYTE PTR [rdx],al
     de3:	04 01                	add    al,0x1
     de5:	71 00                	jno    de7 <__abi_tag+0xa6b>
     de7:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     dea:	74 05                	je     df1 <__abi_tag+0xa75>
     dec:	0b 11                	or     edx,DWORD PTR [rcx]
     dee:	05 09 06 76 05       	add    eax,0x5760609
     df3:	2e 06                	cs (bad)
     df5:	01 05 17 4a 05 1f    	add    DWORD PTR [rip+0x1f054a17],eax        # 1f055812 <_end+0x1f04f7fa>
     dfb:	00 02                	add    BYTE PTR [rdx],al
     dfd:	04 01                	add    al,0x1
     dff:	3b 05 0f 4b 05 05    	cmp    eax,DWORD PTR [rip+0x5054b0f]        # 5055914 <_end+0x504f8fc>
     e05:	00 02                	add    BYTE PTR [rdx],al
     e07:	04 03                	add    al,0x3
     e09:	06                   	(bad)
     e0a:	2d 05 1f 00 02       	sub    eax,0x2001f05
     e0f:	04 01                	add    al,0x1
     e11:	01 00                	add    DWORD PTR [rax],eax
     e13:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e16:	06                   	(bad)
     e17:	58                   	pop    rax
     e18:	05 09 06 16 05       	add    eax,0x5160609
     e1d:	05 00 02 04 03       	add    eax,0x3040200
     e22:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e53 <_end+0x401ae3b>
     e28:	01 01                	add    DWORD PTR [rcx],eax
     e2a:	05 09 67 05 05       	add    eax,0x5056709
     e2f:	00 02                	add    BYTE PTR [rdx],al
     e31:	04 03                	add    al,0x3
     e33:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e64 <_end+0x401ae4c>
     e39:	01 01                	add    DWORD PTR [rcx],eax
     e3b:	05 09 67 05 05       	add    eax,0x5056709
     e40:	00 02                	add    BYTE PTR [rdx],al
     e42:	04 03                	add    al,0x3
     e44:	11 05 2b 00 02 04    	adc    DWORD PTR [rip+0x402002b],eax        # 4020e75 <_end+0x401ae5d>
     e4a:	01 01                	add    DWORD PTR [rcx],eax
     e4c:	05 0f 06 13 58       	add    eax,0x5813060f
     e51:	74 05                	je     e58 <__abi_tag+0xadc>
     e53:	05 06 14 14 05       	add    eax,0x5141406
     e58:	1a 00                	sbb    al,BYTE PTR [rax]
     e5a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e5d:	06                   	(bad)
     e5e:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053f65 <_end+0xf04df4d>
     e64:	45 3c 05             	rex.RB cmp al,0x5
     e67:	05 06 14 14 05       	add    eax,0x5141406
     e6c:	1a 00                	sbb    al,BYTE PTR [rax]
     e6e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e71:	06                   	(bad)
     e72:	10 05 01 31 05 0f    	adc    BYTE PTR [rip+0xf053101],al        # f053f79 <_end+0xf04df61>
     e78:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     e79:	3c 05                	cmp    al,0x5
     e7b:	05 06 14 14 05       	add    eax,0x5141406
     e80:	1a 00                	sbb    al,BYTE PTR [rax]
     e82:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     e85:	06                   	(bad)
     e86:	10 05 01 31 05 0b    	adc    BYTE PTR [rip+0xb053101],al        # b053f8d <_end+0xb04df75>
     e8c:	03 76 ac             	add    esi,DWORD PTR [rsi-0x54]
     e8f:	05 16 00 02 04       	add    eax,0x4020016
     e94:	01 7d 05             	add    DWORD PTR [rbp+0x5],edi
     e97:	09 2c 05 0e 2c 4a 3c 	or     DWORD PTR [rax*1+0x3c4a2c0e],ebp
     e9e:	05 09 30 05 0e       	add    eax,0xe053009
     ea3:	2c 05                	sub    al,0x5
     ea5:	2c 06                	sub    al,0x6
     ea7:	03 15 90 06 01 05    	add    edx,DWORD PTR [rip+0x5010690]        # 501153d <_end+0x500b525>
     ead:	05 06 4b 13 13       	add    eax,0x13134b06
     eb2:	14 05                	adc    al,0x5
     eb4:	17                   	(bad)
     eb5:	00 02                	add    BYTE PTR [rdx],al
     eb7:	04 01                	add    al,0x1
     eb9:	01 00                	add    DWORD PTR [rax],eax
     ebb:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     ebe:	06                   	(bad)
     ebf:	90                   	nop
     ec0:	05 0e 0f 2d 05       	add    eax,0x52d0f0e
     ec5:	0b 5e 05             	or     ebx,DWORD PTR [rsi+0x5]
     ec8:	09 06                	or     DWORD PTR [rsi],eax
     eca:	ba 05 21 06 01       	mov    edx,0x1062105
     ecf:	05 17 00 02 04       	add    eax,0x4020017
     ed4:	01 3a                	add    DWORD PTR [rdx],edi
     ed6:	05 10 4c 2e 05       	add    eax,0x52e4c10
     edb:	0b 3c 05 10 08 21 05 	or     edi,DWORD PTR [rax*1+0x5210810]
     ee2:	0b 2d 05 09 06 2f    	or     ebp,DWORD PTR [rip+0x2f060905]        # 2f0617ed <_end+0x2f05b7d5>
     ee8:	05 10 06 01 05       	add    eax,0x5010610
     eed:	0b 58 05             	or     ebx,DWORD PTR [rax+0x5]
     ef0:	05 00 02 04 03       	add    eax,0x3040200
     ef5:	06                   	(bad)
     ef6:	08 39                	or     BYTE PTR [rcx],bh
     ef8:	05 17 00 02 04       	add    eax,0x4020017
     efd:	01 01                	add    DWORD PTR [rcx],eax
     eff:	05 0f 06 5e 05       	add    eax,0x55e060f
     f04:	18 3c 05 17 00 02 04 	sbb    BYTE PTR [rax*1+0x4020017],bh
     f0b:	01 03                	add    DWORD PTR [rbx],eax
     f0d:	7a c8                	jp     ed7 <__abi_tag+0xb5b>
     f0f:	05 05 06 5e 05       	add    eax,0x55e0605
     f14:	01 06                	add    DWORD PTR [rsi],eax
     f16:	13 05 28 06 ae 06    	adc    eax,DWORD PTR [rip+0x6ae0628]        # 6ae1544 <_end+0x6adb52c>
     f1c:	01 82 05 05 06 2f    	add    DWORD PTR [rdx+0x2f060505],eax
     f22:	13 13                	adc    edx,DWORD PTR [rbx]
     f24:	05 17 00 02 04       	add    eax,0x4020017
     f29:	01 01                	add    DWORD PTR [rcx],eax
     f2b:	00 02                	add    BYTE PTR [rdx],al
     f2d:	04 01                	add    al,0x1
     f2f:	06                   	(bad)
     f30:	74 05                	je     f37 <__abi_tag+0xbbb>
     f32:	0e                   	(bad)
     f33:	10 05 09 06 77 05    	adc    BYTE PTR [rip+0x5770609],al        # 5771542 <_end+0x576b52a>
     f39:	2d 06 01 05 16       	sub    eax,0x16050106
     f3e:	3c 05                	cmp    al,0x5
     f40:	0e                   	(bad)
     f41:	3c 05                	cmp    al,0x5
     f43:	09 06                	or     DWORD PTR [rsi],eax
     f45:	30 06                	xor    BYTE PTR [rsi],al
     f47:	01 82 05 27 00 02    	add    DWORD PTR [rdx+0x2002705],eax
     f4d:	04 01                	add    al,0x1
     f4f:	06                   	(bad)
     f50:	2e 05 34 00 02 04    	cs add eax,0x4020034
     f56:	01 06                	add    DWORD PTR [rsi],eax
     f58:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4020f75 <_end+0x401af5d>
     f5e:	01 2b                	add    DWORD PTR [rbx],ebp
     f60:	05 11 4f 05 34       	add    eax,0x34054f11
     f65:	00 02                	add    BYTE PTR [rdx],al
     f67:	04 01                	add    al,0x1
     f69:	2c 05                	sub    al,0x5
     f6b:	2c 00                	sub    al,0x0
     f6d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f70:	3c 05                	cmp    al,0x5
     f72:	09 06                	or     DWORD PTR [rsi],eax
     f74:	30 05 0e 06 01 05    	xor    BYTE PTR [rip+0x501060e],al        # 5011588 <_end+0x500b570>
     f7a:	05 00 02 04 02       	add    eax,0x2040200
     f7f:	06                   	(bad)
     f80:	29 05 17 00 02 04    	sub    DWORD PTR [rip+0x4020017],eax        # 4020f9d <_end+0x401af85>
     f86:	01 01                	add    DWORD PTR [rcx],eax
     f88:	05 09 79 05 05       	add    eax,0x5057909
     f8d:	00 02                	add    BYTE PTR [rdx],al
     f8f:	04 02                	add    al,0x2
     f91:	0d 05 17 00 02       	or     eax,0x2001705
     f96:	04 01                	add    al,0x1
     f98:	01 00                	add    DWORD PTR [rax],eax
     f9a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
     f9d:	06                   	(bad)
     f9e:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
     fa1:	04 01                	add    al,0x1
     fa3:	58                   	pop    rax
     fa4:	05 01 1a 02 01       	add    eax,0x1021a01
     fa9:	00 01                	add    BYTE PTR [rcx],al
     fab:	01 65 08             	add    DWORD PTR [rbp+0x8],esp
     fae:	00 00                	add    BYTE PTR [rax],al
     fb0:	05 00 08 00 a4       	add    eax,0xa4000800
     fb5:	00 00                	add    BYTE PTR [rax],al
     fb7:	00 01                	add    BYTE PTR [rcx],al
     fb9:	01 01                	add    DWORD PTR [rcx],eax
     fbb:	fb                   	sti
     fbc:	0e                   	(bad)
     fbd:	0d 00 01 01 01       	or     eax,0x1010100
     fc2:	01 00                	add    DWORD PTR [rax],eax
     fc4:	00 00                	add    BYTE PTR [rax],al
     fc6:	01 00                	add    DWORD PTR [rax],eax
     fc8:	00 01                	add    BYTE PTR [rcx],al
     fca:	01 01                	add    DWORD PTR [rcx],eax
     fcc:	1f                   	(bad)
     fcd:	09 00                	or     DWORD PTR [rax],eax
     fcf:	00 00                	add    BYTE PTR [rax],al
     fd1:	00 2f                	add    BYTE PTR [rdi],ch
     fd3:	00 00                	add    BYTE PTR [rax],al
     fd5:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
     fd8:	00 00                	add    BYTE PTR [rax],al
     fda:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     fdd:	00 41 00             	add    BYTE PTR [rcx+0x0],al
     fe0:	00 00                	add    BYTE PTR [rax],al
     fe2:	9a                   	(bad)
     fe3:	00 00                	add    BYTE PTR [rax],al
     fe5:	00 ae 00 00 00 c7    	add    BYTE PTR [rsi-0x39000000],ch
     feb:	00 00                	add    BYTE PTR [rax],al
     fed:	00 dd                	add    ch,bl
     fef:	00 00                	add    BYTE PTR [rax],al
     ff1:	00 02                	add    BYTE PTR [rdx],al
     ff3:	01 1f                	add    DWORD PTR [rdi],ebx
     ff5:	02 0f                	add    cl,BYTE PTR [rdi]
     ff7:	14 3b                	adc    al,0x3b
     ff9:	02 00                	add    al,BYTE PTR [rax]
     ffb:	00 01                	add    BYTE PTR [rcx],al
     ffd:	3b 02                	cmp    eax,DWORD PTR [rdx]
     fff:	00 00                	add    BYTE PTR [rax],al
    1001:	01 a9 01 00 00 02    	add    DWORD PTR [rcx+0x2000001],ebp
    1007:	c8 01 00 00          	enter  0x1,0x0
    100b:	02 10                	add    dl,BYTE PTR [rax]
    100d:	01 00                	add    DWORD PTR [rax],eax
    100f:	00 03                	add    BYTE PTR [rbx],al
    1011:	07                   	(bad)
    1012:	01 00                	add    DWORD PTR [rax],eax
    1014:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1017:	01 00                	add    DWORD PTR [rax],eax
    1019:	00 02                	add    BYTE PTR [rdx],al
    101b:	21 01                	and    DWORD PTR [rcx],eax
    101d:	00 00                	add    BYTE PTR [rax],al
    101f:	05 29 01 00 00       	add    eax,0x129
    1024:	06                   	(bad)
    1025:	33 01                	xor    eax,DWORD PTR [rcx]
    1027:	00 00                	add    BYTE PTR [rax],al
    1029:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    102c:	00 00                	add    BYTE PTR [rax],al
    102e:	02 07                	add    al,BYTE PTR [rdi]
    1030:	01 00                	add    DWORD PTR [rax],eax
    1032:	00 02                	add    BYTE PTR [rdx],al
    1034:	07                   	(bad)
    1035:	01 00                	add    DWORD PTR [rax],eax
    1037:	00 05 53 01 00 00    	add    BYTE PTR [rip+0x153],al        # 1190 <sqrtf@plt>
    103d:	02 d1                	add    dl,cl
    103f:	01 00                	add    DWORD PTR [rax],eax
    1041:	00 07                	add    BYTE PTR [rdi],al
    1043:	62 01 00 00 07       	(bad)
    1048:	dc 01                	fadd   QWORD PTR [rcx]
    104a:	00 00                	add    BYTE PTR [rax],al
    104c:	07                   	(bad)
    104d:	e3 01                	jrcxz  1050 <strchr@plt>
    104f:	00 00                	add    BYTE PTR [rax],al
    1051:	02 f1                	add    dh,cl
    1053:	01 00                	add    DWORD PTR [rax],eax
    1055:	00 04 75 01 00 00 08 	add    BYTE PTR [rsi*2+0x8000001],al
    105c:	05 05 00 09 02       	add    eax,0x2090005
    1061:	c0 1e 00             	rcr    BYTE PTR [rsi],0x0
    1064:	00 00                	add    BYTE PTR [rax],al
    1066:	00 00                	add    BYTE PTR [rax],al
    1068:	00 03                	add    BYTE PTR [rbx],al
    106a:	d2 00                	rol    BYTE PTR [rax],cl
    106c:	01 00                	add    DWORD PTR [rax],eax
    106e:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1071:	06                   	(bad)
    1072:	2f                   	(bad)
    1073:	08 8f 00 02 04 01    	or     BYTE PTR [rdi+0x1040200],cl
    1079:	4b 05 10 06 03 b9    	rex.WXB add rax,0xffffffffb9030610
    107f:	7f f2                	jg     1073 <__assert_fail@plt+0x3>
    1081:	06                   	(bad)
    1082:	01 05 05 06 4b 13    	add    DWORD PTR [rip+0x134b0605],eax        # 134b168d <_end+0x134ab675>
    1088:	05 10 06 10 05       	add    eax,0x5100610
    108d:	28 22                	sub    BYTE PTR [rdx],ah
    108f:	05 10 56 05 28       	add    eax,0x28055610
    1094:	3e 58                	ds pop rax
    1096:	05 25 5f 05 13       	add    eax,0x13055f25
    109b:	72 05                	jb     10a2 <aligned_alloc@plt+0x2>
    109d:	0a 03                	or     al,BYTE PTR [rbx]
    109f:	7a 9e                	jp     103f <__printf_chk@plt+0xf>
    10a1:	05 15 00 02 04       	add    eax,0x4020015
    10a6:	01 83 05 05 06 3d    	add    DWORD PTR [rbx+0x3d060505],eax
    10ac:	13 05 25 06 17 05    	adc    eax,DWORD PTR [rip+0x5170625]        # 51716d7 <_end+0x516b6bf>
    10b2:	21 03                	and    DWORD PTR [rbx],eax
    10b4:	7a ac                	jp     1062 <__strncpy_chk@plt+0x2>
    10b6:	05 05 06 76 14       	add    eax,0x14760605
    10bb:	13 05 1c 00 02 04    	adc    eax,DWORD PTR [rip+0x402001c]        # 40210dd <_end+0x401b0c5>
    10c1:	01 01                	add    DWORD PTR [rcx],eax
    10c3:	05 09 13 13 05       	add    eax,0x5131309
    10c8:	05 00 02 04 03       	add    eax,0x3040200
    10cd:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 40210ef <_end+0x401b0d7>
    10d3:	01 01                	add    DWORD PTR [rcx],eax
    10d5:	05 09 13 13 05       	add    eax,0x5131309
    10da:	25 06 11 05 05       	and    eax,0x5051106
    10df:	00 02                	add    BYTE PTR [rdx],al
    10e1:	04 03                	add    al,0x3
    10e3:	06                   	(bad)
    10e4:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    10ea:	01 01                	add    DWORD PTR [rcx],eax
    10ec:	05 09 13 13 05       	add    eax,0x5131309
    10f1:	25 06 11 05 13       	and    eax,0x13051106
    10f6:	72 05                	jb     10fd <fopen@plt+0xd>
    10f8:	25 4c 05 05 00       	and    eax,0x5054c
    10fd:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1100:	06                   	(bad)
    1101:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    1107:	01 01                	add    DWORD PTR [rcx],eax
    1109:	05 05 17 05 01       	add    eax,0x1051705
    110e:	06                   	(bad)
    110f:	13 4a 05             	adc    ecx,DWORD PTR [rdx+0x5]
    1112:	2a 06                	sub    al,BYTE PTR [rsi]
    1114:	4c 06                	rex.WR (bad)
    1116:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1721 <_end+0x54ab709>
    111c:	2a 06                	sub    al,BYTE PTR [rsi]
    111e:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05b029 <_end+0x1a055011>
    1124:	03 38                	add    edi,DWORD PTR [rax]
    1126:	ba 3c 3c 3c 05       	mov    edx,0x53c3c3c
    112b:	05 06 03 4a 01       	add    eax,0x14a0306
    1130:	03 33                	add    esi,DWORD PTR [rbx]
    1132:	01 13                	add    DWORD PTR [rbx],edx
    1134:	14 05                	adc    al,0x5
    1136:	0e                   	(bad)
    1137:	06                   	(bad)
    1138:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 5301743 <_end+0x52fb72b>
    113e:	10 01                	adc    BYTE PTR [rcx],al
    1140:	05 09 af 05 0d       	add    eax,0xd05af09
    1145:	06                   	(bad)
    1146:	01 05 10 06 39 05    	add    DWORD PTR [rip+0x5390610],eax        # 539175c <_end+0x538b744>
    114c:	09 83 05 36 06 01    	or     DWORD PTR [rbx+0x1063605],eax
    1152:	05 0c 06 03 16       	add    eax,0x1603060c
    1157:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    115d:	05 15 06 01 82       	add    eax,0x82010615
    1162:	58                   	pop    rax
    1163:	03 57 01             	add    edx,DWORD PTR [rdi+0x1]
    1166:	05 09 00 02 04       	add    eax,0x4020009
    116b:	01 48 05             	add    DWORD PTR [rax+0x5],ecx
    116e:	44 00 02             	add    BYTE PTR [rdx],r8b
    1171:	04 01                	add    al,0x1
    1173:	06                   	(bad)
    1174:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1177:	04 01                	add    al,0x1
    1179:	06                   	(bad)
    117a:	01 05 05 06 03 49    	add    DWORD PTR [rip+0x49030605],eax        # 49031785 <_end+0x4902b76d>
    1180:	01 05 19 06 03 11    	add    DWORD PTR [rip+0x11030619],eax        # 1103179f <_end+0x1102b787>
    1186:	01 05 18 03 70 4a    	add    DWORD PTR [rip+0x4a700318],eax        # 4a7014a4 <_end+0x4a6fb48c>
    118c:	3c 05                	cmp    al,0x5
    118e:	05 06 03 10 01       	add    eax,0x1100306
    1193:	05 22 06 01 05       	add    eax,0x5010622
    1198:	05 06 92 05 2b       	add    eax,0x2b059206
    119d:	00 02                	add    BYTE PTR [rdx],al
    119f:	04 01                	add    al,0x1
    11a1:	90                   	nop
    11a2:	05 0d 03 2c 01       	add    eax,0x12c030d
    11a7:	05 05 13 05 15       	add    eax,0x15051305
    11ac:	06                   	(bad)
    11ad:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    11b0:	05 06 4b 05 2a       	add    eax,0x2a054b06
    11b5:	06                   	(bad)
    11b6:	01 05 48 bb 04 02    	add    DWORD PTR [rip+0x204bb48],eax        # 204cd04 <_end+0x2046cec>
    11bc:	05 21 00 02 04       	add    eax,0x4020021
    11c1:	01 03                	add    DWORD PTR [rbx],eax
    11c3:	57                   	push   rdi
    11c4:	3c 04                	cmp    al,0x4
    11c6:	01 05 16 00 02 04    	add    DWORD PTR [rip+0x4020016],eax        # 40211e2 <_end+0x401b1ca>
    11cc:	01 03                	add    DWORD PTR [rbx],eax
    11ce:	28 3c 05 05 06 4b 05 	sub    BYTE PTR [rax*1+0x54b0605],bh
    11d5:	48 06                	rex.W (bad)
    11d7:	01 05 0b 2e 04 02    	add    DWORD PTR [rip+0x2042e0b],eax        # 2043fe8 <_end+0x203dfd0>
    11dd:	05 01 06 03 55       	add    eax,0x55030601
    11e2:	4a 05 03 14 05 21    	rex.WX add rax,0x21051403
    11e8:	00 02                	add    BYTE PTR [rdx],al
    11ea:	04 01                	add    al,0x1
    11ec:	06                   	(bad)
    11ed:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    11f0:	05 1d 03 29 3c       	add    eax,0x3c29031d
    11f5:	04 02                	add    al,0x2
    11f7:	05 21 00 02 04       	add    eax,0x4020021
    11fc:	01 03                	add    DWORD PTR [rbx],eax
    11fe:	57                   	push   rdi
    11ff:	4a 00 02             	rex.WX add BYTE PTR [rdx],al
    1202:	04 01                	add    al,0x1
    1204:	d6                   	(bad)
    1205:	04 01                	add    al,0x1
    1207:	05 05 06 03 2a       	add    eax,0x2a030605
    120c:	01 05 13 06 01 05    	add    DWORD PTR [rip+0x5010613],eax        # 5011825 <_end+0x500b80d>
    1212:	29 00                	sub    DWORD PTR [rax],eax
    1214:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1217:	06                   	(bad)
    1218:	3c 05                	cmp    al,0x5
    121a:	31 00                	xor    DWORD PTR [rax],eax
    121c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    121f:	06                   	(bad)
    1220:	01 05 29 00 02 04    	add    DWORD PTR [rip+0x4020029],eax        # 402124f <_end+0x401b237>
    1226:	01 3c 05 0f 83 05 09 	add    DWORD PTR [rax*1+0x905830f],edi
    122d:	06                   	(bad)
    122e:	08 3c 05 2a 06 2e 05 	or     BYTE PTR [rax*1+0x52e062a],bh
    1235:	29 00                	sub    DWORD PTR [rax],eax
    1237:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    123a:	3b 05 26 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b26]        # 9055d66 <_end+0x904fd4e>
    1240:	06                   	(bad)
    1241:	3d 05 26 06 01       	cmp    eax,0x1062605
    1246:	05 05 00 02 04       	add    eax,0x4020005
    124b:	03 06                	add    eax,DWORD PTR [rsi]
    124d:	3a 05 29 00 02 04    	cmp    al,BYTE PTR [rip+0x4020029]        # 402127c <_end+0x401b264>
    1253:	01 01                	add    DWORD PTR [rcx],eax
    1255:	05 22 06 03 52       	add    eax,0x52030622
    125a:	4a 05 05 06 4a 05    	rex.WX add rax,0x54a0605
    1260:	01 06                	add    DWORD PTR [rsi],eax
    1262:	13 66 66             	adc    esp,DWORD PTR [rsi+0x66]
    1265:	05 05 06 03 6a       	add    eax,0x6a030605
    126a:	58                   	pop    rax
    126b:	05 09 13 05 18       	add    eax,0x18051309
    1270:	06                   	(bad)
    1271:	01 05 12 41 05 18    	add    DWORD PTR [rip+0x18054112],eax        # 18055389 <_end+0x1804f371>
    1277:	37                   	(bad)
    1278:	05 09 06 3d 05       	add    eax,0x53d0609
    127d:	2e 06                	cs (bad)
    127f:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    1282:	30 4a 05             	xor    BYTE PTR [rdx+0x5],cl
    1285:	18 2e                	sbb    BYTE PTR [rsi],ch
    1287:	05 09 06 3e 05       	add    eax,0x53e0609
    128c:	28 06                	sub    BYTE PTR [rsi],al
    128e:	17                   	(bad)
    128f:	05 31 3f 05 27       	add    eax,0x27053f31
    1294:	03 79 4a             	add    edi,DWORD PTR [rcx+0x4a]
    1297:	73 05                	jae    129e <register_tm_clones+0x2e>
    1299:	09 06                	or     DWORD PTR [rsi],eax
    129b:	83 13 14             	adc    DWORD PTR [rbx],0x14
    129e:	05 28 06 01 05       	add    eax,0x5010628
    12a3:	09 06                	or     DWORD PTR [rsi],eax
    12a5:	67 14 05             	addr32 adc al,0x5
    12a8:	31 06                	xor    DWORD PTR [rsi],eax
    12aa:	01 05 09 06 3d 05    	add    DWORD PTR [rip+0x53d0609],eax        # 53d18b9 <_end+0x53cb8a1>
    12b0:	31 06                	xor    DWORD PTR [rsi],eax
    12b2:	01 05 09 06 3e 06    	add    DWORD PTR [rip+0x63e0609],eax        # 63e18c1 <_end+0x63db8a9>
    12b8:	58                   	pop    rax
    12b9:	05 05 06 15 05       	add    eax,0x5150605
    12be:	1e                   	(bad)
    12bf:	06                   	(bad)
    12c0:	0f 05                	syscall
    12c2:	22 4d 05             	and    cl,BYTE PTR [rbp+0x5]
    12c5:	05 06 3e 92 05       	add    eax,0x5923e06
    12ca:	01 06                	add    DWORD PTR [rsi],eax
    12cc:	13 82 2e 2e 05 22    	adc    eax,DWORD PTR [rdx+0x22052e2e]
    12d2:	1f                   	(bad)
    12d3:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    12d9:	01 03                	add    DWORD PTR [rbx],eax
    12db:	67 66 00 02          	data16 add BYTE PTR [edx],al
    12df:	04 01                	add    al,0x1
    12e1:	ba 00 02 04 01       	mov    edx,0x1040200
    12e6:	74 00                	je     12e8 <__do_global_dtors_aux+0x38>
    12e8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    12eb:	74 05                	je     12f2 <frame_dummy+0x2>
    12ed:	29 06                	sub    DWORD PTR [rsi],eax
    12ef:	03 1c 08             	add    ebx,DWORD PTR [rax+rcx*1]
    12f2:	20 06                	and    BYTE PTR [rsi],al
    12f4:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b18ff <_end+0x54ab8e7>
    12fa:	29 06                	sub    DWORD PTR [rsi],eax
    12fc:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05b207 <_end+0x1a0551ef>
    1302:	03 1b                	add    ebx,DWORD PTR [rbx]
    1304:	90                   	nop
    1305:	90                   	nop
    1306:	05 05 06 03 67       	add    eax,0x67030605
    130b:	01 03                	add    DWORD PTR [rbx],eax
    130d:	16                   	(bad)
    130e:	01 13                	add    DWORD PTR [rbx],edx
    1310:	14 05                	adc    al,0x5
    1312:	0e                   	(bad)
    1313:	06                   	(bad)
    1314:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 530191f <_end+0x52fb907>
    131a:	10 01                	adc    BYTE PTR [rcx],al
    131c:	05 09 d9 05 15       	add    eax,0x1505d909
    1321:	06                   	(bad)
    1322:	01 05 0d 4a 05 10    	add    DWORD PTR [rip+0x10054a0d],eax        # 10055d35 <_end+0x1004fd1d>
    1328:	06                   	(bad)
    1329:	39 05 09 4b 05 33    	cmp    DWORD PTR [rip+0x33054b09],eax        # 33055e38 <_end+0x3304fe20>
    132f:	06                   	(bad)
    1330:	01 05 15 03 2b 2e    	add    DWORD PTR [rip+0x2e2b0315],eax        # 2e2b164b <_end+0x2e2ab633>
    1336:	05 36 03 55 3c       	add    eax,0x3c550336
    133b:	05 0c 06 03 16       	add    eax,0x1603060c
    1340:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    1346:	05 15 06 01 9e       	add    eax,0x9e010615
    134b:	05 09 00 02 04       	add    eax,0x4020009
    1350:	01 03                	add    DWORD PTR [rbx],eax
    1352:	55                   	push   rbp
    1353:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 402139d <_end+0x401b385>
    1359:	01 06                	add    DWORD PTR [rsi],eax
    135b:	4a 05 0b 06 03 68    	rex.WX add rax,0x6803060b
    1361:	01 05 24 03 0a 4a    	add    DWORD PTR [rip+0x4a0a0324],eax        # 4a0a168b <_end+0x4a09b673>
    1367:	05 4b 00 02 04       	add    eax,0x402004b
    136c:	01 03                	add    DWORD PTR [rbx],eax
    136e:	0e                   	(bad)
    136f:	74 00                	je     1371 <_Z16buildStringArrayPcj+0x71>
    1371:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1374:	2e 05 05 06 03 66    	cs add eax,0x66030605
    137a:	01 14 05 19 06 01 05 	add    DWORD PTR [rax*1+0x5010619],edx
    1381:	24 03                	and    al,0x3
    1383:	0a 3c 05 0e 03 79 66 	or     bh,BYTE PTR [rax*1+0x6679030e]
    138a:	3d 05 25 2a 05       	cmp    eax,0x52a2505
    138f:	05 06 75 05 27       	add    eax,0x27057506
    1394:	06                   	(bad)
    1395:	01 05 05 06 84 05    	add    DWORD PTR [rip+0x5840605],eax        # 58419a0 <_end+0x583b988>
    139b:	0e                   	(bad)
    139c:	06                   	(bad)
    139d:	01 05 05 06 3d 14    	add    DWORD PTR [rip+0x143d0605],eax        # 143d19a8 <_end+0x143cb990>
    13a3:	05 29 06 01 4a       	add    eax,0x4a010629
    13a8:	05 05 06 3d 05       	add    eax,0x53d0605
    13ad:	29 06                	sub    DWORD PTR [rsi],eax
    13af:	01 4a 05             	add    DWORD PTR [rdx+0x5],ecx
    13b2:	05 06 4c 13 05       	add    eax,0x5134c06
    13b7:	24 06                	and    al,0x6
    13b9:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b19c4 <_end+0x54ab9ac>
    13bf:	14 06                	adc    al,0x6
    13c1:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a19cc <_end+0x559b9b4>
    13c7:	1a 06                	sbb    al,BYTE PTR [rsi]
    13c9:	01 05 05 06 68 05    	add    DWORD PTR [rip+0x5680605],eax        # 56819d4 <_end+0x567b9bc>
    13cf:	01 06                	add    DWORD PTR [rsi],eax
    13d1:	13 66 2e             	adc    esp,DWORD PTR [rsi+0x2e]
    13d4:	2e 05 05 06 03 6e    	cs add eax,0x6e030605
    13da:	90                   	nop
    13db:	05 01 06 03 12       	add    eax,0x12030601
    13e0:	01 05 1a 00 02 04    	add    DWORD PTR [rip+0x402001a],eax        # 4021400 <_end+0x401b3e8>
    13e6:	01 03                	add    DWORD PTR [rbx],eax
    13e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13e9:	4a 05 01 03 12 2e    	rex.WX add rax,0x2e120301
    13ef:	4a                   	rex.WX
    13f0:	2e 05 05 00 02 04    	cs add eax,0x4020005
    13f6:	01 03                	add    DWORD PTR [rbx],eax
    13f8:	6a 20                	push   0x20
    13fa:	00 02                	add    BYTE PTR [rdx],al
    13fc:	04 01                	add    al,0x1
    13fe:	ba 00 02 04 01       	mov    edx,0x1040200
    1403:	74 00                	je     1405 <_Z16buildStringArrayPcj+0x105>
    1405:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1408:	74 05                	je     140f <_Z16buildStringArrayPcj+0x10f>
    140a:	2b 06                	sub    eax,DWORD PTR [rsi]
    140c:	03 18                	add    ebx,DWORD PTR [rax]
    140e:	90                   	nop
    140f:	06                   	(bad)
    1410:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1a1b <_end+0x54aba03>
    1416:	2b 06                	sub    eax,DWORD PTR [rsi]
    1418:	11 05 05 9f 05 1a    	adc    DWORD PTR [rip+0x1a059f05],eax        # 1a05b323 <_end+0x1a05530b>
    141e:	5a                   	pop    rdx
    141f:	05 05 06 90 05       	add    eax,0x5900605
    1424:	0e                   	(bad)
    1425:	06                   	(bad)
    1426:	01 05 05 06 30 05    	add    DWORD PTR [rip+0x5300605],eax        # 5301a31 <_end+0x52fba19>
    142c:	10 01                	adc    BYTE PTR [rcx],al
    142e:	05 09 a1 05 15       	add    eax,0x1505a109
    1433:	06                   	(bad)
    1434:	01 05 0d 4a 05 10    	add    DWORD PTR [rip+0x10054a0d],eax        # 10055e47 <_end+0x1004fe2f>
    143a:	06                   	(bad)
    143b:	39 05 09 4b 05 33    	cmp    DWORD PTR [rip+0x33054b09],eax        # 33055f4a <_end+0x3304ff32>
    1441:	06                   	(bad)
    1442:	01 05 15 03 2b 2e    	add    DWORD PTR [rip+0x2e2b0315],eax        # 2e2b175d <_end+0x2e2ab745>
    1448:	05 36 03 55 3c       	add    eax,0x3c550336
    144d:	05 0c 06 03 16       	add    eax,0x1603060c
    1452:	4a 05 05 03 15 01    	rex.WX add rax,0x1150305
    1458:	05 15 06 01 9e       	add    eax,0x9e010615
    145d:	05 09 00 02 04       	add    eax,0x4020009
    1462:	01 03                	add    DWORD PTR [rbx],eax
    1464:	55                   	push   rbp
    1465:	01 05 44 00 02 04    	add    DWORD PTR [rip+0x4020044],eax        # 40214af <_end+0x401b497>
    146b:	01 06                	add    DWORD PTR [rsi],eax
    146d:	4a 05 01 06 18 05    	rex.WX add rax,0x5180601
    1473:	4b 00 02             	rex.WXB add BYTE PTR [r10],al
    1476:	04 01                	add    al,0x1
    1478:	03 7a 4a             	add    edi,DWORD PTR [rdx+0x4a]
    147b:	05 01 34 2e 2e       	add    eax,0x2e2e3401
    1480:	2e 9e                	cs sahf
    1482:	05 0c 49 05 01       	add    eax,0x105490c
    1487:	2f                   	(bad)
    1488:	2e 2e 2e 20 58 05    	cs cs cs and BYTE PTR [rax+0x5],bl
    148e:	1a 06                	sbb    al,BYTE PTR [rsi]
    1490:	00 09                	add    BYTE PTR [rcx],cl
    1492:	02 30                	add    dh,BYTE PTR [rax]
    1494:	22 00                	and    al,BYTE PTR [rax]
    1496:	00 00                	add    BYTE PTR [rax],al
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	00 03                	add    BYTE PTR [rbx],al
    149c:	2e 01 06             	cs add DWORD PTR [rsi],eax
    149f:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1aaa <_end+0x54aba92>
    14a5:	1a 06                	sbb    al,BYTE PTR [rsi]
    14a7:	11 05 05 21 06 84    	adc    DWORD PTR [rip+0xffffffff84062105],eax        # ffffffff840635b2 <_end+0xffffffff8405d59a>
    14ad:	05 09 06 01 3c       	add    eax,0x3c010609
    14b2:	05 05 06 5a 13       	add    eax,0x135a0605
    14b7:	05 14 06 01 05       	add    eax,0x5010614
    14bc:	01 83 20 05 05 00    	add    DWORD PTR [rbx+0x50520],eax
    14c2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    14c5:	03 7a 20             	add    edi,DWORD PTR [rdx+0x20]
    14c8:	00 02                	add    BYTE PTR [rdx],al
    14ca:	04 01                	add    al,0x1
    14cc:	08 90 05 1c 06 7c    	or     BYTE PTR [rax+0x7c061c05],dl
    14d2:	06                   	(bad)
    14d3:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b1ade <_end+0x54abac6>
    14d9:	1c 06                	sbb    al,0x6
    14db:	11 05 05 4b 04 03    	adc    DWORD PTR [rip+0x3044b05],eax        # 3045fe6 <_end+0x303ffce>
    14e1:	05 17 03 bf 7f       	add    eax,0x7fbf0317
    14e6:	90                   	nop
    14e7:	04 01                	add    al,0x1
    14e9:	05 05 06 03 c3       	add    eax,0xc3030605
    14ee:	00 66 04             	add    BYTE PTR [rsi+0x4],ah
    14f1:	03 05 01 03 bb 7f    	add    eax,DWORD PTR [rip+0x7fbb0301]        # 7fbb17f8 <_end+0x7fbab7e0>
    14f7:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052900 <_end+0x1704c8e8>
    14fd:	06                   	(bad)
    14fe:	01 d6                	add    esi,edx
    1500:	58                   	pop    rax
    1501:	04 01                	add    al,0x1
    1503:	05 05 06 03 c4       	add    eax,0xc4030605
    1508:	00 01                	add    BYTE PTR [rcx],al
    150a:	04 03                	add    al,0x3
    150c:	05 01 03 ba 7f       	add    eax,0x7fba0301
    1511:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705291a <_end+0x1704c902>
    1517:	06                   	(bad)
    1518:	01 08                	add    DWORD PTR [rax],ecx
    151a:	58                   	pop    rax
    151b:	04 01                	add    al,0x1
    151d:	05 05 06 03 c5       	add    eax,0xc5030605
    1522:	00 01                	add    BYTE PTR [rcx],al
    1524:	04 03                	add    al,0x3
    1526:	05 01 03 b9 7f       	add    eax,0x7fb90301
    152b:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052934 <_end+0x1704c91c>
    1531:	06                   	(bad)
    1532:	01 08                	add    DWORD PTR [rax],ecx
    1534:	58                   	pop    rax
    1535:	04 01                	add    al,0x1
    1537:	05 05 06 03 c6       	add    eax,0xc6030605
    153c:	00 01                	add    BYTE PTR [rcx],al
    153e:	04 03                	add    al,0x3
    1540:	05 01 03 b8 7f       	add    eax,0x7fb80301
    1545:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 1705294e <_end+0x1704c936>
    154b:	06                   	(bad)
    154c:	01 08                	add    DWORD PTR [rax],ecx
    154e:	2e 04 01             	cs add al,0x1
    1551:	05 05 06 03 c7       	add    eax,0xc7030605
    1556:	00 01                	add    BYTE PTR [rcx],al
    1558:	05 17 00 02 04       	add    eax,0x4020017
    155d:	01 01                	add    DWORD PTR [rcx],eax
    155f:	05 0e 06 74 05       	add    eax,0x574060e
    1564:	09 06                	or     DWORD PTR [rsi],eax
    1566:	f3 04 03             	repz add al,0x3
    1569:	05 01 03 b6 7f       	add    eax,0x7fb60301
    156e:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052977 <_end+0x1704c95f>
    1574:	06                   	(bad)
    1575:	01 08                	add    DWORD PTR [rax],ecx
    1577:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    157a:	05 05 00 02 04       	add    eax,0x4020005
    157f:	03 06                	add    eax,DWORD PTR [rsi]
    1581:	03 c7                	add    eax,edi
    1583:	00 01                	add    BYTE PTR [rcx],al
    1585:	05 17 00 02 04       	add    eax,0x4020017
    158a:	01 4a 00             	add    DWORD PTR [rdx+0x0],ecx
    158d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1590:	06                   	(bad)
    1591:	66 05 05 06          	add    ax,0x605
    1595:	15 04 03 05 01       	adc    eax,0x1050304
    159a:	03 b4 7f 01 05 03 14 	add    esi,DWORD PTR [rdi+rdi*2+0x14030501]
    15a1:	05 17 06 01 9e       	add    eax,0x9e010617
    15a6:	04 01                	add    al,0x1
    15a8:	05 05 06 03 cb       	add    eax,0xcb030605
    15ad:	00 01                	add    BYTE PTR [rcx],al
    15af:	04 03                	add    al,0x3
    15b1:	05 01 03 b3 7f       	add    eax,0x7fb30301
    15b6:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170529bf <_end+0x1704c9a7>
    15bc:	06                   	(bad)
    15bd:	01 08                	add    DWORD PTR [rax],ecx
    15bf:	2e 04 01             	cs add al,0x1
    15c2:	05 05 06 03 cc       	add    eax,0xcc030605
    15c7:	00 01                	add    BYTE PTR [rcx],al
    15c9:	05 17 00 02 04       	add    eax,0x4020017
    15ce:	01 01                	add    DWORD PTR [rcx],eax
    15d0:	05 09 08 67 04       	add    eax,0x4670809
    15d5:	03 05 01 03 b1 7f    	add    eax,DWORD PTR [rip+0x7fb10301]        # 7fb118dc <_end+0x7fb0b8c4>
    15db:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 10429e4 <_end+0x103c9cc>
    15e1:	05 0f 06 03 cd       	add    eax,0xcd03060f
    15e6:	00 01                	add    BYTE PTR [rcx],al
    15e8:	04 03                	add    al,0x3
    15ea:	05 17 03 b3 7f       	add    eax,0x7fb30317
    15ef:	3c 04                	cmp    al,0x4
    15f1:	01 00                	add    DWORD PTR [rax],eax
    15f3:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    15f6:	03 cc                	add    ecx,esp
    15f8:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    15fe:	04 03                	add    al,0x3
    1600:	05 17 03 b3 7f       	add    eax,0x7fb30317
    1605:	3c 90                	cmp    al,0x90
    1607:	04 01                	add    al,0x1
    1609:	05 05 00 02 04       	add    eax,0x4020005
    160e:	03 06                	add    eax,DWORD PTR [rsi]
    1610:	03 cc                	add    ecx,esp
    1612:	00 01                	add    BYTE PTR [rcx],al
    1614:	05 17 00 02 04       	add    eax,0x4020017
    1619:	01 01                	add    DWORD PTR [rcx],eax
    161b:	00 02                	add    BYTE PTR [rdx],al
    161d:	04 01                	add    al,0x1
    161f:	06                   	(bad)
    1620:	66 05 05 06          	add    ax,0x605
    1624:	15 04 03 05 01       	adc    eax,0x1050304
    1629:	03 af 7f 01 05 03    	add    ebp,DWORD PTR [rdi+0x305017f]
    162f:	14 05                	adc    al,0x5
    1631:	17                   	(bad)
    1632:	06                   	(bad)
    1633:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    1639:	06                   	(bad)
    163a:	03 d0                	add    edx,eax
    163c:	00 01                	add    BYTE PTR [rcx],al
    163e:	04 03                	add    al,0x3
    1640:	05 01 03 ae 7f       	add    eax,0x7fae0301
    1645:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052a4e <_end+0x1704ca36>
    164b:	06                   	(bad)
    164c:	01 08                	add    DWORD PTR [rax],ecx
    164e:	2e 04 01             	cs add al,0x1
    1651:	05 05 06 03 d1       	add    eax,0xd1030605
    1656:	00 01                	add    BYTE PTR [rcx],al
    1658:	05 17 00 02 04       	add    eax,0x4020017
    165d:	01 01                	add    DWORD PTR [rcx],eax
    165f:	05 09 08 59 04       	add    eax,0x4590809
    1664:	03 05 01 03 ac 7f    	add    eax,DWORD PTR [rip+0x7fac0301]        # 7fac196b <_end+0x7fabb953>
    166a:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042a73 <_end+0x103ca5b>
    1670:	05 0f 06 03 d2       	add    eax,0xd203060f
    1675:	00 01                	add    BYTE PTR [rcx],al
    1677:	04 03                	add    al,0x3
    1679:	05 17 03 ae 7f       	add    eax,0x7fae0317
    167e:	3c 04                	cmp    al,0x4
    1680:	01 00                	add    DWORD PTR [rax],eax
    1682:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1685:	03 d1                	add    edx,ecx
    1687:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    168d:	04 03                	add    al,0x3
    168f:	05 17 03 ae 7f       	add    eax,0x7fae0317
    1694:	3c 9e                	cmp    al,0x9e
    1696:	04 01                	add    al,0x1
    1698:	05 05 00 02 04       	add    eax,0x4020005
    169d:	03 06                	add    eax,DWORD PTR [rsi]
    169f:	03 d1                	add    edx,ecx
    16a1:	00 01                	add    BYTE PTR [rcx],al
    16a3:	05 17 00 02 04       	add    eax,0x4020017
    16a8:	01 01                	add    DWORD PTR [rcx],eax
    16aa:	00 02                	add    BYTE PTR [rdx],al
    16ac:	04 01                	add    al,0x1
    16ae:	06                   	(bad)
    16af:	66 05 05 06          	add    ax,0x605
    16b3:	15 04 03 05 01       	adc    eax,0x1050304
    16b8:	03 aa 7f 01 05 03    	add    ebp,DWORD PTR [rdx+0x305017f]
    16be:	14 05                	adc    al,0x5
    16c0:	17                   	(bad)
    16c1:	06                   	(bad)
    16c2:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    16c8:	06                   	(bad)
    16c9:	03 d5                	add    edx,ebp
    16cb:	00 01                	add    BYTE PTR [rcx],al
    16cd:	04 03                	add    al,0x3
    16cf:	05 01 03 a9 7f       	add    eax,0x7fa90301
    16d4:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052add <_end+0x1704cac5>
    16da:	06                   	(bad)
    16db:	01 08                	add    DWORD PTR [rax],ecx
    16dd:	2e 04 01             	cs add al,0x1
    16e0:	05 05 06 03 d6       	add    eax,0xd6030605
    16e5:	00 01                	add    BYTE PTR [rcx],al
    16e7:	05 17 00 02 04       	add    eax,0x4020017
    16ec:	01 01                	add    DWORD PTR [rcx],eax
    16ee:	05 09 08 4b 04       	add    eax,0x44b0809
    16f3:	03 05 01 03 a7 7f    	add    eax,DWORD PTR [rip+0x7fa70301]        # 7fa719fa <_end+0x7fa6b9e2>
    16f9:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b02 <_end+0x103caea>
    16ff:	05 0f 06 03 d7       	add    eax,0xd703060f
    1704:	00 01                	add    BYTE PTR [rcx],al
    1706:	04 03                	add    al,0x3
    1708:	05 17 03 a9 7f       	add    eax,0x7fa90317
    170d:	3c 04                	cmp    al,0x4
    170f:	01 00                	add    DWORD PTR [rax],eax
    1711:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1714:	03 d6                	add    edx,esi
    1716:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    171c:	04 03                	add    al,0x3
    171e:	05 17 03 a9 7f       	add    eax,0x7fa90317
    1723:	3c 9e                	cmp    al,0x9e
    1725:	04 01                	add    al,0x1
    1727:	05 05 00 02 04       	add    eax,0x4020005
    172c:	03 06                	add    eax,DWORD PTR [rsi]
    172e:	03 d6                	add    edx,esi
    1730:	00 01                	add    BYTE PTR [rcx],al
    1732:	05 17 00 02 04       	add    eax,0x4020017
    1737:	01 01                	add    DWORD PTR [rcx],eax
    1739:	00 02                	add    BYTE PTR [rdx],al
    173b:	04 01                	add    al,0x1
    173d:	06                   	(bad)
    173e:	66 05 05 06          	add    ax,0x605
    1742:	15 04 03 05 01       	adc    eax,0x1050304
    1747:	03 a5 7f 01 05 03    	add    esp,DWORD PTR [rbp+0x305017f]
    174d:	14 05                	adc    al,0x5
    174f:	17                   	(bad)
    1750:	06                   	(bad)
    1751:	01 9e 04 01 05 05    	add    DWORD PTR [rsi+0x5050104],ebx
    1757:	06                   	(bad)
    1758:	03 da                	add    ebx,edx
    175a:	00 01                	add    BYTE PTR [rcx],al
    175c:	04 03                	add    al,0x3
    175e:	05 01 03 a4 7f       	add    eax,0x7fa40301
    1763:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 17052b6c <_end+0x1704cb54>
    1769:	06                   	(bad)
    176a:	01 ba 04 01 05 05    	add    DWORD PTR [rdx+0x5050104],edi
    1770:	06                   	(bad)
    1771:	03 db                	add    ebx,ebx
    1773:	00 01                	add    BYTE PTR [rcx],al
    1775:	05 17 00 02 04       	add    eax,0x4020017
    177a:	01 01                	add    DWORD PTR [rcx],eax
    177c:	05 09 08 3d 04       	add    eax,0x43d0809
    1781:	03 05 01 03 a2 7f    	add    eax,DWORD PTR [rip+0x7fa20301]        # 7fa21a88 <_end+0x7fa1ba70>
    1787:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042b90 <_end+0x103cb78>
    178d:	05 0f 06 03 dc       	add    eax,0xdc03060f
    1792:	00 01                	add    BYTE PTR [rcx],al
    1794:	04 03                	add    al,0x3
    1796:	05 17 03 a4 7f       	add    eax,0x7fa40317
    179b:	3c 04                	cmp    al,0x4
    179d:	01 00                	add    DWORD PTR [rax],eax
    179f:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    17a2:	03 db                	add    ebx,ebx
    17a4:	00 82 05 0f 4b 4a    	add    BYTE PTR [rdx+0x4a4b0f05],al
    17aa:	04 03                	add    al,0x3
    17ac:	05 17 03 a4 7f       	add    eax,0x7fa40317
    17b1:	3c ac                	cmp    al,0xac
    17b3:	04 01                	add    al,0x1
    17b5:	05 05 00 02 04       	add    eax,0x4020005
    17ba:	03 06                	add    eax,DWORD PTR [rsi]
    17bc:	03 db                	add    ebx,ebx
    17be:	00 01                	add    BYTE PTR [rcx],al
    17c0:	05 17 00 02 04       	add    eax,0x4020017
    17c5:	01 01                	add    DWORD PTR [rcx],eax
    17c7:	00 02                	add    BYTE PTR [rdx],al
    17c9:	04 01                	add    al,0x1
    17cb:	06                   	(bad)
    17cc:	58                   	pop    rax
    17cd:	05 05 06 15 04       	add    eax,0x4150605
    17d2:	03 05 01 03 a0 7f    	add    eax,DWORD PTR [rip+0x7fa00301]        # 7fa01ad9 <_end+0x7f9fbac1>
    17d8:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1042be1 <_end+0x103cbc9>
    17de:	05 01 06 03 df       	add    eax,0xdf030601
    17e3:	00 01                	add    BYTE PTR [rcx],al
    17e5:	04 03                	add    al,0x3
    17e7:	05 17 03 a1 7f       	add    eax,0x7fa10317
    17ec:	20 04 01             	and    BYTE PTR [rcx+rax*1],al
    17ef:	05 01 03 df 00       	add    eax,0xdf0301
    17f4:	58                   	pop    rax
    17f5:	04 03                	add    al,0x3
    17f7:	05 17 03 a1 7f       	add    eax,0x7fa10317
    17fc:	3c 58                	cmp    al,0x58
    17fe:	04 01                	add    al,0x1
    1800:	05 05 00 02 04       	add    eax,0x4020005
    1805:	01 03                	add    DWORD PTR [rbx],eax
    1807:	c1 00 01             	rol    DWORD PTR [rax],0x1
    180a:	00 02                	add    BYTE PTR [rdx],al
    180c:	04 01                	add    al,0x1
    180e:	08 90 02 05 00 01    	or     BYTE PTR [rax+0x1000502],dl
    1814:	01 ff                	add    edi,edi
    1816:	01 00                	add    DWORD PTR [rax],eax
    1818:	00 05 00 08 00 b7    	add    BYTE PTR [rip+0xffffffffb7000800],al        # ffffffffb700201e <_end+0xffffffffb6ffc006>
    181e:	00 00                	add    BYTE PTR [rax],al
    1820:	00 01                	add    BYTE PTR [rcx],al
    1822:	01 01                	add    DWORD PTR [rcx],eax
    1824:	fb                   	sti
    1825:	0e                   	(bad)
    1826:	0d 00 01 01 01       	or     eax,0x1010100
    182b:	01 00                	add    DWORD PTR [rax],eax
    182d:	00 00                	add    BYTE PTR [rax],al
    182f:	01 00                	add    DWORD PTR [rax],eax
    1831:	00 01                	add    BYTE PTR [rcx],al
    1833:	01 01                	add    DWORD PTR [rcx],eax
    1835:	1f                   	(bad)
    1836:	0a 00                	or     al,BYTE PTR [rax]
    1838:	00 00                	add    BYTE PTR [rax],al
    183a:	00 2f                	add    BYTE PTR [rdi],ch
    183c:	00 00                	add    BYTE PTR [rax],al
    183e:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    1841:	00 00                	add    BYTE PTR [rax],al
    1843:	41 00 00             	add    BYTE PTR [r8],al
    1846:	00 4e 00             	add    BYTE PTR [rsi+0x0],cl
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	60                   	(bad)
    184c:	02 00                	add    al,BYTE PTR [rax]
    184e:	00 82 02 00 00 9a    	add    BYTE PTR [rdx-0x65fffffe],al
    1854:	00 00                	add    BYTE PTR [rax],al
    1856:	00 ae 00 00 00 dd    	add    BYTE PTR [rsi-0x23000000],ch
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	00 02                	add    BYTE PTR [rdx],al
    1860:	01 1f                	add    DWORD PTR [rdi],ebx
    1862:	02 0f                	add    cl,BYTE PTR [rdi]
    1864:	17                   	(bad)
    1865:	56                   	push   rsi
    1866:	02 00                	add    al,BYTE PTR [rax]
    1868:	00 01                	add    BYTE PTR [rcx],al
    186a:	56                   	push   rsi
    186b:	02 00                	add    al,BYTE PTR [rax]
    186d:	00 01                	add    BYTE PTR [rcx],al
    186f:	ab                   	stos   DWORD PTR es:[rdi],eax
    1870:	02 00                	add    al,BYTE PTR [rax]
    1872:	00 02                	add    BYTE PTR [rdx],al
    1874:	b4 02                	mov    ah,0x2
    1876:	00 00                	add    BYTE PTR [rax],al
    1878:	02 a0 01 00 00 03    	add    ah,BYTE PTR [rax+0x3000001]
    187e:	10 01                	adc    BYTE PTR [rcx],al
    1880:	00 00                	add    BYTE PTR [rax],al
    1882:	04 07                	add    al,0x7
    1884:	01 00                	add    DWORD PTR [rax],eax
    1886:	00 03                	add    BYTE PTR [rbx],al
    1888:	19 01                	sbb    DWORD PTR [rcx],eax
    188a:	00 00                	add    BYTE PTR [rax],al
    188c:	02 19                	add    bl,BYTE PTR [rcx]
    188e:	01 00                	add    DWORD PTR [rax],eax
    1890:	00 05 bd 02 00 00    	add    BYTE PTR [rip+0x2bd],al        # 1b53 <_Z19_mm_crc32HashString8string_t+0x13>
    1896:	06                   	(bad)
    1897:	21 01                	and    DWORD PTR [rcx],eax
    1899:	00 00                	add    BYTE PTR [rax],al
    189b:	07                   	(bad)
    189c:	29 01                	sub    DWORD PTR [rcx],eax
    189e:	00 00                	add    BYTE PTR [rax],al
    18a0:	08 33                	or     BYTE PTR [rbx],dh
    18a2:	01 00                	add    DWORD PTR [rax],eax
    18a4:	00 02                	add    BYTE PTR [rdx],al
    18a6:	42 01 00             	rex.X add DWORD PTR [rax],eax
    18a9:	00 02                	add    BYTE PTR [rdx],al
    18ab:	07                   	(bad)
    18ac:	01 00                	add    DWORD PTR [rax],eax
    18ae:	00 02                	add    BYTE PTR [rdx],al
    18b0:	07                   	(bad)
    18b1:	01 00                	add    DWORD PTR [rax],eax
    18b3:	00 07                	add    BYTE PTR [rdi],al
    18b5:	cf                   	iret
    18b6:	02 00                	add    al,BYTE PTR [rax]
    18b8:	00 02                	add    BYTE PTR [rdx],al
    18ba:	53                   	push   rbx
    18bb:	01 00                	add    DWORD PTR [rax],eax
    18bd:	00 02                	add    BYTE PTR [rdx],al
    18bf:	dd 02                	fld    QWORD PTR [rdx]
    18c1:	00 00                	add    BYTE PTR [rax],al
    18c3:	02 b4 02 00 00 03 d6 	add    dh,BYTE PTR [rdx+rax*1-0x29fd0000]
    18ca:	02 00                	add    al,BYTE PTR [rax]
    18cc:	00 05 f1 01 00 00    	add    BYTE PTR [rip+0x1f1],al        # 1ac3 <_Z15crc32HashString8string_t+0xa3>
    18d2:	03 75 01             	add    esi,DWORD PTR [rbp+0x1]
    18d5:	00 00                	add    BYTE PTR [rax],al
    18d7:	09 05 33 00 09 02    	or     DWORD PTR [rip+0x2090033],eax        # 2091910 <_end+0x208b8f8>
    18dd:	a0 24 00 00 00 00 00 	movabs al,ds:0x300000000000024
    18e4:	00 03 
    18e6:	0a 01                	or     al,BYTE PTR [rcx]
    18e8:	06                   	(bad)
    18e9:	01 08                	add    DWORD PTR [rax],ecx
    18eb:	3c 05                	cmp    al,0x5
    18ed:	05 06 08 2f 05       	add    eax,0x52f0806
    18f2:	11 06                	adc    DWORD PTR [rsi],eax
    18f4:	92                   	xchg   edx,eax
    18f5:	05 05 06 74 05       	add    eax,0x5740605
    18fa:	0e                   	(bad)
    18fb:	06                   	(bad)
    18fc:	13 3c 05 11 3b 05 05 	adc    edi,DWORD PTR [rax*1+0x5053b11]
    1903:	06                   	(bad)
    1904:	08 e5                	or     ch,ah
    1906:	05 0e 06 01 05       	add    eax,0x501060e
    190b:	05 00 02 04 01       	add    eax,0x1040200
    1910:	82                   	(bad)
    1911:	06                   	(bad)
    1912:	5a                   	pop    rdx
    1913:	05 0c 06 01 05       	add    eax,0x501060c
    1918:	05 06 59 04 02       	add    eax,0x2045906
    191d:	05 1b 06 03 23       	add    eax,0x2303061b
    1922:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1925:	05 0b 03 5d 74       	add    eax,0x745d030b
    192a:	05 05 06 4c 04       	add    eax,0x44c0605
    192f:	02 05 01 03 15 01    	add    al,BYTE PTR [rip+0x1150301]        # 1151c36 <_end+0x114bc1e>
    1935:	05 03 14 15 05       	add    eax,0x5151403
    193a:	07                   	(bad)
    193b:	14 17                	adc    al,0x17
    193d:	05 1b 06 01 82       	add    eax,0x8201061b
    1942:	04 01                	add    al,0x1
    1944:	05 05 06 03 60       	add    eax,0x60030605
    1949:	01 5a 05             	add    DWORD PTR [rdx+0x5],ebx
    194c:	1f                   	(bad)
    194d:	06                   	(bad)
    194e:	01 c8                	add    eax,ecx
    1950:	05 05 06 3d 5a       	add    eax,0x5a3d0605
    1955:	04 03                	add    al,0x3
    1957:	05 01 01 05 03       	add    eax,0x3050101
    195c:	14 05                	adc    al,0x5
    195e:	0a 00                	or     al,BYTE PTR [rax]
    1960:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1963:	06                   	(bad)
    1964:	01 00                	add    DWORD PTR [rax],eax
    1966:	02 04 07             	add    al,BYTE PTR [rdi+rax*1]
    1969:	d6                   	(bad)
    196a:	04 01                	add    al,0x1
    196c:	05 05 06 01 05       	add    eax,0x5010605
    1971:	0a 06                	or     al,BYTE PTR [rsi]
    1973:	01 05 01 85 05 34    	add    DWORD PTR [rip+0x34058501],eax        # 34059e7a <_end+0x34053e62>
    1979:	00 02                	add    BYTE PTR [rdx],al
    197b:	04 01                	add    al,0x1
    197d:	03 70 02             	add    esi,DWORD PTR [rax+0x2]
    1980:	2e 01 00             	cs add DWORD PTR [rax],eax
    1983:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1986:	2e 05 05 00 02 04    	cs add eax,0x4020005
    198c:	01 2b                	add    DWORD PTR [rbx],ebp
    198e:	00 02                	add    BYTE PTR [rdx],al
    1990:	04 01                	add    al,0x1
    1992:	08 2e                	or     BYTE PTR [rsi],ch
    1994:	00 02                	add    BYTE PTR [rdx],al
    1996:	04 01                	add    al,0x1
    1998:	74 05                	je     199f <_Z17hashMapDebugPrintP7HashMap+0x3f>
    199a:	01 03                	add    DWORD PTR [rbx],eax
    199c:	13 58 05             	adc    ebx,DWORD PTR [rax+0x5]
    199f:	32 06                	xor    al,BYTE PTR [rsi]
    19a1:	ca 06 01             	retf   0x106
    19a4:	05 05 06 4b 05       	add    eax,0x54b0605
    19a9:	32 06                	xor    al,BYTE PTR [rsi]
    19ab:	11 05 05 4b 05 1b    	adc    DWORD PTR [rip+0x1b054b05],eax        # 1b0564b6 <_end+0x1b05049e>
    19b1:	06                   	(bad)
    19b2:	b1 05                	mov    cl,0x5
    19b4:	0e                   	(bad)
    19b5:	06                   	(bad)
    19b6:	10 05 1b 30 05 09    	adc    BYTE PTR [rip+0x905301b],al        # 90549d7 <_end+0x904e9bf>
    19bc:	06                   	(bad)
    19bd:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    19be:	04 04                	add    al,0x4
    19c0:	05 1b 06 03 c3       	add    eax,0xc303061b
    19c5:	01 01                	add    DWORD PTR [rcx],eax
    19c7:	04 01                	add    al,0x1
    19c9:	05 0e 03 bd 7e       	add    eax,0x7ebd030e
    19ce:	58                   	pop    rax
    19cf:	05 09 06 3d 04       	add    eax,0x43d0609
    19d4:	04 05                	add    al,0x5
    19d6:	01 03                	add    DWORD PTR [rbx],eax
    19d8:	c0 01 01             	rol    BYTE PTR [rcx],0x1
    19db:	05 03 14 05 1b       	add    eax,0x1b051403
    19e0:	06                   	(bad)
    19e1:	01 58 04             	add    DWORD PTR [rax+0x4],ebx
    19e4:	01 05 13 00 02 04    	add    DWORD PTR [rip+0x4020013],eax        # 40219fd <_end+0x401b9e5>
    19ea:	01 03                	add    DWORD PTR [rbx],eax
    19ec:	be 7e 01 05 1b       	mov    esi,0x1b05017e
    19f1:	06                   	(bad)
    19f2:	48 05 14 06 01 05    	add    rax,0x5010614
    19f8:	1b 66 05             	sbb    esp,DWORD PTR [rsi+0x5]
    19fb:	01 5e 4a             	add    DWORD PTR [rsi+0x4a],ebx
    19fe:	2e 05 05 00 02 04    	cs add eax,0x4020005
    1a04:	01 03                	add    DWORD PTR [rbx],eax
    1a06:	75 20                	jne    1a28 <_Z15crc32HashString8string_t+0x8>
    1a08:	00 02                	add    BYTE PTR [rdx],al
    1a0a:	04 01                	add    al,0x1
    1a0c:	08 2e                	or     BYTE PTR [rsi],ch
    1a0e:	00 02                	add    BYTE PTR [rdx],al
    1a10:	04 01                	add    al,0x1
    1a12:	74 02                	je     1a16 <_Z17hashMapDebugPrintP7HashMap+0xb6>
    1a14:	05 00 01 01 38       	add    eax,0x38010100
    1a19:	16                   	(bad)
    1a1a:	00 00                	add    BYTE PTR [rax],al
    1a1c:	05 00 08 00 82       	add    eax,0x82000800
    1a21:	01 00                	add    DWORD PTR [rax],eax
    1a23:	00 01                	add    BYTE PTR [rcx],al
    1a25:	01 01                	add    DWORD PTR [rcx],eax
    1a27:	fb                   	sti
    1a28:	0e                   	(bad)
    1a29:	0d 00 01 01 01       	or     eax,0x1010100
    1a2e:	01 00                	add    DWORD PTR [rax],eax
    1a30:	00 00                	add    BYTE PTR [rax],al
    1a32:	01 00                	add    DWORD PTR [rax],eax
    1a34:	00 01                	add    BYTE PTR [rcx],al
    1a36:	01 01                	add    DWORD PTR [rcx],eax
    1a38:	1f                   	(bad)
    1a39:	0c 00                	or     al,0x0
    1a3b:	00 00                	add    BYTE PTR [rax],al
    1a3d:	00 2f                	add    BYTE PTR [rdi],ch
    1a3f:	00 00                	add    BYTE PTR [rax],al
    1a41:	00 77 00             	add    BYTE PTR [rdi+0x0],dh
    1a44:	00 00                	add    BYTE PTR [rax],al
    1a46:	9a                   	(bad)
    1a47:	00 00                	add    BYTE PTR [rax],al
    1a49:	00 ae 00 00 00 07    	add    BYTE PTR [rsi+0x7000000],ch
    1a4f:	03 00                	add    eax,DWORD PTR [rax]
    1a51:	00 dd                	add    ch,bl
    1a53:	00 00                	add    BYTE PTR [rax],al
    1a55:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    1a58:	00 00                	add    BYTE PTR [rax],al
    1a5a:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    1a5d:	00 82 02 00 00 21    	add    BYTE PTR [rdx+0x21000002],al
    1a63:	03 00                	add    eax,DWORD PTR [rax]
    1a65:	00 c7                	add    bh,al
    1a67:	00 00                	add    BYTE PTR [rax],al
    1a69:	00 02                	add    BYTE PTR [rdx],al
    1a6b:	01 1f                	add    DWORD PTR [rdi],ebx
    1a6d:	02 0f                	add    cl,BYTE PTR [rdi]
    1a6f:	3e fd                	ds std
    1a71:	02 00                	add    al,BYTE PTR [rax]
    1a73:	00 01                	add    BYTE PTR [rcx],al
    1a75:	fd                   	std
    1a76:	02 00                	add    al,BYTE PTR [rax]
    1a78:	00 01                	add    BYTE PTR [rcx],al
    1a7a:	c8 01 00 00          	enter  0x1,0x0
    1a7e:	02 3a                	add    bh,BYTE PTR [rdx]
    1a80:	03 00                	add    eax,DWORD PTR [rax]
    1a82:	00 03                	add    BYTE PTR [rbx],al
    1a84:	40 03 00             	rex add eax,DWORD PTR [rax]
    1a87:	00 04 49             	add    BYTE PTR [rcx+rcx*2],al
    1a8a:	03 00                	add    eax,DWORD PTR [rax]
    1a8c:	00 03                	add    BYTE PTR [rbx],al
    1a8e:	55                   	push   rbp
    1a8f:	03 00                	add    eax,DWORD PTR [rax]
    1a91:	00 05 29 01 00 00    	add    BYTE PTR [rip+0x129],al        # 1bc0 <_Z25_mm_crc32UnrollHashString8string_t+0x30>
    1a97:	04 21                	add    al,0x21
    1a99:	01 00                	add    DWORD PTR [rax],eax
    1a9b:	00 03                	add    BYTE PTR [rbx],al
    1a9d:	5d                   	pop    rbp
    1a9e:	03 00                	add    eax,DWORD PTR [rax]
    1aa0:	00 03                	add    BYTE PTR [rbx],al
    1aa2:	64 03 00             	add    eax,DWORD PTR fs:[rax]
    1aa5:	00 03                	add    BYTE PTR [rbx],al
    1aa7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1aa8:	03 00                	add    eax,DWORD PTR [rax]
    1aaa:	00 03                	add    BYTE PTR [rbx],al
    1aac:	73 03                	jae    1ab1 <_Z15crc32HashString8string_t+0x91>
    1aae:	00 00                	add    BYTE PTR [rax],al
    1ab0:	03 7b 03             	add    edi,DWORD PTR [rbx+0x3]
    1ab3:	00 00                	add    BYTE PTR [rax],al
    1ab5:	03 83 03 00 00 04    	add    eax,DWORD PTR [rbx+0x4000003]
    1abb:	8e 03                	mov    es,WORD PTR [rbx]
    1abd:	00 00                	add    BYTE PTR [rax],al
    1abf:	03 94 03 00 00 03 75 	add    edx,DWORD PTR [rbx+rax*1+0x75030000]
    1ac6:	01 00                	add    DWORD PTR [rax],eax
    1ac8:	00 06                	add    BYTE PTR [rsi],al
    1aca:	9a                   	(bad)
    1acb:	03 00                	add    eax,DWORD PTR [rax]
    1acd:	00 04 19             	add    BYTE PTR [rcx+rbx*1],al
    1ad0:	01 00                	add    DWORD PTR [rax],eax
    1ad2:	00 02                	add    BYTE PTR [rdx],al
    1ad4:	ab                   	stos   DWORD PTR es:[rdi],eax
    1ad5:	03 00                	add    eax,DWORD PTR [rax]
    1ad7:	00 07                	add    BYTE PTR [rdi],al
    1ad9:	10 01                	adc    BYTE PTR [rcx],al
    1adb:	00 00                	add    BYTE PTR [rax],al
    1add:	08 07                	or     BYTE PTR [rdi],al
    1adf:	01 00                	add    DWORD PTR [rax],eax
    1ae1:	00 07                	add    BYTE PTR [rdi],al
    1ae3:	b2 03                	mov    dl,0x3
    1ae5:	00 00                	add    BYTE PTR [rax],al
    1ae7:	09 bc 03 00 00 09 1b 	or     DWORD PTR [rbx+rax*1+0x1b090000],edi
    1aee:	02 00                	add    al,BYTE PTR [rax]
    1af0:	00 02                	add    BYTE PTR [rdx],al
    1af2:	bd 02 00 00 09       	mov    ebp,0x9000002
    1af7:	ab                   	stos   DWORD PTR es:[rdi],eax
    1af8:	03 00                	add    eax,DWORD PTR [rax]
    1afa:	00 03                	add    BYTE PTR [rbx],al
    1afc:	c5 03 00             	(bad)
    1aff:	00 00                	add    BYTE PTR [rax],al
    1b01:	d0 03                	rol    BYTE PTR [rbx],1
    1b03:	00 00                	add    BYTE PTR [rax],al
    1b05:	09 de                	or     esi,ebx
    1b07:	03 00                	add    eax,DWORD PTR [rax]
    1b09:	00 09                	add    BYTE PTR [rcx],cl
    1b0b:	e9 03 00 00 09       	jmp    9001b13 <_end+0x8ffbafb>
    1b10:	f2 03 00             	repnz add eax,DWORD PTR [rax]
    1b13:	00 09                	add    BYTE PTR [rcx],cl
    1b15:	eb 03                	jmp    1b1a <_Z15crc32HashString8string_t+0xfa>
    1b17:	00 00                	add    BYTE PTR [rax],al
    1b19:	09 00                	or     DWORD PTR [rax],eax
    1b1b:	04 00                	add    al,0x0
    1b1d:	00 07                	add    BYTE PTR [rdi],al
    1b1f:	53                   	push   rbx
    1b20:	01 00                	add    DWORD PTR [rax],eax
    1b22:	00 02                	add    BYTE PTR [rdx],al
    1b24:	08 04 00             	or     BYTE PTR [rax+rax*1],al
    1b27:	00 02                	add    BYTE PTR [rdx],al
    1b29:	17                   	(bad)
    1b2a:	04 00                	add    al,0x0
    1b2c:	00 07                	add    BYTE PTR [rdi],al
    1b2e:	33 01                	xor    eax,DWORD PTR [rcx]
    1b30:	00 00                	add    BYTE PTR [rax],al
    1b32:	02 42 01             	add    al,BYTE PTR [rdx+0x1]
    1b35:	00 00                	add    BYTE PTR [rax],al
    1b37:	02 07                	add    al,BYTE PTR [rdi]
    1b39:	01 00                	add    DWORD PTR [rax],eax
    1b3b:	00 02                	add    BYTE PTR [rdx],al
    1b3d:	07                   	(bad)
    1b3e:	01 00                	add    DWORD PTR [rax],eax
    1b40:	00 03                	add    BYTE PTR [rbx],al
    1b42:	20 04 00             	and    BYTE PTR [rax+rax*1],al
    1b45:	00 09                	add    BYTE PTR [rcx],cl
    1b47:	d2 03                	rol    BYTE PTR [rbx],cl
    1b49:	00 00                	add    BYTE PTR [rax],al
    1b4b:	09 29                	or     DWORD PTR [rcx],ebp
    1b4d:	04 00                	add    al,0x0
    1b4f:	00 07                	add    BYTE PTR [rdi],al
    1b51:	31 04 00             	xor    DWORD PTR [rax+rax*1],eax
    1b54:	00 02                	add    BYTE PTR [rdx],al
    1b56:	3a 04 00             	cmp    al,BYTE PTR [rax+rax*1]
    1b59:	00 09                	add    BYTE PTR [rcx],cl
    1b5b:	46 04 00             	rex.RX add al,0x0
    1b5e:	00 07                	add    BYTE PTR [rdi],al
    1b60:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1b63:	00 02                	add    BYTE PTR [rdx],al
    1b65:	4f 04 00             	rex.WRXB add al,0x0
    1b68:	00 0a                	add    BYTE PTR [rdx],cl
    1b6a:	60                   	(bad)
    1b6b:	04 00                	add    al,0x0
    1b6d:	00 07                	add    BYTE PTR [rdi],al
    1b6f:	d1 01                	rol    DWORD PTR [rcx],1
    1b71:	00 00                	add    BYTE PTR [rax],al
    1b73:	0b 62 01             	or     esp,DWORD PTR [rdx+0x1]
    1b76:	00 00                	add    BYTE PTR [rax],al
    1b78:	0b dc                	or     ebx,esp
    1b7a:	01 00                	add    DWORD PTR [rax],eax
    1b7c:	00 0b                	add    BYTE PTR [rbx],cl
    1b7e:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b7f:	01 00                	add    DWORD PTR [rax],eax
    1b81:	00 0b                	add    BYTE PTR [rbx],cl
    1b83:	e3 01                	jrcxz  1b86 <_Z19_mm_crc32HashString8string_t+0x46>
    1b85:	00 00                	add    BYTE PTR [rax],al
    1b87:	02 67 04             	add    ah,BYTE PTR [rdi+0x4]
    1b8a:	00 00                	add    BYTE PTR [rax],al
    1b8c:	0b a0 01 00 00 07    	or     esp,DWORD PTR [rax+0x7000001]
    1b92:	74 04                	je     1b98 <_Z25_mm_crc32UnrollHashString8string_t+0x8>
    1b94:	00 00                	add    BYTE PTR [rax],al
    1b96:	0b f1                	or     esi,ecx
    1b98:	01 00                	add    DWORD PTR [rax],eax
    1b9a:	00 07                	add    BYTE PTR [rdi],al
    1b9c:	7c 04                	jl     1ba2 <_Z25_mm_crc32UnrollHashString8string_t+0x12>
    1b9e:	00 00                	add    BYTE PTR [rax],al
    1ba0:	04 8e                	add    al,0x8e
    1ba2:	04 00                	add    al,0x0
    1ba4:	00 03                	add    BYTE PTR [rbx],al
    1ba6:	05 46 00 09 02       	add    eax,0x2090046
    1bab:	20 26                	and    BYTE PTR [rsi],ah
    1bad:	00 00                	add    BYTE PTR [rax],al
    1baf:	00 00                	add    BYTE PTR [rax],al
    1bb1:	00 00                	add    BYTE PTR [rax],al
    1bb3:	03 c2                	add    eax,edx
    1bb5:	00 01                	add    BYTE PTR [rcx],al
    1bb7:	06                   	(bad)
    1bb8:	01 02                	add    DWORD PTR [rdx],eax
    1bba:	24 12                	and    al,0x12
    1bbc:	05 05 06 e5 05       	add    eax,0x5e50605
    1bc1:	22 06                	and    al,BYTE PTR [rsi]
    1bc3:	92                   	xchg   edx,eax
    1bc4:	9e                   	sahf
    1bc5:	05 05 06 3c 05       	add    eax,0x53c0605
    1bca:	22 06                	and    al,BYTE PTR [rsi]
    1bcc:	01 82 05 17 00 02    	add    DWORD PTR [rdx+0x2001705],eax
    1bd2:	04 01                	add    al,0x1
    1bd4:	06                   	(bad)
    1bd5:	5a                   	pop    rdx
    1bd6:	00 02                	add    BYTE PTR [rdx],al
    1bd8:	04 01                	add    al,0x1
    1bda:	06                   	(bad)
    1bdb:	82                   	(bad)
    1bdc:	05 09 06 9f 05       	add    eax,0x59f0609
    1be1:	1a 06                	sbb    al,BYTE PTR [rsi]
    1be3:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021c00 <_end+0x401bbe8>
    1be9:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1bef:	05 00 02 04 02       	add    eax,0x2040200
    1bf4:	06                   	(bad)
    1bf5:	57                   	push   rdi
    1bf6:	05 17 00 02 04       	add    eax,0x4020017
    1bfb:	01 01                	add    DWORD PTR [rcx],eax
    1bfd:	00 02                	add    BYTE PTR [rdx],al
    1bff:	04 01                	add    al,0x1
    1c01:	06                   	(bad)
    1c02:	58                   	pop    rax
    1c03:	05 05 06 16 14       	add    eax,0x14160605
    1c08:	04 02                	add    al,0x2
    1c0a:	05 01 11 05 03       	add    eax,0x3051101
    1c0f:	14 05                	adc    al,0x5
    1c11:	18 06                	sbb    BYTE PTR [rsi],al
    1c13:	01 08                	add    DWORD PTR [rax],ecx
    1c15:	82                   	(bad)
    1c16:	04 01                	add    al,0x1
    1c18:	05 1c 00 02 04       	add    eax,0x402001c
    1c1d:	01 06                	add    DWORD PTR [rsi],eax
    1c1f:	13 05 0b 06 70 05    	adc    eax,DWORD PTR [rip+0x570060b]        # 5702230 <_end+0x56fc218>
    1c25:	1c 00                	sbb    al,0x0
    1c27:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1c2a:	4e 05 2d 4b 66 05    	rex.WRX add rax,0x5664b2d
    1c30:	0b 0d 08 20 04 02    	or     ecx,DWORD PTR [rip+0x2042008]        # 2043c3e <_end+0x203dc26>
    1c36:	05 18 4d 08 58       	add    eax,0x58084d18
    1c3b:	04 01                	add    al,0x1
    1c3d:	05 09 06 14 04       	add    eax,0x4140609
    1c42:	02 05 01 0e 05 03    	add    al,BYTE PTR [rip+0x3050e01]        # 3052a49 <_end+0x304ca31>
    1c48:	14 04                	adc    al,0x4
    1c4a:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021c6c <_end+0x401bc54>
    1c50:	01 06                	add    DWORD PTR [rsi],eax
    1c52:	13 04 02             	adc    eax,DWORD PTR [rdx+rax*1]
    1c55:	05 18 49 ba 04       	add    eax,0x4ba4918
    1c5a:	01 05 09 06 15 05    	add    DWORD PTR [rip+0x5150609],eax        # 5152269 <_end+0x514c251>
    1c60:	26 06                	es (bad)
    1c62:	01 05 1b 4a 05 26    	add    DWORD PTR [rip+0x26054a1b],eax        # 26056683 <_end+0x2605066b>
    1c68:	00 02                	add    BYTE PTR [rdx],al
    1c6a:	04 01                	add    al,0x1
    1c6c:	08 2c 05 1b 3e 05 05 	or     BYTE PTR [rax*1+0x5053e1b],ch
    1c73:	00 02                	add    BYTE PTR [rdx],al
    1c75:	04 02                	add    al,0x2
    1c77:	06                   	(bad)
    1c78:	48 05 1c 00 02 04    	add    rax,0x402001c
    1c7e:	01 01                	add    DWORD PTR [rcx],eax
    1c80:	05 17 06 4f 05       	add    eax,0x54f0617
    1c85:	05 06 58 05 17       	add    eax,0x17055806
    1c8a:	06                   	(bad)
    1c8b:	01 05 05 06 4c 04    	add    DWORD PTR [rip+0x44c0605],eax        # 44c2296 <_end+0x44bc27e>
    1c91:	02 05 01 0f 05 03    	add    al,BYTE PTR [rip+0x3050f01]        # 3052b98 <_end+0x304cb80>
    1c97:	14 05                	adc    al,0x5
    1c99:	17                   	(bad)
    1c9a:	06                   	(bad)
    1c9b:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1c9e:	05 0b 08 13 04       	add    eax,0x413080b
    1ca3:	02 05 17 8f 58 04    	add    al,BYTE PTR [rip+0x4588f17]        # 458abc0 <_end+0x4584ba8>
    1ca9:	01 05 05 06 14 05    	add    DWORD PTR [rip+0x5140605],eax        # 51422b4 <_end+0x513c29c>
    1caf:	07                   	(bad)
    1cb0:	03 dc                	add    ebx,esp
    1cb2:	00 01                	add    BYTE PTR [rcx],al
    1cb4:	05 05 13 05 1c       	add    eax,0x1c051305
    1cb9:	00 02                	add    BYTE PTR [rdx],al
    1cbb:	04 01                	add    al,0x1
    1cbd:	15 05 27 00 02       	adc    eax,0x2002705
    1cc2:	04 01                	add    al,0x1
    1cc4:	06                   	(bad)
    1cc5:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4021ce7 <_end+0x401bccf>
    1ccb:	01 3c 05 23 ad 05 0b 	add    DWORD PTR [rax*1+0xb05ad23],edi
    1cd2:	08 9c 05 12 08 22 05 	or     BYTE PTR [rbp+rax*1+0x5220812],bl
    1cd9:	26 d7                	xlat   BYTE PTR ds:[rbx]
    1cdb:	05 09 06 08 9d       	add    eax,0x9d080609
    1ce0:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 51122f8 <_end+0x510c2e0>
    1ce6:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    1ced:	02 23                	add    ah,BYTE PTR [rbx]
    1cef:	12 c8                	adc    cl,al
    1cf1:	05 1c 02 2c 12       	add    eax,0x122c021c
    1cf6:	c8 05 05 00          	enter  0x505,0x0
    1cfa:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    1cfd:	06                   	(bad)
    1cfe:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d20 <_end+0x401bd08>
    1d04:	01 01                	add    DWORD PTR [rcx],eax
    1d06:	00 02                	add    BYTE PTR [rdx],al
    1d08:	04 01                	add    al,0x1
    1d0a:	06                   	(bad)
    1d0b:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    1d11:	13 05 26 06 01 f2    	adc    eax,DWORD PTR [rip+0xfffffffff2010626]        # fffffffff201233d <_end+0xfffffffff200c325>
    1d17:	05 12 81 05 26       	add    eax,0x26058112
    1d1c:	d7                   	xlat   BYTE PTR ds:[rbx]
    1d1d:	05 12 57 05 26       	add    eax,0x26055712
    1d22:	08 4b 05             	or     BYTE PTR [rbx+0x5],cl
    1d25:	31 02                	xor    DWORD PTR [rdx],eax
    1d27:	27                   	(bad)
    1d28:	12 05 1c 08 4a c8    	adc    al,BYTE PTR [rip+0xffffffffc84a081c]        # ffffffffc84a254a <_end+0xffffffffc849c532>
    1d2e:	05 05 00 02 04       	add    eax,0x4020005
    1d33:	03 06                	add    eax,DWORD PTR [rsi]
    1d35:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d57 <_end+0x401bd3f>
    1d3b:	01 01                	add    DWORD PTR [rcx],eax
    1d3d:	05 09 2f 13 05       	add    eax,0x5132f09
    1d42:	29 06                	sub    DWORD PTR [rsi],eax
    1d44:	11 05 26 2f 05 12    	adc    DWORD PTR [rip+0x12052f26],eax        # 12054c70 <_end+0x1204ec58>
    1d4a:	49 05 26 4b 05 05    	rex.WB add rax,0x5054b26
    1d50:	00 02                	add    BYTE PTR [rdx],al
    1d52:	04 03                	add    al,0x3
    1d54:	8e 05 26 3e 05 31    	mov    es,WORD PTR [rip+0x31053e26]        # 31055b80 <_end+0x3104fb68>
    1d5a:	4a 05 1c 4a 4a 05    	rex.WX add rax,0x54a4a1c
    1d60:	05 00 02 04 03       	add    eax,0x3040200
    1d65:	06                   	(bad)
    1d66:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021d88 <_end+0x401bd70>
    1d6c:	01 01                	add    DWORD PTR [rcx],eax
    1d6e:	05 09 4b 13 05       	add    eax,0x5134b09
    1d73:	12 06                	adc    al,BYTE PTR [rsi]
    1d75:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    1d78:	05 00 02 04 03       	add    eax,0x3040200
    1d7d:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31055ba9 <_end+0x3104fb91>
    1d83:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1d87:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1d8d:	03 06                	add    eax,DWORD PTR [rsi]
    1d8f:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021db1 <_end+0x401bd99>
    1d95:	01 01                	add    DWORD PTR [rcx],eax
    1d97:	05 09 4b 13 05       	add    eax,0x5134b09
    1d9c:	12 06                	adc    al,BYTE PTR [rsi]
    1d9e:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 310568ca <_end+0x310508b2>
    1da4:	c8 05 1c 4a          	enter  0x1c05,0x4a
    1da8:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    1dae:	03 06                	add    eax,DWORD PTR [rsi]
    1db0:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4021dd2 <_end+0x401bdba>
    1db6:	01 01                	add    DWORD PTR [rcx],eax
    1db8:	00 02                	add    BYTE PTR [rdx],al
    1dba:	04 01                	add    al,0x1
    1dbc:	06                   	(bad)
    1dbd:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 51623c8 <_end+0x515c3b0>
    1dc3:	1e                   	(bad)
    1dc4:	06                   	(bad)
    1dc5:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    1dc8:	05 03 06 03 fa       	add    eax,0xfa030603
    1dcd:	01 c8                	add    eax,ecx
    1dcf:	05 05 13 05 1b       	add    eax,0x1b051305
    1dd4:	06                   	(bad)
    1dd5:	9e                   	sahf
    1dd6:	4a 04 01             	rex.WX add al,0x1
    1dd9:	05 05 06 03 87       	add    eax,0x87030605
    1dde:	7e 01                	jle    1de1 <_Z13sumHashString8string_t+0x161>
    1de0:	06                   	(bad)
    1de1:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    1de4:	05 01 06 03 96       	add    eax,0x96030601
    1de9:	7f 01                	jg     1dec <_Z13sumHashString8string_t+0x16c>
    1deb:	05 03 14 05 17       	add    eax,0x17051403
    1df0:	06                   	(bad)
    1df1:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1df4:	05 0b 00 02 04       	add    eax,0x402000b
    1df9:	01 08                	add    DWORD PTR [rax],ecx
    1dfb:	14 04                	adc    al,0x4
    1dfd:	02 05 17 48 58 04    	add    al,BYTE PTR [rip+0x4584817]        # 458661a <_end+0x4580602>
    1e03:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 516240e <_end+0x515c3f6>
    1e09:	10 06                	adc    BYTE PTR [rsi],al
    1e0b:	01 05 01 83 08 3c    	add    DWORD PTR [rip+0x3c088301],eax        # 3c08a112 <_end+0x3c0840fa>
    1e11:	66 2e 05 05 06       	cs add ax,0x605
    1e16:	03 e1                	add    esp,ecx
    1e18:	00 08                	add    BYTE PTR [rax],cl
    1e1a:	12 05 1e 06 01 04    	adc    al,BYTE PTR [rip+0x401061e]        # 401243e <_end+0x400c426>
    1e20:	03 05 03 06 03 fa    	add    eax,DWORD PTR [rip+0xfffffffffa030603]        # fffffffffa032429 <_end+0xfffffffffa02c411>
    1e26:	01 82 05 05 13 06    	add    DWORD PTR [rdx+0x6130505],eax
    1e2c:	82                   	(bad)
    1e2d:	3c 2e                	cmp    al,0x2e
    1e2f:	04 01                	add    al,0x1
    1e31:	05 0b 03 80 7e       	add    eax,0x7e80030b
    1e36:	01 05 13 4b 74 04    	add    DWORD PTR [rip+0x4744b13],eax        # 474694f <_end+0x4740937>
    1e3c:	03 05 1b 03 ff 01    	add    eax,DWORD PTR [rip+0x1ff031b]        # 1ff215d <_end+0x1fec145>
    1e42:	01 90 66 04 01 05    	add    DWORD PTR [rax+0x5010466],edx
    1e48:	05 00 02 04 01       	add    eax,0x1040200
    1e4d:	03 8d 7d 01 00 02    	add    ecx,DWORD PTR [rbp+0x200017d]
    1e53:	04 01                	add    al,0x1
    1e55:	ba 00 02 04 01       	mov    edx,0x1040200
    1e5a:	74 00                	je     1e5c <_Z17adler32HashString8string_t+0x6c>
    1e5c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1e5f:	74 05                	je     1e66 <_Z17adler32HashString8string_t+0x76>
    1e61:	01 03                	add    DWORD PTR [rbx],eax
    1e63:	17                   	(bad)
    1e64:	58                   	pop    rax
    1e65:	05 5c 06 08 22       	add    eax,0x2208065c
    1e6a:	06                   	(bad)
    1e6b:	01 02                	add    DWORD PTR [rdx],eax
    1e6d:	24 12                	and    al,0x12
    1e6f:	05 05 06 08 91       	add    eax,0x91080605
    1e74:	05 0a 06 bb 05       	add    eax,0x5bb060a
    1e79:	22 5a 74             	and    bl,BYTE PTR [rdx+0x74]
    1e7c:	3c 05                	cmp    al,0x5
    1e7e:	05 06 3a 05 0a       	add    eax,0xa053a06
    1e83:	06                   	(bad)
    1e84:	01 05 05 06 5a 05    	add    DWORD PTR [rip+0x55a0605],eax        # 55a248f <_end+0x559c477>
    1e8a:	22 06                	and    al,BYTE PTR [rsi]
    1e8c:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021ea9 <_end+0x401be91>
    1e92:	01 06                	add    DWORD PTR [rsi],eax
    1e94:	f3 00 02             	repz add BYTE PTR [rdx],al
    1e97:	04 01                	add    al,0x1
    1e99:	06                   	(bad)
    1e9a:	66 00 02             	data16 add BYTE PTR [rdx],al
    1e9d:	04 01                	add    al,0x1
    1e9f:	3c 05                	cmp    al,0x5
    1ea1:	09 06                	or     DWORD PTR [rsi],eax
    1ea3:	75 05                	jne    1eaa <_Z13elfHashString8string_t+0x3a>
    1ea5:	1a 06                	sbb    al,BYTE PTR [rsi]
    1ea7:	01 05 17 00 02 04    	add    DWORD PTR [rip+0x4020017],eax        # 4021ec4 <_end+0x401beac>
    1ead:	01 9d 05 1a 4b 05    	add    DWORD PTR [rbp+0x54b1a05],ebx
    1eb3:	05 00 02 04 02       	add    eax,0x2040200
    1eb8:	06                   	(bad)
    1eb9:	57                   	push   rdi
    1eba:	05 17 00 02 04       	add    eax,0x4020017
    1ebf:	01 01                	add    DWORD PTR [rcx],eax
    1ec1:	00 02                	add    BYTE PTR [rdx],al
    1ec3:	04 01                	add    al,0x1
    1ec5:	06                   	(bad)
    1ec6:	58                   	pop    rax
    1ec7:	05 05 06 16 05       	add    eax,0x5160605
    1ecc:	2e 06                	cs (bad)
    1ece:	01 05 30 e5 05 2e    	add    DWORD PTR [rip+0x2e05e530],eax        # 2e060404 <_end+0x2e05a3ec>
    1ed4:	57                   	push   rdi
    1ed5:	05 05 06 75 05       	add    eax,0x5750605
    1eda:	30 06                	xor    BYTE PTR [rsi],al
    1edc:	01 3c 3c             	add    DWORD PTR [rsp+rdi*1],edi
    1edf:	05 05 06 08 67       	add    eax,0x67080605
    1ee4:	14 05                	adc    al,0x5
    1ee6:	17                   	(bad)
    1ee7:	00 02                	add    BYTE PTR [rdx],al
    1ee9:	04 01                	add    al,0x1
    1eeb:	01 05 09 03 17 74    	add    DWORD PTR [rip+0x74170309],eax        # 741721fa <_end+0x7416c1e2>
    1ef1:	05 1e 06 01 05       	add    eax,0x501061e
    1ef6:	21 00                	and    DWORD PTR [rax],eax
    1ef8:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    1efb:	58                   	pop    rax
    1efc:	05 17 00 02 04       	add    eax,0x4020017
    1f01:	01 03                	add    DWORD PTR [rbx],eax
    1f03:	69 2e 05 21 00 02    	imul   ebp,DWORD PTR [rsi],0x2002105
    1f09:	04 01                	add    al,0x1
    1f0b:	03 17                	add    edx,DWORD PTR [rdi]
    1f0d:	4a 05 18 00 02 04    	rex.WX add rax,0x4020018
    1f13:	01 3c 05 05 00 02 04 	add    DWORD PTR [rax*1+0x4020005],edi
    1f1a:	03 06                	add    eax,DWORD PTR [rsi]
    1f1c:	03 69 4a             	add    ebp,DWORD PTR [rcx+0x4a]
    1f1f:	05 17 00 02 04       	add    eax,0x4020017
    1f24:	01 01                	add    DWORD PTR [rcx],eax
    1f26:	00 02                	add    BYTE PTR [rdx],al
    1f28:	04 01                	add    al,0x1
    1f2a:	06                   	(bad)
    1f2b:	58                   	pop    rax
    1f2c:	00 02                	add    BYTE PTR [rdx],al
    1f2e:	04 01                	add    al,0x1
    1f30:	06                   	(bad)
    1f31:	03 1c 01             	add    ebx,DWORD PTR [rcx+rax*1]
    1f34:	04 04                	add    al,0x4
    1f36:	05 26 00 02 04       	add    eax,0x4020026
    1f3b:	01 06                	add    DWORD PTR [rsi],eax
    1f3d:	03 ce                	add    ecx,esi
    1f3f:	00 08                	add    BYTE PTR [rax],cl
    1f41:	66 00 02             	data16 add BYTE PTR [rdx],al
    1f44:	04 01                	add    al,0x1
    1f46:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1f47:	04 01                	add    al,0x1
    1f49:	05 09 06 03 b3       	add    eax,0xb3030609
    1f4e:	7f 01                	jg     1f51 <_Z12pushListElemP4List8string_t+0x1>
    1f50:	05 34 06 01 05       	add    eax,0x5010634
    1f55:	09 06                	or     DWORD PTR [rsi],eax
    1f57:	ca 05 1b             	retf   0x1b05
    1f5a:	00 02                	add    BYTE PTR [rdx],al
    1f5c:	04 01                	add    al,0x1
    1f5e:	01 05 0d 2f 05 4e    	add    DWORD PTR [rip+0x4e052f0d],eax        # 4e054e71 <_end+0x4e04ee59>
    1f64:	06                   	(bad)
    1f65:	01 05 21 3c 05 1b    	add    DWORD PTR [rip+0x1b053c21],eax        # 1b055b8c <_end+0x1b04fb74>
    1f6b:	00 02                	add    BYTE PTR [rdx],al
    1f6d:	04 01                	add    al,0x1
    1f6f:	3b 05 21 4b 05 09    	cmp    eax,DWORD PTR [rip+0x9054b21]        # 9056a96 <_end+0x9050a7e>
    1f75:	00 02                	add    BYTE PTR [rdx],al
    1f77:	04 02                	add    al,0x2
    1f79:	06                   	(bad)
    1f7a:	08 2d 05 1b 00 02    	or     BYTE PTR [rip+0x2001b05],ch        # 2003a85 <_end+0x1ffda6d>
    1f80:	04 01                	add    al,0x1
    1f82:	01 05 09 5c 05 32    	add    DWORD PTR [rip+0x32055c09],eax        # 32057b91 <_end+0x32051b79>
    1f88:	06                   	(bad)
    1f89:	01 05 09 06 59 04    	add    DWORD PTR [rip+0x4590609],eax        # 4592598 <_end+0x458c580>
    1f8f:	04 05                	add    al,0x5
    1f91:	07                   	(bad)
    1f92:	03 e7                	add    esp,edi
    1f94:	07                   	(bad)
    1f95:	01 05 02 03 c0 7e    	add    DWORD PTR [rip+0x7ec00302],eax        # 7ec0229d <_end+0x7ebfc285>
    1f9b:	01 06                	add    DWORD PTR [rsi],eax
    1f9d:	01 06                	add    DWORD PTR [rsi],eax
    1f9f:	01 06                	add    DWORD PTR [rsi],eax
    1fa1:	01 05 07 06 03 91    	add    DWORD PTR [rip+0xffffffff91030607],eax        # ffffffff910325ae <_end+0xffffffff9102c596>
    1fa7:	7e 01                	jle    1faa <_Z12pushListElemP4List8string_t+0x5a>
    1fa9:	05 17 03 f7 7e       	add    eax,0x7ef70317
    1fae:	01 06                	add    DWORD PTR [rsi],eax
    1fb0:	01 05 07 06 03 d4    	add    DWORD PTR [rip+0xffffffffd4030607],eax        # ffffffffd40325bd <_end+0xffffffffd402c5a5>
    1fb6:	7d 01                	jge    1fb9 <_Z12pushListElemP4List8string_t+0x69>
    1fb8:	05 04 03 bf 7f       	add    eax,0x7fbf0304
    1fbd:	01 05 17 03 ed 02    	add    DWORD PTR [rip+0x2ed0317],eax        # 2ed22da <_end+0x2ecc2c2>
    1fc3:	01 06                	add    DWORD PTR [rsi],eax
    1fc5:	01 04 01             	add    DWORD PTR [rcx+rax*1],eax
    1fc8:	05 09 06 03 d3       	add    eax,0xd3030609
    1fcd:	7c 01                	jl     1fd0 <_Z12pushListElemP4List8string_t+0x80>
    1fcf:	04 04                	add    al,0x4
    1fd1:	05 22 00 02 04       	add    eax,0x4020022
    1fd6:	02 06                	add    al,BYTE PTR [rsi]
    1fd8:	03 bc 04 01 00 02 04 	add    edi,DWORD PTR [rsp+rax*1+0x4020001]
    1fdf:	02 4a 04             	add    cl,BYTE PTR [rdx+0x4]
    1fe2:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4022006 <_end+0x401bfee>
    1fe8:	01 03                	add    DWORD PTR [rbx],eax
    1fea:	c4                   	(bad)
    1feb:	7b 01                	jnp    1fee <_Z12pushListElemP4List8string_t+0x9e>
    1fed:	05 17 00 02 04       	add    eax,0x4020017
    1ff2:	01 03                	add    DWORD PTR [rbx],eax
    1ff4:	76 4a                	jbe    2040 <_Z12pushListElemP4List8string_t+0xf0>
    1ff6:	04 04                	add    al,0x4
    1ff8:	05 22 00 02 04       	add    eax,0x4020022
    1ffd:	02 03                	add    al,BYTE PTR [rbx]
    1fff:	c6 04 4a 00          	mov    BYTE PTR [rdx+rcx*2],0x0
    2003:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    2006:	3c 00                	cmp    al,0x0
    2008:	02 04 02             	add    al,BYTE PTR [rdx+rax*1]
    200b:	3c 05                	cmp    al,0x5
    200d:	26 00 02             	es add BYTE PTR [rdx],al
    2010:	04 01                	add    al,0x1
    2012:	03 88 7c 01 04 01    	add    ecx,DWORD PTR [rax+0x104017c]
    2018:	05 17 00 02 04       	add    eax,0x4020017
    201d:	01 03                	add    DWORD PTR [rbx],eax
    201f:	b2 7f                	mov    dl,0x7f
    2021:	08 12                	or     BYTE PTR [rdx],dl
    2023:	04 04                	add    al,0x4
    2025:	05 26 00 02 04       	add    eax,0x4020026
    202a:	01 03                	add    DWORD PTR [rbx],eax
    202c:	ce                   	(bad)
    202d:	00 4a 04             	add    BYTE PTR [rdx+0x4],cl
    2030:	01 05 1e 00 02 04    	add    DWORD PTR [rip+0x402001e],eax        # 4022054 <_end+0x401c03c>
    2036:	01 03                	add    DWORD PTR [rbx],eax
    2038:	bc 7f 74 00 02       	mov    esp,0x200747f
    203d:	04 01                	add    al,0x1
    203f:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2040:	05 05 00 02 04       	add    eax,0x4020005
    2045:	02 06                	add    al,BYTE PTR [rsi]
    2047:	03 76 01             	add    esi,DWORD PTR [rsi+0x1]
    204a:	05 17 00 02 04       	add    eax,0x4020017
    204f:	01 01                	add    DWORD PTR [rcx],eax
    2051:	05 10 06 03 0d       	add    eax,0xd030610
    2056:	ba 04 02 05 18       	mov    edx,0x18050204
    205b:	03 bc 7f 9e 04 01 05 	add    edi,DWORD PTR [rdi+rdi*2+0x501049e]
    2062:	05 06 03 c4 00       	add    eax,0xc40306
    2067:	74 05                	je     206e <_Z12pushListElemP4List8string_t+0x11e>
    2069:	10 06                	adc    BYTE PTR [rsi],al
    206b:	01 05 05 06 5a 14    	add    DWORD PTR [rip+0x145a0605],eax        # 145a2676 <_end+0x1459c65e>
    2071:	04 02                	add    al,0x2
    2073:	05 01 03 b6 7f       	add    eax,0x7fb60301
    2078:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 18053481 <_end+0x1804d469>
    207e:	06                   	(bad)
    207f:	01 08                	add    DWORD PTR [rax],ecx
    2081:	e4 04                	in     al,0x4
    2083:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 40220a5 <_end+0x401c08d>
    2089:	01 06                	add    DWORD PTR [rsi],eax
    208b:	03 c9                	add    ecx,ecx
    208d:	00 01                	add    BYTE PTR [rcx],al
    208f:	00 02                	add    BYTE PTR [rdx],al
    2091:	04 01                	add    al,0x1
    2093:	06                   	(bad)
    2094:	82                   	(bad)
    2095:	05 0c 0f 05 10       	add    eax,0x10050f0c
    209a:	be 04 02 05 18       	mov    esi,0x18050204
    209f:	03 b6 7f 66 08 74    	add    esi,DWORD PTR [rsi+0x7408667f]
    20a5:	04 01                	add    al,0x1
    20a7:	05 09 06 03 ca       	add    eax,0xca030609
    20ac:	00 01                	add    BYTE PTR [rcx],al
    20ae:	04 02                	add    al,0x2
    20b0:	05 01 03 b4 7f       	add    eax,0x7fb40301
    20b5:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 10434be <_end+0x103d4a6>
    20bb:	05 1c 00 02 04       	add    eax,0x402001c
    20c0:	01 06                	add    DWORD PTR [rsi],eax
    20c2:	03 c9                	add    ecx,ecx
    20c4:	00 01                	add    BYTE PTR [rcx],al
    20c6:	04 02                	add    al,0x2
    20c8:	05 18 03 b7 7f       	add    eax,0x7fb70318
    20cd:	4a 9e                	rex.WX sahf
    20cf:	04 01                	add    al,0x1
    20d1:	05 09 06 03 cb       	add    eax,0xcb030609
    20d6:	00 01                	add    BYTE PTR [rcx],al
    20d8:	05 16 06 01 05       	add    eax,0x5010616
    20dd:	05 00 02 04 02       	add    eax,0x2040200
    20e2:	06                   	(bad)
    20e3:	d4                   	(bad)
    20e4:	05 1c 00 02 04       	add    eax,0x402001c
    20e9:	01 01                	add    DWORD PTR [rcx],eax
    20eb:	05 12 06 5d 05       	add    eax,0x55d0612
    20f0:	05 06 ac 05 12       	add    eax,0x1205ac06
    20f5:	06                   	(bad)
    20f6:	01 05 05 06 c9 05    	add    DWORD PTR [rip+0x5c90605],eax        # 5c92701 <_end+0x5c8c6e9>
    20fc:	08 03                	or     BYTE PTR [rbx],al
    20fe:	0a 01                	or     al,BYTE PTR [rcx]
    2100:	05 05 13 06 e4       	add    eax,0xe4061305
    2105:	05 0c 5a 74 05       	add    eax,0x5745a0c
    210a:	09 06                	or     DWORD PTR [rsi],eax
    210c:	76 05                	jbe    2113 <_Z11popListElemP4List8string_t+0x43>
    210e:	2e 06                	cs (bad)
    2110:	01 05 39 c8 82 05    	add    DWORD PTR [rip+0x582c839],eax        # 582e94f <_end+0x5828937>
    2116:	1c d6                	sbb    al,0xd6
    2118:	05 05 00 02 04       	add    eax,0x4020005
    211d:	03 06                	add    eax,DWORD PTR [rsi]
    211f:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    2124:	04 01                	add    al,0x1
    2126:	01 00                	add    DWORD PTR [rax],eax
    2128:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    212b:	06                   	(bad)
    212c:	08 58 05             	or     BYTE PTR [rax+0x5],bl
    212f:	09 06                	or     DWORD PTR [rsi],eax
    2131:	9f                   	lahf
    2132:	05 2c 06 01 05       	add    eax,0x501062c
    2137:	2e 66 05 2c 4a       	cs add ax,0x4a2c
    213c:	05 2e 58 05 39       	add    eax,0x3905582e
    2141:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    2147:	00 02                	add    BYTE PTR [rdx],al
    2149:	04 03                	add    al,0x3
    214b:	06                   	(bad)
    214c:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022172 <_end+0x401c15a>
    2153:	01 05 09 
    2156:	9f                   	lahf
    2157:	05 2e 06 01 05       	add    eax,0x501062e
    215c:	39 c8                	cmp    eax,ecx
    215e:	05 1c 4a 05 05       	add    eax,0x5054a1c
    2163:	00 02                	add    BYTE PTR [rdx],al
    2165:	04 03                	add    al,0x3
    2167:	06                   	(bad)
    2168:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    216e:	01 01                	add    DWORD PTR [rcx],eax
    2170:	00 02                	add    BYTE PTR [rdx],al
    2172:	04 01                	add    al,0x1
    2174:	06                   	(bad)
    2175:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 5152780 <_end+0x514c768>
    217b:	1e                   	(bad)
    217c:	06                   	(bad)
    217d:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e056ba2 <_end+0x1e050b8a>
    2183:	4a 04 03             	rex.WX add al,0x3
    2186:	05 03 06 03 87       	add    eax,0x87030603
    218b:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    2191:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2193:	d6                   	(bad)
    2194:	4a 04 01             	rex.WX add al,0x1
    2197:	05 18 00 02 04       	add    eax,0x4020018
    219c:	01 03                	add    DWORD PTR [rbx],eax
    219e:	f8                   	clc
    219f:	7d 01                	jge    21a2 <_Z11popListElemP4List8string_t+0xd2>
    21a1:	04 02                	add    al,0x2
    21a3:	05 17 03 a7 7f       	add    eax,0x7fa70317
    21a8:	4a 04 01             	rex.WX add al,0x1
    21ab:	05 18 00 02 04       	add    eax,0x4020018
    21b0:	01 03                	add    DWORD PTR [rbx],eax
    21b2:	d9 00                	fld    DWORD PTR [rax]
    21b4:	74 05                	je     21bb <_Z13searchElementP4List8string_t+0xb>
    21b6:	05 06 5a 06 01       	add    eax,0x1065a06
    21bb:	06                   	(bad)
    21bc:	03 6f 01             	add    ebp,DWORD PTR [rdi+0x1]
    21bf:	04 02                	add    al,0x2
    21c1:	05 01 03 b4 7f       	add    eax,0x7fb40301
    21c6:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170535cf <_end+0x1704d5b7>
    21cc:	06                   	(bad)
    21cd:	01 08                	add    DWORD PTR [rax],ecx
    21cf:	74 04                	je     21d5 <_Z13searchElementP4List8string_t+0x25>
    21d1:	01 05 05 06 03 cb    	add    DWORD PTR [rip+0xffffffffcb030605],eax        # ffffffffcb0327dc <_end+0xffffffffcb02c7c4>
    21d7:	00 01                	add    BYTE PTR [rcx],al
    21d9:	04 02                	add    al,0x2
    21db:	05 01 03 b3 7f       	add    eax,0x7fb30301
    21e0:	01 05 03 14 05 17    	add    DWORD PTR [rip+0x17051403],eax        # 170535e9 <_end+0x1704d5d1>
    21e6:	06                   	(bad)
    21e7:	01 08                	add    DWORD PTR [rax],ecx
    21e9:	9e                   	sahf
    21ea:	04 01                	add    al,0x1
    21ec:	05 05 06 03 cc       	add    eax,0xcc030605
    21f1:	00 01                	add    BYTE PTR [rcx],al
    21f3:	04 02                	add    al,0x2
    21f5:	05 01 03 b2 7f       	add    eax,0x7fb20301
    21fa:	01 05 03 14 04 01    	add    DWORD PTR [rip+0x1041403],eax        # 1043603 <_end+0x103d5eb>
    2200:	05 39 06 03 cc       	add    eax,0xcc030639
    2205:	00 01                	add    BYTE PTR [rcx],al
    2207:	04 02                	add    al,0x2
    2209:	05 17 03 b4 7f       	add    eax,0x7fb40317
    220e:	9e                   	sahf
    220f:	04 01                	add    al,0x1
    2211:	05 39 03 cc 00       	add    eax,0xcc0339
    2216:	08 12                	or     BYTE PTR [rdx],dl
    2218:	05 0b 4a 04 02       	add    eax,0x2044a0b
    221d:	05 17 03 b4 7f       	add    eax,0x7fb40317
    2222:	82                   	(bad)
    2223:	58                   	pop    rax
    2224:	04 01                	add    al,0x1
    2226:	05 05 06 03 ce       	add    eax,0xce030605
    222b:	00 01                	add    BYTE PTR [rcx],al
    222d:	05 09 06 01 05       	add    eax,0x5010609
    2232:	05 06 91 05 09       	add    eax,0x9059106
    2237:	06                   	(bad)
    2238:	01 05 01 08 67 58    	add    DWORD PTR [rip+0x58670801],eax        # 58672a3f <_end+0x5866ca27>
    223e:	4a 58                	rex.WX pop rax
    2240:	05 09 65 58 05       	add    eax,0x5586509
    2245:	05 06 03 6e 82       	add    eax,0x826e0306
    224a:	05 10 06 01 05       	add    eax,0x5010610
    224f:	05 06 84 14 04       	add    eax,0x4148406
    2254:	02 05 01 03 b6 7f    	add    al,BYTE PTR [rip+0x7fb60301]        # 7fb6255b <_end+0x7fb5c543>
    225a:	01 05 03 14 05 18    	add    DWORD PTR [rip+0x18051403],eax        # 18053663 <_end+0x1804d64b>
    2260:	06                   	(bad)
    2261:	01 08                	add    DWORD PTR [rax],ecx
    2263:	ba 04 01 05 1c       	mov    edx,0x1c050104
    2268:	00 02                	add    BYTE PTR [rdx],al
    226a:	04 01                	add    al,0x1
    226c:	06                   	(bad)
    226d:	03 c9                	add    ecx,ecx
    226f:	00 01                	add    BYTE PTR [rcx],al
    2271:	05 05 17 05 12       	add    eax,0x12051705
    2276:	06                   	(bad)
    2277:	01 05 05 03 0c 4a    	add    DWORD PTR [rip+0x4a0c0305],eax        # 4a0c2582 <_end+0x4a0bc56a>
    227d:	05 12 03 74 58       	add    eax,0x58740312
    2282:	05 05 06 4b 05       	add    eax,0x54b0605
    2287:	08 03                	or     BYTE PTR [rbx],al
    2289:	0a 01                	or     al,BYTE PTR [rcx]
    228b:	05 05 13 34 05       	add    eax,0x5341305
    2290:	1e                   	(bad)
    2291:	06                   	(bad)
    2292:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2295:	05 03 06 03 87       	add    eax,0x87030603
    229a:	02 82 05 05 13 06    	add    al,BYTE PTR [rdx+0x6130505]
    22a0:	58                   	pop    rax
    22a1:	04 01                	add    al,0x1
    22a3:	05 0c 03 f4 7d       	add    eax,0x7df4030c
    22a8:	01 05 13 4b 74 05    	add    DWORD PTR [rip+0x5744b13],eax        # 5746dc1 <_end+0x5740da9>
    22ae:	08 06                	or     BYTE PTR [rsi],al
    22b0:	0e                   	(bad)
    22b1:	05 05 00 02 04       	add    eax,0x4020005
    22b6:	01 06                	add    DWORD PTR [rsi],eax
    22b8:	13 00                	adc    eax,DWORD PTR [rax]
    22ba:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    22bd:	08 d6                	or     dh,dl
    22bf:	00 02                	add    BYTE PTR [rdx],al
    22c1:	04 01                	add    al,0x1
    22c3:	03 b5 7f 01 00 02    	add    esi,DWORD PTR [rbp+0x200017f]
    22c9:	04 01                	add    al,0x1
    22cb:	ba 00 02 04 01       	mov    edx,0x1040200
    22d0:	74 00                	je     22d2 <_Z10debugPrintP4List+0x62>
    22d2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    22d5:	74 05                	je     22dc <_Z10debugPrintP4List+0x6c>
    22d7:	09 03                	or     DWORD PTR [rbx],eax
    22d9:	c7 00 58 58 04 03    	mov    DWORD PTR [rax],0x3045858
    22df:	05 1b 03 92 02       	add    eax,0x292031b
    22e4:	58                   	pop    rax
    22e5:	58                   	pop    rax
    22e6:	04 01                	add    al,0x1
    22e8:	05 5b 06 03 fc       	add    eax,0xfc03065b
    22ed:	7c 08                	jl     22f7 <_Z10debugPrintP4List+0x87>
    22ef:	3c 06                	cmp    al,0x6
    22f1:	01 05 05 06 03 0b    	add    DWORD PTR [rip+0xb030605],eax        # b0328fc <_end+0xb02c8e4>
    22f7:	4a 05 5b 06 03 75    	rex.WX add rax,0x7503065b
    22fd:	01 05 1e 03 0b 2e    	add    DWORD PTR [rip+0x2e0b031e],eax        # 2e0b2621 <_end+0x2e0ac609>
    2303:	05 5b 03 75 74       	add    eax,0x7475035b
    2308:	82                   	(bad)
    2309:	58                   	pop    rax
    230a:	74 05                	je     2311 <_Z10debugPrintP4List+0xa1>
    230c:	1e                   	(bad)
    230d:	03 0b                	add    ecx,DWORD PTR [rbx]
    230f:	20 05 13 59 05 1e    	and    BYTE PTR [rip+0x1e055913],al        # 1e057c28 <_end+0x1e051c10>
    2315:	8f 05 05 06 3d 05    	pop    QWORD PTR [rip+0x53d0605]        # 53d2920 <_end+0x53cc908>
    231b:	13 06                	adc    eax,DWORD PTR [rsi]
    231d:	01 05 05 06 ad 05    	add    DWORD PTR [rip+0x5ad0605],eax        # 5ad2928 <_end+0x5acc910>
    2323:	0b 06                	or     eax,DWORD PTR [rsi]
    2325:	01 05 01 3d 20 20    	add    DWORD PTR [rip+0x20203d01],eax        # 2020602c <_end+0x20200014>
    232b:	2e 2e 05 0b 2d 58 05 	cs cs add eax,0x5582d0b
    2332:	50                   	push   rax
    2333:	06                   	(bad)
    2334:	00 09                	add    BYTE PTR [rcx],cl
    2336:	02 30                	add    dh,BYTE PTR [rax]
    2338:	2f                   	(bad)
    2339:	00 00                	add    BYTE PTR [rax],al
    233b:	00 00                	add    BYTE PTR [rax],al
    233d:	00 00                	add    BYTE PTR [rax],al
    233f:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2342:	06                   	(bad)
    2343:	01 08                	add    DWORD PTR [rax],ecx
    2345:	20 05 05 06 f3 bb    	and    BYTE PTR [rip+0xffffffffbbf30605],al        # ffffffffbbf32950 <_end+0xffffffffbbf2c938>
    234b:	05 1a 06 93 74       	add    eax,0x7493061a
    2350:	05 05 06 3b 05       	add    eax,0x53b0605
    2355:	1a 06                	sbb    al,BYTE PTR [rsi]
    2357:	13 05 0c 57 05 05    	adc    eax,DWORD PTR [rip+0x505570c]        # 5057a69 <_end+0x5051a51>
    235d:	06                   	(bad)
    235e:	91                   	xchg   ecx,eax
    235f:	05 1a 06 01 05       	add    eax,0x501061a
    2364:	20 5a 05             	and    BYTE PTR [rdx+0x5],bl
    2367:	1a 80 05 05 06 76    	sbb    al,BYTE PTR [rax+0x76060505]
    236d:	05 20 06 01 05       	add    eax,0x5010620
    2372:	39 5a 05             	cmp    DWORD PTR [rdx+0x5],ebx
    2375:	20 3a                	and    BYTE PTR [rdx],bh
    2377:	05 05 06 3e 05       	add    eax,0x53e0605
    237c:	39 06                	cmp    DWORD PTR [rsi],eax
    237e:	01 05 0f 85 05 39    	add    DWORD PTR [rip+0x3905850f],eax        # 3905a893 <_end+0x3905487b>
    2384:	9b                   	fwait
    2385:	05 05 06 3f 05       	add    eax,0x53f0605
    238a:	0f 06                	clts
    238c:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022397 <_end+0x401c37f>
    2392:	01 58 00             	add    DWORD PTR [rax+0x0],ebx
    2395:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2398:	82                   	(bad)
    2399:	05 3f 00 02 04       	add    eax,0x402003f
    239e:	02 06                	add    al,BYTE PTR [rsi]
    23a0:	01 05 05 13 05 0f    	add    DWORD PTR [rip+0xf051305],eax        # f0536ab <_end+0xf04d693>
    23a6:	06                   	(bad)
    23a7:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223b2 <_end+0x401c39a>
    23ad:	01 08                	add    DWORD PTR [rax],ecx
    23af:	20 05 43 00 02 04    	and    BYTE PTR [rip+0x4020043],al        # 40223f8 <_end+0x401c3e0>
    23b5:	02 06                	add    al,BYTE PTR [rsi]
    23b7:	82                   	(bad)
    23b8:	05 05 13 05 0f       	add    eax,0xf051305
    23bd:	06                   	(bad)
    23be:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223c9 <_end+0x401c3b1>
    23c4:	01 e4                	add    esp,esp
    23c6:	05 41 00 02 04       	add    eax,0x4020041
    23cb:	02 06                	add    al,BYTE PTR [rsi]
    23cd:	82                   	(bad)
    23ce:	05 05 13 05 0f       	add    eax,0xf051305
    23d3:	06                   	(bad)
    23d4:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223df <_end+0x401c3c7>
    23da:	01 e4                	add    esp,esp
    23dc:	05 3d 00 02 04       	add    eax,0x402003d
    23e1:	02 06                	add    al,BYTE PTR [rsi]
    23e3:	82                   	(bad)
    23e4:	05 05 13 05 0f       	add    eax,0xf051305
    23e9:	06                   	(bad)
    23ea:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 40223f5 <_end+0x401c3dd>
    23f0:	01 e4                	add    esp,esp
    23f2:	05 41 00 02 04       	add    eax,0x4020041
    23f7:	02 06                	add    al,BYTE PTR [rsi]
    23f9:	82                   	(bad)
    23fa:	05 05 13 05 0f       	add    eax,0xf051305
    23ff:	06                   	(bad)
    2400:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 402240b <_end+0x401c3f3>
    2406:	01 e4                	add    esp,esp
    2408:	05 3d 00 02 04       	add    eax,0x402003d
    240d:	02 06                	add    al,BYTE PTR [rsi]
    240f:	82                   	(bad)
    2410:	05 05 13 05 0f       	add    eax,0xf051305
    2415:	06                   	(bad)
    2416:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022421 <_end+0x401c409>
    241c:	01 e4                	add    esp,esp
    241e:	05 49 00 02 04       	add    eax,0x4020049
    2423:	02 06                	add    al,BYTE PTR [rsi]
    2425:	82                   	(bad)
    2426:	05 05 13 05 0f       	add    eax,0xf051305
    242b:	06                   	(bad)
    242c:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022437 <_end+0x401c41f>
    2432:	01 e4                	add    esp,esp
    2434:	00 02                	add    BYTE PTR [rdx],al
    2436:	04 01                	add    al,0x1
    2438:	82                   	(bad)
    2439:	06                   	(bad)
    243a:	03 0a                	add    ecx,DWORD PTR [rdx]
    243c:	01 05 09 06 01 05    	add    DWORD PTR [rip+0x5010609],eax        # 5012a4b <_end+0x500ca33>
    2442:	05 06 91 05 09       	add    eax,0x9059106
    2447:	06                   	(bad)
    2448:	01 05 05 06 91 05    	add    DWORD PTR [rip+0x5910605],eax        # 5912a53 <_end+0x590ca3b>
    244e:	09 06                	or     DWORD PTR [rsi],eax
    2450:	01 05 01 83 08 e4    	add    DWORD PTR [rip+0xffffffffe4088301],eax        # ffffffffe408a757 <_end+0xffffffffe408473f>
    2456:	05 34 00 02 04       	add    eax,0x4020034
    245b:	01 06                	add    DWORD PTR [rsi],eax
    245d:	03 6c 9e 04          	add    ebp,DWORD PTR [rsi+rbx*4+0x4]
    2461:	02 05 01 03 37 01    	add    al,BYTE PTR [rip+0x1370301]        # 1372768 <_end+0x136c750>
    2467:	05 03 14 05 17       	add    eax,0x17051403
    246c:	06                   	(bad)
    246d:	01 e4                	add    esp,esp
    246f:	04 01                	add    al,0x1
    2471:	05 34 00 02 04       	add    eax,0x4020034
    2476:	03 06                	add    eax,DWORD PTR [rsi]
    2478:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    247b:	04 02                	add    al,0x2
    247d:	05 01 03 37 01       	add    eax,0x1370301
    2482:	05 03 14 05 17       	add    eax,0x17051403
    2487:	06                   	(bad)
    2488:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    248e:	00 02                	add    BYTE PTR [rdx],al
    2490:	04 04                	add    al,0x4
    2492:	06                   	(bad)
    2493:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    2496:	04 02                	add    al,0x2
    2498:	05 01 03 37 01       	add    eax,0x1370301
    249d:	05 03 14 05 17       	add    eax,0x17051403
    24a2:	06                   	(bad)
    24a3:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    24a9:	00 02                	add    BYTE PTR [rdx],al
    24ab:	04 05                	add    al,0x5
    24ad:	06                   	(bad)
    24ae:	03 47 01             	add    eax,DWORD PTR [rdi+0x1]
    24b1:	00 02                	add    BYTE PTR [rdx],al
    24b3:	04 05                	add    al,0x5
    24b5:	01 05 06 03 16 01    	add    DWORD PTR [rip+0x1160306],eax        # 11627c1 <_end+0x115c7a9>
    24bb:	05 05 03 0b 01       	add    eax,0x10b0305
    24c0:	05 1e 06 01 05       	add    eax,0x501061e
    24c5:	13 08                	adc    ecx,DWORD PTR [rax]
    24c7:	2f                   	(bad)
    24c8:	05 1e f1 05 05       	add    eax,0x505f11e
    24cd:	06                   	(bad)
    24ce:	3d 05 13 06 01       	cmp    eax,0x1061305
    24d3:	05 05 06 83 05       	add    eax,0x5830605
    24d8:	0b 06                	or     eax,DWORD PTR [rsi]
    24da:	01 82 05 34 00 02    	add    DWORD PTR [rdx+0x2003405],eax
    24e0:	04 06                	add    al,0x6
    24e2:	06                   	(bad)
    24e3:	03 5d 01             	add    ebx,DWORD PTR [rbp+0x1]
    24e6:	04 02                	add    al,0x2
    24e8:	05 01 03 37 01       	add    eax,0x1370301
    24ed:	05 03 14 05 17       	add    eax,0x17051403
    24f2:	06                   	(bad)
    24f3:	01 ba e4 04 01 05    	add    DWORD PTR [rdx+0x50104e4],edi
    24f9:	09 06                	or     DWORD PTR [rsi],eax
    24fb:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    24fe:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    2501:	05 01 03 2f 01       	add    eax,0x12f0301
    2506:	05 03 14 05 17       	add    eax,0x17051403
    250b:	06                   	(bad)
    250c:	01 e4                	add    esp,esp
    250e:	04 01                	add    al,0x1
    2510:	05 09 00 02 04       	add    eax,0x4020009
    2515:	01 06                	add    DWORD PTR [rsi],eax
    2517:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    251a:	04 02                	add    al,0x2
    251c:	05 01 03 2f 01       	add    eax,0x12f0301
    2521:	05 03 14 05 17       	add    eax,0x17051403
    2526:	06                   	(bad)
    2527:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    252d:	00 02                	add    BYTE PTR [rdx],al
    252f:	04 02                	add    al,0x2
    2531:	06                   	(bad)
    2532:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2535:	04 02                	add    al,0x2
    2537:	05 01 03 2f 01       	add    eax,0x12f0301
    253c:	05 03 14 05 17       	add    eax,0x17051403
    2541:	06                   	(bad)
    2542:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2548:	00 02                	add    BYTE PTR [rdx],al
    254a:	04 03                	add    al,0x3
    254c:	06                   	(bad)
    254d:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    2550:	00 02                	add    BYTE PTR [rdx],al
    2552:	04 03                	add    al,0x3
    2554:	01 05 06 03 0e 01    	add    DWORD PTR [rip+0x10e0306],eax        # 10e2860 <_end+0x10dc848>
    255a:	05 05 03 0b 01       	add    eax,0x10b0305
    255f:	05 1e 06 3c 05       	add    eax,0x53c061e
    2564:	13 08                	adc    ecx,DWORD PTR [rax]
    2566:	75 05                	jne    256d <_Z8readFilePKcPm+0xcd>
    2568:	1e                   	(bad)
    2569:	f1                   	int1
    256a:	05 05 06 3d 05       	add    eax,0x53d0605
    256f:	13 06                	adc    eax,DWORD PTR [rsi]
    2571:	01 05 05 06 83 05    	add    DWORD PTR [rip+0x5830605],eax        # 5832b7c <_end+0x582cb64>
    2577:	0b 06                	or     eax,DWORD PTR [rsi]
    2579:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    257c:	05 17 03 16 3c       	add    eax,0x3c160317
    2581:	74 04                	je     2587 <_Z8readFilePKcPm+0xe7>
    2583:	01 05 0b 03 6a 01    	add    DWORD PTR [rip+0x16a030b],eax        # 16a2894 <_end+0x169c87c>
    2589:	58                   	pop    rax
    258a:	05 09 00 02 04       	add    eax,0x4020009
    258f:	04 06                	add    al,0x6
    2591:	03 65 01             	add    esp,DWORD PTR [rbp+0x1]
    2594:	04 02                	add    al,0x2
    2596:	05 01 03 2f 01       	add    eax,0x12f0301
    259b:	05 03 14 05 17       	add    eax,0x17051403
    25a0:	06                   	(bad)
    25a1:	01 82 04 01 05 14    	add    DWORD PTR [rdx+0x14050104],eax
    25a7:	06                   	(bad)
    25a8:	03 4f 01             	add    ecx,DWORD PTR [rdi+0x1]
    25ab:	05 09 13 01 04       	add    eax,0x4011309
    25b0:	02 05 01 03 2e 01    	add    al,BYTE PTR [rip+0x12e0301]        # 12e28b7 <_end+0x12dc89f>
    25b6:	05 03 14 05 17       	add    eax,0x17051403
    25bb:	06                   	(bad)
    25bc:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    25c2:	00 02                	add    BYTE PTR [rdx],al
    25c4:	04 01                	add    al,0x1
    25c6:	06                   	(bad)
    25c7:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    25ca:	04 02                	add    al,0x2
    25cc:	05 01 03 2e 01       	add    eax,0x12e0301
    25d1:	05 03 14 05 17       	add    eax,0x17051403
    25d6:	06                   	(bad)
    25d7:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    25dd:	00 02                	add    BYTE PTR [rdx],al
    25df:	04 02                	add    al,0x2
    25e1:	06                   	(bad)
    25e2:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    25e5:	04 02                	add    al,0x2
    25e7:	05 01 03 2e 01       	add    eax,0x12e0301
    25ec:	05 03 14 05 17       	add    eax,0x17051403
    25f1:	06                   	(bad)
    25f2:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    25f8:	00 02                	add    BYTE PTR [rdx],al
    25fa:	04 03                	add    al,0x3
    25fc:	06                   	(bad)
    25fd:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2600:	00 02                	add    BYTE PTR [rdx],al
    2602:	04 03                	add    al,0x3
    2604:	01 00                	add    DWORD PTR [rax],eax
    2606:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2609:	06                   	(bad)
    260a:	01 05 06 06 03 0d    	add    DWORD PTR [rip+0xd030606],eax        # d032c16 <_end+0xd02cbfe>
    2610:	58                   	pop    rax
    2611:	05 05 03 0b 01       	add    eax,0x10b0305
    2616:	05 1e 06 01 05       	add    eax,0x501061e
    261b:	13 08                	adc    ecx,DWORD PTR [rax]
    261d:	2f                   	(bad)
    261e:	05 1e f1 05 05       	add    eax,0x505f11e
    2623:	06                   	(bad)
    2624:	3d 05 13 06 01       	cmp    eax,0x1061305
    2629:	05 05 06 83 05       	add    eax,0x5830605
    262e:	0b 06                	or     eax,DWORD PTR [rsi]
    2630:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2636:	04 04                	add    al,0x4
    2638:	06                   	(bad)
    2639:	03 66 01             	add    esp,DWORD PTR [rsi+0x1]
    263c:	04 02                	add    al,0x2
    263e:	05 01 03 2e 01       	add    eax,0x12e0301
    2643:	05 03 14 05 17       	add    eax,0x17051403
    2648:	06                   	(bad)
    2649:	01 82 04 01 05 18    	add    DWORD PTR [rdx+0x18050104],eax
    264f:	06                   	(bad)
    2650:	03 50 01             	add    edx,DWORD PTR [rax+0x1]
    2653:	05 09 13 01 04       	add    eax,0x4011309
    2658:	02 05 01 03 2d 01    	add    al,BYTE PTR [rip+0x12d0301]        # 12d295f <_end+0x12cc947>
    265e:	05 03 14 05 17       	add    eax,0x17051403
    2663:	06                   	(bad)
    2664:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    266a:	00 02                	add    BYTE PTR [rdx],al
    266c:	04 01                	add    al,0x1
    266e:	06                   	(bad)
    266f:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    2672:	04 02                	add    al,0x2
    2674:	05 01 03 2d 01       	add    eax,0x12d0301
    2679:	05 03 14 05 17       	add    eax,0x17051403
    267e:	06                   	(bad)
    267f:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2685:	00 02                	add    BYTE PTR [rdx],al
    2687:	04 02                	add    al,0x2
    2689:	06                   	(bad)
    268a:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    268d:	04 02                	add    al,0x2
    268f:	05 01 03 2d 01       	add    eax,0x12d0301
    2694:	05 03 14 05 17       	add    eax,0x17051403
    2699:	06                   	(bad)
    269a:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    26a0:	00 02                	add    BYTE PTR [rdx],al
    26a2:	04 03                	add    al,0x3
    26a4:	06                   	(bad)
    26a5:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    26a8:	00 02                	add    BYTE PTR [rdx],al
    26aa:	04 03                	add    al,0x3
    26ac:	01 05 06 03 0c 01    	add    DWORD PTR [rip+0x10c0306],eax        # 10c29b8 <_end+0x10bc9a0>
    26b2:	05 05 03 0b 01       	add    eax,0x10b0305
    26b7:	05 1e 06 01 05       	add    eax,0x501061e
    26bc:	13 08                	adc    ecx,DWORD PTR [rax]
    26be:	2f                   	(bad)
    26bf:	05 1e f1 05 05       	add    eax,0x505f11e
    26c4:	06                   	(bad)
    26c5:	3d 05 13 06 01       	cmp    eax,0x1061305
    26ca:	05 05 06 83 05       	add    eax,0x5830605
    26cf:	0b 06                	or     eax,DWORD PTR [rsi]
    26d1:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    26d7:	04 04                	add    al,0x4
    26d9:	06                   	(bad)
    26da:	03 67 01             	add    esp,DWORD PTR [rdi+0x1]
    26dd:	04 02                	add    al,0x2
    26df:	05 01 03 2d 01       	add    eax,0x12d0301
    26e4:	05 03 14 05 17       	add    eax,0x17051403
    26e9:	06                   	(bad)
    26ea:	01 82 04 01 05 1e    	add    DWORD PTR [rdx+0x1e050104],eax
    26f0:	06                   	(bad)
    26f1:	03 51 01             	add    edx,DWORD PTR [rcx+0x1]
    26f4:	05 09 13 01 04       	add    eax,0x4011309
    26f9:	02 05 01 03 2c 01    	add    al,BYTE PTR [rip+0x12c0301]        # 12c2a00 <_end+0x12bc9e8>
    26ff:	05 03 14 05 17       	add    eax,0x17051403
    2704:	06                   	(bad)
    2705:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    270b:	00 02                	add    BYTE PTR [rdx],al
    270d:	04 01                	add    al,0x1
    270f:	06                   	(bad)
    2710:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2713:	04 02                	add    al,0x2
    2715:	05 01 03 2c 01       	add    eax,0x12c0301
    271a:	05 03 14 05 17       	add    eax,0x17051403
    271f:	06                   	(bad)
    2720:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2726:	00 02                	add    BYTE PTR [rdx],al
    2728:	04 02                	add    al,0x2
    272a:	06                   	(bad)
    272b:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    272e:	04 02                	add    al,0x2
    2730:	05 01 03 2c 01       	add    eax,0x12c0301
    2735:	05 03 14 05 17       	add    eax,0x17051403
    273a:	06                   	(bad)
    273b:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2741:	00 02                	add    BYTE PTR [rdx],al
    2743:	04 03                	add    al,0x3
    2745:	06                   	(bad)
    2746:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2749:	00 02                	add    BYTE PTR [rdx],al
    274b:	04 03                	add    al,0x3
    274d:	01 05 06 03 0b 01    	add    DWORD PTR [rip+0x10b0306],eax        # 10b2a59 <_end+0x10aca41>
    2753:	05 05 03 0b 01       	add    eax,0x10b0305
    2758:	05 1e 06 01 05       	add    eax,0x501061e
    275d:	13 08                	adc    ecx,DWORD PTR [rax]
    275f:	2f                   	(bad)
    2760:	05 1e f1 05 05       	add    eax,0x505f11e
    2765:	06                   	(bad)
    2766:	3d 05 13 06 01       	cmp    eax,0x1061305
    276b:	05 05 06 83 05       	add    eax,0x5830605
    2770:	0b 06                	or     eax,DWORD PTR [rsi]
    2772:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2778:	04 04                	add    al,0x4
    277a:	06                   	(bad)
    277b:	03 68 01             	add    ebp,DWORD PTR [rax+0x1]
    277e:	04 02                	add    al,0x2
    2780:	05 01 03 2c 01       	add    eax,0x12c0301
    2785:	05 03 14 05 17       	add    eax,0x17051403
    278a:	06                   	(bad)
    278b:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    2791:	06                   	(bad)
    2792:	03 52 01             	add    edx,DWORD PTR [rdx+0x1]
    2795:	05 09 13 01 04       	add    eax,0x4011309
    279a:	02 05 01 03 2b 01    	add    al,BYTE PTR [rip+0x12b0301]        # 12b2aa1 <_end+0x12aca89>
    27a0:	05 03 14 05 17       	add    eax,0x17051403
    27a5:	06                   	(bad)
    27a6:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    27ac:	00 02                	add    BYTE PTR [rdx],al
    27ae:	04 01                	add    al,0x1
    27b0:	06                   	(bad)
    27b1:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    27b4:	04 02                	add    al,0x2
    27b6:	05 01 03 2b 01       	add    eax,0x12b0301
    27bb:	05 03 14 05 17       	add    eax,0x17051403
    27c0:	06                   	(bad)
    27c1:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    27c7:	00 02                	add    BYTE PTR [rdx],al
    27c9:	04 02                	add    al,0x2
    27cb:	06                   	(bad)
    27cc:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    27cf:	04 02                	add    al,0x2
    27d1:	05 01 03 2b 01       	add    eax,0x12b0301
    27d6:	05 03 14 05 17       	add    eax,0x17051403
    27db:	06                   	(bad)
    27dc:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    27e2:	00 02                	add    BYTE PTR [rdx],al
    27e4:	04 03                	add    al,0x3
    27e6:	06                   	(bad)
    27e7:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    27ea:	00 02                	add    BYTE PTR [rdx],al
    27ec:	04 03                	add    al,0x3
    27ee:	01 05 06 03 0a 01    	add    DWORD PTR [rip+0x10a0306],eax        # 10a2afa <_end+0x109cae2>
    27f4:	05 05 03 0b 01       	add    eax,0x10b0305
    27f9:	05 1e 06 01 05       	add    eax,0x501061e
    27fe:	13 08                	adc    ecx,DWORD PTR [rax]
    2800:	2f                   	(bad)
    2801:	05 1e f1 05 05       	add    eax,0x505f11e
    2806:	06                   	(bad)
    2807:	3d 05 13 06 01       	cmp    eax,0x1061305
    280c:	05 05 06 83 05       	add    eax,0x5830605
    2811:	0b 06                	or     eax,DWORD PTR [rsi]
    2813:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2819:	04 04                	add    al,0x4
    281b:	06                   	(bad)
    281c:	03 69 01             	add    ebp,DWORD PTR [rcx+0x1]
    281f:	04 02                	add    al,0x2
    2821:	05 01 03 2b 01       	add    eax,0x12b0301
    2826:	05 03 14 05 17       	add    eax,0x17051403
    282b:	06                   	(bad)
    282c:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    2832:	06                   	(bad)
    2833:	03 53 01             	add    edx,DWORD PTR [rbx+0x1]
    2836:	05 09 13 01 04       	add    eax,0x4011309
    283b:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2b42 <_end+0x129cb2a>
    2841:	05 03 14 05 17       	add    eax,0x17051403
    2846:	06                   	(bad)
    2847:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    284d:	00 02                	add    BYTE PTR [rdx],al
    284f:	04 01                	add    al,0x1
    2851:	06                   	(bad)
    2852:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    2856:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2b5d <_end+0x129cb45>
    285c:	05 03 14 05 17       	add    eax,0x17051403
    2861:	06                   	(bad)
    2862:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2868:	00 02                	add    BYTE PTR [rdx],al
    286a:	04 02                	add    al,0x2
    286c:	06                   	(bad)
    286d:	03 54 01 04          	add    edx,DWORD PTR [rcx+rax*1+0x4]
    2871:	02 05 01 03 2a 01    	add    al,BYTE PTR [rip+0x12a0301]        # 12a2b78 <_end+0x129cb60>
    2877:	05 03 14 05 17       	add    eax,0x17051403
    287c:	06                   	(bad)
    287d:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2883:	00 02                	add    BYTE PTR [rdx],al
    2885:	04 03                	add    al,0x3
    2887:	06                   	(bad)
    2888:	03 54 01 00          	add    edx,DWORD PTR [rcx+rax*1+0x0]
    288c:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    288f:	01 05 06 03 09 01    	add    DWORD PTR [rip+0x1090306],eax        # 1092b9b <_end+0x108cb83>
    2895:	05 05 03 0b 01       	add    eax,0x10b0305
    289a:	05 1e 06 01 05       	add    eax,0x501061e
    289f:	13 08                	adc    ecx,DWORD PTR [rax]
    28a1:	2f                   	(bad)
    28a2:	05 1e f1 05 05       	add    eax,0x505f11e
    28a7:	06                   	(bad)
    28a8:	3d 05 13 06 01       	cmp    eax,0x1061305
    28ad:	05 05 06 83 05       	add    eax,0x5830605
    28b2:	0b 06                	or     eax,DWORD PTR [rsi]
    28b4:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    28ba:	04 04                	add    al,0x4
    28bc:	06                   	(bad)
    28bd:	03 6a 01             	add    ebp,DWORD PTR [rdx+0x1]
    28c0:	04 02                	add    al,0x2
    28c2:	05 01 03 2a 01       	add    eax,0x12a0301
    28c7:	05 03 14 05 17       	add    eax,0x17051403
    28cc:	06                   	(bad)
    28cd:	01 82 04 01 05 16    	add    DWORD PTR [rdx+0x16050104],eax
    28d3:	06                   	(bad)
    28d4:	03 54 01 05          	add    edx,DWORD PTR [rcx+rax*1+0x5]
    28d8:	09 13                	or     DWORD PTR [rbx],edx
    28da:	01 04 02             	add    DWORD PTR [rdx+rax*1],eax
    28dd:	05 01 03 29 01       	add    eax,0x1290301
    28e2:	05 03 14 05 17       	add    eax,0x17051403
    28e7:	06                   	(bad)
    28e8:	01 82 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],eax
    28ee:	00 02                	add    BYTE PTR [rdx],al
    28f0:	04 01                	add    al,0x1
    28f2:	06                   	(bad)
    28f3:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    28f6:	04 02                	add    al,0x2
    28f8:	05 01 03 29 01       	add    eax,0x1290301
    28fd:	05 03 14 05 17       	add    eax,0x17051403
    2902:	06                   	(bad)
    2903:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2909:	00 02                	add    BYTE PTR [rdx],al
    290b:	04 02                	add    al,0x2
    290d:	06                   	(bad)
    290e:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2911:	04 02                	add    al,0x2
    2913:	05 01 03 29 01       	add    eax,0x1290301
    2918:	05 03 14 05 17       	add    eax,0x17051403
    291d:	06                   	(bad)
    291e:	01 ba 04 01 05 09    	add    DWORD PTR [rdx+0x9050104],edi
    2924:	00 02                	add    BYTE PTR [rdx],al
    2926:	04 03                	add    al,0x3
    2928:	06                   	(bad)
    2929:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    292c:	00 02                	add    BYTE PTR [rdx],al
    292e:	04 03                	add    al,0x3
    2930:	01 05 06 1a 05 05    	add    DWORD PTR [rip+0x5051a06],eax        # 505433c <_end+0x504e324>
    2936:	03 0b                	add    ecx,DWORD PTR [rbx]
    2938:	01 05 1e 06 01 05    	add    DWORD PTR [rip+0x501061e],eax        # 5012f5c <_end+0x500cf44>
    293e:	13 08                	adc    ecx,DWORD PTR [rax]
    2940:	2f                   	(bad)
    2941:	05 1e f1 05 05       	add    eax,0x505f11e
    2946:	06                   	(bad)
    2947:	3d 05 13 06 01       	cmp    eax,0x1061305
    294c:	05 05 06 83 05       	add    eax,0x5830605
    2951:	0b 06                	or     eax,DWORD PTR [rsi]
    2953:	01 82 05 09 00 02    	add    DWORD PTR [rdx+0x2000905],eax
    2959:	04 04                	add    al,0x4
    295b:	06                   	(bad)
    295c:	03 6b 01             	add    ebp,DWORD PTR [rbx+0x1]
    295f:	04 02                	add    al,0x2
    2961:	05 01 03 29 01       	add    eax,0x1290301
    2966:	05 03 14 05 17       	add    eax,0x17051403
    296b:	06                   	(bad)
    296c:	01 82 04 01 05 12    	add    DWORD PTR [rdx+0x12050104],eax
    2972:	06                   	(bad)
    2973:	03 55 01             	add    edx,DWORD PTR [rbp+0x1]
    2976:	06                   	(bad)
    2977:	74 05                	je     297e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x35e>
    2979:	34 00                	xor    al,0x0
    297b:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    297e:	06                   	(bad)
    297f:	03 78 01             	add    edi,DWORD PTR [rax+0x1]
    2982:	04 02                	add    al,0x2
    2984:	05 01 03 31 01       	add    eax,0x1310301
    2989:	05 03 14 05 17       	add    eax,0x17051403
    298e:	06                   	(bad)
    298f:	01 e4                	add    esp,esp
    2991:	04 01                	add    al,0x1
    2993:	05 34 00 02 04       	add    eax,0x4020034
    2998:	03 06                	add    eax,DWORD PTR [rsi]
    299a:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    299d:	04 02                	add    al,0x2
    299f:	05 01 03 31 01       	add    eax,0x1310301
    29a4:	05 03 14 05 17       	add    eax,0x17051403
    29a9:	06                   	(bad)
    29aa:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    29b0:	00 02                	add    BYTE PTR [rdx],al
    29b2:	04 04                	add    al,0x4
    29b4:	06                   	(bad)
    29b5:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    29b8:	04 02                	add    al,0x2
    29ba:	05 01 03 31 01       	add    eax,0x1310301
    29bf:	05 03 14 05 17       	add    eax,0x17051403
    29c4:	06                   	(bad)
    29c5:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    29cb:	00 02                	add    BYTE PTR [rdx],al
    29cd:	04 05                	add    al,0x5
    29cf:	06                   	(bad)
    29d0:	03 4d 01             	add    ecx,DWORD PTR [rbp+0x1]
    29d3:	00 02                	add    BYTE PTR [rdx],al
    29d5:	04 05                	add    al,0x5
    29d7:	01 05 06 03 10 01    	add    DWORD PTR [rip+0x1100306],eax        # 1102ce3 <_end+0x10fcccb>
    29dd:	05 05 03 0b 01       	add    eax,0x10b0305
    29e2:	05 1e 06 01 05       	add    eax,0x501061e
    29e7:	13 08                	adc    ecx,DWORD PTR [rax]
    29e9:	2f                   	(bad)
    29ea:	05 1e f1 05 05       	add    eax,0x505f11e
    29ef:	06                   	(bad)
    29f0:	3d 05 13 06 01       	cmp    eax,0x1061305
    29f5:	05 05 06 9f 05       	add    eax,0x59f0605
    29fa:	0b 06                	or     eax,DWORD PTR [rsi]
    29fc:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2a02:	04 06                	add    al,0x6
    2a04:	06                   	(bad)
    2a05:	03 63 01             	add    esp,DWORD PTR [rbx+0x1]
    2a08:	04 02                	add    al,0x2
    2a0a:	05 01 03 31 01       	add    eax,0x1310301
    2a0f:	05 03 14 05 17       	add    eax,0x17051403
    2a14:	06                   	(bad)
    2a15:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2a1b:	34 00                	xor    al,0x0
    2a1d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2a20:	06                   	(bad)
    2a21:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2a25:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322d2c <_end+0x131cd14>
    2a2b:	05 03 14 05 17       	add    eax,0x17051403
    2a30:	06                   	(bad)
    2a31:	01 e4                	add    esp,esp
    2a33:	04 01                	add    al,0x1
    2a35:	05 34 00 02 04       	add    eax,0x4020034
    2a3a:	03 06                	add    eax,DWORD PTR [rsi]
    2a3c:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2a40:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322d47 <_end+0x131cd2f>
    2a46:	05 03 14 05 17       	add    eax,0x17051403
    2a4b:	06                   	(bad)
    2a4c:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a52:	00 02                	add    BYTE PTR [rdx],al
    2a54:	04 04                	add    al,0x4
    2a56:	06                   	(bad)
    2a57:	03 4c 01 04          	add    ecx,DWORD PTR [rcx+rax*1+0x4]
    2a5b:	02 05 01 03 32 01    	add    al,BYTE PTR [rip+0x1320301]        # 1322d62 <_end+0x131cd4a>
    2a61:	05 03 14 05 17       	add    eax,0x17051403
    2a66:	06                   	(bad)
    2a67:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2a6d:	00 02                	add    BYTE PTR [rdx],al
    2a6f:	04 05                	add    al,0x5
    2a71:	06                   	(bad)
    2a72:	03 4c 01 00          	add    ecx,DWORD PTR [rcx+rax*1+0x0]
    2a76:	02 04 05 01 05 06 03 	add    al,BYTE PTR [rax*1+0x3060501]
    2a7d:	11 01                	adc    DWORD PTR [rcx],eax
    2a7f:	05 05 03 0b 01       	add    eax,0x10b0305
    2a84:	05 1e 06 01 05       	add    eax,0x501061e
    2a89:	13 08                	adc    ecx,DWORD PTR [rax]
    2a8b:	2f                   	(bad)
    2a8c:	05 1e f1 05 05       	add    eax,0x505f11e
    2a91:	06                   	(bad)
    2a92:	3d 05 13 06 01       	cmp    eax,0x1061305
    2a97:	05 05 06 9f 05       	add    eax,0x59f0605
    2a9c:	0b 06                	or     eax,DWORD PTR [rsi]
    2a9e:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2aa4:	04 06                	add    al,0x6
    2aa6:	06                   	(bad)
    2aa7:	03 62 01             	add    esp,DWORD PTR [rdx+0x1]
    2aaa:	04 02                	add    al,0x2
    2aac:	05 01 03 32 01       	add    eax,0x1320301
    2ab1:	05 03 14 05 17       	add    eax,0x17051403
    2ab6:	06                   	(bad)
    2ab7:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2abd:	34 00                	xor    al,0x0
    2abf:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2ac2:	06                   	(bad)
    2ac3:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2ac6:	04 02                	add    al,0x2
    2ac8:	05 01 03 33 01       	add    eax,0x1330301
    2acd:	05 03 14 05 17       	add    eax,0x17051403
    2ad2:	06                   	(bad)
    2ad3:	01 e4                	add    esp,esp
    2ad5:	04 01                	add    al,0x1
    2ad7:	05 34 00 02 04       	add    eax,0x4020034
    2adc:	03 06                	add    eax,DWORD PTR [rsi]
    2ade:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2ae1:	04 02                	add    al,0x2
    2ae3:	05 01 03 33 01       	add    eax,0x1330301
    2ae8:	05 03 14 05 17       	add    eax,0x17051403
    2aed:	06                   	(bad)
    2aee:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2af4:	00 02                	add    BYTE PTR [rdx],al
    2af6:	04 04                	add    al,0x4
    2af8:	06                   	(bad)
    2af9:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2afc:	04 02                	add    al,0x2
    2afe:	05 01 03 33 01       	add    eax,0x1330301
    2b03:	05 03 14 05 17       	add    eax,0x17051403
    2b08:	06                   	(bad)
    2b09:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b0f:	00 02                	add    BYTE PTR [rdx],al
    2b11:	04 05                	add    al,0x5
    2b13:	06                   	(bad)
    2b14:	03 4b 01             	add    ecx,DWORD PTR [rbx+0x1]
    2b17:	00 02                	add    BYTE PTR [rdx],al
    2b19:	04 05                	add    al,0x5
    2b1b:	01 05 06 03 12 01    	add    DWORD PTR [rip+0x1120306],eax        # 1122e27 <_end+0x111ce0f>
    2b21:	05 05 03 0b 01       	add    eax,0x10b0305
    2b26:	05 1e 06 01 05       	add    eax,0x501061e
    2b2b:	13 08                	adc    ecx,DWORD PTR [rax]
    2b2d:	2f                   	(bad)
    2b2e:	05 1e f1 05 05       	add    eax,0x505f11e
    2b33:	06                   	(bad)
    2b34:	3d 05 13 06 01       	cmp    eax,0x1061305
    2b39:	05 05 06 9f 05       	add    eax,0x59f0605
    2b3e:	0b 06                	or     eax,DWORD PTR [rsi]
    2b40:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2b46:	04 06                	add    al,0x6
    2b48:	06                   	(bad)
    2b49:	03 61 01             	add    esp,DWORD PTR [rcx+0x1]
    2b4c:	04 02                	add    al,0x2
    2b4e:	05 01 03 33 01       	add    eax,0x1330301
    2b53:	05 03 14 05 17       	add    eax,0x17051403
    2b58:	06                   	(bad)
    2b59:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2b5f:	34 00                	xor    al,0x0
    2b61:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2b64:	06                   	(bad)
    2b65:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b68:	04 02                	add    al,0x2
    2b6a:	05 01 03 34 01       	add    eax,0x1340301
    2b6f:	05 03 14 05 17       	add    eax,0x17051403
    2b74:	06                   	(bad)
    2b75:	01 e4                	add    esp,esp
    2b77:	04 01                	add    al,0x1
    2b79:	05 34 00 02 04       	add    eax,0x4020034
    2b7e:	03 06                	add    eax,DWORD PTR [rsi]
    2b80:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b83:	04 02                	add    al,0x2
    2b85:	05 01 03 34 01       	add    eax,0x1340301
    2b8a:	05 03 14 05 17       	add    eax,0x17051403
    2b8f:	06                   	(bad)
    2b90:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2b96:	00 02                	add    BYTE PTR [rdx],al
    2b98:	04 04                	add    al,0x4
    2b9a:	06                   	(bad)
    2b9b:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2b9e:	04 02                	add    al,0x2
    2ba0:	05 01 03 34 01       	add    eax,0x1340301
    2ba5:	05 03 14 05 17       	add    eax,0x17051403
    2baa:	06                   	(bad)
    2bab:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2bb1:	00 02                	add    BYTE PTR [rdx],al
    2bb3:	04 05                	add    al,0x5
    2bb5:	06                   	(bad)
    2bb6:	03 4a 01             	add    ecx,DWORD PTR [rdx+0x1]
    2bb9:	00 02                	add    BYTE PTR [rdx],al
    2bbb:	04 05                	add    al,0x5
    2bbd:	01 05 06 03 13 01    	add    DWORD PTR [rip+0x1130306],eax        # 1132ec9 <_end+0x112ceb1>
    2bc3:	05 05 03 0b 01       	add    eax,0x10b0305
    2bc8:	05 1e 06 01 05       	add    eax,0x501061e
    2bcd:	13 08                	adc    ecx,DWORD PTR [rax]
    2bcf:	2f                   	(bad)
    2bd0:	05 1e f1 05 05       	add    eax,0x505f11e
    2bd5:	06                   	(bad)
    2bd6:	3d 05 13 06 01       	cmp    eax,0x1061305
    2bdb:	05 05 06 9f 05       	add    eax,0x59f0605
    2be0:	0b 06                	or     eax,DWORD PTR [rsi]
    2be2:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2be8:	04 06                	add    al,0x6
    2bea:	06                   	(bad)
    2beb:	03 60 01             	add    esp,DWORD PTR [rax+0x1]
    2bee:	04 02                	add    al,0x2
    2bf0:	05 01 03 34 01       	add    eax,0x1340301
    2bf5:	05 03 14 05 17       	add    eax,0x17051403
    2bfa:	06                   	(bad)
    2bfb:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2c01:	34 00                	xor    al,0x0
    2c03:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2c06:	06                   	(bad)
    2c07:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2c0a:	04 02                	add    al,0x2
    2c0c:	05 01 03 35 01       	add    eax,0x1350301
    2c11:	05 03 14 05 17       	add    eax,0x17051403
    2c16:	06                   	(bad)
    2c17:	01 e4                	add    esp,esp
    2c19:	04 01                	add    al,0x1
    2c1b:	05 34 00 02 04       	add    eax,0x4020034
    2c20:	03 06                	add    eax,DWORD PTR [rsi]
    2c22:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2c25:	04 02                	add    al,0x2
    2c27:	05 01 03 35 01       	add    eax,0x1350301
    2c2c:	05 03 14 05 17       	add    eax,0x17051403
    2c31:	06                   	(bad)
    2c32:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2c38:	00 02                	add    BYTE PTR [rdx],al
    2c3a:	04 04                	add    al,0x4
    2c3c:	06                   	(bad)
    2c3d:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2c40:	04 02                	add    al,0x2
    2c42:	05 01 03 35 01       	add    eax,0x1350301
    2c47:	05 03 14 05 17       	add    eax,0x17051403
    2c4c:	06                   	(bad)
    2c4d:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2c53:	00 02                	add    BYTE PTR [rdx],al
    2c55:	04 05                	add    al,0x5
    2c57:	06                   	(bad)
    2c58:	03 49 01             	add    ecx,DWORD PTR [rcx+0x1]
    2c5b:	00 02                	add    BYTE PTR [rdx],al
    2c5d:	04 05                	add    al,0x5
    2c5f:	01 05 06 03 14 01    	add    DWORD PTR [rip+0x1140306],eax        # 1142f6b <_end+0x113cf53>
    2c65:	05 05 03 0b 01       	add    eax,0x10b0305
    2c6a:	05 1e 06 01 05       	add    eax,0x501061e
    2c6f:	13 08                	adc    ecx,DWORD PTR [rax]
    2c71:	2f                   	(bad)
    2c72:	05 1e f1 05 05       	add    eax,0x505f11e
    2c77:	06                   	(bad)
    2c78:	3d 05 13 06 01       	cmp    eax,0x1061305
    2c7d:	05 05 06 9f 05       	add    eax,0x59f0605
    2c82:	0b 06                	or     eax,DWORD PTR [rsi]
    2c84:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2c8a:	04 06                	add    al,0x6
    2c8c:	06                   	(bad)
    2c8d:	03 5f 01             	add    ebx,DWORD PTR [rdi+0x1]
    2c90:	04 02                	add    al,0x2
    2c92:	05 01 03 35 01       	add    eax,0x1350301
    2c97:	05 03 14 05 17       	add    eax,0x17051403
    2c9c:	06                   	(bad)
    2c9d:	01 ba ac 04 01 05    	add    DWORD PTR [rdx+0x50104ac],edi
    2ca3:	34 00                	xor    al,0x0
    2ca5:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2ca8:	06                   	(bad)
    2ca9:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2cac:	04 02                	add    al,0x2
    2cae:	05 01 03 36 01       	add    eax,0x1360301
    2cb3:	05 03 14 05 17       	add    eax,0x17051403
    2cb8:	06                   	(bad)
    2cb9:	01 e4                	add    esp,esp
    2cbb:	04 01                	add    al,0x1
    2cbd:	05 34 00 02 04       	add    eax,0x4020034
    2cc2:	03 06                	add    eax,DWORD PTR [rsi]
    2cc4:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2cc7:	04 02                	add    al,0x2
    2cc9:	05 01 03 36 01       	add    eax,0x1360301
    2cce:	05 03 14 05 17       	add    eax,0x17051403
    2cd3:	06                   	(bad)
    2cd4:	01 82 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],eax
    2cda:	00 02                	add    BYTE PTR [rdx],al
    2cdc:	04 04                	add    al,0x4
    2cde:	06                   	(bad)
    2cdf:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2ce2:	04 02                	add    al,0x2
    2ce4:	05 01 03 36 01       	add    eax,0x1360301
    2ce9:	05 03 14 05 17       	add    eax,0x17051403
    2cee:	06                   	(bad)
    2cef:	01 ba 04 01 05 34    	add    DWORD PTR [rdx+0x34050104],edi
    2cf5:	00 02                	add    BYTE PTR [rdx],al
    2cf7:	04 05                	add    al,0x5
    2cf9:	06                   	(bad)
    2cfa:	03 48 01             	add    ecx,DWORD PTR [rax+0x1]
    2cfd:	00 02                	add    BYTE PTR [rdx],al
    2cff:	04 05                	add    al,0x5
    2d01:	01 05 06 03 15 01    	add    DWORD PTR [rip+0x1150306],eax        # 115300d <_end+0x114cff5>
    2d07:	05 05 03 0b 01       	add    eax,0x10b0305
    2d0c:	05 1e 06 01 05       	add    eax,0x501061e
    2d11:	13 08                	adc    ecx,DWORD PTR [rax]
    2d13:	2f                   	(bad)
    2d14:	05 1e f1 05 05       	add    eax,0x505f11e
    2d19:	06                   	(bad)
    2d1a:	3d 05 13 06 01       	cmp    eax,0x1061305
    2d1f:	05 05 06 9f 05       	add    eax,0x59f0605
    2d24:	0b 06                	or     eax,DWORD PTR [rsi]
    2d26:	01 9e 05 34 00 02    	add    DWORD PTR [rsi+0x2003405],ebx
    2d2c:	04 06                	add    al,0x6
    2d2e:	06                   	(bad)
    2d2f:	03 5e 01             	add    ebx,DWORD PTR [rsi+0x1]
    2d32:	04 02                	add    al,0x2
    2d34:	05 01 03 36 01       	add    eax,0x1360301
    2d39:	05 03 14 05 17       	add    eax,0x17051403
    2d3e:	06                   	(bad)
    2d3f:	01 ba 58 04 01 05    	add    DWORD PTR [rdx+0x5010458],edi
    2d45:	01 03                	add    DWORD PTR [rbx],eax
    2d47:	5b                   	pop    rbx
    2d48:	01 05 05 00 02 04    	add    DWORD PTR [rip+0x4020005],eax        # 4022d53 <_end+0x401cd3b>
    2d4e:	01 03                	add    DWORD PTR [rbx],eax
    2d50:	62                   	(bad)
    2d51:	58                   	pop    rax
    2d52:	00 02                	add    BYTE PTR [rdx],al
    2d54:	04 01                	add    al,0x1
    2d56:	ba 00 02 04 01       	mov    edx,0x1040200
    2d5b:	74 00                	je     2d5d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2dd>
    2d5d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d60:	74 00                	je     2d62 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e2>
    2d62:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d65:	57                   	push   rdi
    2d66:	00 02                	add    BYTE PTR [rdx],al
    2d68:	04 01                	add    al,0x1
    2d6a:	ba 00 02 04 01       	mov    edx,0x1040200
    2d6f:	74 00                	je     2d71 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2f1>
    2d71:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d74:	74 05                	je     2d7b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2fb>
    2d76:	52                   	push   rdx
    2d77:	06                   	(bad)
    2d78:	03 96 01 ba 06 01    	add    edx,DWORD PTR [rsi+0x106ba01]
    2d7e:	05 05 06 4b 05       	add    eax,0x54b0605
    2d83:	52                   	push   rdx
    2d84:	06                   	(bad)
    2d85:	11 05 05 08 67 05    	adc    DWORD PTR [rip+0x5670805],eax        # 5673590 <_end+0x566d578>
    2d8b:	1c 00                	sbb    al,0x0
    2d8d:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2d90:	06                   	(bad)
    2d91:	af                   	scas   eax,DWORD PTR es:[rdi]
    2d92:	00 02                	add    BYTE PTR [rdx],al
    2d94:	04 01                	add    al,0x1
    2d96:	06                   	(bad)
    2d97:	08 ba 05 0c 57 4a    	or     BYTE PTR [rdx+0x4a570c05],bh
    2d9d:	05 09 06 08 3e       	add    eax,0x3e080609
    2da2:	05 2e 06 01 05       	add    eax,0x501062e
    2da7:	39 ba 82 05 1c d6    	cmp    DWORD PTR [rdx-0x29e3fa7e],edi
    2dad:	05 05 00 02 04       	add    eax,0x4020005
    2db2:	03 06                	add    eax,DWORD PTR [rsi]
    2db4:	b9 05 1c 00 02       	mov    ecx,0x2001c05
    2db9:	04 01                	add    al,0x1
    2dbb:	01 00                	add    DWORD PTR [rax],eax
    2dbd:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2dc0:	06                   	(bad)
    2dc1:	08 20                	or     BYTE PTR [rax],ah
    2dc3:	05 09 06 91 05       	add    eax,0x5910609
    2dc8:	2c 06                	sub    al,0x6
    2dca:	01 05 2e 2e 05 2c    	add    DWORD PTR [rip+0x2c052e2e],eax        # 2c055bfe <_end+0x2c04fbe6>
    2dd0:	4a 05 2e 58 05 39    	rex.WX add rax,0x3905582e
    2dd6:	4a 05 1c 82 05 05    	rex.WX add rax,0x505821c
    2ddc:	00 02                	add    BYTE PTR [rdx],al
    2dde:	04 03                	add    al,0x3
    2de0:	06                   	(bad)
    2de1:	81 05 1c 00 02 04 01 	add    DWORD PTR [rip+0x402001c],0x9050101        # 4022e07 <_end+0x401cdef>
    2de8:	01 05 09 
    2deb:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2dec:	05 2e 06 01 05       	add    eax,0x501062e
    2df1:	39 90 05 1c 4a 05    	cmp    DWORD PTR [rax+0x54a1c05],edx
    2df7:	05 00 02 04 03       	add    eax,0x3040200
    2dfc:	06                   	(bad)
    2dfd:	49 05 1c 00 02 04    	rex.WB add rax,0x402001c
    2e03:	01 01                	add    DWORD PTR [rcx],eax
    2e05:	00 02                	add    BYTE PTR [rdx],al
    2e07:	04 01                	add    al,0x1
    2e09:	06                   	(bad)
    2e0a:	01 05 05 06 15 05    	add    DWORD PTR [rip+0x5150605],eax        # 5153415 <_end+0x514d3fd>
    2e10:	1e                   	(bad)
    2e11:	06                   	(bad)
    2e12:	01 05 1f 4a 05 1e    	add    DWORD PTR [rip+0x1e054a1f],eax        # 1e057837 <_end+0x1e05181f>
    2e18:	4a 04 03             	rex.WX add al,0x3
    2e1b:	05 03 06 03 87       	add    eax,0x87030603
    2e20:	02 90 05 05 13 05    	add    dl,BYTE PTR [rax+0x5130505]
    2e26:	1b 06                	sbb    eax,DWORD PTR [rsi]
    2e28:	9e                   	sahf
    2e29:	4a 04 01             	rex.WX add al,0x1
    2e2c:	05 05 06 03 fa       	add    eax,0xfa030605
    2e31:	7d 01                	jge    2e34 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b4>
    2e33:	05 01 06 13 05       	add    eax,0x5130601
    2e38:	18 00                	sbb    BYTE PTR [rax],al
    2e3a:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e3d:	47 05 01 4d c8 05    	rex.RXB add eax,0x5c84d01
    2e43:	05 06 7f 05 1e       	add    eax,0x1e057f06
    2e48:	06                   	(bad)
    2e49:	01 4a 04             	add    DWORD PTR [rdx+0x4],ecx
    2e4c:	03 05 03 06 03 87    	add    eax,DWORD PTR [rip+0xffffffff87030603]        # ffffffff87033455 <_end+0xffffffff8702d43d>
    2e52:	02 4a 05             	add    cl,BYTE PTR [rdx+0x5]
    2e55:	05 13 06 2e 04       	add    eax,0x42e0613
    2e5a:	01 05 13 03 f5 7d    	add    DWORD PTR [rip+0x7df50313],eax        # 7df53173 <_end+0x7df4d15b>
    2e60:	01 05 0c 2d 4a 04    	add    DWORD PTR [rip+0x44a2d0c],eax        # 44a5b72 <_end+0x449fb5a>
    2e66:	03 05 1b 03 8c 02    	add    eax,DWORD PTR [rip+0x28c031b]        # 28c3187 <_end+0x28bd16f>
    2e6c:	58                   	pop    rax
    2e6d:	58                   	pop    rax
    2e6e:	2e 04 01             	cs add al,0x1
    2e71:	05 08 06 03 f1       	add    eax,0xf1030608
    2e76:	7d 01                	jge    2e79 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f9>
    2e78:	05 05 00 02 04       	add    eax,0x4020005
    2e7d:	01 06                	add    DWORD PTR [rsi],eax
    2e7f:	13 00                	adc    eax,DWORD PTR [rax]
    2e81:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e84:	08 2e                	or     BYTE PTR [rsi],ch
    2e86:	00 02                	add    BYTE PTR [rdx],al
    2e88:	04 01                	add    al,0x1
    2e8a:	74 00                	je     2e8c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40c>
    2e8c:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2e8f:	58                   	pop    rax
    2e90:	05 43 06 00 09       	add    eax,0x9000643
    2e95:	02 40 38             	add    al,BYTE PTR [rax+0x38]
    2e98:	00 00                	add    BYTE PTR [rax],al
    2e9a:	00 00                	add    BYTE PTR [rax],al
    2e9c:	00 00                	add    BYTE PTR [rax],al
    2e9e:	03 0b                	add    ecx,DWORD PTR [rbx]
    2ea0:	01 06                	add    DWORD PTR [rsi],eax
    2ea2:	01 05 05 06 4b 05    	add    DWORD PTR [rip+0x54b0605],eax        # 54b34ad <_end+0x54ad495>
    2ea8:	43 06                	rex.XB (bad)
    2eaa:	11 05 05 08 83 05    	adc    DWORD PTR [rip+0x5830805],eax        # 58336b5 <_end+0x582d69d>
    2eb0:	1c 00                	sbb    al,0x0
    2eb2:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    2eb5:	06                   	(bad)
    2eb6:	93                   	xchg   ebx,eax
    2eb7:	05 27 00 02 04       	add    eax,0x4020027
    2ebc:	01 06                	add    DWORD PTR [rsi],eax
    2ebe:	01 05 1c 00 02 04    	add    DWORD PTR [rip+0x402001c],eax        # 4022ee0 <_end+0x401cec8>
    2ec4:	01 3c 05 23 ad 3c 05 	add    DWORD PTR [rax*1+0x53cad23],edi
    2ecb:	0b 08                	or     ecx,DWORD PTR [rax]
    2ecd:	8e 05 12 08 30 05    	mov    es,WORD PTR [rip+0x5300812]        # 53036e5 <_end+0x52fd6cd>
    2ed3:	26 d7                	xlat   BYTE PTR ds:[rbx]
    2ed5:	05 09 06 08 c7       	add    eax,0xc7080609
    2eda:	13 05 12 06 11 05    	adc    eax,DWORD PTR [rip+0x5110612]        # 51134f2 <_end+0x510d4da>
    2ee0:	26 02 80 01 13 05 31 	es add al,BYTE PTR [rax+0x31051301]
    2ee7:	02 23                	add    ah,BYTE PTR [rbx]
    2ee9:	12 c8                	adc    cl,al
    2eeb:	05 1c 02 2e 12       	add    eax,0x122e021c
    2ef0:	c8 05 05 00          	enter  0x505,0x0
    2ef4:	02 04 03             	add    al,BYTE PTR [rbx+rax*1]
    2ef7:	06                   	(bad)
    2ef8:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f1a <_end+0x401cf02>
    2efe:	01 01                	add    DWORD PTR [rcx],eax
    2f00:	00 02                	add    BYTE PTR [rdx],al
    2f02:	04 01                	add    al,0x1
    2f04:	06                   	(bad)
    2f05:	08 9e 05 09 06 f3    	or     BYTE PTR [rsi-0xcf9f6fb],bl
    2f0b:	13 05 26 06 01 05    	adc    eax,DWORD PTR [rip+0x5010626]        # 5013537 <_end+0x500d51f>
    2f11:	12 e3                	adc    ah,bl
    2f13:	05 26 08 c9 05       	add    eax,0x5c90826
    2f18:	31 02                	xor    DWORD PTR [rdx],eax
    2f1a:	3a 12                	cmp    dl,BYTE PTR [rdx]
    2f1c:	05 1c 08 4a c8       	add    eax,0xc84a081c
    2f21:	05 05 00 02 04       	add    eax,0x4020005
    2f26:	03 06                	add    eax,DWORD PTR [rsi]
    2f28:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f4a <_end+0x401cf32>
    2f2e:	01 01                	add    DWORD PTR [rcx],eax
    2f30:	05 09 2f 13 05       	add    eax,0x5132f09
    2f35:	29 06                	sub    DWORD PTR [rsi],eax
    2f37:	11 05 12 2e 05 26    	adc    DWORD PTR [rip+0x26052e12],eax        # 26055d4f <_end+0x2604fd37>
    2f3d:	4b 05 05 00 02 04    	rex.WXB add rax,0x4020005
    2f43:	03 8e 05 26 3e 05    	add    ecx,DWORD PTR [rsi+0x53e2605]
    2f49:	31 4a 05             	xor    DWORD PTR [rdx+0x5],ecx
    2f4c:	1c 4a                	sbb    al,0x4a
    2f4e:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f54:	03 06                	add    eax,DWORD PTR [rsi]
    2f56:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022f78 <_end+0x401cf60>
    2f5c:	01 01                	add    DWORD PTR [rcx],eax
    2f5e:	05 09 4b 13 05       	add    eax,0x5134b09
    2f63:	12 06                	adc    al,BYTE PTR [rsi]
    2f65:	11 4a 05             	adc    DWORD PTR [rdx+0x5],ecx
    2f68:	05 00 02 04 03       	add    eax,0x3040200
    2f6d:	11 05 26 3e 05 31    	adc    DWORD PTR [rip+0x31053e26],eax        # 31056d99 <_end+0x31050d81>
    2f73:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f77:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f7d:	03 06                	add    eax,DWORD PTR [rsi]
    2f7f:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022fa1 <_end+0x401cf89>
    2f85:	01 01                	add    DWORD PTR [rcx],eax
    2f87:	05 09 4b 13 05       	add    eax,0x5134b09
    2f8c:	12 06                	adc    al,BYTE PTR [rsi]
    2f8e:	11 05 26 4b 05 31    	adc    DWORD PTR [rip+0x31054b26],eax        # 31057aba <_end+0x31051aa2>
    2f94:	c8 05 1c 4a          	enter  0x1c05,0x4a
    2f98:	4a 05 05 00 02 04    	rex.WX add rax,0x4020005
    2f9e:	03 06                	add    eax,DWORD PTR [rsi]
    2fa0:	10 05 1c 00 02 04    	adc    BYTE PTR [rip+0x402001c],al        # 4022fc2 <_end+0x401cfaa>
    2fa6:	01 01                	add    DWORD PTR [rcx],eax
    2fa8:	00 02                	add    BYTE PTR [rdx],al
    2faa:	04 01                	add    al,0x1
    2fac:	06                   	(bad)
    2fad:	01 05 05 06 16 05    	add    DWORD PTR [rip+0x5160605],eax        # 51635b8 <_end+0x515d5a0>
    2fb3:	1e                   	(bad)
    2fb4:	06                   	(bad)
    2fb5:	01 04 03             	add    DWORD PTR [rbx+rax*1],eax
    2fb8:	05 03 06 03 fa       	add    eax,0xfa030603
    2fbd:	01 c8                	add    eax,ecx
    2fbf:	05 05 13 04 01       	add    eax,0x1041305
    2fc4:	05 01 06 03 88       	add    eax,0x88030601
    2fc9:	7e 74                	jle    303f <_Z7testAllPKcjS0_+0x10f>
    2fcb:	04 03                	add    al,0x3
    2fcd:	05 1b 03 f8 01       	add    eax,0x1f8031b
    2fd2:	4a 04 01             	rex.WX add al,0x1
    2fd5:	05 01 03 88 7e       	add    eax,0x7e880301
    2fda:	58                   	pop    rax
    2fdb:	05 05 06 e1 05       	add    eax,0x5e10605
    2fe0:	1e                   	(bad)
    2fe1:	06                   	(bad)
    2fe2:	01 05 01 5b 05 1e    	add    DWORD PTR [rip+0x1e055b01],eax        # 1e058ae9 <_end+0x1e052ad1>
    2fe8:	47 04 03             	rex.RXB add al,0x3
    2feb:	05 03 06 03 fa       	add    eax,0xfa030603
    2ff0:	01 58 05             	add    DWORD PTR [rax+0x5],ebx
    2ff3:	05 13 04 01 05       	add    eax,0x5010413
    2ff8:	01 06                	add    DWORD PTR [rsi],eax
    2ffa:	03 88 7e 01 04 03    	add    ecx,DWORD PTR [rax+0x304017e]
    3000:	05 1b 03 f8 01       	add    eax,0x1f8031b
    3005:	74 58                	je     305f <_Z7testAllPKcjS0_+0x12f>
    3007:	04 01                	add    al,0x1
    3009:	05 01 03 88 7e       	add    eax,0x7e880301
    300e:	01 66 3c             	add    DWORD PTR [rsi+0x3c],esp
    3011:	05 13 03 79 2e       	add    eax,0x2e790313
    3016:	05 0b 2d 05 01       	add    eax,0x1052d0b
    301b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    301c:	04 03                	add    al,0x3
    301e:	05 1b 03 f8 01       	add    eax,0x1f8031b
    3023:	4a 04 01             	rex.WX add al,0x1
    3026:	05 01 03 88 7e       	add    eax,0x7e880301
    302b:	4a 04 03             	rex.WX add al,0x3
    302e:	05 1b 03 f8 01       	add    eax,0x1f8031b
    3033:	74 58                	je     308d <_Z7testAllPKcjS0_+0x15d>
    3035:	04 01                	add    al,0x1
    3037:	05 07 06 03 fd       	add    eax,0xfd030607
    303c:	7d 01                	jge    303f <_Z7testAllPKcjS0_+0x10f>
    303e:	05 05 00 02 04       	add    eax,0x4020005
    3043:	01 06                	add    DWORD PTR [rsi],eax
    3045:	13 00                	adc    eax,DWORD PTR [rax]
    3047:	02 04 01             	add    al,BYTE PTR [rcx+rax*1]
    304a:	08 90 00 02 04 01    	or     BYTE PTR [rax+0x1040200],dl
    3050:	58                   	pop    rax
    3051:	00 01                	add    BYTE PTR [rcx],al
    3053:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
       3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
       4:	61                   	(bad)
       5:	74 31                	je     38 <__abi_tag-0x344>
       7:	36 00 36             	ss add BYTE PTR [rsi],dh
       a:	6c                   	ins    BYTE PTR es:[rdi],dx
       b:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
      12:	5a 
      13:	53                   	push   rbx
      14:	74 33                	je     49 <__abi_tag-0x333>
      16:	61                   	(bad)
      17:	62 73 6c 00 5f       	(bad)
      1c:	5a                   	pop    rdx
      1d:	53                   	push   rbx
      1e:	74 33                	je     53 <__abi_tag-0x329>
      20:	61                   	(bad)
      21:	62 73 6e 00 71       	(bad)
      26:	73 6f                	jae    97 <__abi_tag-0x2e5>
      28:	72 74                	jb     9e <__abi_tag-0x2de>
      2a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
      2d:	72 74                	jb     a3 <__abi_tag-0x2d9>
      2f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      30:	6c                   	ins    BYTE PTR es:[rdi],dx
      31:	64 00 61 74          	add    BYTE PTR fs:[rcx+0x74],ah
      35:	5f                   	pop    rdi
      36:	71 75                	jno    ad <__abi_tag-0x2cf>
      38:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
      3f:	74 00                	je     41 <__abi_tag-0x33b>
      41:	5f                   	pop    rdi
      42:	5a                   	pop    rdx
      43:	53                   	push   rbx
      44:	74 33                	je     79 <__abi_tag-0x303>
      46:	61                   	(bad)
      47:	62 73 78 00 5f       	(bad)
      4c:	5f                   	pop    rdi
      4d:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      54:	73 74                	jae    ca <__abi_tag-0x2b2>
      56:	72 74                	jb     cc <__abi_tag-0x2b0>
      58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      59:	6c                   	ins    BYTE PTR es:[rdi],dx
      5a:	00 73 68             	add    BYTE PTR [rbx+0x68],dh
      5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      5e:	72 74                	jb     d4 <__abi_tag-0x2a8>
      60:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
      63:	74 00                	je     65 <__abi_tag-0x317>
      65:	62 73 65 61 72       	(bad)
      6a:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
      6d:	61                   	(bad)
      6e:	74 65                	je     d5 <__abi_tag-0x2a7>
      70:	78 69                	js     db <__abi_tag-0x2a1>
      72:	74 00                	je     74 <__abi_tag-0x308>
      74:	5f                   	pop    rdi
      75:	5a                   	pop    rdx
      76:	53                   	push   rbx
      77:	74 33                	je     ac <__abi_tag-0x2d0>
      79:	64 69 76 6c 6c 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x6c],0x5f5f006c
      80:	5f 
      81:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
      88:	73 74                	jae    fe <__abi_tag-0x27e>
      8a:	72 74                	jb     100 <__abi_tag-0x27c>
      8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      8d:	6c                   	ins    BYTE PTR es:[rdi],dx
      8e:	6c                   	ins    BYTE PTR es:[rdi],dx
      8f:	00 53 45             	add    BYTE PTR [rbx+0x45],dl
      92:	41 52                	push   r10
      94:	43                   	rex.XB
      95:	48 5f                	rex.W pop rdi
      97:	45                   	rex.RB
      98:	4c                   	rex.WR
      99:	45                   	rex.RB
      9a:	4d 53                	rex.WRB push r11
      9c:	5f                   	pop    rdi
      9d:	41                   	rex.B
      9e:	4d                   	rex.WRB
      9f:	4f 55                	rex.WRXB push r13
      a1:	4e 54                	rex.WRX push rsp
      a3:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
      a6:	69 6e 00 5f 5f 75 69 	imul   ebp,DWORD PTR [rsi+0x0],0x69755f5f
      ad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      ae:	74 33                	je     e3 <__abi_tag-0x299>
      b0:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
      b3:	00 37                	add    BYTE PTR [rdi],dh
      b5:	6c                   	ins    BYTE PTR es:[rdi],dx
      b6:	6c                   	ins    BYTE PTR es:[rdi],dx
      b7:	64 69 76 5f 74 00 67 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x65670074
      be:	65 
      bf:	74 65                	je     126 <__abi_tag-0x256>
      c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      c2:	76 00                	jbe    c4 <__abi_tag-0x2b8>
      c4:	59                   	pop    rcx
      c5:	4d                   	rex.WRB
      c6:	4d 5f                	rex.WRB pop r15
      c8:	42 59                	rex.X pop rcx
      ca:	54                   	push   rsp
      cb:	45 53                	rex.RB push r11
      cd:	5f                   	pop    rdi
      ce:	53                   	push   rbx
      cf:	49 5a                	rex.WB pop r10
      d1:	45 00 66 6c          	add    BYTE PTR [r14+0x6c],r12b
      d5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      d6:	61                   	(bad)
      d7:	74 00                	je     d9 <__abi_tag-0x2a3>
      d9:	6d                   	ins    DWORD PTR es:[rdi],dx
      da:	62                   	(bad)
      db:	74 6f                	je     14c <__abi_tag-0x230>
      dd:	77 63                	ja     142 <__abi_tag-0x23a>
      df:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
      e3:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      e8:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
      ec:	74 00                	je     ee <__abi_tag-0x28e>
      ee:	6c                   	ins    BYTE PTR es:[rdi],dx
      ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      f1:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
      f6:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
      fa:	73 69                	jae    165 <__abi_tag-0x217>
      fc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      fe:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     103:	74 00                	je     105 <__abi_tag-0x277>
     105:	73 74                	jae    17b <__abi_tag-0x201>
     107:	72 74                	jb     17d <__abi_tag-0x1ff>
     109:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     10a:	64 00 74 65 73       	add    BYTE PTR fs:[rbp+riz*2+0x73],dh
     10f:	74 41                	je     152 <__abi_tag-0x22a>
     111:	6c                   	ins    BYTE PTR es:[rdi],dx
     112:	6c                   	ins    BYTE PTR es:[rdi],dx
     113:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
     116:	55                   	push   rbp
     117:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
     11a:	2b 31                	sub    esi,DWORD PTR [rcx]
     11c:	37                   	(bad)
     11d:	20 31                	and    BYTE PTR [rcx],dh
     11f:	33 2e                	xor    ebp,DWORD PTR [rsi]
     121:	33 2e                	xor    ebp,DWORD PTR [rsi]
     123:	30 20                	xor    BYTE PTR [rax],ah
     125:	2d 6d 73 73 65       	sub    eax,0x6573736d
     12a:	34 2e                	xor    al,0x2e
     12c:	32 20                	xor    ah,BYTE PTR [rax]
     12e:	2d 6d 61 76 78       	sub    eax,0x7876616d
     133:	32 20                	xor    ah,BYTE PTR [rax]
     135:	2d 6d 74 75 6e       	sub    eax,0x6e75746d
     13a:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
     140:	72 69                	jb     1ab <__abi_tag-0x1d1>
     142:	63 20                	movsxd esp,DWORD PTR [rax]
     144:	2d 6d 61 72 63       	sub    eax,0x6372616d
     149:	68 3d 78 38 36       	push   0x3638783d
     14e:	2d 36 34 20 2d       	sub    eax,0x2d203436
     153:	67 20 2d 4f 33 20 2d 	and    BYTE PTR [eip+0x2d20334f],ch        # 2d2034a9 <_end+0x2d1fd491>
     15a:	66 61                	data16 (bad)
     15c:	73 79                	jae    1d7 <__abi_tag-0x1a5>
     15e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     15f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     163:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     164:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     165:	75 73                	jne    1da <__abi_tag-0x1a2>
     167:	2d 75 6e 77 69       	sub    eax,0x69776e75
     16c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     16d:	64 2d 74 61 62 6c    	fs sub eax,0x6c626174
     173:	65 73 20             	gs jae 196 <__abi_tag-0x1e6>
     176:	2d 66 73 74 61       	sub    eax,0x61747366
     17b:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     17e:	70 72                	jo     1f2 <__abi_tag-0x18a>
     180:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     181:	74 65                	je     1e8 <__abi_tag-0x194>
     183:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     187:	2d 73 74 72 6f       	sub    eax,0x6f727473
     18c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     18d:	67 20 2d 66 73 74 61 	and    BYTE PTR [eip+0x61747366],ch        # 617474fa <_end+0x617414e2>
     194:	63 6b 2d             	movsxd ebp,DWORD PTR [rbx+0x2d]
     197:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
     19b:	68 2d 70 72 6f       	push   0x6f72702d
     1a0:	74 65                	je     207 <__abi_tag-0x175>
     1a2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1a7:	20 2d 66 63 66 2d    	and    BYTE PTR [rip+0x2d666366],ch        # 2d666513 <_end+0x2d6604fb>
     1ad:	70 72                	jo     221 <__abi_tag-0x15b>
     1af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1b0:	74 65                	je     217 <__abi_tag-0x165>
     1b2:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
     1b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1b7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     1ba:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     1be:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1c0:	75 5f                	jne    221 <__abi_tag-0x15b>
     1c2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1c5:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
     1c9:	45 78 78             	rex.RB js 244 <__abi_tag-0x138>
     1cc:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1cf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d0:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
     1d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1d5:	69 00 61 72 67 76    	imul   eax,DWORD PTR [rax],0x76677261
     1db:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     1de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1df:	6c                   	ins    BYTE PTR es:[rdi],dx
     1e0:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     1e3:	73 74                	jae    259 <__abi_tag-0x123>
     1e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1e6:	6d                   	ins    DWORD PTR es:[rdi],dx
     1e7:	62 73 00 5f 5f       	(bad)
     1ec:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
     1f3:	6c                   	ins    BYTE PTR es:[rdi],dx
     1f4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     1f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1f6:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
     1fb:	62 6c 65             	(bad)
     1fe:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
     201:	73 69                	jae    26c <__abi_tag-0x110>
     203:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     205:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
     20a:	61                   	(bad)
     20b:	72 00                	jb     20d <__abi_tag-0x16f>
     20d:	61                   	(bad)
     20e:	72 67                	jb     277 <__abi_tag-0x105>
     210:	63 00                	movsxd eax,DWORD PTR [rax]
     212:	5f                   	pop    rdi
     213:	5f                   	pop    rdi
     214:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     216:	75 5f                	jne    277 <__abi_tag-0x105>
     218:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     21b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     21e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     225:	73 74                	jae    29b <__abi_tag-0xe1>
     227:	72 74                	jb     29d <__abi_tag-0xdf>
     229:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     22a:	75 6c                	jne    298 <__abi_tag-0xe4>
     22c:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
     22f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     230:	6c                   	ins    BYTE PTR es:[rdi],dx
     231:	6c                   	ins    BYTE PTR es:[rdi],dx
     232:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     235:	6c                   	ins    BYTE PTR es:[rdi],dx
     236:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     238:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
     23b:	73 74                	jae    2b1 <__abi_tag-0xcb>
     23d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     23e:	77 63                	ja     2a3 <__abi_tag-0xd9>
     240:	73 00                	jae    242 <__abi_tag-0x13a>
     242:	77 63                	ja     2a7 <__abi_tag-0xd5>
     244:	74 6f                	je     2b5 <__abi_tag-0xc7>
     246:	6d                   	ins    DWORD PTR es:[rdi],dx
     247:	62                   	(bad)
     248:	00 71 75             	add    BYTE PTR [rcx+0x75],dh
     24b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     24c:	74 00                	je     24e <__abi_tag-0x12e>
     24e:	73 68                	jae    2b8 <__abi_tag-0xc4>
     250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     251:	72 74                	jb     2c7 <__abi_tag-0xb5>
     253:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
     256:	73 69                	jae    2c1 <__abi_tag-0xbb>
     258:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     25a:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     25f:	74 00                	je     261 <__abi_tag-0x11b>
     261:	77 63                	ja     2c6 <__abi_tag-0xb6>
     263:	68 61 72 5f 74       	push   0x745f7261
     268:	00 4c 4f 41          	add    BYTE PTR [rdi+rcx*2+0x41],cl
     26c:	44 5f                	rex.R pop rdi
     26e:	46                   	rex.RX
     26f:	41                   	rex.B
     270:	43 54                	rex.XB push r12
     272:	4f 52                	rex.WRXB push r10
     274:	00 42 41             	add    BYTE PTR [rdx+0x41],al
     277:	53                   	push   rbx
     278:	45 5f                	rex.RB pop r15
     27a:	48                   	rex.W
     27b:	41 53                	push   r11
     27d:	48 5f                	rex.W pop rdi
     27f:	4d                   	rex.WRB
     280:	41 50                	push   r8
     282:	5f                   	pop    rdi
     283:	43                   	rex.XB
     284:	41 50                	push   r8
     286:	41                   	rex.B
     287:	43                   	rex.XB
     288:	49 54                	rex.WB push r12
     28a:	59                   	pop    rcx
     28b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     28e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     290:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     291:	61                   	(bad)
     292:	74 31                	je     2c5 <__abi_tag-0xb7>
     294:	32 38                	xor    bh,BYTE PTR [rax]
     296:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     299:	72 74                	jb     30f <__abi_tag-0x6d>
     29b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     29c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     2a0:	37                   	(bad)
     2a1:	74 65                	je     308 <__abi_tag-0x74>
     2a3:	73 74                	jae    319 <__abi_tag-0x63>
     2a5:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     2a7:	6c                   	ins    BYTE PTR es:[rdi],dx
     2a8:	50                   	push   rax
     2a9:	4b 63 6a 53          	rex.WXB movsxd rbp,DWORD PTR [r10+0x53]
     2ad:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
     2b0:	5f                   	pop    rdi
     2b1:	5f                   	pop    rdi
     2b2:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     2b9:	73 74                	jae    32f <__abi_tag-0x4d>
     2bb:	72 74                	jb     331 <__abi_tag-0x4b>
     2bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2be:	75 6c                	jne    32c <__abi_tag-0x50>
     2c0:	6c                   	ins    BYTE PTR es:[rdi],dx
     2c1:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
     2c5:	69 76 00 5f 5f 62 66 	imul   esi,DWORD PTR [rsi+0x0],0x66625f5f
     2cc:	31 36                	xor    DWORD PTR [rsi],esi
     2ce:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     2d1:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     2d4:	70 61                	jo     337 <__abi_tag-0x45>
     2d6:	72 5f                	jb     337 <__abi_tag-0x45>
     2d8:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
     2da:	5f                   	pop    rdi
     2db:	74 00                	je     2dd <__abi_tag-0x9f>
     2dd:	35 64 69 76 5f       	xor    eax,0x5f766964
     2e2:	74 00                	je     2e4 <__abi_tag-0x98>
     2e4:	5f                   	pop    rdi
     2e5:	5f                   	pop    rdi
     2e6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2e7:	70 74                	jo     35d <__abi_tag-0x1f>
     2e9:	72 00                	jb     2eb <__abi_tag-0x91>
     2eb:	73 72                	jae    35f <__abi_tag-0x1d>
     2ed:	61                   	(bad)
     2ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2ef:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     2f3:	53                   	push   rbx
     2f4:	74 33                	je     329 <__abi_tag-0x53>
     2f6:	61                   	(bad)
     2f7:	62 73 64 00 5f       	(bad)
     2fc:	5a                   	pop    rdx
     2fd:	53                   	push   rbx
     2fe:	74 33                	je     333 <__abi_tag-0x49>
     300:	61                   	(bad)
     301:	62 73 65 00 5f       	(bad)
     306:	5a                   	pop    rdx
     307:	53                   	push   rbx
     308:	74 33                	je     33d <__abi_tag-0x3f>
     30a:	61                   	(bad)
     30b:	62 73 66 00 5f       	(bad)
     310:	5a                   	pop    rdx
     311:	53                   	push   rbx
     312:	74 33                	je     347 <__abi_tag-0x35>
     314:	61                   	(bad)
     315:	62 73 67 00 63       	(bad)
     31a:	61                   	(bad)
     31b:	70 61                	jo     37e <__abi_tag+0x2>
     31d:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
     320:	79 00                	jns    322 <__abi_tag-0x5a>
     322:	5f                   	pop    rdi
     323:	5a                   	pop    rdx
     324:	31 33                	xor    DWORD PTR [rbx],esi
     326:	5f                   	pop    rdi
     327:	6d                   	ins    DWORD PTR es:[rdi],dx
     328:	6d                   	ins    DWORD PTR es:[rdi],dx
     329:	5f                   	pop    rdi
     32a:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     32d:	33 32                	xor    esi,DWORD PTR [rdx]
     32f:	5f                   	pop    rdi
     330:	75 36                	jne    368 <__abi_tag-0x14>
     332:	34 79                	xor    al,0x79
     334:	79 00                	jns    336 <__abi_tag-0x46>
     336:	64 61                	fs (bad)
     338:	74 61                	je     39b <__abi_tag+0x1f>
     33a:	5f                   	pop    rdi
     33b:	74 00                	je     33d <__abi_tag-0x3f>
     33d:	5f                   	pop    rdi
     33e:	5a                   	pop    rdx
     33f:	31 30                	xor    DWORD PTR [rax],esi
     341:	64 65 62 75 67 50 72 	(bad)
     348:	69 6e 74 50 34 4c 69 	imul   ebp,DWORD PTR [rsi+0x74],0x694c3450
     34f:	73 74                	jae    3c5 <__abi_tag+0x49>
     351:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     354:	73 68                	jae    3be <__abi_tag+0x42>
     356:	4d 61                	rex.WRB (bad)
     358:	70 43                	jo     39d <__abi_tag+0x21>
     35a:	74 6f                	je     3cb <__abi_tag+0x4f>
     35c:	72 00                	jb     35e <__abi_tag-0x1e>
     35e:	77 6f                	ja     3cf <__abi_tag+0x53>
     360:	72 64                	jb     3c6 <__abi_tag+0x4a>
     362:	5f                   	pop    rdi
     363:	62 65 67 69 6e       	(bad)
     368:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
     36b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     36d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     36f:	74 73                	je     3e4 <__abi_tag+0x68>
     371:	5f                   	pop    rdi
     372:	61                   	(bad)
     373:	6d                   	ins    DWORD PTR es:[rdi],dx
     374:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     375:	75 6e                	jne    3e5 <__abi_tag+0x69>
     377:	74 00                	je     379 <__abi_tag-0x3>
     379:	5f                   	pop    rdi
     37a:	5f                   	pop    rdi
     37b:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
     37e:	5f                   	pop    rdi
     37f:	5a                   	pop    rdx
     380:	31 36                	xor    DWORD PTR [rsi],esi
     382:	62 75 69 6c 64       	(bad)
     387:	53                   	push   rbx
     388:	74 72                	je     3fc <__abi_tag+0x80>
     38a:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     391:	79 50                	jns    3e3 <__abi_tag+0x67>
     393:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
     396:	61                   	(bad)
     397:	6c                   	ins    BYTE PTR es:[rdi],dx
     398:	69 67 6e 65 64 5f 74 	imul   esp,DWORD PTR [rdi+0x6e],0x745f6465
     39f:	65 78 74             	gs js  416 <__abi_tag+0x9a>
     3a2:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     3a5:	72 69                	jb     410 <__abi_tag+0x94>
     3a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3a8:	67 00 5f 5f          	add    BYTE PTR [edi+0x5f],bl
     3ac:	73 72                	jae    420 <__abi_tag+0xa4>
     3ae:	63 00                	movsxd eax,DWORD PTR [rax]
     3b0:	66 72 65             	data16 jb 418 <__abi_tag+0x9c>
     3b3:	65 00 68 61          	add    BYTE PTR gs:[rax+0x61],ch
     3b7:	73 68                	jae    421 <__abi_tag+0xa5>
     3b9:	31 00                	xor    DWORD PTR [rax],eax
     3bb:	68 61 73 68 32       	push   0x32687361
     3c0:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3c3:	73 68                	jae    42d <__abi_tag+0xb1>
     3c5:	33 00                	xor    eax,DWORD PTR [rax]
     3c7:	68 61 73 68 34       	push   0x34687361
     3cc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     3cf:	50                   	push   rax
     3d0:	52                   	push   rdx
     3d1:	45 54                	rex.RB push r12
     3d3:	54                   	push   rsp
     3d4:	59                   	pop    rcx
     3d5:	5f                   	pop    rdi
     3d6:	46 55                	rex.RX push rbp
     3d8:	4e                   	rex.WRX
     3d9:	43 54                	rex.XB push r12
     3db:	49                   	rex.WB
     3dc:	4f                   	rex.WRXB
     3dd:	4e 5f                	rex.WRX pop rdi
     3df:	5f                   	pop    rdi
     3e0:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     3e3:	73 68                	jae    44d <__abi_tag+0xd1>
     3e5:	4d 61                	rex.WRB (bad)
     3e7:	70 41                	jo     42a <__abi_tag+0xae>
     3e9:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     3ed:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     3ef:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     3f1:	74 00                	je     3f3 <__abi_tag+0x77>
     3f3:	5f                   	pop    rdi
     3f4:	5f                   	pop    rdi
     3f5:	62 75 69 6c 74       	(bad)
     3fa:	69 6e 5f 70 75 74 73 	imul   ebp,DWORD PTR [rsi+0x5f],0x73747570
     401:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     404:	70 72                	jo     478 <__abi_tag+0xfc>
     406:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
     40d:	6b 00 70             	imul   eax,DWORD PTR [rax],0x70
     410:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     411:	70 4c                	jo     45f <__abi_tag+0xe3>
     413:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     41a:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     41d:	73 68                	jae    487 <__abi_tag+0x10b>
     41f:	5f                   	pop    rdi
     420:	66 75 6e             	data16 jne 491 <__abi_tag+0x115>
     423:	63 00                	movsxd eax,DWORD PTR [rax]
     425:	5f                   	pop    rdi
     426:	5a                   	pop    rdx
     427:	31 37                	xor    DWORD PTR [rdi],esi
     429:	68 61 73 68 4d       	push   0x4d687361
     42e:	61                   	(bad)
     42f:	70 44                	jo     475 <__abi_tag+0xf9>
     431:	65 62 75 67 50 72    	(bad)
     437:	69 6e 74 50 37 48 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61483750
     43e:	73 68                	jae    4a8 <__abi_tag+0x12c>
     440:	4d 61                	rex.WRB (bad)
     442:	70 00                	jo     444 <__abi_tag+0xc8>
     444:	73 75                	jae    4bb <__abi_tag+0x13f>
     446:	70 70                	jo     4b8 <__abi_tag+0x13c>
     448:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     449:	73 65                	jae    4b0 <__abi_tag+0x134>
     44b:	64 5f                	fs pop rdi
     44d:	69 6e 64 65 78 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007865
     454:	5a                   	pop    rdx
     455:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     459:	74 44                	je     49f <__abi_tag+0x123>
     45b:	74 6f                	je     4cc <__abi_tag+0x150>
     45d:	72 50                	jb     4af <__abi_tag+0x133>
     45f:	34 4c                	xor    al,0x4c
     461:	69 73 74 00 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c6500
     468:	6d                   	ins    DWORD PTR es:[rdi],dx
     469:	5f                   	pop    rdi
     46a:	69 6e 78 00 5f 5f 6c 	imul   ebp,DWORD PTR [rsi+0x78],0x6c5f5f00
     471:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     473:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     476:	72 6e                	jb     4e6 <__abi_tag+0x16a>
     478:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     47b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     47e:	31 31                	xor    DWORD PTR [rcx],esi
     480:	68 61 73 68 4d       	push   0x4d687361
     485:	61                   	(bad)
     486:	70 44                	jo     4cc <__abi_tag+0x150>
     488:	74 6f                	je     4f9 <__abi_tag+0x17d>
     48a:	72 50                	jb     4dc <__abi_tag+0x160>
     48c:	37                   	(bad)
     48d:	48 61                	rex.W (bad)
     48f:	73 68                	jae    4f9 <__abi_tag+0x17d>
     491:	4d 61                	rex.WRB (bad)
     493:	70 00                	jo     495 <__abi_tag+0x119>
     495:	70 72                	jo     509 <__abi_tag+0x18d>
     497:	65 76 5f             	gs jbe 4f9 <__abi_tag+0x17d>
     49a:	69 6e 78 00 6c 69 73 	imul   ebp,DWORD PTR [rsi+0x78],0x73696c00
     4a1:	74 44                	je     4e7 <__abi_tag+0x16b>
     4a3:	74 6f                	je     514 <__abi_tag+0x198>
     4a5:	72 00                	jb     4a7 <__abi_tag+0x12b>
     4a7:	5f                   	pop    rdi
     4a8:	5f                   	pop    rdi
     4a9:	62 75 69 6c 74       	(bad)
     4ae:	69 6e 5f 5f 5f 6d 65 	imul   ebp,DWORD PTR [rsi+0x5f],0x656d5f5f
     4b5:	6d                   	ins    DWORD PTR es:[rdi],dx
     4b6:	73 65                	jae    51d <__abi_tag+0x1a1>
     4b8:	74 5f                	je     519 <__abi_tag+0x19d>
     4ba:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     4bd:	00 6c 69 6e          	add    BYTE PTR [rcx+rbp*2+0x6e],ch
     4c1:	65 73 00             	gs jae 4c4 <__abi_tag+0x148>
     4c4:	5f                   	pop    rdi
     4c5:	5f                   	pop    rdi
     4c6:	62 75 69 6c 74       	(bad)
     4cb:	69 6e 5f 5f 5f 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74735f5f
     4d2:	72 6e                	jb     542 <__abi_tag+0x1c6>
     4d4:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     4d7:	5f                   	pop    rdi
     4d8:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     4db:	00 62 6f             	add    BYTE PTR [rdx+0x6f],ah
     4de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4df:	6c                   	ins    BYTE PTR es:[rdi],dx
     4e0:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
     4e3:	69 67 6e 65 64 5f 61 	imul   esp,DWORD PTR [rdi+0x6e],0x615f6465
     4ea:	6c                   	ins    BYTE PTR es:[rdi],dx
     4eb:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4ed:	63 00                	movsxd eax,DWORD PTR [rax]
     4ef:	6c                   	ins    BYTE PTR es:[rdi],dx
     4f0:	69 73 74 73 00 6c 69 	imul   esi,DWORD PTR [rbx+0x74],0x696c0073
     4f7:	73 74                	jae    56d <__abi_tag+0x1f1>
     4f9:	43 74 6f             	rex.XB je 56b <__abi_tag+0x1ef>
     4fc:	72 00                	jb     4fe <__abi_tag+0x182>
     4fe:	5f                   	pop    rdi
     4ff:	5a                   	pop    rdx
     500:	38 6c 69 73          	cmp    BYTE PTR [rcx+rbp*2+0x73],ch
     504:	74 43                	je     549 <__abi_tag+0x1cd>
     506:	74 6f                	je     577 <__abi_tag+0x1fb>
     508:	72 76                	jb     580 <__abi_tag+0x204>
     50a:	00 64 65 62          	add    BYTE PTR [rbp+riz*2+0x62],ah
     50e:	75 67                	jne    577 <__abi_tag+0x1fb>
     510:	50                   	push   rax
     511:	72 69                	jb     57c <__abi_tag+0x200>
     513:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     514:	74 00                	je     516 <__abi_tag+0x19a>
     516:	5f                   	pop    rdi
     517:	5a                   	pop    rdx
     518:	31 33                	xor    DWORD PTR [rbx],esi
     51a:	73 65                	jae    581 <__abi_tag+0x205>
     51c:	61                   	(bad)
     51d:	72 63                	jb     582 <__abi_tag+0x206>
     51f:	68 45 6c 65 6d       	push   0x6d656c45
     524:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     526:	74 50                	je     578 <__abi_tag+0x1fc>
     528:	34 4c                	xor    al,0x4c
     52a:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     531:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     538:	5f                   	pop    rdi
     539:	64 65 73 74          	fs gs jae 5b1 <__abi_tag+0x235>
     53d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
     540:	73 68                	jae    5aa <__abi_tag+0x22e>
     542:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     549:	6d 
     54a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     54d:	62 75 69 6c 74       	(bad)
     552:	69 6e 5f 73 74 72 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63727473
     559:	68 72 00 68 61       	push   0x61680072
     55e:	73 68                	jae    5c8 <__abi_tag+0x24c>
     560:	4d 61                	rex.WRB (bad)
     562:	70 44                	jo     5a8 <__abi_tag+0x22c>
     564:	65 62 75 67 50 72    	(bad)
     56a:	69 6e 74 00 74 61 69 	imul   ebp,DWORD PTR [rsi+0x74],0x69617400
     571:	6c                   	ins    BYTE PTR es:[rdi],dx
     572:	5f                   	pop    rdi
     573:	69 6e 78 00 73 65 61 	imul   ebp,DWORD PTR [rsi+0x78],0x61657300
     57a:	72 63                	jb     5df <__abi_tag+0x263>
     57c:	68 45 6c 65 6d       	push   0x6d656c45
     581:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     583:	74 00                	je     585 <__abi_tag+0x209>
     585:	5f                   	pop    rdi
     586:	5f                   	pop    rdi
     587:	75 69                	jne    5f2 <__abi_tag+0x276>
     589:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     58a:	74 36                	je     5c2 <__abi_tag+0x246>
     58c:	34 5f                	xor    al,0x5f
     58e:	74 00                	je     590 <__abi_tag+0x214>
     590:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     591:	65 77 5f             	gs ja  5f3 <__abi_tag+0x277>
     594:	68 61 73 68 4d       	push   0x4d687361
     599:	61                   	(bad)
     59a:	70 00                	jo     59c <__abi_tag+0x220>
     59c:	72 65                	jb     603 <__abi_tag+0x287>
     59e:	68 61 73 68 41       	push   0x41687361
     5a3:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     5a7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     5a9:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ab:	74 00                	je     5ad <__abi_tag+0x231>
     5ad:	5f                   	pop    rdi
     5ae:	5f                   	pop    rdi
     5af:	61                   	(bad)
     5b0:	73 73                	jae    625 <__abi_tag+0x2a9>
     5b2:	65 72 74             	gs jb  629 <__abi_tag+0x2ad>
     5b5:	5f                   	pop    rdi
     5b6:	66 61                	data16 (bad)
     5b8:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     5bf:	4d 
     5c0:	61                   	(bad)
     5c1:	70 53                	jo     616 <__abi_tag+0x29a>
     5c3:	65 61                	gs (bad)
     5c5:	72 63                	jb     62a <__abi_tag+0x2ae>
     5c7:	68 45 6c 65 6d       	push   0x6d656c45
     5cc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ce:	74 00                	je     5d0 <__abi_tag+0x254>
     5d0:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     5d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5d4:	74 65                	je     63b <__abi_tag+0x2bf>
     5d6:	72 00                	jb     5d8 <__abi_tag+0x25c>
     5d8:	6c                   	ins    BYTE PTR es:[rdi],dx
     5d9:	69 73 74 5f 65 6c 65 	imul   esi,DWORD PTR [rbx+0x74],0x656c655f
     5e0:	6d                   	ins    DWORD PTR es:[rdi],dx
     5e1:	73 00                	jae    5e3 <__abi_tag+0x267>
     5e3:	72 65                	jb     64a <__abi_tag+0x2ce>
     5e5:	68 61 73 68 00       	push   0x687361
     5ea:	6c                   	ins    BYTE PTR es:[rdi],dx
     5eb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     5ed:	67 74 68             	addr32 je 658 <__abi_tag+0x2dc>
     5f0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     5f3:	73 74                	jae    669 <__abi_tag+0x2ed>
     5f5:	61                   	(bad)
     5f6:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     5f9:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     5fc:	5f                   	pop    rdi
     5fd:	66 61                	data16 (bad)
     5ff:	69 6c 00 68 61 73 68 	imul   ebp,DWORD PTR [rax+rax*1+0x68],0x4d687361
     606:	4d 
     607:	61                   	(bad)
     608:	70 50                	jo     65a <__abi_tag+0x2de>
     60a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     60b:	70 45                	jo     652 <__abi_tag+0x2d6>
     60d:	6c                   	ins    BYTE PTR es:[rdi],dx
     60e:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     610:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     612:	74 00                	je     614 <__abi_tag+0x298>
     614:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     615:	65 78 74             	gs js  68c <__abi_tag+0x310>
     618:	5f                   	pop    rdi
     619:	69 6e 78 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x78],0x315a5f00
     620:	31 68 61             	xor    DWORD PTR [rax+0x61],ebp
     623:	73 68                	jae    68d <__abi_tag+0x311>
     625:	4d 61                	rex.WRB (bad)
     627:	70 43                	jo     66c <__abi_tag+0x2f0>
     629:	74 6f                	je     69a <__abi_tag+0x31e>
     62b:	72 50                	jb     67d <__abi_tag+0x301>
     62d:	46 6a 38             	rex.RX push 0x38
     630:	73 74                	jae    6a6 <__abi_tag+0x32a>
     632:	72 69                	jb     69d <__abi_tag+0x321>
     634:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     635:	67 5f                	addr32 pop rdi
     637:	74 45                	je     67e <__abi_tag+0x302>
     639:	6a 00                	push   0x0
     63b:	5f                   	pop    rdi
     63c:	5f                   	pop    rdi
     63d:	66 6d                	ins    WORD PTR es:[rdi],dx
     63f:	74 00                	je     641 <__abi_tag+0x2c5>
     641:	62 75 69 6c 64       	(bad)
     646:	53                   	push   rbx
     647:	74 72                	je     6bb <__abi_tag+0x33f>
     649:	69 6e 67 41 72 72 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61727241
     650:	79 00                	jns    652 <__abi_tag+0x2d6>
     652:	5f                   	pop    rdi
     653:	5a                   	pop    rdx
     654:	31 31                	xor    DWORD PTR [rcx],esi
     656:	70 6f                	jo     6c7 <__abi_tag+0x34b>
     658:	70 4c                	jo     6a6 <__abi_tag+0x32a>
     65a:	69 73 74 45 6c 65 6d 	imul   esi,DWORD PTR [rbx+0x74],0x6d656c45
     661:	50                   	push   rax
     662:	34 4c                	xor    al,0x4c
     664:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     66b:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     672:	5a                   	pop    rdx
     673:	31 32                	xor    DWORD PTR [rdx],esi
     675:	70 75                	jo     6ec <__abi_tag+0x370>
     677:	73 68                	jae    6e1 <__abi_tag+0x365>
     679:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     680:	6d 
     681:	50                   	push   rax
     682:	34 4c                	xor    al,0x4c
     684:	69 73 74 38 73 74 72 	imul   esi,DWORD PTR [rbx+0x74],0x72747338
     68b:	69 6e 67 5f 74 00 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6300745f
     692:	61                   	(bad)
     693:	6c                   	ins    BYTE PTR es:[rdi],dx
     694:	6c                   	ins    BYTE PTR es:[rdi],dx
     695:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     696:	63 00                	movsxd eax,DWORD PTR [rax]
     698:	5f                   	pop    rdi
     699:	5a                   	pop    rdx
     69a:	32 30                	xor    dh,BYTE PTR [rax]
     69c:	68 61 73 68 4d       	push   0x4d687361
     6a1:	61                   	(bad)
     6a2:	70 53                	jo     6f7 <__abi_tag+0x37b>
     6a4:	65 61                	gs (bad)
     6a6:	72 63                	jb     70b <__abi_tag+0x38f>
     6a8:	68 45 6c 65 6d       	push   0x6d656c45
     6ad:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6af:	74 50                	je     701 <__abi_tag+0x385>
     6b1:	37                   	(bad)
     6b2:	48 61                	rex.W (bad)
     6b4:	73 68                	jae    71e <__abi_tag+0x3a2>
     6b6:	4d 61                	rex.WRB (bad)
     6b8:	70 38                	jo     6f2 <__abi_tag+0x376>
     6ba:	73 74                	jae    730 <__abi_tag+0x3b4>
     6bc:	72 69                	jb     727 <__abi_tag+0x3ab>
     6be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6bf:	67 5f                	addr32 pop rdi
     6c1:	74 00                	je     6c3 <__abi_tag+0x347>
     6c3:	73 74                	jae    739 <__abi_tag+0x3bd>
     6c5:	72 69                	jb     730 <__abi_tag+0x3b4>
     6c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6c8:	67 5f                	addr32 pop rdi
     6ca:	61                   	(bad)
     6cb:	72 72                	jb     73f <__abi_tag+0x3c3>
     6cd:	61                   	(bad)
     6ce:	79 00                	jns    6d0 <__abi_tag+0x354>
     6d0:	5f                   	pop    rdi
     6d1:	5a                   	pop    rdx
     6d2:	31 37                	xor    DWORD PTR [rdi],esi
     6d4:	68 61 73 68 4d       	push   0x4d687361
     6d9:	61                   	(bad)
     6da:	70 41                	jo     71d <__abi_tag+0x3a1>
     6dc:	64 64 45 6c          	fs fs rex.RB ins BYTE PTR es:[rdi],dx
     6e0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     6e2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     6e4:	74 50                	je     736 <__abi_tag+0x3ba>
     6e6:	37                   	(bad)
     6e7:	48 61                	rex.W (bad)
     6e9:	73 68                	jae    753 <__abi_tag+0x3d7>
     6eb:	4d 61                	rex.WRB (bad)
     6ed:	70 38                	jo     727 <__abi_tag+0x3ab>
     6ef:	73 74                	jae    765 <__abi_tag+0x3e9>
     6f1:	72 69                	jb     75c <__abi_tag+0x3e0>
     6f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6f4:	67 5f                	addr32 pop rdi
     6f6:	74 00                	je     6f8 <__abi_tag+0x37c>
     6f8:	4c                   	rex.WR
     6f9:	49 53                	rex.WB push r11
     6fb:	54                   	push   rsp
     6fc:	5f                   	pop    rdi
     6fd:	42                   	rex.X
     6fe:	41 53                	push   r11
     700:	45 5f                	rex.RB pop r15
     702:	43                   	rex.XB
     703:	41 50                	push   r8
     705:	41                   	rex.B
     706:	43                   	rex.XB
     707:	49 54                	rex.WB push r12
     709:	59                   	pop    rcx
     70a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     70d:	31 37                	xor    DWORD PTR [rdi],esi
     70f:	68 61 73 68 4d       	push   0x4d687361
     714:	61                   	(bad)
     715:	70 50                	jo     767 <__abi_tag+0x3eb>
     717:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     718:	70 45                	jo     75f <__abi_tag+0x3e3>
     71a:	6c                   	ins    BYTE PTR es:[rdi],dx
     71b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     71d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     71f:	74 50                	je     771 <__abi_tag+0x3f5>
     721:	37                   	(bad)
     722:	48 61                	rex.W (bad)
     724:	73 68                	jae    78e <__abi_tag+0x412>
     726:	4d 61                	rex.WRB (bad)
     728:	70 38                	jo     762 <__abi_tag+0x3e6>
     72a:	73 74                	jae    7a0 <__abi_tag+0x424>
     72c:	72 69                	jb     797 <__abi_tag+0x41b>
     72e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     72f:	67 5f                	addr32 pop rdi
     731:	74 00                	je     733 <__abi_tag+0x3b7>
     733:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     736:	72 73                	jb     7ab <__abi_tag+0x42f>
     738:	00 68 61             	add    BYTE PTR [rax+0x61],ch
     73b:	73 68                	jae    7a5 <__abi_tag+0x429>
     73d:	4d 61                	rex.WRB (bad)
     73f:	70 44                	jo     785 <__abi_tag+0x409>
     741:	74 6f                	je     7b2 <__abi_tag+0x436>
     743:	72 00                	jb     745 <__abi_tag+0x3c9>
     745:	6c                   	ins    BYTE PTR es:[rdi],dx
     746:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     747:	61                   	(bad)
     748:	64 5f                	fs pop rdi
     74a:	66 61                	data16 (bad)
     74c:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
     750:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
     753:	6d                   	ins    DWORD PTR es:[rdi],dx
     754:	5f                   	pop    rdi
     755:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     758:	33 32                	xor    esi,DWORD PTR [rdx]
     75a:	5f                   	pop    rdi
     75b:	75 36                	jne    793 <__abi_tag+0x417>
     75d:	34 00                	xor    al,0x0
     75f:	68 61 73 68 5f       	push   0x5f687361
     764:	74 00                	je     766 <__abi_tag+0x3ea>
     766:	5f                   	pop    rdi
     767:	5f                   	pop    rdi
     768:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
     76f:	75 6e                	jne    7df <__abi_tag+0x463>
     771:	73 69                	jae    7dc <__abi_tag+0x460>
     773:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     775:	65 64 00 73 75       	gs add BYTE PTR fs:[rbx+0x75],dh
     77a:	6d                   	ins    DWORD PTR es:[rdi],dx
     77b:	48 61                	rex.W (bad)
     77d:	73 68                	jae    7e7 <__abi_tag+0x46b>
     77f:	53                   	push   rbx
     780:	74 72                	je     7f4 <__abi_tag+0x478>
     782:	69 6e 67 00 74 6d 70 	imul   ebp,DWORD PTR [rsi+0x67],0x706d7400
     789:	32 00                	xor    al,BYTE PTR [rax]
     78b:	74 6d                	je     7fa <__abi_tag+0x47e>
     78d:	70 31                	jo     7c0 <__abi_tag+0x444>
     78f:	00 62 69             	add    BYTE PTR [rdx+0x69],ah
     792:	74 73                	je     807 <__abi_tag+0x48b>
     794:	52                   	push   rdx
     795:	65 76 65             	gs jbe 7fd <__abi_tag+0x481>
     798:	72 73                	jb     80d <__abi_tag+0x491>
     79a:	65 00 70 6f          	add    BYTE PTR gs:[rax+0x6f],dh
     79e:	6c                   	ins    BYTE PTR es:[rdi],dx
     79f:	79 6e                	jns    80f <__abi_tag+0x493>
     7a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     7a2:	6d                   	ins    DWORD PTR es:[rdi],dx
     7a3:	69 61 6c 00 73 68 69 	imul   esp,DWORD PTR [rcx+0x6c],0x69687300
     7aa:	66 74 00             	data16 je 7ad <__abi_tag+0x431>
     7ad:	5f                   	pop    rdi
     7ae:	5a                   	pop    rdx
     7af:	31 33                	xor    DWORD PTR [rbx],esi
     7b1:	73 75                	jae    828 <__abi_tag+0x4ac>
     7b3:	6d                   	ins    DWORD PTR es:[rdi],dx
     7b4:	48 61                	rex.W (bad)
     7b6:	73 68                	jae    820 <__abi_tag+0x4a4>
     7b8:	53                   	push   rbx
     7b9:	74 72                	je     82d <__abi_tag+0x4b1>
     7bb:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     7c2:	69 6e 67 5f 74 00 72 	imul   ebp,DWORD PTR [rsi+0x67],0x7200745f
     7c9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     7cb:	61                   	(bad)
     7cc:	69 6e 64 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f007265
     7d3:	5a                   	pop    rdx
     7d4:	31 33                	xor    DWORD PTR [rbx],esi
     7d6:	5f                   	pop    rdi
     7d7:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d8:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d9:	5f                   	pop    rdi
     7da:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7dd:	33 32                	xor    esi,DWORD PTR [rdx]
     7df:	5f                   	pop    rdi
     7e0:	75 33                	jne    815 <__abi_tag+0x499>
     7e2:	32 6a 6a             	xor    ch,BYTE PTR [rdx+0x6a]
     7e5:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
     7e8:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     7ed:	32 35 5f 6d 6d 5f    	xor    dh,BYTE PTR [rip+0x5f6d6d5f]        # 5f6d7552 <_end+0x5f6d153a>
     7f3:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     7f6:	33 32                	xor    esi,DWORD PTR [rdx]
     7f8:	55                   	push   rbp
     7f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7fa:	72 6f                	jb     86b <__abi_tag+0x4ef>
     7fc:	6c                   	ins    BYTE PTR es:[rdi],dx
     7fd:	6c                   	ins    BYTE PTR es:[rdi],dx
     7fe:	48 61                	rex.W (bad)
     800:	73 68                	jae    86a <__abi_tag+0x4ee>
     802:	53                   	push   rbx
     803:	74 72                	je     877 <__abi_tag+0x4fb>
     805:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     80c:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     813:	6d                   	ins    DWORD PTR es:[rdi],dx
     814:	6d                   	ins    DWORD PTR es:[rdi],dx
     815:	5f                   	pop    rdi
     816:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     819:	33 32                	xor    esi,DWORD PTR [rdx]
     81b:	55                   	push   rbp
     81c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81d:	72 6f                	jb     88e <__abi_tag+0x512>
     81f:	6c                   	ins    BYTE PTR es:[rdi],dx
     820:	6c                   	ins    BYTE PTR es:[rdi],dx
     821:	48 61                	rex.W (bad)
     823:	73 68                	jae    88d <__abi_tag+0x511>
     825:	53                   	push   rbx
     826:	74 72                	je     89a <__abi_tag+0x51e>
     828:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     82f:	35 63 72 63 33       	xor    eax,0x33637263
     834:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     837:	73 68                	jae    8a1 <__abi_tag+0x525>
     839:	53                   	push   rbx
     83a:	74 72                	je     8ae <__abi_tag+0x532>
     83c:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     843:	69 6e 67 5f 74 00 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6100745f
     84a:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     84c:	65 72 33             	gs jb  882 <__abi_tag+0x506>
     84f:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     852:	73 68                	jae    8bc <__abi_tag+0x540>
     854:	53                   	push   rbx
     855:	74 72                	je     8c9 <__abi_tag+0x54d>
     857:	69 6e 67 00 5f 5a 31 	imul   ebp,DWORD PTR [rsi+0x67],0x315a5f00
     85e:	33 65 6c             	xor    esp,DWORD PTR [rbp+0x6c]
     861:	66 48 61             	data16 rex.W (bad)
     864:	73 68                	jae    8ce <__abi_tag+0x552>
     866:	53                   	push   rbx
     867:	74 72                	je     8db <__abi_tag+0x55f>
     869:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     870:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     877:	5a                   	pop    rdx
     878:	31 37                	xor    DWORD PTR [rdi],esi
     87a:	61                   	(bad)
     87b:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     87d:	65 72 33             	gs jb  8b3 <__abi_tag+0x537>
     880:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     883:	73 68                	jae    8ed <__abi_tag+0x571>
     885:	53                   	push   rbx
     886:	74 72                	je     8fa <__abi_tag+0x57e>
     888:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     88f:	69 6e 67 5f 74 00 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d00745f
     896:	75 72                	jne    90a <__abi_tag+0x58e>
     898:	6d                   	ins    DWORD PTR es:[rdi],dx
     899:	75 72                	jne    90d <__abi_tag+0x591>
     89b:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     89e:	73 68                	jae    908 <__abi_tag+0x58c>
     8a0:	53                   	push   rbx
     8a1:	74 72                	je     915 <__abi_tag+0x599>
     8a3:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8aa:	5f                   	pop    rdi
     8ab:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8ae:	33 32                	xor    esi,DWORD PTR [rdx]
     8b0:	5f                   	pop    rdi
     8b1:	75 33                	jne    8e6 <__abi_tag+0x56a>
     8b3:	32 00                	xor    al,BYTE PTR [rax]
     8b5:	65 6c                	gs ins BYTE PTR es:[rdi],dx
     8b7:	66 48 61             	data16 rex.W (bad)
     8ba:	73 68                	jae    924 <__abi_tag+0x5a8>
     8bc:	53                   	push   rbx
     8bd:	74 72                	je     931 <__abi_tag+0x5b5>
     8bf:	69 6e 67 00 5f 6d 6d 	imul   ebp,DWORD PTR [rsi+0x67],0x6d6d5f00
     8c6:	5f                   	pop    rdi
     8c7:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     8ca:	33 32                	xor    esi,DWORD PTR [rdx]
     8cc:	48 61                	rex.W (bad)
     8ce:	73 68                	jae    938 <__abi_tag+0x5bc>
     8d0:	53                   	push   rbx
     8d1:	74 72                	je     945 <__abi_tag+0x5c9>
     8d3:	69 6e 67 00 6d 6f 64 	imul   ebp,DWORD PTR [rsi+0x67],0x646f6d00
     8da:	5f                   	pop    rdi
     8db:	61                   	(bad)
     8dc:	64 6c                	fs ins BYTE PTR es:[rdi],dx
     8de:	65 72 00             	gs jb  8e1 <__abi_tag+0x565>
     8e1:	78 6f                	js     952 <__abi_tag+0x5d6>
     8e3:	72 5f                	jb     944 <__abi_tag+0x5c8>
     8e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8e6:	75 6d                	jne    955 <__abi_tag+0x5d9>
     8e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     8eb:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
     8f2:	00 68 69             	add    BYTE PTR [rax+0x69],ch
     8f5:	67 68 00 5f 5a 31    	addr32 push 0x315a5f00
     8fb:	37                   	(bad)
     8fc:	6d                   	ins    DWORD PTR es:[rdi],dx
     8fd:	75 72                	jne    971 <__abi_tag+0x5f5>
     8ff:	6d                   	ins    DWORD PTR es:[rdi],dx
     900:	75 72                	jne    974 <__abi_tag+0x5f8>
     902:	32 48 61             	xor    cl,BYTE PTR [rax+0x61]
     905:	73 68                	jae    96f <__abi_tag+0x5f3>
     907:	53                   	push   rbx
     908:	74 72                	je     97c <__abi_tag+0x600>
     90a:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     911:	69 6e 67 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f00745f
     918:	5a                   	pop    rdx
     919:	31 39                	xor    DWORD PTR [rcx],edi
     91b:	5f                   	pop    rdi
     91c:	6d                   	ins    DWORD PTR es:[rdi],dx
     91d:	6d                   	ins    DWORD PTR es:[rdi],dx
     91e:	5f                   	pop    rdi
     91f:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
     922:	33 32                	xor    esi,DWORD PTR [rdx]
     924:	48 61                	rex.W (bad)
     926:	73 68                	jae    990 <__abi_tag+0x614>
     928:	53                   	push   rbx
     929:	74 72                	je     99d <__abi_tag+0x621>
     92b:	69 6e 67 38 73 74 72 	imul   ebp,DWORD PTR [rsi+0x67],0x72747338
     932:	69 6e 67 5f 74 00 72 	imul   ebp,DWORD PTR [rsi+0x67],0x7200745f
     939:	65 73 75             	gs jae 9b1 <__abi_tag+0x635>
     93c:	6c                   	ins    BYTE PTR es:[rdi],dx
     93d:	74 00                	je     93f <__abi_tag+0x5c3>
     93f:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     942:	4c 69 73 74 45 6c 65 	imul   r14,QWORD PTR [rbx+0x74],0x6d656c45
     949:	6d 
     94a:	73 00                	jae    94c <__abi_tag+0x5d0>
     94c:	72 65                	jb     9b3 <__abi_tag+0x637>
     94e:	73 69                	jae    9b9 <__abi_tag+0x63d>
     950:	7a 65                	jp     9b7 <__abi_tag+0x63b>
     952:	55                   	push   rbp
     953:	70 00                	jo     955 <__abi_tag+0x5d9>
     955:	5f                   	pop    rdi
     956:	5f                   	pop    rdi
     957:	62 75 69 6c 74       	(bad)
     95c:	69 6e 5f 70 75 74 63 	imul   ebp,DWORD PTR [rsi+0x5f],0x63747570
     963:	68 61 72 00 6f       	push   0x6f007261
     968:	6c                   	ins    BYTE PTR es:[rdi],dx
     969:	64 5f                	fs pop rdi
     96b:	6c                   	ins    BYTE PTR es:[rdi],dx
     96c:	61                   	(bad)
     96d:	73 74                	jae    9e3 <__abi_tag+0x667>
     96f:	5f                   	pop    rdi
     970:	69 6e 78 00 64 61 74 	imul   ebp,DWORD PTR [rsi+0x78],0x74616400
     977:	61                   	(bad)
     978:	31 00                	xor    DWORD PTR [rax],eax
     97a:	6d                   	ins    DWORD PTR es:[rdi],dx
     97b:	79 5f                	jns    9dc <__abi_tag+0x660>
     97d:	73 74                	jae    9f3 <__abi_tag+0x677>
     97f:	72 63                	jb     9e4 <__abi_tag+0x668>
     981:	6d                   	ins    DWORD PTR es:[rdi],dx
     982:	70 00                	jo     984 <__abi_tag+0x608>
     984:	64 61                	fs (bad)
     986:	74 61                	je     9e9 <__abi_tag+0x66d>
     988:	32 00                	xor    al,BYTE PTR [rax]
     98a:	72 65                	jb     9f1 <__abi_tag+0x675>
     98c:	61                   	(bad)
     98d:	6c                   	ins    BYTE PTR es:[rdi],dx
     98e:	6c                   	ins    BYTE PTR es:[rdi],dx
     98f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     990:	63 00                	movsxd eax,DWORD PTR [rax]
     992:	5f                   	pop    rdi
     993:	5f                   	pop    rdi
     994:	67 69 64 5f 74 00 73 	imul   esp,DWORD PTR [edi+ebx*2+0x74],0x5f747300
     99b:	74 5f 
     99d:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     9a1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9a4:	72 65                	jb     a0b <__abi_tag+0x68f>
     9a6:	61                   	(bad)
     9a7:	64 5f                	fs pop rdi
     9a9:	61                   	(bad)
     9aa:	6c                   	ins    BYTE PTR es:[rdi],dx
     9ab:	69 61 73 00 5f 5f 70 	imul   esp,DWORD PTR [rcx+0x73],0x705f5f00
     9b2:	61                   	(bad)
     9b3:	74 68                	je     a1d <__abi_tag+0x6a1>
     9b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     9b8:	31 30                	xor    DWORD PTR [rax],esi
     9ba:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
     9bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9be:	74 4c                	je     a0c <__abi_tag+0x690>
     9c0:	69 6e 65 73 50 63 6d 	imul   ebp,DWORD PTR [rsi+0x65],0x6d635073
     9c7:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     9ca:	61                   	(bad)
     9cb:	64 46 69 6c 65 00 5f 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x72385a5f
     9d2:	5a 38 72 
     9d5:	65 61                	gs (bad)
     9d7:	64 46 69 6c 65 50 4b 	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x50],0x6d50634b
     9de:	63 50 6d 
     9e1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     9e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9e5:	70 65                	jo     a4c <__abi_tag+0x6d0>
     9e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9e8:	5f                   	pop    rdi
     9e9:	74 6f                	je     a5a <__abi_tag+0x6de>
     9eb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9ec:	5f                   	pop    rdi
     9ed:	6d                   	ins    DWORD PTR es:[rdi],dx
     9ee:	61                   	(bad)
     9ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9f0:	79 5f                	jns    a51 <__abi_tag+0x6d5>
     9f2:	61                   	(bad)
     9f3:	72 67                	jb     a5c <__abi_tag+0x6e0>
     9f5:	73 00                	jae    9f7 <__abi_tag+0x67b>
     9f7:	5f                   	pop    rdi
     9f8:	5f                   	pop    rdi
     9f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9fa:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     9fc:	61                   	(bad)
     9fd:	67 00 73 74          	add    BYTE PTR [ebx+0x74],dh
     a01:	5f                   	pop    rdi
     a02:	69 6e 6f 00 5f 5f 6d 	imul   ebp,DWORD PTR [rsi+0x6f],0x6d5f5f00
     a09:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a0a:	64 65 5f             	fs gs pop rdi
     a0d:	74 00                	je     a0f <__abi_tag+0x693>
     a0f:	5f                   	pop    rdi
     a10:	5f                   	pop    rdi
     a11:	62 6c 6b             	(bad)  {k3}
     a14:	63 6e 74             	movsxd ebp,DWORD PTR [rsi+0x74]
     a17:	5f                   	pop    rdi
     a18:	74 00                	je     a1a <__abi_tag+0x69e>
     a1a:	5f                   	pop    rdi
     a1b:	5f                   	pop    rdi
     a1c:	73 73                	jae    a91 <__abi_tag+0x715>
     a1e:	69 7a 65 5f 74 00 64 	imul   edi,DWORD PTR [rdx+0x65],0x6400745f
     a25:	75 6d                	jne    a94 <__abi_tag+0x718>
     a27:	6d                   	ins    DWORD PTR es:[rdi],dx
     a28:	79 00                	jns    a2a <__abi_tag+0x6ae>
     a2a:	73 74                	jae    aa0 <__abi_tag+0x724>
     a2c:	5f                   	pop    rdi
     a2d:	62 6c 6f             	(bad)  {k3}
     a30:	63 6b 73             	movsxd ebp,DWORD PTR [rbx+0x73]
     a33:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a36:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a37:	62 79 74 65 73       	(bad)
     a3c:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     a3f:	5f                   	pop    rdi
     a40:	75 69                	jne    aab <__abi_tag+0x72f>
     a42:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
     a46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a47:	70 65                	jo     aae <__abi_tag+0x732>
     a49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a4a:	5f                   	pop    rdi
     a4b:	6d                   	ins    DWORD PTR es:[rdi],dx
     a4c:	69 73 73 69 6e 67 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f676e69
     a53:	6d                   	ins    DWORD PTR es:[rdi],dx
     a54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a55:	64 65 00 5f 5f       	fs add BYTE PTR gs:[rdi+0x5f],bl
     a5a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a5b:	6c                   	ins    BYTE PTR es:[rdi],dx
     a5c:	69 6e 6b 5f 74 00 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f00745f
     a63:	5f                   	pop    rdi
     a64:	72 65                	jb     acb <__abi_tag+0x74f>
     a66:	61                   	(bad)
     a67:	64 5f                	fs pop rdi
     a69:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     a6c:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     a6f:	75 6e                	jne    adf <__abi_tag+0x763>
     a71:	74 4c                	je     abf <__abi_tag+0x743>
     a73:	69 6e 65 73 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0073
     a7a:	66 64 00 73 74       	data16 add BYTE PTR fs:[rbx+0x74],dh
     a7f:	5f                   	pop    rdi
     a80:	73 69                	jae    aeb <__abi_tag+0x76f>
     a82:	7a 65                	jp     ae9 <__abi_tag+0x76d>
     a84:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     a87:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a88:	70 65                	jo     aef <__abi_tag+0x773>
     a8a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a8b:	5f                   	pop    rdi
     a8c:	32 00                	xor    al,BYTE PTR [rax]
     a8e:	73 74                	jae    b04 <__abi_tag+0x788>
     a90:	5f                   	pop    rdi
     a91:	6d                   	ins    DWORD PTR es:[rdi],dx
     a92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a93:	64 65 00 73 74       	fs add BYTE PTR gs:[rbx+0x74],dh
     a98:	5f                   	pop    rdi
     a99:	61                   	(bad)
     a9a:	74 69                	je     b05 <__abi_tag+0x789>
     a9c:	6d                   	ins    DWORD PTR es:[rdi],dx
     a9d:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
     aa1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aa2:	73 65                	jae    b09 <__abi_tag+0x78d>
     aa4:	63 00                	movsxd eax,DWORD PTR [rax]
     aa6:	5f                   	pop    rdi
     aa7:	5f                   	pop    rdi
     aa8:	64 65 76 5f          	fs gs jbe b0b <__abi_tag+0x78f>
     aac:	74 00                	je     aae <__abi_tag+0x732>
     aae:	74 76                	je     b26 <__abi_tag+0x7aa>
     ab0:	5f                   	pop    rdi
     ab1:	73 65                	jae    b18 <__abi_tag+0x79c>
     ab3:	63 00                	movsxd eax,DWORD PTR [rax]
     ab5:	5f                   	pop    rdi
     ab6:	5f                   	pop    rdi
     ab7:	73 79                	jae    b32 <__abi_tag+0x7b6>
     ab9:	73 63                	jae    b1e <__abi_tag+0x7a2>
     abb:	61                   	(bad)
     abc:	6c                   	ins    BYTE PTR es:[rdi],dx
     abd:	6c                   	ins    BYTE PTR es:[rdi],dx
     abe:	5f                   	pop    rdi
     abf:	73 6c                	jae    b2d <__abi_tag+0x7b1>
     ac1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ac2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ac3:	67 5f                	addr32 pop rdi
     ac5:	74 00                	je     ac7 <__abi_tag+0x74b>
     ac7:	66 69 6c 65 5f 73 74 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7473
     ace:	61                   	(bad)
     acf:	74 00                	je     ad1 <__abi_tag+0x755>
     ad1:	5f                   	pop    rdi
     ad2:	5f                   	pop    rdi
     ad3:	62                   	(bad)
     ad4:	6c                   	ins    BYTE PTR es:[rdi],dx
     ad5:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     ad9:	65 5f                	gs pop rdi
     adb:	74 00                	je     add <__abi_tag+0x761>
     add:	5f                   	pop    rdi
     ade:	5f                   	pop    rdi
     adf:	62 75 66 00 5f 5f 70 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xe0]
     ae6:	61                   	(bad)
     ae7:	64 30 00             	xor    BYTE PTR fs:[rax],al
     aea:	5f                   	pop    rdi
     aeb:	5f                   	pop    rdi
     aec:	67 6c                	ins    BYTE PTR es:[edi],dx
     aee:	69 62 63 5f 72 65 73 	imul   esp,DWORD PTR [rdx+0x63],0x7365725f
     af5:	65 72 76             	gs jb  b6e <__abi_tag+0x7f2>
     af8:	65 64 00 73 74       	gs add BYTE PTR fs:[rbx+0x74],dh
     afd:	5f                   	pop    rdi
     afe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aff:	6c                   	ins    BYTE PTR es:[rdi],dx
     b00:	69 6e 6b 00 73 74 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f747300
     b07:	62                   	(bad)
     b08:	6c                   	ins    BYTE PTR es:[rdi],dx
     b09:	6b 73 69 7a          	imul   esi,DWORD PTR [rbx+0x69],0x7a
     b0d:	65 00 74 69 6d       	add    BYTE PTR gs:[rcx+rbp*2+0x6d],dh
     b12:	65 73 70             	gs jae b85 <__abi_tag+0x809>
     b15:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
     b18:	5f                   	pop    rdi
     b19:	5f                   	pop    rdi
     b1a:	69 6e 6f 5f 74 00 66 	imul   ebp,DWORD PTR [rsi+0x6f],0x6600745f
     b21:	69 6c 65 5f 64 65 73 	imul   ebp,DWORD PTR [rbp+riz*2+0x5f],0x63736564
     b28:	63 
     b29:	72 00                	jb     b2b <__abi_tag+0x7af>
     b2b:	73 74                	jae    ba1 <__abi_tag+0x825>
     b2d:	5f                   	pop    rdi
     b2e:	72 64                	jb     b94 <__abi_tag+0x818>
     b30:	65 76 00             	gs jbe b33 <__abi_tag+0x7b7>
     b33:	5f                   	pop    rdi
     b34:	5f                   	pop    rdi
     b35:	75 69                	jne    ba0 <__abi_tag+0x824>
     b37:	64 5f                	fs pop rdi
     b39:	74 00                	je     b3b <__abi_tag+0x7bf>
     b3b:	73 74                	jae    bb1 <__abi_tag+0x835>
     b3d:	5f                   	pop    rdi
     b3e:	67 69 64 00 5f 5f 74 	imul   esp,DWORD PTR [eax+eax*1+0x5f],0x6d69745f
     b45:	69 6d 
     b47:	65 5f                	gs pop rdi
     b49:	74 00                	je     b4b <__abi_tag+0x7cf>
     b4b:	5f                   	pop    rdi
     b4c:	5f                   	pop    rdi
     b4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b4e:	66 66 5f             	data16 pop di
     b51:	74 00                	je     b53 <__abi_tag+0x7d7>
     b53:	73 74                	jae    bc9 <__abi_tag+0x84d>
     b55:	5f                   	pop    rdi
     b56:	64 65 76 00          	fs gs jbe b5a <__abi_tag+0x7de>
     b5a:	5f                   	pop    rdi
     b5b:	5f                   	pop    rdi
     b5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b5d:	70 65                	jo     bc4 <__abi_tag+0x848>
     b5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b60:	5f                   	pop    rdi
     b61:	61                   	(bad)
     b62:	6c                   	ins    BYTE PTR es:[rdi],dx
     b63:	69 61 73 00 6e 65 77 	imul   esp,DWORD PTR [rcx+0x73],0x77656e00
     b6a:	5f                   	pop    rdi
     b6b:	74 65                	je     bd2 <__abi_tag+0x856>
     b6d:	78 74                	js     be3 <__abi_tag+0x867>
     b6f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
     b72:	5f                   	pop    rdi
     b73:	6d                   	ins    DWORD PTR es:[rdi],dx
     b74:	74 69                	je     bdf <__abi_tag+0x863>
     b76:	6d                   	ins    DWORD PTR es:[rdi],dx
     b77:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b7a:	72 65                	jb     be1 <__abi_tag+0x865>
     b7c:	61                   	(bad)
     b7d:	64 5f                	fs pop rdi
     b7f:	63 68 6b             	movsxd ebp,DWORD PTR [rax+0x6b]
     b82:	5f                   	pop    rdi
     b83:	77 61                	ja     be6 <__abi_tag+0x86a>
     b85:	72 6e                	jb     bf5 <__abi_tag+0x879>
     b87:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
     b8a:	6c                   	ins    BYTE PTR es:[rdi],dx
     b8b:	65 5f                	gs pop rdi
     b8d:	73 69                	jae    bf8 <__abi_tag+0x87c>
     b8f:	7a 65                	jp     bf6 <__abi_tag+0x87a>
     b91:	00 66 64             	add    BYTE PTR [rsi+0x64],ah
     b94:	69 6d 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rbp+0x0],0x74535a5f
     b9b:	34 66                	xor    al,0x66
     b9d:	6d                   	ins    DWORD PTR es:[rdi],dx
     b9e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b9f:	64 65 65 00 5f 5a    	fs gs add BYTE PTR gs:[rdi+0x5a],bl
     ba5:	4e 53                	rex.WRX push rbx
     ba7:	74 36                	je     bdf <__abi_tag+0x863>
     ba9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     bac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bad:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     baf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     bb3:	61                   	(bad)
     bb4:	74 69                	je     c1f <__abi_tag+0x8a3>
     bb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bb8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     bba:	53                   	push   rbx
     bbb:	74 35                	je     bf2 <__abi_tag+0x876>
     bbd:	72 61                	jb     c20 <__abi_tag+0x8a4>
     bbf:	74 69                	je     c2a <__abi_tag+0x8ae>
     bc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bc2:	49                   	rex.WB
     bc3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     bc5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     bc8:	6c                   	ins    BYTE PTR es:[rdi],dx
     bc9:	31 30                	xor    DWORD PTR [rax],esi
     bcb:	30 30                	xor    BYTE PTR [rax],dh
     bcd:	30 30                	xor    BYTE PTR [rax],dh
     bcf:	30 30                	xor    BYTE PTR [rax],dh
     bd1:	30 30                	xor    BYTE PTR [rax],dh
     bd3:	45                   	rex.RB
     bd4:	45                   	rex.RB
     bd5:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     bd7:	6d                   	ins    DWORD PTR es:[rdi],dx
     bd8:	45 76 00             	rex.RB jbe bdb <__abi_tag+0x85f>
     bdb:	66 67 65 74 63       	data16 addr32 gs je c43 <__abi_tag+0x8c7>
     be0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     be3:	53                   	push   rbx
     be4:	74 36                	je     c1c <__abi_tag+0x8a0>
     be6:	73 63                	jae    c4b <__abi_tag+0x8cf>
     be8:	61                   	(bad)
     be9:	6c                   	ins    BYTE PTR es:[rdi],dx
     bea:	62 6e 66 69 00       	(bad)
     bef:	5f                   	pop    rdi
     bf0:	5a                   	pop    rdx
     bf1:	53                   	push   rbx
     bf2:	74 37                	je     c2b <__abi_tag+0x8af>
     bf4:	73 69                	jae    c5f <__abi_tag+0x8e3>
     bf6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     bf8:	62 69 74 64 00       	(bad)
     bfd:	5f                   	pop    rdi
     bfe:	5a                   	pop    rdx
     bff:	53                   	push   rbx
     c00:	74 37                	je     c39 <__abi_tag+0x8bd>
     c02:	73 69                	jae    c6d <__abi_tag+0x8f1>
     c04:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c06:	62 69 74 66 00       	(bad)
     c0b:	5f                   	pop    rdi
     c0c:	5a                   	pop    rdx
     c0d:	4e 53                	rex.WRX push rbx
     c0f:	74 36                	je     c47 <__abi_tag+0x8cb>
     c11:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c15:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c16:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c17:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     c1b:	61                   	(bad)
     c1c:	74 69                	je     c87 <__abi_tag+0x90b>
     c1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c20:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     c22:	53                   	push   rbx
     c23:	74 35                	je     c5a <__abi_tag+0x8de>
     c25:	72 61                	jb     c88 <__abi_tag+0x90c>
     c27:	74 69                	je     c92 <__abi_tag+0x916>
     c29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c2a:	49                   	rex.WB
     c2b:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     c2d:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     c30:	6c                   	ins    BYTE PTR es:[rdi],dx
     c31:	31 30                	xor    DWORD PTR [rax],esi
     c33:	30 30                	xor    BYTE PTR [rax],dh
     c35:	30 30                	xor    BYTE PTR [rax],dh
     c37:	30 30                	xor    BYTE PTR [rax],dh
     c39:	30 30                	xor    BYTE PTR [rax],dh
     c3b:	45                   	rex.RB
     c3c:	45                   	rex.RB
     c3d:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
     c41:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c42:	45 76 00             	rex.RB jbe c45 <__abi_tag+0x8c9>
     c45:	66 67 65 74 73       	data16 addr32 gs je cbd <__abi_tag+0x941>
     c4a:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     c4e:	68 6f 75 72 00       	push   0x72756f
     c53:	5f                   	pop    rdi
     c54:	5f                   	pop    rdi
     c55:	76 61                	jbe    cb8 <__abi_tag+0x93c>
     c57:	6c                   	ins    BYTE PTR es:[rdi],dx
     c58:	75 65                	jne    cbf <__abi_tag+0x943>
     c5a:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
     c5d:	6c                   	ins    BYTE PTR es:[rdi],dx
     c5e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c5f:	61                   	(bad)
     c60:	74 36                	je     c98 <__abi_tag+0x91c>
     c62:	34 78                	xor    al,0x78
     c64:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c67:	53                   	push   rbx
     c68:	74 34                	je     c9e <__abi_tag+0x922>
     c6a:	66 6d                	ins    WORD PTR es:[rdi],dx
     c6c:	69 6e 66 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x66],0x5a5f0066
     c73:	53                   	push   rbx
     c74:	74 35                	je     cab <__abi_tag+0x92f>
     c76:	6c                   	ins    BYTE PTR es:[rdi],dx
     c77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c78:	67 31 30             	xor    DWORD PTR [eax],esi
     c7b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     c7f:	53                   	push   rbx
     c80:	74 35                	je     cb7 <__abi_tag+0x93b>
     c82:	6c                   	ins    BYTE PTR es:[rdi],dx
     c83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c84:	67 31 30             	xor    DWORD PTR [eax],esi
     c87:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     c8b:	4e 53                	rex.WRX push rbx
     c8d:	74 36                	je     cc5 <__abi_tag+0x949>
     c8f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     c92:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c95:	31 30                	xor    DWORD PTR [rax],esi
     c97:	74 69                	je     d02 <__abi_tag+0x986>
     c99:	6d                   	ins    DWORD PTR es:[rdi],dx
     c9a:	65 5f                	gs pop rdi
     c9c:	70 6f                	jo     d0d <__abi_tag+0x991>
     c9e:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     ca5:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     ca8:	32 31                	xor    dh,BYTE PTR [rcx]
     caa:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     cad:	65 61                	gs (bad)
     caf:	64 79 5f             	fs jns d11 <__abi_tag+0x995>
     cb2:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     cb6:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     cba:	5f                   	pop    rdi
     cbb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     cbf:	61                   	(bad)
     cc0:	74 69                	je     d2b <__abi_tag+0x9af>
     cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cc3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cc4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     cc6:	53                   	push   rbx
     cc7:	74 35                	je     cfe <__abi_tag+0x982>
     cc9:	72 61                	jb     d2c <__abi_tag+0x9b0>
     ccb:	74 69                	je     d36 <__abi_tag+0x9ba>
     ccd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cce:	49                   	rex.WB
     ccf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     cd1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     cd4:	6c                   	ins    BYTE PTR es:[rdi],dx
     cd5:	31 30                	xor    DWORD PTR [rax],esi
     cd7:	30 30                	xor    BYTE PTR [rax],dh
     cd9:	30 30                	xor    BYTE PTR [rax],dh
     cdb:	30 30                	xor    BYTE PTR [rax],dh
     cdd:	30 30                	xor    BYTE PTR [rax],dh
     cdf:	45                   	rex.RB
     ce0:	45                   	rex.RB
     ce1:	45                   	rex.RB
     ce2:	45                   	rex.RB
     ce3:	45                   	rex.RB
     ce4:	43 34 45             	rex.XB xor al,0x45
     ce7:	52                   	push   rdx
     ce8:	4b 53                	rex.WXB push r11
     cea:	36 5f                	ss pop rdi
     cec:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
     cef:	72 6f                	jb     d60 <__abi_tag+0x9e4>
     cf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     cf2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     cf3:	5f                   	pop    rdi
     cf4:	6c                   	ins    BYTE PTR es:[rdi],dx
     cf5:	69 74 65 72 61 6c 73 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x736c61
     cfc:	00 
     cfd:	69 6e 64 65 78 5f 61 	imul   ebp,DWORD PTR [rsi+0x64],0x615f7865
     d04:	72 72                	jb     d78 <__abi_tag+0x9fc>
     d06:	61                   	(bad)
     d07:	79 00                	jns    d09 <__abi_tag+0x98d>
     d09:	74 65                	je     d70 <__abi_tag+0x9f4>
     d0b:	73 74                	jae    d81 <__abi_tag+0xa05>
     d0d:	5f                   	pop    rdi
     d0e:	64 61                	fs (bad)
     d10:	74 61                	je     d73 <__abi_tag+0x9f7>
     d12:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d15:	4e 53                	rex.WRX push rbx
     d17:	74 36                	je     d4f <__abi_tag+0x9d3>
     d19:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     d1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d1f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     d23:	61                   	(bad)
     d24:	74 69                	je     d8f <__abi_tag+0xa13>
     d26:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d28:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     d2a:	53                   	push   rbx
     d2b:	74 35                	je     d62 <__abi_tag+0x9e6>
     d2d:	72 61                	jb     d90 <__abi_tag+0xa14>
     d2f:	74 69                	je     d9a <__abi_tag+0xa1e>
     d31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d32:	49                   	rex.WB
     d33:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     d35:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     d38:	6c                   	ins    BYTE PTR es:[rdi],dx
     d39:	31 30                	xor    DWORD PTR [rax],esi
     d3b:	30 30                	xor    BYTE PTR [rax],dh
     d3d:	30 30                	xor    BYTE PTR [rax],dh
     d3f:	30 30                	xor    BYTE PTR [rax],dh
     d41:	30 30                	xor    BYTE PTR [rax],dh
     d43:	45                   	rex.RB
     d44:	45                   	rex.RB
     d45:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     d47:	4c                   	rex.WR
     d48:	45 52                	rex.RB push r10
     d4a:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
     d4c:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
     d4f:	6d                   	ins    DWORD PTR es:[rdi],dx
     d50:	5f                   	pop    rdi
     d51:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
     d58:	5f                   	pop    rdi
     d59:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     d5b:	61                   	(bad)
     d5c:	62                   	(bad)
     d5d:	6c                   	ins    BYTE PTR es:[rdi],dx
     d5e:	65 5f                	gs pop rdi
     d60:	69 66 5f 69 73 5f 64 	imul   esp,DWORD PTR [rsi+0x5f],0x645f7369
     d67:	75 72                	jne    ddb <__abi_tag+0xa5f>
     d69:	61                   	(bad)
     d6a:	74 69                	je     dd5 <__abi_tag+0xa59>
     d6c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d6d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d6e:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
     d72:	65 5f                	gs pop rdi
     d74:	70 6f                	jo     de5 <__abi_tag+0xa69>
     d76:	69 6e 74 00 7e 64 75 	imul   ebp,DWORD PTR [rsi+0x74],0x75647e00
     d7d:	72 61                	jb     de0 <__abi_tag+0xa64>
     d7f:	74 69                	je     dea <__abi_tag+0xa6e>
     d81:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d82:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d83:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
     d86:	75 74                	jne    dfc <__abi_tag+0xa80>
     d88:	77 73                	ja     dfd <__abi_tag+0xa81>
     d8a:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
     d8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d8e:	74 5f                	je     def <__abi_tag+0xa73>
     d90:	66 61                	data16 (bad)
     d92:	73 74                	jae    e08 <__abi_tag+0xa8c>
     d94:	36 34 5f             	ss xor al,0x5f
     d97:	74 00                	je     d99 <__abi_tag+0xa1d>
     d99:	5f                   	pop    rdi
     d9a:	5f                   	pop    rdi
     d9b:	75 69                	jne    e06 <__abi_tag+0xa8a>
     d9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d9e:	74 5f                	je     dff <__abi_tag+0xa83>
     da0:	6c                   	ins    BYTE PTR es:[rdi],dx
     da1:	65 61                	gs (bad)
     da3:	73 74                	jae    e19 <__abi_tag+0xa9d>
     da5:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
     da8:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     dab:	4f 5f                	rex.WRXB pop r15
     dad:	73 61                	jae    e10 <__abi_tag+0xa94>
     daf:	76 65                	jbe    e16 <__abi_tag+0xa9a>
     db1:	5f                   	pop    rdi
     db2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     db4:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     db8:	4e 53                	rex.WRX push rbx
     dba:	74 36                	je     df2 <__abi_tag+0xa76>
     dbc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     dbf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dc1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dc2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     dc6:	61                   	(bad)
     dc7:	74 69                	je     e32 <__abi_tag+0xab6>
     dc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     dcb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     dcd:	53                   	push   rbx
     dce:	74 35                	je     e05 <__abi_tag+0xa89>
     dd0:	72 61                	jb     e33 <__abi_tag+0xab7>
     dd2:	74 69                	je     e3d <__abi_tag+0xac1>
     dd4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dd5:	49                   	rex.WB
     dd6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     dd8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ddb:	6c                   	ins    BYTE PTR es:[rdi],dx
     ddc:	31 30                	xor    DWORD PTR [rax],esi
     dde:	30 30                	xor    BYTE PTR [rax],dh
     de0:	30 30                	xor    BYTE PTR [rax],dh
     de2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
     de5:	45 70 4c             	rex.RB jo e34 <__abi_tag+0xab8>
     de8:	45 52                	rex.RB push r10
     dea:	4b 53                	rex.WXB push r11
     dec:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     def:	73 71                	jae    e62 <__abi_tag+0xae6>
     df1:	72 74                	jb     e67 <__abi_tag+0xaeb>
     df3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     df6:	53                   	push   rbx
     df7:	74 33                	je     e2c <__abi_tag+0xab0>
     df9:	65 78 70             	gs js  e6c <__abi_tag+0xaf0>
     dfc:	65 00 61 73          	add    BYTE PTR gs:[rcx+0x73],ah
     e00:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
     e04:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e08:	53                   	push   rbx
     e09:	74 39                	je     e44 <__abi_tag+0xac8>
     e0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e0c:	65 78 74             	gs js  e83 <__abi_tag+0xb07>
     e0f:	61                   	(bad)
     e10:	66 74 65             	data16 je e78 <__abi_tag+0xafc>
     e13:	72 65                	jb     e7a <__abi_tag+0xafe>
     e15:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
     e19:	73 63                	jae    e7e <__abi_tag+0xb02>
     e1b:	73 70                	jae    e8d <__abi_tag+0xb11>
     e1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e1e:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     e21:	5f                   	pop    rdi
     e22:	67 63 64 00 66       	movsxd esp,DWORD PTR [eax+eax*1+0x66]
     e27:	6d                   	ins    DWORD PTR es:[rdi],dx
     e28:	69 6e 00 6c 6f 63 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61636f6c
     e2f:	6c                   	ins    BYTE PTR es:[rdi],dx
     e30:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
     e34:	76 00                	jbe    e36 <__abi_tag+0xaba>
     e36:	5f                   	pop    rdi
     e37:	5a                   	pop    rdx
     e38:	53                   	push   rbx
     e39:	74 36                	je     e71 <__abi_tag+0xaf5>
     e3b:	6c                   	ins    BYTE PTR es:[rdi],dx
     e3c:	67 61                	addr32 (bad)
     e3e:	6d                   	ins    DWORD PTR es:[rdi],dx
     e3f:	6d                   	ins    DWORD PTR es:[rdi],dx
     e40:	61                   	(bad)
     e41:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e45:	53                   	push   rbx
     e46:	74 36                	je     e7e <__abi_tag+0xb02>
     e48:	6c                   	ins    BYTE PTR es:[rdi],dx
     e49:	67 61                	addr32 (bad)
     e4b:	6d                   	ins    DWORD PTR es:[rdi],dx
     e4c:	6d                   	ins    DWORD PTR es:[rdi],dx
     e4d:	61                   	(bad)
     e4e:	66 00 73 65          	data16 add BYTE PTR [rbx+0x65],dh
     e52:	61                   	(bad)
     e53:	72 63                	jb     eb8 <__abi_tag+0xb3c>
     e55:	68 5f 66 69 6c       	push   0x6c69665f
     e5a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     e5c:	61                   	(bad)
     e5d:	6d                   	ins    DWORD PTR es:[rdi],dx
     e5e:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
     e62:	4e 53                	rex.WRX push rbx
     e64:	74 36                	je     e9c <__abi_tag+0xb20>
     e66:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     e69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e6c:	31 30                	xor    DWORD PTR [rax],esi
     e6e:	74 69                	je     ed9 <__abi_tag+0xb5d>
     e70:	6d                   	ins    DWORD PTR es:[rdi],dx
     e71:	65 5f                	gs pop rdi
     e73:	70 6f                	jo     ee4 <__abi_tag+0xb68>
     e75:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     e7c:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     e7f:	32 31                	xor    dh,BYTE PTR [rcx]
     e81:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     e84:	65 61                	gs (bad)
     e86:	64 79 5f             	fs jns ee8 <__abi_tag+0xb6c>
     e89:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     e8d:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     e91:	5f                   	pop    rdi
     e92:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     e96:	61                   	(bad)
     e97:	74 69                	je     f02 <__abi_tag+0xb86>
     e99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     e9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e9b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     e9d:	53                   	push   rbx
     e9e:	74 35                	je     ed5 <__abi_tag+0xb59>
     ea0:	72 61                	jb     f03 <__abi_tag+0xb87>
     ea2:	74 69                	je     f0d <__abi_tag+0xb91>
     ea4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ea5:	49                   	rex.WB
     ea6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ea8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     eab:	6c                   	ins    BYTE PTR es:[rdi],dx
     eac:	31 30                	xor    DWORD PTR [rax],esi
     eae:	30 30                	xor    BYTE PTR [rax],dh
     eb0:	30 30                	xor    BYTE PTR [rax],dh
     eb2:	30 30                	xor    BYTE PTR [rax],dh
     eb4:	30 30                	xor    BYTE PTR [rax],dh
     eb6:	45                   	rex.RB
     eb7:	45                   	rex.RB
     eb8:	45                   	rex.RB
     eb9:	45                   	rex.RB
     eba:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     ebc:	49                   	rex.WB
     ebd:	45 52                	rex.RB push r10
     ebf:	4b 53                	rex.WXB push r11
     ec1:	36 5f                	ss pop rdi
     ec3:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     ec6:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     ecd:	77 63                	ja     f32 <__abi_tag+0xbb6>
     ecf:	73 74                	jae    f45 <__abi_tag+0xbc9>
     ed1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ed2:	75 6c                	jne    f40 <__abi_tag+0xbc4>
     ed4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     ed7:	4e 53                	rex.WRX push rbx
     ed9:	74 36                	je     f11 <__abi_tag+0xb95>
     edb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     ede:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     edf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ee0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ee1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     ee5:	61                   	(bad)
     ee6:	74 69                	je     f51 <__abi_tag+0xbd5>
     ee8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ee9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     eea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     eec:	53                   	push   rbx
     eed:	74 35                	je     f24 <__abi_tag+0xba8>
     eef:	72 61                	jb     f52 <__abi_tag+0xbd6>
     ef1:	74 69                	je     f5c <__abi_tag+0xbe0>
     ef3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ef4:	49                   	rex.WB
     ef5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ef7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     efa:	6c                   	ins    BYTE PTR es:[rdi],dx
     efb:	31 30                	xor    DWORD PTR [rax],esi
     efd:	30 30                	xor    BYTE PTR [rax],dh
     eff:	30 30                	xor    BYTE PTR [rax],dh
     f01:	30 30                	xor    BYTE PTR [rax],dh
     f03:	30 30                	xor    BYTE PTR [rax],dh
     f05:	45                   	rex.RB
     f06:	45                   	rex.RB
     f07:	45                   	rex.RB
     f08:	43 31 49 6c          	rex.XB xor DWORD PTR [r9+0x6c],ecx
     f0c:	76 45                	jbe    f53 <__abi_tag+0xbd7>
     f0e:	45 52                	rex.RB push r10
     f10:	4b 54                	rex.WXB push r12
     f12:	5f                   	pop    rdi
     f13:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
     f16:	4f 5f                	rex.WRXB pop r15
     f18:	77 72                	ja     f8c <__abi_tag+0xc10>
     f1a:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
     f21:	65 
     f22:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
     f26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f27:	61                   	(bad)
     f28:	6d                   	ins    DWORD PTR es:[rdi],dx
     f29:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f2c:	53                   	push   rbx
     f2d:	74 31                	je     f60 <__abi_tag+0xbe4>
     f2f:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
     f32:	78 74                	js     fa8 <__abi_tag+0xc2c>
     f34:	74 6f                	je     fa5 <__abi_tag+0xc29>
     f36:	77 61                	ja     f99 <__abi_tag+0xc1d>
     f38:	72 64                	jb     f9e <__abi_tag+0xc22>
     f3a:	66 65 00 5f 5f       	data16 add BYTE PTR gs:[rdi+0x5f],bl
     f3f:	6c                   	ins    BYTE PTR es:[rdi],dx
     f40:	68 73 00 5f 6c       	push   0x6c5f0073
     f45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f46:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
     f49:	69 73 75 6e 6f 72 64 	imul   esi,DWORD PTR [rbx+0x75],0x64726f6e
     f50:	65 72 65             	gs jb  fb8 <__abi_tag+0xc3c>
     f53:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
     f57:	74 5f                	je     fb8 <__abi_tag+0xc3c>
     f59:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
     f5c:	72 5f                	jb     fbd <__abi_tag+0xc41>
     f5e:	73 79                	jae    fd9 <__abi_tag+0xc5d>
     f60:	6d                   	ins    DWORD PTR es:[rdi],dx
     f61:	62 6f 6c 00 5f       	(bad)
     f66:	5a                   	pop    rdx
     f67:	53                   	push   rbx
     f68:	74 33                	je     f9d <__abi_tag+0xc21>
     f6a:	66 6d                	ins    WORD PTR es:[rdi],dx
     f6c:	61                   	(bad)
     f6d:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
     f73:	4e 53                	rex.WRX push rbx
     f75:	74 36                	je     fad <__abi_tag+0xc31>
     f77:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     f7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f7c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f7d:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     f81:	61                   	(bad)
     f82:	74 69                	je     fed <__abi_tag+0xc71>
     f84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f86:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     f88:	53                   	push   rbx
     f89:	74 35                	je     fc0 <__abi_tag+0xc44>
     f8b:	72 61                	jb     fee <__abi_tag+0xc72>
     f8d:	74 69                	je     ff8 <__abi_tag+0xc7c>
     f8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f90:	49                   	rex.WB
     f91:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     f93:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     f96:	6c                   	ins    BYTE PTR es:[rdi],dx
     f97:	31 30                	xor    DWORD PTR [rax],esi
     f99:	30 30                	xor    BYTE PTR [rax],dh
     f9b:	30 30                	xor    BYTE PTR [rax],dh
     f9d:	30 30                	xor    BYTE PTR [rax],dh
     f9f:	30 30                	xor    BYTE PTR [rax],dh
     fa1:	45                   	rex.RB
     fa2:	45                   	rex.RB
     fa3:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     fa5:	49                   	rex.WB
     fa6:	45 52                	rex.RB push r10
     fa8:	4b 53                	rex.WXB push r11
     faa:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     fad:	5f                   	pop    rdi
     fae:	5a                   	pop    rdx
     faf:	4e 53                	rex.WRX push rbx
     fb1:	74 36                	je     fe9 <__abi_tag+0xc6d>
     fb3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
     fb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fb8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fb9:	31 30                	xor    DWORD PTR [rax],esi
     fbb:	74 69                	je     1026 <_init+0x26>
     fbd:	6d                   	ins    DWORD PTR es:[rdi],dx
     fbe:	65 5f                	gs pop rdi
     fc0:	70 6f                	jo     1031 <__printf_chk@plt+0x1>
     fc2:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
     fc9:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
     fcc:	32 31                	xor    dh,BYTE PTR [rcx]
     fce:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
     fd1:	65 61                	gs (bad)
     fd3:	64 79 5f             	fs jns 1035 <__printf_chk@plt+0x5>
     fd6:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
     fda:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
     fde:	5f                   	pop    rdi
     fdf:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
     fe3:	61                   	(bad)
     fe4:	74 69                	je     104f <rand@plt+0xf>
     fe6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     fe7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fe8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
     fea:	53                   	push   rbx
     feb:	74 35                	je     1022 <_init+0x22>
     fed:	72 61                	jb     1050 <strchr@plt>
     fef:	74 69                	je     105a <strchr@plt+0xa>
     ff1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     ff2:	49                   	rex.WB
     ff3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
     ff5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
     ff8:	6c                   	ins    BYTE PTR es:[rdi],dx
     ff9:	31 30                	xor    DWORD PTR [rax],esi
     ffb:	30 30                	xor    BYTE PTR [rax],dh
     ffd:	30 30                	xor    BYTE PTR [rax],dh
     fff:	30 30                	xor    BYTE PTR [rax],dh
    1001:	30 30                	xor    BYTE PTR [rax],dh
    1003:	45                   	rex.RB
    1004:	45                   	rex.RB
    1005:	45                   	rex.RB
    1006:	45                   	rex.RB
    1007:	45                   	rex.RB
    1008:	43 34 45             	rex.XB xor al,0x45
    100b:	76 00                	jbe    100d <_init+0xd>
    100d:	5f                   	pop    rdi
    100e:	5a                   	pop    rdx
    100f:	53                   	push   rbx
    1010:	74 36                	je     1048 <rand@plt+0x8>
    1012:	73 63                	jae    1077 <__assert_fail@plt+0x7>
    1014:	61                   	(bad)
    1015:	6c                   	ins    BYTE PTR es:[rdi],dx
    1016:	62 6e 65 69 00       	(bad)
    101b:	64 69 66 66 74 69 6d 	imul   esp,DWORD PTR fs:[rsi+0x66],0x656d6974
    1022:	65 
    1023:	00 61 76             	add    BYTE PTR [rcx+0x76],ah
    1026:	65 72 61             	gs jb  108a <calloc@plt+0xa>
    1029:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    102e:	53                   	push   rbx
    102f:	74 34                	je     1065 <__strncpy_chk@plt+0x5>
    1031:	74 61                	je     1094 <open@plt+0x4>
    1033:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1034:	68 65 00 5f 5a       	push   0x5a5f0065
    1039:	53                   	push   rbx
    103a:	74 34                	je     1070 <__assert_fail@plt>
    103c:	74 61                	je     109f <open@plt+0xf>
    103e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    103f:	68 66 00 5f 49       	push   0x495f0066
    1044:	4f 5f                	rex.WRXB pop r15
    1046:	62 75 66 5f 65       	(bad)
    104b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    104c:	64 00 5f 49          	add    BYTE PTR fs:[rdi+0x49],bl
    1050:	4f 5f                	rex.WRXB pop r15
    1052:	73 61                	jae    10b5 <stat@plt+0x5>
    1054:	76 65                	jbe    10bb <stat@plt+0xb>
    1056:	5f                   	pop    rdi
    1057:	62 61 73 65 00       	(bad)
    105c:	6d                   	ins    DWORD PTR es:[rdi],dx
    105d:	62 72 74 6f 77       	(bad)
    1062:	63 00                	movsxd eax,DWORD PTR [rax]
    1064:	5f                   	pop    rdi
    1065:	5a                   	pop    rdx
    1066:	53                   	push   rbx
    1067:	74 35                	je     109e <open@plt+0xe>
    1069:	6c                   	ins    BYTE PTR es:[rdi],dx
    106a:	72 69                	jb     10d5 <fclose@plt+0x5>
    106c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    106d:	74 66                	je     10d5 <fclose@plt+0x5>
    106f:	00 31                	add    BYTE PTR [rcx],dh
    1071:	31 6d 61             	xor    DWORD PTR [rbp+0x61],ebp
    1074:	78 5f                	js     10d5 <fclose@plt+0x5>
    1076:	61                   	(bad)
    1077:	6c                   	ins    BYTE PTR es:[rdi],dx
    1078:	69 67 6e 5f 74 00 77 	imul   esp,DWORD PTR [rdi+0x6e],0x7700745f
    107f:	63 73 78             	movsxd esi,DWORD PTR [rbx+0x78]
    1082:	66 72 6d             	data16 jb 10f2 <fopen@plt+0x2>
    1085:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1088:	74 5f                	je     10e9 <__stack_chk_fail@plt+0x9>
    108a:	66 72 61             	data16 jb 10ee <__stack_chk_fail@plt+0xe>
    108d:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    1090:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    1097:	5a                   	pop    rdx
    1098:	53                   	push   rbx
    1099:	74 39                	je     10d4 <fclose@plt+0x4>
    109b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    109c:	65 78 74             	gs js  1113 <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0x3>
    109f:	61                   	(bad)
    10a0:	66 74 65             	data16 je 1108 <free@plt+0x8>
    10a3:	72 66                	jb     110b <free@plt+0xb>
    10a5:	66 00 66 67          	data16 add BYTE PTR [rsi+0x67],ah
    10a9:	65 74 70             	gs je  111c <_ZNSt6chrono3_V212steady_clock3nowEv@plt+0xc>
    10ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10ad:	73 00                	jae    10af <aligned_alloc@plt+0xf>
    10af:	5f                   	pop    rdi
    10b0:	5f                   	pop    rdi
    10b1:	70 6f                	jo     1122 <__memset_chk@plt+0x2>
    10b3:	73 00                	jae    10b5 <stat@plt+0x5>
    10b5:	5f                   	pop    rdi
    10b6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    10b9:	69 6e 00 73 74 65 61 	imul   ebp,DWORD PTR [rsi+0x0],0x61657473
    10c0:	64 79 5f             	fs jns 1122 <__memset_chk@plt+0x2>
    10c3:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    10c7:	6b 00 77             	imul   eax,DWORD PTR [rax],0x77
    10ca:	63 73 63             	movsxd esi,DWORD PTR [rbx+0x63]
    10cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    10cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    10d0:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    10d3:	65 61                	gs (bad)
    10d5:	72 65                	jb     113c <putchar@plt+0xc>
    10d7:	72 72                	jb     114b <strcmp@plt+0xb>
    10d9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    10dc:	53                   	push   rbx
    10dd:	74 31                	je     1110 <_ZNSt6chrono3_V212steady_clock3nowEv@plt>
    10df:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    10e2:	75 6e                	jne    1152 <read@plt+0x2>
    10e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10e5:	72 64                	jb     114b <strcmp@plt+0xb>
    10e7:	65 72 65             	gs jb  114f <strcmp@plt+0xf>
    10ea:	64 64 64 00 5f 63    	fs fs add BYTE PTR fs:[rdi+0x63],bl
    10f0:	75 72                	jne    1164 <puts@plt+0x4>
    10f2:	5f                   	pop    rdi
    10f3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    10f6:	75 6d                	jne    1165 <puts@plt+0x5>
    10f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10f9:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    10fc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10fd:	74 5f                	je     115e <read@plt+0xe>
    10ff:	66 61                	data16 (bad)
    1101:	73 74                	jae    1177 <realloc@plt+0x7>
    1103:	33 32                	xor    esi,DWORD PTR [rdx]
    1105:	5f                   	pop    rdi
    1106:	74 00                	je     1108 <free@plt+0x8>
    1108:	5f                   	pop    rdi
    1109:	5a                   	pop    rdx
    110a:	4e 53                	rex.WRX push rbx
    110c:	74 36                	je     1144 <strcmp@plt+0x4>
    110e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1111:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1112:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1113:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1114:	31 30                	xor    DWORD PTR [rax],esi
    1116:	74 69                	je     1181 <__fprintf_chk@plt+0x1>
    1118:	6d                   	ins    DWORD PTR es:[rdi],dx
    1119:	65 5f                	gs pop rdi
    111b:	70 6f                	jo     118c <__fprintf_chk@plt+0xc>
    111d:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1124:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1127:	32 31                	xor    dh,BYTE PTR [rcx]
    1129:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    112c:	65 61                	gs (bad)
    112e:	64 79 5f             	fs jns 1190 <sqrtf@plt>
    1131:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1135:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1139:	5f                   	pop    rdi
    113a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    113e:	61                   	(bad)
    113f:	74 69                	je     11aa <fwrite@plt+0xa>
    1141:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1142:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1143:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1145:	53                   	push   rbx
    1146:	74 35                	je     117d <realloc@plt+0xd>
    1148:	72 61                	jb     11ab <fwrite@plt+0xb>
    114a:	74 69                	je     11b5 <close@plt+0x5>
    114c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    114d:	49                   	rex.WB
    114e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1150:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1153:	6c                   	ins    BYTE PTR es:[rdi],dx
    1154:	31 30                	xor    DWORD PTR [rax],esi
    1156:	30 30                	xor    BYTE PTR [rax],dh
    1158:	30 30                	xor    BYTE PTR [rax],dh
    115a:	30 30                	xor    BYTE PTR [rax],dh
    115c:	30 30                	xor    BYTE PTR [rax],dh
    115e:	45                   	rex.RB
    115f:	45                   	rex.RB
    1160:	45                   	rex.RB
    1161:	45                   	rex.RB
    1162:	45 70 4c             	rex.RB jo 11b1 <close@plt+0x1>
    1165:	45 52                	rex.RB push r10
    1167:	4b 53                	rex.WXB push r11
    1169:	36 5f                	ss pop rdi
    116b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    116e:	4e 53                	rex.WRX push rbx
    1170:	74 36                	je     11a8 <fwrite@plt+0x8>
    1172:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1175:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1176:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1177:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1178:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    117c:	61                   	(bad)
    117d:	74 69                	je     11e8 <main+0x8>
    117f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1180:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1181:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1183:	53                   	push   rbx
    1184:	74 35                	je     11bb <close@plt+0xb>
    1186:	72 61                	jb     11e9 <main+0x9>
    1188:	74 69                	je     11f3 <main+0x13>
    118a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    118b:	49                   	rex.WB
    118c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    118e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1191:	6c                   	ins    BYTE PTR es:[rdi],dx
    1192:	31 30                	xor    DWORD PTR [rax],esi
    1194:	30 30                	xor    BYTE PTR [rax],dh
    1196:	30 30                	xor    BYTE PTR [rax],dh
    1198:	30 30                	xor    BYTE PTR [rax],dh
    119a:	30 30                	xor    BYTE PTR [rax],dh
    119c:	45                   	rex.RB
    119d:	45                   	rex.RB
    119e:	45 70 70             	rex.RB jo 1211 <_start+0x1>
    11a1:	45 69 00 6c 64 65 78 	imul   r8d,DWORD PTR [r8],0x7865646c
    11a8:	70 00                	jo     11aa <fwrite@plt+0xa>
    11aa:	70 6f                	jo     121b <_start+0xb>
    11ac:	73 69                	jae    1217 <_start+0x7>
    11ae:	74 69                	je     1219 <_start+0x9>
    11b0:	76 65                	jbe    1217 <_start+0x7>
    11b2:	5f                   	pop    rdi
    11b3:	73 69                	jae    121e <_start+0xe>
    11b5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    11b7:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    11ba:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    11bc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11bf:	53                   	push   rbx
    11c0:	74 35                	je     11f7 <main+0x17>
    11c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    11c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11c4:	67 31 70 65          	xor    DWORD PTR [eax+0x65],esi
    11c8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11cb:	75 69                	jne    1236 <_start+0x26>
    11cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11ce:	74 38                	je     1208 <main+0x28>
    11d0:	5f                   	pop    rdi
    11d1:	74 00                	je     11d3 <__cxa_finalize@plt+0x3>
    11d3:	5f                   	pop    rdi
    11d4:	5a                   	pop    rdx
    11d5:	4e 53                	rex.WRX push rbx
    11d7:	74 36                	je     120f <main+0x2f>
    11d9:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    11dc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11df:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    11e3:	61                   	(bad)
    11e4:	74 69                	je     124f <deregister_tm_clones+0xf>
    11e6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    11e8:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    11ea:	53                   	push   rbx
    11eb:	74 35                	je     1222 <_start+0x12>
    11ed:	72 61                	jb     1250 <deregister_tm_clones+0x10>
    11ef:	74 69                	je     125a <deregister_tm_clones+0x1a>
    11f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    11f2:	49                   	rex.WB
    11f3:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    11f5:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    11f8:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f9:	31 30                	xor    DWORD PTR [rax],esi
    11fb:	30 30                	xor    BYTE PTR [rax],dh
    11fd:	30 30                	xor    BYTE PTR [rax],dh
    11ff:	30 30                	xor    BYTE PTR [rax],dh
    1201:	30 30                	xor    BYTE PTR [rax],dh
    1203:	45                   	rex.RB
    1204:	45                   	rex.RB
    1205:	45 70 70             	rex.RB jo 1278 <register_tm_clones+0x8>
    1208:	45 76 00             	rex.RB jbe 120b <main+0x2b>
    120b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    120c:	65 78 74             	gs js  1283 <register_tm_clones+0x13>
    120f:	74 6f                	je     1280 <register_tm_clones+0x10>
    1211:	77 61                	ja     1274 <register_tm_clones+0x4>
    1213:	72 64                	jb     1279 <register_tm_clones+0x9>
    1215:	00 65 6e             	add    BYTE PTR [rbp+0x6e],ah
    1218:	61                   	(bad)
    1219:	62                   	(bad)
    121a:	6c                   	ins    BYTE PTR es:[rdi],dx
    121b:	65 5f                	gs pop rdi
    121d:	69 66 3c 74 72 75 65 	imul   esp,DWORD PTR [rsi+0x3c],0x65757274
    1224:	2c 20                	sub    al,0x20
    1226:	73 74                	jae    129c <register_tm_clones+0x2c>
    1228:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    122b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    122e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    122f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1230:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1231:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1233:	64 75 72             	fs jne 12a8 <register_tm_clones+0x38>
    1236:	61                   	(bad)
    1237:	74 69                	je     12a2 <register_tm_clones+0x32>
    1239:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123b:	3c 6c                	cmp    al,0x6c
    123d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    123e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    123f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1243:	74 2c                	je     1271 <register_tm_clones+0x1>
    1245:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1248:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    124b:	72 61                	jb     12ae <register_tm_clones+0x3e>
    124d:	74 69                	je     12b8 <__do_global_dtors_aux+0x8>
    124f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1250:	3c 31                	cmp    al,0x31
    1252:	2c 20                	sub    al,0x20
    1254:	31 30                	xor    DWORD PTR [rax],esi
    1256:	30 30                	xor    BYTE PTR [rax],dh
    1258:	30 30                	xor    BYTE PTR [rax],dh
    125a:	30 3e                	xor    BYTE PTR [rsi],bh
    125c:	20 3e                	and    BYTE PTR [rsi],bh
    125e:	20 3e                	and    BYTE PTR [rsi],bh
    1260:	00 65 6c             	add    BYTE PTR [rbp+0x6c],ah
    1263:	66 5f                	pop    di
    1265:	66 69 6c 65 73 00 5f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x5f00
    126c:	5f                   	pop    rdi
    126d:	77 63                	ja     12d2 <__do_global_dtors_aux+0x22>
    126f:	68 00 77 63 73       	push   0x73637700
    1274:	72 63                	jb     12d9 <__do_global_dtors_aux+0x29>
    1276:	68 72 00 6d 6f       	push   0x6f6d0072
    127b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    127c:	5f                   	pop    rdi
    127d:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    1282:	61                   	(bad)
    1283:	6c                   	ins    BYTE PTR es:[rdi],dx
    1284:	5f                   	pop    rdi
    1285:	70 6f                	jo     12f6 <frame_dummy+0x6>
    1287:	69 6e 74 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535a5f00
    128e:	74 35                	je     12c5 <__do_global_dtors_aux+0x15>
    1290:	68 79 70 6f 74       	push   0x746f7079
    1295:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    129a:	4e 53                	rex.WRX push rbx
    129c:	74 36                	je     12d4 <__do_global_dtors_aux+0x24>
    129e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    12a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12a4:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    12a8:	61                   	(bad)
    12a9:	74 69                	je     1314 <_Z16buildStringArrayPcj+0x14>
    12ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ad:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12af:	53                   	push   rbx
    12b0:	74 35                	je     12e7 <__do_global_dtors_aux+0x37>
    12b2:	72 61                	jb     1315 <_Z16buildStringArrayPcj+0x15>
    12b4:	74 69                	je     131f <_Z16buildStringArrayPcj+0x1f>
    12b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12b7:	49                   	rex.WB
    12b8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12ba:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    12be:	31 30                	xor    DWORD PTR [rax],esi
    12c0:	30 30                	xor    BYTE PTR [rax],dh
    12c2:	30 30                	xor    BYTE PTR [rax],dh
    12c4:	30 30                	xor    BYTE PTR [rax],dh
    12c6:	30 30                	xor    BYTE PTR [rax],dh
    12c8:	45                   	rex.RB
    12c9:	45                   	rex.RB
    12ca:	45                   	rex.RB
    12cb:	44 34 45             	rex.R xor al,0x45
    12ce:	76 00                	jbe    12d0 <__do_global_dtors_aux+0x20>
    12d0:	5f                   	pop    rdi
    12d1:	5a                   	pop    rdx
    12d2:	4e 53                	rex.WRX push rbx
    12d4:	74 36                	je     130c <_Z16buildStringArrayPcj+0xc>
    12d6:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    12d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12da:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12dc:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    12e0:	61                   	(bad)
    12e1:	74 69                	je     134c <_Z16buildStringArrayPcj+0x4c>
    12e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12e5:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    12e7:	53                   	push   rbx
    12e8:	74 35                	je     131f <_Z16buildStringArrayPcj+0x1f>
    12ea:	72 61                	jb     134d <_Z16buildStringArrayPcj+0x4d>
    12ec:	74 69                	je     1357 <_Z16buildStringArrayPcj+0x57>
    12ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12ef:	49                   	rex.WB
    12f0:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    12f2:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    12f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    12f6:	31 30                	xor    DWORD PTR [rax],esi
    12f8:	30 30                	xor    BYTE PTR [rax],dh
    12fa:	30 30                	xor    BYTE PTR [rax],dh
    12fc:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    12ff:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    1301:	6d                   	ins    DWORD PTR es:[rdi],dx
    1302:	45 69 00 74 6d 5f 69 	imul   r8d,DWORD PTR [r8],0x695f6d74
    1309:	73 64                	jae    136f <_Z16buildStringArrayPcj+0x6f>
    130b:	73 74                	jae    1381 <_Z16buildStringArrayPcj+0x81>
    130d:	00 76 77             	add    BYTE PTR [rsi+0x77],dh
    1310:	70 72                	jo     1384 <_Z16buildStringArrayPcj+0x84>
    1312:	69 6e 74 66 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f5f0066
    1319:	66 70 72             	data16 jo 138e <_Z16buildStringArrayPcj+0x8e>
    131c:	69 6e 74 66 5f 63 68 	imul   ebp,DWORD PTR [rsi+0x74],0x68635f66
    1323:	6b 00 63             	imul   eax,DWORD PTR [rax],0x63
    1326:	68 72 6f 6e 6f       	push   0x6f6e6f72
    132b:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
    132f:	74 00                	je     1331 <_Z16buildStringArrayPcj+0x31>
    1331:	5f                   	pop    rdi
    1332:	49                   	rex.WB
    1333:	4f 5f                	rex.WRXB pop r15
    1335:	6d                   	ins    DWORD PTR es:[rdi],dx
    1336:	61                   	(bad)
    1337:	72 6b                	jb     13a4 <_Z16buildStringArrayPcj+0xa4>
    1339:	65 72 00             	gs jb  133c <_Z16buildStringArrayPcj+0x3c>
    133c:	69 6e 74 5f 6e 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f6e5f
    1343:	73 5f                	jae    13a4 <_Z16buildStringArrayPcj+0xa4>
    1345:	70 72                	jo     13b9 <_Z16buildStringArrayPcj+0xb9>
    1347:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    134b:	65 73 00             	gs jae 134e <_Z16buildStringArrayPcj+0x4e>
    134e:	77 63                	ja     13b3 <_Z16buildStringArrayPcj+0xb3>
    1350:	73 63                	jae    13b5 <_Z16buildStringArrayPcj+0xb5>
    1352:	68 72 00 74 79       	push   0x79740072
    1357:	70 65                	jo     13be <_Z16buildStringArrayPcj+0xbe>
    1359:	00 46 69             	add    BYTE PTR [rsi+0x69],al
    135c:	6c                   	ins    BYTE PTR es:[rdi],dx
    135d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    135f:	61                   	(bad)
    1360:	6d                   	ins    DWORD PTR es:[rdi],dx
    1361:	65 73 00             	gs jae 1364 <_Z16buildStringArrayPcj+0x64>
    1364:	5f                   	pop    rdi
    1365:	5a                   	pop    rdx
    1366:	53                   	push   rbx
    1367:	74 34                	je     139d <_Z16buildStringArrayPcj+0x9d>
    1369:	66 64 69 6d 65 65 00 	imul   bp,WORD PTR fs:[rbp+0x65],0x65
    1370:	65 78 65             	gs js  13d8 <_Z16buildStringArrayPcj+0xd8>
    1373:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
    1376:	69 6f 6e 00 5f 5a 53 	imul   ebp,DWORD PTR [rdi+0x6e],0x535a5f00
    137d:	74 35                	je     13b4 <_Z16buildStringArrayPcj+0xb4>
    137f:	68 79 70 6f 74       	push   0x746f7079
    1384:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1389:	4e 53                	rex.WRX push rbx
    138b:	74 35                	je     13c2 <_Z16buildStringArrayPcj+0xc2>
    138d:	72 61                	jb     13f0 <_Z16buildStringArrayPcj+0xf0>
    138f:	74 69                	je     13fa <_Z16buildStringArrayPcj+0xfa>
    1391:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1392:	49                   	rex.WB
    1393:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1395:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1398:	6c                   	ins    BYTE PTR es:[rdi],dx
    1399:	31 30                	xor    DWORD PTR [rax],esi
    139b:	30 30                	xor    BYTE PTR [rax],dh
    139d:	45                   	rex.RB
    139e:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    13a3:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    13a7:	4e                   	rex.WRX
    13a8:	4b 53                	rex.WXB push r11
    13aa:	74 36                	je     13e2 <_Z16buildStringArrayPcj+0xe2>
    13ac:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    13af:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13b2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    13b6:	61                   	(bad)
    13b7:	74 69                	je     1422 <_Z16buildStringArrayPcj+0x122>
    13b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13bb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    13bd:	53                   	push   rbx
    13be:	74 35                	je     13f5 <_Z16buildStringArrayPcj+0xf5>
    13c0:	72 61                	jb     1423 <_Z16buildStringArrayPcj+0x123>
    13c2:	74 69                	je     142d <_Z16buildStringArrayPcj+0x12d>
    13c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13c5:	49                   	rex.WB
    13c6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    13c8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    13cb:	6c                   	ins    BYTE PTR es:[rdi],dx
    13cc:	31 30                	xor    DWORD PTR [rax],esi
    13ce:	30 30                	xor    BYTE PTR [rax],dh
    13d0:	30 30                	xor    BYTE PTR [rax],dh
    13d2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    13d5:	45 70 73             	rex.RB jo 144b <_Z11hashMapCtorPFj8string_tEj+0x1b>
    13d8:	45 76 00             	rex.RB jbe 13db <_Z16buildStringArrayPcj+0xdb>
    13db:	74 65                	je     1442 <_Z11hashMapCtorPFj8string_tEj+0x12>
    13dd:	73 74                	jae    1453 <_Z11hashMapCtorPFj8string_tEj+0x23>
    13df:	53                   	push   rbx
    13e0:	65 61                	gs (bad)
    13e2:	72 63                	jb     1447 <_Z11hashMapCtorPFj8string_tEj+0x17>
    13e4:	68 54 69 6d 65       	push   0x656d6954
    13e9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    13ec:	53                   	push   rbx
    13ed:	74 35                	je     1424 <_Z16buildStringArrayPcj+0x124>
    13ef:	68 79 70 6f 74       	push   0x746f7079
    13f4:	65 65 65 00 5f 5a    	gs gs add BYTE PTR gs:[rdi+0x5a],bl
    13fa:	53                   	push   rbx
    13fb:	74 39                	je     1436 <_Z11hashMapCtorPFj8string_tEj+0x6>
    13fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13fe:	65 61                	gs (bad)
    1400:	72 62                	jb     1464 <_Z11hashMapCtorPFj8string_tEj+0x34>
    1402:	79 69                	jns    146d <_Z11hashMapCtorPFj8string_tEj+0x3d>
    1404:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1405:	74 65                	je     146c <_Z11hashMapCtorPFj8string_tEj+0x3c>
    1407:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    140a:	53                   	push   rbx
    140b:	74 31                	je     143e <_Z11hashMapCtorPFj8string_tEj+0xe>
    140d:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    1410:	6c                   	ins    BYTE PTR es:[rdi],dx
    1411:	65 73 73             	gs jae 1487 <_Z11hashMapCtorPFj8string_tEj+0x57>
    1414:	65 71 75             	gs jno 148c <_Z11hashMapCtorPFj8string_tEj+0x5c>
    1417:	61                   	(bad)
    1418:	6c                   	ins    BYTE PTR es:[rdi],dx
    1419:	64 64 00 5f 5a       	fs add BYTE PTR fs:[rdi+0x5a],bl
    141e:	53                   	push   rbx
    141f:	74 34                	je     1455 <_Z11hashMapCtorPFj8string_tEj+0x25>
    1421:	66 61                	data16 (bad)
    1423:	62 73 66 00 64       	(bad)
    1428:	75 72                	jne    149c <_Z11hashMapCtorPFj8string_tEj+0x6c>
    142a:	61                   	(bad)
    142b:	74 69                	je     1496 <_Z11hashMapCtorPFj8string_tEj+0x66>
    142d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    142e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    142f:	3c 6c                	cmp    al,0x6c
    1431:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1432:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1433:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1437:	74 2c                	je     1465 <_Z11hashMapCtorPFj8string_tEj+0x35>
    1439:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    143c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    143f:	72 61                	jb     14a2 <_Z11hashMapCtorPFj8string_tEj+0x72>
    1441:	74 69                	je     14ac <_Z11hashMapCtorPFj8string_tEj+0x7c>
    1443:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1444:	3c 31                	cmp    al,0x31
    1446:	2c 20                	sub    al,0x20
    1448:	31 30                	xor    DWORD PTR [rax],esi
    144a:	30 30                	xor    BYTE PTR [rax],dh
    144c:	30 30                	xor    BYTE PTR [rax],dh
    144e:	30 3e                	xor    BYTE PTR [rsi],bh
    1450:	20 3e                	and    BYTE PTR [rsi],bh
    1452:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    1455:	61                   	(bad)
    1456:	72 62                	jb     14ba <_Z11hashMapCtorPFj8string_tEj+0x8a>
    1458:	79 69                	jns    14c3 <_Z11hashMapCtorPFj8string_tEj+0x93>
    145a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    145b:	74 00                	je     145d <_Z11hashMapCtorPFj8string_tEj+0x2d>
    145d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    145e:	70 65                	jo     14c5 <_Z11hashMapCtorPFj8string_tEj+0x95>
    1460:	72 61                	jb     14c3 <_Z11hashMapCtorPFj8string_tEj+0x93>
    1462:	74 6f                	je     14d3 <_Z11hashMapCtorPFj8string_tEj+0xa3>
    1464:	72 2b                	jb     1491 <_Z11hashMapCtorPFj8string_tEj+0x61>
    1466:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1469:	53                   	push   rbx
    146a:	74 34                	je     14a0 <_Z11hashMapCtorPFj8string_tEj+0x70>
    146c:	61                   	(bad)
    146d:	74 61                	je     14d0 <_Z11hashMapCtorPFj8string_tEj+0xa0>
    146f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1470:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1474:	53                   	push   rbx
    1475:	74 34                	je     14ab <_Z11hashMapCtorPFj8string_tEj+0x7b>
    1477:	61                   	(bad)
    1478:	74 61                	je     14db <_Z11hashMapCtorPFj8string_tEj+0xab>
    147a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    147b:	66 00 5f 49          	data16 add BYTE PTR [rdi+0x49],bl
    147f:	4f 5f                	rex.WRXB pop r15
    1481:	46                   	rex.RX
    1482:	49                   	rex.WB
    1483:	4c                   	rex.WR
    1484:	45 00 6d 6f          	add    BYTE PTR [r13+0x6f],r13b
    1488:	64 66 00 5f 5a       	data16 add BYTE PTR fs:[rdi+0x5a],bl
    148d:	53                   	push   rbx
    148e:	74 31                	je     14c1 <_Z11hashMapCtorPFj8string_tEj+0x91>
    1490:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    1493:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    1497:	73 69                	jae    1502 <_Z17hashMapAddElementP7HashMap8string_t+0x22>
    1499:	66 79 64             	data16 jns 1500 <_Z17hashMapAddElementP7HashMap8string_t+0x20>
    149c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    149f:	53                   	push   rbx
    14a0:	74 31                	je     14d3 <_Z11hashMapCtorPFj8string_tEj+0xa3>
    14a2:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    14a5:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    14a9:	73 69                	jae    1514 <_Z17hashMapAddElementP7HashMap8string_t+0x34>
    14ab:	66 79 65             	data16 jns 1513 <_Z17hashMapAddElementP7HashMap8string_t+0x33>
    14ae:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14b1:	53                   	push   rbx
    14b2:	74 31                	je     14e5 <_Z17hashMapAddElementP7HashMap8string_t+0x5>
    14b4:	30 66 70             	xor    BYTE PTR [rsi+0x70],ah
    14b7:	63 6c 61 73          	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
    14bb:	73 69                	jae    1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14bd:	66 79 66             	data16 jns 1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14c0:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    14c3:	6d                   	ins    DWORD PTR es:[rdi],dx
    14c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14c5:	76 65                	jbe    152c <_Z17hashMapAddElementP7HashMap8string_t+0x4c>
    14c7:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    14ca:	4f 5f                	rex.WRXB pop r15
    14cc:	77 69                	ja     1537 <_Z17hashMapAddElementP7HashMap8string_t+0x57>
    14ce:	64 65 5f             	fs gs pop rdi
    14d1:	64 61                	fs (bad)
    14d3:	74 61                	je     1536 <_Z17hashMapAddElementP7HashMap8string_t+0x56>
    14d5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    14d8:	53                   	push   rbx
    14d9:	74 34                	je     150f <_Z17hashMapAddElementP7HashMap8string_t+0x2f>
    14db:	66 64 69 6d 66 66 00 	imul   bp,WORD PTR fs:[rbp+0x66],0x66
    14e2:	5f                   	pop    rdi
    14e3:	5a                   	pop    rdx
    14e4:	53                   	push   rbx
    14e5:	74 34                	je     151b <_Z17hashMapAddElementP7HashMap8string_t+0x3b>
    14e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    14e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14e9:	67 32 65 00          	xor    ah,BYTE PTR [ebp+0x0]
    14ed:	5f                   	pop    rdi
    14ee:	5a                   	pop    rdx
    14ef:	53                   	push   rbx
    14f0:	74 34                	je     1526 <_Z17hashMapAddElementP7HashMap8string_t+0x46>
    14f2:	6c                   	ins    BYTE PTR es:[rdi],dx
    14f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14f4:	67 32 66 00          	xor    ah,BYTE PTR [esi+0x0]
    14f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    14f9:	70 65                	jo     1560 <_Z17hashMapAddElementP7HashMap8string_t+0x80>
    14fb:	72 61                	jb     155e <_Z17hashMapAddElementP7HashMap8string_t+0x7e>
    14fd:	74 6f                	je     156e <_Z17hashMapAddElementP7HashMap8string_t+0x8e>
    14ff:	72 3d                	jb     153e <_Z17hashMapAddElementP7HashMap8string_t+0x5e>
    1501:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    1504:	65 74 77             	gs je  157e <_Z17hashMapAddElementP7HashMap8string_t+0x9e>
    1507:	63 00                	movsxd eax,DWORD PTR [rax]
    1509:	69 73 69 6e 66 00 66 	imul   esi,DWORD PTR [rbx+0x69],0x6600666e
    1510:	70 63                	jo     1575 <_Z17hashMapAddElementP7HashMap8string_t+0x95>
    1512:	6c                   	ins    BYTE PTR es:[rdi],dx
    1513:	61                   	(bad)
    1514:	73 73                	jae    1589 <_Z17hashMapAddElementP7HashMap8string_t+0xa9>
    1516:	69 66 79 00 67 65 74 	imul   esp,DWORD PTR [rsi+0x79],0x74656700
    151d:	77 63                	ja     1582 <_Z17hashMapAddElementP7HashMap8string_t+0xa2>
    151f:	68 61 72 00 5f       	push   0x5f007261
    1524:	5a                   	pop    rdx
    1525:	53                   	push   rbx
    1526:	74 34                	je     155c <_Z17hashMapAddElementP7HashMap8string_t+0x7c>
    1528:	65 72 66             	gs jb  1591 <_Z17hashMapAddElementP7HashMap8string_t+0xb1>
    152b:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    152e:	5f                   	pop    rdi
    152f:	5a                   	pop    rdx
    1530:	53                   	push   rbx
    1531:	74 34                	je     1567 <_Z17hashMapAddElementP7HashMap8string_t+0x87>
    1533:	65 72 66             	gs jb  159c <_Z17hashMapAddElementP7HashMap8string_t+0xbc>
    1536:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    1539:	66 67 65 74 77       	data16 addr32 gs je 15b5 <_Z17hashMapAddElementP7HashMap8string_t+0xd5>
    153e:	73 00                	jae    1540 <_Z17hashMapAddElementP7HashMap8string_t+0x60>
    1540:	5f                   	pop    rdi
    1541:	5f                   	pop    rdi
    1542:	75 69                	jne    15ad <_Z17hashMapAddElementP7HashMap8string_t+0xcd>
    1544:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1545:	74 5f                	je     15a6 <_Z17hashMapAddElementP7HashMap8string_t+0xc6>
    1547:	6c                   	ins    BYTE PTR es:[rdi],dx
    1548:	65 61                	gs (bad)
    154a:	73 74                	jae    15c0 <_Z17hashMapAddElementP7HashMap8string_t+0xe0>
    154c:	31 36                	xor    DWORD PTR [rsi],esi
    154e:	5f                   	pop    rdi
    154f:	74 00                	je     1551 <_Z17hashMapAddElementP7HashMap8string_t+0x71>
    1551:	5f                   	pop    rdi
    1552:	5a                   	pop    rdx
    1553:	4e 53                	rex.WRX push rbx
    1555:	74 35                	je     158c <_Z17hashMapAddElementP7HashMap8string_t+0xac>
    1557:	72 61                	jb     15ba <_Z17hashMapAddElementP7HashMap8string_t+0xda>
    1559:	74 69                	je     15c4 <_Z17hashMapAddElementP7HashMap8string_t+0xe4>
    155b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    155c:	49                   	rex.WB
    155d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    155f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1562:	6c                   	ins    BYTE PTR es:[rdi],dx
    1563:	31 30                	xor    DWORD PTR [rax],esi
    1565:	30 30                	xor    BYTE PTR [rax],dh
    1567:	30 30                	xor    BYTE PTR [rax],dh
    1569:	30 30                	xor    BYTE PTR [rax],dh
    156b:	30 30                	xor    BYTE PTR [rax],dh
    156d:	45                   	rex.RB
    156e:	45 33 64 65 6e       	xor    r12d,DWORD PTR [r13+riz*2+0x6e]
    1573:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1577:	53                   	push   rbx
    1578:	74 34                	je     15ae <_Z17hashMapAddElementP7HashMap8string_t+0xce>
    157a:	6d                   	ins    DWORD PTR es:[rdi],dx
    157b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    157c:	64 66 65 50          	fs gs push ax
    1580:	65 00 66 63          	add    BYTE PTR gs:[rsi+0x63],ah
    1584:	6c                   	ins    BYTE PTR es:[rdi],dx
    1585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1586:	73 65                	jae    15ed <_Z17hashMapAddElementP7HashMap8string_t+0x10d>
    1588:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    158b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    158d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1590:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    1593:	70 79                	jo     160e <_Z17hashMapAddElementP7HashMap8string_t+0x12e>
    1595:	73 69                	jae    1600 <_Z17hashMapAddElementP7HashMap8string_t+0x120>
    1597:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1599:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    159c:	53                   	push   rbx
    159d:	74 33                	je     15d2 <_Z17hashMapAddElementP7HashMap8string_t+0xf2>
    159f:	74 61                	je     1602 <_Z17hashMapAddElementP7HashMap8string_t+0x122>
    15a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15a2:	66 00 5f 6d          	data16 add BYTE PTR [rdi+0x6d],bl
    15a6:	6d                   	ins    DWORD PTR es:[rdi],dx
    15a7:	5f                   	pop    rdi
    15a8:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    15ab:	33 32                	xor    esi,DWORD PTR [rdx]
    15ad:	5f                   	pop    rdi
    15ae:	66 69 6c 65 73 00 69 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6900
    15b5:	73 6c                	jae    1623 <_Z17hashMapAddElementP7HashMap8string_t+0x143>
    15b7:	65 73 73             	gs jae 162d <_Z17hashMapAddElementP7HashMap8string_t+0x14d>
    15ba:	65 71 75             	gs jno 1632 <_Z17hashMapAddElementP7HashMap8string_t+0x152>
    15bd:	61                   	(bad)
    15be:	6c                   	ins    BYTE PTR es:[rdi],dx
    15bf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    15c2:	53                   	push   rbx
    15c3:	74 38                	je     15fd <_Z17hashMapAddElementP7HashMap8string_t+0x11d>
    15c5:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15cc:	6c                   	ins    BYTE PTR es:[rdi],dx
    15cd:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    15d1:	53                   	push   rbx
    15d2:	74 38                	je     160c <_Z17hashMapAddElementP7HashMap8string_t+0x12c>
    15d4:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15db:	6c                   	ins    BYTE PTR es:[rdi],dx
    15dc:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    15e0:	53                   	push   rbx
    15e1:	74 38                	je     161b <_Z17hashMapAddElementP7HashMap8string_t+0x13b>
    15e3:	69 73 6e 6f 72 6d 61 	imul   esi,DWORD PTR [rbx+0x6e],0x616d726f
    15ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    15eb:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    15ef:	4e 53                	rex.WRX push rbx
    15f1:	74 36                	je     1629 <_Z17hashMapAddElementP7HashMap8string_t+0x149>
    15f3:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    15f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    15f8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15f9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    15fd:	61                   	(bad)
    15fe:	74 69                	je     1669 <_Z17hashMapAddElementP7HashMap8string_t+0x189>
    1600:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1601:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1602:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1604:	53                   	push   rbx
    1605:	74 35                	je     163c <_Z17hashMapAddElementP7HashMap8string_t+0x15c>
    1607:	72 61                	jb     166a <_Z17hashMapAddElementP7HashMap8string_t+0x18a>
    1609:	74 69                	je     1674 <_Z17hashMapAddElementP7HashMap8string_t+0x194>
    160b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    160c:	49                   	rex.WB
    160d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    160f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1612:	6c                   	ins    BYTE PTR es:[rdi],dx
    1613:	31 30                	xor    DWORD PTR [rax],esi
    1615:	30 30                	xor    BYTE PTR [rax],dh
    1617:	30 30                	xor    BYTE PTR [rax],dh
    1619:	30 30                	xor    BYTE PTR [rax],dh
    161b:	30 30                	xor    BYTE PTR [rax],dh
    161d:	45                   	rex.RB
    161e:	45                   	rex.RB
    161f:	45 34 7a             	rex.RB xor al,0x7a
    1622:	65 72 6f             	gs jb  1694 <_Z17hashMapAddElementP7HashMap8string_t+0x1b4>
    1625:	45 76 00             	rex.RB jbe 1628 <_Z17hashMapAddElementP7HashMap8string_t+0x148>
    1628:	73 74                	jae    169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    162a:	61                   	(bad)
    162b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    162c:	64 61                	fs (bad)
    162e:	72 74                	jb     16a4 <_Z17hashMapAddElementP7HashMap8string_t+0x1c4>
    1630:	5f                   	pop    rdi
    1631:	64 65 76 69          	fs gs jbe 169e <_Z17hashMapAddElementP7HashMap8string_t+0x1be>
    1635:	61                   	(bad)
    1636:	74 69                	je     16a1 <_Z17hashMapAddElementP7HashMap8string_t+0x1c1>
    1638:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1639:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    163a:	00 66 6d             	add    BYTE PTR [rsi+0x6d],ah
    163d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    163e:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    1642:	73 63                	jae    16a7 <_Z17hashMapAddElementP7HashMap8string_t+0x1c7>
    1644:	6d                   	ins    DWORD PTR es:[rdi],dx
    1645:	70 00                	jo     1647 <_Z17hashMapAddElementP7HashMap8string_t+0x167>
    1647:	5f                   	pop    rdi
    1648:	5f                   	pop    rdi
    1649:	72 65                	jb     16b0 <_Z17hashMapAddElementP7HashMap8string_t+0x1d0>
    164b:	70 00                	jo     164d <_Z17hashMapAddElementP7HashMap8string_t+0x16d>
    164d:	77 63                	ja     16b2 <_Z17hashMapAddElementP7HashMap8string_t+0x1d2>
    164f:	73 70                	jae    16c1 <_Z17hashMapAddElementP7HashMap8string_t+0x1e1>
    1651:	62 72 6b 00 5f       	(bad)
    1656:	5a                   	pop    rdx
    1657:	4e 53                	rex.WRX push rbx
    1659:	74 36                	je     1691 <_Z17hashMapAddElementP7HashMap8string_t+0x1b1>
    165b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    165e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    165f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1660:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1661:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1665:	61                   	(bad)
    1666:	74 69                	je     16d1 <_Z17hashMapAddElementP7HashMap8string_t+0x1f1>
    1668:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1669:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    166a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    166c:	53                   	push   rbx
    166d:	74 35                	je     16a4 <_Z17hashMapAddElementP7HashMap8string_t+0x1c4>
    166f:	72 61                	jb     16d2 <_Z17hashMapAddElementP7HashMap8string_t+0x1f2>
    1671:	74 69                	je     16dc <_Z17hashMapAddElementP7HashMap8string_t+0x1fc>
    1673:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1674:	49                   	rex.WB
    1675:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1677:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    167a:	6c                   	ins    BYTE PTR es:[rdi],dx
    167b:	31 30                	xor    DWORD PTR [rax],esi
    167d:	30 30                	xor    BYTE PTR [rax],dh
    167f:	30 30                	xor    BYTE PTR [rax],dh
    1681:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1684:	45                   	rex.RB
    1685:	43 32 49 6c          	rex.XB xor cl,BYTE PTR [r9+0x6c]
    1689:	76 45                	jbe    16d0 <_Z17hashMapAddElementP7HashMap8string_t+0x1f0>
    168b:	45 52                	rex.RB push r10
    168d:	4b 54                	rex.WXB push r12
    168f:	5f                   	pop    rdi
    1690:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1693:	53                   	push   rbx
    1694:	74 36                	je     16cc <_Z17hashMapAddElementP7HashMap8string_t+0x1ec>
    1696:	72 65                	jb     16fd <_Z17hashMapAddElementP7HashMap8string_t+0x21d>
    1698:	6d                   	ins    DWORD PTR es:[rdi],dx
    1699:	71 75                	jno    1710 <_Z17hashMapAddElementP7HashMap8string_t+0x230>
    169b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    169c:	65 65 50             	gs gs push rax
    169f:	69 00 5f 5a 4e 53    	imul   eax,DWORD PTR [rax],0x534e5a5f
    16a5:	74 36                	je     16dd <_Z17hashMapAddElementP7HashMap8string_t+0x1fd>
    16a7:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    16aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ad:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    16b1:	61                   	(bad)
    16b2:	74 69                	je     171d <_Z17hashMapAddElementP7HashMap8string_t+0x23d>
    16b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16b6:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    16b8:	53                   	push   rbx
    16b9:	74 35                	je     16f0 <_Z17hashMapAddElementP7HashMap8string_t+0x210>
    16bb:	72 61                	jb     171e <_Z17hashMapAddElementP7HashMap8string_t+0x23e>
    16bd:	74 69                	je     1728 <_Z17hashMapAddElementP7HashMap8string_t+0x248>
    16bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16c0:	49                   	rex.WB
    16c1:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    16c3:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    16c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    16c7:	31 30                	xor    DWORD PTR [rax],esi
    16c9:	30 30                	xor    BYTE PTR [rax],dh
    16cb:	30 30                	xor    BYTE PTR [rax],dh
    16cd:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    16d0:	45 70 70             	rex.RB jo 1743 <_Z17hashMapAddElementP7HashMap8string_t+0x263>
    16d3:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    16da:	39 6e 65             	cmp    DWORD PTR [rsi+0x65],ebp
    16dd:	61                   	(bad)
    16de:	72 62                	jb     1742 <_Z17hashMapAddElementP7HashMap8string_t+0x262>
    16e0:	79 69                	jns    174b <_Z17hashMapAddElementP7HashMap8string_t+0x26b>
    16e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16e3:	74 66                	je     174b <_Z17hashMapAddElementP7HashMap8string_t+0x26b>
    16e5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    16e8:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    16ef:	77 73                	ja     1764 <_Z17hashMapAddElementP7HashMap8string_t+0x284>
    16f1:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    16f4:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    16f8:	4e                   	rex.WRX
    16f9:	4b 53                	rex.WXB push r11
    16fb:	74 36                	je     1733 <_Z17hashMapAddElementP7HashMap8string_t+0x253>
    16fd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1700:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1701:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1702:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1703:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1707:	61                   	(bad)
    1708:	74 69                	je     1773 <_Z17hashMapAddElementP7HashMap8string_t+0x293>
    170a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    170b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    170c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    170e:	53                   	push   rbx
    170f:	74 35                	je     1746 <_Z17hashMapAddElementP7HashMap8string_t+0x266>
    1711:	72 61                	jb     1774 <_Z17hashMapAddElementP7HashMap8string_t+0x294>
    1713:	74 69                	je     177e <_Z17hashMapAddElementP7HashMap8string_t+0x29e>
    1715:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1716:	49                   	rex.WB
    1717:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1719:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    171c:	6c                   	ins    BYTE PTR es:[rdi],dx
    171d:	31 30                	xor    DWORD PTR [rax],esi
    171f:	30 30                	xor    BYTE PTR [rax],dh
    1721:	30 30                	xor    BYTE PTR [rax],dh
    1723:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1726:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    172c:	74 45                	je     1773 <_Z17hashMapAddElementP7HashMap8string_t+0x293>
    172e:	76 00                	jbe    1730 <_Z17hashMapAddElementP7HashMap8string_t+0x250>
    1730:	67 70 5f             	addr32 jo 1792 <_Z17hashMapPopElementP7HashMap8string_t+0x2>
    1733:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1734:	66 66 73 65          	data16 data16 jae 179d <_Z17hashMapPopElementP7HashMap8string_t+0xd>
    1738:	74 00                	je     173a <_Z17hashMapAddElementP7HashMap8string_t+0x25a>
    173a:	5f                   	pop    rdi
    173b:	5f                   	pop    rdi
    173c:	72 68                	jb     17a6 <_Z17hashMapPopElementP7HashMap8string_t+0x16>
    173e:	73 00                	jae    1740 <_Z17hashMapAddElementP7HashMap8string_t+0x260>
    1740:	77 63                	ja     17a5 <_Z17hashMapPopElementP7HashMap8string_t+0x15>
    1742:	73 6e                	jae    17b2 <_Z17hashMapPopElementP7HashMap8string_t+0x22>
    1744:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1747:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    174a:	53                   	push   rbx
    174b:	74 34                	je     1781 <_Z17hashMapAddElementP7HashMap8string_t+0x2a1>
    174d:	73 69                	jae    17b8 <_Z17hashMapPopElementP7HashMap8string_t+0x28>
    174f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1750:	68 66 00 5f 49       	push   0x495f0066
    1755:	4f 5f                	rex.WRXB pop r15
    1757:	6c                   	ins    BYTE PTR es:[rdi],dx
    1758:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1759:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    175c:	74 00                	je     175e <_Z17hashMapAddElementP7HashMap8string_t+0x27e>
    175e:	5f                   	pop    rdi
    175f:	5f                   	pop    rdi
    1760:	75 69                	jne    17cb <_Z17hashMapPopElementP7HashMap8string_t+0x3b>
    1762:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1763:	74 31                	je     1796 <_Z17hashMapPopElementP7HashMap8string_t+0x6>
    1765:	36 5f                	ss pop rdi
    1767:	74 00                	je     1769 <_Z17hashMapAddElementP7HashMap8string_t+0x289>
    1769:	77 6d                	ja     17d8 <_Z17hashMapPopElementP7HashMap8string_t+0x48>
    176b:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    176d:	6d                   	ins    DWORD PTR es:[rdi],dx
    176e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    176f:	76 65                	jbe    17d6 <_Z17hashMapPopElementP7HashMap8string_t+0x46>
    1771:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1774:	53                   	push   rbx
    1775:	74 36                	je     17ad <_Z17hashMapPopElementP7HashMap8string_t+0x1d>
    1777:	6c                   	ins    BYTE PTR es:[rdi],dx
    1778:	72 6f                	jb     17e9 <_Z17hashMapPopElementP7HashMap8string_t+0x59>
    177a:	75 6e                	jne    17ea <_Z17hashMapPopElementP7HashMap8string_t+0x5a>
    177c:	64 66 00 6c 6f 67    	data16 add BYTE PTR fs:[rdi+rbp*2+0x67],ch
    1782:	31 30                	xor    DWORD PTR [rax],esi
    1784:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1787:	4e 53                	rex.WRX push rbx
    1789:	74 36                	je     17c1 <_Z17hashMapPopElementP7HashMap8string_t+0x31>
    178b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    178e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    178f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1790:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1791:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1794:	32 31                	xor    dh,BYTE PTR [rcx]
    1796:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1799:	65 61                	gs (bad)
    179b:	64 79 5f             	fs jns 17fd <_Z17hashMapPopElementP7HashMap8string_t+0x6d>
    179e:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    17a2:	6b 39 69             	imul   edi,DWORD PTR [rcx],0x69
    17a5:	73 5f                	jae    1806 <_Z17hashMapPopElementP7HashMap8string_t+0x76>
    17a7:	73 74                	jae    181d <_Z17hashMapPopElementP7HashMap8string_t+0x8d>
    17a9:	65 61                	gs (bad)
    17ab:	64 79 45             	fs jns 17f3 <_Z17hashMapPopElementP7HashMap8string_t+0x63>
    17ae:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    17b1:	4e 53                	rex.WRX push rbx
    17b3:	74 36                	je     17eb <_Z17hashMapPopElementP7HashMap8string_t+0x5b>
    17b5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    17b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17bb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    17bf:	61                   	(bad)
    17c0:	74 69                	je     182b <_Z17hashMapPopElementP7HashMap8string_t+0x9b>
    17c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17c4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    17c6:	53                   	push   rbx
    17c7:	74 35                	je     17fe <_Z17hashMapPopElementP7HashMap8string_t+0x6e>
    17c9:	72 61                	jb     182c <_Z17hashMapPopElementP7HashMap8string_t+0x9c>
    17cb:	74 69                	je     1836 <_Z17hashMapPopElementP7HashMap8string_t+0xa6>
    17cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    17ce:	49                   	rex.WB
    17cf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    17d1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    17d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    17d5:	31 30                	xor    DWORD PTR [rax],esi
    17d7:	30 30                	xor    BYTE PTR [rax],dh
    17d9:	30 30                	xor    BYTE PTR [rax],dh
    17db:	30 30                	xor    BYTE PTR [rax],dh
    17dd:	30 30                	xor    BYTE PTR [rax],dh
    17df:	45                   	rex.RB
    17e0:	45                   	rex.RB
    17e1:	45                   	rex.RB
    17e2:	43 34 45             	rex.XB xor al,0x45
    17e5:	76 00                	jbe    17e7 <_Z17hashMapPopElementP7HashMap8string_t+0x57>
    17e7:	5f                   	pop    rdi
    17e8:	6d                   	ins    DWORD PTR es:[rdi],dx
    17e9:	6d                   	ins    DWORD PTR es:[rdi],dx
    17ea:	5f                   	pop    rdi
    17eb:	63 72 63             	movsxd esi,DWORD PTR [rdx+0x63]
    17ee:	33 32                	xor    esi,DWORD PTR [rdx]
    17f0:	55                   	push   rbp
    17f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17f2:	72 6f                	jb     1863 <_Z20hashMapSearchElementP7HashMap8string_t+0x3>
    17f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    17f6:	5f                   	pop    rdi
    17f7:	66 69 6c 65 73 00 77 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7700
    17fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    17ff:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1801:	73 65                	jae    1868 <_Z20hashMapSearchElementP7HashMap8string_t+0x8>
    1803:	74 00                	je     1805 <_Z17hashMapPopElementP7HashMap8string_t+0x75>
    1805:	74 6d                	je     1874 <_Z20hashMapSearchElementP7HashMap8string_t+0x14>
    1807:	5f                   	pop    rdi
    1808:	6d                   	ins    DWORD PTR es:[rdi],dx
    1809:	69 6e 00 5f 5a 53 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74535a5f
    1810:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    1813:	70 79                	jo     188e <_Z20hashMapSearchElementP7HashMap8string_t+0x2e>
    1815:	73 69                	jae    1880 <_Z20hashMapSearchElementP7HashMap8string_t+0x20>
    1817:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1819:	65 65 00 5f 49       	gs add BYTE PTR gs:[rdi+0x49],bl
    181e:	4f 5f                	rex.WRXB pop r15
    1820:	72 65                	jb     1887 <_Z20hashMapSearchElementP7HashMap8string_t+0x27>
    1822:	61                   	(bad)
    1823:	64 5f                	fs pop rdi
    1825:	70 74                	jo     189b <_Z20hashMapSearchElementP7HashMap8string_t+0x3b>
    1827:	72 00                	jb     1829 <_Z17hashMapPopElementP7HashMap8string_t+0x99>
    1829:	5f                   	pop    rdi
    182a:	5a                   	pop    rdx
    182b:	53                   	push   rbx
    182c:	74 38                	je     1866 <_Z20hashMapSearchElementP7HashMap8string_t+0x6>
    182e:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1831:	79 73                	jns    18a6 <_Z20hashMapSearchElementP7HashMap8string_t+0x46>
    1833:	69 67 6e 66 66 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f006666
    183a:	5a                   	pop    rdx
    183b:	53                   	push   rbx
    183c:	74 35                	je     1873 <_Z20hashMapSearchElementP7HashMap8string_t+0x13>
    183e:	69 73 69 6e 66 66 00 	imul   esi,DWORD PTR [rbx+0x69],0x66666e
    1845:	6d                   	ins    DWORD PTR es:[rdi],dx
    1846:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1847:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1848:	5f                   	pop    rdi
    1849:	74 68                	je     18b3 <_Z20hashMapSearchElementP7HashMap8string_t+0x53>
    184b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    184c:	75 73                	jne    18c1 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    184e:	61                   	(bad)
    184f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1850:	64 73 5f             	fs jae 18b2 <_Z20hashMapSearchElementP7HashMap8string_t+0x52>
    1853:	73 65                	jae    18ba <_Z20hashMapSearchElementP7HashMap8string_t+0x5a>
    1855:	70 00                	jo     1857 <_Z17hashMapPopElementP7HashMap8string_t+0xc7>
    1857:	69 73 6c 65 73 73 67 	imul   esi,DWORD PTR [rbx+0x6c],0x67737365
    185e:	72 65                	jb     18c5 <_Z20hashMapSearchElementP7HashMap8string_t+0x65>
    1860:	61                   	(bad)
    1861:	74 65                	je     18c8 <_Z20hashMapSearchElementP7HashMap8string_t+0x68>
    1863:	72 00                	jb     1865 <_Z20hashMapSearchElementP7HashMap8string_t+0x5>
    1865:	75 6e                	jne    18d5 <_Z20hashMapSearchElementP7HashMap8string_t+0x75>
    1867:	67 65 74 77          	addr32 gs je 18e2 <_Z20hashMapSearchElementP7HashMap8string_t+0x82>
    186b:	63 00                	movsxd eax,DWORD PTR [rax]
    186d:	66 70 5f             	data16 jo 18cf <_Z20hashMapSearchElementP7HashMap8string_t+0x6f>
    1870:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1871:	66 66 73 65          	data16 data16 jae 18da <_Z20hashMapSearchElementP7HashMap8string_t+0x7a>
    1875:	74 00                	je     1877 <_Z20hashMapSearchElementP7HashMap8string_t+0x17>
    1877:	66 74 65             	data16 je 18df <_Z20hashMapSearchElementP7HashMap8string_t+0x7f>
    187a:	6c                   	ins    BYTE PTR es:[rdi],dx
    187b:	6c                   	ins    BYTE PTR es:[rdi],dx
    187c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    187f:	53                   	push   rbx
    1880:	74 34                	je     18b6 <_Z20hashMapSearchElementP7HashMap8string_t+0x56>
    1882:	61                   	(bad)
    1883:	73 69                	jae    18ee <_Z20hashMapSearchElementP7HashMap8string_t+0x8e>
    1885:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1886:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    188a:	53                   	push   rbx
    188b:	74 34                	je     18c1 <_Z20hashMapSearchElementP7HashMap8string_t+0x61>
    188d:	61                   	(bad)
    188e:	73 69                	jae    18f9 <_Z11hashMapDtorP7HashMap+0x9>
    1890:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1891:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1895:	53                   	push   rbx
    1896:	74 33                	je     18cb <_Z20hashMapSearchElementP7HashMap8string_t+0x6b>
    1898:	66 6d                	ins    WORD PTR es:[rdi],dx
    189a:	61                   	(bad)
    189b:	66 66 66 00 5f 5a    	data16 data16 data16 add BYTE PTR [rdi+0x5a],bl
    18a1:	4e 53                	rex.WRX push rbx
    18a3:	74 36                	je     18db <_Z20hashMapSearchElementP7HashMap8string_t+0x7b>
    18a5:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    18a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18ab:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    18af:	61                   	(bad)
    18b0:	74 69                	je     191b <_Z11hashMapDtorP7HashMap+0x2b>
    18b2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18b4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    18b6:	53                   	push   rbx
    18b7:	74 35                	je     18ee <_Z20hashMapSearchElementP7HashMap8string_t+0x8e>
    18b9:	72 61                	jb     191c <_Z11hashMapDtorP7HashMap+0x2c>
    18bb:	74 69                	je     1926 <_Z11hashMapDtorP7HashMap+0x36>
    18bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    18be:	49                   	rex.WB
    18bf:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    18c1:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    18c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    18c5:	31 30                	xor    DWORD PTR [rax],esi
    18c7:	30 30                	xor    BYTE PTR [rax],dh
    18c9:	30 30                	xor    BYTE PTR [rax],dh
    18cb:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    18ce:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    18d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d1:	45 76 00             	rex.RB jbe 18d4 <_Z20hashMapSearchElementP7HashMap8string_t+0x74>
    18d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d5:	62 72 6c 65 6e       	(bad)
    18da:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    18dd:	65 72 61             	gs jb  1941 <_Z11hashMapDtorP7HashMap+0x51>
    18e0:	74 6f                	je     1951 <_Z11hashMapDtorP7HashMap+0x61>
    18e2:	72 2d                	jb     1911 <_Z11hashMapDtorP7HashMap+0x21>
    18e4:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    18e7:	67 61                	addr32 (bad)
    18e9:	74 69                	je     1954 <_Z11hashMapDtorP7HashMap+0x64>
    18eb:	76 65                	jbe    1952 <_Z11hashMapDtorP7HashMap+0x62>
    18ed:	5f                   	pop    rdi
    18ee:	73 69                	jae    1959 <_Z11hashMapDtorP7HashMap+0x69>
    18f0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    18f2:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    18f6:	31 70 00             	xor    DWORD PTR [rax+0x0],esi
    18f9:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1900:	65 72 00             	gs jb  1903 <_Z11hashMapDtorP7HashMap+0x13>
    1903:	5f                   	pop    rdi
    1904:	52                   	push   rdx
    1905:	65 70 31             	gs jo  1939 <_Z11hashMapDtorP7HashMap+0x49>
    1908:	00 5f 52             	add    BYTE PTR [rdi+0x52],bl
    190b:	65 70 32             	gs jo  1940 <_Z11hashMapDtorP7HashMap+0x50>
    190e:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    1911:	74 5f                	je     1972 <_Z17hashMapDebugPrintP7HashMap+0x12>
    1913:	70 5f                	jo     1974 <_Z17hashMapDebugPrintP7HashMap+0x14>
    1915:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    1918:	70 72                	jo     198c <_Z17hashMapDebugPrintP7HashMap+0x2c>
    191a:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    191e:	65 73 00             	gs jae 1921 <_Z11hashMapDtorP7HashMap+0x31>
    1921:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    1923:	61                   	(bad)
    1924:	70 73                	jo     1999 <_Z17hashMapDebugPrintP7HashMap+0x39>
    1926:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    192b:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    1932:	5f                   	pop    rdi
    1933:	74 6f                	je     19a4 <_Z17hashMapDebugPrintP7HashMap+0x44>
    1935:	5f                   	pop    rdi
    1936:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1939:	72 73                	jb     19ae <_Z17hashMapDebugPrintP7HashMap+0x4e>
    193b:	5f                   	pop    rdi
    193c:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    1943:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1945:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    194a:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1951:	76 73                	jbe    19c6 <_Z17hashMapDebugPrintP7HashMap+0x66>
    1953:	77 73                	ja     19c8 <_Z17hashMapDebugPrintP7HashMap+0x68>
    1955:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1958:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    195c:	53                   	push   rbx
    195d:	74 31                	je     1990 <_Z17hashMapDebugPrintP7HashMap+0x30>
    195f:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1962:	6c                   	ins    BYTE PTR es:[rdi],dx
    1963:	65 73 73             	gs jae 19d9 <_Z17hashMapDebugPrintP7HashMap+0x79>
    1966:	67 72 65             	addr32 jb 19ce <_Z17hashMapDebugPrintP7HashMap+0x6e>
    1969:	61                   	(bad)
    196a:	74 65                	je     19d1 <_Z17hashMapDebugPrintP7HashMap+0x71>
    196c:	72 64                	jb     19d2 <_Z17hashMapDebugPrintP7HashMap+0x72>
    196e:	64 00 5f 6d          	add    BYTE PTR fs:[rdi+0x6d],bl
    1972:	61                   	(bad)
    1973:	72 6b                	jb     19e0 <_Z17hashMapDebugPrintP7HashMap+0x80>
    1975:	65 72 73             	gs jb  19eb <_Z17hashMapDebugPrintP7HashMap+0x8b>
    1978:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    197b:	53                   	push   rbx
    197c:	74 35                	je     19b3 <_Z17hashMapDebugPrintP7HashMap+0x53>
    197e:	65 78 70             	gs js  19f1 <_Z17hashMapDebugPrintP7HashMap+0x91>
    1981:	6d                   	ins    DWORD PTR es:[rdi],dx
    1982:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    1985:	5f                   	pop    rdi
    1986:	5a                   	pop    rdx
    1987:	53                   	push   rbx
    1988:	74 35                	je     19bf <_Z17hashMapDebugPrintP7HashMap+0x5f>
    198a:	65 78 70             	gs js  19fd <_Z17hashMapDebugPrintP7HashMap+0x9d>
    198d:	6d                   	ins    DWORD PTR es:[rdi],dx
    198e:	31 66 00             	xor    DWORD PTR [rsi+0x0],esp
    1991:	74 6d                	je     1a00 <_Z17hashMapDebugPrintP7HashMap+0xa0>
    1993:	5f                   	pop    rdi
    1994:	6d                   	ins    DWORD PTR es:[rdi],dx
    1995:	64 61                	fs (bad)
    1997:	79 00                	jns    1999 <_Z17hashMapDebugPrintP7HashMap+0x39>
    1999:	5f                   	pop    rdi
    199a:	5a                   	pop    rdx
    199b:	53                   	push   rbx
    199c:	74 33                	je     19d1 <_Z17hashMapDebugPrintP7HashMap+0x71>
    199e:	73 69                	jae    1a09 <_Z17hashMapDebugPrintP7HashMap+0xa9>
    19a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19a1:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    19a5:	53                   	push   rbx
    19a6:	74 33                	je     19db <_Z17hashMapDebugPrintP7HashMap+0x7b>
    19a8:	73 69                	jae    1a13 <_Z17hashMapDebugPrintP7HashMap+0xb3>
    19aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19ab:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    19af:	6c                   	ins    BYTE PTR es:[rdi],dx
    19b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19b1:	61                   	(bad)
    19b2:	74 33                	je     19e7 <_Z17hashMapDebugPrintP7HashMap+0x87>
    19b4:	32 78 00             	xor    bh,BYTE PTR [rax+0x0]
    19b7:	5f                   	pop    rdi
    19b8:	47 5f                	rex.RXB pop r15
    19ba:	66 70 6f             	data16 jo 1a2c <_Z15crc32HashString8string_t+0xc>
    19bd:	73 5f                	jae    1a1e <_Z17hashMapDebugPrintP7HashMap+0xbe>
    19bf:	74 00                	je     19c1 <_Z17hashMapDebugPrintP7HashMap+0x61>
    19c1:	5f                   	pop    rdi
    19c2:	5f                   	pop    rdi
    19c3:	75 69                	jne    1a2e <_Z15crc32HashString8string_t+0xe>
    19c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19c6:	74 5f                	je     1a27 <_Z15crc32HashString8string_t+0x7>
    19c8:	6c                   	ins    BYTE PTR es:[rdi],dx
    19c9:	65 61                	gs (bad)
    19cb:	73 74                	jae    1a41 <_Z15crc32HashString8string_t+0x21>
    19cd:	36 34 5f             	ss xor al,0x5f
    19d0:	74 00                	je     19d2 <_Z17hashMapDebugPrintP7HashMap+0x72>
    19d2:	6c                   	ins    BYTE PTR es:[rdi],dx
    19d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19d4:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    19d7:	74 69                	je     1a42 <_Z15crc32HashString8string_t+0x22>
    19d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    19da:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    19de:	73 63                	jae    1a43 <_Z15crc32HashString8string_t+0x23>
    19e0:	70 79                	jo     1a5b <_Z15crc32HashString8string_t+0x3b>
    19e2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19e5:	53                   	push   rbx
    19e6:	74 37                	je     1a1f <_Z17hashMapDebugPrintP7HashMap+0xbf>
    19e8:	73 63                	jae    1a4d <_Z15crc32HashString8string_t+0x2d>
    19ea:	61                   	(bad)
    19eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    19ec:	62 6c 6e             	(bad)  {k5}
    19ef:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    19f1:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    19f4:	77 70                	ja     1a66 <_Z15crc32HashString8string_t+0x46>
    19f6:	72 69                	jb     1a61 <_Z15crc32HashString8string_t+0x41>
    19f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19f9:	74 66                	je     1a61 <_Z15crc32HashString8string_t+0x41>
    19fb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19fe:	4e 53                	rex.WRX push rbx
    1a00:	74 36                	je     1a38 <_Z15crc32HashString8string_t+0x18>
    1a02:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1a05:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a08:	31 33                	xor    DWORD PTR [rbx],esi
    1a0a:	64 75 72             	fs jne 1a7f <_Z15crc32HashString8string_t+0x5f>
    1a0d:	61                   	(bad)
    1a0e:	74 69                	je     1a79 <_Z15crc32HashString8string_t+0x59>
    1a10:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a12:	5f                   	pop    rdi
    1a13:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    1a16:	74 49                	je     1a61 <_Z15crc32HashString8string_t+0x41>
    1a18:	4e 53                	rex.WRX push rbx
    1a1a:	5f                   	pop    rdi
    1a1b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1a1f:	61                   	(bad)
    1a20:	74 69                	je     1a8b <_Z15crc32HashString8string_t+0x6b>
    1a22:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a24:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1a26:	53                   	push   rbx
    1a27:	74 35                	je     1a5e <_Z15crc32HashString8string_t+0x3e>
    1a29:	72 61                	jb     1a8c <_Z15crc32HashString8string_t+0x6c>
    1a2b:	74 69                	je     1a96 <_Z15crc32HashString8string_t+0x76>
    1a2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a2e:	49                   	rex.WB
    1a2f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a31:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a34:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a35:	31 30                	xor    DWORD PTR [rax],esi
    1a37:	30 30                	xor    BYTE PTR [rax],dh
    1a39:	30 30                	xor    BYTE PTR [rax],dh
    1a3b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1a3e:	45                   	rex.RB
    1a3f:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1a41:	53                   	push   rbx
    1a42:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    1a45:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1a47:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1a4a:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a4b:	31 30                	xor    DWORD PTR [rax],esi
    1a4d:	30 30                	xor    BYTE PTR [rax],dh
    1a4f:	30 30                	xor    BYTE PTR [rax],dh
    1a51:	30 30                	xor    BYTE PTR [rax],dh
    1a53:	30 30                	xor    BYTE PTR [rax],dh
    1a55:	45                   	rex.RB
    1a56:	45                   	rex.RB
    1a57:	45                   	rex.RB
    1a58:	45                   	rex.RB
    1a59:	4e 53                	rex.WRX push rbx
    1a5b:	74 39                	je     1a96 <_Z15crc32HashString8string_t+0x76>
    1a5d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1a5f:	61                   	(bad)
    1a60:	62                   	(bad)
    1a61:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a62:	65 5f                	gs pop rdi
    1a64:	69 66 49 58 73 72 4e 	imul   esp,DWORD PTR [rsi+0x49],0x4e727358
    1a6b:	53                   	push   rbx
    1a6c:	5f                   	pop    rdi
    1a6d:	31 33                	xor    DWORD PTR [rbx],esi
    1a6f:	5f                   	pop    rdi
    1a70:	5f                   	pop    rdi
    1a71:	69 73 5f 64 75 72 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61727564
    1a78:	74 69                	je     1ae3 <_Z15crc32HashString8string_t+0xc3>
    1a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7c:	49 54                	rex.WB push r12
    1a7e:	5f                   	pop    rdi
    1a7f:	45                   	rex.RB
    1a80:	45 35 76 61 6c 75    	rex.RB xor eax,0x756c6176
    1a86:	65 45 53             	gs rex.RB push r11
    1a89:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    1a8c:	34 74                	xor    al,0x74
    1a8e:	79 70                	jns    1b00 <_Z15crc32HashString8string_t+0xe0>
    1a90:	65 45 52             	gs rex.RB push r10
    1a93:	4b                   	rex.WXB
    1a94:	4e 53                	rex.WRX push rbx
    1a96:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    1a99:	54                   	push   rsp
    1a9a:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    1a9d:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    1aa0:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1aa4:	53                   	push   rbx
    1aa5:	74 33                	je     1ada <_Z15crc32HashString8string_t+0xba>
    1aa7:	65 78 70             	gs js  1b1a <_Z15crc32HashString8string_t+0xfa>
    1aaa:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    1aae:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ab5:	76 66                	jbe    1b1d <_Z15crc32HashString8string_t+0xfd>
    1ab7:	77 73                	ja     1b2c <_Z15crc32HashString8string_t+0x10c>
    1ab9:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    1abc:	66 00 64 61 74       	data16 add BYTE PTR [rcx+riz*2+0x74],ah
    1ac1:	61                   	(bad)
    1ac2:	5f                   	pop    rdi
    1ac3:	61                   	(bad)
    1ac4:	72 72                	jb     1b38 <_Z15crc32HashString8string_t+0x118>
    1ac6:	61                   	(bad)
    1ac7:	79 00                	jns    1ac9 <_Z15crc32HashString8string_t+0xa9>
    1ac9:	5f                   	pop    rdi
    1aca:	5a                   	pop    rdx
    1acb:	53                   	push   rbx
    1acc:	74 34                	je     1b02 <_Z15crc32HashString8string_t+0xe2>
    1ace:	66 6d                	ins    WORD PTR es:[rdi],dx
    1ad0:	61                   	(bad)
    1ad1:	78 65                	js     1b38 <_Z15crc32HashString8string_t+0x118>
    1ad3:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1ad7:	4e 53                	rex.WRX push rbx
    1ad9:	74 36                	je     1b11 <_Z15crc32HashString8string_t+0xf1>
    1adb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1ade:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1adf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ae0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1ae5:	61                   	(bad)
    1ae6:	74 69                	je     1b51 <_Z19_mm_crc32HashString8string_t+0x11>
    1ae8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ae9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1aea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1aec:	53                   	push   rbx
    1aed:	74 35                	je     1b24 <_Z15crc32HashString8string_t+0x104>
    1aef:	72 61                	jb     1b52 <_Z19_mm_crc32HashString8string_t+0x12>
    1af1:	74 69                	je     1b5c <_Z19_mm_crc32HashString8string_t+0x1c>
    1af3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1af4:	49                   	rex.WB
    1af5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1af7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1afa:	6c                   	ins    BYTE PTR es:[rdi],dx
    1afb:	31 30                	xor    DWORD PTR [rax],esi
    1afd:	30 30                	xor    BYTE PTR [rax],dh
    1aff:	30 30                	xor    BYTE PTR [rax],dh
    1b01:	30 30                	xor    BYTE PTR [rax],dh
    1b03:	30 30                	xor    BYTE PTR [rax],dh
    1b05:	45                   	rex.RB
    1b06:	45                   	rex.RB
    1b07:	45                   	rex.RB
    1b08:	43 34 45             	rex.XB xor al,0x45
    1b0b:	52                   	push   rdx
    1b0c:	4b 53                	rex.WXB push r11
    1b0e:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1b11:	5f                   	pop    rdi
    1b12:	5a                   	pop    rdx
    1b13:	4e                   	rex.WRX
    1b14:	4b 53                	rex.WXB push r11
    1b16:	74 36                	je     1b4e <_Z19_mm_crc32HashString8string_t+0xe>
    1b18:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1b1b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b1c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b1e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1b22:	61                   	(bad)
    1b23:	74 69                	je     1b8e <_Z19_mm_crc32HashString8string_t+0x4e>
    1b25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b27:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1b29:	53                   	push   rbx
    1b2a:	74 35                	je     1b61 <_Z19_mm_crc32HashString8string_t+0x21>
    1b2c:	72 61                	jb     1b8f <_Z19_mm_crc32HashString8string_t+0x4f>
    1b2e:	74 69                	je     1b99 <_Z25_mm_crc32UnrollHashString8string_t+0x9>
    1b30:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1b31:	49                   	rex.WB
    1b32:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1b34:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1b37:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b38:	31 30                	xor    DWORD PTR [rax],esi
    1b3a:	30 30                	xor    BYTE PTR [rax],dh
    1b3c:	30 30                	xor    BYTE PTR [rax],dh
    1b3e:	30 30                	xor    BYTE PTR [rax],dh
    1b40:	30 30                	xor    BYTE PTR [rax],dh
    1b42:	45                   	rex.RB
    1b43:	45                   	rex.RB
    1b44:	45 35 63 6f 75 6e    	rex.RB xor eax,0x6e756f63
    1b4a:	74 45                	je     1b91 <_Z25_mm_crc32UnrollHashString8string_t+0x1>
    1b4c:	76 00                	jbe    1b4e <_Z19_mm_crc32HashString8string_t+0xe>
    1b4e:	5f                   	pop    rdi
    1b4f:	5a                   	pop    rdx
    1b50:	53                   	push   rbx
    1b51:	74 31                	je     1b84 <_Z19_mm_crc32HashString8string_t+0x44>
    1b53:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1b56:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b57:	65 73 73             	gs jae 1bcd <_Z25_mm_crc32UnrollHashString8string_t+0x3d>
    1b5a:	67 72 65             	addr32 jb 1bc2 <_Z25_mm_crc32UnrollHashString8string_t+0x32>
    1b5d:	61                   	(bad)
    1b5e:	74 65                	je     1bc5 <_Z25_mm_crc32UnrollHashString8string_t+0x35>
    1b60:	72 65                	jb     1bc7 <_Z25_mm_crc32UnrollHashString8string_t+0x37>
    1b62:	65 00 66 77          	add    BYTE PTR gs:[rsi+0x77],ah
    1b66:	69 64 65 00 69 73 5f 	imul   esp,DWORD PTR [rbp+riz*2+0x0],0x735f7369
    1b6d:	73 
    1b6e:	74 65                	je     1bd5 <_Z17murmur2HashString8string_t+0x5>
    1b70:	61                   	(bad)
    1b71:	64 79 00             	fs jns 1b74 <_Z19_mm_crc32HashString8string_t+0x34>
    1b74:	74 67                	je     1bdd <_Z17murmur2HashString8string_t+0xd>
    1b76:	61                   	(bad)
    1b77:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b78:	6d                   	ins    DWORD PTR es:[rdi],dx
    1b79:	61                   	(bad)
    1b7a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1b7d:	53                   	push   rbx
    1b7e:	74 37                	je     1bb7 <_Z25_mm_crc32UnrollHashString8string_t+0x27>
    1b80:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b81:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b82:	72 6f                	jb     1bf3 <_Z17murmur2HashString8string_t+0x23>
    1b84:	75 6e                	jne    1bf4 <_Z17murmur2HashString8string_t+0x24>
    1b86:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1b8b:	53                   	push   rbx
    1b8c:	74 37                	je     1bc5 <_Z25_mm_crc32UnrollHashString8string_t+0x35>
    1b8e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b90:	72 6f                	jb     1c01 <_Z17murmur2HashString8string_t+0x31>
    1b92:	75 6e                	jne    1c02 <_Z17murmur2HashString8string_t+0x32>
    1b94:	64 66 00 74 6d 5f    	data16 add BYTE PTR fs:[rbp+rbp*2+0x5f],dh
    1b9a:	73 65                	jae    1c01 <_Z17murmur2HashString8string_t+0x31>
    1b9c:	63 00                	movsxd eax,DWORD PTR [rax]
    1b9e:	5f                   	pop    rdi
    1b9f:	5f                   	pop    rdi
    1ba0:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1ba7:	77 63                	ja     1c0c <_Z17murmur2HashString8string_t+0x3c>
    1ba9:	73 74                	jae    1c1f <_Z17murmur2HashString8string_t+0x4f>
    1bab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bac:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bad:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bb0:	53                   	push   rbx
    1bb1:	74 37                	je     1bea <_Z17murmur2HashString8string_t+0x1a>
    1bb3:	73 63                	jae    1c18 <_Z17murmur2HashString8string_t+0x48>
    1bb5:	61                   	(bad)
    1bb6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bb7:	62 6c 6e             	(bad)  {k6}
    1bba:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1bbc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1bbf:	53                   	push   rbx
    1bc0:	74 39                	je     1bfb <_Z17murmur2HashString8string_t+0x2b>
    1bc2:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1bc9:	65 72 64             	gs jb  1c30 <_Z17murmur2HashString8string_t+0x60>
    1bcc:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    1bd0:	70 73                	jo     1c45 <_Z17murmur2HashString8string_t+0x75>
    1bd2:	74 6c                	je     1c40 <_Z17murmur2HashString8string_t+0x70>
    1bd4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    1bd7:	73 6e                	jae    1c47 <_Z17murmur2HashString8string_t+0x77>
    1bd9:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    1bdc:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    1bdf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be1:	72 00                	jb     1be3 <_Z17murmur2HashString8string_t+0x13>
    1be3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1be4:	70 65                	jo     1c4b <_Z17murmur2HashString8string_t+0x7b>
    1be6:	72 61                	jb     1c49 <_Z17murmur2HashString8string_t+0x79>
    1be8:	74 6f                	je     1c59 <_Z17murmur2HashString8string_t+0x89>
    1bea:	72 2d                	jb     1c19 <_Z17murmur2HashString8string_t+0x49>
    1bec:	3c 73                	cmp    al,0x73
    1bee:	74 64                	je     1c54 <_Z17murmur2HashString8string_t+0x84>
    1bf0:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bf2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1bf5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1bf7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bf8:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1bfa:	5f                   	pop    rdi
    1bfb:	56                   	push   rsi
    1bfc:	32 3a                	xor    bh,BYTE PTR [rdx]
    1bfe:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    1c01:	65 61                	gs (bad)
    1c03:	64 79 5f             	fs jns 1c65 <_Z17murmur2HashString8string_t+0x95>
    1c06:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1c0a:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    1c0e:	74 64                	je     1c74 <_Z17murmur2HashString8string_t+0xa4>
    1c10:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c12:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c18:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c1a:	64 75 72             	fs jne 1c8f <_Z13sumHashString8string_t+0xf>
    1c1d:	61                   	(bad)
    1c1e:	74 69                	je     1c89 <_Z13sumHashString8string_t+0x9>
    1c20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c21:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c22:	3c 6c                	cmp    al,0x6c
    1c24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c26:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c2a:	74 2c                	je     1c58 <_Z17murmur2HashString8string_t+0x88>
    1c2c:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c2f:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c32:	72 61                	jb     1c95 <_Z13sumHashString8string_t+0x15>
    1c34:	74 69                	je     1c9f <_Z13sumHashString8string_t+0x1f>
    1c36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c37:	3c 31                	cmp    al,0x31
    1c39:	2c 20                	sub    al,0x20
    1c3b:	31 30                	xor    DWORD PTR [rax],esi
    1c3d:	30 30                	xor    BYTE PTR [rax],dh
    1c3f:	30 30                	xor    BYTE PTR [rax],dh
    1c41:	30 30                	xor    BYTE PTR [rax],dh
    1c43:	30 30                	xor    BYTE PTR [rax],dh
    1c45:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c48:	2c 20                	sub    al,0x20
    1c4a:	73 74                	jae    1cc0 <_Z13sumHashString8string_t+0x40>
    1c4c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c4f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1c52:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c53:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c54:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c55:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    1c57:	64 75 72             	fs jne 1ccc <_Z13sumHashString8string_t+0x4c>
    1c5a:	61                   	(bad)
    1c5b:	74 69                	je     1cc6 <_Z13sumHashString8string_t+0x46>
    1c5d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c5f:	3c 6c                	cmp    al,0x6c
    1c61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c63:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    1c67:	74 2c                	je     1c95 <_Z13sumHashString8string_t+0x15>
    1c69:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    1c6c:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    1c6f:	72 61                	jb     1cd2 <_Z13sumHashString8string_t+0x52>
    1c71:	74 69                	je     1cdc <_Z13sumHashString8string_t+0x5c>
    1c73:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c74:	3c 31                	cmp    al,0x31
    1c76:	2c 20                	sub    al,0x20
    1c78:	31 30                	xor    DWORD PTR [rax],esi
    1c7a:	30 30                	xor    BYTE PTR [rax],dh
    1c7c:	30 30                	xor    BYTE PTR [rax],dh
    1c7e:	30 30                	xor    BYTE PTR [rax],dh
    1c80:	30 30                	xor    BYTE PTR [rax],dh
    1c82:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    1c85:	20 3e                	and    BYTE PTR [rsi],bh
    1c87:	00 6c 6f 67          	add    BYTE PTR [rdi+rbp*2+0x67],ch
    1c8b:	32 00                	xor    al,BYTE PTR [rax]
    1c8d:	70 75                	jo     1d04 <_Z13sumHashString8string_t+0x84>
    1c8f:	74 77                	je     1d08 <_Z13sumHashString8string_t+0x88>
    1c91:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1c94:	72 00                	jb     1c96 <_Z13sumHashString8string_t+0x16>
    1c96:	5f                   	pop    rdi
    1c97:	5f                   	pop    rdi
    1c98:	62 75 69 6c 74       	(bad)
    1c9d:	69 6e 5f 73 71 72 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74727173
    1ca4:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1ca8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ca9:	61                   	(bad)
    1caa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cab:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1cae:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1cb0:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    1cb3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1cb6:	53                   	push   rbx
    1cb7:	74 31                	je     1cea <_Z13sumHashString8string_t+0x6a>
    1cb9:	33 69 73             	xor    ebp,DWORD PTR [rcx+0x73]
    1cbc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cbd:	65 73 73             	gs jae 1d33 <_Z13sumHashString8string_t+0xb3>
    1cc0:	67 72 65             	addr32 jb 1d28 <_Z13sumHashString8string_t+0xa8>
    1cc3:	61                   	(bad)
    1cc4:	74 65                	je     1d2b <_Z13sumHashString8string_t+0xab>
    1cc6:	72 66                	jb     1d2e <_Z13sumHashString8string_t+0xae>
    1cc8:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1ccc:	53                   	push   rbx
    1ccd:	74 35                	je     1d04 <_Z13sumHashString8string_t+0x84>
    1ccf:	66 72 65             	data16 jb 1d37 <_Z13sumHashString8string_t+0xb7>
    1cd2:	78 70                	js     1d44 <_Z13sumHashString8string_t+0xc4>
    1cd4:	65 50                	gs push rax
    1cd6:	69 00 66 61 62 73    	imul   eax,DWORD PTR [rax],0x73626166
    1cdc:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1cdf:	62 75 69 6c 74       	(bad)
    1ce4:	69 6e 5f 66 77 72 69 	imul   ebp,DWORD PTR [rsi+0x5f],0x69727766
    1ceb:	74 65                	je     1d52 <_Z13sumHashString8string_t+0xd2>
    1ced:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1cf0:	53                   	push   rbx
    1cf1:	74 35                	je     1d28 <_Z13sumHashString8string_t+0xa8>
    1cf3:	6c                   	ins    BYTE PTR es:[rdi],dx
    1cf4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cf5:	67 31 70 66          	xor    DWORD PTR [eax+0x66],esi
    1cf9:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    1cfc:	74 69                	je     1d67 <_Z13sumHashString8string_t+0xe7>
    1cfe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1cff:	3c 31                	cmp    al,0x31
    1d01:	2c 20                	sub    al,0x20
    1d03:	31 30                	xor    DWORD PTR [rax],esi
    1d05:	30 30                	xor    BYTE PTR [rax],dh
    1d07:	30 30                	xor    BYTE PTR [rax],dh
    1d09:	30 3e                	xor    BYTE PTR [rsi],bh
    1d0b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d0e:	53                   	push   rbx
    1d0f:	74 39                	je     1d4a <_Z13sumHashString8string_t+0xca>
    1d11:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    1d18:	65 72 65             	gs jb  1d80 <_Z13sumHashString8string_t+0x100>
    1d1b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1d1f:	4e                   	rex.WRX
    1d20:	4b 53                	rex.WXB push r11
    1d22:	74 36                	je     1d5a <_Z13sumHashString8string_t+0xda>
    1d24:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1d27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d2a:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1d2e:	61                   	(bad)
    1d2f:	74 69                	je     1d9a <_Z13sumHashString8string_t+0x11a>
    1d31:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d32:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d33:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1d35:	53                   	push   rbx
    1d36:	74 35                	je     1d6d <_Z13sumHashString8string_t+0xed>
    1d38:	72 61                	jb     1d9b <_Z13sumHashString8string_t+0x11b>
    1d3a:	74 69                	je     1da5 <_Z13sumHashString8string_t+0x125>
    1d3c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d3d:	49                   	rex.WB
    1d3e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d40:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d43:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d44:	31 30                	xor    DWORD PTR [rax],esi
    1d46:	30 30                	xor    BYTE PTR [rax],dh
    1d48:	30 30                	xor    BYTE PTR [rax],dh
    1d4a:	30 30                	xor    BYTE PTR [rax],dh
    1d4c:	30 30                	xor    BYTE PTR [rax],dh
    1d4e:	45                   	rex.RB
    1d4f:	45                   	rex.RB
    1d50:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    1d52:	67 45 76 00          	addr32 rex.RB jbe 1d56 <_Z13sumHashString8string_t+0xd6>
    1d56:	5f                   	pop    rdi
    1d57:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    1d59:	61                   	(bad)
    1d5a:	67 73 32             	addr32 jae 1d8f <_Z13sumHashString8string_t+0x10f>
    1d5d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d60:	4e 53                	rex.WRX push rbx
    1d62:	74 35                	je     1d99 <_Z13sumHashString8string_t+0x119>
    1d64:	72 61                	jb     1dc7 <_Z13sumHashString8string_t+0x147>
    1d66:	74 69                	je     1dd1 <_Z13sumHashString8string_t+0x151>
    1d68:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1d69:	49                   	rex.WB
    1d6a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1d6c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1d6f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d70:	31 30                	xor    DWORD PTR [rax],esi
    1d72:	30 30                	xor    BYTE PTR [rax],dh
    1d74:	45                   	rex.RB
    1d75:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    1d79:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d7a:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    1d7e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1d80:	75 5f                	jne    1de1 <_Z13sumHashString8string_t+0x161>
    1d82:	64 65 62 75 67 00 5f 	(bad)
    1d89:	5f                   	pop    rdi
    1d8a:	75 69                	jne    1df5 <_Z17adler32HashString8string_t+0x5>
    1d8c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d8d:	74 5f                	je     1dee <_Z13sumHashString8string_t+0x16e>
    1d8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    1d90:	65 61                	gs (bad)
    1d92:	73 74                	jae    1e08 <_Z17adler32HashString8string_t+0x18>
    1d94:	33 32                	xor    esi,DWORD PTR [rdx]
    1d96:	5f                   	pop    rdi
    1d97:	74 00                	je     1d99 <_Z13sumHashString8string_t+0x119>
    1d99:	5f                   	pop    rdi
    1d9a:	5a                   	pop    rdx
    1d9b:	53                   	push   rbx
    1d9c:	74 34                	je     1dd2 <_Z13sumHashString8string_t+0x152>
    1d9e:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1da1:	74 65                	je     1e08 <_Z17adler32HashString8string_t+0x18>
    1da3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1da6:	53                   	push   rbx
    1da7:	74 34                	je     1ddd <_Z13sumHashString8string_t+0x15d>
    1da9:	63 62 72             	movsxd esp,DWORD PTR [rdx+0x72]
    1dac:	74 66                	je     1e14 <_Z17adler32HashString8string_t+0x24>
    1dae:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    1db1:	4f 5f                	rex.WRXB pop r15
    1db3:	72 65                	jb     1e1a <_Z17adler32HashString8string_t+0x2a>
    1db5:	61                   	(bad)
    1db6:	64 5f                	fs pop rdi
    1db8:	62 61 73 65 00       	(bad)
    1dbd:	5f                   	pop    rdi
    1dbe:	5f                   	pop    rdi
    1dbf:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1dc6:	77 63                	ja     1e2b <_Z17adler32HashString8string_t+0x3b>
    1dc8:	73 74                	jae    1e3e <_Z17adler32HashString8string_t+0x4e>
    1dca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1dcb:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dcc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1dcd:	00 6d 75             	add    BYTE PTR [rbp+0x75],ch
    1dd0:	72 6d                	jb     1e3f <_Z17adler32HashString8string_t+0x4f>
    1dd2:	75 72                	jne    1e46 <_Z17adler32HashString8string_t+0x56>
    1dd4:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    1dd7:	69 6c 65 73 00 5f 5a 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x535a5f00
    1dde:	53 
    1ddf:	74 34                	je     1e15 <_Z17adler32HashString8string_t+0x25>
    1de1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1de2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1de3:	64 66 66 50          	fs data16 push ax
    1de7:	66 00 69 73          	data16 add BYTE PTR [rcx+0x73],ch
    1deb:	67 72 65             	addr32 jb 1e53 <_Z17adler32HashString8string_t+0x63>
    1dee:	61                   	(bad)
    1def:	74 65                	je     1e56 <_Z17adler32HashString8string_t+0x66>
    1df1:	72 65                	jb     1e58 <_Z17adler32HashString8string_t+0x68>
    1df3:	71 75                	jno    1e6a <_Z17adler32HashString8string_t+0x7a>
    1df5:	61                   	(bad)
    1df6:	6c                   	ins    BYTE PTR es:[rdi],dx
    1df7:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    1dfa:	67 5f                	addr32 pop rdi
    1dfc:	73 61                	jae    1e5f <_Z17adler32HashString8string_t+0x6f>
    1dfe:	76 65                	jbe    1e65 <_Z17adler32HashString8string_t+0x75>
    1e00:	5f                   	pop    rdi
    1e01:	61                   	(bad)
    1e02:	72 65                	jb     1e69 <_Z17adler32HashString8string_t+0x79>
    1e04:	61                   	(bad)
    1e05:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1e08:	53                   	push   rbx
    1e09:	74 35                	je     1e40 <_Z17adler32HashString8string_t+0x50>
    1e0b:	72 6f                	jb     1e7c <_Z13elfHashString8string_t+0xc>
    1e0d:	75 6e                	jne    1e7d <_Z13elfHashString8string_t+0xd>
    1e0f:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    1e14:	53                   	push   rbx
    1e15:	74 35                	je     1e4c <_Z17adler32HashString8string_t+0x5c>
    1e17:	72 6f                	jb     1e88 <_Z13elfHashString8string_t+0x18>
    1e19:	75 6e                	jne    1e89 <_Z13elfHashString8string_t+0x19>
    1e1b:	64 66 00 74 68 69    	data16 add BYTE PTR fs:[rax+rbp*2+0x69],dh
    1e21:	73 00                	jae    1e23 <_Z17adler32HashString8string_t+0x33>
    1e23:	5f                   	pop    rdi
    1e24:	5a                   	pop    rdx
    1e25:	4e 53                	rex.WRX push rbx
    1e27:	74 35                	je     1e5e <_Z17adler32HashString8string_t+0x6e>
    1e29:	72 61                	jb     1e8c <_Z13elfHashString8string_t+0x1c>
    1e2b:	74 69                	je     1e96 <_Z13elfHashString8string_t+0x26>
    1e2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e2e:	49                   	rex.WB
    1e2f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e31:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e34:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e35:	31 30                	xor    DWORD PTR [rax],esi
    1e37:	30 30                	xor    BYTE PTR [rax],dh
    1e39:	30 30                	xor    BYTE PTR [rax],dh
    1e3b:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e3e:	33 64 65 6e          	xor    esp,DWORD PTR [rbp+riz*2+0x6e]
    1e42:	45 00 5f 75          	add    BYTE PTR [r15+0x75],r11b
    1e46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e47:	75 73                	jne    1ebc <_Z13elfHashString8string_t+0x4c>
    1e49:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    1e4d:	5f                   	pop    rdi
    1e4e:	5a                   	pop    rdx
    1e4f:	4e 53                	rex.WRX push rbx
    1e51:	74 36                	je     1e89 <_Z13elfHashString8string_t+0x19>
    1e53:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e59:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e5d:	61                   	(bad)
    1e5e:	74 69                	je     1ec9 <_Z13searchElementP4List8string_t.part.0+0x9>
    1e60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e61:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e62:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1e64:	53                   	push   rbx
    1e65:	74 35                	je     1e9c <_Z13elfHashString8string_t+0x2c>
    1e67:	72 61                	jb     1eca <_Z13searchElementP4List8string_t.part.0+0xa>
    1e69:	74 69                	je     1ed4 <_Z13searchElementP4List8string_t.part.0+0x14>
    1e6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e6c:	49                   	rex.WB
    1e6d:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1e6f:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1e72:	6c                   	ins    BYTE PTR es:[rdi],dx
    1e73:	31 30                	xor    DWORD PTR [rax],esi
    1e75:	30 30                	xor    BYTE PTR [rax],dh
    1e77:	30 30                	xor    BYTE PTR [rax],dh
    1e79:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1e7c:	45 70 70             	rex.RB jo 1eef <_Z13searchElementP4List8string_t.part.0+0x2f>
    1e7f:	45 76 00             	rex.RB jbe 1e82 <_Z13elfHashString8string_t+0x12>
    1e82:	74 6d                	je     1ef1 <_Z8listCtorv+0x1>
    1e84:	5f                   	pop    rdi
    1e85:	67 6d                	ins    DWORD PTR es:[edi],dx
    1e87:	74 6f                	je     1ef8 <_Z8listCtorv+0x8>
    1e89:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    1e8e:	4e 53                	rex.WRX push rbx
    1e90:	74 36                	je     1ec8 <_Z13searchElementP4List8string_t.part.0+0x8>
    1e92:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1e95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e98:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1e9c:	61                   	(bad)
    1e9d:	74 69                	je     1f08 <_Z8listCtorv+0x18>
    1e9f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ea0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ea1:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1ea3:	53                   	push   rbx
    1ea4:	74 35                	je     1edb <_Z13searchElementP4List8string_t.part.0+0x1b>
    1ea6:	72 61                	jb     1f09 <_Z8listCtorv+0x19>
    1ea8:	74 69                	je     1f13 <_Z8listCtorv+0x23>
    1eaa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1eab:	49                   	rex.WB
    1eac:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1eae:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1eb1:	6c                   	ins    BYTE PTR es:[rdi],dx
    1eb2:	31 30                	xor    DWORD PTR [rax],esi
    1eb4:	30 30                	xor    BYTE PTR [rax],dh
    1eb6:	30 30                	xor    BYTE PTR [rax],dh
    1eb8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    1ebb:	45                   	rex.RB
    1ebc:	43 34 45             	rex.XB xor al,0x45
    1ebf:	76 00                	jbe    1ec1 <_Z13searchElementP4List8string_t.part.0+0x1>
    1ec1:	65 72 66             	gs jb  1f2a <_Z8listCtorv+0x3a>
    1ec4:	63 00                	movsxd eax,DWORD PTR [rax]
    1ec6:	74 65                	je     1f2d <_Z8listCtorv+0x3d>
    1ec8:	73 74                	jae    1f3e <_Z8listCtorv+0x4e>
    1eca:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    1ecc:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ecd:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ece:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    1ed5:	75 69                	jne    1f40 <_Z8listCtorv+0x50>
    1ed7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ed8:	74 70                	je     1f4a <_Z8listCtorv+0x5a>
    1eda:	74 72                	je     1f4e <_Z8listCtorv+0x5e>
    1edc:	5f                   	pop    rdi
    1edd:	74 00                	je     1edf <_Z13searchElementP4List8string_t.part.0+0x1f>
    1edf:	5f                   	pop    rdi
    1ee0:	5a                   	pop    rdx
    1ee1:	53                   	push   rbx
    1ee2:	74 34                	je     1f18 <_Z8listCtorv+0x28>
    1ee4:	73 69                	jae    1f4f <_Z8listCtorv+0x5f>
    1ee6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee7:	68 65 00 61 73       	push   0x73610065
    1eec:	69 6e 68 00 5f 5a 53 	imul   ebp,DWORD PTR [rsi+0x68],0x535a5f00
    1ef3:	74 36                	je     1f2b <_Z8listCtorv+0x3b>
    1ef5:	74 67                	je     1f5e <_Z12pushListElemP4List8string_t+0xe>
    1ef7:	61                   	(bad)
    1ef8:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ef9:	6d                   	ins    DWORD PTR es:[rdi],dx
    1efa:	61                   	(bad)
    1efb:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    1eff:	53                   	push   rbx
    1f00:	74 36                	je     1f38 <_Z8listCtorv+0x48>
    1f02:	74 67                	je     1f6b <_Z12pushListElemP4List8string_t+0x1b>
    1f04:	61                   	(bad)
    1f05:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f06:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f07:	61                   	(bad)
    1f08:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    1f0c:	4e 53                	rex.WRX push rbx
    1f0e:	74 36                	je     1f46 <_Z8listCtorv+0x56>
    1f10:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f16:	31 30                	xor    DWORD PTR [rax],esi
    1f18:	74 69                	je     1f83 <_Z12pushListElemP4List8string_t+0x33>
    1f1a:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f1b:	65 5f                	gs pop rdi
    1f1d:	70 6f                	jo     1f8e <_Z12pushListElemP4List8string_t+0x3e>
    1f1f:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    1f26:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    1f29:	32 31                	xor    dh,BYTE PTR [rcx]
    1f2b:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    1f2e:	65 61                	gs (bad)
    1f30:	64 79 5f             	fs jns 1f92 <_Z12pushListElemP4List8string_t+0x42>
    1f33:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    1f37:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    1f3b:	5f                   	pop    rdi
    1f3c:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f40:	61                   	(bad)
    1f41:	74 69                	je     1fac <_Z12pushListElemP4List8string_t+0x5c>
    1f43:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f45:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f47:	53                   	push   rbx
    1f48:	74 35                	je     1f7f <_Z12pushListElemP4List8string_t+0x2f>
    1f4a:	72 61                	jb     1fad <_Z12pushListElemP4List8string_t+0x5d>
    1f4c:	74 69                	je     1fb7 <_Z12pushListElemP4List8string_t+0x67>
    1f4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f4f:	49                   	rex.WB
    1f50:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f52:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f55:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f56:	31 30                	xor    DWORD PTR [rax],esi
    1f58:	30 30                	xor    BYTE PTR [rax],dh
    1f5a:	30 30                	xor    BYTE PTR [rax],dh
    1f5c:	30 30                	xor    BYTE PTR [rax],dh
    1f5e:	30 30                	xor    BYTE PTR [rax],dh
    1f60:	45                   	rex.RB
    1f61:	45                   	rex.RB
    1f62:	45                   	rex.RB
    1f63:	45                   	rex.RB
    1f64:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    1f68:	78 45                	js     1faf <_Z12pushListElemP4List8string_t+0x5f>
    1f6a:	76 00                	jbe    1f6c <_Z12pushListElemP4List8string_t+0x1c>
    1f6c:	5f                   	pop    rdi
    1f6d:	5a                   	pop    rdx
    1f6e:	53                   	push   rbx
    1f6f:	74 35                	je     1fa6 <_Z12pushListElemP4List8string_t+0x56>
    1f71:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f72:	64 65 78 70          	fs gs js 1fe6 <_Z12pushListElemP4List8string_t+0x96>
    1f76:	66 69 00 5f 5a       	imul   ax,WORD PTR [rax],0x5a5f
    1f7b:	4e 53                	rex.WRX push rbx
    1f7d:	74 36                	je     1fb5 <_Z12pushListElemP4List8string_t+0x65>
    1f7f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    1f82:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f83:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f84:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f85:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    1f89:	61                   	(bad)
    1f8a:	74 69                	je     1ff5 <_Z12pushListElemP4List8string_t+0xa5>
    1f8c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f8e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    1f90:	53                   	push   rbx
    1f91:	74 35                	je     1fc8 <_Z12pushListElemP4List8string_t+0x78>
    1f93:	72 61                	jb     1ff6 <_Z12pushListElemP4List8string_t+0xa6>
    1f95:	74 69                	je     2000 <_Z12pushListElemP4List8string_t+0xb0>
    1f97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f98:	49                   	rex.WB
    1f99:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1f9b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    1f9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1f9f:	31 30                	xor    DWORD PTR [rax],esi
    1fa1:	30 30                	xor    BYTE PTR [rax],dh
    1fa3:	30 30                	xor    BYTE PTR [rax],dh
    1fa5:	30 30                	xor    BYTE PTR [rax],dh
    1fa7:	30 30                	xor    BYTE PTR [rax],dh
    1fa9:	45                   	rex.RB
    1faa:	45                   	rex.RB
    1fab:	45 70 4c             	rex.RB jo 1ffa <_Z12pushListElemP4List8string_t+0xaa>
    1fae:	45 52                	rex.RB push r10
    1fb0:	4b 53                	rex.WXB push r11
    1fb2:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    1fb5:	5f                   	pop    rdi
    1fb6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fb7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1fb8:	64 5f                	fs pop rdi
    1fba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fbb:	66 66 73 65          	data16 data16 jae 2024 <_Z12pushListElemP4List8string_t+0xd4>
    1fbf:	74 00                	je     1fc1 <_Z12pushListElemP4List8string_t+0x71>
    1fc1:	66 73 65             	data16 jae 2029 <_Z12pushListElemP4List8string_t+0xd9>
    1fc4:	74 70                	je     2036 <_Z12pushListElemP4List8string_t+0xe6>
    1fc6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fc7:	73 00                	jae    1fc9 <_Z12pushListElemP4List8string_t+0x79>
    1fc9:	72 61                	jb     202c <_Z12pushListElemP4List8string_t+0xdc>
    1fcb:	74 69                	je     2036 <_Z12pushListElemP4List8string_t+0xe6>
    1fcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1fce:	3c 31                	cmp    al,0x31
    1fd0:	2c 20                	sub    al,0x20
    1fd2:	31 30                	xor    DWORD PTR [rax],esi
    1fd4:	30 30                	xor    BYTE PTR [rax],dh
    1fd6:	30 30                	xor    BYTE PTR [rax],dh
    1fd8:	30 30                	xor    BYTE PTR [rax],dh
    1fda:	30 30                	xor    BYTE PTR [rax],dh
    1fdc:	3e 00 69 6e          	ds add BYTE PTR [rcx+0x6e],ch
    1fe0:	74 5f                	je     2041 <_Z12pushListElemP4List8string_t+0xf1>
    1fe2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fe3:	5f                   	pop    rdi
    1fe4:	73 65                	jae    204b <_Z12pushListElemP4List8string_t+0xfb>
    1fe6:	70 5f                	jo     2047 <_Z12pushListElemP4List8string_t+0xf7>
    1fe8:	62 79 5f 73 70       	(bad)
    1fed:	61                   	(bad)
    1fee:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    1ff1:	5f                   	pop    rdi
    1ff2:	5a                   	pop    rdx
    1ff3:	4e 53                	rex.WRX push rbx
    1ff5:	74 35                	je     202c <_Z12pushListElemP4List8string_t+0xdc>
    1ff7:	72 61                	jb     205a <_Z12pushListElemP4List8string_t+0x10a>
    1ff9:	74 69                	je     2064 <_Z12pushListElemP4List8string_t+0x114>
    1ffb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ffc:	49                   	rex.WB
    1ffd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    1fff:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2002:	6c                   	ins    BYTE PTR es:[rdi],dx
    2003:	31 30                	xor    DWORD PTR [rax],esi
    2005:	30 30                	xor    BYTE PTR [rax],dh
    2007:	30 30                	xor    BYTE PTR [rax],dh
    2009:	30 30                	xor    BYTE PTR [rax],dh
    200b:	30 30                	xor    BYTE PTR [rax],dh
    200d:	45                   	rex.RB
    200e:	45 33 6e 75          	xor    r13d,DWORD PTR [r14+0x75]
    2012:	6d                   	ins    DWORD PTR es:[rdi],dx
    2013:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    2017:	53                   	push   rbx
    2018:	74 35                	je     204f <_Z12pushListElemP4List8string_t+0xff>
    201a:	69 73 6e 61 6e 64 00 	imul   esi,DWORD PTR [rbx+0x6e],0x646e61
    2021:	5f                   	pop    rdi
    2022:	5a                   	pop    rdx
    2023:	53                   	push   rbx
    2024:	74 35                	je     205b <_Z12pushListElemP4List8string_t+0x10b>
    2026:	69 73 6e 61 6e 65 00 	imul   esi,DWORD PTR [rbx+0x6e],0x656e61
    202d:	5f                   	pop    rdi
    202e:	5a                   	pop    rdx
    202f:	53                   	push   rbx
    2030:	74 35                	je     2067 <_Z12pushListElemP4List8string_t+0x117>
    2032:	69 73 6e 61 6e 66 00 	imul   esi,DWORD PTR [rbx+0x6e],0x666e61
    2039:	5f                   	pop    rdi
    203a:	5f                   	pop    rdi
    203b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2042:	73 77                	jae    20bb <_Z12pushListElemP4List8string_t+0x16b>
    2044:	73 63                	jae    20a9 <_Z12pushListElemP4List8string_t+0x159>
    2046:	61                   	(bad)
    2047:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2048:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    204c:	4e 53                	rex.WRX push rbx
    204e:	74 36                	je     2086 <_Z12pushListElemP4List8string_t+0x136>
    2050:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2053:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2054:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2055:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2056:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    205a:	61                   	(bad)
    205b:	74 69                	je     20c6 <_Z12pushListElemP4List8string_t+0x176>
    205d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    205e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    205f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2061:	53                   	push   rbx
    2062:	74 35                	je     2099 <_Z12pushListElemP4List8string_t+0x149>
    2064:	72 61                	jb     20c7 <_Z12pushListElemP4List8string_t+0x177>
    2066:	74 69                	je     20d1 <_Z11popListElemP4List8string_t+0x1>
    2068:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2069:	49                   	rex.WB
    206a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    206c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    206f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2070:	31 30                	xor    DWORD PTR [rax],esi
    2072:	30 30                	xor    BYTE PTR [rax],dh
    2074:	30 30                	xor    BYTE PTR [rax],dh
    2076:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2079:	45 34 7a             	rex.RB xor al,0x7a
    207c:	65 72 6f             	gs jb  20ee <_Z11popListElemP4List8string_t+0x1e>
    207f:	45 76 00             	rex.RB jbe 2082 <_Z12pushListElemP4List8string_t+0x132>
    2082:	5f                   	pop    rdi
    2083:	5a                   	pop    rdx
    2084:	4e 53                	rex.WRX push rbx
    2086:	74 36                	je     20be <_Z12pushListElemP4List8string_t+0x16e>
    2088:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    208b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    208d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    208e:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2092:	61                   	(bad)
    2093:	74 69                	je     20fe <_Z11popListElemP4List8string_t+0x2e>
    2095:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2096:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2097:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2099:	53                   	push   rbx
    209a:	74 35                	je     20d1 <_Z11popListElemP4List8string_t+0x1>
    209c:	72 61                	jb     20ff <_Z11popListElemP4List8string_t+0x2f>
    209e:	74 69                	je     2109 <_Z11popListElemP4List8string_t+0x39>
    20a0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20a1:	49                   	rex.WB
    20a2:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    20a4:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    20a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    20a8:	31 30                	xor    DWORD PTR [rax],esi
    20aa:	30 30                	xor    BYTE PTR [rax],dh
    20ac:	30 30                	xor    BYTE PTR [rax],dh
    20ae:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    20b1:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    20b3:	4c                   	rex.WR
    20b4:	45 52                	rex.RB push r10
    20b6:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    20b8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    20bb:	4e 53                	rex.WRX push rbx
    20bd:	74 36                	je     20f5 <_Z11popListElemP4List8string_t+0x25>
    20bf:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    20c2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20c4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20c5:	31 30                	xor    DWORD PTR [rax],esi
    20c7:	74 69                	je     2132 <_Z11popListElemP4List8string_t+0x62>
    20c9:	6d                   	ins    DWORD PTR es:[rdi],dx
    20ca:	65 5f                	gs pop rdi
    20cc:	70 6f                	jo     213d <_Z11popListElemP4List8string_t+0x6d>
    20ce:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    20d5:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    20d8:	32 31                	xor    dh,BYTE PTR [rcx]
    20da:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    20dd:	65 61                	gs (bad)
    20df:	64 79 5f             	fs jns 2141 <_Z11popListElemP4List8string_t+0x71>
    20e2:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    20e6:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    20ea:	5f                   	pop    rdi
    20eb:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    20ef:	61                   	(bad)
    20f0:	74 69                	je     215b <_Z11popListElemP4List8string_t+0x8b>
    20f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20f3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20f4:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    20f6:	53                   	push   rbx
    20f7:	74 35                	je     212e <_Z11popListElemP4List8string_t+0x5e>
    20f9:	72 61                	jb     215c <_Z11popListElemP4List8string_t+0x8c>
    20fb:	74 69                	je     2166 <_Z11popListElemP4List8string_t+0x96>
    20fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    20fe:	49                   	rex.WB
    20ff:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2101:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2104:	6c                   	ins    BYTE PTR es:[rdi],dx
    2105:	31 30                	xor    DWORD PTR [rax],esi
    2107:	30 30                	xor    BYTE PTR [rax],dh
    2109:	30 30                	xor    BYTE PTR [rax],dh
    210b:	30 30                	xor    BYTE PTR [rax],dh
    210d:	30 30                	xor    BYTE PTR [rax],dh
    210f:	45                   	rex.RB
    2110:	45                   	rex.RB
    2111:	45                   	rex.RB
    2112:	45                   	rex.RB
    2113:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    2117:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2118:	45 76 00             	rex.RB jbe 211b <_Z11popListElemP4List8string_t+0x4b>
    211b:	5f                   	pop    rdi
    211c:	5f                   	pop    rdi
    211d:	63 64 00 5f          	movsxd esp,DWORD PTR [rax+rax*1+0x5f]
    2121:	5a                   	pop    rdx
    2122:	53                   	push   rbx
    2123:	74 35                	je     215a <_Z11popListElemP4List8string_t+0x8a>
    2125:	74 72                	je     2199 <_Z11popListElemP4List8string_t+0xc9>
    2127:	75 6e                	jne    2197 <_Z11popListElemP4List8string_t+0xc7>
    2129:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    212c:	5f                   	pop    rdi
    212d:	5a                   	pop    rdx
    212e:	53                   	push   rbx
    212f:	74 35                	je     2166 <_Z11popListElemP4List8string_t+0x96>
    2131:	74 72                	je     21a5 <_Z11popListElemP4List8string_t+0xd5>
    2133:	75 6e                	jne    21a3 <_Z11popListElemP4List8string_t+0xd3>
    2135:	63 66 00             	movsxd esp,DWORD PTR [rsi+0x0]
    2138:	5f                   	pop    rdi
    2139:	5a                   	pop    rdx
    213a:	53                   	push   rbx
    213b:	74 34                	je     2171 <_Z11popListElemP4List8string_t+0xa1>
    213d:	66 6d                	ins    WORD PTR es:[rdi],dx
    213f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2140:	64 66 66 00 77 6d    	data16 data16 add BYTE PTR fs:[rdi+0x6d],dh
    2146:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2148:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    214b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    214e:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2155:	66 77 73             	data16 ja 21cb <_Z13searchElementP4List8string_t+0x1b>
    2158:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    215b:	66 00 74 6d 5f       	data16 add BYTE PTR [rbp+rbp*2+0x5f],dh
    2160:	6d                   	ins    DWORD PTR es:[rdi],dx
    2161:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2162:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2163:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2166:	64 5f                	fs pop rdi
    2168:	64 65 76 69          	fs gs jbe 21d5 <_Z13searchElementP4List8string_t+0x25>
    216c:	61                   	(bad)
    216d:	74 69                	je     21d8 <_Z13searchElementP4List8string_t+0x28>
    216f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2170:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2171:	00 5f 66             	add    BYTE PTR [rdi+0x66],bl
    2174:	72 65                	jb     21db <_Z13searchElementP4List8string_t+0x2b>
    2176:	65 72 65             	gs jb  21de <_Z13searchElementP4List8string_t+0x2e>
    2179:	73 5f                	jae    21da <_Z13searchElementP4List8string_t+0x2a>
    217b:	6c                   	ins    BYTE PTR es:[rdi],dx
    217c:	69 73 74 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+0x74],0x4e5a5f00
    2183:	53                   	push   rbx
    2184:	74 36                	je     21bc <_Z13searchElementP4List8string_t+0xc>
    2186:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2189:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    218a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    218b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    218c:	6d                   	ins    DWORD PTR es:[rdi],dx
    218d:	69 49 6c 53 74 35 72 	imul   ecx,DWORD PTR [rcx+0x6c],0x72357453
    2194:	61                   	(bad)
    2195:	74 69                	je     2200 <_Z13searchElementP4List8string_t+0x50>
    2197:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2198:	49                   	rex.WB
    2199:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    219b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    219e:	6c                   	ins    BYTE PTR es:[rdi],dx
    219f:	31 30                	xor    DWORD PTR [rax],esi
    21a1:	30 30                	xor    BYTE PTR [rax],dh
    21a3:	30 30                	xor    BYTE PTR [rax],dh
    21a5:	30 30                	xor    BYTE PTR [rax],dh
    21a7:	30 30                	xor    BYTE PTR [rax],dh
    21a9:	45                   	rex.RB
    21aa:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    21ac:	53                   	push   rbx
    21ad:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21b0:	45                   	rex.RB
    21b1:	4e 53                	rex.WRX push rbx
    21b3:	74 31                	je     21e6 <_Z13searchElementP4List8string_t+0x36>
    21b5:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    21b8:	6d                   	ins    DWORD PTR es:[rdi],dx
    21b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    21ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21bc:	5f                   	pop    rdi
    21bd:	74 79                	je     2238 <_Z8listDtorP4List+0x8>
    21bf:	70 65                	jo     2226 <_Z13searchElementP4List8string_t+0x76>
    21c1:	49                   	rex.WB
    21c2:	4a                   	rex.WX
    21c3:	4e 53                	rex.WRX push rbx
    21c5:	5f                   	pop    rdi
    21c6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    21ca:	61                   	(bad)
    21cb:	74 69                	je     2236 <_Z8listDtorP4List+0x6>
    21cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21cf:	49 54                	rex.WB push r12
    21d1:	5f                   	pop    rdi
    21d2:	54                   	push   rsp
    21d3:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    21d6:	45                   	rex.RB
    21d7:	4e 53                	rex.WRX push rbx
    21d9:	34 5f                	xor    al,0x5f
    21db:	49 54                	rex.WB push r12
    21dd:	31 5f 54             	xor    DWORD PTR [rdi+0x54],ebx
    21e0:	32 5f 45             	xor    bl,BYTE PTR [rdi+0x45]
    21e3:	45                   	rex.RB
    21e4:	45                   	rex.RB
    21e5:	45 34 74             	rex.RB xor al,0x74
    21e8:	79 70                	jns    225a <_Z8listDtorP4List+0x2a>
    21ea:	65 45 52             	gs rex.RB push r10
    21ed:	4b 53                	rex.WXB push r11
    21ef:	37                   	(bad)
    21f0:	5f                   	pop    rdi
    21f1:	52                   	push   rdx
    21f2:	4b 53                	rex.WXB push r11
    21f4:	41 5f                	pop    r15
    21f6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    21f9:	4e 53                	rex.WRX push rbx
    21fb:	74 36                	je     2233 <_Z8listDtorP4List+0x3>
    21fd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2200:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2201:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2202:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2203:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2207:	61                   	(bad)
    2208:	74 69                	je     2273 <_Z10debugPrintP4List+0x3>
    220a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    220b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    220c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    220e:	53                   	push   rbx
    220f:	74 35                	je     2246 <_Z8listDtorP4List+0x16>
    2211:	72 61                	jb     2274 <_Z10debugPrintP4List+0x4>
    2213:	74 69                	je     227e <_Z10debugPrintP4List+0xe>
    2215:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2216:	49                   	rex.WB
    2217:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2219:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    221c:	6c                   	ins    BYTE PTR es:[rdi],dx
    221d:	31 30                	xor    DWORD PTR [rax],esi
    221f:	30 30                	xor    BYTE PTR [rax],dh
    2221:	30 30                	xor    BYTE PTR [rax],dh
    2223:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2226:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    222a:	78 45                	js     2271 <_Z10debugPrintP4List+0x1>
    222c:	76 00                	jbe    222e <_Z13searchElementP4List8string_t+0x7e>
    222e:	5f                   	pop    rdi
    222f:	49                   	rex.WB
    2230:	4f 5f                	rex.WRXB pop r15
    2232:	77 72                	ja     22a6 <_Z10debugPrintP4List+0x36>
    2234:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    223b:	00 
    223c:	5f                   	pop    rdi
    223d:	54                   	push   rsp
    223e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    223f:	44 75 72             	rex.R jne 22b4 <_Z10debugPrintP4List+0x44>
    2242:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2245:	4e 53                	rex.WRX push rbx
    2247:	74 36                	je     227f <_Z10debugPrintP4List+0xf>
    2249:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    224c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    224e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    224f:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2253:	61                   	(bad)
    2254:	74 69                	je     22bf <_Z10debugPrintP4List+0x4f>
    2256:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2257:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2258:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    225a:	53                   	push   rbx
    225b:	74 35                	je     2292 <_Z10debugPrintP4List+0x22>
    225d:	72 61                	jb     22c0 <_Z10debugPrintP4List+0x50>
    225f:	74 69                	je     22ca <_Z10debugPrintP4List+0x5a>
    2261:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2262:	49                   	rex.WB
    2263:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2265:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2268:	6c                   	ins    BYTE PTR es:[rdi],dx
    2269:	31 30                	xor    DWORD PTR [rax],esi
    226b:	30 30                	xor    BYTE PTR [rax],dh
    226d:	30 30                	xor    BYTE PTR [rax],dh
    226f:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2272:	45 61                	rex.RB (bad)
    2274:	53                   	push   rbx
    2275:	45 52                	rex.RB push r10
    2277:	4b 53                	rex.WXB push r11
    2279:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    227c:	5f                   	pop    rdi
    227d:	5a                   	pop    rdx
    227e:	53                   	push   rbx
    227f:	74 34                	je     22b5 <_Z10debugPrintP4List+0x45>
    2281:	73 71                	jae    22f4 <_Z10debugPrintP4List+0x84>
    2283:	72 74                	jb     22f9 <_Z10debugPrintP4List+0x89>
    2285:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2289:	53                   	push   rbx
    228a:	74 34                	je     22c0 <_Z10debugPrintP4List+0x50>
    228c:	73 71                	jae    22ff <_Z10debugPrintP4List+0x8f>
    228e:	72 74                	jb     2304 <_Z10debugPrintP4List+0x94>
    2290:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    2294:	74 6f                	je     2305 <_Z10debugPrintP4List+0x95>
    2296:	62                   	(bad)
    2297:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    229a:	65 72 69             	gs jb  2306 <_Z10debugPrintP4List+0x96>
    229d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    229e:	64 31 00             	xor    DWORD PTR fs:[rax],eax
    22a1:	61                   	(bad)
    22a2:	76 65                	jbe    2309 <_Z10debugPrintP4List+0x99>
    22a4:	72 61                	jb     2307 <_Z10debugPrintP4List+0x97>
    22a6:	67 65 5f             	addr32 gs pop rdi
    22a9:	74 69                	je     2314 <_Z10debugPrintP4List+0xa4>
    22ab:	6d                   	ins    DWORD PTR es:[rdi],dx
    22ac:	65 00 73 74          	add    BYTE PTR gs:[rbx+0x74],dh
    22b0:	61                   	(bad)
    22b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22b2:	64 61                	fs (bad)
    22b4:	72 74                	jb     232a <_Z10debugPrintP4List+0xba>
    22b6:	44                   	rex.R
    22b7:	65 76 69             	gs jbe 2323 <_Z10debugPrintP4List+0xb3>
    22ba:	61                   	(bad)
    22bb:	74 69                	je     2326 <_Z10debugPrintP4List+0xb6>
    22bd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22bf:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    22c1:	6c                   	ins    BYTE PTR es:[rdi],dx
    22c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    22c3:	69 73 69 6f 6e 73 00 	imul   esi,DWORD PTR [rbx+0x69],0x736e6f
    22ca:	5f                   	pop    rdi
    22cb:	44 75 72             	rex.R jne 2340 <_Z10debugPrintP4List+0xd0>
    22ce:	31 00                	xor    DWORD PTR [rax],eax
    22d0:	5f                   	pop    rdi
    22d1:	44 75 72             	rex.R jne 2346 <_Z10debugPrintP4List+0xd6>
    22d4:	32 00                	xor    al,BYTE PTR [rax]
    22d6:	73 65                	jae    233d <_Z10debugPrintP4List+0xcd>
    22d8:	61                   	(bad)
    22d9:	72 63                	jb     233e <_Z10debugPrintP4List+0xce>
    22db:	68 5f 74 69 6d       	push   0x6d69745f
    22e0:	65 5f                	gs pop rdi
    22e2:	61                   	(bad)
    22e3:	72 72                	jb     2357 <_Z10debugPrintP4List+0xe7>
    22e5:	61                   	(bad)
    22e6:	79 00                	jns    22e8 <_Z10debugPrintP4List+0x78>
    22e8:	5f                   	pop    rdi
    22e9:	5f                   	pop    rdi
    22ea:	74 6f                	je     235b <_Z10debugPrintP4List+0xeb>
    22ec:	5f                   	pop    rdi
    22ed:	72 65                	jb     2354 <_Z10debugPrintP4List+0xe4>
    22ef:	70 00                	jo     22f1 <_Z10debugPrintP4List+0x81>
    22f1:	76 66                	jbe    2359 <_Z10debugPrintP4List+0xe9>
    22f3:	77 70                	ja     2365 <_Z10debugPrintP4List+0xf5>
    22f5:	72 69                	jb     2360 <_Z10debugPrintP4List+0xf0>
    22f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22f8:	74 66                	je     2360 <_Z10debugPrintP4List+0xf0>
    22fa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    22fd:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    2304:	74 00                	je     2306 <_Z10debugPrintP4List+0x96>
    2306:	5f                   	pop    rdi
    2307:	49                   	rex.WB
    2308:	4f 5f                	rex.WRXB pop r15
    230a:	62 75 66 5f 62       	(bad)
    230f:	61                   	(bad)
    2310:	73 65                	jae    2377 <_Z10debugPrintP4List+0x107>
    2312:	00 64 6f 75          	add    BYTE PTR [rdi+rbp*2+0x75],ah
    2316:	62                   	(bad)
    2317:	6c                   	ins    BYTE PTR es:[rdi],dx
    2318:	65 5f                	gs pop rdi
    231a:	74 00                	je     231c <_Z10debugPrintP4List+0xac>
    231c:	6c                   	ins    BYTE PTR es:[rdi],dx
    231d:	6c                   	ins    BYTE PTR es:[rdi],dx
    231e:	72 6f                	jb     238f <_Z10debugPrintP4List+0x11f>
    2320:	75 6e                	jne    2390 <_Z10debugPrintP4List+0x120>
    2322:	64 00 70 65          	add    BYTE PTR fs:[rax+0x65],dh
    2326:	72 72                	jb     239a <_Z10debugPrintP4List+0x12a>
    2328:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2329:	72 00                	jb     232b <_Z10debugPrintP4List+0xbb>
    232b:	74 65                	je     2392 <_Z10debugPrintP4List+0x122>
    232d:	73 74                	jae    23a3 <_Z10debugPrintP4List+0x133>
    232f:	5f                   	pop    rdi
    2330:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2331:	61                   	(bad)
    2332:	6d                   	ins    DWORD PTR es:[rdi],dx
    2333:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    2337:	73 73                	jae    23ac <_Z10debugPrintP4List+0x13c>
    2339:	70 6e                	jo     23a9 <_Z10debugPrintP4List+0x139>
    233b:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    233e:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    2343:	5f                   	pop    rdi
    2344:	70 61                	jo     23a7 <_Z10debugPrintP4List+0x137>
    2346:	64 35 00 73 65 74    	fs xor eax,0x74657300
    234c:	76 62                	jbe    23b0 <_Z10debugPrintP4List+0x140>
    234e:	75 66                	jne    23b6 <_Z10debugPrintP4List+0x146>
    2350:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2353:	65 72 69             	gs jb  23bf <_Z10debugPrintP4List+0x14f>
    2356:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2357:	64 00 72 65          	add    BYTE PTR fs:[rdx+0x65],dh
    235b:	6d                   	ins    DWORD PTR es:[rdi],dx
    235c:	71 75                	jno    23d3 <_Z10debugPrintP4List+0x163>
    235e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    235f:	00 6d 6b             	add    BYTE PTR [rbp+0x6b],ch
    2362:	74 69                	je     23cd <_Z10debugPrintP4List+0x15d>
    2364:	6d                   	ins    DWORD PTR es:[rdi],dx
    2365:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2369:	53                   	push   rbx
    236a:	74 35                	je     23a1 <_Z10debugPrintP4List+0x131>
    236c:	61                   	(bad)
    236d:	74 61                	je     23d0 <_Z10debugPrintP4List+0x160>
    236f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2370:	32 65 65             	xor    ah,BYTE PTR [rbp+0x65]
    2373:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2376:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    2379:	65 73 74             	gs jae 23f0 <_Z10debugPrintP4List+0x180>
    237c:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    237e:	6c                   	ins    BYTE PTR es:[rdi],dx
    237f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2380:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2387:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    238a:	4f 5f                	rex.WRXB pop r15
    238c:	46                   	rex.RX
    238d:	49                   	rex.WB
    238e:	4c                   	rex.WR
    238f:	45 50                	rex.RB push r8
    2391:	46 6a 38             	rex.RX push 0x38
    2394:	73 74                	jae    240a <_Z10debugPrintP4List+0x19a>
    2396:	72 69                	jb     2401 <_Z10debugPrintP4List+0x191>
    2398:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2399:	67 5f                	addr32 pop rdi
    239b:	74 45                	je     23e2 <_Z10debugPrintP4List+0x172>
    239d:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    23a1:	74 44                	je     23e7 <_Z10debugPrintP4List+0x177>
    23a3:	61                   	(bad)
    23a4:	74 61                	je     2407 <_Z10debugPrintP4List+0x197>
    23a6:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    23aa:	65 5f                	gs pop rdi
    23ac:	73 69                	jae    2417 <_Z10debugPrintP4List+0x1a7>
    23ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23af:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    23b2:	65 70 6f             	gs jo  2424 <_Z10debugPrintP4List+0x1b4>
    23b5:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    23b8:	7a 65                	jp     241f <_Z10debugPrintP4List+0x1af>
    23ba:	72 6f                	jb     242b <_Z10debugPrintP4List+0x1bb>
    23bc:	00 6f 76             	add    BYTE PTR [rdi+0x76],ch
    23bf:	65 72 66             	gs jb  2428 <_Z10debugPrintP4List+0x1b8>
    23c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    23c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23c4:	77 5f                	ja     2425 <_Z10debugPrintP4List+0x1b5>
    23c6:	61                   	(bad)
    23c7:	72 67                	jb     2430 <_Z10debugPrintP4List+0x1c0>
    23c9:	5f                   	pop    rdi
    23ca:	61                   	(bad)
    23cb:	72 65                	jb     2432 <_Z10debugPrintP4List+0x1c2>
    23cd:	61                   	(bad)
    23ce:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    23d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23d2:	61                   	(bad)
    23d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    23d4:	65 00 5f 66          	add    BYTE PTR gs:[rdi+0x66],bl
    23d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    23d9:	61                   	(bad)
    23da:	67 73 00             	addr32 jae 23dd <_Z10debugPrintP4List+0x16d>
    23dd:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    23e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    23e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23e3:	5f                   	pop    rdi
    23e4:	74 79                	je     245f <_Z10debugPrintP4List+0x1ef>
    23e6:	70 65                	jo     244d <_Z10debugPrintP4List+0x1dd>
    23e8:	3c 73                	cmp    al,0x73
    23ea:	74 64                	je     2450 <_Z10debugPrintP4List+0x1e0>
    23ec:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23ee:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    23f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23f4:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    23f6:	64 75 72             	fs jne 246b <_Z10debugPrintP4List+0x1fb>
    23f9:	61                   	(bad)
    23fa:	74 69                	je     2465 <_Z10debugPrintP4List+0x1f5>
    23fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23fd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23fe:	3c 6c                	cmp    al,0x6c
    2400:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2401:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2402:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2406:	74 2c                	je     2434 <_Z10debugPrintP4List+0x1c4>
    2408:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    240b:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    240e:	72 61                	jb     2471 <_Z10debugPrintP4List+0x201>
    2410:	74 69                	je     247b <_Z10debugPrintP4List+0x20b>
    2412:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2413:	3c 31                	cmp    al,0x31
    2415:	2c 20                	sub    al,0x20
    2417:	31 30                	xor    DWORD PTR [rax],esi
    2419:	30 30                	xor    BYTE PTR [rax],dh
    241b:	30 30                	xor    BYTE PTR [rax],dh
    241d:	30 30                	xor    BYTE PTR [rax],dh
    241f:	30 30                	xor    BYTE PTR [rax],dh
    2421:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2424:	2c 20                	sub    al,0x20
    2426:	73 74                	jae    249c <_Z10debugPrintP4List+0x22c>
    2428:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    242b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    242e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    242f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2430:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2431:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2433:	64 75 72             	fs jne 24a8 <_Z8readFilePKcPm+0x8>
    2436:	61                   	(bad)
    2437:	74 69                	je     24a2 <_Z8readFilePKcPm+0x2>
    2439:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    243a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243b:	3c 6c                	cmp    al,0x6c
    243d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    243e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    243f:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2443:	74 2c                	je     2471 <_Z10debugPrintP4List+0x201>
    2445:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2448:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    244b:	72 61                	jb     24ae <_Z8readFilePKcPm+0xe>
    244d:	74 69                	je     24b8 <_Z8readFilePKcPm+0x18>
    244f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2450:	3c 31                	cmp    al,0x31
    2452:	2c 20                	sub    al,0x20
    2454:	31 30                	xor    DWORD PTR [rax],esi
    2456:	30 30                	xor    BYTE PTR [rax],dh
    2458:	30 30                	xor    BYTE PTR [rax],dh
    245a:	30 30                	xor    BYTE PTR [rax],dh
    245c:	30 30                	xor    BYTE PTR [rax],dh
    245e:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2461:	20 3e                	and    BYTE PTR [rsi],bh
    2463:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2466:	53                   	push   rbx
    2467:	74 35                	je     249e <_Z10debugPrintP4List+0x22e>
    2469:	66 72 65             	data16 jb 24d1 <_Z8readFilePKcPm+0x31>
    246c:	78 70                	js     24de <_Z8readFilePKcPm+0x3e>
    246e:	66 50                	push   ax
    2470:	69 00 5f 44 65 6e    	imul   eax,DWORD PTR [rax],0x6e65445f
    2476:	49 73 4f             	rex.WB jae 24c8 <_Z8readFilePKcPm+0x28>
    2479:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    247a:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    247e:	53                   	push   rbx
    247f:	74 35                	je     24b6 <_Z8readFilePKcPm+0x16>
    2481:	61                   	(bad)
    2482:	74 61                	je     24e5 <_Z8readFilePKcPm+0x45>
    2484:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2485:	68 65 00 5f 5a       	push   0x5a5f0065
    248a:	53                   	push   rbx
    248b:	74 35                	je     24c2 <_Z8readFilePKcPm+0x22>
    248d:	61                   	(bad)
    248e:	74 61                	je     24f1 <_Z8readFilePKcPm+0x51>
    2490:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2491:	68 66 00 5f 5a       	push   0x5a5f0066
    2496:	53                   	push   rbx
    2497:	74 34                	je     24cd <_Z8readFilePKcPm+0x2d>
    2499:	61                   	(bad)
    249a:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    249d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    24a1:	53                   	push   rbx
    24a2:	74 34                	je     24d8 <_Z8readFilePKcPm+0x38>
    24a4:	61                   	(bad)
    24a5:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    24a8:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    24ac:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    24b0:	6b 5f 74 00          	imul   ebx,DWORD PTR [rdi+0x74],0x0
    24b4:	5f                   	pop    rdi
    24b5:	5f                   	pop    rdi
    24b6:	6d                   	ins    DWORD PTR es:[rdi],dx
    24b7:	61                   	(bad)
    24b8:	78 5f                	js     2519 <_Z8readFilePKcPm+0x79>
    24ba:	61                   	(bad)
    24bb:	6c                   	ins    BYTE PTR es:[rdi],dx
    24bc:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
    24c3:	77 63                	ja     2528 <_Z8readFilePKcPm+0x88>
    24c5:	73 6c                	jae    2533 <_Z8readFilePKcPm+0x93>
    24c7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    24c9:	00 63 62             	add    BYTE PTR [rbx+0x62],ah
    24cc:	72 74                	jb     2542 <_Z8readFilePKcPm+0xa2>
    24ce:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    24d1:	53                   	push   rbx
    24d2:	74 37                	je     250b <_Z8readFilePKcPm+0x6b>
    24d4:	73 69                	jae    253f <_Z8readFilePKcPm+0x9f>
    24d6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    24d8:	62 69 74 65 00       	(bad)
    24dd:	67 65 74 63          	addr32 gs je 2544 <_Z8readFilePKcPm+0xa4>
    24e1:	68 61 72 00 5f       	push   0x5f007261
    24e6:	5a                   	pop    rdx
    24e7:	53                   	push   rbx
    24e8:	74 35                	je     251f <_Z8readFilePKcPm+0x7f>
    24ea:	61                   	(bad)
    24eb:	74 61                	je     254e <_Z8readFilePKcPm+0xae>
    24ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24ee:	32 66 66             	xor    ah,BYTE PTR [rsi+0x66]
    24f1:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    24f4:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    24f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24f8:	74 00                	je     24fa <_Z8readFilePKcPm+0x5a>
    24fa:	5f                   	pop    rdi
    24fb:	5f                   	pop    rdi
    24fc:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2503:	73 74                	jae    2579 <_Z8readFilePKcPm+0xd9>
    2505:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2508:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    250b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2512:	76 77                	jbe    258b <_Z8readFilePKcPm+0xeb>
    2514:	73 63                	jae    2579 <_Z8readFilePKcPm+0xd9>
    2516:	61                   	(bad)
    2517:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2518:	66 00 61 74          	data16 add BYTE PTR [rcx+0x74],ah
    251c:	61                   	(bad)
    251d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    251e:	68 00 5f 5a 53       	push   0x535a5f00
    2523:	74 31                	je     2556 <_Z8readFilePKcPm+0xb6>
    2525:	30 6e 65             	xor    BYTE PTR [rsi+0x65],ch
    2528:	78 74                	js     259e <_Z8readFilePKcPm+0xfe>
    252a:	74 6f                	je     259b <_Z8readFilePKcPm+0xfb>
    252c:	77 61                	ja     258f <_Z8readFilePKcPm+0xef>
    252e:	72 64                	jb     2594 <_Z8readFilePKcPm+0xf4>
    2530:	65 65 00 73 63       	gs add BYTE PTR gs:[rbx+0x63],dh
    2535:	61                   	(bad)
    2536:	6c                   	ins    BYTE PTR es:[rdi],dx
    2537:	62 6c 6e             	(bad)
    253a:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    253d:	74 62                	je     25a1 <_Z8readFilePKcPm+0x101>
    253f:	75 66                	jne    25a7 <_Z8readFilePKcPm+0x107>
    2541:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    2544:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2545:	66 00 74 69 6d       	data16 add BYTE PTR [rcx+rbp*2+0x6d],dh
    254a:	65 5f                	gs pop rdi
    254c:	70 6f                	jo     25bd <_Z10countLinesPcm+0xd>
    254e:	69 6e 74 3c 73 74 64 	imul   ebp,DWORD PTR [rsi+0x74],0x6474733c
    2555:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2557:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    255a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    255c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    255d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    255f:	5f                   	pop    rdi
    2560:	56                   	push   rsi
    2561:	32 3a                	xor    bh,BYTE PTR [rdx]
    2563:	3a 73 74             	cmp    dh,BYTE PTR [rbx+0x74]
    2566:	65 61                	gs (bad)
    2568:	64 79 5f             	fs jns 25ca <_Z10countLinesPcm+0x1a>
    256b:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    256f:	6b 2c 20 73          	imul   ebp,DWORD PTR [rax+riz*1],0x73
    2573:	74 64                	je     25d9 <_Z10countLinesPcm+0x29>
    2575:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    2577:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    257a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    257c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257d:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    257f:	64 75 72             	fs jne 25f4 <_Z10countLinesPcm+0x44>
    2582:	61                   	(bad)
    2583:	74 69                	je     25ee <_Z10countLinesPcm+0x3e>
    2585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2586:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2587:	3c 6c                	cmp    al,0x6c
    2589:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    258a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    258b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    258f:	74 2c                	je     25bd <_Z10countLinesPcm+0xd>
    2591:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2594:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2597:	72 61                	jb     25fa <_Z10countLinesPcm+0x4a>
    2599:	74 69                	je     2604 <_Z10countLinesPcm+0x54>
    259b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    259c:	3c 31                	cmp    al,0x31
    259e:	2c 20                	sub    al,0x20
    25a0:	31 30                	xor    DWORD PTR [rax],esi
    25a2:	30 30                	xor    BYTE PTR [rax],dh
    25a4:	30 30                	xor    BYTE PTR [rax],dh
    25a6:	30 30                	xor    BYTE PTR [rax],dh
    25a8:	30 30                	xor    BYTE PTR [rax],dh
    25aa:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    25ad:	20 3e                	and    BYTE PTR [rsi],bh
    25af:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    25b2:	53                   	push   rbx
    25b3:	74 33                	je     25e8 <_Z10countLinesPcm+0x38>
    25b5:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25b8:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    25bc:	53                   	push   rbx
    25bd:	74 33                	je     25f2 <_Z10countLinesPcm+0x42>
    25bf:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    25c2:	66 00 63 6f          	data16 add BYTE PTR [rbx+0x6f],ah
    25c6:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c7:	6c                   	ins    BYTE PTR es:[rdi],dx
    25c8:	69 73 69 6f 6e 5f 66 	imul   esi,DWORD PTR [rbx+0x69],0x665f6e6f
    25cf:	69 6c 65 6e 61 6d 65 	imul   ebp,DWORD PTR [rbp+riz*2+0x6e],0x656d61
    25d6:	00 
    25d7:	66 69 6c 65 73 79 73 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
    25de:	74 65                	je     2645 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x25>
    25e0:	6d                   	ins    DWORD PTR es:[rdi],dx
    25e1:	00 5f 76             	add    BYTE PTR [rdi+0x76],bl
    25e4:	74 61                	je     2647 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x27>
    25e6:	62                   	(bad)
    25e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    25e8:	65 5f                	gs pop rdi
    25ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25eb:	66 66 73 65          	data16 data16 jae 2654 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x34>
    25ef:	74 00                	je     25f1 <_Z10countLinesPcm+0x41>
    25f1:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    25f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    25f4:	61                   	(bad)
    25f5:	74 5f                	je     2656 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x36>
    25f7:	74 00                	je     25f9 <_Z10countLinesPcm+0x49>
    25f9:	5f                   	pop    rdi
    25fa:	44 75 72             	rex.R jne 266f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x4f>
    25fd:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2600:	65 72 61             	gs jb  2664 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x44>
    2603:	74 6f                	je     2674 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x54>
    2605:	72 2d                	jb     2634 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x14>
    2607:	3c 6c                	cmp    al,0x6c
    2609:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    260a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    260b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    260f:	74 2c                	je     263d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1d>
    2611:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2614:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2617:	72 61                	jb     267a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x5a>
    2619:	74 69                	je     2684 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x64>
    261b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    261c:	3c 31                	cmp    al,0x31
    261e:	2c 20                	sub    al,0x20
    2620:	31 30                	xor    DWORD PTR [rax],esi
    2622:	30 30                	xor    BYTE PTR [rax],dh
    2624:	30 30                	xor    BYTE PTR [rax],dh
    2626:	30 30                	xor    BYTE PTR [rax],dh
    2628:	30 30                	xor    BYTE PTR [rax],dh
    262a:	3e 2c 20             	ds sub al,0x20
    262d:	6c                   	ins    BYTE PTR es:[rdi],dx
    262e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    262f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2630:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2634:	74 2c                	je     2662 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x42>
    2636:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2639:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    263c:	72 61                	jb     269f <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x7f>
    263e:	74 69                	je     26a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x89>
    2640:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2641:	3c 31                	cmp    al,0x31
    2643:	2c 20                	sub    al,0x20
    2645:	31 30                	xor    DWORD PTR [rax],esi
    2647:	30 30                	xor    BYTE PTR [rax],dh
    2649:	30 30                	xor    BYTE PTR [rax],dh
    264b:	30 30                	xor    BYTE PTR [rax],dh
    264d:	30 30                	xor    BYTE PTR [rax],dh
    264f:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2652:	00 69 6c             	add    BYTE PTR [rcx+0x6c],ch
    2655:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2656:	67 62                	addr32 (bad)
    2658:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    265b:	61                   	(bad)
    265c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    265d:	64 61                	fs (bad)
    265f:	72 74                	jb     26d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xb5>
    2661:	44                   	rex.R
    2662:	65 76 69             	gs jbe 26ce <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xae>
    2665:	61                   	(bad)
    2666:	74 69                	je     26d1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xb1>
    2668:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2669:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    266a:	54                   	push   rsp
    266b:	69 6d 65 00 5f 5a 53 	imul   ebp,DWORD PTR [rbp+0x65],0x535a5f00
    2672:	74 38                	je     26ac <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x8c>
    2674:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    267b:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2680:	53                   	push   rbx
    2681:	74 34                	je     26b7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x97>
    2683:	65 78 70             	gs js  26f6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xd6>
    2686:	32 65 00             	xor    ah,BYTE PTR [rbp+0x0]
    2689:	5f                   	pop    rdi
    268a:	5a                   	pop    rdx
    268b:	53                   	push   rbx
    268c:	74 34                	je     26c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xa2>
    268e:	65 78 70             	gs js  2701 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xe1>
    2691:	32 66 00             	xor    ah,BYTE PTR [rsi+0x0]
    2694:	5f                   	pop    rdi
    2695:	4e 75 6d             	rex.WRX jne 2705 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xe5>
    2698:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    269b:	77 63                	ja     2700 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xe0>
    269d:	68 62 00 61 74       	push   0x74610062
    26a2:	61                   	(bad)
    26a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26a4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    26a7:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    26ae:	5f                   	pop    rdi
    26af:	5a                   	pop    rdx
    26b0:	4e 53                	rex.WRX push rbx
    26b2:	74 35                	je     26e9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xc9>
    26b4:	72 61                	jb     2717 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xf7>
    26b6:	74 69                	je     2721 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x101>
    26b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26b9:	49                   	rex.WB
    26ba:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    26bc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    26bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    26c0:	31 30                	xor    DWORD PTR [rax],esi
    26c2:	30 30                	xor    BYTE PTR [rax],dh
    26c4:	30 30                	xor    BYTE PTR [rax],dh
    26c6:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    26c9:	33 6e 75             	xor    ebp,DWORD PTR [rsi+0x75]
    26cc:	6d                   	ins    DWORD PTR es:[rdi],dx
    26cd:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    26d1:	53                   	push   rbx
    26d2:	74 31                	je     2705 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0xe5>
    26d4:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    26d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    26d8:	65 73 73             	gs jae 274e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x12e>
    26db:	65 71 75             	gs jno 2753 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x133>
    26de:	61                   	(bad)
    26df:	6c                   	ins    BYTE PTR es:[rdi],dx
    26e0:	65 65 00 64 75 72    	gs add BYTE PTR gs:[rbp+rsi*2+0x72],ah
    26e6:	61                   	(bad)
    26e7:	74 69                	je     2752 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x132>
    26e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26eb:	5f                   	pop    rdi
    26ec:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    26ef:	74 3c                	je     272d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x10d>
    26f1:	73 74                	jae    2767 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x147>
    26f3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    26f6:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    26f9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26fb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26fc:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    26fe:	64 75 72             	fs jne 2773 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x153>
    2701:	61                   	(bad)
    2702:	74 69                	je     276d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x14d>
    2704:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2705:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2706:	3c 6c                	cmp    al,0x6c
    2708:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2709:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    270a:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    270e:	74 2c                	je     273c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x11c>
    2710:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2713:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2716:	72 61                	jb     2779 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x159>
    2718:	74 69                	je     2783 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x163>
    271a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    271b:	3c 31                	cmp    al,0x31
    271d:	2c 20                	sub    al,0x20
    271f:	31 30                	xor    DWORD PTR [rax],esi
    2721:	30 30                	xor    BYTE PTR [rax],dh
    2723:	30 30                	xor    BYTE PTR [rax],dh
    2725:	30 3e                	xor    BYTE PTR [rsi],bh
    2727:	20 3e                	and    BYTE PTR [rsi],bh
    2729:	2c 20                	sub    al,0x20
    272b:	6c                   	ins    BYTE PTR es:[rdi],dx
    272c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    272d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    272e:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2732:	74 2c                	je     2760 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x140>
    2734:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2737:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    273a:	72 61                	jb     279d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x17d>
    273c:	74 69                	je     27a7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x187>
    273e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    273f:	3c 31                	cmp    al,0x31
    2741:	2c 20                	sub    al,0x20
    2743:	31 30                	xor    DWORD PTR [rax],esi
    2745:	30 30                	xor    BYTE PTR [rax],dh
    2747:	30 30                	xor    BYTE PTR [rax],dh
    2749:	30 30                	xor    BYTE PTR [rax],dh
    274b:	30 30                	xor    BYTE PTR [rax],dh
    274d:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2750:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    2753:	73 74                	jae    27c9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a9>
    2755:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2756:	6c                   	ins    BYTE PTR es:[rdi],dx
    2757:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    275b:	74 5f                	je     27bc <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19c>
    275d:	70 5f                	jo     27be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x19e>
    275f:	73 65                	jae    27c6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a6>
    2761:	70 5f                	jo     27c2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1a2>
    2763:	62 79 5f 73 70       	(bad)
    2768:	61                   	(bad)
    2769:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    276c:	5f                   	pop    rdi
    276d:	5a                   	pop    rdx
    276e:	53                   	push   rbx
    276f:	74 38                	je     27a9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x189>
    2771:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2778:	65 64 00 61 76       	gs add BYTE PTR fs:[rcx+0x76],ah
    277d:	65 72 61             	gs jb  27e1 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1c1>
    2780:	67 65 5f             	addr32 gs pop rdi
    2783:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2786:	6c                   	ins    BYTE PTR es:[rdi],dx
    2787:	69 73 69 6f 6e 00 5f 	imul   esi,DWORD PTR [rbx+0x69],0x5f006e6f
    278e:	5a                   	pop    rdx
    278f:	53                   	push   rbx
    2790:	74 38                	je     27ca <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1aa>
    2792:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2799:	65 66 00 5f 5a       	data16 add BYTE PTR gs:[rdi+0x5a],bl
    279e:	53                   	push   rbx
    279f:	74 31                	je     27d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1b2>
    27a1:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    27a4:	75 6e                	jne    2814 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1f4>
    27a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27a7:	72 64                	jb     280d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ed>
    27a9:	65 72 65             	gs jb  2811 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1f1>
    27ac:	64 65 65 00 66 72    	fs gs add BYTE PTR gs:[rsi+0x72],ah
    27b2:	65 78 70             	gs js  2825 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x205>
    27b5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    27b8:	4e 53                	rex.WRX push rbx
    27ba:	74 36                	je     27f2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1d2>
    27bc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    27bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27c2:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    27c6:	61                   	(bad)
    27c7:	74 69                	je     2832 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x212>
    27c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27cb:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    27cd:	53                   	push   rbx
    27ce:	74 35                	je     2805 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1e5>
    27d0:	72 61                	jb     2833 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x213>
    27d2:	74 69                	je     283d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x21d>
    27d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27d5:	49                   	rex.WB
    27d6:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    27d8:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    27db:	6c                   	ins    BYTE PTR es:[rdi],dx
    27dc:	31 30                	xor    DWORD PTR [rax],esi
    27de:	30 30                	xor    BYTE PTR [rax],dh
    27e0:	30 30                	xor    BYTE PTR [rax],dh
    27e2:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    27e5:	45 33 6d 69          	xor    r13d,DWORD PTR [r13+0x69]
    27e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27ea:	45 76 00             	rex.RB jbe 27ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1cd>
    27ed:	77 63                	ja     2852 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x232>
    27ef:	73 73                	jae    2864 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x244>
    27f1:	74 72                	je     2865 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x245>
    27f3:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    27f6:	4f 5f                	rex.WRXB pop r15
    27f8:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    27fb:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    27ff:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    2802:	78 74                	js     2878 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x258>
    2804:	61                   	(bad)
    2805:	66 74 65             	data16 je 286d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x24d>
    2808:	72 00                	jb     280a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x1ea>
    280a:	65 78 70             	gs js  287d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x25d>
    280d:	6d                   	ins    DWORD PTR es:[rdi],dx
    280e:	31 00                	xor    DWORD PTR [rax],eax
    2810:	5f                   	pop    rdi
    2811:	5f                   	pop    rdi
    2812:	6d                   	ins    DWORD PTR es:[rdi],dx
    2813:	61                   	(bad)
    2814:	78 5f                	js     2875 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x255>
    2816:	61                   	(bad)
    2817:	6c                   	ins    BYTE PTR es:[rdi],dx
    2818:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
    281f:	5f                   	pop    rdi
    2820:	5a                   	pop    rdx
    2821:	4e 53                	rex.WRX push rbx
    2823:	74 36                	je     285b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x23b>
    2825:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2828:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2829:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    282a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    282b:	32 30                	xor    dh,BYTE PTR [rax]
    282d:	5f                   	pop    rdi
    282e:	5f                   	pop    rdi
    282f:	64 75 72             	fs jne 28a4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x284>
    2832:	61                   	(bad)
    2833:	74 69                	je     289e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x27e>
    2835:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2836:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2837:	5f                   	pop    rdi
    2838:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    283b:	74 5f                	je     289c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x27c>
    283d:	69 6d 70 6c 49 4e 53 	imul   ebp,DWORD PTR [rbp+0x70],0x534e496c
    2844:	5f                   	pop    rdi
    2845:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2849:	61                   	(bad)
    284a:	74 69                	je     28b5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x295>
    284c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    284d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    284e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2850:	53                   	push   rbx
    2851:	74 35                	je     2888 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x268>
    2853:	72 61                	jb     28b6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x296>
    2855:	74 69                	je     28c0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2a0>
    2857:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2858:	49                   	rex.WB
    2859:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    285b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    285e:	6c                   	ins    BYTE PTR es:[rdi],dx
    285f:	31 30                	xor    DWORD PTR [rax],esi
    2861:	30 30                	xor    BYTE PTR [rax],dh
    2863:	30 30                	xor    BYTE PTR [rax],dh
    2865:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2868:	45                   	rex.RB
    2869:	45 53                	rex.RB push r11
    286b:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    286e:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2870:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2873:	6c                   	ins    BYTE PTR es:[rdi],dx
    2874:	31 30                	xor    DWORD PTR [rax],esi
    2876:	30 30                	xor    BYTE PTR [rax],dh
    2878:	45                   	rex.RB
    2879:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    287b:	4c 62 31 45 4c 62 30 	rex.WR vpunpckldq zmm14{k4},zmm7,ZMMWORD PTR [rax]
    2882:	45                   	rex.RB
    2883:	45                   	rex.RB
    2884:	36 5f                	ss pop rdi
    2886:	5f                   	pop    rdi
    2887:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    288a:	74 49                	je     28d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b5>
    288c:	6c                   	ins    BYTE PTR es:[rdi],dx
    288d:	53                   	push   rbx
    288e:	32 5f 49             	xor    bl,BYTE PTR [rdi+0x49]
    2891:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2893:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2896:	6c                   	ins    BYTE PTR es:[rdi],dx
    2897:	31 30                	xor    DWORD PTR [rax],esi
    2899:	30 30                	xor    BYTE PTR [rax],dh
    289b:	30 30                	xor    BYTE PTR [rax],dh
    289d:	30 30                	xor    BYTE PTR [rax],dh
    289f:	30 30                	xor    BYTE PTR [rax],dh
    28a1:	45                   	rex.RB
    28a2:	45                   	rex.RB
    28a3:	45                   	rex.RB
    28a4:	45 53                	rex.RB push r11
    28a6:	34 5f                	xor    al,0x5f
    28a8:	52                   	push   rdx
    28a9:	4b                   	rex.WXB
    28aa:	4e 53                	rex.WRX push rbx
    28ac:	31 5f 49             	xor    DWORD PTR [rdi+0x49],ebx
    28af:	54                   	push   rsp
    28b0:	5f                   	pop    rdi
    28b1:	54                   	push   rsp
    28b2:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    28b5:	45 00 5f 43          	add    BYTE PTR [r15+0x43],r11b
    28b9:	6c                   	ins    BYTE PTR es:[rdi],dx
    28ba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28bb:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    28be:	77 63                	ja     2923 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x303>
    28c0:	73 72                	jae    2934 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x314>
    28c2:	74 6f                	je     2933 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x313>
    28c4:	6d                   	ins    DWORD PTR es:[rdi],dx
    28c5:	62 73 00 5f 5f       	(bad)
    28ca:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    28d1:	73 74                	jae    2947 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x327>
    28d3:	31 36                	xor    DWORD PTR [rsi],esi
    28d5:	5f                   	pop    rdi
    28d6:	74 00                	je     28d8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2b8>
    28d8:	5f                   	pop    rdi
    28d9:	66 72 65             	data16 jb 2941 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x321>
    28dc:	65 72 65             	gs jb  2944 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x324>
    28df:	73 5f                	jae    2940 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x320>
    28e1:	62 75 66 00 74       	(bad)
    28e6:	6d                   	ins    DWORD PTR es:[rdi],dx
    28e7:	5f                   	pop    rdi
    28e8:	77 64                	ja     294e <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x32e>
    28ea:	61                   	(bad)
    28eb:	79 00                	jns    28ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x2cd>
    28ed:	5f                   	pop    rdi
    28ee:	5a                   	pop    rdx
    28ef:	53                   	push   rbx
    28f0:	74 31                	je     2923 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x303>
    28f2:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    28f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    28f6:	65 73 73             	gs jae 296c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x34c>
    28f9:	65 71 75             	gs jno 2971 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x351>
    28fc:	61                   	(bad)
    28fd:	6c                   	ins    BYTE PTR es:[rdi],dx
    28fe:	66 66 00 5f 5f       	data16 data16 add BYTE PTR [rdi+0x5f],bl
    2903:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    2906:	74 3c                	je     2944 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x324>
    2908:	6c                   	ins    BYTE PTR es:[rdi],dx
    2909:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    290a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    290b:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    290f:	74 2c                	je     293d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x31d>
    2911:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2914:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2917:	72 61                	jb     297a <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x35a>
    2919:	74 69                	je     2984 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x364>
    291b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    291c:	3c 31                	cmp    al,0x31
    291e:	2c 20                	sub    al,0x20
    2920:	31 30                	xor    DWORD PTR [rax],esi
    2922:	30 30                	xor    BYTE PTR [rax],dh
    2924:	30 30                	xor    BYTE PTR [rax],dh
    2926:	30 30                	xor    BYTE PTR [rax],dh
    2928:	30 30                	xor    BYTE PTR [rax],dh
    292a:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    292d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2930:	53                   	push   rbx
    2931:	74 35                	je     2968 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x348>
    2933:	68 79 70 6f 74       	push   0x746f7079
    2938:	66 66 66 00 74 65 73 	data16 data16 data16 add BYTE PTR [rbp+riz*2+0x73],dh
    293f:	74 5f                	je     29a0 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x380>
    2941:	61                   	(bad)
    2942:	6d                   	ins    DWORD PTR es:[rdi],dx
    2943:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2944:	75 6e                	jne    29b4 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x394>
    2946:	74 00                	je     2948 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x328>
    2948:	6d                   	ins    DWORD PTR es:[rdi],dx
    2949:	62 73 69 6e 69       	(bad)
    294e:	74 00                	je     2950 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x330>
    2950:	61                   	(bad)
    2951:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2954:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    2958:	79 64                	jns    29be <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x39e>
    295a:	61                   	(bad)
    295b:	79 00                	jns    295d <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x33d>
    295d:	5f                   	pop    rdi
    295e:	5a                   	pop    rdx
    295f:	53                   	push   rbx
    2960:	74 39                	je     299b <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x37b>
    2962:	69 73 67 72 65 61 74 	imul   esi,DWORD PTR [rbx+0x67],0x74616572
    2969:	65 72 66             	gs jb  29d2 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b2>
    296c:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    2970:	73 74                	jae    29e6 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3c6>
    2972:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2973:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    2977:	73 74                	jae    29ed <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3cd>
    2979:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    297a:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    297e:	4e 53                	rex.WRX push rbx
    2980:	74 36                	je     29b8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x398>
    2982:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2985:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2986:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2987:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2988:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    298c:	61                   	(bad)
    298d:	74 69                	je     29f8 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d8>
    298f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2990:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2991:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2993:	53                   	push   rbx
    2994:	74 35                	je     29cb <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3ab>
    2996:	72 61                	jb     29f9 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d9>
    2998:	74 69                	je     2a03 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3e3>
    299a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    299b:	49                   	rex.WB
    299c:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    299e:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    29a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    29a2:	31 30                	xor    DWORD PTR [rax],esi
    29a4:	30 30                	xor    BYTE PTR [rax],dh
    29a6:	30 30                	xor    BYTE PTR [rax],dh
    29a8:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    29ab:	45                   	rex.RB
    29ac:	43 34 49             	rex.XB xor al,0x49
    29af:	6c                   	ins    BYTE PTR es:[rdi],dx
    29b0:	76 45                	jbe    29f7 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3d7>
    29b2:	45 52                	rex.RB push r10
    29b4:	4b 54                	rex.WXB push r12
    29b6:	5f                   	pop    rdi
    29b7:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    29ba:	69 6e 00 77 63 73 74 	imul   ebp,DWORD PTR [rsi+0x0],0x74736377
    29c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29c2:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    29c5:	5f                   	pop    rdi
    29c6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    29c9:	31 31                	xor    DWORD PTR [rcx],esi
    29cb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    29ce:	66 70 6f             	data16 jo 2a40 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x420>
    29d1:	73 5f                	jae    2a32 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x412>
    29d3:	74 00                	je     29d5 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3b5>
    29d5:	5f                   	pop    rdi
    29d6:	5a                   	pop    rdx
    29d7:	4e 53                	rex.WRX push rbx
    29d9:	74 36                	je     2a11 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x3f1>
    29db:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    29de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29e1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    29e5:	61                   	(bad)
    29e6:	74 69                	je     2a51 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x431>
    29e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29ea:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    29ec:	53                   	push   rbx
    29ed:	74 35                	je     2a24 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x404>
    29ef:	72 61                	jb     2a52 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x432>
    29f1:	74 69                	je     2a5c <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x43c>
    29f3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    29f4:	49                   	rex.WB
    29f5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    29f7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    29fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    29fb:	31 30                	xor    DWORD PTR [rax],esi
    29fd:	30 30                	xor    BYTE PTR [rax],dh
    29ff:	30 30                	xor    BYTE PTR [rax],dh
    2a01:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a04:	45                   	rex.RB
    2a05:	64 56                	fs push rsi
    2a07:	45 52                	rex.RB push r10
    2a09:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    2a0b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2a0e:	65 72 61             	gs jb  2a72 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x452>
    2a11:	74 6f                	je     2a82 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2>
    2a13:	72 2b                	jb     2a40 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x420>
    2a15:	3d 00 5f 5f 46       	cmp    eax,0x465f5f00
    2a1a:	49                   	rex.WB
    2a1b:	4c                   	rex.WR
    2a1c:	45 00 61 63          	add    BYTE PTR [r9+0x63],r12b
    2a20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a21:	73 68                	jae    2a8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xb>
    2a23:	00 74 72 75          	add    BYTE PTR [rdx+rsi*2+0x75],dh
    2a27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a28:	63 00                	movsxd eax,DWORD PTR [rax]
    2a2a:	5f                   	pop    rdi
    2a2b:	5f                   	pop    rdi
    2a2c:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    2a33:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    2a36:	4f 5f                	rex.WRXB pop r15
    2a38:	62 61 63 6b 75       	(bad)
    2a3d:	70 5f                	jo     2a9e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1e>
    2a3f:	62 61 73 65 00       	(bad)
    2a44:	73 65                	jae    2aab <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2b>
    2a46:	74 6c                	je     2ab4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x34>
    2a48:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a49:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    2a4c:	65 00 5f 73          	add    BYTE PTR gs:[rdi+0x73],bl
    2a50:	68 6f 72 74 62       	push   0x6274726f
    2a55:	75 66                	jne    2abd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d>
    2a57:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    2a5a:	74 69                	je     2ac5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x45>
    2a5c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a5d:	3c 31                	cmp    al,0x31
    2a5f:	2c 20                	sub    al,0x20
    2a61:	31 30                	xor    DWORD PTR [rax],esi
    2a63:	30 30                	xor    BYTE PTR [rax],dh
    2a65:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    2a69:	4e 53                	rex.WRX push rbx
    2a6b:	74 36                	je     2aa3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x23>
    2a6d:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2a70:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a71:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a72:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a73:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2a77:	61                   	(bad)
    2a78:	74 69                	je     2ae3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x63>
    2a7a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a7c:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2a7e:	53                   	push   rbx
    2a7f:	74 35                	je     2ab6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x36>
    2a81:	72 61                	jb     2ae4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x64>
    2a83:	74 69                	je     2aee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x6e>
    2a85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a86:	49                   	rex.WB
    2a87:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2a89:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2a8c:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a8d:	31 30                	xor    DWORD PTR [rax],esi
    2a8f:	30 30                	xor    BYTE PTR [rax],dh
    2a91:	30 30                	xor    BYTE PTR [rax],dh
    2a93:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2a96:	45                   	rex.RB
    2a97:	36 5f                	ss pop rdi
    2a99:	53                   	push   rbx
    2a9a:	5f                   	pop    rdi
    2a9b:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2aa0:	6c                   	ins    BYTE PTR es:[rdi],dx
    2aa1:	00 77 69             	add    BYTE PTR [rdi+0x69],dh
    2aa4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa5:	74 5f                	je     2b06 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x86>
    2aa7:	74 00                	je     2aa9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x29>
    2aa9:	5f                   	pop    rdi
    2aaa:	5a                   	pop    rdx
    2aab:	4e                   	rex.WRX
    2aac:	4b 53                	rex.WXB push r11
    2aae:	74 36                	je     2ae6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x66>
    2ab0:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2ab3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ab5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab6:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2aba:	61                   	(bad)
    2abb:	74 69                	je     2b26 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa6>
    2abd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2abe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2abf:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2ac1:	53                   	push   rbx
    2ac2:	74 35                	je     2af9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x79>
    2ac4:	72 61                	jb     2b27 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xa7>
    2ac6:	74 69                	je     2b31 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xb1>
    2ac8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ac9:	49                   	rex.WB
    2aca:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2acc:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2acf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ad0:	31 30                	xor    DWORD PTR [rax],esi
    2ad2:	30 30                	xor    BYTE PTR [rax],dh
    2ad4:	30 30                	xor    BYTE PTR [rax],dh
    2ad6:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    2ad9:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    2adb:	67 45 76 00          	addr32 rex.RB jbe 2adf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x5f>
    2adf:	5f                   	pop    rdi
    2ae0:	5a                   	pop    rdx
    2ae1:	53                   	push   rbx
    2ae2:	74 31                	je     2b15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x95>
    2ae4:	31 69 73             	xor    DWORD PTR [rcx+0x73],ebp
    2ae7:	75 6e                	jne    2b57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd7>
    2ae9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aea:	72 64                	jb     2b50 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd0>
    2aec:	65 72 65             	gs jb  2b54 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd4>
    2aef:	64 66 66 00 74 69 6d 	data16 data16 add BYTE PTR fs:[rcx+rbp*2+0x6d],dh
    2af6:	65 73 70             	gs jae 2b69 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xe9>
    2af9:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    2afd:	65 74 00             	gs je  2b00 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x80>
    2b00:	5f                   	pop    rdi
    2b01:	5f                   	pop    rdi
    2b02:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b03:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    2b08:	74 00                	je     2b0a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x8a>
    2b0a:	5f                   	pop    rdi
    2b0b:	5a                   	pop    rdx
    2b0c:	4e 53                	rex.WRX push rbx
    2b0e:	74 36                	je     2b46 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xc6>
    2b10:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b13:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b14:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b16:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b1a:	61                   	(bad)
    2b1b:	74 69                	je     2b86 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x106>
    2b1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b1f:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b21:	53                   	push   rbx
    2b22:	74 35                	je     2b59 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0xd9>
    2b24:	72 61                	jb     2b87 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x107>
    2b26:	74 69                	je     2b91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x111>
    2b28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b29:	49                   	rex.WB
    2b2a:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b2c:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b2f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b30:	31 30                	xor    DWORD PTR [rax],esi
    2b32:	30 30                	xor    BYTE PTR [rax],dh
    2b34:	30 30                	xor    BYTE PTR [rax],dh
    2b36:	30 30                	xor    BYTE PTR [rax],dh
    2b38:	30 30                	xor    BYTE PTR [rax],dh
    2b3a:	45                   	rex.RB
    2b3b:	45                   	rex.RB
    2b3c:	45                   	rex.RB
    2b3d:	36 5f                	ss pop rdi
    2b3f:	53                   	push   rbx
    2b40:	5f                   	pop    rdi
    2b41:	67 63 64 45 6c       	movsxd esp,DWORD PTR [ebp+eax*2+0x6c]
    2b46:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b47:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b4a:	4e 53                	rex.WRX push rbx
    2b4c:	74 36                	je     2b84 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x104>
    2b4e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2b51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b52:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b54:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2b58:	61                   	(bad)
    2b59:	74 69                	je     2bc4 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x144>
    2b5b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b5c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b5d:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2b5f:	53                   	push   rbx
    2b60:	74 35                	je     2b97 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x117>
    2b62:	72 61                	jb     2bc5 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x145>
    2b64:	74 69                	je     2bcf <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x14f>
    2b66:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b67:	49                   	rex.WB
    2b68:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2b6a:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2b6d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b6e:	31 30                	xor    DWORD PTR [rax],esi
    2b70:	30 30                	xor    BYTE PTR [rax],dh
    2b72:	30 30                	xor    BYTE PTR [rax],dh
    2b74:	30 30                	xor    BYTE PTR [rax],dh
    2b76:	30 30                	xor    BYTE PTR [rax],dh
    2b78:	45                   	rex.RB
    2b79:	45                   	rex.RB
    2b7a:	45                   	rex.RB
    2b7b:	43 34 49             	rex.XB xor al,0x49
    2b7e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b7f:	76 45                	jbe    2bc6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x146>
    2b81:	45 52                	rex.RB push r10
    2b83:	4b 54                	rex.WXB push r12
    2b85:	5f                   	pop    rdi
    2b86:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b89:	53                   	push   rbx
    2b8a:	74 34                	je     2bc0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x140>
    2b8c:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b90:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2b94:	53                   	push   rbx
    2b95:	74 34                	je     2bcb <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x14b>
    2b97:	63 65 69             	movsxd esp,DWORD PTR [rbp+0x69]
    2b9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b9b:	66 00 66 6f          	data16 add BYTE PTR [rsi+0x6f],ah
    2b9f:	70 65                	jo     2c06 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x186>
    2ba1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ba2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ba5:	53                   	push   rbx
    2ba6:	74 36                	je     2bde <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x15e>
    2ba8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ba9:	6c                   	ins    BYTE PTR es:[rdi],dx
    2baa:	72 69                	jb     2c15 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x195>
    2bac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bad:	74 65                	je     2c14 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x194>
    2baf:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2bb2:	61                   	(bad)
    2bb3:	72 63                	jb     2c18 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x198>
    2bb5:	68 5f 66 69 6c       	push   0x6c69665f
    2bba:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2bbe:	73 77                	jae    2c37 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b7>
    2bc0:	61                   	(bad)
    2bc1:	70 70                	jo     2c33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b3>
    2bc3:	61                   	(bad)
    2bc4:	62                   	(bad)
    2bc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc6:	65 5f                	gs pop rdi
    2bc8:	64 65 74 61          	fs gs je 2c2d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1ad>
    2bcc:	69 6c 73 00 5f 5a 53 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x74535a5f
    2bd3:	74 
    2bd4:	33 6c 6f 67          	xor    ebp,DWORD PTR [rdi+rbp*2+0x67]
    2bd8:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2bdc:	53                   	push   rbx
    2bdd:	74 33                	je     2c12 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x192>
    2bdf:	6c                   	ins    BYTE PTR es:[rdi],dx
    2be0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2be1:	67 66 00 63 68       	data16 add BYTE PTR [ebx+0x68],ah
    2be6:	61                   	(bad)
    2be7:	72 33                	jb     2c1c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x19c>
    2be9:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    2bec:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    2bef:	77 69                	ja     2c5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1da>
    2bf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf2:	64 00 72 61          	add    BYTE PTR fs:[rdx+0x61],dh
    2bf6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bf7:	64 5f                	fs pop rdi
    2bf9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bfa:	75 6d                	jne    2c69 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1e9>
    2bfc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2bff:	53                   	push   rbx
    2c00:	74 34                	je     2c36 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1b6>
    2c02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c03:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c04:	67 62 65 00 5f 5a    	(bad)
    2c0a:	53                   	push   rbx
    2c0b:	74 34                	je     2c41 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1c1>
    2c0d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c0e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c0f:	67 62 66 00 5f 5a    	(bad)
    2c15:	4e 53                	rex.WRX push rbx
    2c17:	74 36                	je     2c4f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1cf>
    2c19:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2c1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c1e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c20:	69 49 4e 53 5f 33 5f 	imul   ecx,DWORD PTR [rcx+0x4e],0x5f335f53
    2c27:	56                   	push   rsi
    2c28:	32 31                	xor    dh,BYTE PTR [rcx]
    2c2a:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2c2d:	65 61                	gs (bad)
    2c2f:	64 79 5f             	fs jns 2c91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x211>
    2c32:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2c36:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2c3a:	5f                   	pop    rdi
    2c3b:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2c3f:	61                   	(bad)
    2c40:	74 69                	je     2cab <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x22b>
    2c42:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c44:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2c46:	53                   	push   rbx
    2c47:	74 35                	je     2c7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x1fe>
    2c49:	72 61                	jb     2cac <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x22c>
    2c4b:	74 69                	je     2cb6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x236>
    2c4d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c4e:	49                   	rex.WB
    2c4f:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2c51:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2c54:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c55:	31 30                	xor    DWORD PTR [rax],esi
    2c57:	30 30                	xor    BYTE PTR [rax],dh
    2c59:	30 30                	xor    BYTE PTR [rax],dh
    2c5b:	30 30                	xor    BYTE PTR [rax],dh
    2c5d:	30 30                	xor    BYTE PTR [rax],dh
    2c5f:	45                   	rex.RB
    2c60:	45                   	rex.RB
    2c61:	45                   	rex.RB
    2c62:	45 53                	rex.RB push r11
    2c64:	36 5f                	ss pop rdi
    2c66:	45                   	rex.RB
    2c67:	45                   	rex.RB
    2c68:	4e 53                	rex.WRX push rbx
    2c6a:	74 31                	je     2c9d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x21d>
    2c6c:	31 63 6f             	xor    DWORD PTR [rbx+0x6f],esp
    2c6f:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c70:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c72:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c73:	5f                   	pop    rdi
    2c74:	74 79                	je     2cef <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x26f>
    2c76:	70 65                	jo     2cdd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x25d>
    2c78:	49                   	rex.WB
    2c79:	4a 54                	rex.WX push rsp
    2c7b:	30 5f 54             	xor    BYTE PTR [rdi+0x54],bl
    2c7e:	31 5f 45             	xor    DWORD PTR [rdi+0x45],ebx
    2c81:	45 34 74             	rex.RB xor al,0x74
    2c84:	79 70                	jns    2cf6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x276>
    2c86:	65 45 52             	gs rex.RB push r10
    2c89:	4b                   	rex.WXB
    2c8a:	4e 53                	rex.WRX push rbx
    2c8c:	5f                   	pop    rdi
    2c8d:	31 30                	xor    DWORD PTR [rax],esi
    2c8f:	74 69                	je     2cfa <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x27a>
    2c91:	6d                   	ins    DWORD PTR es:[rdi],dx
    2c92:	65 5f                	gs pop rdi
    2c94:	70 6f                	jo     2d05 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x285>
    2c96:	69 6e 74 49 54 5f 53 	imul   ebp,DWORD PTR [rsi+0x74],0x535f5449
    2c9d:	38 5f 45             	cmp    BYTE PTR [rdi+0x45],bl
    2ca0:	45 52                	rex.RB push r10
    2ca2:	4b                   	rex.WXB
    2ca3:	4e 53                	rex.WRX push rbx
    2ca5:	43 5f                	rex.XB pop r15
    2ca7:	49 53                	rex.WB push r11
    2ca9:	44 5f                	rex.R pop rdi
    2cab:	53                   	push   rbx
    2cac:	39 5f 45             	cmp    DWORD PTR [rdi+0x45],ebx
    2caf:	45 00 66 6d          	add    BYTE PTR [r14+0x6d],r12b
    2cb3:	61                   	(bad)
    2cb4:	78 00                	js     2cb6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x236>
    2cb6:	5f                   	pop    rdi
    2cb7:	5a                   	pop    rdx
    2cb8:	4e                   	rex.WRX
    2cb9:	4b 53                	rex.WXB push r11
    2cbb:	74 36                	je     2cf3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x273>
    2cbd:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2cc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cc2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cc3:	31 30                	xor    DWORD PTR [rax],esi
    2cc5:	74 69                	je     2d30 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2b0>
    2cc7:	6d                   	ins    DWORD PTR es:[rdi],dx
    2cc8:	65 5f                	gs pop rdi
    2cca:	70 6f                	jo     2d3b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2bb>
    2ccc:	69 6e 74 49 4e 53 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f534e49
    2cd3:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    2cd6:	32 31                	xor    dh,BYTE PTR [rcx]
    2cd8:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    2cdb:	65 61                	gs (bad)
    2cdd:	64 79 5f             	fs jns 2d3f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2bf>
    2ce0:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    2ce4:	6b 45 4e 53          	imul   eax,DWORD PTR [rbp+0x4e],0x53
    2ce8:	5f                   	pop    rdi
    2ce9:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2ced:	61                   	(bad)
    2cee:	74 69                	je     2d59 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2d9>
    2cf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cf2:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2cf4:	53                   	push   rbx
    2cf5:	74 35                	je     2d2c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ac>
    2cf7:	72 61                	jb     2d5a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2da>
    2cf9:	74 69                	je     2d64 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e4>
    2cfb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cfc:	49                   	rex.WB
    2cfd:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2cff:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2d02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2d03:	31 30                	xor    DWORD PTR [rax],esi
    2d05:	30 30                	xor    BYTE PTR [rax],dh
    2d07:	30 30                	xor    BYTE PTR [rax],dh
    2d09:	30 30                	xor    BYTE PTR [rax],dh
    2d0b:	30 30                	xor    BYTE PTR [rax],dh
    2d0d:	45                   	rex.RB
    2d0e:	45                   	rex.RB
    2d0f:	45                   	rex.RB
    2d10:	45                   	rex.RB
    2d11:	45 31 36             	xor    DWORD PTR [r14],r14d
    2d14:	74 69                	je     2d7f <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2ff>
    2d16:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d17:	65 5f                	gs pop rdi
    2d19:	73 69                	jae    2d84 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x304>
    2d1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d1c:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2d1f:	65 70 6f             	gs jo  2d91 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x311>
    2d22:	63 68 45             	movsxd ebp,DWORD PTR [rax+0x45]
    2d25:	76 00                	jbe    2d27 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2a7>
    2d27:	5f                   	pop    rdi
    2d28:	5a                   	pop    rdx
    2d29:	53                   	push   rbx
    2d2a:	74 36                	je     2d62 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x2e2>
    2d2c:	69 73 6c 65 73 73 66 	imul   esi,DWORD PTR [rbx+0x6c],0x66737365
    2d33:	66 00 5f 4e          	data16 add BYTE PTR [rdi+0x4e],bl
    2d37:	75 6d                	jne    2da6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x326>
    2d39:	49 73 4f             	rex.WB jae 2d8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x30b>
    2d3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d3d:	65 00 6c 67 61       	add    BYTE PTR gs:[rdi+riz*2+0x61],ch
    2d42:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d43:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d44:	61                   	(bad)
    2d45:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d48:	53                   	push   rbx
    2d49:	74 36                	je     2d81 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x301>
    2d4b:	69 73 6c 65 73 73 64 	imul   esi,DWORD PTR [rbx+0x6c],0x64737365
    2d52:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2d56:	53                   	push   rbx
    2d57:	74 35                	je     2d8e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x30e>
    2d59:	69 73 69 6e 66 64 00 	imul   esi,DWORD PTR [rbx+0x69],0x64666e
    2d60:	5f                   	pop    rdi
    2d61:	5a                   	pop    rdx
    2d62:	53                   	push   rbx
    2d63:	74 35                	je     2d9a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x31a>
    2d65:	69 73 69 6e 66 65 00 	imul   esi,DWORD PTR [rbx+0x69],0x65666e
    2d6c:	5f                   	pop    rdi
    2d6d:	5a                   	pop    rdx
    2d6e:	53                   	push   rbx
    2d6f:	74 35                	je     2da6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x326>
    2d71:	61                   	(bad)
    2d72:	73 69                	jae    2ddd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x35d>
    2d74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d75:	68 65 00 5f 5a       	push   0x5a5f0065
    2d7a:	53                   	push   rbx
    2d7b:	74 35                	je     2db2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x332>
    2d7d:	61                   	(bad)
    2d7e:	73 69                	jae    2de9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x369>
    2d80:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d81:	68 66 00 77 63       	push   0x63770066
    2d86:	73 66                	jae    2dee <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x36e>
    2d88:	74 69                	je     2df3 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x373>
    2d8a:	6d                   	ins    DWORD PTR es:[rdi],dx
    2d8b:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2d8f:	53                   	push   rbx
    2d90:	74 34                	je     2dc6 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x346>
    2d92:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2d95:	68 65 00 5f 5a       	push   0x5a5f0065
    2d9a:	53                   	push   rbx
    2d9b:	74 34                	je     2dd1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x351>
    2d9d:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    2da0:	68 66 00 66 70       	push   0x70660066
    2da5:	72 69                	jb     2e10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x390>
    2da7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2da8:	74 66                	je     2e10 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x390>
    2daa:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2dad:	65 72 61             	gs jb  2e11 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x391>
    2db0:	74 6f                	je     2e21 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3a1>
    2db2:	72 2a                	jb     2dde <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x35e>
    2db4:	3d 00 75 69 6e       	cmp    eax,0x6e697500
    2db9:	74 5f                	je     2e1a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x39a>
    2dbb:	66 61                	data16 (bad)
    2dbd:	73 74                	jae    2e33 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b3>
    2dbf:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2dc2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dc5:	69 73 5f 72 61 74 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69746172
    2dcc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dcd:	5f                   	pop    rdi
    2dce:	76 00                	jbe    2dd0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x350>
    2dd0:	66 72 65             	data16 jb 2e38 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3b8>
    2dd3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dd4:	70 65                	jo     2e3b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3bb>
    2dd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dd7:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2dda:	64 65 62 75 67 00 66 	(bad)
    2de1:	65 72 72             	gs jb  2e56 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d6>
    2de4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2de5:	72 00                	jb     2de7 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x367>
    2de7:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2dea:	72 65                	jb     2e51 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d1>
    2dec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ded:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    2df0:	73 79                	jae    2e6b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3eb>
    2df2:	6d                   	ins    DWORD PTR es:[rdi],dx
    2df3:	62 6f 6c 00 5f       	(bad)
    2df8:	5a                   	pop    rdx
    2df9:	53                   	push   rbx
    2dfa:	74 31                	je     2e2d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ad>
    2dfc:	34 69                	xor    al,0x69
    2dfe:	73 67                	jae    2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e7>
    2e00:	72 65                	jb     2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e7>
    2e02:	61                   	(bad)
    2e03:	74 65                	je     2e6a <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ea>
    2e05:	72 65                	jb     2e6c <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ec>
    2e07:	71 75                	jno    2e7e <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3fe>
    2e09:	61                   	(bad)
    2e0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e0b:	64 64 00 73 63       	fs add BYTE PTR fs:[rbx+0x63],dh
    2e10:	61                   	(bad)
    2e11:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e12:	62 6e 00 5f 5a       	(bad)
    2e17:	53                   	push   rbx
    2e18:	74 33                	je     2e4d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3cd>
    2e1a:	65 72 66             	gs jb  2e83 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x403>
    2e1d:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e21:	53                   	push   rbx
    2e22:	74 33                	je     2e57 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d7>
    2e24:	65 72 66             	gs jb  2e8d <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40d>
    2e27:	66 00 5f 46          	data16 add BYTE PTR [rdi+0x46],bl
    2e2b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e2c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e2d:	61                   	(bad)
    2e2e:	74 33                	je     2e63 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e3>
    2e30:	32 00                	xor    al,BYTE PTR [rax]
    2e32:	69 73 66 69 6e 69 74 	imul   esi,DWORD PTR [rbx+0x66],0x74696e69
    2e39:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    2e3d:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e3e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2e40:	61                   	(bad)
    2e41:	6d                   	ins    DWORD PTR es:[rdi],dx
    2e42:	65 73 00             	gs jae 2e45 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3c5>
    2e45:	5f                   	pop    rdi
    2e46:	5f                   	pop    rdi
    2e47:	73 74                	jae    2ebd <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43d>
    2e49:	61                   	(bad)
    2e4a:	74 65                	je     2eb1 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x431>
    2e4c:	00 64 75 72          	add    BYTE PTR [rbp+rsi*2+0x72],ah
    2e50:	61                   	(bad)
    2e51:	74 69                	je     2ebc <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x43c>
    2e53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e55:	3c 6c                	cmp    al,0x6c
    2e57:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e59:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2e5d:	74 2c                	je     2e8b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x40b>
    2e5f:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    2e62:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    2e65:	72 61                	jb     2ec8 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x448>
    2e67:	74 69                	je     2ed2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x452>
    2e69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e6a:	3c 31                	cmp    al,0x31
    2e6c:	2c 20                	sub    al,0x20
    2e6e:	31 30                	xor    DWORD PTR [rax],esi
    2e70:	30 30                	xor    BYTE PTR [rax],dh
    2e72:	30 30                	xor    BYTE PTR [rax],dh
    2e74:	30 30                	xor    BYTE PTR [rax],dh
    2e76:	30 30                	xor    BYTE PTR [rax],dh
    2e78:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    2e7b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    2e7e:	65 72 61             	gs jb  2ee2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x2>
    2e81:	74 6f                	je     2ef2 <_Z4testPFj8string_tE9Filenames8TestDataj+0x12>
    2e83:	72 2b                	jb     2eb0 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x430>
    2e85:	2b 00                	sub    eax,DWORD PTR [rax]
    2e87:	5f                   	pop    rdi
    2e88:	5a                   	pop    rdx
    2e89:	53                   	push   rbx
    2e8a:	74 36                	je     2ec2 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x442>
    2e8c:	69 73 6c 65 73 73 65 	imul   esi,DWORD PTR [rbx+0x6c],0x65737365
    2e93:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2e97:	53                   	push   rbx
    2e98:	74 34                	je     2ece <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x44e>
    2e9a:	72 69                	jb     2f05 <_Z4testPFj8string_tE9Filenames8TestDataj+0x25>
    2e9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e9d:	74 65                	je     2f04 <_Z4testPFj8string_tE9Filenames8TestDataj+0x24>
    2e9f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ea2:	53                   	push   rbx
    2ea3:	74 34                	je     2ed9 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x459>
    2ea5:	72 69                	jb     2f10 <_Z4testPFj8string_tE9Filenames8TestDataj+0x30>
    2ea7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ea8:	74 66                	je     2f10 <_Z4testPFj8string_tE9Filenames8TestDataj+0x30>
    2eaa:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    2ead:	61                   	(bad)
    2eae:	72 74                	jb     2f24 <_Z4testPFj8string_tE9Filenames8TestDataj+0x44>
    2eb0:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2eb3:	73 74                	jae    2f29 <_Z4testPFj8string_tE9Filenames8TestDataj+0x49>
    2eb5:	72 65                	jb     2f1c <_Z4testPFj8string_tE9Filenames8TestDataj+0x3c>
    2eb7:	61                   	(bad)
    2eb8:	6d                   	ins    DWORD PTR es:[rdi],dx
    2eb9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2ebc:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2ec3:	73 74                	jae    2f39 <_Z7testAllPKcjS0_+0x9>
    2ec5:	36 34 5f             	ss xor al,0x5f
    2ec8:	74 00                	je     2eca <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x44a>
    2eca:	64 75 72             	fs jne 2f3f <_Z7testAllPKcjS0_+0xf>
    2ecd:	61                   	(bad)
    2ece:	74 69                	je     2f39 <_Z7testAllPKcjS0_+0x9>
    2ed0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ed1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed2:	3c 6c                	cmp    al,0x6c
    2ed4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ed5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ed6:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    2eda:	74 3e                	je     2f1a <_Z4testPFj8string_tE9Filenames8TestDataj+0x3a>
    2edc:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    2edf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ee0:	5f                   	pop    rdi
    2ee1:	67 72 6f             	addr32 jb 2f53 <_Z7testAllPKcjS0_+0x23>
    2ee4:	75 70                	jne    2f56 <_Z7testAllPKcjS0_+0x26>
    2ee6:	69 6e 67 00 5f 5a 32 	imul   ebp,DWORD PTR [rsi+0x67],0x325a5f00
    2eed:	37                   	(bad)
    2eee:	73 74                	jae    2f64 <_Z7testAllPKcjS0_+0x34>
    2ef0:	61                   	(bad)
    2ef1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ef2:	64 61                	fs (bad)
    2ef4:	72 74                	jb     2f6a <_Z7testAllPKcjS0_+0x3a>
    2ef6:	44                   	rex.R
    2ef7:	65 76 69             	gs jbe 2f63 <_Z7testAllPKcjS0_+0x33>
    2efa:	61                   	(bad)
    2efb:	74 69                	je     2f66 <_Z7testAllPKcjS0_+0x36>
    2efd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2efe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2eff:	43 6f                	rex.XB outs dx,DWORD PTR ds:[rsi]
    2f01:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f02:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f03:	69 73 69 6f 6e 73 50 	imul   esi,DWORD PTR [rbx+0x69],0x50736e6f
    2f0a:	37                   	(bad)
    2f0b:	48 61                	rex.W (bad)
    2f0d:	73 68                	jae    2f77 <_Z7testAllPKcjS0_+0x47>
    2f0f:	4d 61                	rex.WRB (bad)
    2f11:	70 66                	jo     2f79 <_Z7testAllPKcjS0_+0x49>
    2f13:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2f16:	75 69                	jne    2f81 <_Z7testAllPKcjS0_+0x51>
    2f18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f19:	74 6d                	je     2f88 <_Z7testAllPKcjS0_+0x58>
    2f1b:	61                   	(bad)
    2f1c:	78 5f                	js     2f7d <_Z7testAllPKcjS0_+0x4d>
    2f1e:	74 00                	je     2f20 <_Z4testPFj8string_tE9Filenames8TestDataj+0x40>
    2f20:	68 79 70 6f 74       	push   0x746f7079
    2f25:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f28:	53                   	push   rbx
    2f29:	74 31                	je     2f5c <_Z7testAllPKcjS0_+0x2c>
    2f2b:	34 69                	xor    al,0x69
    2f2d:	73 67                	jae    2f96 <_Z7testAllPKcjS0_+0x66>
    2f2f:	72 65                	jb     2f96 <_Z7testAllPKcjS0_+0x66>
    2f31:	61                   	(bad)
    2f32:	74 65                	je     2f99 <_Z7testAllPKcjS0_+0x69>
    2f34:	72 65                	jb     2f9b <_Z7testAllPKcjS0_+0x6b>
    2f36:	71 75                	jno    2fad <_Z7testAllPKcjS0_+0x7d>
    2f38:	61                   	(bad)
    2f39:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f3a:	65 65 00 5f 5a       	gs add BYTE PTR gs:[rdi+0x5a],bl
    2f3f:	53                   	push   rbx
    2f40:	74 35                	je     2f77 <_Z7testAllPKcjS0_+0x47>
    2f42:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f44:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f45:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f46:	72 65                	jb     2fad <_Z7testAllPKcjS0_+0x7d>
    2f48:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f4b:	53                   	push   rbx
    2f4c:	74 35                	je     2f83 <_Z7testAllPKcjS0_+0x53>
    2f4e:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    2f50:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f52:	72 66                	jb     2fba <_Z7testAllPKcjS0_+0x8a>
    2f54:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2f57:	4e                   	rex.WRX
    2f58:	4b 53                	rex.WXB push r11
    2f5a:	74 36                	je     2f92 <_Z7testAllPKcjS0_+0x62>
    2f5c:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2f5f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f62:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    2f66:	61                   	(bad)
    2f67:	74 69                	je     2fd2 <_Z7testAllPKcjS0_+0xa2>
    2f69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f6b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    2f6d:	53                   	push   rbx
    2f6e:	74 35                	je     2fa5 <_Z7testAllPKcjS0_+0x75>
    2f70:	72 61                	jb     2fd3 <_Z7testAllPKcjS0_+0xa3>
    2f72:	74 69                	je     2fdd <_Z7testAllPKcjS0_+0xad>
    2f74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f75:	49                   	rex.WB
    2f76:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    2f78:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    2f7b:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f7c:	31 30                	xor    DWORD PTR [rax],esi
    2f7e:	30 30                	xor    BYTE PTR [rax],dh
    2f80:	30 30                	xor    BYTE PTR [rax],dh
    2f82:	30 30                	xor    BYTE PTR [rax],dh
    2f84:	30 30                	xor    BYTE PTR [rax],dh
    2f86:	45                   	rex.RB
    2f87:	45                   	rex.RB
    2f88:	45 70 73             	rex.RB jo 2ffe <_Z7testAllPKcjS0_+0xce>
    2f8b:	45 76 00             	rex.RB jbe 2f8e <_Z7testAllPKcjS0_+0x5e>
    2f8e:	77 63                	ja     2ff3 <_Z7testAllPKcjS0_+0xc3>
    2f90:	73 63                	jae    2ff5 <_Z7testAllPKcjS0_+0xc5>
    2f92:	61                   	(bad)
    2f93:	74 00                	je     2f95 <_Z7testAllPKcjS0_+0x65>
    2f95:	74 6d                	je     3004 <_Z7testAllPKcjS0_+0xd4>
    2f97:	70 66                	jo     2fff <_Z7testAllPKcjS0_+0xcf>
    2f99:	69 6c 65 00 31 31 5f 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x5f5f3131
    2fa0:	5f 
    2fa1:	6d                   	ins    DWORD PTR es:[rdi],dx
    2fa2:	62 73 74 61 74       	(bad)
    2fa7:	65 5f                	gs pop rdi
    2fa9:	74 00                	je     2fab <_Z7testAllPKcjS0_+0x7b>
    2fab:	69 6e 74 5f 70 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f705f
    2fb2:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    2fb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fba:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    2fbd:	65 72 69             	gs jb  3029 <_Z7testAllPKcjS0_+0xf9>
    2fc0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fc1:	64 32 00             	xor    al,BYTE PTR fs:[rax]
    2fc4:	5f                   	pop    rdi
    2fc5:	5f                   	pop    rdi
    2fc6:	73 77                	jae    303f <_Z7testAllPKcjS0_+0x10f>
    2fc8:	61                   	(bad)
    2fc9:	70 70                	jo     303b <_Z7testAllPKcjS0_+0x10b>
    2fcb:	61                   	(bad)
    2fcc:	62                   	(bad)
    2fcd:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fce:	65 5f                	gs pop rdi
    2fd0:	77 69                	ja     303b <_Z7testAllPKcjS0_+0x10b>
    2fd2:	74 68                	je     303c <_Z7testAllPKcjS0_+0x10c>
    2fd4:	5f                   	pop    rdi
    2fd5:	64 65 74 61          	fs gs je 303a <_Z7testAllPKcjS0_+0x10a>
    2fd9:	69 6c 73 00 74 6d 5f 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x7a5f6d74
    2fe0:	7a 
    2fe1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fe2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fe3:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    2fe7:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    2fee:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    2ff1:	67 65 74 63          	addr32 gs je 3058 <_Z7testAllPKcjS0_+0x128>
    2ff5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2ff8:	4e 53                	rex.WRX push rbx
    2ffa:	74 36                	je     3032 <_Z7testAllPKcjS0_+0x102>
    2ffc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    2fff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3000:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3001:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3002:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3006:	61                   	(bad)
    3007:	74 69                	je     3072 <_Z7testAllPKcjS0_+0x142>
    3009:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    300a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    300b:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    300d:	53                   	push   rbx
    300e:	74 35                	je     3045 <_Z7testAllPKcjS0_+0x115>
    3010:	72 61                	jb     3073 <_Z7testAllPKcjS0_+0x143>
    3012:	74 69                	je     307d <_Z7testAllPKcjS0_+0x14d>
    3014:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3015:	49                   	rex.WB
    3016:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3018:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    301b:	6c                   	ins    BYTE PTR es:[rdi],dx
    301c:	31 30                	xor    DWORD PTR [rax],esi
    301e:	30 30                	xor    BYTE PTR [rax],dh
    3020:	30 30                	xor    BYTE PTR [rax],dh
    3022:	30 30                	xor    BYTE PTR [rax],dh
    3024:	30 30                	xor    BYTE PTR [rax],dh
    3026:	45                   	rex.RB
    3027:	45                   	rex.RB
    3028:	45 33 6d 61          	xor    r13d,DWORD PTR [r13+0x61]
    302c:	78 45                	js     3073 <_Z7testAllPKcjS0_+0x143>
    302e:	76 00                	jbe    3030 <_Z7testAllPKcjS0_+0x100>
    3030:	5f                   	pop    rdi
    3031:	5a                   	pop    rdx
    3032:	53                   	push   rbx
    3033:	74 35                	je     306a <_Z7testAllPKcjS0_+0x13a>
    3035:	69 6c 6f 67 62 66 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006662
    303c:	5f 
    303d:	5a                   	pop    rdx
    303e:	53                   	push   rbx
    303f:	74 33                	je     3074 <_Z7testAllPKcjS0_+0x144>
    3041:	70 6f                	jo     30b2 <_Z7testAllPKcjS0_+0x182>
    3043:	77 65                	ja     30aa <_Z7testAllPKcjS0_+0x17a>
    3045:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    3049:	72 74                	jb     30bf <_Z7testAllPKcjS0_+0x18f>
    304b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    304c:	6d                   	ins    DWORD PTR es:[rdi],dx
    304d:	62                   	(bad)
    304e:	00 6c 63 6f          	add    BYTE PTR [rbx+riz*2+0x6f],ch
    3052:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3053:	76 00                	jbe    3055 <_Z7testAllPKcjS0_+0x125>
    3055:	5f                   	pop    rdi
    3056:	5a                   	pop    rdx
    3057:	53                   	push   rbx
    3058:	74 35                	je     308f <_Z7testAllPKcjS0_+0x15f>
    305a:	69 6c 6f 67 62 65 00 	imul   ebp,DWORD PTR [rdi+rbp*2+0x67],0x5f006562
    3061:	5f 
    3062:	5a                   	pop    rdx
    3063:	53                   	push   rbx
    3064:	74 31                	je     3097 <_Z7testAllPKcjS0_+0x167>
    3066:	34 69                	xor    al,0x69
    3068:	73 67                	jae    30d1 <_Z7testAllPKcjS0_+0x1a1>
    306a:	72 65                	jb     30d1 <_Z7testAllPKcjS0_+0x1a1>
    306c:	61                   	(bad)
    306d:	74 65                	je     30d4 <_Z7testAllPKcjS0_+0x1a4>
    306f:	72 65                	jb     30d6 <_Z7testAllPKcjS0_+0x1a6>
    3071:	71 75                	jno    30e8 <_Z7testAllPKcjS0_+0x1b8>
    3073:	61                   	(bad)
    3074:	6c                   	ins    BYTE PTR es:[rdi],dx
    3075:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    307a:	31 34 74             	xor    DWORD PTR [rsp+rsi*2],esi
    307d:	65 73 74             	gs jae 30f4 <_Z7testAllPKcjS0_+0x1c4>
    3080:	53                   	push   rbx
    3081:	65 61                	gs (bad)
    3083:	72 63                	jb     30e8 <_Z7testAllPKcjS0_+0x1b8>
    3085:	68 54 69 6d 65       	push   0x656d6954
    308a:	50                   	push   rax
    308b:	38 5f 49             	cmp    BYTE PTR [rdi+0x49],bl
    308e:	4f 5f                	rex.WRXB pop r15
    3090:	46                   	rex.RX
    3091:	49                   	rex.WB
    3092:	4c                   	rex.WR
    3093:	45 50                	rex.RB push r8
    3095:	46 6a 38             	rex.RX push 0x38
    3098:	73 74                	jae    310e <_Z7testAllPKcjS0_+0x1de>
    309a:	72 69                	jb     3105 <_Z7testAllPKcjS0_+0x1d5>
    309c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    309d:	67 5f                	addr32 pop rdi
    309f:	74 45                	je     30e6 <_Z7testAllPKcjS0_+0x1b6>
    30a1:	38 54 65 73          	cmp    BYTE PTR [rbp+riz*2+0x73],dl
    30a5:	74 44                	je     30eb <_Z7testAllPKcjS0_+0x1bb>
    30a7:	61                   	(bad)
    30a8:	74 61                	je     310b <_Z7testAllPKcjS0_+0x1db>
    30aa:	6a 00                	push   0x0
    30ac:	5f                   	pop    rdi
    30ad:	49                   	rex.WB
    30ae:	4f 5f                	rex.WRXB pop r15
    30b0:	72 65                	jb     3117 <_Z7testAllPKcjS0_+0x1e7>
    30b2:	61                   	(bad)
    30b3:	64 5f                	fs pop rdi
    30b5:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30b7:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    30bb:	53                   	push   rbx
    30bc:	74 35                	je     30f3 <_Z7testAllPKcjS0_+0x1c3>
    30be:	6c                   	ins    BYTE PTR es:[rdi],dx
    30bf:	72 69                	jb     312a <_Z7testAllPKcjS0_+0x1fa>
    30c1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30c2:	74 65                	je     3129 <_Z7testAllPKcjS0_+0x1f9>
    30c4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    30c7:	73 6e                	jae    3137 <_Z7testAllPKcjS0_+0x207>
    30c9:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    30cc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    30cf:	53                   	push   rbx
    30d0:	74 39                	je     310b <_Z7testAllPKcjS0_+0x1db>
    30d2:	72 65                	jb     3139 <_Z7testAllPKcjS0_+0x209>
    30d4:	6d                   	ins    DWORD PTR es:[rdi],dx
    30d5:	61                   	(bad)
    30d6:	69 6e 64 65 72 65 65 	imul   ebp,DWORD PTR [rsi+0x64],0x65657265
    30dd:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30e0:	65 72 61             	gs jb  3144 <_Z7testAllPKcjS0_+0x214>
    30e3:	74 6f                	je     3154 <_Z7testAllPKcjS0_+0x224>
    30e5:	72 2d                	jb     3114 <_Z7testAllPKcjS0_+0x1e4>
    30e7:	2d 00 69 6e 74       	sub    eax,0x746e6900
    30ec:	5f                   	pop    rdi
    30ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30ee:	5f                   	pop    rdi
    30ef:	73 69                	jae    315a <_Z7testAllPKcjS0_+0x22a>
    30f1:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    30f3:	5f                   	pop    rdi
    30f4:	70 6f                	jo     3165 <_Z7testAllPKcjS0_+0x235>
    30f6:	73 6e                	jae    3166 <_Z7testAllPKcjS0_+0x236>
    30f8:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    30fb:	65 72 61             	gs jb  315f <_Z7testAllPKcjS0_+0x22f>
    30fe:	74 6f                	je     316f <_Z7testAllPKcjS0_+0x23f>
    3100:	72 2d                	jb     312f <_Z7testAllPKcjS0_+0x1ff>
    3102:	3d 00 5f 66 69       	cmp    eax,0x69665f00
    3107:	6c                   	ins    BYTE PTR es:[rdi],dx
    3108:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    310a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    310b:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    310e:	6c                   	ins    BYTE PTR es:[rdi],dx
    310f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3110:	61                   	(bad)
    3111:	74 31                	je     3144 <_Z7testAllPKcjS0_+0x214>
    3113:	32 38                	xor    bh,BYTE PTR [rax]
    3115:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3118:	34 74                	xor    al,0x74
    311a:	65 73 74             	gs jae 3191 <_Z7testAllPKcjS0_+0x261>
    311d:	50                   	push   rax
    311e:	46 6a 38             	rex.RX push 0x38
    3121:	73 74                	jae    3197 <_Z7testAllPKcjS0_+0x267>
    3123:	72 69                	jb     318e <_Z7testAllPKcjS0_+0x25e>
    3125:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3126:	67 5f                	addr32 pop rdi
    3128:	74 45                	je     316f <_Z7testAllPKcjS0_+0x23f>
    312a:	39 46 69             	cmp    DWORD PTR [rsi+0x69],eax
    312d:	6c                   	ins    BYTE PTR es:[rdi],dx
    312e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3130:	61                   	(bad)
    3131:	6d                   	ins    DWORD PTR es:[rdi],dx
    3132:	65 73 38             	gs jae 316d <_Z7testAllPKcjS0_+0x23d>
    3135:	54                   	push   rsp
    3136:	65 73 74             	gs jae 31ad <_Z7testAllPKcjS0_+0x27d>
    3139:	44 61                	rex.R (bad)
    313b:	74 61                	je     319e <_Z7testAllPKcjS0_+0x26e>
    313d:	6a 00                	push   0x0
    313f:	75 69                	jne    31aa <_Z7testAllPKcjS0_+0x27a>
    3141:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3142:	74 5f                	je     31a3 <_Z7testAllPKcjS0_+0x273>
    3144:	66 61                	data16 (bad)
    3146:	73 74                	jae    31bc <_Z7testAllPKcjS0_+0x28c>
    3148:	31 36                	xor    DWORD PTR [rsi],esi
    314a:	5f                   	pop    rdi
    314b:	74 00                	je     314d <_Z7testAllPKcjS0_+0x21d>
    314d:	5f                   	pop    rdi
    314e:	5a                   	pop    rdx
    314f:	53                   	push   rbx
    3150:	74 33                	je     3185 <_Z7testAllPKcjS0_+0x255>
    3152:	70 6f                	jo     31c3 <_Z7testAllPKcjS0_+0x293>
    3154:	77 66                	ja     31bc <_Z7testAllPKcjS0_+0x28c>
    3156:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    315a:	73 72                	jae    31ce <_Z7testAllPKcjS0_+0x29e>
    315c:	74 6f                	je     31cd <_Z7testAllPKcjS0_+0x29d>
    315e:	77 63                	ja     31c3 <_Z7testAllPKcjS0_+0x293>
    3160:	73 00                	jae    3162 <_Z7testAllPKcjS0_+0x232>
    3162:	69 73 6c 65 73 73 00 	imul   esi,DWORD PTR [rbx+0x6c],0x737365
    3169:	5f                   	pop    rdi
    316a:	5f                   	pop    rdi
    316b:	64 75 72             	fs jne 31e0 <_Z7testAllPKcjS0_+0x2b0>
    316e:	61                   	(bad)
    316f:	74 69                	je     31da <_Z7testAllPKcjS0_+0x2aa>
    3171:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3172:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3173:	5f                   	pop    rdi
    3174:	63 61 73             	movsxd esp,DWORD PTR [rcx+0x73]
    3177:	74 5f                	je     31d8 <_Z7testAllPKcjS0_+0x2a8>
    3179:	69 6d 70 6c 3c 73 74 	imul   ebp,DWORD PTR [rbp+0x70],0x74733c6c
    3180:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3183:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3186:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3187:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3188:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3189:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    318b:	64 75 72             	fs jne 3200 <_Z7testAllPKcjS0_+0x2d0>
    318e:	61                   	(bad)
    318f:	74 69                	je     31fa <_Z7testAllPKcjS0_+0x2ca>
    3191:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3192:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3193:	3c 6c                	cmp    al,0x6c
    3195:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3196:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3197:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    319b:	74 2c                	je     31c9 <_Z7testAllPKcjS0_+0x299>
    319d:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    31a0:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31a3:	72 61                	jb     3206 <_Z7testAllPKcjS0_+0x2d6>
    31a5:	74 69                	je     3210 <_Z7testAllPKcjS0_+0x2e0>
    31a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31a8:	3c 31                	cmp    al,0x31
    31aa:	2c 20                	sub    al,0x20
    31ac:	31 30                	xor    DWORD PTR [rax],esi
    31ae:	30 30                	xor    BYTE PTR [rax],dh
    31b0:	30 30                	xor    BYTE PTR [rax],dh
    31b2:	30 3e                	xor    BYTE PTR [rsi],bh
    31b4:	20 3e                	and    BYTE PTR [rsi],bh
    31b6:	2c 20                	sub    al,0x20
    31b8:	73 74                	jae    322e <_Z7testAllPKcjS0_+0x2fe>
    31ba:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    31bd:	72 61                	jb     3220 <_Z7testAllPKcjS0_+0x2f0>
    31bf:	74 69                	je     322a <_Z7testAllPKcjS0_+0x2fa>
    31c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31c2:	3c 31                	cmp    al,0x31
    31c4:	2c 20                	sub    al,0x20
    31c6:	31 30                	xor    DWORD PTR [rax],esi
    31c8:	30 30                	xor    BYTE PTR [rax],dh
    31ca:	3e 2c 20             	ds sub al,0x20
    31cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    31ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    31cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31d0:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    31d4:	74 2c                	je     3202 <_Z7testAllPKcjS0_+0x2d2>
    31d6:	20 74 72 75          	and    BYTE PTR [rdx+rsi*2+0x75],dh
    31da:	65 2c 20             	gs sub al,0x20
    31dd:	66 61                	data16 (bad)
    31df:	6c                   	ins    BYTE PTR es:[rdi],dx
    31e0:	73 65                	jae    3247 <_Z7testAllPKcjS0_+0x317>
    31e2:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    31e6:	53                   	push   rbx
    31e7:	74 33                	je     321c <_Z7testAllPKcjS0_+0x2ec>
    31e9:	74 61                	je     324c <_Z7testAllPKcjS0_+0x31c>
    31eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31ec:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    31f0:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    31f7:	73 74                	jae    326d <_Z7testAllPKcjS0_+0x33d>
    31f9:	33 32                	xor    esi,DWORD PTR [rdx]
    31fb:	5f                   	pop    rdi
    31fc:	74 00                	je     31fe <_Z7testAllPKcjS0_+0x2ce>
    31fe:	5f                   	pop    rdi
    31ff:	5a                   	pop    rdx
    3200:	53                   	push   rbx
    3201:	74 35                	je     3238 <_Z7testAllPKcjS0_+0x308>
    3203:	6c                   	ins    BYTE PTR es:[rdi],dx
    3204:	64 65 78 70          	fs gs js 3278 <_Z7testAllPKcjS0_+0x348>
    3208:	65 69 00 63 65 69 6c 	imul   eax,DWORD PTR gs:[rax],0x6c696563
    320f:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    3212:	6c                   	ins    BYTE PTR es:[rdi],dx
    3213:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3214:	61                   	(bad)
    3215:	74 36                	je     324d <_Z7testAllPKcjS0_+0x31d>
    3217:	34 00                	xor    al,0x0
    3219:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    321c:	72 31                	jb     324f <_Z7testAllPKcjS0_+0x31f>
    321e:	36 5f                	ss pop rdi
    3220:	74 00                	je     3222 <_Z7testAllPKcjS0_+0x2f2>
    3222:	66 70 75             	data16 jo 329a <_Z7testAllPKcjS0_+0x36a>
    3225:	74 77                	je     329e <_Z7testAllPKcjS0_+0x36e>
    3227:	63 00                	movsxd eax,DWORD PTR [rax]
    3229:	74 6d                	je     3298 <_Z7testAllPKcjS0_+0x368>
    322b:	5f                   	pop    rdi
    322c:	79 65                	jns    3293 <_Z7testAllPKcjS0_+0x363>
    322e:	61                   	(bad)
    322f:	72 00                	jb     3231 <_Z7testAllPKcjS0_+0x301>
    3231:	5f                   	pop    rdi
    3232:	5a                   	pop    rdx
    3233:	53                   	push   rbx
    3234:	74 39                	je     326f <_Z7testAllPKcjS0_+0x33f>
    3236:	72 65                	jb     329d <_Z7testAllPKcjS0_+0x36d>
    3238:	6d                   	ins    DWORD PTR es:[rdi],dx
    3239:	61                   	(bad)
    323a:	69 6e 64 65 72 66 66 	imul   ebp,DWORD PTR [rsi+0x64],0x66667265
    3241:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    3244:	61                   	(bad)
    3245:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3246:	32 00                	xor    al,BYTE PTR [rax]
    3248:	67 6d                	ins    DWORD PTR es:[edi],dx
    324a:	74 69                	je     32b5 <_Z7testAllPKcjS0_+0x385>
    324c:	6d                   	ins    DWORD PTR es:[rdi],dx
    324d:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    3251:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    3258:	77 63                	ja     32bd <_Z7testAllPKcjS0_+0x38d>
    325a:	73 74                	jae    32d0 <_Z7testAllPKcjS0_+0x3a0>
    325c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    325d:	75 6c                	jne    32cb <_Z7testAllPKcjS0_+0x39b>
    325f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3260:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    3263:	65 61                	gs (bad)
    3265:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    3269:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    326a:	70 73                	jo     32df <_Z7testAllPKcjS0_+0x3af>
    326c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    326f:	64 65 74 61          	fs gs je 32d4 <_Z7testAllPKcjS0_+0x3a4>
    3273:	69 6c 00 5f 49 4f 5f 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x775f4f49
    327a:	77 
    327b:	72 69                	jb     32e6 <_Z7testAllPKcjS0_+0x3b6>
    327d:	74 65                	je     32e4 <_Z7testAllPKcjS0_+0x3b4>
    327f:	5f                   	pop    rdi
    3280:	70 74                	jo     32f6 <_Z7testAllPKcjS0_+0x3c6>
    3282:	72 00                	jb     3284 <_Z7testAllPKcjS0_+0x354>
    3284:	5f                   	pop    rdi
    3285:	52                   	push   rdx
    3286:	65 70 00             	gs jo  3289 <_Z7testAllPKcjS0_+0x359>
    3289:	5f                   	pop    rdi
    328a:	5a                   	pop    rdx
    328b:	4e 53                	rex.WRX push rbx
    328d:	74 36                	je     32c5 <_Z7testAllPKcjS0_+0x395>
    328f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3292:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3294:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3295:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3299:	61                   	(bad)
    329a:	74 69                	je     3305 <_Z7testAllPKcjS0_+0x3d5>
    329c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    329d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    329e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    32a0:	53                   	push   rbx
    32a1:	74 35                	je     32d8 <_Z7testAllPKcjS0_+0x3a8>
    32a3:	72 61                	jb     3306 <_Z7testAllPKcjS0_+0x3d6>
    32a5:	74 69                	je     3310 <_Z7testAllPKcjS0_+0x3e0>
    32a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32a8:	49                   	rex.WB
    32a9:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32ab:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32ae:	6c                   	ins    BYTE PTR es:[rdi],dx
    32af:	31 30                	xor    DWORD PTR [rax],esi
    32b1:	30 30                	xor    BYTE PTR [rax],dh
    32b3:	30 30                	xor    BYTE PTR [rax],dh
    32b5:	30 30                	xor    BYTE PTR [rax],dh
    32b7:	30 30                	xor    BYTE PTR [rax],dh
    32b9:	45                   	rex.RB
    32ba:	45                   	rex.RB
    32bb:	45 61                	rex.RB (bad)
    32bd:	53                   	push   rbx
    32be:	45 52                	rex.RB push r10
    32c0:	4b 53                	rex.WXB push r11
    32c2:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32c5:	5f                   	pop    rdi
    32c6:	5a                   	pop    rdx
    32c7:	4e 53                	rex.WRX push rbx
    32c9:	74 36                	je     3301 <_Z7testAllPKcjS0_+0x3d1>
    32cb:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    32ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    32d5:	61                   	(bad)
    32d6:	74 69                	je     3341 <_Z7testAllPKcjS0_+0x411>
    32d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32d9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32da:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    32dc:	53                   	push   rbx
    32dd:	74 35                	je     3314 <_Z7testAllPKcjS0_+0x3e4>
    32df:	72 61                	jb     3342 <_Z7testAllPKcjS0_+0x412>
    32e1:	74 69                	je     334c <_Z7testAllPKcjS0_+0x41c>
    32e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32e4:	49                   	rex.WB
    32e5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    32e7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    32ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    32eb:	31 30                	xor    DWORD PTR [rax],esi
    32ed:	30 30                	xor    BYTE PTR [rax],dh
    32ef:	30 30                	xor    BYTE PTR [rax],dh
    32f1:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    32f4:	45                   	rex.RB
    32f5:	43 34 45             	rex.XB xor al,0x45
    32f8:	52                   	push   rdx
    32f9:	4b 53                	rex.WXB push r11
    32fb:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    32fe:	5f                   	pop    rdi
    32ff:	5a                   	pop    rdx
    3300:	53                   	push   rbx
    3301:	74 36                	je     3339 <_Z7testAllPKcjS0_+0x409>
    3303:	6c                   	ins    BYTE PTR es:[rdi],dx
    3304:	72 6f                	jb     3375 <_Z7testAllPKcjS0_+0x445>
    3306:	75 6e                	jne    3376 <_Z7testAllPKcjS0_+0x446>
    3308:	64 65 00 5f 5a       	fs add BYTE PTR gs:[rdi+0x5a],bl
    330d:	53                   	push   rbx
    330e:	74 36                	je     3346 <_Z7testAllPKcjS0_+0x416>
    3310:	6c                   	ins    BYTE PTR es:[rdi],dx
    3311:	6c                   	ins    BYTE PTR es:[rdi],dx
    3312:	72 69                	jb     337d <_Z7testAllPKcjS0_+0x44d>
    3314:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3315:	74 66                	je     337d <_Z7testAllPKcjS0_+0x44d>
    3317:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    331a:	4e 53                	rex.WRX push rbx
    331c:	74 36                	je     3354 <_Z7testAllPKcjS0_+0x424>
    331e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3321:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3322:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3323:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3324:	33 5f 56             	xor    ebx,DWORD PTR [rdi+0x56]
    3327:	32 31                	xor    dh,BYTE PTR [rcx]
    3329:	32 73 74             	xor    dh,BYTE PTR [rbx+0x74]
    332c:	65 61                	gs (bad)
    332e:	64 79 5f             	fs jns 3390 <_Z7testAllPKcjS0_+0x460>
    3331:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    3335:	6b 33 6e             	imul   esi,DWORD PTR [rbx],0x6e
    3338:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3339:	77 45                	ja     3380 <_Z7testAllPKcjS0_+0x450>
    333b:	76 00                	jbe    333d <_Z7testAllPKcjS0_+0x40d>
    333d:	73 69                	jae    33a8 <_Z7testAllPKcjS0_+0x478>
    333f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3341:	62 69 74 00 5f 5a 4e 	vmaxps xmm27,xmm17,XMMWORD PTR [r18+0x4e0]
    3348:	53                   	push   rbx
    3349:	74 36                	je     3381 <_Z7testAllPKcjS0_+0x451>
    334b:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    334e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    334f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3350:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3351:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3355:	61                   	(bad)
    3356:	74 69                	je     33c1 <_Z7testAllPKcjS0_+0x491>
    3358:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3359:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    335a:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    335c:	53                   	push   rbx
    335d:	74 35                	je     3394 <_Z7testAllPKcjS0_+0x464>
    335f:	72 61                	jb     33c2 <_Z7testAllPKcjS0_+0x492>
    3361:	74 69                	je     33cc <_Z7testAllPKcjS0_+0x49c>
    3363:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3364:	49                   	rex.WB
    3365:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3367:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    336a:	6c                   	ins    BYTE PTR es:[rdi],dx
    336b:	31 30                	xor    DWORD PTR [rax],esi
    336d:	30 30                	xor    BYTE PTR [rax],dh
    336f:	30 30                	xor    BYTE PTR [rax],dh
    3371:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3374:	45                   	rex.RB
    3375:	44 34 45             	rex.R xor al,0x45
    3378:	76 00                	jbe    337a <_Z7testAllPKcjS0_+0x44a>
    337a:	5f                   	pop    rdi
    337b:	5a                   	pop    rdx
    337c:	53                   	push   rbx
    337d:	74 34                	je     33b3 <_Z7testAllPKcjS0_+0x483>
    337f:	66 61                	data16 (bad)
    3381:	62 73 65 00 5f       	(bad)
    3386:	5a                   	pop    rdx
    3387:	53                   	push   rbx
    3388:	74 35                	je     33bf <_Z7testAllPKcjS0_+0x48f>
    338a:	68 79 70 6f 74       	push   0x746f7079
    338f:	64 64 64 00 65 78    	fs fs add BYTE PTR fs:[rbp+0x78],ah
    3395:	70 32                	jo     33c9 <_Z7testAllPKcjS0_+0x499>
    3397:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    339a:	4e 53                	rex.WRX push rbx
    339c:	74 36                	je     33d4 <_Z7testAllPKcjS0_+0x4a4>
    339e:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    33a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33a4:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    33a8:	61                   	(bad)
    33a9:	74 69                	je     3414 <_Z7testAllPKcjS0_+0x4e4>
    33ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33ad:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    33af:	53                   	push   rbx
    33b0:	74 35                	je     33e7 <_Z7testAllPKcjS0_+0x4b7>
    33b2:	72 61                	jb     3415 <_Z7testAllPKcjS0_+0x4e5>
    33b4:	74 69                	je     341f <_Z7testAllPKcjS0_+0x4ef>
    33b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33b7:	49                   	rex.WB
    33b8:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    33ba:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    33bd:	6c                   	ins    BYTE PTR es:[rdi],dx
    33be:	31 30                	xor    DWORD PTR [rax],esi
    33c0:	30 30                	xor    BYTE PTR [rax],dh
    33c2:	30 30                	xor    BYTE PTR [rax],dh
    33c4:	30 30                	xor    BYTE PTR [rax],dh
    33c6:	30 30                	xor    BYTE PTR [rax],dh
    33c8:	45                   	rex.RB
    33c9:	45                   	rex.RB
    33ca:	45                   	rex.RB
    33cb:	64 56                	fs push rsi
    33cd:	45 52                	rex.RB push r10
    33cf:	4b 6c                	rex.WXB ins BYTE PTR es:[rdi],dx
    33d1:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    33d4:	65 72 61             	gs jb  3438 <_Z7testAllPKcjS0_+0x508>
    33d7:	74 6f                	je     3448 <_Z7testAllPKcjS0_+0x518>
    33d9:	72 2f                	jb     340a <_Z7testAllPKcjS0_+0x4da>
    33db:	3d 00 5f 5a 53       	cmp    eax,0x535a5f00
    33e0:	74 36                	je     3418 <_Z7testAllPKcjS0_+0x4e8>
    33e2:	72 65                	jb     3449 <_Z7testAllPKcjS0_+0x519>
    33e4:	6d                   	ins    DWORD PTR es:[rdi],dx
    33e5:	71 75                	jno    345c <_Z7testAllPKcjS0_+0x52c>
    33e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33e8:	66 66 50             	data16 push ax
    33eb:	69 00 61 64 6c 65    	imul   eax,DWORD PTR [rax],0x656c6461
    33f1:	72 33                	jb     3426 <_Z7testAllPKcjS0_+0x4f6>
    33f3:	32 5f 66             	xor    bl,BYTE PTR [rdi+0x66]
    33f6:	69 6c 65 73 00 66 66 	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x6c666600
    33fd:	6c 
    33fe:	75 73                	jne    3473 <_Z7testAllPKcjS0_+0x543>
    3400:	68 00 6c 6c 72       	push   0x726c6c00
    3405:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    340c:	53                   	push   rbx
    340d:	74 36                	je     3445 <_Z7testAllPKcjS0_+0x515>
    340f:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    3412:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3413:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3414:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3415:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    3419:	61                   	(bad)
    341a:	74 69                	je     3485 <_Z7testAllPKcjS0_+0x555>
    341c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    341d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    341e:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    3420:	53                   	push   rbx
    3421:	74 35                	je     3458 <_Z7testAllPKcjS0_+0x528>
    3423:	72 61                	jb     3486 <_Z7testAllPKcjS0_+0x556>
    3425:	74 69                	je     3490 <_Z7testAllPKcjS0_+0x560>
    3427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3428:	49                   	rex.WB
    3429:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    342b:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    342e:	6c                   	ins    BYTE PTR es:[rdi],dx
    342f:	31 30                	xor    DWORD PTR [rax],esi
    3431:	30 30                	xor    BYTE PTR [rax],dh
    3433:	30 30                	xor    BYTE PTR [rax],dh
    3435:	30 45 45             	xor    BYTE PTR [rbp+0x45],al
    3438:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    343a:	49                   	rex.WB
    343b:	45 52                	rex.RB push r10
    343d:	4b 53                	rex.WXB push r11
    343f:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    3442:	5f                   	pop    rdi
    3443:	5a                   	pop    rdx
    3444:	53                   	push   rbx
    3445:	74 34                	je     347b <_Z7testAllPKcjS0_+0x54b>
    3447:	66 6d                	ins    WORD PTR es:[rdi],dx
    3449:	69 6e 65 65 00 74 79 	imul   ebp,DWORD PTR [rsi+0x65],0x79740065
    3450:	70 65                	jo     34b7 <_Z7testAllPKcjS0_+0x587>
    3452:	64 65 66 20 5f 5f    	fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    3458:	76 61                	jbe    34bb <_Z7testAllPKcjS0_+0x58b>
    345a:	5f                   	pop    rdi
    345b:	6c                   	ins    BYTE PTR es:[rdi],dx
    345c:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    3463:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    3466:	76 61                	jbe    34c9 <_Z7testAllPKcjS0_+0x599>
    3468:	5f                   	pop    rdi
    3469:	6c                   	ins    BYTE PTR es:[rdi],dx
    346a:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    3471:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3474:	53                   	push   rbx
    3475:	74 34                	je     34ab <_Z7testAllPKcjS0_+0x57b>
    3477:	66 6d                	ins    WORD PTR es:[rdi],dx
    3479:	61                   	(bad)
    347a:	78 66                	js     34e2 <_Z7testAllPKcjS0_+0x5b2>
    347c:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    3480:	32 31                	xor    dh,BYTE PTR [rcx]
    3482:	73 74                	jae    34f8 <_Z7testAllPKcjS0_+0x5c8>
    3484:	61                   	(bad)
    3485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3486:	64 61                	fs (bad)
    3488:	72 74                	jb     34fe <_Z7testAllPKcjS0_+0x5ce>
    348a:	44                   	rex.R
    348b:	65 76 69             	gs jbe 34f7 <_Z7testAllPKcjS0_+0x5c7>
    348e:	61                   	(bad)
    348f:	74 69                	je     34fa <_Z7testAllPKcjS0_+0x5ca>
    3491:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3492:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3493:	54                   	push   rsp
    3494:	69 6d 65 50 64 6a 64 	imul   ebp,DWORD PTR [rbp+0x65],0x646a6450
    349b:	00 69 73             	add    BYTE PTR [rcx+0x73],ch
    349e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    349f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34a0:	72 6d                	jb     350f <_Z7testAllPKcjS0_+0x5df>
    34a2:	61                   	(bad)
    34a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    34a4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    34a7:	4e 53                	rex.WRX push rbx
    34a9:	74 36                	je     34e1 <_Z7testAllPKcjS0_+0x5b1>
    34ab:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    34ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b1:	38 64 75 72          	cmp    BYTE PTR [rbp+rsi*2+0x72],ah
    34b5:	61                   	(bad)
    34b6:	74 69                	je     3521 <_Z7testAllPKcjS0_+0x5f1>
    34b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34ba:	49 6c                	rex.WB ins BYTE PTR es:[rdi],dx
    34bc:	53                   	push   rbx
    34bd:	74 35                	je     34f4 <_Z7testAllPKcjS0_+0x5c4>
    34bf:	72 61                	jb     3522 <_Z7testAllPKcjS0_+0x5f2>
    34c1:	74 69                	je     352c <_Z7testAllPKcjS0_+0x5fc>
    34c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34c4:	49                   	rex.WB
    34c5:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    34c7:	31 45 4c             	xor    DWORD PTR [rbp+0x4c],eax
    34ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    34cb:	31 30                	xor    DWORD PTR [rax],esi
    34cd:	30 30                	xor    BYTE PTR [rax],dh
    34cf:	30 30                	xor    BYTE PTR [rax],dh
    34d1:	30 30                	xor    BYTE PTR [rax],dh
    34d3:	30 30                	xor    BYTE PTR [rax],dh
    34d5:	45                   	rex.RB
    34d6:	45                   	rex.RB
    34d7:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    34d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    34da:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    34e1:	35 61 63 6f 73       	xor    eax,0x736f6361
    34e6:	68 65 00 5f 5a       	push   0x5a5f0065
    34eb:	53                   	push   rbx
    34ec:	74 35                	je     3523 <_Z7testAllPKcjS0_+0x5f3>
    34ee:	61                   	(bad)
    34ef:	63 6f 73             	movsxd ebp,DWORD PTR [rdi+0x73]
    34f2:	68                   	.byte 0x68
    34f3:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	2f                   	(bad)
   1:	72 6f                	jb     72 <__abi_tag-0x30a>
   3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
   4:	74 2f                	je     35 <__abi_tag-0x347>
   6:	68 61 73 68 4d       	push   0x4d687361
   b:	61                   	(bad)
   c:	70 2f                	jo     3d <__abi_tag-0x33f>
   e:	62 75 69 6c 64       	(bad)
  13:	00 2f                	add    BYTE PTR [rdi],ch
  15:	72 6f                	jb     86 <__abi_tag-0x2f6>
  17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  18:	74 2f                	je     49 <__abi_tag-0x333>
  1a:	68 61 73 68 4d       	push   0x4d687361
  1f:	61                   	(bad)
  20:	70 2f                	jo     51 <__abi_tag-0x32b>
  22:	73 72                	jae    96 <__abi_tag-0x2e6>
  24:	63 2f                	movsxd ebp,DWORD PTR [rdi]
  26:	6d                   	ins    DWORD PTR es:[rdi],dx
  27:	61                   	(bad)
  28:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  2f:	2f                   	(bad)
  30:	72 6f                	jb     a1 <__abi_tag-0x2db>
  32:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  33:	74 2f                	je     64 <__abi_tag-0x318>
  35:	68 61 73 68 4d       	push   0x4d687361
  3a:	61                   	(bad)
  3b:	70 2f                	jo     6c <__abi_tag-0x310>
  3d:	73 72                	jae    b1 <__abi_tag-0x2cb>
  3f:	63 00                	movsxd eax,DWORD PTR [rax]
  41:	2f                   	(bad)
  42:	75 73                	jne    b7 <__abi_tag-0x2c5>
  44:	72 2f                	jb     75 <__abi_tag-0x307>
  46:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  4d:	00 2f                	add    BYTE PTR [rdi],ch
  4f:	75 73                	jne    c4 <__abi_tag-0x2b8>
  51:	72 2f                	jb     82 <__abi_tag-0x2fa>
  53:	6c                   	ins    BYTE PTR es:[rdi],dx
  54:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  5b:	78 38                	js     95 <__abi_tag-0x2e7>
  5d:	36 5f                	ss pop rdi
  5f:	36 34 2d             	ss xor al,0x2d
  62:	6c                   	ins    BYTE PTR es:[rdi],dx
  63:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  6a:	75 2f                	jne    9b <__abi_tag-0x2e1>
  6c:	31 33                	xor    DWORD PTR [rbx],esi
  6e:	2f                   	(bad)
  6f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  76:	00 2f                	add    BYTE PTR [rdi],ch
  78:	75 73                	jne    ed <__abi_tag-0x28f>
  7a:	72 2f                	jb     ab <__abi_tag-0x2d1>
  7c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  83:	2f                   	(bad)
  84:	78 38                	js     be <__abi_tag-0x2be>
  86:	36 5f                	ss pop rdi
  88:	36 34 2d             	ss xor al,0x2d
  8b:	6c                   	ins    BYTE PTR es:[rdi],dx
  8c:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  93:	75 2f                	jne    c4 <__abi_tag-0x2b8>
  95:	62 69 74 73 00       	(bad)
  9a:	2f                   	(bad)
  9b:	75 73                	jne    110 <__abi_tag-0x26c>
  9d:	72 2f                	jb     ce <__abi_tag-0x2ae>
  9f:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a6:	2f                   	(bad)
  a7:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a9:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ab:	31 33                	xor    DWORD PTR [rbx],esi
  ad:	00 2f                	add    BYTE PTR [rdi],ch
  af:	75 73                	jne    124 <__abi_tag-0x258>
  b1:	72 2f                	jb     e2 <__abi_tag-0x29a>
  b3:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  ba:	2f                   	(bad)
  bb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bf:	31 33                	xor    DWORD PTR [rbx],esi
  c1:	2f                   	(bad)
  c2:	62 69 74 73 00       	(bad)
  c7:	2f                   	(bad)
  c8:	72 6f                	jb     139 <__abi_tag-0x243>
  ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  cb:	74 2f                	je     fc <__abi_tag-0x280>
  cd:	68 61 73 68 4d       	push   0x4d687361
  d2:	61                   	(bad)
  d3:	70 2f                	jo     104 <__abi_tag-0x278>
  d5:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  dc:	00 2f                	add    BYTE PTR [rdi],ch
  de:	75 73                	jne    153 <__abi_tag-0x229>
  e0:	72 2f                	jb     111 <__abi_tag-0x26b>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	78 38                	js     124 <__abi_tag-0x258>
  ec:	36 5f                	ss pop rdi
  ee:	36 34 2d             	ss xor al,0x2d
  f1:	6c                   	ins    BYTE PTR es:[rdi],dx
  f2:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
  f9:	75 2f                	jne    12a <__abi_tag-0x252>
  fb:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  fd:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ff:	31 33                	xor    DWORD PTR [rbx],esi
 101:	2f                   	(bad)
 102:	62 69 74 73 00       	(bad)
 107:	73 74                	jae    17d <__abi_tag-0x1ff>
 109:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 10b:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 112:	64 64 65 66 2e 68 00 	fs fs gs cs pushw 0x7400
 119:	74 
 11a:	79 70                	jns    18c <__abi_tag-0x1f0>
 11c:	65 73 2e             	gs jae 14d <__abi_tag-0x22f>
 11f:	68 00 63 73 74       	push   0x74736300
 124:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 126:	69 62 00 73 74 64 5f 	imul   esp,DWORD PTR [rdx+0x0],0x5f647473
 12d:	61                   	(bad)
 12e:	62 73 2e 68 00       	(bad)
 133:	73 74                	jae    1a9 <__abi_tag-0x1d3>
 135:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 137:	69 62 2d 66 6c 6f 61 	imul   esp,DWORD PTR [rdx+0x2d],0x616f6c66
 13e:	74 2e                	je     16e <__abi_tag-0x20e>
 140:	68 00 73 74 64       	push   0x64747300
 145:	6c                   	ins    BYTE PTR es:[rdi],dx
 146:	69 62 2d 62 73 65 61 	imul   esp,DWORD PTR [rdx+0x2d],0x61657362
 14d:	72 63                	jb     1b2 <__abi_tag-0x1ca>
 14f:	68 2e 68 00 73       	push   0x7300682e
 154:	74 64                	je     1ba <__abi_tag-0x1c2>
 156:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 15d:	74 6e                	je     1cd <__abi_tag-0x1af>
 15f:	2e 68 00 68 61 73    	cs push 0x73616800
 165:	68 5f 6d 61 70       	push   0x70616d5f
 16a:	2e 68 00 74 65 73    	cs push 0x73657400
 170:	74 73                	je     1e5 <__abi_tag-0x197>
 172:	2e 68 00 63 2b 2b    	cs push 0x2b2b6300
 178:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 17b:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 181:	2f                   	(bad)
 182:	72 6f                	jb     1f3 <__abi_tag-0x189>
 184:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 185:	74 2f                	je     1b6 <__abi_tag-0x1c6>
 187:	68 61 73 68 4d       	push   0x4d687361
 18c:	61                   	(bad)
 18d:	70 2f                	jo     1be <__abi_tag-0x1be>
 18f:	73 72                	jae    203 <__abi_tag-0x179>
 191:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 193:	68 61 73 68 5f       	push   0x5f687361
 198:	6d                   	ins    DWORD PTR es:[rdi],dx
 199:	61                   	(bad)
 19a:	70 2e                	jo     1ca <__abi_tag-0x1b2>
 19c:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 19f:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 1a2:	72 69                	jb     20d <__abi_tag-0x16f>
 1a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1a5:	67 2e 68 00 73 74 72 	addr32 cs push 0x72747300
 1ac:	69 6e 67 5f 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x67],0x726f665f
 1b3:	74 69                	je     21e <__abi_tag-0x15e>
 1b5:	66 69 65 64 2e 68    	imul   sp,WORD PTR [rbp+0x64],0x682e
 1bb:	00 73 6d             	add    BYTE PTR [rbx+0x6d],dh
 1be:	6d                   	ins    DWORD PTR es:[rdi],dx
 1bf:	69 6e 74 72 69 6e 2e 	imul   ebp,DWORD PTR [rsi+0x74],0x2e6e6972
 1c6:	68 00 73 74 64       	push   0x64747300
 1cb:	69 6f 32 2e 68 00 73 	imul   ebp,DWORD PTR [rdi+0x32],0x7300682e
 1d2:	74 72                	je     246 <__abi_tag-0x136>
 1d4:	69 6e 67 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x67],0x682e745f
 1db:	00 6c 69 73          	add    BYTE PTR [rcx+rbp*2+0x73],ch
 1df:	74 2e                	je     20f <__abi_tag-0x16d>
 1e1:	68 00 73 74 64       	push   0x64747300
 1e6:	69 6f 32 2d 64 65 63 	imul   ebp,DWORD PTR [rdi+0x32],0x6365642d
 1ed:	6c                   	ins    BYTE PTR es:[rdi],dx
 1ee:	2e 68 00 61 73 73    	cs push 0x73736100
 1f4:	65 72 74             	gs jb  26b <__abi_tag-0x111>
 1f7:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 1fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 1fe:	74 2f                	je     22f <__abi_tag-0x14d>
 200:	68 61 73 68 4d       	push   0x4d687361
 205:	61                   	(bad)
 206:	70 2f                	jo     237 <__abi_tag-0x145>
 208:	73 72                	jae    27c <__abi_tag-0x100>
 20a:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 20c:	68 61 73 68 5f       	push   0x5f687361
 211:	66 75 6e             	data16 jne 282 <__abi_tag-0xfa>
 214:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 217:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 21a:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 21d:	64 69 6e 74 2d 69 6e 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x746e692d
 224:	74 
 225:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 226:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 22c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 22d:	74 2f                	je     25e <__abi_tag-0x11e>
 22f:	68 61 73 68 4d       	push   0x4d687361
 234:	61                   	(bad)
 235:	70 2f                	jo     266 <__abi_tag-0x116>
 237:	73 72                	jae    2ab <__abi_tag-0xd1>
 239:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 23b:	6c                   	ins    BYTE PTR es:[rdi],dx
 23c:	69 73 74 2e 63 70 70 	imul   esi,DWORD PTR [rbx+0x74],0x7070632e
 243:	00 2f                	add    BYTE PTR [rdi],ch
 245:	72 6f                	jb     2b6 <__abi_tag-0xc6>
 247:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 248:	74 2f                	je     279 <__abi_tag-0x103>
 24a:	68 61 73 68 4d       	push   0x4d687361
 24f:	61                   	(bad)
 250:	70 2f                	jo     281 <__abi_tag-0xfb>
 252:	73 72                	jae    2c6 <__abi_tag-0xb6>
 254:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 256:	75 74                	jne    2cc <__abi_tag-0xb0>
 258:	69 6c 73 2e 63 70 70 	imul   ebp,DWORD PTR [rbx+rsi*2+0x2e],0x707063
 25f:	00 
 260:	2f                   	(bad)
 261:	75 73                	jne    2d6 <__abi_tag-0xa6>
 263:	72 2f                	jb     294 <__abi_tag-0xe8>
 265:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 26c:	2f                   	(bad)
 26d:	78 38                	js     2a7 <__abi_tag-0xd5>
 26f:	36 5f                	ss pop rdi
 271:	36 34 2d             	ss xor al,0x2d
 274:	6c                   	ins    BYTE PTR es:[rdi],dx
 275:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 27c:	75 2f                	jne    2ad <__abi_tag-0xcf>
 27e:	73 79                	jae    2f9 <__abi_tag-0x83>
 280:	73 00                	jae    282 <__abi_tag-0xfa>
 282:	2f                   	(bad)
 283:	75 73                	jne    2f8 <__abi_tag-0x84>
 285:	72 2f                	jb     2b6 <__abi_tag-0xc6>
 287:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 28e:	2f                   	(bad)
 28f:	78 38                	js     2c9 <__abi_tag-0xb3>
 291:	36 5f                	ss pop rdi
 293:	36 34 2d             	ss xor al,0x2d
 296:	6c                   	ins    BYTE PTR es:[rdi],dx
 297:	69 6e 75 78 2d 67 6e 	imul   ebp,DWORD PTR [rsi+0x75],0x6e672d78
 29e:	75 2f                	jne    2cf <__abi_tag-0xad>
 2a0:	62 69 74 73 2f       	(bad)
 2a5:	74 79                	je     320 <__abi_tag-0x5c>
 2a7:	70 65                	jo     30e <__abi_tag-0x6e>
 2a9:	73 00                	jae    2ab <__abi_tag-0xd1>
 2ab:	66 63 6e 74          	movsxd bp,DWORD PTR [rsi+0x74]
 2af:	6c                   	ins    BYTE PTR es:[rdi],dx
 2b0:	32 2e                	xor    ch,BYTE PTR [rsi]
 2b2:	68 00 75 6e 69       	push   0x696e7500
 2b7:	73 74                	jae    32d <__abi_tag-0x4f>
 2b9:	64 2e 68 00 73 74 72 	fs cs push 0x72747300
 2c0:	75 63                	jne    325 <__abi_tag-0x57>
 2c2:	74 5f                	je     323 <__abi_tag-0x59>
 2c4:	74 69                	je     32f <__abi_tag-0x4d>
 2c6:	6d                   	ins    DWORD PTR es:[rdi],dx
 2c7:	65 73 70             	gs jae 33a <__abi_tag-0x42>
 2ca:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 2cd:	68 00 73 74 72       	push   0x72747300
 2d2:	75 63                	jne    337 <__abi_tag-0x45>
 2d4:	74 5f                	je     335 <__abi_tag-0x47>
 2d6:	73 74                	jae    34c <__abi_tag-0x30>
 2d8:	61                   	(bad)
 2d9:	74 2e                	je     309 <__abi_tag-0x73>
 2db:	68 00 75 6e 69       	push   0x696e7500
 2e0:	73 74                	jae    356 <__abi_tag-0x26>
 2e2:	64 2d 64 65 63 6c    	fs sub eax,0x6c636564
 2e8:	2e 68 00 2f 72 6f    	cs push 0x6f722f00
 2ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ef:	74 2f                	je     320 <__abi_tag-0x5c>
 2f1:	68 61 73 68 4d       	push   0x4d687361
 2f6:	61                   	(bad)
 2f7:	70 2f                	jo     328 <__abi_tag-0x54>
 2f9:	73 72                	jae    36d <__abi_tag-0xf>
 2fb:	63 2f                	movsxd ebp,DWORD PTR [rdi]
 2fd:	74 65                	je     364 <__abi_tag-0x18>
 2ff:	73 74                	jae    375 <__abi_tag-0x7>
 301:	73 2e                	jae    331 <__abi_tag-0x4b>
 303:	63 70 70             	movsxd esi,DWORD PTR [rax+0x70]
 306:	00 2f                	add    BYTE PTR [rdi],ch
 308:	75 73                	jne    37d <__abi_tag+0x1>
 30a:	72 2f                	jb     33b <__abi_tag-0x41>
 30c:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 313:	2f                   	(bad)
 314:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 316:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 318:	31 33                	xor    DWORD PTR [rbx],esi
 31a:	2f                   	(bad)
 31b:	64 65 62 75 67 00 2f 	(bad)
 322:	75 73                	jne    397 <__abi_tag+0x1b>
 324:	72 2f                	jb     355 <__abi_tag-0x27>
 326:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 32d:	2f                   	(bad)
 32e:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 330:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 332:	31 33                	xor    DWORD PTR [rbx],esi
 334:	2f                   	(bad)
 335:	70 73                	jo     3aa <__abi_tag+0x2e>
 337:	74 6c                	je     3a5 <__abi_tag+0x29>
 339:	00 63 6d             	add    BYTE PTR [rbx+0x6d],ah
 33c:	61                   	(bad)
 33d:	74 68                	je     3a7 <__abi_tag+0x2b>
 33f:	00 63 68             	add    BYTE PTR [rbx+0x68],ah
 342:	72 6f                	jb     3b3 <__abi_tag+0x37>
 344:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 345:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 346:	2e 68 00 74 79 70    	cs push 0x70797400
 34c:	65 5f                	gs pop rdi
 34e:	74 72                	je     3c2 <__abi_tag+0x46>
 350:	61                   	(bad)
 351:	69 74 73 00 64 65 62 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x75626564
 358:	75 
 359:	67 2e 68 00 63 77 63 	addr32 cs push 0x63776300
 360:	68 61 72 00 63       	push   0x63007261
 365:	6c                   	ins    BYTE PTR es:[rdi],dx
 366:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 367:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 36a:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 36e:	74 64                	je     3d4 <__abi_tag+0x58>
 370:	69 6f 00 63 73 74 64 	imul   ebp,DWORD PTR [rdi+0x0],0x64747363
 377:	64 65 66 00 63 73    	fs data16 add BYTE PTR gs:[rbx+0x73],ah
 37d:	74 64                	je     3e3 <__abi_tag+0x67>
 37f:	69 6e 74 00 63 68 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61686300
 386:	72 63                	jb     3eb <__abi_tag+0x6f>
 388:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 389:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 38a:	76 2e                	jbe    3ba <__abi_tag+0x3e>
 38c:	68 00 63 74 69       	push   0x69746300
 391:	6d                   	ins    DWORD PTR es:[rdi],dx
 392:	65 00 72 61          	add    BYTE PTR gs:[rdx+0x61],dh
 396:	74 69                	je     401 <__abi_tag+0x85>
 398:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 399:	00 70 72             	add    BYTE PTR [rax+0x72],dh
 39c:	65 64 65 66 69 6e 65 	gs fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 3a3:	64 5f 
 3a5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3a6:	70 73                	jo     41b <__abi_tag+0x9f>
 3a8:	2e 68 00 6d 61 74    	cs push 0x74616d00
 3ae:	68 2e 68 00 63       	push   0x6300682e
 3b3:	6c                   	ins    BYTE PTR es:[rdi],dx
 3b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3b5:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 3b8:	74 2e                	je     3e8 <__abi_tag+0x6c>
 3ba:	68 00 74 69 6d       	push   0x6d697400
 3bf:	65 5f                	gs pop rdi
 3c1:	74 2e                	je     3f1 <__abi_tag+0x75>
 3c3:	68 00 3c 62 75       	push   0x75623c00
 3c8:	69 6c 74 2d 69 6e 3e 	imul   ebp,DWORD PTR [rsp+rsi*2+0x2d],0x3e6e69
 3cf:	00 
 3d0:	5f                   	pop    rdi
 3d1:	5f                   	pop    rdi
 3d2:	6d                   	ins    DWORD PTR es:[rdi],dx
 3d3:	62 73 74 61 74       	(bad)
 3d8:	65 5f                	gs pop rdi
 3da:	74 2e                	je     40a <__abi_tag+0x8e>
 3dc:	68 00 5f 5f 66       	push   0x665f5f00
 3e1:	70 6f                	jo     452 <__abi_tag+0xd6>
 3e3:	73 5f                	jae    444 <__abi_tag+0xc8>
 3e5:	74 2e                	je     415 <__abi_tag+0x99>
 3e7:	68 00 5f 5f 46       	push   0x465f5f00
 3ec:	49                   	rex.WB
 3ed:	4c                   	rex.WR
 3ee:	45                   	rex.RB
 3ef:	2e 68 00 73 74 72    	cs push 0x72747300
 3f5:	75 63                	jne    45a <__abi_tag+0xde>
 3f7:	74 5f                	je     458 <__abi_tag+0xdc>
 3f9:	46                   	rex.RX
 3fa:	49                   	rex.WB
 3fb:	4c                   	rex.WR
 3fc:	45                   	rex.RB
 3fd:	2e 68 00 73 74 64    	cs push 0x64747300
 403:	69 6f 2e 68 00 73 74 	imul   ebp,DWORD PTR [rdi+0x2e],0x74730068
 40a:	64 69 6e 74 2d 6c 65 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x61656c2d
 411:	61 
 412:	73 74                	jae    488 <__abi_tag+0x10c>
 414:	2e 68 00 73 74 64    	cs push 0x64747300
 41a:	69 6e 74 2e 68 00 77 	imul   ebp,DWORD PTR [rsi+0x74],0x7700682e
 421:	69 6e 74 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x74],0x682e745f
 428:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 42b:	68 61 72 2e 68       	push   0x682e7261
 430:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
 433:	68 61 72 32 2e       	push   0x2e327261
 438:	68 00 73 74 72       	push   0x72747300
 43d:	75 63                	jne    4a2 <__abi_tag+0x126>
 43f:	74 5f                	je     4a0 <__abi_tag+0x124>
 441:	74 6d                	je     4b0 <__abi_tag+0x134>
 443:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 449:	61                   	(bad)
 44a:	6c                   	ins    BYTE PTR es:[rdi],dx
 44b:	65 2e 68 00 65 78 65 	gs cs push 0x65786500
 452:	63 75 74             	movsxd esi,DWORD PTR [rbp+0x74]
 455:	69 6f 6e 5f 64 65 66 	imul   ebp,DWORD PTR [rdi+0x6e],0x6665645f
 45c:	73 2e                	jae    48c <__abi_tag+0x110>
 45e:	68 00 74 69 6d       	push   0x6d697400
 463:	65 2e 68 00 68 61 73 	gs cs push 0x73616800
 46a:	68 5f 66 75 6e       	push   0x6e75665f
 46f:	63 73 2e             	movsxd esi,DWORD PTR [rbx+0x2e]
 472:	68 00 75 74 69       	push   0x69747500
 477:	6c                   	ins    BYTE PTR es:[rdi],dx
 478:	73 2e                	jae    4a8 <__abi_tag+0x12c>
 47a:	68 00 6d 65 6d       	push   0x6d656d00
 47f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 480:	72 79                	jb     4fb <__abi_tag+0x17f>
 482:	5f                   	pop    rdi
 483:	72 65                	jb     4ea <__abi_tag+0x16e>
 485:	73 6f                	jae    4f6 <__abi_tag+0x17a>
 487:	75 72                	jne    4fb <__abi_tag+0x17f>
 489:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 48c:	68 00 73 74 72       	push   0x72747300
 491:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
 498:	77 00                	ja     49a <__abi_tag+0x11e>

Disassembly of section .debug_loclists:

0000000000000000 <.debug_loclists>:
       0:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
       3:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 809 <__abi_tag+0x48d>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 00                	add    BYTE PTR [rax],al
       d:	00 00                	add    BYTE PTR [rax],al
       f:	00 06                	add    BYTE PTR [rsi],al
      11:	e0 11                	loopne 24 <__abi_tag-0x358>
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 00                	add    BYTE PTR [rax],al
      17:	00 00                	add    BYTE PTR [rax],al
      19:	04 00                	add    al,0x0
      1b:	09 01                	or     DWORD PTR [rcx],eax
      1d:	55                   	push   rbp
      1e:	04 09                	add    al,0x9
      20:	2e 04 a3             	cs add al,0xa3
      23:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      26:	00 00                	add    BYTE PTR [rax],al
      28:	00 00                	add    BYTE PTR [rax],al
      2a:	00 06                	add    BYTE PTR [rsi],al
      2c:	e0 11                	loopne 3f <__abi_tag-0x33d>
      2e:	00 00                	add    BYTE PTR [rax],al
      30:	00 00                	add    BYTE PTR [rax],al
      32:	00 00                	add    BYTE PTR [rax],al
      34:	04 00                	add    al,0x0
      36:	14 01                	adc    al,0x1
      38:	54                   	push   rsp
      39:	04 14                	add    al,0x14
      3b:	2e 04 a3             	cs add al,0xa3
      3e:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
      42:	00 00                	add    BYTE PTR [rax],al
      44:	08 f2                	or     dl,dh
      46:	11 00                	adc    DWORD PTR [rax],eax
      48:	00 00                	add    BYTE PTR [rax],al
      4a:	00 00                	add    BYTE PTR [rax],al
      4c:	00 06                	add    BYTE PTR [rsi],al
      4e:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
      51:	ee                   	out    dx,al
      52:	06                   	(bad)
      53:	00 00                	add    BYTE PTR [rax],al
      55:	05 00 08 00 00       	add    eax,0x800
	...
      62:	00 00                	add    BYTE PTR [rax],al
      64:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
      67:	0c f6                	or     al,0xf6
      69:	0c 01                	or     al,0x1
      6b:	55                   	push   rbp
      6c:	04 f6                	add    al,0xf6
      6e:	0c 84                	or     al,0x84
      70:	0e                   	(bad)
      71:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
      74:	84 0e                	test   BYTE PTR [rsi],cl
      76:	8d 0e                	lea    ecx,[rsi]
      78:	04 a3                	add    al,0xa3
      7a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
      7d:	04 8d                	add    al,0x8d
      7f:	0e                   	(bad)
      80:	9e                   	sahf
      81:	0e                   	(bad)
      82:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
      85:	02 00                	add    al,BYTE PTR [rax]
      87:	00 00                	add    BYTE PTR [rax],al
      89:	00 01                	add    BYTE PTR [rcx],al
      8b:	04 be                	add    al,0xbe
      8d:	0d ce 0d 02 30       	or     eax,0x30020dce
      92:	9f                   	lahf
      93:	04 ce                	add    al,0xce
      95:	0d ed 0d 01 53       	or     eax,0x53010ded
      9a:	04 ed                	add    al,0xed
      9c:	0d f6 0d 03 73       	or     eax,0x73030df6
      a1:	7f 9f                	jg     42 <__abi_tag-0x33a>
      a3:	00 01                	add    BYTE PTR [rcx],al
      a5:	00 04 ce             	add    BYTE PTR [rsi+rcx*8],al
      a8:	0d e1 0d 0a 03       	or     eax,0x30a0de1
      ad:	87 40 00             	xchg   DWORD PTR [rax+0x0],eax
      b0:	00 00                	add    BYTE PTR [rax],al
      b2:	00 00                	add    BYTE PTR [rax],al
      b4:	00 9f 00 01 00 04    	add    BYTE PTR [rdi+0x4000100],bl
      ba:	e4 0c                	in     al,0xc
      bc:	80 0d 06 a0 ff 21 00 	or     BYTE PTR [rip+0x21ffa006],0x0        # 21ffa0c9 <_end+0x21ff40b1>
      c3:	00 00                	add    BYTE PTR [rax],al
      c5:	00 01                	add    BYTE PTR [rcx],al
      c7:	00 04 89             	add    BYTE PTR [rcx+rcx*4],al
      ca:	0d 9f 0d 0a 03       	or     eax,0x30a0d9f
      cf:	65 40 00 00          	rex add BYTE PTR gs:[rax],al
      d3:	00 00                	add    BYTE PTR [rax],al
      d5:	00 00                	add    BYTE PTR [rax],al
      d7:	9f                   	lahf
      d8:	00 02                	add    BYTE PTR [rdx],al
      da:	00 04 9f             	add    BYTE PTR [rdi+rbx*4],al
      dd:	0d be 0d 0a 03       	or     eax,0x30a0dbe
      e2:	76 40                	jbe    124 <__abi_tag-0x258>
      e4:	00 00                	add    BYTE PTR [rax],al
      e6:	00 00                	add    BYTE PTR [rax],al
      e8:	00 00                	add    BYTE PTR [rax],al
      ea:	9f                   	lahf
      eb:	00 02                	add    BYTE PTR [rdx],al
      ed:	00 04 fb             	add    BYTE PTR [rbx+rdi*8],al
      f0:	0d 8d 0e 06 a0       	or     eax,0xa0060e8d
      f5:	ff 21                	jmp    QWORD PTR [rcx]
      f7:	00 00                	add    BYTE PTR [rax],al
      f9:	00 00                	add    BYTE PTR [rax],al
      fb:	02 00                	add    al,BYTE PTR [rax]
      fd:	04 8d                	add    al,0x8d
      ff:	0e                   	(bad)
     100:	9c                   	pushf
     101:	0e                   	(bad)
     102:	06                   	(bad)
     103:	a0 28 22 00 00 00 00 	movabs al,ds:0x2228
     10a:	00 00 
     10c:	00 00                	add    BYTE PTR [rax],al
     10e:	00 00                	add    BYTE PTR [rax],al
     110:	00 00                	add    BYTE PTR [rax],al
     112:	04 e0                	add    al,0xe0
     114:	0a b3 0b 01 55 04    	or     dh,BYTE PTR [rbx+0x455010b]
     11a:	b3 0b                	mov    bl,0xb
     11c:	c5 0b 04             	(bad)
     11f:	a3 01 55 9f 04 c5 0b 	movabs ds:0xbdf0bc5049f5501,eax
     126:	df 0b 
     128:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     12b:	df 0b                	fisttp WORD PTR [rbx]
     12d:	e4 0b                	in     al,0xb
     12f:	04 a3                	add    al,0xa3
     131:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     134:	00 00                	add    BYTE PTR [rax],al
     136:	00 00                	add    BYTE PTR [rax],al
     138:	00 00                	add    BYTE PTR [rax],al
     13a:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
     13d:	0a f0                	or     dh,al
     13f:	0a 06                	or     al,BYTE PTR [rsi]
     141:	54                   	push   rsp
     142:	93                   	xchg   ebx,eax
     143:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     146:	08 04 f0             	or     BYTE PTR [rax+rsi*8],al
     149:	0a ba 0b 06 54 93    	or     bh,BYTE PTR [rdx-0x6cabf9f5]
     14f:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
     152:	08 04 c5 0b d1 0b 06 	or     BYTE PTR [rax*8+0x60bd10b],al
     159:	54                   	push   rsp
     15a:	93                   	xchg   ebx,eax
     15b:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     15e:	08 00                	or     BYTE PTR [rax],al
     160:	01 02                	add    DWORD PTR [rdx],eax
     162:	04 f0                	add    al,0xf0
     164:	0a 9b 0b 02 30 9f    	or     bl,BYTE PTR [rbx-0x60cffdf5]
     16a:	00 02                	add    BYTE PTR [rdx],al
     16c:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     16f:	0a c5                	or     al,ch
     171:	0b 02                	or     eax,DWORD PTR [rdx]
     173:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
     179:	f0 0a c5             	lock or al,ch
     17c:	0b 0a                	or     ecx,DWORD PTR [rdx]
     17e:	9e                   	sahf
     17f:	08 11                	or     BYTE PTR [rcx],dl
     181:	11 11                	adc    DWORD PTR [rcx],edx
     183:	21 11                	and    DWORD PTR [rcx],edx
     185:	12 12                	adc    dl,BYTE PTR [rdx]
     187:	12 00                	adc    al,BYTE PTR [rax]
     189:	04 00                	add    al,0x0
     18b:	00 00                	add    BYTE PTR [rax],al
     18d:	04 f0                	add    al,0xf0
     18f:	0a 83 0b 02 74 00    	or     al,BYTE PTR [rbx+0x74020b]
     195:	04 83                	add    al,0x83
     197:	0b 94 0b 01 50 00 05 	or     edx,DWORD PTR [rbx+rcx*1+0x5005001]
     19e:	00 00                	add    BYTE PTR [rax],al
     1a0:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1a3:	0a 8a 0b 02 74 08    	or     cl,BYTE PTR [rdx+0x874020b]
     1a9:	04 8a                	add    al,0x8a
     1ab:	0b ba 0b 01 59 00    	or     edi,DWORD PTR [rdx+0x59010b]
     1b1:	06                   	(bad)
     1b2:	00 00                	add    BYTE PTR [rax],al
     1b4:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1b7:	0a 91 0b 02 74 10    	or     dl,BYTE PTR [rcx+0x1074020b]
     1bd:	04 91                	add    al,0x91
     1bf:	0b ba 0b 01 58 00    	or     edi,DWORD PTR [rdx+0x58010b]
     1c5:	07                   	(bad)
     1c6:	00 00                	add    BYTE PTR [rax],al
     1c8:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1cb:	0a 9b 0b 02 74 18    	or     bl,BYTE PTR [rbx+0x1874020b]
     1d1:	04 9b                	add    al,0x9b
     1d3:	0b a3 0b 01 51 00    	or     esp,DWORD PTR [rbx+0x51010b]
     1d9:	00 00                	add    BYTE PTR [rax],al
     1db:	04 bb                	add    al,0xbb
     1dd:	0b c0                	or     eax,eax
     1df:	0b 01                	or     eax,DWORD PTR [rcx]
     1e1:	50                   	push   rax
     1e2:	00 08                	add    BYTE PTR [rax],cl
     1e4:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1e7:	0a 83 0b 02 74 00    	or     al,BYTE PTR [rbx+0x74020b]
     1ed:	00 08                	add    BYTE PTR [rax],cl
     1ef:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     1f2:	0a 83 0b 0a 9e 08    	or     al,BYTE PTR [rbx+0x89e0a0b]
     1f8:	11 11                	adc    DWORD PTR [rcx],edx
     1fa:	11 21                	adc    DWORD PTR [rcx],esp
     1fc:	11 12                	adc    DWORD PTR [rdx],edx
     1fe:	12 12                	adc    dl,BYTE PTR [rdx]
     200:	00 02                	add    BYTE PTR [rdx],al
     202:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
     205:	0b 8a 0b 02 74 08    	or     ecx,DWORD PTR [rdx+0x874020b]
     20b:	00 02                	add    BYTE PTR [rdx],al
     20d:	00 04 83             	add    BYTE PTR [rbx+rax*4],al
     210:	0b 8a 0b 0a 9e 08    	or     ecx,DWORD PTR [rdx+0x89e0a0b]
     216:	11 11                	adc    DWORD PTR [rcx],edx
     218:	11 21                	adc    DWORD PTR [rcx],esp
     21a:	11 12                	adc    DWORD PTR [rdx],edx
     21c:	12 12                	adc    dl,BYTE PTR [rdx]
     21e:	00 02                	add    BYTE PTR [rdx],al
     220:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
     223:	0b 91 0b 02 74 10    	or     edx,DWORD PTR [rcx+0x1074020b]
     229:	00 02                	add    BYTE PTR [rdx],al
     22b:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
     22e:	0b 91 0b 0a 9e 08    	or     edx,DWORD PTR [rcx+0x89e0a0b]
     234:	11 11                	adc    DWORD PTR [rcx],edx
     236:	11 21                	adc    DWORD PTR [rcx],esp
     238:	11 12                	adc    DWORD PTR [rdx],edx
     23a:	12 12                	adc    dl,BYTE PTR [rdx]
     23c:	00 02                	add    BYTE PTR [rdx],al
     23e:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
     241:	0b 9b 0b 02 74 18    	or     ebx,DWORD PTR [rbx+0x1874020b]
     247:	00 02                	add    BYTE PTR [rdx],al
     249:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
     24c:	0b 9b 0b 0a 9e 08    	or     ebx,DWORD PTR [rbx+0x89e0a0b]
     252:	11 11                	adc    DWORD PTR [rcx],edx
     254:	11 21                	adc    DWORD PTR [rcx],esp
     256:	11 12                	adc    DWORD PTR [rdx],edx
     258:	12 12                	adc    dl,BYTE PTR [rdx]
	...
     266:	00 00                	add    BYTE PTR [rax],al
     268:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     26b:	09 b0 09 01 55 04    	or     DWORD PTR [rax+0x4550109],esi
     271:	b0 09                	mov    al,0x9
     273:	9b                   	fwait
     274:	0a 01                	or     al,BYTE PTR [rcx]
     276:	53                   	push   rbx
     277:	04 9b                	add    al,0x9b
     279:	0a a1 0a 04 a3 01    	or     ah,BYTE PTR [rcx+0x1a3040a]
     27f:	55                   	push   rbp
     280:	9f                   	lahf
     281:	04 a1                	add    al,0xa1
     283:	0a b1 0a 01 53 04    	or     dh,BYTE PTR [rcx+0x453010a]
     289:	b1 0a                	mov    cl,0xa
     28b:	ba 0a 04 a3 01       	mov    edx,0x1a3040a
     290:	55                   	push   rbp
     291:	9f                   	lahf
     292:	04 ba                	add    al,0xba
     294:	0a d4                	or     dl,ah
     296:	0a 01                	or     al,BYTE PTR [rcx]
     298:	55                   	push   rbp
     299:	04 d4                	add    al,0xd4
     29b:	0a d9                	or     bl,cl
     29d:	0a 04 a3             	or     al,BYTE PTR [rbx+riz*4]
     2a0:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
     2ab:	00 00                	add    BYTE PTR [rax],al
     2ad:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
     2b0:	09 ad 09 06 54 93    	or     DWORD PTR [rbp-0x6cabf9f7],ebp
     2b6:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2b9:	08 04 ad 09 b3 09 06 	or     BYTE PTR [rbp*4+0x609b309],al
     2c0:	54                   	push   rsp
     2c1:	93                   	xchg   ebx,eax
     2c2:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     2c5:	08 04 b3             	or     BYTE PTR [rbx+rsi*4],al
     2c8:	09 e5                	or     ebp,esp
     2ca:	09 06                	or     DWORD PTR [rsi],eax
     2cc:	5d                   	pop    rbp
     2cd:	93                   	xchg   ebx,eax
     2ce:	08 56 93             	or     BYTE PTR [rsi-0x6d],dl
     2d1:	08 04 e5 09 e8 09 06 	or     BYTE PTR [riz*8+0x609e809],al
     2d8:	5d                   	pop    rbp
     2d9:	93                   	xchg   ebx,eax
     2da:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2dd:	08 04 ba             	or     BYTE PTR [rdx+rdi*4],al
     2e0:	0a c6                	or     al,dh
     2e2:	0a 06                	or     al,BYTE PTR [rsi]
     2e4:	54                   	push   rsp
     2e5:	93                   	xchg   ebx,eax
     2e6:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     2e9:	08 00                	or     BYTE PTR [rax],al
     2eb:	00 00                	add    BYTE PTR [rax],al
     2ed:	00 00                	add    BYTE PTR [rax],al
     2ef:	00 00                	add    BYTE PTR [rax],al
     2f1:	04 ce                	add    al,0xce
     2f3:	09 d1                	or     ecx,edx
     2f5:	09 01                	or     DWORD PTR [rcx],eax
     2f7:	50                   	push   rax
     2f8:	04 d1                	add    al,0xd1
     2fa:	09 9e 0a 01 5c 04    	or     DWORD PTR [rsi+0x45c010a],ebx
     300:	a1 0a ac 0a 01 5c 00 	movabs eax,ds:0x5c010aac0a
     307:	00 00 
	...
     315:	04 e0                	add    al,0xe0
     317:	03 9b 04 01 55 04    	add    ebx,DWORD PTR [rbx+0x4550104]
     31d:	9b                   	fwait
     31e:	04 93                	add    al,0x93
     320:	05 01 5c 04 93       	add    eax,0x93045c01
     325:	05 9b 05 04 a3       	add    eax,0xa304059b
     32a:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
     32d:	04 9b                	add    al,0x9b
     32f:	05 e3 08 01 5c       	add    eax,0x5c0108e3
     334:	04 e3                	add    al,0xe3
     336:	08 fd                	or     ch,bh
     338:	08 01                	or     BYTE PTR [rcx],al
     33a:	55                   	push   rbp
     33b:	04 fd                	add    al,0xfd
     33d:	08 82 09 04 a3 01    	or     BYTE PTR [rdx+0x1a30409],al
     343:	55                   	push   rbp
     344:	9f                   	lahf
     345:	04 82                	add    al,0x82
     347:	09 87 09 01 5c 00    	or     DWORD PTR [rdi+0x5c0109],eax
	...
     359:	04 e0                	add    al,0xe0
     35b:	03 98 04 06 54 93    	add    ebx,DWORD PTR [rax-0x6cabf9fc]
     361:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     364:	08 04 98             	or     BYTE PTR [rax+rbx*4],al
     367:	04 9e                	add    al,0x9e
     369:	04 06                	add    al,0x6
     36b:	54                   	push   rsp
     36c:	93                   	xchg   ebx,eax
     36d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     370:	08 04 9e             	or     BYTE PTR [rsi+rbx*4],al
     373:	04 91                	add    al,0x91
     375:	05 06 5d 93 08       	add    eax,0x8935d06
     37a:	53                   	push   rbx
     37b:	93                   	xchg   ebx,eax
     37c:	08 04 9b             	or     BYTE PTR [rbx+rbx*4],al
     37f:	05 eb 05 06 5d       	add    eax,0x5d0605eb
     384:	93                   	xchg   ebx,eax
     385:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     388:	08 04 e3             	or     BYTE PTR [rbx+riz*8],al
     38b:	08 ef                	or     bh,ch
     38d:	08 06                	or     BYTE PTR [rsi],al
     38f:	54                   	push   rsp
     390:	93                   	xchg   ebx,eax
     391:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
     394:	08 04 82             	or     BYTE PTR [rdx+rax*4],al
     397:	09 87 09 06 5d 93    	or     DWORD PTR [rdi-0x6ca2f9f7],eax
     39d:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
     3a0:	08 00                	or     BYTE PTR [rax],al
	...
     3ae:	04 ba                	add    al,0xba
     3b0:	04 be                	add    al,0xbe
     3b2:	04 01                	add    al,0x1
     3b4:	51                   	push   rcx
     3b5:	04 be                	add    al,0xbe
     3b7:	04 90                	add    al,0x90
     3b9:	05 02 77 14 04       	add    eax,0x4147702
     3be:	90                   	nop
     3bf:	05 9a 05 08 76       	add    eax,0x7608059a
     3c4:	58                   	pop    rax
     3c5:	09 e0                	or     eax,esp
     3c7:	1a 08                	sbb    cl,BYTE PTR [rax]
     3c9:	4c 1c 04             	rex.WR sbb al,0x4
     3cc:	9a                   	(bad)
     3cd:	05 9b 05 08 77       	add    eax,0x7708059b
     3d2:	50                   	push   rax
     3d3:	09 e0                	or     eax,esp
     3d5:	1a 08                	sbb    cl,BYTE PTR [rax]
     3d7:	4c 1c 04             	rex.WR sbb al,0x4
     3da:	9b                   	fwait
     3db:	05 e3 08 02 77       	add    eax,0x770208e3
     3e0:	14 04                	adc    al,0x4
     3e2:	82                   	(bad)
     3e3:	09 87 09 02 77 14    	or     DWORD PTR [rdi+0x14770209],eax
     3e9:	00 00                	add    BYTE PTR [rax],al
     3eb:	00 00                	add    BYTE PTR [rax],al
     3ed:	00 04 de             	add    BYTE PTR [rsi+rbx*8],al
     3f0:	04 f4                	add    al,0xf4
     3f2:	04 01                	add    al,0x1
     3f4:	50                   	push   rax
     3f5:	04 9b                	add    al,0x9b
     3f7:	05 a5 05 01 50       	add    eax,0x500105a5
     3fc:	00 01                	add    BYTE PTR [rcx],al
     3fe:	01 04 e7             	add    DWORD PTR [rdi+riz*8],eax
     401:	05 be 08 01 5c       	add    eax,0x5c0108be
     406:	00 00                	add    BYTE PTR [rax],al
     408:	00 00                	add    BYTE PTR [rax],al
     40a:	01 04 f8             	add    DWORD PTR [rax+rdi*8],eax
     40d:	05 9f 06 01 5d       	add    eax,0x5d01069f
     412:	04 9f                	add    al,0x9f
     414:	06                   	(bad)
     415:	e4 06                	in     al,0x6
     417:	01 53 00             	add    DWORD PTR [rbx+0x0],edx
     41a:	00 00                	add    BYTE PTR [rax],al
     41c:	00 01                	add    BYTE PTR [rcx],al
     41e:	04 f8                	add    al,0xf8
     420:	05 ff 05 01 50       	add    eax,0x500105ff
     425:	04 ff                	add    al,0xff
     427:	05 e4 06 02 77       	add    eax,0x770206e4
     42c:	08 00                	or     BYTE PTR [rax],al
     42e:	01 00                	add    DWORD PTR [rax],eax
     430:	04 91                	add    al,0x91
     432:	06                   	(bad)
     433:	a9 06 02 30 9f       	test   eax,0x9f300206
     438:	00 01                	add    BYTE PTR [rcx],al
     43a:	00 00                	add    BYTE PTR [rax],al
     43c:	01 01                	add    DWORD PTR [rcx],eax
     43e:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
     441:	06                   	(bad)
     442:	8b 07                	mov    eax,DWORD PTR [rdi]
     444:	02 30                	add    dh,BYTE PTR [rax]
     446:	9f                   	lahf
     447:	04 8b                	add    al,0x8b
     449:	07                   	(bad)
     44a:	fb                   	sti
     44b:	07                   	(bad)
     44c:	02 77 18             	add    dh,BYTE PTR [rdi+0x18]
     44f:	04 fb                	add    al,0xfb
     451:	07                   	(bad)
     452:	81 08 07 77 18 94    	or     DWORD PTR [rax],0x94187707
     458:	04 23                	add    al,0x23
     45a:	01 9f 00 00 00 00    	add    DWORD PTR [rdi+0x0],ebx
     460:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
     463:	07                   	(bad)
     464:	b4 07                	mov    ah,0x7
     466:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     469:	f2 07                	repnz (bad)
     46b:	95                   	xchg   ebp,eax
     46c:	08 01                	or     BYTE PTR [rcx],al
     46e:	52                   	push   rdx
     46f:	00 00                	add    BYTE PTR [rax],al
     471:	00 00                	add    BYTE PTR [rax],al
     473:	00 00                	add    BYTE PTR [rax],al
     475:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
     478:	07                   	(bad)
     479:	c1 07 06             	rol    DWORD PTR [rdi],0x6
     47c:	70 10                	jo     48e <__abi_tag+0x112>
     47e:	93                   	xchg   ebx,eax
     47f:	08 93 08 04 c1 07    	or     BYTE PTR [rbx+0x7c10408],dl
     485:	c9                   	leave
     486:	07                   	(bad)
     487:	0c 70                	or     al,0x70
     489:	10 93 08 70 18 93    	adc    BYTE PTR [rbx-0x6ce78ff8],dl
     48f:	04 70                	add    al,0x70
     491:	1c 93                	sbb    al,0x93
     493:	04 04                	add    al,0x4
     495:	c9                   	leave
     496:	07                   	(bad)
     497:	e2 07                	loop   4a0 <__abi_tag+0x124>
     499:	05 54 93 08 93       	add    eax,0x93089354
     49e:	08 00                	or     BYTE PTR [rax],al
     4a0:	04 00                	add    al,0x0
     4a2:	00 00                	add    BYTE PTR [rax],al
     4a4:	04 ce                	add    al,0xce
     4a6:	07                   	(bad)
     4a7:	d0 07                	rol    BYTE PTR [rdi],1
     4a9:	06                   	(bad)
     4aa:	70 00                	jo     4ac <__abi_tag+0x130>
     4ac:	73 00                	jae    4ae <__abi_tag+0x132>
     4ae:	1d 9f 04 d0 07       	sbb    eax,0x7d0049f
     4b3:	e2 07                	loop   4bc <__abi_tag+0x140>
     4b5:	06                   	(bad)
     4b6:	81 00 73 00 1d 9f    	add    DWORD PTR [rax],0x9f1d0073
     4bc:	00 00                	add    BYTE PTR [rax],al
     4be:	00 00                	add    BYTE PTR [rax],al
     4c0:	00 00                	add    BYTE PTR [rax],al
     4c2:	01 04 8b             	add    DWORD PTR [rbx+rcx*4],eax
     4c5:	08 95 08 02 30 9f    	or     BYTE PTR [rbp-0x60cffdf8],dl
     4cb:	04 9c                	add    al,0x9c
     4cd:	08 a5 08 01 5d 04    	or     BYTE PTR [rbp+0x45d0108],ah
     4d3:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     4d4:	08 ae 08 03 7d 7f    	or     BYTE PTR [rsi+0x7f7d0308],ch
     4da:	9f                   	lahf
	...
     4e7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     4ea:	2f                   	(bad)
     4eb:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     4ee:	2f                   	(bad)
     4ef:	6d                   	ins    DWORD PTR es:[rdi],dx
     4f0:	01 56 04             	add    DWORD PTR [rsi+0x4],edx
     4f3:	6d                   	ins    DWORD PTR es:[rdi],dx
     4f4:	78 01                	js     4f7 <__abi_tag+0x17b>
     4f6:	50                   	push   rax
     4f7:	04 78                	add    al,0x78
     4f9:	fb                   	sti
     4fa:	01 01                	add    DWORD PTR [rcx],eax
     4fc:	56                   	push   rsi
     4fd:	04 84                	add    al,0x84
     4ff:	02 9e 02 01 55 04    	add    bl,BYTE PTR [rsi+0x4550102]
     505:	9e                   	sahf
     506:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     50c:	55                   	push   rbp
     50d:	9f                   	lahf
	...
     516:	00 00                	add    BYTE PTR [rax],al
     518:	00 04 00             	add    BYTE PTR [rax+rax*1],al
     51b:	29 01                	sub    DWORD PTR [rcx],eax
     51d:	54                   	push   rsp
     51e:	04 29                	add    al,0x29
     520:	5f                   	pop    rdi
     521:	01 5c 04 5f          	add    DWORD PTR [rsp+rax*1+0x5f],ebx
     525:	84 02                	test   BYTE PTR [rdx],al
     527:	04 a3                	add    al,0xa3
     529:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
     52d:	84 02                	test   BYTE PTR [rdx],al
     52f:	97                   	xchg   edi,eax
     530:	02 01                	add    al,BYTE PTR [rcx]
     532:	54                   	push   rsp
     533:	04 97                	add    al,0x97
     535:	02 a3 02 04 a3 01    	add    ah,BYTE PTR [rbx+0x1a30402]
     53b:	54                   	push   rsp
     53c:	9f                   	lahf
     53d:	00 00                	add    BYTE PTR [rax],al
     53f:	00 00                	add    BYTE PTR [rax],al
     541:	00 00                	add    BYTE PTR [rax],al
     543:	00 04 42             	add    BYTE PTR [rdx+rax*2],al
     546:	46 01 50 04          	rex.RX add DWORD PTR [rax+0x4],r10d
     54a:	46 ff 01             	rex.RX inc DWORD PTR [rcx]
     54d:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
     550:	ff 01                	inc    DWORD PTR [rcx]
     552:	84 02                	test   BYTE PTR [rdx],al
     554:	01 50 00             	add    DWORD PTR [rax+0x0],edx
     557:	00 00                	add    BYTE PTR [rax],al
     559:	00 00                	add    BYTE PTR [rax],al
     55b:	04 4a                	add    al,0x4a
     55d:	5f                   	pop    rdi
     55e:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     561:	5f                   	pop    rdi
     562:	81 02 01 5e 00 01    	add    DWORD PTR [rdx],0x1005e01
     568:	00 01                	add    BYTE PTR [rcx],al
     56a:	00 00                	add    BYTE PTR [rax],al
     56c:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     56f:	5f                   	pop    rdi
     570:	02 30                	add    dh,BYTE PTR [rax]
     572:	9f                   	lahf
     573:	04 5f                	add    al,0x5f
     575:	78 01                	js     578 <__abi_tag+0x1fc>
     577:	56                   	push   rsi
     578:	04 78                	add    al,0x78
     57a:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     57b:	01 01                	add    DWORD PTR [rcx],eax
     57d:	54                   	push   rsp
     57e:	00 02                	add    BYTE PTR [rdx],al
     580:	00 00                	add    BYTE PTR [rax],al
     582:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     585:	5f                   	pop    rdi
     586:	02 30                	add    dh,BYTE PTR [rax]
     588:	9f                   	lahf
     589:	04 91                	add    al,0x91
     58b:	01 f2                	add    edx,esi
     58d:	01 01                	add    DWORD PTR [rcx],eax
     58f:	5c                   	pop    rsp
     590:	00 03                	add    BYTE PTR [rbx],al
     592:	00 00                	add    BYTE PTR [rax],al
     594:	02 02                	add    al,BYTE PTR [rdx]
     596:	00 00                	add    BYTE PTR [rax],al
     598:	00 04 4a             	add    BYTE PTR [rdx+rcx*2],al
     59b:	5f                   	pop    rdi
     59c:	02 30                	add    dh,BYTE PTR [rax]
     59e:	9f                   	lahf
     59f:	04 5f                	add    al,0x5f
     5a1:	e3 01                	jrcxz  5a4 <__abi_tag+0x228>
     5a3:	05 7f 00 34 25       	add    eax,0x2534007f
     5a8:	9f                   	lahf
     5a9:	04 e3                	add    al,0xe3
     5ab:	01 e7                	add    edi,esp
     5ad:	01 07                	add    DWORD PTR [rdi],eax
     5af:	7f 00                	jg     5b1 <__abi_tag+0x235>
     5b1:	34 25                	xor    al,0x25
     5b3:	23 01                	and    eax,DWORD PTR [rcx]
     5b5:	9f                   	lahf
     5b6:	04 e7                	add    al,0xe7
     5b8:	01 f2                	add    edx,esi
     5ba:	01 07                	add    DWORD PTR [rdi],eax
     5bc:	7f 70                	jg     62e <__abi_tag+0x2b2>
     5be:	34 25                	xor    al,0x25
     5c0:	23 01                	and    eax,DWORD PTR [rcx]
     5c2:	9f                   	lahf
     5c3:	00 02                	add    BYTE PTR [rdx],al
     5c5:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     5c8:	6d                   	ins    DWORD PTR es:[rdi],dx
     5c9:	02 3a                	add    bh,BYTE PTR [rdx]
     5cb:	9f                   	lahf
     5cc:	00 02                	add    BYTE PTR [rdx],al
     5ce:	00 04 5f             	add    BYTE PTR [rdi+rbx*2],al
     5d1:	6d                   	ins    DWORD PTR es:[rdi],dx
     5d2:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
     5d5:	00 00                	add    BYTE PTR [rax],al
     5d7:	00 00                	add    BYTE PTR [rax],al
     5d9:	04 9b                	add    al,0x9b
     5db:	01 a7 01 01 51 04    	add    DWORD PTR [rdi+0x4510101],esp
     5e1:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     5e2:	01 a8 01 03 91 a8    	add    DWORD PTR [rax-0x576efcff],ebp
     5e8:	7f 00                	jg     5ea <__abi_tag+0x26e>
     5ea:	01 00                	add    DWORD PTR [rax],eax
     5ec:	04 91                	add    al,0x91
     5ee:	01 a7 01 01 54 00    	add    DWORD PTR [rdi+0x540101],esp
     5f4:	01 00                	add    DWORD PTR [rax],eax
     5f6:	00 00                	add    BYTE PTR [rax],al
     5f8:	04 91                	add    al,0x91
     5fa:	01 a7 01 01 55 04    	add    DWORD PTR [rdi+0x4550101],esp
     600:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
     601:	01 a8 01 03 91 a0    	add    DWORD PTR [rax-0x5f6efcff],ebp
     607:	7f 00                	jg     609 <__abi_tag+0x28d>
     609:	00 00                	add    BYTE PTR [rax],al
     60b:	00 00                	add    BYTE PTR [rax],al
     60d:	00 00                	add    BYTE PTR [rax],al
     60f:	04 b6                	add    al,0xb6
     611:	01 c8                	add    eax,ecx
     613:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     616:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     61a:	0c ff                	or     al,0xff
     61c:	ff                   	(bad)
     61d:	ff                   	(bad)
     61e:	ff 1a                	call   FWORD PTR [rdx]
     620:	9f                   	lahf
     621:	04 c8                	add    al,0xc8
     623:	01 d4                	add    esp,edx
     625:	01 01                	add    DWORD PTR [rcx],eax
     627:	51                   	push   rcx
     628:	04 d4                	add    al,0xd4
     62a:	01 d5                	add    ebp,edx
     62c:	01 0c 08             	add    DWORD PTR [rax+rcx*1],ecx
     62f:	20 7c 00 1c          	and    BYTE PTR [rax+rax*1+0x1c],bh
     633:	0c ff                	or     al,0xff
     635:	ff                   	(bad)
     636:	ff                   	(bad)
     637:	ff 1a                	call   FWORD PTR [rdx]
     639:	9f                   	lahf
     63a:	00 00                	add    BYTE PTR [rax],al
     63c:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     63f:	01 d5                	add    ebp,edx
     641:	01 02                	add    DWORD PTR [rdx],eax
     643:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     649:	00 00                	add    BYTE PTR [rax],al
     64b:	00 04 b6             	add    BYTE PTR [rsi+rsi*4],al
     64e:	01 d0                	add    eax,edx
     650:	01 06                	add    DWORD PTR [rsi],eax
     652:	7e 00                	jle    654 <__abi_tag+0x2d8>
     654:	75 00                	jne    656 <__abi_tag+0x2da>
     656:	22 9f 04 d0 01 d4    	and    bl,BYTE PTR [rdi-0x2bfe2ffc]
     65c:	01 01                	add    DWORD PTR [rcx],eax
     65e:	55                   	push   rbp
     65f:	04 d4                	add    al,0xd4
     661:	01 d5                	add    ebp,edx
     663:	01 0d 7e 00 91 a8    	add    DWORD PTR [rip+0xffffffffa891007e],ecx        # ffffffffa89106e7 <_end+0xffffffffa890a6cf>
     669:	7f 06                	jg     671 <__abi_tag+0x2f5>
     66b:	22 91 b0 7f 06 22    	and    dl,BYTE PTR [rcx+0x22067fb0]
     671:	9f                   	lahf
	...
     67a:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     67d:	02 e6                	add    ah,dh
     67f:	02 01                	add    al,BYTE PTR [rcx]
     681:	54                   	push   rsp
     682:	04 e6                	add    al,0xe6
     684:	02 f4                	add    dh,ah
     686:	02 02                	add    al,BYTE PTR [rdx]
     688:	75 10                	jne    69a <__abi_tag+0x31e>
     68a:	04 f4                	add    al,0xf4
     68c:	02 f8                	add    bh,al
     68e:	02 02                	add    al,BYTE PTR [rdx]
     690:	7c 10                	jl     6a2 <__abi_tag+0x326>
     692:	04 f8                	add    al,0xf8
     694:	02 d9                	add    bl,cl
     696:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     699:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
     69d:	00 00                	add    BYTE PTR [rax],al
     69f:	00 00                	add    BYTE PTR [rax],al
     6a1:	00 00                	add    BYTE PTR [rax],al
     6a3:	04 b0                	add    al,0xb0
     6a5:	02 f8                	add    bh,al
     6a7:	02 01                	add    al,BYTE PTR [rcx]
     6a9:	51                   	push   rcx
     6aa:	04 f8                	add    al,0xf8
     6ac:	02 90 03 01 5e 04    	add    dl,BYTE PTR [rax+0x45e0103]
     6b2:	90                   	nop
     6b3:	03 d9                	add    ebx,ecx
     6b5:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
     6b8:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
	...
     6c3:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
     6c6:	02 f4                	add    dh,ah
     6c8:	02 02                	add    al,BYTE PTR [rdx]
     6ca:	75 00                	jne    6cc <__abi_tag+0x350>
     6cc:	04 f4                	add    al,0xf4
     6ce:	02 ce                	add    cl,dh
     6d0:	03 02                	add    eax,DWORD PTR [rdx]
     6d2:	7c 00                	jl     6d4 <__abi_tag+0x358>
     6d4:	04 ce                	add    al,0xce
     6d6:	03 d4                	add    edx,esp
     6d8:	03 02                	add    eax,DWORD PTR [rdx]
     6da:	70 00                	jo     6dc <__abi_tag+0x360>
     6dc:	04 d4                	add    al,0xd4
     6de:	03 d9                	add    ebx,ecx
     6e0:	03 02                	add    eax,DWORD PTR [rdx]
     6e2:	7c 00                	jl     6e4 <__abi_tag+0x368>
     6e4:	00 01                	add    BYTE PTR [rcx],al
     6e6:	00 04 fd 02 90 03 02 	add    BYTE PTR [rdi*8+0x2039002],al
     6ed:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     6f3:	00 00                	add    BYTE PTR [rax],al
     6f5:	00 00                	add    BYTE PTR [rax],al
     6f7:	00 00                	add    BYTE PTR [rax],al
     6f9:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
     6fc:	0b 8b 0c 01 55 04    	or     ecx,DWORD PTR [rbx+0x455010c]
     702:	8b 0c b4             	mov    ecx,DWORD PTR [rsp+rsi*4]
     705:	0c 01                	or     al,0x1
     707:	56                   	push   rsi
     708:	04 b4                	add    al,0xb4
     70a:	0c b9                	or     al,0xb9
     70c:	0c 04                	or     al,0x4
     70e:	a3 01 55 9f 04 b9 0c 	movabs ds:0xcd30cb9049f5501,eax
     715:	d3 0c 
     717:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
     71a:	d3 0c d8             	ror    DWORD PTR [rax+rbx*8],cl
     71d:	0c 04                	or     al,0x4
     71f:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
     726:	00 00 
     728:	00 01                	add    BYTE PTR [rcx],al
     72a:	04 85                	add    al,0x85
     72c:	0c 8b                	or     al,0x8b
     72e:	0c 02                	or     al,0x2
     730:	30 9f 04 8b 0c 9c    	xor    BYTE PTR [rdi-0x63f374fc],bl
     736:	0c 01                	or     al,0x1
     738:	53                   	push   rbx
     739:	04 9c                	add    al,0x9c
     73b:	0c a5                	or     al,0xa5
     73d:	0c 03                	or     al,0x3
     73f:	73 7f                	jae    7c0 <__abi_tag+0x444>
     741:	9f                   	lahf
     742:	00 f0                	add    al,dh
     744:	0c 00                	or     al,0x0
     746:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # f4c <__abi_tag+0xbd0>
     74c:	00 00                	add    BYTE PTR [rax],al
     74e:	00 00                	add    BYTE PTR [rax],al
     750:	00 04 d0             	add    BYTE PTR [rax+rdx*8],al
     753:	08 d8                	or     al,bl
     755:	08 06                	or     BYTE PTR [rsi],al
     757:	55                   	push   rbp
     758:	93                   	xchg   ebx,eax
     759:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     75d:	00 01                	add    BYTE PTR [rcx],al
     75f:	00 00                	add    BYTE PTR [rax],al
     761:	00 00                	add    BYTE PTR [rax],al
     763:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
     766:	08 e3                	or     bl,ah
     768:	08 02                	or     BYTE PTR [rdx],al
     76a:	30 9f 04 e3 08 ee    	xor    BYTE PTR [rdi-0x11f71cfc],bl
     770:	08 01                	or     BYTE PTR [rcx],al
     772:	50                   	push   rax
     773:	04 f0                	add    al,0xf0
     775:	08 99 09 01 50 00    	or     BYTE PTR [rcx+0x500109],bl
     77b:	02 00                	add    al,BYTE PTR [rax]
     77d:	01 00                	add    DWORD PTR [rax],eax
	...
     787:	04 da                	add    al,0xda
     789:	08 e3                	or     bl,ah
     78b:	08 02                	or     BYTE PTR [rdx],al
     78d:	30 9f 04 f0 08 f8    	xor    BYTE PTR [rdi-0x7f70ffc],bl
     793:	08 08                	or     BYTE PTR [rax],cl
     795:	70 00                	jo     797 <__abi_tag+0x41b>
     797:	40                   	rex
     798:	48 24 1f             	rex.W and al,0x1f
     79b:	1a 9f 04 f8 08 82    	sbb    bl,BYTE PTR [rdi-0x7df707fc]
     7a1:	09 01                	or     DWORD PTR [rcx],eax
     7a3:	51                   	push   rcx
     7a4:	04 82                	add    al,0x82
     7a6:	09 85 09 01 52 04    	or     DWORD PTR [rbp+0x4520109],eax
     7ac:	85 09                	test   DWORD PTR [rcx],ecx
     7ae:	8f 09 04 71          	(bad)
     7b2:	00 20                	add    BYTE PTR [rax],ah
     7b4:	9f                   	lahf
     7b5:	04 8f                	add    al,0x8f
     7b7:	09 99 09 01 51 00    	or     DWORD PTR [rcx+0x510109],ebx
     7bd:	03 00                	add    eax,DWORD PTR [rax]
     7bf:	04 da                	add    al,0xda
     7c1:	08 e3                	or     bl,ah
     7c3:	08 02                	or     BYTE PTR [rdx],al
     7c5:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     7cb:	d0 07                	rol    BYTE PTR [rdi],1
     7cd:	d4                   	(bad)
     7ce:	07                   	(bad)
     7cf:	06                   	(bad)
     7d0:	55                   	push   rbp
     7d1:	93                   	xchg   ebx,eax
     7d2:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     7d6:	00 01                	add    BYTE PTR [rcx],al
     7d8:	00 00                	add    BYTE PTR [rax],al
     7da:	00 00                	add    BYTE PTR [rax],al
     7dc:	00 00                	add    BYTE PTR [rax],al
     7de:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     7e1:	07                   	(bad)
     7e2:	ea                   	(bad)
     7e3:	07                   	(bad)
     7e4:	02 31                	add    dh,BYTE PTR [rcx]
     7e6:	9f                   	lahf
     7e7:	04 ea                	add    al,0xea
     7e9:	07                   	(bad)
     7ea:	f9                   	stc
     7eb:	07                   	(bad)
     7ec:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     7ef:	92                   	xchg   edx,eax
     7f0:	08 b6 08 01 51 04    	or     BYTE PTR [rsi+0x4510108],dh
     7f6:	b6 08                	mov    dh,0x8
     7f8:	c6                   	(bad)
     7f9:	08 02                	or     BYTE PTR [rdx],al
     7fb:	31 9f 00 02 00 00    	xor    DWORD PTR [rdi+0x200],ebx
     801:	00 00                	add    BYTE PTR [rax],al
     803:	00 00                	add    BYTE PTR [rax],al
     805:	00 00                	add    BYTE PTR [rax],al
     807:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     80a:	07                   	(bad)
     80b:	ea                   	(bad)
     80c:	07                   	(bad)
     80d:	02 30                	add    dh,BYTE PTR [rax]
     80f:	9f                   	lahf
     810:	04 ea                	add    al,0xea
     812:	07                   	(bad)
     813:	90                   	nop
     814:	08 01                	or     BYTE PTR [rcx],al
     816:	50                   	push   rax
     817:	04 ab                	add    al,0xab
     819:	08 b3 08 01 50 04    	or     BYTE PTR [rbx+0x4500108],dh
     81f:	b3 08                	mov    bl,0x8
     821:	b6 08                	mov    dh,0x8
     823:	06                   	(bad)
     824:	72 00                	jb     826 <__abi_tag+0x4aa>
     826:	79 00                	jns    828 <__abi_tag+0x4ac>
     828:	1c 9f                	sbb    al,0x9f
     82a:	04 b6                	add    al,0xb6
     82c:	08 c6                	or     dh,al
     82e:	08 02                	or     BYTE PTR [rdx],al
     830:	30 9f 00 04 00 00    	xor    BYTE PTR [rdi+0x400],bl
     836:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
     839:	07                   	(bad)
     83a:	ea                   	(bad)
     83b:	07                   	(bad)
     83c:	02 30                	add    dh,BYTE PTR [rax]
     83e:	9f                   	lahf
     83f:	04 b6                	add    al,0xb6
     841:	08 c6                	or     dh,al
     843:	08 02                	or     BYTE PTR [rdx],al
     845:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     84b:	e0 04                	loopne 851 <__abi_tag+0x4d5>
     84d:	e8 04 06 55 93       	call   ffffffff93550e56 <_end+0xffffffff9354ae3e>
     852:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     856:	00 01                	add    BYTE PTR [rcx],al
     858:	00 00                	add    BYTE PTR [rax],al
     85a:	02 02                	add    al,BYTE PTR [rdx]
     85c:	00 00                	add    BYTE PTR [rax],al
     85e:	00 02                	add    BYTE PTR [rdx],al
     860:	00 00                	add    BYTE PTR [rax],al
     862:	00 02                	add    BYTE PTR [rdx],al
     864:	00 00                	add    BYTE PTR [rax],al
     866:	00 00                	add    BYTE PTR [rax],al
     868:	00 00                	add    BYTE PTR [rax],al
     86a:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     86d:	04 9f                	add    al,0x9f
     86f:	05 02 30 9f 04       	add    eax,0x49f3002
     874:	e1 05                	loope  87b <__abi_tag+0x4ff>
     876:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     879:	50                   	push   rax
     87a:	04 8a                	add    al,0x8a
     87c:	07                   	(bad)
     87d:	8c 07                	mov    WORD PTR [rdi],es
     87f:	06                   	(bad)
     880:	70 00                	jo     882 <__abi_tag+0x506>
     882:	72 00                	jb     884 <__abi_tag+0x508>
     884:	22 9f 04 8c 07 8d    	and    bl,BYTE PTR [rdi-0x72f873fc]
     88a:	07                   	(bad)
     88b:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     88e:	93                   	xchg   ebx,eax
     88f:	07                   	(bad)
     890:	95                   	xchg   ebp,eax
     891:	07                   	(bad)
     892:	06                   	(bad)
     893:	70 00                	jo     895 <__abi_tag+0x519>
     895:	72 00                	jb     897 <__abi_tag+0x51b>
     897:	22 9f 04 95 07 96    	and    bl,BYTE PTR [rdi-0x69f86afc]
     89d:	07                   	(bad)
     89e:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     8a1:	a3 07 a5 07 06 70 00 	movabs ds:0x7200700607a507,eax
     8a8:	72 00 
     8aa:	22 9f 04 a5 07 a6    	and    bl,BYTE PTR [rdi-0x59f85afc]
     8b0:	07                   	(bad)
     8b1:	01 50 04             	add    DWORD PTR [rax+0x4],edx
     8b4:	b4 07                	mov    ah,0x7
     8b6:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     8b9:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     8bf:	07                   	(bad)
     8c0:	02 30                	add    dh,BYTE PTR [rax]
     8c2:	9f                   	lahf
     8c3:	00 02                	add    BYTE PTR [rdx],al
     8c5:	00 01                	add    BYTE PTR [rcx],al
     8c7:	00 00                	add    BYTE PTR [rax],al
     8c9:	01 01                	add    DWORD PTR [rcx],eax
     8cb:	00 00                	add    BYTE PTR [rax],al
     8cd:	01 01                	add    DWORD PTR [rcx],eax
     8cf:	00 00                	add    BYTE PTR [rax],al
     8d1:	01 01                	add    DWORD PTR [rcx],eax
     8d3:	00 00                	add    BYTE PTR [rax],al
     8d5:	01 01                	add    DWORD PTR [rcx],eax
     8d7:	01 01                	add    DWORD PTR [rcx],eax
     8d9:	02 00                	add    al,BYTE PTR [rax]
     8db:	00 00                	add    BYTE PTR [rax],al
     8dd:	00 00                	add    BYTE PTR [rax],al
     8df:	02 02                	add    al,BYTE PTR [rdx]
     8e1:	01 01                	add    DWORD PTR [rcx],eax
     8e3:	01 01                	add    DWORD PTR [rcx],eax
	...
     8ed:	00 00                	add    BYTE PTR [rax],al
     8ef:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     8f2:	04 9f                	add    al,0x9f
     8f4:	05 02 30 9f 04       	add    eax,0x49f3002
     8f9:	f1                   	int1
     8fa:	05 fc 05 0b 7a       	add    eax,0x7a0b05fc
     8ff:	00 08                	add    BYTE PTR [rax],cl
     901:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     904:	20 26                	and    BYTE PTR [rsi],ah
     906:	75 00                	jne    908 <__abi_tag+0x58c>
     908:	22 04 fc             	and    al,BYTE PTR [rsp+rdi*8]
     90b:	05 81 06 0b 72       	add    eax,0x720b0681
     910:	04 08                	add    al,0x8
     912:	20 24 08             	and    BYTE PTR [rax+rcx*1],ah
     915:	20 26                	and    BYTE PTR [rsi],ah
     917:	75 00                	jne    919 <__abi_tag+0x59d>
     919:	22 04 81             	and    al,BYTE PTR [rcx+rax*4]
     91c:	06                   	(bad)
     91d:	8c 06                	mov    WORD PTR [rsi],es
     91f:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     922:	08 20                	or     BYTE PTR [rax],ah
     924:	24 08                	and    al,0x8
     926:	20 26                	and    BYTE PTR [rsi],ah
     928:	75 00                	jne    92a <__abi_tag+0x5ae>
     92a:	22 04 8c             	and    al,BYTE PTR [rsp+rcx*4]
     92d:	06                   	(bad)
     92e:	91                   	xchg   ecx,eax
     92f:	06                   	(bad)
     930:	0b 72 08             	or     esi,DWORD PTR [rdx+0x8]
     933:	08 20                	or     BYTE PTR [rax],ah
     935:	24 08                	and    al,0x8
     937:	20 26                	and    BYTE PTR [rsi],ah
     939:	75 00                	jne    93b <__abi_tag+0x5bf>
     93b:	22 04 91             	and    al,BYTE PTR [rcx+rdx*4]
     93e:	06                   	(bad)
     93f:	9c                   	pushf
     940:	06                   	(bad)
     941:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     944:	08 20                	or     BYTE PTR [rax],ah
     946:	24 08                	and    al,0x8
     948:	20 26                	and    BYTE PTR [rsi],ah
     94a:	75 00                	jne    94c <__abi_tag+0x5d0>
     94c:	22 04 9c             	and    al,BYTE PTR [rsp+rbx*4]
     94f:	06                   	(bad)
     950:	a1 06 0b 72 0c 08 20 	movabs eax,ds:0x82420080c720b06
     957:	24 08 
     959:	20 26                	and    BYTE PTR [rsi],ah
     95b:	75 00                	jne    95d <__abi_tag+0x5e1>
     95d:	22 04 a1             	and    al,BYTE PTR [rcx+riz*4]
     960:	06                   	(bad)
     961:	ac                   	lods   al,BYTE PTR ds:[rsi]
     962:	06                   	(bad)
     963:	0b 7a 00             	or     edi,DWORD PTR [rdx+0x0]
     966:	08 20                	or     BYTE PTR [rax],ah
     968:	24 08                	and    al,0x8
     96a:	20 26                	and    BYTE PTR [rsi],ah
     96c:	75 00                	jne    96e <__abi_tag+0x5f2>
     96e:	22 04 ac             	and    al,BYTE PTR [rsp+rbp*4]
     971:	06                   	(bad)
     972:	b1 06                	mov    cl,0x6
     974:	0b 72 10             	or     esi,DWORD PTR [rdx+0x10]
     977:	08 20                	or     BYTE PTR [rax],ah
     979:	24 08                	and    al,0x8
     97b:	20 26                	and    BYTE PTR [rsi],ah
     97d:	75 00                	jne    97f <__abi_tag+0x603>
     97f:	22 04 b1             	and    al,BYTE PTR [rcx+rsi*4]
     982:	06                   	(bad)
     983:	c0 06 0b             	rol    BYTE PTR [rsi],0xb
     986:	7a 00                	jp     988 <__abi_tag+0x60c>
     988:	08 20                	or     BYTE PTR [rax],ah
     98a:	24 08                	and    al,0x8
     98c:	20 26                	and    BYTE PTR [rsi],ah
     98e:	75 00                	jne    990 <__abi_tag+0x614>
     990:	22 04 c0             	and    al,BYTE PTR [rax+rax*8]
     993:	06                   	(bad)
     994:	c6 06 0b             	mov    BYTE PTR [rsi],0xb
     997:	72 00                	jb     999 <__abi_tag+0x61d>
     999:	08 20                	or     BYTE PTR [rax],ah
     99b:	24 08                	and    al,0x8
     99d:	20 26                	and    BYTE PTR [rsi],ah
     99f:	75 00                	jne    9a1 <__abi_tag+0x625>
     9a1:	22 04 cb             	and    al,BYTE PTR [rbx+rcx*8]
     9a4:	06                   	(bad)
     9a5:	db 06                	fild   DWORD PTR [rsi]
     9a7:	02 30                	add    dh,BYTE PTR [rax]
     9a9:	9f                   	lahf
     9aa:	04 db                	add    al,0xdb
     9ac:	06                   	(bad)
     9ad:	e7 06                	out    0x6,eax
     9af:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9b2:	ed                   	in     eax,dx
     9b3:	06                   	(bad)
     9b4:	f2 06                	repnz (bad)
     9b6:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9b9:	f2 06                	repnz (bad)
     9bb:	f8                   	clc
     9bc:	06                   	(bad)
     9bd:	05 72 00 38 24       	add    eax,0x24380072
     9c2:	9f                   	lahf
     9c3:	04 f8                	add    al,0xf8
     9c5:	06                   	(bad)
     9c6:	fe 06                	inc    BYTE PTR [rsi]
     9c8:	05 72 00 40 24       	add    eax,0x24400072
     9cd:	9f                   	lahf
     9ce:	04 fe                	add    al,0xfe
     9d0:	06                   	(bad)
     9d1:	83 07 05             	add    DWORD PTR [rdi],0x5
     9d4:	72 00                	jb     9d6 <__abi_tag+0x65a>
     9d6:	48 24 9f             	rex.W and al,0x9f
     9d9:	04 83                	add    al,0x83
     9db:	07                   	(bad)
     9dc:	8a 07                	mov    al,BYTE PTR [rdi]
     9de:	01 52 04             	add    DWORD PTR [rdx+0x4],edx
     9e1:	8d 07                	lea    eax,[rdi]
     9e3:	93                   	xchg   ebx,eax
     9e4:	07                   	(bad)
     9e5:	05 72 00 38 24       	add    eax,0x24380072
     9ea:	9f                   	lahf
     9eb:	04 96                	add    al,0x96
     9ed:	07                   	(bad)
     9ee:	a3 07 05 72 00 40 24 	movabs ds:0x49f244000720507,eax
     9f5:	9f 04 
     9f7:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     9f8:	07                   	(bad)
     9f9:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     9fc:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     a02:	07                   	(bad)
     a03:	02 30                	add    dh,BYTE PTR [rax]
     a05:	9f                   	lahf
     a06:	00 03                	add    BYTE PTR [rbx],al
     a08:	00 00                	add    BYTE PTR [rax],al
     a0a:	01 01                	add    DWORD PTR [rcx],eax
     a0c:	01 00                	add    DWORD PTR [rax],eax
     a0e:	00 00                	add    BYTE PTR [rax],al
     a10:	00 04 eb             	add    BYTE PTR [rbx+rbp*8],al
     a13:	04 9f                	add    al,0x9f
     a15:	05 02 30 9f 04       	add    eax,0x49f3002
     a1a:	ec                   	in     al,dx
     a1b:	05 bb 06 01 5a       	add    eax,0x5a0106bb
     a20:	04 bb                	add    al,0xbb
     a22:	06                   	(bad)
     a23:	c6 06 01             	mov    BYTE PTR [rsi],0x1
     a26:	52                   	push   rdx
     a27:	04 b4                	add    al,0xb4
     a29:	07                   	(bad)
     a2a:	c0 07 02             	rol    BYTE PTR [rdi],0x2
     a2d:	30 9f 04 c5 07 ce    	xor    BYTE PTR [rdi-0x31f83afc],bl
     a33:	07                   	(bad)
     a34:	02 30                	add    dh,BYTE PTR [rax]
     a36:	9f                   	lahf
     a37:	00 00                	add    BYTE PTR [rax],al
     a39:	00 00                	add    BYTE PTR [rax],al
     a3b:	01 00                	add    DWORD PTR [rax],eax
     a3d:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
     a40:	06                   	(bad)
     a41:	eb 06                	jmp    a49 <__abi_tag+0x6cd>
     a43:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     a46:	eb 06                	jmp    a4e <__abi_tag+0x6d2>
     a48:	ed                   	in     eax,dx
     a49:	06                   	(bad)
     a4a:	03 71 7f             	add    esi,DWORD PTR [rcx+0x7f]
     a4d:	9f                   	lahf
     a4e:	04 a6                	add    al,0xa6
     a50:	07                   	(bad)
     a51:	b4 07                	mov    ah,0x7
     a53:	01 51 00             	add    DWORD PTR [rcx+0x0],edx
     a56:	00 03                	add    BYTE PTR [rbx],al
     a58:	03 02                	add    eax,DWORD PTR [rdx]
     a5a:	02 02                	add    al,BYTE PTR [rdx]
     a5c:	02 00                	add    al,BYTE PTR [rax]
     a5e:	00 00                	add    BYTE PTR [rax],al
     a60:	00 00                	add    BYTE PTR [rax],al
     a62:	04 f2                	add    al,0xf2
     a64:	06                   	(bad)
     a65:	f2 06                	repnz (bad)
     a67:	05 34 79 00 1c       	add    eax,0x1c007934
     a6c:	9f                   	lahf
     a6d:	04 f2                	add    al,0xf2
     a6f:	06                   	(bad)
     a70:	f8                   	clc
     a71:	06                   	(bad)
     a72:	05 33 79 00 1c       	add    eax,0x1c007933
     a77:	9f                   	lahf
     a78:	04 f8                	add    al,0xf8
     a7a:	06                   	(bad)
     a7b:	fe 06                	inc    BYTE PTR [rsi]
     a7d:	05 32 79 00 1c       	add    eax,0x1c007932
     a82:	9f                   	lahf
     a83:	04 fe                	add    al,0xfe
     a85:	06                   	(bad)
     a86:	8a 07                	mov    al,BYTE PTR [rdi]
     a88:	05 31 79 00 1c       	add    eax,0x1c007931
     a8d:	9f                   	lahf
     a8e:	04 8d                	add    al,0x8d
     a90:	07                   	(bad)
     a91:	93                   	xchg   ebx,eax
     a92:	07                   	(bad)
     a93:	05 33 79 00 1c       	add    eax,0x1c007933
     a98:	9f                   	lahf
     a99:	04 96                	add    al,0x96
     a9b:	07                   	(bad)
     a9c:	a3 07 05 32 79 00 1c 	movabs ds:0x9f1c0079320507,eax
     aa3:	9f 00 
     aa5:	00 00                	add    BYTE PTR [rax],al
     aa7:	04 b0                	add    al,0xb0
     aa9:	03 b8 03 06 55 93    	add    edi,DWORD PTR [rax-0x6caaf9fd]
     aaf:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
	...
     abb:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     ac2:	50                   	push   rax
     ac3:	04 c9                	add    al,0xc9
     ac5:	03 ff                	add    edi,edi
     ac7:	03 01                	add    eax,DWORD PTR [rcx]
     ac9:	54                   	push   rsp
     aca:	04 ff                	add    al,0xff
     acc:	03 84 04 05 74 00 33 	add    eax,DWORD PTR [rsp+rax*1+0x33007405]
     ad3:	1a 9f 04 cf 04 d4    	sbb    bl,BYTE PTR [rdi-0x2bfb30fc]
     ad9:	04 01                	add    al,0x1
     adb:	50                   	push   rax
     adc:	00 01                	add    BYTE PTR [rcx],al
     ade:	00 00                	add    BYTE PTR [rax],al
     ae0:	01 01                	add    DWORD PTR [rcx],eax
     ae2:	00 04 bd 03 e3 03 01 	add    BYTE PTR [rdi*4+0x103e303],al
     ae9:	52                   	push   rdx
     aea:	04 e3                	add    al,0xe3
     aec:	03 fa                	add    edi,edx
     aee:	03 03                	add    eax,DWORD PTR [rbx]
     af0:	72 7c                	jb     b6e <__abi_tag+0x7f2>
     af2:	9f                   	lahf
     af3:	04 fa                	add    al,0xfa
     af5:	03 d4                	add    edx,esp
     af7:	04 01                	add    al,0x1
     af9:	52                   	push   rdx
     afa:	00 02                	add    BYTE PTR [rdx],al
     afc:	00 00                	add    BYTE PTR [rax],al
     afe:	00 00                	add    BYTE PTR [rax],al
     b00:	00 02                	add    BYTE PTR [rdx],al
	...
     b0a:	00 04 bd 03 c9 03 01 	add    BYTE PTR [rdi*4+0x103c903],al
     b11:	50                   	push   rax
     b12:	04 c9                	add    al,0xc9
     b14:	03 d5                	add    edx,ebp
     b16:	03 01                	add    eax,DWORD PTR [rcx]
     b18:	54                   	push   rsp
     b19:	04 d5                	add    al,0xd5
     b1b:	03 e9                	add    ebp,ecx
     b1d:	03 01                	add    eax,DWORD PTR [rcx]
     b1f:	51                   	push   rcx
     b20:	04 f2                	add    al,0xf2
     b22:	03 a5 04 01 51 04    	add    esp,DWORD PTR [rbp+0x4510104]
     b28:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     b29:	04 a7                	add    al,0xa7
     b2b:	04 06                	add    al,0x6
     b2d:	70 00                	jo     b2f <__abi_tag+0x7b3>
     b2f:	71 00                	jno    b31 <__abi_tag+0x7b5>
     b31:	27                   	(bad)
     b32:	9f                   	lahf
     b33:	04 a7                	add    al,0xa7
     b35:	04 a8                	add    al,0xa8
     b37:	04 01                	add    al,0x1
     b39:	50                   	push   rax
     b3a:	04 a8                	add    al,0xa8
     b3c:	04 cf                	add    al,0xcf
     b3e:	04 01                	add    al,0x1
     b40:	51                   	push   rcx
     b41:	04 cf                	add    al,0xcf
     b43:	04 d4                	add    al,0xd4
     b45:	04 01                	add    al,0x1
     b47:	50                   	push   rax
     b48:	00 03                	add    BYTE PTR [rbx],al
     b4a:	00 01                	add    BYTE PTR [rcx],al
     b4c:	02 02                	add    al,BYTE PTR [rdx]
     b4e:	03 03                	add    eax,DWORD PTR [rbx]
     b50:	04 04                	add    al,0x4
     b52:	00 00                	add    BYTE PTR [rax],al
     b54:	00 00                	add    BYTE PTR [rax],al
     b56:	01 01                	add    DWORD PTR [rcx],eax
     b58:	00 00                	add    BYTE PTR [rax],al
     b5a:	00 00                	add    BYTE PTR [rax],al
     b5c:	00 00                	add    BYTE PTR [rax],al
     b5e:	00 04 bd 03 d5 03 02 	add    BYTE PTR [rdi*4+0x203d503],al
     b65:	30 9f 04 d5 03 d5    	xor    BYTE PTR [rdi-0x2afc2afc],bl
     b6b:	03 08                	add    ecx,DWORD PTR [rax]
     b6d:	72 00                	jb     b6f <__abi_tag+0x7f3>
     b6f:	94                   	xchg   esp,eax
     b70:	01 08                	add    DWORD PTR [rax],ecx
     b72:	ff 1a                	call   FWORD PTR [rdx]
     b74:	9f                   	lahf
     b75:	04 d5                	add    al,0xd5
     b77:	03 d5                	add    edx,ebp
     b79:	03 12                	add    edx,DWORD PTR [rdx]
     b7b:	72 01                	jb     b7e <__abi_tag+0x802>
     b7d:	94                   	xchg   esp,eax
     b7e:	01 08                	add    DWORD PTR [rax],ecx
     b80:	ff 1a                	call   FWORD PTR [rdx]
     b82:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     b85:	00 94 01 08 ff 1a 21 	add    BYTE PTR [rcx+rax*1+0x211aff08],dl
     b8c:	9f                   	lahf
     b8d:	04 d5                	add    al,0xd5
     b8f:	03 d5                	add    edx,ebp
     b91:	03 1c 72             	add    ebx,DWORD PTR [rdx+rsi*2]
     b94:	01 94 01 08 ff 1a 38 	add    DWORD PTR [rcx+rax*1+0x381aff08],edx
     b9b:	24 72                	and    al,0x72
     b9d:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     ba4:	24 21                	and    al,0x21
     ba6:	72 00                	jb     ba8 <__abi_tag+0x82c>
     ba8:	94                   	xchg   esp,eax
     ba9:	01 08                	add    DWORD PTR [rax],ecx
     bab:	ff 1a                	call   FWORD PTR [rdx]
     bad:	21 9f 04 d5 03 df    	and    DWORD PTR [rdi-0x20fc2afc],ebx
     bb3:	03 26                	add    esp,DWORD PTR [rsi]
     bb5:	72 01                	jb     bb8 <__abi_tag+0x83c>
     bb7:	94                   	xchg   esp,eax
     bb8:	01 08                	add    DWORD PTR [rax],ecx
     bba:	ff 1a                	call   FWORD PTR [rdx]
     bbc:	38 24 72             	cmp    BYTE PTR [rdx+rsi*2],ah
     bbf:	02 94 01 08 ff 1a 40 	add    dl,BYTE PTR [rcx+rax*1+0x401aff08]
     bc6:	24 21                	and    al,0x21
     bc8:	72 03                	jb     bcd <__abi_tag+0x851>
     bca:	94                   	xchg   esp,eax
     bcb:	01 08                	add    DWORD PTR [rax],ecx
     bcd:	ff 1a                	call   FWORD PTR [rdx]
     bcf:	48 24 21             	rex.W and al,0x21
     bd2:	72 00                	jb     bd4 <__abi_tag+0x858>
     bd4:	94                   	xchg   esp,eax
     bd5:	01 08                	add    DWORD PTR [rax],ecx
     bd7:	ff 1a                	call   FWORD PTR [rdx]
     bd9:	21 9f 04 df 03 f2    	and    DWORD PTR [rdi-0xdfc20fc],ebx
     bdf:	03 01                	add    eax,DWORD PTR [rcx]
     be1:	58                   	pop    rax
     be2:	04 f2                	add    al,0xf2
     be4:	03 f2                	add    esi,edx
     be6:	03 01                	add    eax,DWORD PTR [rcx]
     be8:	50                   	push   rax
     be9:	04 f2                	add    al,0xf2
     beb:	03 f8                	add    edi,eax
     bed:	03 09                	add    ecx,DWORD PTR [rcx]
     bef:	70 00                	jo     bf1 <__abi_tag+0x875>
     bf1:	0c 95                	or     al,0x95
     bf3:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e67c9 <_end+0xffffffff9f1e07b1>
     bf8:	04 f8                	add    al,0xf8
     bfa:	03 81 04 01 50 04    	add    eax,DWORD PTR [rcx+0x4500104]
     c00:	81 04 84 04 0e 78 00 	add    DWORD PTR [rsp+rax*4],0x780e04
     c07:	48 25 78 00 27 0c    	and    rax,0xc270078
     c0d:	95                   	xchg   ebp,eax
     c0e:	e9 d1 5b 1e 9f       	jmp    ffffffff9f1e67e4 <_end+0xffffffff9f1e07cc>
     c13:	04 cf                	add    al,0xcf
     c15:	04 d4                	add    al,0xd4
     c17:	04 02                	add    al,0x2
     c19:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
     c1f:	f0 02 fd             	lock add bh,ch
     c22:	02 06                	add    al,BYTE PTR [rsi]
     c24:	55                   	push   rbp
     c25:	93                   	xchg   ebx,eax
     c26:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     c2a:	00 01                	add    BYTE PTR [rcx],al
     c2c:	02 04 f4             	add    al,BYTE PTR [rsp+rsi*8]
     c2f:	02 9c 03 02 30 9f 00 	add    bl,BYTE PTR [rbx+rax*1+0x9f3002]
     c36:	04 00                	add    al,0x0
     c38:	00 00                	add    BYTE PTR [rax],al
     c3a:	04 f4                	add    al,0xf4
     c3c:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     c42:	04 85                	add    al,0x85
     c44:	03 95 03 01 50 00    	add    edx,DWORD PTR [rbp+0x500103]
     c4a:	05 00 00 00 04       	add    eax,0x4000000
     c4f:	f4                   	hlt
     c50:	02 8c 03 02 75 08 04 	add    cl,BYTE PTR [rbx+rax*1+0x4087502]
     c57:	8c 03                	mov    WORD PTR [rbx],es
     c59:	a1 03 01 54 00 06 00 	movabs eax,ds:0x600540103
     c60:	00 00 
     c62:	04 f4                	add    al,0xf4
     c64:	02 93 03 02 75 10    	add    dl,BYTE PTR [rbx+0x10750203]
     c6a:	04 93                	add    al,0x93
     c6c:	03 a1 03 01 52 00    	add    esp,DWORD PTR [rcx+0x520103]
     c72:	07                   	(bad)
     c73:	00 00                	add    BYTE PTR [rax],al
     c75:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     c78:	02 9c 03 02 75 18 04 	add    bl,BYTE PTR [rbx+rax*1+0x4187502]
     c7f:	9c                   	pushf
     c80:	03 a1 03 01 51 00    	add    esp,DWORD PTR [rcx+0x510103]
     c86:	08 00                	or     BYTE PTR [rax],al
     c88:	04 f4                	add    al,0xf4
     c8a:	02 85 03 02 75 00    	add    al,BYTE PTR [rbp+0x750203]
     c90:	00 08                	add    BYTE PTR [rax],cl
     c92:	00 04 f4             	add    BYTE PTR [rsp+rsi*8],al
     c95:	02 85 03 0a 9e 08    	add    al,BYTE PTR [rbp+0x89e0a03]
     c9b:	11 11                	adc    DWORD PTR [rcx],edx
     c9d:	11 21                	adc    DWORD PTR [rcx],esp
     c9f:	11 12                	adc    DWORD PTR [rdx],edx
     ca1:	12 12                	adc    dl,BYTE PTR [rdx]
     ca3:	00 02                	add    BYTE PTR [rdx],al
     ca5:	00 04 85 03 8c 03 02 	add    BYTE PTR [rax*4+0x2038c03],al
     cac:	75 08                	jne    cb6 <__abi_tag+0x93a>
     cae:	00 02                	add    BYTE PTR [rdx],al
     cb0:	00 04 85 03 8c 03 0a 	add    BYTE PTR [rax*4+0xa038c03],al
     cb7:	9e                   	sahf
     cb8:	08 11                	or     BYTE PTR [rcx],dl
     cba:	11 11                	adc    DWORD PTR [rcx],edx
     cbc:	21 11                	and    DWORD PTR [rcx],edx
     cbe:	12 12                	adc    dl,BYTE PTR [rdx]
     cc0:	12 00                	adc    al,BYTE PTR [rax]
     cc2:	02 00                	add    al,BYTE PTR [rax]
     cc4:	04 8c                	add    al,0x8c
     cc6:	03 93 03 02 75 10    	add    edx,DWORD PTR [rbx+0x10750203]
     ccc:	00 02                	add    BYTE PTR [rdx],al
     cce:	00 04 8c             	add    BYTE PTR [rsp+rcx*4],al
     cd1:	03 93 03 0a 9e 08    	add    edx,DWORD PTR [rbx+0x89e0a03]
     cd7:	11 11                	adc    DWORD PTR [rcx],edx
     cd9:	11 21                	adc    DWORD PTR [rcx],esp
     cdb:	11 12                	adc    DWORD PTR [rdx],edx
     cdd:	12 12                	adc    dl,BYTE PTR [rdx]
     cdf:	00 02                	add    BYTE PTR [rdx],al
     ce1:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
     ce4:	03 9c 03 02 75 18 00 	add    ebx,DWORD PTR [rbx+rax*1+0x187502]
     ceb:	02 00                	add    al,BYTE PTR [rax]
     ced:	04 93                	add    al,0x93
     cef:	03 9c 03 0a 9e 08 11 	add    ebx,DWORD PTR [rbx+rax*1+0x11089e0a]
     cf6:	11 11                	adc    DWORD PTR [rcx],edx
     cf8:	21 11                	and    DWORD PTR [rcx],edx
     cfa:	12 12                	adc    dl,BYTE PTR [rdx]
     cfc:	12 00                	adc    al,BYTE PTR [rax]
     cfe:	00 00                	add    BYTE PTR [rax],al
     d00:	04 a0                	add    al,0xa0
     d02:	02 a8 02 06 55 93    	add    ch,BYTE PTR [rax-0x6caaf9fe]
     d08:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     d0c:	00 01                	add    BYTE PTR [rcx],al
     d0e:	00 00                	add    BYTE PTR [rax],al
     d10:	00 00                	add    BYTE PTR [rax],al
     d12:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     d15:	02 c6                	add    al,dh
     d17:	02 02                	add    al,BYTE PTR [rdx]
     d19:	30 9f 04 c6 02 e4    	xor    BYTE PTR [rdi-0x1bfd39fc],bl
     d1f:	02 01                	add    al,BYTE PTR [rcx]
     d21:	50                   	push   rax
     d22:	04 e4                	add    al,0xe4
     d24:	02 eb                	add    ch,bl
     d26:	02 02                	add    al,BYTE PTR [rdx]
     d28:	30 9f 00 02 00 01    	xor    BYTE PTR [rdi+0x1000200],bl
     d2e:	00 00                	add    BYTE PTR [rax],al
     d30:	00 00                	add    BYTE PTR [rax],al
     d32:	00 04 a4             	add    BYTE PTR [rsp+riz*4],al
     d35:	02 c6                	add    al,dh
     d37:	02 02                	add    al,BYTE PTR [rdx]
     d39:	30 9f 04 c6 02 d6    	xor    BYTE PTR [rdi-0x29fd39fc],bl
     d3f:	02 02                	add    al,BYTE PTR [rdx]
     d41:	75 00                	jne    d43 <__abi_tag+0x9c7>
     d43:	04 d6                	add    al,0xd6
     d45:	02 e4                	add    ah,ah
     d47:	02 02                	add    al,BYTE PTR [rdx]
     d49:	75 7c                	jne    dc7 <__abi_tag+0xa4b>
     d4b:	04 e4                	add    al,0xe4
     d4d:	02 eb                	add    ch,bl
     d4f:	02 02                	add    al,BYTE PTR [rdx]
     d51:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
     d57:	00 00                	add    BYTE PTR [rax],al
     d59:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     d5c:	02 b0 02 01 54 04    	add    dh,BYTE PTR [rax+0x4540102]
     d62:	b0 02                	mov    al,0x2
     d64:	b8 02 03 74 02       	mov    eax,0x2740302
     d69:	9f                   	lahf
     d6a:	04 e4                	add    al,0xe4
     d6c:	02 eb                	add    ch,bl
     d6e:	02 01                	add    al,BYTE PTR [rcx]
     d70:	54                   	push   rsp
     d71:	00 01                	add    BYTE PTR [rcx],al
     d73:	00 00                	add    BYTE PTR [rax],al
     d75:	00 04 a8             	add    BYTE PTR [rax+rbp*4],al
     d78:	02 c6                	add    al,dh
     d7a:	02 02                	add    al,BYTE PTR [rdx]
     d7c:	30 9f 04 e4 02 eb    	xor    BYTE PTR [rdi-0x14fd1bfc],bl
     d82:	02 02                	add    al,BYTE PTR [rdx]
     d84:	30 9f 00 02 00 00    	xor    BYTE PTR [rdi+0x200],bl
     d8a:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     d8d:	02 d6                	add    dl,dh
     d8f:	02 02                	add    al,BYTE PTR [rdx]
     d91:	75 00                	jne    d93 <__abi_tag+0xa17>
     d93:	04 d6                	add    al,0xd6
     d95:	02 dc                	add    bl,ah
     d97:	02 02                	add    al,BYTE PTR [rdx]
     d99:	75 7c                	jne    e17 <__abi_tag+0xa9b>
     d9b:	00 02                	add    BYTE PTR [rdx],al
     d9d:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
     da0:	02 dc                	add    bl,ah
     da2:	02 06                	add    al,BYTE PTR [rsi]
     da4:	0c 11                	or     al,0x11
     da6:	11 11                	adc    DWORD PTR [rcx],edx
     da8:	11 9f 00 00 00 04    	adc    DWORD PTR [rdi+0x4000000],ebx
     dae:	00 08                	add    BYTE PTR [rax],cl
     db0:	06                   	(bad)
     db1:	55                   	push   rbp
     db2:	93                   	xchg   ebx,eax
     db3:	08 54 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],dl
     db7:	00 01                	add    BYTE PTR [rcx],al
     db9:	00 00                	add    BYTE PTR [rax],al
     dbb:	00 00                	add    BYTE PTR [rax],al
     dbd:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     dc0:	44 02 30             	add    r14b,BYTE PTR [rax]
     dc3:	9f                   	lahf
     dc4:	04 44                	add    al,0x44
     dc6:	96                   	xchg   esi,eax
     dc7:	02 01                	add    al,BYTE PTR [rcx]
     dc9:	5a                   	pop    rdx
     dca:	04 96                	add    al,0x96
     dcc:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     dd2:	00 02                	add    BYTE PTR [rdx],al
	...
     ddc:	00 04 04             	add    BYTE PTR [rsp+rax*1],al
     ddf:	44 02 30             	add    r14b,BYTE PTR [rax]
     de2:	9f                   	lahf
     de3:	04 4b                	add    al,0x4b
     de5:	50                   	push   rax
     de6:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     de9:	50                   	push   rax
     dea:	cc                   	int3
     deb:	01 02                	add    DWORD PTR [rdx],eax
     ded:	79 00                	jns    def <__abi_tag+0xa73>
     def:	04 cc                	add    al,0xcc
     df1:	01 96 02 02 79 7c    	add    DWORD PTR [rsi+0x7c790202],edx
     df7:	04 96                	add    al,0x96
     df9:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     dff:	00 00                	add    BYTE PTR [rax],al
     e01:	00 00                	add    BYTE PTR [rax],al
     e03:	00 00                	add    BYTE PTR [rax],al
     e05:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
     e08:	14 01                	adc    al,0x1
     e0a:	54                   	push   rsp
     e0b:	04 14                	add    al,0x14
     e0d:	1e                   	(bad)
     e0e:	03 74 02 9f          	add    esi,DWORD PTR [rdx+rax*1-0x61]
     e12:	04 96                	add    al,0x96
     e14:	02 99 02 01 54 00    	add    bl,BYTE PTR [rcx+0x540102]
     e1a:	01 00                	add    DWORD PTR [rax],eax
     e1c:	00 00                	add    BYTE PTR [rax],al
     e1e:	04 08                	add    al,0x8
     e20:	44 02 30             	add    r14b,BYTE PTR [rax]
     e23:	9f                   	lahf
     e24:	04 96                	add    al,0x96
     e26:	02 99 02 02 30 9f    	add    bl,BYTE PTR [rcx-0x60cffdfe]
     e2c:	00 02                	add    BYTE PTR [rdx],al
     e2e:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     e31:	85 02                	test   DWORD PTR [rdx],eax
     e33:	06                   	(bad)
     e34:	0c 11                	or     al,0x11
     e36:	11 11                	adc    DWORD PTR [rcx],edx
     e38:	11 9f 00 01 00 00    	adc    DWORD PTR [rdi+0x100],ebx
     e3e:	00 00                	add    BYTE PTR [rax],al
     e40:	03 04 4b             	add    eax,DWORD PTR [rbx+rcx*2]
     e43:	50                   	push   rax
     e44:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
     e47:	50                   	push   rax
     e48:	cc                   	int3
     e49:	01 02                	add    DWORD PTR [rdx],eax
     e4b:	79 00                	jns    e4d <__abi_tag+0xad1>
     e4d:	04 cc                	add    al,0xcc
     e4f:	01 85 02 02 79 7c    	add    DWORD PTR [rbp+0x7c790202],eax
     e55:	00 01                	add    BYTE PTR [rcx],al
     e57:	00 00                	add    BYTE PTR [rax],al
     e59:	00 00                	add    BYTE PTR [rax],al
     e5b:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
     e5e:	01 98 01 ce 01 79    	add    DWORD PTR [rax+0x7901ce01],ebx
     e64:	00 94 04 31 24 11 aa 	add    BYTE PTR [rsp+rax*1-0x55eedbcf],dl
     e6b:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e70:	79 00                	jns    e72 <__abi_tag+0xaf6>
     e72:	94                   	xchg   esp,eax
     e73:	04 31                	add    al,0x31
     e75:	25 0c 55 55 55       	and    eax,0x5555550c
     e7a:	55                   	push   rbp
     e7b:	1a 21                	sbb    ah,BYTE PTR [rcx]
     e7d:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     e80:	cc                   	int3
     e81:	99                   	cdq
     e82:	b3 e6                	mov    bl,0xe6
     e84:	7c 1a                	jl     ea0 <__abi_tag+0xb24>
     e86:	79 00                	jns    e88 <__abi_tag+0xb0c>
     e88:	94                   	xchg   esp,eax
     e89:	04 31                	add    al,0x31
     e8b:	24 11                	and    al,0x11
     e8d:	aa                   	stos   BYTE PTR es:[rdi],al
     e8e:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     e93:	79 00                	jns    e95 <__abi_tag+0xb19>
     e95:	94                   	xchg   esp,eax
     e96:	04 31                	add    al,0x31
     e98:	25 0c 55 55 55       	and    eax,0x5555550c
     e9d:	55                   	push   rbp
     e9e:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ea0:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333341b2 <_end+0x3332e19a>
     ea6:	33 1a                	xor    ebx,DWORD PTR [rdx]
     ea8:	21 34 24             	and    DWORD PTR [rsp],esi
     eab:	11 f0                	adc    eax,esi
     ead:	e1 c3                	loope  e72 <__abi_tag+0xaf6>
     eaf:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     eb2:	72 00                	jb     eb4 <__abi_tag+0xb38>
     eb4:	21 38                	and    DWORD PTR [rax],edi
     eb6:	25 0c ff 00 ff       	and    eax,0xff00ff0c
     ebb:	00 1a                	add    BYTE PTR [rdx],bl
     ebd:	79 00                	jns    ebf <__abi_tag+0xb43>
     ebf:	94                   	xchg   esp,eax
     ec0:	04 31                	add    al,0x31
     ec2:	24 11                	and    al,0x11
     ec4:	aa                   	stos   BYTE PTR es:[rdi],al
     ec5:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     eca:	79 00                	jns    ecc <__abi_tag+0xb50>
     ecc:	94                   	xchg   esp,eax
     ecd:	04 31                	add    al,0x31
     ecf:	25 0c 55 55 55       	and    eax,0x5555550c
     ed4:	55                   	push   rbp
     ed5:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ed7:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     eda:	cc                   	int3
     edb:	99                   	cdq
     edc:	b3 e6                	mov    bl,0xe6
     ede:	7c 1a                	jl     efa <__abi_tag+0xb7e>
     ee0:	79 00                	jns    ee2 <__abi_tag+0xb66>
     ee2:	94                   	xchg   esp,eax
     ee3:	04 31                	add    al,0x31
     ee5:	24 11                	and    al,0x11
     ee7:	aa                   	stos   BYTE PTR es:[rdi],al
     ee8:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     eed:	79 00                	jns    eef <__abi_tag+0xb73>
     eef:	94                   	xchg   esp,eax
     ef0:	04 31                	add    al,0x31
     ef2:	25 0c 55 55 55       	and    eax,0x5555550c
     ef7:	55                   	push   rbp
     ef8:	1a 21                	sbb    ah,BYTE PTR [rcx]
     efa:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333420c <_end+0x3332e1f4>
     f00:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f02:	21 34 24             	and    DWORD PTR [rsp],esi
     f05:	11 f0                	adc    eax,esi
     f07:	e1 c3                	loope  ecc <__abi_tag+0xb50>
     f09:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     f0c:	72 00                	jb     f0e <__abi_tag+0xb92>
     f0e:	21 38                	and    DWORD PTR [rax],edi
     f10:	24 11                	and    al,0x11
     f12:	80 fe 83             	cmp    dh,0x83
     f15:	78 1a                	js     f31 <__abi_tag+0xbb5>
     f17:	21 40 14             	and    DWORD PTR [rax+0x14],eax
     f1a:	14 24                	adc    al,0x24
     f1c:	0c ff                	or     al,0xff
     f1e:	ff                   	(bad)
     f1f:	ff                   	(bad)
     f20:	ff 1a                	call   FWORD PTR [rdx]
     f22:	17                   	(bad)
     f23:	16                   	(bad)
     f24:	0c ff                	or     al,0xff
     f26:	ff                   	(bad)
     f27:	ff                   	(bad)
     f28:	ff 1a                	call   FWORD PTR [rdx]
     f2a:	16                   	(bad)
     f2b:	1f                   	(bad)
     f2c:	23 20                	and    esp,DWORD PTR [rax]
     f2e:	25 21 9f 04 98       	and    eax,0x98049f21
     f33:	01 cc                	add    esp,ecx
     f35:	01 e6                	add    esi,esp
     f37:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
     f3a:	94                   	xchg   esp,eax
     f3b:	04 31                	add    al,0x31
     f3d:	24 11                	and    al,0x11
     f3f:	aa                   	stos   BYTE PTR es:[rdi],al
     f40:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f45:	79 00                	jns    f47 <__abi_tag+0xbcb>
     f47:	94                   	xchg   esp,eax
     f48:	04 31                	add    al,0x31
     f4a:	25 0c 55 55 55       	and    eax,0x5555550c
     f4f:	55                   	push   rbp
     f50:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f52:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     f55:	cc                   	int3
     f56:	99                   	cdq
     f57:	b3 e6                	mov    bl,0xe6
     f59:	7c 1a                	jl     f75 <__abi_tag+0xbf9>
     f5b:	79 00                	jns    f5d <__abi_tag+0xbe1>
     f5d:	94                   	xchg   esp,eax
     f5e:	04 31                	add    al,0x31
     f60:	24 11                	and    al,0x11
     f62:	aa                   	stos   BYTE PTR es:[rdi],al
     f63:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f68:	79 00                	jns    f6a <__abi_tag+0xbee>
     f6a:	94                   	xchg   esp,eax
     f6b:	04 31                	add    al,0x31
     f6d:	25 0c 55 55 55       	and    eax,0x5555550c
     f72:	55                   	push   rbp
     f73:	1a 21                	sbb    ah,BYTE PTR [rcx]
     f75:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334287 <_end+0x3332e26f>
     f7b:	33 1a                	xor    ebx,DWORD PTR [rdx]
     f7d:	21 34 24             	and    DWORD PTR [rsp],esi
     f80:	11 f0                	adc    eax,esi
     f82:	e1 c3                	loope  f47 <__abi_tag+0xbcb>
     f84:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
     f87:	79 00                	jns    f89 <__abi_tag+0xc0d>
     f89:	94                   	xchg   esp,eax
     f8a:	04 31                	add    al,0x31
     f8c:	24 11                	and    al,0x11
     f8e:	aa                   	stos   BYTE PTR es:[rdi],al
     f8f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     f94:	79 00                	jns    f96 <__abi_tag+0xc1a>
     f96:	94                   	xchg   esp,eax
     f97:	04 31                	add    al,0x31
     f99:	25 0c 55 55 55       	and    eax,0x5555550c
     f9e:	55                   	push   rbp
     f9f:	1a 21                	sbb    ah,BYTE PTR [rcx]
     fa1:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     fa4:	cc                   	int3
     fa5:	99                   	cdq
     fa6:	b3 e6                	mov    bl,0xe6
     fa8:	7c 1a                	jl     fc4 <__abi_tag+0xc48>
     faa:	79 00                	jns    fac <__abi_tag+0xc30>
     fac:	94                   	xchg   esp,eax
     fad:	04 31                	add    al,0x31
     faf:	24 11                	and    al,0x11
     fb1:	aa                   	stos   BYTE PTR es:[rdi],al
     fb2:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     fb7:	79 00                	jns    fb9 <__abi_tag+0xc3d>
     fb9:	94                   	xchg   esp,eax
     fba:	04 31                	add    al,0x31
     fbc:	25 0c 55 55 55       	and    eax,0x5555550c
     fc1:	55                   	push   rbp
     fc2:	1a 21                	sbb    ah,BYTE PTR [rcx]
     fc4:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333342d6 <_end+0x3332e2be>
     fca:	33 1a                	xor    ebx,DWORD PTR [rdx]
     fcc:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
     fd3:	0f 1a 21             	bndldx (bad),[rcx]
     fd6:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff010ee8 <_end+0xffffffffff00aed0>
     fdc:	00 1a                	add    BYTE PTR [rdx],bl
     fde:	79 00                	jns    fe0 <__abi_tag+0xc64>
     fe0:	94                   	xchg   esp,eax
     fe1:	04 31                	add    al,0x31
     fe3:	24 11                	and    al,0x11
     fe5:	aa                   	stos   BYTE PTR es:[rdi],al
     fe6:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
     feb:	79 00                	jns    fed <__abi_tag+0xc71>
     fed:	94                   	xchg   esp,eax
     fee:	04 31                	add    al,0x31
     ff0:	25 0c 55 55 55       	and    eax,0x5555550c
     ff5:	55                   	push   rbp
     ff6:	1a 21                	sbb    ah,BYTE PTR [rcx]
     ff8:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
     ffb:	cc                   	int3
     ffc:	99                   	cdq
     ffd:	b3 e6                	mov    bl,0xe6
     fff:	7c 1a                	jl     101b <_init+0x1b>
    1001:	79 00                	jns    1003 <_init+0x3>
    1003:	94                   	xchg   esp,eax
    1004:	04 31                	add    al,0x31
    1006:	24 11                	and    al,0x11
    1008:	aa                   	stos   BYTE PTR es:[rdi],al
    1009:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    100e:	79 00                	jns    1010 <_init+0x10>
    1010:	94                   	xchg   esp,eax
    1011:	04 31                	add    al,0x31
    1013:	25 0c 55 55 55       	and    eax,0x5555550c
    1018:	55                   	push   rbp
    1019:	1a 21                	sbb    ah,BYTE PTR [rcx]
    101b:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333432d <_end+0x3332e315>
    1021:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1023:	21 34 24             	and    DWORD PTR [rsp],esi
    1026:	11 f0                	adc    eax,esi
    1028:	e1 c3                	loope  fed <__abi_tag+0xc71>
    102a:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    102d:	79 00                	jns    102f <_init+0x2f>
    102f:	94                   	xchg   esp,eax
    1030:	04 31                	add    al,0x31
    1032:	24 11                	and    al,0x11
    1034:	aa                   	stos   BYTE PTR es:[rdi],al
    1035:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    103a:	79 00                	jns    103c <__printf_chk@plt+0xc>
    103c:	94                   	xchg   esp,eax
    103d:	04 31                	add    al,0x31
    103f:	25 0c 55 55 55       	and    eax,0x5555550c
    1044:	55                   	push   rbp
    1045:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1047:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    104a:	cc                   	int3
    104b:	99                   	cdq
    104c:	b3 e6                	mov    bl,0xe6
    104e:	7c 1a                	jl     106a <__strncpy_chk@plt+0xa>
    1050:	79 00                	jns    1052 <strchr@plt+0x2>
    1052:	94                   	xchg   esp,eax
    1053:	04 31                	add    al,0x31
    1055:	24 11                	and    al,0x11
    1057:	aa                   	stos   BYTE PTR es:[rdi],al
    1058:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    105d:	79 00                	jns    105f <strchr@plt+0xf>
    105f:	94                   	xchg   esp,eax
    1060:	04 31                	add    al,0x31
    1062:	25 0c 55 55 55       	and    eax,0x5555550c
    1067:	55                   	push   rbp
    1068:	1a 21                	sbb    ah,BYTE PTR [rcx]
    106a:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333437c <_end+0x3332e364>
    1070:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1072:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    1079:	0f 1a 21             	bndldx (bad),[rcx]
    107c:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    107f:	80 fe 83             	cmp    dh,0x83
    1082:	78 1a                	js     109e <open@plt+0xe>
    1084:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    1087:	14 24                	adc    al,0x24
    1089:	0c ff                	or     al,0xff
    108b:	ff                   	(bad)
    108c:	ff                   	(bad)
    108d:	ff 1a                	call   FWORD PTR [rdx]
    108f:	17                   	(bad)
    1090:	16                   	(bad)
    1091:	0c ff                	or     al,0xff
    1093:	ff                   	(bad)
    1094:	ff                   	(bad)
    1095:	ff 1a                	call   FWORD PTR [rdx]
    1097:	16                   	(bad)
    1098:	1f                   	(bad)
    1099:	23 20                	and    esp,DWORD PTR [rax]
    109b:	25 21 9f 04 cc       	and    eax,0xcc049f21
    10a0:	01 85 02 e6 02 79    	add    DWORD PTR [rbp+0x7902e602],eax
    10a6:	7c 94                	jl     103c <__printf_chk@plt+0xc>
    10a8:	04 31                	add    al,0x31
    10aa:	24 11                	and    al,0x11
    10ac:	aa                   	stos   BYTE PTR es:[rdi],al
    10ad:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10b2:	79 7c                	jns    1130 <putchar@plt>
    10b4:	94                   	xchg   esp,eax
    10b5:	04 31                	add    al,0x31
    10b7:	25 0c 55 55 55       	and    eax,0x5555550c
    10bc:	55                   	push   rbp
    10bd:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10bf:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    10c2:	cc                   	int3
    10c3:	99                   	cdq
    10c4:	b3 e6                	mov    bl,0xe6
    10c6:	7c 1a                	jl     10e2 <__stack_chk_fail@plt+0x2>
    10c8:	79 7c                	jns    1146 <strcmp@plt+0x6>
    10ca:	94                   	xchg   esp,eax
    10cb:	04 31                	add    al,0x31
    10cd:	24 11                	and    al,0x11
    10cf:	aa                   	stos   BYTE PTR es:[rdi],al
    10d0:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    10d5:	79 7c                	jns    1153 <read@plt+0x3>
    10d7:	94                   	xchg   esp,eax
    10d8:	04 31                	add    al,0x31
    10da:	25 0c 55 55 55       	and    eax,0x5555550c
    10df:	55                   	push   rbp
    10e0:	1a 21                	sbb    ah,BYTE PTR [rcx]
    10e2:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333343f4 <_end+0x3332e3dc>
    10e8:	33 1a                	xor    ebx,DWORD PTR [rdx]
    10ea:	21 34 24             	and    DWORD PTR [rsp],esi
    10ed:	11 f0                	adc    eax,esi
    10ef:	e1 c3                	loope  10b4 <stat@plt+0x4>
    10f1:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    10f4:	79 7c                	jns    1172 <realloc@plt+0x2>
    10f6:	94                   	xchg   esp,eax
    10f7:	04 31                	add    al,0x31
    10f9:	24 11                	and    al,0x11
    10fb:	aa                   	stos   BYTE PTR es:[rdi],al
    10fc:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1101:	79 7c                	jns    117f <realloc@plt+0xf>
    1103:	94                   	xchg   esp,eax
    1104:	04 31                	add    al,0x31
    1106:	25 0c 55 55 55       	and    eax,0x5555550c
    110b:	55                   	push   rbp
    110c:	1a 21                	sbb    ah,BYTE PTR [rcx]
    110e:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1111:	cc                   	int3
    1112:	99                   	cdq
    1113:	b3 e6                	mov    bl,0xe6
    1115:	7c 1a                	jl     1131 <putchar@plt+0x1>
    1117:	79 7c                	jns    1195 <sqrtf@plt+0x5>
    1119:	94                   	xchg   esp,eax
    111a:	04 31                	add    al,0x31
    111c:	24 11                	and    al,0x11
    111e:	aa                   	stos   BYTE PTR es:[rdi],al
    111f:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1124:	79 7c                	jns    11a2 <fwrite@plt+0x2>
    1126:	94                   	xchg   esp,eax
    1127:	04 31                	add    al,0x31
    1129:	25 0c 55 55 55       	and    eax,0x5555550c
    112e:	55                   	push   rbp
    112f:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1131:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334443 <_end+0x3332e42b>
    1137:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1139:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    1140:	0f 1a 21             	bndldx (bad),[rcx]
    1143:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff011055 <_end+0xffffffffff00b03d>
    1149:	00 1a                	add    BYTE PTR [rdx],bl
    114b:	79 7c                	jns    11c9 <__isoc23_strtol@plt+0x9>
    114d:	94                   	xchg   esp,eax
    114e:	04 31                	add    al,0x31
    1150:	24 11                	and    al,0x11
    1152:	aa                   	stos   BYTE PTR es:[rdi],al
    1153:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1158:	79 7c                	jns    11d6 <__cxa_finalize@plt+0x6>
    115a:	94                   	xchg   esp,eax
    115b:	04 31                	add    al,0x31
    115d:	25 0c 55 55 55       	and    eax,0x5555550c
    1162:	55                   	push   rbp
    1163:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1165:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1168:	cc                   	int3
    1169:	99                   	cdq
    116a:	b3 e6                	mov    bl,0xe6
    116c:	7c 1a                	jl     1188 <__fprintf_chk@plt+0x8>
    116e:	79 7c                	jns    11ec <main+0xc>
    1170:	94                   	xchg   esp,eax
    1171:	04 31                	add    al,0x31
    1173:	24 11                	and    al,0x11
    1175:	aa                   	stos   BYTE PTR es:[rdi],al
    1176:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    117b:	79 7c                	jns    11f9 <main+0x19>
    117d:	94                   	xchg   esp,eax
    117e:	04 31                	add    al,0x31
    1180:	25 0c 55 55 55       	and    eax,0x5555550c
    1185:	55                   	push   rbp
    1186:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1188:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 3333449a <_end+0x3332e482>
    118e:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1190:	21 34 24             	and    DWORD PTR [rsp],esi
    1193:	11 f0                	adc    eax,esi
    1195:	e1 c3                	loope  115a <read@plt+0xa>
    1197:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    119a:	79 7c                	jns    1218 <_start+0x8>
    119c:	94                   	xchg   esp,eax
    119d:	04 31                	add    al,0x31
    119f:	24 11                	and    al,0x11
    11a1:	aa                   	stos   BYTE PTR es:[rdi],al
    11a2:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11a7:	79 7c                	jns    1225 <_start+0x15>
    11a9:	94                   	xchg   esp,eax
    11aa:	04 31                	add    al,0x31
    11ac:	25 0c 55 55 55       	and    eax,0x5555550c
    11b1:	55                   	push   rbp
    11b2:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11b4:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    11b7:	cc                   	int3
    11b8:	99                   	cdq
    11b9:	b3 e6                	mov    bl,0xe6
    11bb:	7c 1a                	jl     11d7 <__cxa_finalize@plt+0x7>
    11bd:	79 7c                	jns    123b <_start+0x2b>
    11bf:	94                   	xchg   esp,eax
    11c0:	04 31                	add    al,0x31
    11c2:	24 11                	and    al,0x11
    11c4:	aa                   	stos   BYTE PTR es:[rdi],al
    11c5:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    11ca:	79 7c                	jns    1248 <deregister_tm_clones+0x8>
    11cc:	94                   	xchg   esp,eax
    11cd:	04 31                	add    al,0x31
    11cf:	25 0c 55 55 55       	and    eax,0x5555550c
    11d4:	55                   	push   rbp
    11d5:	1a 21                	sbb    ah,BYTE PTR [rcx]
    11d7:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333344e9 <_end+0x3332e4d1>
    11dd:	33 1a                	xor    ebx,DWORD PTR [rdx]
    11df:	21 34 25 0c 0f 0f 0f 	and    DWORD PTR ds:0xf0f0f0c,esi
    11e6:	0f 1a 21             	bndldx (bad),[rcx]
    11e9:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    11ec:	80 fe 83             	cmp    dh,0x83
    11ef:	78 1a                	js     120b <main+0x2b>
    11f1:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    11f4:	14 24                	adc    al,0x24
    11f6:	0c ff                	or     al,0xff
    11f8:	ff                   	(bad)
    11f9:	ff                   	(bad)
    11fa:	ff 1a                	call   FWORD PTR [rdx]
    11fc:	17                   	(bad)
    11fd:	16                   	(bad)
    11fe:	0c ff                	or     al,0xff
    1200:	ff                   	(bad)
    1201:	ff                   	(bad)
    1202:	ff 1a                	call   FWORD PTR [rdx]
    1204:	16                   	(bad)
    1205:	1f                   	(bad)
    1206:	23 20                	and    esp,DWORD PTR [rax]
    1208:	25 21 9f 00 03       	and    eax,0x3009f21
    120d:	03 04 8e             	add    eax,DWORD PTR [rsi+rcx*4]
    1210:	01 85 02 06 9e 04    	add    DWORD PTR [rbp+0x49e0602],eax
    1216:	88 88 88 88 00 00    	mov    BYTE PTR [rax+0x8888],cl
    121c:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    121f:	01 c8                	add    eax,ecx
    1221:	01 01                	add    DWORD PTR [rcx],eax
    1223:	51                   	push   rcx
    1224:	00 01                	add    BYTE PTR [rcx],al
    1226:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    1229:	01 96 02 07 10 c1    	add    DWORD PTR [rsi-0x3eeff8fe],edx
    122f:	de f1                	fdivrp st(1),st
    1231:	f6 11                	not    BYTE PTR [rcx]
    1233:	9f                   	lahf
    1234:	00 02                	add    BYTE PTR [rdx],al
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	00 04 98             	add    BYTE PTR [rax+rbx*4],al
    123b:	01 98 01 02 30 9f    	add    DWORD PTR [rax-0x60cffdff],ebx
    1241:	04 98                	add    al,0x98
    1243:	01 c6                	add    esi,eax
    1245:	01 01                	add    DWORD PTR [rcx],eax
    1247:	50                   	push   rax
    1248:	00 03                	add    BYTE PTR [rbx],al
	...
    125a:	01 01                	add    DWORD PTR [rcx],eax
    125c:	00 00                	add    BYTE PTR [rax],al
    125e:	01 04 4b             	add    DWORD PTR [rbx+rcx*2],eax
    1261:	50                   	push   rax
    1262:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    1265:	50                   	push   rax
    1266:	5d                   	pop    rbp
    1267:	02 79 00             	add    bh,BYTE PTR [rcx+0x0]
    126a:	04 5d                	add    al,0x5d
    126c:	62 01 50 04 62       	(bad)
    1271:	65 01 51 04          	add    DWORD PTR gs:[rcx+0x4],edx
    1275:	65 72 1b             	gs jb  1293 <register_tm_clones+0x23>
    1278:	79 00                	jns    127a <register_tm_clones+0xa>
    127a:	94                   	xchg   esp,eax
    127b:	04 31                	add    al,0x31
    127d:	24 11                	and    al,0x11
    127f:	aa                   	stos   BYTE PTR es:[rdi],al
    1280:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1285:	79 00                	jns    1287 <register_tm_clones+0x17>
    1287:	94                   	xchg   esp,eax
    1288:	04 31                	add    al,0x31
    128a:	25 0c 55 55 55       	and    eax,0x5555550c
    128f:	55                   	push   rbp
    1290:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1292:	9f                   	lahf
    1293:	04 72                	add    al,0x72
    1295:	77 01                	ja     1298 <register_tm_clones+0x28>
    1297:	50                   	push   rax
    1298:	04 77                	add    al,0x77
    129a:	7c 01                	jl     129d <register_tm_clones+0x2d>
    129c:	52                   	push   rdx
    129d:	04 7c                	add    al,0x7c
    129f:	8c 01                	mov    WORD PTR [rcx],es
    12a1:	47 79 00             	rex.RXB jns 12a4 <register_tm_clones+0x34>
    12a4:	94                   	xchg   esp,eax
    12a5:	04 31                	add    al,0x31
    12a7:	24 11                	and    al,0x11
    12a9:	aa                   	stos   BYTE PTR es:[rdi],al
    12aa:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12af:	79 00                	jns    12b1 <__do_global_dtors_aux+0x1>
    12b1:	94                   	xchg   esp,eax
    12b2:	04 31                	add    al,0x31
    12b4:	25 0c 55 55 55       	and    eax,0x5555550c
    12b9:	55                   	push   rbp
    12ba:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12bc:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    12bf:	cc                   	int3
    12c0:	99                   	cdq
    12c1:	b3 e6                	mov    bl,0xe6
    12c3:	7c 1a                	jl     12df <__do_global_dtors_aux+0x2f>
    12c5:	79 00                	jns    12c7 <__do_global_dtors_aux+0x17>
    12c7:	94                   	xchg   esp,eax
    12c8:	04 31                	add    al,0x31
    12ca:	24 11                	and    al,0x11
    12cc:	aa                   	stos   BYTE PTR es:[rdi],al
    12cd:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    12d2:	79 00                	jns    12d4 <__do_global_dtors_aux+0x24>
    12d4:	94                   	xchg   esp,eax
    12d5:	04 31                	add    al,0x31
    12d7:	25 0c 55 55 55       	and    eax,0x5555550c
    12dc:	55                   	push   rbp
    12dd:	1a 21                	sbb    ah,BYTE PTR [rcx]
    12df:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333345f1 <_end+0x3332e5d9>
    12e5:	33 1a                	xor    ebx,DWORD PTR [rdx]
    12e7:	21 9f 04 8c 01 8c    	and    DWORD PTR [rdi-0x73fe73fc],ebx
    12ed:	01 01                	add    DWORD PTR [rcx],eax
    12ef:	51                   	push   rcx
    12f0:	04 8c                	add    al,0x8c
    12f2:	01 8e 01 16 71 00    	add    DWORD PTR [rsi+0x711601],ecx
    12f8:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff01120a <_end+0xffffffffff00b1f2>
    12fe:	00 1a                	add    BYTE PTR [rdx],bl
    1300:	71 00                	jno    1302 <_Z16buildStringArrayPcj+0x2>
    1302:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    1305:	80 fe 83             	cmp    dh,0x83
    1308:	78 1a                	js     1324 <_Z16buildStringArrayPcj+0x24>
    130a:	21 9f 04 8e 01 8e    	and    DWORD PTR [rdi-0x71fe71fc],ebx
    1310:	01 ce                	add    esi,ecx
    1312:	01 79 00             	add    DWORD PTR [rcx+0x0],edi
    1315:	94                   	xchg   esp,eax
    1316:	04 31                	add    al,0x31
    1318:	24 11                	and    al,0x11
    131a:	aa                   	stos   BYTE PTR es:[rdi],al
    131b:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1320:	79 00                	jns    1322 <_Z16buildStringArrayPcj+0x22>
    1322:	94                   	xchg   esp,eax
    1323:	04 31                	add    al,0x31
    1325:	25 0c 55 55 55       	and    eax,0x5555550c
    132a:	55                   	push   rbp
    132b:	1a 21                	sbb    ah,BYTE PTR [rcx]
    132d:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    1330:	cc                   	int3
    1331:	99                   	cdq
    1332:	b3 e6                	mov    bl,0xe6
    1334:	7c 1a                	jl     1350 <_Z16buildStringArrayPcj+0x50>
    1336:	79 00                	jns    1338 <_Z16buildStringArrayPcj+0x38>
    1338:	94                   	xchg   esp,eax
    1339:	04 31                	add    al,0x31
    133b:	24 11                	and    al,0x11
    133d:	aa                   	stos   BYTE PTR es:[rdi],al
    133e:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    1343:	79 00                	jns    1345 <_Z16buildStringArrayPcj+0x45>
    1345:	94                   	xchg   esp,eax
    1346:	04 31                	add    al,0x31
    1348:	25 0c 55 55 55       	and    eax,0x5555550c
    134d:	55                   	push   rbp
    134e:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1350:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 33334662 <_end+0x3332e64a>
    1356:	33 1a                	xor    ebx,DWORD PTR [rdx]
    1358:	21 34 24             	and    DWORD PTR [rsp],esi
    135b:	11 f0                	adc    eax,esi
    135d:	e1 c3                	loope  1322 <_Z16buildStringArrayPcj+0x22>
    135f:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    1362:	72 00                	jb     1364 <_Z16buildStringArrayPcj+0x64>
    1364:	21 38                	and    DWORD PTR [rax],edi
    1366:	25 0c ff 00 ff       	and    eax,0xff00ff0c
    136b:	00 1a                	add    BYTE PTR [rdx],bl
    136d:	79 00                	jns    136f <_Z16buildStringArrayPcj+0x6f>
    136f:	94                   	xchg   esp,eax
    1370:	04 31                	add    al,0x31
    1372:	24 11                	and    al,0x11
    1374:	aa                   	stos   BYTE PTR es:[rdi],al
    1375:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    137a:	79 00                	jns    137c <_Z16buildStringArrayPcj+0x7c>
    137c:	94                   	xchg   esp,eax
    137d:	04 31                	add    al,0x31
    137f:	25 0c 55 55 55       	and    eax,0x5555550c
    1384:	55                   	push   rbp
    1385:	1a 21                	sbb    ah,BYTE PTR [rcx]
    1387:	32 24 11             	xor    ah,BYTE PTR [rcx+rdx*1]
    138a:	cc                   	int3
    138b:	99                   	cdq
    138c:	b3 e6                	mov    bl,0xe6
    138e:	7c 1a                	jl     13aa <_Z16buildStringArrayPcj+0xaa>
    1390:	79 00                	jns    1392 <_Z16buildStringArrayPcj+0x92>
    1392:	94                   	xchg   esp,eax
    1393:	04 31                	add    al,0x31
    1395:	24 11                	and    al,0x11
    1397:	aa                   	stos   BYTE PTR es:[rdi],al
    1398:	d5 aa d5 7a 1a       	{rex2 0xaa} pmullw mm7,QWORD PTR [rdx+0x1a]
    139d:	79 00                	jns    139f <_Z16buildStringArrayPcj+0x9f>
    139f:	94                   	xchg   esp,eax
    13a0:	04 31                	add    al,0x31
    13a2:	25 0c 55 55 55       	and    eax,0x5555550c
    13a7:	55                   	push   rbp
    13a8:	1a 21                	sbb    ah,BYTE PTR [rcx]
    13aa:	32 25 0c 33 33 33    	xor    ah,BYTE PTR [rip+0x3333330c]        # 333346bc <_end+0x3332e6a4>
    13b0:	33 1a                	xor    ebx,DWORD PTR [rdx]
    13b2:	21 34 24             	and    DWORD PTR [rsp],esi
    13b5:	11 f0                	adc    eax,esi
    13b7:	e1 c3                	loope  137c <_Z16buildStringArrayPcj+0x7c>
    13b9:	87 7f 1a             	xchg   DWORD PTR [rdi+0x1a],edi
    13bc:	72 00                	jb     13be <_Z16buildStringArrayPcj+0xbe>
    13be:	21 38                	and    DWORD PTR [rax],edi
    13c0:	24 11                	and    al,0x11
    13c2:	80 fe 83             	cmp    dh,0x83
    13c5:	78 1a                	js     13e1 <_Z16buildStringArrayPcj+0xe1>
    13c7:	21 40 14             	and    DWORD PTR [rax+0x14],eax
    13ca:	14 24                	adc    al,0x24
    13cc:	0c ff                	or     al,0xff
    13ce:	ff                   	(bad)
    13cf:	ff                   	(bad)
    13d0:	ff 1a                	call   FWORD PTR [rdx]
    13d2:	17                   	(bad)
    13d3:	16                   	(bad)
    13d4:	0c ff                	or     al,0xff
    13d6:	ff                   	(bad)
    13d7:	ff                   	(bad)
    13d8:	ff 1a                	call   FWORD PTR [rdx]
    13da:	16                   	(bad)
    13db:	1f                   	(bad)
    13dc:	23 20                	and    esp,DWORD PTR [rax]
    13de:	25 21 9f 00 02       	and    eax,0x2009f21
	...
    13eb:	00 00                	add    BYTE PTR [rax],al
    13ed:	01 01                	add    DWORD PTR [rcx],eax
    13ef:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    13f2:	01 c8                	add    eax,ecx
    13f4:	01 01                	add    DWORD PTR [rcx],eax
    13f6:	51                   	push   rcx
    13f7:	04 d9                	add    al,0xd9
    13f9:	01 de                	add    esi,ebx
    13fb:	01 01                	add    DWORD PTR [rcx],eax
    13fd:	50                   	push   rax
    13fe:	04 de                	add    al,0xde
    1400:	01 e1                	add    ecx,esp
    1402:	01 01                	add    DWORD PTR [rcx],eax
    1404:	51                   	push   rcx
    1405:	04 ee                	add    al,0xee
    1407:	01 f3                	add    ebx,esi
    1409:	01 01                	add    DWORD PTR [rcx],eax
    140b:	50                   	push   rax
    140c:	04 f3                	add    al,0xf3
    140e:	01 f6                	add    esi,esi
    1410:	01 01                	add    DWORD PTR [rcx],eax
    1412:	51                   	push   rcx
    1413:	04 83                	add    al,0x83
    1415:	02 83 02 01 50 04    	add    al,BYTE PTR [rbx+0x4500102]
    141b:	83 02 85             	add    DWORD PTR [rdx],0xffffff85
    141e:	02 16                	add    dl,BYTE PTR [rsi]
    1420:	70 00                	jo     1422 <_Z16buildStringArrayPcj+0x122>
    1422:	38 25 0c ff 00 ff    	cmp    BYTE PTR [rip+0xffffffffff00ff0c],ah        # ffffffffff011334 <_end+0xffffffffff00b31c>
    1428:	00 1a                	add    BYTE PTR [rdx],bl
    142a:	70 00                	jo     142c <_Z16buildStringArrayPcj+0x12c>
    142c:	38 24 11             	cmp    BYTE PTR [rcx+rdx*1],ah
    142f:	80 fe 83             	cmp    dh,0x83
    1432:	78 1a                	js     144e <_Z11hashMapCtorPFj8string_tEj+0x1e>
    1434:	21 9f 00 11 06 00    	and    DWORD PTR [rdi+0x61100],ebx
    143a:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 1c40 <_Z17murmur2HashString8string_t+0x70>
	...
    144c:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    144f:	07                   	(bad)
    1450:	d5 07 01 55 04       	{rex2 0x7} add DWORD PTR [r13+0x4],r10d
    1455:	d5 07 a7             	(bad)
    1458:	0b 01                	or     eax,DWORD PTR [rcx]
    145a:	53                   	push   rbx
    145b:	04 a7                	add    al,0xa7
    145d:	0b b4 0b 04 a3 01 55 	or     esi,DWORD PTR [rbx+rcx*1+0x5501a304]
    1464:	9f                   	lahf
    1465:	04 b4                	add    al,0xb4
    1467:	0b ce                	or     ecx,esi
    1469:	0b 01                	or     eax,DWORD PTR [rcx]
    146b:	55                   	push   rbp
    146c:	04 ce                	add    al,0xce
    146e:	0b d3                	or     edx,ebx
    1470:	0b 04 a3             	or     eax,DWORD PTR [rbx+riz*4]
    1473:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1476:	00 02                	add    BYTE PTR [rdx],al
    1478:	00 00                	add    BYTE PTR [rax],al
    147a:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
    147d:	08 aa 08 02 30 9f    	or     BYTE PTR [rdx-0x60cffdf8],ch
    1483:	04 aa                	add    al,0xaa
    1485:	08 cc                	or     ah,cl
    1487:	08 01                	or     BYTE PTR [rcx],al
    1489:	5c                   	pop    rsp
    148a:	00 01                	add    BYTE PTR [rcx],al
    148c:	00 04 aa             	add    BYTE PTR [rdx+rbp*4],al
    148f:	08 c2                	or     dl,al
    1491:	08 0a                	or     BYTE PTR [rdx],cl
    1493:	03 19                	add    ebx,DWORD PTR [rcx]
    1495:	41 00 00             	add    BYTE PTR [r8],al
    1498:	00 00                	add    BYTE PTR [rax],al
    149a:	00 00                	add    BYTE PTR [rax],al
    149c:	9f                   	lahf
    149d:	00 02                	add    BYTE PTR [rdx],al
    149f:	00 00                	add    BYTE PTR [rax],al
    14a1:	00 00                	add    BYTE PTR [rax],al
    14a3:	00 00                	add    BYTE PTR [rax],al
    14a5:	02 04 e9             	add    al,BYTE PTR [rcx+rbp*8]
    14a8:	08 fa                	or     dl,bh
    14aa:	08 02                	or     BYTE PTR [rdx],al
    14ac:	30 9f 04 fa 08 8f    	xor    BYTE PTR [rdi-0x70f705fc],bl
    14b2:	09 01                	or     DWORD PTR [rcx],eax
    14b4:	5c                   	pop    rsp
    14b5:	04 8f                	add    al,0x8f
    14b7:	09 93 09 01 50 04    	or     DWORD PTR [rbx+0x4500109],edx
    14bd:	93                   	xchg   ebx,eax
    14be:	09 9f 09 03 7c 7f    	or     DWORD PTR [rdi+0x7f7c0309],ebx
    14c4:	9f                   	lahf
    14c5:	00 01                	add    BYTE PTR [rcx],al
    14c7:	00 04 fa             	add    BYTE PTR [rdx+rdi*8],al
    14ca:	08 9f 09 0a 03 19    	or     BYTE PTR [rdi+0x19030a09],bl
    14d0:	41 00 00             	add    BYTE PTR [r8],al
    14d3:	00 00                	add    BYTE PTR [rax],al
    14d5:	00 00                	add    BYTE PTR [rax],al
    14d7:	9f                   	lahf
    14d8:	00 02                	add    BYTE PTR [rdx],al
    14da:	00 00                	add    BYTE PTR [rax],al
    14dc:	00 00                	add    BYTE PTR [rax],al
    14de:	00 00                	add    BYTE PTR [rax],al
    14e0:	02 04 c2             	add    al,BYTE PTR [rdx+rax*8]
    14e3:	09 d3                	or     ebx,edx
    14e5:	09 02                	or     DWORD PTR [rdx],eax
    14e7:	30 9f 04 d3 09 e7    	xor    BYTE PTR [rdi-0x18f62cfc],bl
    14ed:	09 01                	or     DWORD PTR [rcx],eax
    14ef:	5c                   	pop    rsp
    14f0:	04 e7                	add    al,0xe7
    14f2:	09 eb                	or     ebx,ebp
    14f4:	09 01                	or     DWORD PTR [rcx],eax
    14f6:	50                   	push   rax
    14f7:	04 eb                	add    al,0xeb
    14f9:	09 f8                	or     eax,edi
    14fb:	09 03                	or     DWORD PTR [rbx],eax
    14fd:	7c 7f                	jl     157e <_Z17hashMapAddElementP7HashMap8string_t+0x9e>
    14ff:	9f                   	lahf
    1500:	00 01                	add    BYTE PTR [rcx],al
    1502:	00 04 d3             	add    BYTE PTR [rbx+rdx*8],al
    1505:	09 f8                	or     eax,edi
    1507:	09 0a                	or     DWORD PTR [rdx],ecx
    1509:	03 19                	add    ebx,DWORD PTR [rcx]
    150b:	41 00 00             	add    BYTE PTR [r8],al
    150e:	00 00                	add    BYTE PTR [rax],al
    1510:	00 00                	add    BYTE PTR [rax],al
    1512:	9f                   	lahf
    1513:	00 02                	add    BYTE PTR [rdx],al
    1515:	00 00                	add    BYTE PTR [rax],al
    1517:	00 00                	add    BYTE PTR [rax],al
    1519:	00 00                	add    BYTE PTR [rax],al
    151b:	02 04 9b             	add    al,BYTE PTR [rbx+rbx*4]
    151e:	0a ac 0a 02 30 9f 04 	or     ch,BYTE PTR [rdx+rcx*1+0x49f3002]
    1525:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1526:	0a bf 0a 01 5c 04    	or     bh,BYTE PTR [rdi+0x45c010a]
    152c:	bf 0a c3 0a 01       	mov    edi,0x10ac30a
    1531:	50                   	push   rax
    1532:	04 c3                	add    al,0xc3
    1534:	0a d0                	or     dl,al
    1536:	0a 03                	or     al,BYTE PTR [rbx]
    1538:	7c 7f                	jl     15b9 <_Z17hashMapAddElementP7HashMap8string_t+0xd9>
    153a:	9f                   	lahf
    153b:	00 01                	add    BYTE PTR [rcx],al
    153d:	00 04 ac             	add    BYTE PTR [rsp+rbp*4],al
    1540:	0a d0                	or     dl,al
    1542:	0a 0a                	or     cl,BYTE PTR [rdx]
    1544:	03 19                	add    ebx,DWORD PTR [rcx]
    1546:	41 00 00             	add    BYTE PTR [r8],al
    1549:	00 00                	add    BYTE PTR [rax],al
    154b:	00 00                	add    BYTE PTR [rax],al
    154d:	9f                   	lahf
    154e:	00 02                	add    BYTE PTR [rdx],al
    1550:	00 00                	add    BYTE PTR [rax],al
    1552:	00 00                	add    BYTE PTR [rax],al
    1554:	00 00                	add    BYTE PTR [rax],al
    1556:	02 04 ec             	add    al,BYTE PTR [rsp+rbp*8]
    1559:	0a fc                	or     bh,ah
    155b:	0a 02                	or     al,BYTE PTR [rdx]
    155d:	30 9f 04 fc 0a 8f    	xor    BYTE PTR [rdi-0x70f503fc],bl
    1563:	0b 01                	or     eax,DWORD PTR [rcx]
    1565:	56                   	push   rsi
    1566:	04 8f                	add    al,0x8f
    1568:	0b 93 0b 01 50 04    	or     edx,DWORD PTR [rbx+0x450010b]
    156e:	93                   	xchg   ebx,eax
    156f:	0b a1 0b 03 76 7f    	or     esp,DWORD PTR [rcx+0x7f76030b]
    1575:	9f                   	lahf
    1576:	00 01                	add    BYTE PTR [rcx],al
    1578:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    157b:	0a a1 0b 0a 03 43    	or     ah,BYTE PTR [rcx+0x43030a0b]
    1581:	41 00 00             	add    BYTE PTR [r8],al
    1584:	00 00                	add    BYTE PTR [rax],al
    1586:	00 00                	add    BYTE PTR [rax],al
    1588:	9f                   	lahf
    1589:	00 01                	add    BYTE PTR [rcx],al
    158b:	00 04 c7             	add    BYTE PTR [rdi+rax*8],al
    158e:	07                   	(bad)
    158f:	da 07                	fiadd  DWORD PTR [rdi]
    1591:	0a 03                	or     al,BYTE PTR [rbx]
    1593:	e4 40                	in     al,0x40
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	00 00                	add    BYTE PTR [rax],al
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	9f                   	lahf
    159c:	00 02                	add    BYTE PTR [rdx],al
    159e:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    15a1:	07                   	(bad)
    15a2:	f0 07                	lock (bad)
    15a4:	0a 03                	or     al,BYTE PTR [rbx]
    15a6:	f2 40 00 00          	repnz rex add BYTE PTR [rax],al
    15aa:	00 00                	add    BYTE PTR [rax],al
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	9f                   	lahf
    15af:	00 02                	add    BYTE PTR [rdx],al
    15b1:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    15b4:	07                   	(bad)
    15b5:	86 08                	xchg   BYTE PTR [rax],cl
    15b7:	0a 03                	or     al,BYTE PTR [rbx]
    15b9:	00 41 00             	add    BYTE PTR [rcx+0x0],al
    15bc:	00 00                	add    BYTE PTR [rax],al
    15be:	00 00                	add    BYTE PTR [rax],al
    15c0:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    15c6:	86 08                	xchg   BYTE PTR [rax],cl
    15c8:	99                   	cdq
    15c9:	08 0a                	or     BYTE PTR [rdx],cl
    15cb:	03 0e                	add    ecx,DWORD PTR [rsi]
    15cd:	41 00 00             	add    BYTE PTR [r8],al
    15d0:	00 00                	add    BYTE PTR [rax],al
    15d2:	00 00                	add    BYTE PTR [rax],al
    15d4:	9f                   	lahf
    15d5:	00 02                	add    BYTE PTR [rdx],al
    15d7:	00 04 cc             	add    BYTE PTR [rsp+rcx*8],al
    15da:	08 d6                	or     dh,dl
    15dc:	08 06                	or     BYTE PTR [rsi],al
    15de:	a0 62 48 00 00 00 00 	movabs al,ds:0x2000000004862
    15e5:	02 00 
    15e7:	04 d6                	add    al,0xd6
    15e9:	08 e9                	or     cl,ch
    15eb:	08 0a                	or     BYTE PTR [rdx],cl
    15ed:	03 1d 41 00 00 00    	add    ebx,DWORD PTR [rip+0x41]        # 1634 <_Z17hashMapAddElementP7HashMap8string_t+0x154>
    15f3:	00 00                	add    BYTE PTR [rax],al
    15f5:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    15fb:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    15fc:	09 af 09 06 a0 62    	or     DWORD PTR [rdi+0x62a00609],ebp
    1602:	48 00 00             	rex.W add BYTE PTR [rax],al
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	02 00                	add    al,BYTE PTR [rax]
    1609:	04 af                	add    al,0xaf
    160b:	09 c2                	or     edx,eax
    160d:	09 0a                	or     DWORD PTR [rdx],ecx
    160f:	03 28                	add    ebp,DWORD PTR [rax]
    1611:	41 00 00             	add    BYTE PTR [r8],al
    1614:	00 00                	add    BYTE PTR [rax],al
    1616:	00 00                	add    BYTE PTR [rax],al
    1618:	9f                   	lahf
    1619:	00 02                	add    BYTE PTR [rdx],al
    161b:	00 04 fe             	add    BYTE PTR [rsi+rdi*8],al
    161e:	09 88 0a 06 a0 62    	or     DWORD PTR [rax+0x62a0060a],ecx
    1624:	48 00 00             	rex.W add BYTE PTR [rax],al
    1627:	00 00                	add    BYTE PTR [rax],al
    1629:	02 00                	add    al,BYTE PTR [rax]
    162b:	04 88                	add    al,0x88
    162d:	0a 9b 0a 0a 03 33    	or     bl,BYTE PTR [rbx+0x33030a0a]
    1633:	41 00 00             	add    BYTE PTR [r8],al
    1636:	00 00                	add    BYTE PTR [rax],al
    1638:	00 00                	add    BYTE PTR [rax],al
    163a:	9f                   	lahf
    163b:	00 02                	add    BYTE PTR [rdx],al
    163d:	00 04 d6             	add    BYTE PTR [rsi+rdx*8],al
    1640:	0a e0                	or     ah,al
    1642:	0a 06                	or     al,BYTE PTR [rsi]
    1644:	a0 62 48 00 00 00 00 	movabs al,ds:0x2000000004862
    164b:	02 00 
    164d:	04 e0                	add    al,0xe0
    164f:	0a ec                	or     ch,ah
    1651:	0a 06                	or     al,BYTE PTR [rsi]
    1653:	a0 71 48 00 00 00 00 	movabs al,ds:0x2000000004871
    165a:	02 00 
    165c:	04 a6                	add    al,0xa6
    165e:	0b b4 0b 06 a0 62 48 	or     esi,DWORD PTR [rbx+rcx*1+0x4862a006]
	...
    1671:	00 00                	add    BYTE PTR [rax],al
    1673:	04 f0                	add    al,0xf0
    1675:	06                   	(bad)
    1676:	80 07 01             	add    BYTE PTR [rdi],0x1
    1679:	55                   	push   rbp
    167a:	04 80                	add    al,0x80
    167c:	07                   	(bad)
    167d:	8e 07                	mov    es,WORD PTR [rdi]
    167f:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    1682:	8e 07                	mov    es,WORD PTR [rdi]
    1684:	8f 07                	pop    QWORD PTR [rdi]
    1686:	04 a3                	add    al,0xa3
    1688:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    168b:	04 8f                	add    al,0x8f
    168d:	07                   	(bad)
    168e:	a9 07 01 55 04       	test   eax,0x4550107
    1693:	a9 07 ae 07 04       	test   eax,0x407ae07
    1698:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    169f:	00 00 
	...
    16a9:	00 00                	add    BYTE PTR [rax],al
    16ab:	04 90                	add    al,0x90
    16ad:	04 bb                	add    al,0xbb
    16af:	04 01                	add    al,0x1
    16b1:	55                   	push   rbp
    16b2:	04 bb                	add    al,0xbb
    16b4:	04 b5                	add    al,0xb5
    16b6:	05 01 5c 04 b5       	add    eax,0xb5045c01
    16bb:	05 b8 05 04 a3       	add    eax,0xa30405b8
    16c0:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16c3:	04 b8                	add    al,0xb8
    16c5:	05 ca 05 01 5c       	add    eax,0x5c0105ca
    16ca:	04 ca                	add    al,0xca
    16cc:	05 cd 05 04 a3       	add    eax,0xa30405cd
    16d1:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    16d4:	04 cd                	add    al,0xcd
    16d6:	05 e7 05 01 55       	add    eax,0x550105e7
    16db:	04 e7                	add    al,0xe7
    16dd:	05 ec 05 04 a3       	add    eax,0xa30405ec
    16e2:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    16ed:	00 00                	add    BYTE PTR [rax],al
    16ef:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    16f2:	04 b0                	add    al,0xb0
    16f4:	04 06                	add    al,0x6
    16f6:	54                   	push   rsp
    16f7:	93                   	xchg   ebx,eax
    16f8:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    16fb:	08 04 b0             	or     BYTE PTR [rax+rsi*4],al
    16fe:	04 bb                	add    al,0xbb
    1700:	04 06                	add    al,0x6
    1702:	5d                   	pop    rbp
    1703:	93                   	xchg   ebx,eax
    1704:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1707:	08 04 cb             	or     BYTE PTR [rbx+rcx*8],al
    170a:	04 dd                	add    al,0xdd
    170c:	04 06                	add    al,0x6
    170e:	5d                   	pop    rbp
    170f:	93                   	xchg   ebx,eax
    1710:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1713:	08 04 b8             	or     BYTE PTR [rax+rdi*4],al
    1716:	05 cc 05 06 5d       	add    eax,0x5d0605cc
    171b:	93                   	xchg   ebx,eax
    171c:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    171f:	08 04 cd 05 d9 05 06 	or     BYTE PTR [rcx*8+0x605d905],al
    1726:	54                   	push   rsp
    1727:	93                   	xchg   ebx,eax
    1728:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    172b:	08 00                	or     BYTE PTR [rax],al
    172d:	00 00                	add    BYTE PTR [rax],al
    172f:	00 00                	add    BYTE PTR [rax],al
    1731:	00 00                	add    BYTE PTR [rax],al
    1733:	04 ef                	add    al,0xef
    1735:	04 b3                	add    al,0xb3
    1737:	05 01 56 04 b3       	add    eax,0xb3045601
    173c:	05 b8 05 01 50       	add    eax,0x500105b8
    1741:	04 b8                	add    al,0xb8
    1743:	05 cd 05 02 30       	add    eax,0x300205cd
    1748:	9f                   	lahf
    1749:	00 00                	add    BYTE PTR [rax],al
    174b:	00 00                	add    BYTE PTR [rax],al
    174d:	00 04 8f             	add    BYTE PTR [rdi+rcx*4],al
    1750:	05 93 05 01 54       	add    eax,0x54010593
    1755:	04 93                	add    al,0x93
    1757:	05 b8 05 01 55       	add    eax,0x550105b8
    175c:	00 01                	add    BYTE PTR [rcx],al
    175e:	00 00                	add    BYTE PTR [rax],al
    1760:	00 04 8f             	add    BYTE PTR [rdi+rcx*4],al
    1763:	05 9a 05 01 51       	add    eax,0x5101059a
    1768:	04 9a                	add    al,0x9a
    176a:	05 a2 05 05 72       	add    eax,0x720505a2
    176f:	00 74 00 22          	add    BYTE PTR [rax+rax*1+0x22],dh
    1773:	00 02                	add    BYTE PTR [rdx],al
    1775:	00 04 b0             	add    BYTE PTR [rax+rsi*4],al
    1778:	04 bb                	add    al,0xbb
    177a:	04 05                	add    al,0x5
    177c:	54                   	push   rsp
    177d:	93                   	xchg   ebx,eax
    177e:	08 93 08 00 02 00    	or     BYTE PTR [rbx+0x20008],dl
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	04 b0                	add    al,0xb0
    1788:	04 bb                	add    al,0xbb
    178a:	04 01                	add    al,0x1
    178c:	55                   	push   rbp
    178d:	04 bb                	add    al,0xbb
    178f:	04 ef                	add    al,0xef
    1791:	04 01                	add    al,0x1
    1793:	5c                   	pop    rsp
    1794:	00 00                	add    BYTE PTR [rax],al
    1796:	00 04 b2             	add    BYTE PTR [rdx+rsi*4],al
    1799:	04 ef                	add    al,0xef
    179b:	04 01                	add    al,0x1
    179d:	56                   	push   rsi
    179e:	00 00                	add    BYTE PTR [rax],al
    17a0:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    17a3:	04 dd                	add    al,0xdd
    17a5:	04 08                	add    al,0x8
    17a7:	70 00                	jo     17a9 <_Z17hashMapPopElementP7HashMap8string_t+0x19>
    17a9:	73 00                	jae    17ab <_Z17hashMapPopElementP7HashMap8string_t+0x1b>
    17ab:	22 23                	and    ah,BYTE PTR [rbx]
    17ad:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    17b3:	d4                   	(bad)
    17b4:	04 de                	add    al,0xde
    17b6:	04 06                	add    al,0x6
    17b8:	a0 ab 43 00 00 00 00 	movabs al,ds:0x43ab
    17bf:	00 00 
	...
    17cd:	00 00                	add    BYTE PTR [rax],al
    17cf:	04 90                	add    al,0x90
    17d1:	01 ad 01 01 55 04    	add    DWORD PTR [rbp+0x4550101],ebp
    17d7:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    17d8:	01 f5                	add    ebp,esi
    17da:	02 01                	add    al,BYTE PTR [rcx]
    17dc:	56                   	push   rsi
    17dd:	04 f5                	add    al,0xf5
    17df:	02 fc                	add    bh,ah
    17e1:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    17e4:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    17e7:	04 fc                	add    al,0xfc
    17e9:	02 d5                	add    dl,ch
    17eb:	03 01                	add    eax,DWORD PTR [rcx]
    17ed:	56                   	push   rsi
    17ee:	04 d5                	add    al,0xd5
    17f0:	03 da                	add    ebx,edx
    17f2:	03 04 a3             	add    eax,DWORD PTR [rbx+riz*4]
    17f5:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    17f8:	04 da                	add    al,0xda
    17fa:	03 e4                	add    esp,esp
    17fc:	03 01                	add    eax,DWORD PTR [rcx]
    17fe:	56                   	push   rsi
    17ff:	04 e4                	add    al,0xe4
    1801:	03 fe                	add    edi,esi
    1803:	03 01                	add    eax,DWORD PTR [rcx]
    1805:	55                   	push   rbp
    1806:	04 fe                	add    al,0xfe
    1808:	03 83 04 04 a3 01    	add    eax,DWORD PTR [rbx+0x1a30404]
    180e:	55                   	push   rbp
    180f:	9f                   	lahf
	...
    1818:	00 00                	add    BYTE PTR [rax],al
    181a:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    181d:	01 b0 01 06 54 93    	add    DWORD PTR [rax-0x6cabf9ff],esi
    1823:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1826:	08 04 b0             	or     BYTE PTR [rax+rsi*4],al
    1829:	01 b3 01 06 5c 93    	add    DWORD PTR [rbx-0x6ca3f9ff],esi
    182f:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1832:	08 04 b3             	or     BYTE PTR [rbx+rsi*4],al
    1835:	01 81 02 06 5c 93    	add    DWORD PTR [rcx-0x6ca3f9fe],eax
    183b:	08 5d 93             	or     BYTE PTR [rbp-0x6d],bl
    183e:	08 04 fc             	or     BYTE PTR [rsp+rdi*8],al
    1841:	02 d7                	add    dl,bh
    1843:	03 06                	add    eax,DWORD PTR [rsi]
    1845:	5c                   	pop    rsp
    1846:	93                   	xchg   ebx,eax
    1847:	08 5d 93             	or     BYTE PTR [rbp-0x6d],bl
    184a:	08 04 e4             	or     BYTE PTR [rsp+riz*8],al
    184d:	03 f0                	add    esi,eax
    184f:	03 06                	add    eax,DWORD PTR [rsi]
    1851:	54                   	push   rsp
    1852:	93                   	xchg   ebx,eax
    1853:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1856:	08 00                	or     BYTE PTR [rax],al
    1858:	00 00                	add    BYTE PTR [rax],al
    185a:	00 00                	add    BYTE PTR [rax],al
    185c:	00 00                	add    BYTE PTR [rax],al
    185e:	04 fc                	add    al,0xfc
    1860:	02 89 03 02 30 9f    	add    cl,BYTE PTR [rcx-0x60cffdfd]
    1866:	04 89                	add    al,0x89
    1868:	03 8d 03 01 53 04    	add    ecx,DWORD PTR [rbp+0x4530103]
    186e:	8d 03                	lea    eax,[rbx]
    1870:	bd 03 01 54 00       	mov    ebp,0x540103
    1875:	02 00                	add    al,BYTE PTR [rax]
    1877:	04 b3                	add    al,0xb3
    1879:	01 be 01 05 54 93    	add    DWORD PTR [rsi-0x6cabfaff],edi
    187f:	08 93 08 00 00 00    	or     BYTE PTR [rbx+0x8],dl
    1885:	01 00                	add    DWORD PTR [rax],eax
    1887:	00 00                	add    BYTE PTR [rax],al
    1889:	04 b5                	add    al,0xb5
    188b:	01 be 01 02 75 00    	add    DWORD PTR [rsi+0x750201],edi
    1891:	04 be                	add    al,0xbe
    1893:	01 c3                	add    ebx,eax
    1895:	01 05 75 00 73 00    	add    DWORD PTR [rip+0x730075],eax        # 731910 <_end+0x72b8f8>
    189b:	22 04 c3             	and    al,BYTE PTR [rbx+rax*8]
    189e:	01 cb                	add    ebx,ecx
    18a0:	01 01                	add    DWORD PTR [rcx],eax
    18a2:	53                   	push   rbx
    18a3:	00 00                	add    BYTE PTR [rax],al
    18a5:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
    18a8:	01 d7                	add    edi,edx
    18aa:	01 08                	add    DWORD PTR [rax],ecx
    18ac:	75 00                	jne    18ae <_Z20hashMapSearchElementP7HashMap8string_t+0x4e>
    18ae:	73 00                	jae    18b0 <_Z20hashMapSearchElementP7HashMap8string_t+0x50>
    18b0:	22 23                	and    ah,BYTE PTR [rbx]
    18b2:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    18b8:	cf                   	iret
    18b9:	01 dc                	add    esp,ebx
    18bb:	01 06                	add    DWORD PTR [rsi],eax
    18bd:	a0 0e 45 00 00 00 00 	movabs al,ds:0x100000000450e
    18c4:	01 00 
    18c6:	00 00                	add    BYTE PTR [rax],al
    18c8:	04 fd                	add    al,0xfd
    18ca:	01 ef                	add    edi,ebp
    18cc:	02 01                	add    al,BYTE PTR [rcx]
    18ce:	56                   	push   rsi
    18cf:	04 da                	add    al,0xda
    18d1:	03 e4                	add    esp,esp
    18d3:	03 01                	add    eax,DWORD PTR [rcx]
    18d5:	56                   	push   rsi
    18d6:	00 00                	add    BYTE PTR [rax],al
    18d8:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
    18db:	02 b5 02 01 51 00    	add    dh,BYTE PTR [rbp+0x510102]
    18e1:	00 00                	add    BYTE PTR [rax],al
    18e3:	04 a1                	add    al,0xa1
    18e5:	02 b6 02 02 30 9f    	add    dh,BYTE PTR [rsi-0x60cffdfe]
    18eb:	00 00                	add    BYTE PTR [rax],al
    18ed:	00 00                	add    BYTE PTR [rax],al
    18ef:	00 04 a1             	add    BYTE PTR [rcx+riz*4],al
    18f2:	02 a8 02 06 70 00    	add    ch,BYTE PTR [rax+0x700602]
    18f8:	71 00                	jno    18fa <_Z11hashMapDtorP7HashMap+0xa>
    18fa:	22 9f 04 a8 02 b5    	and    bl,BYTE PTR [rdi-0x4afd57fc]
    1900:	02 01                	add    al,BYTE PTR [rcx]
    1902:	55                   	push   rbp
    1903:	00 00                	add    BYTE PTR [rax],al
    1905:	00 00                	add    BYTE PTR [rax],al
    1907:	01 01                	add    DWORD PTR [rcx],eax
    1909:	00 00                	add    BYTE PTR [rax],al
    190b:	00 00                	add    BYTE PTR [rax],al
    190d:	00 04 b9             	add    BYTE PTR [rcx+rdi*4],al
    1910:	02 dd                	add    bl,ch
    1912:	02 01                	add    al,BYTE PTR [rcx]
    1914:	50                   	push   rax
    1915:	04 dd                	add    al,0xdd
    1917:	02 e7                	add    ah,bh
    1919:	02 01                	add    al,BYTE PTR [rcx]
    191b:	52                   	push   rdx
    191c:	04 e7                	add    al,0xe7
    191e:	02 ef                	add    ch,bh
    1920:	02 01                	add    al,BYTE PTR [rcx]
    1922:	50                   	push   rax
    1923:	04 da                	add    al,0xda
    1925:	03 de                	add    ebx,esi
    1927:	03 01                	add    eax,DWORD PTR [rcx]
    1929:	50                   	push   rax
    192a:	04 de                	add    al,0xde
    192c:	03 e4                	add    esp,esp
    192e:	03 02                	add    eax,DWORD PTR [rdx]
    1930:	76 08                	jbe    193a <_Z11hashMapDtorP7HashMap+0x4a>
    1932:	00 00                	add    BYTE PTR [rax],al
    1934:	00 00                	add    BYTE PTR [rax],al
    1936:	00 00                	add    BYTE PTR [rax],al
    1938:	00 04 30             	add    BYTE PTR [rax+rsi*1],al
    193b:	42 02 75 00          	rex.X add sil,BYTE PTR [rbp+0x0]
    193f:	04 42                	add    al,0x42
    1941:	8c 01                	mov    WORD PTR [rcx],es
    1943:	02 73 00             	add    dh,BYTE PTR [rbx+0x0]
    1946:	04 8c                	add    al,0x8c
    1948:	01 8d 01 02 70 00    	add    DWORD PTR [rbp+0x700201],ecx
    194e:	00 03                	add    BYTE PTR [rbx],al
    1950:	07                   	(bad)
    1951:	07                   	(bad)
    1952:	01 01                	add    DWORD PTR [rcx],eax
    1954:	01 01                	add    DWORD PTR [rcx],eax
    1956:	00 04 75 75 02 31 9f 	add    BYTE PTR [rsi*2-0x60cefd8b],al
    195d:	04 75                	add    al,0x75
    195f:	79 02                	jns    1963 <_Z17hashMapDebugPrintP7HashMap+0x3>
    1961:	32 9f 04 79 88 01    	xor    bl,BYTE PTR [rdi+0x1887904]
    1967:	02 33                	add    dh,BYTE PTR [rbx]
    1969:	9f                   	lahf
    196a:	04 88                	add    al,0x88
    196c:	01 8d 01 02 34 9f    	add    DWORD PTR [rbp-0x60cbfdff],ecx
    1972:	00 00                	add    BYTE PTR [rax],al
    1974:	00 04 02             	add    BYTE PTR [rdx+rax*1],al
    1977:	25 06 fa 22 11       	and    eax,0x1122fa06
    197c:	00 00                	add    BYTE PTR [rax],al
    197e:	9f                   	lahf
	...
    198b:	00 00                	add    BYTE PTR [rax],al
    198d:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    1990:	05 94 06 01 55       	add    eax,0x55010694
    1995:	04 94                	add    al,0x94
    1997:	06                   	(bad)
    1998:	c4                   	(bad)
    1999:	06                   	(bad)
    199a:	01 5c 04 c4          	add    DWORD PTR [rsp+rax*1-0x3c],ebx
    199e:	06                   	(bad)
    199f:	c7 06 04 a3 01 55    	mov    DWORD PTR [rsi],0x5501a304
    19a5:	9f                   	lahf
    19a6:	04 c7                	add    al,0xc7
    19a8:	06                   	(bad)
    19a9:	da 06                	fiadd  DWORD PTR [rsi]
    19ab:	01 5c 04 da          	add    DWORD PTR [rsp+rax*1-0x26],ebx
    19af:	06                   	(bad)
    19b0:	dd 06                	fld    QWORD PTR [rsi]
    19b2:	04 a3                	add    al,0xa3
    19b4:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    19b7:	04 dd                	add    al,0xdd
    19b9:	06                   	(bad)
    19ba:	e1 06                	loope  19c2 <_Z17hashMapDebugPrintP7HashMap+0x62>
    19bc:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    19bf:	e1 06                	loope  19c7 <_Z17hashMapDebugPrintP7HashMap+0x67>
    19c1:	e2 06                	loop   19c9 <_Z17hashMapDebugPrintP7HashMap+0x69>
    19c3:	04 a3                	add    al,0xa3
    19c5:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    19d0:	00 00                	add    BYTE PTR [rax],al
    19d2:	00 04 f0             	add    BYTE PTR [rax+rsi*8],al
    19d5:	05 8c 06 06 54       	add    eax,0x5406068c
    19da:	93                   	xchg   ebx,eax
    19db:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19de:	08 04 8c             	or     BYTE PTR [rsp+rcx*4],al
    19e1:	06                   	(bad)
    19e2:	94                   	xchg   esp,eax
    19e3:	06                   	(bad)
    19e4:	06                   	(bad)
    19e5:	5d                   	pop    rbp
    19e6:	93                   	xchg   ebx,eax
    19e7:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19ea:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    19ed:	06                   	(bad)
    19ee:	b5 06                	mov    ch,0x6
    19f0:	06                   	(bad)
    19f1:	5d                   	pop    rbp
    19f2:	93                   	xchg   ebx,eax
    19f3:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    19f6:	08 04 c7             	or     BYTE PTR [rdi+rax*8],al
    19f9:	06                   	(bad)
    19fa:	dc 06                	fadd   QWORD PTR [rsi]
    19fc:	06                   	(bad)
    19fd:	5d                   	pop    rbp
    19fe:	93                   	xchg   ebx,eax
    19ff:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1a02:	08 04 dd 06 e1 06 06 	or     BYTE PTR [rbx*8+0x606e106],al
    1a09:	54                   	push   rsp
    1a0a:	93                   	xchg   ebx,eax
    1a0b:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    1a0e:	08 00                	or     BYTE PTR [rax],al
    1a10:	00 00                	add    BYTE PTR [rax],al
    1a12:	00 00                	add    BYTE PTR [rax],al
    1a14:	00 00                	add    BYTE PTR [rax],al
    1a16:	04 8e                	add    al,0x8e
    1a18:	06                   	(bad)
    1a19:	c2 06 01             	ret    0x106
    1a1c:	56                   	push   rsi
    1a1d:	04 c2                	add    al,0xc2
    1a1f:	06                   	(bad)
    1a20:	c7 06 01 50 04 c7    	mov    DWORD PTR [rsi],0xc7045001
    1a26:	06                   	(bad)
    1a27:	d8 06                	fadd   DWORD PTR [rsi]
    1a29:	01 56 00             	add    DWORD PTR [rsi+0x0],edx
    1a2c:	00 00                	add    BYTE PTR [rax],al
    1a2e:	04 ac                	add    al,0xac
    1a30:	06                   	(bad)
    1a31:	b5 06                	mov    ch,0x6
    1a33:	08 70 00             	or     BYTE PTR [rax+0x0],dh
    1a36:	73 00                	jae    1a38 <_Z15crc32HashString8string_t+0x18>
    1a38:	22 23                	and    ah,BYTE PTR [rbx]
    1a3a:	10 9f 00 00 00 04    	adc    BYTE PTR [rdi+0x4000000],bl
    1a40:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1a41:	06                   	(bad)
    1a42:	b6 06                	mov    dh,0x6
    1a44:	06                   	(bad)
    1a45:	a0 c6 42 00 00 00 00 	movabs al,ds:0x18c0000000042c6
    1a4c:	8c 01 
    1a4e:	00 00                	add    BYTE PTR [rax],al
    1a50:	05 00 08 00 00       	add    eax,0x800
	...
    1a61:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1a64:	02 aa 02 01 55 04    	add    ch,BYTE PTR [rdx+0x4550102]
    1a6a:	aa                   	stos   BYTE PTR es:[rdi],al
    1a6b:	02 d0                	add    dl,al
    1a6d:	02 01                	add    al,BYTE PTR [rcx]
    1a6f:	56                   	push   rsi
    1a70:	04 d0                	add    al,0xd0
    1a72:	02 d3                	add    dl,bl
    1a74:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a77:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1a7a:	04 d3                	add    al,0xd3
    1a7c:	02 ed                	add    ch,ch
    1a7e:	02 01                	add    al,BYTE PTR [rcx]
    1a80:	55                   	push   rbp
    1a81:	04 ed                	add    al,0xed
    1a83:	02 f2                	add    dh,dl
    1a85:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1a88:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
	...
    1a93:	00 00                	add    BYTE PTR [rax],al
    1a95:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    1a98:	02 aa 02 01 54 04    	add    ch,BYTE PTR [rdx+0x4540102]
    1a9e:	aa                   	stos   BYTE PTR es:[rdi],al
    1a9f:	02 d2                	add    dl,dl
    1aa1:	02 01                	add    al,BYTE PTR [rcx]
    1aa3:	5c                   	pop    rsp
    1aa4:	04 d2                	add    al,0xd2
    1aa6:	02 d3                	add    dl,bl
    1aa8:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1aab:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1aaf:	d3 02                	rol    DWORD PTR [rdx],cl
    1ab1:	e6 02                	out    0x2,al
    1ab3:	01 54 04 e6          	add    DWORD PTR [rsp+rax*1-0x1a],edx
    1ab7:	02 f2                	add    dh,dl
    1ab9:	02 04 a3             	add    al,BYTE PTR [rbx+riz*4]
    1abc:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
    1ac0:	00 00                	add    BYTE PTR [rax],al
    1ac2:	00 00                	add    BYTE PTR [rax],al
    1ac4:	04 a3                	add    al,0xa3
    1ac6:	02 bc 02 01 55 04 c1 	add    bh,BYTE PTR [rdx+rax*1-0x3efbaaff]
    1acd:	02 d3                	add    dl,bl
    1acf:	02 01                	add    al,BYTE PTR [rcx]
    1ad1:	55                   	push   rbp
    1ad2:	00 00                	add    BYTE PTR [rax],al
    1ad4:	00 00                	add    BYTE PTR [rax],al
    1ad6:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    1ad9:	02 aa 02 02 30 9f    	add    ch,BYTE PTR [rdx-0x60cffdfe]
    1adf:	04 aa                	add    al,0xaa
    1ae1:	02 cc                	add    cl,ah
    1ae3:	02 01                	add    al,BYTE PTR [rcx]
    1ae5:	53                   	push   rbx
    1ae6:	00 01                	add    BYTE PTR [rcx],al
    1ae8:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1aeb:	02 bd 02 02 3a 9f    	add    bh,BYTE PTR [rbp-0x60c5fdfe]
    1af1:	00 01                	add    BYTE PTR [rcx],al
    1af3:	00 04 b8             	add    BYTE PTR [rax+rdi*4],al
    1af6:	02 bc 02 01 55 00 00 	add    bh,BYTE PTR [rdx+rax*1+0x5501]
	...
    1b09:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1b0c:	64 01 55 04          	add    DWORD PTR fs:[rbp+0x4],edx
    1b10:	64 97                	fs xchg edi,eax
    1b12:	01 01                	add    DWORD PTR [rcx],eax
    1b14:	53                   	push   rbx
    1b15:	04 97                	add    al,0x97
    1b17:	01 d6                	add    esi,edx
    1b19:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1b1c:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1b1f:	04 d6                	add    al,0xd6
    1b21:	01 e2                	add    edx,esp
    1b23:	01 01                	add    DWORD PTR [rcx],eax
    1b25:	53                   	push   rbx
    1b26:	04 e2                	add    al,0xe2
    1b28:	01 e4                	add    esp,esp
    1b2a:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1b2d:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    1b30:	04 e4                	add    al,0xe4
    1b32:	01 fe                	add    esi,edi
    1b34:	01 01                	add    DWORD PTR [rcx],eax
    1b36:	55                   	push   rbp
    1b37:	04 fe                	add    al,0xfe
    1b39:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1b3f:	55                   	push   rbp
    1b40:	9f                   	lahf
	...
    1b49:	00 00                	add    BYTE PTR [rax],al
    1b4b:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    1b4e:	3a 01                	cmp    al,BYTE PTR [rcx]
    1b50:	54                   	push   rsp
    1b51:	04 3a                	add    al,0x3a
    1b53:	82                   	(bad)
    1b54:	01 01                	add    DWORD PTR [rcx],eax
    1b56:	5c                   	pop    rsp
    1b57:	04 82                	add    al,0x82
    1b59:	01 e4                	add    esp,esp
    1b5b:	01 04 a3             	add    DWORD PTR [rbx+riz*4],eax
    1b5e:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1b62:	e4 01                	in     al,0x1
    1b64:	f7 01 01 54 04 f7    	test   DWORD PTR [rcx],0xf7045401
    1b6a:	01 88 02 04 a3 01    	add    DWORD PTR [rax+0x1a30402],ecx
    1b70:	54                   	push   rsp
    1b71:	9f                   	lahf
    1b72:	00 00                	add    BYTE PTR [rax],al
    1b74:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
    1b77:	b2 01                	mov    dl,0x1
    1b79:	01 5d 00             	add    DWORD PTR [rbp+0x0],ebx
    1b7c:	00 00                	add    BYTE PTR [rax],al
    1b7e:	00 00                	add    BYTE PTR [rax],al
    1b80:	04 82                	add    al,0x82
    1b82:	01 93 01 01 50 04    	add    DWORD PTR [rbx+0x4500101],edx
    1b88:	93                   	xchg   ebx,eax
    1b89:	01 b2 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],esi
    1b8f:	00 00                	add    BYTE PTR [rax],al
    1b91:	00 00                	add    BYTE PTR [rax],al
    1b93:	04 97                	add    al,0x97
    1b95:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1b9b:	a9 01 b2 01 01       	test   eax,0x101b201
    1ba0:	53                   	push   rbx
    1ba1:	00 01                	add    BYTE PTR [rcx],al
    1ba3:	00 04 7a             	add    BYTE PTR [rdx+rdi*2],al
    1ba6:	82                   	(bad)
    1ba7:	01 02                	add    DWORD PTR [rdx],eax
    1ba9:	30 9f 00 01 00 04    	xor    BYTE PTR [rdi+0x4000100],bl
    1baf:	7a 82                	jp     1b33 <_Z15crc32HashString8string_t+0x113>
    1bb1:	01 01                	add    DWORD PTR [rcx],eax
    1bb3:	53                   	push   rbx
    1bb4:	00 01                	add    BYTE PTR [rcx],al
    1bb6:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1bb9:	01 aa 01 01 5d 00    	add    DWORD PTR [rdx+0x5d0101],ebp
    1bbf:	01 00                	add    DWORD PTR [rax],eax
    1bc1:	00 00                	add    BYTE PTR [rax],al
    1bc3:	04 9c                	add    al,0x9c
    1bc5:	01 a9 01 01 50 04    	add    DWORD PTR [rcx+0x4500101],ebp
    1bcb:	a9 01 aa 01 01       	test   eax,0x101aa01
    1bd0:	53                   	push   rbx
    1bd1:	00 01                	add    BYTE PTR [rcx],al
    1bd3:	00 04 9c             	add    BYTE PTR [rsp+rbx*4],al
    1bd6:	01 aa 01 01 5c 00    	add    DWORD PTR [rdx+0x5c0101],ebp
    1bdc:	dd 12                	fst    QWORD PTR [rdx]
    1bde:	00 00                	add    BYTE PTR [rax],al
    1be0:	05 00 08 00 00       	add    eax,0x800
	...
    1bf1:	00 00                	add    BYTE PTR [rax],al
    1bf3:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1bf6:	08 af 09 01 55 04    	or     BYTE PTR [rdi+0x4550109],ch
    1bfc:	af                   	scas   eax,DWORD PTR es:[rdi]
    1bfd:	09 80 10 03 76 f8    	or     DWORD PTR [rax-0x789fcf0],eax
    1c03:	7e 04                	jle    1c09 <_Z17murmur2HashString8string_t+0x39>
    1c05:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1c08:	10 08                	adc    BYTE PTR [rax],cl
    1c0a:	91                   	xchg   ecx,eax
    1c0b:	70 09                	jo     1c16 <_Z17murmur2HashString8string_t+0x46>
    1c0d:	e0 1a                	loopne 1c29 <_Z17murmur2HashString8string_t+0x59>
    1c0f:	08 98 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],bl
    1c15:	fe                   	(bad)
    1c16:	10 03                	adc    BYTE PTR [rbx],al
    1c18:	76 f8                	jbe    1c12 <_Z17murmur2HashString8string_t+0x42>
    1c1a:	7e 04                	jle    1c20 <_Z17murmur2HashString8string_t+0x50>
    1c1c:	fe                   	(bad)
    1c1d:	10 98 11 01 55 04    	adc    BYTE PTR [rax+0x4550111],bl
    1c23:	98                   	cwde
    1c24:	11 b6 11 03 76 f8    	adc    DWORD PTR [rsi-0x789fcef],esi
    1c2a:	7e 00                	jle    1c2c <_Z17murmur2HashString8string_t+0x5c>
	...
    1c34:	00 00                	add    BYTE PTR [rax],al
    1c36:	04 e0                	add    al,0xe0
    1c38:	08 c0                	or     al,al
    1c3a:	09 01                	or     DWORD PTR [rcx],eax
    1c3c:	54                   	push   rsp
    1c3d:	04 c0                	add    al,0xc0
    1c3f:	09 da                	or     edx,ebx
    1c41:	09 01                	or     DWORD PTR [rcx],eax
    1c43:	5f                   	pop    rdi
    1c44:	04 da                	add    al,0xda
    1c46:	09 fe                	or     esi,edi
    1c48:	10 04 a3             	adc    BYTE PTR [rbx+riz*4],al
    1c4b:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    1c4f:	fe                   	(bad)
    1c50:	10 91 11 01 54 04    	adc    BYTE PTR [rcx+0x4540111],dl
    1c56:	91                   	xchg   ecx,eax
    1c57:	11 b6 11 04 a3 01    	adc    DWORD PTR [rsi+0x1a30411],esi
    1c5d:	54                   	push   rsp
    1c5e:	9f                   	lahf
	...
    1c67:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
    1c6a:	08 b6 09 06 51 93    	or     BYTE PTR [rsi-0x6caef9f7],dh
    1c70:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1c73:	08 04 b9             	or     BYTE PTR [rcx+rdi*4],al
    1c76:	09 d7                	or     edi,edx
    1c78:	09 06                	or     DWORD PTR [rsi],eax
    1c7a:	5d                   	pop    rbp
    1c7b:	93                   	xchg   ebx,eax
    1c7c:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1c7f:	08 04 f9             	or     BYTE PTR [rcx+rdi*8],al
    1c82:	09 9a 0a 06 5d 93    	or     DWORD PTR [rdx-0x6ca2f9f6],ebx
    1c88:	08 53 93             	or     BYTE PTR [rbx-0x6d],dl
    1c8b:	08 04 fe             	or     BYTE PTR [rsi+rdi*8],al
    1c8e:	10 8a 11 06 51 93    	adc    BYTE PTR [rdx-0x6caef9ef],cl
    1c94:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    1c97:	08 00                	or     BYTE PTR [rax],al
	...
    1ca5:	04 e0                	add    al,0xe0
    1ca7:	08 c0                	or     al,al
    1ca9:	09 01                	or     DWORD PTR [rcx],eax
    1cab:	58                   	pop    rax
    1cac:	04 c0                	add    al,0xc0
    1cae:	09 80 10 03 76 8c    	or     DWORD PTR [rax-0x7389fcf0],eax
    1cb4:	7f 04                	jg     1cba <_Z13sumHashString8string_t+0x3a>
    1cb6:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1cb9:	10 08                	adc    BYTE PTR [rax],cl
    1cbb:	91                   	xchg   ecx,eax
    1cbc:	70 09                	jo     1cc7 <_Z13sumHashString8string_t+0x47>
    1cbe:	e0 1a                	loopne 1cda <_Z13sumHashString8string_t+0x5a>
    1cc0:	08 84 1c 04 8b 10 fe 	or     BYTE PTR [rsp+rbx*1-0x1ef74fc],al
    1cc7:	10 03                	adc    BYTE PTR [rbx],al
    1cc9:	76 8c                	jbe    1c57 <_Z17murmur2HashString8string_t+0x87>
    1ccb:	7f 04                	jg     1cd1 <_Z13sumHashString8string_t+0x51>
    1ccd:	fe                   	(bad)
    1cce:	10 9c 11 01 58 04 9c 	adc    BYTE PTR [rcx+rdx*1-0x63fba7ff],bl
    1cd5:	11 b6 11 03 76 8c    	adc    DWORD PTR [rsi-0x7389fcef],esi
    1cdb:	7f 00                	jg     1cdd <_Z13sumHashString8string_t+0x5d>
	...
    1ce9:	04 94                	add    al,0x94
    1ceb:	0a 97 0a 01 50 04    	or     dl,BYTE PTR [rdi+0x450010a]
    1cf1:	97                   	xchg   edi,eax
    1cf2:	0a b1 0a 01 5f 04    	or     dh,BYTE PTR [rcx+0x45f010a]
    1cf8:	b1 0a                	mov    cl,0xa
    1cfa:	80 10 03             	adc    BYTE PTR [rax],0x3
    1cfd:	76 98                	jbe    1c97 <_Z13sumHashString8string_t+0x17>
    1cff:	7f 04                	jg     1d05 <_Z13sumHashString8string_t+0x85>
    1d01:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1d04:	10 08                	adc    BYTE PTR [rax],cl
    1d06:	91                   	xchg   ecx,eax
    1d07:	70 09                	jo     1d12 <_Z13sumHashString8string_t+0x92>
    1d09:	e0 1a                	loopne 1d25 <_Z13sumHashString8string_t+0xa5>
    1d0b:	08 78 1c             	or     BYTE PTR [rax+0x1c],bh
    1d0e:	04 8b                	add    al,0x8b
    1d10:	10 fe                	adc    dh,bh
    1d12:	10 03                	adc    BYTE PTR [rbx],al
    1d14:	76 98                	jbe    1cae <_Z13sumHashString8string_t+0x2e>
    1d16:	7f 04                	jg     1d1c <_Z13sumHashString8string_t+0x9c>
    1d18:	9d                   	popf
    1d19:	11 b6 11 03 76 98    	adc    DWORD PTR [rsi-0x6789fcef],esi
    1d1f:	7f 00                	jg     1d21 <_Z13sumHashString8string_t+0xa1>
	...
    1d29:	00 00                	add    BYTE PTR [rax],al
    1d2b:	04 b1                	add    al,0xb1
    1d2d:	0a b1 0a 01 50 04    	or     dh,BYTE PTR [rcx+0x450010a]
    1d33:	b1 0a                	mov    cl,0xa
    1d35:	80 10 03             	adc    BYTE PTR [rax],0x3
    1d38:	76 90                	jbe    1cca <_Z13sumHashString8string_t+0x4a>
    1d3a:	7f 04                	jg     1d40 <_Z13sumHashString8string_t+0xc0>
    1d3c:	80 10 8b             	adc    BYTE PTR [rax],0x8b
    1d3f:	10 08                	adc    BYTE PTR [rax],cl
    1d41:	91                   	xchg   ecx,eax
    1d42:	70 09                	jo     1d4d <_Z13sumHashString8string_t+0xcd>
    1d44:	e0 1a                	loopne 1d60 <_Z13sumHashString8string_t+0xe0>
    1d46:	08 80 1c 04 8b 10    	or     BYTE PTR [rax+0x108b041c],al
    1d4c:	fe                   	(bad)
    1d4d:	10 03                	adc    BYTE PTR [rbx],al
    1d4f:	76 90                	jbe    1ce1 <_Z13sumHashString8string_t+0x61>
    1d51:	7f 04                	jg     1d57 <_Z13sumHashString8string_t+0xd7>
    1d53:	9d                   	popf
    1d54:	11 b6 11 03 76 90    	adc    DWORD PTR [rsi-0x6f89fcef],esi
    1d5a:	7f 00                	jg     1d5c <_Z13sumHashString8string_t+0xdc>
    1d5c:	01 00                	add    DWORD PTR [rax],eax
    1d5e:	00 00                	add    BYTE PTR [rax],al
    1d60:	04 b1                	add    al,0xb1
    1d62:	0a fe                	or     bh,dh
    1d64:	10 06                	adc    BYTE PTR [rsi],al
    1d66:	0c 73                	or     al,0x73
    1d68:	99                   	cdq
    1d69:	0f 00 9f 04 9d 11 b6 	ltr    WORD PTR [rdi-0x49ee62fc]
    1d70:	11 06                	adc    DWORD PTR [rsi],eax
    1d72:	0c 73                	or     al,0x73
    1d74:	99                   	cdq
    1d75:	0f 00 9f 00 01 00 00 	ltr    WORD PTR [rdi+0x100]
	...
    1d84:	00 01                	add    BYTE PTR [rcx],al
	...
    1d8e:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1d91:	0c b6                	or     al,0xb6
    1d93:	0c 0a                	or     al,0xa
    1d95:	9e                   	sahf
    1d96:	08 00                	or     BYTE PTR [rax],al
    1d98:	00 00                	add    BYTE PTR [rax],al
    1d9a:	00 00                	add    BYTE PTR [rax],al
    1d9c:	00 00                	add    BYTE PTR [rax],al
    1d9e:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1da1:	0c e1                	or     al,0xe1
    1da3:	0c 01                	or     al,0x1
    1da5:	63 04 e1             	movsxd eax,DWORD PTR [rcx+riz*8]
    1da8:	0c f0                	or     al,0xf0
    1daa:	0c 03                	or     al,0x3
    1dac:	76 a0                	jbe    1d4e <_Z13sumHashString8string_t+0xce>
    1dae:	7f 04                	jg     1db4 <_Z13sumHashString8string_t+0x134>
    1db0:	f0 0c 8d             	lock or al,0x8d
    1db3:	0d 01 63 04 8d       	or     eax,0x8d046301
    1db8:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1dbd:	04 8b                	add    al,0x8b
    1dbf:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1dc5:	9b                   	fwait
    1dc6:	10 c5                	adc    ch,al
    1dc8:	10 0a                	adc    BYTE PTR [rdx],cl
    1dca:	9e                   	sahf
    1dcb:	08 00                	or     BYTE PTR [rax],al
    1dcd:	00 00                	add    BYTE PTR [rax],al
    1dcf:	00 00                	add    BYTE PTR [rax],al
    1dd1:	00 00                	add    BYTE PTR [rax],al
    1dd3:	00 04 c5 10 fd 10 01 	add    BYTE PTR [rax*8+0x110fd10],al
    1dda:	66 04 fd             	data16 add al,0xfd
    1ddd:	10 fe                	adc    dh,bh
    1ddf:	10 0e                	adc    BYTE PTR [rsi],cl
    1de1:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1de2:	2e 08 00             	cs or  BYTE PTR [rax],al
    1de5:	00 00                	add    BYTE PTR [rax],al
    1de7:	00 00                	add    BYTE PTR [rax],al
    1de9:	00 00                	add    BYTE PTR [rax],al
    1deb:	00 12                	add    BYTE PTR [rdx],dl
    1ded:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1df3:	11 01                	adc    DWORD PTR [rcx],eax
    1df5:	66 04 ab             	data16 add al,0xab
    1df8:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1dfe:	7f 00                	jg     1e00 <_Z17adler32HashString8string_t+0x10>
    1e00:	01 00                	add    DWORD PTR [rax],eax
    1e02:	00 00                	add    BYTE PTR [rax],al
    1e04:	04 f3                	add    al,0xf3
    1e06:	0e                   	(bad)
    1e07:	f7 0f 01 53 04 9d    	test   DWORD PTR [rdi],0x9d045301
    1e0d:	11 a2 11 01 53 00    	adc    DWORD PTR [rdx+0x530111],esp
    1e13:	00 00                	add    BYTE PTR [rax],al
    1e15:	04 d1                	add    al,0xd1
    1e17:	09 e1                	or     ecx,esp
    1e19:	09 02                	or     DWORD PTR [rdx],eax
    1e1b:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1e21:	b1 0a                	mov    cl,0xa
    1e23:	b1 0a                	mov    cl,0xa
    1e25:	02 30                	add    dh,BYTE PTR [rax]
    1e27:	9f                   	lahf
    1e28:	00 00                	add    BYTE PTR [rax],al
    1e2a:	00 00                	add    BYTE PTR [rax],al
    1e2c:	00 00                	add    BYTE PTR [rax],al
    1e2e:	00 04 cf             	add    BYTE PTR [rdi+rcx*8],al
    1e31:	0a f1                	or     dh,cl
    1e33:	0a 02                	or     al,BYTE PTR [rdx]
    1e35:	30 9f 04 93 10 d4    	xor    BYTE PTR [rdi-0x2bef6cfc],bl
    1e3b:	10 02                	adc    BYTE PTR [rdx],al
    1e3d:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1e43:	10 02                	adc    BYTE PTR [rdx],al
    1e45:	30 9f 00 00 00 04    	xor    BYTE PTR [rdi+0x4000000],bl
    1e4b:	b3 0b                	mov    bl,0xb
    1e4d:	b9 0b 02 52 f0       	mov    ecx,0xf052020b
    1e52:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    1e55:	04 a7                	add    al,0xa7
    1e57:	0b b6 0b 0e 70 00    	or     esi,DWORD PTR [rsi+0x700e0b]
    1e5d:	76 a8                	jbe    1e07 <_Z17adler32HashString8string_t+0x17>
    1e5f:	7f 06                	jg     1e67 <_Z17adler32HashString8string_t+0x77>
    1e61:	1c 0a                	sbb    al,0xa
    1e63:	e8 03 1b 9f 93       	call   ffffffff939f396b <_end+0xffffffff939ed953>
    1e68:	08 00                	or     BYTE PTR [rax],al
    1e6a:	01 00                	add    DWORD PTR [rax],eax
    1e6c:	04 fe                	add    al,0xfe
    1e6e:	0a fe                	or     bh,dh
    1e70:	0a 02                	or     al,BYTE PTR [rdx]
    1e72:	30 9f 00 01 08 04    	xor    BYTE PTR [rdi+0x4080100],bl
    1e78:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1e79:	0b a7 0b 06 a0 0c    	or     esp,DWORD PTR [rdi+0xca0060b]
    1e7f:	9f                   	lahf
    1e80:	00 00                	add    BYTE PTR [rax],al
    1e82:	00 00                	add    BYTE PTR [rax],al
    1e84:	01 08                	add    DWORD PTR [rax],ecx
    1e86:	04 a7                	add    al,0xa7
    1e88:	0b a7 0b 06 a0 1f    	or     esp,DWORD PTR [rdi+0x1fa0060b]
    1e8e:	9f                   	lahf
    1e8f:	00 00                	add    BYTE PTR [rax],al
    1e91:	00 00                	add    BYTE PTR [rax],al
    1e93:	02 03                	add    al,BYTE PTR [rbx]
    1e95:	04 a7                	add    al,0xa7
    1e97:	0b a7 0b 06 a0 0c    	or     esp,DWORD PTR [rdi+0xca0060b]
    1e9d:	9f                   	lahf
    1e9e:	00 00                	add    BYTE PTR [rax],al
    1ea0:	00 00                	add    BYTE PTR [rax],al
    1ea2:	03 05 04 a7 0b a7    	add    eax,DWORD PTR [rip+0xffffffffa70ba704]        # ffffffffa70bc5ac <_end+0xffffffffa70b6594>
    1ea8:	0b 06                	or     eax,DWORD PTR [rsi]
    1eaa:	a0 1f 9f 00 00 00 00 	movabs al,ds:0x9f1f
    1eb1:	00 00 
    1eb3:	00 00                	add    BYTE PTR [rax],al
    1eb5:	00 00                	add    BYTE PTR [rax],al
    1eb7:	00 00                	add    BYTE PTR [rax],al
    1eb9:	04 a2                	add    al,0xa2
    1ebb:	0c b6                	or     al,0xb6
    1ebd:	0c 02                	or     al,0x2
    1ebf:	30 9f 04 d4 0c e1    	xor    BYTE PTR [rdi-0x1ef32bfc],bl
    1ec5:	0c 01                	or     al,0x1
    1ec7:	52                   	push   rdx
    1ec8:	04 b8                	add    al,0xb8
    1eca:	10 d4                	adc    ah,dl
    1ecc:	10 02                	adc    BYTE PTR [rdx],al
    1ece:	30 9f 04 df 10 fe    	xor    BYTE PTR [rdi-0x1ef20fc],bl
    1ed4:	10 02                	adc    BYTE PTR [rdx],al
    1ed6:	30 9f 00 02 00 04    	xor    BYTE PTR [rdi+0x4000200],bl
    1edc:	d4                   	(bad)
    1edd:	0c e2                	or     al,0xe2
    1edf:	0c 0a                	or     al,0xa
    1ee1:	03 04 42             	add    eax,DWORD PTR [rdx+rax*2]
    1ee4:	00 00                	add    BYTE PTR [rax],al
    1ee6:	00 00                	add    BYTE PTR [rax],al
    1ee8:	00 00                	add    BYTE PTR [rax],al
    1eea:	9f                   	lahf
    1eeb:	00 02                	add    BYTE PTR [rdx],al
    1eed:	00 00                	add    BYTE PTR [rax],al
    1eef:	00 04 d4             	add    BYTE PTR [rsp+rdx*8],al
    1ef2:	0c e1                	or     al,0xe1
    1ef4:	0c 01                	or     al,0x1
    1ef6:	55                   	push   rbp
    1ef7:	04 e1                	add    al,0xe1
    1ef9:	0c e2                	or     al,0xe2
    1efb:	0c 03                	or     al,0x3
    1efd:	76 f8                	jbe    1ef7 <_Z8listCtorv+0x7>
    1eff:	7e 00                	jle    1f01 <_Z8listCtorv+0x11>
    1f01:	02 00                	add    al,BYTE PTR [rax]
    1f03:	02 00                	add    al,BYTE PTR [rax]
    1f05:	04 82                	add    al,0x82
    1f07:	0c a2                	or     al,0xa2
    1f09:	0c 0a                	or     al,0xa
    1f0b:	03 e5                	add    esp,ebp
    1f0d:	41 00 00             	add    BYTE PTR [r8],al
    1f10:	00 00                	add    BYTE PTR [rax],al
    1f12:	00 00                	add    BYTE PTR [rax],al
    1f14:	9f                   	lahf
    1f15:	04 9b                	add    al,0x9b
    1f17:	10 b8 10 0a 03 e5    	adc    BYTE PTR [rax-0x1afcf5f0],bh
    1f1d:	41 00 00             	add    BYTE PTR [r8],al
    1f20:	00 00                	add    BYTE PTR [rax],al
    1f22:	00 00                	add    BYTE PTR [rax],al
    1f24:	9f                   	lahf
    1f25:	00 02                	add    BYTE PTR [rdx],al
    1f27:	00 02                	add    BYTE PTR [rdx],al
    1f29:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
    1f2c:	0c a2                	or     al,0xa2
    1f2e:	0c 03                	or     al,0x3
    1f30:	76 f8                	jbe    1f2a <_Z8listCtorv+0x3a>
    1f32:	7e 04                	jle    1f38 <_Z8listCtorv+0x48>
    1f34:	9b                   	fwait
    1f35:	10 b8 10 03 76 f8    	adc    BYTE PTR [rax-0x789fcf0],bh
    1f3b:	7e 00                	jle    1f3d <_Z8listCtorv+0x4d>
    1f3d:	01 00                	add    DWORD PTR [rax],eax
    1f3f:	00 00                	add    BYTE PTR [rax],al
    1f41:	01 00                	add    DWORD PTR [rax],eax
    1f43:	00 00                	add    BYTE PTR [rax],al
    1f45:	00 00                	add    BYTE PTR [rax],al
    1f47:	00 00                	add    BYTE PTR [rax],al
    1f49:	04 8d                	add    al,0x8d
    1f4b:	0d e3 0e 01 66       	or     eax,0x66010ee3
    1f50:	04 8b                	add    al,0x8b
    1f52:	10 93 10 01 66 04    	adc    BYTE PTR [rbx+0x4660110],dl
    1f58:	c5 10 fd             	(bad)
    1f5b:	10 01                	adc    BYTE PTR [rcx],al
    1f5d:	66 04 fd             	data16 add al,0xfd
    1f60:	10 fe                	adc    dh,bh
    1f62:	10 0e                	adc    BYTE PTR [rsi],cl
    1f64:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    1f65:	2e 08 00             	cs or  BYTE PTR [rax],al
    1f68:	00 00                	add    BYTE PTR [rax],al
    1f6a:	00 00                	add    BYTE PTR [rax],al
    1f6c:	00 00                	add    BYTE PTR [rax],al
    1f6e:	00 12                	add    BYTE PTR [rdx],dl
    1f70:	1b 9f 04 a2 11 ab    	sbb    ebx,DWORD PTR [rdi-0x54ee5dfc]
    1f76:	11 01                	adc    DWORD PTR [rcx],eax
    1f78:	66 04 ab             	data16 add al,0xab
    1f7b:	11 b6 11 03 76 a8    	adc    DWORD PTR [rsi-0x5789fcef],esi
    1f81:	7f 00                	jg     1f83 <_Z12pushListElemP4List8string_t+0x33>
    1f83:	01 00                	add    DWORD PTR [rax],eax
    1f85:	00 00                	add    BYTE PTR [rax],al
    1f87:	00 00                	add    BYTE PTR [rax],al
    1f89:	00 00                	add    BYTE PTR [rax],al
    1f8b:	01 00                	add    DWORD PTR [rax],eax
    1f8d:	00 00                	add    BYTE PTR [rax],al
    1f8f:	00 00                	add    BYTE PTR [rax],al
    1f91:	00 00                	add    BYTE PTR [rax],al
    1f93:	04 8d                	add    al,0x8d
    1f95:	0d 9c 0d 01 52       	or     eax,0x52010d9c
    1f9a:	04 9c                	add    al,0x9c
    1f9c:	0d a8 0d 01 50       	or     eax,0x50010da8
    1fa1:	04 a8                	add    al,0xa8
    1fa3:	0d df 0e 03 76       	or     eax,0x76030edf
    1fa8:	8c 7f 04             	mov    WORD PTR [rdi+0x4],?
    1fab:	8b 10                	mov    edx,DWORD PTR [rax]
    1fad:	93                   	xchg   ebx,eax
    1fae:	10 03                	adc    BYTE PTR [rbx],al
    1fb0:	76 8c                	jbe    1f3e <_Z8listCtorv+0x4e>
    1fb2:	7f 04                	jg     1fb8 <_Z12pushListElemP4List8string_t+0x68>
    1fb4:	c5 10 d4             	(bad)
    1fb7:	10 02                	adc    BYTE PTR [rdx],al
    1fb9:	30 9f 04 d4 10 df    	xor    BYTE PTR [rdi-0x20ef2bfc],bl
    1fbf:	10 01                	adc    BYTE PTR [rcx],al
    1fc1:	52                   	push   rdx
    1fc2:	04 df                	add    al,0xdf
    1fc4:	10 fe                	adc    dh,bh
    1fc6:	10 02                	adc    BYTE PTR [rdx],al
    1fc8:	30 9f 04 a2 11 b6    	xor    BYTE PTR [rdi-0x49ee5dfc],bl
    1fce:	11 03                	adc    DWORD PTR [rbx],eax
    1fd0:	76 8c                	jbe    1f5e <_Z12pushListElemP4List8string_t+0xe>
    1fd2:	7f 00                	jg     1fd4 <_Z12pushListElemP4List8string_t+0x84>
    1fd4:	01 00                	add    DWORD PTR [rax],eax
    1fd6:	00 00                	add    BYTE PTR [rax],al
    1fd8:	01 00                	add    DWORD PTR [rax],eax
    1fda:	00 00                	add    BYTE PTR [rax],al
    1fdc:	04 8d                	add    al,0x8d
    1fde:	0d df 0e 03 76       	or     eax,0x76030edf
    1fe3:	90                   	nop
    1fe4:	7f 04                	jg     1fea <_Z12pushListElemP4List8string_t+0x9a>
    1fe6:	8b 10                	mov    edx,DWORD PTR [rax]
    1fe8:	93                   	xchg   ebx,eax
    1fe9:	10 01                	adc    BYTE PTR [rcx],al
    1feb:	52                   	push   rdx
    1fec:	04 c5                	add    al,0xc5
    1fee:	10 fe                	adc    dh,bh
    1ff0:	10 03                	adc    BYTE PTR [rbx],al
    1ff2:	76 90                	jbe    1f84 <_Z12pushListElemP4List8string_t+0x34>
    1ff4:	7f 04                	jg     1ffa <_Z12pushListElemP4List8string_t+0xaa>
    1ff6:	a2 11 b6 11 03 76 90 	movabs ds:0x7f90760311b611,al
    1ffd:	7f 00 
    1fff:	00 00                	add    BYTE PTR [rax],al
    2001:	00 00                	add    BYTE PTR [rax],al
    2003:	00 00                	add    BYTE PTR [rax],al
    2005:	00 02                	add    BYTE PTR [rdx],al
    2007:	00 01                	add    BYTE PTR [rcx],al
    2009:	00 00                	add    BYTE PTR [rax],al
    200b:	04 af                	add    al,0xaf
    200d:	0d c4 0d 01 61       	or     eax,0x61010dc4
    2012:	04 de                	add    al,0xde
    2014:	0d f4 0d 01 61       	or     eax,0x61010df4
    2019:	04 fe                	add    al,0xfe
    201b:	0d 99 0e 01 61       	or     eax,0x61010e99
    2020:	04 a1                	add    al,0xa1
    2022:	0e                   	(bad)
    2023:	c0 0e 01             	ror    BYTE PTR [rsi],0x1
    2026:	61                   	(bad)
    2027:	04 f3                	add    al,0xf3
    2029:	0e                   	(bad)
    202a:	f3 0e                	repz (bad)
    202c:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    202f:	8b 10                	mov    edx,DWORD PTR [rax]
    2031:	93                   	xchg   ebx,eax
    2032:	10 01                	adc    BYTE PTR [rcx],al
    2034:	61                   	(bad)
    2035:	00 00                	add    BYTE PTR [rax],al
    2037:	00 00                	add    BYTE PTR [rax],al
    2039:	00 00                	add    BYTE PTR [rax],al
    203b:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    203e:	0e                   	(bad)
    203f:	e3 0e                	jrcxz  204f <_Z12pushListElemP4List8string_t+0xff>
    2041:	01 61 04             	add    DWORD PTR [rcx+0x4],esp
    2044:	cf                   	iret
    2045:	10 d4                	adc    ah,dl
    2047:	10 01                	adc    BYTE PTR [rcx],al
    2049:	61                   	(bad)
    204a:	04 a2                	add    al,0xa2
    204c:	11 ab 11 01 61 00    	adc    DWORD PTR [rbx+0x610111],ebp
    2052:	02 00                	add    al,BYTE PTR [rax]
    2054:	04 df                	add    al,0xdf
    2056:	10 fe                	adc    dh,bh
    2058:	10 02                	adc    BYTE PTR [rdx],al
    205a:	30 9f 00 03 00 04    	xor    BYTE PTR [rdi+0x4000300],bl
    2060:	f3 0e                	repz (bad)
    2062:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    2064:	0a 03                	or     al,BYTE PTR [rbx]
    2066:	0d 42 00 00 00       	or     eax,0x42
    206b:	00 00                	add    BYTE PTR [rax],al
    206d:	00 9f 00 02 00 04    	add    BYTE PTR [rdi+0x4000200],bl
    2073:	8b 0f                	mov    ecx,DWORD PTR [rdi]
    2075:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2076:	0f 0a                	(bad)
    2078:	03 2b                	add    ebp,DWORD PTR [rbx]
    207a:	42 00 00             	rex.X add BYTE PTR [rax],al
    207d:	00 00                	add    BYTE PTR [rax],al
    207f:	00 00                	add    BYTE PTR [rax],al
    2081:	9f                   	lahf
    2082:	00 02                	add    BYTE PTR [rdx],al
    2084:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
    2087:	0f d2 0f             	psrld  mm1,QWORD PTR [rdi]
    208a:	0a 03                	or     al,BYTE PTR [rbx]
    208c:	49                   	rex.WB
    208d:	42 00 00             	rex.X add BYTE PTR [rax],al
    2090:	00 00                	add    BYTE PTR [rax],al
    2092:	00 00                	add    BYTE PTR [rax],al
    2094:	9f                   	lahf
	...
    20a1:	00 00                	add    BYTE PTR [rax],al
    20a3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    20a6:	51                   	push   rcx
    20a7:	01 55 04             	add    DWORD PTR [rbp+0x4],edx
    20aa:	51                   	push   rcx
    20ab:	ed                   	in     eax,dx
    20ac:	07                   	(bad)
    20ad:	01 5d 04             	add    DWORD PTR [rbp+0x4],ebx
    20b0:	ed                   	in     eax,dx
    20b1:	07                   	(bad)
    20b2:	f7 07 04 a3 01 55    	test   DWORD PTR [rdi],0x5501a304
    20b8:	9f                   	lahf
    20b9:	04 f7                	add    al,0xf7
    20bb:	07                   	(bad)
    20bc:	af                   	scas   eax,DWORD PTR es:[rdi]
    20bd:	08 01                	or     BYTE PTR [rcx],al
    20bf:	5d                   	pop    rbp
    20c0:	04 af                	add    al,0xaf
    20c2:	08 c9                	or     cl,cl
    20c4:	08 01                	or     BYTE PTR [rcx],al
    20c6:	55                   	push   rbp
    20c7:	04 c9                	add    al,0xc9
    20c9:	08 ce                	or     dh,cl
    20cb:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    20ce:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    20d1:	04 ce                	add    al,0xce
    20d3:	08 d3                	or     bl,dl
    20d5:	08 01                	or     BYTE PTR [rcx],al
    20d7:	5d                   	pop    rbp
	...
    20e0:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    20e3:	55                   	push   rbp
    20e4:	01 54 04 55          	add    DWORD PTR [rsp+rax*1+0x55],edx
    20e8:	af                   	scas   eax,DWORD PTR es:[rdi]
    20e9:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    20ec:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    20f0:	af                   	scas   eax,DWORD PTR es:[rdi]
    20f1:	08 c2                	or     dl,al
    20f3:	08 01                	or     BYTE PTR [rcx],al
    20f5:	54                   	push   rsp
    20f6:	04 c2                	add    al,0xc2
    20f8:	08 d3                	or     bl,dl
    20fa:	08 04 a3             	or     BYTE PTR [rbx+riz*4],al
    20fd:	01 54 9f 00          	add    DWORD PTR [rdi+rbx*4+0x0],edx
	...
    2111:	04 00                	add    al,0x0
    2113:	46 06                	rex.RX (bad)
    2115:	51                   	push   rcx
    2116:	93                   	xchg   ebx,eax
    2117:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    211a:	08 04 49             	or     BYTE PTR [rcx+rcx*2],al
    211d:	5e                   	pop    rsi
    211e:	06                   	(bad)
    211f:	53                   	push   rbx
    2120:	93                   	xchg   ebx,eax
    2121:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2124:	08 04 80             	or     BYTE PTR [rax+rax*4],al
    2127:	01 ae 01 06 53 93    	add    DWORD PTR [rsi-0x6cacf9ff],ebp
    212d:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2130:	08 04 91             	or     BYTE PTR [rcx+rdx*4],al
    2133:	02 bc 05 06 53 93 08 	add    bh,BYTE PTR [rbp+rax*1+0x8935306]
    213a:	5e                   	pop    rsi
    213b:	93                   	xchg   ebx,eax
    213c:	08 04 b7             	or     BYTE PTR [rdi+rsi*4],al
    213f:	06                   	(bad)
    2140:	e7 07                	out    0x7,eax
    2142:	06                   	(bad)
    2143:	53                   	push   rbx
    2144:	93                   	xchg   ebx,eax
    2145:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2148:	08 04 f7             	or     BYTE PTR [rdi+rsi*8],al
    214b:	07                   	(bad)
    214c:	af                   	scas   eax,DWORD PTR es:[rdi]
    214d:	08 06                	or     BYTE PTR [rsi],al
    214f:	53                   	push   rbx
    2150:	93                   	xchg   ebx,eax
    2151:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    2154:	08 04 af             	or     BYTE PTR [rdi+rbp*4],al
    2157:	08 bb 08 06 51 93    	or     BYTE PTR [rbx-0x6caef9f8],bh
    215d:	08 52 93             	or     BYTE PTR [rdx-0x6d],dl
    2160:	08 04 ce             	or     BYTE PTR [rsi+rcx*8],al
    2163:	08 d3                	or     bl,dl
    2165:	08 06                	or     BYTE PTR [rsi],al
    2167:	53                   	push   rbx
    2168:	93                   	xchg   ebx,eax
    2169:	08 5e 93             	or     BYTE PTR [rsi-0x6d],bl
    216c:	08 00                	or     BYTE PTR [rax],al
    216e:	02 00                	add    al,BYTE PTR [rax]
	...
    217c:	00 00                	add    BYTE PTR [rax],al
    217e:	04 80                	add    al,0x80
    2180:	01 b9 01 06 9e 04    	add    DWORD PTR [rcx+0x49e0601],edi
    2186:	00 00                	add    BYTE PTR [rax],al
    2188:	00 00                	add    BYTE PTR [rax],al
    218a:	04 da                	add    al,0xda
    218c:	01 e9                	add    ecx,ebp
    218e:	01 01                	add    DWORD PTR [rcx],eax
    2190:	63 04 e9             	movsxd eax,DWORD PTR [rcx+rbp*8]
    2193:	01 88 02 03 76 90    	add    DWORD PTR [rax-0x6f89fcfe],ecx
    2199:	7f 04                	jg     219f <_Z11popListElemP4List8string_t+0xcf>
    219b:	88 02                	mov    BYTE PTR [rdx],al
    219d:	91                   	xchg   ecx,eax
    219e:	02 01                	add    al,BYTE PTR [rcx]
    21a0:	63 04 95 02 b3 02 01 	movsxd eax,DWORD PTR [rdx*4+0x102b302]
    21a7:	63 04 b3             	movsxd eax,DWORD PTR [rbx+rsi*4]
    21aa:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    21b0:	7f 04                	jg     21b6 <_Z13searchElementP4List8string_t+0x6>
    21b2:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    21b8:	90                   	nop
    21b9:	7f 04                	jg     21bf <_Z13searchElementP4List8string_t+0xf>
    21bb:	95                   	xchg   ebp,eax
    21bc:	08 a0 08 03 76 90    	or     BYTE PTR [rax-0x6f89fcf8],ah
    21c2:	7f 00                	jg     21c4 <_Z13searchElementP4List8string_t+0x14>
    21c4:	00 00                	add    BYTE PTR [rax],al
    21c6:	04 56                	add    al,0x56
    21c8:	65 02 30             	add    dh,BYTE PTR gs:[rax]
    21cb:	9f                   	lahf
    21cc:	00 00                	add    BYTE PTR [rax],al
    21ce:	00 00                	add    BYTE PTR [rax],al
    21d0:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
    21d3:	01 b9 01 02 30 9f    	add    DWORD PTR [rcx-0x60cffdff],edi
    21d9:	04 da                	add    al,0xda
    21db:	01 e9                	add    ecx,ebp
    21dd:	01 01                	add    DWORD PTR [rcx],eax
    21df:	52                   	push   rdx
    21e0:	00 02                	add    BYTE PTR [rdx],al
    21e2:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    21e5:	01 ea                	add    edx,ebp
    21e7:	01 0a                	add    DWORD PTR [rdx],ecx
    21e9:	03 aa 41 00 00 00    	add    ebp,DWORD PTR [rdx+0x41]
    21ef:	00 00                	add    BYTE PTR [rax],al
    21f1:	00 9f 00 02 00 00    	add    BYTE PTR [rdi+0x200],bl
    21f7:	00 04 da             	add    BYTE PTR [rdx+rbx*8],al
    21fa:	01 e9                	add    ecx,ebp
    21fc:	01 01                	add    DWORD PTR [rcx],eax
    21fe:	55                   	push   rbp
    21ff:	04 e9                	add    al,0xe9
    2201:	01 ea                	add    edx,ebp
    2203:	01 01                	add    DWORD PTR [rcx],eax
    2205:	5d                   	pop    rbp
    2206:	00 03                	add    BYTE PTR [rbx],al
    2208:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    220b:	01 99 01 0a 03 90    	add    DWORD PTR [rcx-0x6ffcf5ff],ebx
    2211:	41 00 00             	add    BYTE PTR [r8],al
    2214:	00 00                	add    BYTE PTR [rax],al
    2216:	00 00                	add    BYTE PTR [rax],al
    2218:	9f                   	lahf
    2219:	00 03                	add    BYTE PTR [rbx],al
    221b:	00 04 80             	add    BYTE PTR [rax+rax*4],al
    221e:	01 99 01 01 5d 00    	add    DWORD PTR [rcx+0x5d0101],ebx
    2224:	01 00                	add    DWORD PTR [rax],eax
    2226:	04 95                	add    al,0x95
    2228:	02 b4 02 0a 03 b1 41 	add    dh,BYTE PTR [rdx+rax*1+0x41b1030a]
    222f:	00 00                	add    BYTE PTR [rax],al
    2231:	00 00                	add    BYTE PTR [rax],al
    2233:	00 00                	add    BYTE PTR [rax],al
    2235:	9f                   	lahf
    2236:	00 02                	add    BYTE PTR [rdx],al
    2238:	00 00                	add    BYTE PTR [rax],al
    223a:	00 00                	add    BYTE PTR [rax],al
    223c:	00 00                	add    BYTE PTR [rax],al
    223e:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
    2241:	02 92 03 03 76 90    	add    dl,BYTE PTR [rdx-0x6f89fcfd]
    2247:	7f 04                	jg     224d <_Z8listDtorP4List+0x1d>
    2249:	92                   	xchg   edx,eax
    224a:	03 ad 07 01 63 04    	add    ebp,DWORD PTR [rbp+0x4630107]
    2250:	f7 07 8a 08 03 76    	test   DWORD PTR [rdi],0x7603088a
    2256:	90                   	nop
    2257:	7f 04                	jg     225d <_Z8listDtorP4List+0x2d>
    2259:	8a 08                	mov    cl,BYTE PTR [rax]
    225b:	a8 08                	test   al,0x8
    225d:	01 63 00             	add    DWORD PTR [rbx+0x0],esp
    2260:	02 02                	add    al,BYTE PTR [rdx]
    2262:	00 00                	add    BYTE PTR [rax],al
    2264:	04 b4                	add    al,0xb4
    2266:	02 b1 07 04 76 b0    	add    dh,BYTE PTR [rcx-0x4f89fbf9]
    226c:	7f 9f                	jg     220d <_Z13searchElementP4List8string_t+0x5d>
    226e:	04 f7                	add    al,0xf7
    2270:	07                   	(bad)
    2271:	af                   	scas   eax,DWORD PTR es:[rdi]
    2272:	08 04 76             	or     BYTE PTR [rsi+rsi*2],al
    2275:	b0 7f                	mov    al,0x7f
    2277:	9f                   	lahf
    2278:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
    2287:	04 b4                	add    al,0xb4
    2289:	02 92 03 06 9e 04    	add    dl,BYTE PTR [rdx+0x49e0603]
    228f:	00 00                	add    BYTE PTR [rax],al
    2291:	00 00                	add    BYTE PTR [rax],al
    2293:	04 92                	add    al,0x92
    2295:	03 c8                	add    ecx,eax
    2297:	04 01                	add    al,0x1
    2299:	68 04 81 05 9c       	push   0xffffffff9c058104
    229e:	05 01 68 04 ac       	add    eax,0xac046801
    22a3:	05 a3 07 01 68       	add    eax,0x680107a3
    22a8:	04 f7                	add    al,0xf7
    22aa:	07                   	(bad)
    22ab:	8a 08                	mov    cl,BYTE PTR [rax]
    22ad:	06                   	(bad)
    22ae:	9e                   	sahf
    22af:	04 00                	add    al,0x0
    22b1:	00 00                	add    BYTE PTR [rax],al
    22b3:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
    22b6:	08 95 08 01 68 04    	or     BYTE PTR [rbp+0x4680108],dl
    22bc:	95                   	xchg   ebp,eax
    22bd:	08 a0 08 06 9e 04    	or     BYTE PTR [rax+0x49e0608],ah
    22c3:	00 00                	add    BYTE PTR [rax],al
    22c5:	00 00                	add    BYTE PTR [rax],al
    22c7:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    22ca:	02 00                	add    al,BYTE PTR [rax]
    22cc:	00 00                	add    BYTE PTR [rax],al
    22ce:	02 00                	add    al,BYTE PTR [rax]
    22d0:	00 00                	add    BYTE PTR [rax],al
    22d2:	00 00                	add    BYTE PTR [rax],al
    22d4:	04 b4                	add    al,0xb4
    22d6:	02 92 03 02 30 9f    	add    dl,BYTE PTR [rdx-0x60cffdfd]
    22dc:	04 d9                	add    al,0xd9
    22de:	06                   	(bad)
    22df:	e1 06                	loope  22e7 <_Z10debugPrintP4List+0x77>
    22e1:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    22e4:	e1 06                	loope  22ec <_Z10debugPrintP4List+0x7c>
    22e6:	e4 06                	in     al,0x6
    22e8:	03 70 01             	add    esi,DWORD PTR [rax+0x1]
    22eb:	9f                   	lahf
    22ec:	04 f9                	add    al,0xf9
    22ee:	06                   	(bad)
    22ef:	81 07 01 50 04 f7    	add    DWORD PTR [rdi],0xf7045001
    22f5:	07                   	(bad)
    22f6:	8a 08                	mov    cl,BYTE PTR [rax]
    22f8:	02 30                	add    dh,BYTE PTR [rax]
    22fa:	9f                   	lahf
    22fb:	04 95                	add    al,0x95
    22fd:	08 a0 08 02 30 9f    	or     BYTE PTR [rax-0x60cffdf8],ah
    2303:	00 01                	add    BYTE PTR [rcx],al
    2305:	00 00                	add    BYTE PTR [rax],al
    2307:	00 01                	add    BYTE PTR [rcx],al
    2309:	00 04 dd 06 e1 06 0f 	add    BYTE PTR [rbx*8+0xf06e106],al
    2310:	71 00                	jno    2312 <_Z10debugPrintP4List+0xa2>
    2312:	0c ff                	or     al,0xff
    2314:	ff                   	(bad)
    2315:	ff                   	(bad)
    2316:	ff 1a                	call   FWORD PTR [rdx]
    2318:	48 1e                	rex.W (bad)
    231a:	75 00                	jne    231c <_Z10debugPrintP4List+0xac>
    231c:	22 23                	and    ah,BYTE PTR [rbx]
    231e:	10 04 e1             	adc    BYTE PTR [rcx+riz*8],al
    2321:	06                   	(bad)
    2322:	e4 06                	in     al,0x6
    2324:	0f 70 01 0c          	pshufw mm0,QWORD PTR [rcx],0xc
    2328:	ff                   	(bad)
    2329:	ff                   	(bad)
    232a:	ff                   	(bad)
    232b:	ff 1a                	call   FWORD PTR [rdx]
    232d:	48 1e                	rex.W (bad)
    232f:	75 00                	jne    2331 <_Z10debugPrintP4List+0xc1>
    2331:	22 23                	and    ah,BYTE PTR [rbx]
    2333:	10 04 fd 06 81 07 0f 	adc    BYTE PTR [rdi*8+0xf078106],al
    233a:	70 00                	jo     233c <_Z10debugPrintP4List+0xcc>
    233c:	0c ff                	or     al,0xff
    233e:	ff                   	(bad)
    233f:	ff                   	(bad)
    2340:	ff 1a                	call   FWORD PTR [rdx]
    2342:	48 1e                	rex.W (bad)
    2344:	75 00                	jne    2346 <_Z10debugPrintP4List+0xd6>
    2346:	22 23                	and    ah,BYTE PTR [rbx]
    2348:	10 00                	adc    BYTE PTR [rax],al
    234a:	00 00                	add    BYTE PTR [rax],al
    234c:	00 00                	add    BYTE PTR [rax],al
    234e:	00 00                	add    BYTE PTR [rax],al
    2350:	04 a3                	add    al,0xa3
    2352:	07                   	(bad)
    2353:	b1 07                	mov    cl,0x7
    2355:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    2358:	88 08                	mov    BYTE PTR [rax],cl
    235a:	8a 08                	mov    cl,BYTE PTR [rax]
    235c:	01 68 04             	add    DWORD PTR [rax+0x4],ebp
    235f:	a0 08 a8 08 01 68 00 	movabs al,ds:0x200680108a808
    2366:	02 00 
    2368:	04 b1                	add    al,0xb1
    236a:	07                   	(bad)
    236b:	cb                   	retf
    236c:	07                   	(bad)
    236d:	0a 03                	or     al,BYTE PTR [rbx]
    236f:	cb                   	retf
    2370:	41 00 00             	add    BYTE PTR [r8],al
    2373:	00 00                	add    BYTE PTR [rax],al
    2375:	00 00                	add    BYTE PTR [rax],al
    2377:	9f                   	lahf
	...
    2384:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    2387:	12 ce                	adc    cl,dh
    2389:	12 01                	adc    al,BYTE PTR [rcx]
    238b:	55                   	push   rbp
    238c:	04 ce                	add    al,0xce
    238e:	12 fb                	adc    bh,bl
    2390:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    2393:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2396:	04 fb                	add    al,0xfb
    2398:	20 95 21 01 55 04    	and    BYTE PTR [rbp+0x4550121],dl
    239e:	95                   	xchg   ebp,eax
    239f:	21 9a 21 04 a3 01    	and    DWORD PTR [rdx+0x1a30421],ebx
    23a5:	55                   	push   rbp
    23a6:	9f                   	lahf
    23a7:	04 9a                	add    al,0x9a
    23a9:	21 b4 21 01 55 04 b4 	and    DWORD PTR [rcx+riz*1-0x4bfbaaff],esi
    23b0:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    23b6:	55                   	push   rbp
    23b7:	9f                   	lahf
	...
    23c8:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    23cb:	12 d6                	adc    dl,dh
    23cd:	12 01                	adc    al,BYTE PTR [rcx]
    23cf:	54                   	push   rsp
    23d0:	04 d6                	add    al,0xd6
    23d2:	12 fe                	adc    bh,dh
    23d4:	14 01                	adc    al,0x1
    23d6:	5e                   	pop    rsi
    23d7:	04 fe                	add    al,0xfe
    23d9:	14 81                	adc    al,0x81
    23db:	15 04 a3 01 54       	adc    eax,0x5401a304
    23e0:	9f                   	lahf
    23e1:	04 81                	add    al,0x81
    23e3:	15 fb 20 01 5e       	adc    eax,0x5e0120fb
    23e8:	04 fb                	add    al,0xfb
    23ea:	20 8e 21 01 54 04    	and    BYTE PTR [rsi+0x4540121],cl
    23f0:	8e 21                	mov    fs,WORD PTR [rcx]
    23f2:	9a                   	(bad)
    23f3:	21 04 a3             	and    DWORD PTR [rbx+riz*4],eax
    23f6:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    23fa:	9a                   	(bad)
    23fb:	21 ad 21 01 54 04    	and    DWORD PTR [rbp+0x4540121],ebp
    2401:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2402:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    2408:	54                   	push   rsp
    2409:	9f                   	lahf
	...
    241e:	00 00                	add    BYTE PTR [rax],al
    2420:	00 04 90             	add    BYTE PTR [rax+rdx*4],al
    2423:	12 e3                	adc    ah,bl
    2425:	12 01                	adc    al,BYTE PTR [rcx]
    2427:	51                   	push   rcx
    2428:	04 e3                	add    al,0xe3
    242a:	12 c4                	adc    al,ah
    242c:	14 01                	adc    al,0x1
    242e:	53                   	push   rbx
    242f:	04 c4                	add    al,0xc4
    2431:	14 81                	adc    al,0x81
    2433:	15 04 a3 01 51       	adc    eax,0x5101a304
    2438:	9f                   	lahf
    2439:	04 81                	add    al,0x81
    243b:	15 d5 16 01 53       	adc    eax,0x530116d5
    2440:	04 d5                	add    al,0xd5
    2442:	16                   	(bad)
    2443:	ae                   	scas   al,BYTE PTR es:[rdi]
    2444:	1b 04 a3             	sbb    eax,DWORD PTR [rbx+riz*4]
    2447:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    244a:	04 ae                	add    al,0xae
    244c:	1b f6                	sbb    esi,esi
    244e:	20 01                	and    BYTE PTR [rcx],al
    2450:	53                   	push   rbx
    2451:	04 f6                	add    al,0xf6
    2453:	20 fb                	and    bl,bh
    2455:	20 04 a3             	and    BYTE PTR [rbx+riz*4],al
    2458:	01 51 9f             	add    DWORD PTR [rcx-0x61],edx
    245b:	04 fb                	add    al,0xfb
    245d:	20 87 21 01 51 04    	and    BYTE PTR [rdi+0x4510121],al
    2463:	87 21                	xchg   DWORD PTR [rcx],esp
    2465:	9a                   	(bad)
    2466:	21 01                	and    DWORD PTR [rcx],eax
    2468:	53                   	push   rbx
    2469:	04 9a                	add    al,0x9a
    246b:	21 a6 21 01 51 04    	and    DWORD PTR [rsi+0x4510121],esp
    2471:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    2472:	21 b9 21 04 a3 01    	and    DWORD PTR [rcx+0x1a30421],edi
    2478:	51                   	push   rcx
    2479:	9f                   	lahf
	...
    2482:	00 00                	add    BYTE PTR [rax],al
    2484:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2487:	12 f7                	adc    dh,bh
    2489:	12 01                	adc    al,BYTE PTR [rcx]
    248b:	50                   	push   rax
    248c:	04 f7                	add    al,0xf7
    248e:	12 a0 13 01 5f 04    	adc    ah,BYTE PTR [rax+0x45f0113]
    2494:	a0 13 81 15 03 91 a0 	movabs al,ds:0x47fa09103158113
    249b:	7f 04 
    249d:	81 15 d5 15 01 5f 04 	adc    DWORD PTR [rip+0x5f0115d5],0xfb15d504        # 5f013a7c <_end+0x5f00da64>
    24a4:	d5 15 fb 
    24a7:	20 03                	and    BYTE PTR [rbx],al
    24a9:	91                   	xchg   ecx,eax
    24aa:	a0 7f 00 00 00 00 00 	movabs al,ds:0x7f
    24b1:	00 00 
    24b3:	00 00                	add    BYTE PTR [rax],al
    24b5:	04 fe                	add    al,0xfe
    24b7:	12 c4                	adc    al,ah
    24b9:	14 01                	adc    al,0x1
    24bb:	5c                   	pop    rsp
    24bc:	04 81                	add    al,0x81
    24be:	15 95 17 01 5c       	adc    eax,0x5c011795
    24c3:	04 95                	add    al,0x95
    24c5:	17                   	(bad)
    24c6:	ae                   	scas   al,BYTE PTR es:[rdi]
    24c7:	1b 03                	sbb    eax,DWORD PTR [rbx]
    24c9:	91                   	xchg   ecx,eax
    24ca:	a8 7f                	test   al,0x7f
    24cc:	04 ae                	add    al,0xae
    24ce:	1b f6                	sbb    esi,esi
    24d0:	20 01                	and    BYTE PTR [rcx],al
    24d2:	5c                   	pop    rsp
	...
    24e7:	03 03                	add    eax,DWORD PTR [rbx]
    24e9:	00 00                	add    BYTE PTR [rax],al
    24eb:	00 00                	add    BYTE PTR [rax],al
    24ed:	00 04 93             	add    BYTE PTR [rbx+rdx*4],al
    24f0:	13 97 13 08 50 93    	adc    edx,DWORD PTR [rdi-0x6caff7ed]
    24f6:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    24fa:	93                   	xchg   ebx,eax
    24fb:	04 04                	add    al,0x4
    24fd:	97                   	xchg   edi,eax
    24fe:	13 c4                	adc    eax,esp
    2500:	14 08                	adc    al,0x8
    2502:	56                   	push   rsi
    2503:	93                   	xchg   ebx,eax
    2504:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2508:	93                   	xchg   ebx,eax
    2509:	04 04                	add    al,0x4
    250b:	c4                   	(bad)
    250c:	14 de                	adc    al,0xde
    250e:	14 05                	adc    al,0x5
    2510:	56                   	push   rsi
    2511:	93                   	xchg   ebx,eax
    2512:	08 93 08 04 81 15    	or     BYTE PTR [rbx+0x15810408],dl
    2518:	f6 15 08 56 93 08    	not    BYTE PTR [rip+0x8935608]        # 8937b26 <_end+0x8931b0e>
    251e:	5c                   	pop    rsp
    251f:	93                   	xchg   ebx,eax
    2520:	04 93                	add    al,0x93
    2522:	04 04                	add    al,0x4
    2524:	f6 15 95 17 08 56    	not    BYTE PTR [rip+0x56081795]        # 56083cbf <_end+0x5607dca7>
    252a:	93                   	xchg   ebx,eax
    252b:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    252f:	93                   	xchg   ebx,eax
    2530:	04 04                	add    al,0x4
    2532:	95                   	xchg   ebp,eax
    2533:	17                   	(bad)
    2534:	ae                   	scas   al,BYTE PTR es:[rdi]
    2535:	1b 0a                	sbb    ecx,DWORD PTR [rdx]
    2537:	56                   	push   rsi
    2538:	93                   	xchg   ebx,eax
    2539:	08 91 a8 7f 93 04    	or     BYTE PTR [rcx+0x4937fa8],dl
    253f:	93                   	xchg   ebx,eax
    2540:	04 04                	add    al,0x4
    2542:	ae                   	scas   al,BYTE PTR es:[rdi]
    2543:	1b a2 1c 08 56 93    	sbb    esp,DWORD PTR [rdx-0x6ca9f7e4]
    2549:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    254d:	93                   	xchg   ebx,eax
    254e:	04 04                	add    al,0x4
    2550:	a2 1c 9a 1d 08 56 93 	movabs ds:0x5c089356081d9a1c,al
    2557:	08 5c 
    2559:	93                   	xchg   ebx,eax
    255a:	04 93                	add    al,0x93
    255c:	04 04                	add    al,0x4
    255e:	9a                   	(bad)
    255f:	1d 92 1e 08 56       	sbb    eax,0x56081e92
    2564:	93                   	xchg   ebx,eax
    2565:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2569:	93                   	xchg   ebx,eax
    256a:	04 04                	add    al,0x4
    256c:	92                   	xchg   edx,eax
    256d:	1e                   	(bad)
    256e:	bf 1e 07 93 08       	mov    edi,0x893071e
    2573:	5c                   	pop    rsp
    2574:	93                   	xchg   ebx,eax
    2575:	04 93                	add    al,0x93
    2577:	04 04                	add    al,0x4
    2579:	bf 1e 8a 1f 08       	mov    edi,0x81f8a1e
    257e:	56                   	push   rsi
    257f:	93                   	xchg   ebx,eax
    2580:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2584:	93                   	xchg   ebx,eax
    2585:	04 04                	add    al,0x4
    2587:	8a 1f                	mov    bl,BYTE PTR [rdi]
    2589:	82                   	(bad)
    258a:	20 08                	and    BYTE PTR [rax],cl
    258c:	56                   	push   rsi
    258d:	93                   	xchg   ebx,eax
    258e:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    2592:	93                   	xchg   ebx,eax
    2593:	04 04                	add    al,0x4
    2595:	82                   	(bad)
    2596:	20 f6                	and    dh,dh
    2598:	20 08                	and    BYTE PTR [rax],cl
    259a:	56                   	push   rsi
    259b:	93                   	xchg   ebx,eax
    259c:	08 5c 93 04          	or     BYTE PTR [rbx+rdx*4+0x4],bl
    25a0:	93                   	xchg   ebx,eax
    25a1:	04 00                	add    al,0x0
    25a3:	01 00                	add    DWORD PTR [rax],eax
    25a5:	04 81                	add    al,0x81
    25a7:	15 97 15 06 a0       	adc    eax,0xa0061597
    25ac:	ae                   	scas   al,BYTE PTR es:[rdi]
    25ad:	cc                   	int3
    25ae:	00 00                	add    BYTE PTR [rax],al
    25b0:	00 00                	add    BYTE PTR [rax],al
    25b2:	02 00                	add    al,BYTE PTR [rax]
    25b4:	04 97                	add    al,0x97
    25b6:	15 a3 15 06 a0       	adc    eax,0xa00615a3
    25bb:	dc cc                	fmul   st(4),st
    25bd:	00 00                	add    BYTE PTR [rax],al
    25bf:	00 00                	add    BYTE PTR [rax],al
    25c1:	02 00                	add    al,BYTE PTR [rax]
    25c3:	04 a3                	add    al,0xa3
    25c5:	15 af 15 06 a0       	adc    eax,0xa00615af
    25ca:	e7 cc                	out    0xcc,eax
    25cc:	00 00                	add    BYTE PTR [rax],al
    25ce:	00 00                	add    BYTE PTR [rax],al
    25d0:	03 00                	add    eax,DWORD PTR [rax]
    25d2:	04 af                	add    al,0xaf
    25d4:	15 e5 15 01 5e       	adc    eax,0x5e0115e5
    25d9:	00 00                	add    BYTE PTR [rax],al
    25db:	00 00                	add    BYTE PTR [rax],al
    25dd:	00 04 d5 15 dc 15 01 	add    BYTE PTR [rdx*8+0x115dc15],al
    25e4:	50                   	push   rax
    25e5:	04 dc                	add    al,0xdc
    25e7:	15 f6 15 01 5f       	adc    eax,0x5f0115f6
    25ec:	00 02                	add    BYTE PTR [rdx],al
    25ee:	00 04 e5 15 f1 15 06 	add    BYTE PTR [riz*8+0x615f115],al
    25f5:	a0 0b cd 00 00 00 00 	movabs al,ds:0x200000000cd0b
    25fc:	02 00 
    25fe:	04 82                	add    al,0x82
    2600:	20 97 20 06 a0 ae    	and    BYTE PTR [rdi-0x515ff9e0],dl
    2606:	cc                   	int3
    2607:	00 00                	add    BYTE PTR [rax],al
    2609:	00 00                	add    BYTE PTR [rax],al
    260b:	02 00                	add    al,BYTE PTR [rax]
    260d:	04 97                	add    al,0x97
    260f:	20 9f 20 06 a0 2f    	and    BYTE PTR [rdi+0x2fa00620],bl
    2615:	cd 00                	int    0x0
    2617:	00 00                	add    BYTE PTR [rax],al
    2619:	00 02                	add    BYTE PTR [rdx],al
    261b:	00 04 9f             	add    BYTE PTR [rdi+rbx*4],al
    261e:	20 ab 20 06 a0 e7    	and    BYTE PTR [rbx-0x185ff9e0],ch
    2624:	cc                   	int3
    2625:	00 00                	add    BYTE PTR [rax],al
    2627:	00 00                	add    BYTE PTR [rax],al
    2629:	03 00                	add    eax,DWORD PTR [rax]
    262b:	04 ab                	add    al,0xab
    262d:	20 e5                	and    ch,ah
    262f:	20 01                	and    BYTE PTR [rcx],al
    2631:	5e                   	pop    rsi
    2632:	00 00                	add    BYTE PTR [rax],al
    2634:	00 00                	add    BYTE PTR [rax],al
    2636:	00 04 d1             	add    BYTE PTR [rcx+rdx*8],al
    2639:	20 da                	and    dl,bl
    263b:	20 01                	and    BYTE PTR [rcx],al
    263d:	50                   	push   rax
    263e:	04 da                	add    al,0xda
    2640:	20 f6                	and    dh,dh
    2642:	20 03                	and    BYTE PTR [rbx],al
    2644:	91                   	xchg   ecx,eax
    2645:	a8 7f                	test   al,0x7f
    2647:	00 02                	add    BYTE PTR [rdx],al
    2649:	00 04 e5 20 f1 20 06 	add    BYTE PTR [riz*8+0x620f120],al
    2650:	a0 0b cd 00 00 00 00 	movabs al,ds:0x200000000cd0b
    2657:	02 00 
    2659:	04 8a                	add    al,0x8a
    265b:	1f                   	(bad)
    265c:	9f                   	lahf
    265d:	1f                   	(bad)
    265e:	06                   	(bad)
    265f:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    2666:	02 00 
    2668:	04 9f                	add    al,0x9f
    266a:	1f                   	(bad)
    266b:	ab                   	stos   DWORD PTR es:[rdi],eax
    266c:	1f                   	(bad)
    266d:	06                   	(bad)
    266e:	a0 3e cd 00 00 00 00 	movabs al,ds:0x200000000cd3e
    2675:	02 00 
    2677:	04 ab                	add    al,0xab
    2679:	1f                   	(bad)
    267a:	b7 1f                	mov    bh,0x1f
    267c:	06                   	(bad)
    267d:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    2684:	03 00 
    2686:	04 b7                	add    al,0xb7
    2688:	1f                   	(bad)
    2689:	f1                   	int1
    268a:	1f                   	(bad)
    268b:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    268e:	00 00                	add    BYTE PTR [rax],al
    2690:	00 00                	add    BYTE PTR [rax],al
    2692:	04 dd                	add    al,0xdd
    2694:	1f                   	(bad)
    2695:	e6 1f                	out    0x1f,al
    2697:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    269a:	e6 1f                	out    0x1f,al
    269c:	82                   	(bad)
    269d:	20 03                	and    BYTE PTR [rbx],al
    269f:	91                   	xchg   ecx,eax
    26a0:	a8 7f                	test   al,0x7f
    26a2:	00 02                	add    BYTE PTR [rdx],al
    26a4:	00 04 f1             	add    BYTE PTR [rcx+rsi*8],al
    26a7:	1f                   	(bad)
    26a8:	fd                   	std
    26a9:	1f                   	(bad)
    26aa:	06                   	(bad)
    26ab:	a0 0b cd 00 00 00 00 	movabs al,ds:0x200000000cd0b
    26b2:	02 00 
    26b4:	04 92                	add    al,0x92
    26b6:	1e                   	(bad)
    26b7:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    26b8:	1e                   	(bad)
    26b9:	06                   	(bad)
    26ba:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    26c1:	02 00 
    26c3:	04 a7                	add    al,0xa7
    26c5:	1e                   	(bad)
    26c6:	b3 1e                	mov    bl,0x1e
    26c8:	06                   	(bad)
    26c9:	a0 4b cd 00 00 00 00 	movabs al,ds:0x200000000cd4b
    26d0:	02 00 
    26d2:	04 b3                	add    al,0xb3
    26d4:	1e                   	(bad)
    26d5:	bf 1e 06 a0 e7       	mov    edi,0xe7a0061e
    26da:	cc                   	int3
    26db:	00 00                	add    BYTE PTR [rax],al
    26dd:	00 00                	add    BYTE PTR [rax],al
    26df:	03 00                	add    eax,DWORD PTR [rax]
    26e1:	04 bf                	add    al,0xbf
    26e3:	1e                   	(bad)
    26e4:	f9                   	stc
    26e5:	1e                   	(bad)
    26e6:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    26e9:	00 00                	add    BYTE PTR [rax],al
    26eb:	00 00                	add    BYTE PTR [rax],al
    26ed:	04 e5                	add    al,0xe5
    26ef:	1e                   	(bad)
    26f0:	ee                   	out    dx,al
    26f1:	1e                   	(bad)
    26f2:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    26f5:	ee                   	out    dx,al
    26f6:	1e                   	(bad)
    26f7:	8a 1f                	mov    bl,BYTE PTR [rdi]
    26f9:	03 91 a8 7f 00 02    	add    edx,DWORD PTR [rcx+0x2007fa8]
    26ff:	00 04 f9             	add    BYTE PTR [rcx+rdi*8],al
    2702:	1e                   	(bad)
    2703:	85 1f                	test   DWORD PTR [rdi],ebx
    2705:	06                   	(bad)
    2706:	a0 0b cd 00 00 00 00 	movabs al,ds:0x200000000cd0b
    270d:	02 00 
    270f:	04 9a                	add    al,0x9a
    2711:	1d af 1d 06 a0       	sbb    eax,0xa0061daf
    2716:	ae                   	scas   al,BYTE PTR es:[rdi]
    2717:	cc                   	int3
    2718:	00 00                	add    BYTE PTR [rax],al
    271a:	00 00                	add    BYTE PTR [rax],al
    271c:	02 00                	add    al,BYTE PTR [rax]
    271e:	04 af                	add    al,0xaf
    2720:	1d bb 1d 06 a0       	sbb    eax,0xa0061dbb
    2725:	54                   	push   rsp
    2726:	cd 00                	int    0x0
    2728:	00 00                	add    BYTE PTR [rax],al
    272a:	00 02                	add    BYTE PTR [rdx],al
    272c:	00 04 bb             	add    BYTE PTR [rbx+rdi*4],al
    272f:	1d c7 1d 06 a0       	sbb    eax,0xa0061dc7
    2734:	e7 cc                	out    0xcc,eax
    2736:	00 00                	add    BYTE PTR [rax],al
    2738:	00 00                	add    BYTE PTR [rax],al
    273a:	03 00                	add    eax,DWORD PTR [rax]
    273c:	04 c7                	add    al,0xc7
    273e:	1d 81 1e 01 5e       	sbb    eax,0x5e011e81
    2743:	00 00                	add    BYTE PTR [rax],al
    2745:	00 00                	add    BYTE PTR [rax],al
    2747:	00 04 ed 1d f6 1d 01 	add    BYTE PTR [rbp*8+0x11df61d],al
    274e:	50                   	push   rax
    274f:	04 f6                	add    al,0xf6
    2751:	1d 92 1e 03 91       	sbb    eax,0x91031e92
    2756:	a8 7f                	test   al,0x7f
    2758:	00 02                	add    BYTE PTR [rdx],al
    275a:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
    275d:	1e                   	(bad)
    275e:	8d 1e                	lea    ebx,[rsi]
    2760:	06                   	(bad)
    2761:	a0 0b cd 00 00 00 00 	movabs al,ds:0x200000000cd0b
    2768:	02 00 
    276a:	04 a2                	add    al,0xa2
    276c:	1c b7                	sbb    al,0xb7
    276e:	1c 06                	sbb    al,0x6
    2770:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    2777:	02 00 
    2779:	04 b7                	add    al,0xb7
    277b:	1c c3                	sbb    al,0xc3
    277d:	1c 06                	sbb    al,0x6
    277f:	a0 61 cd 00 00 00 00 	movabs al,ds:0x200000000cd61
    2786:	02 00 
    2788:	04 c3                	add    al,0xc3
    278a:	1c cf                	sbb    al,0xcf
    278c:	1c 06                	sbb    al,0x6
    278e:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    2795:	03 00 
    2797:	04 cf                	add    al,0xcf
    2799:	1c 89                	sbb    al,0x89
    279b:	1d 01 5e 00 00       	sbb    eax,0x5e01
    27a0:	00 00                	add    BYTE PTR [rax],al
    27a2:	00 04 f5 1c fe 1c 01 	add    BYTE PTR [rsi*8+0x11cfe1c],al
    27a9:	50                   	push   rax
    27aa:	04 fe                	add    al,0xfe
    27ac:	1c 9a                	sbb    al,0x9a
    27ae:	1d 03 91 a8 7f       	sbb    eax,0x7fa89103
    27b3:	00 02                	add    BYTE PTR [rdx],al
    27b5:	00 04 89             	add    BYTE PTR [rcx+rcx*4],al
    27b8:	1d 95 1d 06 a0       	sbb    eax,0xa0061d95
    27bd:	0b cd                	or     ecx,ebp
    27bf:	00 00                	add    BYTE PTR [rax],al
    27c1:	00 00                	add    BYTE PTR [rax],al
    27c3:	02 00                	add    al,BYTE PTR [rax]
    27c5:	04 ae                	add    al,0xae
    27c7:	1b bf 1b 06 a0 ae    	sbb    edi,DWORD PTR [rdi-0x515ff9e5]
    27cd:	cc                   	int3
    27ce:	00 00                	add    BYTE PTR [rax],al
    27d0:	00 00                	add    BYTE PTR [rax],al
    27d2:	02 00                	add    al,BYTE PTR [rax]
    27d4:	04 bf                	add    al,0xbf
    27d6:	1b cb                	sbb    ecx,ebx
    27d8:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27da:	a0 6a cd 00 00 00 00 	movabs al,ds:0x200000000cd6a
    27e1:	02 00 
    27e3:	04 cb                	add    al,0xcb
    27e5:	1b d7                	sbb    edx,edi
    27e7:	1b 06                	sbb    eax,DWORD PTR [rsi]
    27e9:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    27f0:	03 00 
    27f2:	04 d7                	add    al,0xd7
    27f4:	1b 91 1c 01 5e 00    	sbb    edx,DWORD PTR [rcx+0x5e011c]
    27fa:	00 00                	add    BYTE PTR [rax],al
    27fc:	00 00                	add    BYTE PTR [rax],al
    27fe:	04 fd                	add    al,0xfd
    2800:	1b 86 1c 01 50 04    	sbb    eax,DWORD PTR [rsi+0x450011c]
    2806:	86 1c a2             	xchg   BYTE PTR [rdx+riz*4],bl
    2809:	1c 03                	sbb    al,0x3
    280b:	91                   	xchg   ecx,eax
    280c:	a8 7f                	test   al,0x7f
    280e:	00 02                	add    BYTE PTR [rdx],al
    2810:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
    2813:	1c 9d                	sbb    al,0x9d
    2815:	1c 06                	sbb    al,0x6
    2817:	a0 0b cd 00 00 00 00 	movabs al,ds:0x300000000cd0b
    281e:	03 00 
    2820:	04 f6                	add    al,0xf6
    2822:	15 8f 16 06 a0       	adc    eax,0xa006168f
    2827:	ae                   	scas   al,BYTE PTR es:[rdi]
    2828:	cc                   	int3
    2829:	00 00                	add    BYTE PTR [rax],al
    282b:	00 00                	add    BYTE PTR [rax],al
    282d:	02 00                	add    al,BYTE PTR [rax]
    282f:	04 8f                	add    al,0x8f
    2831:	16                   	(bad)
    2832:	9b                   	fwait
    2833:	16                   	(bad)
    2834:	06                   	(bad)
    2835:	a0 dc cc 00 00 00 00 	movabs al,ds:0x200000000ccdc
    283c:	02 00 
    283e:	04 9b                	add    al,0x9b
    2840:	16                   	(bad)
    2841:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2842:	16                   	(bad)
    2843:	06                   	(bad)
    2844:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    284b:	03 00 
    284d:	04 a7                	add    al,0xa7
    284f:	16                   	(bad)
    2850:	ec                   	in     al,dx
    2851:	16                   	(bad)
    2852:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    2855:	00 00                	add    BYTE PTR [rax],al
    2857:	00 00                	add    BYTE PTR [rax],al
    2859:	00 00                	add    BYTE PTR [rax],al
    285b:	04 d5                	add    al,0xd5
    285d:	16                   	(bad)
    285e:	dc 16                	fcom   QWORD PTR [rsi]
    2860:	01 50 04             	add    DWORD PTR [rax+0x4],edx
    2863:	dc 16                	fcom   QWORD PTR [rsi]
    2865:	e7 16                	out    0x16,eax
    2867:	01 53 04             	add    DWORD PTR [rbx+0x4],edx
    286a:	e7 16                	out    0x16,eax
    286c:	eb 16                	jmp    2884 <_Z14testCollisionsP8_IO_FILEPFj8string_tE8TestData+0x264>
    286e:	01 55 00             	add    DWORD PTR [rbp+0x0],edx
    2871:	02 00                	add    al,BYTE PTR [rax]
    2873:	04 ec                	add    al,0xec
    2875:	16                   	(bad)
    2876:	f4                   	hlt
    2877:	16                   	(bad)
    2878:	06                   	(bad)
    2879:	a0 0b cd 00 00 00 00 	movabs al,ds:0x400000000cd0b
    2880:	04 00 
    2882:	04 f4                	add    al,0xf4
    2884:	16                   	(bad)
    2885:	fc                   	cld
    2886:	16                   	(bad)
    2887:	06                   	(bad)
    2888:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    288f:	02 00 
    2891:	04 fc                	add    al,0xfc
    2893:	16                   	(bad)
    2894:	84 17                	test   BYTE PTR [rdi],dl
    2896:	06                   	(bad)
    2897:	a0 2f cd 00 00 00 00 	movabs al,ds:0x200000000cd2f
    289e:	02 00 
    28a0:	04 84                	add    al,0x84
    28a2:	17                   	(bad)
    28a3:	90                   	nop
    28a4:	17                   	(bad)
    28a5:	06                   	(bad)
    28a6:	a0 e7 cc 00 00 00 00 	movabs al,ds:0xcce7
    28ad:	00 00 
    28af:	04 95                	add    al,0x95
    28b1:	17                   	(bad)
    28b2:	cb                   	retf
    28b3:	17                   	(bad)
    28b4:	01 5e 00             	add    DWORD PTR [rsi+0x0],ebx
    28b7:	00 00                	add    BYTE PTR [rax],al
    28b9:	00 00                	add    BYTE PTR [rax],al
    28bb:	04 bb                	add    al,0xbb
    28bd:	17                   	(bad)
    28be:	c2 17 01             	ret    0x117
    28c1:	50                   	push   rax
    28c2:	04 c2                	add    al,0xc2
    28c4:	17                   	(bad)
    28c5:	99                   	cdq
    28c6:	18 01                	sbb    BYTE PTR [rcx],al
    28c8:	5d                   	pop    rbp
    28c9:	00 02                	add    BYTE PTR [rdx],al
    28cb:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
    28ce:	17                   	(bad)
    28cf:	d3 17                	rcl    DWORD PTR [rdi],cl
    28d1:	06                   	(bad)
    28d2:	a0 0b cd 00 00 00 00 	movabs al,ds:0x400000000cd0b
    28d9:	04 00 
    28db:	04 d3                	add    al,0xd3
    28dd:	17                   	(bad)
    28de:	db 17                	fist   DWORD PTR [rdi]
    28e0:	06                   	(bad)
    28e1:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    28e8:	02 00 
    28ea:	04 db                	add    al,0xdb
    28ec:	17                   	(bad)
    28ed:	e7 17                	out    0x17,eax
    28ef:	06                   	(bad)
    28f0:	a0 6a cd 00 00 00 00 	movabs al,ds:0x200000000cd6a
    28f7:	02 00 
    28f9:	04 e7                	add    al,0xe7
    28fb:	17                   	(bad)
    28fc:	f3 17                	repz (bad)
    28fe:	06                   	(bad)
    28ff:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    2906:	03 00 
    2908:	04 f3                	add    al,0xf3
    290a:	17                   	(bad)
    290b:	a9 18 01 5e 00       	test   eax,0x5e0118
    2910:	00 00                	add    BYTE PTR [rax],al
    2912:	00 00                	add    BYTE PTR [rax],al
    2914:	04 99                	add    al,0x99
    2916:	18 a0 18 01 50 04    	sbb    BYTE PTR [rax+0x4500118],ah
    291c:	a0 18 f7 18 01 5d 00 	movabs al,ds:0x2005d0118f718
    2923:	02 00 
    2925:	04 a9                	add    al,0xa9
    2927:	18 b1 18 06 a0 0b    	sbb    BYTE PTR [rcx+0xba00618],dh
    292d:	cd 00                	int    0x0
    292f:	00 00                	add    BYTE PTR [rax],al
    2931:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    2934:	04 b1                	add    al,0xb1
    2936:	18 b9 18 06 a0 ae    	sbb    BYTE PTR [rcx-0x515ff9e8],bh
    293c:	cc                   	int3
    293d:	00 00                	add    BYTE PTR [rax],al
    293f:	00 00                	add    BYTE PTR [rax],al
    2941:	02 00                	add    al,BYTE PTR [rax]
    2943:	04 b9                	add    al,0xb9
    2945:	18 c5                	sbb    ch,al
    2947:	18 06                	sbb    BYTE PTR [rsi],al
    2949:	a0 3e cd 00 00 00 00 	movabs al,ds:0x200000000cd3e
    2950:	02 00 
    2952:	04 c5                	add    al,0xc5
    2954:	18 d1                	sbb    cl,dl
    2956:	18 06                	sbb    BYTE PTR [rsi],al
    2958:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    295f:	03 00 
    2961:	04 d1                	add    al,0xd1
    2963:	18 87 19 01 5e 00    	sbb    BYTE PTR [rdi+0x5e0119],al
    2969:	00 00                	add    BYTE PTR [rax],al
    296b:	00 00                	add    BYTE PTR [rax],al
    296d:	04 f7                	add    al,0xf7
    296f:	18 fe                	sbb    dh,bh
    2971:	18 01                	sbb    BYTE PTR [rcx],al
    2973:	50                   	push   rax
    2974:	04 fe                	add    al,0xfe
    2976:	18 d5                	sbb    ch,dl
    2978:	19 01                	sbb    DWORD PTR [rcx],eax
    297a:	5d                   	pop    rbp
    297b:	00 02                	add    BYTE PTR [rdx],al
    297d:	00 04 87             	add    BYTE PTR [rdi+rax*4],al
    2980:	19 8f 19 06 a0 0b    	sbb    DWORD PTR [rdi+0xba00619],ecx
    2986:	cd 00                	int    0x0
    2988:	00 00                	add    BYTE PTR [rax],al
    298a:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    298d:	04 8f                	add    al,0x8f
    298f:	19 97 19 06 a0 ae    	sbb    DWORD PTR [rdi-0x515ff9e7],edx
    2995:	cc                   	int3
    2996:	00 00                	add    BYTE PTR [rax],al
    2998:	00 00                	add    BYTE PTR [rax],al
    299a:	02 00                	add    al,BYTE PTR [rax]
    299c:	04 97                	add    al,0x97
    299e:	19 a3 19 06 a0 4b    	sbb    DWORD PTR [rbx+0x4ba00619],esp
    29a4:	cd 00                	int    0x0
    29a6:	00 00                	add    BYTE PTR [rax],al
    29a8:	00 02                	add    BYTE PTR [rdx],al
    29aa:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
    29ad:	19 af 19 06 a0 e7    	sbb    DWORD PTR [rdi-0x185ff9e7],ebp
    29b3:	cc                   	int3
    29b4:	00 00                	add    BYTE PTR [rax],al
    29b6:	00 00                	add    BYTE PTR [rax],al
    29b8:	03 00                	add    eax,DWORD PTR [rax]
    29ba:	04 af                	add    al,0xaf
    29bc:	19 e5                	sbb    ebp,esp
    29be:	19 01                	sbb    DWORD PTR [rcx],eax
    29c0:	5e                   	pop    rsi
    29c1:	00 00                	add    BYTE PTR [rax],al
    29c3:	00 00                	add    BYTE PTR [rax],al
    29c5:	00 04 d5 19 dc 19 01 	add    BYTE PTR [rdx*8+0x119dc19],al
    29cc:	50                   	push   rax
    29cd:	04 dc                	add    al,0xdc
    29cf:	19 b3 1a 01 5d 00    	sbb    DWORD PTR [rbx+0x5d011a],esi
    29d5:	02 00                	add    al,BYTE PTR [rax]
    29d7:	04 e5                	add    al,0xe5
    29d9:	19 ed                	sbb    ebp,ebp
    29db:	19 06                	sbb    DWORD PTR [rsi],eax
    29dd:	a0 0b cd 00 00 00 00 	movabs al,ds:0x400000000cd0b
    29e4:	04 00 
    29e6:	04 ed                	add    al,0xed
    29e8:	19 f5                	sbb    ebp,esi
    29ea:	19 06                	sbb    DWORD PTR [rsi],eax
    29ec:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    29f3:	02 00 
    29f5:	04 f5                	add    al,0xf5
    29f7:	19 81 1a 06 a0 54    	sbb    DWORD PTR [rcx+0x54a0061a],eax
    29fd:	cd 00                	int    0x0
    29ff:	00 00                	add    BYTE PTR [rax],al
    2a01:	00 02                	add    BYTE PTR [rdx],al
    2a03:	00 04 81             	add    BYTE PTR [rcx+rax*4],al
    2a06:	1a 8d 1a 06 a0 e7    	sbb    cl,BYTE PTR [rbp-0x185ff9e6]
    2a0c:	cc                   	int3
    2a0d:	00 00                	add    BYTE PTR [rax],al
    2a0f:	00 00                	add    BYTE PTR [rax],al
    2a11:	03 00                	add    eax,DWORD PTR [rax]
    2a13:	04 8d                	add    al,0x8d
    2a15:	1a c3                	sbb    al,bl
    2a17:	1a 01                	sbb    al,BYTE PTR [rcx]
    2a19:	5e                   	pop    rsi
    2a1a:	00 00                	add    BYTE PTR [rax],al
    2a1c:	00 00                	add    BYTE PTR [rax],al
    2a1e:	00 04 b3             	add    BYTE PTR [rbx+rsi*4],al
    2a21:	1a ba 1a 01 50 04    	sbb    bh,BYTE PTR [rdx+0x450011a]
    2a27:	ba 1a 91 1b 01       	mov    edx,0x11b911a
    2a2c:	5d                   	pop    rbp
    2a2d:	00 02                	add    BYTE PTR [rdx],al
    2a2f:	00 04 c3             	add    BYTE PTR [rbx+rax*8],al
    2a32:	1a cb                	sbb    cl,bl
    2a34:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a36:	a0 0b cd 00 00 00 00 	movabs al,ds:0x400000000cd0b
    2a3d:	04 00 
    2a3f:	04 cb                	add    al,0xcb
    2a41:	1a d3                	sbb    dl,bl
    2a43:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a45:	a0 ae cc 00 00 00 00 	movabs al,ds:0x200000000ccae
    2a4c:	02 00 
    2a4e:	04 d3                	add    al,0xd3
    2a50:	1a df                	sbb    bl,bh
    2a52:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a54:	a0 61 cd 00 00 00 00 	movabs al,ds:0x200000000cd61
    2a5b:	02 00 
    2a5d:	04 df                	add    al,0xdf
    2a5f:	1a eb                	sbb    ch,bl
    2a61:	1a 06                	sbb    al,BYTE PTR [rsi]
    2a63:	a0 e7 cc 00 00 00 00 	movabs al,ds:0x300000000cce7
    2a6a:	03 00 
    2a6c:	04 eb                	add    al,0xeb
    2a6e:	1a a1 1b 01 5e 00    	sbb    ah,BYTE PTR [rcx+0x5e011b]
    2a74:	00 00                	add    BYTE PTR [rax],al
    2a76:	00 00                	add    BYTE PTR [rax],al
    2a78:	04 91                	add    al,0x91
    2a7a:	1b 98 1b 01 50 04    	sbb    ebx,DWORD PTR [rax+0x450011b]
    2a80:	98                   	cwde
    2a81:	1b ae 1b 01 5d 00    	sbb    ebp,DWORD PTR [rsi+0x5d011b]
    2a87:	02 00                	add    al,BYTE PTR [rax]
    2a89:	04 a1                	add    al,0xa1
    2a8b:	1b a9 1b 06 a0 0b    	sbb    ebp,DWORD PTR [rcx+0xba0061b]
    2a91:	cd 00                	int    0x0
	...
    2a9b:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2a9e:	11 e1                	adc    ecx,esp
    2aa0:	11 01                	adc    DWORD PTR [rcx],eax
    2aa2:	55                   	push   rbp
    2aa3:	04 e1                	add    al,0xe1
    2aa5:	11 83 12 01 56 04    	adc    DWORD PTR [rbx+0x4560112],eax
    2aab:	83 12 8e             	adc    DWORD PTR [rdx],0xffffff8e
    2aae:	12 04 a3             	adc    al,BYTE PTR [rbx+riz*4]
    2ab1:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2ab4:	00 00                	add    BYTE PTR [rax],al
    2ab6:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2ab9:	11 cd                	adc    ebp,ecx
    2abb:	11 06                	adc    DWORD PTR [rsi],eax
    2abd:	54                   	push   rsp
    2abe:	93                   	xchg   ebx,eax
    2abf:	08 51 93             	or     BYTE PTR [rcx-0x6d],dl
    2ac2:	08 00                	or     BYTE PTR [rax],al
    2ac4:	00 00                	add    BYTE PTR [rax],al
    2ac6:	00 00                	add    BYTE PTR [rax],al
    2ac8:	00 00                	add    BYTE PTR [rax],al
    2aca:	04 c0                	add    al,0xc0
    2acc:	11 d5                	adc    ebp,edx
    2ace:	11 06                	adc    DWORD PTR [rsi],eax
    2ad0:	52                   	push   rdx
    2ad1:	93                   	xchg   ebx,eax
    2ad2:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2ad5:	08 04 d5 11 da 11 06 	or     BYTE PTR [rdx*8+0x611da11],al
    2adc:	5d                   	pop    rbp
    2add:	93                   	xchg   ebx,eax
    2ade:	08 58 93             	or     BYTE PTR [rax-0x6d],bl
    2ae1:	08 04 da             	or     BYTE PTR [rdx+rbx*8],al
    2ae4:	11 85 12 06 5d 93    	adc    DWORD PTR [rbp-0x6ca2f9ee],eax
    2aea:	08 5c 93 08          	or     BYTE PTR [rbx+rdx*4+0x8],bl
    2aee:	00 00                	add    BYTE PTR [rax],al
    2af0:	00 00                	add    BYTE PTR [rax],al
    2af2:	00 00                	add    BYTE PTR [rax],al
    2af4:	00 04 c0             	add    BYTE PTR [rax+rax*8],al
    2af7:	11 e6                	adc    esi,esp
    2af9:	11 01                	adc    DWORD PTR [rcx],eax
    2afb:	59                   	pop    rcx
    2afc:	04 e6                	add    al,0xe6
    2afe:	11 89 12 01 5e 04    	adc    DWORD PTR [rcx+0x45e0112],ecx
    2b04:	89 12                	mov    DWORD PTR [rdx],edx
    2b06:	8e 12                	mov    ss,WORD PTR [rdx]
    2b08:	04 a3                	add    al,0xa3
    2b0a:	01 59 9f             	add    DWORD PTR [rcx-0x61],ebx
    2b0d:	00 00                	add    BYTE PTR [rax],al
    2b0f:	00 00                	add    BYTE PTR [rax],al
    2b11:	00 00                	add    BYTE PTR [rax],al
    2b13:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2b16:	11 fd                	adc    ebp,edi
    2b18:	11 01                	adc    DWORD PTR [rcx],eax
    2b1a:	50                   	push   rax
    2b1b:	04 fd                	add    al,0xfd
    2b1d:	11 82 12 01 53 04    	adc    DWORD PTR [rdx+0x4530112],eax
    2b23:	82                   	(bad)
    2b24:	12 8d 12 01 55 00    	adc    cl,BYTE PTR [rbp+0x550112]
	...
    2b3a:	00 00                	add    BYTE PTR [rax],al
    2b3c:	04 c0                	add    al,0xc0
    2b3e:	21 99 22 01 55 04    	and    DWORD PTR [rcx+0x4550122],ebx
    2b44:	99                   	cdq
    2b45:	22 bf 23 01 51 04    	and    bh,BYTE PTR [rdi+0x4510123]
    2b4b:	bf 23 d1 23 04       	mov    edi,0x423d123
    2b50:	a3 01 55 9f 04 d1 23 	movabs ds:0x23dd23d1049f5501,eax
    2b57:	dd 23 
    2b59:	01 51 04             	add    DWORD PTR [rcx+0x4],edx
    2b5c:	dd 23                	frstor [rbx]
    2b5e:	ea                   	(bad)
    2b5f:	23 01                	and    eax,DWORD PTR [rcx]
    2b61:	55                   	push   rbp
    2b62:	04 ea                	add    al,0xea
    2b64:	23 f9                	and    edi,ecx
    2b66:	23 01                	and    eax,DWORD PTR [rcx]
    2b68:	51                   	push   rcx
    2b69:	04 f9                	add    al,0xf9
    2b6b:	23 fc                	and    edi,esp
    2b6d:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2b70:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2b73:	04 fc                	add    al,0xfc
    2b75:	23 96 24 01 55 04    	and    edx,DWORD PTR [rsi+0x4550124]
    2b7b:	96                   	xchg   esi,eax
    2b7c:	24 9b                	and    al,0x9b
    2b7e:	24 04                	and    al,0x4
    2b80:	a3 01 55 9f 00 00 00 	movabs ds:0x9f5501,eax
    2b87:	00 00 
	...
    2b95:	04 c0                	add    al,0xc0
    2b97:	21 83 22 01 54 04    	and    DWORD PTR [rbx+0x4540122],eax
    2b9d:	83 22 c3             	and    DWORD PTR [rdx],0xffffffc3
    2ba0:	23 01                	and    eax,DWORD PTR [rcx]
    2ba2:	52                   	push   rdx
    2ba3:	04 c3                	add    al,0xc3
    2ba5:	23 dd                	and    ebx,ebp
    2ba7:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2baa:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2bae:	dd 23                	frstor [rbx]
    2bb0:	f5                   	cmc
    2bb1:	23 01                	and    eax,DWORD PTR [rcx]
    2bb3:	54                   	push   rsp
    2bb4:	04 f5                	add    al,0xf5
    2bb6:	23 f9                	and    edi,ecx
    2bb8:	23 01                	and    eax,DWORD PTR [rcx]
    2bba:	52                   	push   rdx
    2bbb:	04 f9                	add    al,0xf9
    2bbd:	23 fc                	and    edi,esp
    2bbf:	23 04 a3             	and    eax,DWORD PTR [rbx+riz*4]
    2bc2:	01 54 9f 04          	add    DWORD PTR [rdi+rbx*4+0x4],edx
    2bc6:	fc                   	cld
    2bc7:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2bcd:	8f                   	(bad)
    2bce:	24 9b                	and    al,0x9b
    2bd0:	24 04                	and    al,0x4
    2bd2:	a3 01 54 9f 00 00 00 	movabs ds:0x9f5401,eax
    2bd9:	00 00 
	...
    2beb:	00 00                	add    BYTE PTR [rax],al
    2bed:	04 c0                	add    al,0xc0
    2bef:	21 8c 22 01 61 04 8c 	and    DWORD PTR [rdx+riz*1-0x73fb9eff],ecx
    2bf6:	22 bf 23 01 64 04    	and    bh,BYTE PTR [rdi+0x4640123]
    2bfc:	bf 23 d1 23 06       	mov    edi,0x623d123
    2c01:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23d1049f2e11a503,eax
    2c08:	d1 23 
    2c0a:	dd 23                	frstor [rbx]
    2c0c:	01 64 04 dd          	add    DWORD PTR [rsp+rax*1-0x23],esp
    2c10:	23 e4                	and    esp,esp
    2c12:	23 01                	and    eax,DWORD PTR [rcx]
    2c14:	61                   	(bad)
    2c15:	04 e4                	add    al,0xe4
    2c17:	23 ea                	and    ebp,edx
    2c19:	23 06                	and    eax,DWORD PTR [rsi]
    2c1b:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23ea049f2e11a503,eax
    2c22:	ea 23 
    2c24:	f0 23 01             	lock and eax,DWORD PTR [rcx]
    2c27:	61                   	(bad)
    2c28:	04 f0                	add    al,0xf0
    2c2a:	23 f9                	and    edi,ecx
    2c2c:	23 01                	and    eax,DWORD PTR [rcx]
    2c2e:	64 04 f9             	fs add al,0xf9
    2c31:	23 fc                	and    edi,esp
    2c33:	23 06                	and    eax,DWORD PTR [rsi]
    2c35:	a3 03 a5 11 2e 9f 04 	movabs ds:0x23fc049f2e11a503,eax
    2c3c:	fc 23 
    2c3e:	9a                   	(bad)
    2c3f:	24 01                	and    al,0x1
    2c41:	61                   	(bad)
    2c42:	04 9a                	add    al,0x9a
    2c44:	24 9b                	and    al,0x9b
    2c46:	24 06                	and    al,0x6
    2c48:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2c4f:	00 00 
	...
    2c5d:	00 00                	add    BYTE PTR [rax],al
    2c5f:	04 e6                	add    al,0xe6
    2c61:	21 99 22 0a 9e 08    	and    DWORD PTR [rcx+0x89e0a22],ebx
	...
    2c6f:	04 99                	add    al,0x99
    2c71:	22 b4 22 01 61 04 ce 	and    dh,BYTE PTR [rdx+riz*1-0x31fb9eff]
    2c78:	22 e0                	and    ah,al
    2c7a:	22 01                	and    al,BYTE PTR [rcx]
    2c7c:	61                   	(bad)
    2c7d:	04 e9                	add    al,0xe9
    2c7f:	22 80 23 01 61 04    	and    al,BYTE PTR [rax+0x4610123]
    2c85:	88 23                	mov    BYTE PTR [rbx],ah
    2c87:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2c88:	23 01                	and    eax,DWORD PTR [rcx]
    2c8a:	61                   	(bad)
    2c8b:	04 c3                	add    al,0xc3
    2c8d:	23 cb                	and    ecx,ebx
    2c8f:	23 06                	and    eax,DWORD PTR [rsi]
    2c91:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2c92:	11 35 a8 2e 9f 04    	adc    DWORD PTR [rip+0x49f2ea8],esi        # 49f5b40 <_end+0x49efb28>
    2c98:	cb                   	retf
    2c99:	23 dd                	and    ebx,ebp
    2c9b:	23 01                	and    eax,DWORD PTR [rcx]
    2c9d:	61                   	(bad)
    2c9e:	04 dd                	add    al,0xdd
    2ca0:	23 f5                	and    esi,ebp
    2ca2:	23 0a                	and    ecx,DWORD PTR [rdx]
    2ca4:	9e                   	sahf
    2ca5:	08 00                	or     BYTE PTR [rax],al
	...
    2cb3:	04 e6                	add    al,0xe6
    2cb5:	21 99 22 02 30 9f    	and    DWORD PTR [rcx-0x60cffdde],ebx
    2cbb:	04 dd                	add    al,0xdd
    2cbd:	23 f5                	and    esi,ebp
    2cbf:	23 02                	and    eax,DWORD PTR [rdx]
    2cc1:	30 9f 00 00 00 00    	xor    BYTE PTR [rdi+0x0],bl
    2cc7:	00 00                	add    BYTE PTR [rax],al
    2cc9:	00 04 b5 23 c3 23 01 	add    BYTE PTR [rsi*4+0x123c323],al
    2cd0:	61                   	(bad)
    2cd1:	04 e8                	add    al,0xe8
    2cd3:	23 ea                	and    ebp,edx
    2cd5:	23 01                	and    eax,DWORD PTR [rcx]
    2cd7:	61                   	(bad)
    2cd8:	04 f5                	add    al,0xf5
    2cda:	23 f9                	and    edi,ecx
    2cdc:	23 01                	and    eax,DWORD PTR [rcx]
    2cde:	61                   	(bad)
    2cdf:	00 02                	add    BYTE PTR [rdx],al
    2ce1:	00 00                	add    BYTE PTR [rax],al
    2ce3:	00 04 fc             	add    BYTE PTR [rsp+rdi*8],al
    2ce6:	23 8f 24 01 54 04    	and    ecx,DWORD PTR [rdi+0x4540124]
    2cec:	8f                   	(bad)
    2ced:	24 9b                	and    al,0x9b
    2cef:	24 04                	and    al,0x4
    2cf1:	a3 01 54 9f 00 02 00 	movabs ds:0x2009f5401,eax
    2cf8:	00 00 
    2cfa:	04 fc                	add    al,0xfc
    2cfc:	23 9a 24 01 61 04    	and    ebx,DWORD PTR [rdx+0x4610124]
    2d02:	9a                   	(bad)
    2d03:	24 9b                	and    al,0x9b
    2d05:	24 06                	and    al,0x6
    2d07:	a3 03 a5 11 2e 9f 00 	movabs ds:0x9f2e11a503,eax
    2d0e:	00 00 
	...
    2d18:	00 00                	add    BYTE PTR [rax],al
    2d1a:	04 a0                	add    al,0xa0
    2d1c:	24 d7                	and    al,0xd7
    2d1e:	24 01                	and    al,0x1
    2d20:	55                   	push   rbp
    2d21:	04 d7                	add    al,0xd7
    2d23:	24 d1                	and    al,0xd1
    2d25:	29 04 a3             	sub    DWORD PTR [rbx+riz*4],eax
    2d28:	01 55 9f             	add    DWORD PTR [rbp-0x61],edx
    2d2b:	04 d1                	add    al,0xd1
    2d2d:	29 f3                	sub    ebx,esi
    2d2f:	29 01                	sub    DWORD PTR [rcx],eax
    2d31:	55                   	push   rbp
    2d32:	04 f3                	add    al,0xf3
    2d34:	29 9d 2a 04 a3 01    	sub    DWORD PTR [rbp+0x1a3042a],ebx
    2d3a:	55                   	push   rbp
    2d3b:	9f                   	lahf
    2d3c:	04 9d                	add    al,0x9d
    2d3e:	2a b7 2a 01 55 04    	sub    dh,BYTE PTR [rdi+0x455012a]
    2d44:	b7 2a                	mov    bh,0x2a
    2d46:	bc 2a 04 a3 01       	mov    esp,0x1a3042a
    2d4b:	55                   	push   rbp
    2d4c:	9f                   	lahf
	...
    2d61:	00 04 a0             	add    BYTE PTR [rax+riz*4],al
    2d64:	24 a7                	and    al,0xa7
    2d66:	25 01 61 04 a7       	and    eax,0xa7046101
    2d6b:	25 d1 29 01 65       	and    eax,0x650129d1
    2d70:	04 d1                	add    al,0xd1
    2d72:	29 f2                	sub    edx,esi
    2d74:	29 01                	sub    DWORD PTR [rcx],eax
    2d76:	61                   	(bad)
    2d77:	04 f2                	add    al,0xf2
    2d79:	29 f3                	sub    ebx,esi
    2d7b:	29 06                	sub    DWORD PTR [rsi],eax
    2d7d:	a3 03 a5 11 35 9f 04 	movabs ds:0x29f3049f3511a503,eax
    2d84:	f3 29 
    2d86:	fd                   	std
    2d87:	29 01                	sub    DWORD PTR [rcx],eax
    2d89:	65 04 fd             	gs add al,0xfd
    2d8c:	29 89 2a 01 61 04    	sub    DWORD PTR [rcx+0x461012a],ecx
    2d92:	89 2a                	mov    DWORD PTR [rdx],ebp
    2d94:	9c                   	pushf
    2d95:	2a 01                	sub    al,BYTE PTR [rcx]
    2d97:	65 04 9c             	gs add al,0x9c
    2d9a:	2a 9d 2a 06 a3 03    	sub    bl,BYTE PTR [rbp+0x3a3062a]
    2da0:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    2da1:	11 35 9f 04 9d 2a    	adc    DWORD PTR [rip+0x2a9d049f],esi        # 2a9d3246 <_end+0x2a9cd22e>
    2da7:	bb 2a 01 61 04       	mov    ebx,0x461012a
    2dac:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2db1:	a3 03 a5 11 35 9f 00 	movabs ds:0x9f3511a503,eax
    2db8:	00 00 
	...
    2dc6:	04 c6                	add    al,0xc6
    2dc8:	24 a7                	and    al,0xa7
    2dca:	25 06 9e 04 00       	and    eax,0x49e06
    2dcf:	00 00                	add    BYTE PTR [rax],al
    2dd1:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
    2dd4:	25 e0 26 01 69       	and    eax,0x690126e0
    2dd9:	04 9b                	add    al,0x9b
    2ddb:	27                   	(bad)
    2ddc:	b6 27                	mov    dh,0x27
    2dde:	01 69 04             	add    DWORD PTR [rcx+0x4],ebp
    2de1:	c6                   	(bad)
    2de2:	27                   	(bad)
    2de3:	b9 29 01 69 04       	mov    ecx,0x4690129
    2de8:	d1 29                	shr    DWORD PTR [rcx],1
    2dea:	f3 29 06             	repz sub DWORD PTR [rsi],eax
    2ded:	9e                   	sahf
    2dee:	04 00                	add    al,0x0
    2df0:	00 00                	add    BYTE PTR [rax],al
    2df2:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2df5:	29 fd                	sub    ebp,edi
    2df7:	29 01                	sub    DWORD PTR [rcx],eax
    2df9:	69 04 fd 29 89 2a 06 	imul   eax,DWORD PTR [rdi*8+0x62a8929],0x49e
    2e00:	9e 04 00 00 
    2e04:	00 00                	add    BYTE PTR [rax],al
    2e06:	00 00                	add    BYTE PTR [rax],al
    2e08:	00 02                	add    BYTE PTR [rdx],al
    2e0a:	00 00                	add    BYTE PTR [rax],al
    2e0c:	00 02                	add    BYTE PTR [rdx],al
    2e0e:	00 00                	add    BYTE PTR [rax],al
    2e10:	00 00                	add    BYTE PTR [rax],al
    2e12:	00 04 c6             	add    BYTE PTR [rsi+rax*8],al
    2e15:	24 a7                	and    al,0xa7
    2e17:	25 02 30 9f 04       	and    eax,0x49f3002
    2e1c:	ef                   	out    dx,eax
    2e1d:	28 f7                	sub    bh,dh
    2e1f:	28 01                	sub    BYTE PTR [rcx],al
    2e21:	51                   	push   rcx
    2e22:	04 f7                	add    al,0xf7
    2e24:	28 fa                	sub    dl,bh
    2e26:	28 03                	sub    BYTE PTR [rbx],al
    2e28:	70 01                	jo     2e2b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3ab>
    2e2a:	9f                   	lahf
    2e2b:	04 8f                	add    al,0x8f
    2e2d:	29 97 29 01 50 04    	sub    DWORD PTR [rdi+0x4500129],edx
    2e33:	d1 29                	shr    DWORD PTR [rcx],1
    2e35:	f3 29 02             	repz sub DWORD PTR [rdx],eax
    2e38:	30 9f 04 fd 29 89    	xor    BYTE PTR [rdi-0x76d602fc],bl
    2e3e:	2a 02                	sub    al,BYTE PTR [rdx]
    2e40:	30 9f 00 01 00 00    	xor    BYTE PTR [rdi+0x100],bl
    2e46:	00 01                	add    BYTE PTR [rcx],al
    2e48:	00 04 f3             	add    BYTE PTR [rbx+rsi*8],al
    2e4b:	28 f7                	sub    bh,dh
    2e4d:	28 0f                	sub    BYTE PTR [rdi],cl
    2e4f:	71 00                	jno    2e51 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3d1>
    2e51:	0c ff                	or     al,0xff
    2e53:	ff                   	(bad)
    2e54:	ff                   	(bad)
    2e55:	ff 1a                	call   FWORD PTR [rdx]
    2e57:	48 1e                	rex.W (bad)
    2e59:	75 00                	jne    2e5b <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3db>
    2e5b:	22 23                	and    ah,BYTE PTR [rbx]
    2e5d:	10 04 f7             	adc    BYTE PTR [rdi+rsi*8],al
    2e60:	28 fa                	sub    dl,bh
    2e62:	28 0f                	sub    BYTE PTR [rdi],cl
    2e64:	70 01                	jo     2e67 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3e7>
    2e66:	0c ff                	or     al,0xff
    2e68:	ff                   	(bad)
    2e69:	ff                   	(bad)
    2e6a:	ff 1a                	call   FWORD PTR [rdx]
    2e6c:	48 1e                	rex.W (bad)
    2e6e:	75 00                	jne    2e70 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x3f0>
    2e70:	22 23                	and    ah,BYTE PTR [rbx]
    2e72:	10 04 93             	adc    BYTE PTR [rbx+rdx*4],al
    2e75:	29 97 29 0f 70 00    	sub    DWORD PTR [rdi+0x700f29],edx
    2e7b:	0c ff                	or     al,0xff
    2e7d:	ff                   	(bad)
    2e7e:	ff                   	(bad)
    2e7f:	ff 1a                	call   FWORD PTR [rdx]
    2e81:	48 1e                	rex.W (bad)
    2e83:	75 00                	jne    2e85 <_Z14testSearchTimeP8_IO_FILEPFj8string_tE8TestDataj+0x405>
    2e85:	22 23                	and    ah,BYTE PTR [rbx]
    2e87:	10 00                	adc    BYTE PTR [rax],al
    2e89:	00 00                	add    BYTE PTR [rax],al
    2e8b:	00 00                	add    BYTE PTR [rax],al
    2e8d:	00 00                	add    BYTE PTR [rax],al
    2e8f:	04 b9                	add    al,0xb9
    2e91:	29 d1                	sub    ecx,edx
    2e93:	29 01                	sub    DWORD PTR [rcx],eax
    2e95:	69 04 e6 29 f3 29 01 	imul   eax,DWORD PTR [rsi+riz*8],0x129f329
    2e9c:	69 04 89 2a 9c 2a 01 	imul   eax,DWORD PTR [rcx+rcx*4],0x12a9c2a
    2ea3:	69 00 02 00 00 00    	imul   eax,DWORD PTR [rax],0x2
    2ea9:	04 9d                	add    al,0x9d
    2eab:	2a bb 2a 01 61 04    	sub    bh,BYTE PTR [rbx+0x461012a]
    2eb1:	bb 2a bc 2a 06       	mov    ebx,0x62abc2a
    2eb6:	a3                   	.byte 0xa3
    2eb7:	03 a5 11 35 9f 00    	add    esp,DWORD PTR [rbp+0x9f3511]

Disassembly of section .debug_rnglists:

0000000000000000 <.debug_rnglists>:
   0:	23 00                	and    eax,DWORD PTR [rax]
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 00       	add    eax,0x800
   9:	00 00                	add    BYTE PTR [rax],al
   b:	00 05 e5 11 00 00    	add    BYTE PTR [rip+0x11e5],al        # 11f6 <main+0x16>
  11:	00 00                	add    BYTE PTR [rax],al
  13:	00 00                	add    BYTE PTR [rax],al
  15:	04 00                	add    al,0x0
  17:	09 04 0d 14 00 07 e0 	or     DWORD PTR [rcx*1-0x1ff8ffec],eax
  1e:	11 00                	adc    DWORD PTR [rax],eax
  20:	00 00                	add    BYTE PTR [rax],al
  22:	00 00                	add    BYTE PTR [rax],al
  24:	00 2e                	add    BYTE PTR [rsi],ch
  26:	00 01                	add    BYTE PTR [rcx],al
  28:	01 00                	add    DWORD PTR [rax],eax
  2a:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 830 <__abi_tag+0x4b4>
  30:	00 00                	add    BYTE PTR [rax],al
  32:	00 04 78             	add    BYTE PTR [rax+rdi*2],al
  35:	7b 04                	jnp    3b <__abi_tag-0x341>
  37:	7f 84                	jg     ffffffffffffffbd <_end+0xffffffffffff9fa5>
  39:	01 04 87             	add    DWORD PTR [rdi+rax*4],eax
  3c:	01 8e 01 04 91 01    	add    DWORD PTR [rsi+0x1910401],ecx
  42:	98                   	cwde
  43:	01 04 9b             	add    DWORD PTR [rbx+rbx*4],eax
  46:	01 a8 01 00 04 b6    	add    DWORD PTR [rax-0x49fbffff],ebp
  4c:	01 b6 01 04 bb 01    	add    DWORD PTR [rsi+0x1bb0401],esi
  52:	c5 01 04             	(bad)
  55:	c8 01 cd 01          	enter  0xcd01,0x1
  59:	04 d0                	add    al,0xd0
  5b:	01 d5                	add    ebp,edx
  5d:	01 00                	add    DWORD PTR [rax],eax
  5f:	04 d2                	add    al,0xd2
  61:	05 e7 05 04 e7       	add    eax,0xe70405e7
  66:	05 be 08 00 04       	add    eax,0x40008be
  6b:	dc 05 e7 05 04 f0    	fadd   QWORD PTR [rip+0xfffffffff00405e7]        # fffffffff0040658 <_end+0xfffffffff003a640>
  71:	05 f3 05 04 f8       	add    eax,0xf80405f3
  76:	05 f8 05 04 fb       	add    eax,0xfb0405f8
  7b:	05 d8 06 04 e4       	add    eax,0xe40406d8
  80:	06                   	(bad)
  81:	e4 06                	in     al,0x6
  83:	00 04 80             	add    BYTE PTR [rax+rax*4],al
  86:	06                   	(bad)
  87:	8e 06                	mov    es,WORD PTR [rsi]
  89:	04 91                	add    al,0x91
  8b:	06                   	(bad)
  8c:	d8 06                	fadd   DWORD PTR [rsi]
  8e:	00 04 d8             	add    BYTE PTR [rax+rbx*8],al
  91:	06                   	(bad)
  92:	dd 06                	fld    QWORD PTR [rsi]
  94:	04 f9                	add    al,0xf9
  96:	06                   	(bad)
  97:	8b 08                	mov    ecx,DWORD PTR [rax]
  99:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  9c:	07                   	(bad)
  9d:	b6 07                	mov    dh,0x7
  9f:	04 c5                	add    al,0xc5
  a1:	07                   	(bad)
  a2:	e3 07                	jrcxz  ab <__abi_tag-0x2d1>
  a4:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
  a7:	07                   	(bad)
  a8:	b6 07                	mov    dh,0x7
  aa:	04 c5                	add    al,0xc5
  ac:	07                   	(bad)
  ad:	ce                   	(bad)
  ae:	07                   	(bad)
  af:	04 ce                	add    al,0xce
  b1:	07                   	(bad)
  b2:	e3 07                	jrcxz  bb <__abi_tag-0x2c1>
  b4:	00 04 ec             	add    BYTE PTR [rsp+rbp*8],al
  b7:	06                   	(bad)
  b8:	f3 06                	repz (bad)
  ba:	04 8b                	add    al,0x8b
  bc:	08 be 08 00 04 8b    	or     BYTE PTR [rsi-0x74fbfff8],bh
  c2:	08 98 08 04 9c 08    	or     BYTE PTR [rax+0x89c0408],bl
  c8:	b9 08 00 04 f0       	mov    ecx,0xf0040008
  cd:	0a f7                	or     dh,bh
  cf:	0a 04 fd 0a 83 0b 00 	or     al,BYTE PTR [rdi*8+0xb830a]
  d6:	04 f7                	add    al,0xf7
  d8:	0a fa                	or     bh,dl
  da:	0a 04 83             	or     al,BYTE PTR [rbx+rax*4]
  dd:	0b 8a 0b 00 04 fa    	or     ecx,DWORD PTR [rdx-0x5fbfff5]
  e3:	0a fd                	or     bh,ch
  e5:	0a 04 8a             	or     al,BYTE PTR [rdx+rcx*4]
  e8:	0b 91 0b 00 04 91    	or     edx,DWORD PTR [rcx-0x6efbfff5]
  ee:	0b 91 0b 04 94 0b    	or     edx,DWORD PTR [rcx+0xb94040b]
  f4:	9b                   	fwait
  f5:	0b 00                	or     eax,DWORD PTR [rax]
  f7:	04 e4                	add    al,0xe4
  f9:	0c e4                	or     al,0xe4
  fb:	0c 04                	or     al,0x4
  fd:	e6 0c                	out    0xc,al
  ff:	ed                   	in     eax,dx
 100:	0c 04                	or     al,0x4
 102:	f3 0c f6             	repz or al,0xf6
 105:	0c 04                	or     al,0x4
 107:	fb                   	sti
 108:	0c 80                	or     al,0x80
 10a:	0d 00 04 9f 0d       	or     eax,0xd9f0400
 10f:	9f                   	lahf
 110:	0d 04 a3 0d b4       	or     eax,0xb40da304
 115:	0d 04 b9 0d be       	or     eax,0xbe0db904
 11a:	0d 00 04 fb 0d       	or     eax,0xdfb0400
 11f:	fb                   	sti
 120:	0d 04 ff 0d 82       	or     eax,0x820dff04
 125:	0e                   	(bad)
 126:	04 88                	add    al,0x88
 128:	0e                   	(bad)
 129:	90                   	nop
 12a:	0e                   	(bad)
 12b:	00 c3                	add    bl,al
 12d:	00 00                	add    BYTE PTR [rax],al
 12f:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # 935 <__abi_tag+0x5b9>
 135:	00 00                	add    BYTE PTR [rax],al
 137:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
 13a:	14 04                	adc    al,0x4
 13c:	1e                   	(bad)
 13d:	91                   	xchg   ecx,eax
 13e:	02 00                	add    al,BYTE PTR [rax]
 140:	04 1e                	add    al,0x1e
 142:	48 04 4b             	rex.W add al,0x4b
 145:	c8 01 04 cc          	enter  0x401,0xcc
 149:	01 85 02 00 04 1e    	add    DWORD PTR [rbp+0x1e040002],eax
 14f:	48 04 7c             	rex.W add al,0x7c
 152:	7e 04                	jle    158 <__abi_tag-0x224>
 154:	98                   	cwde
 155:	01 c3                	add    ebx,eax
 157:	01 00                	add    DWORD PTR [rax],eax
 159:	04 4b                	add    al,0x4b
 15b:	7c 04                	jl     161 <__abi_tag-0x21b>
 15d:	7e 8e                	jle    ed <__abi_tag-0x28f>
 15f:	01 00                	add    DWORD PTR [rax],eax
 161:	04 c3                	add    al,0xc3
 163:	01 c8                	add    eax,ecx
 165:	01 04 cc             	add    DWORD PTR [rsp+rcx*8],eax
 168:	01 85 02 00 04 a8    	add    DWORD PTR [rbp-0x57fbfffe],eax
 16e:	02 c4                	add    al,ah
 170:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 173:	02 e8                	add    ch,al
 175:	02 00                	add    al,BYTE PTR [rax]
 177:	04 b0                	add    al,0xb0
 179:	02 c4                	add    al,ah
 17b:	02 04 d0             	add    al,BYTE PTR [rax+rdx*8]
 17e:	02 d2                	add    dl,dl
 180:	02 04 d6             	add    al,BYTE PTR [rsi+rdx*8]
 183:	02 dc                	add    bl,ah
 185:	02 00                	add    al,BYTE PTR [rax]
 187:	04 f4                	add    al,0xf4
 189:	02 fb                	add    bh,bl
 18b:	02 04 ff             	add    al,BYTE PTR [rdi+rdi*8]
 18e:	02 85 03 00 04 fb    	add    al,BYTE PTR [rbp-0x4fbfffd]
 194:	02 fd                	add    bh,ch
 196:	02 04 85 03 8c 03 00 	add    al,BYTE PTR [rax*4+0x38c03]
 19d:	04 fd                	add    al,0xfd
 19f:	02 ff                	add    bh,bh
 1a1:	02 04 8c             	add    al,BYTE PTR [rsp+rcx*4]
 1a4:	03 93 03 00 04 93    	add    edx,DWORD PTR [rbx-0x6cfbfffd]
 1aa:	03 93 03 04 95 03    	add    edx,DWORD PTR [rbx+0x3950403]
 1b0:	9c                   	pushf
 1b1:	03 00                	add    eax,DWORD PTR [rax]
 1b3:	04 c9                	add    al,0xc9
 1b5:	06                   	(bad)
 1b6:	cb                   	retf
 1b7:	06                   	(bad)
 1b8:	04 d2                	add    al,0xd2
 1ba:	06                   	(bad)
 1bb:	d9 06                	fld    DWORD PTR [rsi]
 1bd:	04 e0                	add    al,0xe0
 1bf:	06                   	(bad)
 1c0:	f2 06                	repnz (bad)
 1c2:	00 04 cb             	add    BYTE PTR [rbx+rcx*8],al
 1c5:	06                   	(bad)
 1c6:	d2 06                	rol    BYTE PTR [rsi],cl
 1c8:	04 f2                	add    al,0xf2
 1ca:	06                   	(bad)
 1cb:	8a 07                	mov    al,BYTE PTR [rdi]
 1cd:	04 90                	add    al,0x90
 1cf:	07                   	(bad)
 1d0:	93                   	xchg   ebx,eax
 1d1:	07                   	(bad)
 1d2:	04 a0                	add    al,0xa0
 1d4:	07                   	(bad)
 1d5:	a3 07 00 04 d4 07 dd 	movabs ds:0x407dd07d4040007,eax
 1dc:	07 04 
 1de:	e4 07                	in     al,0x7
 1e0:	b0 08                	mov    al,0x8
 1e2:	04 c0                	add    al,0xc0
 1e4:	08 c5                	or     ch,al
 1e6:	08 00                	or     BYTE PTR [rax],al
 1e8:	04 da                	add    al,0xda
 1ea:	08 e1                	or     cl,ah
 1ec:	08 04 e8             	or     BYTE PTR [rax+rbp*8],al
 1ef:	08 99 09 00 c4 00    	or     BYTE PTR [rcx+0xc40009],bl
 1f5:	00 00                	add    BYTE PTR [rax],al
 1f7:	05 00 08 00 00       	add    eax,0x800
 1fc:	00 00                	add    BYTE PTR [rax],al
 1fe:	00 04 47             	add    BYTE PTR [rdi+rax*2],al
 201:	4e 04 63             	rex.WRX add al,0x63
 204:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 205:	04 75                	add    al,0x75
 207:	80 01 04             	add    BYTE PTR [rcx],0x4
 20a:	84 01                	test   BYTE PTR [rcx],al
 20c:	88 01                	mov    BYTE PTR [rcx],al
 20e:	00 04 aa             	add    BYTE PTR [rdx+rbp*4],al
 211:	01 b3 01 04 b3 01    	add    DWORD PTR [rbx+0x1b30401],esi
 217:	e4 01                	in     al,0x1
 219:	00 04 e8             	add    BYTE PTR [rax+rbp*8],al
 21c:	01 eb                	add    ebx,ebp
 21e:	01 04 80             	add    DWORD PTR [rax+rax*4],eax
 221:	03 b8 03 04 bd 03    	add    edi,DWORD PTR [rax+0x3bd0403]
 227:	c1 03 00             	rol    DWORD PTR [rbx],0x0
 22a:	04 94                	add    al,0x94
 22c:	02 97 02 04 a1 02    	add    dl,BYTE PTR [rdi+0x2a10402]
 232:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 233:	02 04 a8             	add    al,BYTE PTR [rax+rbp*4]
 236:	02 b6 02 00 04 a7    	add    dh,BYTE PTR [rsi-0x58fbfffe]
 23c:	04 b0                	add    al,0xb0
 23e:	04 04                	add    al,0x4
 240:	b0 04                	mov    al,0x4
 242:	e2 04                	loop   248 <__abi_tag-0x134>
 244:	04 ed                	add    al,0xed
 246:	04 ef                	add    al,0xef
 248:	04 00                	add    al,0x0
 24a:	04 cd                	add    al,0xcd
 24c:	04 d0                	add    al,0xd0
 24e:	04 04                	add    al,0x4
 250:	d4                   	(bad)
 251:	04 de                	add    al,0xde
 253:	04 00                	add    al,0x0
 255:	04 a5                	add    al,0xa5
 257:	06                   	(bad)
 258:	a8 06                	test   al,0x6
 25a:	04 ac                	add    al,0xac
 25c:	06                   	(bad)
 25d:	b6 06                	mov    dh,0x6
 25f:	00 04 c1             	add    BYTE PTR [rcx+rax*8],al
 262:	07                   	(bad)
 263:	c7 07 04 c7 07 da    	mov    DWORD PTR [rdi],0xda07c704
 269:	07                   	(bad)
 26a:	00 04 80             	add    BYTE PTR [rax+rax*4],al
 26d:	09 80 09 04 83 09    	or     DWORD PTR [rax+0x9830409],eax
 273:	8b 09                	mov    ecx,DWORD PTR [rcx]
 275:	04 96                	add    al,0x96
 277:	09 9f 09 00 04 d8    	or     DWORD PTR [rdi-0x27fbfff7],ebx
 27d:	09 d8                	or     eax,ebx
 27f:	09 04 db             	or     DWORD PTR [rbx+rbx*8],eax
 282:	09 e3                	or     ebx,esp
 284:	09 04 ee             	or     DWORD PTR [rsi+rbp*8],eax
 287:	09 f8                	or     eax,edi
 289:	09 00                	or     DWORD PTR [rax],eax
 28b:	04 b0                	add    al,0xb0
 28d:	0a b0 0a 04 b3 0a    	or     dh,BYTE PTR [rax+0xab3040a]
 293:	bb 0a 04 c6 0a       	mov    ebx,0xac6040a
 298:	d0 0a                	ror    BYTE PTR [rdx],1
 29a:	00 04 80             	add    BYTE PTR [rax+rax*4],al
 29d:	0b 80 0b 04 83 0b    	or     eax,DWORD PTR [rax+0xb83040b]
 2a3:	8b 0b                	mov    ecx,DWORD PTR [rbx]
 2a5:	04 96                	add    al,0x96
 2a7:	0b a1 0b 00 04 a6    	or     esp,DWORD PTR [rcx-0x59fbfff5]
 2ad:	0b a6 0b 04 a7 0b    	or     esp,DWORD PTR [rsi+0xba7040b]
 2b3:	ac                   	lods   al,BYTE PTR ds:[rsi]
 2b4:	0b 04 af             	or     eax,DWORD PTR [rdi+rbp*4]
 2b7:	0b b4 0b 00 1b 00 00 	or     esi,DWORD PTR [rbx+rcx*1+0x1b00]
 2be:	00 05 00 08 00 00    	add    BYTE PTR [rip+0x800],al        # ac4 <__abi_tag+0x748>
 2c4:	00 00                	add    BYTE PTR [rax],al
 2c6:	00 04 6f             	add    BYTE PTR [rdi+rbp*2],al
 2c9:	76 04                	jbe    2cf <__abi_tag-0xad>
 2cb:	7a 82                	jp     24f <__abi_tag-0x12d>
 2cd:	01 00                	add    DWORD PTR [rax],eax
 2cf:	04 b0                	add    al,0xb0
 2d1:	02 b5 02 04 b8 02    	add    dh,BYTE PTR [rbp+0x2b80402]
 2d7:	bd 02 00 e5 01       	mov    ebp,0x1e50002
 2dc:	00 00                	add    BYTE PTR [rax],al
 2de:	05 00 08 00 00       	add    eax,0x800
 2e3:	00 00                	add    BYTE PTR [rax],al
 2e5:	00 04 99             	add    BYTE PTR [rcx+rbx*4],al
 2e8:	01 a0 01 04 a4 01    	add    DWORD PTR [rax+0x1a40401],esp
 2ee:	ae                   	scas   al,BYTE PTR es:[rdi]
 2ef:	01 04 c4             	add    DWORD PTR [rsp+rax*8],eax
 2f2:	01 8c 02 00 04 c4 01 	add    DWORD PTR [rdx+rax*1+0x1c40400],ecx
 2f9:	da 01                	fiadd  DWORD PTR [rcx]
 2fb:	04 da                	add    al,0xda
 2fd:	01 da                	add    edx,ebx
 2ff:	01 04 de             	add    DWORD PTR [rsi+rbx*8],eax
 302:	01 ea                	add    edx,ebp
 304:	01 00                	add    DWORD PTR [rax],eax
 306:	04 95                	add    al,0x95
 308:	02 a6 02 04 af 02    	add    ah,BYTE PTR [rsi+0x2af0402]
 30e:	b4 02                	mov    ah,0x2
 310:	00 04 b4             	add    BYTE PTR [rsp+rsi*4],al
 313:	02 b1 07 04 80 08    	add    dh,BYTE PTR [rcx+0x8800407]
 319:	af                   	scas   eax,DWORD PTR es:[rdi]
 31a:	08 00                	or     BYTE PTR [rax],al
 31c:	04 b4                	add    al,0xb4
 31e:	02 dd                	add    bl,ch
 320:	02 04 ef             	add    al,BYTE PTR [rdi+rbp*8]
 323:	02 96 07 04 99 08    	add    dl,BYTE PTR [rsi+0x8990407]
 329:	a0 08 00 04 c2 02 dd 	movabs al,ds:0x402dd02c2040008
 330:	02 04 
 332:	ef                   	out    dx,eax
 333:	02 81 05 04 ac 05    	add    al,BYTE PTR [rcx+0x5ac0405]
 339:	b5 06                	mov    ch,0x6
 33b:	04 b7                	add    al,0xb7
 33d:	06                   	(bad)
 33e:	ca 06 04             	retf   0x406
 341:	cd 06                	int    0x6
 343:	d9 06                	fld    DWORD PTR [rsi]
 345:	04 dd                	add    al,0xdd
 347:	06                   	(bad)
 348:	e1 06                	loope  350 <__abi_tag-0x2c>
 34a:	04 e4                	add    al,0xe4
 34c:	06                   	(bad)
 34d:	f9                   	stc
 34e:	06                   	(bad)
 34f:	04 fd                	add    al,0xfd
 351:	06                   	(bad)
 352:	96                   	xchg   esi,eax
 353:	07                   	(bad)
 354:	00 04 a3             	add    BYTE PTR [rbx+riz*4],al
 357:	07                   	(bad)
 358:	b1 07                	mov    cl,0x7
 35a:	04 88                	add    al,0x88
 35c:	08 95 08 04 a0 08    	or     BYTE PTR [rbp+0x8a00408],dl
 362:	af                   	scas   eax,DWORD PTR es:[rdi]
 363:	08 00                	or     BYTE PTR [rax],al
 365:	04 b1                	add    al,0xb1
 367:	07                   	(bad)
 368:	c2 07 04             	ret    0x407
 36b:	c6 07 cb             	mov    BYTE PTR [rdi],0xcb
 36e:	07                   	(bad)
 36f:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 372:	0a af 0b 04 b3 0b    	or     ch,BYTE PTR [rdi+0xbb3040b]
 378:	ca 0b 04             	retf   0x40b
 37b:	ce                   	(bad)
 37c:	0b e0                	or     esp,eax
 37e:	0b 00                	or     eax,DWORD PTR [rax]
 380:	04 e6                	add    al,0xe6
 382:	0a f1                	or     dh,cl
 384:	0a 04 a7             	or     al,BYTE PTR [rdi+riz*4]
 387:	0b a7 0b 04 b9 0b    	or     esp,DWORD PTR [rdi+0xbb9040b]
 38d:	ca 0b 04             	retf   0x40b
 390:	ce                   	(bad)
 391:	0b d5                	or     edx,ebp
 393:	0b 00                	or     eax,DWORD PTR [rax]
 395:	04 a7                	add    al,0xa7
 397:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 39d:	ab                   	stos   DWORD PTR es:[rdi],eax
 39e:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 3a1:	0b b9 0b 00 04 a7    	or     edi,DWORD PTR [rcx-0x58fbfff5]
 3a7:	0b a7 0b 04 a7 0b    	or     esp,DWORD PTR [rdi+0xba7040b]
 3ad:	ab                   	stos   DWORD PTR es:[rdi],eax
 3ae:	0b 04 b3             	or     eax,DWORD PTR [rbx+rsi*4]
 3b1:	0b b9 0b 00 04 f6    	or     edi,DWORD PTR [rcx-0x9fbfff5]
 3b7:	0b fd                	or     edi,ebp
 3b9:	0b 04 82             	or     eax,DWORD PTR [rdx+rax*4]
 3bc:	0c a2                	or     al,0xa2
 3be:	0c 04                	or     al,0x4
 3c0:	9b                   	fwait
 3c1:	10 b8 10 00 04 a2    	adc    BYTE PTR [rax-0x5dfbfff0],bh
 3c7:	0c aa                	or     al,0xaa
 3c9:	0c 04                	or     al,0x4
 3cb:	b6 0c                	mov    dh,0xc
 3cd:	f5                   	cmc
 3ce:	0c 04                	or     al,0x4
 3d0:	b8 10 b8 10 00       	mov    eax,0x10b810
 3d5:	04 bc                	add    al,0xbc
 3d7:	0c d4                	or     al,0xd4
 3d9:	0c 04                	or     al,0x4
 3db:	d4                   	(bad)
 3dc:	0c d4                	or     al,0xd4
 3de:	0c 04                	or     al,0x4
 3e0:	d8 0c e2             	fmul   DWORD PTR [rdx+riz*8]
 3e3:	0c 00                	or     al,0x0
 3e5:	04 8d                	add    al,0x8d
 3e7:	0d e7 0e 04 ee       	or     eax,0xee040ee7
 3ec:	0e                   	(bad)
 3ed:	f3 0e                	repz (bad)
 3ef:	04 bc                	add    al,0xbc
 3f1:	10 c1                	adc    cl,al
 3f3:	10 04 c5 10 fe 10 04 	adc    BYTE PTR [rax*8+0x410fe10],al
 3fa:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
 3fb:	11 b6 11 00 04 af    	adc    DWORD PTR [rsi-0x50fbffef],esi
 401:	0d c0 0e 04 d8       	or     eax,0xd8040ec0
 406:	10 df                	adc    bh,bl
 408:	10 00                	adc    BYTE PTR [rax],al
 40a:	04 d1                	add    al,0xd1
 40c:	0e                   	(bad)
 40d:	e3 0e                	jrcxz  41d <__abi_tag+0xa1>
 40f:	04 cf                	add    al,0xcf
 411:	10 d4                	adc    ah,dl
 413:	10 04 a7             	adc    BYTE PTR [rdi+riz*4],al
 416:	11 b6 11 00 04 e7    	adc    DWORD PTR [rsi-0x18fbffef],esi
 41c:	0e                   	(bad)
 41d:	ee                   	out    dx,al
 41e:	0e                   	(bad)
 41f:	04 f3                	add    al,0xf3
 421:	0e                   	(bad)
 422:	8b 0f                	mov    ecx,DWORD PTR [rdi]
 424:	00 04 a6             	add    BYTE PTR [rsi+riz*4],al
 427:	0f                   	xsha1  (bad)
 428:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
 429:	0f 04                	(bad)
 42b:	b0 0f                	mov    al,0xf
 42d:	c1 0f 04             	ror    DWORD PTR [rdi],0x4
 430:	cd 0f                	int    0xf
 432:	d2 0f                	ror    BYTE PTR [rdi],cl
 434:	00 04 a7             	add    BYTE PTR [rdi+riz*4],al
 437:	16                   	(bad)
 438:	e0 16                	loopne 450 <__abi_tag+0xd4>
 43a:	04 e7                	add    al,0xe7
 43c:	16                   	(bad)
 43d:	ec                   	in     al,dx
 43e:	16                   	(bad)
 43f:	00 04 e0             	add    BYTE PTR [rax+riz*8],al
 442:	16                   	(bad)
 443:	e7 16                	out    0x16,eax
 445:	04 ec                	add    al,0xec
 447:	16                   	(bad)
 448:	f4                   	hlt
 449:	16                   	(bad)
 44a:	00 04 e6             	add    BYTE PTR [rsi+riz*8],al
 44d:	21 88 22 04 a0 22    	and    DWORD PTR [rax+0x22a00422],ecx
 453:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
 454:	23 04 ea             	and    eax,DWORD PTR [rdx+rbp*8]
 457:	23 ec                	and    ebp,esp
 459:	23 00                	and    eax,DWORD PTR [rax]
 45b:	04 b5                	add    al,0xb5
 45d:	23 c3                	and    eax,ebx
 45f:	23 04 e8             	and    eax,DWORD PTR [rax+rbp*8]
 462:	23 ea                	and    ebp,edx
 464:	23 04 f5 23 fc 23 00 	and    eax,DWORD PTR [rsi*8+0x23fc23]
 46b:	04 c6                	add    al,0xc6
 46d:	24 f1                	and    al,0xf1
 46f:	24 04                	and    al,0x4
 471:	84 25 ac 29 04 fd    	test   BYTE PTR [rip+0xfffffffffd0429ac],ah        # fffffffffd042e23 <_end+0xfffffffffd03ce0b>
 477:	29 ff                	sub    edi,edi
 479:	29 00                	sub    DWORD PTR [rax],eax
 47b:	04 d4                	add    al,0xd4
 47d:	24 f1                	and    al,0xf1
 47f:	24 04                	and    al,0x4
 481:	84 25 9b 27 04 c6    	test   BYTE PTR [rip+0xffffffffc604279b],ah        # ffffffffc6042c22 <_end+0xffffffffc603cc0a>
 487:	27                   	(bad)
 488:	cf                   	iret
 489:	28 04 d1             	sub    BYTE PTR [rcx+rdx*8],al
 48c:	28 e0                	sub    al,ah
 48e:	28 04 e3             	sub    BYTE PTR [rbx+riz*8],al
 491:	28 ef                	sub    bh,ch
 493:	28 04 f3             	sub    BYTE PTR [rbx+rsi*8],al
 496:	28 f7                	sub    bh,dh
 498:	28 04 fa             	sub    BYTE PTR [rdx+rdi*8],al
 49b:	28 8f 29 04 93 29    	sub    BYTE PTR [rdi+0x29930429],cl
 4a1:	ac                   	lods   al,BYTE PTR ds:[rsi]
 4a2:	29 00                	sub    DWORD PTR [rax],eax
 4a4:	04 b9                	add    al,0xb9
 4a6:	29 c0                	sub    eax,eax
 4a8:	29 04 c4             	sub    DWORD PTR [rsp+rax*8],eax
 4ab:	29 c9                	sub    ecx,ecx
 4ad:	29 04 e6             	sub    DWORD PTR [rsi+riz*8],eax
 4b0:	29 e6                	sub    esi,esp
 4b2:	29 04 ed 29 f2 29 04 	sub    DWORD PTR [rbp*8+0x429f229],eax
 4b9:	8d 2a                	lea    ebp,[rdx]
 4bb:	91                   	xchg   ecx,eax
 4bc:	2a 04 98             	sub    al,BYTE PTR [rax+rbx*4]
 4bf:	2a                   	.byte 0x2a
 4c0:	9d                   	popf
 4c1:	2a 00                	sub    al,BYTE PTR [rax]
